{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMxMjM5NTE3", "number": 2222, "title": "Standardize support for Firebase products that integrate with Remote Config.", "bodyText": "", "createdAt": "2020-12-02T19:25:37Z", "url": "https://github.com/firebase/firebase-android-sdk/pull/2222", "merged": true, "mergeCommit": {"oid": "a2c275cddee70159fa15a986845d98baaadbb174"}, "closed": true, "closedAt": "2021-01-20T00:42:29Z", "author": {"login": "vic-flair"}, "timelineItems": {"totalCount": 27, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdiTmmUgH2gAyNTMxMjM5NTE3OmYwMzdjMTRjZWNmNDYzMTE5ZDIwMzcwNGU3ZjM1MzU0Yjg3NTA4N2U=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdx0foKAH2gAyNTMxMjM5NTE3OjY0ZjM4YWZiYmQ1NzY4NGFmMjZmODQ5MjU4NzMwNDVhYTY0Y2NkMDQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "f037c14cecf463119d203704e7f35354b875087e", "author": {"user": {"login": "vic-flair", "name": null}}, "url": "https://github.com/firebase/firebase-android-sdk/commit/f037c14cecf463119d203704e7f35354b875087e", "committedDate": "2020-12-02T19:21:01Z", "message": "More logging for personalization."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTY1ODgxMjE1", "url": "https://github.com/firebase/firebase-android-sdk/pull/2222#pullrequestreview-565881215", "createdAt": "2021-01-12T01:56:35Z", "commit": {"oid": "f037c14cecf463119d203704e7f35354b875087e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xMlQwMTo1NjozNVrOIRup_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xMlQwMTo1NjozNVrOIRup_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTQ2MTExOA==", "bodyText": "Do we need to use a Converter for this? Seems like we're just converting constants and it adds the guava dependency.", "url": "https://github.com/firebase/firebase-android-sdk/pull/2222#discussion_r555461118", "createdAt": "2021-01-12T01:56:35Z", "author": {"login": "danasilver"}, "path": "firebase-config/src/main/java/com/google/firebase/remoteconfig/internal/Personalization.java", "diffHunk": "@@ -16,22 +16,41 @@\n \n import android.os.Bundle;\n import androidx.annotation.NonNull;\n+import com.google.common.base.CaseFormat;\n+import com.google.common.base.Converter;\n import com.google.firebase.analytics.connector.AnalyticsConnector;\n+import java.util.Collections;\n+import java.util.HashMap;\n+import java.util.Map;\n import org.json.JSONObject;\n \n public class Personalization {\n   public static final String ANALYTICS_ORIGIN_PERSONALIZATION = \"fp\";\n-  public static final String ANALYTICS_PULL_EVENT = \"_fpc\";\n-  public static final String ARM_KEY = \"_fpid\";\n-  public static final String ARM_VALUE = \"_fpct\";\n-  static final String PERSONALIZATION_ID = \"personalizationId\";\n+\n+  public static final String ANALYTICS_PULL_EVENT = \"personalization_choice\";\n+  public static final String ARM_KEY = \"arm_key\";\n+  public static final String ARM_VALUE = \"arm_value\";\n+  public static final String PERSONALIZATION_ID = \"personalization_id\";\n+  public static final String ARM_INDEX = \"arm_index\";\n+  public static final String GROUP = \"group\";\n+\n+  public static final String ANALYTICS_PULL_EVENT_INTERNAL = \"_fpc\";\n+  public static final String CHOICE_ID = \"choiceId\";\n+  public static final String CHOICE_ID_KEY = \"_fpid\";\n+\n+  private static final Converter<String, String> CONVERTER =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f037c14cecf463119d203704e7f35354b875087e"}, "originalPosition": 30}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ffb9786bfd40006b539cb1478d03e560d9c1a16d", "author": {"user": {"login": "vic-flair", "name": null}}, "url": "https://github.com/firebase/firebase-android-sdk/commit/ffb9786bfd40006b539cb1478d03e560d9c1a16d", "committedDate": "2021-01-12T19:25:51Z", "message": "Merge branch 'master' into vlum.p13n-2"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3fdff9f1ffe4c690395d85c9351372bc151e8a06", "author": {"user": {"login": "vic-flair", "name": null}}, "url": "https://github.com/firebase/firebase-android-sdk/commit/3fdff9f1ffe4c690395d85c9351372bc151e8a06", "committedDate": "2021-01-12T19:27:18Z", "message": "Remove Converter."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTY4NjI1ODcy", "url": "https://github.com/firebase/firebase-android-sdk/pull/2222#pullrequestreview-568625872", "createdAt": "2021-01-14T21:06:13Z", "commit": {"oid": "3fdff9f1ffe4c690395d85c9351372bc151e8a06"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNFQyMTowNjoxM1rOIT3OVg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNFQyMTowNjoxM1rOIT3OVg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NzY5ODY0Ng==", "bodyText": "I think this can be initialized with the variable declaration rather than in the constructor.", "url": "https://github.com/firebase/firebase-android-sdk/pull/2222#discussion_r557698646", "createdAt": "2021-01-14T21:06:13Z", "author": {"login": "danasilver"}, "path": "firebase-config/src/main/java/com/google/firebase/remoteconfig/internal/Personalization.java", "diffHunk": "@@ -17,21 +17,37 @@\n import android.os.Bundle;\n import androidx.annotation.NonNull;\n import com.google.firebase.analytics.connector.AnalyticsConnector;\n+import java.util.Collections;\n+import java.util.HashMap;\n+import java.util.Map;\n import org.json.JSONObject;\n \n public class Personalization {\n   public static final String ANALYTICS_ORIGIN_PERSONALIZATION = \"fp\";\n-  public static final String ANALYTICS_PULL_EVENT = \"_fpc\";\n-  public static final String ARM_KEY = \"_fpid\";\n-  public static final String ARM_VALUE = \"_fpct\";\n-  static final String PERSONALIZATION_ID = \"personalizationId\";\n+\n+  public static final String ANALYTICS_PULL_EVENT = \"personalization_assignment\";\n+  public static final String ARM_KEY = \"arm_key\";\n+  public static final String ARM_VALUE = \"arm_value\";\n+  public static final String PERSONALIZATION_ID = \"personalizationId\";\n+  public static final String PERSONALIZATION_ID_KEY = \"personalization_id\";\n+  public static final String ARM_INDEX = \"armIndex\";\n+  public static final String ARM_INDEX_KEY = \"arm_index\";\n+  public static final String GROUP = \"group\";\n+\n+  public static final String ANALYTICS_PULL_EVENT_INTERNAL = \"_fpc\";\n+  public static final String CHOICE_ID = \"choiceId\";\n+  public static final String CHOICE_ID_KEY = \"_fpid\";\n \n   /** The app's Firebase Analytics client. */\n   private final AnalyticsConnector analyticsConnector;\n \n+  /** A map of Remote Config parameter key to Personalization ID. */\n+  private final Map<String, String> armsCache;\n+\n   /** Creates an instance of {@code Personalization}. */\n   public Personalization(@NonNull AnalyticsConnector analyticsConnector) {\n     this.analyticsConnector = analyticsConnector;\n+    armsCache = Collections.synchronizedMap(new HashMap<String, String>());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3fdff9f1ffe4c690395d85c9351372bc151e8a06"}, "originalPosition": 38}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTY4NjQwMjUx", "url": "https://github.com/firebase/firebase-android-sdk/pull/2222#pullrequestreview-568640251", "createdAt": "2021-01-14T21:28:22Z", "commit": {"oid": "3fdff9f1ffe4c690395d85c9351372bc151e8a06"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNFQyMToyODoyM1rOIT36Uw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNFQyMToyODoyM1rOIT36Uw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NzcwOTkwNw==", "bodyText": "Looks like this is used to prevent logging the same key and personalization id combination twice? Do we expect the personalization id to change for a particular key? Maybe we can rename the variable to reflect the usage. Is it necessary to prevent logging twice? If it's necessary can we add a test for it?", "url": "https://github.com/firebase/firebase-android-sdk/pull/2222#discussion_r557709907", "createdAt": "2021-01-14T21:28:23Z", "author": {"login": "danasilver"}, "path": "firebase-config/src/main/java/com/google/firebase/remoteconfig/internal/Personalization.java", "diffHunk": "@@ -17,21 +17,37 @@\n import android.os.Bundle;\n import androidx.annotation.NonNull;\n import com.google.firebase.analytics.connector.AnalyticsConnector;\n+import java.util.Collections;\n+import java.util.HashMap;\n+import java.util.Map;\n import org.json.JSONObject;\n \n public class Personalization {\n   public static final String ANALYTICS_ORIGIN_PERSONALIZATION = \"fp\";\n-  public static final String ANALYTICS_PULL_EVENT = \"_fpc\";\n-  public static final String ARM_KEY = \"_fpid\";\n-  public static final String ARM_VALUE = \"_fpct\";\n-  static final String PERSONALIZATION_ID = \"personalizationId\";\n+\n+  public static final String ANALYTICS_PULL_EVENT = \"personalization_assignment\";\n+  public static final String ARM_KEY = \"arm_key\";\n+  public static final String ARM_VALUE = \"arm_value\";\n+  public static final String PERSONALIZATION_ID = \"personalizationId\";\n+  public static final String PERSONALIZATION_ID_KEY = \"personalization_id\";\n+  public static final String ARM_INDEX = \"armIndex\";\n+  public static final String ARM_INDEX_KEY = \"arm_index\";\n+  public static final String GROUP = \"group\";\n+\n+  public static final String ANALYTICS_PULL_EVENT_INTERNAL = \"_fpc\";\n+  public static final String CHOICE_ID = \"choiceId\";\n+  public static final String CHOICE_ID_KEY = \"_fpid\";\n \n   /** The app's Firebase Analytics client. */\n   private final AnalyticsConnector analyticsConnector;\n \n+  /** A map of Remote Config parameter key to Personalization ID. */\n+  private final Map<String, String> armsCache;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3fdff9f1ffe4c690395d85c9351372bc151e8a06"}, "originalPosition": 33}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTY4NjQxMDQy", "url": "https://github.com/firebase/firebase-android-sdk/pull/2222#pullrequestreview-568641042", "createdAt": "2021-01-14T21:29:33Z", "commit": {"oid": "3fdff9f1ffe4c690395d85c9351372bc151e8a06"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNFQyMToyOTozM1rOIT38xg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNFQyMToyOTozM1rOIT38xg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NzcxMDUzNA==", "bodyText": "Would consider adding a comment above the block saying what the \"key\" and non-key named variables are used for. Maybe could say ...LOG_KEY, too?", "url": "https://github.com/firebase/firebase-android-sdk/pull/2222#discussion_r557710534", "createdAt": "2021-01-14T21:29:33Z", "author": {"login": "danasilver"}, "path": "firebase-config/src/main/java/com/google/firebase/remoteconfig/internal/Personalization.java", "diffHunk": "@@ -17,21 +17,37 @@\n import android.os.Bundle;\n import androidx.annotation.NonNull;\n import com.google.firebase.analytics.connector.AnalyticsConnector;\n+import java.util.Collections;\n+import java.util.HashMap;\n+import java.util.Map;\n import org.json.JSONObject;\n \n public class Personalization {\n   public static final String ANALYTICS_ORIGIN_PERSONALIZATION = \"fp\";\n-  public static final String ANALYTICS_PULL_EVENT = \"_fpc\";\n-  public static final String ARM_KEY = \"_fpid\";\n-  public static final String ARM_VALUE = \"_fpct\";\n-  static final String PERSONALIZATION_ID = \"personalizationId\";\n+\n+  public static final String ANALYTICS_PULL_EVENT = \"personalization_assignment\";\n+  public static final String ARM_KEY = \"arm_key\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3fdff9f1ffe4c690395d85c9351372bc151e8a06"}, "originalPosition": 17}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTY4NjU1MTk4", "url": "https://github.com/firebase/firebase-android-sdk/pull/2222#pullrequestreview-568655198", "createdAt": "2021-01-14T21:51:31Z", "commit": {"oid": "3fdff9f1ffe4c690395d85c9351372bc151e8a06"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNFQyMTo1MTozMVrOIT4oOg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNFQyMTo1MTozMVrOIT4oOg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NzcyMTY1OA==", "bodyText": "Could us the or operator from AdditionalMatchers to get either of ANALYTICS_PULL_EVENT or ANALYTICS_PULL_EVENT_INTERNAL.", "url": "https://github.com/firebase/firebase-android-sdk/pull/2222#discussion_r557721658", "createdAt": "2021-01-14T21:51:31Z", "author": {"login": "danasilver"}, "path": "firebase-config/src/test/java/com/google/firebase/remoteconfig/internal/PersonalizationTest.java", "diffHunk": "@@ -74,8 +82,7 @@ public void setUp() {\n \n     doAnswer(invocation -> FAKE_LOGS.add(invocation.getArgument(2)))\n         .when(mockAnalyticsConnector)\n-        .logEvent(\n-            eq(ANALYTICS_ORIGIN_PERSONALIZATION), eq(ANALYTICS_PULL_EVENT), any(Bundle.class));\n+        .logEvent(eq(ANALYTICS_ORIGIN_PERSONALIZATION), anyString(), any(Bundle.class));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3fdff9f1ffe4c690395d85c9351372bc151e8a06"}, "originalPosition": 49}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTY4NjU1Njgz", "url": "https://github.com/firebase/firebase-android-sdk/pull/2222#pullrequestreview-568655683", "createdAt": "2021-01-14T21:52:19Z", "commit": {"oid": "3fdff9f1ffe4c690395d85c9351372bc151e8a06"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNFQyMTo1MjoxOVrOIT4prA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNFQyMTo1MjoxOVrOIT4prA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NzcyMjAyOA==", "bodyText": "Do we want to verify the other (internal) log event here, too? Could also update the test name since it's logged twice (internal and external) - maybe logArmActive_singlePersonalizationKey_loggedInternallyAndExternally", "url": "https://github.com/firebase/firebase-android-sdk/pull/2222#discussion_r557722028", "createdAt": "2021-01-14T21:52:19Z", "author": {"login": "danasilver"}, "path": "firebase-config/src/test/java/com/google/firebase/remoteconfig/internal/PersonalizationTest.java", "diffHunk": "@@ -99,12 +105,16 @@ public void logArmActive_singlePersonalizationKey_loggedOnce() {\n     verify(mockAnalyticsConnector, times(1))\n         .logEvent(\n             eq(ANALYTICS_ORIGIN_PERSONALIZATION), eq(ANALYTICS_PULL_EVENT), any(Bundle.class));\n-    assertThat(FAKE_LOGS).hasSize(1);\n+    verify(mockAnalyticsConnector, times(1))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3fdff9f1ffe4c690395d85c9351372bc151e8a06"}, "originalPosition": 68}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTY4NjY0MTIy", "url": "https://github.com/firebase/firebase-android-sdk/pull/2222#pullrequestreview-568664122", "createdAt": "2021-01-14T22:05:11Z", "commit": {"oid": "3fdff9f1ffe4c690395d85c9351372bc151e8a06"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNFQyMjowNToxMVrOIT5DXw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNFQyMjowNToxMVrOIT5DXw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NzcyODYwNw==", "bodyText": "Doesn't seem like there's a way to check if the log statements succeed or fail. Is it ok if one succeeds without the other?", "url": "https://github.com/firebase/firebase-android-sdk/pull/2222#discussion_r557728607", "createdAt": "2021-01-14T22:05:11Z", "author": {"login": "danasilver"}, "path": "firebase-config/src/main/java/com/google/firebase/remoteconfig/internal/Personalization.java", "diffHunk": "@@ -58,9 +74,29 @@ public void logArmActive(@NonNull String key, @NonNull ConfigContainer configCon\n       return;\n     }\n \n+    String personalizationId = metadata.optString(PERSONALIZATION_ID);\n+    if (personalizationId.isEmpty()) {\n+      return;\n+    }\n+\n+    synchronized (armsCache) {\n+      if (armsCache.get(key) == personalizationId) {\n+        return;\n+      }\n+      armsCache.put(key, personalizationId);\n+    }\n+\n     Bundle params = new Bundle();\n-    params.putString(ARM_KEY, metadata.optString(PERSONALIZATION_ID));\n+    params.putString(ARM_KEY, key);\n     params.putString(ARM_VALUE, values.optString(key));\n+    params.putString(PERSONALIZATION_ID_KEY, personalizationId);\n+    params.putInt(ARM_INDEX_KEY, metadata.optInt(ARM_INDEX, -1));\n+    params.putString(GROUP, metadata.optString(GROUP));\n     analyticsConnector.logEvent(ANALYTICS_ORIGIN_PERSONALIZATION, ANALYTICS_PULL_EVENT, params);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3fdff9f1ffe4c690395d85c9351372bc151e8a06"}, "originalPosition": 65}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTY4Njc4NDcz", "url": "https://github.com/firebase/firebase-android-sdk/pull/2222#pullrequestreview-568678473", "createdAt": "2021-01-14T22:29:57Z", "commit": {"oid": "3fdff9f1ffe4c690395d85c9351372bc151e8a06"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNFQyMjoyOTo1N1rOIT5wyA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNFQyMjoyOTo1N1rOIT5wyA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1Nzc0MDIzMg==", "bodyText": "Might call these logParams and internalLogParams since \"parameters\" otherwise refers to RC parameters.", "url": "https://github.com/firebase/firebase-android-sdk/pull/2222#discussion_r557740232", "createdAt": "2021-01-14T22:29:57Z", "author": {"login": "danasilver"}, "path": "firebase-config/src/main/java/com/google/firebase/remoteconfig/internal/Personalization.java", "diffHunk": "@@ -58,9 +74,29 @@ public void logArmActive(@NonNull String key, @NonNull ConfigContainer configCon\n       return;\n     }\n \n+    String personalizationId = metadata.optString(PERSONALIZATION_ID);\n+    if (personalizationId.isEmpty()) {\n+      return;\n+    }\n+\n+    synchronized (armsCache) {\n+      if (armsCache.get(key) == personalizationId) {\n+        return;\n+      }\n+      armsCache.put(key, personalizationId);\n+    }\n+\n     Bundle params = new Bundle();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3fdff9f1ffe4c690395d85c9351372bc151e8a06"}, "originalPosition": 58}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTY4Njg0MjMx", "url": "https://github.com/firebase/firebase-android-sdk/pull/2222#pullrequestreview-568684231", "createdAt": "2021-01-14T22:38:34Z", "commit": {"oid": "3fdff9f1ffe4c690395d85c9351372bc151e8a06"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNFQyMjozODozNFrOIT6COw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNFQyMjozODozNFrOIT6COw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1Nzc0NDY5OQ==", "bodyText": "Same question here - should we test the internal event?", "url": "https://github.com/firebase/firebase-android-sdk/pull/2222#discussion_r557744699", "createdAt": "2021-01-14T22:38:34Z", "author": {"login": "danasilver"}, "path": "firebase-config/src/test/java/com/google/firebase/remoteconfig/internal/PersonalizationTest.java", "diffHunk": "@@ -115,16 +125,20 @@ public void logArmActive_multiplePersonalizationKeys_loggedMultiple() {\n     verify(mockAnalyticsConnector, times(2))\n         .logEvent(\n             eq(ANALYTICS_ORIGIN_PERSONALIZATION), eq(ANALYTICS_PULL_EVENT), any(Bundle.class));\n-    assertThat(FAKE_LOGS).hasSize(2);\n+    verify(mockAnalyticsConnector, times(2))\n+        .logEvent(\n+            eq(ANALYTICS_ORIGIN_PERSONALIZATION),\n+            eq(ANALYTICS_PULL_EVENT_INTERNAL),\n+            any(Bundle.class));\n+    assertThat(FAKE_LOGS).hasSize(4);\n \n     Bundle params1 = new Bundle();\n-    params1.putString(ARM_KEY, \"id1\");\n-    params1.putString(ARM_VALUE, \"value1\");\n-    assertThat(FAKE_LOGS.get(0).toString()).isEqualTo(params1.toString());\n-\n+    params1.putString(CHOICE_ID_KEY, \"id1\");\n     Bundle params2 = new Bundle();\n-    params2.putString(ARM_KEY, \"id2\");\n-    params2.putString(ARM_VALUE, \"value2\");\n-    assertThat(FAKE_LOGS.get(1).toString()).isEqualTo(params2.toString());\n+    params2.putString(CHOICE_ID_KEY, \"id2\");\n+    assertThat(FAKE_LOGS)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3fdff9f1ffe4c690395d85c9351372bc151e8a06"}, "originalPosition": 107}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTY4Njg1MTc2", "url": "https://github.com/firebase/firebase-android-sdk/pull/2222#pullrequestreview-568685176", "createdAt": "2021-01-14T22:40:29Z", "commit": {"oid": "3fdff9f1ffe4c690395d85c9351372bc151e8a06"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "10daf06a6c18b5431bce6d29830bcbba2164c26d", "author": {"user": {"login": "vic-flair", "name": null}}, "url": "https://github.com/firebase/firebase-android-sdk/commit/10daf06a6c18b5431bce6d29830bcbba2164c26d", "committedDate": "2021-01-15T00:49:42Z", "message": "Check cache for choice ID and add more asserts in tests."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTY4Nzc5NTA3", "url": "https://github.com/firebase/firebase-android-sdk/pull/2222#pullrequestreview-568779507", "createdAt": "2021-01-15T02:44:10Z", "commit": {"oid": "10daf06a6c18b5431bce6d29830bcbba2164c26d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNVQwMjo0NDoxMFrOIT_HKg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNVQwMjo0NDoxMFrOIT_HKg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NzgyNzg4Mg==", "bodyText": "ARM_LOG_KEY?", "url": "https://github.com/firebase/firebase-android-sdk/pull/2222#discussion_r557827882", "createdAt": "2021-01-15T02:44:10Z", "author": {"login": "danasilver"}, "path": "firebase-config/src/main/java/com/google/firebase/remoteconfig/internal/Personalization.java", "diffHunk": "@@ -17,18 +17,36 @@\n import android.os.Bundle;\n import androidx.annotation.NonNull;\n import com.google.firebase.analytics.connector.AnalyticsConnector;\n+import java.util.Collections;\n+import java.util.HashMap;\n+import java.util.Map;\n import org.json.JSONObject;\n \n public class Personalization {\n   public static final String ANALYTICS_ORIGIN_PERSONALIZATION = \"fp\";\n-  public static final String ANALYTICS_PULL_EVENT = \"_fpc\";\n-  public static final String ARM_KEY = \"_fpid\";\n-  public static final String ARM_VALUE = \"_fpct\";\n-  static final String PERSONALIZATION_ID = \"personalizationId\";\n+\n+  // Constants with LOG_KEY suffix are how the corresponding ones without it are identified on\n+  // Google Analytics.\n+  public static final String ANALYTICS_PULL_EVENT = \"personalization_assignment\";\n+  public static final String ARM_KEY = \"arm_key\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "10daf06a6c18b5431bce6d29830bcbba2164c26d"}, "originalPosition": 19}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTY4NzgwMzI3", "url": "https://github.com/firebase/firebase-android-sdk/pull/2222#pullrequestreview-568780327", "createdAt": "2021-01-15T02:46:55Z", "commit": {"oid": "10daf06a6c18b5431bce6d29830bcbba2164c26d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNVQwMjo0Njo1NVrOIT_KHw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNVQwMjo0Njo1NVrOIT_KHw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NzgyODYzOQ==", "bodyText": "I'd still like to rename this to something more descriptive. Maybe loggedArms or loggedChoiceIds?", "url": "https://github.com/firebase/firebase-android-sdk/pull/2222#discussion_r557828639", "createdAt": "2021-01-15T02:46:55Z", "author": {"login": "danasilver"}, "path": "firebase-config/src/main/java/com/google/firebase/remoteconfig/internal/Personalization.java", "diffHunk": "@@ -17,18 +17,36 @@\n import android.os.Bundle;\n import androidx.annotation.NonNull;\n import com.google.firebase.analytics.connector.AnalyticsConnector;\n+import java.util.Collections;\n+import java.util.HashMap;\n+import java.util.Map;\n import org.json.JSONObject;\n \n public class Personalization {\n   public static final String ANALYTICS_ORIGIN_PERSONALIZATION = \"fp\";\n-  public static final String ANALYTICS_PULL_EVENT = \"_fpc\";\n-  public static final String ARM_KEY = \"_fpid\";\n-  public static final String ARM_VALUE = \"_fpct\";\n-  static final String PERSONALIZATION_ID = \"personalizationId\";\n+\n+  // Constants with LOG_KEY suffix are how the corresponding ones without it are identified on\n+  // Google Analytics.\n+  public static final String ANALYTICS_PULL_EVENT = \"personalization_assignment\";\n+  public static final String ARM_KEY = \"arm_key\";\n+  public static final String ARM_VALUE = \"arm_value\";\n+  public static final String PERSONALIZATION_ID = \"personalizationId\";\n+  public static final String PERSONALIZATION_ID_LOG_KEY = \"personalization_id\";\n+  public static final String ARM_INDEX = \"armIndex\";\n+  public static final String ARM_INDEX_LOG_KEY = \"arm_index\";\n+  public static final String GROUP = \"group\";\n+\n+  public static final String ANALYTICS_PULL_EVENT_INTERNAL = \"_fpc\";\n+  public static final String CHOICE_ID = \"choiceId\";\n+  public static final String CHOICE_ID_LOG_KEY = \"_fpid\";\n \n   /** The app's Firebase Analytics client. */\n   private final AnalyticsConnector analyticsConnector;\n \n+  /** A map of Remote Config parameter key to choice ID. */\n+  private final Map<String, String> armsCache =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "10daf06a6c18b5431bce6d29830bcbba2164c26d"}, "originalPosition": 35}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTY4NzgxMjk2", "url": "https://github.com/firebase/firebase-android-sdk/pull/2222#pullrequestreview-568781296", "createdAt": "2021-01-15T02:50:05Z", "commit": {"oid": "10daf06a6c18b5431bce6d29830bcbba2164c26d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNVQwMjo1MDowNVrOIT_N7g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNVQwMjo1MDowNVrOIT_N7g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NzgyOTYxNA==", "bodyText": "Would separate these from the logParams with an empty line for readability. Would it make sense to construct the bundles outside the test as static class values?", "url": "https://github.com/firebase/firebase-android-sdk/pull/2222#discussion_r557829614", "createdAt": "2021-01-15T02:50:05Z", "author": {"login": "danasilver"}, "path": "firebase-config/src/test/java/com/google/firebase/remoteconfig/internal/PersonalizationTest.java", "diffHunk": "@@ -88,43 +103,79 @@ public void logArmActive_nonPersonalizationKey_notLogged() {\n \n     verify(mockAnalyticsConnector, times(0))\n         .logEvent(\n-            eq(ANALYTICS_ORIGIN_PERSONALIZATION), eq(ANALYTICS_PULL_EVENT), any(Bundle.class));\n+            eq(ANALYTICS_ORIGIN_PERSONALIZATION),\n+            or(eq(ANALYTICS_PULL_EVENT), eq(ANALYTICS_PULL_EVENT_INTERNAL)),\n+            any(Bundle.class));\n     assertThat(FAKE_LOGS).isEmpty();\n   }\n \n   @Test\n-  public void logArmActive_singlePersonalizationKey_loggedOnce() {\n+  public void logArmActive_singlePersonalizationKey_loggedInternallyAndExternally() {\n     personalization.logArmActive(\"key1\", CONFIG_CONTAINER);\n \n     verify(mockAnalyticsConnector, times(1))\n         .logEvent(\n             eq(ANALYTICS_ORIGIN_PERSONALIZATION), eq(ANALYTICS_PULL_EVENT), any(Bundle.class));\n-    assertThat(FAKE_LOGS).hasSize(1);\n+    verify(mockAnalyticsConnector, times(1))\n+        .logEvent(\n+            eq(ANALYTICS_ORIGIN_PERSONALIZATION),\n+            eq(ANALYTICS_PULL_EVENT_INTERNAL),\n+            any(Bundle.class));\n+    assertThat(FAKE_LOGS).hasSize(2);\n \n-    Bundle params = new Bundle();\n-    params.putString(ARM_KEY, \"id1\");\n-    params.putString(ARM_VALUE, \"value1\");\n-    assertThat(FAKE_LOGS.get(0).toString()).isEqualTo(params.toString());\n+    Bundle logParams = new Bundle();\n+    logParams.putString(ARM_KEY, \"key1\");\n+    logParams.putString(ARM_VALUE, \"value1\");\n+    logParams.putString(PERSONALIZATION_ID_LOG_KEY, \"p13n1\");\n+    logParams.putInt(ARM_INDEX_LOG_KEY, 0);\n+    logParams.putString(GROUP, \"BASELINE\");\n+    Bundle internalLogParams = new Bundle();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "10daf06a6c18b5431bce6d29830bcbba2164c26d"}, "originalPosition": 93}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTY4NzgxMzc1", "url": "https://github.com/firebase/firebase-android-sdk/pull/2222#pullrequestreview-568781375", "createdAt": "2021-01-15T02:50:24Z", "commit": {"oid": "10daf06a6c18b5431bce6d29830bcbba2164c26d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNVQwMjo1MDoyNFrOIT_OVg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNVQwMjo1MDoyNFrOIT_OVg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NzgyOTcxOA==", "bodyText": "Same here - newline would help readability.", "url": "https://github.com/firebase/firebase-android-sdk/pull/2222#discussion_r557829718", "createdAt": "2021-01-15T02:50:24Z", "author": {"login": "danasilver"}, "path": "firebase-config/src/test/java/com/google/firebase/remoteconfig/internal/PersonalizationTest.java", "diffHunk": "@@ -88,43 +103,79 @@ public void logArmActive_nonPersonalizationKey_notLogged() {\n \n     verify(mockAnalyticsConnector, times(0))\n         .logEvent(\n-            eq(ANALYTICS_ORIGIN_PERSONALIZATION), eq(ANALYTICS_PULL_EVENT), any(Bundle.class));\n+            eq(ANALYTICS_ORIGIN_PERSONALIZATION),\n+            or(eq(ANALYTICS_PULL_EVENT), eq(ANALYTICS_PULL_EVENT_INTERNAL)),\n+            any(Bundle.class));\n     assertThat(FAKE_LOGS).isEmpty();\n   }\n \n   @Test\n-  public void logArmActive_singlePersonalizationKey_loggedOnce() {\n+  public void logArmActive_singlePersonalizationKey_loggedInternallyAndExternally() {\n     personalization.logArmActive(\"key1\", CONFIG_CONTAINER);\n \n     verify(mockAnalyticsConnector, times(1))\n         .logEvent(\n             eq(ANALYTICS_ORIGIN_PERSONALIZATION), eq(ANALYTICS_PULL_EVENT), any(Bundle.class));\n-    assertThat(FAKE_LOGS).hasSize(1);\n+    verify(mockAnalyticsConnector, times(1))\n+        .logEvent(\n+            eq(ANALYTICS_ORIGIN_PERSONALIZATION),\n+            eq(ANALYTICS_PULL_EVENT_INTERNAL),\n+            any(Bundle.class));\n+    assertThat(FAKE_LOGS).hasSize(2);\n \n-    Bundle params = new Bundle();\n-    params.putString(ARM_KEY, \"id1\");\n-    params.putString(ARM_VALUE, \"value1\");\n-    assertThat(FAKE_LOGS.get(0).toString()).isEqualTo(params.toString());\n+    Bundle logParams = new Bundle();\n+    logParams.putString(ARM_KEY, \"key1\");\n+    logParams.putString(ARM_VALUE, \"value1\");\n+    logParams.putString(PERSONALIZATION_ID_LOG_KEY, \"p13n1\");\n+    logParams.putInt(ARM_INDEX_LOG_KEY, 0);\n+    logParams.putString(GROUP, \"BASELINE\");\n+    Bundle internalLogParams = new Bundle();\n+    internalLogParams.putString(CHOICE_ID_LOG_KEY, \"id1\");\n+    assertThat(FAKE_LOGS)\n+        .comparingElementsUsing(TO_STRING)\n+        .containsExactly(logParams.toString(), internalLogParams.toString());\n   }\n \n   @Test\n   public void logArmActive_multiplePersonalizationKeys_loggedMultiple() {\n     personalization.logArmActive(\"key1\", CONFIG_CONTAINER);\n     personalization.logArmActive(\"key2\", CONFIG_CONTAINER);\n+    personalization.logArmActive(\"key1\", CONFIG_CONTAINER);\n \n     verify(mockAnalyticsConnector, times(2))\n         .logEvent(\n             eq(ANALYTICS_ORIGIN_PERSONALIZATION), eq(ANALYTICS_PULL_EVENT), any(Bundle.class));\n-    assertThat(FAKE_LOGS).hasSize(2);\n-\n-    Bundle params1 = new Bundle();\n-    params1.putString(ARM_KEY, \"id1\");\n-    params1.putString(ARM_VALUE, \"value1\");\n-    assertThat(FAKE_LOGS.get(0).toString()).isEqualTo(params1.toString());\n-\n-    Bundle params2 = new Bundle();\n-    params2.putString(ARM_KEY, \"id2\");\n-    params2.putString(ARM_VALUE, \"value2\");\n-    assertThat(FAKE_LOGS.get(1).toString()).isEqualTo(params2.toString());\n+    verify(mockAnalyticsConnector, times(2))\n+        .logEvent(\n+            eq(ANALYTICS_ORIGIN_PERSONALIZATION),\n+            eq(ANALYTICS_PULL_EVENT_INTERNAL),\n+            any(Bundle.class));\n+    assertThat(FAKE_LOGS).hasSize(4);\n+\n+    Bundle logParams1 = new Bundle();\n+    logParams1.putString(ARM_KEY, \"key1\");\n+    logParams1.putString(ARM_VALUE, \"value1\");\n+    logParams1.putString(PERSONALIZATION_ID_LOG_KEY, \"p13n1\");\n+    logParams1.putInt(ARM_INDEX_LOG_KEY, 0);\n+    logParams1.putString(GROUP, \"BASELINE\");\n+    Bundle logParams2 = new Bundle();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "10daf06a6c18b5431bce6d29830bcbba2164c26d"}, "originalPosition": 133}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTY4NzgyMjkz", "url": "https://github.com/firebase/firebase-android-sdk/pull/2222#pullrequestreview-568782293", "createdAt": "2021-01-15T02:53:25Z", "commit": {"oid": "10daf06a6c18b5431bce6d29830bcbba2164c26d"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTY5NTcyNzQw", "url": "https://github.com/firebase/firebase-android-sdk/pull/2222#pullrequestreview-569572740", "createdAt": "2021-01-15T19:48:45Z", "commit": {"oid": "10daf06a6c18b5431bce6d29830bcbba2164c26d"}, "state": "COMMENTED", "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNVQxOTo0ODo0NVrOIUrnwA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNVQyMDo0MzoyMlrOIUtKmg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1ODU1NzEyMA==", "bodyText": "Thinking (no action req'd): \"_fpc\" for the internal event name, and \"_fpid\" for the parameter name (in which to log the choice ID), aligns w the per-choice metadata design.", "url": "https://github.com/firebase/firebase-android-sdk/pull/2222#discussion_r558557120", "createdAt": "2021-01-15T19:48:45Z", "author": {"login": "erikeldridge"}, "path": "firebase-config/src/main/java/com/google/firebase/remoteconfig/internal/Personalization.java", "diffHunk": "@@ -17,18 +17,36 @@\n import android.os.Bundle;\n import androidx.annotation.NonNull;\n import com.google.firebase.analytics.connector.AnalyticsConnector;\n+import java.util.Collections;\n+import java.util.HashMap;\n+import java.util.Map;\n import org.json.JSONObject;\n \n public class Personalization {\n   public static final String ANALYTICS_ORIGIN_PERSONALIZATION = \"fp\";\n-  public static final String ANALYTICS_PULL_EVENT = \"_fpc\";\n-  public static final String ARM_KEY = \"_fpid\";\n-  public static final String ARM_VALUE = \"_fpct\";\n-  static final String PERSONALIZATION_ID = \"personalizationId\";\n+\n+  // Constants with LOG_KEY suffix are how the corresponding ones without it are identified on\n+  // Google Analytics.\n+  public static final String ANALYTICS_PULL_EVENT = \"personalization_assignment\";\n+  public static final String ARM_KEY = \"arm_key\";\n+  public static final String ARM_VALUE = \"arm_value\";\n+  public static final String PERSONALIZATION_ID = \"personalizationId\";\n+  public static final String PERSONALIZATION_ID_LOG_KEY = \"personalization_id\";\n+  public static final String ARM_INDEX = \"armIndex\";\n+  public static final String ARM_INDEX_LOG_KEY = \"arm_index\";\n+  public static final String GROUP = \"group\";\n+\n+  public static final String ANALYTICS_PULL_EVENT_INTERNAL = \"_fpc\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "10daf06a6c18b5431bce6d29830bcbba2164c26d"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1ODU2MzMwMw==", "bodyText": "Thinking: this won't break EAP usage because they aren't using the SDK", "url": "https://github.com/firebase/firebase-android-sdk/pull/2222#discussion_r558563303", "createdAt": "2021-01-15T20:01:03Z", "author": {"login": "erikeldridge"}, "path": "firebase-config/src/main/java/com/google/firebase/remoteconfig/internal/Personalization.java", "diffHunk": "@@ -58,9 +76,29 @@ public void logArmActive(@NonNull String key, @NonNull ConfigContainer configCon\n       return;\n     }\n \n-    Bundle params = new Bundle();\n-    params.putString(ARM_KEY, metadata.optString(PERSONALIZATION_ID));\n-    params.putString(ARM_VALUE, values.optString(key));\n-    analyticsConnector.logEvent(ANALYTICS_ORIGIN_PERSONALIZATION, ANALYTICS_PULL_EVENT, params);\n+    String choiceId = metadata.optString(CHOICE_ID);\n+    if (choiceId.isEmpty()) {\n+      return;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "10daf06a6c18b5431bce6d29830bcbba2164c26d"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1ODU2NzAwNg==", "bodyText": "Mind adding a comment explaining why we need this?\nThinking: this ensures we only log one event per param-choice pair. This map is bounded by the number of params. Choices are made on each fetch, so this isn't a long-lived cache.", "url": "https://github.com/firebase/firebase-android-sdk/pull/2222#discussion_r558567006", "createdAt": "2021-01-15T20:08:42Z", "author": {"login": "erikeldridge"}, "path": "firebase-config/src/main/java/com/google/firebase/remoteconfig/internal/Personalization.java", "diffHunk": "@@ -58,9 +76,29 @@ public void logArmActive(@NonNull String key, @NonNull ConfigContainer configCon\n       return;\n     }\n \n-    Bundle params = new Bundle();\n-    params.putString(ARM_KEY, metadata.optString(PERSONALIZATION_ID));\n-    params.putString(ARM_VALUE, values.optString(key));\n-    analyticsConnector.logEvent(ANALYTICS_ORIGIN_PERSONALIZATION, ANALYTICS_PULL_EVENT, params);\n+    String choiceId = metadata.optString(CHOICE_ID);\n+    if (choiceId.isEmpty()) {\n+      return;\n+    }\n+\n+    synchronized (armsCache) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "10daf06a6c18b5431bce6d29830bcbba2164c26d"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1ODU2OTk3Mg==", "bodyText": "Minor: there are a lot of things called \"key\" in this file. Since the key arg passed to the logArmActive fn is actually the RC param, renaming it to something like rcParameter would be more self-descriptive.", "url": "https://github.com/firebase/firebase-android-sdk/pull/2222#discussion_r558569972", "createdAt": "2021-01-15T20:15:12Z", "author": {"login": "erikeldridge"}, "path": "firebase-config/src/main/java/com/google/firebase/remoteconfig/internal/Personalization.java", "diffHunk": "@@ -58,9 +76,29 @@ public void logArmActive(@NonNull String key, @NonNull ConfigContainer configCon\n       return;\n     }\n \n-    Bundle params = new Bundle();\n-    params.putString(ARM_KEY, metadata.optString(PERSONALIZATION_ID));\n-    params.putString(ARM_VALUE, values.optString(key));\n-    analyticsConnector.logEvent(ANALYTICS_ORIGIN_PERSONALIZATION, ANALYTICS_PULL_EVENT, params);\n+    String choiceId = metadata.optString(CHOICE_ID);\n+    if (choiceId.isEmpty()) {\n+      return;\n+    }\n+\n+    synchronized (armsCache) {\n+      if (choiceId.equals(armsCache.get(key))) {\n+        return;\n+      }\n+      armsCache.put(key, choiceId);\n+    }\n+\n+    Bundle logParams = new Bundle();\n+    logParams.putString(ARM_KEY, key);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "10daf06a6c18b5431bce6d29830bcbba2164c26d"}, "originalPosition": 62}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1ODU3NjEzNA==", "bodyText": "Thinking: the design lists five things we want to log:\n\nDeveloper friendly identifier of the personalization (either the rc param, or an id customers can map back to rc param), satisfied by the arm_key field\nThe choice that was made (a string value), satisfied by the arm_value field\nThe group the user was in (\u201cp13n\u201d or \u201cbaseline\u201d), satisfied by the group field\nPersonalization ID, satisfied by the personalization_id field\nArm index, satisfied by the arm_index field\n\nThinking: the external event name is arbitrary, we just need to document what it is. personalization_assignment seems self-descriptive to me \ud83d\udc4d\nMinor: renaming arm_key to something like rc_parameter would be more self-descriptive given it communicates an RC parameter.", "url": "https://github.com/firebase/firebase-android-sdk/pull/2222#discussion_r558576134", "createdAt": "2021-01-15T20:28:45Z", "author": {"login": "erikeldridge"}, "path": "firebase-config/src/main/java/com/google/firebase/remoteconfig/internal/Personalization.java", "diffHunk": "@@ -58,9 +76,29 @@ public void logArmActive(@NonNull String key, @NonNull ConfigContainer configCon\n       return;\n     }\n \n-    Bundle params = new Bundle();\n-    params.putString(ARM_KEY, metadata.optString(PERSONALIZATION_ID));\n-    params.putString(ARM_VALUE, values.optString(key));\n-    analyticsConnector.logEvent(ANALYTICS_ORIGIN_PERSONALIZATION, ANALYTICS_PULL_EVENT, params);\n+    String choiceId = metadata.optString(CHOICE_ID);\n+    if (choiceId.isEmpty()) {\n+      return;\n+    }\n+\n+    synchronized (armsCache) {\n+      if (choiceId.equals(armsCache.get(key))) {\n+        return;\n+      }\n+      armsCache.put(key, choiceId);\n+    }\n+\n+    Bundle logParams = new Bundle();\n+    logParams.putString(ARM_KEY, key);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "10daf06a6c18b5431bce6d29830bcbba2164c26d"}, "originalPosition": 62}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1ODU3NzQ0NA==", "bodyText": "Minor: as I commented on the iOS change, it's unclear to me what \"pull\" means here and below.\nAlso, given this whole file concerns logging to Analytics, including \"analytics\" in some field names, but not others is confusing. I'd vote to just omit it.\nThe main distinctions from my perspective are internal vs external, and \"event\" vs \"param\" (to use Analytics' \"feature type\" nomenclature from the event proposal).\nTo summarize, I'd vote to use \"internal\" and \"external\" prefixes to differentiate internal from external events, and \"event\" and \"param\" suffixes to differentiate event names from param names, eg INTERNAL_EVENT, INTERNAL_CHOICE_ID_PARAM, etc\nThinking (no action req'd): all these field names are consistent across Android and iOS \ud83d\udc4d", "url": "https://github.com/firebase/firebase-android-sdk/pull/2222#discussion_r558577444", "createdAt": "2021-01-15T20:31:51Z", "author": {"login": "erikeldridge"}, "path": "firebase-config/src/main/java/com/google/firebase/remoteconfig/internal/Personalization.java", "diffHunk": "@@ -17,18 +17,36 @@\n import android.os.Bundle;\n import androidx.annotation.NonNull;\n import com.google.firebase.analytics.connector.AnalyticsConnector;\n+import java.util.Collections;\n+import java.util.HashMap;\n+import java.util.Map;\n import org.json.JSONObject;\n \n public class Personalization {\n   public static final String ANALYTICS_ORIGIN_PERSONALIZATION = \"fp\";\n-  public static final String ANALYTICS_PULL_EVENT = \"_fpc\";\n-  public static final String ARM_KEY = \"_fpid\";\n-  public static final String ARM_VALUE = \"_fpct\";\n-  static final String PERSONALIZATION_ID = \"personalizationId\";\n+\n+  // Constants with LOG_KEY suffix are how the corresponding ones without it are identified on\n+  // Google Analytics.\n+  public static final String ANALYTICS_PULL_EVENT = \"personalization_assignment\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "10daf06a6c18b5431bce6d29830bcbba2164c26d"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1ODU3OTUxOA==", "bodyText": "Thinking: the design lists one thing we want to log:\n\nChoice ID, satisfied by the _fpid param\n\nThinking: the _fpc event name is correct per the events proposal.", "url": "https://github.com/firebase/firebase-android-sdk/pull/2222#discussion_r558579518", "createdAt": "2021-01-15T20:36:38Z", "author": {"login": "erikeldridge"}, "path": "firebase-config/src/main/java/com/google/firebase/remoteconfig/internal/Personalization.java", "diffHunk": "@@ -58,9 +76,29 @@ public void logArmActive(@NonNull String key, @NonNull ConfigContainer configCon\n       return;\n     }\n \n-    Bundle params = new Bundle();\n-    params.putString(ARM_KEY, metadata.optString(PERSONALIZATION_ID));\n-    params.putString(ARM_VALUE, values.optString(key));\n-    analyticsConnector.logEvent(ANALYTICS_ORIGIN_PERSONALIZATION, ANALYTICS_PULL_EVENT, params);\n+    String choiceId = metadata.optString(CHOICE_ID);\n+    if (choiceId.isEmpty()) {\n+      return;\n+    }\n+\n+    synchronized (armsCache) {\n+      if (choiceId.equals(armsCache.get(key))) {\n+        return;\n+      }\n+      armsCache.put(key, choiceId);\n+    }\n+\n+    Bundle logParams = new Bundle();\n+    logParams.putString(ARM_KEY, key);\n+    logParams.putString(ARM_VALUE, values.optString(key));\n+    logParams.putString(PERSONALIZATION_ID_LOG_KEY, metadata.optString(PERSONALIZATION_ID));\n+    logParams.putInt(ARM_INDEX_LOG_KEY, metadata.optInt(ARM_INDEX, -1));\n+    logParams.putString(GROUP, metadata.optString(GROUP));\n+    analyticsConnector.logEvent(ANALYTICS_ORIGIN_PERSONALIZATION, ANALYTICS_PULL_EVENT, logParams);\n+\n+    Bundle internalLogParams = new Bundle();\n+    internalLogParams.putString(CHOICE_ID_LOG_KEY, choiceId);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "10daf06a6c18b5431bce6d29830bcbba2164c26d"}, "originalPosition": 70}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1ODU4MjQyNg==", "bodyText": "\ud83d\udc4d  I'd vote to use the _loggedInternallyAndExternally suffix for the test below too, ie logArmActive_multiplePersonalizationKeys_loggedMultiple --> logArmActive_multiplePersonalizationKeys_loggedInternallyAndExternally", "url": "https://github.com/firebase/firebase-android-sdk/pull/2222#discussion_r558582426", "createdAt": "2021-01-15T20:43:22Z", "author": {"login": "erikeldridge"}, "path": "firebase-config/src/test/java/com/google/firebase/remoteconfig/internal/PersonalizationTest.java", "diffHunk": "@@ -99,12 +105,16 @@ public void logArmActive_singlePersonalizationKey_loggedOnce() {\n     verify(mockAnalyticsConnector, times(1))\n         .logEvent(\n             eq(ANALYTICS_ORIGIN_PERSONALIZATION), eq(ANALYTICS_PULL_EVENT), any(Bundle.class));\n-    assertThat(FAKE_LOGS).hasSize(1);\n+    verify(mockAnalyticsConnector, times(1))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NzcyMjAyOA=="}, "originalCommit": {"oid": "3fdff9f1ffe4c690395d85c9351372bc151e8a06"}, "originalPosition": 68}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTY5Nzc4NDk2", "url": "https://github.com/firebase/firebase-android-sdk/pull/2222#pullrequestreview-569778496", "createdAt": "2021-01-15T23:57:54Z", "commit": {"oid": "10daf06a6c18b5431bce6d29830bcbba2164c26d"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNVQyMzo1Nzo1NFrOIUzuaw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNlQwMDowOTozMlrOIU0O9A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1ODY4OTg5OQ==", "bodyText": "I'm not very familiar about the SDK development process. Thus, I'll just call out one thing if we have considered: EAP Halfbrick's new experiment tries to set the ARM value as json string.\nI want to check that these json strings can be correctly handled.\nCheck Halfbrick's new experiment's PersonalizationDefinition: http://google3/firebase/sage/p13n/scripts/eap/add_halfbrick_exp2_defs.sh?l=41-42&rcl=351643001", "url": "https://github.com/firebase/firebase-android-sdk/pull/2222#discussion_r558689899", "createdAt": "2021-01-15T23:57:54Z", "author": {"login": "andyliangdong"}, "path": "firebase-config/src/main/java/com/google/firebase/remoteconfig/internal/Personalization.java", "diffHunk": "@@ -58,9 +76,29 @@ public void logArmActive(@NonNull String key, @NonNull ConfigContainer configCon\n       return;\n     }\n \n-    Bundle params = new Bundle();\n-    params.putString(ARM_KEY, metadata.optString(PERSONALIZATION_ID));\n-    params.putString(ARM_VALUE, values.optString(key));\n-    analyticsConnector.logEvent(ANALYTICS_ORIGIN_PERSONALIZATION, ANALYTICS_PULL_EVENT, params);\n+    String choiceId = metadata.optString(CHOICE_ID);\n+    if (choiceId.isEmpty()) {\n+      return;\n+    }\n+\n+    synchronized (armsCache) {\n+      if (choiceId.equals(armsCache.get(key))) {\n+        return;\n+      }\n+      armsCache.put(key, choiceId);\n+    }\n+\n+    Bundle logParams = new Bundle();\n+    logParams.putString(ARM_KEY, key);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "10daf06a6c18b5431bce6d29830bcbba2164c26d"}, "originalPosition": 62}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1ODY5ODIyOA==", "bodyText": "I'm not sure where the metadata come from? is this logging server side's decision?", "url": "https://github.com/firebase/firebase-android-sdk/pull/2222#discussion_r558698228", "createdAt": "2021-01-16T00:09:32Z", "author": {"login": "andyliangdong"}, "path": "firebase-config/src/main/java/com/google/firebase/remoteconfig/internal/Personalization.java", "diffHunk": "@@ -58,9 +76,29 @@ public void logArmActive(@NonNull String key, @NonNull ConfigContainer configCon\n       return;\n     }\n \n-    Bundle params = new Bundle();\n-    params.putString(ARM_KEY, metadata.optString(PERSONALIZATION_ID));\n-    params.putString(ARM_VALUE, values.optString(key));\n-    analyticsConnector.logEvent(ANALYTICS_ORIGIN_PERSONALIZATION, ANALYTICS_PULL_EVENT, params);\n+    String choiceId = metadata.optString(CHOICE_ID);\n+    if (choiceId.isEmpty()) {\n+      return;\n+    }\n+\n+    synchronized (armsCache) {\n+      if (choiceId.equals(armsCache.get(key))) {\n+        return;\n+      }\n+      armsCache.put(key, choiceId);\n+    }\n+\n+    Bundle logParams = new Bundle();\n+    logParams.putString(ARM_KEY, key);\n+    logParams.putString(ARM_VALUE, values.optString(key));\n+    logParams.putString(PERSONALIZATION_ID_LOG_KEY, metadata.optString(PERSONALIZATION_ID));\n+    logParams.putInt(ARM_INDEX_LOG_KEY, metadata.optInt(ARM_INDEX, -1));\n+    logParams.putString(GROUP, metadata.optString(GROUP));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "10daf06a6c18b5431bce6d29830bcbba2164c26d"}, "originalPosition": 66}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "46fb82f9c83b8445420ff26183c669f2fa88d6a9", "author": {"user": {"login": "vic-flair", "name": null}}, "url": "https://github.com/firebase/firebase-android-sdk/commit/46fb82f9c83b8445420ff26183c669f2fa88d6a9", "committedDate": "2021-01-16T02:06:53Z", "message": "Rename constants."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8268fe681e82d3027f8efef2129f6d942f1b2d13", "author": {"user": {"login": "vic-flair", "name": null}}, "url": "https://github.com/firebase/firebase-android-sdk/commit/8268fe681e82d3027f8efef2129f6d942f1b2d13", "committedDate": "2021-01-16T02:40:36Z", "message": "Use value that looks more like actual Personalization metadata."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "50cfb8613ca95d87378921c1b4887e6607b4f357", "author": {"user": {"login": "vic-flair", "name": null}}, "url": "https://github.com/firebase/firebase-android-sdk/commit/50cfb8613ca95d87378921c1b4887e6607b4f357", "committedDate": "2021-01-16T02:36:15Z", "message": "Use value that looks more like actual Personalization metadata."}, "afterCommit": {"oid": "8268fe681e82d3027f8efef2129f6d942f1b2d13", "author": {"user": {"login": "vic-flair", "name": null}}, "url": "https://github.com/firebase/firebase-android-sdk/commit/8268fe681e82d3027f8efef2129f6d942f1b2d13", "committedDate": "2021-01-16T02:40:36Z", "message": "Use value that looks more like actual Personalization metadata."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTcxNzA3ODE3", "url": "https://github.com/firebase/firebase-android-sdk/pull/2222#pullrequestreview-571707817", "createdAt": "2021-01-19T22:17:27Z", "commit": {"oid": "8268fe681e82d3027f8efef2129f6d942f1b2d13"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xOVQyMjoxNzoyN1rOIWkPyw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xOVQyMjoxNzoyN1rOIWkPyw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MDUzMzQ1MQ==", "bodyText": "This looks great. Much easier to read \ud83d\udc4d", "url": "https://github.com/firebase/firebase-android-sdk/pull/2222#discussion_r560533451", "createdAt": "2021-01-19T22:17:27Z", "author": {"login": "erikeldridge"}, "path": "firebase-config/src/main/java/com/google/firebase/remoteconfig/internal/Personalization.java", "diffHunk": "@@ -53,14 +72,36 @@ public void logArmActive(@NonNull String key, @NonNull ConfigContainer configCon\n       return;\n     }\n \n-    JSONObject metadata = ids.optJSONObject(key);\n+    JSONObject metadata = ids.optJSONObject(rcParameter);\n     if (metadata == null) {\n       return;\n     }\n \n-    Bundle params = new Bundle();\n-    params.putString(ARM_KEY, metadata.optString(PERSONALIZATION_ID));\n-    params.putString(ARM_VALUE, values.optString(key));\n-    analyticsConnector.logEvent(ANALYTICS_ORIGIN_PERSONALIZATION, ANALYTICS_PULL_EVENT, params);\n+    String choiceId = metadata.optString(CHOICE_ID);\n+    if (choiceId.isEmpty()) {\n+      return;\n+    }\n+\n+    // We only to need to log each choice ID once, so this attempts to prevent too much unnecessary\n+    // logging.\n+    synchronized (loggedChoiceIds) {\n+      if (choiceId.equals(loggedChoiceIds.get(rcParameter))) {\n+        return;\n+      }\n+      loggedChoiceIds.put(rcParameter, choiceId);\n+    }\n+\n+    Bundle logParams = new Bundle();\n+    logParams.putString(EXTERNAL_RC_PARAMETER_PARAM, rcParameter);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8268fe681e82d3027f8efef2129f6d942f1b2d13"}, "originalPosition": 85}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTcxNzA0NTM2", "url": "https://github.com/firebase/firebase-android-sdk/pull/2222#pullrequestreview-571704536", "createdAt": "2021-01-19T22:12:14Z", "commit": {"oid": "8268fe681e82d3027f8efef2129f6d942f1b2d13"}, "state": "APPROVED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xOVQyMjoxMjoxNFrOIWkFbg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xOVQyMzoxNTowMVrOIWmEZg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MDUzMDc5OA==", "bodyText": "Can we simplify this: \"The PARAM suffix identifies log keys sent to Google Analytics.\"", "url": "https://github.com/firebase/firebase-android-sdk/pull/2222#discussion_r560530798", "createdAt": "2021-01-19T22:12:14Z", "author": {"login": "danasilver"}, "path": "firebase-config/src/main/java/com/google/firebase/remoteconfig/internal/Personalization.java", "diffHunk": "@@ -17,18 +17,37 @@\n import android.os.Bundle;\n import androidx.annotation.NonNull;\n import com.google.firebase.analytics.connector.AnalyticsConnector;\n+import java.util.Collections;\n+import java.util.HashMap;\n+import java.util.Map;\n import org.json.JSONObject;\n \n public class Personalization {\n   public static final String ANALYTICS_ORIGIN_PERSONALIZATION = \"fp\";\n-  public static final String ANALYTICS_PULL_EVENT = \"_fpc\";\n-  public static final String ARM_KEY = \"_fpid\";\n-  public static final String ARM_VALUE = \"_fpct\";\n-  static final String PERSONALIZATION_ID = \"personalizationId\";\n+\n+  // Constants with PARAM suffix are how the corresponding ones without it are identified on", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8268fe681e82d3027f8efef2129f6d942f1b2d13"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MDUzMjk3NA==", "bodyText": "I think we can remove this comment now that loggedChoiceIds makes the filtering clear.", "url": "https://github.com/firebase/firebase-android-sdk/pull/2222#discussion_r560532974", "createdAt": "2021-01-19T22:16:33Z", "author": {"login": "danasilver"}, "path": "firebase-config/src/main/java/com/google/firebase/remoteconfig/internal/Personalization.java", "diffHunk": "@@ -53,14 +72,36 @@ public void logArmActive(@NonNull String key, @NonNull ConfigContainer configCon\n       return;\n     }\n \n-    JSONObject metadata = ids.optJSONObject(key);\n+    JSONObject metadata = ids.optJSONObject(rcParameter);\n     if (metadata == null) {\n       return;\n     }\n \n-    Bundle params = new Bundle();\n-    params.putString(ARM_KEY, metadata.optString(PERSONALIZATION_ID));\n-    params.putString(ARM_VALUE, values.optString(key));\n-    analyticsConnector.logEvent(ANALYTICS_ORIGIN_PERSONALIZATION, ANALYTICS_PULL_EVENT, params);\n+    String choiceId = metadata.optString(CHOICE_ID);\n+    if (choiceId.isEmpty()) {\n+      return;\n+    }\n+\n+    // We only to need to log each choice ID once, so this attempts to prevent too much unnecessary", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8268fe681e82d3027f8efef2129f6d942f1b2d13"}, "originalPosition": 75}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MDU2MDEwOA==", "bodyText": "Seems like this could be combined with the above into one statement with all four logs?", "url": "https://github.com/firebase/firebase-android-sdk/pull/2222#discussion_r560560108", "createdAt": "2021-01-19T23:08:10Z", "author": {"login": "danasilver"}, "path": "firebase-config/src/test/java/com/google/firebase/remoteconfig/internal/PersonalizationTest.java", "diffHunk": "@@ -88,43 +123,46 @@ public void logArmActive_nonPersonalizationKey_notLogged() {\n \n     verify(mockAnalyticsConnector, times(0))\n         .logEvent(\n-            eq(ANALYTICS_ORIGIN_PERSONALIZATION), eq(ANALYTICS_PULL_EVENT), any(Bundle.class));\n+            eq(ANALYTICS_ORIGIN_PERSONALIZATION),\n+            or(eq(EXTERNAL_EVENT), eq(INTERNAL_EVENT)),\n+            any(Bundle.class));\n     assertThat(FAKE_LOGS).isEmpty();\n   }\n \n   @Test\n-  public void logArmActive_singlePersonalizationKey_loggedOnce() {\n+  public void logArmActive_singlePersonalizationKey_loggedInternallyAndExternally() {\n     personalization.logArmActive(\"key1\", CONFIG_CONTAINER);\n \n     verify(mockAnalyticsConnector, times(1))\n-        .logEvent(\n-            eq(ANALYTICS_ORIGIN_PERSONALIZATION), eq(ANALYTICS_PULL_EVENT), any(Bundle.class));\n-    assertThat(FAKE_LOGS).hasSize(1);\n+        .logEvent(eq(ANALYTICS_ORIGIN_PERSONALIZATION), eq(EXTERNAL_EVENT), any(Bundle.class));\n+    verify(mockAnalyticsConnector, times(1))\n+        .logEvent(eq(ANALYTICS_ORIGIN_PERSONALIZATION), eq(INTERNAL_EVENT), any(Bundle.class));\n+    assertThat(FAKE_LOGS).hasSize(2);\n \n-    Bundle params = new Bundle();\n-    params.putString(ARM_KEY, \"id1\");\n-    params.putString(ARM_VALUE, \"value1\");\n-    assertThat(FAKE_LOGS.get(0).toString()).isEqualTo(params.toString());\n+    assertThat(FAKE_LOGS)\n+        .comparingElementsUsing(TO_STRING)\n+        .containsExactly(LOG_PARAMS_1.toString(), INTERNAL_LOG_PARAMS_1.toString());\n   }\n \n   @Test\n-  public void logArmActive_multiplePersonalizationKeys_loggedMultiple() {\n+  public void logArmActive_multiplePersonalizationKeys_loggedInternallyAndExternally() {\n     personalization.logArmActive(\"key1\", CONFIG_CONTAINER);\n     personalization.logArmActive(\"key2\", CONFIG_CONTAINER);\n+    personalization.logArmActive(\"key1\", CONFIG_CONTAINER);\n \n     verify(mockAnalyticsConnector, times(2))\n-        .logEvent(\n-            eq(ANALYTICS_ORIGIN_PERSONALIZATION), eq(ANALYTICS_PULL_EVENT), any(Bundle.class));\n-    assertThat(FAKE_LOGS).hasSize(2);\n-\n-    Bundle params1 = new Bundle();\n-    params1.putString(ARM_KEY, \"id1\");\n-    params1.putString(ARM_VALUE, \"value1\");\n-    assertThat(FAKE_LOGS.get(0).toString()).isEqualTo(params1.toString());\n-\n-    Bundle params2 = new Bundle();\n-    params2.putString(ARM_KEY, \"id2\");\n-    params2.putString(ARM_VALUE, \"value2\");\n-    assertThat(FAKE_LOGS.get(1).toString()).isEqualTo(params2.toString());\n+        .logEvent(eq(ANALYTICS_ORIGIN_PERSONALIZATION), eq(EXTERNAL_EVENT), any(Bundle.class));\n+    verify(mockAnalyticsConnector, times(2))\n+        .logEvent(eq(ANALYTICS_ORIGIN_PERSONALIZATION), eq(INTERNAL_EVENT), any(Bundle.class));\n+    assertThat(FAKE_LOGS).hasSize(4);\n+\n+    assertThat(FAKE_LOGS)\n+        .comparingElementsUsing(TO_STRING)\n+        .containsAtLeast(LOG_PARAMS_1.toString(), LOG_PARAMS_2.toString())\n+        .inOrder();\n+    assertThat(FAKE_LOGS)\n+        .comparingElementsUsing(TO_STRING)\n+        .containsAtLeast(INTERNAL_LOG_PARAMS_1.toString(), INTERNAL_LOG_PARAMS_2.toString())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8268fe681e82d3027f8efef2129f6d942f1b2d13"}, "originalPosition": 154}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MDU2MzMwMg==", "bodyText": "Related to removing the comment below about reducing logging - I'd just note that here as something like \"Remote Config parameter key and Choice ID pairs that have already been logged to Analytics.\"", "url": "https://github.com/firebase/firebase-android-sdk/pull/2222#discussion_r560563302", "createdAt": "2021-01-19T23:15:01Z", "author": {"login": "danasilver"}, "path": "firebase-config/src/main/java/com/google/firebase/remoteconfig/internal/Personalization.java", "diffHunk": "@@ -17,18 +17,37 @@\n import android.os.Bundle;\n import androidx.annotation.NonNull;\n import com.google.firebase.analytics.connector.AnalyticsConnector;\n+import java.util.Collections;\n+import java.util.HashMap;\n+import java.util.Map;\n import org.json.JSONObject;\n \n public class Personalization {\n   public static final String ANALYTICS_ORIGIN_PERSONALIZATION = \"fp\";\n-  public static final String ANALYTICS_PULL_EVENT = \"_fpc\";\n-  public static final String ARM_KEY = \"_fpid\";\n-  public static final String ARM_VALUE = \"_fpct\";\n-  static final String PERSONALIZATION_ID = \"personalizationId\";\n+\n+  // Constants with PARAM suffix are how the corresponding ones without it are identified on\n+  // Google Analytics.\n+  public static final String EXTERNAL_EVENT = \"personalization_assignment\";\n+  public static final String EXTERNAL_RC_PARAMETER_PARAM = \"arm_key\";\n+  public static final String EXTERNAL_ARM_VALUE_PARAM = \"arm_value\";\n+  public static final String PERSONALIZATION_ID = \"personalizationId\";\n+  public static final String EXTERNAL_PERSONALIZATION_ID_PARAM = \"personalization_id\";\n+  public static final String ARM_INDEX = \"armIndex\";\n+  public static final String EXTERNAL_ARM_INDEX_PARAM = \"arm_index\";\n+  public static final String GROUP = \"group\";\n+  public static final String EXTERNAL_GROUP_PARAM = \"group\";\n+\n+  public static final String INTERNAL_EVENT = \"_fpc\";\n+  public static final String CHOICE_ID = \"choiceId\";\n+  public static final String INTERNAL_CHOICE_ID_PARAM = \"_fpid\";\n \n   /** The app's Firebase Analytics client. */\n   private final AnalyticsConnector analyticsConnector;\n \n+  /** A map of Remote Config parameter key to choice ID. */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8268fe681e82d3027f8efef2129f6d942f1b2d13"}, "originalPosition": 35}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "64f38afbbd57684af26f84925873045aa64ccd04", "author": {"user": {"login": "vic-flair", "name": null}}, "url": "https://github.com/firebase/firebase-android-sdk/commit/64f38afbbd57684af26f84925873045aa64ccd04", "committedDate": "2021-01-20T00:09:08Z", "message": "Editing some comments."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2334, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}