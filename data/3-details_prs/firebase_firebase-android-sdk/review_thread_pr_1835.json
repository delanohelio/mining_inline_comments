{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU5NDIyODI2", "number": 1835, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxODoxMToyN1rOETykjw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxOTo0NDo1M1rOET0daQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5MTg2OTU5OnYy", "diffSide": "RIGHT", "path": "encoders/firebase-decoders-json/src/main/java/com/google/firebase/decoders/ValueDecoder.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxODoxMToyN1rOG5uVbQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxODoyMjozMFrOG5us4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzE4MTE2NQ==", "bodyText": "I may be wrong but my first hunch is that having value decoders return a TypeCreator seems like overkill.\nIf the idea is that ValueDecoders are only supposed to decode primitive types(i.e. not {} or []) then we don't need the TypeCreator indirection, whose main intent is to delay the creation until all the requested values become available. But all primitives are already available and value decoders could directly return the value like:\ninterface ValueDecoder<T> {\n  @Nullable T decode(ValueDecoderContext ctx);\n}\nwdyt?", "url": "https://github.com/firebase/firebase-android-sdk/pull/1835#discussion_r463181165", "createdAt": "2020-07-30T18:11:27Z", "author": {"login": "vkryachko"}, "path": "encoders/firebase-decoders-json/src/main/java/com/google/firebase/decoders/ValueDecoder.java", "diffHunk": "@@ -0,0 +1,23 @@\n+// Copyright 2020 Google LLC\n+//\n+// Licensed under the Apache License, Version 2.0 (the \"License\");\n+// you may not use this file except in compliance with the License.\n+// You may obtain a copy of the License at\n+//\n+//      http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+package com.google.firebase.decoders;\n+\n+/**\n+ * This interface should be implemented by a specific ValueDecoder to provide its decoding logic. A\n+ * {@code ValueDecoder} writes its decoding logic in {@link ValueDecoderContext}.\n+ *\n+ * <p>Use this interface if the object to decode was represented as a single or primitive value.\n+ */\n+public interface ValueDecoder<T> extends Decoder<T, ValueDecoderContext> {}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0d017b753fcb26503a1394120c58fd94b27ddb6d"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzE4NzE2OA==", "bodyText": "Yes, you are right. TypeCreator is an overkill. I will change it,", "url": "https://github.com/firebase/firebase-android-sdk/pull/1835#discussion_r463187168", "createdAt": "2020-07-30T18:22:30Z", "author": {"login": "James201311"}, "path": "encoders/firebase-decoders-json/src/main/java/com/google/firebase/decoders/ValueDecoder.java", "diffHunk": "@@ -0,0 +1,23 @@\n+// Copyright 2020 Google LLC\n+//\n+// Licensed under the Apache License, Version 2.0 (the \"License\");\n+// you may not use this file except in compliance with the License.\n+// You may obtain a copy of the License at\n+//\n+//      http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+package com.google.firebase.decoders;\n+\n+/**\n+ * This interface should be implemented by a specific ValueDecoder to provide its decoding logic. A\n+ * {@code ValueDecoder} writes its decoding logic in {@link ValueDecoderContext}.\n+ *\n+ * <p>Use this interface if the object to decode was represented as a single or primitive value.\n+ */\n+public interface ValueDecoder<T> extends Decoder<T, ValueDecoderContext> {}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzE4MTE2NQ=="}, "originalCommit": {"oid": "0d017b753fcb26503a1394120c58fd94b27ddb6d"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5MjE3ODk3OnYy", "diffSide": "RIGHT", "path": "encoders/firebase-decoders-json/api.txt", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxOTo0NDo1M1rOG5xVDA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxOTo0NDo1M1rOG5xVDA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzIzMDIyMA==", "bodyText": "is this interface still needed? if not pls remove.", "url": "https://github.com/firebase/firebase-android-sdk/pull/1835#discussion_r463230220", "createdAt": "2020-07-30T19:44:53Z", "author": {"login": "vkryachko"}, "path": "encoders/firebase-decoders-json/api.txt", "diffHunk": "@@ -20,8 +20,13 @@ package com.google.firebase.decoders {\n     method @NonNull public <T> T decode(@NonNull java.io.InputStream, @NonNull com.google.firebase.decoders.TypeToken<T>) throws java.io.IOException;\n   }\n \n+  public interface Decoder<TValue, TContext> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b10f058ec9b0d59f2e6465e375152b0517f76645"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1144, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}