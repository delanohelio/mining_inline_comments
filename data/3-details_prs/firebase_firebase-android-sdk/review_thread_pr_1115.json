{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYxNjI2Njk0", "number": 1115, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQyMjowMjowN1rODXSCXQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQyMzowMTo1OVrODXSqSw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1NzM5MzU3OnYy", "diffSide": "RIGHT", "path": "firebase-installations/src/main/java/com/google/firebase/installations/remote/FirebaseInstallationServiceClient.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQyMjowMjowN1rOFchLRA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQyMjoyMzoyMVrOFchjnw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTQ0ODAwNA==", "bodyText": "This does not seem to throw a JSONException...\nWhy did you pull it in the try-catch block?\nYou can still keep the finally block without moving it in, I think.", "url": "https://github.com/firebase/firebase-android-sdk/pull/1115#discussion_r365448004", "createdAt": "2020-01-10T22:02:07Z", "author": {"login": "andirayo"}, "path": "firebase-installations/src/main/java/com/google/firebase/installations/remote/FirebaseInstallationServiceClient.java", "diffHunk": "@@ -142,22 +142,25 @@ public InstallationResponse createFirebaseInstallation(\n         httpsURLConnection.addRequestProperty(X_ANDROID_IID_MIGRATION_KEY, iidToken);\n       }\n \n-      GZIPOutputStream gzipOutputStream =\n-          new GZIPOutputStream(httpsURLConnection.getOutputStream());\n+      GZIPOutputStream gzipOutputStream = null;\n       try {\n+        gzipOutputStream = new GZIPOutputStream(httpsURLConnection.getOutputStream());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "876feb5884b8c6ce98293d9e83153ecf45ea84cb"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTQ1NDIzOQ==", "bodyText": "You are right. Good catch :)", "url": "https://github.com/firebase/firebase-android-sdk/pull/1115#discussion_r365454239", "createdAt": "2020-01-10T22:23:21Z", "author": {"login": "ankitaj224"}, "path": "firebase-installations/src/main/java/com/google/firebase/installations/remote/FirebaseInstallationServiceClient.java", "diffHunk": "@@ -142,22 +142,25 @@ public InstallationResponse createFirebaseInstallation(\n         httpsURLConnection.addRequestProperty(X_ANDROID_IID_MIGRATION_KEY, iidToken);\n       }\n \n-      GZIPOutputStream gzipOutputStream =\n-          new GZIPOutputStream(httpsURLConnection.getOutputStream());\n+      GZIPOutputStream gzipOutputStream = null;\n       try {\n+        gzipOutputStream = new GZIPOutputStream(httpsURLConnection.getOutputStream());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTQ0ODAwNA=="}, "originalCommit": {"oid": "876feb5884b8c6ce98293d9e83153ecf45ea84cb"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1NzQyNDA5OnYy", "diffSide": "RIGHT", "path": "firebase-installations/src/main/java/com/google/firebase/installations/remote/FirebaseInstallationServiceClient.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQyMjoxODoxOVrOFcheKw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQyMjo1MToyM1rOFciA3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTQ1Mjg0Mw==", "bodyText": "I take it readCreateResponse() calls close itself?", "url": "https://github.com/firebase/firebase-android-sdk/pull/1115#discussion_r365452843", "createdAt": "2020-01-10T22:18:19Z", "author": {"login": "fredquintana"}, "path": "firebase-installations/src/main/java/com/google/firebase/installations/remote/FirebaseInstallationServiceClient.java", "diffHunk": "@@ -142,22 +142,25 @@ public InstallationResponse createFirebaseInstallation(\n         httpsURLConnection.addRequestProperty(X_ANDROID_IID_MIGRATION_KEY, iidToken);\n       }\n \n-      GZIPOutputStream gzipOutputStream =\n-          new GZIPOutputStream(httpsURLConnection.getOutputStream());\n+      GZIPOutputStream gzipOutputStream = null;\n       try {\n+        gzipOutputStream = new GZIPOutputStream(httpsURLConnection.getOutputStream());\n         gzipOutputStream.write(\n             buildCreateFirebaseInstallationRequestBody(fid, appId).toString().getBytes(\"UTF-8\"));\n       } catch (JSONException e) {\n         throw new IllegalStateException(e);\n       } finally {\n-        gzipOutputStream.close();\n+        if (gzipOutputStream != null) {\n+          gzipOutputStream.close();\n+        }\n       }\n \n       int httpResponseCode = httpsURLConnection.getResponseCode();\n \n       if (httpResponseCode == 200) {\n         return readCreateResponse(httpsURLConnection);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "876feb5884b8c6ce98293d9e83153ecf45ea84cb"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTQ1Mjk0OQ==", "bodyText": "rather, .disconnect()", "url": "https://github.com/firebase/firebase-android-sdk/pull/1115#discussion_r365452949", "createdAt": "2020-01-10T22:18:37Z", "author": {"login": "fredquintana"}, "path": "firebase-installations/src/main/java/com/google/firebase/installations/remote/FirebaseInstallationServiceClient.java", "diffHunk": "@@ -142,22 +142,25 @@ public InstallationResponse createFirebaseInstallation(\n         httpsURLConnection.addRequestProperty(X_ANDROID_IID_MIGRATION_KEY, iidToken);\n       }\n \n-      GZIPOutputStream gzipOutputStream =\n-          new GZIPOutputStream(httpsURLConnection.getOutputStream());\n+      GZIPOutputStream gzipOutputStream = null;\n       try {\n+        gzipOutputStream = new GZIPOutputStream(httpsURLConnection.getOutputStream());\n         gzipOutputStream.write(\n             buildCreateFirebaseInstallationRequestBody(fid, appId).toString().getBytes(\"UTF-8\"));\n       } catch (JSONException e) {\n         throw new IllegalStateException(e);\n       } finally {\n-        gzipOutputStream.close();\n+        if (gzipOutputStream != null) {\n+          gzipOutputStream.close();\n+        }\n       }\n \n       int httpResponseCode = httpsURLConnection.getResponseCode();\n \n       if (httpResponseCode == 200) {\n         return readCreateResponse(httpsURLConnection);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTQ1Mjg0Mw=="}, "originalCommit": {"oid": "876feb5884b8c6ce98293d9e83153ecf45ea84cb"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTQ1MzgxNQ==", "bodyText": "I think it would be cleaner to have the reader method not disconnect, then you could do it in one place, maybe in a finally.", "url": "https://github.com/firebase/firebase-android-sdk/pull/1115#discussion_r365453815", "createdAt": "2020-01-10T22:21:47Z", "author": {"login": "fredquintana"}, "path": "firebase-installations/src/main/java/com/google/firebase/installations/remote/FirebaseInstallationServiceClient.java", "diffHunk": "@@ -142,22 +142,25 @@ public InstallationResponse createFirebaseInstallation(\n         httpsURLConnection.addRequestProperty(X_ANDROID_IID_MIGRATION_KEY, iidToken);\n       }\n \n-      GZIPOutputStream gzipOutputStream =\n-          new GZIPOutputStream(httpsURLConnection.getOutputStream());\n+      GZIPOutputStream gzipOutputStream = null;\n       try {\n+        gzipOutputStream = new GZIPOutputStream(httpsURLConnection.getOutputStream());\n         gzipOutputStream.write(\n             buildCreateFirebaseInstallationRequestBody(fid, appId).toString().getBytes(\"UTF-8\"));\n       } catch (JSONException e) {\n         throw new IllegalStateException(e);\n       } finally {\n-        gzipOutputStream.close();\n+        if (gzipOutputStream != null) {\n+          gzipOutputStream.close();\n+        }\n       }\n \n       int httpResponseCode = httpsURLConnection.getResponseCode();\n \n       if (httpResponseCode == 200) {\n         return readCreateResponse(httpsURLConnection);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTQ1Mjg0Mw=="}, "originalCommit": {"oid": "876feb5884b8c6ce98293d9e83153ecf45ea84cb"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTQ2MTcyNw==", "bodyText": "Makes sense. Updated. PTAL.", "url": "https://github.com/firebase/firebase-android-sdk/pull/1115#discussion_r365461727", "createdAt": "2020-01-10T22:51:23Z", "author": {"login": "ankitaj224"}, "path": "firebase-installations/src/main/java/com/google/firebase/installations/remote/FirebaseInstallationServiceClient.java", "diffHunk": "@@ -142,22 +142,25 @@ public InstallationResponse createFirebaseInstallation(\n         httpsURLConnection.addRequestProperty(X_ANDROID_IID_MIGRATION_KEY, iidToken);\n       }\n \n-      GZIPOutputStream gzipOutputStream =\n-          new GZIPOutputStream(httpsURLConnection.getOutputStream());\n+      GZIPOutputStream gzipOutputStream = null;\n       try {\n+        gzipOutputStream = new GZIPOutputStream(httpsURLConnection.getOutputStream());\n         gzipOutputStream.write(\n             buildCreateFirebaseInstallationRequestBody(fid, appId).toString().getBytes(\"UTF-8\"));\n       } catch (JSONException e) {\n         throw new IllegalStateException(e);\n       } finally {\n-        gzipOutputStream.close();\n+        if (gzipOutputStream != null) {\n+          gzipOutputStream.close();\n+        }\n       }\n \n       int httpResponseCode = httpsURLConnection.getResponseCode();\n \n       if (httpResponseCode == 200) {\n         return readCreateResponse(httpsURLConnection);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTQ1Mjg0Mw=="}, "originalCommit": {"oid": "876feb5884b8c6ce98293d9e83153ecf45ea84cb"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1NzQ5NTc5OnYy", "diffSide": "RIGHT", "path": "firebase-installations/src/main/java/com/google/firebase/installations/remote/FirebaseInstallationServiceClient.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQyMzowMTo1OVrOFciK-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQyMzoyMDowMVrOFciZzA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTQ2NDMxMg==", "bodyText": "Please make the name describe what is being written to the output stream.\nAlso, why did you factor it out?", "url": "https://github.com/firebase/firebase-android-sdk/pull/1115#discussion_r365464312", "createdAt": "2020-01-10T23:01:59Z", "author": {"login": "fredquintana"}, "path": "firebase-installations/src/main/java/com/google/firebase/installations/remote/FirebaseInstallationServiceClient.java", "diffHunk": "@@ -134,43 +134,53 @@ public InstallationResponse createFirebaseInstallation(\n                 apiKey));\n     while (retryCount <= MAX_RETRIES) {\n       HttpsURLConnection httpsURLConnection = openHttpsURLConnection(url);\n-      httpsURLConnection.setRequestMethod(\"POST\");\n-      httpsURLConnection.setDoOutput(true);\n \n-      // Note: Set the iid token header for authenticating the Instance-ID migrating to FIS.\n-      if (iidToken != null) {\n-        httpsURLConnection.addRequestProperty(X_ANDROID_IID_MIGRATION_KEY, iidToken);\n-      }\n-\n-      GZIPOutputStream gzipOutputStream =\n-          new GZIPOutputStream(httpsURLConnection.getOutputStream());\n       try {\n-        gzipOutputStream.write(\n-            buildCreateFirebaseInstallationRequestBody(fid, appId).toString().getBytes(\"UTF-8\"));\n-      } catch (JSONException e) {\n-        throw new IllegalStateException(e);\n-      } finally {\n-        gzipOutputStream.close();\n-      }\n+        httpsURLConnection.setRequestMethod(\"POST\");\n+        httpsURLConnection.setDoOutput(true);\n \n-      int httpResponseCode = httpsURLConnection.getResponseCode();\n+        // Note: Set the iid token header for authenticating the Instance-ID migrating to FIS.\n+        if (iidToken != null) {\n+          httpsURLConnection.addRequestProperty(X_ANDROID_IID_MIGRATION_KEY, iidToken);\n+        }\n \n-      if (httpResponseCode == 200) {\n-        return readCreateResponse(httpsURLConnection);\n-      }\n+        writeToOutputStream(httpsURLConnection, fid, appId);\n \n-      if (httpResponseCode == 429 || (httpResponseCode >= 500 && httpResponseCode < 600)) {\n-        retryCount++;\n-        continue;\n-      }\n+        int httpResponseCode = httpsURLConnection.getResponseCode();\n \n-      // Return empty installation response with BAD_CONFIG response code after max retries\n-      return InstallationResponse.builder().setResponseCode(ResponseCode.BAD_CONFIG).build();\n+        if (httpResponseCode == 200) {\n+          return readCreateResponse(httpsURLConnection);\n+        }\n+\n+        if (httpResponseCode == 429 || (httpResponseCode >= 500 && httpResponseCode < 600)) {\n+          retryCount++;\n+          continue;\n+        }\n+\n+        // Return empty installation response with BAD_CONFIG response code after max retries\n+        return InstallationResponse.builder().setResponseCode(ResponseCode.BAD_CONFIG).build();\n+      } finally {\n+        httpsURLConnection.disconnect();\n+      }\n     }\n \n     throw new IOException();\n   }\n \n+  private void writeToOutputStream(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cf10e03bf3b08053683e7b61a00bdb86a308e649"}, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTQ2ODEwOA==", "bodyText": "Updated.", "url": "https://github.com/firebase/firebase-android-sdk/pull/1115#discussion_r365468108", "createdAt": "2020-01-10T23:20:01Z", "author": {"login": "ankitaj224"}, "path": "firebase-installations/src/main/java/com/google/firebase/installations/remote/FirebaseInstallationServiceClient.java", "diffHunk": "@@ -134,43 +134,53 @@ public InstallationResponse createFirebaseInstallation(\n                 apiKey));\n     while (retryCount <= MAX_RETRIES) {\n       HttpsURLConnection httpsURLConnection = openHttpsURLConnection(url);\n-      httpsURLConnection.setRequestMethod(\"POST\");\n-      httpsURLConnection.setDoOutput(true);\n \n-      // Note: Set the iid token header for authenticating the Instance-ID migrating to FIS.\n-      if (iidToken != null) {\n-        httpsURLConnection.addRequestProperty(X_ANDROID_IID_MIGRATION_KEY, iidToken);\n-      }\n-\n-      GZIPOutputStream gzipOutputStream =\n-          new GZIPOutputStream(httpsURLConnection.getOutputStream());\n       try {\n-        gzipOutputStream.write(\n-            buildCreateFirebaseInstallationRequestBody(fid, appId).toString().getBytes(\"UTF-8\"));\n-      } catch (JSONException e) {\n-        throw new IllegalStateException(e);\n-      } finally {\n-        gzipOutputStream.close();\n-      }\n+        httpsURLConnection.setRequestMethod(\"POST\");\n+        httpsURLConnection.setDoOutput(true);\n \n-      int httpResponseCode = httpsURLConnection.getResponseCode();\n+        // Note: Set the iid token header for authenticating the Instance-ID migrating to FIS.\n+        if (iidToken != null) {\n+          httpsURLConnection.addRequestProperty(X_ANDROID_IID_MIGRATION_KEY, iidToken);\n+        }\n \n-      if (httpResponseCode == 200) {\n-        return readCreateResponse(httpsURLConnection);\n-      }\n+        writeToOutputStream(httpsURLConnection, fid, appId);\n \n-      if (httpResponseCode == 429 || (httpResponseCode >= 500 && httpResponseCode < 600)) {\n-        retryCount++;\n-        continue;\n-      }\n+        int httpResponseCode = httpsURLConnection.getResponseCode();\n \n-      // Return empty installation response with BAD_CONFIG response code after max retries\n-      return InstallationResponse.builder().setResponseCode(ResponseCode.BAD_CONFIG).build();\n+        if (httpResponseCode == 200) {\n+          return readCreateResponse(httpsURLConnection);\n+        }\n+\n+        if (httpResponseCode == 429 || (httpResponseCode >= 500 && httpResponseCode < 600)) {\n+          retryCount++;\n+          continue;\n+        }\n+\n+        // Return empty installation response with BAD_CONFIG response code after max retries\n+        return InstallationResponse.builder().setResponseCode(ResponseCode.BAD_CONFIG).build();\n+      } finally {\n+        httpsURLConnection.disconnect();\n+      }\n     }\n \n     throw new IOException();\n   }\n \n+  private void writeToOutputStream(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTQ2NDMxMg=="}, "originalCommit": {"oid": "cf10e03bf3b08053683e7b61a00bdb86a308e649"}, "originalPosition": 63}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 911, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}