{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg1MTc3MTYz", "number": 1975, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQyMjozMjoyM1rOEjWIvQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQyMjozMjoyM1rOEjWIvQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1NDk4MzAxOnYy", "diffSide": "RIGHT", "path": "firebase-firestore/src/androidTest/java/com/google/firebase/firestore/QueryTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQyMjozMjoyM1rOHRpnKg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQxNDoyNjoxNVrOHSElHA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODI2OTYxMA==", "bodyText": "nit: extra whitespace", "url": "https://github.com/firebase/firebase-android-sdk/pull/1975#discussion_r488269610", "createdAt": "2020-09-14T22:32:23Z", "author": {"login": "wilhuff"}, "path": "firebase-firestore/src/androidTest/java/com/google/firebase/firestore/QueryTest.java", "diffHunk": "@@ -640,19 +638,21 @@ public void testQueriesCanUseNotInFilters() {\n \n     // Search for zips not matching 98101, 98103, or [98101, 98102].\n     Map<String, Map<String, Object>> expectedDocsMap = Maps.newHashMap(allDocs);\n-    expectedDocsMap.remove(\"a\");\n     expectedDocsMap.remove(\"c\");\n-    expectedDocsMap.remove(\"g\");\n-    expectedDocsMap.remove(\"h\");\n+    expectedDocsMap.remove(\"d\");\n+    expectedDocsMap.remove(\"f\");\n+    expectedDocsMap.remove(\"i\");\n+    expectedDocsMap.remove(\"j\");\n \n     QuerySnapshot snapshot =\n         waitFor(collection.whereNotIn(\"zip\", asList(98101L, 98103L, asList(98101L, 98102L))).get());\n     assertEquals(Lists.newArrayList(expectedDocsMap.values()), querySnapshotToValues(snapshot));\n \n-    // With objects.\n+    //  With objects.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f1bacc622e4c9c112ee3da0c2eab3bfa4c5d1ff9"}, "originalPosition": 136}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODcxMTQ1Mg==", "bodyText": "removed.", "url": "https://github.com/firebase/firebase-android-sdk/pull/1975#discussion_r488711452", "createdAt": "2020-09-15T14:26:15Z", "author": {"login": "thebrianchen"}, "path": "firebase-firestore/src/androidTest/java/com/google/firebase/firestore/QueryTest.java", "diffHunk": "@@ -640,19 +638,21 @@ public void testQueriesCanUseNotInFilters() {\n \n     // Search for zips not matching 98101, 98103, or [98101, 98102].\n     Map<String, Map<String, Object>> expectedDocsMap = Maps.newHashMap(allDocs);\n-    expectedDocsMap.remove(\"a\");\n     expectedDocsMap.remove(\"c\");\n-    expectedDocsMap.remove(\"g\");\n-    expectedDocsMap.remove(\"h\");\n+    expectedDocsMap.remove(\"d\");\n+    expectedDocsMap.remove(\"f\");\n+    expectedDocsMap.remove(\"i\");\n+    expectedDocsMap.remove(\"j\");\n \n     QuerySnapshot snapshot =\n         waitFor(collection.whereNotIn(\"zip\", asList(98101L, 98103L, asList(98101L, 98102L))).get());\n     assertEquals(Lists.newArrayList(expectedDocsMap.values()), querySnapshotToValues(snapshot));\n \n-    // With objects.\n+    //  With objects.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODI2OTYxMA=="}, "originalCommit": {"oid": "f1bacc622e4c9c112ee3da0c2eab3bfa4c5d1ff9"}, "originalPosition": 136}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1174, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}