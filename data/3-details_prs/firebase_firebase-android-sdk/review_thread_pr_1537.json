{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE1MzY2NzYw", "number": 1537, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQxODo0MDozMVrOD6vTmw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQxOToxNzoxOFrOD6wAkg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyOTE5MDY3OnYy", "diffSide": "RIGHT", "path": "firebase-installations/src/main/java/com/google/firebase/installations/remote/FirebaseInstallationServiceClient.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQxODo0MDozMVrOGSvjDg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQxOToxNTo0OVrOGSwmXA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjMwNjU3NA==", "bodyText": "I don't think that this TextUtils.isEmpty(appId) ? \"\" : appId is necessary.\nJust add appId and String.format will replace it by an empty String.", "url": "https://github.com/firebase/firebase-android-sdk/pull/1537#discussion_r422306574", "createdAt": "2020-05-08T18:40:31Z", "author": {"login": "andirayo"}, "path": "firebase-installations/src/main/java/com/google/firebase/installations/remote/FirebaseInstallationServiceClient.java", "diffHunk": "@@ -522,13 +525,21 @@ static long parseTokenExpirationTimestamp(String expiresIn) {\n         : Long.parseLong(expiresIn.substring(0, expiresIn.length() - 1));\n   }\n \n-  private static void logFisCommunicationError(HttpURLConnection conn) {\n+  private static void logFisCommunicationError(HttpURLConnection conn, String firebaseOptions) {\n     String logString = readErrorResponse(conn);\n     if (!TextUtils.isEmpty(logString)) {\n       Log.w(FIS_TAG, logString);\n+      Log.w(FIS_TAG, firebaseOptions);\n     }\n   }\n \n+  private String availableFirebaseOptions(\n+      @Nullable String appId, @NonNull String apiKey, @NonNull String projectId) {\n+    return String.format(\n+        \"Firebase options used while communicating with Firebase server APIs: %s, %s, %s\",\n+        TextUtils.isEmpty(appId) ? \"\" : appId, apiKey, projectId);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9ae13d54632e945d586768ce49ee6842adfdb107"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjMxNzg5Nw==", "bodyText": "Unless otherwise specified, passing a null argument to any method or constructor in this class will cause a NullPointerException to be thrown.\nhttps://developer.android.com/reference/java/util/Formatter\nIts safe to format on our end correctly vs depending on underlying Formatter impl.", "url": "https://github.com/firebase/firebase-android-sdk/pull/1537#discussion_r422317897", "createdAt": "2020-05-08T19:03:37Z", "author": {"login": "ankitaj224"}, "path": "firebase-installations/src/main/java/com/google/firebase/installations/remote/FirebaseInstallationServiceClient.java", "diffHunk": "@@ -522,13 +525,21 @@ static long parseTokenExpirationTimestamp(String expiresIn) {\n         : Long.parseLong(expiresIn.substring(0, expiresIn.length() - 1));\n   }\n \n-  private static void logFisCommunicationError(HttpURLConnection conn) {\n+  private static void logFisCommunicationError(HttpURLConnection conn, String firebaseOptions) {\n     String logString = readErrorResponse(conn);\n     if (!TextUtils.isEmpty(logString)) {\n       Log.w(FIS_TAG, logString);\n+      Log.w(FIS_TAG, firebaseOptions);\n     }\n   }\n \n+  private String availableFirebaseOptions(\n+      @Nullable String appId, @NonNull String apiKey, @NonNull String projectId) {\n+    return String.format(\n+        \"Firebase options used while communicating with Firebase server APIs: %s, %s, %s\",\n+        TextUtils.isEmpty(appId) ? \"\" : appId, apiKey, projectId);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjMwNjU3NA=="}, "originalCommit": {"oid": "9ae13d54632e945d586768ce49ee6842adfdb107"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjMyMzgwNA==", "bodyText": "https://screenshot.googleplex.com/JVHfUAGMKGt", "url": "https://github.com/firebase/firebase-android-sdk/pull/1537#discussion_r422323804", "createdAt": "2020-05-08T19:15:49Z", "author": {"login": "andirayo"}, "path": "firebase-installations/src/main/java/com/google/firebase/installations/remote/FirebaseInstallationServiceClient.java", "diffHunk": "@@ -522,13 +525,21 @@ static long parseTokenExpirationTimestamp(String expiresIn) {\n         : Long.parseLong(expiresIn.substring(0, expiresIn.length() - 1));\n   }\n \n-  private static void logFisCommunicationError(HttpURLConnection conn) {\n+  private static void logFisCommunicationError(HttpURLConnection conn, String firebaseOptions) {\n     String logString = readErrorResponse(conn);\n     if (!TextUtils.isEmpty(logString)) {\n       Log.w(FIS_TAG, logString);\n+      Log.w(FIS_TAG, firebaseOptions);\n     }\n   }\n \n+  private String availableFirebaseOptions(\n+      @Nullable String appId, @NonNull String apiKey, @NonNull String projectId) {\n+    return String.format(\n+        \"Firebase options used while communicating with Firebase server APIs: %s, %s, %s\",\n+        TextUtils.isEmpty(appId) ? \"\" : appId, apiKey, projectId);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjMwNjU3NA=="}, "originalCommit": {"oid": "9ae13d54632e945d586768ce49ee6842adfdb107"}, "originalPosition": 47}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyOTE5NTY4OnYy", "diffSide": "RIGHT", "path": "firebase-installations/src/main/java/com/google/firebase/installations/remote/FirebaseInstallationServiceClient.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQxODo0MTo1NVrOGSvl4Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQxODo0NDowNFrOGSvqJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjMwNzI5Nw==", "bodyText": "... %s, %s (%s)\", apiKey, projectId, appId", "url": "https://github.com/firebase/firebase-android-sdk/pull/1537#discussion_r422307297", "createdAt": "2020-05-08T18:41:55Z", "author": {"login": "andirayo"}, "path": "firebase-installations/src/main/java/com/google/firebase/installations/remote/FirebaseInstallationServiceClient.java", "diffHunk": "@@ -522,13 +525,21 @@ static long parseTokenExpirationTimestamp(String expiresIn) {\n         : Long.parseLong(expiresIn.substring(0, expiresIn.length() - 1));\n   }\n \n-  private static void logFisCommunicationError(HttpURLConnection conn) {\n+  private static void logFisCommunicationError(HttpURLConnection conn, String firebaseOptions) {\n     String logString = readErrorResponse(conn);\n     if (!TextUtils.isEmpty(logString)) {\n       Log.w(FIS_TAG, logString);\n+      Log.w(FIS_TAG, firebaseOptions);\n     }\n   }\n \n+  private String availableFirebaseOptions(\n+      @Nullable String appId, @NonNull String apiKey, @NonNull String projectId) {\n+    return String.format(\n+        \"Firebase options used while communicating with Firebase server APIs: %s, %s, %s\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9ae13d54632e945d586768ce49ee6842adfdb107"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjMwODM4OQ==", "bodyText": "I would prefer this order, given that API key is the most important value and App ID is not always available.", "url": "https://github.com/firebase/firebase-android-sdk/pull/1537#discussion_r422308389", "createdAt": "2020-05-08T18:44:04Z", "author": {"login": "andirayo"}, "path": "firebase-installations/src/main/java/com/google/firebase/installations/remote/FirebaseInstallationServiceClient.java", "diffHunk": "@@ -522,13 +525,21 @@ static long parseTokenExpirationTimestamp(String expiresIn) {\n         : Long.parseLong(expiresIn.substring(0, expiresIn.length() - 1));\n   }\n \n-  private static void logFisCommunicationError(HttpURLConnection conn) {\n+  private static void logFisCommunicationError(HttpURLConnection conn, String firebaseOptions) {\n     String logString = readErrorResponse(conn);\n     if (!TextUtils.isEmpty(logString)) {\n       Log.w(FIS_TAG, logString);\n+      Log.w(FIS_TAG, firebaseOptions);\n     }\n   }\n \n+  private String availableFirebaseOptions(\n+      @Nullable String appId, @NonNull String apiKey, @NonNull String projectId) {\n+    return String.format(\n+        \"Firebase options used while communicating with Firebase server APIs: %s, %s, %s\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjMwNzI5Nw=="}, "originalCommit": {"oid": "9ae13d54632e945d586768ce49ee6842adfdb107"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyOTE5ODgyOnYy", "diffSide": "RIGHT", "path": "firebase-installations/src/main/java/com/google/firebase/installations/remote/FirebaseInstallationServiceClient.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQxODo0MzowMFrOGSvn3g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQxODo0MzowMFrOGSvn3g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjMwNzgwNg==", "bodyText": "rather than repeating availableFirebaseOptions( 3 times, I recommend calling #availableFirebaseOptions from within the #logFisCommunicationError method.", "url": "https://github.com/firebase/firebase-android-sdk/pull/1537#discussion_r422307806", "createdAt": "2020-05-08T18:43:00Z", "author": {"login": "andirayo"}, "path": "firebase-installations/src/main/java/com/google/firebase/installations/remote/FirebaseInstallationServiceClient.java", "diffHunk": "@@ -165,7 +165,8 @@ public InstallationResponse createFirebaseInstallation(\n           return readCreateResponse(httpURLConnection);\n         }\n \n-        logFisCommunicationError(httpURLConnection);\n+        logFisCommunicationError(\n+            httpURLConnection, availableFirebaseOptions(appId, apiKey, projectID));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9ae13d54632e945d586768ce49ee6842adfdb107"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyOTE5OTc0OnYy", "diffSide": "RIGHT", "path": "firebase-installations/src/main/java/com/google/firebase/installations/remote/FirebaseInstallationServiceClient.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQxODo0MzoxOFrOGSvoag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQxODo0MzoxOFrOGSvoag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjMwNzk0Ng==", "bodyText": "I recommend calling #availableFirebaseOptions here.", "url": "https://github.com/firebase/firebase-android-sdk/pull/1537#discussion_r422307946", "createdAt": "2020-05-08T18:43:18Z", "author": {"login": "andirayo"}, "path": "firebase-installations/src/main/java/com/google/firebase/installations/remote/FirebaseInstallationServiceClient.java", "diffHunk": "@@ -522,13 +525,21 @@ static long parseTokenExpirationTimestamp(String expiresIn) {\n         : Long.parseLong(expiresIn.substring(0, expiresIn.length() - 1));\n   }\n \n-  private static void logFisCommunicationError(HttpURLConnection conn) {\n+  private static void logFisCommunicationError(HttpURLConnection conn, String firebaseOptions) {\n     String logString = readErrorResponse(conn);\n     if (!TextUtils.isEmpty(logString)) {\n       Log.w(FIS_TAG, logString);\n+      Log.w(FIS_TAG, firebaseOptions);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9ae13d54632e945d586768ce49ee6842adfdb107"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyOTMwNTc4OnYy", "diffSide": "RIGHT", "path": "firebase-installations/src/main/java/com/google/firebase/installations/remote/FirebaseInstallationServiceClient.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQxOToxNzoxOFrOGSwpJQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQxOToxNzoxOFrOGSwpJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjMyNDUxNw==", "bodyText": "It's not that I feel strongly about it, but this is not really necessary.\nHow about this compromise:\nreturn String.format(\n        \"Firebase options used while communicating with Firebase server APIs: %s, %s%s\",\n        apiKey, projectId, TextUtils.isEmpty(appId) ? \"\" : \", \" + appId);", "url": "https://github.com/firebase/firebase-android-sdk/pull/1537#discussion_r422324517", "createdAt": "2020-05-08T19:17:18Z", "author": {"login": "andirayo"}, "path": "firebase-installations/src/main/java/com/google/firebase/installations/remote/FirebaseInstallationServiceClient.java", "diffHunk": "@@ -522,13 +522,25 @@ static long parseTokenExpirationTimestamp(String expiresIn) {\n         : Long.parseLong(expiresIn.substring(0, expiresIn.length() - 1));\n   }\n \n-  private static void logFisCommunicationError(HttpURLConnection conn) {\n+  private static void logFisCommunicationError(\n+      HttpURLConnection conn,\n+      @Nullable String appId,\n+      @NonNull String apiKey,\n+      @NonNull String projectId) {\n     String logString = readErrorResponse(conn);\n     if (!TextUtils.isEmpty(logString)) {\n       Log.w(FIS_TAG, logString);\n+      Log.w(FIS_TAG, availableFirebaseOptions(appId, apiKey, projectId));\n     }\n   }\n \n+  private static String availableFirebaseOptions(\n+      @Nullable String appId, @NonNull String apiKey, @NonNull String projectId) {\n+    return String.format(\n+        \"Firebase options used while communicating with Firebase server APIs: %s, %s, %s\",\n+        apiKey, projectId, TextUtils.isEmpty(appId) ? \"\" : appId);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6b2f634aaacb8660166dffe32da49d7033ca77fa"}, "originalPosition": 48}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1351, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}