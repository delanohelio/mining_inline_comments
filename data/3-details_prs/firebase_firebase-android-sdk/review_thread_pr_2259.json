{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQwNjI1ODQ1", "number": 2259, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQxNTo1MDo0NFrOFLVVrQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQxNjoxODowOVrOFLWDBQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ3NDI4MjY5OnYy", "diffSide": "RIGHT", "path": "firebase-ml-modeldownloader/firebase-ml-modeldownloader.gradle", "isResolved": false, "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQxNTo1MDo0NFrOIOci9g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNlQxNToxODoyNVrOIPGhsQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjAxODY3OA==", "bodyText": "add option 'lite' (see firebase-firestore.gradle )", "url": "https://github.com/firebase/firebase-android-sdk/pull/2259#discussion_r552018678", "createdAt": "2021-01-05T15:50:44Z", "author": {"login": "rlazo"}, "path": "firebase-ml-modeldownloader/firebase-ml-modeldownloader.gradle", "diffHunk": "@@ -14,13 +14,29 @@\n \n plugins {\n     id 'firebase-library'\n+    id 'com.google.protobuf'\n }\n \n firebaseLibrary {\n     testLab.enabled = false\n     publishJavadoc = false\n }\n \n+protobuf {\n+    // Configure the protoc executable\n+    protoc {\n+        // Download from repositories\n+        artifact = \"com.google.protobuf:protoc:$protocVersion\"\n+    }\n+    generateProtoTasks {\n+        all().each { task ->\n+            task.builtins {\n+                java { }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7c80a09c9a626a10cca11d7da57bd50c4db301a9"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjA2Nzk3Mg==", "bodyText": "If I add that then - JsonFormat.parser().merge fails (based on testLogRequest_jsontToProto) which doesn't use lite option. Can you suggest an alternative?", "url": "https://github.com/firebase/firebase-android-sdk/pull/2259#discussion_r552067972", "createdAt": "2021-01-05T17:06:56Z", "author": {"login": "annzimmer"}, "path": "firebase-ml-modeldownloader/firebase-ml-modeldownloader.gradle", "diffHunk": "@@ -14,13 +14,29 @@\n \n plugins {\n     id 'firebase-library'\n+    id 'com.google.protobuf'\n }\n \n firebaseLibrary {\n     testLab.enabled = false\n     publishJavadoc = false\n }\n \n+protobuf {\n+    // Configure the protoc executable\n+    protoc {\n+        // Download from repositories\n+        artifact = \"com.google.protobuf:protoc:$protocVersion\"\n+    }\n+    generateProtoTasks {\n+        all().each { task ->\n+            task.builtins {\n+                java { }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjAxODY3OA=="}, "originalCommit": {"oid": "7c80a09c9a626a10cca11d7da57bd50c4db301a9"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjEzMTI2Ng==", "bodyText": "Also note - the proto is only for testing and shouldn't affect the sdk sizing.", "url": "https://github.com/firebase/firebase-android-sdk/pull/2259#discussion_r552131266", "createdAt": "2021-01-05T19:00:11Z", "author": {"login": "annzimmer"}, "path": "firebase-ml-modeldownloader/firebase-ml-modeldownloader.gradle", "diffHunk": "@@ -14,13 +14,29 @@\n \n plugins {\n     id 'firebase-library'\n+    id 'com.google.protobuf'\n }\n \n firebaseLibrary {\n     testLab.enabled = false\n     publishJavadoc = false\n }\n \n+protobuf {\n+    // Configure the protoc executable\n+    protoc {\n+        // Download from repositories\n+        artifact = \"com.google.protobuf:protoc:$protocVersion\"\n+    }\n+    generateProtoTasks {\n+        all().each { task ->\n+            task.builtins {\n+                java { }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjAxODY3OA=="}, "originalCommit": {"oid": "7c80a09c9a626a10cca11d7da57bd50c4db301a9"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjE0MzE3MQ==", "bodyText": "Oh, right. JsonFormat parser actually requires the full runtime to work. Since it's used for tests, I think you can do the same crashlytics is doing https://github.com/firebase/firebase-android-sdk/blob/master/firebase-crashlytics/firebase-crashlytics.gradle#L88\njust use testImplementation instead of androidTestImplementation", "url": "https://github.com/firebase/firebase-android-sdk/pull/2259#discussion_r552143171", "createdAt": "2021-01-05T19:23:55Z", "author": {"login": "rlazo"}, "path": "firebase-ml-modeldownloader/firebase-ml-modeldownloader.gradle", "diffHunk": "@@ -14,13 +14,29 @@\n \n plugins {\n     id 'firebase-library'\n+    id 'com.google.protobuf'\n }\n \n firebaseLibrary {\n     testLab.enabled = false\n     publishJavadoc = false\n }\n \n+protobuf {\n+    // Configure the protoc executable\n+    protoc {\n+        // Download from repositories\n+        artifact = \"com.google.protobuf:protoc:$protocVersion\"\n+    }\n+    generateProtoTasks {\n+        all().each { task ->\n+            task.builtins {\n+                java { }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjAxODY3OA=="}, "originalCommit": {"oid": "7c80a09c9a626a10cca11d7da57bd50c4db301a9"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjE4MzkxMw==", "bodyText": "removed all the androidTestImplementation - these were not used. The encoding was already there for the regular implementation level (and validated it is needed at that level)", "url": "https://github.com/firebase/firebase-android-sdk/pull/2259#discussion_r552183913", "createdAt": "2021-01-05T20:45:16Z", "author": {"login": "annzimmer"}, "path": "firebase-ml-modeldownloader/firebase-ml-modeldownloader.gradle", "diffHunk": "@@ -14,13 +14,29 @@\n \n plugins {\n     id 'firebase-library'\n+    id 'com.google.protobuf'\n }\n \n firebaseLibrary {\n     testLab.enabled = false\n     publishJavadoc = false\n }\n \n+protobuf {\n+    // Configure the protoc executable\n+    protoc {\n+        // Download from repositories\n+        artifact = \"com.google.protobuf:protoc:$protocVersion\"\n+    }\n+    generateProtoTasks {\n+        all().each { task ->\n+            task.builtins {\n+                java { }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjAxODY3OA=="}, "originalCommit": {"oid": "7c80a09c9a626a10cca11d7da57bd50c4db301a9"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjI5NTczMA==", "bodyText": "AFAIK you can just get rid of the whole generateProtoTasks sections.", "url": "https://github.com/firebase/firebase-android-sdk/pull/2259#discussion_r552295730", "createdAt": "2021-01-06T00:51:27Z", "author": {"login": "rlazo"}, "path": "firebase-ml-modeldownloader/firebase-ml-modeldownloader.gradle", "diffHunk": "@@ -14,13 +14,29 @@\n \n plugins {\n     id 'firebase-library'\n+    id 'com.google.protobuf'\n }\n \n firebaseLibrary {\n     testLab.enabled = false\n     publishJavadoc = false\n }\n \n+protobuf {\n+    // Configure the protoc executable\n+    protoc {\n+        // Download from repositories\n+        artifact = \"com.google.protobuf:protoc:$protocVersion\"\n+    }\n+    generateProtoTasks {\n+        all().each { task ->\n+            task.builtins {\n+                java { }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjAxODY3OA=="}, "originalCommit": {"oid": "7c80a09c9a626a10cca11d7da57bd50c4db301a9"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjY4NDMxMA==", "bodyText": "Appears required - gives error when removed:\nExecution failed for task ':firebase-ml-modeldownloader:generateDebugUnitTestProto'.\nprotoc: stdout: . stderr: Missing output directives.", "url": "https://github.com/firebase/firebase-android-sdk/pull/2259#discussion_r552684310", "createdAt": "2021-01-06T14:52:31Z", "author": {"login": "annzimmer"}, "path": "firebase-ml-modeldownloader/firebase-ml-modeldownloader.gradle", "diffHunk": "@@ -14,13 +14,29 @@\n \n plugins {\n     id 'firebase-library'\n+    id 'com.google.protobuf'\n }\n \n firebaseLibrary {\n     testLab.enabled = false\n     publishJavadoc = false\n }\n \n+protobuf {\n+    // Configure the protoc executable\n+    protoc {\n+        // Download from repositories\n+        artifact = \"com.google.protobuf:protoc:$protocVersion\"\n+    }\n+    generateProtoTasks {\n+        all().each { task ->\n+            task.builtins {\n+                java { }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjAxODY3OA=="}, "originalCommit": {"oid": "7c80a09c9a626a10cca11d7da57bd50c4db301a9"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjcwNjQ4MQ==", "bodyText": "Got it. Thanks for following through!", "url": "https://github.com/firebase/firebase-android-sdk/pull/2259#discussion_r552706481", "createdAt": "2021-01-06T15:18:25Z", "author": {"login": "rlazo"}, "path": "firebase-ml-modeldownloader/firebase-ml-modeldownloader.gradle", "diffHunk": "@@ -14,13 +14,29 @@\n \n plugins {\n     id 'firebase-library'\n+    id 'com.google.protobuf'\n }\n \n firebaseLibrary {\n     testLab.enabled = false\n     publishJavadoc = false\n }\n \n+protobuf {\n+    // Configure the protoc executable\n+    protoc {\n+        // Download from repositories\n+        artifact = \"com.google.protobuf:protoc:$protocVersion\"\n+    }\n+    generateProtoTasks {\n+        all().each { task ->\n+            task.builtins {\n+                java { }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjAxODY3OA=="}, "originalCommit": {"oid": "7c80a09c9a626a10cca11d7da57bd50c4db301a9"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ3NDI4NDM3OnYy", "diffSide": "RIGHT", "path": "firebase-ml-modeldownloader/firebase-ml-modeldownloader.gradle", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQxNTo1MToxMVrOIOckDQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQxNzowNzowM1rOIOfj0w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjAxODk1Nw==", "bodyText": "any reason to move away from the common version?", "url": "https://github.com/firebase/firebase-android-sdk/pull/2259#discussion_r552018957", "createdAt": "2021-01-05T15:51:11Z", "author": {"login": "rlazo"}, "path": "firebase-ml-modeldownloader/firebase-ml-modeldownloader.gradle", "diffHunk": "@@ -43,25 +59,39 @@ android {\n }\n \n dependencies {\n+    implementation project(':encoders:firebase-encoders')\n+    implementation project(':encoders:firebase-encoders-json')\n     implementation project(':firebase-common')\n     implementation project(':firebase-components')\n+    implementation project(':firebase-datatransport')\n     implementation project(':firebase-installations-interop')\n+    implementation project(':transport:transport-api')\n+    implementation project(':transport:transport-runtime')\n     runtimeOnly project(':firebase-installations')\n \n+    implementation 'androidx.annotation:annotation:1.1.0'\n     implementation 'com.google.android.gms:play-services-tasks:17.2.0'\n     implementation 'com.google.auto.service:auto-service-annotations:1.0-rc6'\n     implementation 'javax.inject:javax.inject:1'\n \n     compileOnly \"com.google.auto.value:auto-value-annotations:1.6.6\"\n     annotationProcessor \"com.google.auto.value:auto-value:1.6.5\"\n+    annotationProcessor project(\":encoders:firebase-encoders-processor\")\n \n     testImplementation 'androidx.test:core:1.3.0'\n     testImplementation 'com.github.tomakehurst:wiremock-standalone:2.26.3'\n-    testImplementation \"com.google.truth:truth:$googleTruthVersion\"\n-    testImplementation 'junit:junit:4.13.1'\n+    testImplementation \"com.google.truth:truth:1.0.1\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7c80a09c9a626a10cca11d7da57bd50c4db301a9"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjA2ODA1MQ==", "bodyText": "fixed", "url": "https://github.com/firebase/firebase-android-sdk/pull/2259#discussion_r552068051", "createdAt": "2021-01-05T17:07:03Z", "author": {"login": "annzimmer"}, "path": "firebase-ml-modeldownloader/firebase-ml-modeldownloader.gradle", "diffHunk": "@@ -43,25 +59,39 @@ android {\n }\n \n dependencies {\n+    implementation project(':encoders:firebase-encoders')\n+    implementation project(':encoders:firebase-encoders-json')\n     implementation project(':firebase-common')\n     implementation project(':firebase-components')\n+    implementation project(':firebase-datatransport')\n     implementation project(':firebase-installations-interop')\n+    implementation project(':transport:transport-api')\n+    implementation project(':transport:transport-runtime')\n     runtimeOnly project(':firebase-installations')\n \n+    implementation 'androidx.annotation:annotation:1.1.0'\n     implementation 'com.google.android.gms:play-services-tasks:17.2.0'\n     implementation 'com.google.auto.service:auto-service-annotations:1.0-rc6'\n     implementation 'javax.inject:javax.inject:1'\n \n     compileOnly \"com.google.auto.value:auto-value-annotations:1.6.6\"\n     annotationProcessor \"com.google.auto.value:auto-value:1.6.5\"\n+    annotationProcessor project(\":encoders:firebase-encoders-processor\")\n \n     testImplementation 'androidx.test:core:1.3.0'\n     testImplementation 'com.github.tomakehurst:wiremock-standalone:2.26.3'\n-    testImplementation \"com.google.truth:truth:$googleTruthVersion\"\n-    testImplementation 'junit:junit:4.13.1'\n+    testImplementation \"com.google.truth:truth:1.0.1\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjAxODk1Nw=="}, "originalCommit": {"oid": "7c80a09c9a626a10cca11d7da57bd50c4db301a9"}, "originalPosition": 57}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ3NDM5ODc3OnYy", "diffSide": "RIGHT", "path": "firebase-ml-modeldownloader/src/main/java/com/google/firebase/ml/modeldownloader/internal/SharedPreferencesUtil.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQxNjoxODowOVrOIOdqWw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQxNzowNzoyM1rOIOfkkQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjAzNjk1NQ==", "bodyText": "missing javadoc", "url": "https://github.com/firebase/firebase-android-sdk/pull/2259#discussion_r552036955", "createdAt": "2021-01-05T16:18:09Z", "author": {"login": "rlazo"}, "path": "firebase-ml-modeldownloader/src/main/java/com/google/firebase/ml/modeldownloader/internal/SharedPreferencesUtil.java", "diffHunk": "@@ -244,6 +250,68 @@ public synchronized void clearModelDetails(@NonNull String modelName) {\n     return customModels;\n   }\n \n+  /**\n+   * Should Firelog logging be enabled.\n+   *\n+   * @return whether or not firelog events should be logged. Default to true.\n+   */\n+  public synchronized boolean getCustomModelStatsCollectionFlag() {\n+    return getSharedPreferences()\n+        .getBoolean(\n+            String.format(EVENT_LOGGING_ENABLED_PATTERN, CUSTOM_MODEL_LIB, persistenceKey), true);\n+  }\n+\n+  /**\n+   * Set whether firelog logging should be enabled. When not explicitly set, the default is true.\n+   *\n+   * @param enable - False to turn off logging. True to turn on logging.\n+   */\n+  public synchronized void setCustomModelStatsCollectionEnabled(boolean enable) {\n+    getSharedPreferences()\n+        .edit()\n+        .putBoolean(\n+            String.format(EVENT_LOGGING_ENABLED_PATTERN, CUSTOM_MODEL_LIB, persistenceKey), enable)\n+        .apply();\n+  }\n+\n+  public synchronized long getModelDownloadBeginTimeMs(@NonNull CustomModel customModel) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7c80a09c9a626a10cca11d7da57bd50c4db301a9"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjA2ODI0MQ==", "bodyText": "done", "url": "https://github.com/firebase/firebase-android-sdk/pull/2259#discussion_r552068241", "createdAt": "2021-01-05T17:07:23Z", "author": {"login": "annzimmer"}, "path": "firebase-ml-modeldownloader/src/main/java/com/google/firebase/ml/modeldownloader/internal/SharedPreferencesUtil.java", "diffHunk": "@@ -244,6 +250,68 @@ public synchronized void clearModelDetails(@NonNull String modelName) {\n     return customModels;\n   }\n \n+  /**\n+   * Should Firelog logging be enabled.\n+   *\n+   * @return whether or not firelog events should be logged. Default to true.\n+   */\n+  public synchronized boolean getCustomModelStatsCollectionFlag() {\n+    return getSharedPreferences()\n+        .getBoolean(\n+            String.format(EVENT_LOGGING_ENABLED_PATTERN, CUSTOM_MODEL_LIB, persistenceKey), true);\n+  }\n+\n+  /**\n+   * Set whether firelog logging should be enabled. When not explicitly set, the default is true.\n+   *\n+   * @param enable - False to turn off logging. True to turn on logging.\n+   */\n+  public synchronized void setCustomModelStatsCollectionEnabled(boolean enable) {\n+    getSharedPreferences()\n+        .edit()\n+        .putBoolean(\n+            String.format(EVENT_LOGGING_ENABLED_PATTERN, CUSTOM_MODEL_LIB, persistenceKey), enable)\n+        .apply();\n+  }\n+\n+  public synchronized long getModelDownloadBeginTimeMs(@NonNull CustomModel customModel) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjAzNjk1NQ=="}, "originalCommit": {"oid": "7c80a09c9a626a10cca11d7da57bd50c4db301a9"}, "originalPosition": 50}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1035, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}