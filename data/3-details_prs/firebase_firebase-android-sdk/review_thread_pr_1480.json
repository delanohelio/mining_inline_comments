{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA1MjYyMTE1", "number": 1480, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QyMzo0MjoxNVrODzEtjQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxNDoxNzoxMlrODzwEHg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0ODgxMTY1OnYy", "diffSide": "RIGHT", "path": "ci/fireci/fireci/prow_utils.py", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QyMzo0MjoxNVrOGHf7-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxOTozNjo0NlrOGIkcNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDUxNjQ3Mw==", "bodyText": "I also see this being passed in as an arg from the prow config. Do we need both?", "url": "https://github.com/firebase/firebase-android-sdk/pull/1480#discussion_r410516473", "createdAt": "2020-04-17T23:42:15Z", "author": {"login": "ashwinraghav"}, "path": "ci/fireci/fireci/prow_utils.py", "diffHunk": "@@ -0,0 +1,45 @@\n+# Copyright 2020 Google LLC\n+#\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#      http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+\n+import logging\n+import os\n+import subprocess\n+\n+_logger = logging.getLogger('fireci.prow_utils')\n+\n+\n+def prow_job_log_link():\n+  \"\"\"Returns the link to the log of the current prow job.\"\"\"\n+  job_name = os.getenv('JOB_NAME')\n+  job_type = os.getenv('JOB_TYPE')\n+  build_id = os.getenv('BUILD_ID')\n+  repo_owner = os.getenv('REPO_OWNER')\n+  repo_name = os.getenv('REPO_NAME')\n+  pull_number = os.getenv('PULL_NUMBER')\n+\n+  domain = \"android-ci.firebaseopensource.com\"\n+  bucket = \"android-ci\"\n+\n+  dir_pre_submit = f'pr-logs/pull/{repo_owner}_{repo_name}/{pull_number}'\n+  dir_post_submit = \"logs\"\n+  directory = dir_pre_submit if job_type == 'presubmit' else dir_post_submit\n+  path = f'{job_name}/{build_id}'\n+\n+  return f'https://{domain}/view/gcs/{bucket}/{directory}/{path}'\n+\n+\n+def gcloud_identity_token():\n+  \"\"\"Returns an identity token with the current gcloud service account.\"\"\"\n+  result = subprocess.run(['gcloud', 'auth', 'print-identity-token'], stdout=subprocess.PIPE, check=True)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "34683b827b5e7ea873ecea752cd61659c569b869"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTYzODgzNg==", "bodyText": "With the way the job is invoked in prow, this is not needed. The reason why I want to keep it is that it makes it easier for me to test the code (e.g. uploading data from my laptop to a staging metric service in GCP). Does it make sense?", "url": "https://github.com/firebase/firebase-android-sdk/pull/1480#discussion_r411638836", "createdAt": "2020-04-20T19:36:46Z", "author": {"login": "yifanyang"}, "path": "ci/fireci/fireci/prow_utils.py", "diffHunk": "@@ -0,0 +1,45 @@\n+# Copyright 2020 Google LLC\n+#\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#      http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+\n+import logging\n+import os\n+import subprocess\n+\n+_logger = logging.getLogger('fireci.prow_utils')\n+\n+\n+def prow_job_log_link():\n+  \"\"\"Returns the link to the log of the current prow job.\"\"\"\n+  job_name = os.getenv('JOB_NAME')\n+  job_type = os.getenv('JOB_TYPE')\n+  build_id = os.getenv('BUILD_ID')\n+  repo_owner = os.getenv('REPO_OWNER')\n+  repo_name = os.getenv('REPO_NAME')\n+  pull_number = os.getenv('PULL_NUMBER')\n+\n+  domain = \"android-ci.firebaseopensource.com\"\n+  bucket = \"android-ci\"\n+\n+  dir_pre_submit = f'pr-logs/pull/{repo_owner}_{repo_name}/{pull_number}'\n+  dir_post_submit = \"logs\"\n+  directory = dir_pre_submit if job_type == 'presubmit' else dir_post_submit\n+  path = f'{job_name}/{build_id}'\n+\n+  return f'https://{domain}/view/gcs/{bucket}/{directory}/{path}'\n+\n+\n+def gcloud_identity_token():\n+  \"\"\"Returns an identity token with the current gcloud service account.\"\"\"\n+  result = subprocess.run(['gcloud', 'auth', 'print-identity-token'], stdout=subprocess.PIPE, check=True)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDUxNjQ3Mw=="}, "originalCommit": {"oid": "34683b827b5e7ea873ecea752cd61659c569b869"}, "originalPosition": 44}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0ODgxNDA4OnYy", "diffSide": "RIGHT", "path": "ci/fireci/fireci/uploader.py", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QyMzo0NDowOFrOGHf9cw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxOTozNjo0OVrOGIkcWA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDUxNjg1MQ==", "bodyText": "PULL_PULL_SHA  : Typo?", "url": "https://github.com/firebase/firebase-android-sdk/pull/1480#discussion_r410516851", "createdAt": "2020-04-17T23:44:08Z", "author": {"login": "ashwinraghav"}, "path": "ci/fireci/fireci/uploader.py", "diffHunk": "@@ -0,0 +1,59 @@\n+# Copyright 2020 Google LLC\n+#\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#      http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+\n+import json\n+import logging\n+import os\n+import requests\n+\n+from fireci import prow_utils\n+\n+_logger = logging.getLogger('fireci.uploader')\n+\n+\n+def post_report(\n+    test_report,\n+    metrics_service_url=os.getenv('METRICS_SERVICE_URL'),\n+    access_token=prow_utils.gcloud_identity_token()):\n+  \"\"\"Post a report to the metrics service backend.\"\"\"\n+\n+  endpoint = _construct_request_endpoint()\n+  headers = {'Authorization': f'Bearer {access_token}', 'Content-Type': 'application/json'}\n+  data = json.dumps(test_report)\n+\n+  _logger.info('Posting to the metrics service ...')\n+  _logger.info(f'Request endpoint: {endpoint}')\n+  _logger.info(f'Request data: {data}')\n+\n+  request_url = f'{metrics_service_url}{endpoint}'\n+  result = requests.post(request_url, data=data, headers=headers)\n+\n+  _logger.info(f'Response: {result.text}')\n+\n+\n+def _construct_request_endpoint():\n+  repo_owner = os.getenv('REPO_OWNER')\n+  repo_name = os.getenv('REPO_NAME')\n+  branch = os.getenv('PULL_BASE_REF')\n+  base_commit = os.getenv('PULL_BASE_SHA')\n+  head_commit = os.getenv('PULL_PULL_SHA')", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "34683b827b5e7ea873ecea752cd61659c569b869"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTYzODg3Mg==", "bodyText": "This env var is actually indeed called PULL_PULL_SHA. See prow doc here.", "url": "https://github.com/firebase/firebase-android-sdk/pull/1480#discussion_r411638872", "createdAt": "2020-04-20T19:36:49Z", "author": {"login": "yifanyang"}, "path": "ci/fireci/fireci/uploader.py", "diffHunk": "@@ -0,0 +1,59 @@\n+# Copyright 2020 Google LLC\n+#\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#      http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+\n+import json\n+import logging\n+import os\n+import requests\n+\n+from fireci import prow_utils\n+\n+_logger = logging.getLogger('fireci.uploader')\n+\n+\n+def post_report(\n+    test_report,\n+    metrics_service_url=os.getenv('METRICS_SERVICE_URL'),\n+    access_token=prow_utils.gcloud_identity_token()):\n+  \"\"\"Post a report to the metrics service backend.\"\"\"\n+\n+  endpoint = _construct_request_endpoint()\n+  headers = {'Authorization': f'Bearer {access_token}', 'Content-Type': 'application/json'}\n+  data = json.dumps(test_report)\n+\n+  _logger.info('Posting to the metrics service ...')\n+  _logger.info(f'Request endpoint: {endpoint}')\n+  _logger.info(f'Request data: {data}')\n+\n+  request_url = f'{metrics_service_url}{endpoint}'\n+  result = requests.post(request_url, data=data, headers=headers)\n+\n+  _logger.info(f'Response: {result.text}')\n+\n+\n+def _construct_request_endpoint():\n+  repo_owner = os.getenv('REPO_OWNER')\n+  repo_name = os.getenv('REPO_NAME')\n+  branch = os.getenv('PULL_BASE_REF')\n+  base_commit = os.getenv('PULL_BASE_SHA')\n+  head_commit = os.getenv('PULL_PULL_SHA')", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDUxNjg1MQ=="}, "originalCommit": {"oid": "34683b827b5e7ea873ecea752cd61659c569b869"}, "originalPosition": 50}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0ODgxNjk5OnYy", "diffSide": "RIGHT", "path": "ci/fireci/fireci/uploader.py", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QyMzo0Njo1NFrOGHf_XA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxNjo0Mjo0MVrOGIduTw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDUxNzM0MA==", "bodyText": "I realise you have just moved this, but Consider using https://uplink.readthedocs.io/en/stable/ if you want to take a declarative approach to building the http client", "url": "https://github.com/firebase/firebase-android-sdk/pull/1480#discussion_r410517340", "createdAt": "2020-04-17T23:46:54Z", "author": {"login": "ashwinraghav"}, "path": "ci/fireci/fireci/uploader.py", "diffHunk": "@@ -0,0 +1,59 @@\n+# Copyright 2020 Google LLC\n+#\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#      http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+\n+import json\n+import logging\n+import os\n+import requests\n+\n+from fireci import prow_utils\n+\n+_logger = logging.getLogger('fireci.uploader')\n+\n+\n+def post_report(\n+    test_report,\n+    metrics_service_url=os.getenv('METRICS_SERVICE_URL'),\n+    access_token=prow_utils.gcloud_identity_token()):\n+  \"\"\"Post a report to the metrics service backend.\"\"\"\n+\n+  endpoint = _construct_request_endpoint()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "34683b827b5e7ea873ecea752cd61659c569b869"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTQyNzg0NA==", "bodyText": "Just a consideration: Let's make sure we are confident in the future of uplink, i.e. requests is #4 most popular package on pypi while uplink is much less popular, so let's make sure it's not a personal project that is likely to get abandoned.", "url": "https://github.com/firebase/firebase-android-sdk/pull/1480#discussion_r411427844", "createdAt": "2020-04-20T14:33:10Z", "author": {"login": "vkryachko"}, "path": "ci/fireci/fireci/uploader.py", "diffHunk": "@@ -0,0 +1,59 @@\n+# Copyright 2020 Google LLC\n+#\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#      http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+\n+import json\n+import logging\n+import os\n+import requests\n+\n+from fireci import prow_utils\n+\n+_logger = logging.getLogger('fireci.uploader')\n+\n+\n+def post_report(\n+    test_report,\n+    metrics_service_url=os.getenv('METRICS_SERVICE_URL'),\n+    access_token=prow_utils.gcloud_identity_token()):\n+  \"\"\"Post a report to the metrics service backend.\"\"\"\n+\n+  endpoint = _construct_request_endpoint()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDUxNzM0MA=="}, "originalCommit": {"oid": "34683b827b5e7ea873ecea752cd61659c569b869"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTUyODQwNQ==", "bodyText": "Fair. Are there other packages that you are aware of that provide a retrofit like service?", "url": "https://github.com/firebase/firebase-android-sdk/pull/1480#discussion_r411528405", "createdAt": "2020-04-20T16:42:07Z", "author": {"login": "ashwinraghav"}, "path": "ci/fireci/fireci/uploader.py", "diffHunk": "@@ -0,0 +1,59 @@\n+# Copyright 2020 Google LLC\n+#\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#      http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+\n+import json\n+import logging\n+import os\n+import requests\n+\n+from fireci import prow_utils\n+\n+_logger = logging.getLogger('fireci.uploader')\n+\n+\n+def post_report(\n+    test_report,\n+    metrics_service_url=os.getenv('METRICS_SERVICE_URL'),\n+    access_token=prow_utils.gcloud_identity_token()):\n+  \"\"\"Post a report to the metrics service backend.\"\"\"\n+\n+  endpoint = _construct_request_endpoint()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDUxNzM0MA=="}, "originalCommit": {"oid": "34683b827b5e7ea873ecea752cd61659c569b869"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTUyODc4Mw==", "bodyText": "On second thought, this looks pretty good the way it is. No action required", "url": "https://github.com/firebase/firebase-android-sdk/pull/1480#discussion_r411528783", "createdAt": "2020-04-20T16:42:41Z", "author": {"login": "ashwinraghav"}, "path": "ci/fireci/fireci/uploader.py", "diffHunk": "@@ -0,0 +1,59 @@\n+# Copyright 2020 Google LLC\n+#\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#      http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+\n+import json\n+import logging\n+import os\n+import requests\n+\n+from fireci import prow_utils\n+\n+_logger = logging.getLogger('fireci.uploader')\n+\n+\n+def post_report(\n+    test_report,\n+    metrics_service_url=os.getenv('METRICS_SERVICE_URL'),\n+    access_token=prow_utils.gcloud_identity_token()):\n+  \"\"\"Post a report to the metrics service backend.\"\"\"\n+\n+  endpoint = _construct_request_endpoint()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDUxNzM0MA=="}, "originalCommit": {"oid": "34683b827b5e7ea873ecea752cd61659c569b869"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0ODgyNTI3OnYy", "diffSide": "RIGHT", "path": "ci/fireci/fireciplugins/binary_size.py", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QyMzo1NDoxMlrOGHgELw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxOTozNjo1OFrOGIkctg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDUxODU3NQ==", "bodyText": "Im trying to map where these values are populated, since there are no defaults and it does not seem to be wired in the prow configs either.", "url": "https://github.com/firebase/firebase-android-sdk/pull/1480#discussion_r410518575", "createdAt": "2020-04-17T23:54:12Z", "author": {"login": "ashwinraghav"}, "path": "ci/fireci/fireciplugins/binary_size.py", "diffHunk": "@@ -0,0 +1,101 @@\n+# Copyright 2020 Google LLC\n+#\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#      http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+\n+import click\n+import glob\n+import json\n+import logging\n+import os\n+import re\n+\n+from fireci import ci_command\n+from fireci import gradle\n+from fireci import prow_utils\n+from fireci import uploader\n+\n+_logger = logging.getLogger('fireci.binary_size')\n+\n+\n+@click.option(\n+  '--pull-request/--no-pull-request',\n+  default=False,\n+  help='When running for pull requests, only size of affected SDKs are collected.'\n+)\n+@click.option(\n+  '--log',\n+  default=prow_utils.prow_job_log_link,\n+  help='The link to the log of the prow job, which runs this coverage check.'\n+)\n+@click.option(\n+  '--metrics-service-url',\n+  envvar='METRICS_SERVICE_URL',", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "34683b827b5e7ea873ecea752cd61659c569b869"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTYzODk2Ng==", "bodyText": "It is actually defined as a preset in prow configs.", "url": "https://github.com/firebase/firebase-android-sdk/pull/1480#discussion_r411638966", "createdAt": "2020-04-20T19:36:58Z", "author": {"login": "yifanyang"}, "path": "ci/fireci/fireciplugins/binary_size.py", "diffHunk": "@@ -0,0 +1,101 @@\n+# Copyright 2020 Google LLC\n+#\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#      http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+\n+import click\n+import glob\n+import json\n+import logging\n+import os\n+import re\n+\n+from fireci import ci_command\n+from fireci import gradle\n+from fireci import prow_utils\n+from fireci import uploader\n+\n+_logger = logging.getLogger('fireci.binary_size')\n+\n+\n+@click.option(\n+  '--pull-request/--no-pull-request',\n+  default=False,\n+  help='When running for pull requests, only size of affected SDKs are collected.'\n+)\n+@click.option(\n+  '--log',\n+  default=prow_utils.prow_job_log_link,\n+  help='The link to the log of the prow job, which runs this coverage check.'\n+)\n+@click.option(\n+  '--metrics-service-url',\n+  envvar='METRICS_SERVICE_URL',", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDUxODU3NQ=="}, "originalCommit": {"oid": "34683b827b5e7ea873ecea752cd61659c569b869"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU1NTkxNDU0OnYy", "diffSide": "RIGHT", "path": "ci/fireci/fireci/gradle.py", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxNDoxNzoxMlrOGIWyMQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxOTozNzowMlrOGIkc0g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTQxNTA4OQ==", "bodyText": "Instead of changing workdir it might be simpler to run ./gradlew -p api-size ..., wdyt?", "url": "https://github.com/firebase/firebase-android-sdk/pull/1480#discussion_r411415089", "createdAt": "2020-04-20T14:17:12Z", "author": {"login": "vkryachko"}, "path": "ci/fireci/fireci/gradle.py", "diffHunk": "@@ -30,7 +30,7 @@ def P(name, value):\n \n \n @stats.measure_call('gradle')\n-def run(*args, gradle_opts='', workdir=None):\n+def run(*args, gradle_opts='', workdir=None, gradle_bin_dir='.', check=True):", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "34683b827b5e7ea873ecea752cd61659c569b869"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTYzODk5NA==", "bodyText": "Done. I didn't even know that such a gradle flag exists. Thanks for pointing it out!", "url": "https://github.com/firebase/firebase-android-sdk/pull/1480#discussion_r411638994", "createdAt": "2020-04-20T19:37:02Z", "author": {"login": "yifanyang"}, "path": "ci/fireci/fireci/gradle.py", "diffHunk": "@@ -30,7 +30,7 @@ def P(name, value):\n \n \n @stats.measure_call('gradle')\n-def run(*args, gradle_opts='', workdir=None):\n+def run(*args, gradle_opts='', workdir=None, gradle_bin_dir='.', check=True):", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTQxNTA4OQ=="}, "originalCommit": {"oid": "34683b827b5e7ea873ecea752cd61659c569b869"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1315, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}