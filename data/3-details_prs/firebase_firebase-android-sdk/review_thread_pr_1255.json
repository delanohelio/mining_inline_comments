{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc3MzM2MTI4", "number": 1255, "reviewThreads": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxNDozMTozNlrODhi94w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxNjo1NDo1MVrODhmlLw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2NTAyNDk5OnYy", "diffSide": "RIGHT", "path": "firebase-crashlytics/src/main/java/com/google/firebase/crashlytics/internal/persistence/CrashlyticsReportPersistence.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxNDozMTozNlrOFsVi4g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxNDo1NTo0NlrOFsWhZg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjAzNDY1OA==", "bodyText": "What resets this back to zero? Is this \"Persistence\" class recreated before it gets sufficiently large?", "url": "https://github.com/firebase/firebase-android-sdk/pull/1255#discussion_r382034658", "createdAt": "2020-02-20T14:31:36Z", "author": {"login": "jakeouellette"}, "path": "firebase-crashlytics/src/main/java/com/google/firebase/crashlytics/internal/persistence/CrashlyticsReportPersistence.java", "diffHunk": "@@ -43,36 +43,41 @@\n \n   private static final Charset UTF_8 = Charset.forName(\"UTF-8\");\n \n-  private static final String WORKING_DIRECTORY_NAME = \"fl\";\n+  private static final String WORKING_DIRECTORY_NAME = \"report-persistence\";\n   private static final String OPEN_SESSIONS_DIRECTORY_NAME = \"sessions\";\n-  private static final String FATAL_DIRECTORY_NAME = \"fatal\";\n-  private static final String NON_FATAL_DIRECTORY_NAME = \"non-fatal\";\n+  private static final String PRIORITY_REPORTS_DIRECTORY = \"priority-reports\";\n+  private static final String REPORTS_DIRECTORY = \"reports\";\n \n-  private static final String REPORT_FILE_NAME = \"report.json\";\n+  private static final String REPORT_FILE_NAME = \"report\";\n   private static final String EVENT_FILE_NAME_PREFIX = \"event\";\n-  private static final String EVENT_FILE_NAME_FORMAT = EVENT_FILE_NAME_PREFIX + \"%s.json\";\n-  private static final String EVENT_COUNTER_FORMAT = \"%010d\";\n-\n-  private static final String EVENT_TYPE_FATAL = \"crash\";\n+  private static final int EVENT_COUNTER_WIDTH = 10; // String width of maximum positive int value\n+  private static final String EVENT_COUNTER_FORMAT = \"%0\" + EVENT_COUNTER_WIDTH + \"d\";\n+  private static final int EVENT_NAME_LENGTH =\n+      EVENT_FILE_NAME_PREFIX.length() + EVENT_COUNTER_WIDTH;\n+  private static final String PRIORITY_EVENT_SUFFIX = \"_\";\n+  private static final String NORMAL_EVENT_SUFFIX = \"\";\n \n   private static final CrashlyticsReportJsonTransform TRANSFORM =\n       new CrashlyticsReportJsonTransform();\n \n   private final AtomicInteger eventCounter = new AtomicInteger(0);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f81d99566cc060ffe18caf769cfbb041052d472"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjA1MDY2Mg==", "bodyText": "In practice, yes. If you've got a situation where you have greater than Integer.MAX_VALUE events coming in for a single session, something is terribly wrong, and the information isn't going to be particularly useful to you anyway.\nSee also: https://github.com/firebase/firebase-android-sdk/blob/master/firebase-crashlytics/src/main/java/com/google/firebase/crashlytics/core/CrashlyticsController.java#L241", "url": "https://github.com/firebase/firebase-android-sdk/pull/1255#discussion_r382050662", "createdAt": "2020-02-20T14:55:46Z", "author": {"login": "mrwillis21"}, "path": "firebase-crashlytics/src/main/java/com/google/firebase/crashlytics/internal/persistence/CrashlyticsReportPersistence.java", "diffHunk": "@@ -43,36 +43,41 @@\n \n   private static final Charset UTF_8 = Charset.forName(\"UTF-8\");\n \n-  private static final String WORKING_DIRECTORY_NAME = \"fl\";\n+  private static final String WORKING_DIRECTORY_NAME = \"report-persistence\";\n   private static final String OPEN_SESSIONS_DIRECTORY_NAME = \"sessions\";\n-  private static final String FATAL_DIRECTORY_NAME = \"fatal\";\n-  private static final String NON_FATAL_DIRECTORY_NAME = \"non-fatal\";\n+  private static final String PRIORITY_REPORTS_DIRECTORY = \"priority-reports\";\n+  private static final String REPORTS_DIRECTORY = \"reports\";\n \n-  private static final String REPORT_FILE_NAME = \"report.json\";\n+  private static final String REPORT_FILE_NAME = \"report\";\n   private static final String EVENT_FILE_NAME_PREFIX = \"event\";\n-  private static final String EVENT_FILE_NAME_FORMAT = EVENT_FILE_NAME_PREFIX + \"%s.json\";\n-  private static final String EVENT_COUNTER_FORMAT = \"%010d\";\n-\n-  private static final String EVENT_TYPE_FATAL = \"crash\";\n+  private static final int EVENT_COUNTER_WIDTH = 10; // String width of maximum positive int value\n+  private static final String EVENT_COUNTER_FORMAT = \"%0\" + EVENT_COUNTER_WIDTH + \"d\";\n+  private static final int EVENT_NAME_LENGTH =\n+      EVENT_FILE_NAME_PREFIX.length() + EVENT_COUNTER_WIDTH;\n+  private static final String PRIORITY_EVENT_SUFFIX = \"_\";\n+  private static final String NORMAL_EVENT_SUFFIX = \"\";\n \n   private static final CrashlyticsReportJsonTransform TRANSFORM =\n       new CrashlyticsReportJsonTransform();\n \n   private final AtomicInteger eventCounter = new AtomicInteger(0);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjAzNDY1OA=="}, "originalCommit": {"oid": "3f81d99566cc060ffe18caf769cfbb041052d472"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2NTAzODE3OnYy", "diffSide": "RIGHT", "path": "firebase-crashlytics/src/main/java/com/google/firebase/crashlytics/internal/persistence/CrashlyticsReportPersistence.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxNDozNDo0N1rOFsVrBg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxNDo1NjoxM1rOFsWirg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjAzNjc0Mg==", "bodyText": "It is interesting to me that this method is side-effecting and returns a value. Would it be more obvious to the reader if this method were static, and you passed  generateEventFilename(eventCounter.getAndIncrement(), isHighPriority) in?", "url": "https://github.com/firebase/firebase-android-sdk/pull/1255#discussion_r382036742", "createdAt": "2020-02-20T14:34:47Z", "author": {"login": "jakeouellette"}, "path": "firebase-crashlytics/src/main/java/com/google/firebase/crashlytics/internal/persistence/CrashlyticsReportPersistence.java", "diffHunk": "@@ -151,22 +178,55 @@ public void finalizeReports(String currentSessionId) {\n   }\n \n   public List<CrashlyticsReport> loadFinalizedReports() {\n-    final List<CrashlyticsReport> reports = new ArrayList<>();\n-    final List<File> fatalReports = getAllFilesInDirectory(fatalReportsDirectory);\n-    for (File reportFile : fatalReports) {\n-      reports.add(TRANSFORM.reportFromJson(readTextFile(reportFile)));\n+    final List<CrashlyticsReport> allReports = new ArrayList<>();\n+    final List<File> priorityReports = getAllFilesInDirectory(priorityReportsDirectory);\n+    for (File reportFile : priorityReports) {\n+      allReports.add(TRANSFORM.reportFromJson(readTextFile(reportFile)));\n     }\n-    final List<File> nonFatalReports = getAllFilesInDirectory(nonFatalReportsDirectory);\n-    for (File reportFile : nonFatalReports) {\n-      reports.add(TRANSFORM.reportFromJson(readTextFile(reportFile)));\n+    final List<File> reports = getAllFilesInDirectory(reportsDirectory);\n+    for (File reportFile : reports) {\n+      allReports.add(TRANSFORM.reportFromJson(readTextFile(reportFile)));\n     }\n-    return reports;\n+    return allReports;\n+  }\n+\n+  private static boolean isHighPriorityEvent(String eventFileName) {\n+    return eventFileName.endsWith(PRIORITY_EVENT_SUFFIX);\n+  }\n+\n+  private String generateEventFilename(boolean isHighPriority) {\n+    final String eventNumber =\n+        String.format(Locale.US, EVENT_COUNTER_FORMAT, eventCounter.getAndIncrement());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f81d99566cc060ffe18caf769cfbb041052d472"}, "originalPosition": 161}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjAzNzA4MA==", "bodyText": "(I guess you'd probably want to rename it if you did that. I could go either way really, just wanted to ask!)", "url": "https://github.com/firebase/firebase-android-sdk/pull/1255#discussion_r382037080", "createdAt": "2020-02-20T14:35:19Z", "author": {"login": "jakeouellette"}, "path": "firebase-crashlytics/src/main/java/com/google/firebase/crashlytics/internal/persistence/CrashlyticsReportPersistence.java", "diffHunk": "@@ -151,22 +178,55 @@ public void finalizeReports(String currentSessionId) {\n   }\n \n   public List<CrashlyticsReport> loadFinalizedReports() {\n-    final List<CrashlyticsReport> reports = new ArrayList<>();\n-    final List<File> fatalReports = getAllFilesInDirectory(fatalReportsDirectory);\n-    for (File reportFile : fatalReports) {\n-      reports.add(TRANSFORM.reportFromJson(readTextFile(reportFile)));\n+    final List<CrashlyticsReport> allReports = new ArrayList<>();\n+    final List<File> priorityReports = getAllFilesInDirectory(priorityReportsDirectory);\n+    for (File reportFile : priorityReports) {\n+      allReports.add(TRANSFORM.reportFromJson(readTextFile(reportFile)));\n     }\n-    final List<File> nonFatalReports = getAllFilesInDirectory(nonFatalReportsDirectory);\n-    for (File reportFile : nonFatalReports) {\n-      reports.add(TRANSFORM.reportFromJson(readTextFile(reportFile)));\n+    final List<File> reports = getAllFilesInDirectory(reportsDirectory);\n+    for (File reportFile : reports) {\n+      allReports.add(TRANSFORM.reportFromJson(readTextFile(reportFile)));\n     }\n-    return reports;\n+    return allReports;\n+  }\n+\n+  private static boolean isHighPriorityEvent(String eventFileName) {\n+    return eventFileName.endsWith(PRIORITY_EVENT_SUFFIX);\n+  }\n+\n+  private String generateEventFilename(boolean isHighPriority) {\n+    final String eventNumber =\n+        String.format(Locale.US, EVENT_COUNTER_FORMAT, eventCounter.getAndIncrement());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjAzNjc0Mg=="}, "originalCommit": {"oid": "3f81d99566cc060ffe18caf769cfbb041052d472"}, "originalPosition": 161}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjA1MDk5MA==", "bodyText": "Solid point. I don't think it would necessitate a rename.", "url": "https://github.com/firebase/firebase-android-sdk/pull/1255#discussion_r382050990", "createdAt": "2020-02-20T14:56:13Z", "author": {"login": "mrwillis21"}, "path": "firebase-crashlytics/src/main/java/com/google/firebase/crashlytics/internal/persistence/CrashlyticsReportPersistence.java", "diffHunk": "@@ -151,22 +178,55 @@ public void finalizeReports(String currentSessionId) {\n   }\n \n   public List<CrashlyticsReport> loadFinalizedReports() {\n-    final List<CrashlyticsReport> reports = new ArrayList<>();\n-    final List<File> fatalReports = getAllFilesInDirectory(fatalReportsDirectory);\n-    for (File reportFile : fatalReports) {\n-      reports.add(TRANSFORM.reportFromJson(readTextFile(reportFile)));\n+    final List<CrashlyticsReport> allReports = new ArrayList<>();\n+    final List<File> priorityReports = getAllFilesInDirectory(priorityReportsDirectory);\n+    for (File reportFile : priorityReports) {\n+      allReports.add(TRANSFORM.reportFromJson(readTextFile(reportFile)));\n     }\n-    final List<File> nonFatalReports = getAllFilesInDirectory(nonFatalReportsDirectory);\n-    for (File reportFile : nonFatalReports) {\n-      reports.add(TRANSFORM.reportFromJson(readTextFile(reportFile)));\n+    final List<File> reports = getAllFilesInDirectory(reportsDirectory);\n+    for (File reportFile : reports) {\n+      allReports.add(TRANSFORM.reportFromJson(readTextFile(reportFile)));\n     }\n-    return reports;\n+    return allReports;\n+  }\n+\n+  private static boolean isHighPriorityEvent(String eventFileName) {\n+    return eventFileName.endsWith(PRIORITY_EVENT_SUFFIX);\n+  }\n+\n+  private String generateEventFilename(boolean isHighPriority) {\n+    final String eventNumber =\n+        String.format(Locale.US, EVENT_COUNTER_FORMAT, eventCounter.getAndIncrement());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjAzNjc0Mg=="}, "originalCommit": {"oid": "3f81d99566cc060ffe18caf769cfbb041052d472"}, "originalPosition": 161}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2NTA0OTE0OnYy", "diffSide": "RIGHT", "path": "firebase-crashlytics/src/main/java/com/google/firebase/crashlytics/internal/persistence/CrashlyticsReportPersistence.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxNDozNzozM1rOFsVxxg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxNjowMDowMVrOFsZNjA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjAzODQ3MA==", "bodyText": "Possibly a dumb optimization, but if !isHighPriorityEvent is more variable, and EVENT_FILE_NAME_PREFIX is expected 99% of the time, it might be worth putting the second check first to short circuit early more frequently.", "url": "https://github.com/firebase/firebase-android-sdk/pull/1255#discussion_r382038470", "createdAt": "2020-02-20T14:37:33Z", "author": {"login": "jakeouellette"}, "path": "firebase-crashlytics/src/main/java/com/google/firebase/crashlytics/internal/persistence/CrashlyticsReportPersistence.java", "diffHunk": "@@ -151,22 +178,55 @@ public void finalizeReports(String currentSessionId) {\n   }\n \n   public List<CrashlyticsReport> loadFinalizedReports() {\n-    final List<CrashlyticsReport> reports = new ArrayList<>();\n-    final List<File> fatalReports = getAllFilesInDirectory(fatalReportsDirectory);\n-    for (File reportFile : fatalReports) {\n-      reports.add(TRANSFORM.reportFromJson(readTextFile(reportFile)));\n+    final List<CrashlyticsReport> allReports = new ArrayList<>();\n+    final List<File> priorityReports = getAllFilesInDirectory(priorityReportsDirectory);\n+    for (File reportFile : priorityReports) {\n+      allReports.add(TRANSFORM.reportFromJson(readTextFile(reportFile)));\n     }\n-    final List<File> nonFatalReports = getAllFilesInDirectory(nonFatalReportsDirectory);\n-    for (File reportFile : nonFatalReports) {\n-      reports.add(TRANSFORM.reportFromJson(readTextFile(reportFile)));\n+    final List<File> reports = getAllFilesInDirectory(reportsDirectory);\n+    for (File reportFile : reports) {\n+      allReports.add(TRANSFORM.reportFromJson(readTextFile(reportFile)));\n     }\n-    return reports;\n+    return allReports;\n+  }\n+\n+  private static boolean isHighPriorityEvent(String eventFileName) {\n+    return eventFileName.endsWith(PRIORITY_EVENT_SUFFIX);\n+  }\n+\n+  private String generateEventFilename(boolean isHighPriority) {\n+    final String eventNumber =\n+        String.format(Locale.US, EVENT_COUNTER_FORMAT, eventCounter.getAndIncrement());\n+    final String prioritySuffix = isHighPriority ? PRIORITY_EVENT_SUFFIX : NORMAL_EVENT_SUFFIX;\n+    return EVENT_FILE_NAME_PREFIX + eventNumber + prioritySuffix;\n   }\n \n   private File getSessionDirectoryById(String sessionId) {\n     return new File(openSessionsDirectory, sessionId);\n   }\n \n+  private static int trimEvents(File sessionDirectory, int maximum) {\n+    final List<File> normalPriorityEventFiles =\n+        getFilesInDirectory(\n+            sessionDirectory, CrashlyticsReportPersistence::isNormalPriorityEventFile);\n+    Collections.sort(normalPriorityEventFiles, CrashlyticsReportPersistence::oldestEventFileFirst);\n+    return capFilesCount(normalPriorityEventFiles, maximum);\n+  }\n+\n+  private static String eventNameOnly(String eventFileName) {\n+    return eventFileName.substring(0, EVENT_NAME_LENGTH);\n+  }\n+\n+  private static boolean isNormalPriorityEventFile(File dir, String name) {\n+    return name.startsWith(EVENT_FILE_NAME_PREFIX) && !isHighPriorityEvent(name);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f81d99566cc060ffe18caf769cfbb041052d472"}, "originalPosition": 183}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjA1MTM0OA==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/firebase/firebase-android-sdk/pull/1255#discussion_r382051348", "createdAt": "2020-02-20T14:56:44Z", "author": {"login": "mrwillis21"}, "path": "firebase-crashlytics/src/main/java/com/google/firebase/crashlytics/internal/persistence/CrashlyticsReportPersistence.java", "diffHunk": "@@ -151,22 +178,55 @@ public void finalizeReports(String currentSessionId) {\n   }\n \n   public List<CrashlyticsReport> loadFinalizedReports() {\n-    final List<CrashlyticsReport> reports = new ArrayList<>();\n-    final List<File> fatalReports = getAllFilesInDirectory(fatalReportsDirectory);\n-    for (File reportFile : fatalReports) {\n-      reports.add(TRANSFORM.reportFromJson(readTextFile(reportFile)));\n+    final List<CrashlyticsReport> allReports = new ArrayList<>();\n+    final List<File> priorityReports = getAllFilesInDirectory(priorityReportsDirectory);\n+    for (File reportFile : priorityReports) {\n+      allReports.add(TRANSFORM.reportFromJson(readTextFile(reportFile)));\n     }\n-    final List<File> nonFatalReports = getAllFilesInDirectory(nonFatalReportsDirectory);\n-    for (File reportFile : nonFatalReports) {\n-      reports.add(TRANSFORM.reportFromJson(readTextFile(reportFile)));\n+    final List<File> reports = getAllFilesInDirectory(reportsDirectory);\n+    for (File reportFile : reports) {\n+      allReports.add(TRANSFORM.reportFromJson(readTextFile(reportFile)));\n     }\n-    return reports;\n+    return allReports;\n+  }\n+\n+  private static boolean isHighPriorityEvent(String eventFileName) {\n+    return eventFileName.endsWith(PRIORITY_EVENT_SUFFIX);\n+  }\n+\n+  private String generateEventFilename(boolean isHighPriority) {\n+    final String eventNumber =\n+        String.format(Locale.US, EVENT_COUNTER_FORMAT, eventCounter.getAndIncrement());\n+    final String prioritySuffix = isHighPriority ? PRIORITY_EVENT_SUFFIX : NORMAL_EVENT_SUFFIX;\n+    return EVENT_FILE_NAME_PREFIX + eventNumber + prioritySuffix;\n   }\n \n   private File getSessionDirectoryById(String sessionId) {\n     return new File(openSessionsDirectory, sessionId);\n   }\n \n+  private static int trimEvents(File sessionDirectory, int maximum) {\n+    final List<File> normalPriorityEventFiles =\n+        getFilesInDirectory(\n+            sessionDirectory, CrashlyticsReportPersistence::isNormalPriorityEventFile);\n+    Collections.sort(normalPriorityEventFiles, CrashlyticsReportPersistence::oldestEventFileFirst);\n+    return capFilesCount(normalPriorityEventFiles, maximum);\n+  }\n+\n+  private static String eventNameOnly(String eventFileName) {\n+    return eventFileName.substring(0, EVENT_NAME_LENGTH);\n+  }\n+\n+  private static boolean isNormalPriorityEventFile(File dir, String name) {\n+    return name.startsWith(EVENT_FILE_NAME_PREFIX) && !isHighPriorityEvent(name);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjAzODQ3MA=="}, "originalCommit": {"oid": "3f81d99566cc060ffe18caf769cfbb041052d472"}, "originalPosition": 183}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjA5NDE2OA==", "bodyText": "Actually, after looking back at this - we need to filter out any non-event files first, so this needs to stay as it is.", "url": "https://github.com/firebase/firebase-android-sdk/pull/1255#discussion_r382094168", "createdAt": "2020-02-20T15:59:11Z", "author": {"login": "mrwillis21"}, "path": "firebase-crashlytics/src/main/java/com/google/firebase/crashlytics/internal/persistence/CrashlyticsReportPersistence.java", "diffHunk": "@@ -151,22 +178,55 @@ public void finalizeReports(String currentSessionId) {\n   }\n \n   public List<CrashlyticsReport> loadFinalizedReports() {\n-    final List<CrashlyticsReport> reports = new ArrayList<>();\n-    final List<File> fatalReports = getAllFilesInDirectory(fatalReportsDirectory);\n-    for (File reportFile : fatalReports) {\n-      reports.add(TRANSFORM.reportFromJson(readTextFile(reportFile)));\n+    final List<CrashlyticsReport> allReports = new ArrayList<>();\n+    final List<File> priorityReports = getAllFilesInDirectory(priorityReportsDirectory);\n+    for (File reportFile : priorityReports) {\n+      allReports.add(TRANSFORM.reportFromJson(readTextFile(reportFile)));\n     }\n-    final List<File> nonFatalReports = getAllFilesInDirectory(nonFatalReportsDirectory);\n-    for (File reportFile : nonFatalReports) {\n-      reports.add(TRANSFORM.reportFromJson(readTextFile(reportFile)));\n+    final List<File> reports = getAllFilesInDirectory(reportsDirectory);\n+    for (File reportFile : reports) {\n+      allReports.add(TRANSFORM.reportFromJson(readTextFile(reportFile)));\n     }\n-    return reports;\n+    return allReports;\n+  }\n+\n+  private static boolean isHighPriorityEvent(String eventFileName) {\n+    return eventFileName.endsWith(PRIORITY_EVENT_SUFFIX);\n+  }\n+\n+  private String generateEventFilename(boolean isHighPriority) {\n+    final String eventNumber =\n+        String.format(Locale.US, EVENT_COUNTER_FORMAT, eventCounter.getAndIncrement());\n+    final String prioritySuffix = isHighPriority ? PRIORITY_EVENT_SUFFIX : NORMAL_EVENT_SUFFIX;\n+    return EVENT_FILE_NAME_PREFIX + eventNumber + prioritySuffix;\n   }\n \n   private File getSessionDirectoryById(String sessionId) {\n     return new File(openSessionsDirectory, sessionId);\n   }\n \n+  private static int trimEvents(File sessionDirectory, int maximum) {\n+    final List<File> normalPriorityEventFiles =\n+        getFilesInDirectory(\n+            sessionDirectory, CrashlyticsReportPersistence::isNormalPriorityEventFile);\n+    Collections.sort(normalPriorityEventFiles, CrashlyticsReportPersistence::oldestEventFileFirst);\n+    return capFilesCount(normalPriorityEventFiles, maximum);\n+  }\n+\n+  private static String eventNameOnly(String eventFileName) {\n+    return eventFileName.substring(0, EVENT_NAME_LENGTH);\n+  }\n+\n+  private static boolean isNormalPriorityEventFile(File dir, String name) {\n+    return name.startsWith(EVENT_FILE_NAME_PREFIX) && !isHighPriorityEvent(name);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjAzODQ3MA=="}, "originalCommit": {"oid": "3f81d99566cc060ffe18caf769cfbb041052d472"}, "originalPosition": 183}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjA5NDczMg==", "bodyText": "Rewrote these two methods though, and paired them, so they'd be easier to reason about.", "url": "https://github.com/firebase/firebase-android-sdk/pull/1255#discussion_r382094732", "createdAt": "2020-02-20T16:00:01Z", "author": {"login": "mrwillis21"}, "path": "firebase-crashlytics/src/main/java/com/google/firebase/crashlytics/internal/persistence/CrashlyticsReportPersistence.java", "diffHunk": "@@ -151,22 +178,55 @@ public void finalizeReports(String currentSessionId) {\n   }\n \n   public List<CrashlyticsReport> loadFinalizedReports() {\n-    final List<CrashlyticsReport> reports = new ArrayList<>();\n-    final List<File> fatalReports = getAllFilesInDirectory(fatalReportsDirectory);\n-    for (File reportFile : fatalReports) {\n-      reports.add(TRANSFORM.reportFromJson(readTextFile(reportFile)));\n+    final List<CrashlyticsReport> allReports = new ArrayList<>();\n+    final List<File> priorityReports = getAllFilesInDirectory(priorityReportsDirectory);\n+    for (File reportFile : priorityReports) {\n+      allReports.add(TRANSFORM.reportFromJson(readTextFile(reportFile)));\n     }\n-    final List<File> nonFatalReports = getAllFilesInDirectory(nonFatalReportsDirectory);\n-    for (File reportFile : nonFatalReports) {\n-      reports.add(TRANSFORM.reportFromJson(readTextFile(reportFile)));\n+    final List<File> reports = getAllFilesInDirectory(reportsDirectory);\n+    for (File reportFile : reports) {\n+      allReports.add(TRANSFORM.reportFromJson(readTextFile(reportFile)));\n     }\n-    return reports;\n+    return allReports;\n+  }\n+\n+  private static boolean isHighPriorityEvent(String eventFileName) {\n+    return eventFileName.endsWith(PRIORITY_EVENT_SUFFIX);\n+  }\n+\n+  private String generateEventFilename(boolean isHighPriority) {\n+    final String eventNumber =\n+        String.format(Locale.US, EVENT_COUNTER_FORMAT, eventCounter.getAndIncrement());\n+    final String prioritySuffix = isHighPriority ? PRIORITY_EVENT_SUFFIX : NORMAL_EVENT_SUFFIX;\n+    return EVENT_FILE_NAME_PREFIX + eventNumber + prioritySuffix;\n   }\n \n   private File getSessionDirectoryById(String sessionId) {\n     return new File(openSessionsDirectory, sessionId);\n   }\n \n+  private static int trimEvents(File sessionDirectory, int maximum) {\n+    final List<File> normalPriorityEventFiles =\n+        getFilesInDirectory(\n+            sessionDirectory, CrashlyticsReportPersistence::isNormalPriorityEventFile);\n+    Collections.sort(normalPriorityEventFiles, CrashlyticsReportPersistence::oldestEventFileFirst);\n+    return capFilesCount(normalPriorityEventFiles, maximum);\n+  }\n+\n+  private static String eventNameOnly(String eventFileName) {\n+    return eventFileName.substring(0, EVENT_NAME_LENGTH);\n+  }\n+\n+  private static boolean isNormalPriorityEventFile(File dir, String name) {\n+    return name.startsWith(EVENT_FILE_NAME_PREFIX) && !isHighPriorityEvent(name);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjAzODQ3MA=="}, "originalCommit": {"oid": "3f81d99566cc060ffe18caf769cfbb041052d472"}, "originalPosition": 183}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2NTA2MzMxOnYy", "diffSide": "RIGHT", "path": "firebase-crashlytics/src/main/java/com/google/firebase/crashlytics/internal/persistence/CrashlyticsReportPersistence.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxNDo0MDo1MlrOFsV6SQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxNjo1MjowOVrOFsbNlw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjA0MDY0OQ==", "bodyText": "Is it worth having a unit test for this?", "url": "https://github.com/firebase/firebase-android-sdk/pull/1255#discussion_r382040649", "createdAt": "2020-02-20T14:40:52Z", "author": {"login": "jakeouellette"}, "path": "firebase-crashlytics/src/main/java/com/google/firebase/crashlytics/internal/persistence/CrashlyticsReportPersistence.java", "diffHunk": "@@ -151,22 +178,55 @@ public void finalizeReports(String currentSessionId) {\n   }\n \n   public List<CrashlyticsReport> loadFinalizedReports() {\n-    final List<CrashlyticsReport> reports = new ArrayList<>();\n-    final List<File> fatalReports = getAllFilesInDirectory(fatalReportsDirectory);\n-    for (File reportFile : fatalReports) {\n-      reports.add(TRANSFORM.reportFromJson(readTextFile(reportFile)));\n+    final List<CrashlyticsReport> allReports = new ArrayList<>();\n+    final List<File> priorityReports = getAllFilesInDirectory(priorityReportsDirectory);\n+    for (File reportFile : priorityReports) {\n+      allReports.add(TRANSFORM.reportFromJson(readTextFile(reportFile)));\n     }\n-    final List<File> nonFatalReports = getAllFilesInDirectory(nonFatalReportsDirectory);\n-    for (File reportFile : nonFatalReports) {\n-      reports.add(TRANSFORM.reportFromJson(readTextFile(reportFile)));\n+    final List<File> reports = getAllFilesInDirectory(reportsDirectory);\n+    for (File reportFile : reports) {\n+      allReports.add(TRANSFORM.reportFromJson(readTextFile(reportFile)));\n     }\n-    return reports;\n+    return allReports;\n+  }\n+\n+  private static boolean isHighPriorityEvent(String eventFileName) {\n+    return eventFileName.endsWith(PRIORITY_EVENT_SUFFIX);\n+  }\n+\n+  private String generateEventFilename(boolean isHighPriority) {\n+    final String eventNumber =\n+        String.format(Locale.US, EVENT_COUNTER_FORMAT, eventCounter.getAndIncrement());\n+    final String prioritySuffix = isHighPriority ? PRIORITY_EVENT_SUFFIX : NORMAL_EVENT_SUFFIX;\n+    return EVENT_FILE_NAME_PREFIX + eventNumber + prioritySuffix;\n   }\n \n   private File getSessionDirectoryById(String sessionId) {\n     return new File(openSessionsDirectory, sessionId);\n   }\n \n+  private static int trimEvents(File sessionDirectory, int maximum) {\n+    final List<File> normalPriorityEventFiles =\n+        getFilesInDirectory(\n+            sessionDirectory, CrashlyticsReportPersistence::isNormalPriorityEventFile);\n+    Collections.sort(normalPriorityEventFiles, CrashlyticsReportPersistence::oldestEventFileFirst);\n+    return capFilesCount(normalPriorityEventFiles, maximum);\n+  }\n+\n+  private static String eventNameOnly(String eventFileName) {\n+    return eventFileName.substring(0, EVENT_NAME_LENGTH);\n+  }\n+\n+  private static boolean isNormalPriorityEventFile(File dir, String name) {\n+    return name.startsWith(EVENT_FILE_NAME_PREFIX) && !isHighPriorityEvent(name);\n+  }\n+\n+  private static int oldestEventFileFirst(File f1, File f2) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f81d99566cc060ffe18caf769cfbb041052d472"}, "originalPosition": 186}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjA1MTcxNw==", "bodyText": "Why do we return an int if we never use it?", "url": "https://github.com/firebase/firebase-android-sdk/pull/1255#discussion_r382051717", "createdAt": "2020-02-20T14:57:17Z", "author": {"login": "jakeouellette"}, "path": "firebase-crashlytics/src/main/java/com/google/firebase/crashlytics/internal/persistence/CrashlyticsReportPersistence.java", "diffHunk": "@@ -151,22 +178,55 @@ public void finalizeReports(String currentSessionId) {\n   }\n \n   public List<CrashlyticsReport> loadFinalizedReports() {\n-    final List<CrashlyticsReport> reports = new ArrayList<>();\n-    final List<File> fatalReports = getAllFilesInDirectory(fatalReportsDirectory);\n-    for (File reportFile : fatalReports) {\n-      reports.add(TRANSFORM.reportFromJson(readTextFile(reportFile)));\n+    final List<CrashlyticsReport> allReports = new ArrayList<>();\n+    final List<File> priorityReports = getAllFilesInDirectory(priorityReportsDirectory);\n+    for (File reportFile : priorityReports) {\n+      allReports.add(TRANSFORM.reportFromJson(readTextFile(reportFile)));\n     }\n-    final List<File> nonFatalReports = getAllFilesInDirectory(nonFatalReportsDirectory);\n-    for (File reportFile : nonFatalReports) {\n-      reports.add(TRANSFORM.reportFromJson(readTextFile(reportFile)));\n+    final List<File> reports = getAllFilesInDirectory(reportsDirectory);\n+    for (File reportFile : reports) {\n+      allReports.add(TRANSFORM.reportFromJson(readTextFile(reportFile)));\n     }\n-    return reports;\n+    return allReports;\n+  }\n+\n+  private static boolean isHighPriorityEvent(String eventFileName) {\n+    return eventFileName.endsWith(PRIORITY_EVENT_SUFFIX);\n+  }\n+\n+  private String generateEventFilename(boolean isHighPriority) {\n+    final String eventNumber =\n+        String.format(Locale.US, EVENT_COUNTER_FORMAT, eventCounter.getAndIncrement());\n+    final String prioritySuffix = isHighPriority ? PRIORITY_EVENT_SUFFIX : NORMAL_EVENT_SUFFIX;\n+    return EVENT_FILE_NAME_PREFIX + eventNumber + prioritySuffix;\n   }\n \n   private File getSessionDirectoryById(String sessionId) {\n     return new File(openSessionsDirectory, sessionId);\n   }\n \n+  private static int trimEvents(File sessionDirectory, int maximum) {\n+    final List<File> normalPriorityEventFiles =\n+        getFilesInDirectory(\n+            sessionDirectory, CrashlyticsReportPersistence::isNormalPriorityEventFile);\n+    Collections.sort(normalPriorityEventFiles, CrashlyticsReportPersistence::oldestEventFileFirst);\n+    return capFilesCount(normalPriorityEventFiles, maximum);\n+  }\n+\n+  private static String eventNameOnly(String eventFileName) {\n+    return eventFileName.substring(0, EVENT_NAME_LENGTH);\n+  }\n+\n+  private static boolean isNormalPriorityEventFile(File dir, String name) {\n+    return name.startsWith(EVENT_FILE_NAME_PREFIX) && !isHighPriorityEvent(name);\n+  }\n+\n+  private static int oldestEventFileFirst(File f1, File f2) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjA0MDY0OQ=="}, "originalCommit": {"oid": "3f81d99566cc060ffe18caf769cfbb041052d472"}, "originalPosition": 186}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjA4NzM4Nw==", "bodyText": "This is a method reference used as a comparator, which must return an int.", "url": "https://github.com/firebase/firebase-android-sdk/pull/1255#discussion_r382087387", "createdAt": "2020-02-20T15:49:28Z", "author": {"login": "mrwillis21"}, "path": "firebase-crashlytics/src/main/java/com/google/firebase/crashlytics/internal/persistence/CrashlyticsReportPersistence.java", "diffHunk": "@@ -151,22 +178,55 @@ public void finalizeReports(String currentSessionId) {\n   }\n \n   public List<CrashlyticsReport> loadFinalizedReports() {\n-    final List<CrashlyticsReport> reports = new ArrayList<>();\n-    final List<File> fatalReports = getAllFilesInDirectory(fatalReportsDirectory);\n-    for (File reportFile : fatalReports) {\n-      reports.add(TRANSFORM.reportFromJson(readTextFile(reportFile)));\n+    final List<CrashlyticsReport> allReports = new ArrayList<>();\n+    final List<File> priorityReports = getAllFilesInDirectory(priorityReportsDirectory);\n+    for (File reportFile : priorityReports) {\n+      allReports.add(TRANSFORM.reportFromJson(readTextFile(reportFile)));\n     }\n-    final List<File> nonFatalReports = getAllFilesInDirectory(nonFatalReportsDirectory);\n-    for (File reportFile : nonFatalReports) {\n-      reports.add(TRANSFORM.reportFromJson(readTextFile(reportFile)));\n+    final List<File> reports = getAllFilesInDirectory(reportsDirectory);\n+    for (File reportFile : reports) {\n+      allReports.add(TRANSFORM.reportFromJson(readTextFile(reportFile)));\n     }\n-    return reports;\n+    return allReports;\n+  }\n+\n+  private static boolean isHighPriorityEvent(String eventFileName) {\n+    return eventFileName.endsWith(PRIORITY_EVENT_SUFFIX);\n+  }\n+\n+  private String generateEventFilename(boolean isHighPriority) {\n+    final String eventNumber =\n+        String.format(Locale.US, EVENT_COUNTER_FORMAT, eventCounter.getAndIncrement());\n+    final String prioritySuffix = isHighPriority ? PRIORITY_EVENT_SUFFIX : NORMAL_EVENT_SUFFIX;\n+    return EVENT_FILE_NAME_PREFIX + eventNumber + prioritySuffix;\n   }\n \n   private File getSessionDirectoryById(String sessionId) {\n     return new File(openSessionsDirectory, sessionId);\n   }\n \n+  private static int trimEvents(File sessionDirectory, int maximum) {\n+    final List<File> normalPriorityEventFiles =\n+        getFilesInDirectory(\n+            sessionDirectory, CrashlyticsReportPersistence::isNormalPriorityEventFile);\n+    Collections.sort(normalPriorityEventFiles, CrashlyticsReportPersistence::oldestEventFileFirst);\n+    return capFilesCount(normalPriorityEventFiles, maximum);\n+  }\n+\n+  private static String eventNameOnly(String eventFileName) {\n+    return eventFileName.substring(0, EVENT_NAME_LENGTH);\n+  }\n+\n+  private static boolean isNormalPriorityEventFile(File dir, String name) {\n+    return name.startsWith(EVENT_FILE_NAME_PREFIX) && !isHighPriorityEvent(name);\n+  }\n+\n+  private static int oldestEventFileFirst(File f1, File f2) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjA0MDY0OQ=="}, "originalCommit": {"oid": "3f81d99566cc060ffe18caf769cfbb041052d472"}, "originalPosition": 186}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjEyNzUxMQ==", "bodyText": "thoughts on the unit test question?", "url": "https://github.com/firebase/firebase-android-sdk/pull/1255#discussion_r382127511", "createdAt": "2020-02-20T16:52:09Z", "author": {"login": "jakeouellette"}, "path": "firebase-crashlytics/src/main/java/com/google/firebase/crashlytics/internal/persistence/CrashlyticsReportPersistence.java", "diffHunk": "@@ -151,22 +178,55 @@ public void finalizeReports(String currentSessionId) {\n   }\n \n   public List<CrashlyticsReport> loadFinalizedReports() {\n-    final List<CrashlyticsReport> reports = new ArrayList<>();\n-    final List<File> fatalReports = getAllFilesInDirectory(fatalReportsDirectory);\n-    for (File reportFile : fatalReports) {\n-      reports.add(TRANSFORM.reportFromJson(readTextFile(reportFile)));\n+    final List<CrashlyticsReport> allReports = new ArrayList<>();\n+    final List<File> priorityReports = getAllFilesInDirectory(priorityReportsDirectory);\n+    for (File reportFile : priorityReports) {\n+      allReports.add(TRANSFORM.reportFromJson(readTextFile(reportFile)));\n     }\n-    final List<File> nonFatalReports = getAllFilesInDirectory(nonFatalReportsDirectory);\n-    for (File reportFile : nonFatalReports) {\n-      reports.add(TRANSFORM.reportFromJson(readTextFile(reportFile)));\n+    final List<File> reports = getAllFilesInDirectory(reportsDirectory);\n+    for (File reportFile : reports) {\n+      allReports.add(TRANSFORM.reportFromJson(readTextFile(reportFile)));\n     }\n-    return reports;\n+    return allReports;\n+  }\n+\n+  private static boolean isHighPriorityEvent(String eventFileName) {\n+    return eventFileName.endsWith(PRIORITY_EVENT_SUFFIX);\n+  }\n+\n+  private String generateEventFilename(boolean isHighPriority) {\n+    final String eventNumber =\n+        String.format(Locale.US, EVENT_COUNTER_FORMAT, eventCounter.getAndIncrement());\n+    final String prioritySuffix = isHighPriority ? PRIORITY_EVENT_SUFFIX : NORMAL_EVENT_SUFFIX;\n+    return EVENT_FILE_NAME_PREFIX + eventNumber + prioritySuffix;\n   }\n \n   private File getSessionDirectoryById(String sessionId) {\n     return new File(openSessionsDirectory, sessionId);\n   }\n \n+  private static int trimEvents(File sessionDirectory, int maximum) {\n+    final List<File> normalPriorityEventFiles =\n+        getFilesInDirectory(\n+            sessionDirectory, CrashlyticsReportPersistence::isNormalPriorityEventFile);\n+    Collections.sort(normalPriorityEventFiles, CrashlyticsReportPersistence::oldestEventFileFirst);\n+    return capFilesCount(normalPriorityEventFiles, maximum);\n+  }\n+\n+  private static String eventNameOnly(String eventFileName) {\n+    return eventFileName.substring(0, EVENT_NAME_LENGTH);\n+  }\n+\n+  private static boolean isNormalPriorityEventFile(File dir, String name) {\n+    return name.startsWith(EVENT_FILE_NAME_PREFIX) && !isHighPriorityEvent(name);\n+  }\n+\n+  private static int oldestEventFileFirst(File f1, File f2) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjA0MDY0OQ=="}, "originalCommit": {"oid": "3f81d99566cc060ffe18caf769cfbb041052d472"}, "originalPosition": 186}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2NTA4OTM5OnYy", "diffSide": "RIGHT", "path": "firebase-crashlytics/src/main/java/com/google/firebase/crashlytics/internal/persistence/CrashlyticsReportPersistence.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxNDo0NjozOVrOFsWJkQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxNjowMjoxOVrOFsZTag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjA0NDU2MQ==", "bodyText": "Is it worth having a unit test on this method?", "url": "https://github.com/firebase/firebase-android-sdk/pull/1255#discussion_r382044561", "createdAt": "2020-02-20T14:46:39Z", "author": {"login": "jakeouellette"}, "path": "firebase-crashlytics/src/main/java/com/google/firebase/crashlytics/internal/persistence/CrashlyticsReportPersistence.java", "diffHunk": "@@ -222,6 +282,25 @@ private static String readTextFile(File file) {\n     }\n   }\n \n+  /**\n+   * Deletes files from the list until the list size is equal to the maximum. If list is already\n+   * correctly sized, no files are deleted. List should be sorted in the order in which files should\n+   * be deleted.\n+   *\n+   * @return the number of files retained on disk\n+   */\n+  private static int capFilesCount(List<File> files, int maximum) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f81d99566cc060ffe18caf769cfbb041052d472"}, "originalPosition": 206}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjA5NjIzNA==", "bodyText": "Potentially, but I'll come back to it in another PR.", "url": "https://github.com/firebase/firebase-android-sdk/pull/1255#discussion_r382096234", "createdAt": "2020-02-20T16:02:19Z", "author": {"login": "mrwillis21"}, "path": "firebase-crashlytics/src/main/java/com/google/firebase/crashlytics/internal/persistence/CrashlyticsReportPersistence.java", "diffHunk": "@@ -222,6 +282,25 @@ private static String readTextFile(File file) {\n     }\n   }\n \n+  /**\n+   * Deletes files from the list until the list size is equal to the maximum. If list is already\n+   * correctly sized, no files are deleted. List should be sorted in the order in which files should\n+   * be deleted.\n+   *\n+   * @return the number of files retained on disk\n+   */\n+  private static int capFilesCount(List<File> files, int maximum) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjA0NDU2MQ=="}, "originalCommit": {"oid": "3f81d99566cc060ffe18caf769cfbb041052d472"}, "originalPosition": 206}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2NTA5MTM1OnYy", "diffSide": "RIGHT", "path": "firebase-crashlytics/src/main/java/com/google/firebase/crashlytics/internal/persistence/CrashlyticsReportPersistence.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxNDo0NzowNFrOFsWKww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxNDo1Nzo0NlrOFsWm4w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjA0NDg2Nw==", "bodyText": "does persistEvents instrument this trim in any unit tests (possibly they weren't changed by this PR)", "url": "https://github.com/firebase/firebase-android-sdk/pull/1255#discussion_r382044867", "createdAt": "2020-02-20T14:47:04Z", "author": {"login": "jakeouellette"}, "path": "firebase-crashlytics/src/main/java/com/google/firebase/crashlytics/internal/persistence/CrashlyticsReportPersistence.java", "diffHunk": "@@ -151,22 +178,55 @@ public void finalizeReports(String currentSessionId) {\n   }\n \n   public List<CrashlyticsReport> loadFinalizedReports() {\n-    final List<CrashlyticsReport> reports = new ArrayList<>();\n-    final List<File> fatalReports = getAllFilesInDirectory(fatalReportsDirectory);\n-    for (File reportFile : fatalReports) {\n-      reports.add(TRANSFORM.reportFromJson(readTextFile(reportFile)));\n+    final List<CrashlyticsReport> allReports = new ArrayList<>();\n+    final List<File> priorityReports = getAllFilesInDirectory(priorityReportsDirectory);\n+    for (File reportFile : priorityReports) {\n+      allReports.add(TRANSFORM.reportFromJson(readTextFile(reportFile)));\n     }\n-    final List<File> nonFatalReports = getAllFilesInDirectory(nonFatalReportsDirectory);\n-    for (File reportFile : nonFatalReports) {\n-      reports.add(TRANSFORM.reportFromJson(readTextFile(reportFile)));\n+    final List<File> reports = getAllFilesInDirectory(reportsDirectory);\n+    for (File reportFile : reports) {\n+      allReports.add(TRANSFORM.reportFromJson(readTextFile(reportFile)));\n     }\n-    return reports;\n+    return allReports;\n+  }\n+\n+  private static boolean isHighPriorityEvent(String eventFileName) {\n+    return eventFileName.endsWith(PRIORITY_EVENT_SUFFIX);\n+  }\n+\n+  private String generateEventFilename(boolean isHighPriority) {\n+    final String eventNumber =\n+        String.format(Locale.US, EVENT_COUNTER_FORMAT, eventCounter.getAndIncrement());\n+    final String prioritySuffix = isHighPriority ? PRIORITY_EVENT_SUFFIX : NORMAL_EVENT_SUFFIX;\n+    return EVENT_FILE_NAME_PREFIX + eventNumber + prioritySuffix;\n   }\n \n   private File getSessionDirectoryById(String sessionId) {\n     return new File(openSessionsDirectory, sessionId);\n   }\n \n+  private static int trimEvents(File sessionDirectory, int maximum) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f81d99566cc060ffe18caf769cfbb041052d472"}, "originalPosition": 170}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjA1MjA2Nw==", "bodyText": "It does: https://github.com/firebase/firebase-android-sdk/pull/1255/files#diff-611035c62a50caf0141b0f8ff764617bR158", "url": "https://github.com/firebase/firebase-android-sdk/pull/1255#discussion_r382052067", "createdAt": "2020-02-20T14:57:46Z", "author": {"login": "mrwillis21"}, "path": "firebase-crashlytics/src/main/java/com/google/firebase/crashlytics/internal/persistence/CrashlyticsReportPersistence.java", "diffHunk": "@@ -151,22 +178,55 @@ public void finalizeReports(String currentSessionId) {\n   }\n \n   public List<CrashlyticsReport> loadFinalizedReports() {\n-    final List<CrashlyticsReport> reports = new ArrayList<>();\n-    final List<File> fatalReports = getAllFilesInDirectory(fatalReportsDirectory);\n-    for (File reportFile : fatalReports) {\n-      reports.add(TRANSFORM.reportFromJson(readTextFile(reportFile)));\n+    final List<CrashlyticsReport> allReports = new ArrayList<>();\n+    final List<File> priorityReports = getAllFilesInDirectory(priorityReportsDirectory);\n+    for (File reportFile : priorityReports) {\n+      allReports.add(TRANSFORM.reportFromJson(readTextFile(reportFile)));\n     }\n-    final List<File> nonFatalReports = getAllFilesInDirectory(nonFatalReportsDirectory);\n-    for (File reportFile : nonFatalReports) {\n-      reports.add(TRANSFORM.reportFromJson(readTextFile(reportFile)));\n+    final List<File> reports = getAllFilesInDirectory(reportsDirectory);\n+    for (File reportFile : reports) {\n+      allReports.add(TRANSFORM.reportFromJson(readTextFile(reportFile)));\n     }\n-    return reports;\n+    return allReports;\n+  }\n+\n+  private static boolean isHighPriorityEvent(String eventFileName) {\n+    return eventFileName.endsWith(PRIORITY_EVENT_SUFFIX);\n+  }\n+\n+  private String generateEventFilename(boolean isHighPriority) {\n+    final String eventNumber =\n+        String.format(Locale.US, EVENT_COUNTER_FORMAT, eventCounter.getAndIncrement());\n+    final String prioritySuffix = isHighPriority ? PRIORITY_EVENT_SUFFIX : NORMAL_EVENT_SUFFIX;\n+    return EVENT_FILE_NAME_PREFIX + eventNumber + prioritySuffix;\n   }\n \n   private File getSessionDirectoryById(String sessionId) {\n     return new File(openSessionsDirectory, sessionId);\n   }\n \n+  private static int trimEvents(File sessionDirectory, int maximum) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjA0NDg2Nw=="}, "originalCommit": {"oid": "3f81d99566cc060ffe18caf769cfbb041052d472"}, "originalPosition": 170}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2NTExMDA3OnYy", "diffSide": "RIGHT", "path": "firebase-crashlytics/src/main/java/com/google/firebase/crashlytics/internal/persistence/CrashlyticsReportPersistence.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxNDo1MTozM1rOFsWWVQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxNDo1ODowNVrOFsWn0w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjA0NzgyOQ==", "bodyText": "why does this return an int if we never use it", "url": "https://github.com/firebase/firebase-android-sdk/pull/1255#discussion_r382047829", "createdAt": "2020-02-20T14:51:33Z", "author": {"login": "jakeouellette"}, "path": "firebase-crashlytics/src/main/java/com/google/firebase/crashlytics/internal/persistence/CrashlyticsReportPersistence.java", "diffHunk": "@@ -151,22 +178,55 @@ public void finalizeReports(String currentSessionId) {\n   }\n \n   public List<CrashlyticsReport> loadFinalizedReports() {\n-    final List<CrashlyticsReport> reports = new ArrayList<>();\n-    final List<File> fatalReports = getAllFilesInDirectory(fatalReportsDirectory);\n-    for (File reportFile : fatalReports) {\n-      reports.add(TRANSFORM.reportFromJson(readTextFile(reportFile)));\n+    final List<CrashlyticsReport> allReports = new ArrayList<>();\n+    final List<File> priorityReports = getAllFilesInDirectory(priorityReportsDirectory);\n+    for (File reportFile : priorityReports) {\n+      allReports.add(TRANSFORM.reportFromJson(readTextFile(reportFile)));\n     }\n-    final List<File> nonFatalReports = getAllFilesInDirectory(nonFatalReportsDirectory);\n-    for (File reportFile : nonFatalReports) {\n-      reports.add(TRANSFORM.reportFromJson(readTextFile(reportFile)));\n+    final List<File> reports = getAllFilesInDirectory(reportsDirectory);\n+    for (File reportFile : reports) {\n+      allReports.add(TRANSFORM.reportFromJson(readTextFile(reportFile)));\n     }\n-    return reports;\n+    return allReports;\n+  }\n+\n+  private static boolean isHighPriorityEvent(String eventFileName) {\n+    return eventFileName.endsWith(PRIORITY_EVENT_SUFFIX);\n+  }\n+\n+  private String generateEventFilename(boolean isHighPriority) {\n+    final String eventNumber =\n+        String.format(Locale.US, EVENT_COUNTER_FORMAT, eventCounter.getAndIncrement());\n+    final String prioritySuffix = isHighPriority ? PRIORITY_EVENT_SUFFIX : NORMAL_EVENT_SUFFIX;\n+    return EVENT_FILE_NAME_PREFIX + eventNumber + prioritySuffix;\n   }\n \n   private File getSessionDirectoryById(String sessionId) {\n     return new File(openSessionsDirectory, sessionId);\n   }\n \n+  private static int trimEvents(File sessionDirectory, int maximum) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f81d99566cc060ffe18caf769cfbb041052d472"}, "originalPosition": 170}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjA1MjMwNw==", "bodyText": "Future planned usage.", "url": "https://github.com/firebase/firebase-android-sdk/pull/1255#discussion_r382052307", "createdAt": "2020-02-20T14:58:05Z", "author": {"login": "mrwillis21"}, "path": "firebase-crashlytics/src/main/java/com/google/firebase/crashlytics/internal/persistence/CrashlyticsReportPersistence.java", "diffHunk": "@@ -151,22 +178,55 @@ public void finalizeReports(String currentSessionId) {\n   }\n \n   public List<CrashlyticsReport> loadFinalizedReports() {\n-    final List<CrashlyticsReport> reports = new ArrayList<>();\n-    final List<File> fatalReports = getAllFilesInDirectory(fatalReportsDirectory);\n-    for (File reportFile : fatalReports) {\n-      reports.add(TRANSFORM.reportFromJson(readTextFile(reportFile)));\n+    final List<CrashlyticsReport> allReports = new ArrayList<>();\n+    final List<File> priorityReports = getAllFilesInDirectory(priorityReportsDirectory);\n+    for (File reportFile : priorityReports) {\n+      allReports.add(TRANSFORM.reportFromJson(readTextFile(reportFile)));\n     }\n-    final List<File> nonFatalReports = getAllFilesInDirectory(nonFatalReportsDirectory);\n-    for (File reportFile : nonFatalReports) {\n-      reports.add(TRANSFORM.reportFromJson(readTextFile(reportFile)));\n+    final List<File> reports = getAllFilesInDirectory(reportsDirectory);\n+    for (File reportFile : reports) {\n+      allReports.add(TRANSFORM.reportFromJson(readTextFile(reportFile)));\n     }\n-    return reports;\n+    return allReports;\n+  }\n+\n+  private static boolean isHighPriorityEvent(String eventFileName) {\n+    return eventFileName.endsWith(PRIORITY_EVENT_SUFFIX);\n+  }\n+\n+  private String generateEventFilename(boolean isHighPriority) {\n+    final String eventNumber =\n+        String.format(Locale.US, EVENT_COUNTER_FORMAT, eventCounter.getAndIncrement());\n+    final String prioritySuffix = isHighPriority ? PRIORITY_EVENT_SUFFIX : NORMAL_EVENT_SUFFIX;\n+    return EVENT_FILE_NAME_PREFIX + eventNumber + prioritySuffix;\n   }\n \n   private File getSessionDirectoryById(String sessionId) {\n     return new File(openSessionsDirectory, sessionId);\n   }\n \n+  private static int trimEvents(File sessionDirectory, int maximum) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjA0NzgyOQ=="}, "originalCommit": {"oid": "3f81d99566cc060ffe18caf769cfbb041052d472"}, "originalPosition": 170}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2NTEyMDY4OnYy", "diffSide": "RIGHT", "path": "firebase-crashlytics/src/main/java/com/google/firebase/crashlytics/internal/persistence/CrashlyticsReportPersistence.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxNDo1Mzo1MVrOFsWcuQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxNTo1NTowNVrOFsZAIg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjA0OTQ2NQ==", "bodyText": "getFilesInDirectory makes an array internally, did we consider just working with the array class? (e.g., by doing Arrays.sort)", "url": "https://github.com/firebase/firebase-android-sdk/pull/1255#discussion_r382049465", "createdAt": "2020-02-20T14:53:51Z", "author": {"login": "jakeouellette"}, "path": "firebase-crashlytics/src/main/java/com/google/firebase/crashlytics/internal/persistence/CrashlyticsReportPersistence.java", "diffHunk": "@@ -151,22 +178,55 @@ public void finalizeReports(String currentSessionId) {\n   }\n \n   public List<CrashlyticsReport> loadFinalizedReports() {\n-    final List<CrashlyticsReport> reports = new ArrayList<>();\n-    final List<File> fatalReports = getAllFilesInDirectory(fatalReportsDirectory);\n-    for (File reportFile : fatalReports) {\n-      reports.add(TRANSFORM.reportFromJson(readTextFile(reportFile)));\n+    final List<CrashlyticsReport> allReports = new ArrayList<>();\n+    final List<File> priorityReports = getAllFilesInDirectory(priorityReportsDirectory);\n+    for (File reportFile : priorityReports) {\n+      allReports.add(TRANSFORM.reportFromJson(readTextFile(reportFile)));\n     }\n-    final List<File> nonFatalReports = getAllFilesInDirectory(nonFatalReportsDirectory);\n-    for (File reportFile : nonFatalReports) {\n-      reports.add(TRANSFORM.reportFromJson(readTextFile(reportFile)));\n+    final List<File> reports = getAllFilesInDirectory(reportsDirectory);\n+    for (File reportFile : reports) {\n+      allReports.add(TRANSFORM.reportFromJson(readTextFile(reportFile)));\n     }\n-    return reports;\n+    return allReports;\n+  }\n+\n+  private static boolean isHighPriorityEvent(String eventFileName) {\n+    return eventFileName.endsWith(PRIORITY_EVENT_SUFFIX);\n+  }\n+\n+  private String generateEventFilename(boolean isHighPriority) {\n+    final String eventNumber =\n+        String.format(Locale.US, EVENT_COUNTER_FORMAT, eventCounter.getAndIncrement());\n+    final String prioritySuffix = isHighPriority ? PRIORITY_EVENT_SUFFIX : NORMAL_EVENT_SUFFIX;\n+    return EVENT_FILE_NAME_PREFIX + eventNumber + prioritySuffix;\n   }\n \n   private File getSessionDirectoryById(String sessionId) {\n     return new File(openSessionsDirectory, sessionId);\n   }\n \n+  private static int trimEvents(File sessionDirectory, int maximum) {\n+    final List<File> normalPriorityEventFiles =\n+        getFilesInDirectory(\n+            sessionDirectory, CrashlyticsReportPersistence::isNormalPriorityEventFile);\n+    Collections.sort(normalPriorityEventFiles, CrashlyticsReportPersistence::oldestEventFileFirst);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f81d99566cc060ffe18caf769cfbb041052d472"}, "originalPosition": 174}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjA5MTI5OA==", "bodyText": "I think, in general, working with lists is simpler than working with arrays, and in this case I'm not sure there's much performance benefit either way. Happy to discuss it further if you feel strongly about it, though.", "url": "https://github.com/firebase/firebase-android-sdk/pull/1255#discussion_r382091298", "createdAt": "2020-02-20T15:55:05Z", "author": {"login": "mrwillis21"}, "path": "firebase-crashlytics/src/main/java/com/google/firebase/crashlytics/internal/persistence/CrashlyticsReportPersistence.java", "diffHunk": "@@ -151,22 +178,55 @@ public void finalizeReports(String currentSessionId) {\n   }\n \n   public List<CrashlyticsReport> loadFinalizedReports() {\n-    final List<CrashlyticsReport> reports = new ArrayList<>();\n-    final List<File> fatalReports = getAllFilesInDirectory(fatalReportsDirectory);\n-    for (File reportFile : fatalReports) {\n-      reports.add(TRANSFORM.reportFromJson(readTextFile(reportFile)));\n+    final List<CrashlyticsReport> allReports = new ArrayList<>();\n+    final List<File> priorityReports = getAllFilesInDirectory(priorityReportsDirectory);\n+    for (File reportFile : priorityReports) {\n+      allReports.add(TRANSFORM.reportFromJson(readTextFile(reportFile)));\n     }\n-    final List<File> nonFatalReports = getAllFilesInDirectory(nonFatalReportsDirectory);\n-    for (File reportFile : nonFatalReports) {\n-      reports.add(TRANSFORM.reportFromJson(readTextFile(reportFile)));\n+    final List<File> reports = getAllFilesInDirectory(reportsDirectory);\n+    for (File reportFile : reports) {\n+      allReports.add(TRANSFORM.reportFromJson(readTextFile(reportFile)));\n     }\n-    return reports;\n+    return allReports;\n+  }\n+\n+  private static boolean isHighPriorityEvent(String eventFileName) {\n+    return eventFileName.endsWith(PRIORITY_EVENT_SUFFIX);\n+  }\n+\n+  private String generateEventFilename(boolean isHighPriority) {\n+    final String eventNumber =\n+        String.format(Locale.US, EVENT_COUNTER_FORMAT, eventCounter.getAndIncrement());\n+    final String prioritySuffix = isHighPriority ? PRIORITY_EVENT_SUFFIX : NORMAL_EVENT_SUFFIX;\n+    return EVENT_FILE_NAME_PREFIX + eventNumber + prioritySuffix;\n   }\n \n   private File getSessionDirectoryById(String sessionId) {\n     return new File(openSessionsDirectory, sessionId);\n   }\n \n+  private static int trimEvents(File sessionDirectory, int maximum) {\n+    final List<File> normalPriorityEventFiles =\n+        getFilesInDirectory(\n+            sessionDirectory, CrashlyticsReportPersistence::isNormalPriorityEventFile);\n+    Collections.sort(normalPriorityEventFiles, CrashlyticsReportPersistence::oldestEventFileFirst);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjA0OTQ2NQ=="}, "originalCommit": {"oid": "3f81d99566cc060ffe18caf769cfbb041052d472"}, "originalPosition": 174}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2NTEyODQyOnYy", "diffSide": "RIGHT", "path": "firebase-crashlytics/src/main/java/com/google/firebase/crashlytics/internal/persistence/CrashlyticsReportPersistence.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxNDo1NTo1MlrOFsWhrw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxNDo1ODoyNFrOFsWoyA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjA1MDczNQ==", "bodyText": "do we use // TODO(name): style?", "url": "https://github.com/firebase/firebase-android-sdk/pull/1255#discussion_r382050735", "createdAt": "2020-02-20T14:55:52Z", "author": {"login": "jakeouellette"}, "path": "firebase-crashlytics/src/main/java/com/google/firebase/crashlytics/internal/persistence/CrashlyticsReportPersistence.java", "diffHunk": "@@ -43,36 +43,41 @@\n \n   private static final Charset UTF_8 = Charset.forName(\"UTF-8\");\n \n-  private static final String WORKING_DIRECTORY_NAME = \"fl\";\n+  private static final String WORKING_DIRECTORY_NAME = \"report-persistence\";\n   private static final String OPEN_SESSIONS_DIRECTORY_NAME = \"sessions\";\n-  private static final String FATAL_DIRECTORY_NAME = \"fatal\";\n-  private static final String NON_FATAL_DIRECTORY_NAME = \"non-fatal\";\n+  private static final String PRIORITY_REPORTS_DIRECTORY = \"priority-reports\";\n+  private static final String REPORTS_DIRECTORY = \"reports\";\n \n-  private static final String REPORT_FILE_NAME = \"report.json\";\n+  private static final String REPORT_FILE_NAME = \"report\";\n   private static final String EVENT_FILE_NAME_PREFIX = \"event\";\n-  private static final String EVENT_FILE_NAME_FORMAT = EVENT_FILE_NAME_PREFIX + \"%s.json\";\n-  private static final String EVENT_COUNTER_FORMAT = \"%010d\";\n-\n-  private static final String EVENT_TYPE_FATAL = \"crash\";\n+  private static final int EVENT_COUNTER_WIDTH = 10; // String width of maximum positive int value\n+  private static final String EVENT_COUNTER_FORMAT = \"%0\" + EVENT_COUNTER_WIDTH + \"d\";\n+  private static final int EVENT_NAME_LENGTH =\n+      EVENT_FILE_NAME_PREFIX.length() + EVENT_COUNTER_WIDTH;\n+  private static final String PRIORITY_EVENT_SUFFIX = \"_\";\n+  private static final String NORMAL_EVENT_SUFFIX = \"\";\n \n   private static final CrashlyticsReportJsonTransform TRANSFORM =\n       new CrashlyticsReportJsonTransform();\n \n   private final AtomicInteger eventCounter = new AtomicInteger(0);\n \n   // Storage for sessions that are still being written to\n-  private File openSessionsDirectory;\n+  private final File openSessionsDirectory;\n \n   // Storage for finalized reports\n-  // Keep finalized reports organized by whether or not they contain a fatal event.\n-  private File fatalReportsDirectory;\n-  private File nonFatalReportsDirectory;\n+  private final File priorityReportsDirectory;\n+  private final File reportsDirectory;\n+\n+  // TODO: Add settings override", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f81d99566cc060ffe18caf769cfbb041052d472"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjA1MjU1Mg==", "bodyText": "Not in OSS", "url": "https://github.com/firebase/firebase-android-sdk/pull/1255#discussion_r382052552", "createdAt": "2020-02-20T14:58:24Z", "author": {"login": "mrwillis21"}, "path": "firebase-crashlytics/src/main/java/com/google/firebase/crashlytics/internal/persistence/CrashlyticsReportPersistence.java", "diffHunk": "@@ -43,36 +43,41 @@\n \n   private static final Charset UTF_8 = Charset.forName(\"UTF-8\");\n \n-  private static final String WORKING_DIRECTORY_NAME = \"fl\";\n+  private static final String WORKING_DIRECTORY_NAME = \"report-persistence\";\n   private static final String OPEN_SESSIONS_DIRECTORY_NAME = \"sessions\";\n-  private static final String FATAL_DIRECTORY_NAME = \"fatal\";\n-  private static final String NON_FATAL_DIRECTORY_NAME = \"non-fatal\";\n+  private static final String PRIORITY_REPORTS_DIRECTORY = \"priority-reports\";\n+  private static final String REPORTS_DIRECTORY = \"reports\";\n \n-  private static final String REPORT_FILE_NAME = \"report.json\";\n+  private static final String REPORT_FILE_NAME = \"report\";\n   private static final String EVENT_FILE_NAME_PREFIX = \"event\";\n-  private static final String EVENT_FILE_NAME_FORMAT = EVENT_FILE_NAME_PREFIX + \"%s.json\";\n-  private static final String EVENT_COUNTER_FORMAT = \"%010d\";\n-\n-  private static final String EVENT_TYPE_FATAL = \"crash\";\n+  private static final int EVENT_COUNTER_WIDTH = 10; // String width of maximum positive int value\n+  private static final String EVENT_COUNTER_FORMAT = \"%0\" + EVENT_COUNTER_WIDTH + \"d\";\n+  private static final int EVENT_NAME_LENGTH =\n+      EVENT_FILE_NAME_PREFIX.length() + EVENT_COUNTER_WIDTH;\n+  private static final String PRIORITY_EVENT_SUFFIX = \"_\";\n+  private static final String NORMAL_EVENT_SUFFIX = \"\";\n \n   private static final CrashlyticsReportJsonTransform TRANSFORM =\n       new CrashlyticsReportJsonTransform();\n \n   private final AtomicInteger eventCounter = new AtomicInteger(0);\n \n   // Storage for sessions that are still being written to\n-  private File openSessionsDirectory;\n+  private final File openSessionsDirectory;\n \n   // Storage for finalized reports\n-  // Keep finalized reports organized by whether or not they contain a fatal event.\n-  private File fatalReportsDirectory;\n-  private File nonFatalReportsDirectory;\n+  private final File priorityReportsDirectory;\n+  private final File reportsDirectory;\n+\n+  // TODO: Add settings override", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjA1MDczNQ=="}, "originalCommit": {"oid": "3f81d99566cc060ffe18caf769cfbb041052d472"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2NTE0MjQ1OnYy", "diffSide": "RIGHT", "path": "firebase-crashlytics/src/main/java/com/google/firebase/crashlytics/internal/persistence/CrashlyticsReportPersistence.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxNDo1ODo1OFrOFsWqYw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxNjowMzoxNVrOFsZVpA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjA1Mjk2Mw==", "bodyText": "This was a headscratcher for me at first, if a name is [path][name-part][number-part][priority-part], I wasn't realizing eventNameOnly returned [name-part][number-part].", "url": "https://github.com/firebase/firebase-android-sdk/pull/1255#discussion_r382052963", "createdAt": "2020-02-20T14:58:58Z", "author": {"login": "jakeouellette"}, "path": "firebase-crashlytics/src/main/java/com/google/firebase/crashlytics/internal/persistence/CrashlyticsReportPersistence.java", "diffHunk": "@@ -151,22 +178,55 @@ public void finalizeReports(String currentSessionId) {\n   }\n \n   public List<CrashlyticsReport> loadFinalizedReports() {\n-    final List<CrashlyticsReport> reports = new ArrayList<>();\n-    final List<File> fatalReports = getAllFilesInDirectory(fatalReportsDirectory);\n-    for (File reportFile : fatalReports) {\n-      reports.add(TRANSFORM.reportFromJson(readTextFile(reportFile)));\n+    final List<CrashlyticsReport> allReports = new ArrayList<>();\n+    final List<File> priorityReports = getAllFilesInDirectory(priorityReportsDirectory);\n+    for (File reportFile : priorityReports) {\n+      allReports.add(TRANSFORM.reportFromJson(readTextFile(reportFile)));\n     }\n-    final List<File> nonFatalReports = getAllFilesInDirectory(nonFatalReportsDirectory);\n-    for (File reportFile : nonFatalReports) {\n-      reports.add(TRANSFORM.reportFromJson(readTextFile(reportFile)));\n+    final List<File> reports = getAllFilesInDirectory(reportsDirectory);\n+    for (File reportFile : reports) {\n+      allReports.add(TRANSFORM.reportFromJson(readTextFile(reportFile)));\n     }\n-    return reports;\n+    return allReports;\n+  }\n+\n+  private static boolean isHighPriorityEvent(String eventFileName) {\n+    return eventFileName.endsWith(PRIORITY_EVENT_SUFFIX);\n+  }\n+\n+  private String generateEventFilename(boolean isHighPriority) {\n+    final String eventNumber =\n+        String.format(Locale.US, EVENT_COUNTER_FORMAT, eventCounter.getAndIncrement());\n+    final String prioritySuffix = isHighPriority ? PRIORITY_EVENT_SUFFIX : NORMAL_EVENT_SUFFIX;\n+    return EVENT_FILE_NAME_PREFIX + eventNumber + prioritySuffix;\n   }\n \n   private File getSessionDirectoryById(String sessionId) {\n     return new File(openSessionsDirectory, sessionId);\n   }\n \n+  private static int trimEvents(File sessionDirectory, int maximum) {\n+    final List<File> normalPriorityEventFiles =\n+        getFilesInDirectory(\n+            sessionDirectory, CrashlyticsReportPersistence::isNormalPriorityEventFile);\n+    Collections.sort(normalPriorityEventFiles, CrashlyticsReportPersistence::oldestEventFileFirst);\n+    return capFilesCount(normalPriorityEventFiles, maximum);\n+  }\n+\n+  private static String eventNameOnly(String eventFileName) {\n+    return eventFileName.substring(0, EVENT_NAME_LENGTH);\n+  }\n+\n+  private static boolean isNormalPriorityEventFile(File dir, String name) {\n+    return name.startsWith(EVENT_FILE_NAME_PREFIX) && !isHighPriorityEvent(name);\n+  }\n+\n+  private static int oldestEventFileFirst(File f1, File f2) {\n+    final String name1 = eventNameOnly(f1.getName());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f81d99566cc060ffe18caf769cfbb041052d472"}, "originalPosition": 187}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjA1MzMzMg==", "bodyText": "Open to other name ideas. :)", "url": "https://github.com/firebase/firebase-android-sdk/pull/1255#discussion_r382053332", "createdAt": "2020-02-20T14:59:30Z", "author": {"login": "mrwillis21"}, "path": "firebase-crashlytics/src/main/java/com/google/firebase/crashlytics/internal/persistence/CrashlyticsReportPersistence.java", "diffHunk": "@@ -151,22 +178,55 @@ public void finalizeReports(String currentSessionId) {\n   }\n \n   public List<CrashlyticsReport> loadFinalizedReports() {\n-    final List<CrashlyticsReport> reports = new ArrayList<>();\n-    final List<File> fatalReports = getAllFilesInDirectory(fatalReportsDirectory);\n-    for (File reportFile : fatalReports) {\n-      reports.add(TRANSFORM.reportFromJson(readTextFile(reportFile)));\n+    final List<CrashlyticsReport> allReports = new ArrayList<>();\n+    final List<File> priorityReports = getAllFilesInDirectory(priorityReportsDirectory);\n+    for (File reportFile : priorityReports) {\n+      allReports.add(TRANSFORM.reportFromJson(readTextFile(reportFile)));\n     }\n-    final List<File> nonFatalReports = getAllFilesInDirectory(nonFatalReportsDirectory);\n-    for (File reportFile : nonFatalReports) {\n-      reports.add(TRANSFORM.reportFromJson(readTextFile(reportFile)));\n+    final List<File> reports = getAllFilesInDirectory(reportsDirectory);\n+    for (File reportFile : reports) {\n+      allReports.add(TRANSFORM.reportFromJson(readTextFile(reportFile)));\n     }\n-    return reports;\n+    return allReports;\n+  }\n+\n+  private static boolean isHighPriorityEvent(String eventFileName) {\n+    return eventFileName.endsWith(PRIORITY_EVENT_SUFFIX);\n+  }\n+\n+  private String generateEventFilename(boolean isHighPriority) {\n+    final String eventNumber =\n+        String.format(Locale.US, EVENT_COUNTER_FORMAT, eventCounter.getAndIncrement());\n+    final String prioritySuffix = isHighPriority ? PRIORITY_EVENT_SUFFIX : NORMAL_EVENT_SUFFIX;\n+    return EVENT_FILE_NAME_PREFIX + eventNumber + prioritySuffix;\n   }\n \n   private File getSessionDirectoryById(String sessionId) {\n     return new File(openSessionsDirectory, sessionId);\n   }\n \n+  private static int trimEvents(File sessionDirectory, int maximum) {\n+    final List<File> normalPriorityEventFiles =\n+        getFilesInDirectory(\n+            sessionDirectory, CrashlyticsReportPersistence::isNormalPriorityEventFile);\n+    Collections.sort(normalPriorityEventFiles, CrashlyticsReportPersistence::oldestEventFileFirst);\n+    return capFilesCount(normalPriorityEventFiles, maximum);\n+  }\n+\n+  private static String eventNameOnly(String eventFileName) {\n+    return eventFileName.substring(0, EVENT_NAME_LENGTH);\n+  }\n+\n+  private static boolean isNormalPriorityEventFile(File dir, String name) {\n+    return name.startsWith(EVENT_FILE_NAME_PREFIX) && !isHighPriorityEvent(name);\n+  }\n+\n+  private static int oldestEventFileFirst(File f1, File f2) {\n+    final String name1 = eventNameOnly(f1.getName());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjA1Mjk2Mw=="}, "originalCommit": {"oid": "3f81d99566cc060ffe18caf769cfbb041052d472"}, "originalPosition": 187}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjA1MzU3NA==", "bodyText": "maybe a comment or a slightly adjusted name (e.g., getEventNameAndEventNumber?)", "url": "https://github.com/firebase/firebase-android-sdk/pull/1255#discussion_r382053574", "createdAt": "2020-02-20T14:59:51Z", "author": {"login": "jakeouellette"}, "path": "firebase-crashlytics/src/main/java/com/google/firebase/crashlytics/internal/persistence/CrashlyticsReportPersistence.java", "diffHunk": "@@ -151,22 +178,55 @@ public void finalizeReports(String currentSessionId) {\n   }\n \n   public List<CrashlyticsReport> loadFinalizedReports() {\n-    final List<CrashlyticsReport> reports = new ArrayList<>();\n-    final List<File> fatalReports = getAllFilesInDirectory(fatalReportsDirectory);\n-    for (File reportFile : fatalReports) {\n-      reports.add(TRANSFORM.reportFromJson(readTextFile(reportFile)));\n+    final List<CrashlyticsReport> allReports = new ArrayList<>();\n+    final List<File> priorityReports = getAllFilesInDirectory(priorityReportsDirectory);\n+    for (File reportFile : priorityReports) {\n+      allReports.add(TRANSFORM.reportFromJson(readTextFile(reportFile)));\n     }\n-    final List<File> nonFatalReports = getAllFilesInDirectory(nonFatalReportsDirectory);\n-    for (File reportFile : nonFatalReports) {\n-      reports.add(TRANSFORM.reportFromJson(readTextFile(reportFile)));\n+    final List<File> reports = getAllFilesInDirectory(reportsDirectory);\n+    for (File reportFile : reports) {\n+      allReports.add(TRANSFORM.reportFromJson(readTextFile(reportFile)));\n     }\n-    return reports;\n+    return allReports;\n+  }\n+\n+  private static boolean isHighPriorityEvent(String eventFileName) {\n+    return eventFileName.endsWith(PRIORITY_EVENT_SUFFIX);\n+  }\n+\n+  private String generateEventFilename(boolean isHighPriority) {\n+    final String eventNumber =\n+        String.format(Locale.US, EVENT_COUNTER_FORMAT, eventCounter.getAndIncrement());\n+    final String prioritySuffix = isHighPriority ? PRIORITY_EVENT_SUFFIX : NORMAL_EVENT_SUFFIX;\n+    return EVENT_FILE_NAME_PREFIX + eventNumber + prioritySuffix;\n   }\n \n   private File getSessionDirectoryById(String sessionId) {\n     return new File(openSessionsDirectory, sessionId);\n   }\n \n+  private static int trimEvents(File sessionDirectory, int maximum) {\n+    final List<File> normalPriorityEventFiles =\n+        getFilesInDirectory(\n+            sessionDirectory, CrashlyticsReportPersistence::isNormalPriorityEventFile);\n+    Collections.sort(normalPriorityEventFiles, CrashlyticsReportPersistence::oldestEventFileFirst);\n+    return capFilesCount(normalPriorityEventFiles, maximum);\n+  }\n+\n+  private static String eventNameOnly(String eventFileName) {\n+    return eventFileName.substring(0, EVENT_NAME_LENGTH);\n+  }\n+\n+  private static boolean isNormalPriorityEventFile(File dir, String name) {\n+    return name.startsWith(EVENT_FILE_NAME_PREFIX) && !isHighPriorityEvent(name);\n+  }\n+\n+  private static int oldestEventFileFirst(File f1, File f2) {\n+    final String name1 = eventNameOnly(f1.getName());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjA1Mjk2Mw=="}, "originalCommit": {"oid": "3f81d99566cc060ffe18caf769cfbb041052d472"}, "originalPosition": 187}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjA5NjgwNA==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/firebase/firebase-android-sdk/pull/1255#discussion_r382096804", "createdAt": "2020-02-20T16:03:15Z", "author": {"login": "mrwillis21"}, "path": "firebase-crashlytics/src/main/java/com/google/firebase/crashlytics/internal/persistence/CrashlyticsReportPersistence.java", "diffHunk": "@@ -151,22 +178,55 @@ public void finalizeReports(String currentSessionId) {\n   }\n \n   public List<CrashlyticsReport> loadFinalizedReports() {\n-    final List<CrashlyticsReport> reports = new ArrayList<>();\n-    final List<File> fatalReports = getAllFilesInDirectory(fatalReportsDirectory);\n-    for (File reportFile : fatalReports) {\n-      reports.add(TRANSFORM.reportFromJson(readTextFile(reportFile)));\n+    final List<CrashlyticsReport> allReports = new ArrayList<>();\n+    final List<File> priorityReports = getAllFilesInDirectory(priorityReportsDirectory);\n+    for (File reportFile : priorityReports) {\n+      allReports.add(TRANSFORM.reportFromJson(readTextFile(reportFile)));\n     }\n-    final List<File> nonFatalReports = getAllFilesInDirectory(nonFatalReportsDirectory);\n-    for (File reportFile : nonFatalReports) {\n-      reports.add(TRANSFORM.reportFromJson(readTextFile(reportFile)));\n+    final List<File> reports = getAllFilesInDirectory(reportsDirectory);\n+    for (File reportFile : reports) {\n+      allReports.add(TRANSFORM.reportFromJson(readTextFile(reportFile)));\n     }\n-    return reports;\n+    return allReports;\n+  }\n+\n+  private static boolean isHighPriorityEvent(String eventFileName) {\n+    return eventFileName.endsWith(PRIORITY_EVENT_SUFFIX);\n+  }\n+\n+  private String generateEventFilename(boolean isHighPriority) {\n+    final String eventNumber =\n+        String.format(Locale.US, EVENT_COUNTER_FORMAT, eventCounter.getAndIncrement());\n+    final String prioritySuffix = isHighPriority ? PRIORITY_EVENT_SUFFIX : NORMAL_EVENT_SUFFIX;\n+    return EVENT_FILE_NAME_PREFIX + eventNumber + prioritySuffix;\n   }\n \n   private File getSessionDirectoryById(String sessionId) {\n     return new File(openSessionsDirectory, sessionId);\n   }\n \n+  private static int trimEvents(File sessionDirectory, int maximum) {\n+    final List<File> normalPriorityEventFiles =\n+        getFilesInDirectory(\n+            sessionDirectory, CrashlyticsReportPersistence::isNormalPriorityEventFile);\n+    Collections.sort(normalPriorityEventFiles, CrashlyticsReportPersistence::oldestEventFileFirst);\n+    return capFilesCount(normalPriorityEventFiles, maximum);\n+  }\n+\n+  private static String eventNameOnly(String eventFileName) {\n+    return eventFileName.substring(0, EVENT_NAME_LENGTH);\n+  }\n+\n+  private static boolean isNormalPriorityEventFile(File dir, String name) {\n+    return name.startsWith(EVENT_FILE_NAME_PREFIX) && !isHighPriorityEvent(name);\n+  }\n+\n+  private static int oldestEventFileFirst(File f1, File f2) {\n+    final String name1 = eventNameOnly(f1.getName());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjA1Mjk2Mw=="}, "originalCommit": {"oid": "3f81d99566cc060ffe18caf769cfbb041052d472"}, "originalPosition": 187}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2NTYxNzExOnYy", "diffSide": "RIGHT", "path": "firebase-crashlytics/src/main/java/com/google/firebase/crashlytics/internal/persistence/CrashlyticsReportPersistence.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxNjo1NDo1MVrOFsbTzg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxNzoxODo1MFrOFscIuA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjEyOTEwMg==", "bodyText": "I'm prefer startsWith and endsWith here, though I could also see some folks preferring a regex match", "url": "https://github.com/firebase/firebase-android-sdk/pull/1255#discussion_r382129102", "createdAt": "2020-02-20T16:54:51Z", "author": {"login": "jakeouellette"}, "path": "firebase-crashlytics/src/main/java/com/google/firebase/crashlytics/internal/persistence/CrashlyticsReportPersistence.java", "diffHunk": "@@ -190,21 +191,24 @@ public void finalizeReports(String currentSessionId) {\n     return allReports;\n   }\n \n-  private static boolean isHighPriorityEvent(String eventFileName) {\n-    return eventFileName.endsWith(PRIORITY_EVENT_SUFFIX);\n+  private static boolean isHighPriorityEventFile(String fileName) {\n+    return fileName.startsWith(EVENT_FILE_NAME_PREFIX) && fileName.endsWith(PRIORITY_EVENT_SUFFIX);\n   }\n \n-  private String generateEventFilename(boolean isHighPriority) {\n-    final String eventNumber =\n-        String.format(Locale.US, EVENT_COUNTER_FORMAT, eventCounter.getAndIncrement());\n-    final String prioritySuffix = isHighPriority ? PRIORITY_EVENT_SUFFIX : NORMAL_EVENT_SUFFIX;\n-    return EVENT_FILE_NAME_PREFIX + eventNumber + prioritySuffix;\n+  private static boolean isNormalPriorityEventFile(File dir, String name) {\n+    return name.startsWith(EVENT_FILE_NAME_PREFIX) && !name.endsWith(PRIORITY_EVENT_SUFFIX);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d3cb728176ea4be6512917bc4d3def417aec05d9"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjE0MjY0OA==", "bodyText": "Pretty certain startsWith and endsWith are more efficient than a regex would be, which is why I used them.", "url": "https://github.com/firebase/firebase-android-sdk/pull/1255#discussion_r382142648", "createdAt": "2020-02-20T17:18:50Z", "author": {"login": "mrwillis21"}, "path": "firebase-crashlytics/src/main/java/com/google/firebase/crashlytics/internal/persistence/CrashlyticsReportPersistence.java", "diffHunk": "@@ -190,21 +191,24 @@ public void finalizeReports(String currentSessionId) {\n     return allReports;\n   }\n \n-  private static boolean isHighPriorityEvent(String eventFileName) {\n-    return eventFileName.endsWith(PRIORITY_EVENT_SUFFIX);\n+  private static boolean isHighPriorityEventFile(String fileName) {\n+    return fileName.startsWith(EVENT_FILE_NAME_PREFIX) && fileName.endsWith(PRIORITY_EVENT_SUFFIX);\n   }\n \n-  private String generateEventFilename(boolean isHighPriority) {\n-    final String eventNumber =\n-        String.format(Locale.US, EVENT_COUNTER_FORMAT, eventCounter.getAndIncrement());\n-    final String prioritySuffix = isHighPriority ? PRIORITY_EVENT_SUFFIX : NORMAL_EVENT_SUFFIX;\n-    return EVENT_FILE_NAME_PREFIX + eventNumber + prioritySuffix;\n+  private static boolean isNormalPriorityEventFile(File dir, String name) {\n+    return name.startsWith(EVENT_FILE_NAME_PREFIX) && !name.endsWith(PRIORITY_EVENT_SUFFIX);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjEyOTEwMg=="}, "originalCommit": {"oid": "d3cb728176ea4be6512917bc4d3def417aec05d9"}, "originalPosition": 35}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 779, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}