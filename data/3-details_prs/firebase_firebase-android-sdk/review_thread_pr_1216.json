{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcyMTQ4Njgz", "number": 1216, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QwMToxMTozMlrODd4i9Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QwMToxMjo0OVrODd4jyw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyNjYxNzQ5OnYy", "diffSide": "RIGHT", "path": "firebase-firestore/src/test/java/com/google/firebase/firestore/model/ObjectValueBuilderTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QwMToxMTozMlrOFmvg3A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QwNDowMDoyMVrOFmxu2w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjE2ODY2OA==", "bodyText": "Static import TestUtil.wrap (to match other usages above).", "url": "https://github.com/firebase/firebase-android-sdk/pull/1216#discussion_r376168668", "createdAt": "2020-02-07T01:11:32Z", "author": {"login": "wilhuff"}, "path": "firebase-firestore/src/test/java/com/google/firebase/firestore/model/ObjectValueBuilderTest.java", "diffHunk": "@@ -31,9 +31,9 @@\n @Config(manifest = Config.NONE)\n public class ObjectValueBuilderTest {\n   private String fooString = \"foo\";\n-  private Value fooValue = valueOf(fooString);\n+  private Value fooValue = TestUtil.wrap(fooString);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9a89d753cbcc0f96b24e39387d8babd0f703afb0"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjIwNTAxOQ==", "bodyText": "Done", "url": "https://github.com/firebase/firebase-android-sdk/pull/1216#discussion_r376205019", "createdAt": "2020-02-07T04:00:21Z", "author": {"login": "schmidt-sebastian"}, "path": "firebase-firestore/src/test/java/com/google/firebase/firestore/model/ObjectValueBuilderTest.java", "diffHunk": "@@ -31,9 +31,9 @@\n @Config(manifest = Config.NONE)\n public class ObjectValueBuilderTest {\n   private String fooString = \"foo\";\n-  private Value fooValue = valueOf(fooString);\n+  private Value fooValue = TestUtil.wrap(fooString);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjE2ODY2OA=="}, "originalCommit": {"oid": "9a89d753cbcc0f96b24e39387d8babd0f703afb0"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyNjYxOTYzOnYy", "diffSide": "RIGHT", "path": "firebase-firestore/src/test/java/com/google/firebase/firestore/remote/RemoteSerializerTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QwMToxMjo0OVrOFmviIA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QwNDowMDoyNFrOFmxu5A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjE2ODk5Mg==", "bodyText": "Replace fully qualified com.google.firestore.v1.Value declarations in here with just Value?", "url": "https://github.com/firebase/firebase-android-sdk/pull/1216#discussion_r376168992", "createdAt": "2020-02-07T01:12:49Z", "author": {"login": "wilhuff"}, "path": "firebase-firestore/src/test/java/com/google/firebase/firestore/remote/RemoteSerializerTest.java", "diffHunk": "@@ -118,16 +116,15 @@ public void setUp() {\n   }\n \n   private void assertRoundTrip(\n-      FieldValue value, com.google.firestore.v1.Value proto, ValueTypeCase typeCase) {\n-    com.google.firestore.v1.Value actual = value.getProto();\n+      Value actual, com.google.firestore.v1.Value proto, ValueTypeCase typeCase) {\n     assertEquals(typeCase, actual.getValueTypeCase());\n     assertEquals(proto, actual);\n-    assertTrue(ProtoValues.equals(value.getProto(), proto));\n+    assertTrue(ProtoValues.equals(actual, proto));\n   }\n \n   @Test\n   public void testEncodesNull() {\n-    FieldValue value = wrap(null);\n+    Value value = wrap(null);\n     com.google.firestore.v1.Value proto = valueBuilder().setNullValueValue(0).build();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9a89d753cbcc0f96b24e39387d8babd0f703afb0"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjIwNTAyOA==", "bodyText": "Done", "url": "https://github.com/firebase/firebase-android-sdk/pull/1216#discussion_r376205028", "createdAt": "2020-02-07T04:00:24Z", "author": {"login": "schmidt-sebastian"}, "path": "firebase-firestore/src/test/java/com/google/firebase/firestore/remote/RemoteSerializerTest.java", "diffHunk": "@@ -118,16 +116,15 @@ public void setUp() {\n   }\n \n   private void assertRoundTrip(\n-      FieldValue value, com.google.firestore.v1.Value proto, ValueTypeCase typeCase) {\n-    com.google.firestore.v1.Value actual = value.getProto();\n+      Value actual, com.google.firestore.v1.Value proto, ValueTypeCase typeCase) {\n     assertEquals(typeCase, actual.getValueTypeCase());\n     assertEquals(proto, actual);\n-    assertTrue(ProtoValues.equals(value.getProto(), proto));\n+    assertTrue(ProtoValues.equals(actual, proto));\n   }\n \n   @Test\n   public void testEncodesNull() {\n-    FieldValue value = wrap(null);\n+    Value value = wrap(null);\n     com.google.firestore.v1.Value proto = valueBuilder().setNullValueValue(0).build();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjE2ODk5Mg=="}, "originalCommit": {"oid": "9a89d753cbcc0f96b24e39387d8babd0f703afb0"}, "originalPosition": 33}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1003, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}