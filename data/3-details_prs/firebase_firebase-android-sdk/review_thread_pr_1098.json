{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYwMjA3OTk0", "number": 1098, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQyMjozMToxM1rODWsEDA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QyMzowNTo0MFrODXr4cw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1MTE3MTk2OnYy", "diffSide": "RIGHT", "path": "firebase-abt/src/main/java/com/google/firebase/abt/FirebaseABTesting.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQyMjozMToxM1rOFbl2Tw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QyMjo1Mzo1MVrOFdHSgw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDQ3NTk4Mw==", "bodyText": "Maybe 'notes that an experiment is active in experiment metrics reporting'\nthe call should 'trigger' the experiment regardless of the triggering condition, right? (Anything hitting this wants to manually set the experiment as triggered/active'", "url": "https://github.com/firebase/firebase-android-sdk/pull/1098#discussion_r364475983", "createdAt": "2020-01-08T22:31:13Z", "author": {"login": "MeghaB"}, "path": "firebase-abt/src/main/java/com/google/firebase/abt/FirebaseABTesting.java", "diffHunk": "@@ -140,6 +140,52 @@ public void removeAllExperiments() throws AbtException {\n     removeExperiments(getAllExperimentsInAnalytics());\n   }\n \n+  /**\n+   * Adds an experiment to be active in GA by setting a null triggering condition on the provided", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5869fcf158156c21ed3d60d4be6a3ff32bb7bb0d"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjA3MjQ1MQ==", "bodyText": "slightly improved text to reflect this more clearly", "url": "https://github.com/firebase/firebase-android-sdk/pull/1098#discussion_r366072451", "createdAt": "2020-01-13T22:53:51Z", "author": {"login": "JasonAHeron"}, "path": "firebase-abt/src/main/java/com/google/firebase/abt/FirebaseABTesting.java", "diffHunk": "@@ -140,6 +140,52 @@ public void removeAllExperiments() throws AbtException {\n     removeExperiments(getAllExperimentsInAnalytics());\n   }\n \n+  /**\n+   * Adds an experiment to be active in GA by setting a null triggering condition on the provided", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDQ3NTk4Mw=="}, "originalCommit": {"oid": "5869fcf158156c21ed3d60d4be6a3ff32bb7bb0d"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1MTE3NTEyOnYy", "diffSide": "RIGHT", "path": "firebase-abt/src/main/java/com/google/firebase/abt/FirebaseABTesting.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQyMjozMjozOVrOFbl4Ww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QyMjo1Njo1NVrOFdHWqw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDQ3NjUwNw==", "bodyText": "note here maybe that it overrides the full running list?\nthis comment would be confusing w.r.t 'reportActive'\nhere we should only 'clean up experiments which are noted in GA but not eligible for this device'? (running might be confused with 'active')", "url": "https://github.com/firebase/firebase-android-sdk/pull/1098#discussion_r364476507", "createdAt": "2020-01-08T22:32:39Z", "author": {"login": "MeghaB"}, "path": "firebase-abt/src/main/java/com/google/firebase/abt/FirebaseABTesting.java", "diffHunk": "@@ -140,6 +140,52 @@ public void removeAllExperiments() throws AbtException {\n     removeExperiments(getAllExperimentsInAnalytics());\n   }\n \n+  /**\n+   * Adds an experiment to be active in GA by setting a null triggering condition on the provided\n+   * experiment. This results in the experiment being active as if it was triggered by the\n+   * triggering condition event being seen in GA.\n+   *\n+   * <p>Note: This is a blocking call and therefore should be called from a worker thread.\n+   *\n+   * @param activeExperiment The {@link AbtExperimentInfo} that should be set as active in GA.\n+   * @throws AbtException If there is no Analytics SDK.\n+   */\n+  @WorkerThread\n+  public void reportActiveExperiment(AbtExperimentInfo activeExperiment) throws AbtException {\n+    throwAbtExceptionIfAnalyticsIsNull();\n+    ArrayList<AbtExperimentInfo> activeExperimentList = new ArrayList<>();\n+\n+    // Remove trigger event if it exists, this sets the experiment to active.\n+    Map<String, String> activeExperimentMap = activeExperiment.toStringMap();\n+    activeExperimentMap.remove(AbtExperimentInfo.TRIGGER_EVENT_KEY);\n+\n+    // Add experiment to GA\n+    activeExperimentList.add(AbtExperimentInfo.fromMap(activeExperimentMap));\n+    addExperiments(activeExperimentList);\n+  }\n+\n+  /**\n+   * Cleans up all experiments which are active in GA but not currently running.\n+   *\n+   * <p>Note: This is a blocking call and therefore should be called from a worker thread.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5869fcf158156c21ed3d60d4be6a3ff32bb7bb0d"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjA3MzUxNQ==", "bodyText": "updated", "url": "https://github.com/firebase/firebase-android-sdk/pull/1098#discussion_r366073515", "createdAt": "2020-01-13T22:56:55Z", "author": {"login": "JasonAHeron"}, "path": "firebase-abt/src/main/java/com/google/firebase/abt/FirebaseABTesting.java", "diffHunk": "@@ -140,6 +140,52 @@ public void removeAllExperiments() throws AbtException {\n     removeExperiments(getAllExperimentsInAnalytics());\n   }\n \n+  /**\n+   * Adds an experiment to be active in GA by setting a null triggering condition on the provided\n+   * experiment. This results in the experiment being active as if it was triggered by the\n+   * triggering condition event being seen in GA.\n+   *\n+   * <p>Note: This is a blocking call and therefore should be called from a worker thread.\n+   *\n+   * @param activeExperiment The {@link AbtExperimentInfo} that should be set as active in GA.\n+   * @throws AbtException If there is no Analytics SDK.\n+   */\n+  @WorkerThread\n+  public void reportActiveExperiment(AbtExperimentInfo activeExperiment) throws AbtException {\n+    throwAbtExceptionIfAnalyticsIsNull();\n+    ArrayList<AbtExperimentInfo> activeExperimentList = new ArrayList<>();\n+\n+    // Remove trigger event if it exists, this sets the experiment to active.\n+    Map<String, String> activeExperimentMap = activeExperiment.toStringMap();\n+    activeExperimentMap.remove(AbtExperimentInfo.TRIGGER_EVENT_KEY);\n+\n+    // Add experiment to GA\n+    activeExperimentList.add(AbtExperimentInfo.fromMap(activeExperimentMap));\n+    addExperiments(activeExperimentList);\n+  }\n+\n+  /**\n+   * Cleans up all experiments which are active in GA but not currently running.\n+   *\n+   * <p>Note: This is a blocking call and therefore should be called from a worker thread.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDQ3NjUwNw=="}, "originalCommit": {"oid": "5869fcf158156c21ed3d60d4be6a3ff32bb7bb0d"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1MTE3OTQzOnYy", "diffSide": "RIGHT", "path": "firebase-abt/src/test/java/com/google/firebase/abt/FirebaseABTWithoutAnalyticsTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQyMjozNDozNFrOFbl7Gg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQyMzowMDozMVrOFbmeXQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDQ3NzIxMA==", "bodyText": "is there another test that's not just 'without analytics' we can update?", "url": "https://github.com/firebase/firebase-android-sdk/pull/1098#discussion_r364477210", "createdAt": "2020-01-08T22:34:34Z", "author": {"login": "MeghaB"}, "path": "firebase-abt/src/test/java/com/google/firebase/abt/FirebaseABTWithoutAnalyticsTest.java", "diffHunk": "@@ -96,6 +96,49 @@ public void replaceAllExperimentsWithoutAnalytics_sendsValidExperimentList_throw\n     assertThat(actualException).hasMessageThat().contains(\"Analytics\");\n   }\n \n+  @Test\n+  public void reportRunningExperimentsWithoutAnalytics_throwsAbtException() {\n+    List<AbtExperimentInfo> experimentInfos = new ArrayList<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5869fcf158156c21ed3d60d4be6a3ff32bb7bb0d"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDQ4NjIzNw==", "bodyText": "sadly no, these are the only tests", "url": "https://github.com/firebase/firebase-android-sdk/pull/1098#discussion_r364486237", "createdAt": "2020-01-08T23:00:31Z", "author": {"login": "JasonAHeron"}, "path": "firebase-abt/src/test/java/com/google/firebase/abt/FirebaseABTWithoutAnalyticsTest.java", "diffHunk": "@@ -96,6 +96,49 @@ public void replaceAllExperimentsWithoutAnalytics_sendsValidExperimentList_throw\n     assertThat(actualException).hasMessageThat().contains(\"Analytics\");\n   }\n \n+  @Test\n+  public void reportRunningExperimentsWithoutAnalytics_throwsAbtException() {\n+    List<AbtExperimentInfo> experimentInfos = new ArrayList<>();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDQ3NzIxMA=="}, "originalCommit": {"oid": "5869fcf158156c21ed3d60d4be6a3ff32bb7bb0d"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI2MTM3NTQwOnYy", "diffSide": "RIGHT", "path": "firebase-abt/src/main/java/com/google/firebase/abt/FirebaseABTesting.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QyMToyNjozNVrOFdFHdw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QyMzoyOTowOFrOFdH-cw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjAzNjg1NQ==", "bodyText": "We should check with GA about this new origin code to make sure events will be processed as expected", "url": "https://github.com/firebase/firebase-android-sdk/pull/1098#discussion_r366036855", "createdAt": "2020-01-13T21:26:35Z", "author": {"login": "welkinlan"}, "path": "firebase-abt/src/main/java/com/google/firebase/abt/FirebaseABTesting.java", "diffHunk": "@@ -65,12 +67,14 @@\n    * Select keys of fields in the experiment descriptions returned from the Firebase Remote Config\n    * server.\n    */\n-  @StringDef({REMOTE_CONFIG})\n+  @StringDef({REMOTE_CONFIG, INAPP_MESSAGING})\n   @Retention(RetentionPolicy.SOURCE)\n   public @interface OriginService {\n \n     /** Must match the origin code in Google Analytics for Firebase. */\n     String REMOTE_CONFIG = \"frc\";\n+\n+    String INAPP_MESSAGING = \"fiam\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "870ea00d9a1f42f7402aeb29fde4b9b408bcf05e"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjA3MDM1Ng==", "bodyText": "yep!", "url": "https://github.com/firebase/firebase-android-sdk/pull/1098#discussion_r366070356", "createdAt": "2020-01-13T22:48:01Z", "author": {"login": "JasonAHeron"}, "path": "firebase-abt/src/main/java/com/google/firebase/abt/FirebaseABTesting.java", "diffHunk": "@@ -65,12 +67,14 @@\n    * Select keys of fields in the experiment descriptions returned from the Firebase Remote Config\n    * server.\n    */\n-  @StringDef({REMOTE_CONFIG})\n+  @StringDef({REMOTE_CONFIG, INAPP_MESSAGING})\n   @Retention(RetentionPolicy.SOURCE)\n   public @interface OriginService {\n \n     /** Must match the origin code in Google Analytics for Firebase. */\n     String REMOTE_CONFIG = \"frc\";\n+\n+    String INAPP_MESSAGING = \"fiam\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjAzNjg1NQ=="}, "originalCommit": {"oid": "870ea00d9a1f42f7402aeb29fde4b9b408bcf05e"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjA4MzY5OQ==", "bodyText": "turns out \"fiam\" is correct as per Megha", "url": "https://github.com/firebase/firebase-android-sdk/pull/1098#discussion_r366083699", "createdAt": "2020-01-13T23:29:08Z", "author": {"login": "JasonAHeron"}, "path": "firebase-abt/src/main/java/com/google/firebase/abt/FirebaseABTesting.java", "diffHunk": "@@ -65,12 +67,14 @@\n    * Select keys of fields in the experiment descriptions returned from the Firebase Remote Config\n    * server.\n    */\n-  @StringDef({REMOTE_CONFIG})\n+  @StringDef({REMOTE_CONFIG, INAPP_MESSAGING})\n   @Retention(RetentionPolicy.SOURCE)\n   public @interface OriginService {\n \n     /** Must match the origin code in Google Analytics for Firebase. */\n     String REMOTE_CONFIG = \"frc\";\n+\n+    String INAPP_MESSAGING = \"fiam\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjAzNjg1NQ=="}, "originalCommit": {"oid": "870ea00d9a1f42f7402aeb29fde4b9b408bcf05e"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI2MTYyNDQ3OnYy", "diffSide": "RIGHT", "path": "firebase-abt/src/main/java/com/google/firebase/abt/FirebaseABTesting.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QyMzowNDoxM1rOFdHgBA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QyMzoyMTozMlrOFdH1RQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjA3NTkwOA==", "bodyText": "consider replacing \"report\" with a different word like \"check/validate\"? Since this function is used to remove obsolete experiments from GA", "url": "https://github.com/firebase/firebase-android-sdk/pull/1098#discussion_r366075908", "createdAt": "2020-01-13T23:04:13Z", "author": {"login": "welkinlan"}, "path": "firebase-abt/src/main/java/com/google/firebase/abt/FirebaseABTesting.java", "diffHunk": "@@ -162,6 +166,70 @@ public void removeAllExperiments() throws AbtException {\n     return experimentInfos;\n   }\n \n+  /**\n+   * Sets an experiment to be active in GA metrics reporting by setting a null triggering condition\n+   * on the provided experiment. This results in the experiment being active as if it was triggered\n+   * by the triggering condition event being seen in GA.\n+   *\n+   * <p>Note: This is a blocking call and therefore should be called from a worker thread.\n+   *\n+   * @param activeExperiment The {@link AbtExperimentInfo} that should be set as active in GA.\n+   * @throws AbtException If there is no Analytics SDK.\n+   */\n+  @WorkerThread\n+  public void reportActiveExperiment(AbtExperimentInfo activeExperiment) throws AbtException {\n+    throwAbtExceptionIfAnalyticsIsNull();\n+    ArrayList<AbtExperimentInfo> activeExperimentList = new ArrayList<>();\n+\n+    // Remove trigger event if it exists, this sets the experiment to active.\n+    Map<String, String> activeExperimentMap = activeExperiment.toStringMap();\n+    activeExperimentMap.remove(AbtExperimentInfo.TRIGGER_EVENT_KEY);\n+\n+    // Add experiment to GA\n+    activeExperimentList.add(AbtExperimentInfo.fromMap(activeExperimentMap));\n+    addExperiments(activeExperimentList);\n+  }\n+\n+  /**\n+   * Adds an experiment to be active in GA by setting a null triggering condition on the provided\n+   * experiment. This results in the experiment being active as if it was triggered by the\n+   * triggering condition event being seen in GA.\n+   *\n+   * <p>Note: This is a blocking call and therefore should be called from a worker thread.\n+   *\n+   * @param activeExperiment The {@link FirebaseAbt.ExperimentPayload} that should be set as active\n+   *     in GA.\n+   * @throws AbtException If there is no Analytics SDK.\n+   */\n+  @WorkerThread\n+  public void reportActiveExperiment(FirebaseAbt.ExperimentPayload experimentPayload)\n+      throws AbtException {\n+    reportActiveExperiment(AbtExperimentInfo.fromExperimentPayload(experimentPayload));\n+  }\n+\n+  /**\n+   * Cleans up all experiments which are active in GA but not currently running. This method is\n+   * meant to be used to ensure all running experiments should indeed be running.\n+   *\n+   * <p>Note: This is a blocking call and therefore should be called from a worker thread.\n+   *\n+   * @param runningExperiments the currently running {@link AbtExperimentInfo}s, any active\n+   *     experiment that is not in this list will be removed from GA reporting.\n+   * @throws AbtException If there is no Analytics SDK.\n+   */\n+  @WorkerThread\n+  public void reportRunningExperiments(List<AbtExperimentInfo> runningExperiments)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fd8acb7d89c23ed4bf2dfd1f9772ed68f69aadbf"}, "originalPosition": 88}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjA4MTM0OQ==", "bodyText": "yeah validate seems good actually, I'll switch to that", "url": "https://github.com/firebase/firebase-android-sdk/pull/1098#discussion_r366081349", "createdAt": "2020-01-13T23:21:32Z", "author": {"login": "JasonAHeron"}, "path": "firebase-abt/src/main/java/com/google/firebase/abt/FirebaseABTesting.java", "diffHunk": "@@ -162,6 +166,70 @@ public void removeAllExperiments() throws AbtException {\n     return experimentInfos;\n   }\n \n+  /**\n+   * Sets an experiment to be active in GA metrics reporting by setting a null triggering condition\n+   * on the provided experiment. This results in the experiment being active as if it was triggered\n+   * by the triggering condition event being seen in GA.\n+   *\n+   * <p>Note: This is a blocking call and therefore should be called from a worker thread.\n+   *\n+   * @param activeExperiment The {@link AbtExperimentInfo} that should be set as active in GA.\n+   * @throws AbtException If there is no Analytics SDK.\n+   */\n+  @WorkerThread\n+  public void reportActiveExperiment(AbtExperimentInfo activeExperiment) throws AbtException {\n+    throwAbtExceptionIfAnalyticsIsNull();\n+    ArrayList<AbtExperimentInfo> activeExperimentList = new ArrayList<>();\n+\n+    // Remove trigger event if it exists, this sets the experiment to active.\n+    Map<String, String> activeExperimentMap = activeExperiment.toStringMap();\n+    activeExperimentMap.remove(AbtExperimentInfo.TRIGGER_EVENT_KEY);\n+\n+    // Add experiment to GA\n+    activeExperimentList.add(AbtExperimentInfo.fromMap(activeExperimentMap));\n+    addExperiments(activeExperimentList);\n+  }\n+\n+  /**\n+   * Adds an experiment to be active in GA by setting a null triggering condition on the provided\n+   * experiment. This results in the experiment being active as if it was triggered by the\n+   * triggering condition event being seen in GA.\n+   *\n+   * <p>Note: This is a blocking call and therefore should be called from a worker thread.\n+   *\n+   * @param activeExperiment The {@link FirebaseAbt.ExperimentPayload} that should be set as active\n+   *     in GA.\n+   * @throws AbtException If there is no Analytics SDK.\n+   */\n+  @WorkerThread\n+  public void reportActiveExperiment(FirebaseAbt.ExperimentPayload experimentPayload)\n+      throws AbtException {\n+    reportActiveExperiment(AbtExperimentInfo.fromExperimentPayload(experimentPayload));\n+  }\n+\n+  /**\n+   * Cleans up all experiments which are active in GA but not currently running. This method is\n+   * meant to be used to ensure all running experiments should indeed be running.\n+   *\n+   * <p>Note: This is a blocking call and therefore should be called from a worker thread.\n+   *\n+   * @param runningExperiments the currently running {@link AbtExperimentInfo}s, any active\n+   *     experiment that is not in this list will be removed from GA reporting.\n+   * @throws AbtException If there is no Analytics SDK.\n+   */\n+  @WorkerThread\n+  public void reportRunningExperiments(List<AbtExperimentInfo> runningExperiments)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjA3NTkwOA=="}, "originalCommit": {"oid": "fd8acb7d89c23ed4bf2dfd1f9772ed68f69aadbf"}, "originalPosition": 88}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI2MTYyODAzOnYy", "diffSide": "RIGHT", "path": "firebase-abt/src/test/java/com/google/firebase/abt/FirebaseABTestingTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QyMzowNTo0MFrOFdHiEw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QyMzoyMzozNFrOFdH30Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjA3NjQzNQ==", "bodyText": "noInactiveExperimentsInAnalytics", "url": "https://github.com/firebase/firebase-android-sdk/pull/1098#discussion_r366076435", "createdAt": "2020-01-13T23:05:40Z", "author": {"login": "welkinlan"}, "path": "firebase-abt/src/test/java/com/google/firebase/abt/FirebaseABTestingTest.java", "diffHunk": "@@ -288,6 +289,61 @@ public void getAllExperiments_analyticsSdkUnavailable_throwsAbtException() {\n     assertThat(actualException).hasMessageThat().contains(\"he Analytics SDK is not available\");\n   }\n \n+  @Test\n+  public void reportRunningExperiments_inactiveExperimentsInAnalytics_cleansUpInactiveExperiments()\n+      throws Exception {\n+    // Two experiments running\n+    when(mockAnalyticsConnector.getConditionalUserProperties(ORIGIN_SERVICE, \"\"))\n+        .thenReturn(\n+            Lists.newArrayList(\n+                TEST_ABT_EXPERIMENT_1.toConditionalUserProperty(ORIGIN_SERVICE),\n+                TEST_ABT_EXPERIMENT_2.toConditionalUserProperty(ORIGIN_SERVICE)));\n+\n+    // Update to just one experiment running\n+    firebaseAbt.reportRunningExperiments(Lists.newArrayList(TEST_ABT_EXPERIMENT_1));\n+\n+    // Verify the not running experiment is cleared\n+    verify(mockAnalyticsConnector).clearConditionalUserProperty(TEST_EXPERIMENT_2_ID, null, null);\n+  }\n+\n+  @Test\n+  public void reportRunningExperiments_activeExperimentsInAnalytics_cleansUpNothing()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fd8acb7d89c23ed4bf2dfd1f9772ed68f69aadbf"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjA4MjAwMQ==", "bodyText": "done", "url": "https://github.com/firebase/firebase-android-sdk/pull/1098#discussion_r366082001", "createdAt": "2020-01-13T23:23:34Z", "author": {"login": "JasonAHeron"}, "path": "firebase-abt/src/test/java/com/google/firebase/abt/FirebaseABTestingTest.java", "diffHunk": "@@ -288,6 +289,61 @@ public void getAllExperiments_analyticsSdkUnavailable_throwsAbtException() {\n     assertThat(actualException).hasMessageThat().contains(\"he Analytics SDK is not available\");\n   }\n \n+  @Test\n+  public void reportRunningExperiments_inactiveExperimentsInAnalytics_cleansUpInactiveExperiments()\n+      throws Exception {\n+    // Two experiments running\n+    when(mockAnalyticsConnector.getConditionalUserProperties(ORIGIN_SERVICE, \"\"))\n+        .thenReturn(\n+            Lists.newArrayList(\n+                TEST_ABT_EXPERIMENT_1.toConditionalUserProperty(ORIGIN_SERVICE),\n+                TEST_ABT_EXPERIMENT_2.toConditionalUserProperty(ORIGIN_SERVICE)));\n+\n+    // Update to just one experiment running\n+    firebaseAbt.reportRunningExperiments(Lists.newArrayList(TEST_ABT_EXPERIMENT_1));\n+\n+    // Verify the not running experiment is cleared\n+    verify(mockAnalyticsConnector).clearConditionalUserProperty(TEST_EXPERIMENT_2_ID, null, null);\n+  }\n+\n+  @Test\n+  public void reportRunningExperiments_activeExperimentsInAnalytics_cleansUpNothing()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjA3NjQzNQ=="}, "originalCommit": {"oid": "fd8acb7d89c23ed4bf2dfd1f9772ed68f69aadbf"}, "originalPosition": 30}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 893, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}