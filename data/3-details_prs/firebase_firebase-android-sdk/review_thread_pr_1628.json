{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMxMzAwNTYw", "number": 1628, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxOTozODowOFrOEDma5Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxOTozODowOFrOEDma5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyMjEwNjYxOnYy", "diffSide": "RIGHT", "path": "firebase-firestore/src/main/java/com/google/firebase/firestore/auth/FirebaseAuthCredentialsProvider.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxOTozODowOFrOGgtnYA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxOTo0NDowMFrOGgtyWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjk1NDk3Ng==", "bodyText": "General observation: it seems a little unfortunate that getToken and getResult().getToken() look so similar while having a very different effect. In general, I'd expect a get-prefixed function to be a simple getter, so it might be better to rename getToken to something like fetchToken to better convey its semantics. Of course, this is absolutely out of scope for this PR.", "url": "https://github.com/firebase/firebase-android-sdk/pull/1628#discussion_r436954976", "createdAt": "2020-06-08T19:38:08Z", "author": {"login": "var-const"}, "path": "firebase-firestore/src/main/java/com/google/firebase/firestore/auth/FirebaseAuthCredentialsProvider.java", "diffHunk": "@@ -85,19 +88,21 @@ public FirebaseAuthCredentialsProvider(InternalAuthProvider authProvider) {\n     // Take note of the current value of the tokenCounter so that this method can fail (with a\n     // FirebaseFirestoreException) if there is a token change while the request is outstanding.\n     final int savedCounter = tokenCounter;\n-    return res.continueWith(\n+    return res.continueWithTask(\n+        Executors.DIRECT_EXECUTOR,\n         task -> {\n           synchronized (this) {\n             // Cancel the request since the token changed while the request was outstanding so the\n             // response is potentially for a previous user (which user, we can't be sure).\n             if (savedCounter != tokenCounter) {\n-              throw new FirebaseFirestoreException(\n-                  \"getToken aborted due to token change\", Code.ABORTED);\n+              Logger.debug(LOG_TAG, \"getToken aborted due to token change\");\n+              return getToken();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d0413428e03b33a04cdf91013a16dfa37e45ab5c"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjk1Nzc4Nw==", "bodyText": "Ack :)", "url": "https://github.com/firebase/firebase-android-sdk/pull/1628#discussion_r436957787", "createdAt": "2020-06-08T19:44:00Z", "author": {"login": "schmidt-sebastian"}, "path": "firebase-firestore/src/main/java/com/google/firebase/firestore/auth/FirebaseAuthCredentialsProvider.java", "diffHunk": "@@ -85,19 +88,21 @@ public FirebaseAuthCredentialsProvider(InternalAuthProvider authProvider) {\n     // Take note of the current value of the tokenCounter so that this method can fail (with a\n     // FirebaseFirestoreException) if there is a token change while the request is outstanding.\n     final int savedCounter = tokenCounter;\n-    return res.continueWith(\n+    return res.continueWithTask(\n+        Executors.DIRECT_EXECUTOR,\n         task -> {\n           synchronized (this) {\n             // Cancel the request since the token changed while the request was outstanding so the\n             // response is potentially for a previous user (which user, we can't be sure).\n             if (savedCounter != tokenCounter) {\n-              throw new FirebaseFirestoreException(\n-                  \"getToken aborted due to token change\", Code.ABORTED);\n+              Logger.debug(LOG_TAG, \"getToken aborted due to token change\");\n+              return getToken();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjk1NDk3Ng=="}, "originalCommit": {"oid": "d0413428e03b33a04cdf91013a16dfa37e45ab5c"}, "originalPosition": 41}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1205, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}