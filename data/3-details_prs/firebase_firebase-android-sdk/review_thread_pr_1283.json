{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgwNTM5Mjg1", "number": 1283, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QyMDozMjoxM1rODjmgjA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QyMDo0Njo0NlrODjmwLA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4NjU3Njc2OnYy", "diffSide": "RIGHT", "path": "firebase-crashlytics/src/main/java/com/google/firebase/crashlytics/internal/persistence/CrashlyticsReportPersistence.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QyMDozMjoxM1rOFvgOtQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QyMDozMzoyN1rOFvgQ0g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTM1NTQ0NQ==", "bodyText": "We should add javadoc pertaining to the expected sort order here.", "url": "https://github.com/firebase/firebase-android-sdk/pull/1283#discussion_r385355445", "createdAt": "2020-02-27T20:32:13Z", "author": {"login": "mrwillis21"}, "path": "firebase-crashlytics/src/main/java/com/google/firebase/crashlytics/internal/persistence/CrashlyticsReportPersistence.java", "diffHunk": "@@ -207,17 +207,53 @@ public void finalizeReports(String currentSessionId) {\n             TRANSFORM.reportToJson(report.withEvents(ImmutableList.from(events))));\n       }\n       recursiveDelete(sessionDirectory);\n+      capFinalizedReports();\n     }\n   }\n \n-  public List<CrashlyticsReport> loadFinalizedReports() {\n-    final List<CrashlyticsReport> allReports = new ArrayList<>();\n-    final List<File> priorityReports = getAllFilesInDirectory(priorityReportsDirectory);\n-    for (File reportFile : priorityReports) {\n-      allReports.add(TRANSFORM.reportFromJson(readTextFile(reportFile)));\n+  private void capFinalizedReports() {\n+    List<File> allReportFiles = getAllFinalizedReportFiles();\n+    if (allReportFiles.size() > defaultMaxReportsToKeep) {\n+      // Make a sublist of the reports that go over the size limit\n+      List<File> filesToRemove =\n+          allReportFiles.subList(defaultMaxReportsToKeep, allReportFiles.size());\n+      for (File reportFile : filesToRemove) {\n+        reportFile.delete();\n+      }\n     }\n-    final List<File> reports = getAllFilesInDirectory(reportsDirectory);\n-    for (File reportFile : reports) {\n+  }\n+\n+  @NonNull\n+  private List<File> getAllFinalizedReportFiles() {\n+    final ArrayList<File> allReportsFiles = new ArrayList<>();\n+    List<File> priorityReports = getAllFilesInDirectory(priorityReportsDirectory);\n+    Collections.sort(priorityReports, SESSION_ID_COMPARATOR);\n+    List<File> reports = getAllFilesInDirectory(reportsDirectory);\n+    Collections.sort(reports, SESSION_ID_COMPARATOR);\n+    allReportsFiles.ensureCapacity(priorityReports.size() + reports.size());\n+    allReportsFiles.addAll(priorityReports);\n+    allReportsFiles.addAll(reports);\n+    return allReportsFiles;\n+  }\n+\n+  @NonNull\n+  private List<File> getFinalizedReportFiles(FilenameFilter filter) {\n+    final ArrayList<File> reportFiles = new ArrayList<>();\n+    List<File> priorityReports = getFilesInDirectory(priorityReportsDirectory, filter);\n+    Collections.sort(priorityReports, SESSION_ID_COMPARATOR);\n+    List<File> reports = getFilesInDirectory(reportsDirectory, filter);\n+    Collections.sort(reports, SESSION_ID_COMPARATOR);\n+    reportFiles.ensureCapacity(priorityReports.size() + reports.size());\n+    reportFiles.addAll(priorityReports);\n+    reportFiles.addAll(reports);\n+    return reportFiles;\n+  }\n+\n+  public List<CrashlyticsReport> loadFinalizedReports() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "291ad5a5e540c2c32442e52c0920348372e86419"}, "originalPosition": 129}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTM1NTk4Ng==", "bodyText": "Also, please pull this method up above the private methods.", "url": "https://github.com/firebase/firebase-android-sdk/pull/1283#discussion_r385355986", "createdAt": "2020-02-27T20:33:27Z", "author": {"login": "mrwillis21"}, "path": "firebase-crashlytics/src/main/java/com/google/firebase/crashlytics/internal/persistence/CrashlyticsReportPersistence.java", "diffHunk": "@@ -207,17 +207,53 @@ public void finalizeReports(String currentSessionId) {\n             TRANSFORM.reportToJson(report.withEvents(ImmutableList.from(events))));\n       }\n       recursiveDelete(sessionDirectory);\n+      capFinalizedReports();\n     }\n   }\n \n-  public List<CrashlyticsReport> loadFinalizedReports() {\n-    final List<CrashlyticsReport> allReports = new ArrayList<>();\n-    final List<File> priorityReports = getAllFilesInDirectory(priorityReportsDirectory);\n-    for (File reportFile : priorityReports) {\n-      allReports.add(TRANSFORM.reportFromJson(readTextFile(reportFile)));\n+  private void capFinalizedReports() {\n+    List<File> allReportFiles = getAllFinalizedReportFiles();\n+    if (allReportFiles.size() > defaultMaxReportsToKeep) {\n+      // Make a sublist of the reports that go over the size limit\n+      List<File> filesToRemove =\n+          allReportFiles.subList(defaultMaxReportsToKeep, allReportFiles.size());\n+      for (File reportFile : filesToRemove) {\n+        reportFile.delete();\n+      }\n     }\n-    final List<File> reports = getAllFilesInDirectory(reportsDirectory);\n-    for (File reportFile : reports) {\n+  }\n+\n+  @NonNull\n+  private List<File> getAllFinalizedReportFiles() {\n+    final ArrayList<File> allReportsFiles = new ArrayList<>();\n+    List<File> priorityReports = getAllFilesInDirectory(priorityReportsDirectory);\n+    Collections.sort(priorityReports, SESSION_ID_COMPARATOR);\n+    List<File> reports = getAllFilesInDirectory(reportsDirectory);\n+    Collections.sort(reports, SESSION_ID_COMPARATOR);\n+    allReportsFiles.ensureCapacity(priorityReports.size() + reports.size());\n+    allReportsFiles.addAll(priorityReports);\n+    allReportsFiles.addAll(reports);\n+    return allReportsFiles;\n+  }\n+\n+  @NonNull\n+  private List<File> getFinalizedReportFiles(FilenameFilter filter) {\n+    final ArrayList<File> reportFiles = new ArrayList<>();\n+    List<File> priorityReports = getFilesInDirectory(priorityReportsDirectory, filter);\n+    Collections.sort(priorityReports, SESSION_ID_COMPARATOR);\n+    List<File> reports = getFilesInDirectory(reportsDirectory, filter);\n+    Collections.sort(reports, SESSION_ID_COMPARATOR);\n+    reportFiles.ensureCapacity(priorityReports.size() + reports.size());\n+    reportFiles.addAll(priorityReports);\n+    reportFiles.addAll(reports);\n+    return reportFiles;\n+  }\n+\n+  public List<CrashlyticsReport> loadFinalizedReports() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTM1NTQ0NQ=="}, "originalCommit": {"oid": "291ad5a5e540c2c32442e52c0920348372e86419"}, "originalPosition": 129}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4NjU4MjcwOnYy", "diffSide": "RIGHT", "path": "firebase-crashlytics/src/main/java/com/google/firebase/crashlytics/internal/persistence/CrashlyticsReportPersistence.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QyMDozNDoyMFrOFvgSXQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QyMDozNDoyMFrOFvgSXQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTM1NjM4MQ==", "bodyText": "javadoc pertaining to expected sort order would be helpful here.", "url": "https://github.com/firebase/firebase-android-sdk/pull/1283#discussion_r385356381", "createdAt": "2020-02-27T20:34:20Z", "author": {"login": "mrwillis21"}, "path": "firebase-crashlytics/src/main/java/com/google/firebase/crashlytics/internal/persistence/CrashlyticsReportPersistence.java", "diffHunk": "@@ -207,17 +207,53 @@ public void finalizeReports(String currentSessionId) {\n             TRANSFORM.reportToJson(report.withEvents(ImmutableList.from(events))));\n       }\n       recursiveDelete(sessionDirectory);\n+      capFinalizedReports();\n     }\n   }\n \n-  public List<CrashlyticsReport> loadFinalizedReports() {\n-    final List<CrashlyticsReport> allReports = new ArrayList<>();\n-    final List<File> priorityReports = getAllFilesInDirectory(priorityReportsDirectory);\n-    for (File reportFile : priorityReports) {\n-      allReports.add(TRANSFORM.reportFromJson(readTextFile(reportFile)));\n+  private void capFinalizedReports() {\n+    List<File> allReportFiles = getAllFinalizedReportFiles();\n+    if (allReportFiles.size() > defaultMaxReportsToKeep) {\n+      // Make a sublist of the reports that go over the size limit\n+      List<File> filesToRemove =\n+          allReportFiles.subList(defaultMaxReportsToKeep, allReportFiles.size());\n+      for (File reportFile : filesToRemove) {\n+        reportFile.delete();\n+      }\n     }\n-    final List<File> reports = getAllFilesInDirectory(reportsDirectory);\n-    for (File reportFile : reports) {\n+  }\n+\n+  @NonNull\n+  private List<File> getAllFinalizedReportFiles() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "291ad5a5e540c2c32442e52c0920348372e86419"}, "originalPosition": 104}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4NjU4MzMxOnYy", "diffSide": "RIGHT", "path": "firebase-crashlytics/src/main/java/com/google/firebase/crashlytics/internal/persistence/CrashlyticsReportPersistence.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QyMDozNDozNlrOFvgS0w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QyMDozNDozNlrOFvgS0w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTM1NjQ5OQ==", "bodyText": "As above, javadoc pertaining to the expected sort order would be helpful.", "url": "https://github.com/firebase/firebase-android-sdk/pull/1283#discussion_r385356499", "createdAt": "2020-02-27T20:34:36Z", "author": {"login": "mrwillis21"}, "path": "firebase-crashlytics/src/main/java/com/google/firebase/crashlytics/internal/persistence/CrashlyticsReportPersistence.java", "diffHunk": "@@ -207,17 +207,53 @@ public void finalizeReports(String currentSessionId) {\n             TRANSFORM.reportToJson(report.withEvents(ImmutableList.from(events))));\n       }\n       recursiveDelete(sessionDirectory);\n+      capFinalizedReports();\n     }\n   }\n \n-  public List<CrashlyticsReport> loadFinalizedReports() {\n-    final List<CrashlyticsReport> allReports = new ArrayList<>();\n-    final List<File> priorityReports = getAllFilesInDirectory(priorityReportsDirectory);\n-    for (File reportFile : priorityReports) {\n-      allReports.add(TRANSFORM.reportFromJson(readTextFile(reportFile)));\n+  private void capFinalizedReports() {\n+    List<File> allReportFiles = getAllFinalizedReportFiles();\n+    if (allReportFiles.size() > defaultMaxReportsToKeep) {\n+      // Make a sublist of the reports that go over the size limit\n+      List<File> filesToRemove =\n+          allReportFiles.subList(defaultMaxReportsToKeep, allReportFiles.size());\n+      for (File reportFile : filesToRemove) {\n+        reportFile.delete();\n+      }\n     }\n-    final List<File> reports = getAllFilesInDirectory(reportsDirectory);\n-    for (File reportFile : reports) {\n+  }\n+\n+  @NonNull\n+  private List<File> getAllFinalizedReportFiles() {\n+    final ArrayList<File> allReportsFiles = new ArrayList<>();\n+    List<File> priorityReports = getAllFilesInDirectory(priorityReportsDirectory);\n+    Collections.sort(priorityReports, SESSION_ID_COMPARATOR);\n+    List<File> reports = getAllFilesInDirectory(reportsDirectory);\n+    Collections.sort(reports, SESSION_ID_COMPARATOR);\n+    allReportsFiles.ensureCapacity(priorityReports.size() + reports.size());\n+    allReportsFiles.addAll(priorityReports);\n+    allReportsFiles.addAll(reports);\n+    return allReportsFiles;\n+  }\n+\n+  @NonNull\n+  private List<File> getFinalizedReportFiles(FilenameFilter filter) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "291ad5a5e540c2c32442e52c0920348372e86419"}, "originalPosition": 117}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4NjU5MzA1OnYy", "diffSide": "RIGHT", "path": "firebase-crashlytics/src/main/java/com/google/firebase/crashlytics/internal/persistence/CrashlyticsReportPersistence.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QyMDozODoyNFrOFvgZDQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQxNToyNzoxMFrOFv4ymA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTM1ODA5Mw==", "bodyText": "How would you feel about reducing the repeated code in these two methods by adding another helper function like so?\nprivate static List<File> getSortedReportFiles(List<File> priorityReports, List<File> reports) {\n    Collections.sort(priorityReports, SESSION_ID_COMPARATOR);\n    Collections.sort(reports, SESSION_ID_COMPARATOR);\n    final ArrayList<File> allReportsFiles = new ArrayList<>();\n    allReportsFiles.ensureCapacity(priorityReports.size() + reports.size());\n    allReportsFiles.addAll(priorityReports);\n    allReportsFiles.addAll(reports);\n    return allReportsFiles;\n}", "url": "https://github.com/firebase/firebase-android-sdk/pull/1283#discussion_r385358093", "createdAt": "2020-02-27T20:38:24Z", "author": {"login": "mrwillis21"}, "path": "firebase-crashlytics/src/main/java/com/google/firebase/crashlytics/internal/persistence/CrashlyticsReportPersistence.java", "diffHunk": "@@ -207,17 +207,53 @@ public void finalizeReports(String currentSessionId) {\n             TRANSFORM.reportToJson(report.withEvents(ImmutableList.from(events))));\n       }\n       recursiveDelete(sessionDirectory);\n+      capFinalizedReports();\n     }\n   }\n \n-  public List<CrashlyticsReport> loadFinalizedReports() {\n-    final List<CrashlyticsReport> allReports = new ArrayList<>();\n-    final List<File> priorityReports = getAllFilesInDirectory(priorityReportsDirectory);\n-    for (File reportFile : priorityReports) {\n-      allReports.add(TRANSFORM.reportFromJson(readTextFile(reportFile)));\n+  private void capFinalizedReports() {\n+    List<File> allReportFiles = getAllFinalizedReportFiles();\n+    if (allReportFiles.size() > defaultMaxReportsToKeep) {\n+      // Make a sublist of the reports that go over the size limit\n+      List<File> filesToRemove =\n+          allReportFiles.subList(defaultMaxReportsToKeep, allReportFiles.size());\n+      for (File reportFile : filesToRemove) {\n+        reportFile.delete();\n+      }\n     }\n-    final List<File> reports = getAllFilesInDirectory(reportsDirectory);\n-    for (File reportFile : reports) {\n+  }\n+\n+  @NonNull\n+  private List<File> getAllFinalizedReportFiles() {\n+    final ArrayList<File> allReportsFiles = new ArrayList<>();\n+    List<File> priorityReports = getAllFilesInDirectory(priorityReportsDirectory);\n+    Collections.sort(priorityReports, SESSION_ID_COMPARATOR);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "291ad5a5e540c2c32442e52c0920348372e86419"}, "originalPosition": 107}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTc1Nzg0OA==", "bodyText": "love it", "url": "https://github.com/firebase/firebase-android-sdk/pull/1283#discussion_r385757848", "createdAt": "2020-02-28T15:27:10Z", "author": {"login": "jakeouellette"}, "path": "firebase-crashlytics/src/main/java/com/google/firebase/crashlytics/internal/persistence/CrashlyticsReportPersistence.java", "diffHunk": "@@ -207,17 +207,53 @@ public void finalizeReports(String currentSessionId) {\n             TRANSFORM.reportToJson(report.withEvents(ImmutableList.from(events))));\n       }\n       recursiveDelete(sessionDirectory);\n+      capFinalizedReports();\n     }\n   }\n \n-  public List<CrashlyticsReport> loadFinalizedReports() {\n-    final List<CrashlyticsReport> allReports = new ArrayList<>();\n-    final List<File> priorityReports = getAllFilesInDirectory(priorityReportsDirectory);\n-    for (File reportFile : priorityReports) {\n-      allReports.add(TRANSFORM.reportFromJson(readTextFile(reportFile)));\n+  private void capFinalizedReports() {\n+    List<File> allReportFiles = getAllFinalizedReportFiles();\n+    if (allReportFiles.size() > defaultMaxReportsToKeep) {\n+      // Make a sublist of the reports that go over the size limit\n+      List<File> filesToRemove =\n+          allReportFiles.subList(defaultMaxReportsToKeep, allReportFiles.size());\n+      for (File reportFile : filesToRemove) {\n+        reportFile.delete();\n+      }\n     }\n-    final List<File> reports = getAllFilesInDirectory(reportsDirectory);\n-    for (File reportFile : reports) {\n+  }\n+\n+  @NonNull\n+  private List<File> getAllFinalizedReportFiles() {\n+    final ArrayList<File> allReportsFiles = new ArrayList<>();\n+    List<File> priorityReports = getAllFilesInDirectory(priorityReportsDirectory);\n+    Collections.sort(priorityReports, SESSION_ID_COMPARATOR);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTM1ODA5Mw=="}, "originalCommit": {"oid": "291ad5a5e540c2c32442e52c0920348372e86419"}, "originalPosition": 107}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4NjYxNjc2OnYy", "diffSide": "RIGHT", "path": "firebase-crashlytics/src/main/java/com/google/firebase/crashlytics/internal/persistence/CrashlyticsReportPersistence.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QyMDo0Njo0NlrOFvgn5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQxNToyNzowOFrOFv4yfQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTM2MTg5Mg==", "bodyText": "Any chance we could extract a variable for size here, outside the if to clarify that the same value should be used in the check and in the subList call?", "url": "https://github.com/firebase/firebase-android-sdk/pull/1283#discussion_r385361892", "createdAt": "2020-02-27T20:46:46Z", "author": {"login": "mrwillis21"}, "path": "firebase-crashlytics/src/main/java/com/google/firebase/crashlytics/internal/persistence/CrashlyticsReportPersistence.java", "diffHunk": "@@ -207,17 +207,53 @@ public void finalizeReports(String currentSessionId) {\n             TRANSFORM.reportToJson(report.withEvents(ImmutableList.from(events))));\n       }\n       recursiveDelete(sessionDirectory);\n+      capFinalizedReports();\n     }\n   }\n \n-  public List<CrashlyticsReport> loadFinalizedReports() {\n-    final List<CrashlyticsReport> allReports = new ArrayList<>();\n-    final List<File> priorityReports = getAllFilesInDirectory(priorityReportsDirectory);\n-    for (File reportFile : priorityReports) {\n-      allReports.add(TRANSFORM.reportFromJson(readTextFile(reportFile)));\n+  private void capFinalizedReports() {\n+    List<File> allReportFiles = getAllFinalizedReportFiles();\n+    if (allReportFiles.size() > defaultMaxReportsToKeep) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "291ad5a5e540c2c32442e52c0920348372e86419"}, "originalPosition": 91}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTc1NzgyMQ==", "bodyText": "sure", "url": "https://github.com/firebase/firebase-android-sdk/pull/1283#discussion_r385757821", "createdAt": "2020-02-28T15:27:08Z", "author": {"login": "jakeouellette"}, "path": "firebase-crashlytics/src/main/java/com/google/firebase/crashlytics/internal/persistence/CrashlyticsReportPersistence.java", "diffHunk": "@@ -207,17 +207,53 @@ public void finalizeReports(String currentSessionId) {\n             TRANSFORM.reportToJson(report.withEvents(ImmutableList.from(events))));\n       }\n       recursiveDelete(sessionDirectory);\n+      capFinalizedReports();\n     }\n   }\n \n-  public List<CrashlyticsReport> loadFinalizedReports() {\n-    final List<CrashlyticsReport> allReports = new ArrayList<>();\n-    final List<File> priorityReports = getAllFilesInDirectory(priorityReportsDirectory);\n-    for (File reportFile : priorityReports) {\n-      allReports.add(TRANSFORM.reportFromJson(readTextFile(reportFile)));\n+  private void capFinalizedReports() {\n+    List<File> allReportFiles = getAllFinalizedReportFiles();\n+    if (allReportFiles.size() > defaultMaxReportsToKeep) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTM2MTg5Mg=="}, "originalCommit": {"oid": "291ad5a5e540c2c32442e52c0920348372e86419"}, "originalPosition": 91}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 813, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}