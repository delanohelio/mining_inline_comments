{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY4NjgyNDQz", "number": 1171, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQxODowNjo1OFrODbqzQA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQxNDo0OTo0MFrODb8RCw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwMzM5MzkyOnYy", "diffSide": "RIGHT", "path": "firebase-firestore/src/test/java/com/google/firebase/firestore/core/QueryTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQxODowNjo1OFrOFjSSuA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQxOTo0NTo1OVrOFjVVPg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjU0NDE4NA==", "bodyText": "Consider adding an assertion helper instead. Something like\nprivate void assertCanonicalId(String canonicalId, Query query) {\n  assertEquals(canonicalId, query.getCanonicalId());\n}\nThese end up being about the same size at the call site but are easier to step through/debug/see exactly what failed just from exception line numbers.", "url": "https://github.com/firebase/firebase-android-sdk/pull/1171#discussion_r372544184", "createdAt": "2020-01-29T18:06:58Z", "author": {"login": "wilhuff"}, "path": "firebase-firestore/src/test/java/com/google/firebase/firestore/core/QueryTest.java", "diffHunk": "@@ -553,4 +559,62 @@ public void testMatchesAllDocuments() {\n     query = baseQuery.endAt(new Bound(Collections.emptyList(), true));\n     assertFalse(query.matchesAllDocuments());\n   }\n+\n+  @Test\n+  public void testCanonicalIdsAreStable() {\n+    // This test aims to ensure that we do not break canonical IDs, as they are used as keys in\n+    // the TargetCache.\n+\n+    Query baseQuery = Query.atPath(ResourcePath.fromString(\"collection\"));\n+\n+    Map<Query, String> queryToCanoncialIdMap = new LinkedHashMap<>();\n+    queryToCanoncialIdMap.put(baseQuery, \"collection|f:|ob:__name__asc|lt:LIMIT_TO_FIRST\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eb022d4bc15e6da3a3db0be15f82d8e695292d96"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjU5Mzk4Mg==", "bodyText": "Done (by the way: matching the ArraySortedMap name is going to be fun)", "url": "https://github.com/firebase/firebase-android-sdk/pull/1171#discussion_r372593982", "createdAt": "2020-01-29T19:45:59Z", "author": {"login": "schmidt-sebastian"}, "path": "firebase-firestore/src/test/java/com/google/firebase/firestore/core/QueryTest.java", "diffHunk": "@@ -553,4 +559,62 @@ public void testMatchesAllDocuments() {\n     query = baseQuery.endAt(new Bound(Collections.emptyList(), true));\n     assertFalse(query.matchesAllDocuments());\n   }\n+\n+  @Test\n+  public void testCanonicalIdsAreStable() {\n+    // This test aims to ensure that we do not break canonical IDs, as they are used as keys in\n+    // the TargetCache.\n+\n+    Query baseQuery = Query.atPath(ResourcePath.fromString(\"collection\"));\n+\n+    Map<Query, String> queryToCanoncialIdMap = new LinkedHashMap<>();\n+    queryToCanoncialIdMap.put(baseQuery, \"collection|f:|ob:__name__asc|lt:LIMIT_TO_FIRST\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjU0NDE4NA=="}, "originalCommit": {"oid": "eb022d4bc15e6da3a3db0be15f82d8e695292d96"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwNjI1NTQ3OnYy", "diffSide": "RIGHT", "path": "firebase-firestore/src/test/java/com/google/firebase/firestore/core/QueryTest.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQxNDo0OTo0MFrOFjtp3g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQyMTowNTo1NlrOFkX7cg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mjk5MjQ3OA==", "bodyText": "Thanks for adding this test!\nIt's the Target's canonical ID that is used in Target cache. Query canonical ID is only used in SpecTestCase and I have a TODO to remove it all together.\nCan you test Target.getCanonicalId() instead? Thanks!", "url": "https://github.com/firebase/firebase-android-sdk/pull/1171#discussion_r372992478", "createdAt": "2020-01-30T14:49:40Z", "author": {"login": "wu-hui"}, "path": "firebase-firestore/src/test/java/com/google/firebase/firestore/core/QueryTest.java", "diffHunk": "@@ -553,4 +558,67 @@ public void testMatchesAllDocuments() {\n     query = baseQuery.endAt(new Bound(Collections.emptyList(), true));\n     assertFalse(query.matchesAllDocuments());\n   }\n+\n+  @Test\n+  public void testCanonicalIdsAreStable() {\n+    // This test aims to ensure that we do not break canonical IDs, as they are used as keys in", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7e66bd1d600c02a4dfda6c17ba243acbfe4cec41"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzYxODE1Ng==", "bodyText": "Done. It makes me wish we had a test class for Target though.", "url": "https://github.com/firebase/firebase-android-sdk/pull/1171#discussion_r373618156", "createdAt": "2020-01-31T18:22:32Z", "author": {"login": "schmidt-sebastian"}, "path": "firebase-firestore/src/test/java/com/google/firebase/firestore/core/QueryTest.java", "diffHunk": "@@ -553,4 +558,67 @@ public void testMatchesAllDocuments() {\n     query = baseQuery.endAt(new Bound(Collections.emptyList(), true));\n     assertFalse(query.matchesAllDocuments());\n   }\n+\n+  @Test\n+  public void testCanonicalIdsAreStable() {\n+    // This test aims to ensure that we do not break canonical IDs, as they are used as keys in", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mjk5MjQ3OA=="}, "originalCommit": {"oid": "7e66bd1d600c02a4dfda6c17ba243acbfe4cec41"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY4NTEwNg==", "bodyText": "Yeah, we probably should..", "url": "https://github.com/firebase/firebase-android-sdk/pull/1171#discussion_r373685106", "createdAt": "2020-01-31T21:05:56Z", "author": {"login": "wu-hui"}, "path": "firebase-firestore/src/test/java/com/google/firebase/firestore/core/QueryTest.java", "diffHunk": "@@ -553,4 +558,67 @@ public void testMatchesAllDocuments() {\n     query = baseQuery.endAt(new Bound(Collections.emptyList(), true));\n     assertFalse(query.matchesAllDocuments());\n   }\n+\n+  @Test\n+  public void testCanonicalIdsAreStable() {\n+    // This test aims to ensure that we do not break canonical IDs, as they are used as keys in", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mjk5MjQ3OA=="}, "originalCommit": {"oid": "7e66bd1d600c02a4dfda6c17ba243acbfe4cec41"}, "originalPosition": 27}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 952, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}