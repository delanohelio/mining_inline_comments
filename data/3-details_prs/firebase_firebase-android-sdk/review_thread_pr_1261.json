{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc3ODkxMDM4", "number": 1261, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQyMjowNzoxOVrODhsgVw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQyMjoxMTo1NVrODhslVw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2NjU4Nzc1OnYy", "diffSide": "RIGHT", "path": "firebase-crashlytics/src/main/java/com/google/firebase/crashlytics/internal/common/FirebaseCrashlyticsReportManager.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQyMjowNzoxOVrOFsk0tw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQyMjo1NzoxNVrOFsmFPg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjI4NDk4Mw==", "bodyText": "This makes sense, but I want to talk out a naming thing that is going on here: You designed this manager as a \"listener\" as events. onBeginSession, onFatalEvent, onEndSession all make sense to me as lifecycle events because they're outside of the operation of this collaborator, and crashlytics is acting as listener of them. onLog (and to some degree,onNonFatalEvent) are a little different because the user explicitly calls it, right? In this case, we're not listening to a log occuring, we're listening to the app logging the information. I find it a little weird that onLog results in logging, but \ud83e\udd37\u200d\u2642 I can't really think of a different way to name this.", "url": "https://github.com/firebase/firebase-android-sdk/pull/1261#discussion_r382284983", "createdAt": "2020-02-20T22:07:19Z", "author": {"login": "jakeouellette"}, "path": "firebase-crashlytics/src/main/java/com/google/firebase/crashlytics/internal/common/FirebaseCrashlyticsReportManager.java", "diffHunk": "@@ -75,6 +80,11 @@ public void onNonFatalEvent(Throwable event, Thread thread) {\n     onEvent(event, thread, EVENT_TYPE_LOGGED, false);\n   }\n \n+  @Override\n+  public void onLog(long timestamp, String log) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "54681a53b513e3cfd8693aa7d6e241f92004a847"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjI4OTE3Mg==", "bodyText": "In my mind, the \"event\" happening here is a \"user requests a log to be written\" event, which is one event that can happen during the lifecycle of a session. (I'm pretty certain I'm going to rename the interface to SessionLifecycleEvents, as it happens).\nSimilar to a \"button press\" event, it's user-initiated, but still an event.", "url": "https://github.com/firebase/firebase-android-sdk/pull/1261#discussion_r382289172", "createdAt": "2020-02-20T22:17:07Z", "author": {"login": "mrwillis21"}, "path": "firebase-crashlytics/src/main/java/com/google/firebase/crashlytics/internal/common/FirebaseCrashlyticsReportManager.java", "diffHunk": "@@ -75,6 +80,11 @@ public void onNonFatalEvent(Throwable event, Thread thread) {\n     onEvent(event, thread, EVENT_TYPE_LOGGED, false);\n   }\n \n+  @Override\n+  public void onLog(long timestamp, String log) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjI4NDk4Mw=="}, "originalCommit": {"oid": "54681a53b513e3cfd8693aa7d6e241f92004a847"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjI5NDgwOA==", "bodyText": "It isn't the end user requesting that log though, it's likely some internal collaborator class. If you were implementing the code for onButtonPress, you would probably have code in a controller that called a class with a method that looked like sendForm(...), not one that looked like onFormSent(...) The collaborator is requesting the sendForm action being taken, in that example. The expectation is a form gets sent.\nI think the lifecycle idea works for session start / session ends, because you're abstracting away the meaning of them, but if we're planning to add lots of methods like onCustomKeys(...) it makes me wonder how much the lifecycle naming works.", "url": "https://github.com/firebase/firebase-android-sdk/pull/1261#discussion_r382294808", "createdAt": "2020-02-20T22:30:18Z", "author": {"login": "jakeouellette"}, "path": "firebase-crashlytics/src/main/java/com/google/firebase/crashlytics/internal/common/FirebaseCrashlyticsReportManager.java", "diffHunk": "@@ -75,6 +80,11 @@ public void onNonFatalEvent(Throwable event, Thread thread) {\n     onEvent(event, thread, EVENT_TYPE_LOGGED, false);\n   }\n \n+  @Override\n+  public void onLog(long timestamp, String log) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjI4NDk4Mw=="}, "originalCommit": {"oid": "54681a53b513e3cfd8693aa7d6e241f92004a847"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjMwNTU5OA==", "bodyText": "Talked about this offline, decided there's a good opportunity for some better interfacing here, but we'll break that out in a separate PR.", "url": "https://github.com/firebase/firebase-android-sdk/pull/1261#discussion_r382305598", "createdAt": "2020-02-20T22:57:15Z", "author": {"login": "mrwillis21"}, "path": "firebase-crashlytics/src/main/java/com/google/firebase/crashlytics/internal/common/FirebaseCrashlyticsReportManager.java", "diffHunk": "@@ -75,6 +80,11 @@ public void onNonFatalEvent(Throwable event, Thread thread) {\n     onEvent(event, thread, EVENT_TYPE_LOGGED, false);\n   }\n \n+  @Override\n+  public void onLog(long timestamp, String log) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjI4NDk4Mw=="}, "originalCommit": {"oid": "54681a53b513e3cfd8693aa7d6e241f92004a847"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2NjU5MTkxOnYy", "diffSide": "RIGHT", "path": "firebase-crashlytics/src/main/java/com/google/firebase/crashlytics/internal/common/FirebaseCrashlyticsReportManager.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQyMjowODo0NlrOFsk3Lw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQyMjoyNzowM1rOFslVyQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjI4NTYxNQ==", "bodyText": "out of curiosity, what's the threading model of the method this code is in? is it always on a single thread?", "url": "https://github.com/firebase/firebase-android-sdk/pull/1261#discussion_r382285615", "createdAt": "2020-02-20T22:08:46Z", "author": {"login": "jakeouellette"}, "path": "firebase-crashlytics/src/main/java/com/google/firebase/crashlytics/internal/common/FirebaseCrashlyticsReportManager.java", "diffHunk": "@@ -99,19 +109,31 @@ private void onEvent(\n       Throwable event, Thread thread, String eventType, boolean includeAllThreads) {\n     final long timestamp = currentTimeProvider.getCurrentTimeMillis() / 1000;\n \n-    final CrashlyticsReport.Session.Event capturedEvent =\n-        dataCapture.captureEventData(\n-            event,\n-            thread,\n-            eventType,\n-            timestamp,\n-            EVENT_THREAD_IMPORTANCE,\n-            MAX_CHAINED_EXCEPTION_DEPTH,\n-            includeAllThreads);\n-\n     final boolean isHighPriority = eventType.equals(EVENT_TYPE_CRASH);\n \n-    reportPersistence.persistEvent(capturedEvent, currentSessionId, isHighPriority);\n+    CrashlyticsReport.Session.Event.Builder eventBuilder =\n+        dataCapture\n+            .captureEventData(\n+                event,\n+                thread,\n+                eventType,\n+                timestamp,\n+                EVENT_THREAD_IMPORTANCE,\n+                MAX_CHAINED_EXCEPTION_DEPTH,\n+                includeAllThreads)\n+            .toBuilder();\n+\n+    final String content = logFileManager.getLogString();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "54681a53b513e3cfd8693aa7d6e241f92004a847"}, "originalPosition": 73}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjI4ODA0MQ==", "bodyText": "For now, yes. It's all synchronous. My goal is to push threading as far out to the callers as possible.", "url": "https://github.com/firebase/firebase-android-sdk/pull/1261#discussion_r382288041", "createdAt": "2020-02-20T22:14:22Z", "author": {"login": "mrwillis21"}, "path": "firebase-crashlytics/src/main/java/com/google/firebase/crashlytics/internal/common/FirebaseCrashlyticsReportManager.java", "diffHunk": "@@ -99,19 +109,31 @@ private void onEvent(\n       Throwable event, Thread thread, String eventType, boolean includeAllThreads) {\n     final long timestamp = currentTimeProvider.getCurrentTimeMillis() / 1000;\n \n-    final CrashlyticsReport.Session.Event capturedEvent =\n-        dataCapture.captureEventData(\n-            event,\n-            thread,\n-            eventType,\n-            timestamp,\n-            EVENT_THREAD_IMPORTANCE,\n-            MAX_CHAINED_EXCEPTION_DEPTH,\n-            includeAllThreads);\n-\n     final boolean isHighPriority = eventType.equals(EVENT_TYPE_CRASH);\n \n-    reportPersistence.persistEvent(capturedEvent, currentSessionId, isHighPriority);\n+    CrashlyticsReport.Session.Event.Builder eventBuilder =\n+        dataCapture\n+            .captureEventData(\n+                event,\n+                thread,\n+                eventType,\n+                timestamp,\n+                EVENT_THREAD_IMPORTANCE,\n+                MAX_CHAINED_EXCEPTION_DEPTH,\n+                includeAllThreads)\n+            .toBuilder();\n+\n+    final String content = logFileManager.getLogString();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjI4NTYxNQ=="}, "originalCommit": {"oid": "54681a53b513e3cfd8693aa7d6e241f92004a847"}, "originalPosition": 73}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjI5MzQ0OQ==", "bodyText": "That is, it isn't intended to be thread-safe (yet).", "url": "https://github.com/firebase/firebase-android-sdk/pull/1261#discussion_r382293449", "createdAt": "2020-02-20T22:27:03Z", "author": {"login": "mrwillis21"}, "path": "firebase-crashlytics/src/main/java/com/google/firebase/crashlytics/internal/common/FirebaseCrashlyticsReportManager.java", "diffHunk": "@@ -99,19 +109,31 @@ private void onEvent(\n       Throwable event, Thread thread, String eventType, boolean includeAllThreads) {\n     final long timestamp = currentTimeProvider.getCurrentTimeMillis() / 1000;\n \n-    final CrashlyticsReport.Session.Event capturedEvent =\n-        dataCapture.captureEventData(\n-            event,\n-            thread,\n-            eventType,\n-            timestamp,\n-            EVENT_THREAD_IMPORTANCE,\n-            MAX_CHAINED_EXCEPTION_DEPTH,\n-            includeAllThreads);\n-\n     final boolean isHighPriority = eventType.equals(EVENT_TYPE_CRASH);\n \n-    reportPersistence.persistEvent(capturedEvent, currentSessionId, isHighPriority);\n+    CrashlyticsReport.Session.Event.Builder eventBuilder =\n+        dataCapture\n+            .captureEventData(\n+                event,\n+                thread,\n+                eventType,\n+                timestamp,\n+                EVENT_THREAD_IMPORTANCE,\n+                MAX_CHAINED_EXCEPTION_DEPTH,\n+                includeAllThreads)\n+            .toBuilder();\n+\n+    final String content = logFileManager.getLogString();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjI4NTYxNQ=="}, "originalCommit": {"oid": "54681a53b513e3cfd8693aa7d6e241f92004a847"}, "originalPosition": 73}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2NjU5NjEwOnYy", "diffSide": "RIGHT", "path": "firebase-crashlytics/src/main/java/com/google/firebase/crashlytics/internal/log/LogFileManager.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQyMjoxMDoxNVrOFsk5tg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQyMzowMDoyNVrOFsmKcg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjI4NjI2Mg==", "bodyText": "I'm not sure I understand why this is null", "url": "https://github.com/firebase/firebase-android-sdk/pull/1261#discussion_r382286262", "createdAt": "2020-02-20T22:10:15Z", "author": {"login": "jakeouellette"}, "path": "firebase-crashlytics/src/main/java/com/google/firebase/crashlytics/internal/log/LogFileManager.java", "diffHunk": "@@ -142,6 +146,11 @@ public void writeToLog(long timestamp, String msg) {}\n       return null;\n     }\n \n+    @Override\n+    public String getLogAsString() {\n+      return null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "54681a53b513e3cfd8693aa7d6e241f92004a847"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjI4OTQxMA==", "bodyText": "Look at the context - this is a no-op implementation.", "url": "https://github.com/firebase/firebase-android-sdk/pull/1261#discussion_r382289410", "createdAt": "2020-02-20T22:17:41Z", "author": {"login": "mrwillis21"}, "path": "firebase-crashlytics/src/main/java/com/google/firebase/crashlytics/internal/log/LogFileManager.java", "diffHunk": "@@ -142,6 +146,11 @@ public void writeToLog(long timestamp, String msg) {}\n       return null;\n     }\n \n+    @Override\n+    public String getLogAsString() {\n+      return null;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjI4NjI2Mg=="}, "originalCommit": {"oid": "54681a53b513e3cfd8693aa7d6e241f92004a847"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjI5NTc2Ng==", "bodyText": "ahh, should it be returning \"\" then? (Same story with the bytes one -- should it be returning an empty array?) (Should we document the expected outputs in the FileLogStore interface?)", "url": "https://github.com/firebase/firebase-android-sdk/pull/1261#discussion_r382295766", "createdAt": "2020-02-20T22:32:32Z", "author": {"login": "jakeouellette"}, "path": "firebase-crashlytics/src/main/java/com/google/firebase/crashlytics/internal/log/LogFileManager.java", "diffHunk": "@@ -142,6 +146,11 @@ public void writeToLog(long timestamp, String msg) {}\n       return null;\n     }\n \n+    @Override\n+    public String getLogAsString() {\n+      return null;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjI4NjI2Mg=="}, "originalCommit": {"oid": "54681a53b513e3cfd8693aa7d6e241f92004a847"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjMwNTgzMQ==", "bodyText": "Good opportunities for improvement. I'll add a TODO nullability annotation.", "url": "https://github.com/firebase/firebase-android-sdk/pull/1261#discussion_r382305831", "createdAt": "2020-02-20T22:57:49Z", "author": {"login": "mrwillis21"}, "path": "firebase-crashlytics/src/main/java/com/google/firebase/crashlytics/internal/log/LogFileManager.java", "diffHunk": "@@ -142,6 +146,11 @@ public void writeToLog(long timestamp, String msg) {}\n       return null;\n     }\n \n+    @Override\n+    public String getLogAsString() {\n+      return null;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjI4NjI2Mg=="}, "originalCommit": {"oid": "54681a53b513e3cfd8693aa7d6e241f92004a847"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjMwNjkzMA==", "bodyText": "Also, to answer your question, no - the intent is that null means there is no data, separate from a potentially empty log line \"\".", "url": "https://github.com/firebase/firebase-android-sdk/pull/1261#discussion_r382306930", "createdAt": "2020-02-20T23:00:25Z", "author": {"login": "mrwillis21"}, "path": "firebase-crashlytics/src/main/java/com/google/firebase/crashlytics/internal/log/LogFileManager.java", "diffHunk": "@@ -142,6 +146,11 @@ public void writeToLog(long timestamp, String msg) {}\n       return null;\n     }\n \n+    @Override\n+    public String getLogAsString() {\n+      return null;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjI4NjI2Mg=="}, "originalCommit": {"oid": "54681a53b513e3cfd8693aa7d6e241f92004a847"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2NjYwMDU1OnYy", "diffSide": "RIGHT", "path": "firebase-crashlytics/src/main/java/com/google/firebase/crashlytics/internal/model/CrashlyticsReport.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQyMjoxMTo1NVrOFsk8iA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQyMjozMjo0MFrOFslfBA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjI4Njk4NA==", "bodyText": "Can we add a comment as to why this is a TODO?", "url": "https://github.com/firebase/firebase-android-sdk/pull/1261#discussion_r382286984", "createdAt": "2020-02-20T22:11:55Z", "author": {"login": "jakeouellette"}, "path": "firebase-crashlytics/src/main/java/com/google/firebase/crashlytics/internal/model/CrashlyticsReport.java", "diffHunk": "@@ -84,6 +84,13 @@ public static Builder builder() {\n   @NonNull\n   public abstract Session getSession();\n \n+  // TODO", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "54681a53b513e3cfd8693aa7d6e241f92004a847"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjI4OTU0Nw==", "bodyText": "Because we haven't implemented NDK yet. I'll add that to the TODO.", "url": "https://github.com/firebase/firebase-android-sdk/pull/1261#discussion_r382289547", "createdAt": "2020-02-20T22:18:02Z", "author": {"login": "mrwillis21"}, "path": "firebase-crashlytics/src/main/java/com/google/firebase/crashlytics/internal/model/CrashlyticsReport.java", "diffHunk": "@@ -84,6 +84,13 @@ public static Builder builder() {\n   @NonNull\n   public abstract Session getSession();\n \n+  // TODO", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjI4Njk4NA=="}, "originalCommit": {"oid": "54681a53b513e3cfd8693aa7d6e241f92004a847"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjI5NTgxMg==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/firebase/firebase-android-sdk/pull/1261#discussion_r382295812", "createdAt": "2020-02-20T22:32:40Z", "author": {"login": "jakeouellette"}, "path": "firebase-crashlytics/src/main/java/com/google/firebase/crashlytics/internal/model/CrashlyticsReport.java", "diffHunk": "@@ -84,6 +84,13 @@ public static Builder builder() {\n   @NonNull\n   public abstract Session getSession();\n \n+  // TODO", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjI4Njk4NA=="}, "originalCommit": {"oid": "54681a53b513e3cfd8693aa7d6e241f92004a847"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 790, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}