{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM2NzMwNDc5", "number": 1685, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQyMDozNzowOVrOEG55dg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQxNDoxMzoyMVrOEHIW_Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1Njc1NTEwOnYy", "diffSide": "RIGHT", "path": "encoders/firebase-decoders-json/src/main/java/com/google/firebase/decoders/TypeToken.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQyMDozNzowOVrOGl_WCg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQyMDozNzowOVrOGl_WCg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjQ4ODMzMA==", "bodyText": "pls make it final and set through the private constructor.", "url": "https://github.com/firebase/firebase-android-sdk/pull/1685#discussion_r442488330", "createdAt": "2020-06-18T20:37:09Z", "author": {"login": "vkryachko"}, "path": "encoders/firebase-decoders-json/src/main/java/com/google/firebase/decoders/TypeToken.java", "diffHunk": "@@ -36,6 +36,12 @@\n  * </ol>\n  */\n public abstract class TypeToken<T> {\n+  private Class<T> rawType;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "161733dc6503e59e71bd7882b3da88b68aedd2c7"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1Njc1ODQ0OnYy", "diffSide": "RIGHT", "path": "encoders/firebase-decoders-json/src/main/java/com/google/firebase/decoders/TypeToken.java", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQyMDozODoxMVrOGl_YIA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQxMzo1NDozMFrOGmVsDQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjQ4ODg2NA==", "bodyText": "I don't think you need super here or anywhere above and below.", "url": "https://github.com/firebase/firebase-android-sdk/pull/1685#discussion_r442488864", "createdAt": "2020-06-18T20:38:11Z", "author": {"login": "vkryachko"}, "path": "encoders/firebase-decoders-json/src/main/java/com/google/firebase/decoders/TypeToken.java", "diffHunk": "@@ -126,32 +132,26 @@ public String toString() {\n    * Plain class types, Generic types, and Wildcard types.\n    */\n   public static class ClassToken<T> extends TypeToken<T> {\n-    private final Class<T> rawType;\n     private final TypeTokenContainer typeArguments;\n \n     private ClassToken(Class<T> rawType) {\n-      this.rawType = rawType;\n+      super.rawType = rawType;\n       this.typeArguments = TypeTokenContainer.EMPTY;\n     }\n \n     private ClassToken(Class<T> rawType, TypeTokenContainer typeArguments) {\n-      this.rawType = rawType;\n+      super.rawType = rawType;\n       this.typeArguments = typeArguments;\n     }\n \n-    @NonNull\n-    public Class<T> getRawType() {\n-      return rawType;\n-    }\n-\n     @NonNull\n     public TypeTokenContainer getTypeArguments() {\n       return typeArguments;\n     }\n \n     @Override\n     public int hashCode() {\n-      return 11 * rawType.hashCode() + typeArguments.hashCode();\n+      return 11 * super.rawType.hashCode() + typeArguments.hashCode();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "161733dc6503e59e71bd7882b3da88b68aedd2c7"}, "originalPosition": 65}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjg0NTU0MA==", "bodyText": "since ArrayToken is inner class and rawType is private, we need super to access the rawType or use getRawType()", "url": "https://github.com/firebase/firebase-android-sdk/pull/1685#discussion_r442845540", "createdAt": "2020-06-19T13:37:56Z", "author": {"login": "James201311"}, "path": "encoders/firebase-decoders-json/src/main/java/com/google/firebase/decoders/TypeToken.java", "diffHunk": "@@ -126,32 +132,26 @@ public String toString() {\n    * Plain class types, Generic types, and Wildcard types.\n    */\n   public static class ClassToken<T> extends TypeToken<T> {\n-    private final Class<T> rawType;\n     private final TypeTokenContainer typeArguments;\n \n     private ClassToken(Class<T> rawType) {\n-      this.rawType = rawType;\n+      super.rawType = rawType;\n       this.typeArguments = TypeTokenContainer.EMPTY;\n     }\n \n     private ClassToken(Class<T> rawType, TypeTokenContainer typeArguments) {\n-      this.rawType = rawType;\n+      super.rawType = rawType;\n       this.typeArguments = typeArguments;\n     }\n \n-    @NonNull\n-    public Class<T> getRawType() {\n-      return rawType;\n-    }\n-\n     @NonNull\n     public TypeTokenContainer getTypeArguments() {\n       return typeArguments;\n     }\n \n     @Override\n     public int hashCode() {\n-      return 11 * rawType.hashCode() + typeArguments.hashCode();\n+      return 11 * super.rawType.hashCode() + typeArguments.hashCode();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjQ4ODg2NA=="}, "originalCommit": {"oid": "161733dc6503e59e71bd7882b3da88b68aedd2c7"}, "originalPosition": 65}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjg0OTc3MA==", "bodyText": "how about making it protected instead?", "url": "https://github.com/firebase/firebase-android-sdk/pull/1685#discussion_r442849770", "createdAt": "2020-06-19T13:45:49Z", "author": {"login": "vkryachko"}, "path": "encoders/firebase-decoders-json/src/main/java/com/google/firebase/decoders/TypeToken.java", "diffHunk": "@@ -126,32 +132,26 @@ public String toString() {\n    * Plain class types, Generic types, and Wildcard types.\n    */\n   public static class ClassToken<T> extends TypeToken<T> {\n-    private final Class<T> rawType;\n     private final TypeTokenContainer typeArguments;\n \n     private ClassToken(Class<T> rawType) {\n-      this.rawType = rawType;\n+      super.rawType = rawType;\n       this.typeArguments = TypeTokenContainer.EMPTY;\n     }\n \n     private ClassToken(Class<T> rawType, TypeTokenContainer typeArguments) {\n-      this.rawType = rawType;\n+      super.rawType = rawType;\n       this.typeArguments = typeArguments;\n     }\n \n-    @NonNull\n-    public Class<T> getRawType() {\n-      return rawType;\n-    }\n-\n     @NonNull\n     public TypeTokenContainer getTypeArguments() {\n       return typeArguments;\n     }\n \n     @Override\n     public int hashCode() {\n-      return 11 * rawType.hashCode() + typeArguments.hashCode();\n+      return 11 * super.rawType.hashCode() + typeArguments.hashCode();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjQ4ODg2NA=="}, "originalCommit": {"oid": "161733dc6503e59e71bd7882b3da88b68aedd2c7"}, "originalPosition": 65}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjg1MjY0Ng==", "bodyText": "Yes, I am thinking if we make it protected, anyone will be able to access it when they extent the TypeToken, maybe we loose the advantage of putting ArrayToken and ClassToken inside TypeToken? wdyt?", "url": "https://github.com/firebase/firebase-android-sdk/pull/1685#discussion_r442852646", "createdAt": "2020-06-19T13:51:08Z", "author": {"login": "James201311"}, "path": "encoders/firebase-decoders-json/src/main/java/com/google/firebase/decoders/TypeToken.java", "diffHunk": "@@ -126,32 +132,26 @@ public String toString() {\n    * Plain class types, Generic types, and Wildcard types.\n    */\n   public static class ClassToken<T> extends TypeToken<T> {\n-    private final Class<T> rawType;\n     private final TypeTokenContainer typeArguments;\n \n     private ClassToken(Class<T> rawType) {\n-      this.rawType = rawType;\n+      super.rawType = rawType;\n       this.typeArguments = TypeTokenContainer.EMPTY;\n     }\n \n     private ClassToken(Class<T> rawType, TypeTokenContainer typeArguments) {\n-      this.rawType = rawType;\n+      super.rawType = rawType;\n       this.typeArguments = typeArguments;\n     }\n \n-    @NonNull\n-    public Class<T> getRawType() {\n-      return rawType;\n-    }\n-\n     @NonNull\n     public TypeTokenContainer getTypeArguments() {\n       return typeArguments;\n     }\n \n     @Override\n     public int hashCode() {\n-      return 11 * rawType.hashCode() + typeArguments.hashCode();\n+      return 11 * super.rawType.hashCode() + typeArguments.hashCode();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjQ4ODg2NA=="}, "originalCommit": {"oid": "161733dc6503e59e71bd7882b3da88b68aedd2c7"}, "originalPosition": 65}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjg1NDQxMw==", "bodyText": "No one will be able to extend it as it has a private constructor", "url": "https://github.com/firebase/firebase-android-sdk/pull/1685#discussion_r442854413", "createdAt": "2020-06-19T13:54:30Z", "author": {"login": "vkryachko"}, "path": "encoders/firebase-decoders-json/src/main/java/com/google/firebase/decoders/TypeToken.java", "diffHunk": "@@ -126,32 +132,26 @@ public String toString() {\n    * Plain class types, Generic types, and Wildcard types.\n    */\n   public static class ClassToken<T> extends TypeToken<T> {\n-    private final Class<T> rawType;\n     private final TypeTokenContainer typeArguments;\n \n     private ClassToken(Class<T> rawType) {\n-      this.rawType = rawType;\n+      super.rawType = rawType;\n       this.typeArguments = TypeTokenContainer.EMPTY;\n     }\n \n     private ClassToken(Class<T> rawType, TypeTokenContainer typeArguments) {\n-      this.rawType = rawType;\n+      super.rawType = rawType;\n       this.typeArguments = typeArguments;\n     }\n \n-    @NonNull\n-    public Class<T> getRawType() {\n-      return rawType;\n-    }\n-\n     @NonNull\n     public TypeTokenContainer getTypeArguments() {\n       return typeArguments;\n     }\n \n     @Override\n     public int hashCode() {\n-      return 11 * rawType.hashCode() + typeArguments.hashCode();\n+      return 11 * super.rawType.hashCode() + typeArguments.hashCode();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjQ4ODg2NA=="}, "originalCommit": {"oid": "161733dc6503e59e71bd7882b3da88b68aedd2c7"}, "originalPosition": 65}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1Njc2OTEzOnYy", "diffSide": "RIGHT", "path": "encoders/firebase-decoders-json/src/main/java/com/google/firebase/decoders/TypeToken.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQyMDo0MTo0OVrOGl_e-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQyMDo0MTo0OVrOGl_e-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjQ5MDYxNw==", "bodyText": "I've read a bit more on generic arrays and it looks like they are even more weird than I'd thought, i.e. there is not even a \"sane\" way to create one - it just won't compile - even though the type Optional<String>[] itself is legal in java.\nSo I would suggest you remove the todo and just leave it as explicitly not supported.\nAlso consider using the error message rtdb uses \n  \n    \n      firebase-android-sdk/firebase-database/src/main/java/com/google/firebase/database/core/utilities/encoding/CustomClassMapper.java\n    \n    \n         Line 200\n      in\n      a7096ac\n    \n    \n    \n    \n\n        \n          \n           \"Generic Arrays are not supported, please use Lists \" + \"instead\");", "url": "https://github.com/firebase/firebase-android-sdk/pull/1685#discussion_r442490617", "createdAt": "2020-06-18T20:41:49Z", "author": {"login": "vkryachko"}, "path": "encoders/firebase-decoders-json/src/main/java/com/google/firebase/decoders/TypeToken.java", "diffHunk": "@@ -80,8 +86,8 @@\n       }\n       throw new IllegalArgumentException(\"<? super T> is not supported\");\n     } else if (type instanceof GenericArrayType) {\n-      Type componentType = ((GenericArrayType) type).getGenericComponentType();\n-      return new ArrayToken<T>(TypeToken.of(componentType));\n+      // TODO: Support GenericArrayType\n+      throw new IllegalArgumentException(\"GenericArrayType is not supported.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "161733dc6503e59e71bd7882b3da88b68aedd2c7"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1Njc4MjU1OnYy", "diffSide": "RIGHT", "path": "encoders/firebase-decoders-json/src/main/java/com/google/firebase/decoders/TypeToken.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQyMDo0NjoyOFrOGl_nuw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQyMDo0NjoyOFrOGl_nuw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjQ5Mjg1OQ==", "bodyText": "Consider removing the second argument and instead doing something like:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private ArrayToken(Class<T> rawType, TypeToken<?> componentType) {\n          \n          \n            \n                  super.rawType = rawType;\n          \n          \n            \n                  this.componentType = componentType;\n          \n          \n            \n                }\n          \n          \n            \n                private ArrayToken(Class<T> rawType) {\n          \n          \n            \n                  if(!rawType.isArray()) {\n          \n          \n            \n                    throw new IllegalArgumentException(\"blah-blah\");\n          \n          \n            \n                  }\n          \n          \n            \n                  super(rawType);\n          \n          \n            \n                  this.componentType = TypeToken.of(rawType.getComponentType());\n          \n          \n            \n                }", "url": "https://github.com/firebase/firebase-android-sdk/pull/1685#discussion_r442492859", "createdAt": "2020-06-18T20:46:28Z", "author": {"login": "vkryachko"}, "path": "encoders/firebase-decoders-json/src/main/java/com/google/firebase/decoders/TypeToken.java", "diffHunk": "@@ -180,7 +181,8 @@ String getTypeTokenLiteral() {\n   public static class ArrayToken<T> extends TypeToken<T> {\n     private final TypeToken<?> componentType;\n \n-    private ArrayToken(TypeToken<?> componentType) {\n+    private ArrayToken(Class<T> rawType, TypeToken<?> componentType) {\n+      super.rawType = rawType;\n       this.componentType = componentType;\n     }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "161733dc6503e59e71bd7882b3da88b68aedd2c7"}, "originalPosition": 94}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1OTAzNTk3OnYy", "diffSide": "RIGHT", "path": "encoders/firebase-decoders-json/src/main/java/com/google/firebase/decoders/TypeToken.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQxMzo0NzowOFrOGmVcsg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQxMzo0NzowOFrOGmVcsg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjg1MDQ4Mg==", "bodyText": "I think you also need to update equals and hashCode now that it has a rawType.", "url": "https://github.com/firebase/firebase-android-sdk/pull/1685#discussion_r442850482", "createdAt": "2020-06-19T13:47:08Z", "author": {"login": "vkryachko"}, "path": "encoders/firebase-decoders-json/src/main/java/com/google/firebase/decoders/TypeToken.java", "diffHunk": "@@ -180,8 +179,12 @@ String getTypeTokenLiteral() {\n   public static class ArrayToken<T> extends TypeToken<T> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8ac7c354b9a7b4009951322b509bbfc7bed1f628"}, "originalPosition": 104}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1OTAzODEyOnYy", "diffSide": "RIGHT", "path": "encoders/firebase-decoders-json/src/main/java/com/google/firebase/decoders/TypeToken.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQxMzo0Nzo0NVrOGmVd9w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQxMzo0Nzo0NVrOGmVd9w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjg1MDgwNw==", "bodyText": "super() have to be the first statement in a constructor", "url": "https://github.com/firebase/firebase-android-sdk/pull/1685#discussion_r442850807", "createdAt": "2020-06-19T13:47:45Z", "author": {"login": "James201311"}, "path": "encoders/firebase-decoders-json/src/main/java/com/google/firebase/decoders/TypeToken.java", "diffHunk": "@@ -181,9 +179,12 @@ String getTypeTokenLiteral() {\n   public static class ArrayToken<T> extends TypeToken<T> {\n     private final TypeToken<?> componentType;\n \n-    private ArrayToken(Class<T> rawType, TypeToken<?> componentType) {\n-      super.rawType = rawType;\n-      this.componentType = componentType;\n+    private ArrayToken(Class<T> rawType) {\n+      super(rawType);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8ac7c354b9a7b4009951322b509bbfc7bed1f628"}, "originalPosition": 93}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1OTEyNDQ1OnYy", "diffSide": "RIGHT", "path": "encoders/firebase-decoders-json/src/main/java/com/google/firebase/decoders/TypeToken.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQxNDoxMzoyMVrOGmWT6w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQxNDoxMzoyMVrOGmWT6w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjg2NDYxOQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                      \"Generic Arrays are not supported, \" + \"please use Lists instead.\");\n          \n          \n            \n                      \"Generic Arrays are not supported, please use Lists instead.\");", "url": "https://github.com/firebase/firebase-android-sdk/pull/1685#discussion_r442864619", "createdAt": "2020-06-19T14:13:21Z", "author": {"login": "vkryachko"}, "path": "encoders/firebase-decoders-json/src/main/java/com/google/firebase/decoders/TypeToken.java", "diffHunk": "@@ -80,8 +91,8 @@\n       }\n       throw new IllegalArgumentException(\"<? super T> is not supported\");\n     } else if (type instanceof GenericArrayType) {\n-      Type componentType = ((GenericArrayType) type).getGenericComponentType();\n-      return new ArrayToken<T>(TypeToken.of(componentType));\n+      throw new IllegalArgumentException(\n+          \"Generic Arrays are not supported, \" + \"please use Lists instead.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "245cb7b19e4e050cb1f120b60d9aea0f1de02360"}, "originalPosition": 25}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1230, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}