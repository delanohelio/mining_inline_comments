{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg0NDMyMjAw", "number": 1972, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQyMzoyMzowMlrOEiU0dg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQyMjowOTo1M1rOEjVahA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA0NDI4MTUwOnYy", "diffSide": "RIGHT", "path": "firebase-firestore/src/main/java/com/google/firebase/firestore/remote/FirestoreChannel.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQyMzoyMzowMlrOHQI-tg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQyMzoyMzowMlrOHQI-tg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjY4NjM5MA==", "bodyText": "Unfortunately, the method to retrieve the gRPC version is not public in the Java SDK.", "url": "https://github.com/firebase/firebase-android-sdk/pull/1972#discussion_r486686390", "createdAt": "2020-09-10T23:23:02Z", "author": {"login": "var-const"}, "path": "firebase-firestore/src/main/java/com/google/firebase/firestore/remote/FirestoreChannel.java", "diffHunk": "@@ -281,10 +278,24 @@ public void invalidateToken() {\n     credentialsProvider.invalidateToken();\n   }\n \n+  public static void setClientLanguage(String languageToken) {\n+    clientLanguage = languageToken;\n+  }\n+\n+  private static String getDefaultClientLanguage() {\n+    // Note: there is no good way to get the Java language version on Android\n+    // (System.getProperty(\"java.version\") returns \"0\", for example).\n+    return \"gl-java/\";\n+  }\n+\n+  private String getGoogApiClientValue() {\n+    return String.format(\"%s fire/%s grpc/\", clientLanguage, BuildConfig.VERSION_NAME);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b6f9f8fa5db64fd8d67a18da90a92cfd0936a8ff"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1NDE1NTMwOnYy", "diffSide": "RIGHT", "path": "firebase-firestore/src/main/java/com/google/firebase/firestore/remote/FirestoreChannel.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxODozOTo0N1rOHRh54g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQyMzowMjowNFrOHRqjUA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODE0MzMzMA==", "bodyText": "Changing this to public requires annotating it with @hide in the javadoc so that it doesn't become a part of the public API.", "url": "https://github.com/firebase/firebase-android-sdk/pull/1972#discussion_r488143330", "createdAt": "2020-09-14T18:39:47Z", "author": {"login": "wilhuff"}, "path": "firebase-firestore/src/main/java/com/google/firebase/firestore/remote/FirestoreChannel.java", "diffHunk": "@@ -39,19 +39,16 @@\n  * Wrapper class around io.grpc.Channel that adds headers, exception handling and simplifies\n  * invoking RPCs.\n  */\n-class FirestoreChannel {\n+public class FirestoreChannel {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d1de27decf79b1d845999b660ea9d78464969a77"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODI4NTAwOA==", "bodyText": "Thanks!", "url": "https://github.com/firebase/firebase-android-sdk/pull/1972#discussion_r488285008", "createdAt": "2020-09-14T23:02:04Z", "author": {"login": "var-const"}, "path": "firebase-firestore/src/main/java/com/google/firebase/firestore/remote/FirestoreChannel.java", "diffHunk": "@@ -39,19 +39,16 @@\n  * Wrapper class around io.grpc.Channel that adds headers, exception handling and simplifies\n  * invoking RPCs.\n  */\n-class FirestoreChannel {\n+public class FirestoreChannel {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODE0MzMzMA=="}, "originalCommit": {"oid": "d1de27decf79b1d845999b660ea9d78464969a77"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1NDE2MTM2OnYy", "diffSide": "RIGHT", "path": "firebase-firestore/src/main/java/com/google/firebase/firestore/remote/FirestoreChannel.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxODo0MTozMVrOHRh9hQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQyMzowMzo1MlrOHRqlgA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODE0NDI2MQ==", "bodyText": "Why not inline the string literal here?\nSeparately: this access should be synchronized, but since we don't really care about the results of multiple concurrent results of setClientLanguage, you can mark this field volatile to avoid the need for a lock.", "url": "https://github.com/firebase/firebase-android-sdk/pull/1972#discussion_r488144261", "createdAt": "2020-09-14T18:41:31Z", "author": {"login": "wilhuff"}, "path": "firebase-firestore/src/main/java/com/google/firebase/firestore/remote/FirestoreChannel.java", "diffHunk": "@@ -39,19 +39,16 @@\n  * Wrapper class around io.grpc.Channel that adds headers, exception handling and simplifies\n  * invoking RPCs.\n  */\n-class FirestoreChannel {\n+public class FirestoreChannel {\n \n   private static final Metadata.Key<String> X_GOOG_API_CLIENT_HEADER =\n       Metadata.Key.of(\"x-goog-api-client\", Metadata.ASCII_STRING_MARSHALLER);\n \n   private static final Metadata.Key<String> RESOURCE_PREFIX_HEADER =\n       Metadata.Key.of(\"google-cloud-resource-prefix\", Metadata.ASCII_STRING_MARSHALLER);\n \n-  // TODO: The gRPC version is determined using a package manifest, which is not available\n-  // to us at build time or runtime (it's empty when building in google3). So for now we omit the\n-  // version of grpc.\n-  private static final String X_GOOG_API_CLIENT_VALUE =\n-      \"gl-java/ fire/\" + BuildConfig.VERSION_NAME + \" grpc/\";\n+  /** The client language reported via the X_GOOG_API_CLIENT_HEADER. */\n+  private static String clientLanguage = getDefaultClientLanguage();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d1de27decf79b1d845999b660ea9d78464969a77"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODI4NTU2OA==", "bodyText": "Done.", "url": "https://github.com/firebase/firebase-android-sdk/pull/1972#discussion_r488285568", "createdAt": "2020-09-14T23:03:52Z", "author": {"login": "var-const"}, "path": "firebase-firestore/src/main/java/com/google/firebase/firestore/remote/FirestoreChannel.java", "diffHunk": "@@ -39,19 +39,16 @@\n  * Wrapper class around io.grpc.Channel that adds headers, exception handling and simplifies\n  * invoking RPCs.\n  */\n-class FirestoreChannel {\n+public class FirestoreChannel {\n \n   private static final Metadata.Key<String> X_GOOG_API_CLIENT_HEADER =\n       Metadata.Key.of(\"x-goog-api-client\", Metadata.ASCII_STRING_MARSHALLER);\n \n   private static final Metadata.Key<String> RESOURCE_PREFIX_HEADER =\n       Metadata.Key.of(\"google-cloud-resource-prefix\", Metadata.ASCII_STRING_MARSHALLER);\n \n-  // TODO: The gRPC version is determined using a package manifest, which is not available\n-  // to us at build time or runtime (it's empty when building in google3). So for now we omit the\n-  // version of grpc.\n-  private static final String X_GOOG_API_CLIENT_VALUE =\n-      \"gl-java/ fire/\" + BuildConfig.VERSION_NAME + \" grpc/\";\n+  /** The client language reported via the X_GOOG_API_CLIENT_HEADER. */\n+  private static String clientLanguage = getDefaultClientLanguage();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODE0NDI2MQ=="}, "originalCommit": {"oid": "d1de27decf79b1d845999b660ea9d78464969a77"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1NDg2NDY4OnYy", "diffSide": "RIGHT", "path": "firebase-firestore/src/main/java/com/google/firebase/firestore/FirebaseFirestore.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQyMjowOTo1M1rOHRomtw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQyMzozOTo1MVrOHRrQfA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODI1MzExMQ==", "bodyText": "Proguard will rewrite this method name in release builds of users' applications. We need to annotate this, likely with @KeepForSdk or possibly @Keep, though I don't know which applies to package-private methods.\nNote that this method does not have to be public to be accessible from JNI (JNI ignores access control modifiers), but this can only work when the name isn't shortened.\nThe argument here should have a nullability annotation, probably @NonNull.", "url": "https://github.com/firebase/firebase-android-sdk/pull/1972#discussion_r488253111", "createdAt": "2020-09-14T22:09:53Z", "author": {"login": "wilhuff"}, "path": "firebase-firestore/src/main/java/com/google/firebase/firestore/FirebaseFirestore.java", "diffHunk": "@@ -635,4 +636,15 @@ void validateReference(DocumentReference docRef) {\n           \"Provided document reference is from a different Cloud Firestore instance.\");\n     }\n   }\n+\n+  /**\n+   * Sets the language of the public API in the format of \"gl-<language>/<version>\" where version\n+   * might be blank, e.g. `gl-cpp/`. The provided string is used as is.\n+   *\n+   * Note: this method is package-private because it is expected to only be called via JNI (which\n+   * ignores access modifiers).\n+   */\n+  static void setClientLanguage(String languageToken) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d1de27decf79b1d845999b660ea9d78464969a77"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODI5NjU3Mg==", "bodyText": "Hmm, looking at the way @KeepForSdk is described, it appears to have a more limited effect than @Keep, so it seems using @Keep is safer (apparently @KeepForSdk still allows for the method to be stripped in end-developer apps). Feel free to correct me, though.", "url": "https://github.com/firebase/firebase-android-sdk/pull/1972#discussion_r488296572", "createdAt": "2020-09-14T23:39:51Z", "author": {"login": "var-const"}, "path": "firebase-firestore/src/main/java/com/google/firebase/firestore/FirebaseFirestore.java", "diffHunk": "@@ -635,4 +636,15 @@ void validateReference(DocumentReference docRef) {\n           \"Provided document reference is from a different Cloud Firestore instance.\");\n     }\n   }\n+\n+  /**\n+   * Sets the language of the public API in the format of \"gl-<language>/<version>\" where version\n+   * might be blank, e.g. `gl-cpp/`. The provided string is used as is.\n+   *\n+   * Note: this method is package-private because it is expected to only be called via JNI (which\n+   * ignores access modifiers).\n+   */\n+  static void setClientLanguage(String languageToken) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODI1MzExMQ=="}, "originalCommit": {"oid": "d1de27decf79b1d845999b660ea9d78464969a77"}, "originalPosition": 20}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1171, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}