{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIxMDg5Mzg0", "number": 1579, "reviewThreads": {"totalCount": 18, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQyMzo1NjoxOVrOECxlYQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQwMzoyMDozN1rOEDsm2g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxMzQ0OTkzOnYy", "diffSide": "RIGHT", "path": "firebase-config/src/main/java/com/google/firebase/remoteconfig/FirebaseRemoteConfig.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQyMzo1NjoxOVrOGfcIow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxODo1MjoxNlrOGf5yCg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTYyMDAwMw==", "bodyText": "nit: Firebase Installation", "url": "https://github.com/firebase/firebase-android-sdk/pull/1579#discussion_r435620003", "createdAt": "2020-06-04T23:56:19Z", "author": {"login": "ankitaj224"}, "path": "firebase-config/src/main/java/com/google/firebase/remoteconfig/FirebaseRemoteConfig.java", "diffHunk": "@@ -301,10 +303,10 @@ public boolean activateFetched() {\n    * FirebaseRemoteConfigSettings.Builder#setMinimumFetchIntervalInSeconds(long)}; the static\n    * default is 12 hours.\n    *\n-   * <p>To identify the current app instance, the fetch request creates a Firebase Instance ID\n-   * token, which periodically sends data to the Firebase backend. To stop the periodic sync, call\n-   * {@link com.google.firebase.iid.FirebaseInstanceId#deleteInstanceId}. To create a new token and\n-   * resume the periodic sync, call {@code fetchConfig} again.\n+   * <p>To identify the current app instance, the fetch request creates a Firebase Instance ID,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "34e356d24970438c4c14ba1c3ea0fbab1ff877ee"}, "originalPosition": 80}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjEwNTczOA==", "bodyText": "Or even singular lowercase \"Firebase installation\"", "url": "https://github.com/firebase/firebase-android-sdk/pull/1579#discussion_r436105738", "createdAt": "2020-06-05T18:52:16Z", "author": {"login": "egilmorez"}, "path": "firebase-config/src/main/java/com/google/firebase/remoteconfig/FirebaseRemoteConfig.java", "diffHunk": "@@ -301,10 +303,10 @@ public boolean activateFetched() {\n    * FirebaseRemoteConfigSettings.Builder#setMinimumFetchIntervalInSeconds(long)}; the static\n    * default is 12 hours.\n    *\n-   * <p>To identify the current app instance, the fetch request creates a Firebase Instance ID\n-   * token, which periodically sends data to the Firebase backend. To stop the periodic sync, call\n-   * {@link com.google.firebase.iid.FirebaseInstanceId#deleteInstanceId}. To create a new token and\n-   * resume the periodic sync, call {@code fetchConfig} again.\n+   * <p>To identify the current app instance, the fetch request creates a Firebase Instance ID,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTYyMDAwMw=="}, "originalCommit": {"oid": "34e356d24970438c4c14ba1c3ea0fbab1ff877ee"}, "originalPosition": 80}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxMzQ1MDMwOnYy", "diffSide": "RIGHT", "path": "firebase-config/src/main/java/com/google/firebase/remoteconfig/FirebaseRemoteConfig.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQyMzo1NjozN1rOGfcI6Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxODo1MjoyNVrOGf5yTw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTYyMDA3Mw==", "bodyText": "nit: Firebase Installation", "url": "https://github.com/firebase/firebase-android-sdk/pull/1579#discussion_r435620073", "createdAt": "2020-06-04T23:56:37Z", "author": {"login": "ankitaj224"}, "path": "firebase-config/src/main/java/com/google/firebase/remoteconfig/FirebaseRemoteConfig.java", "diffHunk": "@@ -324,10 +326,10 @@ public boolean activateFetched() {\n    * <p>Depending on the time elapsed since the last fetch from the Firebase Remote Config backend,\n    * configs are either served from local storage, or fetched from the backend.\n    *\n-   * <p>To identify the current app instance, the fetch request creates a Firebase Instance ID\n-   * token, which periodically sends data to the Firebase backend. To stop the periodic sync, call\n-   * {@link com.google.firebase.iid.FirebaseInstanceId#deleteInstanceId}. To create a new token and\n-   * resume the periodic sync, call {@code fetchConfig} again.\n+   * <p>To identify the current app instance, the fetch request creates a Firebase Instance ID,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "34e356d24970438c4c14ba1c3ea0fbab1ff877ee"}, "originalPosition": 95}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjEwNTgwNw==", "bodyText": "Or even singular lowercase \"Firebase installation\"", "url": "https://github.com/firebase/firebase-android-sdk/pull/1579#discussion_r436105807", "createdAt": "2020-06-05T18:52:25Z", "author": {"login": "egilmorez"}, "path": "firebase-config/src/main/java/com/google/firebase/remoteconfig/FirebaseRemoteConfig.java", "diffHunk": "@@ -324,10 +326,10 @@ public boolean activateFetched() {\n    * <p>Depending on the time elapsed since the last fetch from the Firebase Remote Config backend,\n    * configs are either served from local storage, or fetched from the backend.\n    *\n-   * <p>To identify the current app instance, the fetch request creates a Firebase Instance ID\n-   * token, which periodically sends data to the Firebase backend. To stop the periodic sync, call\n-   * {@link com.google.firebase.iid.FirebaseInstanceId#deleteInstanceId}. To create a new token and\n-   * resume the periodic sync, call {@code fetchConfig} again.\n+   * <p>To identify the current app instance, the fetch request creates a Firebase Instance ID,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTYyMDA3Mw=="}, "originalCommit": {"oid": "34e356d24970438c4c14ba1c3ea0fbab1ff877ee"}, "originalPosition": 95}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxMzQ2MDA4OnYy", "diffSide": "RIGHT", "path": "firebase-config/src/main/java/com/google/firebase/remoteconfig/internal/ConfigFetchHandler.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQwMDowMjozMFrOGfcO_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQwMzoxNzo0NFrOGg3YlA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTYyMTYzMA==", "bodyText": "instanceId.getToken is FCM token and FIS getToken is FIS Auth Token.\nThose are diff tokens. Just want to be sure this change is intended.", "url": "https://github.com/firebase/firebase-android-sdk/pull/1579#discussion_r435621630", "createdAt": "2020-06-05T00:02:30Z", "author": {"login": "ankitaj224"}, "path": "firebase-config/src/main/java/com/google/firebase/remoteconfig/internal/ConfigFetchHandler.java", "diffHunk": "@@ -286,16 +297,17 @@ private String createThrottledMessage(long throttledDurationInMillis) {\n    *     error connecting to the server.\n    */\n   @WorkerThread\n-  private FetchResponse fetchFromBackend(InstanceIdResult instanceId, Date currentTime)\n+  private FetchResponse fetchFromBackend(\n+      String installationId, String installationToken, Date currentTime)\n       throws FirebaseRemoteConfigException {\n     try {\n       HttpURLConnection urlConnection = frcBackendApiClient.createHttpURLConnection();\n \n       FetchResponse response =\n           frcBackendApiClient.fetch(\n               urlConnection,\n-              instanceId.getId(),\n-              instanceId.getToken(),\n+              installationId,\n+              installationToken,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "34e356d24970438c4c14ba1c3ea0fbab1ff877ee"}, "originalPosition": 114}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjIwMTA4MA==", "bodyText": "Yep, thanks for checking. The RC backend's already been updated to accept either.", "url": "https://github.com/firebase/firebase-android-sdk/pull/1579#discussion_r436201080", "createdAt": "2020-06-05T23:06:56Z", "author": {"login": "danasilver"}, "path": "firebase-config/src/main/java/com/google/firebase/remoteconfig/internal/ConfigFetchHandler.java", "diffHunk": "@@ -286,16 +297,17 @@ private String createThrottledMessage(long throttledDurationInMillis) {\n    *     error connecting to the server.\n    */\n   @WorkerThread\n-  private FetchResponse fetchFromBackend(InstanceIdResult instanceId, Date currentTime)\n+  private FetchResponse fetchFromBackend(\n+      String installationId, String installationToken, Date currentTime)\n       throws FirebaseRemoteConfigException {\n     try {\n       HttpURLConnection urlConnection = frcBackendApiClient.createHttpURLConnection();\n \n       FetchResponse response =\n           frcBackendApiClient.fetch(\n               urlConnection,\n-              instanceId.getId(),\n-              instanceId.getToken(),\n+              installationId,\n+              installationToken,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTYyMTYzMA=="}, "originalCommit": {"oid": "34e356d24970438c4c14ba1c3ea0fbab1ff877ee"}, "originalPosition": 114}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjIwNjA1Nw==", "bodyText": "Sounds good. Thanks for confirming :)", "url": "https://github.com/firebase/firebase-android-sdk/pull/1579#discussion_r436206057", "createdAt": "2020-06-05T23:30:54Z", "author": {"login": "ankitaj224"}, "path": "firebase-config/src/main/java/com/google/firebase/remoteconfig/internal/ConfigFetchHandler.java", "diffHunk": "@@ -286,16 +297,17 @@ private String createThrottledMessage(long throttledDurationInMillis) {\n    *     error connecting to the server.\n    */\n   @WorkerThread\n-  private FetchResponse fetchFromBackend(InstanceIdResult instanceId, Date currentTime)\n+  private FetchResponse fetchFromBackend(\n+      String installationId, String installationToken, Date currentTime)\n       throws FirebaseRemoteConfigException {\n     try {\n       HttpURLConnection urlConnection = frcBackendApiClient.createHttpURLConnection();\n \n       FetchResponse response =\n           frcBackendApiClient.fetch(\n               urlConnection,\n-              instanceId.getId(),\n-              instanceId.getToken(),\n+              installationId,\n+              installationToken,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTYyMTYzMA=="}, "originalCommit": {"oid": "34e356d24970438c4c14ba1c3ea0fbab1ff877ee"}, "originalPosition": 114}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzExNTAyOA==", "bodyText": "Potentially add the term \"auth\" to the variable name?", "url": "https://github.com/firebase/firebase-android-sdk/pull/1579#discussion_r437115028", "createdAt": "2020-06-09T03:17:44Z", "author": {"login": "andirayo"}, "path": "firebase-config/src/main/java/com/google/firebase/remoteconfig/internal/ConfigFetchHandler.java", "diffHunk": "@@ -286,16 +297,17 @@ private String createThrottledMessage(long throttledDurationInMillis) {\n    *     error connecting to the server.\n    */\n   @WorkerThread\n-  private FetchResponse fetchFromBackend(InstanceIdResult instanceId, Date currentTime)\n+  private FetchResponse fetchFromBackend(\n+      String installationId, String installationToken, Date currentTime)\n       throws FirebaseRemoteConfigException {\n     try {\n       HttpURLConnection urlConnection = frcBackendApiClient.createHttpURLConnection();\n \n       FetchResponse response =\n           frcBackendApiClient.fetch(\n               urlConnection,\n-              instanceId.getId(),\n-              instanceId.getToken(),\n+              installationId,\n+              installationToken,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTYyMTYzMA=="}, "originalCommit": {"oid": "34e356d24970438c4c14ba1c3ea0fbab1ff877ee"}, "originalPosition": 114}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxNjQ3NjY0OnYy", "diffSide": "RIGHT", "path": "firebase-config/src/main/java/com/google/firebase/remoteconfig/FirebaseRemoteConfig.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxODo1MTo0NFrOGf5xDQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxODo1MTo0NFrOGf5xDQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjEwNTQ4NQ==", "bodyText": "Strictly speaking, we are trying to use lowercase \"Firebase installation ID.\"\nThis fights our tendency to productize every single thing from Notifications to Extensions, and it is singular, as a reference to this installation vs. the product offering overall.", "url": "https://github.com/firebase/firebase-android-sdk/pull/1579#discussion_r436105485", "createdAt": "2020-06-05T18:51:44Z", "author": {"login": "egilmorez"}, "path": "firebase-config/src/main/java/com/google/firebase/remoteconfig/FirebaseRemoteConfig.java", "diffHunk": "@@ -66,10 +66,10 @@\n    * <p>{@link FirebaseRemoteConfig} uses the default {@link FirebaseApp}, so if no {@link\n    * FirebaseApp} has been initialized yet, this method throws an {@link IllegalStateException}.\n    *\n-   * <p>To identify the current app instance, the fetch request creates a Firebase Instance ID\n-   * token, which periodically sends data to the Firebase backend. To stop the periodic sync, call\n-   * {@link com.google.firebase.iid.FirebaseInstanceId#deleteInstanceId}. To create a new token and\n-   * resume the periodic sync, call {@code fetchConfig} again.\n+   * <p>To identify the current app instance, the fetch request creates a Firebase Installations ID,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "34e356d24970438c4c14ba1c3ea0fbab1ff877ee"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyMjg1OTI3OnYy", "diffSide": "RIGHT", "path": "firebase-config/bandwagoner/src/main/java/com/googletest/firebase/remoteconfig/bandwagoner/ApiFragment.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQwMDo0MjozOFrOGg09Aw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQyMDoyNDowOVrOGha29A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzA3NTIwMw==", "bodyText": "How about LOGGING_TAG?", "url": "https://github.com/firebase/firebase-android-sdk/pull/1579#discussion_r437075203", "createdAt": "2020-06-09T00:42:38Z", "author": {"login": "andirayo"}, "path": "firebase-config/bandwagoner/src/main/java/com/googletest/firebase/remoteconfig/bandwagoner/ApiFragment.java", "diffHunk": "@@ -46,20 +49,25 @@\n public class ApiFragment extends Fragment {\n \n   private FirebaseRemoteConfig frc;\n+  private FirebaseInstallationsApi firebaseInstallations;\n   private View rootView;\n   private EditText minimumFetchIntervalText;\n   private EditText parameterKeyText;\n   private TextView parameterValueText;\n   private TextView apiCallProgressText;\n   private TextView apiCallResultsText;\n \n+  private static final String TAG = \"Bandwagoner\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "512df9d2135fea8a580549dfc8aafbe004de5f09"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzY5NjI0NA==", "bodyText": "TAG is the standard name for the logging tag constant on Android. See the logcat docs and our other usage in Firebase Android", "url": "https://github.com/firebase/firebase-android-sdk/pull/1579#discussion_r437696244", "createdAt": "2020-06-09T20:24:09Z", "author": {"login": "danasilver"}, "path": "firebase-config/bandwagoner/src/main/java/com/googletest/firebase/remoteconfig/bandwagoner/ApiFragment.java", "diffHunk": "@@ -46,20 +49,25 @@\n public class ApiFragment extends Fragment {\n \n   private FirebaseRemoteConfig frc;\n+  private FirebaseInstallationsApi firebaseInstallations;\n   private View rootView;\n   private EditText minimumFetchIntervalText;\n   private EditText parameterKeyText;\n   private TextView parameterValueText;\n   private TextView apiCallProgressText;\n   private TextView apiCallResultsText;\n \n+  private static final String TAG = \"Bandwagoner\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzA3NTIwMw=="}, "originalCommit": {"oid": "512df9d2135fea8a580549dfc8aafbe004de5f09"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyMjg2MTI0OnYy", "diffSide": "RIGHT", "path": "firebase-config/bandwagoner/src/main/java/com/googletest/firebase/remoteconfig/bandwagoner/ApiFragment.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQwMDo0Mzo1NFrOGg0-SA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQwMDo0Mzo1NFrOGg0-SA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzA3NTUyOA==", "bodyText": "How about fidTask or installationIdTask?", "url": "https://github.com/firebase/firebase-android-sdk/pull/1579#discussion_r437075528", "createdAt": "2020-06-09T00:43:54Z", "author": {"login": "andirayo"}, "path": "firebase-config/bandwagoner/src/main/java/com/googletest/firebase/remoteconfig/bandwagoner/ApiFragment.java", "diffHunk": "@@ -87,9 +95,25 @@ public View onCreateView(\n     TextView sdkVersionText = rootView.findViewById(R.id.sdk_version_text);\n \n     TextView iidText = rootView.findViewById(R.id.iid_text);\n-    iidText.setText(\"IID: \" + FirebaseInstanceId.getInstance().getId());\n \n-    apiCallResultsText.setText(FirebaseInstanceId.getInstance().getToken());\n+    Task<String> idTask = firebaseInstallations.getId();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "512df9d2135fea8a580549dfc8aafbe004de5f09"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyMjg2MjQ5OnYy", "diffSide": "RIGHT", "path": "firebase-config/bandwagoner/src/main/java/com/googletest/firebase/remoteconfig/bandwagoner/ApiFragment.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQwMDo0NDozNlrOGg0--w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQwMDo0NDozNlrOGg0--w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzA3NTcwNw==", "bodyText": "How about installationAuthTokenTask?", "url": "https://github.com/firebase/firebase-android-sdk/pull/1579#discussion_r437075707", "createdAt": "2020-06-09T00:44:36Z", "author": {"login": "andirayo"}, "path": "firebase-config/bandwagoner/src/main/java/com/googletest/firebase/remoteconfig/bandwagoner/ApiFragment.java", "diffHunk": "@@ -87,9 +95,25 @@ public View onCreateView(\n     TextView sdkVersionText = rootView.findViewById(R.id.sdk_version_text);\n \n     TextView iidText = rootView.findViewById(R.id.iid_text);\n-    iidText.setText(\"IID: \" + FirebaseInstanceId.getInstance().getId());\n \n-    apiCallResultsText.setText(FirebaseInstanceId.getInstance().getToken());\n+    Task<String> idTask = firebaseInstallations.getId();\n+    Task<InstallationTokenResult> tokenTask = firebaseInstallations.getToken(false);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "512df9d2135fea8a580549dfc8aafbe004de5f09"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyMjg2OTQ1OnYy", "diffSide": "RIGHT", "path": "firebase-config/bandwagoner/src/main/java/com/googletest/firebase/remoteconfig/bandwagoner/ApiFragment.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQwMDo0ODoxM1rOGg1C3g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQyMzoxNToxOFrOGhfjeg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzA3NjcwMg==", "bodyText": "How about ignoredTasks?\nI am not sure what Android naming convention is here, but do you also use the underscore \"_\" prefix?\n_ignoredTasks", "url": "https://github.com/firebase/firebase-android-sdk/pull/1579#discussion_r437076702", "createdAt": "2020-06-09T00:48:13Z", "author": {"login": "andirayo"}, "path": "firebase-config/bandwagoner/src/main/java/com/googletest/firebase/remoteconfig/bandwagoner/ApiFragment.java", "diffHunk": "@@ -87,9 +95,25 @@ public View onCreateView(\n     TextView sdkVersionText = rootView.findViewById(R.id.sdk_version_text);\n \n     TextView iidText = rootView.findViewById(R.id.iid_text);\n-    iidText.setText(\"IID: \" + FirebaseInstanceId.getInstance().getId());\n \n-    apiCallResultsText.setText(FirebaseInstanceId.getInstance().getToken());\n+    Task<String> idTask = firebaseInstallations.getId();\n+    Task<InstallationTokenResult> tokenTask = firebaseInstallations.getToken(false);\n+\n+    Tasks.whenAllComplete(idTask, tokenTask)\n+        .addOnCompleteListener(\n+            unusedCompletedTasks -> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "512df9d2135fea8a580549dfc8aafbe004de5f09"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzc3MzE3OA==", "bodyText": "Not sure there's a real convention in Android or Java, but we use \"unused\" consistently as a prefix in Remote Config at least, so I'd lean towards keeping it.", "url": "https://github.com/firebase/firebase-android-sdk/pull/1579#discussion_r437773178", "createdAt": "2020-06-09T23:15:18Z", "author": {"login": "danasilver"}, "path": "firebase-config/bandwagoner/src/main/java/com/googletest/firebase/remoteconfig/bandwagoner/ApiFragment.java", "diffHunk": "@@ -87,9 +95,25 @@ public View onCreateView(\n     TextView sdkVersionText = rootView.findViewById(R.id.sdk_version_text);\n \n     TextView iidText = rootView.findViewById(R.id.iid_text);\n-    iidText.setText(\"IID: \" + FirebaseInstanceId.getInstance().getId());\n \n-    apiCallResultsText.setText(FirebaseInstanceId.getInstance().getToken());\n+    Task<String> idTask = firebaseInstallations.getId();\n+    Task<InstallationTokenResult> tokenTask = firebaseInstallations.getToken(false);\n+\n+    Tasks.whenAllComplete(idTask, tokenTask)\n+        .addOnCompleteListener(\n+            unusedCompletedTasks -> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzA3NjcwMg=="}, "originalCommit": {"oid": "512df9d2135fea8a580549dfc8aafbe004de5f09"}, "originalPosition": 50}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyMjg3MTE0OnYy", "diffSide": "RIGHT", "path": "firebase-config/bandwagoner/src/main/java/com/googletest/firebase/remoteconfig/bandwagoner/ApiFragment.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQwMDo0OToxOVrOGg1D6A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQwMDo0OToxOVrOGg1D6A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzA3Njk2OA==", "bodyText": "How about \"installation authentication token\"?", "url": "https://github.com/firebase/firebase-android-sdk/pull/1579#discussion_r437076968", "createdAt": "2020-06-09T00:49:19Z", "author": {"login": "andirayo"}, "path": "firebase-config/bandwagoner/src/main/java/com/googletest/firebase/remoteconfig/bandwagoner/ApiFragment.java", "diffHunk": "@@ -87,9 +95,25 @@ public View onCreateView(\n     TextView sdkVersionText = rootView.findViewById(R.id.sdk_version_text);\n \n     TextView iidText = rootView.findViewById(R.id.iid_text);\n-    iidText.setText(\"IID: \" + FirebaseInstanceId.getInstance().getId());\n \n-    apiCallResultsText.setText(FirebaseInstanceId.getInstance().getToken());\n+    Task<String> idTask = firebaseInstallations.getId();\n+    Task<InstallationTokenResult> tokenTask = firebaseInstallations.getToken(false);\n+\n+    Tasks.whenAllComplete(idTask, tokenTask)\n+        .addOnCompleteListener(\n+            unusedCompletedTasks -> {\n+              if (idTask.isSuccessful()) {\n+                iidText.setText(String.format(\"Installation ID: %s\", idTask.getResult()));\n+              } else {\n+                Log.e(TAG, \"Error getting Installation ID\", idTask.getException());\n+              }\n+\n+              if (tokenTask.isSuccessful()) {\n+                apiCallResultsText.setText(tokenTask.getResult().getToken());\n+              } else {\n+                Log.e(TAG, \"Error getting Installation Token\", tokenTask.getException());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "512df9d2135fea8a580549dfc8aafbe004de5f09"}, "originalPosition": 60}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyMzA4NTQ5OnYy", "diffSide": "RIGHT", "path": "firebase-config/src/main/java/com/google/firebase/remoteconfig/FirebaseRemoteConfig.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQwMjo1ODoxOFrOGg3GDQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQwMjo1ODoxOFrOGg3GDQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzExMDI4NQ==", "bodyText": "How about this:\n\"Note: Also initializes the Firebase installations SDK that creates installation IDs to identify Firebase installations and periodically sends data to Firebase servers. Remote Config requires installation IDs for Fetch requests. To stop [...]\"", "url": "https://github.com/firebase/firebase-android-sdk/pull/1579#discussion_r437110285", "createdAt": "2020-06-09T02:58:18Z", "author": {"login": "andirayo"}, "path": "firebase-config/src/main/java/com/google/firebase/remoteconfig/FirebaseRemoteConfig.java", "diffHunk": "@@ -66,10 +66,10 @@\n    * <p>{@link FirebaseRemoteConfig} uses the default {@link FirebaseApp}, so if no {@link\n    * FirebaseApp} has been initialized yet, this method throws an {@link IllegalStateException}.\n    *\n-   * <p>To identify the current app instance, the fetch request creates a Firebase Instance ID\n-   * token, which periodically sends data to the Firebase backend. To stop the periodic sync, call\n-   * {@link com.google.firebase.iid.FirebaseInstanceId#deleteInstanceId}. To create a new token and\n-   * resume the periodic sync, call {@code fetchConfig} again.\n+   * <p>To identify the current app instance, the fetch request creates a Firebase installation ID,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "512df9d2135fea8a580549dfc8aafbe004de5f09"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyMzA4OTYwOnYy", "diffSide": "RIGHT", "path": "firebase-config/src/main/java/com/google/firebase/remoteconfig/FirebaseRemoteConfig.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQwMzowMDo0NlrOGg3Iew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQyMzoyNTo0NFrOGhfwJg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzExMDkwNw==", "bodyText": "What means \"token\" in this context?\nIs this a (FIS) authentication token?\nIf yes, do developers need to know about this implementation detail.\nIf no, can you please specify what \"token\" is meant here?\nHow about this:\n\"Note: If you send another Fetch request after the deletion, Remote Config and Firebase installations will create a new installation ID for this Firebase installation and resume the periodic sync.\"", "url": "https://github.com/firebase/firebase-android-sdk/pull/1579#discussion_r437110907", "createdAt": "2020-06-09T03:00:46Z", "author": {"login": "andirayo"}, "path": "firebase-config/src/main/java/com/google/firebase/remoteconfig/FirebaseRemoteConfig.java", "diffHunk": "@@ -66,10 +66,10 @@\n    * <p>{@link FirebaseRemoteConfig} uses the default {@link FirebaseApp}, so if no {@link\n    * FirebaseApp} has been initialized yet, this method throws an {@link IllegalStateException}.\n    *\n-   * <p>To identify the current app instance, the fetch request creates a Firebase Instance ID\n-   * token, which periodically sends data to the Firebase backend. To stop the periodic sync, call\n-   * {@link com.google.firebase.iid.FirebaseInstanceId#deleteInstanceId}. To create a new token and\n-   * resume the periodic sync, call {@code fetchConfig} again.\n+   * <p>To identify the current app instance, the fetch request creates a Firebase installation ID,\n+   * which periodically sends data to the Firebase backend. To stop the periodic sync, call {@link\n+   * com.google.firebase.installations.FirebaseInstallations#delete}. To create a new token and", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "512df9d2135fea8a580549dfc8aafbe004de5f09"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzc3NjQyMg==", "bodyText": "It's a FIS auth token, yes. The note might be helpful to give context to the #delete method developers can call, and give additional background for developers using a FIS auth token to identify test devices in the ABT console (where we call out that they need to use a FIS auth token). I think the note you wrote sounds good and provides the right level of context.", "url": "https://github.com/firebase/firebase-android-sdk/pull/1579#discussion_r437776422", "createdAt": "2020-06-09T23:25:44Z", "author": {"login": "danasilver"}, "path": "firebase-config/src/main/java/com/google/firebase/remoteconfig/FirebaseRemoteConfig.java", "diffHunk": "@@ -66,10 +66,10 @@\n    * <p>{@link FirebaseRemoteConfig} uses the default {@link FirebaseApp}, so if no {@link\n    * FirebaseApp} has been initialized yet, this method throws an {@link IllegalStateException}.\n    *\n-   * <p>To identify the current app instance, the fetch request creates a Firebase Instance ID\n-   * token, which periodically sends data to the Firebase backend. To stop the periodic sync, call\n-   * {@link com.google.firebase.iid.FirebaseInstanceId#deleteInstanceId}. To create a new token and\n-   * resume the periodic sync, call {@code fetchConfig} again.\n+   * <p>To identify the current app instance, the fetch request creates a Firebase installation ID,\n+   * which periodically sends data to the Firebase backend. To stop the periodic sync, call {@link\n+   * com.google.firebase.installations.FirebaseInstallations#delete}. To create a new token and", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzExMDkwNw=="}, "originalCommit": {"oid": "512df9d2135fea8a580549dfc8aafbe004de5f09"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyMzA5MDQ1OnYy", "diffSide": "RIGHT", "path": "firebase-config/src/main/java/com/google/firebase/remoteconfig/FirebaseRemoteConfig.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQwMzowMToxMVrOGg3I9w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQwMzowMToxMVrOGg3I9w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzExMTAzMQ==", "bodyText": "Similar to above.", "url": "https://github.com/firebase/firebase-android-sdk/pull/1579#discussion_r437111031", "createdAt": "2020-06-09T03:01:11Z", "author": {"login": "andirayo"}, "path": "firebase-config/src/main/java/com/google/firebase/remoteconfig/FirebaseRemoteConfig.java", "diffHunk": "@@ -301,10 +303,10 @@ public boolean activateFetched() {\n    * FirebaseRemoteConfigSettings.Builder#setMinimumFetchIntervalInSeconds(long)}; the static\n    * default is 12 hours.\n    *\n-   * <p>To identify the current app instance, the fetch request creates a Firebase Instance ID\n-   * token, which periodically sends data to the Firebase backend. To stop the periodic sync, call\n-   * {@link com.google.firebase.iid.FirebaseInstanceId#deleteInstanceId}. To create a new token and\n-   * resume the periodic sync, call {@code fetchConfig} again.\n+   * <p>To identify the current app instance, the fetch request creates a Firebase installation ID,\n+   * which periodically sends data to the Firebase backend. To stop the periodic sync, call {@link\n+   * com.google.firebase.installations.FirebaseInstallations#delete}. To create a new token and\n+   * resume the periodic sync, call {@code fetch} again.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "512df9d2135fea8a580549dfc8aafbe004de5f09"}, "originalPosition": 83}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyMzA5MzYxOnYy", "diffSide": "RIGHT", "path": "firebase-config/src/main/java/com/google/firebase/remoteconfig/FirebaseRemoteConfig.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQwMzowMjo0N1rOGg3Kuw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQyMzowODowMVrOGixqZg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzExMTQ4Mw==", "bodyText": "How about removing this duplicated Javadoc and instead refer to the other method, e.g. \"For documentation please refer to {@link fetch()}.\"", "url": "https://github.com/firebase/firebase-android-sdk/pull/1579#discussion_r437111483", "createdAt": "2020-06-09T03:02:47Z", "author": {"login": "andirayo"}, "path": "firebase-config/src/main/java/com/google/firebase/remoteconfig/FirebaseRemoteConfig.java", "diffHunk": "@@ -324,10 +326,10 @@ public boolean activateFetched() {\n    * <p>Depending on the time elapsed since the last fetch from the Firebase Remote Config backend,\n    * configs are either served from local storage, or fetched from the backend.\n    *\n-   * <p>To identify the current app instance, the fetch request creates a Firebase Instance ID\n-   * token, which periodically sends data to the Firebase backend. To stop the periodic sync, call\n-   * {@link com.google.firebase.iid.FirebaseInstanceId#deleteInstanceId}. To create a new token and\n-   * resume the periodic sync, call {@code fetchConfig} again.\n+   * <p>To identify the current app instance, the fetch request creates a Firebase installation ID,\n+   * which periodically sends data to the Firebase backend. To stop the periodic sync, call {@link\n+   * com.google.firebase.installations.FirebaseInstallations#delete}. To create a new token and\n+   * resume the periodic sync, call {@code fetch} again.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "512df9d2135fea8a580549dfc8aafbe004de5f09"}, "originalPosition": 98}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzc5NTE0MA==", "bodyText": "@egilmorez What do you think? Is there a general practice for duplicated docs?", "url": "https://github.com/firebase/firebase-android-sdk/pull/1579#discussion_r437795140", "createdAt": "2020-06-10T00:30:35Z", "author": {"login": "danasilver"}, "path": "firebase-config/src/main/java/com/google/firebase/remoteconfig/FirebaseRemoteConfig.java", "diffHunk": "@@ -324,10 +326,10 @@ public boolean activateFetched() {\n    * <p>Depending on the time elapsed since the last fetch from the Firebase Remote Config backend,\n    * configs are either served from local storage, or fetched from the backend.\n    *\n-   * <p>To identify the current app instance, the fetch request creates a Firebase Instance ID\n-   * token, which periodically sends data to the Firebase backend. To stop the periodic sync, call\n-   * {@link com.google.firebase.iid.FirebaseInstanceId#deleteInstanceId}. To create a new token and\n-   * resume the periodic sync, call {@code fetchConfig} again.\n+   * <p>To identify the current app instance, the fetch request creates a Firebase installation ID,\n+   * which periodically sends data to the Firebase backend. To stop the periodic sync, call {@link\n+   * com.google.firebase.installations.FirebaseInstallations#delete}. To create a new token and\n+   * resume the periodic sync, call {@code fetch} again.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzExMTQ4Mw=="}, "originalCommit": {"oid": "512df9d2135fea8a580549dfc8aafbe004de5f09"}, "originalPosition": 98}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTExODQzOA==", "bodyText": "Chatted about this with @rachelsaunders. Generally you want to avoid linking between methods with specific implementation details since it requires the user to parse out what does/doesn't apply to that method.", "url": "https://github.com/firebase/firebase-android-sdk/pull/1579#discussion_r439118438", "createdAt": "2020-06-11T23:08:01Z", "author": {"login": "danasilver"}, "path": "firebase-config/src/main/java/com/google/firebase/remoteconfig/FirebaseRemoteConfig.java", "diffHunk": "@@ -324,10 +326,10 @@ public boolean activateFetched() {\n    * <p>Depending on the time elapsed since the last fetch from the Firebase Remote Config backend,\n    * configs are either served from local storage, or fetched from the backend.\n    *\n-   * <p>To identify the current app instance, the fetch request creates a Firebase Instance ID\n-   * token, which periodically sends data to the Firebase backend. To stop the periodic sync, call\n-   * {@link com.google.firebase.iid.FirebaseInstanceId#deleteInstanceId}. To create a new token and\n-   * resume the periodic sync, call {@code fetchConfig} again.\n+   * <p>To identify the current app instance, the fetch request creates a Firebase installation ID,\n+   * which periodically sends data to the Firebase backend. To stop the periodic sync, call {@link\n+   * com.google.firebase.installations.FirebaseInstallations#delete}. To create a new token and\n+   * resume the periodic sync, call {@code fetch} again.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzExMTQ4Mw=="}, "originalCommit": {"oid": "512df9d2135fea8a580549dfc8aafbe004de5f09"}, "originalPosition": 98}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyMzEwOTk4OnYy", "diffSide": "RIGHT", "path": "firebase-config/src/main/java/com/google/firebase/remoteconfig/internal/ConfigFetchHandler.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQwMzoxMzoyNFrOGg3Uxw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQyMzowODozMVrOGhfajA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzExNDA1NQ==", "bodyText": "+1 for variable naming :)\nI would recommend to have it consistent with variables above to not confuse readers.\ninstallationTokenTask sounds good.\nI would preferinstallationAuthTokenTask to prevent possible(?) confusion with FCM tokens.", "url": "https://github.com/firebase/firebase-android-sdk/pull/1579#discussion_r437114055", "createdAt": "2020-06-09T03:13:24Z", "author": {"login": "andirayo"}, "path": "firebase-config/src/main/java/com/google/firebase/remoteconfig/internal/ConfigFetchHandler.java", "diffHunk": "@@ -189,21 +189,32 @@ public ConfigFetchHandler(\n                   createThrottledMessage(backoffEndTime.getTime() - currentTime.getTime()),\n                   backoffEndTime.getTime()));\n     } else {\n-      Task<InstanceIdResult> instanceIdTask = firebaseInstanceId.getInstanceId();\n+      Task<String> installationIdTask = firebaseInstallations.getId();\n+      Task<InstallationTokenResult> installationTokenTask = firebaseInstallations.getToken(false);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "512df9d2135fea8a580549dfc8aafbe004de5f09"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzc3MDg5Mg==", "bodyText": "Yeah, sounds good. I like the specificity.", "url": "https://github.com/firebase/firebase-android-sdk/pull/1579#discussion_r437770892", "createdAt": "2020-06-09T23:08:31Z", "author": {"login": "danasilver"}, "path": "firebase-config/src/main/java/com/google/firebase/remoteconfig/internal/ConfigFetchHandler.java", "diffHunk": "@@ -189,21 +189,32 @@ public ConfigFetchHandler(\n                   createThrottledMessage(backoffEndTime.getTime() - currentTime.getTime()),\n                   backoffEndTime.getTime()));\n     } else {\n-      Task<InstanceIdResult> instanceIdTask = firebaseInstanceId.getInstanceId();\n+      Task<String> installationIdTask = firebaseInstallations.getId();\n+      Task<InstallationTokenResult> installationTokenTask = firebaseInstallations.getToken(false);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzExNDA1NQ=="}, "originalCommit": {"oid": "512df9d2135fea8a580549dfc8aafbe004de5f09"}, "originalPosition": 44}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyMzExMTE3OnYy", "diffSide": "RIGHT", "path": "firebase-config/src/main/java/com/google/firebase/remoteconfig/internal/ConfigFetchHandler.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQwMzoxNDoyMFrOGg3Vjw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQwMTowMzoxOFrOGiz0tg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzExNDI1NQ==", "bodyText": "How about mentioning \"Firebase Installations\" so that developers have all the info to potentially raise issues with Firebase?", "url": "https://github.com/firebase/firebase-android-sdk/pull/1579#discussion_r437114255", "createdAt": "2020-06-09T03:14:20Z", "author": {"login": "andirayo"}, "path": "firebase-config/src/main/java/com/google/firebase/remoteconfig/internal/ConfigFetchHandler.java", "diffHunk": "@@ -189,21 +189,32 @@ public ConfigFetchHandler(\n                   createThrottledMessage(backoffEndTime.getTime() - currentTime.getTime()),\n                   backoffEndTime.getTime()));\n     } else {\n-      Task<InstanceIdResult> instanceIdTask = firebaseInstanceId.getInstanceId();\n+      Task<String> installationIdTask = firebaseInstallations.getId();\n+      Task<InstallationTokenResult> installationTokenTask = firebaseInstallations.getToken(false);\n       fetchResponseTask =\n-          instanceIdTask.continueWithTask(\n-              executor,\n-              (completedIidTask) -> {\n-                if (!completedIidTask.isSuccessful()) {\n-                  return Tasks.forException(\n-                      new FirebaseRemoteConfigClientException(\n-                          \"Failed to get Firebase Instance ID token for fetch.\",\n-                          completedIidTask.getException()));\n-                }\n-\n-                InstanceIdResult instanceIdResult = completedIidTask.getResult();\n-                return fetchFromBackendAndCacheResponse(instanceIdResult, currentTime);\n-              });\n+          Tasks.whenAllComplete(installationIdTask, installationTokenTask)\n+              .continueWithTask(\n+                  executor,\n+                  (completedInstallationsTasks) -> {\n+                    if (!installationIdTask.isSuccessful()) {\n+                      return Tasks.forException(\n+                          new FirebaseRemoteConfigClientException(\n+                              \"Failed to get Firebase Installation ID for fetch.\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "512df9d2135fea8a580549dfc8aafbe004de5f09"}, "originalPosition": 66}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTE1Mzg0Ng==", "bodyText": "Good call", "url": "https://github.com/firebase/firebase-android-sdk/pull/1579#discussion_r439153846", "createdAt": "2020-06-12T01:03:18Z", "author": {"login": "danasilver"}, "path": "firebase-config/src/main/java/com/google/firebase/remoteconfig/internal/ConfigFetchHandler.java", "diffHunk": "@@ -189,21 +189,32 @@ public ConfigFetchHandler(\n                   createThrottledMessage(backoffEndTime.getTime() - currentTime.getTime()),\n                   backoffEndTime.getTime()));\n     } else {\n-      Task<InstanceIdResult> instanceIdTask = firebaseInstanceId.getInstanceId();\n+      Task<String> installationIdTask = firebaseInstallations.getId();\n+      Task<InstallationTokenResult> installationTokenTask = firebaseInstallations.getToken(false);\n       fetchResponseTask =\n-          instanceIdTask.continueWithTask(\n-              executor,\n-              (completedIidTask) -> {\n-                if (!completedIidTask.isSuccessful()) {\n-                  return Tasks.forException(\n-                      new FirebaseRemoteConfigClientException(\n-                          \"Failed to get Firebase Instance ID token for fetch.\",\n-                          completedIidTask.getException()));\n-                }\n-\n-                InstanceIdResult instanceIdResult = completedIidTask.getResult();\n-                return fetchFromBackendAndCacheResponse(instanceIdResult, currentTime);\n-              });\n+          Tasks.whenAllComplete(installationIdTask, installationTokenTask)\n+              .continueWithTask(\n+                  executor,\n+                  (completedInstallationsTasks) -> {\n+                    if (!installationIdTask.isSuccessful()) {\n+                      return Tasks.forException(\n+                          new FirebaseRemoteConfigClientException(\n+                              \"Failed to get Firebase Installation ID for fetch.\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzExNDI1NQ=="}, "originalCommit": {"oid": "512df9d2135fea8a580549dfc8aafbe004de5f09"}, "originalPosition": 66}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyMzExMzk4OnYy", "diffSide": "RIGHT", "path": "firebase-config/src/main/java/com/google/firebase/remoteconfig/internal/ConfigFetchHandler.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQwMzoxNjoxMVrOGg3XOQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQyMzowNjoxM1rOGhfXsA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzExNDY4MQ==", "bodyText": "I know we already talked about this, but I strongly recommend to only upload the FIS auth token, because the auth token contains all the information needed on server side, particularly the FID.\nThus, uploading both values is redundancy and might lead to inconsistencies on server side.\nAs far as I understood our conversations, you are planning to get rid of uploading the FID in the future, but want to upload it for now to keep the current processes consistent.\nThat is absolutely fine. I just wanted to mention it again.", "url": "https://github.com/firebase/firebase-android-sdk/pull/1579#discussion_r437114681", "createdAt": "2020-06-09T03:16:11Z", "author": {"login": "andirayo"}, "path": "firebase-config/src/main/java/com/google/firebase/remoteconfig/internal/ConfigFetchHandler.java", "diffHunk": "@@ -189,21 +189,32 @@ public ConfigFetchHandler(\n                   createThrottledMessage(backoffEndTime.getTime() - currentTime.getTime()),\n                   backoffEndTime.getTime()));\n     } else {\n-      Task<InstanceIdResult> instanceIdTask = firebaseInstanceId.getInstanceId();\n+      Task<String> installationIdTask = firebaseInstallations.getId();\n+      Task<InstallationTokenResult> installationTokenTask = firebaseInstallations.getToken(false);\n       fetchResponseTask =\n-          instanceIdTask.continueWithTask(\n-              executor,\n-              (completedIidTask) -> {\n-                if (!completedIidTask.isSuccessful()) {\n-                  return Tasks.forException(\n-                      new FirebaseRemoteConfigClientException(\n-                          \"Failed to get Firebase Instance ID token for fetch.\",\n-                          completedIidTask.getException()));\n-                }\n-\n-                InstanceIdResult instanceIdResult = completedIidTask.getResult();\n-                return fetchFromBackendAndCacheResponse(instanceIdResult, currentTime);\n-              });\n+          Tasks.whenAllComplete(installationIdTask, installationTokenTask)\n+              .continueWithTask(\n+                  executor,\n+                  (completedInstallationsTasks) -> {\n+                    if (!installationIdTask.isSuccessful()) {\n+                      return Tasks.forException(\n+                          new FirebaseRemoteConfigClientException(\n+                              \"Failed to get Firebase Installation ID for fetch.\",\n+                              installationIdTask.getException()));\n+                    }\n+\n+                    if (!installationTokenTask.isSuccessful()) {\n+                      return Tasks.forException(\n+                          new FirebaseRemoteConfigClientException(\n+                              \"Failed to get Firebase Installation token for fetch.\",\n+                              installationTokenTask.getException()));\n+                    }\n+\n+                    String installationId = installationIdTask.getResult();\n+                    String installationToken = installationTokenTask.getResult().getToken();\n+                    return fetchFromBackendAndCacheResponse(\n+                        installationId, installationToken, currentTime);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "512df9d2135fea8a580549dfc8aafbe004de5f09"}, "originalPosition": 80}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzc3MDE2MA==", "bodyText": "Thanks for calling it out!", "url": "https://github.com/firebase/firebase-android-sdk/pull/1579#discussion_r437770160", "createdAt": "2020-06-09T23:06:13Z", "author": {"login": "danasilver"}, "path": "firebase-config/src/main/java/com/google/firebase/remoteconfig/internal/ConfigFetchHandler.java", "diffHunk": "@@ -189,21 +189,32 @@ public ConfigFetchHandler(\n                   createThrottledMessage(backoffEndTime.getTime() - currentTime.getTime()),\n                   backoffEndTime.getTime()));\n     } else {\n-      Task<InstanceIdResult> instanceIdTask = firebaseInstanceId.getInstanceId();\n+      Task<String> installationIdTask = firebaseInstallations.getId();\n+      Task<InstallationTokenResult> installationTokenTask = firebaseInstallations.getToken(false);\n       fetchResponseTask =\n-          instanceIdTask.continueWithTask(\n-              executor,\n-              (completedIidTask) -> {\n-                if (!completedIidTask.isSuccessful()) {\n-                  return Tasks.forException(\n-                      new FirebaseRemoteConfigClientException(\n-                          \"Failed to get Firebase Instance ID token for fetch.\",\n-                          completedIidTask.getException()));\n-                }\n-\n-                InstanceIdResult instanceIdResult = completedIidTask.getResult();\n-                return fetchFromBackendAndCacheResponse(instanceIdResult, currentTime);\n-              });\n+          Tasks.whenAllComplete(installationIdTask, installationTokenTask)\n+              .continueWithTask(\n+                  executor,\n+                  (completedInstallationsTasks) -> {\n+                    if (!installationIdTask.isSuccessful()) {\n+                      return Tasks.forException(\n+                          new FirebaseRemoteConfigClientException(\n+                              \"Failed to get Firebase Installation ID for fetch.\",\n+                              installationIdTask.getException()));\n+                    }\n+\n+                    if (!installationTokenTask.isSuccessful()) {\n+                      return Tasks.forException(\n+                          new FirebaseRemoteConfigClientException(\n+                              \"Failed to get Firebase Installation token for fetch.\",\n+                              installationTokenTask.getException()));\n+                    }\n+\n+                    String installationId = installationIdTask.getResult();\n+                    String installationToken = installationTokenTask.getResult().getToken();\n+                    return fetchFromBackendAndCacheResponse(\n+                        installationId, installationToken, currentTime);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzExNDY4MQ=="}, "originalCommit": {"oid": "512df9d2135fea8a580549dfc8aafbe004de5f09"}, "originalPosition": 80}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyMzExOTg1OnYy", "diffSide": "RIGHT", "path": "firebase-config/src/test/java/com/google/firebase/remoteconfig/FirebaseRemoteConfigTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQwMzoyMDoxNFrOGg3a9g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQwMzoyMDoxNFrOGg3a9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzExNTYzOA==", "bodyText": "Please use values that have a roughly correct format in order to make it easier for readers to understand what data is used / required here.\nExamples:\nFID: \"'fL71_VyL3uo9jNMWu1L60S\"\nauth token: \"eyJhbGciOiJF.eyJmaWQiOiJmaXMt.AB2LPV8wRQIhAPs4NvEgA3uhubH\"", "url": "https://github.com/firebase/firebase-android-sdk/pull/1579#discussion_r437115638", "createdAt": "2020-06-09T03:20:14Z", "author": {"login": "andirayo"}, "path": "firebase-config/src/test/java/com/google/firebase/remoteconfig/FirebaseRemoteConfigTest.java", "diffHunk": "@@ -96,10 +96,14 @@\n \n   private static final String ETAG = \"ETag\";\n \n-  private static final String INSTANCE_ID_STRING = \"fake instance id\";\n-  private static final String INSTANCE_ID_TOKEN_STRING = \"fake instance id token\";\n-  private static final InstanceIdResult INSTANCE_ID_RESULT =\n-      new FakeInstanceIdResult(INSTANCE_ID_STRING, INSTANCE_ID_TOKEN_STRING);\n+  private static final String INSTALLATION_ID = \"fake instance id\";\n+  private static final String INSTALLATION_TOKEN = \"fake instance id token\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "512df9d2135fea8a580549dfc8aafbe004de5f09"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyMzEyMDI2OnYy", "diffSide": "RIGHT", "path": "firebase-config/src/test/java/com/google/firebase/remoteconfig/internal/ConfigFetchHandlerTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQwMzoyMDozN1rOGg3bQA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQwMzoyMDozN1rOGg3bQA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzExNTcxMg==", "bodyText": "Same as above.", "url": "https://github.com/firebase/firebase-android-sdk/pull/1579#discussion_r437115712", "createdAt": "2020-06-09T03:20:37Z", "author": {"login": "andirayo"}, "path": "firebase-config/src/test/java/com/google/firebase/remoteconfig/internal/ConfigFetchHandlerTest.java", "diffHunk": "@@ -98,8 +98,14 @@\n @RunWith(RobolectricTestRunner.class)\n @Config(manifest = Config.NONE)\n public class ConfigFetchHandlerTest {\n-  private static final String INSTANCE_ID_STRING = \"fake instance id\";\n-  private static final String INSTANCE_ID_TOKEN_STRING = \"fake instance id token\";\n+  private static final String INSTALLATION_ID = \"fake installation id\";\n+  private static final String INSTALLATION_TOKEN = \"fake installation token\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "512df9d2135fea8a580549dfc8aafbe004de5f09"}, "originalPosition": 18}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1375, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}