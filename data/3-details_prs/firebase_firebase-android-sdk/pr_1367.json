{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkwNTkxNDE4", "number": 1367, "title": "Add support for -DexclusiveSpecTest=<TestName> to SpecTestCase.", "bodyText": "", "createdAt": "2020-03-18T18:13:16Z", "url": "https://github.com/firebase/firebase-android-sdk/pull/1367", "merged": true, "mergeCommit": {"oid": "f79cf6b4c74f71b8483d4d53c49d79a9b3c01e2f"}, "closed": true, "closedAt": "2020-03-19T13:55:15Z", "author": {"login": "dconeybe"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcO7Y2lAH2gAyMzkwNTkxNDE4OjJiZTg4YTNlYmU3ZWViNjE3MDc0MDQ1MDM0ODcwNGVmNzJkOGY1NWY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcO9LWtAFqTM3NzIwMTY1OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "2be88a3ebe7eeb6170740450348704ef72d8f55f", "author": {"user": {"login": "dconeybe", "name": "Denver Coneybeare"}}, "url": "https://github.com/firebase/firebase-android-sdk/commit/2be88a3ebe7eeb6170740450348704ef72d8f55f", "committedDate": "2020-03-18T18:12:34Z", "message": "Add support for -DexclusiveSpecTest=<TestName> to SpecTestCase."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc3MTUzMDI5", "url": "https://github.com/firebase/firebase-android-sdk/pull/1367#pullrequestreview-377153029", "createdAt": "2020-03-18T19:00:33Z", "commit": {"oid": "2be88a3ebe7eeb6170740450348704ef72d8f55f"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQxOTowMDozM1rOF4S6Rg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQxOTowMzozNlrOF4TAkg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDU3NDQwNg==", "bodyText": "What do you think of making this a filter and allowing Regular Expressions? It should maybe add one or two lines to this PR, but make this feature much easier to use (we don't have to specify the full test name) and more flexible (we could run a group of tests).", "url": "https://github.com/firebase/firebase-android-sdk/pull/1367#discussion_r394574406", "createdAt": "2020-03-18T19:00:33Z", "author": {"login": "schmidt-sebastian"}, "path": "firebase-firestore/src/test/java/com/google/firebase/firestore/spec/SpecTestCase.java", "diffHunk": "@@ -132,6 +133,14 @@\n   // this tag and they'll all be run (but all others won't).\n   private static final String EXCLUSIVE_TAG = \"exclusive\";\n \n+  // The name of a Java system property ({@link System#getProperty(String)}) whose value is the name\n+  // of the sole spec test to execute. This is an alternative to setting the {@link #EXCLUSIVE_TAG}\n+  // tag, which requires modifying the JSON file. To use this property, specify\n+  // -DexclusiveSpecTest=<TestName> to the Java runtime, replacing <TestName> with the name of the\n+  // test to execute exclusively.  The <TestName> value is the result of appending the \"itName\" of\n+  // the test to its \"describeName\", separated by a space character.\n+  private static final String EXCLUSIVE_PROPERTY = \"exclusiveSpecTest\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2be88a3ebe7eeb6170740450348704ef72d8f55f"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDU3NTI0Mg==", "bodyText": "If you go with regular expression approach, this could be System.getProperty(EXCLUSIVE_PROPERTY, \".*\"), in which case you can always apply the filter.", "url": "https://github.com/firebase/firebase-android-sdk/pull/1367#discussion_r394575242", "createdAt": "2020-03-18T19:02:14Z", "author": {"login": "schmidt-sebastian"}, "path": "firebase-firestore/src/test/java/com/google/firebase/firestore/spec/SpecTestCase.java", "diffHunk": "@@ -1097,6 +1106,12 @@ public void testSpecTests() throws Exception {\n       parsedSpecFiles.add(new Pair<>(f.getName(), fileJSON));\n     }\n \n+    String exclusiveTestNameFromSystemProperty =\n+        emptyToNull(System.getProperty(EXCLUSIVE_PROPERTY));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2be88a3ebe7eeb6170740450348704ef72d8f55f"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDU3NjAxOA==", "bodyText": "We should try not to import more Guava dependencies, unless we want to make an exception for tests (cc @wu-hui).", "url": "https://github.com/firebase/firebase-android-sdk/pull/1367#discussion_r394576018", "createdAt": "2020-03-18T19:03:36Z", "author": {"login": "schmidt-sebastian"}, "path": "firebase-firestore/src/test/java/com/google/firebase/firestore/spec/SpecTestCase.java", "diffHunk": "@@ -14,6 +14,7 @@\n \n package com.google.firebase.firestore.spec;\n \n+import static com.google.common.base.Strings.emptyToNull;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2be88a3ebe7eeb6170740450348704ef72d8f55f"}, "originalPosition": 4}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "81f3bb704f1269044c14b820bbdd01da073192c5", "author": {"user": {"login": "dconeybe", "name": "Denver Coneybeare"}}, "url": "https://github.com/firebase/firebase-android-sdk/commit/81f3bb704f1269044c14b820bbdd01da073192c5", "committedDate": "2020-03-18T20:00:44Z", "message": "Use a regex instead of an exact match for spec test filtering."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc3MjAxNjU5", "url": "https://github.com/firebase/firebase-android-sdk/pull/1367#pullrequestreview-377201659", "createdAt": "2020-03-18T20:14:35Z", "commit": {"oid": "81f3bb704f1269044c14b820bbdd01da073192c5"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQyMDoxNDozNVrOF4VPhA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQyMDoxNzozNVrOF4VWAw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDYxMjYxMg==", "bodyText": "Optional: This could just be\n} else {\n runTest = testNameMatcher.matches(find);\n}", "url": "https://github.com/firebase/firebase-android-sdk/pull/1367#discussion_r394612612", "createdAt": "2020-03-18T20:14:35Z", "author": {"login": "schmidt-sebastian"}, "path": "firebase-firestore/src/test/java/com/google/firebase/firestore/spec/SpecTestCase.java", "diffHunk": "@@ -1115,7 +1137,19 @@ public void testSpecTests() throws Exception {\n         JSONArray steps = testJSON.getJSONArray(\"steps\");\n         Set<String> tags = getTestTags(testJSON);\n \n-        boolean runTest = shouldRunTest(tags) && (!exclusiveMode || tags.contains(EXCLUSIVE_TAG));\n+        boolean runTest;\n+        if (!shouldRunTest(tags)) {\n+          runTest = false;\n+        } else if (!exclusiveMode) {\n+          runTest = true;\n+        } else if (tags.contains(EXCLUSIVE_TAG)) {\n+          runTest = true;\n+        } else if (testNameFilter != null) {\n+          runTest = testNameFilter.matcher(name).find();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "81f3bb704f1269044c14b820bbdd01da073192c5"}, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDYxNDI3NQ==", "bodyText": "You should turn this into a Matcher right away, like such:\n if (testNameFilterFromSystemProperty == null) {\n      testNameFilterFromSystemProperty = \".*\";\n } else {\n      exclusiveMode = true;\n }\n Matcher testNameMatcher = Pattern.compile(testNameFilterFromSystemProperty).matcher();", "url": "https://github.com/firebase/firebase-android-sdk/pull/1367#discussion_r394614275", "createdAt": "2020-03-18T20:17:35Z", "author": {"login": "schmidt-sebastian"}, "path": "firebase-firestore/src/test/java/com/google/firebase/firestore/spec/SpecTestCase.java", "diffHunk": "@@ -1097,6 +1109,16 @@ public void testSpecTests() throws Exception {\n       parsedSpecFiles.add(new Pair<>(f.getName(), fileJSON));\n     }\n \n+    String testNameFilterFromSystemProperty =\n+        emptyToNull(System.getProperty(TEST_FILTER_PROPERTY));\n+    Pattern testNameFilter;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "81f3bb704f1269044c14b820bbdd01da073192c5"}, "originalPosition": 39}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2710, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}