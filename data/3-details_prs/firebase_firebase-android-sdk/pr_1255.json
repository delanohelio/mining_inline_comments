{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc3MzM2MTI4", "number": 1255, "title": "Cap events-per-session in Crashlytics persistence", "bodyText": "Replaces the concept of fatal/nonfatal in the persistence layer\nwith a persistence-specific concept of normal/high priority events.\nThis will be used to implement keeping a maximum number of logged\nexceptions per session, without leaking information about specific\nevent types into the persistence layer.", "createdAt": "2020-02-19T18:55:44Z", "url": "https://github.com/firebase/firebase-android-sdk/pull/1255", "merged": true, "mergeCommit": {"oid": "fedefeac18de90e8c9d11b47a75fcd947abf3da0"}, "closed": true, "closedAt": "2020-02-20T17:20:30Z", "author": {"login": "mrwillis21"}, "timelineItems": {"totalCount": 16, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcF7aFyABqjMwNTMwMTQ0NTI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcGOHP8gFqTM2MjA3MDA5Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9689803193f99f23b4137034785c54ffce316ac9", "author": {"user": {"login": "mrwillis21", "name": "Matt Willis"}}, "url": "https://github.com/firebase/firebase-android-sdk/commit/9689803193f99f23b4137034785c54ffce316ac9", "committedDate": "2020-02-19T18:54:13Z", "message": "Cap events-per-session in Crashlytics persistence\n\nReplaces the concept of fatal/nonfatal in the persistence layer\nwith a persistence-specific concept of normal/high priority events.\n\nThis will be used to implement keeping a maximum number of logged\nexceptions per session, without leaking information about specific\nevent types into the persistence layer."}, "afterCommit": {"oid": "ea50d53e131c6c350938fd009cd49e2f29f53a64", "author": {"user": {"login": "mrwillis21", "name": "Matt Willis"}}, "url": "https://github.com/firebase/firebase-android-sdk/commit/ea50d53e131c6c350938fd009cd49e2f29f53a64", "committedDate": "2020-02-19T19:08:21Z", "message": "Cap events-per-session in Crashlytics persistence\n\nReplaces the concept of fatal/nonfatal in the persistence layer\nwith a persistence-specific concept of normal/high priority events.\n\nThis will be used to implement keeping a maximum number of logged\nexceptions per session, without leaking information about specific\nevent types into the persistence layer."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3f81d99566cc060ffe18caf769cfbb041052d472", "author": {"user": {"login": "mrwillis21", "name": "Matt Willis"}}, "url": "https://github.com/firebase/firebase-android-sdk/commit/3f81d99566cc060ffe18caf769cfbb041052d472", "committedDate": "2020-02-19T19:10:16Z", "message": "Cap events-per-session in Crashlytics persistence\n\nReplaces the concept of fatal/nonfatal in the persistence layer\nwith a persistence-specific concept of normal/high priority events.\n\nThis will be used to implement keeping a maximum number of logged\nexceptions per session, without leaking information about specific\nevent types into the persistence layer."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ea50d53e131c6c350938fd009cd49e2f29f53a64", "author": {"user": {"login": "mrwillis21", "name": "Matt Willis"}}, "url": "https://github.com/firebase/firebase-android-sdk/commit/ea50d53e131c6c350938fd009cd49e2f29f53a64", "committedDate": "2020-02-19T19:08:21Z", "message": "Cap events-per-session in Crashlytics persistence\n\nReplaces the concept of fatal/nonfatal in the persistence layer\nwith a persistence-specific concept of normal/high priority events.\n\nThis will be used to implement keeping a maximum number of logged\nexceptions per session, without leaking information about specific\nevent types into the persistence layer."}, "afterCommit": {"oid": "3f81d99566cc060ffe18caf769cfbb041052d472", "author": {"user": {"login": "mrwillis21", "name": "Matt Willis"}}, "url": "https://github.com/firebase/firebase-android-sdk/commit/3f81d99566cc060ffe18caf769cfbb041052d472", "committedDate": "2020-02-19T19:10:16Z", "message": "Cap events-per-session in Crashlytics persistence\n\nReplaces the concept of fatal/nonfatal in the persistence layer\nwith a persistence-specific concept of normal/high priority events.\n\nThis will be used to implement keeping a maximum number of logged\nexceptions per session, without leaking information about specific\nevent types into the persistence layer."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYxOTQ2OTE0", "url": "https://github.com/firebase/firebase-android-sdk/pull/1255#pullrequestreview-361946914", "createdAt": "2020-02-20T14:31:35Z", "commit": {"oid": "3f81d99566cc060ffe18caf769cfbb041052d472"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxNDozMTozNlrOFsVi4g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxNDozMTozNlrOFsVi4g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjAzNDY1OA==", "bodyText": "What resets this back to zero? Is this \"Persistence\" class recreated before it gets sufficiently large?", "url": "https://github.com/firebase/firebase-android-sdk/pull/1255#discussion_r382034658", "createdAt": "2020-02-20T14:31:36Z", "author": {"login": "jakeouellette"}, "path": "firebase-crashlytics/src/main/java/com/google/firebase/crashlytics/internal/persistence/CrashlyticsReportPersistence.java", "diffHunk": "@@ -43,36 +43,41 @@\n \n   private static final Charset UTF_8 = Charset.forName(\"UTF-8\");\n \n-  private static final String WORKING_DIRECTORY_NAME = \"fl\";\n+  private static final String WORKING_DIRECTORY_NAME = \"report-persistence\";\n   private static final String OPEN_SESSIONS_DIRECTORY_NAME = \"sessions\";\n-  private static final String FATAL_DIRECTORY_NAME = \"fatal\";\n-  private static final String NON_FATAL_DIRECTORY_NAME = \"non-fatal\";\n+  private static final String PRIORITY_REPORTS_DIRECTORY = \"priority-reports\";\n+  private static final String REPORTS_DIRECTORY = \"reports\";\n \n-  private static final String REPORT_FILE_NAME = \"report.json\";\n+  private static final String REPORT_FILE_NAME = \"report\";\n   private static final String EVENT_FILE_NAME_PREFIX = \"event\";\n-  private static final String EVENT_FILE_NAME_FORMAT = EVENT_FILE_NAME_PREFIX + \"%s.json\";\n-  private static final String EVENT_COUNTER_FORMAT = \"%010d\";\n-\n-  private static final String EVENT_TYPE_FATAL = \"crash\";\n+  private static final int EVENT_COUNTER_WIDTH = 10; // String width of maximum positive int value\n+  private static final String EVENT_COUNTER_FORMAT = \"%0\" + EVENT_COUNTER_WIDTH + \"d\";\n+  private static final int EVENT_NAME_LENGTH =\n+      EVENT_FILE_NAME_PREFIX.length() + EVENT_COUNTER_WIDTH;\n+  private static final String PRIORITY_EVENT_SUFFIX = \"_\";\n+  private static final String NORMAL_EVENT_SUFFIX = \"\";\n \n   private static final CrashlyticsReportJsonTransform TRANSFORM =\n       new CrashlyticsReportJsonTransform();\n \n   private final AtomicInteger eventCounter = new AtomicInteger(0);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f81d99566cc060ffe18caf769cfbb041052d472"}, "originalPosition": 29}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYxOTQ5NjM1", "url": "https://github.com/firebase/firebase-android-sdk/pull/1255#pullrequestreview-361949635", "createdAt": "2020-02-20T14:34:46Z", "commit": {"oid": "3f81d99566cc060ffe18caf769cfbb041052d472"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxNDozNDo0N1rOFsVrBg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxNDozNDo0N1rOFsVrBg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjAzNjc0Mg==", "bodyText": "It is interesting to me that this method is side-effecting and returns a value. Would it be more obvious to the reader if this method were static, and you passed  generateEventFilename(eventCounter.getAndIncrement(), isHighPriority) in?", "url": "https://github.com/firebase/firebase-android-sdk/pull/1255#discussion_r382036742", "createdAt": "2020-02-20T14:34:47Z", "author": {"login": "jakeouellette"}, "path": "firebase-crashlytics/src/main/java/com/google/firebase/crashlytics/internal/persistence/CrashlyticsReportPersistence.java", "diffHunk": "@@ -151,22 +178,55 @@ public void finalizeReports(String currentSessionId) {\n   }\n \n   public List<CrashlyticsReport> loadFinalizedReports() {\n-    final List<CrashlyticsReport> reports = new ArrayList<>();\n-    final List<File> fatalReports = getAllFilesInDirectory(fatalReportsDirectory);\n-    for (File reportFile : fatalReports) {\n-      reports.add(TRANSFORM.reportFromJson(readTextFile(reportFile)));\n+    final List<CrashlyticsReport> allReports = new ArrayList<>();\n+    final List<File> priorityReports = getAllFilesInDirectory(priorityReportsDirectory);\n+    for (File reportFile : priorityReports) {\n+      allReports.add(TRANSFORM.reportFromJson(readTextFile(reportFile)));\n     }\n-    final List<File> nonFatalReports = getAllFilesInDirectory(nonFatalReportsDirectory);\n-    for (File reportFile : nonFatalReports) {\n-      reports.add(TRANSFORM.reportFromJson(readTextFile(reportFile)));\n+    final List<File> reports = getAllFilesInDirectory(reportsDirectory);\n+    for (File reportFile : reports) {\n+      allReports.add(TRANSFORM.reportFromJson(readTextFile(reportFile)));\n     }\n-    return reports;\n+    return allReports;\n+  }\n+\n+  private static boolean isHighPriorityEvent(String eventFileName) {\n+    return eventFileName.endsWith(PRIORITY_EVENT_SUFFIX);\n+  }\n+\n+  private String generateEventFilename(boolean isHighPriority) {\n+    final String eventNumber =\n+        String.format(Locale.US, EVENT_COUNTER_FORMAT, eventCounter.getAndIncrement());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f81d99566cc060ffe18caf769cfbb041052d472"}, "originalPosition": 161}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYxOTUxOTYw", "url": "https://github.com/firebase/firebase-android-sdk/pull/1255#pullrequestreview-361951960", "createdAt": "2020-02-20T14:37:33Z", "commit": {"oid": "3f81d99566cc060ffe18caf769cfbb041052d472"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxNDozNzozM1rOFsVxxg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxNDozNzozM1rOFsVxxg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjAzODQ3MA==", "bodyText": "Possibly a dumb optimization, but if !isHighPriorityEvent is more variable, and EVENT_FILE_NAME_PREFIX is expected 99% of the time, it might be worth putting the second check first to short circuit early more frequently.", "url": "https://github.com/firebase/firebase-android-sdk/pull/1255#discussion_r382038470", "createdAt": "2020-02-20T14:37:33Z", "author": {"login": "jakeouellette"}, "path": "firebase-crashlytics/src/main/java/com/google/firebase/crashlytics/internal/persistence/CrashlyticsReportPersistence.java", "diffHunk": "@@ -151,22 +178,55 @@ public void finalizeReports(String currentSessionId) {\n   }\n \n   public List<CrashlyticsReport> loadFinalizedReports() {\n-    final List<CrashlyticsReport> reports = new ArrayList<>();\n-    final List<File> fatalReports = getAllFilesInDirectory(fatalReportsDirectory);\n-    for (File reportFile : fatalReports) {\n-      reports.add(TRANSFORM.reportFromJson(readTextFile(reportFile)));\n+    final List<CrashlyticsReport> allReports = new ArrayList<>();\n+    final List<File> priorityReports = getAllFilesInDirectory(priorityReportsDirectory);\n+    for (File reportFile : priorityReports) {\n+      allReports.add(TRANSFORM.reportFromJson(readTextFile(reportFile)));\n     }\n-    final List<File> nonFatalReports = getAllFilesInDirectory(nonFatalReportsDirectory);\n-    for (File reportFile : nonFatalReports) {\n-      reports.add(TRANSFORM.reportFromJson(readTextFile(reportFile)));\n+    final List<File> reports = getAllFilesInDirectory(reportsDirectory);\n+    for (File reportFile : reports) {\n+      allReports.add(TRANSFORM.reportFromJson(readTextFile(reportFile)));\n     }\n-    return reports;\n+    return allReports;\n+  }\n+\n+  private static boolean isHighPriorityEvent(String eventFileName) {\n+    return eventFileName.endsWith(PRIORITY_EVENT_SUFFIX);\n+  }\n+\n+  private String generateEventFilename(boolean isHighPriority) {\n+    final String eventNumber =\n+        String.format(Locale.US, EVENT_COUNTER_FORMAT, eventCounter.getAndIncrement());\n+    final String prioritySuffix = isHighPriority ? PRIORITY_EVENT_SUFFIX : NORMAL_EVENT_SUFFIX;\n+    return EVENT_FILE_NAME_PREFIX + eventNumber + prioritySuffix;\n   }\n \n   private File getSessionDirectoryById(String sessionId) {\n     return new File(openSessionsDirectory, sessionId);\n   }\n \n+  private static int trimEvents(File sessionDirectory, int maximum) {\n+    final List<File> normalPriorityEventFiles =\n+        getFilesInDirectory(\n+            sessionDirectory, CrashlyticsReportPersistence::isNormalPriorityEventFile);\n+    Collections.sort(normalPriorityEventFiles, CrashlyticsReportPersistence::oldestEventFileFirst);\n+    return capFilesCount(normalPriorityEventFiles, maximum);\n+  }\n+\n+  private static String eventNameOnly(String eventFileName) {\n+    return eventFileName.substring(0, EVENT_NAME_LENGTH);\n+  }\n+\n+  private static boolean isNormalPriorityEventFile(File dir, String name) {\n+    return name.startsWith(EVENT_FILE_NAME_PREFIX) && !isHighPriorityEvent(name);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f81d99566cc060ffe18caf769cfbb041052d472"}, "originalPosition": 183}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYxOTU0ODM4", "url": "https://github.com/firebase/firebase-android-sdk/pull/1255#pullrequestreview-361954838", "createdAt": "2020-02-20T14:40:52Z", "commit": {"oid": "3f81d99566cc060ffe18caf769cfbb041052d472"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxNDo0MDo1MlrOFsV6SQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxNDo0MDo1MlrOFsV6SQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjA0MDY0OQ==", "bodyText": "Is it worth having a unit test for this?", "url": "https://github.com/firebase/firebase-android-sdk/pull/1255#discussion_r382040649", "createdAt": "2020-02-20T14:40:52Z", "author": {"login": "jakeouellette"}, "path": "firebase-crashlytics/src/main/java/com/google/firebase/crashlytics/internal/persistence/CrashlyticsReportPersistence.java", "diffHunk": "@@ -151,22 +178,55 @@ public void finalizeReports(String currentSessionId) {\n   }\n \n   public List<CrashlyticsReport> loadFinalizedReports() {\n-    final List<CrashlyticsReport> reports = new ArrayList<>();\n-    final List<File> fatalReports = getAllFilesInDirectory(fatalReportsDirectory);\n-    for (File reportFile : fatalReports) {\n-      reports.add(TRANSFORM.reportFromJson(readTextFile(reportFile)));\n+    final List<CrashlyticsReport> allReports = new ArrayList<>();\n+    final List<File> priorityReports = getAllFilesInDirectory(priorityReportsDirectory);\n+    for (File reportFile : priorityReports) {\n+      allReports.add(TRANSFORM.reportFromJson(readTextFile(reportFile)));\n     }\n-    final List<File> nonFatalReports = getAllFilesInDirectory(nonFatalReportsDirectory);\n-    for (File reportFile : nonFatalReports) {\n-      reports.add(TRANSFORM.reportFromJson(readTextFile(reportFile)));\n+    final List<File> reports = getAllFilesInDirectory(reportsDirectory);\n+    for (File reportFile : reports) {\n+      allReports.add(TRANSFORM.reportFromJson(readTextFile(reportFile)));\n     }\n-    return reports;\n+    return allReports;\n+  }\n+\n+  private static boolean isHighPriorityEvent(String eventFileName) {\n+    return eventFileName.endsWith(PRIORITY_EVENT_SUFFIX);\n+  }\n+\n+  private String generateEventFilename(boolean isHighPriority) {\n+    final String eventNumber =\n+        String.format(Locale.US, EVENT_COUNTER_FORMAT, eventCounter.getAndIncrement());\n+    final String prioritySuffix = isHighPriority ? PRIORITY_EVENT_SUFFIX : NORMAL_EVENT_SUFFIX;\n+    return EVENT_FILE_NAME_PREFIX + eventNumber + prioritySuffix;\n   }\n \n   private File getSessionDirectoryById(String sessionId) {\n     return new File(openSessionsDirectory, sessionId);\n   }\n \n+  private static int trimEvents(File sessionDirectory, int maximum) {\n+    final List<File> normalPriorityEventFiles =\n+        getFilesInDirectory(\n+            sessionDirectory, CrashlyticsReportPersistence::isNormalPriorityEventFile);\n+    Collections.sort(normalPriorityEventFiles, CrashlyticsReportPersistence::oldestEventFileFirst);\n+    return capFilesCount(normalPriorityEventFiles, maximum);\n+  }\n+\n+  private static String eventNameOnly(String eventFileName) {\n+    return eventFileName.substring(0, EVENT_NAME_LENGTH);\n+  }\n+\n+  private static boolean isNormalPriorityEventFile(File dir, String name) {\n+    return name.startsWith(EVENT_FILE_NAME_PREFIX) && !isHighPriorityEvent(name);\n+  }\n+\n+  private static int oldestEventFileFirst(File f1, File f2) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f81d99566cc060ffe18caf769cfbb041052d472"}, "originalPosition": 186}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYxOTU5Njg1", "url": "https://github.com/firebase/firebase-android-sdk/pull/1255#pullrequestreview-361959685", "createdAt": "2020-02-20T14:46:39Z", "commit": {"oid": "3f81d99566cc060ffe18caf769cfbb041052d472"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxNDo0NjozOVrOFsWJkQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxNDo0NjozOVrOFsWJkQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjA0NDU2MQ==", "bodyText": "Is it worth having a unit test on this method?", "url": "https://github.com/firebase/firebase-android-sdk/pull/1255#discussion_r382044561", "createdAt": "2020-02-20T14:46:39Z", "author": {"login": "jakeouellette"}, "path": "firebase-crashlytics/src/main/java/com/google/firebase/crashlytics/internal/persistence/CrashlyticsReportPersistence.java", "diffHunk": "@@ -222,6 +282,25 @@ private static String readTextFile(File file) {\n     }\n   }\n \n+  /**\n+   * Deletes files from the list until the list size is equal to the maximum. If list is already\n+   * correctly sized, no files are deleted. List should be sorted in the order in which files should\n+   * be deleted.\n+   *\n+   * @return the number of files retained on disk\n+   */\n+  private static int capFilesCount(List<File> files, int maximum) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f81d99566cc060ffe18caf769cfbb041052d472"}, "originalPosition": 206}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYxOTYwMDMy", "url": "https://github.com/firebase/firebase-android-sdk/pull/1255#pullrequestreview-361960032", "createdAt": "2020-02-20T14:47:04Z", "commit": {"oid": "3f81d99566cc060ffe18caf769cfbb041052d472"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxNDo0NzowNFrOFsWKww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxNDo0NzowNFrOFsWKww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjA0NDg2Nw==", "bodyText": "does persistEvents instrument this trim in any unit tests (possibly they weren't changed by this PR)", "url": "https://github.com/firebase/firebase-android-sdk/pull/1255#discussion_r382044867", "createdAt": "2020-02-20T14:47:04Z", "author": {"login": "jakeouellette"}, "path": "firebase-crashlytics/src/main/java/com/google/firebase/crashlytics/internal/persistence/CrashlyticsReportPersistence.java", "diffHunk": "@@ -151,22 +178,55 @@ public void finalizeReports(String currentSessionId) {\n   }\n \n   public List<CrashlyticsReport> loadFinalizedReports() {\n-    final List<CrashlyticsReport> reports = new ArrayList<>();\n-    final List<File> fatalReports = getAllFilesInDirectory(fatalReportsDirectory);\n-    for (File reportFile : fatalReports) {\n-      reports.add(TRANSFORM.reportFromJson(readTextFile(reportFile)));\n+    final List<CrashlyticsReport> allReports = new ArrayList<>();\n+    final List<File> priorityReports = getAllFilesInDirectory(priorityReportsDirectory);\n+    for (File reportFile : priorityReports) {\n+      allReports.add(TRANSFORM.reportFromJson(readTextFile(reportFile)));\n     }\n-    final List<File> nonFatalReports = getAllFilesInDirectory(nonFatalReportsDirectory);\n-    for (File reportFile : nonFatalReports) {\n-      reports.add(TRANSFORM.reportFromJson(readTextFile(reportFile)));\n+    final List<File> reports = getAllFilesInDirectory(reportsDirectory);\n+    for (File reportFile : reports) {\n+      allReports.add(TRANSFORM.reportFromJson(readTextFile(reportFile)));\n     }\n-    return reports;\n+    return allReports;\n+  }\n+\n+  private static boolean isHighPriorityEvent(String eventFileName) {\n+    return eventFileName.endsWith(PRIORITY_EVENT_SUFFIX);\n+  }\n+\n+  private String generateEventFilename(boolean isHighPriority) {\n+    final String eventNumber =\n+        String.format(Locale.US, EVENT_COUNTER_FORMAT, eventCounter.getAndIncrement());\n+    final String prioritySuffix = isHighPriority ? PRIORITY_EVENT_SUFFIX : NORMAL_EVENT_SUFFIX;\n+    return EVENT_FILE_NAME_PREFIX + eventNumber + prioritySuffix;\n   }\n \n   private File getSessionDirectoryById(String sessionId) {\n     return new File(openSessionsDirectory, sessionId);\n   }\n \n+  private static int trimEvents(File sessionDirectory, int maximum) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f81d99566cc060ffe18caf769cfbb041052d472"}, "originalPosition": 170}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYxOTYzOTE0", "url": "https://github.com/firebase/firebase-android-sdk/pull/1255#pullrequestreview-361963914", "createdAt": "2020-02-20T14:51:33Z", "commit": {"oid": "3f81d99566cc060ffe18caf769cfbb041052d472"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxNDo1MTozM1rOFsWWVQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxNDo1MTozM1rOFsWWVQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjA0NzgyOQ==", "bodyText": "why does this return an int if we never use it", "url": "https://github.com/firebase/firebase-android-sdk/pull/1255#discussion_r382047829", "createdAt": "2020-02-20T14:51:33Z", "author": {"login": "jakeouellette"}, "path": "firebase-crashlytics/src/main/java/com/google/firebase/crashlytics/internal/persistence/CrashlyticsReportPersistence.java", "diffHunk": "@@ -151,22 +178,55 @@ public void finalizeReports(String currentSessionId) {\n   }\n \n   public List<CrashlyticsReport> loadFinalizedReports() {\n-    final List<CrashlyticsReport> reports = new ArrayList<>();\n-    final List<File> fatalReports = getAllFilesInDirectory(fatalReportsDirectory);\n-    for (File reportFile : fatalReports) {\n-      reports.add(TRANSFORM.reportFromJson(readTextFile(reportFile)));\n+    final List<CrashlyticsReport> allReports = new ArrayList<>();\n+    final List<File> priorityReports = getAllFilesInDirectory(priorityReportsDirectory);\n+    for (File reportFile : priorityReports) {\n+      allReports.add(TRANSFORM.reportFromJson(readTextFile(reportFile)));\n     }\n-    final List<File> nonFatalReports = getAllFilesInDirectory(nonFatalReportsDirectory);\n-    for (File reportFile : nonFatalReports) {\n-      reports.add(TRANSFORM.reportFromJson(readTextFile(reportFile)));\n+    final List<File> reports = getAllFilesInDirectory(reportsDirectory);\n+    for (File reportFile : reports) {\n+      allReports.add(TRANSFORM.reportFromJson(readTextFile(reportFile)));\n     }\n-    return reports;\n+    return allReports;\n+  }\n+\n+  private static boolean isHighPriorityEvent(String eventFileName) {\n+    return eventFileName.endsWith(PRIORITY_EVENT_SUFFIX);\n+  }\n+\n+  private String generateEventFilename(boolean isHighPriority) {\n+    final String eventNumber =\n+        String.format(Locale.US, EVENT_COUNTER_FORMAT, eventCounter.getAndIncrement());\n+    final String prioritySuffix = isHighPriority ? PRIORITY_EVENT_SUFFIX : NORMAL_EVENT_SUFFIX;\n+    return EVENT_FILE_NAME_PREFIX + eventNumber + prioritySuffix;\n   }\n \n   private File getSessionDirectoryById(String sessionId) {\n     return new File(openSessionsDirectory, sessionId);\n   }\n \n+  private static int trimEvents(File sessionDirectory, int maximum) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f81d99566cc060ffe18caf769cfbb041052d472"}, "originalPosition": 170}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYxOTY1OTcy", "url": "https://github.com/firebase/firebase-android-sdk/pull/1255#pullrequestreview-361965972", "createdAt": "2020-02-20T14:53:51Z", "commit": {"oid": "3f81d99566cc060ffe18caf769cfbb041052d472"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxNDo1Mzo1MVrOFsWcuQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxNDo1Mzo1MVrOFsWcuQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjA0OTQ2NQ==", "bodyText": "getFilesInDirectory makes an array internally, did we consider just working with the array class? (e.g., by doing Arrays.sort)", "url": "https://github.com/firebase/firebase-android-sdk/pull/1255#discussion_r382049465", "createdAt": "2020-02-20T14:53:51Z", "author": {"login": "jakeouellette"}, "path": "firebase-crashlytics/src/main/java/com/google/firebase/crashlytics/internal/persistence/CrashlyticsReportPersistence.java", "diffHunk": "@@ -151,22 +178,55 @@ public void finalizeReports(String currentSessionId) {\n   }\n \n   public List<CrashlyticsReport> loadFinalizedReports() {\n-    final List<CrashlyticsReport> reports = new ArrayList<>();\n-    final List<File> fatalReports = getAllFilesInDirectory(fatalReportsDirectory);\n-    for (File reportFile : fatalReports) {\n-      reports.add(TRANSFORM.reportFromJson(readTextFile(reportFile)));\n+    final List<CrashlyticsReport> allReports = new ArrayList<>();\n+    final List<File> priorityReports = getAllFilesInDirectory(priorityReportsDirectory);\n+    for (File reportFile : priorityReports) {\n+      allReports.add(TRANSFORM.reportFromJson(readTextFile(reportFile)));\n     }\n-    final List<File> nonFatalReports = getAllFilesInDirectory(nonFatalReportsDirectory);\n-    for (File reportFile : nonFatalReports) {\n-      reports.add(TRANSFORM.reportFromJson(readTextFile(reportFile)));\n+    final List<File> reports = getAllFilesInDirectory(reportsDirectory);\n+    for (File reportFile : reports) {\n+      allReports.add(TRANSFORM.reportFromJson(readTextFile(reportFile)));\n     }\n-    return reports;\n+    return allReports;\n+  }\n+\n+  private static boolean isHighPriorityEvent(String eventFileName) {\n+    return eventFileName.endsWith(PRIORITY_EVENT_SUFFIX);\n+  }\n+\n+  private String generateEventFilename(boolean isHighPriority) {\n+    final String eventNumber =\n+        String.format(Locale.US, EVENT_COUNTER_FORMAT, eventCounter.getAndIncrement());\n+    final String prioritySuffix = isHighPriority ? PRIORITY_EVENT_SUFFIX : NORMAL_EVENT_SUFFIX;\n+    return EVENT_FILE_NAME_PREFIX + eventNumber + prioritySuffix;\n   }\n \n   private File getSessionDirectoryById(String sessionId) {\n     return new File(openSessionsDirectory, sessionId);\n   }\n \n+  private static int trimEvents(File sessionDirectory, int maximum) {\n+    final List<File> normalPriorityEventFiles =\n+        getFilesInDirectory(\n+            sessionDirectory, CrashlyticsReportPersistence::isNormalPriorityEventFile);\n+    Collections.sort(normalPriorityEventFiles, CrashlyticsReportPersistence::oldestEventFileFirst);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f81d99566cc060ffe18caf769cfbb041052d472"}, "originalPosition": 174}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYxOTY3NzA5", "url": "https://github.com/firebase/firebase-android-sdk/pull/1255#pullrequestreview-361967709", "createdAt": "2020-02-20T14:55:51Z", "commit": {"oid": "3f81d99566cc060ffe18caf769cfbb041052d472"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxNDo1NTo1MlrOFsWhrw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxNDo1NTo1MlrOFsWhrw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjA1MDczNQ==", "bodyText": "do we use // TODO(name): style?", "url": "https://github.com/firebase/firebase-android-sdk/pull/1255#discussion_r382050735", "createdAt": "2020-02-20T14:55:52Z", "author": {"login": "jakeouellette"}, "path": "firebase-crashlytics/src/main/java/com/google/firebase/crashlytics/internal/persistence/CrashlyticsReportPersistence.java", "diffHunk": "@@ -43,36 +43,41 @@\n \n   private static final Charset UTF_8 = Charset.forName(\"UTF-8\");\n \n-  private static final String WORKING_DIRECTORY_NAME = \"fl\";\n+  private static final String WORKING_DIRECTORY_NAME = \"report-persistence\";\n   private static final String OPEN_SESSIONS_DIRECTORY_NAME = \"sessions\";\n-  private static final String FATAL_DIRECTORY_NAME = \"fatal\";\n-  private static final String NON_FATAL_DIRECTORY_NAME = \"non-fatal\";\n+  private static final String PRIORITY_REPORTS_DIRECTORY = \"priority-reports\";\n+  private static final String REPORTS_DIRECTORY = \"reports\";\n \n-  private static final String REPORT_FILE_NAME = \"report.json\";\n+  private static final String REPORT_FILE_NAME = \"report\";\n   private static final String EVENT_FILE_NAME_PREFIX = \"event\";\n-  private static final String EVENT_FILE_NAME_FORMAT = EVENT_FILE_NAME_PREFIX + \"%s.json\";\n-  private static final String EVENT_COUNTER_FORMAT = \"%010d\";\n-\n-  private static final String EVENT_TYPE_FATAL = \"crash\";\n+  private static final int EVENT_COUNTER_WIDTH = 10; // String width of maximum positive int value\n+  private static final String EVENT_COUNTER_FORMAT = \"%0\" + EVENT_COUNTER_WIDTH + \"d\";\n+  private static final int EVENT_NAME_LENGTH =\n+      EVENT_FILE_NAME_PREFIX.length() + EVENT_COUNTER_WIDTH;\n+  private static final String PRIORITY_EVENT_SUFFIX = \"_\";\n+  private static final String NORMAL_EVENT_SUFFIX = \"\";\n \n   private static final CrashlyticsReportJsonTransform TRANSFORM =\n       new CrashlyticsReportJsonTransform();\n \n   private final AtomicInteger eventCounter = new AtomicInteger(0);\n \n   // Storage for sessions that are still being written to\n-  private File openSessionsDirectory;\n+  private final File openSessionsDirectory;\n \n   // Storage for finalized reports\n-  // Keep finalized reports organized by whether or not they contain a fatal event.\n-  private File fatalReportsDirectory;\n-  private File nonFatalReportsDirectory;\n+  private final File priorityReportsDirectory;\n+  private final File reportsDirectory;\n+\n+  // TODO: Add settings override", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f81d99566cc060ffe18caf769cfbb041052d472"}, "originalPosition": 42}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYxOTcwNDk1", "url": "https://github.com/firebase/firebase-android-sdk/pull/1255#pullrequestreview-361970495", "createdAt": "2020-02-20T14:58:58Z", "commit": {"oid": "3f81d99566cc060ffe18caf769cfbb041052d472"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxNDo1ODo1OFrOFsWqYw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxNDo1ODo1OFrOFsWqYw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjA1Mjk2Mw==", "bodyText": "This was a headscratcher for me at first, if a name is [path][name-part][number-part][priority-part], I wasn't realizing eventNameOnly returned [name-part][number-part].", "url": "https://github.com/firebase/firebase-android-sdk/pull/1255#discussion_r382052963", "createdAt": "2020-02-20T14:58:58Z", "author": {"login": "jakeouellette"}, "path": "firebase-crashlytics/src/main/java/com/google/firebase/crashlytics/internal/persistence/CrashlyticsReportPersistence.java", "diffHunk": "@@ -151,22 +178,55 @@ public void finalizeReports(String currentSessionId) {\n   }\n \n   public List<CrashlyticsReport> loadFinalizedReports() {\n-    final List<CrashlyticsReport> reports = new ArrayList<>();\n-    final List<File> fatalReports = getAllFilesInDirectory(fatalReportsDirectory);\n-    for (File reportFile : fatalReports) {\n-      reports.add(TRANSFORM.reportFromJson(readTextFile(reportFile)));\n+    final List<CrashlyticsReport> allReports = new ArrayList<>();\n+    final List<File> priorityReports = getAllFilesInDirectory(priorityReportsDirectory);\n+    for (File reportFile : priorityReports) {\n+      allReports.add(TRANSFORM.reportFromJson(readTextFile(reportFile)));\n     }\n-    final List<File> nonFatalReports = getAllFilesInDirectory(nonFatalReportsDirectory);\n-    for (File reportFile : nonFatalReports) {\n-      reports.add(TRANSFORM.reportFromJson(readTextFile(reportFile)));\n+    final List<File> reports = getAllFilesInDirectory(reportsDirectory);\n+    for (File reportFile : reports) {\n+      allReports.add(TRANSFORM.reportFromJson(readTextFile(reportFile)));\n     }\n-    return reports;\n+    return allReports;\n+  }\n+\n+  private static boolean isHighPriorityEvent(String eventFileName) {\n+    return eventFileName.endsWith(PRIORITY_EVENT_SUFFIX);\n+  }\n+\n+  private String generateEventFilename(boolean isHighPriority) {\n+    final String eventNumber =\n+        String.format(Locale.US, EVENT_COUNTER_FORMAT, eventCounter.getAndIncrement());\n+    final String prioritySuffix = isHighPriority ? PRIORITY_EVENT_SUFFIX : NORMAL_EVENT_SUFFIX;\n+    return EVENT_FILE_NAME_PREFIX + eventNumber + prioritySuffix;\n   }\n \n   private File getSessionDirectoryById(String sessionId) {\n     return new File(openSessionsDirectory, sessionId);\n   }\n \n+  private static int trimEvents(File sessionDirectory, int maximum) {\n+    final List<File> normalPriorityEventFiles =\n+        getFilesInDirectory(\n+            sessionDirectory, CrashlyticsReportPersistence::isNormalPriorityEventFile);\n+    Collections.sort(normalPriorityEventFiles, CrashlyticsReportPersistence::oldestEventFileFirst);\n+    return capFilesCount(normalPriorityEventFiles, maximum);\n+  }\n+\n+  private static String eventNameOnly(String eventFileName) {\n+    return eventFileName.substring(0, EVENT_NAME_LENGTH);\n+  }\n+\n+  private static boolean isNormalPriorityEventFile(File dir, String name) {\n+    return name.startsWith(EVENT_FILE_NAME_PREFIX) && !isHighPriorityEvent(name);\n+  }\n+\n+  private static int oldestEventFileFirst(File f1, File f2) {\n+    final String name1 = eventNameOnly(f1.getName());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f81d99566cc060ffe18caf769cfbb041052d472"}, "originalPosition": 187}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d3cb728176ea4be6512917bc4d3def417aec05d9", "author": {"user": {"login": "mrwillis21", "name": "Matt Willis"}}, "url": "https://github.com/firebase/firebase-android-sdk/commit/d3cb728176ea4be6512917bc4d3def417aec05d9", "committedDate": "2020-02-20T16:04:51Z", "message": "Feedback"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYyMDY5MDU5", "url": "https://github.com/firebase/firebase-android-sdk/pull/1255#pullrequestreview-362069059", "createdAt": "2020-02-20T16:54:51Z", "commit": {"oid": "d3cb728176ea4be6512917bc4d3def417aec05d9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxNjo1NDo1MVrOFsbTzg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxNjo1NDo1MVrOFsbTzg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjEyOTEwMg==", "bodyText": "I'm prefer startsWith and endsWith here, though I could also see some folks preferring a regex match", "url": "https://github.com/firebase/firebase-android-sdk/pull/1255#discussion_r382129102", "createdAt": "2020-02-20T16:54:51Z", "author": {"login": "jakeouellette"}, "path": "firebase-crashlytics/src/main/java/com/google/firebase/crashlytics/internal/persistence/CrashlyticsReportPersistence.java", "diffHunk": "@@ -190,21 +191,24 @@ public void finalizeReports(String currentSessionId) {\n     return allReports;\n   }\n \n-  private static boolean isHighPriorityEvent(String eventFileName) {\n-    return eventFileName.endsWith(PRIORITY_EVENT_SUFFIX);\n+  private static boolean isHighPriorityEventFile(String fileName) {\n+    return fileName.startsWith(EVENT_FILE_NAME_PREFIX) && fileName.endsWith(PRIORITY_EVENT_SUFFIX);\n   }\n \n-  private String generateEventFilename(boolean isHighPriority) {\n-    final String eventNumber =\n-        String.format(Locale.US, EVENT_COUNTER_FORMAT, eventCounter.getAndIncrement());\n-    final String prioritySuffix = isHighPriority ? PRIORITY_EVENT_SUFFIX : NORMAL_EVENT_SUFFIX;\n-    return EVENT_FILE_NAME_PREFIX + eventNumber + prioritySuffix;\n+  private static boolean isNormalPriorityEventFile(File dir, String name) {\n+    return name.startsWith(EVENT_FILE_NAME_PREFIX) && !name.endsWith(PRIORITY_EVENT_SUFFIX);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d3cb728176ea4be6512917bc4d3def417aec05d9"}, "originalPosition": 35}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYyMDcwMDk2", "url": "https://github.com/firebase/firebase-android-sdk/pull/1255#pullrequestreview-362070096", "createdAt": "2020-02-20T16:56:13Z", "commit": {"oid": "d3cb728176ea4be6512917bc4d3def417aec05d9"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2074, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}