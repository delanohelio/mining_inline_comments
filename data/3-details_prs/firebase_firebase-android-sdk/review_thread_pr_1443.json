{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAxNjU3NDY0", "number": 1443, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQwMDoxMDoxNVrODwm0jw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxOTo1MjoxNVrODw2Abg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyMjk0Mjg3OnYy", "diffSide": "RIGHT", "path": "firebase-installations/src/main/java/com/google/firebase/installations/remote/FirebaseInstallationServiceClient.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQwMDoxMDoxNlrOGDtUbA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxNzozNDoyMVrOGEA5WQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjU0MTQyMA==", "bodyText": "How about creating a method for this to prevent code duplication:\nprivate void logFisCommunicationError(HttpURLConnection conn) {\n  String logString = [...];\n  Log.w(FIS_TAG, logString);\n}\n\nPlease ignore/ack if you think this makes no sense.", "url": "https://github.com/firebase/firebase-android-sdk/pull/1443#discussion_r406541420", "createdAt": "2020-04-10T00:10:16Z", "author": {"login": "andirayo"}, "path": "firebase-installations/src/main/java/com/google/firebase/installations/remote/FirebaseInstallationServiceClient.java", "diffHunk": "@@ -161,6 +164,8 @@ public InstallationResponse createFirebaseInstallation(\n           return readCreateResponse(httpURLConnection);\n         }\n \n+        Log.w(FIS_TAG, readErrorResponse(httpURLConnection));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "40d915c7e234ac01eb49e88c5eaf0d0ce72d4000"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjg2MjE2OQ==", "bodyText": "Done", "url": "https://github.com/firebase/firebase-android-sdk/pull/1443#discussion_r406862169", "createdAt": "2020-04-10T17:34:21Z", "author": {"login": "ankitaj224"}, "path": "firebase-installations/src/main/java/com/google/firebase/installations/remote/FirebaseInstallationServiceClient.java", "diffHunk": "@@ -161,6 +164,8 @@ public InstallationResponse createFirebaseInstallation(\n           return readCreateResponse(httpURLConnection);\n         }\n \n+        Log.w(FIS_TAG, readErrorResponse(httpURLConnection));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjU0MTQyMA=="}, "originalCommit": {"oid": "40d915c7e234ac01eb49e88c5eaf0d0ce72d4000"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyMjk1Nzg3OnYy", "diffSide": "RIGHT", "path": "firebase-installations/src/main/java/com/google/firebase/installations/remote/FirebaseInstallationServiceClient.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQwMDoxNzozM1rOGDtctQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxOTo0MDozNVrOGED7Xw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjU0MzU0MQ==", "bodyText": "I would ask you to please add another log message to the case that the request fails as ResponseCode.BAD_CONFIG, when we know that the application is misconfigured.\nSince this is the main concern we are addressing, I recommend to add another log message, preferably as \"Error\" or as \"Critical\" - I'm not sure which one is more accurate:\nLog.e/c(FIS_TAG, \"Firebase Installations can not communicate with Firebase server APIs due to invalid configuration. Please update your Firebase initialization process and set valid Firebase options (API key, Project ID, Application ID) when initializing Firebase.\"", "url": "https://github.com/firebase/firebase-android-sdk/pull/1443#discussion_r406543541", "createdAt": "2020-04-10T00:17:33Z", "author": {"login": "andirayo"}, "path": "firebase-installations/src/main/java/com/google/firebase/installations/remote/FirebaseInstallationServiceClient.java", "diffHunk": "@@ -161,6 +164,8 @@ public InstallationResponse createFirebaseInstallation(\n           return readCreateResponse(httpURLConnection);\n         }\n \n+        Log.w(FIS_TAG, readErrorResponse(httpURLConnection));\n+\n         if (httpResponseCode == 429 || (httpResponseCode >= 500 && httpResponseCode < 600)) {\n           retryCount++;\n           continue;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "40d915c7e234ac01eb49e88c5eaf0d0ce72d4000"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjkxMTgzOQ==", "bodyText": "Done. PTAL", "url": "https://github.com/firebase/firebase-android-sdk/pull/1443#discussion_r406911839", "createdAt": "2020-04-10T19:40:35Z", "author": {"login": "ankitaj224"}, "path": "firebase-installations/src/main/java/com/google/firebase/installations/remote/FirebaseInstallationServiceClient.java", "diffHunk": "@@ -161,6 +164,8 @@ public InstallationResponse createFirebaseInstallation(\n           return readCreateResponse(httpURLConnection);\n         }\n \n+        Log.w(FIS_TAG, readErrorResponse(httpURLConnection));\n+\n         if (httpResponseCode == 429 || (httpResponseCode >= 500 && httpResponseCode < 600)) {\n           retryCount++;\n           continue;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjU0MzU0MQ=="}, "originalCommit": {"oid": "40d915c7e234ac01eb49e88c5eaf0d0ce72d4000"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyMjk2MDAyOnYy", "diffSide": "RIGHT", "path": "firebase-installations/src/main/java/com/google/firebase/installations/remote/FirebaseInstallationServiceClient.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQwMDoxODo0MVrOGDtd4g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxOTo0MDo1M1rOGED7vQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjU0Mzg0Mg==", "bodyText": "If we are only using this for logging, should we swallow that IOException? Wdyt?", "url": "https://github.com/firebase/firebase-android-sdk/pull/1443#discussion_r406543842", "createdAt": "2020-04-10T00:18:41Z", "author": {"login": "andirayo"}, "path": "firebase-installations/src/main/java/com/google/firebase/installations/remote/FirebaseInstallationServiceClient.java", "diffHunk": "@@ -486,4 +495,19 @@ static long parseTokenExpirationTimestamp(String expiresIn) {\n         ? 0L\n         : Long.parseLong(expiresIn.substring(0, expiresIn.length() - 1));\n   }\n+\n+  // Read the error message from the response.\n+  private String readErrorResponse(HttpURLConnection conn) throws IOException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "40d915c7e234ac01eb49e88c5eaf0d0ce72d4000"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjkxMTkzMw==", "bodyText": "Makes sense. Done", "url": "https://github.com/firebase/firebase-android-sdk/pull/1443#discussion_r406911933", "createdAt": "2020-04-10T19:40:53Z", "author": {"login": "ankitaj224"}, "path": "firebase-installations/src/main/java/com/google/firebase/installations/remote/FirebaseInstallationServiceClient.java", "diffHunk": "@@ -486,4 +495,19 @@ static long parseTokenExpirationTimestamp(String expiresIn) {\n         ? 0L\n         : Long.parseLong(expiresIn.substring(0, expiresIn.length() - 1));\n   }\n+\n+  // Read the error message from the response.\n+  private String readErrorResponse(HttpURLConnection conn) throws IOException {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjU0Mzg0Mg=="}, "originalCommit": {"oid": "40d915c7e234ac01eb49e88c5eaf0d0ce72d4000"}, "originalPosition": 57}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyMjk3NDIyOnYy", "diffSide": "RIGHT", "path": "firebase-installations/src/main/java/com/google/firebase/installations/remote/FirebaseInstallationServiceClient.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQwMDoyNzoxNlrOGDtmKQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQwMDoyNzoxNlrOGDtmKQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjU0NTk2MQ==", "bodyText": "FIS\n\"Firebase Installations API\" or \"Firebase Installations server API\" instead of \"FIS server\".\nWe don't use FIS in public documentation.\nAlso it uses the term \"Firebase\" so developers are more likely to recognize that this is used by their Firebase service.\nColon\nPlease add a colon between ResponseMessage and ResponseBody. I think that is the standard when printing these errors (not 100% sure).\nSuggestion\n\"Error when communicating with the Firebase Installations server API. HTTP response: [%d %s: %s]\"", "url": "https://github.com/firebase/firebase-android-sdk/pull/1443#discussion_r406545961", "createdAt": "2020-04-10T00:27:16Z", "author": {"login": "andirayo"}, "path": "firebase-installations/src/main/java/com/google/firebase/installations/remote/FirebaseInstallationServiceClient.java", "diffHunk": "@@ -486,4 +495,19 @@ static long parseTokenExpirationTimestamp(String expiresIn) {\n         ? 0L\n         : Long.parseLong(expiresIn.substring(0, expiresIn.length() - 1));\n   }\n+\n+  // Read the error message from the response.\n+  private String readErrorResponse(HttpURLConnection conn) throws IOException {\n+    try (BufferedReader reader =\n+        new BufferedReader(new InputStreamReader(conn.getErrorStream(), UTF_8))) {\n+      StringBuilder response = new StringBuilder();\n+      for (String input = reader.readLine(); input != null; input = reader.readLine()) {\n+        response.append(input).append('\\n');\n+      }\n+\n+      return String.format(\n+          \"The FIS server responded with an error. HTTP response: [%d %s %s]\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "40d915c7e234ac01eb49e88c5eaf0d0ce72d4000"}, "originalPosition": 66}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyNTQyNzE4OnYy", "diffSide": "RIGHT", "path": "firebase-installations/src/main/java/com/google/firebase/installations/remote/FirebaseInstallationServiceClient.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxOTo1MDoyNVrOGEEIqw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxOTo1MDoyNVrOGEEIqw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjkxNTI0Mw==", "bodyText": "@nullable", "url": "https://github.com/firebase/firebase-android-sdk/pull/1443#discussion_r406915243", "createdAt": "2020-04-10T19:50:25Z", "author": {"login": "andirayo"}, "path": "firebase-installations/src/main/java/com/google/firebase/installations/remote/FirebaseInstallationServiceClient.java", "diffHunk": "@@ -486,4 +511,27 @@ static long parseTokenExpirationTimestamp(String expiresIn) {\n         ? 0L\n         : Long.parseLong(expiresIn.substring(0, expiresIn.length() - 1));\n   }\n+\n+  private static void logFisCommunicationError(HttpURLConnection conn) {\n+    String logString = readErrorResponse(conn);\n+    if (!TextUtils.isEmpty(logString)) {\n+      Log.w(FIS_TAG, logString);\n+    }\n+  }\n+\n+  // Read the error message from the response.\n+  private static String readErrorResponse(HttpURLConnection conn) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f2eba2c02e87d7f7eddc75d9cbf17ba150bdff59"}, "originalPosition": 114}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyNTQzMDg2OnYy", "diffSide": "RIGHT", "path": "firebase-installations/src/main/java/com/google/firebase/installations/remote/FirebaseInstallationServiceClient.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxOTo1MjoxNVrOGEELCQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxOTo1Nzo0NVrOGEESzw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjkxNTg0OQ==", "bodyText": "If you return before this httpURLConnection seems to stay connected, because you only call #disconnect over here.", "url": "https://github.com/firebase/firebase-android-sdk/pull/1443#discussion_r406915849", "createdAt": "2020-04-10T19:52:15Z", "author": {"login": "andirayo"}, "path": "firebase-installations/src/main/java/com/google/firebase/installations/remote/FirebaseInstallationServiceClient.java", "diffHunk": "@@ -286,19 +294,23 @@ public void deleteFirebaseInstallation(\n       httpURLConnection.addRequestProperty(\"Authorization\", \"FIS_v2 \" + refreshToken);\n \n       int httpResponseCode = httpURLConnection.getResponseCode();\n-      httpURLConnection.disconnect();\n \n       if (httpResponseCode == 200 || httpResponseCode == 401 || httpResponseCode == 404) {\n         return;\n       }\n \n+      logFisCommunicationError(httpURLConnection);\n+      httpURLConnection.disconnect();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f2eba2c02e87d7f7eddc75d9cbf17ba150bdff59"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjkxNzgzOQ==", "bodyText": "Good catch. Fixed it.", "url": "https://github.com/firebase/firebase-android-sdk/pull/1443#discussion_r406917839", "createdAt": "2020-04-10T19:57:45Z", "author": {"login": "ankitaj224"}, "path": "firebase-installations/src/main/java/com/google/firebase/installations/remote/FirebaseInstallationServiceClient.java", "diffHunk": "@@ -286,19 +294,23 @@ public void deleteFirebaseInstallation(\n       httpURLConnection.addRequestProperty(\"Authorization\", \"FIS_v2 \" + refreshToken);\n \n       int httpResponseCode = httpURLConnection.getResponseCode();\n-      httpURLConnection.disconnect();\n \n       if (httpResponseCode == 200 || httpResponseCode == 401 || httpResponseCode == 404) {\n         return;\n       }\n \n+      logFisCommunicationError(httpURLConnection);\n+      httpURLConnection.disconnect();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjkxNTg0OQ=="}, "originalCommit": {"oid": "f2eba2c02e87d7f7eddc75d9cbf17ba150bdff59"}, "originalPosition": 52}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1291, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}