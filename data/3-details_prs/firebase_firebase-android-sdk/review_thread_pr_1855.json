{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDYzNDU1OTg1", "number": 1855, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxNzoxNTo0M1rOEV6yKg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxNzoxNTo0M1rOEV6yKg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxNDE4NjY2OnYy", "diffSide": "RIGHT", "path": "transport/transport-runtime/src/main/java/com/google/android/datatransport/runtime/scheduling/jobscheduling/SchedulerConfig.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxNzoxNTo0M1rOG88vbw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxOTo1NTowNVrOG9CI8Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjU2MjkyNw==", "bodyText": "I know this algorithm is being used just because it works out the way we want - but it would help to have some commentary about why we're using this rather complex logic, for anyone down the line wondering why this was chosen.", "url": "https://github.com/firebase/firebase-android-sdk/pull/1855#discussion_r466562927", "createdAt": "2020-08-06T17:15:43Z", "author": {"login": "mrwillis21"}, "path": "transport/transport-runtime/src/main/java/com/google/android/datatransport/runtime/scheduling/jobscheduling/SchedulerConfig.java", "diffHunk": "@@ -135,10 +137,20 @@ public long getScheduleDelay(Priority priority, long minTimestamp, int attemptNu\n     long timeDiff = minTimestamp - getClock().getTime();\n     ConfigValue config = getValues().get(priority);\n \n-    long delay = Math.max(((long) Math.pow(2, attemptNumber - 1)) * config.getDelta(), timeDiff);\n+    long delay = Math.max(adjustedExponentialBackoff(attemptNumber, config.getDelta()), timeDiff);\n     return Math.min(delay, config.getMaxAllowedDelay());\n   }\n \n+  private long adjustedExponentialBackoff(int attemptNumber, long delta) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8e5d80e2ffa7e6b2f475b0c1f2f25aabea6adce9"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjU3ODA1Nw==", "bodyText": "Oops, I saw your comment after merging. I can create a follow up PR, but fwiw the explanation is present in the commit message.", "url": "https://github.com/firebase/firebase-android-sdk/pull/1855#discussion_r466578057", "createdAt": "2020-08-06T17:38:09Z", "author": {"login": "vkryachko"}, "path": "transport/transport-runtime/src/main/java/com/google/android/datatransport/runtime/scheduling/jobscheduling/SchedulerConfig.java", "diffHunk": "@@ -135,10 +137,20 @@ public long getScheduleDelay(Priority priority, long minTimestamp, int attemptNu\n     long timeDiff = minTimestamp - getClock().getTime();\n     ConfigValue config = getValues().get(priority);\n \n-    long delay = Math.max(((long) Math.pow(2, attemptNumber - 1)) * config.getDelta(), timeDiff);\n+    long delay = Math.max(adjustedExponentialBackoff(attemptNumber, config.getDelta()), timeDiff);\n     return Math.min(delay, config.getMaxAllowedDelay());\n   }\n \n+  private long adjustedExponentialBackoff(int attemptNumber, long delta) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjU2MjkyNw=="}, "originalCommit": {"oid": "8e5d80e2ffa7e6b2f475b0c1f2f25aabea6adce9"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjY1MTM3Nw==", "bodyText": "Right, but when just looking at the code in the future, it would be nice not to have to do a git blame to figure out the intent. :)", "url": "https://github.com/firebase/firebase-android-sdk/pull/1855#discussion_r466651377", "createdAt": "2020-08-06T19:55:05Z", "author": {"login": "mrwillis21"}, "path": "transport/transport-runtime/src/main/java/com/google/android/datatransport/runtime/scheduling/jobscheduling/SchedulerConfig.java", "diffHunk": "@@ -135,10 +137,20 @@ public long getScheduleDelay(Priority priority, long minTimestamp, int attemptNu\n     long timeDiff = minTimestamp - getClock().getTime();\n     ConfigValue config = getValues().get(priority);\n \n-    long delay = Math.max(((long) Math.pow(2, attemptNumber - 1)) * config.getDelta(), timeDiff);\n+    long delay = Math.max(adjustedExponentialBackoff(attemptNumber, config.getDelta()), timeDiff);\n     return Math.min(delay, config.getMaxAllowedDelay());\n   }\n \n+  private long adjustedExponentialBackoff(int attemptNumber, long delta) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjU2MjkyNw=="}, "originalCommit": {"oid": "8e5d80e2ffa7e6b2f475b0c1f2f25aabea6adce9"}, "originalPosition": 18}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1148, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}