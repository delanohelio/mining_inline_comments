{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk3OTA0NTM0", "number": 2038, "title": "Make `ComponentRuntime` mutable.", "bodyText": "This is done in preparation for dynamic module loading support.\nThe gist of the change is to make:\n\nMissing optional dependencies backed by \"empty\" providers. That can be\nmutated at runtime to start returning non-null values if dependencies\nbecome available\nSet components backed by thread-safe Sets that can be extended with\nnewly loaded dependencies.", "createdAt": "2020-10-05T14:40:45Z", "url": "https://github.com/firebase/firebase-android-sdk/pull/2038", "merged": true, "mergeCommit": {"oid": "e6996e37e6353cfc30d589b912ee81ac384eeb67"}, "closed": true, "closedAt": "2020-10-08T16:50:13Z", "author": {"login": "vkryachko"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdPkr7oAH2gAyNDk3OTA0NTM0OmQ5MzQ4YWMxNTg2NTM5ZGM5YWViMWJkZjYxMTQ1NzAzY2Q3YTBiZjY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdQOZfMAFqTUwMzk3NTUxMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "d9348ac1586539dc9aeb1bdf61145703cd7a0bf6", "author": {"user": {"login": "vkryachko", "name": "Vladimir Kryachko"}}, "url": "https://github.com/firebase/firebase-android-sdk/commit/d9348ac1586539dc9aeb1bdf61145703cd7a0bf6", "committedDate": "2020-10-05T14:30:40Z", "message": "Make `ComponentRuntime` mutable.\n\nThis is done in preparation for dynamic module loading support.\n\nThe gist of the change is to make:\n\n* Missing optional dependencies backed by \"empty\" providers. That can be\n  mutated at runtime to start returning non-null values if dependencies\n  become available\n* Set components backed by thread-safe `Set`s that can be extended with\n  newly loaded dependencies."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4e0dac20b22cca439aa182df8d37c1c9888ae83c", "author": {"user": {"login": "vkryachko", "name": "Vladimir Kryachko"}}, "url": "https://github.com/firebase/firebase-android-sdk/commit/4e0dac20b22cca439aa182df8d37c1c9888ae83c", "committedDate": "2020-10-05T15:15:31Z", "message": "Fix auth not to make assumption that Providers always return non null values."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAzOTc1NTEy", "url": "https://github.com/firebase/firebase-android-sdk/pull/2038#pullrequestreview-503975512", "createdAt": "2020-10-07T14:59:44Z", "commit": {"oid": "4e0dac20b22cca439aa182df8d37c1c9888ae83c"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxNDo1OTo0NFrOHd3uOw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxNDo1OTo0NFrOHd3uOw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTA4MzcwNw==", "bodyText": "shouldn't this be Provider<LazySet<?>> ?", "url": "https://github.com/firebase/firebase-android-sdk/pull/2038#discussion_r501083707", "createdAt": "2020-10-07T14:59:44Z", "author": {"login": "rlazo"}, "path": "firebase-components/src/main/java/com/google/firebase/components/LazySet.java", "diffHunk": "@@ -0,0 +1,80 @@\n+// Copyright 2020 Google LLC\n+//\n+// Licensed under the Apache License, Version 2.0 (the \"License\");\n+// you may not use this file except in compliance with the License.\n+// You may obtain a copy of the License at\n+//\n+//      http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+package com.google.firebase.components;\n+\n+import com.google.firebase.inject.Provider;\n+import java.util.Collection;\n+import java.util.Collections;\n+import java.util.Set;\n+import java.util.concurrent.ConcurrentHashMap;\n+\n+/**\n+ * Lazy mutable thread-safe {@link Provider} for {@link Set}s.\n+ *\n+ * <p>The actual set is materialized only when first requested via {@link #get()}.\n+ *\n+ * <p>As new values are added to the set via {@link #add(Provider)}, the underlying set is updated\n+ * with the new value.\n+ */\n+class LazySet<T> implements Provider<Set<T>> {\n+\n+  private volatile Set<Provider<T>> providers;\n+  private volatile Set<T> actualSet = null;\n+\n+  LazySet(Collection<Provider<T>> providers) {\n+    this.providers = Collections.newSetFromMap(new ConcurrentHashMap<>());\n+    this.providers.addAll(providers);\n+  }\n+\n+  static Provider<Set<?>> fromCollection(Collection<Provider<?>> providers) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4e0dac20b22cca439aa182df8d37c1c9888ae83c"}, "originalPosition": 41}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2373, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}