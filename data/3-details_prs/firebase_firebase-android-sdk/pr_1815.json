{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU1ODU2MTE2", "number": 1815, "title": "initial implementation of decoder builder", "bodyText": "", "createdAt": "2020-07-23T17:31:07Z", "url": "https://github.com/firebase/firebase-android-sdk/pull/1815", "merged": true, "mergeCommit": {"oid": "2d92849d43a91aa4e1fc8717aa4503bdb2b3ca69"}, "closed": true, "closedAt": "2020-07-24T17:34:10Z", "author": {"login": "James201311"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc31BQ8AFqTQ1NDQ0OTg5Mg==", "endCursor": "Y3Vyc29yOnYyOpPPAAABc4FBDZgFqTQ1NDkzOTc1Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU0NDQ5ODky", "url": "https://github.com/firebase/firebase-android-sdk/pull/1815#pullrequestreview-454449892", "createdAt": "2020-07-23T19:55:24Z", "commit": {"oid": "8115cb908ff4406b5493bb76c00605435bec03f4"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxOTo1NToyNVrOG2ZYOA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxOTo1ODoxM1rOG2Zd8g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTY5MjA4OA==", "bodyText": "Would it make sense to allow the following?\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              <U> T register(@NonNull Class<U> clazz, @NonNull ObjectDecoder<U> objectDecoder);\n          \n          \n            \n              <U> T register(@NonNull Class<U> clazz, @NonNull ObjectDecoder<? extends U> objectDecoder);\n          \n      \n    \n    \n  \n\nI can't see how it would cause problems in principle. i.e. when a class T is needed, it is ok to return a subclass of that at the type level. Not sure if it would be useful in practice, but seems pretty cheap to change.", "url": "https://github.com/firebase/firebase-android-sdk/pull/1815#discussion_r459692088", "createdAt": "2020-07-23T19:55:25Z", "author": {"login": "vkryachko"}, "path": "encoders/firebase-decoders-json/src/main/java/com/google/firebase/decoders/DecoderConfig.java", "diffHunk": "@@ -0,0 +1,27 @@\n+// Copyright 2020 Google LLC\n+//\n+// Licensed under the Apache License, Version 2.0 (the \"License\");\n+// you may not use this file except in compliance with the License.\n+// You may obtain a copy of the License at\n+//\n+//      http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+package com.google.firebase.decoders;\n+\n+import androidx.annotation.NonNull;\n+\n+/**\n+ * Implemented by concrete {@link DataDecoder} builders.\n+ *\n+ * <p>Used by clients to configure decoders without coupling to a particular decoder format.\n+ */\n+public interface DecoderConfig<T extends DecoderConfig<T>> {\n+  @NonNull\n+  <U> T register(@NonNull Class<U> clazz, @NonNull ObjectDecoder<U> objectDecoder);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8115cb908ff4406b5493bb76c00605435bec03f4"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTY5MzExMA==", "bodyText": "nit:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                return new JsonDataDecoderBuilderContext(objectDecoders);\n          \n          \n            \n                return new JsonDataDecoderContext(objectDecoders);\n          \n      \n    \n    \n  \n\nLet's rename this class as it's not a builder.", "url": "https://github.com/firebase/firebase-android-sdk/pull/1815#discussion_r459693110", "createdAt": "2020-07-23T19:57:24Z", "author": {"login": "vkryachko"}, "path": "encoders/firebase-decoders-json/src/json/java/com/google/firebase/decoders/json/JsonDataDecoderBuilder.java", "diffHunk": "@@ -0,0 +1,40 @@\n+// Copyright 2020 Google LLC\n+//\n+// Licensed under the Apache License, Version 2.0 (the \"License\");\n+// you may not use this file except in compliance with the License.\n+// You may obtain a copy of the License at\n+//\n+//      http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+package com.google.firebase.decoders.json;\n+\n+import androidx.annotation.NonNull;\n+import com.google.firebase.decoders.DataDecoder;\n+import com.google.firebase.decoders.DecoderConfig;\n+import com.google.firebase.decoders.ObjectDecoder;\n+import java.util.HashMap;\n+\n+public final class JsonDataDecoderBuilder implements DecoderConfig<JsonDataDecoderBuilder> {\n+  private final HashMap<Class<?>, ObjectDecoder<?>> objectDecoders = new HashMap<>();\n+\n+  public JsonDataDecoderBuilder() {}\n+\n+  @NonNull\n+  @Override\n+  public <T> JsonDataDecoderBuilder register(\n+      @NonNull Class<T> clazz, @NonNull ObjectDecoder<T> objectDecoder) {\n+    objectDecoders.put(clazz, objectDecoder);\n+    return this;\n+  }\n+\n+  @NonNull\n+  public DataDecoder build() {\n+    return new JsonDataDecoderBuilderContext(objectDecoders);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8115cb908ff4406b5493bb76c00605435bec03f4"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTY5MzU1NA==", "bodyText": "is my understanding correct that you will add ability to register annotation processors later?", "url": "https://github.com/firebase/firebase-android-sdk/pull/1815#discussion_r459693554", "createdAt": "2020-07-23T19:58:13Z", "author": {"login": "vkryachko"}, "path": "encoders/firebase-decoders-json/src/json/java/com/google/firebase/decoders/json/JsonDataDecoderBuilder.java", "diffHunk": "@@ -0,0 +1,40 @@\n+// Copyright 2020 Google LLC\n+//\n+// Licensed under the Apache License, Version 2.0 (the \"License\");\n+// you may not use this file except in compliance with the License.\n+// You may obtain a copy of the License at\n+//\n+//      http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+package com.google.firebase.decoders.json;\n+\n+import androidx.annotation.NonNull;\n+import com.google.firebase.decoders.DataDecoder;\n+import com.google.firebase.decoders.DecoderConfig;\n+import com.google.firebase.decoders.ObjectDecoder;\n+import java.util.HashMap;\n+\n+public final class JsonDataDecoderBuilder implements DecoderConfig<JsonDataDecoderBuilder> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8115cb908ff4406b5493bb76c00605435bec03f4"}, "originalPosition": 23}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f64aa4e12ad37fac45f2ddbddc85b01d9c265110", "author": {"user": null}, "url": "https://github.com/firebase/firebase-android-sdk/commit/f64aa4e12ad37fac45f2ddbddc85b01d9c265110", "committedDate": "2020-07-23T22:02:31Z", "message": "initial implementation of decoder builder"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "31efd4f9cc92110b1d6c5fba6ce78f58733fdeec", "author": {"user": null}, "url": "https://github.com/firebase/firebase-android-sdk/commit/31efd4f9cc92110b1d6c5fba6ce78f58733fdeec", "committedDate": "2020-07-23T22:03:38Z", "message": "rename jsonDataDecoderBuilderContext to jsonDataDecoderContext"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "034a12fa0fd2d5ffcbe752da590218535aa91021", "author": {"user": null}, "url": "https://github.com/firebase/firebase-android-sdk/commit/034a12fa0fd2d5ffcbe752da590218535aa91021", "committedDate": "2020-07-23T22:03:38Z", "message": "address comment"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "167abc430ce8010e4e8ab3c6eaa897b0537e0e67", "author": {"user": null}, "url": "https://github.com/firebase/firebase-android-sdk/commit/167abc430ce8010e4e8ab3c6eaa897b0537e0e67", "committedDate": "2020-07-23T22:03:38Z", "message": "update format & api file"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "334f3759cd4f38660e27903fb53d072670f77628", "author": {"user": null}, "url": "https://github.com/firebase/firebase-android-sdk/commit/334f3759cd4f38660e27903fb53d072670f77628", "committedDate": "2020-07-23T22:00:20Z", "message": "update format & api file"}, "afterCommit": {"oid": "167abc430ce8010e4e8ab3c6eaa897b0537e0e67", "author": {"user": null}, "url": "https://github.com/firebase/firebase-android-sdk/commit/167abc430ce8010e4e8ab3c6eaa897b0537e0e67", "committedDate": "2020-07-23T22:03:38Z", "message": "update format & api file"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f90bcd99ec192ad1d8556deab92f2026e894763b", "author": {"user": null}, "url": "https://github.com/firebase/firebase-android-sdk/commit/f90bcd99ec192ad1d8556deab92f2026e894763b", "committedDate": "2020-07-23T22:19:28Z", "message": "fixed renaming issues"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7ab6785a1ccb47d27ecd7574ae2e70ff1078f132", "author": {"user": null}, "url": "https://github.com/firebase/firebase-android-sdk/commit/7ab6785a1ccb47d27ecd7574ae2e70ff1078f132", "committedDate": "2020-07-23T22:31:35Z", "message": "fix renaming issues"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU0OTM5NzUy", "url": "https://github.com/firebase/firebase-android-sdk/pull/1815#pullrequestreview-454939752", "createdAt": "2020-07-24T14:36:31Z", "commit": {"oid": "7ab6785a1ccb47d27ecd7574ae2e70ff1078f132"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2453, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}