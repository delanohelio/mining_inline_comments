{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcxNjQ1MDg5", "number": 1207, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQwMjozNjo1NlrODdjANw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQwMjozOTo1N1rODdjCHA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyMzA4NzkxOnYy", "diffSide": "RIGHT", "path": "firebase-firestore/src/main/java/com/google/firebase/firestore/model/value/ProtoValues.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQwMjozNjo1NlrOFmNrEg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQxOTowOTowOFrOFmm1-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTYxNDIyNg==", "bodyText": "public methods that return private values make little sense. typeOrder should either be private or these constants should be public.", "url": "https://github.com/firebase/firebase-android-sdk/pull/1207#discussion_r375614226", "createdAt": "2020-02-06T02:36:56Z", "author": {"login": "wilhuff"}, "path": "firebase-firestore/src/main/java/com/google/firebase/firestore/model/value/ProtoValues.java", "diffHunk": "@@ -41,34 +41,47 @@\n   public static final Value NULL_VALUE =\n       Value.newBuilder().setNullValue(NullValue.NULL_VALUE).build();\n \n+  /** The order of types in Firestore; this order is defined by the backend. */\n+  private static final int TYPE_ORDER_NULL = 0;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3d2eadd560d77157a91cc2b416525fa52f06c016"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjAyNjYxOA==", "bodyText": "Made them public.", "url": "https://github.com/firebase/firebase-android-sdk/pull/1207#discussion_r376026618", "createdAt": "2020-02-06T19:09:08Z", "author": {"login": "schmidt-sebastian"}, "path": "firebase-firestore/src/main/java/com/google/firebase/firestore/model/value/ProtoValues.java", "diffHunk": "@@ -41,34 +41,47 @@\n   public static final Value NULL_VALUE =\n       Value.newBuilder().setNullValue(NullValue.NULL_VALUE).build();\n \n+  /** The order of types in Firestore; this order is defined by the backend. */\n+  private static final int TYPE_ORDER_NULL = 0;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTYxNDIyNg=="}, "originalCommit": {"oid": "3d2eadd560d77157a91cc2b416525fa52f06c016"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyMzA5MDg0OnYy", "diffSide": "RIGHT", "path": "firebase-firestore/src/test/java/com/google/firebase/firestore/UserDataWriterTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQwMjozODozN1rOFmNswA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQxOTowOTo1MVrOFmm3Xg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTYxNDY1Ng==", "bodyText": "JUnit tends to put the expected value as the first argument. Consider reversing these to match.", "url": "https://github.com/firebase/firebase-android-sdk/pull/1207#discussion_r375614656", "createdAt": "2020-02-06T02:38:37Z", "author": {"login": "wilhuff"}, "path": "firebase-firestore/src/test/java/com/google/firebase/firestore/UserDataWriterTest.java", "diffHunk": "@@ -291,4 +287,8 @@ public void testRejectsJavaArrays() {\n   private Object convertValue(FieldValue value) {\n     return writer.convertValue(value.getProto());\n   }\n+\n+  private void assertValueType(FieldValue value, Value.ValueTypeCase booleanValue) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3d2eadd560d77157a91cc2b416525fa52f06c016"}, "originalPosition": 124}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjAyNjk3NA==", "bodyText": "Changed this. Note that I have a similar helper for canonical IDs, which I kept the same as the callsites look much cleaner in reverse argument order.", "url": "https://github.com/firebase/firebase-android-sdk/pull/1207#discussion_r376026974", "createdAt": "2020-02-06T19:09:51Z", "author": {"login": "schmidt-sebastian"}, "path": "firebase-firestore/src/test/java/com/google/firebase/firestore/UserDataWriterTest.java", "diffHunk": "@@ -291,4 +287,8 @@ public void testRejectsJavaArrays() {\n   private Object convertValue(FieldValue value) {\n     return writer.convertValue(value.getProto());\n   }\n+\n+  private void assertValueType(FieldValue value, Value.ValueTypeCase booleanValue) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTYxNDY1Ng=="}, "originalCommit": {"oid": "3d2eadd560d77157a91cc2b416525fa52f06c016"}, "originalPosition": 124}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyMzA5Mjc2OnYy", "diffSide": "RIGHT", "path": "firebase-firestore/src/test/java/com/google/firebase/firestore/UserDataWriterTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQwMjozOTo1N1rOFmNt2g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQxOToxMDoyN1rOFmm4gA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTYxNDkzOA==", "bodyText": "Optional: You could chain these (ObjectValue expected = newBuilder.set.set.build())", "url": "https://github.com/firebase/firebase-android-sdk/pull/1207#discussion_r375614938", "createdAt": "2020-02-06T02:39:57Z", "author": {"login": "wilhuff"}, "path": "firebase-firestore/src/test/java/com/google/firebase/firestore/UserDataWriterTest.java", "diffHunk": "@@ -259,12 +257,10 @@ private static ObjectValue fromMap(Object... entries) {\n   @Test\n   public void testConvertsNestedObjects() {\n     FieldValue actual = wrapObject(\"a\", map(\"b\", map(\"c\", \"foo\"), \"d\", true));\n-    ObjectValue expected =\n-        fromMap(\n-            \"a\",\n-            fromMap(\n-                \"b\", fromMap(\"c\", StringValue.valueOf(\"foo\")), \"d\", BooleanValue.valueOf(true)));\n-    assertEquals(expected, actual);\n+    ObjectValue.Builder expected = ObjectValue.newBuilder();\n+    expected.set(field(\"a.b.c\"), valueOf(\"foo\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3d2eadd560d77157a91cc2b416525fa52f06c016"}, "originalPosition": 113}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjAyNzI2NA==", "bodyText": "It felt cleaner to spread these assignments over multiple lines. Kept as is.", "url": "https://github.com/firebase/firebase-android-sdk/pull/1207#discussion_r376027264", "createdAt": "2020-02-06T19:10:27Z", "author": {"login": "schmidt-sebastian"}, "path": "firebase-firestore/src/test/java/com/google/firebase/firestore/UserDataWriterTest.java", "diffHunk": "@@ -259,12 +257,10 @@ private static ObjectValue fromMap(Object... entries) {\n   @Test\n   public void testConvertsNestedObjects() {\n     FieldValue actual = wrapObject(\"a\", map(\"b\", map(\"c\", \"foo\"), \"d\", true));\n-    ObjectValue expected =\n-        fromMap(\n-            \"a\",\n-            fromMap(\n-                \"b\", fromMap(\"c\", StringValue.valueOf(\"foo\")), \"d\", BooleanValue.valueOf(true)));\n-    assertEquals(expected, actual);\n+    ObjectValue.Builder expected = ObjectValue.newBuilder();\n+    expected.set(field(\"a.b.c\"), valueOf(\"foo\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTYxNDkzOA=="}, "originalCommit": {"oid": "3d2eadd560d77157a91cc2b416525fa52f06c016"}, "originalPosition": 113}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 988, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}