{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk3MjU0OTM0", "number": 1415, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQyMjo1NjoyN1rODtvDng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQyMzowNDowNFrODtvKWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5MjgzNDg2OnYy", "diffSide": "RIGHT", "path": "firebase-database/src/androidTest/java/com/google/firebase/database/DataTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQyMjo1NjoyN1rOF_VivA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQyMzoyOToxM1rOF_WNHw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTk1NzU2NA==", "bodyText": "nit: boolean values should typically be named. E.g. serverIncrementOverwritesExistingData(/*online*/ true);", "url": "https://github.com/firebase/firebase-android-sdk/pull/1415#discussion_r401957564", "createdAt": "2020-04-01T22:56:27Z", "author": {"login": "inlined"}, "path": "firebase-database/src/androidTest/java/com/google/firebase/database/DataTest.java", "diffHunk": "@@ -2747,7 +2747,18 @@ public void onComplete(DatabaseError error, boolean committed, DataSnapshot curr\n   }\n \n   @Test\n-  public void testServerIncrementOverwritesExistingData()\n+  public void testServerIncrementOverwritesExistingDataOnline()\n+      throws DatabaseException, TimeoutException, InterruptedException {\n+    serverIncrementOverwritesExistingData(true);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6410ea53df6618dbf040de6cb3f5fba4096de187"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTk2ODQxNQ==", "bodyText": "Done. Android Studio does this already implicitly, but it still makes sense to do until GitHub catches up.", "url": "https://github.com/firebase/firebase-android-sdk/pull/1415#discussion_r401968415", "createdAt": "2020-04-01T23:29:13Z", "author": {"login": "schmidt-sebastian"}, "path": "firebase-database/src/androidTest/java/com/google/firebase/database/DataTest.java", "diffHunk": "@@ -2747,7 +2747,18 @@ public void onComplete(DatabaseError error, boolean committed, DataSnapshot curr\n   }\n \n   @Test\n-  public void testServerIncrementOverwritesExistingData()\n+  public void testServerIncrementOverwritesExistingDataOnline()\n+      throws DatabaseException, TimeoutException, InterruptedException {\n+    serverIncrementOverwritesExistingData(true);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTk1NzU2NA=="}, "originalCommit": {"oid": "6410ea53df6618dbf040de6cb3f5fba4096de187"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5Mjg0MDg2OnYy", "diffSide": "RIGHT", "path": "firebase-database/src/main/java/com/google/firebase/database/core/DeferredValueProvider.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQyMjo1ODo1N1rOF_Vmcw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQyMzozMToxOFrOF_WPkA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTk1ODUxNQ==", "bodyText": "You could reduce the number of files that people need to read if you have\nValueProvider\nValueProvider::Deferred\nValueProvider::Existing\n\nIDR if that requires you to make an abstract class rather than an interface though.", "url": "https://github.com/firebase/firebase-android-sdk/pull/1415#discussion_r401958515", "createdAt": "2020-04-01T22:58:57Z", "author": {"login": "inlined"}, "path": "firebase-database/src/main/java/com/google/firebase/database/core/DeferredValueProvider.java", "diffHunk": "@@ -0,0 +1,42 @@\n+// Copyright 2020 Google LLC\n+//\n+// Licensed under the Apache License, Version 2.0 (the \"License\");\n+// you may not use this file except in compliance with the License.\n+// You may obtain a copy of the License at\n+//\n+//      http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+package com.google.firebase.database.core;\n+\n+import com.google.firebase.database.snapshot.ChildKey;\n+import com.google.firebase.database.snapshot.Node;\n+import java.util.ArrayList;\n+\n+/** A DeferredValueProvider computes the value of a Node only when {@link #node()} is invoked. */\n+public class DeferredValueProvider implements ValueProvider {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6410ea53df6618dbf040de6cb3f5fba4096de187"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTk2OTA0MA==", "bodyText": "It does, but I think it is still a good idea - especially since these classes are so small.", "url": "https://github.com/firebase/firebase-android-sdk/pull/1415#discussion_r401969040", "createdAt": "2020-04-01T23:31:18Z", "author": {"login": "schmidt-sebastian"}, "path": "firebase-database/src/main/java/com/google/firebase/database/core/DeferredValueProvider.java", "diffHunk": "@@ -0,0 +1,42 @@\n+// Copyright 2020 Google LLC\n+//\n+// Licensed under the Apache License, Version 2.0 (the \"License\");\n+// you may not use this file except in compliance with the License.\n+// You may obtain a copy of the License at\n+//\n+//      http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+package com.google.firebase.database.core;\n+\n+import com.google.firebase.database.snapshot.ChildKey;\n+import com.google.firebase.database.snapshot.Node;\n+import java.util.ArrayList;\n+\n+/** A DeferredValueProvider computes the value of a Node only when {@link #node()} is invoked. */\n+public class DeferredValueProvider implements ValueProvider {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTk1ODUxNQ=="}, "originalCommit": {"oid": "6410ea53df6618dbf040de6cb3f5fba4096de187"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5Mjg0NzI2OnYy", "diffSide": "RIGHT", "path": "firebase-database/src/main/java/com/google/firebase/database/core/ServerValues.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQyMzowMTo0MlrOF_VqVw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQyMzowMTo0MlrOF_VqVw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTk1OTUxMQ==", "bodyText": "Oof... I hate files and classes called utilities", "url": "https://github.com/firebase/firebase-android-sdk/pull/1415#discussion_r401959511", "createdAt": "2020-04-01T23:01:42Z", "author": {"login": "inlined"}, "path": "firebase-database/src/main/java/com/google/firebase/database/core/ServerValues.java", "diffHunk": "@@ -99,32 +100,29 @@ static Object resolveComplexDeferredValue(\n     return increment.doubleValue() + existingVal.doubleValue();\n   }\n \n-  public static SparseSnapshotTree resolveDeferredValueTree(\n-      SparseSnapshotTree tree, Node existing, final Map<String, Object> serverValues) {\n-    final SparseSnapshotTree resolvedTree = new SparseSnapshotTree();\n-    tree.forEachTree(\n-        new Path(\"\"),\n-        new SparseSnapshotTree.SparseSnapshotTreeVisitor() {\n-          @Override\n-          public void visitTree(Path prefixPath, Node tree) {\n-            resolvedTree.remember(\n-                prefixPath,\n-                resolveDeferredValueSnapshot(tree, existing.getChild(prefixPath), serverValues));\n-          }\n-        });\n-    return resolvedTree;\n+  public static Node resolveDeferredValueSnapshot(\n+      Node data, Node existing, final Map<String, Object> serverValues) {\n+    return resolveDeferredValueSnapshot(data, new ExistingValueProvider(existing), serverValues);\n   }\n \n   public static Node resolveDeferredValueSnapshot(\n-      Node data, Node existing, final Map<String, Object> serverValues) {\n-    Object priorityVal =\n-        resolveDeferredValue(data.getPriority().getValue(), existing.getPriority(), serverValues);\n-    Node priority = PriorityUtilities.parsePriority(priorityVal);\n+      Node data, SyncTree syncTree, Path path, final Map<String, Object> serverValues) {\n+    return resolveDeferredValueSnapshot(\n+        data, new DeferredValueProvider(syncTree, path), serverValues);\n+  }\n \n+  private static Node resolveDeferredValueSnapshot(\n+      Node data, ValueProvider existing, final Map<String, Object> serverValues) {\n+    Object rawPriority = data.getPriority().getValue();\n+    Object priority =\n+        resolveDeferredLeafValue(\n+            rawPriority,\n+            existing.getImmediateChild(ChildKey.fromString(\".priority\")),\n+            serverValues);\n     if (data.isLeafNode()) {\n-      Object value = resolveDeferredValue(data.getValue(), existing, serverValues);\n-      if (!value.equals(data.getValue()) || !priority.equals(data.getPriority())) {\n-        return NodeUtilities.NodeFromJSON(value, priority);\n+      Object value = resolveDeferredLeafValue(data.getValue(), existing, serverValues);\n+      if (!value.equals(data.getValue()) || !Utilities.equals(priority, rawPriority)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6410ea53df6618dbf040de6cb3f5fba4096de187"}, "originalPosition": 108}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5Mjg1MDMxOnYy", "diffSide": "RIGHT", "path": "firebase-database/src/main/java/com/google/firebase/database/core/ServerValues.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQyMzowMzoyNFrOF_VsYw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQyMzo1NDo1MVrOF_WsWg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTk2MDAzNQ==", "bodyText": "Interesting. In iOS this starts as merge and is modified with addWrite only where the resolved value changes. Is this a pessimisation?", "url": "https://github.com/firebase/firebase-android-sdk/pull/1415#discussion_r401960035", "createdAt": "2020-04-01T23:03:24Z", "author": {"login": "inlined"}, "path": "firebase-database/src/main/java/com/google/firebase/database/core/ServerValues.java", "diffHunk": "@@ -145,22 +143,22 @@ public void visitChild(ChildKey name, Node child) {\n             }\n           });\n       if (!holder.getRootNode().getPriority().equals(priority)) {\n-        return holder.getRootNode().updatePriority(priority);\n+        return holder.getRootNode().updatePriority(PriorityUtilities.parsePriority(priority));\n       } else {\n         return holder.getRootNode();\n       }\n     }\n   }\n \n   public static CompoundWrite resolveDeferredValueMerge(\n-      CompoundWrite merge, Node existing, final Map<String, Object> serverValues) {\n+      CompoundWrite merge, SyncTree syncTree, Path path, final Map<String, Object> serverValues) {\n     CompoundWrite write = CompoundWrite.emptyWrite();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6410ea53df6618dbf040de6cb3f5fba4096de187"}, "originalPosition": 128}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTk3NjQxMA==", "bodyText": "I tried to make it match iOS just now but it broke a bunch of tests.", "url": "https://github.com/firebase/firebase-android-sdk/pull/1415#discussion_r401976410", "createdAt": "2020-04-01T23:54:51Z", "author": {"login": "schmidt-sebastian"}, "path": "firebase-database/src/main/java/com/google/firebase/database/core/ServerValues.java", "diffHunk": "@@ -145,22 +143,22 @@ public void visitChild(ChildKey name, Node child) {\n             }\n           });\n       if (!holder.getRootNode().getPriority().equals(priority)) {\n-        return holder.getRootNode().updatePriority(priority);\n+        return holder.getRootNode().updatePriority(PriorityUtilities.parsePriority(priority));\n       } else {\n         return holder.getRootNode();\n       }\n     }\n   }\n \n   public static CompoundWrite resolveDeferredValueMerge(\n-      CompoundWrite merge, Node existing, final Map<String, Object> serverValues) {\n+      CompoundWrite merge, SyncTree syncTree, Path path, final Map<String, Object> serverValues) {\n     CompoundWrite write = CompoundWrite.emptyWrite();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTk2MDAzNQ=="}, "originalCommit": {"oid": "6410ea53df6618dbf040de6cb3f5fba4096de187"}, "originalPosition": 128}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5Mjg1MjExOnYy", "diffSide": "LEFT", "path": "firebase-database/src/main/java/com/google/firebase/database/core/SyncTree.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQyMzowNDowNFrOF_VtZw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQyMzozMjoyN1rOF_WQ6w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTk2MDI5NQ==", "bodyText": "I think you can delete \"existing\" above.", "url": "https://github.com/firebase/firebase-android-sdk/pull/1415#discussion_r401960295", "createdAt": "2020-04-01T23:04:04Z", "author": {"login": "inlined"}, "path": "firebase-database/src/main/java/com/google/firebase/database/core/SyncTree.java", "diffHunk": "@@ -249,12 +249,12 @@ public boolean isEmpty() {\n                 if (write.isOverwrite()) {\n                   Node resolvedNode =\n                       ServerValues.resolveDeferredValueSnapshot(\n-                          write.getOverwrite(), existing, serverValues);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6410ea53df6618dbf040de6cb3f5fba4096de187"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTk2OTM4Nw==", "bodyText": "Good catch. This also removed:\nArrayList<Long> excludeThis = new ArrayList<>();\nexcludeThis.add(write.getWriteId());\ncalcCompleteEventCache(write.getPath(), excludeThis);\n\nThat's a bit suspicious, but this never existed on iOS.", "url": "https://github.com/firebase/firebase-android-sdk/pull/1415#discussion_r401969387", "createdAt": "2020-04-01T23:32:27Z", "author": {"login": "schmidt-sebastian"}, "path": "firebase-database/src/main/java/com/google/firebase/database/core/SyncTree.java", "diffHunk": "@@ -249,12 +249,12 @@ public boolean isEmpty() {\n                 if (write.isOverwrite()) {\n                   Node resolvedNode =\n                       ServerValues.resolveDeferredValueSnapshot(\n-                          write.getOverwrite(), existing, serverValues);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTk2MDI5NQ=="}, "originalCommit": {"oid": "6410ea53df6618dbf040de6cb3f5fba4096de187"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1434, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}