{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMxMzcyMjI2", "number": 1630, "title": "Add tests for analytics integration", "bodyText": "", "createdAt": "2020-06-08T20:15:31Z", "url": "https://github.com/firebase/firebase-android-sdk/pull/1630", "merged": true, "mergeCommit": {"oid": "7887d6529890f71541f45ff925c9f9c2d2f49269"}, "closed": true, "closedAt": "2020-06-09T15:59:23Z", "author": {"login": "mrwillis21"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcpWRomgH2gAyNDMxMzcyMjI2OmYxZGQ5ZmU5OGYxMzAwMWQyMDE4ZTMzMDQ1MzhkNWE0MDhiMWE3OWQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcpm89MgH2gAyNDMxMzcyMjI2OmIyMmNkZmM0ODY2MzRkNzM1ODNkNTQ3NzkzNWE1OTI1MmJkYWI3Mzk=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "f1dd9fe98f13001d2018e3304538d5a408b1a79d", "author": {"user": {"login": "mrwillis21", "name": "Matt Willis"}}, "url": "https://github.com/firebase/firebase-android-sdk/commit/f1dd9fe98f13001d2018e3304538d5a408b1a79d", "committedDate": "2020-06-08T20:14:09Z", "message": "Add tests for analytics integration"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI3MjE4NzUx", "url": "https://github.com/firebase/firebase-android-sdk/pull/1630#pullrequestreview-427218751", "createdAt": "2020-06-09T14:36:58Z", "commit": {"oid": "f1dd9fe98f13001d2018e3304538d5a408b1a79d"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxNDozNjo1OFrOGhNREg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxNDozNjo1OFrOGhNREg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzQ3MzU1NA==", "bodyText": "Self-documenting method names FTW!", "url": "https://github.com/firebase/firebase-android-sdk/pull/1630#discussion_r437473554", "createdAt": "2020-06-09T14:36:58Z", "author": {"login": "mrichards"}, "path": "firebase-crashlytics/src/androidTest/java/com/google/firebase/crashlytics/internal/analytics/BlockingAnalyticsEventLoggerTest.java", "diffHunk": "@@ -0,0 +1,82 @@\n+// Copyright 2020 Google LLC\n+//\n+// Licensed under the Apache License, Version 2.0 (the \"License\");\n+// you may not use this file except in compliance with the License.\n+// You may obtain a copy of the License at\n+//\n+//      http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+package com.google.firebase.crashlytics.internal.analytics;\n+\n+import static com.google.firebase.crashlytics.internal.analytics.BlockingAnalyticsEventLogger.APP_EXCEPTION_EVENT_NAME;\n+import static org.junit.Assert.*;\n+\n+import android.os.Bundle;\n+import java.util.concurrent.Executor;\n+import java.util.concurrent.Executors;\n+import java.util.concurrent.TimeUnit;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.mockito.Mock;\n+import org.mockito.Mockito;\n+import org.mockito.MockitoAnnotations;\n+\n+public class BlockingAnalyticsEventLoggerTest {\n+\n+  private static final int SHORT_TIMEOUT = 500;\n+  private static final int LONG_TIMEOUT = 5000;\n+\n+  @Mock private CrashlyticsOriginAnalyticsEventLogger mockLogger;\n+\n+  private BlockingAnalyticsEventLogger blockingAnalyticsEventLogger;\n+\n+  @Before\n+  public void setUp() throws Exception {\n+    MockitoAnnotations.initMocks(this);\n+  }\n+\n+  @Test\n+  public void testBlockingAnalyticsEventLoggerCompletesAfterTimeoutWhenNoEventReturned() {\n+    final String eventName = \"event\";\n+    final Bundle eventBundle = new Bundle();\n+    blockingAnalyticsEventLogger =\n+        new BlockingAnalyticsEventLogger(mockLogger, SHORT_TIMEOUT, TimeUnit.MILLISECONDS);\n+    blockingAnalyticsEventLogger.logEvent(eventName, eventBundle);\n+    Mockito.verify(mockLogger).logEvent(eventName, eventBundle);\n+    assertFalse(blockingAnalyticsEventLogger.isCallbackReceived());\n+  }\n+\n+  @Test\n+  public void\n+      testBlockingAnalyticsEventLoggerCompletesWhenOnEventCalledWithAppExceptionFromSeparateThread() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f1dd9fe98f13001d2018e3304538d5a408b1a79d"}, "originalPosition": 57}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b22cdfc486634d73583d5477935a59252bdab739", "author": {"user": {"login": "mrwillis21", "name": "Matt Willis"}}, "url": "https://github.com/firebase/firebase-android-sdk/commit/b22cdfc486634d73583d5477935a59252bdab739", "committedDate": "2020-06-09T15:39:57Z", "message": "Formatting"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2534, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}