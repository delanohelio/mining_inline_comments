{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM1OTUxMTA1", "number": 1672, "title": "Unified emulator settings for Database", "bodyText": "This is the first PR for http://go/firebase-emulator-connection-api\nThis implements the global changes needed in FirebaseApp as well as the changes in FirebaseDatabase to support them.\nTODO:\n\n Properly hide the FirebaseApp changes so that this doesn't leak before Functions / Firestore are implemented.", "createdAt": "2020-06-17T16:05:26Z", "url": "https://github.com/firebase/firebase-android-sdk/pull/1672", "merged": true, "mergeCommit": {"oid": "5e5111ba0943bb955008586715020b5c81be2aa7"}, "closed": true, "closedAt": "2020-06-19T14:18:12Z", "author": {"login": "samtstern"}, "timelineItems": {"totalCount": 27, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcsMEpOgH2gAyNDM1OTUxMTA1OjllZjhhNGI5ODE3ODkxMTllNjk3M2Q3YmUzYTBmN2ViMjI2M2Q2YzQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcszgrUAH2gAyNDM1OTUxMTA1OmIwNzJmNTQ1ZThiZjdiMjNiNThiYmQxOWQ1ODc0OWJjZDhkNDUxNmQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "9ef8a4b981789119e6973d7be3a0f7eb2263d6c4", "author": {"user": {"login": "samtstern", "name": "Sam Stern"}}, "url": "https://github.com/firebase/firebase-android-sdk/commit/9ef8a4b981789119e6973d7be3a0f7eb2263d6c4", "committedDate": "2020-06-17T16:02:41Z", "message": "Unified emulator settings for Database"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMyNTUzNzEw", "url": "https://github.com/firebase/firebase-android-sdk/pull/1672#pullrequestreview-432553710", "createdAt": "2020-06-17T16:06:06Z", "commit": {"oid": "9ef8a4b981789119e6973d7be3a0f7eb2263d6c4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxNjowNjowNlrOGlMyZw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxNjowNjowNlrOGlMyZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTY2MDAwNw==", "bodyText": "I'm gonna guess I have a bad IDE setting?  I used google-java-format", "url": "https://github.com/firebase/firebase-android-sdk/pull/1672#discussion_r441660007", "createdAt": "2020-06-17T16:06:06Z", "author": {"login": "samtstern"}, "path": "firebase-common/src/androidTest/java/com/google/firebase/FirebaseAppTest.java", "diffHunk": "@@ -56,11 +55,19 @@\n import java.util.List;\n import java.util.concurrent.atomic.AtomicBoolean;\n import java.util.concurrent.atomic.AtomicInteger;\n-import org.junit.Before;\n-import org.junit.Rule;\n-import org.junit.Test;\n-import org.junit.runner.RunWith;\n-import org.mockito.stubbing.Answer;\n+\n+import static com.google.android.gms.common.util.Base64Utils.decodeUrlSafeNoPadding;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9ef8a4b981789119e6973d7be3a0f7eb2263d6c4"}, "originalPosition": 61}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9d4be7dc503875f6a77bc1a8109225281bc67518", "author": {"user": {"login": "samtstern", "name": "Sam Stern"}}, "url": "https://github.com/firebase/firebase-android-sdk/commit/9d4be7dc503875f6a77bc1a8109225281bc67518", "committedDate": "2020-06-17T16:23:16Z", "message": "API surface"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMyNTk4OTI2", "url": "https://github.com/firebase/firebase-android-sdk/pull/1672#pullrequestreview-432598926", "createdAt": "2020-06-17T17:01:17Z", "commit": {"oid": "9d4be7dc503875f6a77bc1a8109225281bc67518"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1ca25d48bb598c471b3a253fdee570cc2fdcc847", "author": {"user": {"login": "samtstern", "name": "Sam Stern"}}, "url": "https://github.com/firebase/firebase-android-sdk/commit/1ca25d48bb598c471b3a253fdee570cc2fdcc847", "committedDate": "2020-06-17T19:02:23Z", "message": "Hide new methods"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMzMzY1NTI1", "url": "https://github.com/firebase/firebase-android-sdk/pull/1672#pullrequestreview-433365525", "createdAt": "2020-06-18T14:52:19Z", "commit": {"oid": "1ca25d48bb598c471b3a253fdee570cc2fdcc847"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxNDo1MjoxOVrOGlzH9w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxNDo1MjoxOVrOGlzH9w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjI4ODExOQ==", "bodyText": "@vkryachko if these were string constants rather than an enum would that help?  Then I don't think all BaaS would have to be released after each emulator is released, only common and the SDK which corresponds to the new emulator.", "url": "https://github.com/firebase/firebase-android-sdk/pull/1672#discussion_r442288119", "createdAt": "2020-06-18T14:52:19Z", "author": {"login": "samtstern"}, "path": "firebase-common/src/main/java/com/google/firebase/emulators/FirebaseEmulators.java", "diffHunk": "@@ -0,0 +1,34 @@\n+// Copyright 2020 Google LLC\n+//\n+// Licensed under the Apache License, Version 2.0 (the \"License\");\n+// you may not use this file except in compliance with the License.\n+// You may obtain a copy of the License at\n+//\n+//      http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+package com.google.firebase.emulators;\n+\n+import com.google.android.gms.common.annotation.KeepForSdk;\n+\n+/**\n+ * Enum for Firebase services that can be emulated using the Firebase Emulator Suite.\n+ *\n+ * <p>TODO(samstern): Un-hide this once Firestore, Database, and Functions are implemented\n+ *\n+ * @see com.google.firebase.FirebaseApp#enableEmulators(EmulatorSettings)\n+ * @see EmulatorSettings\n+ * @see EmulatedServiceSettings\n+ * @hide\n+ */\n+@KeepForSdk\n+public enum FirebaseEmulators {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1ca25d48bb598c471b3a253fdee570cc2fdcc847"}, "originalPosition": 30}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMzMzY1ODc0", "url": "https://github.com/firebase/firebase-android-sdk/pull/1672#pullrequestreview-433365874", "createdAt": "2020-06-18T14:52:41Z", "commit": {"oid": "1ca25d48bb598c471b3a253fdee570cc2fdcc847"}, "state": "COMMENTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxNDo1Mjo0MVrOGlzJCg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxNToxNzo0MlrOGl0M0g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjI4ODM5NA==", "bodyText": "Did you run google-java-format from the IDE, if so try ./gradlew gJF as the ide plugin does not affect imports.", "url": "https://github.com/firebase/firebase-android-sdk/pull/1672#discussion_r442288394", "createdAt": "2020-06-18T14:52:41Z", "author": {"login": "vkryachko"}, "path": "firebase-common/src/androidTest/java/com/google/firebase/FirebaseAppTest.java", "diffHunk": "@@ -56,11 +55,19 @@\n import java.util.List;\n import java.util.concurrent.atomic.AtomicBoolean;\n import java.util.concurrent.atomic.AtomicInteger;\n-import org.junit.Before;\n-import org.junit.Rule;\n-import org.junit.Test;\n-import org.junit.runner.RunWith;\n-import org.mockito.stubbing.Answer;\n+\n+import static com.google.android.gms.common.util.Base64Utils.decodeUrlSafeNoPadding;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTY2MDAwNw=="}, "originalCommit": {"oid": "9ef8a4b981789119e6973d7be3a0f7eb2263d6c4"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjI4ODkwMA==", "bodyText": "nit: @KeepForSdk is not needed since we don't proguard github SDKs, here and throughout.", "url": "https://github.com/firebase/firebase-android-sdk/pull/1672#discussion_r442288900", "createdAt": "2020-06-18T14:53:19Z", "author": {"login": "vkryachko"}, "path": "firebase-common/src/main/java/com/google/firebase/FirebaseApp.java", "diffHunk": "@@ -142,6 +148,20 @@ public FirebaseOptions getOptions() {\n     return options;\n   }\n \n+  /**\n+   * Returns the specified {@link EmulatorSettings}.\n+   *\n+   * <p>TODO(samstern): Un-hide this once Firestore, Database, and Functions are implemented\n+   *\n+   * @hide\n+   */\n+  @KeepForSdk", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1ca25d48bb598c471b3a253fdee570cc2fdcc847"}, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjI5NTk3Nw==", "bodyText": "Would it make sense to make it @NotNull and return a default \"empty\" settings object. It should help with the following:\n\nMake it more null-safe and simplify integrating SDKs as they won't have to deal with null twice as I can see in the implementation below.\n*iiuc it will help make the \"set-after-use\" logic below more safe, i.e. with the null case it seems possible to first initialize firestore and then call enableEmulators()\n\nwdyt?", "url": "https://github.com/firebase/firebase-android-sdk/pull/1672#discussion_r442295977", "createdAt": "2020-06-18T15:03:07Z", "author": {"login": "vkryachko"}, "path": "firebase-common/src/main/java/com/google/firebase/FirebaseApp.java", "diffHunk": "@@ -142,6 +148,20 @@ public FirebaseOptions getOptions() {\n     return options;\n   }\n \n+  /**\n+   * Returns the specified {@link EmulatorSettings}.\n+   *\n+   * <p>TODO(samstern): Un-hide this once Firestore, Database, and Functions are implemented\n+   *\n+   * @hide\n+   */\n+  @KeepForSdk\n+  @Nullable", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1ca25d48bb598c471b3a253fdee570cc2fdcc847"}, "originalPosition": 70}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjI5NzkzNA==", "bodyText": "nit: consider making a copy of the map, otherwise if a reference to the builder is kept around, one can modify the underlying map unintentionally.", "url": "https://github.com/firebase/firebase-android-sdk/pull/1672#discussion_r442297934", "createdAt": "2020-06-18T15:06:06Z", "author": {"login": "vkryachko"}, "path": "firebase-common/src/main/java/com/google/firebase/emulators/EmulatorSettings.java", "diffHunk": "@@ -0,0 +1,103 @@\n+// Copyright 2020 Google LLC\n+//\n+// Licensed under the Apache License, Version 2.0 (the \"License\");\n+// you may not use this file except in compliance with the License.\n+// You may obtain a copy of the License at\n+//\n+//      http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+package com.google.firebase.emulators;\n+\n+import androidx.annotation.NonNull;\n+import androidx.annotation.Nullable;\n+\n+import com.google.android.gms.common.annotation.KeepForSdk;\n+import com.google.firebase.components.Preconditions;\n+\n+import java.util.Collections;\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.concurrent.atomic.AtomicBoolean;\n+\n+/**\n+ * Settings that control which Firebase services should access a local emulator, rather than\n+ * production.\n+ *\n+ * <p>TODO(samstern): Un-hide this once Firestore, Database, and Functions are implemented\n+ *\n+ * @see com.google.firebase.FirebaseApp#enableEmulators(EmulatorSettings)\n+ * @hide\n+ */\n+@KeepForSdk\n+public class EmulatorSettings {\n+\n+  public static final class Builder {\n+\n+    private final Map<FirebaseEmulators, EmulatedServiceSettings> settingsMap = new HashMap<>();\n+\n+    /** Constructs an empty builder. */\n+    public Builder() {}\n+\n+    /**\n+     * Specify the emulator settings for a single service.\n+     *\n+     * @param emulator the emulated service.\n+     * @param settings the emulator settings.\n+     * @return the builder, for chaining.\n+     */\n+    @NonNull\n+    public Builder addEmulatedService(\n+        @NonNull FirebaseEmulators emulator, @NonNull EmulatedServiceSettings settings) {\n+      Preconditions.checkState(\n+          !settingsMap.containsKey(emulator),\n+          \"Cannot call addEmulatedService twice for \" + emulator.toString());\n+      this.settingsMap.put(emulator, settings);\n+      return this;\n+    }\n+\n+    @NonNull\n+    public EmulatorSettings build() {\n+      return new EmulatorSettings(settingsMap);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1ca25d48bb598c471b3a253fdee570cc2fdcc847"}, "originalPosition": 66}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjMwMzM0Ng==", "bodyText": "While making this an enum makes the API simple and type safe, it couples firebase-common to all baas sdks.\nTo avoid the coupling I suggest to either resort to using Strings with each string defined as a constant on the target SDK, i.e. FirebaseFirestore.EMULATOR = \"firestore\" or something.\nOr wrapping that string in a class here in common like data class Emulator(serviceName: String) and initializing the SDK constant with it instead of the string.\nA potential additional advantage of this is that one can only configure an emulator for say firestore if it's actually present in their app.", "url": "https://github.com/firebase/firebase-android-sdk/pull/1672#discussion_r442303346", "createdAt": "2020-06-18T15:14:15Z", "author": {"login": "vkryachko"}, "path": "firebase-common/src/main/java/com/google/firebase/emulators/FirebaseEmulators.java", "diffHunk": "@@ -0,0 +1,34 @@\n+// Copyright 2020 Google LLC\n+//\n+// Licensed under the Apache License, Version 2.0 (the \"License\");\n+// you may not use this file except in compliance with the License.\n+// You may obtain a copy of the License at\n+//\n+//      http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+package com.google.firebase.emulators;\n+\n+import com.google.android.gms.common.annotation.KeepForSdk;\n+\n+/**\n+ * Enum for Firebase services that can be emulated using the Firebase Emulator Suite.\n+ *\n+ * <p>TODO(samstern): Un-hide this once Firestore, Database, and Functions are implemented\n+ *\n+ * @see com.google.firebase.FirebaseApp#enableEmulators(EmulatorSettings)\n+ * @see EmulatorSettings\n+ * @see EmulatedServiceSettings\n+ * @hide\n+ */\n+@KeepForSdk\n+public enum FirebaseEmulators {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1ca25d48bb598c471b3a253fdee570cc2fdcc847"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjMwNTc0Ng==", "bodyText": "How will this interact with firestore's terminate()? afaicr one can terminate one instance of firestore at which point the call to FirebaseFirestore#getInstance() will create a new firestore instance, should we allow the following sequence of calls?\nfirestore.terminate();\napp.updateFirestoresEmulator();\nFirebase.firestore.use();", "url": "https://github.com/firebase/firebase-android-sdk/pull/1672#discussion_r442305746", "createdAt": "2020-06-18T15:17:42Z", "author": {"login": "vkryachko"}, "path": "firebase-common/src/main/java/com/google/firebase/FirebaseApp.java", "diffHunk": "@@ -305,6 +325,28 @@ public static FirebaseApp initializeApp(\n     return firebaseApp;\n   }\n \n+  /**\n+   * Specify which services should access local emulators for this FirebaseApp instance.\n+   *\n+   * <p>For example, if the {@link EmulatorSettings} contain {@link\n+   * com.google.firebase.emulators.EmulatedServiceSettings} for {@link\n+   * com.google.firebase.emulators.FirebaseEmulators#FIRESTORE}, then calls to Cloud Firestore will\n+   * communicate with the emulator rather than production.\n+   *\n+   * <p>TODO(samstern): Un-hide this once Firestore, Database, and Functions are implemented\n+   *\n+   * @param emulatorSettings the emulator settings for all services.\n+   * @hide\n+   */\n+  @KeepForSdk\n+  public void enableEmulators(@NonNull EmulatorSettings emulatorSettings) {\n+    checkNotDeleted();\n+    Preconditions.checkState(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1ca25d48bb598c471b3a253fdee570cc2fdcc847"}, "originalPosition": 99}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f39c11f0dc7822886627d553bcd00eeb0f42dc8c", "author": {"user": {"login": "samtstern", "name": "Sam Stern"}}, "url": "https://github.com/firebase/firebase-android-sdk/commit/f39c11f0dc7822886627d553bcd00eeb0f42dc8c", "committedDate": "2020-06-18T16:09:56Z", "message": "Remove the enum, flip the dependency"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0f931bb81b85d0580545012d0800201fd063e134", "author": {"user": {"login": "samtstern", "name": "Sam Stern"}}, "url": "https://github.com/firebase/firebase-android-sdk/commit/0f931bb81b85d0580545012d0800201fd063e134", "committedDate": "2020-06-18T16:11:14Z", "message": "Google Java Format"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fb262d3d115886b1d52b0b9cec376dd812bd55d4", "author": {"user": {"login": "samtstern", "name": "Sam Stern"}}, "url": "https://github.com/firebase/firebase-android-sdk/commit/fb262d3d115886b1d52b0b9cec376dd812bd55d4", "committedDate": "2020-06-18T16:13:22Z", "message": "No more @KeepForSdk"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "276276465609ecb45dc5870e7e81643cf7916c02", "author": {"user": {"login": "samtstern", "name": "Sam Stern"}}, "url": "https://github.com/firebase/firebase-android-sdk/commit/276276465609ecb45dc5870e7e81643cf7916c02", "committedDate": "2020-06-18T16:18:29Z", "message": "Respond to most review comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "24b8f3a42fb3e220661bce8895e9c5fc4d863648", "author": {"user": {"login": "samtstern", "name": "Sam Stern"}}, "url": "https://github.com/firebase/firebase-android-sdk/commit/24b8f3a42fb3e220661bce8895e9c5fc4d863648", "committedDate": "2020-06-18T16:43:17Z", "message": "Clone the map"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4dd3c232fc7bdf4e36f1526c051d04cf2df04c54", "author": {"user": {"login": "samtstern", "name": "Sam Stern"}}, "url": "https://github.com/firebase/firebase-android-sdk/commit/4dd3c232fc7bdf4e36f1526c051d04cf2df04c54", "committedDate": "2020-06-18T16:52:29Z", "message": "Fix bug arising from shared DEFAULT"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMzNTYxMDc3", "url": "https://github.com/firebase/firebase-android-sdk/pull/1672#pullrequestreview-433561077", "createdAt": "2020-06-18T18:55:22Z", "commit": {"oid": "4dd3c232fc7bdf4e36f1526c051d04cf2df04c54"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxODo1Nzo1OVrOGl8Pug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxOTowOTowOVrOGl8mMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjQzNzU2Mg==", "bodyText": "I really dislike Builders... but is there a precedent for this style of \"compact\" builders? I would expect no constructor arguments, a newBuilder()method  on  EmulatedServiceSettings and setHost() and setPort() methods.", "url": "https://github.com/firebase/firebase-android-sdk/pull/1672#discussion_r442437562", "createdAt": "2020-06-18T18:57:59Z", "author": {"login": "schmidt-sebastian"}, "path": "firebase-common/src/main/java/com/google/firebase/emulators/EmulatedServiceSettings.java", "diffHunk": "@@ -0,0 +1,59 @@\n+// Copyright 2020 Google LLC\n+//\n+// Licensed under the Apache License, Version 2.0 (the \"License\");\n+// you may not use this file except in compliance with the License.\n+// You may obtain a copy of the License at\n+//\n+//      http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+package com.google.firebase.emulators;\n+\n+import androidx.annotation.NonNull;\n+\n+/**\n+ * Settings to connect a single Firebase service to a local emulator.\n+ *\n+ * <p>TODO(samstern): Un-hide this once Firestore, Database, and Functions are implemented\n+ *\n+ * @see EmulatorSettings\n+ * @hide\n+ */\n+public class EmulatedServiceSettings {\n+\n+  public static final class Builder {\n+\n+    private final String host;\n+    private final int port;\n+\n+    /**\n+     * Create a new EmulatedServiceSettings builder.\n+     *\n+     * @param host the host where the local emulator is running. If you want to access 'localhost'\n+     *     from an Android Emulator use '10.0.2.2' instead.\n+     * @param port the port where the local emulator is running.\n+     */\n+    public Builder(@NonNull String host, int port) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4dd3c232fc7bdf4e36f1526c051d04cf2df04c54"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjQzODAyNg==", "bodyText": "FWIW we call this \"frozen\" in Firestore.", "url": "https://github.com/firebase/firebase-android-sdk/pull/1672#discussion_r442438026", "createdAt": "2020-06-18T18:58:51Z", "author": {"login": "schmidt-sebastian"}, "path": "firebase-common/src/main/java/com/google/firebase/emulators/EmulatorSettings.java", "diffHunk": "@@ -0,0 +1,104 @@\n+// Copyright 2020 Google LLC\n+//\n+// Licensed under the Apache License, Version 2.0 (the \"License\");\n+// you may not use this file except in compliance with the License.\n+// You may obtain a copy of the License at\n+//\n+//      http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+package com.google.firebase.emulators;\n+\n+import androidx.annotation.NonNull;\n+import androidx.annotation.Nullable;\n+import com.google.firebase.components.Preconditions;\n+import java.util.Collections;\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.concurrent.atomic.AtomicBoolean;\n+\n+/**\n+ * Settings that control which Firebase services should access a local emulator, rather than\n+ * production.\n+ *\n+ * <p>TODO(samstern): Un-hide this once Firestore, Database, and Functions are implemented\n+ *\n+ * @see com.google.firebase.FirebaseApp#enableEmulators(EmulatorSettings)\n+ * @hide\n+ */\n+public class EmulatorSettings {\n+\n+  /** Empty emulator settings to be used as an internal default */\n+  public static EmulatorSettings getDefault() {\n+    return new EmulatorSettings.Builder().build();\n+  }\n+\n+  public static final class Builder {\n+\n+    private final Map<FirebaseEmulator, EmulatedServiceSettings> settingsMap = new HashMap<>();\n+\n+    /** Constructs an empty builder. */\n+    public Builder() {}\n+\n+    /**\n+     * Specify the emulator settings for a single service.\n+     *\n+     * @param emulator the emulated service.\n+     * @param settings the emulator settings.\n+     * @return the builder, for chaining.\n+     */\n+    @NonNull\n+    public Builder addEmulatedService(\n+        @NonNull FirebaseEmulator emulator, @NonNull EmulatedServiceSettings settings) {\n+      Preconditions.checkState(\n+          !settingsMap.containsKey(emulator),\n+          \"Cannot call addEmulatedService twice for \" + emulator.toString());\n+      this.settingsMap.put(emulator, settings);\n+      return this;\n+    }\n+\n+    @NonNull\n+    public EmulatorSettings build() {\n+      return new EmulatorSettings(new HashMap<>(settingsMap));\n+    }\n+  }\n+\n+  private final AtomicBoolean accessed = new AtomicBoolean(false);\n+  private final Map<FirebaseEmulator, EmulatedServiceSettings> settingsMap;\n+\n+  private EmulatorSettings(@NonNull Map<FirebaseEmulator, EmulatedServiceSettings> settingsMap) {\n+    this.settingsMap = Collections.unmodifiableMap(settingsMap);\n+  }\n+\n+  /**\n+   * Determine if any Firebase SDK has already accessed the emulator settings. When true, attempting\n+   * to change the settings should throw an error.\n+   *\n+   * @hide\n+   */\n+  public boolean isAccessed() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4dd3c232fc7bdf4e36f1526c051d04cf2df04c54"}, "originalPosition": 84}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjQ0MjA4Ng==", "bodyText": "The class as implemented appears immutable. It doesn't seem possible to call   addEmulatedService and modify an existing instance, so it is not immediately obvious why we need the \"accessed\" check.\nWould it make more sense to perform this check in FirebaseApp and enforce that enableEmulators can only be called once? Along the same line, could enableEmulators take FirebaseEmulator emulator,  EmulatedServiceSettings settings directly, which would remove the need for EmulatorSettings API.", "url": "https://github.com/firebase/firebase-android-sdk/pull/1672#discussion_r442442086", "createdAt": "2020-06-18T19:06:30Z", "author": {"login": "schmidt-sebastian"}, "path": "firebase-common/src/main/java/com/google/firebase/emulators/EmulatorSettings.java", "diffHunk": "@@ -0,0 +1,104 @@\n+// Copyright 2020 Google LLC\n+//\n+// Licensed under the Apache License, Version 2.0 (the \"License\");\n+// you may not use this file except in compliance with the License.\n+// You may obtain a copy of the License at\n+//\n+//      http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+package com.google.firebase.emulators;\n+\n+import androidx.annotation.NonNull;\n+import androidx.annotation.Nullable;\n+import com.google.firebase.components.Preconditions;\n+import java.util.Collections;\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.concurrent.atomic.AtomicBoolean;\n+\n+/**\n+ * Settings that control which Firebase services should access a local emulator, rather than\n+ * production.\n+ *\n+ * <p>TODO(samstern): Un-hide this once Firestore, Database, and Functions are implemented\n+ *\n+ * @see com.google.firebase.FirebaseApp#enableEmulators(EmulatorSettings)\n+ * @hide\n+ */\n+public class EmulatorSettings {\n+\n+  /** Empty emulator settings to be used as an internal default */\n+  public static EmulatorSettings getDefault() {\n+    return new EmulatorSettings.Builder().build();\n+  }\n+\n+  public static final class Builder {\n+\n+    private final Map<FirebaseEmulator, EmulatedServiceSettings> settingsMap = new HashMap<>();\n+\n+    /** Constructs an empty builder. */\n+    public Builder() {}\n+\n+    /**\n+     * Specify the emulator settings for a single service.\n+     *\n+     * @param emulator the emulated service.\n+     * @param settings the emulator settings.\n+     * @return the builder, for chaining.\n+     */\n+    @NonNull\n+    public Builder addEmulatedService(\n+        @NonNull FirebaseEmulator emulator, @NonNull EmulatedServiceSettings settings) {\n+      Preconditions.checkState(\n+          !settingsMap.containsKey(emulator),\n+          \"Cannot call addEmulatedService twice for \" + emulator.toString());\n+      this.settingsMap.put(emulator, settings);\n+      return this;\n+    }\n+\n+    @NonNull\n+    public EmulatorSettings build() {\n+      return new EmulatorSettings(new HashMap<>(settingsMap));\n+    }\n+  }\n+\n+  private final AtomicBoolean accessed = new AtomicBoolean(false);\n+  private final Map<FirebaseEmulator, EmulatedServiceSettings> settingsMap;\n+\n+  private EmulatorSettings(@NonNull Map<FirebaseEmulator, EmulatedServiceSettings> settingsMap) {\n+    this.settingsMap = Collections.unmodifiableMap(settingsMap);\n+  }\n+\n+  /**\n+   * Determine if any Firebase SDK has already accessed the emulator settings. When true, attempting\n+   * to change the settings should throw an error.\n+   *\n+   * @hide\n+   */\n+  public boolean isAccessed() {\n+    return accessed.get();\n+  }\n+\n+  /**\n+   * Fetch the emulation settings for a single Firebase service. Once this method has been called\n+   * {@link #isAccessed()} will return true.\n+   *\n+   * @hide\n+   */\n+  @Nullable\n+  public EmulatedServiceSettings getServiceSettings(@NonNull FirebaseEmulator emulator) {\n+    accessed.set(true);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4dd3c232fc7bdf4e36f1526c051d04cf2df04c54"}, "originalPosition": 96}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjQ0MzMxMw==", "bodyText": "Should we add an explicit way to decide which credentials to use? I am asking because of Yuchen's feedback here: firebase/firebase-js-sdk#3228", "url": "https://github.com/firebase/firebase-android-sdk/pull/1672#discussion_r442443313", "createdAt": "2020-06-18T19:09:09Z", "author": {"login": "schmidt-sebastian"}, "path": "firebase-database/src/main/java/com/google/firebase/database/core/utilities/Utilities.java", "diffHunk": "@@ -73,6 +81,13 @@ public static ParsedUrl parseUrl(String url) throws DatabaseException {\n       originalPathString = originalPathString.replace(\"+\", \" \");\n       Validation.validateRootPathString(originalPathString);\n \n+      // TODO: Should log this out\n+      if (serviceSettings != null) {\n+        repoInfo.secure = false;\n+        repoInfo.host = serviceSettings.host + \":\" + serviceSettings.port;\n+        repoInfo.internalHost = repoInfo.host;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4dd3c232fc7bdf4e36f1526c051d04cf2df04c54"}, "originalPosition": 39}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f7e2832b22436ae5863ef70647280af6505df012", "author": {"user": {"login": "samtstern", "name": "Sam Stern"}}, "url": "https://github.com/firebase/firebase-android-sdk/commit/f7e2832b22436ae5863ef70647280af6505df012", "committedDate": "2020-06-18T20:47:22Z", "message": "Change to freeze verbiage, make FirebaseApp responsible for freezing"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4ef9919eeca049b79bdf8d170217bb252285d51b", "author": {"user": {"login": "samtstern", "name": "Sam Stern"}}, "url": "https://github.com/firebase/firebase-android-sdk/commit/4ef9919eeca049b79bdf8d170217bb252285d51b", "committedDate": "2020-06-18T20:51:18Z", "message": "No more unnecessary builder"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a2a4cd66abc9fa9a76a69d007abd940fa55f8c31", "author": {"user": {"login": "samtstern", "name": "Sam Stern"}}, "url": "https://github.com/firebase/firebase-android-sdk/commit/a2a4cd66abc9fa9a76a69d007abd940fa55f8c31", "committedDate": "2020-06-18T21:16:20Z", "message": "Move frozen to FirebaseApp"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMzNjUzOTE3", "url": "https://github.com/firebase/firebase-android-sdk/pull/1672#pullrequestreview-433653917", "createdAt": "2020-06-18T21:17:28Z", "commit": {"oid": "4ef9919eeca049b79bdf8d170217bb252285d51b"}, "state": "APPROVED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQyMToxNzoyOFrOGmAh_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQyMTozMTowOFrOGmA6Zw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjUwNzc3NQ==", "bodyText": "If this remains hidden, then the frozen state could just be a simple atomic boolean here. If this is ever public, then this won't work since we wouldn't want to freeze the settings just because this method was called. I would vote we go the simple route now and use a single (atomic) boolean that manages the state in Firebase app.", "url": "https://github.com/firebase/firebase-android-sdk/pull/1672#discussion_r442507775", "createdAt": "2020-06-18T21:17:28Z", "author": {"login": "schmidt-sebastian"}, "path": "firebase-common/src/main/java/com/google/firebase/FirebaseApp.java", "diffHunk": "@@ -142,6 +145,20 @@ public FirebaseOptions getOptions() {\n     return options;\n   }\n \n+  /**\n+   * Returns the specified {@link EmulatorSettings} or a default.\n+   *\n+   * <p>TODO(samstern): Un-hide this once Firestore, Database, and Functions are implemented\n+   *\n+   * @hide\n+   */\n+  @NonNull\n+  public EmulatorSettings getEmulatorSettings() {\n+    checkNotDeleted();\n+    emulatorSettings.freeze();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4ef9919eeca049b79bdf8d170217bb252285d51b"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjUwODg4OA==", "bodyText": "s/serviceSettings/emulatorSettings ?", "url": "https://github.com/firebase/firebase-android-sdk/pull/1672#discussion_r442508888", "createdAt": "2020-06-18T21:20:02Z", "author": {"login": "schmidt-sebastian"}, "path": "firebase-database/src/main/java/com/google/firebase/database/core/utilities/Utilities.java", "diffHunk": "@@ -32,7 +34,13 @@\n public class Utilities {\n   private static final char[] HEX_CHARACTERS = \"0123456789abcdef\".toCharArray();\n \n-  public static ParsedUrl parseUrl(String url) throws DatabaseException {\n+  public static ParsedUrl parseUrl(@NonNull String url) {\n+    return Utilities.parseUrl(url, null);\n+  }\n+\n+  public static ParsedUrl parseUrl(\n+      @NonNull String url, @Nullable EmulatedServiceSettings serviceSettings)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4ef9919eeca049b79bdf8d170217bb252285d51b"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjUxNDAyMw==", "bodyText": "As for comments for here, I think this code is fine. A cleaner way might be https://gist.github.com/schmidt-sebastian/e1ddba17d468ae72c4104fa84aae2d9a, but it's optional.", "url": "https://github.com/firebase/firebase-android-sdk/pull/1672#discussion_r442514023", "createdAt": "2020-06-18T21:31:08Z", "author": {"login": "schmidt-sebastian"}, "path": "firebase-database/src/main/java/com/google/firebase/database/core/utilities/Utilities.java", "diffHunk": "@@ -73,6 +81,13 @@ public static ParsedUrl parseUrl(String url) throws DatabaseException {\n       originalPathString = originalPathString.replace(\"+\", \" \");\n       Validation.validateRootPathString(originalPathString);\n \n+      // TODO: Should log this out\n+      if (serviceSettings != null) {\n+        repoInfo.secure = false;\n+        repoInfo.host = serviceSettings.host + \":\" + serviceSettings.port;\n+        repoInfo.internalHost = repoInfo.host;\n+      }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4ef9919eeca049b79bdf8d170217bb252285d51b"}, "originalPosition": 41}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4e1373fc39830e5e884ae939e5515a7b15f6b8bc", "author": {"user": {"login": "samtstern", "name": "Sam Stern"}}, "url": "https://github.com/firebase/firebase-android-sdk/commit/4e1373fc39830e5e884ae939e5515a7b15f6b8bc", "committedDate": "2020-06-19T12:54:12Z", "message": "Take sebastian's url parsing suggestion"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM0MDY1ODU1", "url": "https://github.com/firebase/firebase-android-sdk/pull/1672#pullrequestreview-434065855", "createdAt": "2020-06-19T13:12:47Z", "commit": {"oid": "4e1373fc39830e5e884ae939e5515a7b15f6b8bc"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQxMzoxMjo0N1rOGmUWKg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQxMzoxMjo0N1rOGmUWKg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjgzMjQyNg==", "bodyText": "nit: now that settings are immutable, consider sharing the default instance across app instances.", "url": "https://github.com/firebase/firebase-android-sdk/pull/1672#discussion_r442832426", "createdAt": "2020-06-19T13:12:47Z", "author": {"login": "vkryachko"}, "path": "firebase-common/src/main/java/com/google/firebase/FirebaseApp.java", "diffHunk": "@@ -110,6 +111,9 @@\n   private final FirebaseOptions options;\n   private final ComponentRuntime componentRuntime;\n \n+  private final AtomicBoolean emulatorSettingsFrozen = new AtomicBoolean(false);\n+  private EmulatorSettings emulatorSettings = EmulatorSettings.getDefault();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4e1373fc39830e5e884ae939e5515a7b15f6b8bc"}, "originalPosition": 13}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM0MDY2NDYw", "url": "https://github.com/firebase/firebase-android-sdk/pull/1672#pullrequestreview-434066460", "createdAt": "2020-06-19T13:13:38Z", "commit": {"oid": "4e1373fc39830e5e884ae939e5515a7b15f6b8bc"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQxMzoxMzozOFrOGmUXyQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQxMzoxODoxOVrOGmUhCg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjgzMjg0MQ==", "bodyText": "nit:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            public class EmulatedServiceSettings {\n          \n          \n            \n            public final class EmulatedServiceSettings {", "url": "https://github.com/firebase/firebase-android-sdk/pull/1672#discussion_r442832841", "createdAt": "2020-06-19T13:13:38Z", "author": {"login": "vkryachko"}, "path": "firebase-common/src/main/java/com/google/firebase/emulators/EmulatedServiceSettings.java", "diffHunk": "@@ -0,0 +1,36 @@\n+// Copyright 2020 Google LLC\n+//\n+// Licensed under the Apache License, Version 2.0 (the \"License\");\n+// you may not use this file except in compliance with the License.\n+// You may obtain a copy of the License at\n+//\n+//      http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+package com.google.firebase.emulators;\n+\n+import androidx.annotation.NonNull;\n+\n+/**\n+ * Settings to connect a single Firebase service to a local emulator.\n+ *\n+ * <p>TODO(samstern): Un-hide this once Firestore, Database, and Functions are implemented\n+ *\n+ * @see EmulatorSettings\n+ * @hide\n+ */\n+public class EmulatedServiceSettings {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4e1373fc39830e5e884ae939e5515a7b15f6b8bc"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjgzMzA0OA==", "bodyText": "nit:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            public class EmulatorSettings {\n          \n          \n            \n            public final class EmulatorSettings {", "url": "https://github.com/firebase/firebase-android-sdk/pull/1672#discussion_r442833048", "createdAt": "2020-06-19T13:14:06Z", "author": {"login": "vkryachko"}, "path": "firebase-common/src/main/java/com/google/firebase/emulators/EmulatorSettings.java", "diffHunk": "@@ -0,0 +1,89 @@\n+// Copyright 2020 Google LLC\n+//\n+// Licensed under the Apache License, Version 2.0 (the \"License\");\n+// you may not use this file except in compliance with the License.\n+// You may obtain a copy of the License at\n+//\n+//      http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+package com.google.firebase.emulators;\n+\n+import androidx.annotation.NonNull;\n+import androidx.annotation.Nullable;\n+import com.google.firebase.components.Preconditions;\n+import java.util.Collections;\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+/**\n+ * Settings that control which Firebase services should access a local emulator, rather than\n+ * production.\n+ *\n+ * <p>TODO(samstern): Un-hide this once Firestore, Database, and Functions are implemented\n+ *\n+ * @see com.google.firebase.FirebaseApp#enableEmulators(EmulatorSettings)\n+ * @hide\n+ */\n+public class EmulatorSettings {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4e1373fc39830e5e884ae939e5515a7b15f6b8bc"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjgzMzE4NQ==", "bodyText": "nit:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            public class FirebaseEmulator {\n          \n          \n            \n            public final class FirebaseEmulator {", "url": "https://github.com/firebase/firebase-android-sdk/pull/1672#discussion_r442833185", "createdAt": "2020-06-19T13:14:22Z", "author": {"login": "vkryachko"}, "path": "firebase-common/src/main/java/com/google/firebase/emulators/FirebaseEmulator.java", "diffHunk": "@@ -0,0 +1,46 @@\n+// Copyright 2020 Google LLC\n+//\n+// Licensed under the Apache License, Version 2.0 (the \"License\");\n+// you may not use this file except in compliance with the License.\n+// You may obtain a copy of the License at\n+//\n+//      http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+package com.google.firebase.emulators;\n+\n+import androidx.annotation.NonNull;\n+\n+/**\n+ * Identifier Firebase services that can be emulated using the Firebase Emulator Suite.\n+ *\n+ * <p>TODO(samstern): Un-hide this once Firestore, Database, and Functions are implemented\n+ *\n+ * @see com.google.firebase.FirebaseApp#enableEmulators(EmulatorSettings)\n+ * @see EmulatorSettings\n+ * @see EmulatedServiceSettings\n+ * @hide\n+ */\n+public class FirebaseEmulator {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4e1373fc39830e5e884ae939e5515a7b15f6b8bc"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjgzNTIxMA==", "bodyText": "Might be worth making a getter for it: go/ej3e-16", "url": "https://github.com/firebase/firebase-android-sdk/pull/1672#discussion_r442835210", "createdAt": "2020-06-19T13:18:19Z", "author": {"login": "vkryachko"}, "path": "firebase-common/src/main/java/com/google/firebase/emulators/FirebaseEmulator.java", "diffHunk": "@@ -0,0 +1,46 @@\n+// Copyright 2020 Google LLC\n+//\n+// Licensed under the Apache License, Version 2.0 (the \"License\");\n+// you may not use this file except in compliance with the License.\n+// You may obtain a copy of the License at\n+//\n+//      http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+package com.google.firebase.emulators;\n+\n+import androidx.annotation.NonNull;\n+\n+/**\n+ * Identifier Firebase services that can be emulated using the Firebase Emulator Suite.\n+ *\n+ * <p>TODO(samstern): Un-hide this once Firestore, Database, and Functions are implemented\n+ *\n+ * @see com.google.firebase.FirebaseApp#enableEmulators(EmulatorSettings)\n+ * @see EmulatorSettings\n+ * @see EmulatedServiceSettings\n+ * @hide\n+ */\n+public class FirebaseEmulator {\n+\n+  public final String name;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4e1373fc39830e5e884ae939e5515a7b15f6b8bc"}, "originalPosition": 31}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7f173e07f0e30fe1f92c777b01d0cf36d4ff8eca", "author": {"user": {"login": "samtstern", "name": "Sam Stern"}}, "url": "https://github.com/firebase/firebase-android-sdk/commit/7f173e07f0e30fe1f92c777b01d0cf36d4ff8eca", "committedDate": "2020-06-19T13:39:59Z", "message": "Update firebase-common/src/main/java/com/google/firebase/emulators/EmulatedServiceSettings.java\n\nCo-authored-by: Vladimir Kryachko <vkryachko@google.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6d1e1797cba7e422fe8ed32ca3792081af774ea1", "author": {"user": {"login": "samtstern", "name": "Sam Stern"}}, "url": "https://github.com/firebase/firebase-android-sdk/commit/6d1e1797cba7e422fe8ed32ca3792081af774ea1", "committedDate": "2020-06-19T13:40:08Z", "message": "Update firebase-common/src/main/java/com/google/firebase/emulators/FirebaseEmulator.java\n\nCo-authored-by: Vladimir Kryachko <vkryachko@google.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2d67b78c97b929b928f7c435e878076fe6825fb8", "author": {"user": {"login": "samtstern", "name": "Sam Stern"}}, "url": "https://github.com/firebase/firebase-android-sdk/commit/2d67b78c97b929b928f7c435e878076fe6825fb8", "committedDate": "2020-06-19T13:40:19Z", "message": "Update firebase-common/src/main/java/com/google/firebase/emulators/EmulatorSettings.java\n\nCo-authored-by: Vladimir Kryachko <vkryachko@google.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8a51a73ccdeec27e5fac2d50207899d586cc18e1", "author": {"user": {"login": "samtstern", "name": "Sam Stern"}}, "url": "https://github.com/firebase/firebase-android-sdk/commit/8a51a73ccdeec27e5fac2d50207899d586cc18e1", "committedDate": "2020-06-19T13:42:42Z", "message": "Final review nits"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM0MDkzODY0", "url": "https://github.com/firebase/firebase-android-sdk/pull/1672#pullrequestreview-434093864", "createdAt": "2020-06-19T13:51:33Z", "commit": {"oid": "8a51a73ccdeec27e5fac2d50207899d586cc18e1"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQxMzo1MTozM1rOGmVmAQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQxMzo1MTozM1rOGmVmAQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjg1Mjg2NQ==", "bodyText": "same here pls :)", "url": "https://github.com/firebase/firebase-android-sdk/pull/1672#discussion_r442852865", "createdAt": "2020-06-19T13:51:33Z", "author": {"login": "vkryachko"}, "path": "firebase-common/src/main/java/com/google/firebase/emulators/EmulatedServiceSettings.java", "diffHunk": "@@ -0,0 +1,36 @@\n+// Copyright 2020 Google LLC\n+//\n+// Licensed under the Apache License, Version 2.0 (the \"License\");\n+// you may not use this file except in compliance with the License.\n+// You may obtain a copy of the License at\n+//\n+//      http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+package com.google.firebase.emulators;\n+\n+import androidx.annotation.NonNull;\n+\n+/**\n+ * Settings to connect a single Firebase service to a local emulator.\n+ *\n+ * <p>TODO(samstern): Un-hide this once Firestore, Database, and Functions are implemented\n+ *\n+ * @see EmulatorSettings\n+ * @hide\n+ */\n+public final class EmulatedServiceSettings {\n+\n+  public final String host;\n+  public final int port;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a51a73ccdeec27e5fac2d50207899d586cc18e1"}, "originalPosition": 30}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b072f545e8bf7b23b58bbd19d58749bcd8d4516d", "author": {"user": {"login": "samtstern", "name": "Sam Stern"}}, "url": "https://github.com/firebase/firebase-android-sdk/commit/b072f545e8bf7b23b58bbd19d58749bcd8d4516d", "committedDate": "2020-06-19T13:59:36Z", "message": "One more getter"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2545, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}