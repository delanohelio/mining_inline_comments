{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA5MjMzMTM4", "number": 1503, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QyMzowMDowNVrOD271ZA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxNToyNDowM1rOD7SbBw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU4OTMwMDIwOnYy", "diffSide": "RIGHT", "path": "firebase-crashlytics/ktx/src/test/java/com/google/firebase/crashlytics/ktx/CrashlyticsTests.kt", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QyMzowMDowNVrOGM7Npw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QyMzozODowNVrOGM8KUw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjIwNjI0Nw==", "bodyText": "const val APP_ID = \"1:1234567890:android:321abc456def7890\"\nconst val API_KEY = \"AIzaSyDOCAbC123dEf456GhI789jKl012-MnO\"\nI recommend using values for fake Firebase options that could pass simple checks for validity in order to prevent tests failing for future initialization checks.", "url": "https://github.com/firebase/firebase-android-sdk/pull/1503#discussion_r416206247", "createdAt": "2020-04-27T23:00:05Z", "author": {"login": "andirayo"}, "path": "firebase-crashlytics/ktx/src/test/java/com/google/firebase/crashlytics/ktx/CrashlyticsTests.kt", "diffHunk": "@@ -0,0 +1,83 @@\n+// Copyright 2020 Google LLC\n+//\n+// Licensed under the Apache License, Version 2.0 (the \"License\");\n+// you may not use this file except in compliance with the License.\n+// You may obtain a copy of the License at\n+//\n+//      http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+package com.google.firebase.crashlytics.ktx\n+\n+import com.google.common.truth.Truth.assertThat\n+import com.google.firebase.FirebaseApp\n+import com.google.firebase.FirebaseOptions\n+import com.google.firebase.crashlytics.FirebaseCrashlytics\n+import com.google.firebase.ktx.Firebase\n+import com.google.firebase.ktx.app\n+import com.google.firebase.ktx.initialize\n+import com.google.firebase.platforminfo.UserAgentPublisher\n+import org.junit.After\n+import org.junit.Before\n+import org.junit.Test\n+import org.junit.runner.RunWith\n+import org.robolectric.RobolectricTestRunner\n+import org.robolectric.RuntimeEnvironment\n+\n+const val APP_ID = \"APP_ID\"\n+const val API_KEY = \"API_KEY\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b7dd5cff6104cfce13f39bd29d443403f103469a"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjIyMTc3OQ==", "bodyText": "@andirayo  Thank you! I've updated these values", "url": "https://github.com/firebase/firebase-android-sdk/pull/1503#discussion_r416221779", "createdAt": "2020-04-27T23:38:05Z", "author": {"login": "thatfiredev"}, "path": "firebase-crashlytics/ktx/src/test/java/com/google/firebase/crashlytics/ktx/CrashlyticsTests.kt", "diffHunk": "@@ -0,0 +1,83 @@\n+// Copyright 2020 Google LLC\n+//\n+// Licensed under the Apache License, Version 2.0 (the \"License\");\n+// you may not use this file except in compliance with the License.\n+// You may obtain a copy of the License at\n+//\n+//      http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+package com.google.firebase.crashlytics.ktx\n+\n+import com.google.common.truth.Truth.assertThat\n+import com.google.firebase.FirebaseApp\n+import com.google.firebase.FirebaseOptions\n+import com.google.firebase.crashlytics.FirebaseCrashlytics\n+import com.google.firebase.ktx.Firebase\n+import com.google.firebase.ktx.app\n+import com.google.firebase.ktx.initialize\n+import com.google.firebase.platforminfo.UserAgentPublisher\n+import org.junit.After\n+import org.junit.Before\n+import org.junit.Test\n+import org.junit.runner.RunWith\n+import org.robolectric.RobolectricTestRunner\n+import org.robolectric.RuntimeEnvironment\n+\n+const val APP_ID = \"APP_ID\"\n+const val API_KEY = \"API_KEY\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjIwNjI0Nw=="}, "originalCommit": {"oid": "b7dd5cff6104cfce13f39bd29d443403f103469a"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5MjUzOTQzOnYy", "diffSide": "RIGHT", "path": "firebase-crashlytics/ktx/src/main/kotlin/com/google/firebase/crashlytics/ktx/FirebaseCrashlytics.kt", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQxNToxMzoyMFrOGNZFhg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQyMDo0OToxNVrOGOQbKw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjY5NTY4Ng==", "bodyText": "This is definitely an improvement compared to using plain java api, a few considerations though:\n\nSome other ktx sdks use dsl-like notation for similar use-cases, e.g. Firebase.analytics.logEvent, so it might make sense to something similar here for the sake of consistency. The dsl could even support infix notation like Pair does(not sure if it would be a good idea though).\nThe dsl would also be more type-safe, i.e. there won't be a need for IllegalArgumentException below, as the block can be made to only have the methods with argument types crashlytics supports.\n\nSo I would suggest something along the lines of:\ncrashlytics.setCustomKeys {\n  key(\"foo\", \"bar\")\n  key(\"int\", 42)\n  // or\n  \"foo\" to \"bar\" // this might not be a good idea as it shadows the Pair constructor function.\n}\nwdyt?", "url": "https://github.com/firebase/firebase-android-sdk/pull/1503#discussion_r416695686", "createdAt": "2020-04-28T15:13:20Z", "author": {"login": "vkryachko"}, "path": "firebase-crashlytics/ktx/src/main/kotlin/com/google/firebase/crashlytics/ktx/FirebaseCrashlytics.kt", "diffHunk": "@@ -0,0 +1,53 @@\n+// Copyright 2020 Google LLC\n+//\n+// Licensed under the Apache License, Version 2.0 (the \"License\");\n+// you may not use this file except in compliance with the License.\n+// You may obtain a copy of the License at\n+//\n+//      http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+package com.google.firebase.crashlytics.ktx\n+\n+import androidx.annotation.Keep\n+import com.google.firebase.FirebaseApp\n+import com.google.firebase.components.Component\n+import com.google.firebase.components.ComponentRegistrar\n+import com.google.firebase.crashlytics.FirebaseCrashlytics\n+import com.google.firebase.ktx.Firebase\n+import com.google.firebase.platforminfo.LibraryVersionComponent\n+\n+/** Returns the [FirebaseCrashlytics] instance of the default [FirebaseApp]. */\n+val Firebase.crashlytics: FirebaseCrashlytics\n+    get() = FirebaseCrashlytics.getInstance()\n+\n+fun FirebaseCrashlytics.setCustomKeys(vararg pairs: Pair<String, Any>) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0df4720722219257ba1eebe52c4e97193c0073f6"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzYwMjM0Nw==", "bodyText": "@vkryachko since analytics.logEvent uses DSL, I think we should maintain consistency. Ive updated the code to match your suggestion. PTAL", "url": "https://github.com/firebase/firebase-android-sdk/pull/1503#discussion_r417602347", "createdAt": "2020-04-29T20:49:15Z", "author": {"login": "thatfiredev"}, "path": "firebase-crashlytics/ktx/src/main/kotlin/com/google/firebase/crashlytics/ktx/FirebaseCrashlytics.kt", "diffHunk": "@@ -0,0 +1,53 @@\n+// Copyright 2020 Google LLC\n+//\n+// Licensed under the Apache License, Version 2.0 (the \"License\");\n+// you may not use this file except in compliance with the License.\n+// You may obtain a copy of the License at\n+//\n+//      http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+package com.google.firebase.crashlytics.ktx\n+\n+import androidx.annotation.Keep\n+import com.google.firebase.FirebaseApp\n+import com.google.firebase.components.Component\n+import com.google.firebase.components.ComponentRegistrar\n+import com.google.firebase.crashlytics.FirebaseCrashlytics\n+import com.google.firebase.ktx.Firebase\n+import com.google.firebase.platforminfo.LibraryVersionComponent\n+\n+/** Returns the [FirebaseCrashlytics] instance of the default [FirebaseApp]. */\n+val Firebase.crashlytics: FirebaseCrashlytics\n+    get() = FirebaseCrashlytics.getInstance()\n+\n+fun FirebaseCrashlytics.setCustomKeys(vararg pairs: Pair<String, Any>) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjY5NTY4Ng=="}, "originalCommit": {"oid": "0df4720722219257ba1eebe52c4e97193c0073f6"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzNDk0NDA3OnYy", "diffSide": "RIGHT", "path": "firebase-crashlytics/ktx/src/main/kotlin/com/google/firebase/crashlytics/ktx/FirebaseCrashlytics.kt", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxNToyNDowM1rOGThQdg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxOTo1MjozOFrOGTrAxQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzEyMTAxNA==", "bodyText": "Please, rename it to FirebaseCrashlyticsKtxRegistrar (here and in the manifest). All our registrars except FDL use that convention :-) and that got fixed on #1543", "url": "https://github.com/firebase/firebase-android-sdk/pull/1503#discussion_r423121014", "createdAt": "2020-05-11T15:24:03Z", "author": {"login": "rlazo"}, "path": "firebase-crashlytics/ktx/src/main/kotlin/com/google/firebase/crashlytics/ktx/FirebaseCrashlytics.kt", "diffHunk": "@@ -0,0 +1,44 @@\n+// Copyright 2020 Google LLC\n+//\n+// Licensed under the Apache License, Version 2.0 (the \"License\");\n+// you may not use this file except in compliance with the License.\n+// You may obtain a copy of the License at\n+//\n+//      http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+package com.google.firebase.crashlytics.ktx\n+\n+import androidx.annotation.Keep\n+import com.google.firebase.FirebaseApp\n+import com.google.firebase.components.Component\n+import com.google.firebase.components.ComponentRegistrar\n+import com.google.firebase.crashlytics.FirebaseCrashlytics\n+import com.google.firebase.ktx.Firebase\n+import com.google.firebase.platforminfo.LibraryVersionComponent\n+\n+/** Returns the [FirebaseCrashlytics] instance of the default [FirebaseApp]. */\n+val Firebase.crashlytics: FirebaseCrashlytics\n+    get() = FirebaseCrashlytics.getInstance()\n+\n+/**\n+ * Associates all key-value parameters with the reports\n+ */\n+fun FirebaseCrashlytics.setCustomKeys(init: KeyValueBuilder.() -> Unit) {\n+    val builder = KeyValueBuilder(this)\n+    builder.init()\n+}\n+\n+internal const val LIBRARY_NAME: String = \"fire-cls-ktx\"\n+\n+/** @suppress */\n+@Keep\n+class FirebaseCrashlyticsRegistrar : ComponentRegistrar {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ed4998ddd382d4bb7d5e200ebedc0c75200f5a30"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI4MDgzNw==", "bodyText": "Oops! Done :)", "url": "https://github.com/firebase/firebase-android-sdk/pull/1503#discussion_r423280837", "createdAt": "2020-05-11T19:52:38Z", "author": {"login": "thatfiredev"}, "path": "firebase-crashlytics/ktx/src/main/kotlin/com/google/firebase/crashlytics/ktx/FirebaseCrashlytics.kt", "diffHunk": "@@ -0,0 +1,44 @@\n+// Copyright 2020 Google LLC\n+//\n+// Licensed under the Apache License, Version 2.0 (the \"License\");\n+// you may not use this file except in compliance with the License.\n+// You may obtain a copy of the License at\n+//\n+//      http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+package com.google.firebase.crashlytics.ktx\n+\n+import androidx.annotation.Keep\n+import com.google.firebase.FirebaseApp\n+import com.google.firebase.components.Component\n+import com.google.firebase.components.ComponentRegistrar\n+import com.google.firebase.crashlytics.FirebaseCrashlytics\n+import com.google.firebase.ktx.Firebase\n+import com.google.firebase.platforminfo.LibraryVersionComponent\n+\n+/** Returns the [FirebaseCrashlytics] instance of the default [FirebaseApp]. */\n+val Firebase.crashlytics: FirebaseCrashlytics\n+    get() = FirebaseCrashlytics.getInstance()\n+\n+/**\n+ * Associates all key-value parameters with the reports\n+ */\n+fun FirebaseCrashlytics.setCustomKeys(init: KeyValueBuilder.() -> Unit) {\n+    val builder = KeyValueBuilder(this)\n+    builder.init()\n+}\n+\n+internal const val LIBRARY_NAME: String = \"fire-cls-ktx\"\n+\n+/** @suppress */\n+@Keep\n+class FirebaseCrashlyticsRegistrar : ComponentRegistrar {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzEyMTAxNA=="}, "originalCommit": {"oid": "ed4998ddd382d4bb7d5e200ebedc0c75200f5a30"}, "originalPosition": 41}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1331, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}