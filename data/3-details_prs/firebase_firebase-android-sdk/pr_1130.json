{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYzMzYyMDIz", "number": 1130, "title": "Change coverage report format to be by product.", "bodyText": "Refactored coverage tasks setup.", "createdAt": "2020-01-15T22:12:00Z", "url": "https://github.com/firebase/firebase-android-sdk/pull/1130", "merged": true, "mergeCommit": {"oid": "445071e92a2a65499bbc5303dd76ef76bf2d2c67"}, "closed": true, "closedAt": "2020-01-16T18:31:32Z", "author": {"login": "yifanyang"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb6tAfYAH2gAyMzYzMzYyMDIzOjNjZTFjOTQ1NGY0ZmQ1NjA5ZTI1NDQxYTQyZDY5ZDRjNjJiNmEyZDI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb69vw5gH2gAyMzYzMzYyMDIzOmEyNWU3ODA2MjIzMzQ0ZjNjY2JiMzNmNzdhYzY4MGEzOTUwYjk0MDQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "3ce1c9454f4fd5609e25441a42d69d4c62b6a2d2", "author": {"user": {"login": "yifanyang", "name": "Yifan Yang"}}, "url": "https://github.com/firebase/firebase-android-sdk/commit/3ce1c9454f4fd5609e25441a42d69d4c62b6a2d2", "committedDate": "2020-01-15T22:08:48Z", "message": "Change coverage report format to be by product.\n\nRefactored coverage tasks setup."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQzOTcwNjM5", "url": "https://github.com/firebase/firebase-android-sdk/pull/1130#pullrequestreview-343970639", "createdAt": "2020-01-16T14:53:52Z", "commit": {"oid": "3ce1c9454f4fd5609e25441a42d69d4c62b6a2d2"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQxNDo1Mzo1MlrOFecGPw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQxNDo1Mzo1MlrOFecGPw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzQ2MTk1MQ==", "bodyText": "Just out of curiosity, is this something that happens right now or is it to support future use-cases?", "url": "https://github.com/firebase/firebase-android-sdk/pull/1130#discussion_r367461951", "createdAt": "2020-01-16T14:53:52Z", "author": {"login": "rlazo"}, "path": "buildSrc/src/main/groovy/com/google/firebase/gradle/plugins/ci/CheckCoveragePlugin.groovy", "diffHunk": "@@ -0,0 +1,164 @@\n+// Copyright 2020 Google LLC\n+//\n+// Licensed under the Apache License, Version 2.0 (the \"License\");\n+// you may not use this file except in compliance with the License.\n+// You may obtain a copy of the License at\n+//\n+//      http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+package com.google.firebase.gradle.plugins.ci\n+\n+import org.gradle.api.Plugin\n+import org.gradle.api.Project\n+import org.gradle.api.tasks.testing.Test\n+import org.gradle.testing.jacoco.tasks.JacocoReport\n+\n+class CheckCoveragePlugin implements Plugin<Project> {\n+\n+    @Override\n+    void apply(Project project) {\n+        project.configure(project.subprojects) {\n+            apply plugin: 'jacoco'\n+\n+            jacoco {\n+                toolVersion = '0.8.5'\n+            }\n+\n+            task('checkCoverage', type: JacocoReport) {\n+                dependsOn 'check'\n+                description 'Generates check coverage report and uploads to Codecov.io.'\n+                group 'verification'\n+\n+                def excludes = [\n+                        '**/R.class',\n+                        '**/R$*.class',\n+                        '**/BuildConfig.*',\n+                        '**/proto/**',\n+                        '**Manifest*.*'\n+                ]\n+                classDirectories = files([\n+                        fileTree(dir: \"$buildDir/intermediates/javac/release\", excludes: excludes),\n+                        fileTree(dir: \"$buildDir/tmp/kotlin-classes/release\", excludes: excludes),\n+                ])\n+                sourceDirectories = files(['src/main/java', 'src/main/kotlin'])\n+                executionData = fileTree(dir: \"$buildDir\", includes: ['jacoco/*.exec'])\n+                reports {\n+                    html.enabled true\n+                    xml.enabled true\n+                }\n+\n+                outputs.upToDateWhen { false }\n+\n+                doFirst {\n+                    logger.quiet(\"Reports directory: ${it.project.jacoco.reportsDir}\")\n+                }\n+\n+                doLast {\n+                    upload it\n+                }\n+            }\n+\n+            tasks.withType(Test) {\n+                jacoco.includeNoLocationClasses true\n+            }\n+\n+        }\n+    }\n+\n+    private def upload(task) {\n+        if (System.getenv().containsKey(\"FIREBASE_CI\")) {\n+            def flag = convert(task.project.path)\n+            def report = task.reports.xml.destination\n+\n+            if (System.getenv().containsKey(\"PROW_JOB_ID\")) {\n+                task.logger.quiet(\"Prow CI detected.\")\n+                uploadFromProwJobs(task.project, report, flag)\n+            } else {\n+                uploadFromCodecovSupportedEnvironment(task.project, report, flag)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3ce1c9454f4fd5609e25441a42d69d4c62b6a2d2"}, "originalPosition": 83}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a25e7806223344f3ccbb33f77ac680a3950b9404", "author": {"user": {"login": "yifanyang", "name": "Yifan Yang"}}, "url": "https://github.com/firebase/firebase-android-sdk/commit/a25e7806223344f3ccbb33f77ac680a3950b9404", "committedDate": "2020-01-16T17:38:55Z", "message": "Fix: Use local uploader script."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2238, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}