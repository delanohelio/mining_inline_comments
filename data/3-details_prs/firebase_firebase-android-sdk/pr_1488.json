{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA2ODEwMTUx", "number": 1488, "title": "Fix FIAM ANR Issue 1430", "bodyText": "", "createdAt": "2020-04-21T17:41:49Z", "url": "https://github.com/firebase/firebase-android-sdk/pull/1488", "merged": true, "mergeCommit": {"oid": "2f8e8aceb351ad9eea695184d22892c5159aa148"}, "closed": true, "closedAt": "2020-04-22T15:47:16Z", "author": {"login": "JasonAHeron"}, "timelineItems": {"totalCount": 17, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcX4sF1gH2gAyNDA2ODEwMTUxOmMxNTNiZjU2YWQ5NTZhYTYwZTJiMzMyMTQ0N2MzZGU4ZWRjMmRjZjQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcZ74ZHgFqTM5NzczMzI2Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "c153bf56ad956aa60e2b3321447c3de8edc2dcf4", "author": {"user": {"login": "ashwinraghav", "name": "Ashwin Raghav"}}, "url": "https://github.com/firebase/firebase-android-sdk/commit/c153bf56ad956aa60e2b3321447c3de8edc2dcf4", "committedDate": "2020-04-15T14:09:11Z", "message": "Formatting installations test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cf9b67a1a263fa5a2db40d908c5c3043a1d65c4b", "author": {"user": {"login": "ashwinraghav", "name": "Ashwin Raghav"}}, "url": "https://github.com/firebase/firebase-android-sdk/commit/cf9b67a1a263fa5a2db40d908c5c3043a1d65c4b", "committedDate": "2020-04-16T19:34:14Z", "message": "Possible ANR fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "462d1588ed2c8082d56e10ab38e6ed93ec63cd54", "author": {"user": {"login": "JasonAHeron", "name": "Jason Heron"}}, "url": "https://github.com/firebase/firebase-android-sdk/commit/462d1588ed2c8082d56e10ab38e6ed93ec63cd54", "committedDate": "2020-04-21T17:40:23Z", "message": "please work"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3f7a5c8cd20173ae9956563135ae872b67b862e5", "author": {"user": {"login": "JasonAHeron", "name": "Jason Heron"}}, "url": "https://github.com/firebase/firebase-android-sdk/commit/3f7a5c8cd20173ae9956563135ae872b67b862e5", "committedDate": "2020-04-21T19:01:46Z", "message": "change io blocking work to be rxjava based instead of task based"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "918b1fb70d0e05383fffa07ccd3f694d22478ef4", "author": {"user": {"login": "JasonAHeron", "name": "Jason Heron"}}, "url": "https://github.com/firebase/firebase-android-sdk/commit/918b1fb70d0e05383fffa07ccd3f694d22478ef4", "committedDate": "2020-04-21T19:07:01Z", "message": "remove some comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cc0403a657cc94d48f962b31d07e44909b319a07", "author": {"user": {"login": "JasonAHeron", "name": "Jason Heron"}}, "url": "https://github.com/firebase/firebase-android-sdk/commit/cc0403a657cc94d48f962b31d07e44909b319a07", "committedDate": "2020-04-21T19:11:32Z", "message": "fix test module"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ffeb75736a96e50789618c2402b55e9c6ffcfb5e", "author": {"user": {"login": "JasonAHeron", "name": "Jason Heron"}}, "url": "https://github.com/firebase/firebase-android-sdk/commit/ffeb75736a96e50789618c2402b55e9c6ffcfb5e", "committedDate": "2020-04-21T19:13:41Z", "message": "format"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b059dc82772f7d3aacad32128e6fa55ad77fa665", "author": {"user": {"login": "JasonAHeron", "name": "Jason Heron"}}, "url": "https://github.com/firebase/firebase-android-sdk/commit/b059dc82772f7d3aacad32128e6fa55ad77fa665", "committedDate": "2020-04-21T19:14:19Z", "message": "always"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "61f891a32dac526f279e6354c8732e6179987b58", "author": {"user": {"login": "JasonAHeron", "name": "Jason Heron"}}, "url": "https://github.com/firebase/firebase-android-sdk/commit/61f891a32dac526f279e6354c8732e6179987b58", "committedDate": "2020-04-21T20:11:43Z", "message": "try to fix ktx"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fb6c5bae9a48ca723213ec80e78154789bdaab1d", "author": {"user": {"login": "JasonAHeron", "name": "Jason Heron"}}, "url": "https://github.com/firebase/firebase-android-sdk/commit/fb6c5bae9a48ca723213ec80e78154789bdaab1d", "committedDate": "2020-04-21T20:28:12Z", "message": "format"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bd85fa4b0a7f63b093de8dcf770d3c18ecf0d0fc", "author": {"user": {"login": "JasonAHeron", "name": "Jason Heron"}}, "url": "https://github.com/firebase/firebase-android-sdk/commit/bd85fa4b0a7f63b093de8dcf770d3c18ecf0d0fc", "committedDate": "2020-04-21T21:22:08Z", "message": "cleanup tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk3Njk5MTg2", "url": "https://github.com/firebase/firebase-android-sdk/pull/1488#pullrequestreview-397699186", "createdAt": "2020-04-21T21:45:52Z", "commit": {"oid": "bd85fa4b0a7f63b093de8dcf770d3c18ecf0d0fc"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk3NzAyOTc0", "url": "https://github.com/firebase/firebase-android-sdk/pull/1488#pullrequestreview-397702974", "createdAt": "2020-04-21T21:52:55Z", "commit": {"oid": "bd85fa4b0a7f63b093de8dcf770d3c18ecf0d0fc"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQyMTo1Mjo1NVrOGJaD-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQyMjowMjoyNlrOGJaXoA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjUxNzM2OQ==", "bodyText": "Is there anything happening here other than moving things inline?", "url": "https://github.com/firebase/firebase-android-sdk/pull/1488#discussion_r412517369", "createdAt": "2020-04-21T21:52:55Z", "author": {"login": "ashwinraghav"}, "path": "firebase-inappmessaging/src/main/java/com/google/firebase/inappmessaging/internal/ApiClient.java", "diffHunk": "@@ -143,17 +111,11 @@ private ClientSignals getClientSignals() {\n   }\n \n   private ClientAppInfo getClientAppInfo(InstanceIdResult instanceIdResult) {\n-    ClientAppInfo.Builder builder =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bd85fa4b0a7f63b093de8dcf770d3c18ecf0d0fc"}, "originalPosition": 103}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjUxNzU1MA==", "bodyText": "LGTM", "url": "https://github.com/firebase/firebase-android-sdk/pull/1488#discussion_r412517550", "createdAt": "2020-04-21T21:53:10Z", "author": {"login": "ashwinraghav"}, "path": "firebase-inappmessaging/src/main/java/com/google/firebase/inappmessaging/internal/GrpcClient.java", "diffHunk": "@@ -35,6 +36,6 @@\n   }\n \n   public FetchEligibleCampaignsResponse fetchEligibleCampaigns(FetchEligibleCampaignsRequest req) {\n-    return stub.fetchEligibleCampaigns(req);\n+    return stub.withDeadlineAfter(30000, TimeUnit.MILLISECONDS).fetchEligibleCampaigns(req);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bd85fa4b0a7f63b093de8dcf770d3c18ecf0d0fc"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjUyMjQwMA==", "bodyText": "consider using filter\nMaybe.fromCallable(getIID::blockingGet)\n.filter(validIID())\n.map(apiClient.getFiams(iid, campaignImpressionList))\n.switchIfEmpty(cacheExpiringResponse())", "url": "https://github.com/firebase/firebase-android-sdk/pull/1488#discussion_r412522400", "createdAt": "2020-04-21T22:02:26Z", "author": {"login": "ashwinraghav"}, "path": "firebase-inappmessaging/src/main/java/com/google/firebase/inappmessaging/internal/InAppMessageStreamManager.java", "diffHunk": "@@ -232,22 +243,37 @@ private boolean shouldIgnoreCache(String event) {\n                       .defaultIfEmpty(CampaignImpressionList.getDefaultInstance())\n                       .onErrorResumeNext(Maybe.just(CampaignImpressionList.getDefaultInstance()));\n \n+              Maybe<InstanceIdResult> getIID = taskToMaybe(firebaseInstanceId.getInstanceId());\n+\n               Function<CampaignImpressionList, Maybe<FetchEligibleCampaignsResponse>> serviceFetch =\n-                  impressions ->\n-                      taskToMaybe(apiClient.getFiams(impressions))\n-                          .doOnSuccess(\n-                              resp ->\n-                                  Logging.logi(\n-                                      String.format(\n-                                          Locale.US,\n-                                          \"Successfully fetched %d messages from backend\",\n-                                          resp.getMessagesList().size())))\n-                          .doOnSuccess(\n-                              resp -> impressionStorageClient.clearImpressions(resp).subscribe())\n-                          .doOnSuccess(analyticsEventsManager::updateContextualTriggers)\n-                          .doOnSuccess(testDeviceHelper::processCampaignFetch)\n-                          .doOnError(e -> Logging.logw(\"Service fetch error: \" + e.getMessage()))\n-                          .onErrorResumeNext(Maybe.empty()); // Absorb service failures\n+                  campaignImpressionList -> {\n+                    if (!dataCollectionHelper.isAutomaticDataCollectionEnabled()) {\n+                      Logging.logi(\n+                          \"Automatic data collection is disabled, not attempting campaign fetch from service.\");\n+                      return Maybe.just(cacheExpiringResponse());\n+                    }\n+\n+                    // blocking get occurs on the IO thread because that's what we observeOn above\n+                    return Maybe.fromCallable(getIID::blockingGet)\n+                        .map(\n+                            iid ->\n+                                validIID(iid)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bd85fa4b0a7f63b093de8dcf770d3c18ecf0d0fc"}, "originalPosition": 80}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fe23cb0fe470a45594956c05906a209b99116a8c", "author": {"user": {"login": "JasonAHeron", "name": "Jason Heron"}}, "url": "https://github.com/firebase/firebase-android-sdk/commit/fe23cb0fe470a45594956c05906a209b99116a8c", "committedDate": "2020-04-21T22:17:13Z", "message": "refactor stream"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d538bab6161d9b96bebfd7bd205581697af23a11", "author": {"user": {"login": "JasonAHeron", "name": "Jason Heron"}}, "url": "https://github.com/firebase/firebase-android-sdk/commit/d538bab6161d9b96bebfd7bd205581697af23a11", "committedDate": "2020-04-21T22:17:25Z", "message": "derp"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk3NzEzODUy", "url": "https://github.com/firebase/firebase-android-sdk/pull/1488#pullrequestreview-397713852", "createdAt": "2020-04-21T22:13:58Z", "commit": {"oid": "bd85fa4b0a7f63b093de8dcf770d3c18ecf0d0fc"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQyMjoxMzo1OFrOGJatxQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQyMjoxNzo1NFrOGJa1FA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjUyODA2OQ==", "bodyText": "You should be able to just return getIID here, which is already a Maybe", "url": "https://github.com/firebase/firebase-android-sdk/pull/1488#discussion_r412528069", "createdAt": "2020-04-21T22:13:58Z", "author": {"login": "ashwinraghav"}, "path": "firebase-inappmessaging/src/main/java/com/google/firebase/inappmessaging/internal/InAppMessageStreamManager.java", "diffHunk": "@@ -232,22 +243,37 @@ private boolean shouldIgnoreCache(String event) {\n                       .defaultIfEmpty(CampaignImpressionList.getDefaultInstance())\n                       .onErrorResumeNext(Maybe.just(CampaignImpressionList.getDefaultInstance()));\n \n+              Maybe<InstanceIdResult> getIID = taskToMaybe(firebaseInstanceId.getInstanceId());\n+\n               Function<CampaignImpressionList, Maybe<FetchEligibleCampaignsResponse>> serviceFetch =\n-                  impressions ->\n-                      taskToMaybe(apiClient.getFiams(impressions))\n-                          .doOnSuccess(\n-                              resp ->\n-                                  Logging.logi(\n-                                      String.format(\n-                                          Locale.US,\n-                                          \"Successfully fetched %d messages from backend\",\n-                                          resp.getMessagesList().size())))\n-                          .doOnSuccess(\n-                              resp -> impressionStorageClient.clearImpressions(resp).subscribe())\n-                          .doOnSuccess(analyticsEventsManager::updateContextualTriggers)\n-                          .doOnSuccess(testDeviceHelper::processCampaignFetch)\n-                          .doOnError(e -> Logging.logw(\"Service fetch error: \" + e.getMessage()))\n-                          .onErrorResumeNext(Maybe.empty()); // Absorb service failures\n+                  campaignImpressionList -> {\n+                    if (!dataCollectionHelper.isAutomaticDataCollectionEnabled()) {\n+                      Logging.logi(\n+                          \"Automatic data collection is disabled, not attempting campaign fetch from service.\");\n+                      return Maybe.just(cacheExpiringResponse());\n+                    }\n+\n+                    // blocking get occurs on the IO thread because that's what we observeOn above\n+                    return Maybe.fromCallable(getIID::blockingGet)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bd85fa4b0a7f63b093de8dcf770d3c18ecf0d0fc"}, "originalPosition": 77}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjUyOTk0MA==", "bodyText": "Previously: When IID was failing, you were previously returning an expired response from the API Client.\nI presume this would be cached, and the next time you lookup the cache, you would find that it has expired and make a service call.\nNow: You this maybe would resolve to an error, that on line 274 would print the service failure.\nCan you confirm that this logic is accurate by actually testing IID Fetch failure ?", "url": "https://github.com/firebase/firebase-android-sdk/pull/1488#discussion_r412529940", "createdAt": "2020-04-21T22:17:54Z", "author": {"login": "ashwinraghav"}, "path": "firebase-inappmessaging/src/main/java/com/google/firebase/inappmessaging/internal/InAppMessageStreamManager.java", "diffHunk": "@@ -232,22 +243,37 @@ private boolean shouldIgnoreCache(String event) {\n                       .defaultIfEmpty(CampaignImpressionList.getDefaultInstance())\n                       .onErrorResumeNext(Maybe.just(CampaignImpressionList.getDefaultInstance()));\n \n+              Maybe<InstanceIdResult> getIID = taskToMaybe(firebaseInstanceId.getInstanceId());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bd85fa4b0a7f63b093de8dcf770d3c18ecf0d0fc"}, "originalPosition": 51}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk3NzMzMjY2", "url": "https://github.com/firebase/firebase-android-sdk/pull/1488#pullrequestreview-397733266", "createdAt": "2020-04-21T22:59:02Z", "commit": {"oid": "d538bab6161d9b96bebfd7bd205581697af23a11"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQyMjo1OTowMlrOGJb9Ow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQyMjo1OTowMlrOGJb9Ow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjU0ODQxMQ==", "bodyText": "Thinking out loud: Can this be modelled as an empty as well, similar to IID?", "url": "https://github.com/firebase/firebase-android-sdk/pull/1488#discussion_r412548411", "createdAt": "2020-04-21T22:59:02Z", "author": {"login": "ashwinraghav"}, "path": "firebase-inappmessaging/src/main/java/com/google/firebase/inappmessaging/internal/InAppMessageStreamManager.java", "diffHunk": "@@ -232,22 +243,35 @@ private boolean shouldIgnoreCache(String event) {\n                       .defaultIfEmpty(CampaignImpressionList.getDefaultInstance())\n                       .onErrorResumeNext(Maybe.just(CampaignImpressionList.getDefaultInstance()));\n \n+              Maybe<InstanceIdResult> getIID = taskToMaybe(firebaseInstanceId.getInstanceId());\n+\n               Function<CampaignImpressionList, Maybe<FetchEligibleCampaignsResponse>> serviceFetch =\n-                  impressions ->\n-                      taskToMaybe(apiClient.getFiams(impressions))\n-                          .doOnSuccess(\n-                              resp ->\n-                                  Logging.logi(\n-                                      String.format(\n-                                          Locale.US,\n-                                          \"Successfully fetched %d messages from backend\",\n-                                          resp.getMessagesList().size())))\n-                          .doOnSuccess(\n-                              resp -> impressionStorageClient.clearImpressions(resp).subscribe())\n-                          .doOnSuccess(analyticsEventsManager::updateContextualTriggers)\n-                          .doOnSuccess(testDeviceHelper::processCampaignFetch)\n-                          .doOnError(e -> Logging.logw(\"Service fetch error: \" + e.getMessage()))\n-                          .onErrorResumeNext(Maybe.empty()); // Absorb service failures\n+                  campaignImpressionList -> {\n+                    if (!dataCollectionHelper.isAutomaticDataCollectionEnabled()) {\n+                      Logging.logi(\n+                          \"Automatic data collection is disabled, not attempting campaign fetch from service.\");\n+                      return Maybe.just(cacheExpiringResponse());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d538bab6161d9b96bebfd7bd205581697af23a11"}, "originalPosition": 73}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2636, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}