{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM1MDMzODgw", "number": 2801, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQwOToyNTozMFrOEF20-w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwNjoxOToyNlrOEGNWFA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0NTc2NjM1OnYy", "diffSide": "RIGHT", "path": "core/src/test/java/com/linecorp/armeria/client/proxy/ProxyClientIntegrationTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQwOToyNTozMFrOGkS9ew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwNjoxODoxOFrOGk3HEw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDcxMjU3MQ==", "bodyText": "Could you add some comments about what this sentence does? e.g. why we block the event loop", "url": "https://github.com/line/armeria/pull/2801#discussion_r440712571", "createdAt": "2020-06-16T09:25:30Z", "author": {"login": "trustin"}, "path": "core/src/test/java/com/linecorp/armeria/client/proxy/ProxyClientIntegrationTest.java", "diffHunk": "@@ -546,6 +544,17 @@ protected void channelRead0(ChannelHandlerContext ctx, FullHttpRequest msg) thro\n         }\n     }\n \n+    private static final class SleepHandler extends ChannelInboundHandlerAdapter {\n+\n+        @Override\n+        public void userEventTriggered(ChannelHandlerContext ctx, Object evt) throws Exception {\n+            if (evt instanceof ProxySuccessEvent) {\n+                Thread.sleep(Flags.defaultWriteTimeoutMillis());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0c703e3b34edb7bb0e60a0e7a6849e6c36d195c8"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTMwNDg1MQ==", "bodyText": "Fixed. \ud83d\ude09", "url": "https://github.com/line/armeria/pull/2801#discussion_r441304851", "createdAt": "2020-06-17T06:18:18Z", "author": {"login": "minwoox"}, "path": "core/src/test/java/com/linecorp/armeria/client/proxy/ProxyClientIntegrationTest.java", "diffHunk": "@@ -546,6 +544,17 @@ protected void channelRead0(ChannelHandlerContext ctx, FullHttpRequest msg) thro\n         }\n     }\n \n+    private static final class SleepHandler extends ChannelInboundHandlerAdapter {\n+\n+        @Override\n+        public void userEventTriggered(ChannelHandlerContext ctx, Object evt) throws Exception {\n+            if (evt instanceof ProxySuccessEvent) {\n+                Thread.sleep(Flags.defaultWriteTimeoutMillis());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDcxMjU3MQ=="}, "originalCommit": {"oid": "0c703e3b34edb7bb0e60a0e7a6849e6c36d195c8"}, "originalPosition": 47}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0OTQ1NTU2OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/com/linecorp/armeria/client/HttpSessionHandler.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwNjoxOToyNlrOGk3Iqw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwNjo0MDoxOFrOGk3p9A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTMwNTI1OQ==", "bodyText": "nit: Not strong here \ud83d\ude09\nuseProxyConnection = proxyConfig.proxyType() != ProxyType.DIRECT;", "url": "https://github.com/line/armeria/pull/2801#discussion_r441305259", "createdAt": "2020-06-17T06:19:26Z", "author": {"login": "ikhoon"}, "path": "core/src/main/java/com/linecorp/armeria/client/HttpSessionHandler.java", "diffHunk": "@@ -120,6 +123,16 @@\n         this.useHttp1Pipelining = useHttp1Pipelining;\n         this.idleTimeoutMillis = idleTimeoutMillis;\n         this.pingIntervalMillis = pingIntervalMillis;\n+\n+        switch (proxyConfig.proxyType()) {\n+            case SOCKS4:\n+            case SOCKS5:\n+            case CONNECT:\n+                useProxyConnection = true;\n+                break;\n+            default:\n+                useProxyConnection = false;\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0c703e3b34edb7bb0e60a0e7a6849e6c36d195c8"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTMwNTQzNg==", "bodyText": "better using explicit case and throwing something at default?", "url": "https://github.com/line/armeria/pull/2801#discussion_r441305436", "createdAt": "2020-06-17T06:19:54Z", "author": {"login": "trustin"}, "path": "core/src/main/java/com/linecorp/armeria/client/HttpSessionHandler.java", "diffHunk": "@@ -120,6 +123,16 @@\n         this.useHttp1Pipelining = useHttp1Pipelining;\n         this.idleTimeoutMillis = idleTimeoutMillis;\n         this.pingIntervalMillis = pingIntervalMillis;\n+\n+        switch (proxyConfig.proxyType()) {\n+            case SOCKS4:\n+            case SOCKS5:\n+            case CONNECT:\n+                useProxyConnection = true;\n+                break;\n+            default:\n+                useProxyConnection = false;\n+        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTMwNTI1OQ=="}, "originalCommit": {"oid": "0c703e3b34edb7bb0e60a0e7a6849e6c36d195c8"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTMxMzc4MA==", "bodyText": "useProxyConnection = proxyConfig.proxyType() != ProxyType.DIRECT;\n\nA user might implement his own ProxyConfig and returns null for proxyType(). So we should check it explicitly.\n\nbetter using explicit case and throwing something at default?\n\nWe've already gone through the logic here which just leaves a warning log.\nI thought we don't have to leave logs twice. \ud83d\ude04", "url": "https://github.com/line/armeria/pull/2801#discussion_r441313780", "createdAt": "2020-06-17T06:40:18Z", "author": {"login": "minwoox"}, "path": "core/src/main/java/com/linecorp/armeria/client/HttpSessionHandler.java", "diffHunk": "@@ -120,6 +123,16 @@\n         this.useHttp1Pipelining = useHttp1Pipelining;\n         this.idleTimeoutMillis = idleTimeoutMillis;\n         this.pingIntervalMillis = pingIntervalMillis;\n+\n+        switch (proxyConfig.proxyType()) {\n+            case SOCKS4:\n+            case SOCKS5:\n+            case CONNECT:\n+                useProxyConnection = true;\n+                break;\n+            default:\n+                useProxyConnection = false;\n+        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTMwNTI1OQ=="}, "originalCommit": {"oid": "0c703e3b34edb7bb0e60a0e7a6849e6c36d195c8"}, "originalPosition": 39}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2348, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}