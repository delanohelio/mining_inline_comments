{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYwMjY1MjUw", "number": 2383, "title": "Fix to have context in the thread-local when calling AsyncMetho\u2026", "bodyText": "\u2026d callback\nMotivations:\nIf the reply returned from Thrift client call is complete before calling future.handle(), the context is not pushed into thread-local when calling AsyncMethodCallback.\nModifications:\n\nFix to push context right before calling future.handle()\nClientRequestContextCaptor now captures nested contexts.\n\nThis is not a breaking change because we didn't publish a new version yet.\nAdd ClientRequestContextCaptor.getOrNull()\n\n\n\nResult:\n\nFix test failure", "createdAt": "2020-01-08T03:28:58Z", "url": "https://github.com/line/armeria/pull/2383", "merged": true, "mergeCommit": {"oid": "7594c0cc7fbac81d546487d19eb66904c222543e"}, "closed": true, "closedAt": "2020-01-09T05:28:22Z", "author": {"login": "minwoox"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb4MrH1gH2gAyMzYwMjY1MjUwOjIyYjMxNWU5OTljMGNhNGU3OGM3YTY5YjQ2OTkwOGNmM2RhMjg5OGE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb4i_rkgFqTM0MDI5NDI2NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "22b315e999c0ca4e78c7a69b469908cf3da2898a", "author": {"user": {"login": "minwoox", "name": "minux"}}, "url": "https://github.com/line/armeria/commit/22b315e999c0ca4e78c7a69b469908cf3da2898a", "committedDate": "2020-01-08T03:20:39Z", "message": "Fix to have context in the thread-local when calling AsyncMethodCallback\nMotivations:\nIf the `reply` returned from Thrift client call is comeplete before calling `future.handle()`, the context is not pushed into thread-local when calling `AsyncMethodCallback`.\n\nModifications:\n- Fix to push context right before calling `future.handle()`\n- `ClientRequestContextCaptor` now captures nested contexts.\n  - This is not a breaking change because we didn't publish a new version yet.\n  - Add `ClientRequestContextCaptor.getOrNull()`\n\nResult:\n- Fix test failure"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzM5NjM0MDUz", "url": "https://github.com/line/armeria/pull/2383#pullrequestreview-339634053", "createdAt": "2020-01-08T03:48:41Z", "commit": {"oid": "22b315e999c0ca4e78c7a69b469908cf3da2898a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQwMzo0ODo0MVrOFbMFNQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQwMzo0ODo0MVrOFbMFNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDA1MzgxMw==", "bodyText": "How about not adding after close()?", "url": "https://github.com/line/armeria/pull/2383#discussion_r364053813", "createdAt": "2020-01-08T03:48:41Z", "author": {"login": "trustin"}, "path": "core/src/main/java/com/linecorp/armeria/client/ClientThreadLocalState.java", "diffHunk": "@@ -129,6 +129,13 @@ private static void reportThreadSafetyViolation() {\n             this.oldCaptor = oldCaptor;\n         }\n \n+        void add(ClientRequestContext ctx) {\n+            captured.add(ctx);\n+            if (oldCaptor != null) {\n+                oldCaptor.add(ctx);\n+            }\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22b315e999c0ca4e78c7a69b469908cf3da2898a"}, "originalPosition": 18}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzM5NjM2ODMw", "url": "https://github.com/line/armeria/pull/2383#pullrequestreview-339636830", "createdAt": "2020-01-08T04:03:20Z", "commit": {"oid": "22b315e999c0ca4e78c7a69b469908cf3da2898a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQwNDowMzoyMFrOFbMOsQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQwNDowMzoyMFrOFbMOsQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDA1NjI0MQ==", "bodyText": "I think we can directly mount the context here and below instead of using makeContextAware.", "url": "https://github.com/line/armeria/pull/2383#discussion_r364056241", "createdAt": "2020-01-08T04:03:20Z", "author": {"login": "anuraaga"}, "path": "thrift/src/main/java/com/linecorp/armeria/client/thrift/THttpClientInvocationHandler.java", "diffHunk": "@@ -119,31 +124,51 @@ private Object invokeClientMethod(Method method, @Nullable Object[] args) throws\n             }\n         }\n \n-        try {\n-            final RpcResponse reply;\n-            if (fragment != null) {\n-                reply = delegate().executeMultiplexed(\n-                        path, params.clientType(), fragment, method.getName(), args);\n-            } else {\n-                reply = delegate().execute(path, params.clientType(), method.getName(), args);\n-            }\n+        try (ClientRequestContextCaptor captor = Clients.newContextCaptor()) {\n+            try {\n+                final RpcResponse reply;\n+                if (fragment != null) {\n+                    reply = delegate().executeMultiplexed(\n+                            path, params.clientType(), fragment, method.getName(), args);\n+                } else {\n+                    reply = delegate().execute(path, params.clientType(), method.getName(), args);\n+                }\n \n-            if (callback != null) {\n-                AsyncMethodCallbacks.transfer(reply, callback);\n-                return null;\n-            } else {\n-                try {\n-                    return reply.get();\n-                } catch (ExecutionException e) {\n-                    throw Exceptions.peel(e);\n+                final ClientRequestContext ctx = captor.get();\n+                if (callback != null) {\n+                    reply.handle(ctx.makeContextAware((res, cause) -> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22b315e999c0ca4e78c7a69b469908cf3da2898a"}, "originalPosition": 55}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8ed3ac232e7a5c8dd51b8b7776558d10d07ced65", "author": {"user": {"login": "minwoox", "name": "minux"}}, "url": "https://github.com/line/armeria/commit/8ed3ac232e7a5c8dd51b8b7776558d10d07ced65", "committedDate": "2020-01-08T06:52:14Z", "message": "Address comments by @trustin and @anuraaga"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzM5Njc0MTg0", "url": "https://github.com/line/armeria/pull/2383#pullrequestreview-339674184", "createdAt": "2020-01-08T06:58:09Z", "commit": {"oid": "8ed3ac232e7a5c8dd51b8b7776558d10d07ced65"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzM5NzA3MjA3", "url": "https://github.com/line/armeria/pull/2383#pullrequestreview-339707207", "createdAt": "2020-01-08T08:30:44Z", "commit": {"oid": "8ed3ac232e7a5c8dd51b8b7776558d10d07ced65"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQwMjk0MjY0", "url": "https://github.com/line/armeria/pull/2383#pullrequestreview-340294264", "createdAt": "2020-01-09T05:21:01Z", "commit": {"oid": "8ed3ac232e7a5c8dd51b8b7776558d10d07ced65"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 838, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}