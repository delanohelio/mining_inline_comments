{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE3MjMwODUy", "number": 3161, "title": "Use disallowed list instead of blacklist and allow list instead of whitelist", "bodyText": "Motivation:\nRelated #3159\nModifications:\n\nUse disallowedList instead of blacklist\nUse allowedList instead of whitelist\n\nResult:\nClosed #3159", "createdAt": "2020-11-08T04:44:53Z", "url": "https://github.com/line/armeria/pull/3161", "merged": true, "mergeCommit": {"oid": "bf82c72a646a10d554507e4894f4a23963e30c0e"}, "closed": true, "closedAt": "2020-11-16T08:09:33Z", "author": {"login": "heowc"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdaYozEgH2gAyNTE3MjMwODUyOmM2M2Q1ZDIyNDQyN2Y1YTMyMjhjNDNjY2E0NjI2MTVlNDNiNGNjM2M=", "endCursor": "Y3Vyc29yOnYyOpPPAAABddAZeiAFqTUzMTAzODE0Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "c63d5d224427f5a3228c43cca462615e43b4cc3c", "author": {"user": {"login": "heowc", "name": "WonChul Heo"}}, "url": "https://github.com/line/armeria/commit/c63d5d224427f5a3228c43cca462615e43b4cc3c", "committedDate": "2020-11-08T04:41:33Z", "message": "Change `blocklist` instead `blacklist`, `allowlist` instead `whitelist`"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI1Nzk0ODQ5", "url": "https://github.com/line/armeria/pull/3161#pullrequestreview-525794849", "createdAt": "2020-11-08T10:36:56Z", "commit": {"oid": "c63d5d224427f5a3228c43cca462615e43b4cc3c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOFQxMDozNjo1NlrOHvSJXQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOFQxMDozNjo1NlrOHvSJXQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTM0MjQyOQ==", "bodyText": "Somehow block list seems a bit different - blocking requests with these headers is what came to mind first. Perhaps FILTERED_*/ ALLOWED_ is a good pattern?", "url": "https://github.com/line/armeria/pull/3161#discussion_r519342429", "createdAt": "2020-11-08T10:36:56Z", "author": {"login": "anuraaga"}, "path": "core/src/main/java/com/linecorp/armeria/internal/common/ArmeriaHttpUtil.java", "diffHunk": "@@ -139,82 +139,82 @@ public boolean equals(AsciiString a, AsciiString b) {\n     /**\n      * The set of headers that should not be directly copied when converting headers from HTTP/1 to HTTP/2.\n      */\n-    private static final CharSequenceMap HTTP_TO_HTTP2_HEADER_BLACKLIST = new CharSequenceMap();\n+    private static final CharSequenceMap HTTP_TO_HTTP2_HEADER_BLOCKLIST = new CharSequenceMap();\n \n     /**\n      * The set of headers that should not be directly copied when converting headers from HTTP/2 to HTTP/1.\n      */\n-    private static final CharSequenceMap HTTP2_TO_HTTP_HEADER_BLACKLIST = new CharSequenceMap();\n+    private static final CharSequenceMap HTTP2_TO_HTTP_HEADER_BLOCKLIST = new CharSequenceMap();\n \n     /**\n      * The set of headers that must not be directly copied when converting trailers.\n      */\n-    private static final CharSequenceMap HTTP_TRAILER_BLACKLIST = new CharSequenceMap();\n+    private static final CharSequenceMap HTTP_TRAILER_BLOCKLIST = new CharSequenceMap();\n \n     static {\n-        HTTP_TO_HTTP2_HEADER_BLACKLIST.add(HttpHeaderNames.CONNECTION, EMPTY_STRING);\n-        HTTP_TO_HTTP2_HEADER_BLACKLIST.add(HEADER_NAME_KEEP_ALIVE, EMPTY_STRING);\n-        HTTP_TO_HTTP2_HEADER_BLACKLIST.add(HEADER_NAME_PROXY_CONNECTION, EMPTY_STRING);\n-        HTTP_TO_HTTP2_HEADER_BLACKLIST.add(HttpHeaderNames.TRANSFER_ENCODING, EMPTY_STRING);\n-        HTTP_TO_HTTP2_HEADER_BLACKLIST.add(HttpHeaderNames.UPGRADE, EMPTY_STRING);\n-        HTTP_TO_HTTP2_HEADER_BLACKLIST.add(ExtensionHeaderNames.STREAM_ID.text(), EMPTY_STRING);\n-        HTTP_TO_HTTP2_HEADER_BLACKLIST.add(ExtensionHeaderNames.SCHEME.text(), EMPTY_STRING);\n-        HTTP_TO_HTTP2_HEADER_BLACKLIST.add(ExtensionHeaderNames.PATH.text(), EMPTY_STRING);\n+        HTTP_TO_HTTP2_HEADER_BLOCKLIST.add(HttpHeaderNames.CONNECTION, EMPTY_STRING);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c63d5d224427f5a3228c43cca462615e43b4cc3c"}, "originalPosition": 28}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI1ODk4MTIx", "url": "https://github.com/line/armeria/pull/3161#pullrequestreview-525898121", "createdAt": "2020-11-09T03:10:27Z", "commit": {"oid": "c63d5d224427f5a3228c43cca462615e43b4cc3c"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQwMzoxMDoyN1rOHvdoxg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQwMzoxNzozNVrOHvdu5A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTUzMDY5NA==", "bodyText": "There is no verb 'allowlist'. How about: the list of allowed hosts?", "url": "https://github.com/line/armeria/pull/3161#discussion_r519530694", "createdAt": "2020-11-09T03:10:27Z", "author": {"login": "trustin"}, "path": "core/src/main/java/com/linecorp/armeria/client/IgnoreHostsTrustManager.java", "diffHunk": "@@ -49,7 +49,7 @@\n import com.google.common.collect.ImmutableSet;\n \n /**\n- * An implementation of {@link X509ExtendedTrustManager} that skips verification on whitelisted hosts.\n+ * An implementation of {@link X509ExtendedTrustManager} that skips verification on allowlisted hosts.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c63d5d224427f5a3228c43cca462615e43b4cc3c"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTUzMTAwNg==", "bodyText": "DISALLOWED_ also sounds good to me.", "url": "https://github.com/line/armeria/pull/3161#discussion_r519531006", "createdAt": "2020-11-09T03:11:59Z", "author": {"login": "trustin"}, "path": "core/src/main/java/com/linecorp/armeria/internal/common/ArmeriaHttpUtil.java", "diffHunk": "@@ -139,82 +139,82 @@ public boolean equals(AsciiString a, AsciiString b) {\n     /**\n      * The set of headers that should not be directly copied when converting headers from HTTP/1 to HTTP/2.\n      */\n-    private static final CharSequenceMap HTTP_TO_HTTP2_HEADER_BLACKLIST = new CharSequenceMap();\n+    private static final CharSequenceMap HTTP_TO_HTTP2_HEADER_BLOCKLIST = new CharSequenceMap();\n \n     /**\n      * The set of headers that should not be directly copied when converting headers from HTTP/2 to HTTP/1.\n      */\n-    private static final CharSequenceMap HTTP2_TO_HTTP_HEADER_BLACKLIST = new CharSequenceMap();\n+    private static final CharSequenceMap HTTP2_TO_HTTP_HEADER_BLOCKLIST = new CharSequenceMap();\n \n     /**\n      * The set of headers that must not be directly copied when converting trailers.\n      */\n-    private static final CharSequenceMap HTTP_TRAILER_BLACKLIST = new CharSequenceMap();\n+    private static final CharSequenceMap HTTP_TRAILER_BLOCKLIST = new CharSequenceMap();\n \n     static {\n-        HTTP_TO_HTTP2_HEADER_BLACKLIST.add(HttpHeaderNames.CONNECTION, EMPTY_STRING);\n-        HTTP_TO_HTTP2_HEADER_BLACKLIST.add(HEADER_NAME_KEEP_ALIVE, EMPTY_STRING);\n-        HTTP_TO_HTTP2_HEADER_BLACKLIST.add(HEADER_NAME_PROXY_CONNECTION, EMPTY_STRING);\n-        HTTP_TO_HTTP2_HEADER_BLACKLIST.add(HttpHeaderNames.TRANSFER_ENCODING, EMPTY_STRING);\n-        HTTP_TO_HTTP2_HEADER_BLACKLIST.add(HttpHeaderNames.UPGRADE, EMPTY_STRING);\n-        HTTP_TO_HTTP2_HEADER_BLACKLIST.add(ExtensionHeaderNames.STREAM_ID.text(), EMPTY_STRING);\n-        HTTP_TO_HTTP2_HEADER_BLACKLIST.add(ExtensionHeaderNames.SCHEME.text(), EMPTY_STRING);\n-        HTTP_TO_HTTP2_HEADER_BLACKLIST.add(ExtensionHeaderNames.PATH.text(), EMPTY_STRING);\n+        HTTP_TO_HTTP2_HEADER_BLOCKLIST.add(HttpHeaderNames.CONNECTION, EMPTY_STRING);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTM0MjQyOQ=="}, "originalCommit": {"oid": "c63d5d224427f5a3228c43cca462615e43b4cc3c"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTUzMTgxNw==", "bodyText": "Blocklisted -> Disallowed?", "url": "https://github.com/line/armeria/pull/3161#discussion_r519531817", "createdAt": "2020-11-09T03:15:29Z", "author": {"login": "trustin"}, "path": "core/src/main/java/com/linecorp/armeria/internal/common/ArmeriaHttpUtil.java", "diffHunk": "@@ -881,11 +881,11 @@ private static void toNettyHttp2Client(HttpHeaders inputHeaders, Http2Headers ou\n         for (Entry<AsciiString, String> entry : inputHeaders) {\n             final AsciiString name = entry.getKey();\n             final String value = entry.getValue();\n-            if (HTTP_TO_HTTP2_HEADER_BLACKLIST.contains(name)) {\n+            if (HTTP_TO_HTTP2_HEADER_BLOCKLIST.contains(name)) {\n                 continue;\n             }\n \n-            if (isTrailer && isTrailerBlacklisted(name)) {\n+            if (isTrailer && isTrailerBlocklisted(name)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c63d5d224427f5a3228c43cca462615e43b4cc3c"}, "originalPosition": 179}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTUzMjI2MA==", "bodyText": "testSetDisallowedHeader ?", "url": "https://github.com/line/armeria/pull/3161#discussion_r519532260", "createdAt": "2020-11-09T03:17:35Z", "author": {"login": "trustin"}, "path": "core/src/test/java/com/linecorp/armeria/client/ClientOptionsTest.java", "diffHunk": "@@ -66,7 +66,7 @@ void testSetHeader() {\n     }\n \n     @Test\n-    void testSetBlackListHeader() {\n+    void testSetBlockListHeader() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c63d5d224427f5a3228c43cca462615e43b4cc3c"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "60d5d6980e55d5b41c273bb8a649dbef162694c8", "author": {"user": {"login": "heowc", "name": "WonChul Heo"}}, "url": "https://github.com/line/armeria/commit/60d5d6980e55d5b41c273bb8a649dbef162694c8", "committedDate": "2020-11-09T07:17:39Z", "message": "blocklist to disallowed list"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "488051c1504d72a62aa792fb1034e574742cc9f4", "author": {"user": {"login": "heowc", "name": "WonChul Heo"}}, "url": "https://github.com/line/armeria/commit/488051c1504d72a62aa792fb1034e574742cc9f4", "committedDate": "2020-11-09T10:20:58Z", "message": "Replace blocklist to disallowed list"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI3MTQ5MzEx", "url": "https://github.com/line/armeria/pull/3161#pullrequestreview-527149311", "createdAt": "2020-11-10T12:25:36Z", "commit": {"oid": "488051c1504d72a62aa792fb1034e574742cc9f4"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3891071a1f65042e5d43f42507eaad218bc07ace", "author": {"user": {"login": "heowc", "name": "WonChul Heo"}}, "url": "https://github.com/line/armeria/commit/3891071a1f65042e5d43f42507eaad218bc07ace", "committedDate": "2020-11-11T02:18:01Z", "message": "Checkstyle"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI4MTU5Mjk2", "url": "https://github.com/line/armeria/pull/3161#pullrequestreview-528159296", "createdAt": "2020-11-11T13:13:24Z", "commit": {"oid": "3891071a1f65042e5d43f42507eaad218bc07ace"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMxMDM4MTQ2", "url": "https://github.com/line/armeria/pull/3161#pullrequestreview-531038146", "createdAt": "2020-11-16T08:08:52Z", "commit": {"oid": "3891071a1f65042e5d43f42507eaad218bc07ace"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4800, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}