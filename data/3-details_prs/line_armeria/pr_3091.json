{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk2NjIyMTc4", "number": 3091, "title": "Fix serialization of enums in maps when using TTEXT_NAMED_ENUM", "bodyText": "Motivation\nWhen using ThriftJacksonModule with TTEXT_NAMED_ENUM serialization format, enums inside maps (keys or nested values) are serialized as numbers instead of strings. Another potential issue occurs when a map key and value are both enums. In this case, map key will be incorrectly deserialized as the value enum type.\nThis problem happens because when resolving the Java classes for each Thrift field, we only use the first level map value.\nModifications\nStructContext:\n\nExtract the logic to update classMap and recursively call it on map keys and values.\nInstead of field -> ValueClass, we now produce field$k -> KeyClass and field$v -> ValueClass mappings.\n\nTTextProtocol:\n\nSplit currentFieldClass stack into currentFieldContext and currentFieldName to keep track of the current position in a map with (nested) $k and $v suffixes.\nMove {read,write}CurrentContext() to the start of {read,write}XXX() methods to ensure the current context is correct and ready for reading/writing. This mainly affects MapContext where isMapKey() could return the wrong value if called too early.\nWhen deserializing i32, try parsing the string as an integer first. When using enums as map keys, ObjectMapper would read the input as a string, which would fail to deserialize when using Enum.valueOf().\n\nResult\n\nTTEXT_NAMED_ENUM now correctly serializes enums when used inside maps.\nWhen deserializing, map keys can now be specified as strings.", "createdAt": "2020-10-02T00:54:45Z", "url": "https://github.com/line/armeria/pull/3091", "merged": true, "mergeCommit": {"oid": "925f044595de1101bfacaf5c9a9321fa99f9e184"}, "closed": true, "closedAt": "2020-10-16T07:19:32Z", "author": {"login": "KarboniteKream"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdObMZQgH2gAyNDk2NjIyMTc4OjE0YTQxMTM5M2NhYzdkMDUyZWI4MjI4YzY3MTRiYTAyNDIxYzk0NmI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdSd1Y3AFqTUwODM5MjA2Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "14a411393cac7d052eb8228c6714ba02421c946b", "author": {"user": {"login": "KarboniteKream", "name": "Klemen Ko\u0161ir"}}, "url": "https://github.com/line/armeria/commit/14a411393cac7d052eb8228c6714ba02421c946b", "committedDate": "2020-10-02T00:53:09Z", "message": "Fix serialization of enums in maps when using TTEXT_NAMED_ENUM"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA0NjM2OTE4", "url": "https://github.com/line/armeria/pull/3091#pullrequestreview-504636918", "createdAt": "2020-10-08T10:21:07Z", "commit": {"oid": "14a411393cac7d052eb8228c6714ba02421c946b"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxMDoyMTowN1rOHeX3DQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxMDoyMTowN1rOHeX3DQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTYxMDI1Mw==", "bodyText": "How about just using an ArrayList and updating the last element?", "url": "https://github.com/line/armeria/pull/3091#discussion_r501610253", "createdAt": "2020-10-08T10:21:07Z", "author": {"login": "trustin"}, "path": "thrift0.13/src/main/java/com/linecorp/armeria/common/thrift/text/TTextProtocol.java", "diffHunk": "@@ -717,6 +733,36 @@ private BaseContext getCurrentContext() {\n         return contextStack.peek();\n     }\n \n+    /**\n+     * Prepare the current parsing context for writing.\n+     */\n+    private void writeCurrentContext() {\n+        getCurrentContext().write();\n+        updateCurrentFieldName();\n+    }\n+\n+    /**\n+     * Prepare the current parsing context for reading.\n+     */\n+    private void readCurrentContext() {\n+        getCurrentContext().read();\n+        updateCurrentFieldName();\n+    }\n+\n+    /**\n+     * Update the current field name, if necessary.\n+     *\n+     * <p>After every read/write operation in {@link MapContext},\n+     * the field name should toggle between the map's key and value.</p>\n+     */\n+    private void updateCurrentFieldName() {\n+        if (getCurrentContext() instanceof MapContext) {\n+            currentFieldName.pop();\n+            final String suffix = getCurrentContext().isMapKey() ? MAP_KEY_SUFFIX : MAP_VALUE_SUFFIX;\n+            currentFieldName.push(currentFieldName.peek() + suffix);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "14a411393cac7d052eb8228c6714ba02421c946b"}, "originalPosition": 448}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA3MTAwOTk5", "url": "https://github.com/line/armeria/pull/3091#pullrequestreview-507100999", "createdAt": "2020-10-13T06:22:51Z", "commit": {"oid": "14a411393cac7d052eb8228c6714ba02421c946b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA4MzkyMDYz", "url": "https://github.com/line/armeria/pull/3091#pullrequestreview-508392063", "createdAt": "2020-10-14T14:13:26Z", "commit": {"oid": "14a411393cac7d052eb8228c6714ba02421c946b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4707, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}