{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA3NzMyMzY4", "number": 2675, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QwNzozNjozNlrOD1I5mg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQwMzoyMTozMFrOD1kd6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3MDQ2OTM4OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/com/linecorp/armeria/client/circuitbreaker/NonBlockingCircuitBreaker.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QwNzozNjozNlrOGKbBcw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QwNzo1ODo0NFrOGKb85w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzU4MTY4Mw==", "bodyText": "a -> an", "url": "https://github.com/line/armeria/pull/2675#discussion_r413581683", "createdAt": "2020-04-23T07:36:36Z", "author": {"login": "minwoox"}, "path": "core/src/main/java/com/linecorp/armeria/client/circuitbreaker/NonBlockingCircuitBreaker.java", "diffHunk": "@@ -176,6 +176,17 @@ private void logStateTransition(CircuitState circuitState, @Nullable EventCount\n         }\n     }\n \n+    private void notifyInitialized() {\n+        config.listeners().forEach(listener -> {\n+            try {\n+                listener.onInitialized(name());\n+            } catch (Throwable t) {\n+                logger.warn(\"An error occurred when notifying a Initialized event\", t);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "14c8ca60fd31036605890ebc52bd4339811ad859"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzU5NjkwMw==", "bodyText": "Fixed \ud83d\ude01", "url": "https://github.com/line/armeria/pull/2675#discussion_r413596903", "createdAt": "2020-04-23T07:58:44Z", "author": {"login": "ghkim3221"}, "path": "core/src/main/java/com/linecorp/armeria/client/circuitbreaker/NonBlockingCircuitBreaker.java", "diffHunk": "@@ -176,6 +176,17 @@ private void logStateTransition(CircuitState circuitState, @Nullable EventCount\n         }\n     }\n \n+    private void notifyInitialized() {\n+        config.listeners().forEach(listener -> {\n+            try {\n+                listener.onInitialized(name());\n+            } catch (Throwable t) {\n+                logger.warn(\"An error occurred when notifying a Initialized event\", t);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzU4MTY4Mw=="}, "originalCommit": {"oid": "14c8ca60fd31036605890ebc52bd4339811ad859"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3MDQ2OTc3OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/com/linecorp/armeria/client/circuitbreaker/CircuitBreakerListener.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QwNzozNjo0MlrOGKbBtQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QwNzo1ODoyMVrOGKb75Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzU4MTc0OQ==", "bodyText": "Let's add a little description that the state is Closed when this is invoked.", "url": "https://github.com/line/armeria/pull/2675#discussion_r413581749", "createdAt": "2020-04-23T07:36:42Z", "author": {"login": "minwoox"}, "path": "core/src/main/java/com/linecorp/armeria/client/circuitbreaker/CircuitBreakerListener.java", "diffHunk": "@@ -21,6 +21,11 @@\n  */\n public interface CircuitBreakerListener {\n \n+    /**\n+     * Invoked when the circuit breaker is initialized.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "14c8ca60fd31036605890ebc52bd4339811ad859"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzU5NjY0NQ==", "bodyText": "Added Initial state is always CLOSED. \ud83d\ude01", "url": "https://github.com/line/armeria/pull/2675#discussion_r413596645", "createdAt": "2020-04-23T07:58:21Z", "author": {"login": "ghkim3221"}, "path": "core/src/main/java/com/linecorp/armeria/client/circuitbreaker/CircuitBreakerListener.java", "diffHunk": "@@ -21,6 +21,11 @@\n  */\n public interface CircuitBreakerListener {\n \n+    /**\n+     * Invoked when the circuit breaker is initialized.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzU4MTc0OQ=="}, "originalCommit": {"oid": "14c8ca60fd31036605890ebc52bd4339811ad859"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3MTE1MDMyOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/com/linecorp/armeria/client/circuitbreaker/CircuitBreakerListener.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QxMDowNjoyNVrOGKhZ2Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QxMTo0Mzo1NlrOGKk_9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzY4NjIzMw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * Initial state is always CLOSED.\n          \n          \n            \n                 * The initial state is always {@link CircuitState.CLOSED}.", "url": "https://github.com/line/armeria/pull/2675#discussion_r413686233", "createdAt": "2020-04-23T10:06:25Z", "author": {"login": "ikhoon"}, "path": "core/src/main/java/com/linecorp/armeria/client/circuitbreaker/CircuitBreakerListener.java", "diffHunk": "@@ -21,6 +21,14 @@\n  */\n public interface CircuitBreakerListener {\n \n+    /**\n+     * Invoked when the circuit breaker is initialized.\n+     * Initial state is always CLOSED.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5c10cd892858c7cd98a2c98f745a87877247bfda"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzc0NTE0Mg==", "bodyText": "Changed \ud83d\ude01", "url": "https://github.com/line/armeria/pull/2675#discussion_r413745142", "createdAt": "2020-04-23T11:43:56Z", "author": {"login": "ghkim3221"}, "path": "core/src/main/java/com/linecorp/armeria/client/circuitbreaker/CircuitBreakerListener.java", "diffHunk": "@@ -21,6 +21,14 @@\n  */\n public interface CircuitBreakerListener {\n \n+    /**\n+     * Invoked when the circuit breaker is initialized.\n+     * Initial state is always CLOSED.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzY4NjIzMw=="}, "originalCommit": {"oid": "5c10cd892858c7cd98a2c98f745a87877247bfda"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3MTE1MTUzOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/com/linecorp/armeria/client/circuitbreaker/CircuitBreakerListenerAdapter.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QxMDowNjo0MVrOGKhakQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QxMTo0NDoxMFrOGKlAfA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzY4NjQxNw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public void onInitialized(String circuitBreakerName) throws Exception { }\n          \n          \n            \n                public void onInitialized(String circuitBreakerName) throws Exception {}", "url": "https://github.com/line/armeria/pull/2675#discussion_r413686417", "createdAt": "2020-04-23T10:06:41Z", "author": {"login": "ikhoon"}, "path": "core/src/main/java/com/linecorp/armeria/client/circuitbreaker/CircuitBreakerListenerAdapter.java", "diffHunk": "@@ -22,6 +22,9 @@\n  */\n public class CircuitBreakerListenerAdapter implements CircuitBreakerListener {\n \n+    @Override\n+    public void onInitialized(String circuitBreakerName) throws Exception { }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5c10cd892858c7cd98a2c98f745a87877247bfda"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzc0NTI3Ng==", "bodyText": "Fixed \ud83d\ude01", "url": "https://github.com/line/armeria/pull/2675#discussion_r413745276", "createdAt": "2020-04-23T11:44:10Z", "author": {"login": "ghkim3221"}, "path": "core/src/main/java/com/linecorp/armeria/client/circuitbreaker/CircuitBreakerListenerAdapter.java", "diffHunk": "@@ -22,6 +22,9 @@\n  */\n public class CircuitBreakerListenerAdapter implements CircuitBreakerListener {\n \n+    @Override\n+    public void onInitialized(String circuitBreakerName) throws Exception { }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzY4NjQxNw=="}, "originalCommit": {"oid": "5c10cd892858c7cd98a2c98f745a87877247bfda"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3NDk4NjAxOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/com/linecorp/armeria/client/circuitbreaker/CircuitBreakerListener.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQwMzoyMTozMFrOGLEm-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QwMjoxODowM1rOGMN-Xw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDI2MzAzMw==", "bodyText": "How about adding CircuitState initialState as the second parameter, so that we can have a different type of circuit, which starts at HALF_OPEN or OPEN?", "url": "https://github.com/line/armeria/pull/2675#discussion_r414263033", "createdAt": "2020-04-24T03:21:30Z", "author": {"login": "trustin"}, "path": "core/src/main/java/com/linecorp/armeria/client/circuitbreaker/CircuitBreakerListener.java", "diffHunk": "@@ -21,6 +21,14 @@\n  */\n public interface CircuitBreakerListener {\n \n+    /**\n+     * Invoked when the circuit breaker is initialized.\n+     * The initial state is always {@link CircuitState.CLOSED}.\n+     */\n+    default void onInitialized(String circuitBreakerName) throws Exception {\n+        onStateChanged(circuitBreakerName, CircuitState.CLOSED);\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "63d5f107a61310b164bff3c5933de82ce170246b"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDI2MzIyOQ==", "bodyText": "Or please let me know if it doesn't make sense, of course. \ud83d\ude04", "url": "https://github.com/line/armeria/pull/2675#discussion_r414263229", "createdAt": "2020-04-24T03:22:06Z", "author": {"login": "trustin"}, "path": "core/src/main/java/com/linecorp/armeria/client/circuitbreaker/CircuitBreakerListener.java", "diffHunk": "@@ -21,6 +21,14 @@\n  */\n public interface CircuitBreakerListener {\n \n+    /**\n+     * Invoked when the circuit breaker is initialized.\n+     * The initial state is always {@link CircuitState.CLOSED}.\n+     */\n+    default void onInitialized(String circuitBreakerName) throws Exception {\n+        onStateChanged(circuitBreakerName, CircuitState.CLOSED);\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDI2MzAzMw=="}, "originalCommit": {"oid": "63d5f107a61310b164bff3c5933de82ce170246b"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTQ2NTA1NQ==", "bodyText": "Yes you right, initialState is more general for other type of circuit.\nThank you. \ud83d\ude01", "url": "https://github.com/line/armeria/pull/2675#discussion_r415465055", "createdAt": "2020-04-27T02:18:03Z", "author": {"login": "ghkim3221"}, "path": "core/src/main/java/com/linecorp/armeria/client/circuitbreaker/CircuitBreakerListener.java", "diffHunk": "@@ -21,6 +21,14 @@\n  */\n public interface CircuitBreakerListener {\n \n+    /**\n+     * Invoked when the circuit breaker is initialized.\n+     * The initial state is always {@link CircuitState.CLOSED}.\n+     */\n+    default void onInitialized(String circuitBreakerName) throws Exception {\n+        onStateChanged(circuitBreakerName, CircuitState.CLOSED);\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDI2MzAzMw=="}, "originalCommit": {"oid": "63d5f107a61310b164bff3c5933de82ce170246b"}, "originalPosition": 10}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2518, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}