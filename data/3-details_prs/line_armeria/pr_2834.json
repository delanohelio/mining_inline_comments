{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM5Nzg0NTc5", "number": 2834, "title": "Return `ContextAwareEventLoop` from `RequestContext.eventLoop()`", "bodyText": "Motivation:\nCurrently, we return the context aware executor service from RequestContext.blockingTaskExecutor().\nHowever, RequestContext.eventLoop() returns the non context aware eventLoop which is not consistent.\nModifications:\n\nMake ContextAwareEventLoop public interface and RequestContext.eventLoop() returns it.\nMake ContextAwareScheduledExecutorService public interface and ServiceRequestContext.blockingTaskExecutor() returns it.\n(Deprecated) executor(), contextAwareExecutor() and contextAwareEventLoop() in RequestContext are deprecated.\n\nResult:\n\nClose #2629\nThe EventLoop from RequestContext.eventLoop() always set the RequestContext before executing any submitted tasks.\n(Deprecated) executor(), contextAwareExecutor() and contextAwareEventLoop() in RequestContext are deprecated.", "createdAt": "2020-06-25T07:54:59Z", "url": "https://github.com/line/armeria/pull/2834", "merged": true, "mergeCommit": {"oid": "14241c9b24eaeba59ea5106cfb2dfacab4d7a220"}, "closed": true, "closedAt": "2020-07-01T07:04:13Z", "author": {"login": "minwoox"}, "timelineItems": {"totalCount": 21, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcupX0DgH2gAyNDM5Nzg0NTc5OjZlMTBjNGNiYTY5NjQ4MmM1NzdmNDk4ZmE1YTg2NDQ3NmUzZWI3MTI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcwktEBgH2gAyNDM5Nzg0NTc5OjIzZDYzOThiNmM2ZjkwODkwNGNkMWFhNmIyZjcwYWMzYzg3MGMzZGM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "6e10c4cba696482c577f498fa5a864476e3eb712", "author": {"user": {"login": "minwoox", "name": "minux"}}, "url": "https://github.com/line/armeria/commit/6e10c4cba696482c577f498fa5a864476e3eb712", "committedDate": "2020-06-25T07:18:43Z", "message": "Returns `RequestContextAwareEventLoop` from `RequestContext.eventLoop()`\nMotivation:\nCurrently, we return the context aware executor service from `RequestContext.blockingTaskExecutor`.\nHowever, `RequestContext.eventLoop()` returns the non context aware `eventLoop` which is not consistent.\n\nModifications:\n- Make `RequestContextAwareEventLoop` public and return it from `RequestContext.eventLoop()`.\n- Make `RequestContextAwareScheduledExecutorService` public and return it from `ServiceRequestContext.blockingTaskExecutor()`.\n- (Deprecated) `executor()`, `contextAwareExecutor()` and `contextAwareEventLoop()` in `RequestContext` are deprecated.\n\nResult:\n- Close #2629\n- The `EventLoop` from `RequestContext.eventLoop()` always set the `RequestContext` before executing any submitted tasks.\n- (Deprecated) `executor()`, `contextAwareExecutor()` and `contextAwareEventLoop()` in `RequestContext` are deprecated."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM3MjcwNzIx", "url": "https://github.com/line/armeria/pull/2834#pullrequestreview-437270721", "createdAt": "2020-06-25T08:19:50Z", "commit": {"oid": "6e10c4cba696482c577f498fa5a864476e3eb712"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQwODoxOTo1MFrOGowV0Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQwODoxOTo1MFrOGowV0Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTM4ODI0MQ==", "bodyText": "I think this class name is way too long.\nCan we rename classes that start with RequestContextAware to ContextAware?", "url": "https://github.com/line/armeria/pull/2834#discussion_r445388241", "createdAt": "2020-06-25T08:19:50Z", "author": {"login": "minwoox"}, "path": "core/src/main/java/com/linecorp/armeria/common/RequestContextAwareScheduledExecutorService.java", "diffHunk": "@@ -16,43 +16,95 @@\n \n package com.linecorp.armeria.common;\n \n+import static java.util.Objects.requireNonNull;\n+\n import java.util.concurrent.Callable;\n import java.util.concurrent.ScheduledExecutorService;\n import java.util.concurrent.ScheduledFuture;\n import java.util.concurrent.TimeUnit;\n \n-final class RequestContextAwareScheduledExecutorService extends RequestContextAwareExecutorService\n-        implements ScheduledExecutorService {\n+import com.google.common.base.MoreObjects;\n+\n+/**\n+ * A delegating {@link ScheduledExecutorService} that sets the {@link RequestContext} before executing any\n+ * submitted tasks.\n+ */\n+public final class RequestContextAwareScheduledExecutorService", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6e10c4cba696482c577f498fa5a864476e3eb712"}, "originalPosition": 19}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ff22cc21e3c4cb75ef4c33e74150ea5582f15d62", "author": {"user": {"login": "minwoox", "name": "minux"}}, "url": "https://github.com/line/armeria/commit/ff22cc21e3c4cb75ef4c33e74150ea5582f15d62", "committedDate": "2020-06-26T02:51:05Z", "message": "Rename to `ContextAware.*`"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM4MTM0NTc0", "url": "https://github.com/line/armeria/pull/2834#pullrequestreview-438134574", "createdAt": "2020-06-26T09:05:24Z", "commit": {"oid": "ff22cc21e3c4cb75ef4c33e74150ea5582f15d62"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQwOTowNToyNFrOGpZeEA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQwOTowNToyNFrOGpZeEA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjA2MjA5Ng==", "bodyText": "This method name seems mutable, not sure it follows our normal conventions.\nwithoutContext?", "url": "https://github.com/line/armeria/pull/2834#discussion_r446062096", "createdAt": "2020-06-26T09:05:24Z", "author": {"login": "anuraaga"}, "path": "core/src/main/java/com/linecorp/armeria/common/ContextAwareEventLoop.java", "diffHunk": "@@ -32,18 +36,51 @@\n import io.netty.util.concurrent.ScheduledFuture;\n \n /**\n- * A delegating {@link EventLoop} that makes sure all submitted tasks are\n- * executed within the {@link RequestContext}.\n+ * A delegating {@link EventLoop} that sets the {@link RequestContext} before executing any submitted tasks.\n  */\n-final class RequestContextAwareEventLoop extends RequestContextAwareExecutorService implements EventLoop {\n+public final class ContextAwareEventLoop extends ContextAwareExecutorService implements EventLoop {\n+\n+    /**\n+     * Returns a new {@link ContextAwareEventLoop} that sets the specified {@link RequestContext}\n+     * before executing any submitted tasks.\n+     */\n+    public static ContextAwareEventLoop of(RequestContext context, EventLoop eventLoop) {\n+        requireNonNull(context, \"context\");\n+        requireNonNull(eventLoop, \"eventLoop\");\n+        if (eventLoop instanceof ContextAwareEventLoop) {\n+            final RequestContext ctx = ((ContextAwareEventLoop) eventLoop).context();\n+            if (context == ctx) {\n+                return (ContextAwareEventLoop) eventLoop;\n+            }\n+            throw new IllegalArgumentException(\n+                    \"cannot create a \" + ContextAwareEventLoop.class.getSimpleName() +\n+                    \" using another \" + eventLoop);\n+        }\n+        return new ContextAwareEventLoop(context, eventLoop);\n+    }\n+\n+    private final EventLoop eventLoop;\n \n-    RequestContextAwareEventLoop(RequestContext context, EventLoop delegate) {\n-        super(context, delegate);\n+    private ContextAwareEventLoop(RequestContext context, EventLoop eventLoop) {\n+        super(context, eventLoop);\n+        this.eventLoop = eventLoop;\n     }\n \n+    /**\n+     * Returns the {@link EventLoop} that is executing submitted tasks without setting\n+     * the {@link RequestContext}.\n+     */\n+    public EventLoop detachContext() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff22cc21e3c4cb75ef4c33e74150ea5582f15d62"}, "originalPosition": 58}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "840d58f1cd4020399773a7d1e1ec2461990b7311", "author": {"user": {"login": "minwoox", "name": "minux"}}, "url": "https://github.com/line/armeria/commit/840d58f1cd4020399773a7d1e1ec2461990b7311", "committedDate": "2020-06-26T13:57:21Z", "message": "Address the comment by @anuraaga"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM4Njc0Njg2", "url": "https://github.com/line/armeria/pull/2834#pullrequestreview-438674686", "createdAt": "2020-06-27T05:37:31Z", "commit": {"oid": "840d58f1cd4020399773a7d1e1ec2461990b7311"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM4ODQ4NDg2", "url": "https://github.com/line/armeria/pull/2834#pullrequestreview-438848486", "createdAt": "2020-06-29T02:16:33Z", "commit": {"oid": "840d58f1cd4020399773a7d1e1ec2461990b7311"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQwMjoxNjozM1rOGqCrzQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQwMjoxNjozM1rOGqCrzQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjczNzM1Nw==", "bodyText": "How about extracting the interfaces from the implementations?", "url": "https://github.com/line/armeria/pull/2834#discussion_r446737357", "createdAt": "2020-06-29T02:16:33Z", "author": {"login": "trustin"}, "path": "core/src/main/java/com/linecorp/armeria/common/ContextAwareEventLoop.java", "diffHunk": "@@ -32,18 +36,51 @@\n import io.netty.util.concurrent.ScheduledFuture;\n \n /**\n- * A delegating {@link EventLoop} that makes sure all submitted tasks are\n- * executed within the {@link RequestContext}.\n+ * A delegating {@link EventLoop} that sets the {@link RequestContext} before executing any submitted tasks.\n  */\n-final class RequestContextAwareEventLoop extends RequestContextAwareExecutorService implements EventLoop {\n+public final class ContextAwareEventLoop extends ContextAwareExecutorService implements EventLoop {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "840d58f1cd4020399773a7d1e1ec2461990b7311"}, "originalPosition": 24}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d43742dbf726c59336def195b559615a8dd9044f", "author": {"user": {"login": "minwoox", "name": "minux"}}, "url": "https://github.com/line/armeria/commit/d43742dbf726c59336def195b559615a8dd9044f", "committedDate": "2020-06-29T12:25:32Z", "message": "Extrace interfaces"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "adde79f10a0a5cd4f2b5f88befbe9749660cf174", "author": {"user": {"login": "minwoox", "name": "minux"}}, "url": "https://github.com/line/armeria/commit/adde79f10a0a5cd4f2b5f88befbe9749660cf174", "committedDate": "2020-06-29T09:17:32Z", "message": "Extrace interfaces"}, "afterCommit": {"oid": "d43742dbf726c59336def195b559615a8dd9044f", "author": {"user": {"login": "minwoox", "name": "minux"}}, "url": "https://github.com/line/armeria/commit/d43742dbf726c59336def195b559615a8dd9044f", "committedDate": "2020-06-29T12:25:32Z", "message": "Extrace interfaces"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM5MTU3OTMy", "url": "https://github.com/line/armeria/pull/2834#pullrequestreview-439157932", "createdAt": "2020-06-29T13:44:53Z", "commit": {"oid": "d43742dbf726c59336def195b559615a8dd9044f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8c7a8876d67364589fceca6d1bc2cbe7822784c0", "author": {"user": {"login": "minwoox", "name": "minux"}}, "url": "https://github.com/line/armeria/commit/8c7a8876d67364589fceca6d1bc2cbe7822784c0", "committedDate": "2020-06-30T03:00:36Z", "message": "Merge branch 'master' into contextAwareEventLoop"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dc28a586a118031efcc52841094f548e87fb8cd5", "author": {"user": {"login": "minwoox", "name": "minux"}}, "url": "https://github.com/line/armeria/commit/dc28a586a118031efcc52841094f548e87fb8cd5", "committedDate": "2020-06-30T03:00:56Z", "message": "Merge branch 'master' into contextAwareEventLoop"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f98a56686c59569c74cfac390d1c9aaaed185265", "author": {"user": {"login": "trustin", "name": "Trustin Lee"}}, "url": "https://github.com/line/armeria/commit/f98a56686c59569c74cfac390d1c9aaaed185265", "committedDate": "2020-06-29T13:47:43Z", "message": "Merge branch 'master' into contextAwareEventLoop"}, "afterCommit": {"oid": "dc28a586a118031efcc52841094f548e87fb8cd5", "author": {"user": {"login": "minwoox", "name": "minux"}}, "url": "https://github.com/line/armeria/commit/dc28a586a118031efcc52841094f548e87fb8cd5", "committedDate": "2020-06-30T03:00:56Z", "message": "Merge branch 'master' into contextAwareEventLoop"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM5NzQ5OTU2", "url": "https://github.com/line/armeria/pull/2834#pullrequestreview-439749956", "createdAt": "2020-06-30T07:41:01Z", "commit": {"oid": "dc28a586a118031efcc52841094f548e87fb8cd5"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQwNzo0MTowMVrOGqvxIQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQwNzo1MDo0OFrOGqwIoQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQ3NjAwMQ==", "bodyText": "Suggestion: How about calling executor.withoutContext() than throwing an IAE?", "url": "https://github.com/line/armeria/pull/2834#discussion_r447476001", "createdAt": "2020-06-30T07:41:01Z", "author": {"login": "ikhoon"}, "path": "core/src/main/java/com/linecorp/armeria/common/ContextAwareScheduledExecutorService.java", "diffHunk": "@@ -0,0 +1,60 @@\n+/*\n+ * Copyright 2019 LINE Corporation\n+ *\n+ * LINE Corporation licenses this file to you under the Apache License,\n+ * version 2.0 (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *   https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package com.linecorp.armeria.common;\n+\n+import static java.util.Objects.requireNonNull;\n+\n+import java.util.concurrent.ScheduledExecutorService;\n+\n+/**\n+ * A delegating {@link ScheduledExecutorService} that sets the {@link RequestContext} before executing any\n+ * submitted tasks.\n+ */\n+public interface ContextAwareScheduledExecutorService extends ScheduledExecutorService {\n+\n+    /**\n+     * Returns a new {@link ContextAwareScheduledExecutorService} that sets the specified\n+     * {@link RequestContext} before executing any submitted tasks.\n+     */\n+    static ContextAwareScheduledExecutorService of(\n+            RequestContext context, ScheduledExecutorService executor) {\n+        requireNonNull(context, \"context\");\n+        requireNonNull(executor, \"executor\");\n+        if (executor instanceof ContextAwareScheduledExecutorService) {\n+            final RequestContext ctx = ((ContextAwareScheduledExecutorService) executor).context();\n+            if (context == ctx) {\n+                return (ContextAwareScheduledExecutorService) executor;\n+            }\n+            throw new IllegalArgumentException(\n+                    \"cannot create a \" + ContextAwareScheduledExecutorService.class.getSimpleName() +\n+                    \" using another \" + executor);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dc28a586a118031efcc52841094f548e87fb8cd5"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQ3ODMzOQ==", "bodyText": "Could be removed?", "url": "https://github.com/line/armeria/pull/2834#discussion_r447478339", "createdAt": "2020-06-30T07:45:00Z", "author": {"login": "ikhoon"}, "path": "core/src/main/java/com/linecorp/armeria/common/DefaultContextAwareScheduledExecutorService.java", "diffHunk": "@@ -0,0 +1,84 @@\n+/*\n+ * Copyright 2020 LINE Corporation\n+ *\n+ * LINE Corporation licenses this file to you under the Apache License,\n+ * version 2.0 (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *   https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package com.linecorp.armeria.common;\n+\n+import java.util.concurrent.Callable;\n+import java.util.concurrent.ScheduledExecutorService;\n+import java.util.concurrent.ScheduledFuture;\n+import java.util.concurrent.TimeUnit;\n+\n+import com.google.common.base.MoreObjects;\n+\n+final class DefaultContextAwareScheduledExecutorService\n+        extends ContextAwareExecutorService implements ContextAwareScheduledExecutorService {\n+\n+    private final ScheduledExecutorService executor;\n+\n+    DefaultContextAwareScheduledExecutorService(\n+            RequestContext context, ScheduledExecutorService executor) {\n+        super(context, executor);\n+        this.executor = executor;\n+    }\n+\n+    /**\n+     * Returns the {@link ScheduledExecutorService} that is executing submitted tasks without setting\n+     * the {@link RequestContext}.\n+     */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dc28a586a118031efcc52841094f548e87fb8cd5"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQ3ODQ5OA==", "bodyText": "Could be removed?", "url": "https://github.com/line/armeria/pull/2834#discussion_r447478498", "createdAt": "2020-06-30T07:45:13Z", "author": {"login": "ikhoon"}, "path": "core/src/main/java/com/linecorp/armeria/common/DefaultContextAwareScheduledExecutorService.java", "diffHunk": "@@ -0,0 +1,84 @@\n+/*\n+ * Copyright 2020 LINE Corporation\n+ *\n+ * LINE Corporation licenses this file to you under the Apache License,\n+ * version 2.0 (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *   https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package com.linecorp.armeria.common;\n+\n+import java.util.concurrent.Callable;\n+import java.util.concurrent.ScheduledExecutorService;\n+import java.util.concurrent.ScheduledFuture;\n+import java.util.concurrent.TimeUnit;\n+\n+import com.google.common.base.MoreObjects;\n+\n+final class DefaultContextAwareScheduledExecutorService\n+        extends ContextAwareExecutorService implements ContextAwareScheduledExecutorService {\n+\n+    private final ScheduledExecutorService executor;\n+\n+    DefaultContextAwareScheduledExecutorService(\n+            RequestContext context, ScheduledExecutorService executor) {\n+        super(context, executor);\n+        this.executor = executor;\n+    }\n+\n+    /**\n+     * Returns the {@link ScheduledExecutorService} that is executing submitted tasks without setting\n+     * the {@link RequestContext}.\n+     */\n+    @Override\n+    public ScheduledExecutorService withoutContext() {\n+        return executor;\n+    }\n+\n+    /**\n+     * Returns the {@link RequestContext} that is specified when creating\n+     * this {@link ContextAwareScheduledExecutorService}.\n+     */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dc28a586a118031efcc52841094f548e87fb8cd5"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQ4MTM3Nw==", "bodyText": "Don't we need to check whether the specified executor is ContextAwareExecutorService like you did in ContextAwareScheduledExecutorService.of?", "url": "https://github.com/line/armeria/pull/2834#discussion_r447481377", "createdAt": "2020-06-30T07:49:57Z", "author": {"login": "ikhoon"}, "path": "core/src/main/java/com/linecorp/armeria/common/RequestContext.java", "diffHunk": "@@ -469,15 +481,15 @@ default Executor makeContextAware(Executor executor) {\n      * sure to propagate the current {@link RequestContext} into the callback execution.\n      */\n     default ExecutorService makeContextAware(ExecutorService executor) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dc28a586a118031efcc52841094f548e87fb8cd5"}, "originalPosition": 68}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQ4MjAxNw==", "bodyText": "Ditto, need to check logger is ContextAwareLogger?", "url": "https://github.com/line/armeria/pull/2834#discussion_r447482017", "createdAt": "2020-06-30T07:50:48Z", "author": {"login": "ikhoon"}, "path": "core/src/main/java/com/linecorp/armeria/common/RequestContext.java", "diffHunk": "@@ -587,7 +599,7 @@ default Runnable makeContextAware(Runnable runnable) {\n      * @param logger the {@link Logger} to decorate.\n      */\n     default Logger makeContextAware(Logger logger) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dc28a586a118031efcc52841094f548e87fb8cd5"}, "originalPosition": 95}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "65af4df2ac34c287d15cb51e36c830be5ea25ed4", "author": {"user": {"login": "minwoox", "name": "minux"}}, "url": "https://github.com/line/armeria/commit/65af4df2ac34c287d15cb51e36c830be5ea25ed4", "committedDate": "2020-06-30T12:34:15Z", "message": "Add ContextHolder"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM5NzY3ODE3", "url": "https://github.com/line/armeria/pull/2834#pullrequestreview-439767817", "createdAt": "2020-06-30T08:04:11Z", "commit": {"oid": "dc28a586a118031efcc52841094f548e87fb8cd5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQwODowNDoxMVrOGqwpvA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQwODowNDoxMVrOGqwpvA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQ5MDQ5Mg==", "bodyText": "Forgot to remove this. \ud83d\ude04", "url": "https://github.com/line/armeria/pull/2834#discussion_r447490492", "createdAt": "2020-06-30T08:04:11Z", "author": {"login": "minwoox"}, "path": "core/src/main/java/com/linecorp/armeria/common/DefaultContextAwareScheduledExecutorService.java", "diffHunk": "@@ -0,0 +1,84 @@\n+/*\n+ * Copyright 2020 LINE Corporation\n+ *\n+ * LINE Corporation licenses this file to you under the Apache License,\n+ * version 2.0 (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *   https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package com.linecorp.armeria.common;\n+\n+import java.util.concurrent.Callable;\n+import java.util.concurrent.ScheduledExecutorService;\n+import java.util.concurrent.ScheduledFuture;\n+import java.util.concurrent.TimeUnit;\n+\n+import com.google.common.base.MoreObjects;\n+\n+final class DefaultContextAwareScheduledExecutorService\n+        extends ContextAwareExecutorService implements ContextAwareScheduledExecutorService {\n+\n+    private final ScheduledExecutorService executor;\n+\n+    DefaultContextAwareScheduledExecutorService(\n+            RequestContext context, ScheduledExecutorService executor) {\n+        super(context, executor);\n+        this.executor = executor;\n+    }\n+\n+    /**\n+     * Returns the {@link ScheduledExecutorService} that is executing submitted tasks without setting\n+     * the {@link RequestContext}.\n+     */", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQ3ODMzOQ=="}, "originalCommit": {"oid": "dc28a586a118031efcc52841094f548e87fb8cd5"}, "originalPosition": 39}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "943a585a285149eb43b18abbe67d28b9cf144d28", "author": {"user": {"login": "minwoox", "name": "minux"}}, "url": "https://github.com/line/armeria/commit/943a585a285149eb43b18abbe67d28b9cf144d28", "committedDate": "2020-06-30T12:41:50Z", "message": "Use new year"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQwNTI5NTk0", "url": "https://github.com/line/armeria/pull/2834#pullrequestreview-440529594", "createdAt": "2020-07-01T03:57:45Z", "commit": {"oid": "943a585a285149eb43b18abbe67d28b9cf144d28"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQwNTkyMDMz", "url": "https://github.com/line/armeria/pull/2834#pullrequestreview-440592033", "createdAt": "2020-07-01T06:54:38Z", "commit": {"oid": "65af4df2ac34c287d15cb51e36c830be5ea25ed4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwNjo1NDozOFrOGrZGkA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwNjo1NDozOFrOGrZGkA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODE1MzIzMg==", "bodyText": "validate -> ensure?", "url": "https://github.com/line/armeria/pull/2834#discussion_r448153232", "createdAt": "2020-07-01T06:54:38Z", "author": {"login": "trustin"}, "path": "core/src/main/java/com/linecorp/armeria/common/RequestContextUtil.java", "diffHunk": "@@ -0,0 +1,28 @@\n+/*\n+ * Copyright 2020 LINE Corporation\n+ *\n+ * LINE Corporation licenses this file to you under the Apache License,\n+ * version 2.0 (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *   https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package com.linecorp.armeria.common;\n+\n+final class RequestContextUtil {\n+\n+    static void validateSameCtx(RequestContext ctx, ContextHolder contextHolder, Class<?> type) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "65af4df2ac34c287d15cb51e36c830be5ea25ed4"}, "originalPosition": 20}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQwNTkyNzkz", "url": "https://github.com/line/armeria/pull/2834#pullrequestreview-440592793", "createdAt": "2020-07-01T06:55:57Z", "commit": {"oid": "943a585a285149eb43b18abbe67d28b9cf144d28"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "23d6398b6c6f908904cd1aa6b2f70ac3c870c3dc", "author": {"user": {"login": "minwoox", "name": "minux"}}, "url": "https://github.com/line/armeria/commit/23d6398b6c6f908904cd1aa6b2f70ac3c870c3dc", "committedDate": "2020-07-01T07:00:15Z", "message": "Address the comment by @trustin"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 269, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}