{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg2NjAzMjg2", "number": 2571, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQwNTozOToyNlrODnVsPw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQwMToxNzoyMlrODo8Ikg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyNTc2NDQ3OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/com/linecorp/armeria/common/util/TimeoutMode.java", "isResolved": true, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQwNTozOToyNlrOF1Rz_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QwNTo0OToxOVrOF14SNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQxMDY4Nw==", "bodyText": "Any thoughts on my comment here?\n#2535 (comment)\nIt prevents having adjective (from) and verb (extend) in the same enum which looks weird.", "url": "https://github.com/line/armeria/pull/2571#discussion_r391410687", "createdAt": "2020-03-12T05:39:26Z", "author": {"login": "anuraaga"}, "path": "core/src/main/java/com/linecorp/armeria/common/util/TimeoutMode.java", "diffHunk": "@@ -0,0 +1,37 @@\n+/*\n+ * Copyright 2020 LINE Corporation\n+ *\n+ * LINE Corporation licenses this file to you under the Apache License,\n+ * version 2.0 (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *   https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package com.linecorp.armeria.common.util;\n+\n+import com.linecorp.armeria.common.Request;\n+\n+/**\n+ * The timeout mode.\n+ */\n+public enum TimeoutMode {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "783d9c98b36d7f80b86903589c73a604f8dc4f1a"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQzMTgwNg==", "bodyText": "That's a good suggestion. \ud83d\udc4d I know that our previous discussion does not reach a decision.\nI'm still very open to this enum.\nThe word meaning of NOW and CURRENT are similar. So I hesitated to use CURRENT a little bit.\nHow about adding two kinds of API.(I'm not sure this is better.)\npublic TimeoutMode {\n    NOW, START\n}\n// Schedules timeout from specific timeout mode\nvoid setTimeout(TimeoutMode, Duration)\n// Extends the previous scheduled timeout\nvoid setTimeoutAfter(Duration)", "url": "https://github.com/line/armeria/pull/2571#discussion_r391431806", "createdAt": "2020-03-12T07:00:27Z", "author": {"login": "ikhoon"}, "path": "core/src/main/java/com/linecorp/armeria/common/util/TimeoutMode.java", "diffHunk": "@@ -0,0 +1,37 @@\n+/*\n+ * Copyright 2020 LINE Corporation\n+ *\n+ * LINE Corporation licenses this file to you under the Apache License,\n+ * version 2.0 (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *   https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package com.linecorp.armeria.common.util;\n+\n+import com.linecorp.armeria.common.Request;\n+\n+/**\n+ * The timeout mode.\n+ */\n+public enum TimeoutMode {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQxMDY4Nw=="}, "originalCommit": {"oid": "783d9c98b36d7f80b86903589c73a604f8dc4f1a"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTU1MDU2MA==", "bodyText": "How about FROM_OLD_TIMEOUT or FROM_PREV_TIMEOUT instead of EXTEND then? Or we could make the two verbs, like SET_FROM_NOW and SET_FROM_START. I think the latter sounds better.", "url": "https://github.com/line/armeria/pull/2571#discussion_r391550560", "createdAt": "2020-03-12T11:12:04Z", "author": {"login": "trustin"}, "path": "core/src/main/java/com/linecorp/armeria/common/util/TimeoutMode.java", "diffHunk": "@@ -0,0 +1,37 @@\n+/*\n+ * Copyright 2020 LINE Corporation\n+ *\n+ * LINE Corporation licenses this file to you under the Apache License,\n+ * version 2.0 (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *   https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package com.linecorp.armeria.common.util;\n+\n+import com.linecorp.armeria.common.Request;\n+\n+/**\n+ * The timeout mode.\n+ */\n+public enum TimeoutMode {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQxMDY4Nw=="}, "originalCommit": {"oid": "783d9c98b36d7f80b86903589c73a604f8dc4f1a"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjAxODA0Mw==", "bodyText": "Making all verbs with e.g. SET_* sounds good.", "url": "https://github.com/line/armeria/pull/2571#discussion_r392018043", "createdAt": "2020-03-13T03:50:38Z", "author": {"login": "anuraaga"}, "path": "core/src/main/java/com/linecorp/armeria/common/util/TimeoutMode.java", "diffHunk": "@@ -0,0 +1,37 @@\n+/*\n+ * Copyright 2020 LINE Corporation\n+ *\n+ * LINE Corporation licenses this file to you under the Apache License,\n+ * version 2.0 (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *   https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package com.linecorp.armeria.common.util;\n+\n+import com.linecorp.armeria.common.Request;\n+\n+/**\n+ * The timeout mode.\n+ */\n+public enum TimeoutMode {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQxMDY4Nw=="}, "originalCommit": {"oid": "783d9c98b36d7f80b86903589c73a604f8dc4f1a"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjAyMDkyMQ==", "bodyText": "SET_* is explicit, but we already have set verb in the method name.\nctx.setTimeout(TimeoutMode.SET_FROM_NOW, Duration.ofSeconds(1))\nMaybe we could remove set from the method names?\nctx.timeout(TimeoutMode.SET_FROM_NOW, Duration.ofSeconds(1));\nctx.timeout(TimeoutMode.SET_FROM_START, Duration.ofSeconds(1));\nctx.timeout(TimeoutMode.EXTEND, Duration.ofSeconds(1));\n\n// a shortcut for TimeoutMode.SET_FROM_NOW\nctx.setTimeout(Duration.ofSeconds(1));", "url": "https://github.com/line/armeria/pull/2571#discussion_r392020921", "createdAt": "2020-03-13T04:05:53Z", "author": {"login": "ikhoon"}, "path": "core/src/main/java/com/linecorp/armeria/common/util/TimeoutMode.java", "diffHunk": "@@ -0,0 +1,37 @@\n+/*\n+ * Copyright 2020 LINE Corporation\n+ *\n+ * LINE Corporation licenses this file to you under the Apache License,\n+ * version 2.0 (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *   https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package com.linecorp.armeria.common.util;\n+\n+import com.linecorp.armeria.common.Request;\n+\n+/**\n+ * The timeout mode.\n+ */\n+public enum TimeoutMode {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQxMDY4Nw=="}, "originalCommit": {"oid": "783d9c98b36d7f80b86903589c73a604f8dc4f1a"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjA0MTAxNQ==", "bodyText": "Removing set from method names SGTM", "url": "https://github.com/line/armeria/pull/2571#discussion_r392041015", "createdAt": "2020-03-13T05:49:19Z", "author": {"login": "anuraaga"}, "path": "core/src/main/java/com/linecorp/armeria/common/util/TimeoutMode.java", "diffHunk": "@@ -0,0 +1,37 @@\n+/*\n+ * Copyright 2020 LINE Corporation\n+ *\n+ * LINE Corporation licenses this file to you under the Apache License,\n+ * version 2.0 (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *   https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package com.linecorp.armeria.common.util;\n+\n+import com.linecorp.armeria.common.Request;\n+\n+/**\n+ * The timeout mode.\n+ */\n+public enum TimeoutMode {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQxMDY4Nw=="}, "originalCommit": {"oid": "783d9c98b36d7f80b86903589c73a604f8dc4f1a"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyNjYzNzYyOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/com/linecorp/armeria/client/ClientRequestContext.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxMTowNzozMFrOF1aNcw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxMToxODoxNlrOF1aiEQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTU0ODI3NQ==", "bodyText": "Perhaps the sensible default would be TimeoutMode.FROM_NOW?", "url": "https://github.com/line/armeria/pull/2571#discussion_r391548275", "createdAt": "2020-03-12T11:07:30Z", "author": {"login": "trustin"}, "path": "core/src/main/java/com/linecorp/armeria/client/ClientRequestContext.java", "diffHunk": "@@ -444,17 +485,57 @@ ClientRequestContext newDerivedContext(RequestId id, @Nullable HttpRequest req,\n      * @param responseTimeoutMillis the amount of time allowed in milliseconds from\n      *                              the beginning of the response\n      *\n-     * @deprecated Use {@link #extendResponseTimeoutMillis(long)}, {@link #setResponseTimeoutAfterMillis(long)},\n-     *             {@link #setResponseTimeoutAtMillis(long)} or {@link #clearResponseTimeout()}\n      */\n-    @Deprecated\n-    void setResponseTimeoutMillis(long responseTimeoutMillis);\n+    default void setResponseTimeoutMillis(long responseTimeoutMillis) {\n+        setResponseTimeoutMillis(TimeoutMode.FROM_START, responseTimeoutMillis);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "783d9c98b36d7f80b86903589c73a604f8dc4f1a"}, "originalPosition": 70}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTU1MzU1Mw==", "bodyText": "Oops... thanks for pointing it out!\ud83d\ude4f", "url": "https://github.com/line/armeria/pull/2571#discussion_r391553553", "createdAt": "2020-03-12T11:18:16Z", "author": {"login": "ikhoon"}, "path": "core/src/main/java/com/linecorp/armeria/client/ClientRequestContext.java", "diffHunk": "@@ -444,17 +485,57 @@ ClientRequestContext newDerivedContext(RequestId id, @Nullable HttpRequest req,\n      * @param responseTimeoutMillis the amount of time allowed in milliseconds from\n      *                              the beginning of the response\n      *\n-     * @deprecated Use {@link #extendResponseTimeoutMillis(long)}, {@link #setResponseTimeoutAfterMillis(long)},\n-     *             {@link #setResponseTimeoutAtMillis(long)} or {@link #clearResponseTimeout()}\n      */\n-    @Deprecated\n-    void setResponseTimeoutMillis(long responseTimeoutMillis);\n+    default void setResponseTimeoutMillis(long responseTimeoutMillis) {\n+        setResponseTimeoutMillis(TimeoutMode.FROM_START, responseTimeoutMillis);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTU0ODI3NQ=="}, "originalCommit": {"oid": "783d9c98b36d7f80b86903589c73a604f8dc4f1a"}, "originalPosition": 70}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyNjY1MzUwOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/com/linecorp/armeria/internal/common/TimeoutScheduler.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxMToxMjoyOFrOF1aXGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxMToxMjoyOFrOF1aXGw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTU1MDc0Nw==", "bodyText": "Could use switch-case", "url": "https://github.com/line/armeria/pull/2571#discussion_r391550747", "createdAt": "2020-03-12T11:12:28Z", "author": {"login": "trustin"}, "path": "core/src/main/java/com/linecorp/armeria/internal/common/TimeoutScheduler.java", "diffHunk": "@@ -61,6 +66,16 @@ public void clearTimeout() {\n         }\n     }\n \n+    public void setTimeoutMillis(TimeoutMode mode, long timeoutMillis) {\n+        if (mode == FROM_NOW) {\n+            setTimeoutAfterMillis(timeoutMillis);\n+        } else if (mode == FROM_START) {\n+            setTimeoutMillis(timeoutMillis);\n+        } else if (mode == EXTEND) {\n+            extendTimeoutMillis(timeoutMillis);\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "783d9c98b36d7f80b86903589c73a604f8dc4f1a"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0MjU0NzAxOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/com/linecorp/armeria/internal/common/TimeoutScheduler.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQwMToxNjowNVrOF3zQ5Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQwMToxNjowNVrOF3zQ5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDA1NTkwOQ==", "bodyText": "this could be private", "url": "https://github.com/line/armeria/pull/2571#discussion_r394055909", "createdAt": "2020-03-18T01:16:05Z", "author": {"login": "minwoox"}, "path": "core/src/main/java/com/linecorp/armeria/internal/common/TimeoutScheduler.java", "diffHunk": "@@ -61,6 +63,20 @@ public void clearTimeout() {\n         }\n     }\n \n+    public void setTimeoutMillis(TimeoutMode mode, long timeoutMillis) {\n+        switch (mode) {\n+            case SET_FROM_NOW:\n+                setTimeoutAfterMillis(timeoutMillis);\n+                break;\n+            case SET_FROM_START:\n+                setTimeoutMillis(timeoutMillis);\n+                break;\n+            case EXTEND:\n+                extendTimeoutMillis(timeoutMillis);\n+                break;\n+        }\n+    }\n+\n     public void setTimeoutMillis(long timeoutMillis) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "162a58bed6d1fb4ed6c37290ef736e102a31cd01"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0MjU0ODY2OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/com/linecorp/armeria/client/DefaultClientRequestContext.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQwMToxNzoyMlrOF3zR7g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQwMToxNzoyMlrOF3zR7g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDA1NjE3NA==", "bodyText": "nit: null check", "url": "https://github.com/line/armeria/pull/2571#discussion_r394056174", "createdAt": "2020-03-18T01:17:22Z", "author": {"login": "minwoox"}, "path": "core/src/main/java/com/linecorp/armeria/client/DefaultClientRequestContext.java", "diffHunk": "@@ -439,45 +439,16 @@ public void clearResponseTimeout() {\n     }\n \n     @Override\n-    public void setResponseTimeoutMillis(long responseTimeoutMillis) {\n-        timeoutScheduler.setTimeoutMillis(responseTimeoutMillis);\n-    }\n-\n-    @Override\n-    public void setResponseTimeout(Duration responseTimeout) {\n-        setResponseTimeoutMillis(requireNonNull(responseTimeout, \"responseTimeout\").toMillis());\n-    }\n-\n-    @Override\n-    public void extendResponseTimeoutMillis(long adjustmentMillis) {\n-        timeoutScheduler.extendTimeoutMillis(adjustmentMillis);\n-    }\n-\n-    @Override\n-    public void extendResponseTimeout(Duration adjustment) {\n-        extendResponseTimeoutMillis(requireNonNull(adjustment, \"adjustment\").toMillis());\n-    }\n-\n-    @Override\n-    public void setResponseTimeoutAfterMillis(long responseTimeoutMillis) {\n-        timeoutScheduler.setTimeoutAfterMillis(responseTimeoutMillis);\n-    }\n-\n-    @Override\n-    public void setResponseTimeoutAfter(Duration responseTimeout) {\n-        setResponseTimeoutAfterMillis(requireNonNull(responseTimeout, \"responseTimeout\").toMillis());\n+    public void setResponseTimeoutMillis(TimeoutMode mode, long responseTimeoutMillis) {\n+        timeoutScheduler.setTimeoutMillis(mode, responseTimeoutMillis);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "162a58bed6d1fb4ed6c37290ef736e102a31cd01"}, "originalPosition": 48}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2766, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}