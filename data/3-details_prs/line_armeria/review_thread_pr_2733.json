{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIxMTMzMzc0", "number": 2733, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQwMjoyODo1NVrOD-zxmQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQwMjoyODo1NVrOD-zxmQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3MTg2NTg1OnYy", "diffSide": "RIGHT", "path": "grpc/src/main/java/com/linecorp/armeria/internal/client/grpc/GrpcClientFactory.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQwMjoyODo1NVrOGZIw2w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQwNTo0MzowNFrOGZLTxA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTAxMTE2Mw==", "bodyText": "How about casting Object to Class<?>?\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        final Object kClass = valueMethod.invoke(annotation, null);\n          \n          \n            \n                        return Class.forName(kClass.toString().substring(\"class \".length()));\n          \n          \n            \n                        final Class<?> kClass = (Class<?>) valueMethod.invoke(annotation, null);\n          \n          \n            \n                        return Class.forName(kClass.getName());", "url": "https://github.com/line/armeria/pull/2733#discussion_r429011163", "createdAt": "2020-05-22T02:28:55Z", "author": {"login": "ikhoon"}, "path": "grpc/src/main/java/com/linecorp/armeria/internal/client/grpc/GrpcClientFactory.java", "diffHunk": "@@ -216,4 +238,29 @@ private static IllegalArgumentException newUnknownClientTypeException(Class<?> c\n         }\n         return ImmutableList.copyOf(descriptor.getMethods());\n     }\n+\n+    private static Class<?> generatedStub(Annotation annotation, Method valueMethod) {\n+        try {\n+            final Object kClass = valueMethod.invoke(annotation, null);\n+            return Class.forName(kClass.toString().substring(\"class \".length()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "df16fba2a7a7ebc0c68735d775249503928f50d0"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTAzMTg0OQ==", "bodyText": "Why not just returning kClass then? No point of doing Class.forName()", "url": "https://github.com/line/armeria/pull/2733#discussion_r429031849", "createdAt": "2020-05-22T04:06:06Z", "author": {"login": "trustin"}, "path": "grpc/src/main/java/com/linecorp/armeria/internal/client/grpc/GrpcClientFactory.java", "diffHunk": "@@ -216,4 +238,29 @@ private static IllegalArgumentException newUnknownClientTypeException(Class<?> c\n         }\n         return ImmutableList.copyOf(descriptor.getMethods());\n     }\n+\n+    private static Class<?> generatedStub(Annotation annotation, Method valueMethod) {\n+        try {\n+            final Object kClass = valueMethod.invoke(annotation, null);\n+            return Class.forName(kClass.toString().substring(\"class \".length()));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTAxMTE2Mw=="}, "originalCommit": {"oid": "df16fba2a7a7ebc0c68735d775249503928f50d0"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTAzNTQ4Ng==", "bodyText": "Why not just returning kClass then? No point of doing Class.forName()\n\nAhh, you are right! \ud83e\udd23", "url": "https://github.com/line/armeria/pull/2733#discussion_r429035486", "createdAt": "2020-05-22T04:23:18Z", "author": {"login": "ikhoon"}, "path": "grpc/src/main/java/com/linecorp/armeria/internal/client/grpc/GrpcClientFactory.java", "diffHunk": "@@ -216,4 +238,29 @@ private static IllegalArgumentException newUnknownClientTypeException(Class<?> c\n         }\n         return ImmutableList.copyOf(descriptor.getMethods());\n     }\n+\n+    private static Class<?> generatedStub(Annotation annotation, Method valueMethod) {\n+        try {\n+            final Object kClass = valueMethod.invoke(annotation, null);\n+            return Class.forName(kClass.toString().substring(\"class \".length()));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTAxMTE2Mw=="}, "originalCommit": {"oid": "df16fba2a7a7ebc0c68735d775249503928f50d0"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTA1Mjg2OA==", "bodyText": "Oops fixed. \ud83d\ude05", "url": "https://github.com/line/armeria/pull/2733#discussion_r429052868", "createdAt": "2020-05-22T05:43:04Z", "author": {"login": "minwoox"}, "path": "grpc/src/main/java/com/linecorp/armeria/internal/client/grpc/GrpcClientFactory.java", "diffHunk": "@@ -216,4 +238,29 @@ private static IllegalArgumentException newUnknownClientTypeException(Class<?> c\n         }\n         return ImmutableList.copyOf(descriptor.getMethods());\n     }\n+\n+    private static Class<?> generatedStub(Annotation annotation, Method valueMethod) {\n+        try {\n+            final Object kClass = valueMethod.invoke(annotation, null);\n+            return Class.forName(kClass.toString().substring(\"class \".length()));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTAxMTE2Mw=="}, "originalCommit": {"oid": "df16fba2a7a7ebc0c68735d775249503928f50d0"}, "originalPosition": 61}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2646, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}