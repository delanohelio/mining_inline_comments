{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgwMDc2MzI0", "number": 2533, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQwODo0MjoxNlrODi-_9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxNToyNTo0MFrODjHtzA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4MDEwMzU2OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/com/linecorp/armeria/common/stream/NeverInvokedSubscriber.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQwODo0MjoxNlrOFuiXSg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQwOTo0NzowNVrOFukq4w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDM0MTgzNA==", "bodyText": "I would say none of these methods should be invoked. The exceptions that were thrown in this class are like an assertion, i.e. better leaving as is?", "url": "https://github.com/line/armeria/pull/2533#discussion_r384341834", "createdAt": "2020-02-26T08:42:16Z", "author": {"login": "trustin"}, "path": "core/src/main/java/com/linecorp/armeria/common/stream/NeverInvokedSubscriber.java", "diffHunk": "@@ -30,21 +34,22 @@\n \n     @Override\n     public void onSubscribe(Subscription s) {\n-        throw new IllegalStateException(\"onSubscribe(\" + s + ')');\n+        s.cancel();\n+        logger.warn(\"onSubscribe({}) is invoked.\", s);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c1b4983f31516f7a6586428b4fd0d1fd00389390"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDM3OTYxOQ==", "bodyText": "Sounds good. Let me revert this class. \ud83d\ude09", "url": "https://github.com/line/armeria/pull/2533#discussion_r384379619", "createdAt": "2020-02-26T09:47:05Z", "author": {"login": "minwoox"}, "path": "core/src/main/java/com/linecorp/armeria/common/stream/NeverInvokedSubscriber.java", "diffHunk": "@@ -30,21 +34,22 @@\n \n     @Override\n     public void onSubscribe(Subscription s) {\n-        throw new IllegalStateException(\"onSubscribe(\" + s + ')');\n+        s.cancel();\n+        logger.warn(\"onSubscribe({}) is invoked.\", s);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDM0MTgzNA=="}, "originalCommit": {"oid": "c1b4983f31516f7a6586428b4fd0d1fd00389390"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4MDEwNjg3OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/com/linecorp/armeria/internal/server/ResponseConversionUtil.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQwODo0MzoxOFrOFuiZNw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQwOTo0OTozMFrOFukwYA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDM0MjMyNw==", "bodyText": "Probably better not logging, because a response can be closed by a remote peer at any time?", "url": "https://github.com/line/armeria/pull/2533#discussion_r384342327", "createdAt": "2020-02-26T08:43:18Z", "author": {"login": "trustin"}, "path": "core/src/main/java/com/linecorp/armeria/internal/server/ResponseConversionUtil.java", "diffHunk": "@@ -248,7 +252,9 @@ public void onComplete() {\n                 return;\n             }\n             if (!trailers.isEmpty()) {\n-                writer.write(trailers);\n+                if (!writer.tryWrite(trailers)) {\n+                    logger.warn(\"Failed to write a trailers: {}\", trailers);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c1b4983f31516f7a6586428b4fd0d1fd00389390"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDM4MTAyNA==", "bodyText": "Removed that. Thanks!", "url": "https://github.com/line/armeria/pull/2533#discussion_r384381024", "createdAt": "2020-02-26T09:49:30Z", "author": {"login": "minwoox"}, "path": "core/src/main/java/com/linecorp/armeria/internal/server/ResponseConversionUtil.java", "diffHunk": "@@ -248,7 +252,9 @@ public void onComplete() {\n                 return;\n             }\n             if (!trailers.isEmpty()) {\n-                writer.write(trailers);\n+                if (!writer.tryWrite(trailers)) {\n+                    logger.warn(\"Failed to write a trailers: {}\", trailers);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDM0MjMyNw=="}, "originalCommit": {"oid": "c1b4983f31516f7a6586428b4fd0d1fd00389390"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4MDY1MDM5OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/com/linecorp/armeria/client/HttpRequestSubscriber.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxMToxMzoxNFrOFunkxw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxMTozMDozMVrOFuoERQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDQyNzIwNw==", "bodyText": "I guess IllegalStateException is better in this class because the exception does not go to the caller.", "url": "https://github.com/line/armeria/pull/2533#discussion_r384427207", "createdAt": "2020-02-26T11:13:14Z", "author": {"login": "trustin"}, "path": "core/src/main/java/com/linecorp/armeria/client/HttpRequestSubscriber.java", "diffHunk": "@@ -246,7 +247,8 @@ public void onNext(HttpObject o) {\n                 if (o instanceof HttpHeaders) {\n                     final HttpHeaders trailers = (HttpHeaders) o;\n                     if (trailers.contains(HttpHeaderNames.STATUS)) {\n-                        throw newIllegalStateException(\"published a trailers with status: \" + o);\n+                        fail(new IllegalArgumentException(\"published a trailers with status: \" + o));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bdd155b6ca767d71ec1931179798ffbbf9068f69"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDQzMzI4OA==", "bodyText": "Never mind. It's good as it is.", "url": "https://github.com/line/armeria/pull/2533#discussion_r384433288", "createdAt": "2020-02-26T11:26:01Z", "author": {"login": "trustin"}, "path": "core/src/main/java/com/linecorp/armeria/client/HttpRequestSubscriber.java", "diffHunk": "@@ -246,7 +247,8 @@ public void onNext(HttpObject o) {\n                 if (o instanceof HttpHeaders) {\n                     final HttpHeaders trailers = (HttpHeaders) o;\n                     if (trailers.contains(HttpHeaderNames.STATUS)) {\n-                        throw newIllegalStateException(\"published a trailers with status: \" + o);\n+                        fail(new IllegalArgumentException(\"published a trailers with status: \" + o));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDQyNzIwNw=="}, "originalCommit": {"oid": "bdd155b6ca767d71ec1931179798ffbbf9068f69"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDQzMzc1NA==", "bodyText": "I slightly prefer to leave this as it is because the user will see this exception from RequestLog even though the exception does not go to the caller right away.\nHad a chat with @trustin and he is fine with both exceptions.\nBut I'm not so strong on this. \ud83d\ude06 Any idea? @anuraaga, @ikhoon", "url": "https://github.com/line/armeria/pull/2533#discussion_r384433754", "createdAt": "2020-02-26T11:27:03Z", "author": {"login": "minwoox"}, "path": "core/src/main/java/com/linecorp/armeria/client/HttpRequestSubscriber.java", "diffHunk": "@@ -246,7 +247,8 @@ public void onNext(HttpObject o) {\n                 if (o instanceof HttpHeaders) {\n                     final HttpHeaders trailers = (HttpHeaders) o;\n                     if (trailers.contains(HttpHeaderNames.STATUS)) {\n-                        throw newIllegalStateException(\"published a trailers with status: \" + o);\n+                        fail(new IllegalArgumentException(\"published a trailers with status: \" + o));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDQyNzIwNw=="}, "originalCommit": {"oid": "bdd155b6ca767d71ec1931179798ffbbf9068f69"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDQzNTI2OQ==", "bodyText": "Okay then, let me just use IllegalArgumentException. \ud83d\ude09", "url": "https://github.com/line/armeria/pull/2533#discussion_r384435269", "createdAt": "2020-02-26T11:30:31Z", "author": {"login": "minwoox"}, "path": "core/src/main/java/com/linecorp/armeria/client/HttpRequestSubscriber.java", "diffHunk": "@@ -246,7 +247,8 @@ public void onNext(HttpObject o) {\n                 if (o instanceof HttpHeaders) {\n                     final HttpHeaders trailers = (HttpHeaders) o;\n                     if (trailers.contains(HttpHeaderNames.STATUS)) {\n-                        throw newIllegalStateException(\"published a trailers with status: \" + o);\n+                        fail(new IllegalArgumentException(\"published a trailers with status: \" + o));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDQyNzIwNw=="}, "originalCommit": {"oid": "bdd155b6ca767d71ec1931179798ffbbf9068f69"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4MTUzMTY0OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/com/linecorp/armeria/client/endpoint/healthcheck/HttpHealthChecker.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxNToyNTo0MFrOFuv_3A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxNToyNTo0MFrOFuv_3A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDU2NTIxMg==", "bodyText": "These comments seem very noisy. Do we need them? I feel like just leaving it to a SafeSubscriber abstract class that always adds try / catch is better than adding these comments that reduce the readability of the code.", "url": "https://github.com/line/armeria/pull/2533#discussion_r384565212", "createdAt": "2020-02-26T15:25:40Z", "author": {"login": "anuraaga"}, "path": "core/src/main/java/com/linecorp/armeria/client/endpoint/healthcheck/HttpHealthChecker.java", "diffHunk": "@@ -174,6 +174,10 @@ public void onSubscribe(Subscription subscription) {\n \n         @Override\n         public void onNext(HttpObject obj) {\n+            // There's no chance that an exception is raised from the underlying logic, so we don't do", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bdd155b6ca767d71ec1931179798ffbbf9068f69"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2693, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}