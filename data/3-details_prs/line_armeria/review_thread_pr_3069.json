{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg5MDg0NTYz", "number": 3069, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQwNzoxNDo1OFrOEk2J1A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMFQxNDowMzo1OFrOElbUPA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3MDcxNDQ0OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/com/linecorp/armeria/common/util/Version.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQwNzoxNDo1OFrOHUA65w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQwNzoyNToyNFrOHUBOfg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDc0ODY0Nw==", "bodyText": "Could you use {@linkplain #getAll(ClassLoader) getAll(Version.class.getClassLoader())}?", "url": "https://github.com/line/armeria/pull/3069#discussion_r490748647", "createdAt": "2020-09-18T07:14:58Z", "author": {"login": "minwoox"}, "path": "core/src/main/java/com/linecorp/armeria/common/util/Version.java", "diffHunk": "@@ -111,7 +111,7 @@ public static Version get(String artifactId, ClassLoader classLoader) {\n \n     /**\n      * Retrieves the version information of Armeria artifacts.\n-     * This method is a shortcut for {@code identify(Version.class.getClassLoader())}.\n+     * This method is a shortcut for {@code getAll(Version.class.getClassLoader())}.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6fac9a10f83d3cdd01573afcb1a7cd07cc94290a"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDc1MzY2Mg==", "bodyText": "updated also.", "url": "https://github.com/line/armeria/pull/3069#discussion_r490753662", "createdAt": "2020-09-18T07:25:24Z", "author": {"login": "wooyeong"}, "path": "core/src/main/java/com/linecorp/armeria/common/util/Version.java", "diffHunk": "@@ -111,7 +111,7 @@ public static Version get(String artifactId, ClassLoader classLoader) {\n \n     /**\n      * Retrieves the version information of Armeria artifacts.\n-     * This method is a shortcut for {@code identify(Version.class.getClassLoader())}.\n+     * This method is a shortcut for {@code getAll(Version.class.getClassLoader())}.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDc0ODY0Nw=="}, "originalCommit": {"oid": "6fac9a10f83d3cdd01573afcb1a7cd07cc94290a"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3MDcxODk4OnYy", "diffSide": "RIGHT", "path": "site/src/pages/docs/client-retry.mdx", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQwNzoxNjo0MlrOHUA9yA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQwNzoyMzozNlrOHUBLAw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDc0OTM4NA==", "bodyText": "Could you use ensureAvailable(RequestLogProperty.RESPONSE_HEADERS) instead?", "url": "https://github.com/line/armeria/pull/3069#discussion_r490749384", "createdAt": "2020-09-18T07:16:42Z", "author": {"login": "minwoox"}, "path": "site/src/pages/docs/client-retry.mdx", "diffHunk": "@@ -71,7 +71,7 @@ new RetryRule() {\n             }\n         }\n \n-        if (ctx.log().responseHeaders().status() == HttpStatus.TOO_MANY_REQUESTS) {\n+        if (ctx.log().partial().responseHeaders().status() == HttpStatus.TOO_MANY_REQUESTS) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6fac9a10f83d3cdd01573afcb1a7cd07cc94290a"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDc1Mjc3MQ==", "bodyText": "Fixed!", "url": "https://github.com/line/armeria/pull/3069#discussion_r490752771", "createdAt": "2020-09-18T07:23:36Z", "author": {"login": "wooyeong"}, "path": "site/src/pages/docs/client-retry.mdx", "diffHunk": "@@ -71,7 +71,7 @@ new RetryRule() {\n             }\n         }\n \n-        if (ctx.log().responseHeaders().status() == HttpStatus.TOO_MANY_REQUESTS) {\n+        if (ctx.log().partial().responseHeaders().status() == HttpStatus.TOO_MANY_REQUESTS) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDc0OTM4NA=="}, "originalCommit": {"oid": "6fac9a10f83d3cdd01573afcb1a7cd07cc94290a"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3MDg1MDYyOnYy", "diffSide": "RIGHT", "path": "site/src/pages/docs/client-retry.mdx", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQwNzo1NzozMFrOHUCNMg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQwODozNzo0MlrOHUDkPw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDc2OTcxNA==", "bodyText": "could you break the line, please?\nor extract the status to a variable so that the line doesn't get too long?", "url": "https://github.com/line/armeria/pull/3069#discussion_r490769714", "createdAt": "2020-09-18T07:57:30Z", "author": {"login": "minwoox"}, "path": "site/src/pages/docs/client-retry.mdx", "diffHunk": "@@ -71,7 +71,7 @@ new RetryRule() {\n             }\n         }\n \n-        if (ctx.log().responseHeaders().status() == HttpStatus.TOO_MANY_REQUESTS) {\n+        if (ctx.log().ensureAvailable(RequestLogProperty.RESPONSE_HEADERS).responseHeaders().status() == HttpStatus.TOO_MANY_REQUESTS) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc7bb46fab7e97375e62788fede5d049fb189e10"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDc5MTk5OQ==", "bodyText": "introduced a variable.", "url": "https://github.com/line/armeria/pull/3069#discussion_r490791999", "createdAt": "2020-09-18T08:37:42Z", "author": {"login": "wooyeong"}, "path": "site/src/pages/docs/client-retry.mdx", "diffHunk": "@@ -71,7 +71,7 @@ new RetryRule() {\n             }\n         }\n \n-        if (ctx.log().responseHeaders().status() == HttpStatus.TOO_MANY_REQUESTS) {\n+        if (ctx.log().ensureAvailable(RequestLogProperty.RESPONSE_HEADERS).responseHeaders().status() == HttpStatus.TOO_MANY_REQUESTS) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDc2OTcxNA=="}, "originalCommit": {"oid": "cc7bb46fab7e97375e62788fede5d049fb189e10"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3NjgwMjM2OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/com/linecorp/armeria/common/util/Version.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMFQxNDowMjo0MFrOHU6p7Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQwNjo0OTo1MlrOHVCecg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTY5NDU3Mw==", "bodyText": "@link is better than @linkplain in this case because the text is code.", "url": "https://github.com/line/armeria/pull/3069#discussion_r491694573", "createdAt": "2020-09-20T14:02:40Z", "author": {"login": "trustin"}, "path": "core/src/main/java/com/linecorp/armeria/common/util/Version.java", "diffHunk": "@@ -111,7 +111,7 @@ public static Version get(String artifactId, ClassLoader classLoader) {\n \n     /**\n      * Retrieves the version information of Armeria artifacts.\n-     * This method is a shortcut for {@code identify(Version.class.getClassLoader())}.\n+     * This method is a shortcut for {@linkplain #getAll(ClassLoader) getAll(Version.class.getClassLoader())}.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c58f8e8033b6f0a6c017cbc469671c7418eb7e7d"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTgyMjcwNg==", "bodyText": "Updated.", "url": "https://github.com/line/armeria/pull/3069#discussion_r491822706", "createdAt": "2020-09-21T06:49:52Z", "author": {"login": "wooyeong"}, "path": "core/src/main/java/com/linecorp/armeria/common/util/Version.java", "diffHunk": "@@ -111,7 +111,7 @@ public static Version get(String artifactId, ClassLoader classLoader) {\n \n     /**\n      * Retrieves the version information of Armeria artifacts.\n-     * This method is a shortcut for {@code identify(Version.class.getClassLoader())}.\n+     * This method is a shortcut for {@linkplain #getAll(ClassLoader) getAll(Version.class.getClassLoader())}.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTY5NDU3Mw=="}, "originalCommit": {"oid": "c58f8e8033b6f0a6c017cbc469671c7418eb7e7d"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3NjgwMzE2OnYy", "diffSide": "RIGHT", "path": "site/src/pages/docs/client-retry.mdx", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMFQxNDowMzo1OFrOHU6qVQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQwNjo0OTo0MFrOHVCeHQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTY5NDY3Nw==", "bodyText": "I don't think we need to do this because the response headers are always available at this point. It can be unavailable only when cause != null.", "url": "https://github.com/line/armeria/pull/3069#discussion_r491694677", "createdAt": "2020-09-20T14:03:58Z", "author": {"login": "trustin"}, "path": "site/src/pages/docs/client-retry.mdx", "diffHunk": "@@ -71,7 +71,8 @@ new RetryRule() {\n             }\n         }\n \n-        if (ctx.log().responseHeaders().status() == HttpStatus.TOO_MANY_REQUESTS) {\n+        HttpStatus status = ctx.log().ensureAvailable(RequestLogProperty.RESPONSE_HEADERS).responseHeaders().status();\n+        if (status == HttpStatus.TOO_MANY_REQUESTS) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c58f8e8033b6f0a6c017cbc469671c7418eb7e7d"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTY5NDk1OA==", "bodyText": "Ah, looks like we can reach here even when cause != null. I think we should guard with isAvailable() instead of using ensureAvailable(), so that shouldRetry() does not raise an exception but just return next().", "url": "https://github.com/line/armeria/pull/3069#discussion_r491694958", "createdAt": "2020-09-20T14:07:04Z", "author": {"login": "trustin"}, "path": "site/src/pages/docs/client-retry.mdx", "diffHunk": "@@ -71,7 +71,8 @@ new RetryRule() {\n             }\n         }\n \n-        if (ctx.log().responseHeaders().status() == HttpStatus.TOO_MANY_REQUESTS) {\n+        HttpStatus status = ctx.log().ensureAvailable(RequestLogProperty.RESPONSE_HEADERS).responseHeaders().status();\n+        if (status == HttpStatus.TOO_MANY_REQUESTS) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTY5NDY3Nw=="}, "originalCommit": {"oid": "c58f8e8033b6f0a6c017cbc469671c7418eb7e7d"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTc1MzE3Mg==", "bodyText": "It can be unavailable only when cause != null.\n\nWell, it's available even when cause != null. (With the status HttpStatus.UNKNOWN)\nSo I think we can use partial() which was used at first. Sorry about it. \ud83d\ude05", "url": "https://github.com/line/armeria/pull/3069#discussion_r491753172", "createdAt": "2020-09-21T00:20:38Z", "author": {"login": "minwoox"}, "path": "site/src/pages/docs/client-retry.mdx", "diffHunk": "@@ -71,7 +71,8 @@ new RetryRule() {\n             }\n         }\n \n-        if (ctx.log().responseHeaders().status() == HttpStatus.TOO_MANY_REQUESTS) {\n+        HttpStatus status = ctx.log().ensureAvailable(RequestLogProperty.RESPONSE_HEADERS).responseHeaders().status();\n+        if (status == HttpStatus.TOO_MANY_REQUESTS) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTY5NDY3Nw=="}, "originalCommit": {"oid": "c58f8e8033b6f0a6c017cbc469671c7418eb7e7d"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTgyMjYyMQ==", "bodyText": "Updated back!", "url": "https://github.com/line/armeria/pull/3069#discussion_r491822621", "createdAt": "2020-09-21T06:49:40Z", "author": {"login": "wooyeong"}, "path": "site/src/pages/docs/client-retry.mdx", "diffHunk": "@@ -71,7 +71,8 @@ new RetryRule() {\n             }\n         }\n \n-        if (ctx.log().responseHeaders().status() == HttpStatus.TOO_MANY_REQUESTS) {\n+        HttpStatus status = ctx.log().ensureAvailable(RequestLogProperty.RESPONSE_HEADERS).responseHeaders().status();\n+        if (status == HttpStatus.TOO_MANY_REQUESTS) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTY5NDY3Nw=="}, "originalCommit": {"oid": "c58f8e8033b6f0a6c017cbc469671c7418eb7e7d"}, "originalPosition": 6}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1891, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}