{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI2MzAwNTMw", "number": 2757, "title": "Make the requests go to the URI that is specified when `WebClient` is\u2026", "bodyText": "\u2026 created.\nMotivation:\nA user might implement a simple proxy server:\nWebClient webClient = WebClient.of(\"http://otherbackend.com\").build();\nServerBuilder proxyServerBuilder = ...\nproxyServerBuilder.serviceUnder(\"/\", (ctx, originalReq) -> webClient.execute(originalReq));\nHowever, if the originalReq contains the authority header which points proxyServerBuilder,\nthen the request does not go to the otherbackend.com but to the proxy server again which incurs an infinite loop.\nModifications:\n\nMake the requests always go to the backend If the WebClient is created with a backend URI.\n\n(Breaking) IllegalArgumentException is raised if a request whose path is an absolute path is sent with a WebClient which is created a base URI\n\n\n\nResult:\n\nYou no longer see infinite requests loop when building a proxy server.", "createdAt": "2020-06-02T01:44:16Z", "url": "https://github.com/line/armeria/pull/2757", "merged": true, "mergeCommit": {"oid": "2eae617156d01b23440f71d70d7dab9f79ec97cc"}, "closed": true, "closedAt": "2020-06-03T05:56:29Z", "author": {"login": "minwoox"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcnA2vNgH2gAyNDI2MzAwNTMwOmZkMzJjZjBhNTJlMzA2ZmJhMjYwYmQzNTM2ZGJiZTFjMjAwZGYyNDc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcnUERpAFqTQyMjYyNzMwNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "fd32cf0a52e306fba260bd3536dbbe1c200df247", "author": {"user": {"login": "minwoox", "name": "minux"}}, "url": "https://github.com/line/armeria/commit/fd32cf0a52e306fba260bd3536dbbe1c200df247", "committedDate": "2020-06-01T14:08:55Z", "message": "Make the requests go to the URI that is specified when `WebClient` is created.\nMotivation:\nA user might implement a simple proxy server:\n```java\nWebClient webClient = WebClient.of(\"http://otherbackend.com\").build();\nServerBuilder proxyServerBuilder = ...\nproxyServerBuilder.serviceUnder(\"/\", (ctx, originalReq) -> webClient.execute(originalReq));\n```\nHowever, if the `originalReq` contains the authority header which points `proxyServerBuilder`,\nthen the request does not go to the `otherbackend.com` but to the proxy server again which incurs an infinite loop.\n\nModifications:\n- Make the requests always go to the backend If the `WebClient` is created with a backend URI.\n  - `IllegalArgumentException` is raised if a request whose path is an absolute path is sent with a `WebClient` which is created a base URI\n\nResult:\n- You no longer see infinite requests loop when building a proxy server."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIyMjk3Mjk4", "url": "https://github.com/line/armeria/pull/2757#pullrequestreview-422297298", "createdAt": "2020-06-02T02:14:17Z", "commit": {"oid": "fd32cf0a52e306fba260bd3536dbbe1c200df247"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQwMjoxNDoxN1rOGdf2dQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQwMjoxNDoxN1rOGdf2dQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzU4MzczMw==", "bodyText": "nit: How about abortRequest?", "url": "https://github.com/line/armeria/pull/2757#discussion_r433583733", "createdAt": "2020-06-02T02:14:17Z", "author": {"login": "ikhoon"}, "path": "core/src/main/java/com/linecorp/armeria/client/DefaultWebClient.java", "diffHunk": "@@ -104,4 +94,9 @@ private HttpResponse execute(EndpointGroup endpointGroup, HttpRequest req) {\n     public HttpResponse execute(AggregatedHttpRequest aggregatedReq) {\n         return execute(aggregatedReq.toHttpRequest());\n     }\n+\n+    private static HttpResponse failureResponse(HttpRequest req, IllegalArgumentException cause) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fd32cf0a52e306fba260bd3536dbbe1c200df247"}, "originalPosition": 87}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIyMzI5MzYz", "url": "https://github.com/line/armeria/pull/2757#pullrequestreview-422329363", "createdAt": "2020-06-02T04:12:00Z", "commit": {"oid": "fd32cf0a52e306fba260bd3536dbbe1c200df247"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQwNDoxMjowMFrOGdhbrg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQwNDoxMzozN1rOGdhc9Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzYwOTY0Ng==", "bodyText": "How about \"A URI with scheme and authority must be specified: \"?", "url": "https://github.com/line/armeria/pull/2757#discussion_r433609646", "createdAt": "2020-06-02T04:12:00Z", "author": {"login": "trustin"}, "path": "core/src/main/java/com/linecorp/armeria/client/DefaultWebClient.java", "diffHunk": "@@ -44,36 +39,32 @@\n \n     @Override\n     public HttpResponse execute(HttpRequest req) {\n-        URI uri;\n-\n-        if (isAbsoluteUri(req.path())) {\n-            try {\n-                uri = URI.create(req.path());\n-            } catch (Exception ex) {\n-                logger.warn(\"Failed to create URI: {}\", req.path(), ex);\n-                uri = null;\n-            }\n-        } else {\n-            if (req.scheme() != null && req.authority() != null) {\n+        if (Clients.isUndefinedUri(uri())) {\n+            final URI uri;\n+            if (isAbsoluteUri(req.path())) {\n+                try {\n+                    uri = URI.create(req.path());\n+                } catch (Exception ex) {\n+                    return failureResponse(req, new IllegalArgumentException(\n+                            \"Failed to create a URI: \" + req.path(), ex));\n+                }\n+            } else if (req.scheme() != null && req.authority() != null) {\n                 uri = req.uri();\n             } else {\n-                uri = null;\n+                return failureResponse(req, new IllegalArgumentException(\"no authority: \" + req.path()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fd32cf0a52e306fba260bd3536dbbe1c200df247"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzYwOTk3Mw==", "bodyText": "Cannot send a request with a \":path\" header that contains a URI with authority, because the client was created with a base URI ?", "url": "https://github.com/line/armeria/pull/2757#discussion_r433609973", "createdAt": "2020-06-02T04:13:37Z", "author": {"login": "trustin"}, "path": "core/src/main/java/com/linecorp/armeria/client/DefaultWebClient.java", "diffHunk": "@@ -44,36 +39,32 @@\n \n     @Override\n     public HttpResponse execute(HttpRequest req) {\n-        URI uri;\n-\n-        if (isAbsoluteUri(req.path())) {\n-            try {\n-                uri = URI.create(req.path());\n-            } catch (Exception ex) {\n-                logger.warn(\"Failed to create URI: {}\", req.path(), ex);\n-                uri = null;\n-            }\n-        } else {\n-            if (req.scheme() != null && req.authority() != null) {\n+        if (Clients.isUndefinedUri(uri())) {\n+            final URI uri;\n+            if (isAbsoluteUri(req.path())) {\n+                try {\n+                    uri = URI.create(req.path());\n+                } catch (Exception ex) {\n+                    return failureResponse(req, new IllegalArgumentException(\n+                            \"Failed to create a URI: \" + req.path(), ex));\n+                }\n+            } else if (req.scheme() != null && req.authority() != null) {\n                 uri = req.uri();\n             } else {\n-                uri = null;\n+                return failureResponse(req, new IllegalArgumentException(\"no authority: \" + req.path()));\n             }\n-        }\n-\n-        if (uri != null) {\n             final Endpoint endpoint = Endpoint.parse(uri.getAuthority());\n             final String query = uri.getRawQuery();\n             final String path = uri.getRawPath();\n             final HttpRequest newReq = req.withHeaders(req.headers().toBuilder()\n-                    .path(query == null ? path : path + '?' + query));\n+                                                          .path(query == null ? path : path + '?' + query));\n             return execute(endpoint, newReq);\n         }\n \n-        if (Clients.isUndefinedUri(uri())) {\n-            final IllegalArgumentException cause = new IllegalArgumentException(\"no authority: \" + req.path());\n-            req.abort(cause);\n-            return HttpResponse.ofFailure(cause);\n+        if (isAbsoluteUri(req.path())) {\n+            return failureResponse(req, new IllegalArgumentException(\n+                    \"Cannot send a request with an absolute path when the client is created with a base URI. \" +", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fd32cf0a52e306fba260bd3536dbbe1c200df247"}, "originalPosition": 67}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8bedaa5daa8238dcd4e4a4f2788fadd94145d320", "author": {"user": {"login": "minwoox", "name": "minux"}}, "url": "https://github.com/line/armeria/commit/8bedaa5daa8238dcd4e4a4f2788fadd94145d320", "committedDate": "2020-06-02T07:38:50Z", "message": "Address comments by @trustin and @ikhoon"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIyNDI1OTY4", "url": "https://github.com/line/armeria/pull/2757#pullrequestreview-422425968", "createdAt": "2020-06-02T07:51:19Z", "commit": {"oid": "8bedaa5daa8238dcd4e4a4f2788fadd94145d320"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQwNzo1MToxOVrOGdmFfg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQwNzo1MToxOVrOGdmFfg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzY4NTg4Ng==", "bodyText": "Realized that a user can specify scheme and authority in headers. How about this:\n\"Scheme and authority must be specified in \\\":path\\\" or in \\\":scheme\\\" and \\\":authority\\\". :path=\" + \nreq.path() + \", :scheme=\" + req.scheme() + \", :authority=\" + req.authority()", "url": "https://github.com/line/armeria/pull/2757#discussion_r433685886", "createdAt": "2020-06-02T07:51:19Z", "author": {"login": "trustin"}, "path": "core/src/main/java/com/linecorp/armeria/client/DefaultWebClient.java", "diffHunk": "@@ -44,36 +39,33 @@\n \n     @Override\n     public HttpResponse execute(HttpRequest req) {\n-        URI uri;\n-\n-        if (isAbsoluteUri(req.path())) {\n-            try {\n-                uri = URI.create(req.path());\n-            } catch (Exception ex) {\n-                logger.warn(\"Failed to create URI: {}\", req.path(), ex);\n-                uri = null;\n-            }\n-        } else {\n-            if (req.scheme() != null && req.authority() != null) {\n+        if (Clients.isUndefinedUri(uri())) {\n+            final URI uri;\n+            if (isAbsoluteUri(req.path())) {\n+                try {\n+                    uri = URI.create(req.path());\n+                } catch (Exception ex) {\n+                    return abortRequestAndReturnFailureResponse(req, new IllegalArgumentException(\n+                            \"Failed to create a URI: \" + req.path(), ex));\n+                }\n+            } else if (req.scheme() != null && req.authority() != null) {\n                 uri = req.uri();\n             } else {\n-                uri = null;\n+                return abortRequestAndReturnFailureResponse(req, new IllegalArgumentException(\n+                        \"A URI with scheme and authority must be specified. path: \" + req.path()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8bedaa5daa8238dcd4e4a4f2788fadd94145d320"}, "originalPosition": 48}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e40f47ce3aa71b11534099030ef178d13ad7c2f6", "author": {"user": {"login": "minwoox", "name": "minux"}}, "url": "https://github.com/line/armeria/commit/e40f47ce3aa71b11534099030ef178d13ad7c2f6", "committedDate": "2020-06-02T08:44:36Z", "message": "Address the comment by @trustin"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIyNDY4NDUz", "url": "https://github.com/line/armeria/pull/2757#pullrequestreview-422468453", "createdAt": "2020-06-02T08:46:32Z", "commit": {"oid": "e40f47ce3aa71b11534099030ef178d13ad7c2f6"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIyNjI3MzA1", "url": "https://github.com/line/armeria/pull/2757#pullrequestreview-422627305", "createdAt": "2020-06-02T12:31:54Z", "commit": {"oid": "e40f47ce3aa71b11534099030ef178d13ad7c2f6"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 143, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}