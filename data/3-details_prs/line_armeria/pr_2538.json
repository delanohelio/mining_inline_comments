{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgwNzA3MTcy", "number": 2538, "title": "Require request path when building a client", "bodyText": "Related: #2525\nMotivation:\nThe behavior of the path() method in client builder classes is\nconfusing. It throws an exception when the builder was created with a\nURI while it doesn't when created with an EndpointGroup.\nModifications:\n\nRemoved path() method from the builder classes.\nRemoved ClientBuilder.serializationFormat().\nAdded various factory methods that require a path to the clients and\nclient builders.\nAdded various factory methods that accepts String in lieu of\nScheme or SessionProtocol for convenience.\n\nResult:\n\nLess confusion.\nMore convenience.\nCloses #2525", "createdAt": "2020-02-27T08:38:47Z", "url": "https://github.com/line/armeria/pull/2538", "merged": true, "mergeCommit": {"oid": "09b6e0f61f435279f658bdc6c12050d34ecf4eb4"}, "closed": true, "closedAt": "2020-02-28T10:52:22Z", "author": {"login": "trustin"}, "timelineItems": {"totalCount": 16, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcIXL2PAH2gAyMzgwNzA3MTcyOjVkNjExY2Q4YzkzMDFkNmU0ZGYwMzdkMzg2MmM3ZWM1Y2JiMDljNGM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcIpkOUgFqTM2NjE3NTkyMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "5d611cd8c9301d6e4df037d3862c7ec5cbb09c4c", "author": {"user": {"login": "trustin", "name": "Trustin Lee"}}, "url": "https://github.com/line/armeria/commit/5d611cd8c9301d6e4df037d3862c7ec5cbb09c4c", "committedDate": "2020-02-27T08:38:14Z", "message": "Require request path when building a client\n\nRelated: #2525\n\nMotivation:\n\nThe behavior of the `path()` method in client builder classes is\nconfusing. It throws an exception when the builder was created with a\nURI while it doesn't when created with an `EndpointGroup`.\n\nModifications:\n\n- Removed `path()` method from the builder classes.\n- Added various factory methods that require a path to the clients and\n  client builders.\n- Added various factory methods that accepts `String` in lieu of\n  `Scheme` or `SessionProtocol` for convenience.\n- Slightly changed the behavior of `ClientBuilder.serializationFormat()`,\n  so it doesn't throw an exception even when the builder was created\n  with a URI.\n- Added a variant of `ClientBuilder.serializationFormat()` that accept a\n  `String`.\n\nResult:\n\n- Less confusion.\n- More convenience.\n- Closes #2525"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dc75d559ef3b6a2edd13d5aa84aa37e2ac223abe", "author": {"user": {"login": "trustin", "name": "Trustin Lee"}}, "url": "https://github.com/line/armeria/commit/dc75d559ef3b6a2edd13d5aa84aa37e2ac223abe", "committedDate": "2020-02-27T08:40:50Z", "message": "Add missing null check"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY1NTA5ODA2", "url": "https://github.com/line/armeria/pull/2538#pullrequestreview-365509806", "createdAt": "2020-02-27T09:03:48Z", "commit": {"oid": "dc75d559ef3b6a2edd13d5aa84aa37e2ac223abe"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QwOTowMzo0OFrOFvJ_wA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QwOTozNzo0OVrOFvLIGA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDk5MTE2OA==", "bodyText": "nit:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * Sets the {@link SerializationFormat} of the client from the specified {@code String}.\n          \n          \n            \n                 * Sets the {@link SerializationFormat} of the client from the specified {@code format}.", "url": "https://github.com/line/armeria/pull/2538#discussion_r384991168", "createdAt": "2020-02-27T09:03:48Z", "author": {"login": "ikhoon"}, "path": "core/src/main/java/com/linecorp/armeria/client/ClientBuilder.java", "diffHunk": "@@ -67,96 +66,43 @@\n     @Nullable\n     private final EndpointGroup endpointGroup;\n     @Nullable\n-    private final Scheme scheme;\n-    @Nullable\n-    private final SessionProtocol protocol;\n-    @Nullable\n-    private String path;\n-\n-    private SerializationFormat format = SerializationFormat.NONE;\n-\n-    /**\n-     * Creates a new {@link ClientBuilder} that builds the client that connects to the specified {@code uri}.\n-     *\n-     * @deprecated Use {@link Clients#builder(String)}.\n-     */\n-    @Deprecated\n-    public ClientBuilder(String uri) {\n-        this(URI.create(requireNonNull(uri, \"uri\")));\n-    }\n-\n-    /**\n-     * Creates a new {@link ClientBuilder} that builds the client that connects to the specified {@link URI}.\n-     *\n-     * @deprecated Use {@link Clients#builder(URI)}.\n-     */\n-    @Deprecated\n-    public ClientBuilder(URI uri) {\n-        this(requireNonNull(uri, \"uri\"), null, null, null);\n-    }\n-\n-    /**\n-     * Creates a new {@link ClientBuilder} that builds the client that connects to the specified\n-     * {@link Endpoint} with the {@code scheme}.\n-     *\n-     * @deprecated Use {@link Clients#builder(String, EndpointGroup)}.\n-     */\n-    @Deprecated\n-    public ClientBuilder(String scheme, Endpoint endpoint) {\n-        this(Scheme.parse(requireNonNull(scheme, \"scheme\")), requireNonNull(endpoint, \"endpoint\"));\n-    }\n-\n-    /**\n-     * Creates a new {@link ClientBuilder} that builds the client that connects to the specified\n-     * {@link Endpoint} with the {@link Scheme}.\n-     *\n-     * @deprecated Use {@link Clients#builder(Scheme, EndpointGroup)}.\n-     */\n-    @Deprecated\n-    public ClientBuilder(Scheme scheme, Endpoint endpoint) {\n-        this(null, requireNonNull(scheme, \"scheme\"), null, requireNonNull(endpoint, \"endpoint\"));\n-    }\n+    private final String path;\n+    private Scheme scheme;\n+    private boolean updatedScheme;\n \n-    /**\n-     * Creates a new {@link ClientBuilder} that builds the client that connects to the specified\n-     * {@link Endpoint} with the {@link SessionProtocol}.\n-     *\n-     * @deprecated Use {@link Clients#builder(SessionProtocol, EndpointGroup)}.\n-     */\n-    @Deprecated\n-    public ClientBuilder(SessionProtocol protocol, Endpoint endpoint) {\n-        this(null, null, requireNonNull(protocol, \"protocol\"), requireNonNull(endpoint, \"endpoint\"));\n+    ClientBuilder(URI uri) {\n+        checkArgument(uri.getScheme() != null, \"uri must have scheme: %s\", uri);\n+        checkArgument(uri.getRawAuthority() != null, \"uri must have authority: %s\", uri);\n+        this.uri = uri;\n+        endpointGroup = null;\n+        path = null;\n+        scheme = Scheme.parse(uri.getScheme());\n     }\n \n-    ClientBuilder(@Nullable URI uri, @Nullable Scheme scheme, @Nullable SessionProtocol protocol,\n-                  @Nullable EndpointGroup endpointGroup) {\n-        this.uri = uri;\n-        this.scheme = scheme;\n-        this.protocol = protocol;\n+    ClientBuilder(Scheme scheme, EndpointGroup endpointGroup, @Nullable String path) {\n+        if (path != null) {\n+            checkArgument(path.startsWith(\"/\"),\n+                          \"path: %s (expected: an absolute path starting with '/')\", path);\n+        }\n+        uri = null;\n         this.endpointGroup = endpointGroup;\n+        this.path = path;\n+        this.scheme = scheme;\n     }\n \n     /**\n-     * Sets the {@code path} of the client.\n+     * Sets the {@link SerializationFormat} of the client from the specified {@code String}.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dc75d559ef3b6a2edd13d5aa84aa37e2ac223abe"}, "originalPosition": 101}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTAwMTcwMA==", "bodyText": "nit: I don't think all SessionProtocal is supported.\nHow about:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * @throws IllegalArgumentException if the {@code protocol} is not one of the fields\n          \n          \n            \n                 *                                  in {@link SessionProtocol}\n          \n          \n            \n                 * @throws IllegalArgumentException if the {@code protocol} is not one of the fields\n          \n          \n            \n                 *                                  in {@link SessionProtocol#httpValues()} or {@link SessionProtocol#httpsValues()}", "url": "https://github.com/line/armeria/pull/2538#discussion_r385001700", "createdAt": "2020-02-27T09:23:52Z", "author": {"login": "ikhoon"}, "path": "core/src/main/java/com/linecorp/armeria/client/WebClient.java", "diffHunk": "@@ -312,15 +352,50 @@ static WebClientBuilder builder(URI uri) {\n         return new WebClientBuilder(uri);\n     }\n \n+    /**\n+     * Returns a new {@link WebClientBuilder} created with the specified {@code protocol}\n+     * and base {@link EndpointGroup}.\n+     *\n+     * @throws IllegalArgumentException if the {@code protocol} is not one of the fields\n+     *                                  in {@link SessionProtocol}\n+     */\n+    static WebClientBuilder builder(String protocol, EndpointGroup endpointGroup) {\n+        return builder(SessionProtocol.of(requireNonNull(protocol, \"protocol\")), endpointGroup);\n+    }\n+\n     /**\n      * Returns a new {@link WebClientBuilder} created with the specified {@link SessionProtocol}\n      * and base {@link EndpointGroup}.\n      *\n+     * @throws IllegalArgumentException if the {@code protocol} is not one of the fields\n+     *                                  in {@link SessionProtocol}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dc75d559ef3b6a2edd13d5aa84aa37e2ac223abe"}, "originalPosition": 83}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTAwNDEzNQ==", "bodyText": "nit: Change sessionProtocol to protocol for consistency?\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                static WebClientBuilder builder(SessionProtocol sessionProtocol, EndpointGroup endpointGroup,\n          \n          \n            \n                static WebClientBuilder builder(SessionProtocol protocol, EndpointGroup endpointGroup,", "url": "https://github.com/line/armeria/pull/2538#discussion_r385004135", "createdAt": "2020-02-27T09:28:15Z", "author": {"login": "ikhoon"}, "path": "core/src/main/java/com/linecorp/armeria/client/WebClient.java", "diffHunk": "@@ -312,15 +352,50 @@ static WebClientBuilder builder(URI uri) {\n         return new WebClientBuilder(uri);\n     }\n \n+    /**\n+     * Returns a new {@link WebClientBuilder} created with the specified {@code protocol}\n+     * and base {@link EndpointGroup}.\n+     *\n+     * @throws IllegalArgumentException if the {@code protocol} is not one of the fields\n+     *                                  in {@link SessionProtocol}\n+     */\n+    static WebClientBuilder builder(String protocol, EndpointGroup endpointGroup) {\n+        return builder(SessionProtocol.of(requireNonNull(protocol, \"protocol\")), endpointGroup);\n+    }\n+\n     /**\n      * Returns a new {@link WebClientBuilder} created with the specified {@link SessionProtocol}\n      * and base {@link EndpointGroup}.\n      *\n+     * @throws IllegalArgumentException if the {@code protocol} is not one of the fields\n+     *                                  in {@link SessionProtocol}\n+     */\n+    static WebClientBuilder builder(SessionProtocol protocol, EndpointGroup endpointGroup) {\n+        return builder(protocol, endpointGroup, null);\n+    }\n+\n+    /**\n+     * Returns a new {@link WebClientBuilder} created with the specified {@code protocol}.\n+     * base {@link EndpointGroup} and path.\n+     *\n+     * @throws IllegalArgumentException if the {@code protocol} is not one of the fields\n+     *                                  in {@link SessionProtocol}\n+     */\n+    static WebClientBuilder builder(String protocol, EndpointGroup endpointGroup, @Nullable String path) {\n+        return builder(SessionProtocol.of(requireNonNull(protocol, \"protocol\")),\n+                       endpointGroup, path);\n+    }\n+\n+    /**\n+     * Returns a new {@link WebClientBuilder} created with the specified {@link SessionProtocol},\n+     * base {@link EndpointGroup} and path.\n+     *\n      * @throws IllegalArgumentException if the {@code sessionProtocol} is not one of the fields\n      *                                  in {@link SessionProtocol}\n      */\n-    static WebClientBuilder builder(SessionProtocol sessionProtocol, EndpointGroup endpointGroup) {\n-        return new WebClientBuilder(sessionProtocol, endpointGroup);\n+    static WebClientBuilder builder(SessionProtocol sessionProtocol, EndpointGroup endpointGroup,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dc75d559ef3b6a2edd13d5aa84aa37e2ac223abe"}, "originalPosition": 110}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTAwOTY4OA==", "bodyText": "How about making path non-null? Because this builder already have\nbuilder(String protocol, EndpointGroup endpointGroup).", "url": "https://github.com/line/armeria/pull/2538#discussion_r385009688", "createdAt": "2020-02-27T09:37:49Z", "author": {"login": "ikhoon"}, "path": "core/src/main/java/com/linecorp/armeria/client/WebClient.java", "diffHunk": "@@ -312,15 +352,50 @@ static WebClientBuilder builder(URI uri) {\n         return new WebClientBuilder(uri);\n     }\n \n+    /**\n+     * Returns a new {@link WebClientBuilder} created with the specified {@code protocol}\n+     * and base {@link EndpointGroup}.\n+     *\n+     * @throws IllegalArgumentException if the {@code protocol} is not one of the fields\n+     *                                  in {@link SessionProtocol}\n+     */\n+    static WebClientBuilder builder(String protocol, EndpointGroup endpointGroup) {\n+        return builder(SessionProtocol.of(requireNonNull(protocol, \"protocol\")), endpointGroup);\n+    }\n+\n     /**\n      * Returns a new {@link WebClientBuilder} created with the specified {@link SessionProtocol}\n      * and base {@link EndpointGroup}.\n      *\n+     * @throws IllegalArgumentException if the {@code protocol} is not one of the fields\n+     *                                  in {@link SessionProtocol}\n+     */\n+    static WebClientBuilder builder(SessionProtocol protocol, EndpointGroup endpointGroup) {\n+        return builder(protocol, endpointGroup, null);\n+    }\n+\n+    /**\n+     * Returns a new {@link WebClientBuilder} created with the specified {@code protocol}.\n+     * base {@link EndpointGroup} and path.\n+     *\n+     * @throws IllegalArgumentException if the {@code protocol} is not one of the fields\n+     *                                  in {@link SessionProtocol}\n+     */\n+    static WebClientBuilder builder(String protocol, EndpointGroup endpointGroup, @Nullable String path) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dc75d559ef3b6a2edd13d5aa84aa37e2ac223abe"}, "originalPosition": 96}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6d1193e48080091c4d2c6c8e2a6674071d56aa64", "author": {"user": {"login": "trustin", "name": "Trustin Lee"}}, "url": "https://github.com/line/armeria/commit/6d1193e48080091c4d2c6c8e2a6674071d56aa64", "committedDate": "2020-02-27T09:55:31Z", "message": "Update core/src/main/java/com/linecorp/armeria/client/ClientBuilder.java\n\nCo-Authored-By: Ikhun Um <ih.pert@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "24ca6048df7e035ef8cdb40a22a5ab37548da6f9", "author": {"user": {"login": "trustin", "name": "Trustin Lee"}}, "url": "https://github.com/line/armeria/commit/24ca6048df7e035ef8cdb40a22a5ab37548da6f9", "committedDate": "2020-02-27T09:55:48Z", "message": "Update core/src/main/java/com/linecorp/armeria/client/WebClient.java\n\nCo-Authored-By: Ikhun Um <ih.pert@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c97f08e08c945960126aed99f6c6a0a1f167c444", "author": {"user": {"login": "trustin", "name": "Trustin Lee"}}, "url": "https://github.com/line/armeria/commit/c97f08e08c945960126aed99f6c6a0a1f167c444", "committedDate": "2020-02-27T09:56:07Z", "message": "Update core/src/main/java/com/linecorp/armeria/client/WebClient.java\n\nCo-Authored-By: Ikhun Um <ih.pert@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "624b8f6fd5b3085170deb8969d1a6730ec5ae029", "author": {"user": {"login": "trustin", "name": "Trustin Lee"}}, "url": "https://github.com/line/armeria/commit/624b8f6fd5b3085170deb8969d1a6730ec5ae029", "committedDate": "2020-02-27T09:59:52Z", "message": "Address the comments from @ikhoon"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0f43dbbeec7aa866ed230a2b65aa90cbc86f453a", "author": {"user": {"login": "trustin", "name": "Trustin Lee"}}, "url": "https://github.com/line/armeria/commit/0f43dbbeec7aa866ed230a2b65aa90cbc86f453a", "committedDate": "2020-02-27T10:13:16Z", "message": "Make `path` non-null"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY1NTYwNDUx", "url": "https://github.com/line/armeria/pull/2538#pullrequestreview-365560451", "createdAt": "2020-02-27T10:16:06Z", "commit": {"oid": "0f43dbbeec7aa866ed230a2b65aa90cbc86f453a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxMDoxNjowNlrOFvMegA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxMDoxNjowNlrOFvMegA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTAzMTgwOA==", "bodyText": "Shouldn't we update this too? \ud83d\ude00", "url": "https://github.com/line/armeria/pull/2538#discussion_r385031808", "createdAt": "2020-02-27T10:16:06Z", "author": {"login": "ikhoon"}, "path": "retrofit2/src/main/java/com/linecorp/armeria/client/retrofit2/ArmeriaRetrofit.java", "diffHunk": "@@ -78,14 +104,40 @@ public static ArmeriaRetrofitBuilder builder(URI baseUrl) {\n         return builder(WebClient.of(baseUrl));\n     }\n \n+    /**\n+     * Returns a new {@link ArmeriaRetrofitBuilder} that builds a client that sends requests to\n+     * the specified {@link EndpointGroup} using the specified {@code protocol}.\n+     */\n+    public static ArmeriaRetrofitBuilder builder(String protocol, EndpointGroup endpointGroup) {\n+        return builder(SessionProtocol.of(requireNonNull(protocol, \"protocol\")), endpointGroup);\n+    }\n+\n     /**\n      * Returns a new {@link ArmeriaRetrofitBuilder} that builds a client that sends requests to\n      * the specified {@link EndpointGroup} using the specified {@link SessionProtocol}.\n      */\n     public static ArmeriaRetrofitBuilder builder(SessionProtocol protocol, EndpointGroup endpointGroup) {\n+        return builder(protocol, endpointGroup, null);\n+    }\n+\n+    /**\n+     * Returns a new {@link ArmeriaRetrofitBuilder} that builds a client that sends requests to\n+     * the specified {@link EndpointGroup} using the specified {@link SessionProtocol} and {@code path}.\n+     */\n+    public static ArmeriaRetrofitBuilder builder(String protocol, EndpointGroup endpointGroup,\n+                                                 @Nullable String path) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0f43dbbeec7aa866ed230a2b65aa90cbc86f453a"}, "originalPosition": 72}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY1NTYwNjk4", "url": "https://github.com/line/armeria/pull/2538#pullrequestreview-365560698", "createdAt": "2020-02-27T10:16:27Z", "commit": {"oid": "0f43dbbeec7aa866ed230a2b65aa90cbc86f453a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxMDoxNjoyN1rOFvMfOw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxMDoxNjoyN1rOFvMfOw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTAzMTk5NQ==", "bodyText": "Ditto", "url": "https://github.com/line/armeria/pull/2538#discussion_r385031995", "createdAt": "2020-02-27T10:16:27Z", "author": {"login": "ikhoon"}, "path": "retrofit2/src/main/java/com/linecorp/armeria/client/retrofit2/ArmeriaRetrofit.java", "diffHunk": "@@ -78,14 +104,40 @@ public static ArmeriaRetrofitBuilder builder(URI baseUrl) {\n         return builder(WebClient.of(baseUrl));\n     }\n \n+    /**\n+     * Returns a new {@link ArmeriaRetrofitBuilder} that builds a client that sends requests to\n+     * the specified {@link EndpointGroup} using the specified {@code protocol}.\n+     */\n+    public static ArmeriaRetrofitBuilder builder(String protocol, EndpointGroup endpointGroup) {\n+        return builder(SessionProtocol.of(requireNonNull(protocol, \"protocol\")), endpointGroup);\n+    }\n+\n     /**\n      * Returns a new {@link ArmeriaRetrofitBuilder} that builds a client that sends requests to\n      * the specified {@link EndpointGroup} using the specified {@link SessionProtocol}.\n      */\n     public static ArmeriaRetrofitBuilder builder(SessionProtocol protocol, EndpointGroup endpointGroup) {\n+        return builder(protocol, endpointGroup, null);\n+    }\n+\n+    /**\n+     * Returns a new {@link ArmeriaRetrofitBuilder} that builds a client that sends requests to\n+     * the specified {@link EndpointGroup} using the specified {@link SessionProtocol} and {@code path}.\n+     */\n+    public static ArmeriaRetrofitBuilder builder(String protocol, EndpointGroup endpointGroup,\n+                                                 @Nullable String path) {\n+        return builder(SessionProtocol.of(requireNonNull(protocol, \"protocol\")), endpointGroup, path);\n+    }\n+\n+    /**\n+     * Returns a new {@link ArmeriaRetrofitBuilder} that builds a client that sends requests to\n+     * the specified {@link EndpointGroup} using the specified {@link SessionProtocol} and {@code path}.\n+     */\n+    public static ArmeriaRetrofitBuilder builder(SessionProtocol protocol, EndpointGroup endpointGroup,\n+                                                 @Nullable String path) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0f43dbbeec7aa866ed230a2b65aa90cbc86f453a"}, "originalPosition": 81}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "df90b0da6d7854680d0b8af5aface4893a86bdb7", "author": {"user": {"login": "trustin", "name": "Trustin Lee"}}, "url": "https://github.com/line/armeria/commit/df90b0da6d7854680d0b8af5aface4893a86bdb7", "committedDate": "2020-02-27T10:20:09Z", "message": "Make `path` non-null for `ArmeriaRetrofit`"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY1NjEyNzA2", "url": "https://github.com/line/armeria/pull/2538#pullrequestreview-365612706", "createdAt": "2020-02-27T11:39:16Z", "commit": {"oid": "df90b0da6d7854680d0b8af5aface4893a86bdb7"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY1NjIzNjc3", "url": "https://github.com/line/armeria/pull/2538#pullrequestreview-365623677", "createdAt": "2020-02-27T11:58:53Z", "commit": {"oid": "df90b0da6d7854680d0b8af5aface4893a86bdb7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxMTo1ODo1M1rOFvPjdg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxMTo1ODo1M1rOFvPjdg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTA4MjIzMA==", "bodyText": "Similar to path, shouldn't this also go away since scheme is a required parameter?", "url": "https://github.com/line/armeria/pull/2538#discussion_r385082230", "createdAt": "2020-02-27T11:58:53Z", "author": {"login": "anuraaga"}, "path": "core/src/main/java/com/linecorp/armeria/client/ClientBuilder.java", "diffHunk": "@@ -67,96 +66,43 @@\n     @Nullable\n     private final EndpointGroup endpointGroup;\n     @Nullable\n-    private final Scheme scheme;\n-    @Nullable\n-    private final SessionProtocol protocol;\n-    @Nullable\n-    private String path;\n-\n-    private SerializationFormat format = SerializationFormat.NONE;\n-\n-    /**\n-     * Creates a new {@link ClientBuilder} that builds the client that connects to the specified {@code uri}.\n-     *\n-     * @deprecated Use {@link Clients#builder(String)}.\n-     */\n-    @Deprecated\n-    public ClientBuilder(String uri) {\n-        this(URI.create(requireNonNull(uri, \"uri\")));\n-    }\n-\n-    /**\n-     * Creates a new {@link ClientBuilder} that builds the client that connects to the specified {@link URI}.\n-     *\n-     * @deprecated Use {@link Clients#builder(URI)}.\n-     */\n-    @Deprecated\n-    public ClientBuilder(URI uri) {\n-        this(requireNonNull(uri, \"uri\"), null, null, null);\n-    }\n-\n-    /**\n-     * Creates a new {@link ClientBuilder} that builds the client that connects to the specified\n-     * {@link Endpoint} with the {@code scheme}.\n-     *\n-     * @deprecated Use {@link Clients#builder(String, EndpointGroup)}.\n-     */\n-    @Deprecated\n-    public ClientBuilder(String scheme, Endpoint endpoint) {\n-        this(Scheme.parse(requireNonNull(scheme, \"scheme\")), requireNonNull(endpoint, \"endpoint\"));\n-    }\n-\n-    /**\n-     * Creates a new {@link ClientBuilder} that builds the client that connects to the specified\n-     * {@link Endpoint} with the {@link Scheme}.\n-     *\n-     * @deprecated Use {@link Clients#builder(Scheme, EndpointGroup)}.\n-     */\n-    @Deprecated\n-    public ClientBuilder(Scheme scheme, Endpoint endpoint) {\n-        this(null, requireNonNull(scheme, \"scheme\"), null, requireNonNull(endpoint, \"endpoint\"));\n-    }\n+    private final String path;\n+    private Scheme scheme;\n+    private boolean updatedScheme;\n \n-    /**\n-     * Creates a new {@link ClientBuilder} that builds the client that connects to the specified\n-     * {@link Endpoint} with the {@link SessionProtocol}.\n-     *\n-     * @deprecated Use {@link Clients#builder(SessionProtocol, EndpointGroup)}.\n-     */\n-    @Deprecated\n-    public ClientBuilder(SessionProtocol protocol, Endpoint endpoint) {\n-        this(null, null, requireNonNull(protocol, \"protocol\"), requireNonNull(endpoint, \"endpoint\"));\n+    ClientBuilder(URI uri) {\n+        checkArgument(uri.getScheme() != null, \"uri must have scheme: %s\", uri);\n+        checkArgument(uri.getRawAuthority() != null, \"uri must have authority: %s\", uri);\n+        this.uri = uri;\n+        endpointGroup = null;\n+        path = null;\n+        scheme = Scheme.parse(uri.getScheme());\n     }\n \n-    ClientBuilder(@Nullable URI uri, @Nullable Scheme scheme, @Nullable SessionProtocol protocol,\n-                  @Nullable EndpointGroup endpointGroup) {\n-        this.uri = uri;\n-        this.scheme = scheme;\n-        this.protocol = protocol;\n+    ClientBuilder(Scheme scheme, EndpointGroup endpointGroup, @Nullable String path) {\n+        if (path != null) {\n+            checkArgument(path.startsWith(\"/\"),\n+                          \"path: %s (expected: an absolute path starting with '/')\", path);\n+        }\n+        uri = null;\n         this.endpointGroup = endpointGroup;\n+        this.path = path;\n+        this.scheme = scheme;\n     }\n \n     /**\n-     * Sets the {@code path} of the client.\n+     * Sets the {@link SerializationFormat} of the client from the specified {@code format}.\n      */\n-    public ClientBuilder path(String path) {\n-        ensureEndpointGroup();\n-        requireNonNull(path, \"path\");\n-        checkArgument(path.startsWith(\"/\"), \"path: %s (expected: an absolute path starting with '/')\", path);\n-        this.path = path;\n-        return this;\n+    public ClientBuilder serializationFormat(String format) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "df90b0da6d7854680d0b8af5aface4893a86bdb7"}, "originalPosition": 109}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY2MTE0MzU2", "url": "https://github.com/line/armeria/pull/2538#pullrequestreview-366114356", "createdAt": "2020-02-28T01:39:56Z", "commit": {"oid": "df90b0da6d7854680d0b8af5aface4893a86bdb7"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQwMTozOTo1NlrOFvnCWA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQwMTozOTo1NlrOFvnCWA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTQ2Njk2OA==", "bodyText": "+1 if possible.", "url": "https://github.com/line/armeria/pull/2538#discussion_r385466968", "createdAt": "2020-02-28T01:39:56Z", "author": {"login": "minwoox"}, "path": "core/src/main/java/com/linecorp/armeria/client/ClientBuilder.java", "diffHunk": "@@ -67,96 +66,43 @@\n     @Nullable\n     private final EndpointGroup endpointGroup;\n     @Nullable\n-    private final Scheme scheme;\n-    @Nullable\n-    private final SessionProtocol protocol;\n-    @Nullable\n-    private String path;\n-\n-    private SerializationFormat format = SerializationFormat.NONE;\n-\n-    /**\n-     * Creates a new {@link ClientBuilder} that builds the client that connects to the specified {@code uri}.\n-     *\n-     * @deprecated Use {@link Clients#builder(String)}.\n-     */\n-    @Deprecated\n-    public ClientBuilder(String uri) {\n-        this(URI.create(requireNonNull(uri, \"uri\")));\n-    }\n-\n-    /**\n-     * Creates a new {@link ClientBuilder} that builds the client that connects to the specified {@link URI}.\n-     *\n-     * @deprecated Use {@link Clients#builder(URI)}.\n-     */\n-    @Deprecated\n-    public ClientBuilder(URI uri) {\n-        this(requireNonNull(uri, \"uri\"), null, null, null);\n-    }\n-\n-    /**\n-     * Creates a new {@link ClientBuilder} that builds the client that connects to the specified\n-     * {@link Endpoint} with the {@code scheme}.\n-     *\n-     * @deprecated Use {@link Clients#builder(String, EndpointGroup)}.\n-     */\n-    @Deprecated\n-    public ClientBuilder(String scheme, Endpoint endpoint) {\n-        this(Scheme.parse(requireNonNull(scheme, \"scheme\")), requireNonNull(endpoint, \"endpoint\"));\n-    }\n-\n-    /**\n-     * Creates a new {@link ClientBuilder} that builds the client that connects to the specified\n-     * {@link Endpoint} with the {@link Scheme}.\n-     *\n-     * @deprecated Use {@link Clients#builder(Scheme, EndpointGroup)}.\n-     */\n-    @Deprecated\n-    public ClientBuilder(Scheme scheme, Endpoint endpoint) {\n-        this(null, requireNonNull(scheme, \"scheme\"), null, requireNonNull(endpoint, \"endpoint\"));\n-    }\n+    private final String path;\n+    private Scheme scheme;\n+    private boolean updatedScheme;\n \n-    /**\n-     * Creates a new {@link ClientBuilder} that builds the client that connects to the specified\n-     * {@link Endpoint} with the {@link SessionProtocol}.\n-     *\n-     * @deprecated Use {@link Clients#builder(SessionProtocol, EndpointGroup)}.\n-     */\n-    @Deprecated\n-    public ClientBuilder(SessionProtocol protocol, Endpoint endpoint) {\n-        this(null, null, requireNonNull(protocol, \"protocol\"), requireNonNull(endpoint, \"endpoint\"));\n+    ClientBuilder(URI uri) {\n+        checkArgument(uri.getScheme() != null, \"uri must have scheme: %s\", uri);\n+        checkArgument(uri.getRawAuthority() != null, \"uri must have authority: %s\", uri);\n+        this.uri = uri;\n+        endpointGroup = null;\n+        path = null;\n+        scheme = Scheme.parse(uri.getScheme());\n     }\n \n-    ClientBuilder(@Nullable URI uri, @Nullable Scheme scheme, @Nullable SessionProtocol protocol,\n-                  @Nullable EndpointGroup endpointGroup) {\n-        this.uri = uri;\n-        this.scheme = scheme;\n-        this.protocol = protocol;\n+    ClientBuilder(Scheme scheme, EndpointGroup endpointGroup, @Nullable String path) {\n+        if (path != null) {\n+            checkArgument(path.startsWith(\"/\"),\n+                          \"path: %s (expected: an absolute path starting with '/')\", path);\n+        }\n+        uri = null;\n         this.endpointGroup = endpointGroup;\n+        this.path = path;\n+        this.scheme = scheme;\n     }\n \n     /**\n-     * Sets the {@code path} of the client.\n+     * Sets the {@link SerializationFormat} of the client from the specified {@code format}.\n      */\n-    public ClientBuilder path(String path) {\n-        ensureEndpointGroup();\n-        requireNonNull(path, \"path\");\n-        checkArgument(path.startsWith(\"/\"), \"path: %s (expected: an absolute path starting with '/')\", path);\n-        this.path = path;\n-        return this;\n+    public ClientBuilder serializationFormat(String format) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTA4MjIzMA=="}, "originalCommit": {"oid": "df90b0da6d7854680d0b8af5aface4893a86bdb7"}, "originalPosition": 109}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2c65139ef0c05cb87887cdfff07bccacab448989", "author": {"user": {"login": "trustin", "name": "Trustin Lee"}}, "url": "https://github.com/line/armeria/commit/2c65139ef0c05cb87887cdfff07bccacab448989", "committedDate": "2020-02-28T04:58:32Z", "message": "Addressed the comment from @anuraaga"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY2MTc1OTIx", "url": "https://github.com/line/armeria/pull/2538#pullrequestreview-366175921", "createdAt": "2020-02-28T06:03:09Z", "commit": {"oid": "2c65139ef0c05cb87887cdfff07bccacab448989"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 619, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}