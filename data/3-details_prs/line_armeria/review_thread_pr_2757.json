{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI2MzAwNTMw", "number": 2757, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQwMjoxNDoxN1rOEBkkaA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQwNzo1MToxOVrOEBoiPw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwMDgzMTc2OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/com/linecorp/armeria/client/DefaultWebClient.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQwMjoxNDoxN1rOGdf2dQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQwNzozOToxNFrOGdlsXw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzU4MzczMw==", "bodyText": "nit: How about abortRequest?", "url": "https://github.com/line/armeria/pull/2757#discussion_r433583733", "createdAt": "2020-06-02T02:14:17Z", "author": {"login": "ikhoon"}, "path": "core/src/main/java/com/linecorp/armeria/client/DefaultWebClient.java", "diffHunk": "@@ -104,4 +94,9 @@ private HttpResponse execute(EndpointGroup endpointGroup, HttpRequest req) {\n     public HttpResponse execute(AggregatedHttpRequest aggregatedReq) {\n         return execute(aggregatedReq.toHttpRequest());\n     }\n+\n+    private static HttpResponse failureResponse(HttpRequest req, IllegalArgumentException cause) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fd32cf0a52e306fba260bd3536dbbe1c200df247"}, "originalPosition": 87}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzY3OTQ1NQ==", "bodyText": "Fixed. \ud83d\ude09", "url": "https://github.com/line/armeria/pull/2757#discussion_r433679455", "createdAt": "2020-06-02T07:39:14Z", "author": {"login": "minwoox"}, "path": "core/src/main/java/com/linecorp/armeria/client/DefaultWebClient.java", "diffHunk": "@@ -104,4 +94,9 @@ private HttpResponse execute(EndpointGroup endpointGroup, HttpRequest req) {\n     public HttpResponse execute(AggregatedHttpRequest aggregatedReq) {\n         return execute(aggregatedReq.toHttpRequest());\n     }\n+\n+    private static HttpResponse failureResponse(HttpRequest req, IllegalArgumentException cause) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzU4MzczMw=="}, "originalCommit": {"oid": "fd32cf0a52e306fba260bd3536dbbe1c200df247"}, "originalPosition": 87}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwMDk5NzE0OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/com/linecorp/armeria/client/DefaultWebClient.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQwNDoxMjowMFrOGdhbrg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQwNzozOToxOFrOGdlshQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzYwOTY0Ng==", "bodyText": "How about \"A URI with scheme and authority must be specified: \"?", "url": "https://github.com/line/armeria/pull/2757#discussion_r433609646", "createdAt": "2020-06-02T04:12:00Z", "author": {"login": "trustin"}, "path": "core/src/main/java/com/linecorp/armeria/client/DefaultWebClient.java", "diffHunk": "@@ -44,36 +39,32 @@\n \n     @Override\n     public HttpResponse execute(HttpRequest req) {\n-        URI uri;\n-\n-        if (isAbsoluteUri(req.path())) {\n-            try {\n-                uri = URI.create(req.path());\n-            } catch (Exception ex) {\n-                logger.warn(\"Failed to create URI: {}\", req.path(), ex);\n-                uri = null;\n-            }\n-        } else {\n-            if (req.scheme() != null && req.authority() != null) {\n+        if (Clients.isUndefinedUri(uri())) {\n+            final URI uri;\n+            if (isAbsoluteUri(req.path())) {\n+                try {\n+                    uri = URI.create(req.path());\n+                } catch (Exception ex) {\n+                    return failureResponse(req, new IllegalArgumentException(\n+                            \"Failed to create a URI: \" + req.path(), ex));\n+                }\n+            } else if (req.scheme() != null && req.authority() != null) {\n                 uri = req.uri();\n             } else {\n-                uri = null;\n+                return failureResponse(req, new IllegalArgumentException(\"no authority: \" + req.path()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fd32cf0a52e306fba260bd3536dbbe1c200df247"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzY3OTQ5Mw==", "bodyText": "Fixed. \ud83d\ude09", "url": "https://github.com/line/armeria/pull/2757#discussion_r433679493", "createdAt": "2020-06-02T07:39:18Z", "author": {"login": "minwoox"}, "path": "core/src/main/java/com/linecorp/armeria/client/DefaultWebClient.java", "diffHunk": "@@ -44,36 +39,32 @@\n \n     @Override\n     public HttpResponse execute(HttpRequest req) {\n-        URI uri;\n-\n-        if (isAbsoluteUri(req.path())) {\n-            try {\n-                uri = URI.create(req.path());\n-            } catch (Exception ex) {\n-                logger.warn(\"Failed to create URI: {}\", req.path(), ex);\n-                uri = null;\n-            }\n-        } else {\n-            if (req.scheme() != null && req.authority() != null) {\n+        if (Clients.isUndefinedUri(uri())) {\n+            final URI uri;\n+            if (isAbsoluteUri(req.path())) {\n+                try {\n+                    uri = URI.create(req.path());\n+                } catch (Exception ex) {\n+                    return failureResponse(req, new IllegalArgumentException(\n+                            \"Failed to create a URI: \" + req.path(), ex));\n+                }\n+            } else if (req.scheme() != null && req.authority() != null) {\n                 uri = req.uri();\n             } else {\n-                uri = null;\n+                return failureResponse(req, new IllegalArgumentException(\"no authority: \" + req.path()));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzYwOTY0Ng=="}, "originalCommit": {"oid": "fd32cf0a52e306fba260bd3536dbbe1c200df247"}, "originalPosition": 47}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwMDk5OTE4OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/com/linecorp/armeria/client/DefaultWebClient.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQwNDoxMzozN1rOGdhc9Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQwNzozOToyMVrOGdlspQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzYwOTk3Mw==", "bodyText": "Cannot send a request with a \":path\" header that contains a URI with authority, because the client was created with a base URI ?", "url": "https://github.com/line/armeria/pull/2757#discussion_r433609973", "createdAt": "2020-06-02T04:13:37Z", "author": {"login": "trustin"}, "path": "core/src/main/java/com/linecorp/armeria/client/DefaultWebClient.java", "diffHunk": "@@ -44,36 +39,32 @@\n \n     @Override\n     public HttpResponse execute(HttpRequest req) {\n-        URI uri;\n-\n-        if (isAbsoluteUri(req.path())) {\n-            try {\n-                uri = URI.create(req.path());\n-            } catch (Exception ex) {\n-                logger.warn(\"Failed to create URI: {}\", req.path(), ex);\n-                uri = null;\n-            }\n-        } else {\n-            if (req.scheme() != null && req.authority() != null) {\n+        if (Clients.isUndefinedUri(uri())) {\n+            final URI uri;\n+            if (isAbsoluteUri(req.path())) {\n+                try {\n+                    uri = URI.create(req.path());\n+                } catch (Exception ex) {\n+                    return failureResponse(req, new IllegalArgumentException(\n+                            \"Failed to create a URI: \" + req.path(), ex));\n+                }\n+            } else if (req.scheme() != null && req.authority() != null) {\n                 uri = req.uri();\n             } else {\n-                uri = null;\n+                return failureResponse(req, new IllegalArgumentException(\"no authority: \" + req.path()));\n             }\n-        }\n-\n-        if (uri != null) {\n             final Endpoint endpoint = Endpoint.parse(uri.getAuthority());\n             final String query = uri.getRawQuery();\n             final String path = uri.getRawPath();\n             final HttpRequest newReq = req.withHeaders(req.headers().toBuilder()\n-                    .path(query == null ? path : path + '?' + query));\n+                                                          .path(query == null ? path : path + '?' + query));\n             return execute(endpoint, newReq);\n         }\n \n-        if (Clients.isUndefinedUri(uri())) {\n-            final IllegalArgumentException cause = new IllegalArgumentException(\"no authority: \" + req.path());\n-            req.abort(cause);\n-            return HttpResponse.ofFailure(cause);\n+        if (isAbsoluteUri(req.path())) {\n+            return failureResponse(req, new IllegalArgumentException(\n+                    \"Cannot send a request with an absolute path when the client is created with a base URI. \" +", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fd32cf0a52e306fba260bd3536dbbe1c200df247"}, "originalPosition": 67}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzY3OTUyNQ==", "bodyText": "Fixed. \ud83d\ude09", "url": "https://github.com/line/armeria/pull/2757#discussion_r433679525", "createdAt": "2020-06-02T07:39:21Z", "author": {"login": "minwoox"}, "path": "core/src/main/java/com/linecorp/armeria/client/DefaultWebClient.java", "diffHunk": "@@ -44,36 +39,32 @@\n \n     @Override\n     public HttpResponse execute(HttpRequest req) {\n-        URI uri;\n-\n-        if (isAbsoluteUri(req.path())) {\n-            try {\n-                uri = URI.create(req.path());\n-            } catch (Exception ex) {\n-                logger.warn(\"Failed to create URI: {}\", req.path(), ex);\n-                uri = null;\n-            }\n-        } else {\n-            if (req.scheme() != null && req.authority() != null) {\n+        if (Clients.isUndefinedUri(uri())) {\n+            final URI uri;\n+            if (isAbsoluteUri(req.path())) {\n+                try {\n+                    uri = URI.create(req.path());\n+                } catch (Exception ex) {\n+                    return failureResponse(req, new IllegalArgumentException(\n+                            \"Failed to create a URI: \" + req.path(), ex));\n+                }\n+            } else if (req.scheme() != null && req.authority() != null) {\n                 uri = req.uri();\n             } else {\n-                uri = null;\n+                return failureResponse(req, new IllegalArgumentException(\"no authority: \" + req.path()));\n             }\n-        }\n-\n-        if (uri != null) {\n             final Endpoint endpoint = Endpoint.parse(uri.getAuthority());\n             final String query = uri.getRawQuery();\n             final String path = uri.getRawPath();\n             final HttpRequest newReq = req.withHeaders(req.headers().toBuilder()\n-                    .path(query == null ? path : path + '?' + query));\n+                                                          .path(query == null ? path : path + '?' + query));\n             return execute(endpoint, newReq);\n         }\n \n-        if (Clients.isUndefinedUri(uri())) {\n-            final IllegalArgumentException cause = new IllegalArgumentException(\"no authority: \" + req.path());\n-            req.abort(cause);\n-            return HttpResponse.ofFailure(cause);\n+        if (isAbsoluteUri(req.path())) {\n+            return failureResponse(req, new IllegalArgumentException(\n+                    \"Cannot send a request with an absolute path when the client is created with a base URI. \" +", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzYwOTk3Mw=="}, "originalCommit": {"oid": "fd32cf0a52e306fba260bd3536dbbe1c200df247"}, "originalPosition": 67}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwMTQ4MTU5OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/com/linecorp/armeria/client/DefaultWebClient.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQwNzo1MToxOVrOGdmFfg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQwODo0NToyNFrOGdoA6A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzY4NTg4Ng==", "bodyText": "Realized that a user can specify scheme and authority in headers. How about this:\n\"Scheme and authority must be specified in \\\":path\\\" or in \\\":scheme\\\" and \\\":authority\\\". :path=\" + \nreq.path() + \", :scheme=\" + req.scheme() + \", :authority=\" + req.authority()", "url": "https://github.com/line/armeria/pull/2757#discussion_r433685886", "createdAt": "2020-06-02T07:51:19Z", "author": {"login": "trustin"}, "path": "core/src/main/java/com/linecorp/armeria/client/DefaultWebClient.java", "diffHunk": "@@ -44,36 +39,33 @@\n \n     @Override\n     public HttpResponse execute(HttpRequest req) {\n-        URI uri;\n-\n-        if (isAbsoluteUri(req.path())) {\n-            try {\n-                uri = URI.create(req.path());\n-            } catch (Exception ex) {\n-                logger.warn(\"Failed to create URI: {}\", req.path(), ex);\n-                uri = null;\n-            }\n-        } else {\n-            if (req.scheme() != null && req.authority() != null) {\n+        if (Clients.isUndefinedUri(uri())) {\n+            final URI uri;\n+            if (isAbsoluteUri(req.path())) {\n+                try {\n+                    uri = URI.create(req.path());\n+                } catch (Exception ex) {\n+                    return abortRequestAndReturnFailureResponse(req, new IllegalArgumentException(\n+                            \"Failed to create a URI: \" + req.path(), ex));\n+                }\n+            } else if (req.scheme() != null && req.authority() != null) {\n                 uri = req.uri();\n             } else {\n-                uri = null;\n+                return abortRequestAndReturnFailureResponse(req, new IllegalArgumentException(\n+                        \"A URI with scheme and authority must be specified. path: \" + req.path()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8bedaa5daa8238dcd4e4a4f2788fadd94145d320"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzcxNzQ4MA==", "bodyText": "Fixed. \ud83d\ude09", "url": "https://github.com/line/armeria/pull/2757#discussion_r433717480", "createdAt": "2020-06-02T08:45:24Z", "author": {"login": "minwoox"}, "path": "core/src/main/java/com/linecorp/armeria/client/DefaultWebClient.java", "diffHunk": "@@ -44,36 +39,33 @@\n \n     @Override\n     public HttpResponse execute(HttpRequest req) {\n-        URI uri;\n-\n-        if (isAbsoluteUri(req.path())) {\n-            try {\n-                uri = URI.create(req.path());\n-            } catch (Exception ex) {\n-                logger.warn(\"Failed to create URI: {}\", req.path(), ex);\n-                uri = null;\n-            }\n-        } else {\n-            if (req.scheme() != null && req.authority() != null) {\n+        if (Clients.isUndefinedUri(uri())) {\n+            final URI uri;\n+            if (isAbsoluteUri(req.path())) {\n+                try {\n+                    uri = URI.create(req.path());\n+                } catch (Exception ex) {\n+                    return abortRequestAndReturnFailureResponse(req, new IllegalArgumentException(\n+                            \"Failed to create a URI: \" + req.path(), ex));\n+                }\n+            } else if (req.scheme() != null && req.authority() != null) {\n                 uri = req.uri();\n             } else {\n-                uri = null;\n+                return abortRequestAndReturnFailureResponse(req, new IllegalArgumentException(\n+                        \"A URI with scheme and authority must be specified. path: \" + req.path()));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzY4NTg4Ng=="}, "originalCommit": {"oid": "8bedaa5daa8238dcd4e4a4f2788fadd94145d320"}, "originalPosition": 48}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2300, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}