{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcwMjYwNjEz", "number": 2445, "reviewThreads": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxMjoyOTo1OVrODcnZOA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQwNDo1Mzo1MVrODc22Fg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxMzMyMTUyOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/com/linecorp/armeria/common/util/UnstableApi.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxMjoyOTo1OVrOFkvxVw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxMzoyMTo0MVrOFkxFQQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDA3NTczNQ==", "bodyText": "nit: 2020. \ud83d\ude06", "url": "https://github.com/line/armeria/pull/2445#discussion_r374075735", "createdAt": "2020-02-03T12:29:59Z", "author": {"login": "minwoox"}, "path": "core/src/main/java/com/linecorp/armeria/common/util/UnstableApi.java", "diffHunk": "@@ -0,0 +1,39 @@\n+/*\n+ * Copyright 2019 LINE Corporation", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "550fc30852f3d29abb2938149baae8f5a280751e"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDA5NzIxNw==", "bodyText": "\ud83e\udd23", "url": "https://github.com/line/armeria/pull/2445#discussion_r374097217", "createdAt": "2020-02-03T13:21:41Z", "author": {"login": "trustin"}, "path": "core/src/main/java/com/linecorp/armeria/common/util/UnstableApi.java", "diffHunk": "@@ -0,0 +1,39 @@\n+/*\n+ * Copyright 2019 LINE Corporation", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDA3NTczNQ=="}, "originalCommit": {"oid": "550fc30852f3d29abb2938149baae8f5a280751e"}, "originalPosition": 2}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxNTg0NTY3OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/com/linecorp/armeria/client/ClientFactoryProvider.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQwNDo0Nzo0MFrOFlH_0A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQwOTowODoyNVrOFlMnJA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDQ3MjY1Ng==", "bodyText": "Does this effectively mean we only officially support our official client implementations, and user-created custom ones may potentially have breaking changes? I'm ok with either but we may want to document that explicitly (I lean towards not marking this unstable though it seems pretty well-baked).", "url": "https://github.com/line/armeria/pull/2445#discussion_r374472656", "createdAt": "2020-02-04T04:47:40Z", "author": {"login": "anuraaga"}, "path": "core/src/main/java/com/linecorp/armeria/client/ClientFactoryProvider.java", "diffHunk": "@@ -17,10 +17,12 @@\n package com.linecorp.armeria.client;\n \n import com.linecorp.armeria.common.SerializationFormat;\n+import com.linecorp.armeria.common.util.UnstableApi;\n \n /**\n  * Creates a new {@link ClientFactory} dynamically via Java SPI (Service Provider Interface).\n  */\n+@UnstableApi", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b5f948b2344fcf0849cce53e572ca3045c9f688b"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDU0ODI2MA==", "bodyText": "I'm somewhat unsure about the stability of this API although it stayed unchanged for a very long time. For instance, a user may want to build a ClientFactory which is built on top of GrpcClientFactory or THttpClientFactory.", "url": "https://github.com/line/armeria/pull/2445#discussion_r374548260", "createdAt": "2020-02-04T09:08:25Z", "author": {"login": "trustin"}, "path": "core/src/main/java/com/linecorp/armeria/client/ClientFactoryProvider.java", "diffHunk": "@@ -17,10 +17,12 @@\n package com.linecorp.armeria.client;\n \n import com.linecorp.armeria.common.SerializationFormat;\n+import com.linecorp.armeria.common.util.UnstableApi;\n \n /**\n  * Creates a new {@link ClientFactory} dynamically via Java SPI (Service Provider Interface).\n  */\n+@UnstableApi", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDQ3MjY1Ng=="}, "originalCommit": {"oid": "b5f948b2344fcf0849cce53e572ca3045c9f688b"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxNTg0NjQxOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/com/linecorp/armeria/client/DefaultClientRequestContext.java", "isResolved": false, "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQwNDo0ODoxNVrOFlIAOA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQxMjowMDowOVrOFlRkZQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDQ3Mjc2MA==", "bodyText": "Just want to confirm, I think it's possible to hide some of these completely, is the idea to mark as unstable first and then hide later?", "url": "https://github.com/line/armeria/pull/2445#discussion_r374472760", "createdAt": "2020-02-04T04:48:15Z", "author": {"login": "anuraaga"}, "path": "core/src/main/java/com/linecorp/armeria/client/DefaultClientRequestContext.java", "diffHunk": "@@ -67,6 +67,7 @@\n /**\n  * Default {@link ClientRequestContext} implementation.\n  */\n+@UnstableApi", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b5f948b2344fcf0849cce53e572ca3045c9f688b"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDU0ODk5Mg==", "bodyText": "Is is possible to hide this class? Any user who wants to write a custom client implementation will need to use this API.", "url": "https://github.com/line/armeria/pull/2445#discussion_r374548992", "createdAt": "2020-02-04T09:10:10Z", "author": {"login": "trustin"}, "path": "core/src/main/java/com/linecorp/armeria/client/DefaultClientRequestContext.java", "diffHunk": "@@ -67,6 +67,7 @@\n /**\n  * Default {@link ClientRequestContext} implementation.\n  */\n+@UnstableApi", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDQ3Mjc2MA=="}, "originalCommit": {"oid": "b5f948b2344fcf0849cce53e572ca3045c9f688b"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDU1ODQ1Mg==", "bodyText": "If I'm not mistaken, only the constructor is ever needed. So we should be able to hide it by providing a factory in *RequestContext.\nThis class is literally what prompted me to file the issue about over-exposed APIs ;)", "url": "https://github.com/line/armeria/pull/2445#discussion_r374558452", "createdAt": "2020-02-04T09:29:12Z", "author": {"login": "anuraaga"}, "path": "core/src/main/java/com/linecorp/armeria/client/DefaultClientRequestContext.java", "diffHunk": "@@ -67,6 +67,7 @@\n /**\n  * Default {@link ClientRequestContext} implementation.\n  */\n+@UnstableApi", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDQ3Mjc2MA=="}, "originalCommit": {"oid": "b5f948b2344fcf0849cce53e572ca3045c9f688b"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDU2Mzc1Ng==", "bodyText": "I'm not sure if it's a good idea to have a static factory method with such large number of parameters. Perhaps it's better as it is now, i.e. public class annotated with @UnstableApi? It's for advanced users only anyway.", "url": "https://github.com/line/armeria/pull/2445#discussion_r374563756", "createdAt": "2020-02-04T09:39:47Z", "author": {"login": "trustin"}, "path": "core/src/main/java/com/linecorp/armeria/client/DefaultClientRequestContext.java", "diffHunk": "@@ -67,6 +67,7 @@\n /**\n  * Default {@link ClientRequestContext} implementation.\n  */\n+@UnstableApi", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDQ3Mjc2MA=="}, "originalCommit": {"oid": "b5f948b2344fcf0849cce53e572ca3045c9f688b"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDYxNjQxMQ==", "bodyText": "I think it's still worth it. Though if we can merge the semantics with our current builders maybe even better not sure it's possible.\nThese classes leak a lot of implementation details, including a whole class TimeoutController. I think they're so core that we want to hide them as much as possible.", "url": "https://github.com/line/armeria/pull/2445#discussion_r374616411", "createdAt": "2020-02-04T11:27:12Z", "author": {"login": "anuraaga"}, "path": "core/src/main/java/com/linecorp/armeria/client/DefaultClientRequestContext.java", "diffHunk": "@@ -67,6 +67,7 @@\n /**\n  * Default {@link ClientRequestContext} implementation.\n  */\n+@UnstableApi", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDQ3Mjc2MA=="}, "originalCommit": {"oid": "b5f948b2344fcf0849cce53e572ca3045c9f688b"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDYyNjMwNw==", "bodyText": "Just realized that setTimeoutController and TimeoutController can be package-private. I think we can hide DefaultClientRequestContext if we do something about DefaultClientRequestContext.init(EndpointGroup). Not sure if it makes sense to move it to ClientRequestContext..", "url": "https://github.com/line/armeria/pull/2445#discussion_r374626307", "createdAt": "2020-02-04T11:52:21Z", "author": {"login": "trustin"}, "path": "core/src/main/java/com/linecorp/armeria/client/DefaultClientRequestContext.java", "diffHunk": "@@ -67,6 +67,7 @@\n /**\n  * Default {@link ClientRequestContext} implementation.\n  */\n+@UnstableApi", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDQ3Mjc2MA=="}, "originalCommit": {"oid": "b5f948b2344fcf0849cce53e572ca3045c9f688b"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDYyOTQ3Nw==", "bodyText": "Let me keep thinking about how we can solve this. Meanwhile, let me leave this as it is and address it in another PR. At least TimeoutController is now removed from public API.", "url": "https://github.com/line/armeria/pull/2445#discussion_r374629477", "createdAt": "2020-02-04T12:00:09Z", "author": {"login": "trustin"}, "path": "core/src/main/java/com/linecorp/armeria/client/DefaultClientRequestContext.java", "diffHunk": "@@ -67,6 +67,7 @@\n /**\n  * Default {@link ClientRequestContext} implementation.\n  */\n+@UnstableApi", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDQ3Mjc2MA=="}, "originalCommit": {"oid": "b5f948b2344fcf0849cce53e572ca3045c9f688b"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxNTg0ODQ2OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/com/linecorp/armeria/internal/annotation/AnnotatedDocServicePlugin.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQwNDo0OTo1MFrOFlIBcg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQwOToxMDo0NFrOFlMq_Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDQ3MzA3NA==", "bodyText": "This is already in internal package", "url": "https://github.com/line/armeria/pull/2445#discussion_r374473074", "createdAt": "2020-02-04T04:49:50Z", "author": {"login": "anuraaga"}, "path": "core/src/main/java/com/linecorp/armeria/internal/annotation/AnnotatedDocServicePlugin.java", "diffHunk": "@@ -80,6 +81,7 @@\n /**\n  * A {@link DocServicePlugin} implementation that supports the {@link AnnotatedService}.\n  */\n+@UnstableApi", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b5f948b2344fcf0849cce53e572ca3045c9f688b"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDU0OTI0NQ==", "bodyText": "Oops!", "url": "https://github.com/line/armeria/pull/2445#discussion_r374549245", "createdAt": "2020-02-04T09:10:44Z", "author": {"login": "trustin"}, "path": "core/src/main/java/com/linecorp/armeria/internal/annotation/AnnotatedDocServicePlugin.java", "diffHunk": "@@ -80,6 +81,7 @@\n /**\n  * A {@link DocServicePlugin} implementation that supports the {@link AnnotatedService}.\n  */\n+@UnstableApi", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDQ3MzA3NA=="}, "originalCommit": {"oid": "b5f948b2344fcf0849cce53e572ca3045c9f688b"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxNTg0OTQ5OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/com/linecorp/armeria/server/docs/DocServicePlugin.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQwNDo1MDo0NVrOFlICGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQwOToxMTowNFrOFlMrpQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDQ3MzI0MQ==", "bodyText": "Should we add to docs/package-inf.java?", "url": "https://github.com/line/armeria/pull/2445#discussion_r374473241", "createdAt": "2020-02-04T04:50:45Z", "author": {"login": "anuraaga"}, "path": "core/src/main/java/com/linecorp/armeria/server/docs/DocServicePlugin.java", "diffHunk": "@@ -24,12 +24,14 @@\n import com.google.common.collect.ImmutableMap;\n import com.google.common.collect.ImmutableSet;\n \n+import com.linecorp.armeria.common.util.UnstableApi;\n import com.linecorp.armeria.server.Service;\n import com.linecorp.armeria.server.ServiceConfig;\n \n /**\n  * Generates the {@link ServiceSpecification}s of the supported {@link Service}s.\n  */\n+@UnstableApi", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b5f948b2344fcf0849cce53e572ca3045c9f688b"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDU0OTQxMw==", "bodyText": "No, because we have DocService there. \ud83d\ude09", "url": "https://github.com/line/armeria/pull/2445#discussion_r374549413", "createdAt": "2020-02-04T09:11:04Z", "author": {"login": "trustin"}, "path": "core/src/main/java/com/linecorp/armeria/server/docs/DocServicePlugin.java", "diffHunk": "@@ -24,12 +24,14 @@\n import com.google.common.collect.ImmutableMap;\n import com.google.common.collect.ImmutableSet;\n \n+import com.linecorp.armeria.common.util.UnstableApi;\n import com.linecorp.armeria.server.Service;\n import com.linecorp.armeria.server.ServiceConfig;\n \n /**\n  * Generates the {@link ServiceSpecification}s of the supported {@link Service}s.\n  */\n+@UnstableApi", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDQ3MzI0MQ=="}, "originalCommit": {"oid": "b5f948b2344fcf0849cce53e572ca3045c9f688b"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxNTg1MTIwOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/com/linecorp/armeria/unsafe/package-info.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQwNDo1MjoxNlrOFlIDNQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQwOToyNDo1OFrOFlNFkQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDQ3MzUyNQ==", "bodyText": "Do we also need to add to the classes? (I noticed we did in grpc-protocol)", "url": "https://github.com/line/armeria/pull/2445#discussion_r374473525", "createdAt": "2020-02-04T04:52:16Z", "author": {"login": "anuraaga"}, "path": "core/src/main/java/com/linecorp/armeria/unsafe/package-info.java", "diffHunk": "@@ -13,14 +13,14 @@\n  * License for the specific language governing permissions and limitations\n  * under the License.\n  */\n-\n /**\n  * Utilities for working with {@link io.netty.buffer.ByteBuf} in an unsafe way. These can improve performance\n  * when dealing with large buffers but require careful memory management or there will be memory leaks. Only use\n  * these methods if you really know what you're doing.\n  */\n-\n+@UnstableApi", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b5f948b2344fcf0849cce53e572ca3045c9f688b"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDU0OTgwMg==", "bodyText": "I did already.", "url": "https://github.com/line/armeria/pull/2445#discussion_r374549802", "createdAt": "2020-02-04T09:11:51Z", "author": {"login": "trustin"}, "path": "core/src/main/java/com/linecorp/armeria/unsafe/package-info.java", "diffHunk": "@@ -13,14 +13,14 @@\n  * License for the specific language governing permissions and limitations\n  * under the License.\n  */\n-\n /**\n  * Utilities for working with {@link io.netty.buffer.ByteBuf} in an unsafe way. These can improve performance\n  * when dealing with large buffers but require careful memory management or there will be memory leaks. Only use\n  * these methods if you really know what you're doing.\n  */\n-\n+@UnstableApi", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDQ3MzUyNQ=="}, "originalCommit": {"oid": "b5f948b2344fcf0849cce53e572ca3045c9f688b"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDU1NjA0OQ==", "bodyText": "Oops not sure why I missed it before", "url": "https://github.com/line/armeria/pull/2445#discussion_r374556049", "createdAt": "2020-02-04T09:24:58Z", "author": {"login": "anuraaga"}, "path": "core/src/main/java/com/linecorp/armeria/unsafe/package-info.java", "diffHunk": "@@ -13,14 +13,14 @@\n  * License for the specific language governing permissions and limitations\n  * under the License.\n  */\n-\n /**\n  * Utilities for working with {@link io.netty.buffer.ByteBuf} in an unsafe way. These can improve performance\n  * when dealing with large buffers but require careful memory management or there will be memory leaks. Only use\n  * these methods if you really know what you're doing.\n  */\n-\n+@UnstableApi", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDQ3MzUyNQ=="}, "originalCommit": {"oid": "b5f948b2344fcf0849cce53e572ca3045c9f688b"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxNTg1MTg2OnYy", "diffSide": "RIGHT", "path": "grpc/src/main/java/com/linecorp/armeria/server/grpc/GrpcDocServicePlugin.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQwNDo1Mjo1MlrOFlIDlw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQwNDo1Mjo1MlrOFlIDlw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDQ3MzYyMw==", "bodyText": "Guess we should move to internal package", "url": "https://github.com/line/armeria/pull/2445#discussion_r374473623", "createdAt": "2020-02-04T04:52:52Z", "author": {"login": "anuraaga"}, "path": "grpc/src/main/java/com/linecorp/armeria/server/grpc/GrpcDocServicePlugin.java", "diffHunk": "@@ -74,6 +75,7 @@\n /**\n  * {@link DocServicePlugin} implementation that supports {@link GrpcService}s.\n  */\n+@UnstableApi\n public final class GrpcDocServicePlugin implements DocServicePlugin {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b5f948b2344fcf0849cce53e572ca3045c9f688b"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxNTg1MjMxOnYy", "diffSide": "RIGHT", "path": "grpc/src/main/java/com/linecorp/armeria/client/grpc/GrpcClientFactoryProvider.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQwNDo1MzoxN1rOFlID2Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQwOTozNDo0OVrOFlNaWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDQ3MzY4OQ==", "bodyText": "I wonder if it's ok for SPI implementations to be in internal package I guess so", "url": "https://github.com/line/armeria/pull/2445#discussion_r374473689", "createdAt": "2020-02-04T04:53:17Z", "author": {"login": "anuraaga"}, "path": "grpc/src/main/java/com/linecorp/armeria/client/grpc/GrpcClientFactoryProvider.java", "diffHunk": "@@ -18,10 +18,12 @@\n \n import com.linecorp.armeria.client.ClientFactory;\n import com.linecorp.armeria.client.ClientFactoryProvider;\n+import com.linecorp.armeria.common.util.UnstableApi;\n \n /**\n  * {@link ClientFactoryProvider} that creates a {@link GrpcClientFactory}.\n  */\n+@UnstableApi", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b5f948b2344fcf0849cce53e572ca3045c9f688b"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDU2MTM3MQ==", "bodyText": "The internal packages are getting more and more crowded. Let me send a follow-up PR which 1) reorganizes the internal packages to have the same structure with non-internal packages (common, client, server) and 2) move the SPI impls there.", "url": "https://github.com/line/armeria/pull/2445#discussion_r374561371", "createdAt": "2020-02-04T09:34:49Z", "author": {"login": "trustin"}, "path": "grpc/src/main/java/com/linecorp/armeria/client/grpc/GrpcClientFactoryProvider.java", "diffHunk": "@@ -18,10 +18,12 @@\n \n import com.linecorp.armeria.client.ClientFactory;\n import com.linecorp.armeria.client.ClientFactoryProvider;\n+import com.linecorp.armeria.common.util.UnstableApi;\n \n /**\n  * {@link ClientFactoryProvider} that creates a {@link GrpcClientFactory}.\n  */\n+@UnstableApi", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDQ3MzY4OQ=="}, "originalCommit": {"oid": "b5f948b2344fcf0849cce53e572ca3045c9f688b"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxNTg1MzAyOnYy", "diffSide": "RIGHT", "path": "tomcat/src/main/java/com/linecorp/armeria/server/tomcat/Tomcat90ProtocolHandler.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQwNDo1Mzo1MVrOFlIEQg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQwOToxNjowOVrOFlM0yw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDQ3Mzc5NA==", "bodyText": "Is it worth having both UnstableApi and Internal to separate what definitely won't ever be stable?", "url": "https://github.com/line/armeria/pull/2445#discussion_r374473794", "createdAt": "2020-02-04T04:53:51Z", "author": {"login": "anuraaga"}, "path": "tomcat/src/main/java/com/linecorp/armeria/server/tomcat/Tomcat90ProtocolHandler.java", "diffHunk": "@@ -28,10 +28,13 @@\n import org.apache.coyote.UpgradeProtocol;\n import org.apache.tomcat.util.net.SSLHostConfig;\n \n+import com.linecorp.armeria.common.util.UnstableApi;\n+\n /**\n  * A {@link ProtocolHandler} for Tomcat 8.5 and above.\n  * Do not use; loaded and instantiated by Tomcat via reflection.\n  */\n+@UnstableApi", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b5f948b2344fcf0849cce53e572ca3045c9f688b"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDU1MTc1NQ==", "bodyText": "I think I can just move this class to the internal package.", "url": "https://github.com/line/armeria/pull/2445#discussion_r374551755", "createdAt": "2020-02-04T09:16:09Z", "author": {"login": "trustin"}, "path": "tomcat/src/main/java/com/linecorp/armeria/server/tomcat/Tomcat90ProtocolHandler.java", "diffHunk": "@@ -28,10 +28,13 @@\n import org.apache.coyote.UpgradeProtocol;\n import org.apache.tomcat.util.net.SSLHostConfig;\n \n+import com.linecorp.armeria.common.util.UnstableApi;\n+\n /**\n  * A {@link ProtocolHandler} for Tomcat 8.5 and above.\n  * Do not use; loaded and instantiated by Tomcat via reflection.\n  */\n+@UnstableApi", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDQ3Mzc5NA=="}, "originalCommit": {"oid": "b5f948b2344fcf0849cce53e572ca3045c9f688b"}, "originalPosition": 10}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2969, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}