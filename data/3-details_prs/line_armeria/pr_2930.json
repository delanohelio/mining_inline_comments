{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU1MDcyNTMw", "number": 2930, "title": "Fix a bug where grpc-web trailers not compressed", "bodyText": "Motivation:\nI found a bug while I was implementing it test with akka grpc.\nThe spec says:\n10000000b: an uncompressed trailer (as part of the body)\n10000001b: a compressed trailer\n\nwhich means that the grpc-web trailers can be compressed.\nBut our logic does not take account of it.\nModifications:\n\nCompress grpc-web trailers if the response is sent with the headers which indicates the message will be compressed.\nDecompress grpc-web trailers in the client if it's compressed.\n\nResult:\n\nYou can now receive the compressed grpc-web trailers.\n\nTo-do:\n\nSupport decompression in GrpcWebUtil for retrying.", "createdAt": "2020-07-22T11:58:40Z", "url": "https://github.com/line/armeria/pull/2930", "merged": true, "mergeCommit": {"oid": "4edb071dbc518234f21a2df57e0249e2e1555599"}, "closed": true, "closedAt": "2020-07-23T04:48:58Z", "author": {"login": "minwoox"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc3Zg8yAH2gAyNDU1MDcyNTMwOmM4NDMxNzA4YTBmZWYwMjM1NTZkOWNmZjI5MDQxMmQ0MGU5MTgzYzg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc3oAXRgFqTQ1MzgzMzYzMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "c8431708a0fef023556d9cff290412d40e9183c8", "author": {"user": {"login": "minwoox", "name": "minux"}}, "url": "https://github.com/line/armeria/commit/c8431708a0fef023556d9cff290412d40e9183c8", "committedDate": "2020-07-22T11:55:32Z", "message": "Fix a bug where grpc-web trailers not compressed\nMotivation:\nI found a bug while I was implementing it test with akka grpc.\nThe spec says:\n```\n10000000b: an uncompressed trailer (as part of the body)\n10000001b: a compressed trailer\n```\nwhich means that the grpc-web trailers can be compressed.\nBut our logic does not take account of it.\n\nModifications:\n- Compress grpc-web trailers if the response is sent with the headers which indicates the message will be compressed.\n- Decompress grpc-web trailers in the client if it's compressed.\n\nResult:\n- You can now recieve the compressed grpc-web trailers.\n\nTo-do:\n- Support decompression in `GrpcWebUtil` for retrying."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "54948891e03adc9b43bf4a3c42eab576623b199a", "author": {"user": {"login": "minwoox", "name": "minux"}}, "url": "https://github.com/line/armeria/commit/54948891e03adc9b43bf4a3c42eab576623b199a", "committedDate": "2020-07-22T14:06:15Z", "message": "Fix import"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "34346d7ab3327488db9b5c78d320248a90cacc10", "author": {"user": {"login": "minwoox", "name": "minux"}}, "url": "https://github.com/line/armeria/commit/34346d7ab3327488db9b5c78d320248a90cacc10", "committedDate": "2020-07-23T00:02:43Z", "message": "Set endOfStream inside"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUzODA0NTA1", "url": "https://github.com/line/armeria/pull/2930#pullrequestreview-453804505", "createdAt": "2020-07-23T02:34:17Z", "commit": {"oid": "34346d7ab3327488db9b5c78d320248a90cacc10"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUzODA0MDQ4", "url": "https://github.com/line/armeria/pull/2930#pullrequestreview-453804048", "createdAt": "2020-07-23T02:32:20Z", "commit": {"oid": "34346d7ab3327488db9b5c78d320248a90cacc10"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QwMjozMjoyMVrOG16bGg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QwMjozOTowMlrOG16goA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTE4NDkyMg==", "bodyText": "Is it OK to move this class to the internal package? /cc @anuraaga @adriancole", "url": "https://github.com/line/armeria/pull/2930#discussion_r459184922", "createdAt": "2020-07-23T02:32:21Z", "author": {"login": "trustin"}, "path": "grpc-protocol/src/main/java/com/linecorp/armeria/internal/common/grpc/protocol/GrpcTrailersUtil.java", "diffHunk": "@@ -0,0 +1,121 @@\n+/*\n+ * Copyright 2019 LINE Corporation\n+ *\n+ * LINE Corporation licenses this file to you under the Apache License,\n+ * version 2.0 (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *   https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package com.linecorp.armeria.internal.common.grpc.protocol;\n+\n+import static io.netty.util.AsciiString.c2b;\n+\n+import java.util.Map;\n+\n+import javax.annotation.Nullable;\n+\n+import com.linecorp.armeria.common.HttpHeaderNames;\n+import com.linecorp.armeria.common.HttpHeaders;\n+import com.linecorp.armeria.common.HttpHeadersBuilder;\n+import com.linecorp.armeria.common.HttpStatus;\n+import com.linecorp.armeria.common.ResponseHeaders;\n+import com.linecorp.armeria.common.grpc.protocol.GrpcHeaderNames;\n+import com.linecorp.armeria.common.grpc.protocol.StatusMessageEscaper;\n+\n+import io.netty.buffer.ByteBuf;\n+import io.netty.buffer.ByteBufAllocator;\n+import io.netty.buffer.ByteBufUtil;\n+import io.netty.util.AsciiString;\n+\n+/**\n+ * Utility for creating response trailers for a gRPC status. Trailers are only returned from a server.\n+ */\n+public final class GrpcTrailersUtil {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "34346d7ab3327488db9b5c78d320248a90cacc10"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTE4NTgzNg==", "bodyText": "Any reason to use a composite buffer? Probably better using buffer() with sensible initial capacity.", "url": "https://github.com/line/armeria/pull/2930#discussion_r459185836", "createdAt": "2020-07-23T02:36:35Z", "author": {"login": "trustin"}, "path": "grpc/src/main/java/com/linecorp/armeria/internal/client/grpc/ArmeriaClientCall.java", "diffHunk": "@@ -317,9 +321,25 @@ public synchronized void setMessageCompression(boolean enabled) {\n     public void messageRead(DeframedMessage message) {\n         if (isGrpcWeb && message.type() >> 7 == 1) {\n             // grpc-web trailers\n-            final ByteBuf buf = message.buf();\n-            // trailers never compressed\n-            assert buf != null;\n+            final ByteBuf messageBuf = message.buf();\n+            final ByteBuf buf;\n+            if (messageBuf != null) {\n+                buf = messageBuf;\n+            } else {\n+                buf = ctx.alloc().compositeBuffer();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "34346d7ab3327488db9b5c78d320248a90cacc10"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTE4NTg4Ng==", "bodyText": "Ditto", "url": "https://github.com/line/armeria/pull/2930#discussion_r459185886", "createdAt": "2020-07-23T02:36:50Z", "author": {"login": "trustin"}, "path": "grpc/src/main/java/com/linecorp/armeria/internal/common/grpc/GrpcMessageMarshaller.java", "diffHunk": "@@ -206,7 +206,7 @@ public O deserializeResponse(DeframedMessage message) throws IOException {\n             }\n             return buf;\n         } else {\n-            final ByteBuf buf = alloc.buffer();\n+            final ByteBuf buf = alloc.compositeBuffer();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "34346d7ab3327488db9b5c78d320248a90cacc10"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTE4NjExNA==", "bodyText": "\ud83d\ude31", "url": "https://github.com/line/armeria/pull/2930#discussion_r459186114", "createdAt": "2020-07-23T02:37:59Z", "author": {"login": "trustin"}, "path": "grpc/src/test/java/com/linecorp/armeria/client/grpc/GrpcClientTest.java", "diffHunk": "@@ -175,8 +175,8 @@ public void close(Status status, Metadata trailers) {\n                                        .setMaxOutboundMessageSizeBytes(MAX_MESSAGE_SIZE)\n                                        .useClientTimeoutHeader(false)\n                                        .build()\n-                                       .decorate((client, ctx, req) -> {\n-                                           final HttpResponse res = client.serve(ctx, req);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "34346d7ab3327488db9b5c78d320248a90cacc10"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTE4NjMzNg==", "bodyText": "Maybe better reverting this? Is it too noisy?", "url": "https://github.com/line/armeria/pull/2930#discussion_r459186336", "createdAt": "2020-07-23T02:39:02Z", "author": {"login": "trustin"}, "path": "grpc/src/test/java/com/linecorp/armeria/client/grpc/GrpcClientTest.java", "diffHunk": "@@ -211,11 +211,9 @@ void setUp() {\n         final URI uri = server.httpUri(GrpcSerializationFormats.PROTO);\n         blockingStub = Clients.builder(uri)\n                               .maxResponseLength(MAX_MESSAGE_SIZE)\n-                              .decorator(LoggingClient.builder().newDecorator())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "34346d7ab3327488db9b5c78d320248a90cacc10"}, "originalPosition": 31}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUzODA3MjU3", "url": "https://github.com/line/armeria/pull/2930#pullrequestreview-453807257", "createdAt": "2020-07-23T02:46:34Z", "commit": {"oid": "34346d7ab3327488db9b5c78d320248a90cacc10"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QwMjo0NjozNFrOG16muQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QwMjo1NTo0OVrOG16uSA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTE4Nzg5Nw==", "bodyText": "nit: How about introducing a new method such as writeWebTrailers(ByteBuf message) so that you don't need to put false every where?", "url": "https://github.com/line/armeria/pull/2930#discussion_r459187897", "createdAt": "2020-07-23T02:46:34Z", "author": {"login": "ikhoon"}, "path": "grpc-protocol/src/main/java/com/linecorp/armeria/common/grpc/protocol/ArmeriaMessageFramer.java", "diffHunk": "@@ -104,19 +110,23 @@ public ArmeriaMessageFramer(ByteBufAllocator alloc, int maxOutboundMessageSize)\n      * Writes out a payload message.\n      *\n      * @param message the message to be written out. Ownership is taken by {@link ArmeriaMessageFramer}.\n+     * @param webTrailers tells whether the payload is web trailers\n      *\n      * @return an {@link HttpData} with the framed payload. Ownership is passed to caller.\n      */\n-    public HttpData writePayload(ByteBuf message) {\n+    public HttpData writePayload(ByteBuf message, boolean webTrailers) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "34346d7ab3327488db9b5c78d320248a90cacc10"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTE4OTgzMg==", "bodyText": "Or set the log level to TRACE?", "url": "https://github.com/line/armeria/pull/2930#discussion_r459189832", "createdAt": "2020-07-23T02:55:49Z", "author": {"login": "ikhoon"}, "path": "grpc/src/test/java/com/linecorp/armeria/client/grpc/GrpcClientTest.java", "diffHunk": "@@ -211,11 +211,9 @@ void setUp() {\n         final URI uri = server.httpUri(GrpcSerializationFormats.PROTO);\n         blockingStub = Clients.builder(uri)\n                               .maxResponseLength(MAX_MESSAGE_SIZE)\n-                              .decorator(LoggingClient.builder().newDecorator())", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTE4NjMzNg=="}, "originalCommit": {"oid": "34346d7ab3327488db9b5c78d320248a90cacc10"}, "originalPosition": 31}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUzODExNjQy", "url": "https://github.com/line/armeria/pull/2930#pullrequestreview-453811642", "createdAt": "2020-07-23T03:07:21Z", "commit": {"oid": "34346d7ab3327488db9b5c78d320248a90cacc10"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QwMzowNzoyMlrOG163SA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QwMzowNzoyMlrOG163SA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTE5MjEzNg==", "bodyText": "\ud83d\ude31", "url": "https://github.com/line/armeria/pull/2930#discussion_r459192136", "createdAt": "2020-07-23T03:07:22Z", "author": {"login": "ikhoon"}, "path": "grpc/src/test/java/com/linecorp/armeria/client/grpc/GrpcWebRetryTest.java", "diffHunk": "@@ -112,8 +112,8 @@ void emptyCall(SerializationFormat serializationFormat) {\n                        .build(TestServiceBlockingStub.class);\n \n         try (ClientRequestContextCaptor captor = Clients.newContextCaptor()) {\n-            final SimpleResponse result = client.unaryCall(SimpleRequest.newBuilder().build());\n-            assertThat(result.getUsername()).isEqualTo(\"my name\");\n+            final Empty result = client.emptyCall(Empty.newBuilder().build());\n+            assertThat(result).isEqualTo(Empty.getDefaultInstance());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "34346d7ab3327488db9b5c78d320248a90cacc10"}, "originalPosition": 7}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c822ddb0b5bf96e15b06c6c2374ad58cf74788e7", "author": {"user": {"login": "minwoox", "name": "minux"}}, "url": "https://github.com/line/armeria/commit/c822ddb0b5bf96e15b06c6c2374ad58cf74788e7", "committedDate": "2020-07-23T03:19:33Z", "message": "Address the comment by @ikhoon"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2791325a945697c7b8885daa4ac2ca7da2e154a2", "author": {"user": {"login": "minwoox", "name": "minux"}}, "url": "https://github.com/line/armeria/commit/2791325a945697c7b8885daa4ac2ca7da2e154a2", "committedDate": "2020-07-23T03:24:12Z", "message": "Add TODOs"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUzODE1ODg4", "url": "https://github.com/line/armeria/pull/2930#pullrequestreview-453815888", "createdAt": "2020-07-23T03:26:52Z", "commit": {"oid": "2791325a945697c7b8885daa4ac2ca7da2e154a2"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ae8a94239b1c50ffdcee98186bc742eaecef0d97", "author": {"user": {"login": "minwoox", "name": "minux"}}, "url": "https://github.com/line/armeria/commit/ae8a94239b1c50ffdcee98186bc742eaecef0d97", "committedDate": "2020-07-23T03:37:09Z", "message": "Remove one todo"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUzODMzNjMy", "url": "https://github.com/line/armeria/pull/2930#pullrequestreview-453833632", "createdAt": "2020-07-23T04:48:31Z", "commit": {"oid": "ae8a94239b1c50ffdcee98186bc742eaecef0d97"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4935, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}