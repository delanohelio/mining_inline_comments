{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDYyMDU3ODYy", "number": 2964, "title": "Support compressed and base64 encoded trailers in GrpcWebUtil", "bodyText": "Motivation:\nPreviously, GrpcWebUtil.parseTrailers cannot parse the grpc-web trailers if it's compressed or base64 encoded.\nModifications:\n\nSupport decompression and decoding base64 in GrpcWebUtil.parseTrailers\n\nResult:\n\nYou can now use GrpcWebUtil.parseTrailers() to parse the compressed and base64encoded trailers", "createdAt": "2020-08-03T09:22:28Z", "url": "https://github.com/line/armeria/pull/2964", "merged": true, "mergeCommit": {"oid": "1bbc6e060e23c1d1388697c7e12f50d55fbc3f5f"}, "closed": true, "closedAt": "2020-08-03T15:45:11Z", "author": {"login": "minwoox"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc7Of2AAH2gAyNDYyMDU3ODYyOjI2OWQ5MTVhNWIwNTJjMGQzMzMwNzVjMTdjMjcxNzZlMGFhY2U5M2I=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc7TtJDgH2gAyNDYyMDU3ODYyOjc4MzZmNDExMmJiM2VjZDliNzEwNTQ2YzA0MDY2MmU2ZjVlZDFjNGE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "269d915a5b052c0d333075c17c27176e0aace93b", "author": {"user": {"login": "minwoox", "name": "minux"}}, "url": "https://github.com/line/armeria/commit/269d915a5b052c0d333075c17c27176e0aace93b", "committedDate": "2020-08-03T09:21:04Z", "message": "Support compresses and base64 encoded trailers in GrpcWebUtil\nMotivation:\nPreviously, `GrpcWebUtil.parseTrailers` cannot parse the grpc-web trailers if it's compressed or base64 encoded.\n\nModifications:\n- Support decompression and decoding base64 in `GrpcWebUtil.parseTrailers`\n\nResult:\n- You can now use `GrpcWebUtil.parseTrailers()` to parse the compressed and base64encoded trailers"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU5ODc5NzAy", "url": "https://github.com/line/armeria/pull/2964#pullrequestreview-459879702", "createdAt": "2020-08-03T09:25:54Z", "commit": {"oid": "269d915a5b052c0d333075c17c27176e0aace93b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU5OTU4NTEw", "url": "https://github.com/line/armeria/pull/2964#pullrequestreview-459958510", "createdAt": "2020-08-03T11:41:31Z", "commit": {"oid": "269d915a5b052c0d333075c17c27176e0aace93b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QxMTo0MTozMVrOG62Sog==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QxMTo0MTozMVrOG62Sog==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDM2MDA5OA==", "bodyText": "nit: Could remove success flag? I think we don't need to check that success is true.", "url": "https://github.com/line/armeria/pull/2964#discussion_r464360098", "createdAt": "2020-08-03T11:41:31Z", "author": {"login": "ikhoon"}, "path": "grpc/src/main/java/com/linecorp/armeria/client/grpc/GrpcWebUtil.java", "diffHunk": "@@ -88,39 +99,76 @@ public static HttpHeaders parseTrailers(ClientRequestContext ctx, HttpData respo\n         requireNonNull(response, \"response\");\n         final SerializationFormat serializationFormat =\n                 ctx.log().ensureAvailable(RequestLogProperty.SCHEME).scheme().serializationFormat();\n+\n+        final ByteBuf buf;\n         if (GrpcSerializationFormats.isGrpcWebText(serializationFormat)) {\n-            // TODO(minwoox) support decoding base64.\n-            return null;\n+            final Base64Decoder decoder = new Base64Decoder(ctx.alloc());\n+            buf = decoder.decode(response.byteBuf());\n+        } else {\n+            buf = response.byteBuf();\n         }\n-        final ByteBuf buf = response.byteBuf();\n-\n-        HttpHeaders trailers = null;\n-        while (buf.isReadable(HEADER_LENGTH)) {\n-            final short type = buf.readUnsignedByte();\n-            if ((type & RESERVED_MASK) != 0) {\n-                // Malformed header\n-                break;\n-            }\n \n-            final int length = buf.readInt();\n-            // 8th (MSB) bit of the 1st gRPC frame byte is:\n-            // - '1' for trailers\n-            // - '0' for data\n-            //\n-            // See: https://github.com/grpc/grpc/blob/master/doc/PROTOCOL-WEB.md\n-            if (type >> 7 == 1) {\n-                if ((type & 1) > 0) {\n-                    // TODO(minwoox) support compressed trailer.\n+        try {\n+            while (buf.isReadable(HEADER_LENGTH)) {\n+                final short type = buf.readUnsignedByte();\n+                if ((type & RESERVED_MASK) != 0) {\n+                    // Malformed header\n                     break;\n                 }\n-                trailers = InternalGrpcWebUtil.parseGrpcWebTrailers(buf);\n-                break;\n-            } else {\n-                // Skip a gRPC content\n-                buf.skipBytes(length);\n+\n+                final int length = buf.readInt();\n+                // 8th (MSB) bit of the 1st gRPC frame byte is:\n+                // - '1' for trailers\n+                // - '0' for data\n+                //\n+                // See: https://github.com/grpc/grpc/blob/master/doc/PROTOCOL-WEB.md\n+                if (type >> 7 == 1) {\n+                    if ((type & 1) > 0) {\n+                        // The compressed trailers.\n+                        final ResponseHeaders responseHeaders = ctx.log().ensureAvailable(\n+                                RequestLogProperty.RESPONSE_HEADERS).responseHeaders();\n+                        final String grpcEncoding = responseHeaders.get(GrpcHeaderNames.GRPC_ENCODING);\n+                        // We use DecompressorRegistry in ArmeriaClientCall. If ArmeriaClientCall\n+                        // supports to add another decompressor, we will change this to support that too.\n+                        final DecompressorRegistry registry = DecompressorRegistry.getDefaultInstance();\n+                        if (grpcEncoding == null) {\n+                            // grpc-encoding header is missing.\n+                            return null;\n+                        }\n+                        final Decompressor decompressor = registry.lookupDecompressor(grpcEncoding);\n+                        if (decompressor == null) {\n+                            return null;\n+                        }\n+\n+                        final ByteBuf outputBuf = ctx.alloc().compositeBuffer();\n+                        boolean success = false;\n+                        try (ByteBufInputStream is = new ByteBufInputStream(buf);\n+                             InputStream decompressIs = decompressor.decompress(is);\n+                             ByteBufOutputStream os = new ByteBufOutputStream(outputBuf)) {\n+                            ByteStreams.copy(decompressIs, os);\n+                            success = true;\n+                        } catch (Throwable t) {\n+                            if (!success) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "269d915a5b052c0d333075c17c27176e0aace93b"}, "originalPosition": 122}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU5OTY1MTgy", "url": "https://github.com/line/armeria/pull/2964#pullrequestreview-459965182", "createdAt": "2020-08-03T11:54:14Z", "commit": {"oid": "269d915a5b052c0d333075c17c27176e0aace93b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "64f80a73b5d433f72d8520fd0a3882a1c6480129", "author": {"user": {"login": "minwoox", "name": "minux"}}, "url": "https://github.com/line/armeria/commit/64f80a73b5d433f72d8520fd0a3882a1c6480129", "committedDate": "2020-08-03T14:18:55Z", "message": "Address the comment by @trustin"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7836f4112bb3ecd9b710546c040662e6f5ed1c4a", "author": {"user": {"login": "trustin", "name": "Trustin Lee"}}, "url": "https://github.com/line/armeria/commit/7836f4112bb3ecd9b710546c040662e6f5ed1c4a", "committedDate": "2020-08-03T15:25:07Z", "message": "Merge branch 'master' into grpcWebUtil"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4993, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}