{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU1NjE0Mzg4", "number": 2933, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQwMTo0MTo0NlrOERq9Lw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQwMTo0Mjo1NlrOERq9tQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2OTY1MDM5OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/com/linecorp/armeria/server/PathMapping.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQwMTo0MTo0NlrOG2g5Fg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQwMjoxMzowMVrOG2hSYg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTgxNTE5MA==", "bodyText": "How is regex translated into **?", "url": "https://github.com/line/armeria/pull/2933#discussion_r459815190", "createdAt": "2020-07-24T01:41:46Z", "author": {"login": "trustin"}, "path": "core/src/main/java/com/linecorp/armeria/server/PathMapping.java", "diffHunk": "@@ -48,14 +50,36 @@\n      * Returns the logger name.\n      *\n      * @return the logger name whose components are separated by a dot (.)\n+     *\n+     * @deprecated Use {@link RequestLog#name()}, {@link RequestLog#serviceName()} or\n+     *             {@link Route#pathPattern()}.\n      */\n+    @Deprecated\n     String loggerName();\n \n     /**\n      * Returns the value of the {@link Tag} in a {@link Meter} of this {@link PathMapping}.\n+     *\n+     * @deprecated Use {@link RequestLog#name()}, {@link RequestLog#serviceName()} or\n+     *             {@link Route#pathPattern()}.\n      */\n+    @Deprecated\n     String meterTag();\n \n+    /**\n+     * Returns the path pattern of this {@link PathMapping}. The returned path pattern is different according to\n+     * the value of {@link #pathType()}.\n+     *\n+     * <ul>\n+     *   <li>{@linkplain RoutePathType#EXACT EXACT}: {@code \"/foo\" or \"/foo/bar\"}</li>\n+     *   <li>{@linkplain RoutePathType#PREFIX PREFIX}: {@code \"/foo/*\"}</li>\n+     *   <li>{@linkplain RoutePathType#PARAMETERIZED PARAMETERIZED}: {@code \"/foo/:bar\" or \"/foo/:bar/:qux}</li>\n+     *   <li>{@linkplain RoutePathType#REGEX REGEX}: {@code \"/*&#42;/foo\" }</li>\n+     *   <li>{@linkplain RoutePathType#REGEX_WITH_PREFIX REGEX_WITH_PREFIX}: {@code \"/foo/*&#42;/bar\" }</li>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ea559c7d91a2808aeec795fec8944b6edf1a5672"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTgyMTY2Ng==", "bodyText": "Ah, it is glob... \ud83d\ude05", "url": "https://github.com/line/armeria/pull/2933#discussion_r459821666", "createdAt": "2020-07-24T02:13:01Z", "author": {"login": "ikhoon"}, "path": "core/src/main/java/com/linecorp/armeria/server/PathMapping.java", "diffHunk": "@@ -48,14 +50,36 @@\n      * Returns the logger name.\n      *\n      * @return the logger name whose components are separated by a dot (.)\n+     *\n+     * @deprecated Use {@link RequestLog#name()}, {@link RequestLog#serviceName()} or\n+     *             {@link Route#pathPattern()}.\n      */\n+    @Deprecated\n     String loggerName();\n \n     /**\n      * Returns the value of the {@link Tag} in a {@link Meter} of this {@link PathMapping}.\n+     *\n+     * @deprecated Use {@link RequestLog#name()}, {@link RequestLog#serviceName()} or\n+     *             {@link Route#pathPattern()}.\n      */\n+    @Deprecated\n     String meterTag();\n \n+    /**\n+     * Returns the path pattern of this {@link PathMapping}. The returned path pattern is different according to\n+     * the value of {@link #pathType()}.\n+     *\n+     * <ul>\n+     *   <li>{@linkplain RoutePathType#EXACT EXACT}: {@code \"/foo\" or \"/foo/bar\"}</li>\n+     *   <li>{@linkplain RoutePathType#PREFIX PREFIX}: {@code \"/foo/*\"}</li>\n+     *   <li>{@linkplain RoutePathType#PARAMETERIZED PARAMETERIZED}: {@code \"/foo/:bar\" or \"/foo/:bar/:qux}</li>\n+     *   <li>{@linkplain RoutePathType#REGEX REGEX}: {@code \"/*&#42;/foo\" }</li>\n+     *   <li>{@linkplain RoutePathType#REGEX_WITH_PREFIX REGEX_WITH_PREFIX}: {@code \"/foo/*&#42;/bar\" }</li>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTgxNTE5MA=="}, "originalCommit": {"oid": "ea559c7d91a2808aeec795fec8944b6edf1a5672"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2OTY1MTczOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/com/linecorp/armeria/server/PathMapping.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQwMTo0Mjo1NlrOG2g56w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQwNDoxMzoyOVrOG2io2Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTgxNTQwMw==", "bodyText": "How about renaming this? We currently use the term pathPattern for the path patterns a user specify when binding a service and it has different format from this.", "url": "https://github.com/line/armeria/pull/2933#discussion_r459815403", "createdAt": "2020-07-24T01:42:56Z", "author": {"login": "trustin"}, "path": "core/src/main/java/com/linecorp/armeria/server/PathMapping.java", "diffHunk": "@@ -48,14 +50,36 @@\n      * Returns the logger name.\n      *\n      * @return the logger name whose components are separated by a dot (.)\n+     *\n+     * @deprecated Use {@link RequestLog#name()}, {@link RequestLog#serviceName()} or\n+     *             {@link Route#pathPattern()}.\n      */\n+    @Deprecated\n     String loggerName();\n \n     /**\n      * Returns the value of the {@link Tag} in a {@link Meter} of this {@link PathMapping}.\n+     *\n+     * @deprecated Use {@link RequestLog#name()}, {@link RequestLog#serviceName()} or\n+     *             {@link Route#pathPattern()}.\n      */\n+    @Deprecated\n     String meterTag();\n \n+    /**\n+     * Returns the path pattern of this {@link PathMapping}. The returned path pattern is different according to\n+     * the value of {@link #pathType()}.\n+     *\n+     * <ul>\n+     *   <li>{@linkplain RoutePathType#EXACT EXACT}: {@code \"/foo\" or \"/foo/bar\"}</li>\n+     *   <li>{@linkplain RoutePathType#PREFIX PREFIX}: {@code \"/foo/*\"}</li>\n+     *   <li>{@linkplain RoutePathType#PARAMETERIZED PARAMETERIZED}: {@code \"/foo/:bar\" or \"/foo/:bar/:qux}</li>\n+     *   <li>{@linkplain RoutePathType#REGEX REGEX}: {@code \"/*&#42;/foo\" }</li>\n+     *   <li>{@linkplain RoutePathType#REGEX_WITH_PREFIX REGEX_WITH_PREFIX}: {@code \"/foo/*&#42;/bar\" }</li>\n+     * </ul>\n+     */\n+    String pathPattern();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ea559c7d91a2808aeec795fec8944b6edf1a5672"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTgyMjgzNg==", "bodyText": "Users usually access this method by Route. Let me think more about which name goes well with Route. \ud83e\udd14", "url": "https://github.com/line/armeria/pull/2933#discussion_r459822836", "createdAt": "2020-07-24T02:18:51Z", "author": {"login": "ikhoon"}, "path": "core/src/main/java/com/linecorp/armeria/server/PathMapping.java", "diffHunk": "@@ -48,14 +50,36 @@\n      * Returns the logger name.\n      *\n      * @return the logger name whose components are separated by a dot (.)\n+     *\n+     * @deprecated Use {@link RequestLog#name()}, {@link RequestLog#serviceName()} or\n+     *             {@link Route#pathPattern()}.\n      */\n+    @Deprecated\n     String loggerName();\n \n     /**\n      * Returns the value of the {@link Tag} in a {@link Meter} of this {@link PathMapping}.\n+     *\n+     * @deprecated Use {@link RequestLog#name()}, {@link RequestLog#serviceName()} or\n+     *             {@link Route#pathPattern()}.\n      */\n+    @Deprecated\n     String meterTag();\n \n+    /**\n+     * Returns the path pattern of this {@link PathMapping}. The returned path pattern is different according to\n+     * the value of {@link #pathType()}.\n+     *\n+     * <ul>\n+     *   <li>{@linkplain RoutePathType#EXACT EXACT}: {@code \"/foo\" or \"/foo/bar\"}</li>\n+     *   <li>{@linkplain RoutePathType#PREFIX PREFIX}: {@code \"/foo/*\"}</li>\n+     *   <li>{@linkplain RoutePathType#PARAMETERIZED PARAMETERIZED}: {@code \"/foo/:bar\" or \"/foo/:bar/:qux}</li>\n+     *   <li>{@linkplain RoutePathType#REGEX REGEX}: {@code \"/*&#42;/foo\" }</li>\n+     *   <li>{@linkplain RoutePathType#REGEX_WITH_PREFIX REGEX_WITH_PREFIX}: {@code \"/foo/*&#42;/bar\" }</li>\n+     * </ul>\n+     */\n+    String pathPattern();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTgxNTQwMw=="}, "originalCommit": {"oid": "ea559c7d91a2808aeec795fec8944b6edf1a5672"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTgyMzQ0Mw==", "bodyText": "How about patternString()?", "url": "https://github.com/line/armeria/pull/2933#discussion_r459823443", "createdAt": "2020-07-24T02:21:43Z", "author": {"login": "ikhoon"}, "path": "core/src/main/java/com/linecorp/armeria/server/PathMapping.java", "diffHunk": "@@ -48,14 +50,36 @@\n      * Returns the logger name.\n      *\n      * @return the logger name whose components are separated by a dot (.)\n+     *\n+     * @deprecated Use {@link RequestLog#name()}, {@link RequestLog#serviceName()} or\n+     *             {@link Route#pathPattern()}.\n      */\n+    @Deprecated\n     String loggerName();\n \n     /**\n      * Returns the value of the {@link Tag} in a {@link Meter} of this {@link PathMapping}.\n+     *\n+     * @deprecated Use {@link RequestLog#name()}, {@link RequestLog#serviceName()} or\n+     *             {@link Route#pathPattern()}.\n      */\n+    @Deprecated\n     String meterTag();\n \n+    /**\n+     * Returns the path pattern of this {@link PathMapping}. The returned path pattern is different according to\n+     * the value of {@link #pathType()}.\n+     *\n+     * <ul>\n+     *   <li>{@linkplain RoutePathType#EXACT EXACT}: {@code \"/foo\" or \"/foo/bar\"}</li>\n+     *   <li>{@linkplain RoutePathType#PREFIX PREFIX}: {@code \"/foo/*\"}</li>\n+     *   <li>{@linkplain RoutePathType#PARAMETERIZED PARAMETERIZED}: {@code \"/foo/:bar\" or \"/foo/:bar/:qux}</li>\n+     *   <li>{@linkplain RoutePathType#REGEX REGEX}: {@code \"/*&#42;/foo\" }</li>\n+     *   <li>{@linkplain RoutePathType#REGEX_WITH_PREFIX REGEX_WITH_PREFIX}: {@code \"/foo/*&#42;/bar\" }</li>\n+     * </ul>\n+     */\n+    String pathPattern();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTgxNTQwMw=="}, "originalCommit": {"oid": "ea559c7d91a2808aeec795fec8944b6edf1a5672"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTg0MzgwMQ==", "bodyText": "That sounds good, I think webflux uses getPatternString", "url": "https://github.com/line/armeria/pull/2933#discussion_r459843801", "createdAt": "2020-07-24T04:13:29Z", "author": {"login": "anuraaga"}, "path": "core/src/main/java/com/linecorp/armeria/server/PathMapping.java", "diffHunk": "@@ -48,14 +50,36 @@\n      * Returns the logger name.\n      *\n      * @return the logger name whose components are separated by a dot (.)\n+     *\n+     * @deprecated Use {@link RequestLog#name()}, {@link RequestLog#serviceName()} or\n+     *             {@link Route#pathPattern()}.\n      */\n+    @Deprecated\n     String loggerName();\n \n     /**\n      * Returns the value of the {@link Tag} in a {@link Meter} of this {@link PathMapping}.\n+     *\n+     * @deprecated Use {@link RequestLog#name()}, {@link RequestLog#serviceName()} or\n+     *             {@link Route#pathPattern()}.\n      */\n+    @Deprecated\n     String meterTag();\n \n+    /**\n+     * Returns the path pattern of this {@link PathMapping}. The returned path pattern is different according to\n+     * the value of {@link #pathType()}.\n+     *\n+     * <ul>\n+     *   <li>{@linkplain RoutePathType#EXACT EXACT}: {@code \"/foo\" or \"/foo/bar\"}</li>\n+     *   <li>{@linkplain RoutePathType#PREFIX PREFIX}: {@code \"/foo/*\"}</li>\n+     *   <li>{@linkplain RoutePathType#PARAMETERIZED PARAMETERIZED}: {@code \"/foo/:bar\" or \"/foo/:bar/:qux}</li>\n+     *   <li>{@linkplain RoutePathType#REGEX REGEX}: {@code \"/*&#42;/foo\" }</li>\n+     *   <li>{@linkplain RoutePathType#REGEX_WITH_PREFIX REGEX_WITH_PREFIX}: {@code \"/foo/*&#42;/bar\" }</li>\n+     * </ul>\n+     */\n+    String pathPattern();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTgxNTQwMw=="}, "originalCommit": {"oid": "ea559c7d91a2808aeec795fec8944b6edf1a5672"}, "originalPosition": 41}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2124, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}