{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDcyMzE2NDI5", "number": 3023, "title": "Use `ArmeriaHttp(Client|Server)Parser` by default in Brave decorators", "bodyText": "Motivation:\nWe'd better to use our default parser for HttpTracing which are ArmeriaHttp(Client|Server)Parser\nrather than Brave's default parser.\nModification:\n\nOverride (Client|Server)(Request|Response)Parser with ArmeriaHttp(Client|Server)Parser\nif they are the default brave parsers in Brave(Client|Service).\n\nResult:\n\nArmeriaHttp(Client|Server)Parser are used by default in Brave(Client|Service).", "createdAt": "2020-08-24T07:13:55Z", "url": "https://github.com/line/armeria/pull/3023", "merged": true, "mergeCommit": {"oid": "dc7f43251d14a3c78e569bf5e5dccf36673b3b97"}, "closed": true, "closedAt": "2020-08-25T22:23:45Z", "author": {"login": "minwoox"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdB9PSaAH2gAyNDcyMzE2NDI5OjE0NjdlNWQ4NzIwODQ2OTI1NWVhMzcxMTNmM2Q4MjJhNjhlNTE4ODc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdM1y4KAFqTQ5NzA0NTIyMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "1467e5d87208469255ea37113f3d822a68e51887", "author": {"user": {"login": "minwoox", "name": "minux"}}, "url": "https://github.com/line/armeria/commit/1467e5d87208469255ea37113f3d822a68e51887", "committedDate": "2020-08-24T07:12:04Z", "message": "Use `ArmeriaHttp(Client|Server)Parser` by default in Brave decorators\nMotivation:\nWe'd better to use our default parser for `HttpTracing` which are `ArmeriaHttp(Client|Server)Parser`\nrather than Brave's default parser.\n\nModification:\n- Override (Client|Server)(Request|Response)Parser with `ArmeriaHttp(Client|Server)Parser`\n  if they are the default brave parsers in `Brave(Client|Service)`.\n\nResult:\n- `ArmeriaHttp(Client|Server)Parser` are used by default in `Brave(Client|Service)`."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDczMTkxMTY5", "url": "https://github.com/line/armeria/pull/3023#pullrequestreview-473191169", "createdAt": "2020-08-24T07:43:10Z", "commit": {"oid": "1467e5d87208469255ea37113f3d822a68e51887"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc0NTU4Njcy", "url": "https://github.com/line/armeria/pull/3023#pullrequestreview-474558672", "createdAt": "2020-08-25T14:48:32Z", "commit": {"oid": "1467e5d87208469255ea37113f3d822a68e51887"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk3MDQ1MDc3", "url": "https://github.com/line/armeria/pull/3023#pullrequestreview-497045077", "createdAt": "2020-09-27T02:41:17Z", "commit": {"oid": "1467e5d87208469255ea37113f3d822a68e51887"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yN1QwMjo0MToxN1rOHYkFFw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yN1QwMjo0MToxN1rOHYkFFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTUxODk5OQ==", "bodyText": "for example, if someone is using vertx and they now switch to armeria, it will break how they parsed before unless they intentionally don't use the singletons. For example, the only way I can tell we can get back to \"default\" is to wrap the brave parsers again so that they aren't the same instance.", "url": "https://github.com/line/armeria/pull/3023#discussion_r495518999", "createdAt": "2020-09-27T02:41:17Z", "author": {"login": "codefromthecrypt"}, "path": "brave/src/main/java/com/linecorp/armeria/client/brave/BraveClient.java", "diffHunk": "@@ -78,16 +80,29 @@\n     /**\n      * Creates a new tracing {@link HttpClient} decorator using the specified {@link HttpTracing} instance.\n      */\n-    public static Function<? super HttpClient, BraveClient> newDecorator(\n-            HttpTracing httpTracing) {\n+    public static Function<? super HttpClient, BraveClient> newDecorator(HttpTracing httpTracing) {\n         try {\n             ensureScopeUsesRequestContext(httpTracing.tracing());\n         } catch (IllegalStateException e) {\n             logger.warn(\"{} - it is appropriate to ignore this warning if this client is not being used \" +\n                         \"inside an Armeria server (e.g., this is a normal spring-mvc tomcat server).\",\n                         e.getMessage());\n         }\n-        return delegate -> new BraveClient(delegate, httpTracing);\n+        final HttpRequestParser requestParser = httpTracing.clientRequestParser();\n+        final HttpResponseParser responseParser = httpTracing.clientResponseParser();\n+        if (requestParser != HttpRequestParser.DEFAULT && responseParser != HttpResponseParser.DEFAULT) {\n+            return delegate -> new BraveClient(delegate, httpTracing);\n+        }\n+\n+        // Override the brave default parsers to Armeria default parsers.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1467e5d87208469255ea37113f3d822a68e51887"}, "originalPosition": 30}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk3MDQ1MjIz", "url": "https://github.com/line/armeria/pull/3023#pullrequestreview-497045223", "createdAt": "2020-09-27T02:44:52Z", "commit": {"oid": "1467e5d87208469255ea37113f3d822a68e51887"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yN1QwMjo0NDo1MlrOHYkF7w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yN1QwMjo0NDo1MlrOHYkF7w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTUxOTIxNQ==", "bodyText": "here is where we are playing games to undo the change. having a consistent policy across all libraries is actually a goal of abstractions.\nsetting the span name to match the service name is very confusing, especially as a default. The motivation behind this could also drift as UI does.. for example, if this is done to effect a change in the UI it would have been better to request that change instead.\nIn general I think this change should be reverted as span name != service name and conflating them is very confusing. Please let me know if I somehow missed something thought. cc @anuraaga", "url": "https://github.com/line/armeria/pull/3023#discussion_r495519215", "createdAt": "2020-09-27T02:44:52Z", "author": {"login": "codefromthecrypt"}, "path": "brave/src/test/java/com/linecorp/armeria/server/brave/BraveServiceIntegrationTest.java", "diffHunk": "@@ -144,6 +146,20 @@ public void httpStatusCodeSettable_onUncaughtException_async() {\n             \"Can't currently control the HTTP status code on uncaught exception. #2656\");\n     }\n \n+    @Test\n+    @Override\n+    public void httpRoute() throws IOException {\n+        httpTracing = httpTracing.toBuilder().serverResponseParser(HttpResponseParser.DEFAULT::parse).build();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1467e5d87208469255ea37113f3d822a68e51887"}, "originalPosition": 23}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 124, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}