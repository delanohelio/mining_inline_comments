{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY1MTQ0MzM3", "number": 2412, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQwODowODo0MlrODZZ10A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQwODowODo0MlrODZZ10A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3OTY0MzY4OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/com/linecorp/armeria/server/docs/DocService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQwODowODo0MlrOFfxOhw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQwODowODo0MlrOFfxOhw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODg1NjcxMQ==", "bodyText": "A bit more characters, but guess we may just stick to Stream API for simplicity Stream.concat(Streams.stream(first), Streams.stream(second)).distinct()", "url": "https://github.com/line/armeria/pull/2412#discussion_r368856711", "createdAt": "2020-01-21T08:08:42Z", "author": {"login": "anuraaga"}, "path": "core/src/main/java/com/linecorp/armeria/server/docs/DocService.java", "diffHunk": "@@ -318,14 +318,20 @@ private ServiceInfo addServiceExamples(ServiceInfo service) {\n                 service.methods().stream().map(m -> new MethodInfo(\n                         m.name(), m.returnTypeSignature(), m.parameters(), m.exceptionTypeSignatures(),\n                         m.endpoints(),\n-                        Iterables.concat(m.exampleHttpHeaders(), exampleHttpHeaders.get(m.name())),\n-                        Iterables.concat(m.exampleRequests(), exampleRequests.get(m.name())),\n+                        // Show the examples added via `DocServiceBuilder` before the examples\n+                        // generated by the plugin.\n+                        concatAndDedup(exampleHttpHeaders.get(m.name()), m.exampleHttpHeaders()),\n+                        concatAndDedup(exampleRequests.get(m.name()), m.exampleRequests()),\n                         m.httpMethod(), m.docString()))::iterator,\n                 Iterables.concat(service.exampleHttpHeaders(),\n                                  exampleHttpHeaders.get(\"\")),\n                 service.docString());\n     }\n \n+    private static <T> Iterable<T> concatAndDedup(Iterable<T> first, Iterable<T> second) {\n+        return Streams.stream(Iterables.concat(first, second)).distinct()::iterator;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "316f080423ca0b4170a3144ec6c85e8282485a6b"}, "originalPosition": 17}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2926, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}