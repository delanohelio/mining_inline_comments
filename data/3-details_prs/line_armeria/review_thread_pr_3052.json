{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDgyNDU0NzA1", "number": 3052, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQwODowNzoyMFrOEibVWw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQwODoxMDozMlrOEibZzQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA0NTM0ODc1OnYy", "diffSide": "RIGHT", "path": "site/src/pages/docs/client-http.mdx", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQwODowNzoyMFrOHQSvlA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQwODowNzoyMFrOHQSvlA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njg0NjM1Ng==", "bodyText": "a <type://WebClient>", "url": "https://github.com/line/armeria/pull/3052#discussion_r486846356", "createdAt": "2020-09-11T08:07:20Z", "author": {"login": "trustin"}, "path": "site/src/pages/docs/client-http.mdx", "diffHunk": "@@ -1,5 +1,7 @@\n # Calling an HTTP service\n \n+You can create <type://WebClient> with a base URI and send a request with a relative path.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "64149137bb78fea8d75291c4d300add111ac2d31"}, "originalPosition": 3}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA0NTM1MTg1OnYy", "diffSide": "RIGHT", "path": "site/src/pages/docs/client-http.mdx", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQwODowODoxN1rOHQSxjQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQwODowODoxN1rOHQSxjQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njg0Njg2MQ==", "bodyText": "Sending/Building/Handling?", "url": "https://github.com/line/armeria/pull/3052#discussion_r486846861", "createdAt": "2020-09-11T08:08:17Z", "author": {"login": "trustin"}, "path": "site/src/pages/docs/client-http.mdx", "diffHunk": "@@ -23,6 +25,43 @@ AggregatedHttpResponse res3 = webClient.post(\"/upload\", \"{ \\\"foo\\\": \\\"bar\\\" }\")\n                                        .aggregate().join();\n ```\n \n+You can also create <type://WebClient> without a base URI and send a request with an absolute URI.\n+The ad-hoc <type://WebClient> would be useful in the following cases:\n+\n+- Send requests to arbitrary endpoints\n+- Build a proxy server\n+- Handle redirected requests", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "64149137bb78fea8d75291c4d300add111ac2d31"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA0NTM2MDEzOnYy", "diffSide": "RIGHT", "path": "site/src/pages/docs/client-http.mdx", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQwODoxMDozMlrOHQS2mg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQwOToyNzo0NlrOHQWbZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njg0ODE1NA==", "bodyText": "@tobias- told me this did not work for him. Could you double-check if this example works as expected?", "url": "https://github.com/line/armeria/pull/3052#discussion_r486848154", "createdAt": "2020-09-11T08:10:32Z", "author": {"login": "trustin"}, "path": "site/src/pages/docs/client-http.mdx", "diffHunk": "@@ -23,6 +25,43 @@ AggregatedHttpResponse res3 = webClient.post(\"/upload\", \"{ \\\"foo\\\": \\\"bar\\\" }\")\n                                        .aggregate().join();\n ```\n \n+You can also create <type://WebClient> without a base URI and send a request with an absolute URI.\n+The ad-hoc <type://WebClient> would be useful in the following cases:\n+\n+- Send requests to arbitrary endpoints\n+- Build a proxy server\n+- Handle redirected requests\n+\n+```java\n+import com.linecorp.armeria.common.HttpStatus;\n+import com.linecorp.armeria.common.HttpHeaderNames;\n+\n+// Create a WebClient without a base URI.\n+WebClient webClient = WebClient.of();\n+\n+// Send a request with an absolute URI.\n+AggregatedHttpResponse res1 = webClient.get(\"http://example.com/foo/bar.txt\")\n+                                       .aggregate()\n+                                       .join();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "64149137bb78fea8d75291c4d300add111ac2d31"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njg1NTAyOQ==", "bodyText": "Sure! Let me check it.", "url": "https://github.com/line/armeria/pull/3052#discussion_r486855029", "createdAt": "2020-09-11T08:23:35Z", "author": {"login": "ikhoon"}, "path": "site/src/pages/docs/client-http.mdx", "diffHunk": "@@ -23,6 +25,43 @@ AggregatedHttpResponse res3 = webClient.post(\"/upload\", \"{ \\\"foo\\\": \\\"bar\\\" }\")\n                                        .aggregate().join();\n ```\n \n+You can also create <type://WebClient> without a base URI and send a request with an absolute URI.\n+The ad-hoc <type://WebClient> would be useful in the following cases:\n+\n+- Send requests to arbitrary endpoints\n+- Build a proxy server\n+- Handle redirected requests\n+\n+```java\n+import com.linecorp.armeria.common.HttpStatus;\n+import com.linecorp.armeria.common.HttpHeaderNames;\n+\n+// Create a WebClient without a base URI.\n+WebClient webClient = WebClient.of();\n+\n+// Send a request with an absolute URI.\n+AggregatedHttpResponse res1 = webClient.get(\"http://example.com/foo/bar.txt\")\n+                                       .aggregate()\n+                                       .join();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njg0ODE1NA=="}, "originalCommit": {"oid": "64149137bb78fea8d75291c4d300add111ac2d31"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjkwNjcyNw==", "bodyText": "Tested and it worked as expected. \ud83d\ude00\nCurrently ad-hoc WebClient is verified by:\n\n  \n    \n      armeria/core/src/test/java/com/linecorp/armeria/client/HttpClientRequestPathTest.java\n    \n    \n        Lines 107 to 118\n      in\n      fbe90f0\n    \n    \n    \n    \n\n        \n          \n           @ParameterizedTest \n        \n\n        \n          \n           @EnumSource(value = SessionProtocol.class, mode = Mode.EXCLUDE, names = \"PROXY\") \n        \n\n        \n          \n           void default_withScheme(SessionProtocol protocol) { \n        \n\n        \n          \n               final HttpRequest request = HttpRequest.of(HttpMethod.GET, server2.uri(protocol) + \"/simple-client\"); \n        \n\n        \n          \n               try (ClientRequestContextCaptor captor = Clients.newContextCaptor()) { \n        \n\n        \n          \n                   final WebClient client = WebClient.builder().factory(ClientFactory.insecure()).build(); \n        \n\n        \n          \n                   final HttpResponse response = client.execute(request); \n        \n\n        \n          \n                   final ClientRequestContext ctx = captor.get(); \n        \n\n        \n          \n                   assertThat(ctx.sessionProtocol()).isEqualTo(protocol); \n        \n\n        \n          \n                   assertThat(response.aggregate().join().status()).isEqualTo(OK); \n        \n\n        \n          \n               } \n        \n\n        \n          \n           }", "url": "https://github.com/line/armeria/pull/3052#discussion_r486906727", "createdAt": "2020-09-11T09:27:46Z", "author": {"login": "ikhoon"}, "path": "site/src/pages/docs/client-http.mdx", "diffHunk": "@@ -23,6 +25,43 @@ AggregatedHttpResponse res3 = webClient.post(\"/upload\", \"{ \\\"foo\\\": \\\"bar\\\" }\")\n                                        .aggregate().join();\n ```\n \n+You can also create <type://WebClient> without a base URI and send a request with an absolute URI.\n+The ad-hoc <type://WebClient> would be useful in the following cases:\n+\n+- Send requests to arbitrary endpoints\n+- Build a proxy server\n+- Handle redirected requests\n+\n+```java\n+import com.linecorp.armeria.common.HttpStatus;\n+import com.linecorp.armeria.common.HttpHeaderNames;\n+\n+// Create a WebClient without a base URI.\n+WebClient webClient = WebClient.of();\n+\n+// Send a request with an absolute URI.\n+AggregatedHttpResponse res1 = webClient.get(\"http://example.com/foo/bar.txt\")\n+                                       .aggregate()\n+                                       .join();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njg0ODE1NA=="}, "originalCommit": {"oid": "64149137bb78fea8d75291c4d300add111ac2d31"}, "originalPosition": 29}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1867, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}