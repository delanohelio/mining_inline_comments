{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE3MTMwMzMy", "number": 2706, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QwNTo0NzoyOVrOD76tnQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQwMjoxNjo0MFrOD8THrQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0MTU0NTI1OnYy", "diffSide": "RIGHT", "path": "thrift/src/main/java/com/linecorp/armeria/common/thrift/text/TTextProtocol.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QwNTo0NzoyOVrOGUiQsg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QwNjo0MzowN1rOGUjeMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDE4NjAzNA==", "bodyText": "This is to avoid an unnecessary call to getCurrentFieldClassIfIs(). I can remove it if you consider the impact insignificant", "url": "https://github.com/line/armeria/pull/2706#discussion_r424186034", "createdAt": "2020-05-13T05:47:29Z", "author": {"login": "KarboniteKream"}, "path": "thrift/src/main/java/com/linecorp/armeria/common/thrift/text/TTextProtocol.java", "diffHunk": "@@ -337,7 +344,25 @@ public void writeI16(short i16) throws TException {\n \n     @Override\n     public void writeI32(int i32) throws TException {\n-        writeNameOrValue(TypedParser.INTEGER, i32);\n+        if (!writeEnumsAsString) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6f58ae94fde45799d9d74b3cdf3c4def809deeed"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDIwNTg3Mg==", "bodyText": "Sounds good to me.", "url": "https://github.com/line/armeria/pull/2706#discussion_r424205872", "createdAt": "2020-05-13T06:43:07Z", "author": {"login": "trustin"}, "path": "thrift/src/main/java/com/linecorp/armeria/common/thrift/text/TTextProtocol.java", "diffHunk": "@@ -337,7 +344,25 @@ public void writeI16(short i16) throws TException {\n \n     @Override\n     public void writeI32(int i32) throws TException {\n-        writeNameOrValue(TypedParser.INTEGER, i32);\n+        if (!writeEnumsAsString) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDE4NjAzNA=="}, "originalCommit": {"oid": "6f58ae94fde45799d9d74b3cdf3c4def809deeed"}, "originalPosition": 51}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0MTYyNDExOnYy", "diffSide": "RIGHT", "path": "thrift/src/main/java/com/linecorp/armeria/common/thrift/ThriftProtocolFactories.java", "isResolved": true, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QwNjoyMzo0N1rOGUjApg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QwODoyOTowM1rOGUm96g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDE5ODMxMA==", "bodyText": "This doesn't sound right to me because writeEnumsAsString is only useful for TEXT protocol. How about reverting this and let a user refer to TEXT_ENUM directly?", "url": "https://github.com/line/armeria/pull/2706#discussion_r424198310", "createdAt": "2020-05-13T06:23:47Z", "author": {"login": "trustin"}, "path": "thrift/src/main/java/com/linecorp/armeria/common/thrift/ThriftProtocolFactories.java", "diffHunk": "@@ -70,14 +70,28 @@ public String toString() {\n     /**\n      * {@link TProtocolFactory} for the Thrift TText protocol.\n      */\n-    public static final TProtocolFactory TEXT = TTextProtocolFactory.get();\n+    public static final TProtocolFactory TEXT = TTextProtocolFactory.get(false);\n+\n+    /**\n+     * {@link TProtocolFactory} for the Thrift TText protocol that serializes enums as strings.\n+     */\n+    public static final TProtocolFactory TEXT_ENUM = TTextProtocolFactory.get(true);\n \n     /**\n      * Returns the {@link TProtocolFactory} for the specified {@link SerializationFormat}.\n      *\n      * @throws IllegalArgumentException if the specified {@link SerializationFormat} is not for Thrift\n      */\n     public static TProtocolFactory get(SerializationFormat serializationFormat) {\n+        return get(serializationFormat, false);\n+    }\n+\n+    /**\n+     * Returns the {@link TProtocolFactory} for the specified {@link SerializationFormat}.\n+     *\n+     * @throws IllegalArgumentException if the specified {@link SerializationFormat} is not for Thrift\n+     */\n+    public static TProtocolFactory get(SerializationFormat serializationFormat, boolean writeEnumsAsString) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6f58ae94fde45799d9d74b3cdf3c4def809deeed"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDE5OTg1MA==", "bodyText": "Sure! The reason I wrote this is that if you set writeEnumsAsString in ThriftJacksonModule, you might assume that behavior will work for all protocols", "url": "https://github.com/line/armeria/pull/2706#discussion_r424199850", "createdAt": "2020-05-13T06:27:55Z", "author": {"login": "KarboniteKream"}, "path": "thrift/src/main/java/com/linecorp/armeria/common/thrift/ThriftProtocolFactories.java", "diffHunk": "@@ -70,14 +70,28 @@ public String toString() {\n     /**\n      * {@link TProtocolFactory} for the Thrift TText protocol.\n      */\n-    public static final TProtocolFactory TEXT = TTextProtocolFactory.get();\n+    public static final TProtocolFactory TEXT = TTextProtocolFactory.get(false);\n+\n+    /**\n+     * {@link TProtocolFactory} for the Thrift TText protocol that serializes enums as strings.\n+     */\n+    public static final TProtocolFactory TEXT_ENUM = TTextProtocolFactory.get(true);\n \n     /**\n      * Returns the {@link TProtocolFactory} for the specified {@link SerializationFormat}.\n      *\n      * @throws IllegalArgumentException if the specified {@link SerializationFormat} is not for Thrift\n      */\n     public static TProtocolFactory get(SerializationFormat serializationFormat) {\n+        return get(serializationFormat, false);\n+    }\n+\n+    /**\n+     * Returns the {@link TProtocolFactory} for the specified {@link SerializationFormat}.\n+     *\n+     * @throws IllegalArgumentException if the specified {@link SerializationFormat} is not for Thrift\n+     */\n+    public static TProtocolFactory get(SerializationFormat serializationFormat, boolean writeEnumsAsString) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDE5ODMxMA=="}, "originalCommit": {"oid": "6f58ae94fde45799d9d74b3cdf3c4def809deeed"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDIwNDE1MA==", "bodyText": "I think it's fine since TEXT_ENUM is not really a default behavior. For less confusion, how about removing TEXT_ENUM and letting a user get the TProtocolFactory via TTextProtocolFactory.get(true)?", "url": "https://github.com/line/armeria/pull/2706#discussion_r424204150", "createdAt": "2020-05-13T06:39:01Z", "author": {"login": "trustin"}, "path": "thrift/src/main/java/com/linecorp/armeria/common/thrift/ThriftProtocolFactories.java", "diffHunk": "@@ -70,14 +70,28 @@ public String toString() {\n     /**\n      * {@link TProtocolFactory} for the Thrift TText protocol.\n      */\n-    public static final TProtocolFactory TEXT = TTextProtocolFactory.get();\n+    public static final TProtocolFactory TEXT = TTextProtocolFactory.get(false);\n+\n+    /**\n+     * {@link TProtocolFactory} for the Thrift TText protocol that serializes enums as strings.\n+     */\n+    public static final TProtocolFactory TEXT_ENUM = TTextProtocolFactory.get(true);\n \n     /**\n      * Returns the {@link TProtocolFactory} for the specified {@link SerializationFormat}.\n      *\n      * @throws IllegalArgumentException if the specified {@link SerializationFormat} is not for Thrift\n      */\n     public static TProtocolFactory get(SerializationFormat serializationFormat) {\n+        return get(serializationFormat, false);\n+    }\n+\n+    /**\n+     * Returns the {@link TProtocolFactory} for the specified {@link SerializationFormat}.\n+     *\n+     * @throws IllegalArgumentException if the specified {@link SerializationFormat} is not for Thrift\n+     */\n+    public static TProtocolFactory get(SerializationFormat serializationFormat, boolean writeEnumsAsString) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDE5ODMxMA=="}, "originalCommit": {"oid": "6f58ae94fde45799d9d74b3cdf3c4def809deeed"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDIwNTAxMw==", "bodyText": "Alternatively, we could register a new SerializationFormat? Then this problem could go away completely.", "url": "https://github.com/line/armeria/pull/2706#discussion_r424205013", "createdAt": "2020-05-13T06:40:58Z", "author": {"login": "trustin"}, "path": "thrift/src/main/java/com/linecorp/armeria/common/thrift/ThriftProtocolFactories.java", "diffHunk": "@@ -70,14 +70,28 @@ public String toString() {\n     /**\n      * {@link TProtocolFactory} for the Thrift TText protocol.\n      */\n-    public static final TProtocolFactory TEXT = TTextProtocolFactory.get();\n+    public static final TProtocolFactory TEXT = TTextProtocolFactory.get(false);\n+\n+    /**\n+     * {@link TProtocolFactory} for the Thrift TText protocol that serializes enums as strings.\n+     */\n+    public static final TProtocolFactory TEXT_ENUM = TTextProtocolFactory.get(true);\n \n     /**\n      * Returns the {@link TProtocolFactory} for the specified {@link SerializationFormat}.\n      *\n      * @throws IllegalArgumentException if the specified {@link SerializationFormat} is not for Thrift\n      */\n     public static TProtocolFactory get(SerializationFormat serializationFormat) {\n+        return get(serializationFormat, false);\n+    }\n+\n+    /**\n+     * Returns the {@link TProtocolFactory} for the specified {@link SerializationFormat}.\n+     *\n+     * @throws IllegalArgumentException if the specified {@link SerializationFormat} is not for Thrift\n+     */\n+    public static TProtocolFactory get(SerializationFormat serializationFormat, boolean writeEnumsAsString) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDE5ODMxMA=="}, "originalCommit": {"oid": "6f58ae94fde45799d9d74b3cdf3c4def809deeed"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDIwNTY0Nw==", "bodyText": "e.g. ttext_named_enum and TTEXT_NAMED_ENUM", "url": "https://github.com/line/armeria/pull/2706#discussion_r424205647", "createdAt": "2020-05-13T06:42:32Z", "author": {"login": "trustin"}, "path": "thrift/src/main/java/com/linecorp/armeria/common/thrift/ThriftProtocolFactories.java", "diffHunk": "@@ -70,14 +70,28 @@ public String toString() {\n     /**\n      * {@link TProtocolFactory} for the Thrift TText protocol.\n      */\n-    public static final TProtocolFactory TEXT = TTextProtocolFactory.get();\n+    public static final TProtocolFactory TEXT = TTextProtocolFactory.get(false);\n+\n+    /**\n+     * {@link TProtocolFactory} for the Thrift TText protocol that serializes enums as strings.\n+     */\n+    public static final TProtocolFactory TEXT_ENUM = TTextProtocolFactory.get(true);\n \n     /**\n      * Returns the {@link TProtocolFactory} for the specified {@link SerializationFormat}.\n      *\n      * @throws IllegalArgumentException if the specified {@link SerializationFormat} is not for Thrift\n      */\n     public static TProtocolFactory get(SerializationFormat serializationFormat) {\n+        return get(serializationFormat, false);\n+    }\n+\n+    /**\n+     * Returns the {@link TProtocolFactory} for the specified {@link SerializationFormat}.\n+     *\n+     * @throws IllegalArgumentException if the specified {@link SerializationFormat} is not for Thrift\n+     */\n+    public static TProtocolFactory get(SerializationFormat serializationFormat, boolean writeEnumsAsString) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDE5ODMxMA=="}, "originalCommit": {"oid": "6f58ae94fde45799d9d74b3cdf3c4def809deeed"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDI2MzE0Ng==", "bodyText": "Done. I had to name the protocol ttext-named-enum since underscores are not allowed.", "url": "https://github.com/line/armeria/pull/2706#discussion_r424263146", "createdAt": "2020-05-13T08:29:03Z", "author": {"login": "KarboniteKream"}, "path": "thrift/src/main/java/com/linecorp/armeria/common/thrift/ThriftProtocolFactories.java", "diffHunk": "@@ -70,14 +70,28 @@ public String toString() {\n     /**\n      * {@link TProtocolFactory} for the Thrift TText protocol.\n      */\n-    public static final TProtocolFactory TEXT = TTextProtocolFactory.get();\n+    public static final TProtocolFactory TEXT = TTextProtocolFactory.get(false);\n+\n+    /**\n+     * {@link TProtocolFactory} for the Thrift TText protocol that serializes enums as strings.\n+     */\n+    public static final TProtocolFactory TEXT_ENUM = TTextProtocolFactory.get(true);\n \n     /**\n      * Returns the {@link TProtocolFactory} for the specified {@link SerializationFormat}.\n      *\n      * @throws IllegalArgumentException if the specified {@link SerializationFormat} is not for Thrift\n      */\n     public static TProtocolFactory get(SerializationFormat serializationFormat) {\n+        return get(serializationFormat, false);\n+    }\n+\n+    /**\n+     * Returns the {@link TProtocolFactory} for the specified {@link SerializationFormat}.\n+     *\n+     * @throws IllegalArgumentException if the specified {@link SerializationFormat} is not for Thrift\n+     */\n+    public static TProtocolFactory get(SerializationFormat serializationFormat, boolean writeEnumsAsString) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDE5ODMxMA=="}, "originalCommit": {"oid": "6f58ae94fde45799d9d74b3cdf3c4def809deeed"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0MTYyNjg1OnYy", "diffSide": "RIGHT", "path": "thrift/src/main/java/com/linecorp/armeria/common/thrift/text/TTextProtocolFactory.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QwNjoyNDo0NVrOGUjCQw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QwNjoyNDo0NVrOGUjCQw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDE5ODcyMw==", "bodyText": "How about keeping the old method as well for backward compatibility?", "url": "https://github.com/line/armeria/pull/2706#discussion_r424198723", "createdAt": "2020-05-13T06:24:45Z", "author": {"login": "trustin"}, "path": "thrift/src/main/java/com/linecorp/armeria/common/thrift/text/TTextProtocolFactory.java", "diffHunk": "@@ -26,20 +26,25 @@\n \n     private static final long serialVersionUID = -7323272088544581160L;\n \n-    private static final TTextProtocolFactory INSTANCE = new TTextProtocolFactory();\n+    private static final TTextProtocolFactory INSTANCE_ORDINAL = new TTextProtocolFactory(false);\n+    private static final TTextProtocolFactory INSTANCE_STRING = new TTextProtocolFactory(true);\n+\n+    private final boolean writeEnumsAsString;\n \n     /**\n      * Returns the singleton {@link TTextProtocolFactory} instance.\n      */\n-    public static TTextProtocolFactory get() {\n-        return INSTANCE;\n+    public static TTextProtocolFactory get(boolean writeEnumsAsString) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6f58ae94fde45799d9d74b3cdf3c4def809deeed"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0NTU0NDEzOnYy", "diffSide": "RIGHT", "path": "thrift/src/main/java/com/linecorp/armeria/common/thrift/text/TTextProtocolFactory.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQwMjoxNjo0MFrOGVJvUw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQwMjoxNjo0MFrOGVJvUw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDgzMjg1MQ==", "bodyText": "This is a breaking change. How about reviving the original get() method?\nget() {\n   return get(false)\n}", "url": "https://github.com/line/armeria/pull/2706#discussion_r424832851", "createdAt": "2020-05-14T02:16:40Z", "author": {"login": "ikhoon"}, "path": "thrift/src/main/java/com/linecorp/armeria/common/thrift/text/TTextProtocolFactory.java", "diffHunk": "@@ -26,24 +26,36 @@\n \n     private static final long serialVersionUID = -7323272088544581160L;\n \n-    private static final TTextProtocolFactory INSTANCE = new TTextProtocolFactory();\n+    private static final TTextProtocolFactory INSTANCE = new TTextProtocolFactory(false);\n+    private static final TTextProtocolFactory INSTANCE_NAMED_ENUMS = new TTextProtocolFactory(true);\n+\n+    private final boolean useNamedEnums;\n \n     /**\n      * Returns the singleton {@link TTextProtocolFactory} instance.\n      */\n-    public static TTextProtocolFactory get() {\n-        return INSTANCE;\n+    public static TTextProtocolFactory get(boolean useNamedEnums) {\n+        return useNamedEnums ? INSTANCE_NAMED_ENUMS : INSTANCE;\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0d0407b101e7703373fa8b89f347bc315501b25a"}, "originalPosition": 17}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2602, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}