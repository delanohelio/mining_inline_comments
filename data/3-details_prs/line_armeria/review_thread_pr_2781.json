{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI4OTA0NzMw", "number": 2781, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNlQwMjowMzowNFrOEDIyBA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQwNjoyMTo1NVrOEDUCXg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxNzI1MDYwOnYy", "diffSide": "RIGHT", "path": "logback/src/main/java/com/linecorp/armeria/common/logback/RequestContextExportingAppender.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNlQwMjowMzowNFrOGgBOjg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNlQwMjoyMjoxOFrOGgBTsw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjIyNzcyNg==", "bodyText": "Not related to this PR, could you add a checkArguments that checks mdfKeys is non-empty?", "url": "https://github.com/line/armeria/pull/2781#discussion_r436227726", "createdAt": "2020-06-06T02:03:04Z", "author": {"login": "ikhoon"}, "path": "logback/src/main/java/com/linecorp/armeria/common/logback/RequestContextExportingAppender.java", "diffHunk": "@@ -144,7 +145,7 @@ public void setExport(String mdcKey) {\n      */\n     public void setExports(String mdcKeys) {\n         requireNonNull(mdcKeys, \"mdcKeys\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04da57d8f484f5c1816b58f8d48222ef955b6a88"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjIyOTA0Mw==", "bodyText": "Sure. I added checkArguments.", "url": "https://github.com/line/armeria/pull/2781#discussion_r436229043", "createdAt": "2020-06-06T02:22:18Z", "author": {"login": "okue"}, "path": "logback/src/main/java/com/linecorp/armeria/common/logback/RequestContextExportingAppender.java", "diffHunk": "@@ -144,7 +145,7 @@ public void setExport(String mdcKey) {\n      */\n     public void setExports(String mdcKeys) {\n         requireNonNull(mdcKeys, \"mdcKeys\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjIyNzcyNg=="}, "originalCommit": {"oid": "04da57d8f484f5c1816b58f8d48222ef955b6a88"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxNzY0NDUyOnYy", "diffSide": "RIGHT", "path": "logback/src/main/java/com/linecorp/armeria/common/logback/RequestContextExportingAppender.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNlQxNTo1NDozOVrOGgEXmA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQwNjoyMjoxM1rOGgQgCQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjI3OTE5Mg==", "bodyText": "I think we could optimize this when mdcKeys.split(\",\").length == 1.", "url": "https://github.com/line/armeria/pull/2781#discussion_r436279192", "createdAt": "2020-06-06T15:54:39Z", "author": {"login": "ikhoon"}, "path": "logback/src/main/java/com/linecorp/armeria/common/logback/RequestContextExportingAppender.java", "diffHunk": "@@ -144,7 +147,8 @@ public void setExport(String mdcKey) {\n      */\n     public void setExports(String mdcKeys) {\n         requireNonNull(mdcKeys, \"mdcKeys\");\n-        builder.addKeyPattern(mdcKeys);\n+        checkArgument(!mdcKeys.isEmpty(), \"mdcKeys must not be empty\");\n+        Arrays.stream(mdcKeys.split(\",\")).map(String::trim).forEach(builder::addKeyPattern);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "28bd436e44b4eebd40f93ad8bb4faabdc0481f58"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjMzMzgyMA==", "bodyText": "setExports looks to be called only once.\nDo we need an optimization?", "url": "https://github.com/line/armeria/pull/2781#discussion_r436333820", "createdAt": "2020-06-07T07:18:49Z", "author": {"login": "okue"}, "path": "logback/src/main/java/com/linecorp/armeria/common/logback/RequestContextExportingAppender.java", "diffHunk": "@@ -144,7 +147,8 @@ public void setExport(String mdcKey) {\n      */\n     public void setExports(String mdcKeys) {\n         requireNonNull(mdcKeys, \"mdcKeys\");\n-        builder.addKeyPattern(mdcKeys);\n+        checkArgument(!mdcKeys.isEmpty(), \"mdcKeys must not be empty\");\n+        Arrays.stream(mdcKeys.split(\",\")).map(String::trim).forEach(builder::addKeyPattern);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjI3OTE5Mg=="}, "originalCommit": {"oid": "28bd436e44b4eebd40f93ad8bb4faabdc0481f58"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjQzMTkyOA==", "bodyText": "That could be called multiple times according to the logback.xml.\nBy the way, it seems overkill. Let's leave it as it is. \ud83d\ude00", "url": "https://github.com/line/armeria/pull/2781#discussion_r436431928", "createdAt": "2020-06-08T02:30:38Z", "author": {"login": "ikhoon"}, "path": "logback/src/main/java/com/linecorp/armeria/common/logback/RequestContextExportingAppender.java", "diffHunk": "@@ -144,7 +147,8 @@ public void setExport(String mdcKey) {\n      */\n     public void setExports(String mdcKeys) {\n         requireNonNull(mdcKeys, \"mdcKeys\");\n-        builder.addKeyPattern(mdcKeys);\n+        checkArgument(!mdcKeys.isEmpty(), \"mdcKeys must not be empty\");\n+        Arrays.stream(mdcKeys.split(\",\")).map(String::trim).forEach(builder::addKeyPattern);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjI3OTE5Mg=="}, "originalCommit": {"oid": "28bd436e44b4eebd40f93ad8bb4faabdc0481f58"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjQ0MDExNA==", "bodyText": "Let's use the splitter from Guava so that we don't have to trim again. \ud83d\ude09\nprivate static final Splitter KEY_SPLITTER = Splitter.on(',').trimResults();\n...\nKEY_SPLITTER.split(mdcKeys).forEach(builder::addKeyPattern);", "url": "https://github.com/line/armeria/pull/2781#discussion_r436440114", "createdAt": "2020-06-08T03:21:49Z", "author": {"login": "minwoox"}, "path": "logback/src/main/java/com/linecorp/armeria/common/logback/RequestContextExportingAppender.java", "diffHunk": "@@ -144,7 +147,8 @@ public void setExport(String mdcKey) {\n      */\n     public void setExports(String mdcKeys) {\n         requireNonNull(mdcKeys, \"mdcKeys\");\n-        builder.addKeyPattern(mdcKeys);\n+        checkArgument(!mdcKeys.isEmpty(), \"mdcKeys must not be empty\");\n+        Arrays.stream(mdcKeys.split(\",\")).map(String::trim).forEach(builder::addKeyPattern);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjI3OTE5Mg=="}, "originalCommit": {"oid": "28bd436e44b4eebd40f93ad8bb4faabdc0481f58"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjQ3Nzk2MQ==", "bodyText": "Thanks \ud83d\ude4f\nI use it ab8e780", "url": "https://github.com/line/armeria/pull/2781#discussion_r436477961", "createdAt": "2020-06-08T06:22:13Z", "author": {"login": "okue"}, "path": "logback/src/main/java/com/linecorp/armeria/common/logback/RequestContextExportingAppender.java", "diffHunk": "@@ -144,7 +147,8 @@ public void setExport(String mdcKey) {\n      */\n     public void setExports(String mdcKeys) {\n         requireNonNull(mdcKeys, \"mdcKeys\");\n-        builder.addKeyPattern(mdcKeys);\n+        checkArgument(!mdcKeys.isEmpty(), \"mdcKeys must not be empty\");\n+        Arrays.stream(mdcKeys.split(\",\")).map(String::trim).forEach(builder::addKeyPattern);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjI3OTE5Mg=="}, "originalCommit": {"oid": "28bd436e44b4eebd40f93ad8bb4faabdc0481f58"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxOTA5NDcwOnYy", "diffSide": "RIGHT", "path": "logback/src/main/java/com/linecorp/armeria/common/logback/RequestContextExportingAppender.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQwNjoyMTo1NVrOGgQfkA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxMzowNDowNlrOGgcu-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjQ3Nzg0MA==", "bodyText": "How about checking after splitting?", "url": "https://github.com/line/armeria/pull/2781#discussion_r436477840", "createdAt": "2020-06-08T06:21:55Z", "author": {"login": "trustin"}, "path": "logback/src/main/java/com/linecorp/armeria/common/logback/RequestContextExportingAppender.java", "diffHunk": "@@ -144,7 +149,8 @@ public void setExport(String mdcKey) {\n      */\n     public void setExports(String mdcKeys) {\n         requireNonNull(mdcKeys, \"mdcKeys\");\n-        builder.addKeyPattern(mdcKeys);\n+        checkArgument(!mdcKeys.isEmpty(), \"mdcKeys must not be empty\");\n+        KEY_SPLITTER.split(mdcKeys).forEach(builder::addKeyPattern);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ab8e780f33aeb5007ff8072232282fb4b0fdea5f"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjY3ODM5NA==", "bodyText": "OK \ud83d\ude47", "url": "https://github.com/line/armeria/pull/2781#discussion_r436678394", "createdAt": "2020-06-08T13:04:06Z", "author": {"login": "okue"}, "path": "logback/src/main/java/com/linecorp/armeria/common/logback/RequestContextExportingAppender.java", "diffHunk": "@@ -144,7 +149,8 @@ public void setExport(String mdcKey) {\n      */\n     public void setExports(String mdcKeys) {\n         requireNonNull(mdcKeys, \"mdcKeys\");\n-        builder.addKeyPattern(mdcKeys);\n+        checkArgument(!mdcKeys.isEmpty(), \"mdcKeys must not be empty\");\n+        KEY_SPLITTER.split(mdcKeys).forEach(builder::addKeyPattern);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjQ3Nzg0MA=="}, "originalCommit": {"oid": "ab8e780f33aeb5007ff8072232282fb4b0fdea5f"}, "originalPosition": 39}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2331, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}