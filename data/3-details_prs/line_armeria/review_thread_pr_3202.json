{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI4NjUwODU0", "number": 3202, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yOFQwMjoyMDowMVrOE-I_uA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yOFQwMjoyMDowMVrOE-I_uA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMzNTk0NTUyOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/com/linecorp/armeria/internal/server/annotation/AnnotatedServiceFactory.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yOFQwMjoyMDowMVrOH7L52A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yOFQxMzo1NzoyN1rOH7ZVKg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTgyMzA2NA==", "bodyText": "By the way maybe for a separate PR but I recently learned of ClassValue\nhttps://docs.oracle.com/javase/7/docs/api/java/lang/ClassValue.html\nIt's like a map from class to value, but handled natively by Java with optimal performance.", "url": "https://github.com/line/armeria/pull/3202#discussion_r531823064", "createdAt": "2020-11-28T02:20:01Z", "author": {"login": "anuraaga"}, "path": "core/src/main/java/com/linecorp/armeria/internal/server/annotation/AnnotatedServiceFactory.java", "diffHunk": "@@ -136,7 +136,7 @@\n     /**\n      * An instance map for reusing converters, exception handlers and decorators.\n      */\n-    private static final ConcurrentMap<Class<?>, Object> instanceCache = new ConcurrentHashMap<>();\n+    private static final ConcurrentMap<Class<?>, Object> instanceCache = new MapMaker().weakKeys().makeMap();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "93a702e02b1f57474aaea503de3a3a118a7ba669"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTkxMDEwMg==", "bodyText": "Thanks! I have not known that class. \ud83d\ude04", "url": "https://github.com/line/armeria/pull/3202#discussion_r531910102", "createdAt": "2020-11-28T05:49:26Z", "author": {"login": "minwoox"}, "path": "core/src/main/java/com/linecorp/armeria/internal/server/annotation/AnnotatedServiceFactory.java", "diffHunk": "@@ -136,7 +136,7 @@\n     /**\n      * An instance map for reusing converters, exception handlers and decorators.\n      */\n-    private static final ConcurrentMap<Class<?>, Object> instanceCache = new ConcurrentHashMap<>();\n+    private static final ConcurrentMap<Class<?>, Object> instanceCache = new MapMaker().weakKeys().makeMap();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTgyMzA2NA=="}, "originalCommit": {"oid": "93a702e02b1f57474aaea503de3a3a118a7ba669"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTkxMzYyMg==", "bodyText": "Here's an example :) https://github.com/open-telemetry/opentelemetry-java-instrumentation/blob/c6eee706604a9edf35758d90dc974e4ee82a0f0a/instrumentation-api/src/main/java/io/opentelemetry/instrumentation/api/decorator/BaseDecorator.java#L25", "url": "https://github.com/line/armeria/pull/3202#discussion_r531913622", "createdAt": "2020-11-28T05:54:03Z", "author": {"login": "anuraaga"}, "path": "core/src/main/java/com/linecorp/armeria/internal/server/annotation/AnnotatedServiceFactory.java", "diffHunk": "@@ -136,7 +136,7 @@\n     /**\n      * An instance map for reusing converters, exception handlers and decorators.\n      */\n-    private static final ConcurrentMap<Class<?>, Object> instanceCache = new ConcurrentHashMap<>();\n+    private static final ConcurrentMap<Class<?>, Object> instanceCache = new MapMaker().weakKeys().makeMap();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTgyMzA2NA=="}, "originalCommit": {"oid": "93a702e02b1f57474aaea503de3a3a118a7ba669"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjA0MzA1MA==", "bodyText": "Fixed. \ud83d\ude09", "url": "https://github.com/line/armeria/pull/3202#discussion_r532043050", "createdAt": "2020-11-28T13:57:27Z", "author": {"login": "minwoox"}, "path": "core/src/main/java/com/linecorp/armeria/internal/server/annotation/AnnotatedServiceFactory.java", "diffHunk": "@@ -136,7 +136,7 @@\n     /**\n      * An instance map for reusing converters, exception handlers and decorators.\n      */\n-    private static final ConcurrentMap<Class<?>, Object> instanceCache = new ConcurrentHashMap<>();\n+    private static final ConcurrentMap<Class<?>, Object> instanceCache = new MapMaker().weakKeys().makeMap();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTgyMzA2NA=="}, "originalCommit": {"oid": "93a702e02b1f57474aaea503de3a3a118a7ba669"}, "originalPosition": 21}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2067, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}