{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE3NzU0OTg5", "number": 2710, "title": "Add the release notes for 0.99.5 and update the newsletter", "bodyText": "Add the release notes for 0.99.5\nUpdate the newsletter\n\nAdd sign-up form to the newsletter\nUpdate articles and release highlights\n\n\nFix some style issues", "createdAt": "2020-05-14T05:10:48Z", "url": "https://github.com/line/armeria/pull/2710", "merged": true, "mergeCommit": {"oid": "cfc0fc70602315740a7e90c4752fb6320b18112c"}, "closed": true, "closedAt": "2020-05-14T07:17:25Z", "author": {"login": "trustin"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABchGXQegH2gAyNDE3NzU0OTg5OjQxOGEyN2FiZWNlMTc4NWZkZTE2OGMzYTEzZTJiY2IwYmYwMTM3YmM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABchIOqFAFqTQxMTUyNzQ0Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "418a27abece1785fde168c3a13e2bcb0bf0137bc", "author": {"user": {"login": "trustin", "name": "Trustin Lee"}}, "url": "https://github.com/line/armeria/commit/418a27abece1785fde168c3a13e2bcb0bf0137bc", "committedDate": "2020-05-14T05:10:25Z", "message": "Add the release notes for 0.99.5 and update the newsletter\n\n- Add the release notes for 0.99.5\n- Update the newsletter\n  - Add sign-up form to the newsletter\n  - Update articles and release highlights\n- Fix some style issues"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d73a0a5aa0292e61c497e7e3dab2ec020f644080", "author": {"user": {"login": "trustin", "name": "Trustin Lee"}}, "url": "https://github.com/line/armeria/commit/d73a0a5aa0292e61c497e7e3dab2ec020f644080", "committedDate": "2020-05-14T06:20:01Z", "message": "Update"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDExNDk5NDg4", "url": "https://github.com/line/armeria/pull/2710#pullrequestreview-411499488", "createdAt": "2020-05-14T06:31:46Z", "commit": {"oid": "d73a0a5aa0292e61c497e7e3dab2ec020f644080"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQwNjozMTo0NlrOGVNy4g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQwNjozMTo0NlrOGVNy4g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDg5OTI5OA==", "bodyText": "A client-side connection will be closed immediately too.\nhttps://github.com/line/armeria/pull/2699/files#diff-e18570c3e534d61452c5286c7ec35704", "url": "https://github.com/line/armeria/pull/2710#discussion_r424899298", "createdAt": "2020-05-14T06:31:46Z", "author": {"login": "ikhoon"}, "path": "site/src/pages/release-notes/0.99.5.mdx", "diffHunk": "@@ -0,0 +1,170 @@\n+## \ud83c\udf1f New features\n+\n+- Added `Server.blockUntilShutdown()` which lets you wait for a <type://Server> to close. #2659\n+  ```java\n+  Server server = Server.builder()...build();\n+  server.start().join();\n+  // Returns when server.close() or closeAsync() is called.\n+  server.blockUntilShutdown();\n+  ```\n+- Added `SystemInfo.defaultNonLoopbackIpV4Address()` which returns the sensible IPv4 address of the current\n+  machine. #2679\n+- You can now specify authorization credentials conveniently when building a client: #2680\n+  ```java\n+  WebClient.builder(\"https://example.com/api\")\n+           // Basic\n+           .auth(BasicToken.of(\"admin\", \"sesame\"))\n+           // OAuth 1a\n+           .auth(OAuth1aToken.of(...))\n+           // OAuth 2\n+           .auth(OAuth2Token.of(\"token-0123456789abcdef\"))\n+           .build();\n+  ```\n+- New <type://RetryRule> and <type://RetryRuleWithContent> API lets you define a complex retry policy\n+  conveniently. #1634 #2661 #2709\n+  ```java\n+  Backoff myBackoff = Backoff.exponential(1000, 60000)\n+                             .withJitter(0.3)\n+                             .withMaxAttempts(10);\n+  RetryRule retryRule =\n+      RetryRule.of(RetryRule.builder()\n+                            .onUnProcessed()\n+                            .thenBackoff(myBackoff),\n+                   RetryRule.builder()\n+                            .onException(ResponseTimeoutException.class)\n+                            .thenBackoff(),\n+                   RetryRule.builder()\n+                            .onStatus(HttpStatus.TOO_MANY_REQUESTS)\n+                            .thenNoRetry())\n+\n+  RetryingClient.newDecorator(retryRule);\n+  ```\n+- <type://CircuitBreakerListener> now has a new event listener method `onInitialized()`, which is invoked\n+  when a circuit is initialized. By default, it simply delegates to `onStateChanged()`. #2675\n+- You can now register your server to or retrieve the <typeplural://Endpoint> from\n+  a [Eureka](https://spring.io/guides/gs/service-registration-and-discovery/) registry server,\n+  which gives nice integration with Spring Cloud. #707 #2701\n+  - Use <type://EurekaUpdatingListener> for <typeplural://Server>:\n+    ```java\n+    Server server = Server.builder()...build();\n+    server.addListener(EurekaUpdatingListener.of(\"https://my-eureka-registry.com/\"));\n+    // Automatically registers when the Server starts.\n+    server.start().join();\n+    // Automatically deregisters when the Server stops.\n+    server.stop().join();\n+    ```\n+  - Use <type://EurekaEndpointGroup> for clients:\n+    ```java\n+    // Periodically retrieves the endpoint list from the registry.\n+    EndpointGroup group = EurekaEndpointGroup.of(\"https://my-eureka-registry/\");\n+    group.whenReady().join();\n+\n+    // Sends a request to the endpoints, spreading the load w/ weighted round-robin.\n+    WebClient client = WebClient.of(SessionProtocol.HTTP, group);\n+    System.err.println(client.get(\"/some-resource\")\n+                             .aggregate().join()\n+                             .contentUtf8());\n+    ```\n+- You can now use the gRPC client stubs generated by [`grpc-kotlin`](https://github.com/grpc/grpc-kotlin)\n+  #2662 #2669\n+- Added a new Thrift serialization format `TTEXT_NAMED_ENUM`. It is a variant of `TTEXT` that serializes\n+  an `enum` as a string instead of an integer. This can be useful when you need to serialize a `TBase`\n+  object into a human-readable JSON. #2706\n+  ```java\n+  ObjectMapper mapper = new ObjectMapper()\n+  mapper.registerModule(new ThriftJacksonModule(/* useNamedEnum */ true));\n+  String json = mapper.writeValueAsString(myTBaseStruct);\n+  ```\n+- Added two Spring Boot annotations that inject the current local Armeria port(s) - <type://@LocalArmeriaPort> and <type://@LocalArmeriaPorts>,\n+  which is useful when you bind at an ephemeral port or more than one port: #2561 #2684\n+  ```java\n+  @Configuration\n+  class MyConfiguration {\n+      @LocalArmeriaPort(SessionProtocol.HTTP)\n+      int httpPort;\n+      @LocalArmeriaPort(SessionProtocol.HTTPS)\n+      int httpsPort;\n+      @LocalArmeriaPorts\n+      List<Integer> ports;\n+  }\n+  ```\n+\n+\n+## \ud83d\udcc8 Improvements\n+\n+- <type://ZooKeeperUpdatingListener> now updates the registry with both host name and IP address by default,\n+  so that the client does not have to do a DNS lookup. #2674 #2679\n+  - The IP address is retrieved from `defaultNonLoopbackIpV4Address()` of <type://SystemInfo>.\n+\n+## \ud83d\udee0\ufe0f Bug fixes\n+\n+- Fixed a bug where more than one thread can consume from a streaming message. #2687 #2683\n+- You will not get a `NullPointerException` anymore when starting a <type://JettyService> with DEBUG level\n+  logging enabled. #2688 #2691\n+- PING interval now works as expected even if idle timeout is disabled. #2702\n+- A server-side connection is now closed immediately when PING fails. #2699", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d73a0a5aa0292e61c497e7e3dab2ec020f644080"}, "originalPosition": 105}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0f10beee31ae82d151ffda470bbd532a6ae067d5", "author": {"user": {"login": "trustin", "name": "Trustin Lee"}}, "url": "https://github.com/line/armeria/commit/0f10beee31ae82d151ffda470bbd532a6ae067d5", "committedDate": "2020-05-14T06:36:19Z", "message": "Fix"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDExNTI3NDQz", "url": "https://github.com/line/armeria/pull/2710#pullrequestreview-411527443", "createdAt": "2020-05-14T07:20:50Z", "commit": {"oid": "0f10beee31ae82d151ffda470bbd532a6ae067d5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQwNzoyMDo1MFrOGVPJqw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQwNzoyMDo1MFrOGVPJqw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDkyMTUxNQ==", "bodyText": "did you mean 'fluently'?", "url": "https://github.com/line/armeria/pull/2710#discussion_r424921515", "createdAt": "2020-05-14T07:20:50Z", "author": {"login": "syleeeee"}, "path": "site/src/pages/news/20200514-newsletter-0.mdx", "diffHunk": "@@ -0,0 +1,79 @@\n+# Armeria Newsletter vol. 0\n+\n+14th May 2020\n+\n+<video class=\"hideOnReducedMotion\" src=\"../../images/armeria.m4v\" preload=\"none\" autoplay muted loop style=\"width: 282px; height: 112px;\">\n+  <img src=\"../../images/armeria.gif\" loading=\"lazy\" width=\"282\" height=\"112\" />\n+</video>\n+\n+## From the devs\n+\n+- [Our brand new web site](https://line.github.io/armeria) is now available! \ud83e\udd84\n+  - [Official documentation](https://line.github.io/armeria/docs) that looks better\n+  - [Fascinating articles and slides](https://line.github.io/armeria/community/articles) from our community\n+  - [Contributor manual](https://line.github.io/armeria/community) for your next participation\n+- [Armeria 0.99.5](/release-notes/0.99.5) has been released.\n+  - New <type://RetryRule> API that allows convenient construction of complex retry policy\n+  - [Eureka service discovery](https://spring.io/guides/gs/service-registration-and-discovery/) support\n+  - [`grpc-kotlin`](https://github.com/grpc/grpc-kotlin) support\n+\n+## From the community\n+\n+- [Monitoring a Spring Boot app in Kubernetes \u2013 What I learned from Devoxx Belgium 2019](https://engineering.linecorp.com/en/blog/monitoring-a-spring-boot-app-in-kubernetes-what-i-learned-from-devoxx-belgium-2019/)\n+  - @nirvanarsc shows how he ran his Armeria-based Spring Boot application using Docker and Kubernetes.\n+  - Learn about the basics of Reactive Streams, its industry adoption and interoperability.\n+- [Lessons learned from the adoption of Armeria to LINE's authentication system](https://speakerdeck.com/line_developers/lesson-learned-from-the-adoption-of-armeria-to-lines-authentication-system?slide=8)\n+  - @imasahiro tells about his successful migration from a home-grown HTTP/2 server based on Netty 4.1.0.Beta8 (!) to Armeria.\n+\n+## We need your comments\n+\n+Your opinion means a lot to us. Please let us know what you think about these proposals:\n+\n+- #2148 Provide a way to build an HTTP client request flently", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0f10beee31ae82d151ffda470bbd532a6ae067d5"}, "originalPosition": 32}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 491, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}