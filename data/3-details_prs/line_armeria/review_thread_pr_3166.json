{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE3ODA3MDI0", "number": 3166, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQwODo1NDoyMlrOE5UylQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQwNDowMjo0OFrOE6X3Wg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI4NTQ0OTE3OnYy", "diffSide": "RIGHT", "path": "core/src/test/java/com/linecorp/armeria/server/RouteDecoratingTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQwODo1NDoyMlrOHztauQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQwOTo0NzozNVrOHzxBow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzk4MzU0NQ==", "bodyText": "Shouldn't we update the decorator ordering instead of updating the test parameters? Returning public on .../private/... doesn't sound right to me.", "url": "https://github.com/line/armeria/pull/3166#discussion_r523983545", "createdAt": "2020-11-16T08:54:22Z", "author": {"login": "trustin"}, "path": "core/src/test/java/com/linecorp/armeria/server/RouteDecoratingTest.java", "diffHunk": "@@ -187,7 +187,7 @@ void decorateInOrder(String path, List<Integer> orders) {\n             \"/api/admin/1, , 401, \",\n             \"/assets/index.html, , 200, \",\n             \"/assets/resources/index.html, , 200, public\",\n-            \"/assets/resources/private/profile.jpg, , 200, private\",\n+            \"/assets/resources/private/profile.jpg, , 200, public\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bdcff46cf373d5fbb97a02dd53490ada5d47a2dc"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDA0MjY1OQ==", "bodyText": "Yes, I fixed the order. \ud83d\udc4d", "url": "https://github.com/line/armeria/pull/3166#discussion_r524042659", "createdAt": "2020-11-16T09:47:35Z", "author": {"login": "heowc"}, "path": "core/src/test/java/com/linecorp/armeria/server/RouteDecoratingTest.java", "diffHunk": "@@ -187,7 +187,7 @@ void decorateInOrder(String path, List<Integer> orders) {\n             \"/api/admin/1, , 401, \",\n             \"/assets/index.html, , 200, \",\n             \"/assets/resources/index.html, , 200, public\",\n-            \"/assets/resources/private/profile.jpg, , 200, private\",\n+            \"/assets/resources/private/profile.jpg, , 200, public\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzk4MzU0NQ=="}, "originalCommit": {"oid": "bdcff46cf373d5fbb97a02dd53490ada5d47a2dc"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI4NTQ1NjE4OnYy", "diffSide": "RIGHT", "path": "core/src/test/java/com/linecorp/armeria/server/logging/ContentPreviewingServiceTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQwODo1NToyM1rOHztfNQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQwOTo0ODowN1rOHzxDnA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzk4NDY5Mw==", "bodyText": "How about moving this sentence before .decorator() for readability?", "url": "https://github.com/line/armeria/pull/3166#discussion_r523984693", "createdAt": "2020-11-16T08:55:23Z", "author": {"login": "trustin"}, "path": "core/src/test/java/com/linecorp/armeria/server/logging/ContentPreviewingServiceTest.java", "diffHunk": "@@ -71,16 +71,16 @@ protected void configure(ServerBuilder sb) throws Exception {\n                            return HttpResponse.of(responseHeaders,\n                                                   HttpData.ofUtf8(\"Hello \" + aggregated.contentUtf8() + '!'));\n                        }));\n+            sb.decorator(\"/beforeEncoding\", ContentPreviewingService.newDecorator(100));\n             sb.decorator(\"/beforeEncoding\", EncodingService.builder()\n                                                            .minBytesToForceChunkedEncoding(1)\n                                                            .newDecorator());\n-            sb.decorator(\"/beforeEncoding\", ContentPreviewingService.newDecorator(100));\n             sb.service(\"/beforeEncoding\", httpService);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bdcff46cf373d5fbb97a02dd53490ada5d47a2dc"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDA0MzE2NA==", "bodyText": "I fixed \ud83d\udc4d", "url": "https://github.com/line/armeria/pull/3166#discussion_r524043164", "createdAt": "2020-11-16T09:48:07Z", "author": {"login": "heowc"}, "path": "core/src/test/java/com/linecorp/armeria/server/logging/ContentPreviewingServiceTest.java", "diffHunk": "@@ -71,16 +71,16 @@ protected void configure(ServerBuilder sb) throws Exception {\n                            return HttpResponse.of(responseHeaders,\n                                                   HttpData.ofUtf8(\"Hello \" + aggregated.contentUtf8() + '!'));\n                        }));\n+            sb.decorator(\"/beforeEncoding\", ContentPreviewingService.newDecorator(100));\n             sb.decorator(\"/beforeEncoding\", EncodingService.builder()\n                                                            .minBytesToForceChunkedEncoding(1)\n                                                            .newDecorator());\n-            sb.decorator(\"/beforeEncoding\", ContentPreviewingService.newDecorator(100));\n             sb.service(\"/beforeEncoding\", httpService);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzk4NDY5Mw=="}, "originalCommit": {"oid": "bdcff46cf373d5fbb97a02dd53490ada5d47a2dc"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI5NjQzODY2OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/com/linecorp/armeria/server/VirtualHostBuilder.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQwNDowMjo0OFrOH1aK0g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQxNDozMjo1MVrOH1wm3A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTc2NTMzMA==", "bodyText": "How about using LinkedList.addFirst(...)?\nCould you add The specified decorator(s) is/are executed in reverse order of the insertion. to the Javadoc of ServerBuilder.decorator(...) and VirtualHostBuilder.decorator(...)?", "url": "https://github.com/line/armeria/pull/3166#discussion_r525765330", "createdAt": "2020-11-18T04:02:48Z", "author": {"login": "ikhoon"}, "path": "core/src/main/java/com/linecorp/armeria/server/VirtualHostBuilder.java", "diffHunk": "@@ -591,7 +592,7 @@ VirtualHostBuilder addServiceConfigSetters(ServiceConfigSetters serviceConfigSet\n     }\n \n     VirtualHostBuilder addRouteDecoratingService(RouteDecoratingService routeDecoratingService) {\n-        routeDecoratingServices.add(routeDecoratingService);\n+        routeDecoratingServices.add(0, routeDecoratingService);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "229bf1f02623084414a6b32f0b1e4bd5bccd61b6"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjA4NDk5MQ==", "bodyText": "How about using LinkedList.addFirst(...)?\n\nSound good to me! \ud83d\udc4d\n\nCould you add The specified decorator(s) is/are executed in reverse order of the insertion. to the Javadoc of ServerBuilder.decorator(...) and VirtualHostBuilder.decorator(...)?\n\nIt seems a bit insufficient to add only to the mentioned point. Or is it enough? \ud83e\udd14\n\n{ServerBuilder|VirtualHostBuilder}.routeDecorator(...)\n{ServerBuilder|VirtualHostBuilder}.decoratorUnder(...)\n\nShouldn't we add it here too? What do you think?", "url": "https://github.com/line/armeria/pull/3166#discussion_r526084991", "createdAt": "2020-11-18T13:25:25Z", "author": {"login": "heowc"}, "path": "core/src/main/java/com/linecorp/armeria/server/VirtualHostBuilder.java", "diffHunk": "@@ -591,7 +592,7 @@ VirtualHostBuilder addServiceConfigSetters(ServiceConfigSetters serviceConfigSet\n     }\n \n     VirtualHostBuilder addRouteDecoratingService(RouteDecoratingService routeDecoratingService) {\n-        routeDecoratingServices.add(routeDecoratingService);\n+        routeDecoratingServices.add(0, routeDecoratingService);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTc2NTMzMA=="}, "originalCommit": {"oid": "229bf1f02623084414a6b32f0b1e4bd5bccd61b6"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjEwOTM2Mw==", "bodyText": "It looks good to add to routeDecorator and decoratorUnder too. :)", "url": "https://github.com/line/armeria/pull/3166#discussion_r526109363", "createdAt": "2020-11-18T14:01:47Z", "author": {"login": "ikhoon"}, "path": "core/src/main/java/com/linecorp/armeria/server/VirtualHostBuilder.java", "diffHunk": "@@ -591,7 +592,7 @@ VirtualHostBuilder addServiceConfigSetters(ServiceConfigSetters serviceConfigSet\n     }\n \n     VirtualHostBuilder addRouteDecoratingService(RouteDecoratingService routeDecoratingService) {\n-        routeDecoratingServices.add(routeDecoratingService);\n+        routeDecoratingServices.add(0, routeDecoratingService);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTc2NTMzMA=="}, "originalCommit": {"oid": "229bf1f02623084414a6b32f0b1e4bd5bccd61b6"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjEzMjk1Ng==", "bodyText": "I fixed \ud83d\udc4d", "url": "https://github.com/line/armeria/pull/3166#discussion_r526132956", "createdAt": "2020-11-18T14:32:51Z", "author": {"login": "heowc"}, "path": "core/src/main/java/com/linecorp/armeria/server/VirtualHostBuilder.java", "diffHunk": "@@ -591,7 +592,7 @@ VirtualHostBuilder addServiceConfigSetters(ServiceConfigSetters serviceConfigSet\n     }\n \n     VirtualHostBuilder addRouteDecoratingService(RouteDecoratingService routeDecoratingService) {\n-        routeDecoratingServices.add(routeDecoratingService);\n+        routeDecoratingServices.add(0, routeDecoratingService);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTc2NTMzMA=="}, "originalCommit": {"oid": "229bf1f02623084414a6b32f0b1e4bd5bccd61b6"}, "originalPosition": 22}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2017, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}