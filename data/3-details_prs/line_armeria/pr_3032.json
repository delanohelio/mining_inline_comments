{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc1MjQyNzgx", "number": 3032, "title": "Fix a bug where gRPC server throws NPE when a call is closed by ServerInterceptor", "bodyText": "Motivation:\nWhen a gRPC request is closed by ServerInterceptor while starting a call,\nArmeriaServerCall throws NullPointerException. For example\n@Override\npublic <ReqT, RespT> Listener<ReqT> interceptCall(ServerCall<ReqT, RespT> call, Metadata metadata,\n                                                  ServerCallHandler<ReqT, RespT> next) {\n    call.close(Status.PERMISSION_DENIED, metadata);\n    return NOOP_LISTENER;\n}\nThis is caused by listener which is null at the moment. The listener is not initialized when call.close() is called in the interceptor.\n\n  \n    \n      armeria/grpc/src/main/java/com/linecorp/armeria/server/grpc/ArmeriaServerCall.java\n    \n    \n        Lines 492 to 495\n      in\n      8a1281f\n    \n    \n    \n    \n\n        \n          \n           private void invokeOnCancel() { \n        \n\n        \n          \n               try (SafeCloseable ignored = ctx.push()) { \n        \n\n        \n          \n                   listener.onCancel(); \n        \n\n        \n          \n               } catch (Throwable t) { \n        \n    \n  \n\n\nThe listener will be set by the returned value of startCall(call, metadata).\n\n  \n    \n      armeria/grpc/src/main/java/com/linecorp/armeria/server/grpc/FramedGrpcService.java\n    \n    \n         Line 238\n      in\n      a16e2c0\n    \n    \n    \n    \n\n        \n          \n           listener = methodDef.getServerCallHandler().startCall(call, MetadataUtil.copyFromHeaders(headers)); \n        \n    \n  \n\n\n@okue was reported in #2607 (comment).\nModifications:\n\nCheck nullity where listener could be null.\n\nResult:\nArmeria gRPC server does not raise NullPointerException anymore when a gRPC server interceptor closes a call.", "createdAt": "2020-08-28T07:42:36Z", "url": "https://github.com/line/armeria/pull/3032", "merged": true, "mergeCommit": {"oid": "2bc23e60cea9f6adc1415c8d08a34baf2b90ce80"}, "closed": true, "closedAt": "2020-09-09T01:02:21Z", "author": {"login": "ikhoon"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdDPwhbgH2gAyNDc1MjQyNzgxOmY2YTM0YThhYjViOThkYTk2MTA0MWI5NjZkZGU5MWYyNjViYTBlOWU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdGdn1KAH2gAyNDc1MjQyNzgxOmY3NmNlYjAxNWU2ZDBjZDMyMWFjZTc3NmQ3YzIyNzgyZjE2OTZmMTU=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "f6a34a8ab5b98da961041b966dde91f265ba0e9e", "author": {"user": {"login": "ikhoon", "name": "Ikhun Um"}}, "url": "https://github.com/line/armeria/commit/f6a34a8ab5b98da961041b966dde91f265ba0e9e", "committedDate": "2020-08-28T07:20:35Z", "message": "Fix a bug gRPC server throws NPE when a call is closed by ServerInterceptor\n\nMotivation:\n\nWhen a gRPC request is closed by ServerInterceptor while starting a call,\nArmeriaServerCall throws NullPointerException.\n\nThis is caused by `listener` is null. `listener` is not initialized when `call.close()` is called.\nhttps://github.com/line/armeria/blob/8a1281f1d2b827f516247b8f9eb6210f2a047efa/grpc/src/main/java/com/linecorp/armeria/server/grpc/ArmeriaServerCall.java#L492-L495\n`listener` will be set by the returned value of `startCall(call, metadata)`.\nhttps://github.com/line/armeria/blob/a16e2c0254c030989d372cf22b01c9433697fabf/grpc/src/main/java/com/linecorp/armeria/server/grpc/FramedGrpcService.java#L238\n\n@okue was reported the issue. https://github.com/line/armeria/issues/2607#issuecomment-682036344\n\nModifications:\n\n- Check nullity where `listener` could be null.\n\nResult:\n\nArmeria gRPC server does not raise `NullPointerException` anymore when a gRPC server interceptor close a call."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0b3e17ab5d1cc18e2c0ecf910c0976d8722c06c4", "author": {"user": {"login": "ikhoon", "name": "Ikhun Um"}}, "url": "https://github.com/line/armeria/commit/0b3e17ab5d1cc18e2c0ecf910c0976d8722c06c4", "committedDate": "2020-08-28T07:55:10Z", "message": "Checkstyle"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "108301f28d8aadffae50ef75548013ae71ea5621", "author": {"user": {"login": "ikhoon", "name": "Ikhun Um"}}, "url": "https://github.com/line/armeria/commit/108301f28d8aadffae50ef75548013ae71ea5621", "committedDate": "2020-08-28T08:10:15Z", "message": "Fix type parameter name"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc3NTg5OTMy", "url": "https://github.com/line/armeria/pull/3032#pullrequestreview-477589932", "createdAt": "2020-08-28T09:39:22Z", "commit": {"oid": "108301f28d8aadffae50ef75548013ae71ea5621"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc4MjYzMzUx", "url": "https://github.com/line/armeria/pull/3032#pullrequestreview-478263351", "createdAt": "2020-08-31T01:44:56Z", "commit": {"oid": "108301f28d8aadffae50ef75548013ae71ea5621"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgzMjkzMDMx", "url": "https://github.com/line/armeria/pull/3032#pullrequestreview-483293031", "createdAt": "2020-09-07T07:10:51Z", "commit": {"oid": "108301f28d8aadffae50ef75548013ae71ea5621"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QwNzoxMDo1MVrOHNyvJQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QwNzoxMDo1MVrOHNyvJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDIyNDgwNQ==", "bodyText": "nit: missing space between (StatusRuntimeException) and cause", "url": "https://github.com/line/armeria/pull/3032#discussion_r484224805", "createdAt": "2020-09-07T07:10:51Z", "author": {"login": "trustin"}, "path": "grpc/src/test/java/com/linecorp/armeria/server/grpc/GrpcServerInterceptorTest.java", "diffHunk": "@@ -0,0 +1,83 @@\n+/*\n+ * Copyright 2020 LINE Corporation\n+ *\n+ * LINE Corporation licenses this file to you under the Apache License,\n+ * version 2.0 (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *   https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package com.linecorp.armeria.server.grpc;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static org.assertj.core.api.Assertions.catchThrowable;\n+\n+import java.util.concurrent.Executors;\n+\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.extension.RegisterExtension;\n+\n+import com.linecorp.armeria.client.Clients;\n+import com.linecorp.armeria.common.grpc.GrpcSerializationFormats;\n+import com.linecorp.armeria.grpc.testing.Messages.SimpleRequest;\n+import com.linecorp.armeria.grpc.testing.TestServiceGrpc.TestServiceBlockingStub;\n+import com.linecorp.armeria.internal.common.grpc.TestServiceImpl;\n+import com.linecorp.armeria.server.ServerBuilder;\n+import com.linecorp.armeria.testing.junit5.server.ServerExtension;\n+\n+import io.grpc.Metadata;\n+import io.grpc.ServerCall;\n+import io.grpc.ServerCall.Listener;\n+import io.grpc.ServerCallHandler;\n+import io.grpc.ServerInterceptor;\n+import io.grpc.ServerInterceptors;\n+import io.grpc.Status;\n+import io.grpc.StatusRuntimeException;\n+\n+class GrpcServerInterceptorTest {\n+\n+    @RegisterExtension\n+    static ServerExtension server = new ServerExtension() {\n+        @Override\n+        protected void configure(ServerBuilder sb) throws Exception {\n+            sb.service(GrpcService.builder()\n+                                  .addService(ServerInterceptors.intercept(\n+                                          new TestServiceImpl(Executors.newSingleThreadScheduledExecutor()),\n+                                          NoPassInterceptor.INSTANCE))\n+                                  .build());\n+        }\n+    };\n+\n+    @Test\n+    void closeCallByInterceptor() {\n+        final TestServiceBlockingStub client =\n+                Clients.builder(server.httpUri(GrpcSerializationFormats.PROTO))\n+                       .build(TestServiceBlockingStub.class);\n+        final Throwable cause = catchThrowable(() -> client.unaryCall(SimpleRequest.getDefaultInstance()));\n+        assertThat(cause).isInstanceOf(StatusRuntimeException.class);\n+        assertThat(((StatusRuntimeException)cause).getStatus()).isEqualTo(Status.PERMISSION_DENIED);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "108301f28d8aadffae50ef75548013ae71ea5621"}, "originalPosition": 65}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgzMjkzMTUy", "url": "https://github.com/line/armeria/pull/3032#pullrequestreview-483293152", "createdAt": "2020-09-07T07:11:04Z", "commit": {"oid": "108301f28d8aadffae50ef75548013ae71ea5621"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f76ceb015e6d0cd321ace776d7c22782f1696f15", "author": {"user": {"login": "trustin", "name": "Trustin Lee"}}, "url": "https://github.com/line/armeria/commit/f76ceb015e6d0cd321ace776d7c22782f1696f15", "committedDate": "2020-09-07T07:11:32Z", "message": "nit"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4600, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}