{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ3MTk4Mjk2", "number": 2890, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QwMjo1NTo0MFrOENqojA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QwNjozMzozMFrOENsx8Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNzY1NDUyOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/com/linecorp/armeria/client/circuitbreaker/MetricCollectingCircuitBreakerListener.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QwMjo1NTo0MFrOGwZ5Ig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QwNjoxNzo1N1rOGwcv2A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzQwOTA1OA==", "bodyText": "Add @Deprecation in class?", "url": "https://github.com/line/armeria/pull/2890#discussion_r453409058", "createdAt": "2020-07-13T02:55:40Z", "author": {"login": "ikhoon"}, "path": "core/src/main/java/com/linecorp/armeria/client/circuitbreaker/MetricCollectingCircuitBreakerListener.java", "diffHunk": "@@ -57,22 +57,28 @@\n  */\n public final class MetricCollectingCircuitBreakerListener implements CircuitBreakerListener {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "51cfe4a1ea32c2b0c70738072740d4c6e29635f8"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzQ1NTgzMg==", "bodyText": "Fixed. Thanks. \ud83d\ude09", "url": "https://github.com/line/armeria/pull/2890#discussion_r453455832", "createdAt": "2020-07-13T06:17:57Z", "author": {"login": "minwoox"}, "path": "core/src/main/java/com/linecorp/armeria/client/circuitbreaker/MetricCollectingCircuitBreakerListener.java", "diffHunk": "@@ -57,22 +57,28 @@\n  */\n public final class MetricCollectingCircuitBreakerListener implements CircuitBreakerListener {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzQwOTA1OA=="}, "originalCommit": {"oid": "51cfe4a1ea32c2b0c70738072740d4c6e29635f8"}, "originalPosition": 2}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyODAwNjI1OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/com/linecorp/armeria/client/circuitbreaker/CircuitBreakerMapping.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QwNjozMzozMFrOGwdDfw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QwNjozMzozMFrOGwdDfw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzQ2MDg2Mw==", "bodyText": "How about making it accept a BiFunction<String, String, CircuitBreaker>?", "url": "https://github.com/line/armeria/pull/2890#discussion_r453460863", "createdAt": "2020-07-13T06:33:30Z", "author": {"login": "trustin"}, "path": "core/src/main/java/com/linecorp/armeria/client/circuitbreaker/CircuitBreakerMapping.java", "diffHunk": "@@ -71,7 +61,7 @@ static CircuitBreakerMapping perHost(Function<String, CircuitBreaker> factory) {\n      *                creates a new {@link CircuitBreaker}\n      */\n     static CircuitBreakerMapping perHostAndMethod(Function<String, CircuitBreaker> factory) {\n-        return new KeyedCircuitBreakerMapping<>(KeySelectorUtil.hostAndMethodSelector, factory);\n+        return new KeyedCircuitBreakerMapping<>(KeySelector.HOST_AND_METHOD, factory);\n     }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4ccb87f39bbcbc0f476d072feba7956371cc68e7"}, "originalPosition": 49}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2084, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}