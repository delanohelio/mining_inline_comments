{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE4NzAyODA2", "number": 2716, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xN1QxMTozNTowOVrOD9KOig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQwMTo0NzoxOFrOD9N_QA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1NDU3MjkwOnYy", "diffSide": "RIGHT", "path": "spring/boot-actuator-autoconfigure/src/main/java/com/linecorp/armeria/spring/actuate/SimpleHttpCodeStatusMapper.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xN1QxMTozNTowOVrOGWgRxg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xN1QxMTozNTowOVrOGWgRxg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjI1MDY5NA==", "bodyText": "Can you copy in the original license and put it below Armeria's here?\nhttps://github.com/spring-projects/spring-boot/blob/master/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/health/SimpleHttpCodeStatusMapper.java#L1", "url": "https://github.com/line/armeria/pull/2716#discussion_r426250694", "createdAt": "2020-05-17T11:35:09Z", "author": {"login": "anuraaga"}, "path": "spring/boot-actuator-autoconfigure/src/main/java/com/linecorp/armeria/spring/actuate/SimpleHttpCodeStatusMapper.java", "diffHunk": "@@ -0,0 +1,74 @@\n+/*\n+ * Copyright 2020 LINE Corporation\n+ *\n+ * LINE Corporation licenses this file to you under the Apache License,\n+ * version 2.0 (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *   https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations\n+ * under the License.\n+ */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "38c196a890c493db148a6a0f18e5b2ca9f7bbecd"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1NTE4OTEyOnYy", "diffSide": "RIGHT", "path": "spring/boot-actuator-autoconfigure/src/main/java/com/linecorp/armeria/spring/actuate/SimpleHttpCodeStatusMapper.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQwMTo0NzoxOFrOGWlZFg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQwMTo0NzoxOFrOGWlZFg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjMzNDQ4Ng==", "bodyText": "Thanks, looking at it I think this class has a lot of complexity due to being user-configurable with string properties in Spring, but we don't need such configuration. How about we just declare the Map and use it directly without all this other stuff? I don't think we will ever need this normalization, etc.", "url": "https://github.com/line/armeria/pull/2716#discussion_r426334486", "createdAt": "2020-05-18T01:47:18Z", "author": {"login": "anuraaga"}, "path": "spring/boot-actuator-autoconfigure/src/main/java/com/linecorp/armeria/spring/actuate/SimpleHttpCodeStatusMapper.java", "diffHunk": "@@ -0,0 +1,74 @@\n+/*\n+ * Copyright 2020 LINE Corporation\n+ *\n+ * LINE Corporation licenses this file to you under the Apache License,\n+ * version 2.0 (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *   https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package com.linecorp.armeria.spring.actuate;\n+\n+import java.util.Collections;\n+import java.util.HashMap;\n+import java.util.LinkedHashMap;\n+import java.util.Map;\n+\n+import javax.annotation.Nullable;\n+\n+import org.springframework.boot.actuate.endpoint.web.WebEndpointResponse;\n+import org.springframework.boot.actuate.health.Status;\n+\n+/**\n+ * Copied from spring-boot-actuator 2.3.0 to avoid breaking compatibility.\n+ * We used spring-boot-actuator's HealthStatusHttpMapper previously\n+ * but it has been deprecated since 2.2.0 and deleted since 2.3.0.\n+ */\n+class SimpleHttpCodeStatusMapper {\n+\n+    private final Map<String, Integer> mappings;\n+\n+    SimpleHttpCodeStatusMapper() {\n+        final Map<String, Integer> defaultMappings = new HashMap<>();\n+        defaultMappings.put(Status.DOWN.getCode(), WebEndpointResponse.STATUS_SERVICE_UNAVAILABLE);\n+        defaultMappings.put(Status.OUT_OF_SERVICE.getCode(), WebEndpointResponse.STATUS_SERVICE_UNAVAILABLE);\n+        mappings = getUniformMappings(defaultMappings);\n+    }\n+\n+    int getStatusCode(Status status) {\n+        final String code = getUniformCode(status.getCode());\n+        return mappings.getOrDefault(code, WebEndpointResponse.STATUS_OK);\n+    }\n+\n+    private static Map<String, Integer> getUniformMappings(Map<String, Integer> mappings) {\n+        final Map<String, Integer> result = new LinkedHashMap<>();\n+        for (Map.Entry<String, Integer> entry : mappings.entrySet()) {\n+            final String code = getUniformCode(entry.getKey());\n+            if (code != null) {\n+                result.putIfAbsent(code, entry.getValue());\n+            }\n+        }\n+        return Collections.unmodifiableMap(result);\n+    }\n+\n+    @Nullable\n+    private static String getUniformCode(@Nullable String code) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "38c196a890c493db148a6a0f18e5b2ca9f7bbecd"}, "originalPosition": 62}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2610, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}