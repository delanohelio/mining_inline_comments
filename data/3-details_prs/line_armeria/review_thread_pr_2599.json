{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg5OTY4Mjc2", "number": 2599, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQwMTozODo0MFrODo8UxA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQwNToxMDoxNlrODo-KJw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0MjU3OTg4OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/com/linecorp/armeria/client/ClientRequestContextWrapper.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQwMTozODo0MFrOF3zldQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQwMTo1OTowNFrOF3z4yw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDA2MTE3Mw==", "bodyText": "Checkstyle?", "url": "https://github.com/line/armeria/pull/2599#discussion_r394061173", "createdAt": "2020-03-18T01:38:40Z", "author": {"login": "trustin"}, "path": "core/src/main/java/com/linecorp/armeria/client/ClientRequestContextWrapper.java", "diffHunk": "@@ -31,6 +31,7 @@\n import com.linecorp.armeria.common.RequestContextWrapper;\n import com.linecorp.armeria.common.RequestId;\n import com.linecorp.armeria.common.RpcRequest;\n+import com.linecorp.armeria.common.logging.RequestLogAccess;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9ed5a0d661c2e1880a089042f6d554517412c01b"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDA2NjEyMw==", "bodyText": "Oops..", "url": "https://github.com/line/armeria/pull/2599#discussion_r394066123", "createdAt": "2020-03-18T01:59:04Z", "author": {"login": "ikhoon"}, "path": "core/src/main/java/com/linecorp/armeria/client/ClientRequestContextWrapper.java", "diffHunk": "@@ -31,6 +31,7 @@\n import com.linecorp.armeria.common.RequestContextWrapper;\n import com.linecorp.armeria.common.RequestId;\n import com.linecorp.armeria.common.RpcRequest;\n+import com.linecorp.armeria.common.logging.RequestLogAccess;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDA2MTE3Mw=="}, "originalCommit": {"oid": "9ed5a0d661c2e1880a089042f6d554517412c01b"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0MjU4Mzg1OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/com/linecorp/armeria/common/logging/DefaultRequestLog.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQwMTo0MToxMFrOF3zn5Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQwMTo0MToxMFrOF3zn5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDA2MTc5Nw==", "bodyText": "Could you add checkState that makes sure that parent is null?", "url": "https://github.com/line/armeria/pull/2599#discussion_r394061797", "createdAt": "2020-03-18T01:41:10Z", "author": {"login": "trustin"}, "path": "core/src/main/java/com/linecorp/armeria/common/logging/DefaultRequestLog.java", "diffHunk": "@@ -420,6 +428,11 @@ private boolean isDeferredFlagSet(RequestLogProperty property) {\n     public void addChild(RequestLogAccess child) {\n         checkState(!hasLastChild, \"last child is already added\");\n         requireNonNull(child, \"child\");\n+\n+        if (child instanceof DefaultRequestLog) {\n+            ((DefaultRequestLog) child).parent = this;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9ed5a0d661c2e1880a089042f6d554517412c01b"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0MjU4ODI5OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/com/linecorp/armeria/client/DefaultClientRequestContext.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQwMTo0NDoxMVrOF3zqxA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQwMTo1NDoxMlrOF3z0Tw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDA2MjUzMg==", "bodyText": "This will create a new clientReqIdStr every time. How about adding some state variable to minimize the regeneration of strings? e.g. You could create a small flag that keeps whether 1) channel is available and 2) log.parent is available, so strVal is regenerated when the flag changes.", "url": "https://github.com/line/armeria/pull/2599#discussion_r394062532", "createdAt": "2020-03-18T01:44:11Z", "author": {"login": "trustin"}, "path": "core/src/main/java/com/linecorp/armeria/client/DefaultClientRequestContext.java", "diffHunk": "@@ -556,18 +556,30 @@ public RequestLogBuilder logBuilder() {\n \n     @Override\n     public String toString() {\n+        final String clientRequestIdStr = toStringClientRequestId();\n         if (strVal != null) {\n-            return strVal;\n+            return clientRequestIdStr + strVal;\n         }\n-        return toStringSlow();\n+        return clientRequestIdStr + toStringSlow();\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9ed5a0d661c2e1880a089042f6d554517412c01b"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDA2NDk3NQ==", "bodyText": "Oh, that sounds nice. Let me address it!", "url": "https://github.com/line/armeria/pull/2599#discussion_r394064975", "createdAt": "2020-03-18T01:54:12Z", "author": {"login": "ikhoon"}, "path": "core/src/main/java/com/linecorp/armeria/client/DefaultClientRequestContext.java", "diffHunk": "@@ -556,18 +556,30 @@ public RequestLogBuilder logBuilder() {\n \n     @Override\n     public String toString() {\n+        final String clientRequestIdStr = toStringClientRequestId();\n         if (strVal != null) {\n-            return strVal;\n+            return clientRequestIdStr + strVal;\n         }\n-        return toStringSlow();\n+        return clientRequestIdStr + toStringSlow();\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDA2MjUzMg=="}, "originalCommit": {"oid": "9ed5a0d661c2e1880a089042f6d554517412c01b"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0Mjc0NTcyOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/com/linecorp/armeria/client/DefaultClientRequestContext.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQwMzoyOToxN1rOF31OAw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQwNTo1NDo1OFrOF33LpQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDA4NzkzOQ==", "bodyText": "How about simplifying like this:\nfinal Channel ch = channel();\nfinal RequestLogAccess parent = log().parent();\nfinal short newAvailability = (ch != null ? ... : 0) | (parent != null ? ... : 0);\nif (strVal != null && strValAvailabilities == newAvailability) {\n    return strVal;\n}\n\nstrValAvailabilities = newAvailability;\nreturn toStringSlow(ch, parent);\nKeep in mind that toStringSlow() does this:\n        if (ch != null) {\n            this.strVal = strVal;\n        }\n.. and you must change it to make it work properly. Add tests properly so that this kind of mistake doesn't slip in.", "url": "https://github.com/line/armeria/pull/2599#discussion_r394087939", "createdAt": "2020-03-18T03:29:17Z", "author": {"login": "trustin"}, "path": "core/src/main/java/com/linecorp/armeria/client/DefaultClientRequestContext.java", "diffHunk": "@@ -556,30 +559,37 @@ public RequestLogBuilder logBuilder() {\n \n     @Override\n     public String toString() {\n-        final String clientRequestIdStr = toStringClientRequestId();\n-        if (strVal != null) {\n-            return clientRequestIdStr + strVal;\n+        if (strVal == null) {\n+            strVal = toStringSlow();\n+            if (channel() != null) {\n+                strValAvailabilities |= STR_CHANNEL_AVAILABILITY;\n+            }\n+            if (log().parent() != null) {\n+                strValAvailabilities |= STR_PARENT_LOG_AVAILABILITY;\n+            }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "df0dfe16e6b9bfb954f32b1c17e79a6024fee717"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDEyMDEwMQ==", "bodyText": "Thanks for the gentle suggestion. I've learned a lot. \ud83d\ude4f", "url": "https://github.com/line/armeria/pull/2599#discussion_r394120101", "createdAt": "2020-03-18T05:54:58Z", "author": {"login": "ikhoon"}, "path": "core/src/main/java/com/linecorp/armeria/client/DefaultClientRequestContext.java", "diffHunk": "@@ -556,30 +559,37 @@ public RequestLogBuilder logBuilder() {\n \n     @Override\n     public String toString() {\n-        final String clientRequestIdStr = toStringClientRequestId();\n-        if (strVal != null) {\n-            return clientRequestIdStr + strVal;\n+        if (strVal == null) {\n+            strVal = toStringSlow();\n+            if (channel() != null) {\n+                strValAvailabilities |= STR_CHANNEL_AVAILABILITY;\n+            }\n+            if (log().parent() != null) {\n+                strValAvailabilities |= STR_PARENT_LOG_AVAILABILITY;\n+            }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDA4NzkzOQ=="}, "originalCommit": {"oid": "df0dfe16e6b9bfb954f32b1c17e79a6024fee717"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0Mjg4MDM5OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/com/linecorp/armeria/client/DefaultClientRequestContext.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQwNToxMDoxNlrOF32inA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQwNToyMjo0NVrOF32tRQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDEwOTU5Ng==", "bodyText": "How about just preqId?", "url": "https://github.com/line/armeria/pull/2599#discussion_r394109596", "createdAt": "2020-03-18T05:10:16Z", "author": {"login": "trustin"}, "path": "core/src/main/java/com/linecorp/armeria/client/DefaultClientRequestContext.java", "diffHunk": "@@ -578,6 +588,9 @@ private String toStringSlow() {\n         // Build the string representation.\n         final StringBuilder buf = TemporaryThreadLocals.get().stringBuilder();\n         buf.append(\"[creqId=\").append(creqId);\n+        if (parent != null) {\n+            buf.append(\", pcreqId=\").append(pcreqId);\n+        }\n         if (sreqId != null) {\n             buf.append(\", sreqId=\").append(sreqId);\n         }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "495faffb45f1f92c2f287b54bf15c626ca5c1523"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDExMTY2Mg==", "bodyText": "I meant renaming pcreqId to preqId, just in case it wasn't clear.", "url": "https://github.com/line/armeria/pull/2599#discussion_r394111662", "createdAt": "2020-03-18T05:19:34Z", "author": {"login": "trustin"}, "path": "core/src/main/java/com/linecorp/armeria/client/DefaultClientRequestContext.java", "diffHunk": "@@ -578,6 +588,9 @@ private String toStringSlow() {\n         // Build the string representation.\n         final StringBuilder buf = TemporaryThreadLocals.get().stringBuilder();\n         buf.append(\"[creqId=\").append(creqId);\n+        if (parent != null) {\n+            buf.append(\", pcreqId=\").append(pcreqId);\n+        }\n         if (sreqId != null) {\n             buf.append(\", sreqId=\").append(sreqId);\n         }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDEwOTU5Ng=="}, "originalCommit": {"oid": "495faffb45f1f92c2f287b54bf15c626ca5c1523"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDExMjMyNQ==", "bodyText": "I thought the preqId too. preqId sounds good to me. Let's go with preqId.", "url": "https://github.com/line/armeria/pull/2599#discussion_r394112325", "createdAt": "2020-03-18T05:22:45Z", "author": {"login": "ikhoon"}, "path": "core/src/main/java/com/linecorp/armeria/client/DefaultClientRequestContext.java", "diffHunk": "@@ -578,6 +588,9 @@ private String toStringSlow() {\n         // Build the string representation.\n         final StringBuilder buf = TemporaryThreadLocals.get().stringBuilder();\n         buf.append(\"[creqId=\").append(creqId);\n+        if (parent != null) {\n+            buf.append(\", pcreqId=\").append(pcreqId);\n+        }\n         if (sreqId != null) {\n             buf.append(\", sreqId=\").append(sreqId);\n         }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDEwOTU5Ng=="}, "originalCommit": {"oid": "495faffb45f1f92c2f287b54bf15c626ca5c1523"}, "originalPosition": 56}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2779, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}