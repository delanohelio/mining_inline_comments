{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc2MTYxMDE3", "number": 2500, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QxNDoxOToyMlrODgZ-ww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QxNDozNToxM1rODgaUBg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1MzA2NjkxOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/com/linecorp/armeria/client/DefaultClientRequestContext.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QxNDoxOToyMlrOFqmCBQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QxNDoxOToyMlrOFqmCBQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDIwNzYyMQ==", "bodyText": "This rearrangement is to make abort() is called before log completion, like we did in ClientUtil.fail(), for consistency.", "url": "https://github.com/line/armeria/pull/2500#discussion_r380207621", "createdAt": "2020-02-17T14:19:22Z", "author": {"login": "trustin"}, "path": "core/src/main/java/com/linecorp/armeria/client/DefaultClientRequestContext.java", "diffHunk": "@@ -257,16 +257,16 @@ private void runThreadLocalContextCustomizers() {\n     }\n \n     private void failEarly(Throwable cause) {\n-        final RequestLogBuilder logBuilder = logBuilder();\n-        final UnprocessedRequestException wrapped = new UnprocessedRequestException(cause);\n-        logBuilder.endRequest(wrapped);\n-        logBuilder.endResponse(wrapped);\n-\n         final HttpRequest req = request();\n         if (req != null) {\n             autoFillSchemeAndAuthority();\n             req.abort(cause);\n         }\n+\n+        final RequestLogBuilder logBuilder = logBuilder();\n+        final UnprocessedRequestException wrapped = new UnprocessedRequestException(cause);\n+        logBuilder.endRequest(wrapped);\n+        logBuilder.endResponse(wrapped);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "79d69c4e977b951f9c9c6380fb2d3bdff14a433b"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1MzEyMTM0OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/com/linecorp/armeria/internal/client/ClientUtil.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QxNDozNToxM1rOFqmi7w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QxNToxNjoyN1rOFqn7zw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDIxNjA0Nw==", "bodyText": "nit:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    requireNonNull(fallbackResponseFactory, \"fallback\");\n          \n          \n            \n                    requireNonNull(fallbackResponseFactory, \"fallbackResponseFactory\");", "url": "https://github.com/line/armeria/pull/2500#discussion_r380216047", "createdAt": "2020-02-17T14:35:13Z", "author": {"login": "ikhoon"}, "path": "core/src/main/java/com/linecorp/armeria/internal/client/ClientUtil.java", "diffHunk": "@@ -79,16 +88,17 @@ private static EndpointGroup mapEndpoint(ClientRequestContext ctx, EndpointGroup\n \n     public static <I extends Request, O extends Response, U extends Client<I, O>>\n     O executeWithFallback(U delegate, ClientRequestContext ctx,\n-                          BiFunction<ClientRequestContext, Throwable, O> fallback) {\n+                          BiFunction<ClientRequestContext, Throwable, O> fallbackResponseFactory) {\n \n         requireNonNull(delegate, \"delegate\");\n         requireNonNull(ctx, \"ctx\");\n-        requireNonNull(fallback, \"fallback\");\n+        requireNonNull(fallbackResponseFactory, \"fallback\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "79d69c4e977b951f9c9c6380fb2d3bdff14a433b"}, "originalPosition": 82}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDIzODc5OQ==", "bodyText": "Thanks!", "url": "https://github.com/line/armeria/pull/2500#discussion_r380238799", "createdAt": "2020-02-17T15:16:27Z", "author": {"login": "trustin"}, "path": "core/src/main/java/com/linecorp/armeria/internal/client/ClientUtil.java", "diffHunk": "@@ -79,16 +88,17 @@ private static EndpointGroup mapEndpoint(ClientRequestContext ctx, EndpointGroup\n \n     public static <I extends Request, O extends Response, U extends Client<I, O>>\n     O executeWithFallback(U delegate, ClientRequestContext ctx,\n-                          BiFunction<ClientRequestContext, Throwable, O> fallback) {\n+                          BiFunction<ClientRequestContext, Throwable, O> fallbackResponseFactory) {\n \n         requireNonNull(delegate, \"delegate\");\n         requireNonNull(ctx, \"ctx\");\n-        requireNonNull(fallback, \"fallback\");\n+        requireNonNull(fallbackResponseFactory, \"fallback\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDIxNjA0Nw=="}, "originalCommit": {"oid": "79d69c4e977b951f9c9c6380fb2d3bdff14a433b"}, "originalPosition": 82}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3019, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}