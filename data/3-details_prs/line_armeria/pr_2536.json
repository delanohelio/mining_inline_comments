{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgwMTY1MDAw", "number": 2536, "title": "Update Brave from 5.9.5 to 5.10.1", "bodyText": "there will be a brave 5.10.1 shortly, just raising for feedback as there is at least one question area.", "createdAt": "2020-02-26T11:16:35Z", "url": "https://github.com/line/armeria/pull/2536", "merged": true, "mergeCommit": {"oid": "9ba9559cbc3ad48f26ae828fcb7a97385a24ff1f"}, "closed": true, "closedAt": "2020-02-28T10:50:42Z", "author": {"login": "codefromthecrypt"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcIE1gCAH2gAyMzgwMTY1MDAwOjM5NzkyMTEyYzJlZDE4N2QwMzI5ZjM4NzRjYjcxYzFlZDUwOTJlZWM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcIpzvfAFqTM2NjE4MDMzNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "39792112c2ed187d0329f3874cb71c1ed5092eec", "author": {"user": null}, "url": "https://github.com/line/armeria/commit/39792112c2ed187d0329f3874cb71c1ed5092eec", "committedDate": "2020-02-26T11:15:32Z", "message": "Moves to new Brave parser types"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY0ODE2Njc5", "url": "https://github.com/line/armeria/pull/2536#pullrequestreview-364816679", "createdAt": "2020-02-26T11:17:20Z", "commit": {"oid": "39792112c2ed187d0329f3874cb71c1ed5092eec"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxMToxNzoyMVrOFunsWw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxMToxNzoyMVrOFunsWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDQyOTE0Nw==", "bodyText": "when serving the request from the response side. I'm thinking we ignore header mutations..", "url": "https://github.com/line/armeria/pull/2536#discussion_r384429147", "createdAt": "2020-02-26T11:17:21Z", "author": {"login": "codefromthecrypt"}, "path": "brave/src/main/java/com/linecorp/armeria/client/brave/ClientRequestContextAdapter.java", "diffHunk": "@@ -89,7 +89,9 @@ public String header(String name) {\n \n         @Override\n         public void header(String name, String value) {\n-            headersBuilder.set(name, value);\n+            if (headersBuilder != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "39792112c2ed187d0329f3874cb71c1ed5092eec"}, "originalPosition": 17}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY0ODE2OTgz", "url": "https://github.com/line/armeria/pull/2536#pullrequestreview-364816983", "createdAt": "2020-02-26T11:17:50Z", "commit": {"oid": "39792112c2ed187d0329f3874cb71c1ed5092eec"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxMToxNzo1MFrOFuntXQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxMToxNzo1MFrOFuntXQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDQyOTQwNQ==", "bodyText": "is being lazy here (and in server) over-optimization from POV of armeria?", "url": "https://github.com/line/armeria/pull/2536#discussion_r384429405", "createdAt": "2020-02-26T11:17:50Z", "author": {"login": "codefromthecrypt"}, "path": "brave/src/main/java/com/linecorp/armeria/client/brave/ClientRequestContextAdapter.java", "diffHunk": "@@ -113,6 +115,7 @@ public long startTimestamp() {\n     @SuppressWarnings(\"ClassNameSameAsAncestorName\")\n     private static final class HttpClientResponse extends brave.http.HttpClientResponse {\n         private final RequestLog log;\n+        private brave.http.HttpClientRequest request;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "39792112c2ed187d0329f3874cb71c1ed5092eec"}, "originalPosition": 27}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY1NDI5OTEx", "url": "https://github.com/line/armeria/pull/2536#pullrequestreview-365429911", "createdAt": "2020-02-27T05:56:42Z", "commit": {"oid": "39792112c2ed187d0329f3874cb71c1ed5092eec"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QwNTo1Njo0MlrOFvGDLQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QwNTo1Njo0OVrOFvGDUA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDkyNjUwOQ==", "bodyText": "I was sort of expecting this to accept HttpClientRequest as a parameter and passed in when initializing here\nhttps://github.com/line/armeria/blob/master/brave/src/main/java/com/linecorp/armeria/client/brave/BraveClient.java#L162\nI guess it does mean mutations would be present but is it a problem either way?\nBut anyways, reexposing, with the lazy instantiation, seems fine to me too.", "url": "https://github.com/line/armeria/pull/2536#discussion_r384926509", "createdAt": "2020-02-27T05:56:42Z", "author": {"login": "anuraaga"}, "path": "brave/src/main/java/com/linecorp/armeria/client/brave/ClientRequestContextAdapter.java", "diffHunk": "@@ -113,6 +115,7 @@ public long startTimestamp() {\n     @SuppressWarnings(\"ClassNameSameAsAncestorName\")\n     private static final class HttpClientResponse extends brave.http.HttpClientResponse {\n         private final RequestLog log;\n+        private brave.http.HttpClientRequest request;\n \n         HttpClientResponse(RequestLog log) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "39792112c2ed187d0329f3874cb71c1ed5092eec"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDkyNjU0NA==", "bodyText": "Think it's good.", "url": "https://github.com/line/armeria/pull/2536#discussion_r384926544", "createdAt": "2020-02-27T05:56:49Z", "author": {"login": "anuraaga"}, "path": "brave/src/main/java/com/linecorp/armeria/client/brave/ClientRequestContextAdapter.java", "diffHunk": "@@ -113,6 +115,7 @@ public long startTimestamp() {\n     @SuppressWarnings(\"ClassNameSameAsAncestorName\")\n     private static final class HttpClientResponse extends brave.http.HttpClientResponse {\n         private final RequestLog log;\n+        private brave.http.HttpClientRequest request;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDQyOTQwNQ=="}, "originalCommit": {"oid": "39792112c2ed187d0329f3874cb71c1ed5092eec"}, "originalPosition": 27}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "62f20f696adce1ae0d2163aef14125588738efc3", "author": {"user": null}, "url": "https://github.com/line/armeria/commit/62f20f696adce1ae0d2163aef14125588738efc3", "committedDate": "2020-02-27T11:01:28Z", "message": "finishes things"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY1NTkyOTc0", "url": "https://github.com/line/armeria/pull/2536#pullrequestreview-365592974", "createdAt": "2020-02-27T11:04:52Z", "commit": {"oid": "62f20f696adce1ae0d2163aef14125588738efc3"}, "state": "APPROVED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxMTowNDo1M1rOFvOEug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxMTowODoyM1rOFvOK5w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTA1Nzk3OA==", "bodyText": "Unrelated to this PR so just food for thought / another PR but just noticed it - since we pass the span to the handler, do we need to push the context (e.g. mount the scope)?", "url": "https://github.com/line/armeria/pull/2536#discussion_r385057978", "createdAt": "2020-02-27T11:04:53Z", "author": {"login": "anuraaga"}, "path": "brave/src/main/java/com/linecorp/armeria/client/brave/BraveClient.java", "diffHunk": "@@ -159,9 +160,9 @@ public HttpResponse execute(ClientRequestContext ctx, HttpRequest req) throws Ex\n                 }\n             }\n \n-            final HttpClientResponse response = ClientRequestContextAdapter.asHttpClientResponse(log);\n+            final HttpClientResponse response = ClientRequestContextAdapter.asHttpClientResponse(log, request);\n             try (SafeCloseable ignored = ctx.push()) {\n-                handler.handleReceive(response, log.responseCause(), span);\n+                handler.handleReceive(response, response.error(), span);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "62f20f696adce1ae0d2163aef14125588738efc3"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTA1ODU3Ng==", "bodyText": "I think we can revert the headers related changes now that we just serve the same request object", "url": "https://github.com/line/armeria/pull/2536#discussion_r385058576", "createdAt": "2020-02-27T11:06:04Z", "author": {"login": "anuraaga"}, "path": "brave/src/main/java/com/linecorp/armeria/client/brave/ClientRequestContextAdapter.java", "diffHunk": "@@ -44,9 +44,9 @@\n     @SuppressWarnings(\"ClassNameSameAsAncestorName\")\n     private static final class HttpClientRequest extends brave.http.HttpClientRequest {\n         private final ClientRequestContext ctx;\n-        private final RequestHeadersBuilder headersBuilder;\n+        @Nullable private final RequestHeadersBuilder headersBuilder;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "62f20f696adce1ae0d2163aef14125588738efc3"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTA1ODg0OQ==", "bodyText": "Ditto", "url": "https://github.com/line/armeria/pull/2536#discussion_r385058849", "createdAt": "2020-02-27T11:06:46Z", "author": {"login": "anuraaga"}, "path": "brave/src/main/java/com/linecorp/armeria/server/brave/BraveService.java", "diffHunk": "@@ -98,9 +100,9 @@ public HttpResponse serve(ServiceRequestContext ctx, HttpRequest req) throws Exc\n                 // If the client timed-out the request, we will have never sent any response data at all.\n             }\n \n-            final HttpServerResponse response = ServiceRequestContextAdapter.asHttpServerResponse(log);\n+            final HttpServerResponse response = ServiceRequestContextAdapter.asHttpServerResponse(log, request);\n             try (SafeCloseable ignored = ctx.push()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "62f20f696adce1ae0d2163aef14125588738efc3"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTA1OTU1OQ==", "bodyText": "I guess neither 3 nor 1 mean much to me. We probably should add a comment explaining what this is actually asserting semantically.", "url": "https://github.com/line/armeria/pull/2536#discussion_r385059559", "createdAt": "2020-02-27T11:08:23Z", "author": {"login": "anuraaga"}, "path": "brave/src/test/java/com/linecorp/armeria/server/brave/BraveServiceTest.java", "diffHunk": "@@ -148,7 +148,7 @@ void scopeDecorator() throws Exception {\n \n         // check service name\n         assertThat(span.localServiceName()).isEqualTo(TEST_SERVICE);\n-        assertThat(scopeDecoratorCallingCounter.get()).isEqualTo(3);\n+        assertThat(scopeDecoratorCallingCounter.get()).isEqualTo(1);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "62f20f696adce1ae0d2163aef14125588738efc3"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY1NjEwODM5", "url": "https://github.com/line/armeria/pull/2536#pullrequestreview-365610839", "createdAt": "2020-02-27T11:36:00Z", "commit": {"oid": "62f20f696adce1ae0d2163aef14125588738efc3"}, "state": "COMMENTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxMTozNjowMFrOFvO74g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxMTo0MTowNFrOFvPExQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTA3MjA5OA==", "bodyText": "nit: span could be renamed back to customizer or spanCustomizer?", "url": "https://github.com/line/armeria/pull/2536#discussion_r385072098", "createdAt": "2020-02-27T11:36:00Z", "author": {"login": "trustin"}, "path": "brave/src/main/java/com/linecorp/armeria/client/brave/ArmeriaHttpClientParser.java", "diffHunk": "@@ -53,8 +55,10 @@ static ArmeriaHttpClientParser get() {\n     private ArmeriaHttpClientParser() {}\n \n     @Override\n-    public <T> void request(HttpAdapter<T, ?> rawAdapter, T req, SpanCustomizer customizer) {\n-        super.request(rawAdapter, req, customizer);\n+    public void parse(brave.http.HttpRequest request, TraceContext context, SpanCustomizer span) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "62f20f696adce1ae0d2163aef14125588738efc3"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTA3MjQwNg==", "bodyText": "nit: res -> unwrapped?", "url": "https://github.com/line/armeria/pull/2536#discussion_r385072406", "createdAt": "2020-02-27T11:36:39Z", "author": {"login": "trustin"}, "path": "brave/src/main/java/com/linecorp/armeria/client/brave/ArmeriaHttpClientParser.java", "diffHunk": "@@ -66,39 +70,41 @@ private ArmeriaHttpClientParser() {}\n             return;\n         }\n \n-        customizer.tag(SpanTags.TAG_HTTP_HOST, httpReq.authority())\n-                  .tag(SpanTags.TAG_HTTP_URL, httpReq.uri().toString());\n+        span.tag(SpanTags.TAG_HTTP_HOST, httpReq.authority())\n+            .tag(SpanTags.TAG_HTTP_URL, httpReq.uri().toString());\n     }\n \n     @Override\n-    public <T> void response(HttpAdapter<?, T> rawAdapter, T res, Throwable error, SpanCustomizer customizer) {\n-        super.response(rawAdapter, res, error, customizer);\n+    public void parse(HttpResponse response, TraceContext context, SpanCustomizer span) {\n+        HttpResponseParser.DEFAULT.parse(response, context, span);\n+\n+        final Object res = response.unwrap();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "62f20f696adce1ae0d2163aef14125588738efc3"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTA3MzU5MA==", "bodyText": "nit: req -> unwrapped", "url": "https://github.com/line/armeria/pull/2536#discussion_r385073590", "createdAt": "2020-02-27T11:39:19Z", "author": {"login": "trustin"}, "path": "brave/src/main/java/com/linecorp/armeria/server/brave/ArmeriaHttpServerParser.java", "diffHunk": "@@ -51,23 +53,27 @@ private ArmeriaHttpServerParser() {\n     }\n \n     @Override\n-    public <T> void request(HttpAdapter<T, ?> rawAdapter, T req, SpanCustomizer customizer) {\n-        super.request(rawAdapter, req, customizer);\n+    public void parse(brave.http.HttpRequest request, TraceContext context, SpanCustomizer span) {\n+        HttpRequestParser.DEFAULT.parse(request, context, span);\n+\n+        final Object req = request.unwrap();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "62f20f696adce1ae0d2163aef14125588738efc3"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTA3MzcwMw==", "bodyText": "nit: span -> customizer or spanCustomizer", "url": "https://github.com/line/armeria/pull/2536#discussion_r385073703", "createdAt": "2020-02-27T11:39:33Z", "author": {"login": "trustin"}, "path": "brave/src/main/java/com/linecorp/armeria/server/brave/ArmeriaHttpServerParser.java", "diffHunk": "@@ -51,23 +53,27 @@ private ArmeriaHttpServerParser() {\n     }\n \n     @Override\n-    public <T> void request(HttpAdapter<T, ?> rawAdapter, T req, SpanCustomizer customizer) {\n-        super.request(rawAdapter, req, customizer);\n+    public void parse(brave.http.HttpRequest request, TraceContext context, SpanCustomizer span) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "62f20f696adce1ae0d2163aef14125588738efc3"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTA3Mzk1Mw==", "bodyText": "request -> braveReq to avoid confusion?", "url": "https://github.com/line/armeria/pull/2536#discussion_r385073953", "createdAt": "2020-02-27T11:40:09Z", "author": {"login": "trustin"}, "path": "brave/src/main/java/com/linecorp/armeria/server/brave/BraveService.java", "diffHunk": "@@ -75,7 +76,8 @@ private BraveService(HttpService delegate, HttpTracing httpTracing) {\n \n     @Override\n     public HttpResponse serve(ServiceRequestContext ctx, HttpRequest req) throws Exception {\n-        final Span span = handler.handleReceive(ServiceRequestContextAdapter.asHttpServerRequest(ctx));\n+        final HttpServerRequest request = ServiceRequestContextAdapter.asHttpServerRequest(ctx);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "62f20f696adce1ae0d2163aef14125588738efc3"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTA3NDM3Mw==", "bodyText": "nit: request -> braveReq and response -> braveRes to avoid confusion", "url": "https://github.com/line/armeria/pull/2536#discussion_r385074373", "createdAt": "2020-02-27T11:41:04Z", "author": {"login": "trustin"}, "path": "brave/src/main/java/com/linecorp/armeria/client/brave/BraveClient.java", "diffHunk": "@@ -159,9 +160,9 @@ public HttpResponse execute(ClientRequestContext ctx, HttpRequest req) throws Ex\n                 }\n             }\n \n-            final HttpClientResponse response = ClientRequestContextAdapter.asHttpClientResponse(log);\n+            final HttpClientResponse response = ClientRequestContextAdapter.asHttpClientResponse(log, request);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "62f20f696adce1ae0d2163aef14125588738efc3"}, "originalPosition": 15}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "92e0a1459c9158617152b9ad59d42e2e3027dd57", "author": {"user": null}, "url": "https://github.com/line/armeria/commit/92e0a1459c9158617152b9ad59d42e2e3027dd57", "committedDate": "2020-02-28T03:49:25Z", "message": "latest"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f5f20e75cb6658090628a5ae71f71ae3caff5154", "author": {"user": null}, "url": "https://github.com/line/armeria/commit/f5f20e75cb6658090628a5ae71f71ae3caff5154", "committedDate": "2020-02-28T04:06:25Z", "message": "review"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY2MTU3MzIw", "url": "https://github.com/line/armeria/pull/2536#pullrequestreview-366157320", "createdAt": "2020-02-28T04:39:23Z", "commit": {"oid": "f5f20e75cb6658090628a5ae71f71ae3caff5154"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY2MTY5ODc2", "url": "https://github.com/line/armeria/pull/2536#pullrequestreview-366169876", "createdAt": "2020-02-28T05:38:17Z", "commit": {"oid": "f5f20e75cb6658090628a5ae71f71ae3caff5154"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY2MTgwMzM3", "url": "https://github.com/line/armeria/pull/2536#pullrequestreview-366180337", "createdAt": "2020-02-28T06:20:06Z", "commit": {"oid": "f5f20e75cb6658090628a5ae71f71ae3caff5154"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 610, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}