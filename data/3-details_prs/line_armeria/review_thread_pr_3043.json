{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc4Mzc3MzI0", "number": 3043, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQwMTo1MzozOVrOEgNkRw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQwODo1MDowMlrOEhkq3A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyMjEyMTY3OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/com/linecorp/armeria/internal/common/logging/LoggingDecorators.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQwMTo1MzozOVrOHM83mw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQwNjoyOTowOVrOHOOd9A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzM0MjIzNQ==", "bodyText": "Probably better to add ctx to the log message?\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            logger.warn(\"Unexpected exception while logging request: \", e);\n          \n          \n            \n                            logger.warn(\"Unexpected exception while logging request: {}\", ctx, e);", "url": "https://github.com/line/armeria/pull/3043#discussion_r483342235", "createdAt": "2020-09-04T01:53:39Z", "author": {"login": "ikhoon"}, "path": "core/src/main/java/com/linecorp/armeria/internal/common/logging/LoggingDecorators.java", "diffHunk": "@@ -39,6 +40,26 @@\n \n     private LoggingDecorators() {}\n \n+    /**\n+     * Logs request and response using the specified {@code requestLogger} and {@code responseLogger}.\n+     */\n+    public static void logWhenComplete(\n+            Logger logger, RequestContext ctx,\n+            Consumer<RequestOnlyLog> requestLogger, Consumer<RequestLog> responseLogger) {\n+        ctx.log().whenRequestComplete().thenAccept(requestLogger).exceptionally(e -> {\n+            try (SafeCloseable ignored = ctx.push()) {\n+                logger.warn(\"Unexpected exception while logging request: \", e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "425236e9d179fba9dae2fdc435381aabcf92c27d"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDE2MTkwNg==", "bodyText": "\"{} Unexpected...\", ctx, e for consistency?", "url": "https://github.com/line/armeria/pull/3043#discussion_r484161906", "createdAt": "2020-09-07T03:10:04Z", "author": {"login": "trustin"}, "path": "core/src/main/java/com/linecorp/armeria/internal/common/logging/LoggingDecorators.java", "diffHunk": "@@ -39,6 +40,26 @@\n \n     private LoggingDecorators() {}\n \n+    /**\n+     * Logs request and response using the specified {@code requestLogger} and {@code responseLogger}.\n+     */\n+    public static void logWhenComplete(\n+            Logger logger, RequestContext ctx,\n+            Consumer<RequestOnlyLog> requestLogger, Consumer<RequestLog> responseLogger) {\n+        ctx.log().whenRequestComplete().thenAccept(requestLogger).exceptionally(e -> {\n+            try (SafeCloseable ignored = ctx.push()) {\n+                logger.warn(\"Unexpected exception while logging request: \", e);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzM0MjIzNQ=="}, "originalCommit": {"oid": "425236e9d179fba9dae2fdc435381aabcf92c27d"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDY3OTE1Ng==", "bodyText": "Fixed. \ud83d\ude09", "url": "https://github.com/line/armeria/pull/3043#discussion_r484679156", "createdAt": "2020-09-08T06:29:09Z", "author": {"login": "minwoox"}, "path": "core/src/main/java/com/linecorp/armeria/internal/common/logging/LoggingDecorators.java", "diffHunk": "@@ -39,6 +40,26 @@\n \n     private LoggingDecorators() {}\n \n+    /**\n+     * Logs request and response using the specified {@code requestLogger} and {@code responseLogger}.\n+     */\n+    public static void logWhenComplete(\n+            Logger logger, RequestContext ctx,\n+            Consumer<RequestOnlyLog> requestLogger, Consumer<RequestLog> responseLogger) {\n+        ctx.log().whenRequestComplete().thenAccept(requestLogger).exceptionally(e -> {\n+            try (SafeCloseable ignored = ctx.push()) {\n+                logger.warn(\"Unexpected exception while logging request: \", e);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzM0MjIzNQ=="}, "originalCommit": {"oid": "425236e9d179fba9dae2fdc435381aabcf92c27d"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyMjEyMTk0OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/com/linecorp/armeria/internal/common/logging/LoggingDecorators.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQwMTo1Mzo0OVrOHM83wg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQwMTo1Mzo0OVrOHM83wg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzM0MjI3NA==", "bodyText": "ditto", "url": "https://github.com/line/armeria/pull/3043#discussion_r483342274", "createdAt": "2020-09-04T01:53:49Z", "author": {"login": "ikhoon"}, "path": "core/src/main/java/com/linecorp/armeria/internal/common/logging/LoggingDecorators.java", "diffHunk": "@@ -39,6 +40,26 @@\n \n     private LoggingDecorators() {}\n \n+    /**\n+     * Logs request and response using the specified {@code requestLogger} and {@code responseLogger}.\n+     */\n+    public static void logWhenComplete(\n+            Logger logger, RequestContext ctx,\n+            Consumer<RequestOnlyLog> requestLogger, Consumer<RequestLog> responseLogger) {\n+        ctx.log().whenRequestComplete().thenAccept(requestLogger).exceptionally(e -> {\n+            try (SafeCloseable ignored = ctx.push()) {\n+                logger.warn(\"Unexpected exception while logging request: \", e);\n+            }\n+            return null;\n+        });\n+        ctx.log().whenComplete().thenAccept(responseLogger).exceptionally(e -> {\n+            try (SafeCloseable ignored = ctx.push()) {\n+                logger.warn(\"Unexpected exception while logging response: \", e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "425236e9d179fba9dae2fdc435381aabcf92c27d"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzNjM5MjYwOnYy", "diffSide": "RIGHT", "path": "core/src/test/java/com/linecorp/armeria/client/logging/LoggingClientTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQwODo1MDowMlrOHO9TpQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxMjozNToxN1rOHPFKCw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTQ0NjU2NQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    verify(logger).warn(eq(\"Unexpected exception while logging request: \"), any(CompletionException.class));\n          \n          \n            \n                    verify(logger).warn(contains(\"Unexpected exception while logging request: \"), any(CompletionException.class));\n          \n      \n    \n    \n  \n\nThis test was failed https://ci.appveyor.com/project/line/armeria/builds/35079753/job/5fn7wowbu1vdvwwf#L1498 \ud83d\ude09", "url": "https://github.com/line/armeria/pull/3043#discussion_r485446565", "createdAt": "2020-09-09T08:50:02Z", "author": {"login": "ikhoon"}, "path": "core/src/test/java/com/linecorp/armeria/client/logging/LoggingClientTest.java", "diffHunk": "@@ -152,4 +154,28 @@ void sanitizeRequestContent() throws Exception {\n         // Ensure sanitize the request content of the phone number 333-490-4499\n         assertThat(ctx.logBuilder().toString()).doesNotContain(\"333-490-4499\");\n     }\n+\n+    @Test\n+    void exceptionWhileLogging() throws Exception {\n+        final HttpRequest req = HttpRequest.of(RequestHeaders.of(HttpMethod.POST, \"/hello/trustin\",\n+                                                                 HttpHeaderNames.SCHEME, \"http\",\n+                                                                 HttpHeaderNames.AUTHORITY, \"test.com\"));\n+        final ClientRequestContext ctx = ClientRequestContext.of(req);\n+        final Logger logger = LoggingTestUtil.newMockLogger(ctx, capturedCause);\n+        final LoggingClient loggingClient = LoggingClient.builder()\n+                                                         .logger(logger)\n+                                                         .requestLogLevelMapper(log -> {\n+                                                             throw new AnticipatedException();\n+                                                         })\n+                                                         .responseLogLevelMapper(log -> {\n+                                                             throw new AnticipatedException();\n+                                                         })\n+                                                         .build(delegate);\n+        loggingClient.execute(ctx, req);\n+        verify(logger).warn(eq(\"Unexpected exception while logging request: \"), any(CompletionException.class));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b619d296987bb90bdca8edeefa3a392eea18f0b5"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTU3NTE3OQ==", "bodyText": "Oops forgot to fix the test. \ud83e\udd23", "url": "https://github.com/line/armeria/pull/3043#discussion_r485575179", "createdAt": "2020-09-09T12:35:17Z", "author": {"login": "minwoox"}, "path": "core/src/test/java/com/linecorp/armeria/client/logging/LoggingClientTest.java", "diffHunk": "@@ -152,4 +154,28 @@ void sanitizeRequestContent() throws Exception {\n         // Ensure sanitize the request content of the phone number 333-490-4499\n         assertThat(ctx.logBuilder().toString()).doesNotContain(\"333-490-4499\");\n     }\n+\n+    @Test\n+    void exceptionWhileLogging() throws Exception {\n+        final HttpRequest req = HttpRequest.of(RequestHeaders.of(HttpMethod.POST, \"/hello/trustin\",\n+                                                                 HttpHeaderNames.SCHEME, \"http\",\n+                                                                 HttpHeaderNames.AUTHORITY, \"test.com\"));\n+        final ClientRequestContext ctx = ClientRequestContext.of(req);\n+        final Logger logger = LoggingTestUtil.newMockLogger(ctx, capturedCause);\n+        final LoggingClient loggingClient = LoggingClient.builder()\n+                                                         .logger(logger)\n+                                                         .requestLogLevelMapper(log -> {\n+                                                             throw new AnticipatedException();\n+                                                         })\n+                                                         .responseLogLevelMapper(log -> {\n+                                                             throw new AnticipatedException();\n+                                                         })\n+                                                         .build(delegate);\n+        loggingClient.execute(ctx, req);\n+        verify(logger).warn(eq(\"Unexpected exception while logging request: \"), any(CompletionException.class));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTQ0NjU2NQ=="}, "originalCommit": {"oid": "b619d296987bb90bdca8edeefa3a392eea18f0b5"}, "originalPosition": 54}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1862, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}