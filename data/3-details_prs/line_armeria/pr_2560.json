{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg0NzYzMTU5", "number": 2560, "title": "Copy RequestLog properties to child in RetryingClient", "bodyText": "Motivation:\nWhen retrying, certain properties of RequestLog such as name(),  requestContent() and requestContentPreview() can be copied to the child context, so they are used.\nModifications:\n\nCopy name(), SerializationFormat, requestContent and requestContentPreview manually when creating derived ctx in RetryingClient.\n\nThis is not happening in newDerivedContext because we don't know which properties should be copied when deriving.\nCopy responseContent and responseContentPreview if deferResponseContent(|Preview) is called.\n\n\n\nResult:\n\nClose #2551\nYou can now retry depending on the content of the request.", "createdAt": "2020-03-06T11:06:58Z", "url": "https://github.com/line/armeria/pull/2560", "merged": true, "mergeCommit": {"oid": "727ea3c4849c3354445589ad9d40a0fda78be737"}, "closed": true, "closedAt": "2020-03-12T11:53:04Z", "author": {"login": "minwoox"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcK-FJwAH2gAyMzg0NzYzMTU5OjAyM2I0YTg1ZTY2ZDNkMWZmNGEyODE1YTZlY2UxMGY0ODQzMmJhNjU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcM6W7vgFqTM3MzQ4OTM4Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "023b4a85e66d3d1ff4a2815a6ece10f48432ba65", "author": {"user": {"login": "minwoox", "name": "minux"}}, "url": "https://github.com/line/armeria/commit/023b4a85e66d3d1ff4a2815a6ece10f48432ba65", "committedDate": "2020-03-06T11:05:04Z", "message": "Copy RequestLog properties to child in RetryingClient\nMotivation:\nWhen retrying, certain properties of `RequestLog` such as `name()`,  `requestContent()` and `requestContentPreview()` can be copied to the child context, so they are used.\n\nModifications:\n- Copy `name()`, `SerializationFormat`, `requestContent` and `requestContentPreview` manually when creating derived ctx in `RetryingClient`.\n  - This is not happen in `newDerivedContext` because we don't know which properties should be copied when deriving.\n\nResult:\n- Close #2551\n- You can now retry depending on the content of the request."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcwMjQ1ODUw", "url": "https://github.com/line/armeria/pull/2560#pullrequestreview-370245850", "createdAt": "2020-03-06T11:08:00Z", "commit": {"oid": "023b4a85e66d3d1ff4a2815a6ece10f48432ba65"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQxMTowODowMFrOFy1KNA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQxMTowODowMFrOFy1KNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODg0NDA4NA==", "bodyText": "I wonder if I have to copy the RESPONSE_CONTENT as well. \ud83e\udd14", "url": "https://github.com/line/armeria/pull/2560#discussion_r388844084", "createdAt": "2020-03-06T11:08:00Z", "author": {"login": "minwoox"}, "path": "core/src/main/java/com/linecorp/armeria/client/retry/AbstractRetryingClient.java", "diffHunk": "@@ -270,11 +274,41 @@ protected static ClientRequestContext newDerivedContext(ClientRequestContext ctx\n                                                             boolean initialAttempt) {\n         final RequestId id = ctx.options().requestIdGenerator().get();\n         final EndpointGroup endpointGroup = ctx.endpointGroup();\n+        final ClientRequestContext derived;\n         if (endpointGroup != null && !initialAttempt) {\n-            return ctx.newDerivedContext(id, req, rpcReq, endpointGroup.select(ctx));\n+            derived = ctx.newDerivedContext(id, req, rpcReq, endpointGroup.select(ctx));\n         } else {\n-            return ctx.newDerivedContext(id, req, rpcReq);\n+            derived = ctx.newDerivedContext(id, req, rpcReq);\n         }\n+\n+        final RequestLogAccess parentLog = ctx.log();\n+        final RequestLog partial = parentLog.partial();\n+        final RequestLogBuilder logBuilder = derived.logBuilder();\n+        // serializationFormat is always not null, so this is fine.\n+        logBuilder.serializationFormat(partial.serializationFormat());\n+        if (parentLog.isAvailable(RequestLogProperty.NAME)) {\n+            final String name = partial.name();\n+            if (name != null) {\n+                logBuilder.name(name);\n+            }\n+        }\n+\n+        final RequestLogBuilder parentLogBuilder = ctx.logBuilder();\n+        if (parentLogBuilder.isDeferRequestContentSet()) {\n+            logBuilder.deferRequestContent();\n+        }\n+        parentLog.whenAvailable(RequestLogProperty.REQUEST_CONTENT).thenApply(requestLog -> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "023b4a85e66d3d1ff4a2815a6ece10f48432ba65"}, "originalPosition": 40}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcxMDU2MTQ1", "url": "https://github.com/line/armeria/pull/2560#pullrequestreview-371056145", "createdAt": "2020-03-09T10:31:37Z", "commit": {"oid": "023b4a85e66d3d1ff4a2815a6ece10f48432ba65"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxMDozMTozOFrOFzh21w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxMDo0OTozN1rOFziY5w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTU3NjQwNw==", "bodyText": "How about simplifying like the following?\nNote that this method does not copy the {@link RequestLog} properties to the derived\ncontext.", "url": "https://github.com/line/armeria/pull/2560#discussion_r389576407", "createdAt": "2020-03-09T10:31:38Z", "author": {"login": "trustin"}, "path": "core/src/main/java/com/linecorp/armeria/client/ClientRequestContext.java", "diffHunk": "@@ -357,6 +357,8 @@ default ClientRequestContext newDerivedContext(RequestId id,\n      * Creates a new {@link ClientRequestContext} whose properties and {@link Attribute}s are copied from this\n      * {@link ClientRequestContext}, except having different {@link Request}, {@link Endpoint} and its own\n      * {@link RequestLog}.\n+     *\n+     * <p>Note that if you want to copy the properties of the {@link RequestLog}, you should do it by yourself.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "023b4a85e66d3d1ff4a2815a6ece10f48432ba65"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTU4NTEyNw==", "bodyText": "I think so. How about copying SESSION and SCHEME as well?", "url": "https://github.com/line/armeria/pull/2560#discussion_r389585127", "createdAt": "2020-03-09T10:49:37Z", "author": {"login": "trustin"}, "path": "core/src/main/java/com/linecorp/armeria/client/retry/AbstractRetryingClient.java", "diffHunk": "@@ -270,11 +274,41 @@ protected static ClientRequestContext newDerivedContext(ClientRequestContext ctx\n                                                             boolean initialAttempt) {\n         final RequestId id = ctx.options().requestIdGenerator().get();\n         final EndpointGroup endpointGroup = ctx.endpointGroup();\n+        final ClientRequestContext derived;\n         if (endpointGroup != null && !initialAttempt) {\n-            return ctx.newDerivedContext(id, req, rpcReq, endpointGroup.select(ctx));\n+            derived = ctx.newDerivedContext(id, req, rpcReq, endpointGroup.select(ctx));\n         } else {\n-            return ctx.newDerivedContext(id, req, rpcReq);\n+            derived = ctx.newDerivedContext(id, req, rpcReq);\n         }\n+\n+        final RequestLogAccess parentLog = ctx.log();\n+        final RequestLog partial = parentLog.partial();\n+        final RequestLogBuilder logBuilder = derived.logBuilder();\n+        // serializationFormat is always not null, so this is fine.\n+        logBuilder.serializationFormat(partial.serializationFormat());\n+        if (parentLog.isAvailable(RequestLogProperty.NAME)) {\n+            final String name = partial.name();\n+            if (name != null) {\n+                logBuilder.name(name);\n+            }\n+        }\n+\n+        final RequestLogBuilder parentLogBuilder = ctx.logBuilder();\n+        if (parentLogBuilder.isDeferRequestContentSet()) {\n+            logBuilder.deferRequestContent();\n+        }\n+        parentLog.whenAvailable(RequestLogProperty.REQUEST_CONTENT).thenApply(requestLog -> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODg0NDA4NA=="}, "originalCommit": {"oid": "023b4a85e66d3d1ff4a2815a6ece10f48432ba65"}, "originalPosition": 40}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b591e727747233cd62c1bd19d3b353700184ac41", "author": {"user": {"login": "minwoox", "name": "minux"}}, "url": "https://github.com/line/armeria/commit/b591e727747233cd62c1bd19d3b353700184ac41", "committedDate": "2020-03-10T05:45:41Z", "message": "Propagate response content"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "371a75b8cf6c6ed0197823a2e2ff917d081a4f80", "author": {"user": {"login": "minwoox", "name": "minux"}}, "url": "https://github.com/line/armeria/commit/371a75b8cf6c6ed0197823a2e2ff917d081a4f80", "committedDate": "2020-03-10T06:01:23Z", "message": "Address the comment by @trustin"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "671f91322550bfb61ad8a7ca4d2c9650598e4e37", "author": {"user": {"login": "minwoox", "name": "minux"}}, "url": "https://github.com/line/armeria/commit/671f91322550bfb61ad8a7ca4d2c9650598e4e37", "committedDate": "2020-03-10T11:53:39Z", "message": "Merge branch 'master' into fix_request_log"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcyMDM5NDUz", "url": "https://github.com/line/armeria/pull/2560#pullrequestreview-372039453", "createdAt": "2020-03-10T15:04:28Z", "commit": {"oid": "671f91322550bfb61ad8a7ca4d2c9650598e4e37"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQxNTowNDoyOFrOF0TEuA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQxNTowNDoyOFrOF0TEuA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDM4Mjc3Ng==", "bodyText": "I wonder that could we move the code of log propopagation to DefaultRequestLog.addChild(RequestLogAccess)?", "url": "https://github.com/line/armeria/pull/2560#discussion_r390382776", "createdAt": "2020-03-10T15:04:28Z", "author": {"login": "ikhoon"}, "path": "core/src/main/java/com/linecorp/armeria/client/retry/AbstractRetryingClient.java", "diffHunk": "@@ -270,11 +274,57 @@ protected static ClientRequestContext newDerivedContext(ClientRequestContext ctx\n                                                             boolean initialAttempt) {\n         final RequestId id = ctx.options().requestIdGenerator().get();\n         final EndpointGroup endpointGroup = ctx.endpointGroup();\n+        final ClientRequestContext derived;\n         if (endpointGroup != null && !initialAttempt) {\n-            return ctx.newDerivedContext(id, req, rpcReq, endpointGroup.select(ctx));\n+            derived = ctx.newDerivedContext(id, req, rpcReq, endpointGroup.select(ctx));\n         } else {\n-            return ctx.newDerivedContext(id, req, rpcReq);\n+            derived = ctx.newDerivedContext(id, req, rpcReq);\n         }\n+\n+        final RequestLogAccess parentLog = ctx.log();\n+        final RequestLog partial = parentLog.partial();\n+        final RequestLogBuilder logBuilder = derived.logBuilder();\n+        // serializationFormat is always not null, so this is fine.\n+        logBuilder.serializationFormat(partial.serializationFormat());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "671f91322550bfb61ad8a7ca4d2c9650598e4e37"}, "originalPosition": 28}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcyNDQwMzEy", "url": "https://github.com/line/armeria/pull/2560#pullrequestreview-372440312", "createdAt": "2020-03-11T02:30:16Z", "commit": {"oid": "671f91322550bfb61ad8a7ca4d2c9650598e4e37"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQwMjozMDoxNlrOF0nUsA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQwMjozMDo0OVrOF0nVLw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDcxNDU0NA==", "bodyText": "nit:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        await().untilAsserted(() -> assertThat(logResult.size()).isEqualTo(successLogIndex));\n          \n          \n            \n                        await().untilAsserted(() -> assertThat(logResult).hasSize(successLogIndex));", "url": "https://github.com/line/armeria/pull/2560#discussion_r390714544", "createdAt": "2020-03-11T02:30:16Z", "author": {"login": "ikhoon"}, "path": "core/src/test/java/com/linecorp/armeria/client/retry/RetryingClientWithLoggingTest.java", "diffHunk": "@@ -114,11 +118,38 @@ void retryingThenLogging() {\n                                           .decorator(loggingDecorator())\n                                           .decorator(RetryingClient.builder(retryStrategy)\n                                                                    .newDecorator())\n+                                          .decorator((delegate, ctx, req) -> {\n+                                              final RequestLogBuilder logBuilder = ctx.logBuilder();\n+                                              logBuilder.name(\"foo\");\n+                                              logBuilder.requestContent(\"bar\", null);\n+                                              logBuilder.deferRequestContentPreview();\n+                                              logBuilder.deferResponseContent();\n+                                              return delegate.execute(ctx, req);\n+                                          })\n                                           .build();\n-        assertThat(client.get(\"/hello\").aggregate().join().contentUtf8()).isEqualTo(\"hello\");\n+        try (ClientRequestContextCaptor captor = Clients.newContextCaptor()) {\n+            assertThat(client.get(\"/hello\").aggregate().join().contentUtf8()).isEqualTo(\"hello\");\n+            final RequestLogBuilder logBuilder = captor.get().logBuilder();\n+            logBuilder.requestContentPreview(\"baz\");\n+\n+            await().untilAsserted(() -> assertThat(logResult.size()).isEqualTo(successLogIndex));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "671f91322550bfb61ad8a7ca4d2c9650598e4e37"}, "originalPosition": 64}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDcxNDY3MQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        assertThat(logResult.size()).isEqualTo(successLogIndex);\n          \n          \n            \n                        assertThat(logResult).hasSize(successLogIndex);", "url": "https://github.com/line/armeria/pull/2560#discussion_r390714671", "createdAt": "2020-03-11T02:30:49Z", "author": {"login": "ikhoon"}, "path": "core/src/test/java/com/linecorp/armeria/client/retry/RetryingClientWithLoggingTest.java", "diffHunk": "@@ -114,11 +118,38 @@ void retryingThenLogging() {\n                                           .decorator(loggingDecorator())\n                                           .decorator(RetryingClient.builder(retryStrategy)\n                                                                    .newDecorator())\n+                                          .decorator((delegate, ctx, req) -> {\n+                                              final RequestLogBuilder logBuilder = ctx.logBuilder();\n+                                              logBuilder.name(\"foo\");\n+                                              logBuilder.requestContent(\"bar\", null);\n+                                              logBuilder.deferRequestContentPreview();\n+                                              logBuilder.deferResponseContent();\n+                                              return delegate.execute(ctx, req);\n+                                          })\n                                           .build();\n-        assertThat(client.get(\"/hello\").aggregate().join().contentUtf8()).isEqualTo(\"hello\");\n+        try (ClientRequestContextCaptor captor = Clients.newContextCaptor()) {\n+            assertThat(client.get(\"/hello\").aggregate().join().contentUtf8()).isEqualTo(\"hello\");\n+            final RequestLogBuilder logBuilder = captor.get().logBuilder();\n+            logBuilder.requestContentPreview(\"baz\");\n+\n+            await().untilAsserted(() -> assertThat(logResult.size()).isEqualTo(successLogIndex));\n+            TimeUnit.SECONDS.sleep(1);\n+            // The last log is not complete because the parent log doesn't set the response content yet.\n+            assertThat(logResult.size()).isEqualTo(successLogIndex);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "671f91322550bfb61ad8a7ca4d2c9650598e4e37"}, "originalPosition": 67}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8de3b9ec8bb5422f3744f0fa8ae9de22c5061062", "author": {"user": {"login": "minwoox", "name": "minux"}}, "url": "https://github.com/line/armeria/commit/8de3b9ec8bb5422f3744f0fa8ae9de22c5061062", "committedDate": "2020-03-11T03:46:35Z", "message": "Address the comment by @ikhoon"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzczNDg5Mzg2", "url": "https://github.com/line/armeria/pull/2560#pullrequestreview-373489386", "createdAt": "2020-03-12T11:52:43Z", "commit": {"oid": "8de3b9ec8bb5422f3744f0fa8ae9de22c5061062"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 660, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}