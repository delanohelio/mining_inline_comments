{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM3ODY4MzAw", "number": 3219, "title": "Implement more methods in RequestContextWrapper.", "bodyText": "Lately I've been working a lot on safety of context propagation due to some production issues. I'm thinking of porting https://github.com/open-telemetry/opentelemetry-java/blob/master/api/context/src/main/java/io/opentelemetry/context/StrictContextStorage.java to Armeria. First thing I found was that RequestContextWrapper seems to have drifted making it harder to extend that class.", "createdAt": "2020-12-12T07:21:16Z", "url": "https://github.com/line/armeria/pull/3219", "merged": true, "mergeCommit": {"oid": "a76525c04a57694856b3115371122e661448a59c"}, "closed": true, "closedAt": "2020-12-15T06:38:37Z", "author": {"login": "anuraaga"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdlXPKugH2gAyNTM3ODY4MzAwOjMwNTBiODBmMzFkOGU4ZmQ2ZTE2OGVlM2ZmNzFmNDFjNDQ1ODU5MTc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdmPSatgFqTU1MjAxNjE1OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "3050b80f31d8e8fd6e168ee3ff71f41c44585917", "author": {"user": {"login": "anuraaga", "name": "Anuraag Agrawal"}}, "url": "https://github.com/line/armeria/commit/3050b80f31d8e8fd6e168ee3ff71f41c44585917", "committedDate": "2020-12-12T07:16:49Z", "message": "Implement more methods in RequestContextWrapper."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUxMDIzNDM2", "url": "https://github.com/line/armeria/pull/3219#pullrequestreview-551023436", "createdAt": "2020-12-14T03:37:08Z", "commit": {"oid": "3050b80f31d8e8fd6e168ee3ff71f41c44585917"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQwMzozNzowOFrOIE-iXA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQwMzozNzowOFrOIE-iXA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjA4OTgyMA==", "bodyText": "Would you pull up isCancelled() and isTimedOut() too?", "url": "https://github.com/line/armeria/pull/3219#discussion_r542089820", "createdAt": "2020-12-14T03:37:08Z", "author": {"login": "ikhoon"}, "path": "core/src/main/java/com/linecorp/armeria/common/RequestContextWrapper.java", "diffHunk": "@@ -183,6 +183,27 @@ public MeterRegistry meterRegistry() {\n         return delegate().meterRegistry();\n     }\n \n+    @Override\n+    public void cancel(Throwable cause) {\n+        delegate().cancel(cause);\n+    }\n+\n+    @Override\n+    public void cancel() {\n+        delegate().cancel();\n+    }\n+\n+    @Override\n+    public void timeoutNow() {\n+        delegate().timeoutNow();\n+    }\n+\n+    @Override\n+    @Nullable\n+    public Throwable cancellationCause() {\n+        return delegate().cancellationCause();\n+    }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3050b80f31d8e8fd6e168ee3ff71f41c44585917"}, "originalPosition": 24}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUxMDM4MTg5", "url": "https://github.com/line/armeria/pull/3219#pullrequestreview-551038189", "createdAt": "2020-12-14T04:37:04Z", "commit": {"oid": "3050b80f31d8e8fd6e168ee3ff71f41c44585917"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQwNDozNzowNVrOIE_i1w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQwNDozNzowNVrOIE_i1w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjEwNjMyNw==", "bodyText": "Is the behavior of usingRecursiveComparison() documented somewhere? How does it select the methods to call and compare the return values?", "url": "https://github.com/line/armeria/pull/3219#discussion_r542106327", "createdAt": "2020-12-14T04:37:05Z", "author": {"login": "trustin"}, "path": "core/src/test/java/com/linecorp/armeria/common/RequestContextWrapperTest.java", "diffHunk": "@@ -0,0 +1,50 @@\n+/*\n+ * Copyright 2020 LINE Corporation\n+ *\n+ * LINE Corporation licenses this file to you under the Apache License,\n+ * version 2.0 (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *   https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package com.linecorp.armeria.common;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+\n+import org.junit.jupiter.api.Test;\n+\n+import com.google.errorprone.annotations.MustBeClosed;\n+\n+import com.linecorp.armeria.common.util.SafeCloseable;\n+import com.linecorp.armeria.server.ServiceRequestContext;\n+\n+class RequestContextWrapperTest {\n+\n+    private static final class WrappedRequestContext extends RequestContextWrapper<RequestContext> {\n+        private WrappedRequestContext(RequestContext delegate) {\n+            super(delegate);\n+        }\n+\n+        // Most wrappers will not want to push the delegate so we don't provide a default implementation of it.\n+        @Override\n+        @MustBeClosed\n+        public SafeCloseable push() {\n+            return delegate().push();\n+        }\n+    }\n+\n+    @Test\n+    void wrapMatchesNormal() {\n+        final RequestContext ctx = ServiceRequestContext.builder(HttpRequest.of(HttpMethod.GET, \"/\")).build();\n+        // Use reflective comparison to handle added fields automatically.\n+        assertThat(new WrappedRequestContext(ctx)).usingRecursiveComparison().ignoringFields(\"delegate\")\n+                                                  .isEqualTo(ctx);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3050b80f31d8e8fd6e168ee3ff71f41c44585917"}, "originalPosition": 48}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "abe19477d72eeb3c63310e8a94ca1a019688666a", "author": {"user": {"login": "anuraaga", "name": "Anuraag Agrawal"}}, "url": "https://github.com/line/armeria/commit/abe19477d72eeb3c63310e8a94ca1a019688666a", "committedDate": "2020-12-14T04:43:32Z", "message": "bare names"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUxMDQwMDQ2", "url": "https://github.com/line/armeria/pull/3219#pullrequestreview-551040046", "createdAt": "2020-12-14T04:44:38Z", "commit": {"oid": "abe19477d72eeb3c63310e8a94ca1a019688666a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQwNDo0NDozOVrOIE_q4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQwNDo0NDozOVrOIE_q4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjEwODM4NA==", "bodyText": "What's this file? It gets updated when I run the build", "url": "https://github.com/line/armeria/pull/3219#discussion_r542108384", "createdAt": "2020-12-14T04:44:39Z", "author": {"login": "anuraaga"}, "path": "core/src/main/resources/com/linecorp/armeria/public_suffixes.txt", "diffHunk": "@@ -986,7 +986,6 @@ boxfuse.io\n bozen-sudtirol.it", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "abe19477d72eeb3c63310e8a94ca1a019688666a"}, "originalPosition": 1}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUxMDQzMjA0", "url": "https://github.com/line/armeria/pull/3219#pullrequestreview-551043204", "createdAt": "2020-12-14T04:56:55Z", "commit": {"oid": "abe19477d72eeb3c63310e8a94ca1a019688666a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQwNDo1Njo1NVrOIE_4BQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQwNDo1Njo1NVrOIE_4BQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjExMTc0OQ==", "bodyText": "How about reverting back to the old value once this test is done? Otherwise we'll have to do this in the beginning of all tests for build reproducibility?", "url": "https://github.com/line/armeria/pull/3219#discussion_r542111749", "createdAt": "2020-12-14T04:56:55Z", "author": {"login": "trustin"}, "path": "core/src/test/java/com/linecorp/armeria/common/RequestContextWrapperTest.java", "diffHunk": "@@ -0,0 +1,56 @@\n+/*\n+ * Copyright 2020 LINE Corporation\n+ *\n+ * LINE Corporation licenses this file to you under the Apache License,\n+ * version 2.0 (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *   https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package com.linecorp.armeria.common;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+\n+import org.assertj.core.api.Assertions;\n+import org.junit.jupiter.api.Test;\n+\n+import com.google.errorprone.annotations.MustBeClosed;\n+\n+import com.linecorp.armeria.common.util.SafeCloseable;\n+import com.linecorp.armeria.server.ServiceRequestContext;\n+\n+class RequestContextWrapperTest {\n+\n+    static {\n+        // Armeria properties use bare names.\n+        Assertions.setExtractBareNamePropertyMethods(true);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "abe19477d72eeb3c63310e8a94ca1a019688666a"}, "originalPosition": 33}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUxMDQ1MjQx", "url": "https://github.com/line/armeria/pull/3219#pullrequestreview-551045241", "createdAt": "2020-12-14T05:04:38Z", "commit": {"oid": "abe19477d72eeb3c63310e8a94ca1a019688666a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUxMTMxNTEw", "url": "https://github.com/line/armeria/pull/3219#pullrequestreview-551131510", "createdAt": "2020-12-14T08:21:59Z", "commit": {"oid": "abe19477d72eeb3c63310e8a94ca1a019688666a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUyMDE2MTU5", "url": "https://github.com/line/armeria/pull/3219#pullrequestreview-552016159", "createdAt": "2020-12-15T00:35:03Z", "commit": {"oid": "abe19477d72eeb3c63310e8a94ca1a019688666a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4534, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}