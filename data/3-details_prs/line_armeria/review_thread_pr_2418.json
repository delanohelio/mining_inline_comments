{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY2ODU1MDQ4", "number": 2418, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQxNDoyOTo1NlrODagNHw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQwNToyMzo1NlrODbdKDw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5MTE3MjE1OnYy", "diffSide": "RIGHT", "path": "core/src/test/java/com/linecorp/armeria/common/FlagsTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQxNDoyOTo1NlrOFhfZjQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQxNDo1MTowOVrOFhgEPA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDY2MTc3Mw==", "bodyText": "You don't need to address this review. Just I guess @SetSystemProperty in JUnit Pioneer seems cleaner to set a system property.\n@SetSystemProperty(key = \"some property\", value = \"new value\")\nhttps://junit-pioneer.org/docs/system-properties/", "url": "https://github.com/line/armeria/pull/2418#discussion_r370661773", "createdAt": "2020-01-24T14:29:56Z", "author": {"login": "ikhoon"}, "path": "core/src/test/java/com/linecorp/armeria/common/FlagsTest.java", "diffHunk": "@@ -48,12 +48,21 @@ public void epollAvailableOnLinux() {\n      * on Linux, Windows and OS X.\n      */\n     @Test\n-    public void openSslAvailable() {\n+    void openSslAvailable() {\n         assumeTrue(osName.startsWith(\"linux\") || osName.startsWith(\"windows\") ||\n                    osName.startsWith(\"macosx\") || osName.startsWith(\"osx\"));\n         assumeFalse(\"false\".equals(System.getProperty(\"com.linecorp.armeria.useOpenSsl\")));\n \n         assertThat(Flags.useOpenSsl()).isTrue();\n         assertThat(OpenSsl.isAvailable()).isTrue();\n     }\n+\n+    @Test\n+    void dumpOpenSslInfoDoNotThrowStackOverFlowError() {\n+        System.setProperty(\"com.linecorp.armeria.dumpOpenSslInfo\", \"true\");\n+        System.setProperty(\"com.linecorp.armeria.useOpenSsl\", \"true\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4533da47f0fd9ad3e0d2706273a69286aa849e1e"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDY3MjcwMA==", "bodyText": "That's a nice suggestion. Let me used that. Thanks!", "url": "https://github.com/line/armeria/pull/2418#discussion_r370672700", "createdAt": "2020-01-24T14:51:09Z", "author": {"login": "minwoox"}, "path": "core/src/test/java/com/linecorp/armeria/common/FlagsTest.java", "diffHunk": "@@ -48,12 +48,21 @@ public void epollAvailableOnLinux() {\n      * on Linux, Windows and OS X.\n      */\n     @Test\n-    public void openSslAvailable() {\n+    void openSslAvailable() {\n         assumeTrue(osName.startsWith(\"linux\") || osName.startsWith(\"windows\") ||\n                    osName.startsWith(\"macosx\") || osName.startsWith(\"osx\"));\n         assumeFalse(\"false\".equals(System.getProperty(\"com.linecorp.armeria.useOpenSsl\")));\n \n         assertThat(Flags.useOpenSsl()).isTrue();\n         assertThat(OpenSsl.isAvailable()).isTrue();\n     }\n+\n+    @Test\n+    void dumpOpenSslInfoDoNotThrowStackOverFlowError() {\n+        System.setProperty(\"com.linecorp.armeria.dumpOpenSslInfo\", \"true\");\n+        System.setProperty(\"com.linecorp.armeria.useOpenSsl\", \"true\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDY2MTc3Mw=="}, "originalCommit": {"oid": "4533da47f0fd9ad3e0d2706273a69286aa849e1e"}, "originalPosition": 48}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5NzQ3MjI3OnYy", "diffSide": "RIGHT", "path": "core/src/test/java/com/linecorp/armeria/common/FlagsTest.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQwNToxNzoyNFrOFiZgNQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQwNTozNDo1OVrOFiZsNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTYxMzc0OQ==", "bodyText": "nit: The current workaround is not bad. But how about making useOpenSsl and dumpOpenSslInfo package-private?\nI think We can test Flags.useOpenSsl() after setting useOpenSsl and dumpOpenSslInfo to null.", "url": "https://github.com/line/armeria/pull/2418#discussion_r371613749", "createdAt": "2020-01-28T05:17:24Z", "author": {"login": "ikhoon"}, "path": "core/src/test/java/com/linecorp/armeria/common/FlagsTest.java", "diffHunk": "@@ -48,12 +61,69 @@ public void epollAvailableOnLinux() {\n      * on Linux, Windows and OS X.\n      */\n     @Test\n-    public void openSslAvailable() {\n+    void openSslAvailable() {\n         assumeTrue(osName.startsWith(\"linux\") || osName.startsWith(\"windows\") ||\n                    osName.startsWith(\"macosx\") || osName.startsWith(\"osx\"));\n         assumeFalse(\"false\".equals(System.getProperty(\"com.linecorp.armeria.useOpenSsl\")));\n \n         assertThat(Flags.useOpenSsl()).isTrue();\n         assertThat(OpenSsl.isAvailable()).isTrue();\n     }\n+\n+    @Test\n+    void dumpOpenSslInfoDoNotThrowStackOverFlowError() throws Throwable {\n+        assumeTrue(OpenSsl.isAvailable());\n+        System.setProperty(\"com.linecorp.armeria.dumpOpenSslInfo\", \"true\");\n+\n+        // There's a chance that Flags.useOpenSsl() is already called by other test cases, which means that\n+        // we cannot set dumpOpenSslInfo. So we use our own class loader to load the Flags class.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4da5da93ce7a7f1add0eb9cbd87fae303f81e875"}, "originalPosition": 64}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTYxNTI2MQ==", "bodyText": "I think We can test Flags.useOpenSsl() after setting useOpenSsl and dumpOpenSslInfo to null.\n\nYes, we can do that way as well. But I'm not sure if it's a good way. \ud83e\udd14\n\nThe current workaround is not bad.\n\nSo you think setting null to the field and calling the method again is better?", "url": "https://github.com/line/armeria/pull/2418#discussion_r371615261", "createdAt": "2020-01-28T05:26:23Z", "author": {"login": "minwoox"}, "path": "core/src/test/java/com/linecorp/armeria/common/FlagsTest.java", "diffHunk": "@@ -48,12 +61,69 @@ public void epollAvailableOnLinux() {\n      * on Linux, Windows and OS X.\n      */\n     @Test\n-    public void openSslAvailable() {\n+    void openSslAvailable() {\n         assumeTrue(osName.startsWith(\"linux\") || osName.startsWith(\"windows\") ||\n                    osName.startsWith(\"macosx\") || osName.startsWith(\"osx\"));\n         assumeFalse(\"false\".equals(System.getProperty(\"com.linecorp.armeria.useOpenSsl\")));\n \n         assertThat(Flags.useOpenSsl()).isTrue();\n         assertThat(OpenSsl.isAvailable()).isTrue();\n     }\n+\n+    @Test\n+    void dumpOpenSslInfoDoNotThrowStackOverFlowError() throws Throwable {\n+        assumeTrue(OpenSsl.isAvailable());\n+        System.setProperty(\"com.linecorp.armeria.dumpOpenSslInfo\", \"true\");\n+\n+        // There's a chance that Flags.useOpenSsl() is already called by other test cases, which means that\n+        // we cannot set dumpOpenSslInfo. So we use our own class loader to load the Flags class.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTYxMzc0OQ=="}, "originalCommit": {"oid": "4da5da93ce7a7f1add0eb9cbd87fae303f81e875"}, "originalPosition": 64}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTYxNjgyMQ==", "bodyText": "I guess the two options have both pros and cons. I'm fine with the class loader version. \ud83d\ude00", "url": "https://github.com/line/armeria/pull/2418#discussion_r371616821", "createdAt": "2020-01-28T05:34:59Z", "author": {"login": "ikhoon"}, "path": "core/src/test/java/com/linecorp/armeria/common/FlagsTest.java", "diffHunk": "@@ -48,12 +61,69 @@ public void epollAvailableOnLinux() {\n      * on Linux, Windows and OS X.\n      */\n     @Test\n-    public void openSslAvailable() {\n+    void openSslAvailable() {\n         assumeTrue(osName.startsWith(\"linux\") || osName.startsWith(\"windows\") ||\n                    osName.startsWith(\"macosx\") || osName.startsWith(\"osx\"));\n         assumeFalse(\"false\".equals(System.getProperty(\"com.linecorp.armeria.useOpenSsl\")));\n \n         assertThat(Flags.useOpenSsl()).isTrue();\n         assertThat(OpenSsl.isAvailable()).isTrue();\n     }\n+\n+    @Test\n+    void dumpOpenSslInfoDoNotThrowStackOverFlowError() throws Throwable {\n+        assumeTrue(OpenSsl.isAvailable());\n+        System.setProperty(\"com.linecorp.armeria.dumpOpenSslInfo\", \"true\");\n+\n+        // There's a chance that Flags.useOpenSsl() is already called by other test cases, which means that\n+        // we cannot set dumpOpenSslInfo. So we use our own class loader to load the Flags class.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTYxMzc0OQ=="}, "originalCommit": {"oid": "4da5da93ce7a7f1add0eb9cbd87fae303f81e875"}, "originalPosition": 64}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwMTE1ODU1OnYy", "diffSide": "RIGHT", "path": "core/src/test/java/com/linecorp/armeria/common/FlagsTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQwNToyMzo1NlrOFi866w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQwODo1MzozN1rOFjAq8A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjE5NDAyNw==", "bodyText": "AssertJ also has assumeThat.", "url": "https://github.com/line/armeria/pull/2418#discussion_r372194027", "createdAt": "2020-01-29T05:23:56Z", "author": {"login": "trustin"}, "path": "core/src/test/java/com/linecorp/armeria/common/FlagsTest.java", "diffHunk": "@@ -16,25 +16,38 @@\n package com.linecorp.armeria.common;\n \n import static org.assertj.core.api.Assertions.assertThat;\n-import static org.junit.Assume.assumeFalse;\n-import static org.junit.Assume.assumeTrue;\n+import static org.junit.jupiter.api.Assumptions.assumeFalse;\n+import static org.junit.jupiter.api.Assumptions.assumeTrue;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4da5da93ce7a7f1add0eb9cbd87fae303f81e875"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjI1NTQ3Mg==", "bodyText": "Fixed. \ud83d\ude09", "url": "https://github.com/line/armeria/pull/2418#discussion_r372255472", "createdAt": "2020-01-29T08:53:37Z", "author": {"login": "minwoox"}, "path": "core/src/test/java/com/linecorp/armeria/common/FlagsTest.java", "diffHunk": "@@ -16,25 +16,38 @@\n package com.linecorp.armeria.common;\n \n import static org.assertj.core.api.Assertions.assertThat;\n-import static org.junit.Assume.assumeFalse;\n-import static org.junit.Assume.assumeTrue;\n+import static org.junit.jupiter.api.Assumptions.assumeFalse;\n+import static org.junit.jupiter.api.Assumptions.assumeTrue;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjE5NDAyNw=="}, "originalCommit": {"oid": "4da5da93ce7a7f1add0eb9cbd87fae303f81e875"}, "originalPosition": 7}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2933, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}