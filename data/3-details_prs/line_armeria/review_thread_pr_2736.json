{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIxMjE2OTc3", "number": 2736, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQwODoyMTowN1rOD-g_FQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQwNDoxMDoxMlrOD-0nfA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2ODc4NzQxOnYy", "diffSide": "LEFT", "path": "brave/src/main/java/com/linecorp/armeria/server/brave/ServiceRequestContextAdapter.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQwODoyMTowN1rOGYqZDg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQwODoyMTowN1rOGYqZDg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODUxMzU1MA==", "bodyText": "Unrelated with this PR, but this removes a deprecation warning during compilation. The comment block seems not relevant anymore.", "url": "https://github.com/line/armeria/pull/2736#discussion_r428513550", "createdAt": "2020-05-21T08:21:07Z", "author": {"login": "trustin"}, "path": "brave/src/main/java/com/linecorp/armeria/server/brave/ServiceRequestContextAdapter.java", "diffHunk": "@@ -70,13 +68,6 @@ public String method() {\n             return ctx.method().name();\n         }\n \n-        /**\n-         * Original implementation is calling {@link HttpServerAdapter#url(Object)} which needs {@link\n-         * RequestLog#scheme()}, but because {@link RequestLog#scheme()} is not always available, we need to\n-         * use {@link RequestContext#path()} directly.\n-         *\n-         * @see brave.http.HttpServerRequest#path()\n-         */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a86524495fc851c3ac58c9fa1badbf2fae057fa2"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2ODc4NzkxOnYy", "diffSide": "LEFT", "path": "brave/src/main/java/com/linecorp/armeria/server/brave/ServiceRequestContextAdapter.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQwODoyMToxOVrOGYqZaA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQwODoyMToxOVrOGYqZaA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODUxMzY0MA==", "bodyText": "Unrelated with this PR - just fixed indentation", "url": "https://github.com/line/armeria/pull/2736#discussion_r428513640", "createdAt": "2020-05-21T08:21:19Z", "author": {"login": "trustin"}, "path": "brave/src/main/java/com/linecorp/armeria/server/brave/ServiceRequestContextAdapter.java", "diffHunk": "@@ -56,8 +55,7 @@\n          */\n         @Override\n         public boolean parseClientIpAndPort(Span span) {\n-            return parseClientIpFromXForwardedFor(span) ||\n-                SpanTags.updateRemoteEndpoint(span, ctx);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a86524495fc851c3ac58c9fa1badbf2fae057fa2"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2ODc4ODM2OnYy", "diffSide": "LEFT", "path": "brave/src/main/java/com/linecorp/armeria/server/brave/ServiceRequestContextAdapter.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQwODoyMTozMlrOGYqZvQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQwODoyMTozMlrOGYqZvQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODUxMzcyNQ==", "bodyText": "Unrelated with this PR - just fixed indentation", "url": "https://github.com/line/armeria/pull/2736#discussion_r428513725", "createdAt": "2020-05-21T08:21:32Z", "author": {"login": "trustin"}, "path": "brave/src/main/java/com/linecorp/armeria/server/brave/ServiceRequestContextAdapter.java", "diffHunk": "@@ -118,8 +109,8 @@ public long startTimestamp() {\n         }\n     }\n \n-    static brave.http.HttpServerResponse asHttpServerResponse(RequestLog log,\n-        brave.http.HttpServerRequest request) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a86524495fc851c3ac58c9fa1badbf2fae057fa2"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2OTA1NTc1OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/com/linecorp/armeria/client/HttpClientDelegate.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQwOTo1NToyNVrOGYtEIw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQxMTozNDo1MVrOGYvmbA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODU1NzM0Nw==", "bodyText": "Is the write to stderr here on purpose or a leftover after a debugging session?", "url": "https://github.com/line/armeria/pull/2736#discussion_r428557347", "createdAt": "2020-05-21T09:55:25Z", "author": {"login": "andrey-tpt"}, "path": "core/src/main/java/com/linecorp/armeria/client/HttpClientDelegate.java", "diffHunk": "@@ -62,12 +58,22 @@\n     public HttpResponse execute(ClientRequestContext ctx, HttpRequest req) throws Exception {\n         final Endpoint endpoint = ctx.endpoint();\n         if (endpoint == null) {\n-            // Note that this response will be ignored because:\n-            // - `ClientRequestContext.endpoint()` returns `null` only when the context initialization failed.\n-            // - `ClientUtil.initContextAndExecuteWithFallback()` will use the fallback response rather than\n-            //   what we return here.\n-            req.abort(CONTEXT_INITIALIZATION_FAILED);\n-            return HttpResponse.ofFailure(CONTEXT_INITIALIZATION_FAILED);\n+            // It is possible that we reach here even when `EndpointGroup` is not empty,\n+            // because `endpoint` can be `null` for the following two cases:\n+            // - `EndpointGroup.select()` raised an `EmptyEndpointGroupException`.\n+            // - Other exception was raised while context initialization.\n+            //\n+            // Because all the clean-up is done by `DefaultClientRequestContext.failEarly()`\n+            // when context initialization fails with an exception other than `EmptyEndpointGroupException`,\n+            // we can assume that the exception and response created here will be exposed only\n+            // when context initialization failed due to an `EmptyEndpointGroupException`.\n+            //\n+            // See `DefaultClientRequestContext.init()` for more information.\n+            System.err.println(\"!!!!!!\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a86524495fc851c3ac58c9fa1badbf2fae057fa2"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODU5ODg5Mg==", "bodyText": "!!!!!!", "url": "https://github.com/line/armeria/pull/2736#discussion_r428598892", "createdAt": "2020-05-21T11:34:51Z", "author": {"login": "trustin"}, "path": "core/src/main/java/com/linecorp/armeria/client/HttpClientDelegate.java", "diffHunk": "@@ -62,12 +58,22 @@\n     public HttpResponse execute(ClientRequestContext ctx, HttpRequest req) throws Exception {\n         final Endpoint endpoint = ctx.endpoint();\n         if (endpoint == null) {\n-            // Note that this response will be ignored because:\n-            // - `ClientRequestContext.endpoint()` returns `null` only when the context initialization failed.\n-            // - `ClientUtil.initContextAndExecuteWithFallback()` will use the fallback response rather than\n-            //   what we return here.\n-            req.abort(CONTEXT_INITIALIZATION_FAILED);\n-            return HttpResponse.ofFailure(CONTEXT_INITIALIZATION_FAILED);\n+            // It is possible that we reach here even when `EndpointGroup` is not empty,\n+            // because `endpoint` can be `null` for the following two cases:\n+            // - `EndpointGroup.select()` raised an `EmptyEndpointGroupException`.\n+            // - Other exception was raised while context initialization.\n+            //\n+            // Because all the clean-up is done by `DefaultClientRequestContext.failEarly()`\n+            // when context initialization fails with an exception other than `EmptyEndpointGroupException`,\n+            // we can assume that the exception and response created here will be exposed only\n+            // when context initialization failed due to an `EmptyEndpointGroupException`.\n+            //\n+            // See `DefaultClientRequestContext.init()` for more information.\n+            System.err.println(\"!!!!!!\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODU1NzM0Nw=="}, "originalCommit": {"oid": "a86524495fc851c3ac58c9fa1badbf2fae057fa2"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3MjAwMTc3OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/com/linecorp/armeria/client/ClientFactory.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQwNDowODo1MVrOGZKEEg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQwNzowODozN1rOGZM54w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTAzMjQ2Ng==", "bodyText": "Maybe, is this a breaking change? Need a breaking-changes label?", "url": "https://github.com/line/armeria/pull/2736#discussion_r429032466", "createdAt": "2020-05-22T04:08:51Z", "author": {"login": "ikhoon"}, "path": "core/src/main/java/com/linecorp/armeria/client/ClientFactory.java", "diffHunk": "@@ -161,8 +162,15 @@ static void disableShutdownHook() {\n      * Acquires an {@link EventLoop} that is expected to handle a connection to the specified {@link Endpoint}.\n      * The caller must release the returned {@link EventLoop} back by calling {@link ReleasableHolder#release()}\n      * so that {@link ClientFactory} utilizes {@link EventLoop}s efficiently.\n+     *\n+     * @param sessionProtocol the {@link SessionProtocol} of the connection\n+     * @param endpointGroup the {@link EndpointGroup} where {@code endpoint} belongs to.\n+     * @param endpoint the {@link Endpoint} where a request is being sent.\n+     *                 {@code null} if the {@link Endpoint} is not known yet.\n      */\n-    ReleasableHolder<EventLoop> acquireEventLoop(Endpoint endpoint, SessionProtocol sessionProtocol);\n+    ReleasableHolder<EventLoop> acquireEventLoop(SessionProtocol sessionProtocol,\n+                                                 EndpointGroup endpointGroup,\n+                                                 @Nullable Endpoint endpoint);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e3ca645301cd1b3d0765e26ca02008d4097cce1e"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTA3OTAxMQ==", "bodyText": "Good idea. Added the label.", "url": "https://github.com/line/armeria/pull/2736#discussion_r429079011", "createdAt": "2020-05-22T07:08:37Z", "author": {"login": "trustin"}, "path": "core/src/main/java/com/linecorp/armeria/client/ClientFactory.java", "diffHunk": "@@ -161,8 +162,15 @@ static void disableShutdownHook() {\n      * Acquires an {@link EventLoop} that is expected to handle a connection to the specified {@link Endpoint}.\n      * The caller must release the returned {@link EventLoop} back by calling {@link ReleasableHolder#release()}\n      * so that {@link ClientFactory} utilizes {@link EventLoop}s efficiently.\n+     *\n+     * @param sessionProtocol the {@link SessionProtocol} of the connection\n+     * @param endpointGroup the {@link EndpointGroup} where {@code endpoint} belongs to.\n+     * @param endpoint the {@link Endpoint} where a request is being sent.\n+     *                 {@code null} if the {@link Endpoint} is not known yet.\n      */\n-    ReleasableHolder<EventLoop> acquireEventLoop(Endpoint endpoint, SessionProtocol sessionProtocol);\n+    ReleasableHolder<EventLoop> acquireEventLoop(SessionProtocol sessionProtocol,\n+                                                 EndpointGroup endpointGroup,\n+                                                 @Nullable Endpoint endpoint);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTAzMjQ2Ng=="}, "originalCommit": {"oid": "e3ca645301cd1b3d0765e26ca02008d4097cce1e"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3MjAwMzgwOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/com/linecorp/armeria/client/ClientRequestContext.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQwNDoxMDoxMlrOGZKFUA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQwNDoxMDoxMlrOGZKFUA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTAzMjc4NA==", "bodyText": "Ditto.", "url": "https://github.com/line/armeria/pull/2736#discussion_r429032784", "createdAt": "2020-05-22T04:10:12Z", "author": {"login": "ikhoon"}, "path": "core/src/main/java/com/linecorp/armeria/client/ClientRequestContext.java", "diffHunk": "@@ -252,7 +250,7 @@ default ClientRequestContext newDerivedContext(RequestId id,\n      * <p>Note that this method does not copy the {@link RequestLog} properties to the derived context.\n      */\n     ClientRequestContext newDerivedContext(RequestId id, @Nullable HttpRequest req, @Nullable RpcRequest rpcReq,\n-                                           Endpoint endpoint);\n+                                           @Nullable Endpoint endpoint);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e3ca645301cd1b3d0765e26ca02008d4097cce1e"}, "originalPosition": 16}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2651, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}