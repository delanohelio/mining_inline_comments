{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQwMDYxNjMy", "number": 2838, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQwMzozOToyMVrOEI_haA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQwMzo0NjoxNFrOEI_kzw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3ODY0ODA4OnYy", "diffSide": "RIGHT", "path": "spring/boot-autoconfigure/src/main/java/com/linecorp/armeria/spring/AbstractServiceRegistrationBean.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQwMzozOToyMlrOGpSr5Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQwMzozOToyMlrOGpSr5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTk1MDk0OQ==", "bodyText": "@deprecated Use {@link ServiceBindingBuilder#decorator(Function)} or\n            {@link AnnotatedServiceBindingBuilder#decorator(Function)}.", "url": "https://github.com/line/armeria/pull/2838#discussion_r445950949", "createdAt": "2020-06-26T03:39:22Z", "author": {"login": "minwoox"}, "path": "spring/boot-autoconfigure/src/main/java/com/linecorp/armeria/spring/AbstractServiceRegistrationBean.java", "diffHunk": "@@ -125,7 +142,10 @@ public final U setDecorators(\n     /**\n      * Sets the decorators of the annotated service object. {@code decorators} are applied to {@code service} in\n      * order.\n+     *\n+     * @deprecated Use {@link ServerBuilder#annotatedService(Object, Function, Object...)}.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "615b9ce2750cfa1da50c4bb7280046f3c4b6753f"}, "originalPosition": 63}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3ODY1MTY1OnYy", "diffSide": "RIGHT", "path": "spring/boot-autoconfigure/src/main/java/com/linecorp/armeria/spring/AnnotatedServiceRegistrationBean.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQwMzo0MjoyNFrOGpSuJg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQwMzo0MjoyNFrOGpSuJg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTk1MTUyNg==", "bodyText": "extra )?", "url": "https://github.com/line/armeria/pull/2838#discussion_r445951526", "createdAt": "2020-06-26T03:42:24Z", "author": {"login": "minwoox"}, "path": "spring/boot-autoconfigure/src/main/java/com/linecorp/armeria/spring/AnnotatedServiceRegistrationBean.java", "diffHunk": "@@ -45,7 +48,35 @@\n  * >             .addExampleHeaders(ExampleHeaders.of(\"my-header\", \"headerVal\"));\n  * > }\n  * }</pre>\n+ *\n+ * @deprecated Use {@link ServerBuilder#annotatedService()} via {@link ArmeriaServerConfigurator} and\n+ *             {@link DocServiceConfigurator}.\n+ *             <pre>{@code\n+ *             > @Bean\n+ *             > public ArmeriaServerConfigurator myService() {\n+ *             >     return server -> {\n+ *             >         server.annotatedService()\n+ *             >               .pathPrefix(\"/my_service\")\n+ *             >               .exceptionHandlers(new MyExceptionHandler())\n+ *             >               .requestConverters(new MyRequestConverter())\n+ *             >               .responseConverters(new MyResponseConverter())\n+ *             >               .decorator(LoggingService.newDecorator())\n+ *             >               .build(new MyAnnoatedService());\n+ *             >     };\n+ *             > }\n+ *\n+ *             > @Bean\n+ *             > public DocServiceConfigurator myServiceDoc() {\n+ *             >     return docService -> {\n+ *             >         docService.exampleRequestForMethod(MyAnnotatedService.class,\n+ *             >                                            \"myMethod\", \"{\\\"foo\\\":\\\"bar\\\"}\")\n+ *             >                   .exampleHttpHeaders(MyAnnotatedService.class,\n+ *             >                                       HttpHeaders.of(\"my-header\", \"headerVal\")));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "615b9ce2750cfa1da50c4bb7280046f3c4b6753f"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3ODY1MTk2OnYy", "diffSide": "RIGHT", "path": "spring/boot-autoconfigure/src/main/java/com/linecorp/armeria/spring/AnnotatedServiceRegistrationBean.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQwMzo0MjozNFrOGpSuVA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQwNToxNjo0N1rOGpT9dA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTk1MTU3Mg==", "bodyText": "extra }?", "url": "https://github.com/line/armeria/pull/2838#discussion_r445951572", "createdAt": "2020-06-26T03:42:34Z", "author": {"login": "minwoox"}, "path": "spring/boot-autoconfigure/src/main/java/com/linecorp/armeria/spring/AnnotatedServiceRegistrationBean.java", "diffHunk": "@@ -45,7 +48,35 @@\n  * >             .addExampleHeaders(ExampleHeaders.of(\"my-header\", \"headerVal\"));\n  * > }\n  * }</pre>\n+ *\n+ * @deprecated Use {@link ServerBuilder#annotatedService()} via {@link ArmeriaServerConfigurator} and\n+ *             {@link DocServiceConfigurator}.\n+ *             <pre>{@code\n+ *             > @Bean\n+ *             > public ArmeriaServerConfigurator myService() {\n+ *             >     return server -> {\n+ *             >         server.annotatedService()\n+ *             >               .pathPrefix(\"/my_service\")\n+ *             >               .exceptionHandlers(new MyExceptionHandler())\n+ *             >               .requestConverters(new MyRequestConverter())\n+ *             >               .responseConverters(new MyResponseConverter())\n+ *             >               .decorator(LoggingService.newDecorator())\n+ *             >               .build(new MyAnnoatedService());\n+ *             >     };\n+ *             > }\n+ *\n+ *             > @Bean\n+ *             > public DocServiceConfigurator myServiceDoc() {\n+ *             >     return docService -> {\n+ *             >         docService.exampleRequestForMethod(MyAnnotatedService.class,\n+ *             >                                            \"myMethod\", \"{\\\"foo\\\":\\\"bar\\\"}\")\n+ *             >                   .exampleHttpHeaders(MyAnnotatedService.class,\n+ *             >                                       HttpHeaders.of(\"my-header\", \"headerVal\")));\n+ *\n+ *             >     };\n+ *             > }}</pre>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "615b9ce2750cfa1da50c4bb7280046f3c4b6753f"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTk3MTUyNA==", "bodyText": "This seems fine. One is for myServiceDoc() { and the other is for {@code. \ud83d\ude09", "url": "https://github.com/line/armeria/pull/2838#discussion_r445971524", "createdAt": "2020-06-26T05:15:29Z", "author": {"login": "ikhoon"}, "path": "spring/boot-autoconfigure/src/main/java/com/linecorp/armeria/spring/AnnotatedServiceRegistrationBean.java", "diffHunk": "@@ -45,7 +48,35 @@\n  * >             .addExampleHeaders(ExampleHeaders.of(\"my-header\", \"headerVal\"));\n  * > }\n  * }</pre>\n+ *\n+ * @deprecated Use {@link ServerBuilder#annotatedService()} via {@link ArmeriaServerConfigurator} and\n+ *             {@link DocServiceConfigurator}.\n+ *             <pre>{@code\n+ *             > @Bean\n+ *             > public ArmeriaServerConfigurator myService() {\n+ *             >     return server -> {\n+ *             >         server.annotatedService()\n+ *             >               .pathPrefix(\"/my_service\")\n+ *             >               .exceptionHandlers(new MyExceptionHandler())\n+ *             >               .requestConverters(new MyRequestConverter())\n+ *             >               .responseConverters(new MyResponseConverter())\n+ *             >               .decorator(LoggingService.newDecorator())\n+ *             >               .build(new MyAnnoatedService());\n+ *             >     };\n+ *             > }\n+ *\n+ *             > @Bean\n+ *             > public DocServiceConfigurator myServiceDoc() {\n+ *             >     return docService -> {\n+ *             >         docService.exampleRequestForMethod(MyAnnotatedService.class,\n+ *             >                                            \"myMethod\", \"{\\\"foo\\\":\\\"bar\\\"}\")\n+ *             >                   .exampleHttpHeaders(MyAnnotatedService.class,\n+ *             >                                       HttpHeaders.of(\"my-header\", \"headerVal\")));\n+ *\n+ *             >     };\n+ *             > }}</pre>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTk1MTU3Mg=="}, "originalCommit": {"oid": "615b9ce2750cfa1da50c4bb7280046f3c4b6753f"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTk3MTgyOA==", "bodyText": "\ud83d\ude05", "url": "https://github.com/line/armeria/pull/2838#discussion_r445971828", "createdAt": "2020-06-26T05:16:47Z", "author": {"login": "minwoox"}, "path": "spring/boot-autoconfigure/src/main/java/com/linecorp/armeria/spring/AnnotatedServiceRegistrationBean.java", "diffHunk": "@@ -45,7 +48,35 @@\n  * >             .addExampleHeaders(ExampleHeaders.of(\"my-header\", \"headerVal\"));\n  * > }\n  * }</pre>\n+ *\n+ * @deprecated Use {@link ServerBuilder#annotatedService()} via {@link ArmeriaServerConfigurator} and\n+ *             {@link DocServiceConfigurator}.\n+ *             <pre>{@code\n+ *             > @Bean\n+ *             > public ArmeriaServerConfigurator myService() {\n+ *             >     return server -> {\n+ *             >         server.annotatedService()\n+ *             >               .pathPrefix(\"/my_service\")\n+ *             >               .exceptionHandlers(new MyExceptionHandler())\n+ *             >               .requestConverters(new MyRequestConverter())\n+ *             >               .responseConverters(new MyResponseConverter())\n+ *             >               .decorator(LoggingService.newDecorator())\n+ *             >               .build(new MyAnnoatedService());\n+ *             >     };\n+ *             > }\n+ *\n+ *             > @Bean\n+ *             > public DocServiceConfigurator myServiceDoc() {\n+ *             >     return docService -> {\n+ *             >         docService.exampleRequestForMethod(MyAnnotatedService.class,\n+ *             >                                            \"myMethod\", \"{\\\"foo\\\":\\\"bar\\\"}\")\n+ *             >                   .exampleHttpHeaders(MyAnnotatedService.class,\n+ *             >                                       HttpHeaders.of(\"my-header\", \"headerVal\")));\n+ *\n+ *             >     };\n+ *             > }}</pre>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTk1MTU3Mg=="}, "originalCommit": {"oid": "615b9ce2750cfa1da50c4bb7280046f3c4b6753f"}, "originalPosition": 43}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3ODY1NDA3OnYy", "diffSide": "RIGHT", "path": "spring/boot-autoconfigure/src/main/java/com/linecorp/armeria/spring/GrpcServiceRegistrationBean.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQwMzo0NDoyMVrOGpSvlg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQwMzo0NDoyMVrOGpSvlg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTk1MTg5NA==", "bodyText": "missing ;?", "url": "https://github.com/line/armeria/pull/2838#discussion_r445951894", "createdAt": "2020-06-26T03:44:21Z", "author": {"login": "minwoox"}, "path": "spring/boot-autoconfigure/src/main/java/com/linecorp/armeria/spring/GrpcServiceRegistrationBean.java", "diffHunk": "@@ -43,51 +44,107 @@\n  * >                                                      HttpHeaders.of(\"my-header\", \"headerVal\")));\n  * > }\n  * }</pre>\n+ *\n+ * @deprecated Use {@link ArmeriaServerConfigurator} and {@link DocServiceConfigurator}.\n+ *             <pre>{@code\n+ *             > @Bean\n+ *             > public ArmeriaServerConfigurator myService() {\n+ *             >     return server -> {\n+ *             >         server.route()\n+ *             >               .path(\"/my-service\")\n+ *             >               .decorator(LoggingService.newDecorator())\n+ *             >               .build(GrpcService.builder()\n+ *             >                                 .addService(new HelloService())\n+ *             >                                 .supportedSerializationFormats(\n+ *             >                                         GrpcSerializationFormats.values())\n+ *             >                                 .enableUnframedRequests(true)\n+ *             >                                 .build());\n+ *             >     };\n+ *             > }\n+ *\n+ *             > @Bean\n+ *             > public DocServiceConfigurator myServiceDoc() {\n+ *             >     return docService -> {\n+ *             >         docService.exampleRequestForMethod(HelloServiceGrpc.SERVICE_NAME, \"Hello\",\n+ *             >                                            HelloRequest.newBuilder()\n+ *             >                                                        .setName(\"Armeria\").build())\n+ *             >                   .exampleHttpHeaders(HelloServiceGrpc.SERVICE_NAME,\n+ *             >                                       HttpHeaders.of(\"my-header\", \"headerVal\"))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "615b9ce2750cfa1da50c4bb7280046f3c4b6753f"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3ODY1Njc5OnYy", "diffSide": "RIGHT", "path": "spring/boot-autoconfigure/src/main/java/com/linecorp/armeria/spring/AnnotatedServiceRegistrationBean.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQwMzo0NjoxNFrOGpSxNw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQwMzo0NjoxNFrOGpSxNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTk1MjMxMQ==", "bodyText": "docServiceBuilder to clarify?", "url": "https://github.com/line/armeria/pull/2838#discussion_r445952311", "createdAt": "2020-06-26T03:46:14Z", "author": {"login": "minwoox"}, "path": "spring/boot-autoconfigure/src/main/java/com/linecorp/armeria/spring/AnnotatedServiceRegistrationBean.java", "diffHunk": "@@ -45,7 +48,35 @@\n  * >             .addExampleHeaders(ExampleHeaders.of(\"my-header\", \"headerVal\"));\n  * > }\n  * }</pre>\n+ *\n+ * @deprecated Use {@link ServerBuilder#annotatedService()} via {@link ArmeriaServerConfigurator} and\n+ *             {@link DocServiceConfigurator}.\n+ *             <pre>{@code\n+ *             > @Bean\n+ *             > public ArmeriaServerConfigurator myService() {\n+ *             >     return server -> {\n+ *             >         server.annotatedService()\n+ *             >               .pathPrefix(\"/my_service\")\n+ *             >               .exceptionHandlers(new MyExceptionHandler())\n+ *             >               .requestConverters(new MyRequestConverter())\n+ *             >               .responseConverters(new MyResponseConverter())\n+ *             >               .decorator(LoggingService.newDecorator())\n+ *             >               .build(new MyAnnoatedService());\n+ *             >     };\n+ *             > }\n+ *\n+ *             > @Bean\n+ *             > public DocServiceConfigurator myServiceDoc() {\n+ *             >     return docService -> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "615b9ce2750cfa1da50c4bb7280046f3c4b6753f"}, "originalPosition": 36}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2405, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}