{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE3ODI4MzEx", "number": 3167, "title": "Replace react-select with Material-UI's Autocomplete", "bodyText": "Motivation\n\nIn effort to reduce the JS bundle size, we can use Material-UI components instead of extra dependencies\n\nModifications\n\nReplace react-select with Material-UI Lab's Autocomplete component.\nCurrently selected option no longer disappears when menu is open. The text is selected instead.\nRemove the item limit. The dropdown works fine with 5,000 items.\n\n\n\n\nBefore\nAfter\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nResult\n\nImprove appearance and UX, with less code\nRemove a dependency and reduce docs-client bundle size by 70 kB (down to 572 kB)", "createdAt": "2020-11-09T15:05:48Z", "url": "https://github.com/line/armeria/pull/3167", "merged": true, "mergeCommit": {"oid": "559751a7bd8b0ad4c26cb36db7efad9a38c6622f"}, "closed": true, "closedAt": "2020-11-19T06:33:13Z", "author": {"login": "KarboniteKream"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABda2FRhAH2gAyNTE3ODI4MzExOjA3MzM3MjM3NGU4NzRlYTU2N2Y4NjAwMzM1NTExNTE1ZGM1NWNiZTQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdd4Qu8AFqTUzNDAwNjcxNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "073372374e874ea567f8600335511515dc55cbe4", "author": {"user": {"login": "KarboniteKream", "name": "Klemen Ko\u0161ir"}}, "url": "https://github.com/line/armeria/commit/073372374e874ea567f8600335511515dc55cbe4", "committedDate": "2020-11-09T14:59:54Z", "message": "Replace react-select with Material-UI's Autocomplete"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6db063bfb1ae1cf7084ab3c41db4a80cf8251832", "author": {"user": {"login": "KarboniteKream", "name": "Klemen Ko\u0161ir"}}, "url": "https://github.com/line/armeria/commit/6db063bfb1ae1cf7084ab3c41db4a80cf8251832", "committedDate": "2020-11-09T15:38:45Z", "message": "Add item limit"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMxMDQxMTQz", "url": "https://github.com/line/armeria/pull/3167#pullrequestreview-531041143", "createdAt": "2020-11-16T08:10:31Z", "commit": {"oid": "6db063bfb1ae1cf7084ab3c41db4a80cf8251832"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMzMDk5ODg5", "url": "https://github.com/line/armeria/pull/3167#pullrequestreview-533099889", "createdAt": "2020-11-18T04:41:59Z", "commit": {"oid": "6db063bfb1ae1cf7084ab3c41db4a80cf8251832"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMzMTAwMTc2", "url": "https://github.com/line/armeria/pull/3167#pullrequestreview-533100176", "createdAt": "2020-11-18T04:43:03Z", "commit": {"oid": "6db063bfb1ae1cf7084ab3c41db4a80cf8251832"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQwNDo0MzowM1rOH1cc0A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQwNDo0MzowM1rOH1cc0A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTgwMjcwNA==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/line/armeria/pull/3167#discussion_r525802704", "createdAt": "2020-11-18T04:43:03Z", "author": {"login": "ikhoon"}, "path": "docs-client/src/components/GotoSelect/index.tsx", "diffHunk": "@@ -14,417 +14,136 @@\n  * under the License.\n  */\n \n-import MenuItem from '@material-ui/core/MenuItem';\n-import NoSsr from '@material-ui/core/NoSsr';\n-import Paper from '@material-ui/core/Paper';\n-import {\n-  createStyles,\n-  makeStyles,\n-  Theme,\n-  useTheme,\n-} from '@material-ui/core/styles';\n-import { emphasize } from '@material-ui/core/styles/colorManipulator';\n-import TextField, { BaseTextFieldProps } from '@material-ui/core/TextField';\n-import Typography from '@material-ui/core/Typography';\n-import React, {\n-  CSSProperties,\n-  HTMLAttributes,\n-  useCallback,\n-  useMemo,\n-} from 'react';\n-import Async from 'react-select/async';\n-import {\n-  IndicatorContainerProps,\n-  ValueContainerProps,\n-} from 'react-select/src/components/containers';\n-import { ControlProps } from 'react-select/src/components/Control';\n-import { IndicatorProps } from 'react-select/src/components/indicators';\n-import { MenuProps, NoticeProps } from 'react-select/src/components/Menu';\n-import { OptionProps } from 'react-select/src/components/Option';\n-import { SingleValueProps } from 'react-select/src/components/SingleValue';\n-import { CommonProps, ValueType } from 'react-select/src/types';\n+import Autocomplete, {\n+  createFilterOptions,\n+} from '@material-ui/lab/Autocomplete';\n+import { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\n+import TextField from '@material-ui/core/TextField';\n+import React, { ChangeEvent, useCallback } from 'react';\n+\n import { Specification } from '../../lib/specification';\n+import { SelectOption } from '../../lib/types';\n \n-interface OptionType {\n-  label: string;\n-  value: string;\n-}\n-\n-interface GroupType {\n-  label: string;\n-  value: string;\n-  options: OptionType[];\n-}\n+type Option = SelectOption & { group: string };\n \n const useStyles = makeStyles((theme: Theme) =>\n   createStyles({\n     root: {\n-      position: 'relative',\n-      margin: `${theme.spacing(1)}px`,\n-      marginLeft: `${theme.spacing(3)}px`,\n-      minWidth: 300,\n+      margin: theme.spacing(1),\n+      marginLeft: theme.spacing(3),\n       width: 800,\n       backgroundColor: theme.palette.primary.light,\n-      borderRadius: `${theme.spacing(2)}px`,\n-    },\n-    input: {\n-      display: 'flex',\n-      marginLeft: `${theme.spacing(1)}px`,\n-      paddingBottom: `${theme.spacing(1.4)}px`,\n-    },\n-    valueContainer: {\n-      display: 'flex',\n-      flexWrap: 'wrap',\n-      flex: 1,\n-    },\n-    chip: {\n-      margin: `${theme.spacing(1 / 2)}px ${theme.spacing(1 / 4)}px`,\n-    },\n-    chipFocused: {\n-      backgroundColor: emphasize(\n-        theme.palette.type === 'light'\n-          ? theme.palette.grey[300]\n-          : theme.palette.grey[700],\n-        0.08,\n-      ),\n+      borderRadius: theme.spacing(2),\n     },\n-    noOptionsMessage: {\n-      padding: `${theme.spacing(1)}px ${theme.spacing(2)}px`,\n+    inputRoot: {\n+      padding: theme.spacing(0.25, 1.25),\n     },\n-    singleValue: {\n-      position: 'relative',\n-      paddingTop: `${theme.spacing(1 / 5)}px`,\n-      fontSize: 16,\n+    input: {\n       color: 'rgba(0, 0, 0, 0.62)',\n+      '&::placeholder': {\n+        opacity: 0.62,\n+      },\n     },\n-    placeholder: {\n-      position: 'absolute',\n-      marginLeft: `${theme.spacing(1)}px`,\n-      paddingTop: `${theme.spacing(1 / 6)}px`,\n-      left: 2,\n-    },\n-    indicatorsContainer: {\n-      marginBottom: 0,\n-      marginTop: `${theme.spacing(0.5)}px`,\n-      alignItems: 'center',\n-      display: 'flex',\n-    },\n-    indicatorSeparator: {\n-      alignSelf: 'stretch',\n-      width: 1,\n-      backgroundColor: 'hsl(0,0%,80%)',\n-    },\n-    paper: {\n-      position: 'absolute',\n-      zIndex: 1,\n-      marginTop: theme.spacing(1),\n-      left: 0,\n-      right: 0,\n-      flex: 1,\n-    },\n-    divider: {\n-      height: theme.spacing(2),\n+    popupIndicator: {\n+      marginRight: theme.spacing(0.5),\n     },\n   }),\n );\n \n-function NoOptionsMessage(props: NoticeProps<OptionType>) {\n-  return (\n-    <Typography\n-      color=\"textSecondary\"\n-      className={props.selectProps.classes.noOptionsMessage}\n-      {...props.innerProps}\n-    >\n-      No Results\n-    </Typography>\n-  );\n-}\n-\n-type InputComponentProps = Pick<BaseTextFieldProps, 'inputRef'> &\n-  HTMLAttributes<HTMLDivElement>;\n-\n-function inputComponent({ inputRef, ...props }: InputComponentProps) {\n-  return <div ref={inputRef} {...props} />;\n-}\n-\n-function Control(props: ControlProps<OptionType>) {\n-  const {\n-    children,\n-    innerProps,\n-    innerRef,\n-    selectProps: { classes, TextFieldProps },\n-  } = props;\n-\n-  return (\n-    <TextField\n-      fullWidth\n-      InputProps={{\n-        inputComponent,\n-        inputProps: {\n-          children,\n-          className: classes.input,\n-          ref: innerRef,\n-          ...innerProps,\n-        },\n-        disableUnderline: true,\n-      }}\n-      {...TextFieldProps}\n-    />\n-  );\n-}\n-\n-function Option(props: OptionProps<OptionType>) {\n-  return (\n-    <MenuItem\n-      buttonRef={props.innerRef}\n-      selected={props.isFocused}\n-      component=\"div\"\n-      style={{\n-        fontWeight: props.isSelected ? 500 : 400,\n-        width: 800,\n-      }}\n-      {...props.innerProps}\n-    >\n-      {props.children}\n-    </MenuItem>\n-  );\n-}\n-\n-function Placeholder(props: CommonProps<OptionType>) {\n-  return (\n-    <Typography\n-      color=\"textSecondary\"\n-      className={props.selectProps.classes.placeholder}\n-    >\n-      Go to ...\n-    </Typography>\n-  );\n-}\n-\n-function SingleValue(props: SingleValueProps<OptionType>) {\n-  return (\n-    <Typography\n-      className={props.selectProps.classes.singleValue}\n-      style={{\n-        display: props.selectProps.menuIsOpen ? 'none' : 'block',\n-      }}\n-      noWrap\n-      {...props.innerProps}\n-    >\n-      {props.children}\n-    </Typography>\n-  );\n-}\n-\n-function ValueContainer(props: ValueContainerProps<OptionType>) {\n-  const { inputValue, menuIsOpen } = props.selectProps;\n-  const showPlaceholder = props.hasValue && !inputValue && menuIsOpen;\n-\n-  return (\n-    <div className={props.selectProps.classes.valueContainer}>\n-      {showPlaceholder && Placeholder(props)}\n-      {props.children}\n-    </div>\n-  );\n-}\n-\n-function IndicatorsContainer(props: IndicatorContainerProps<OptionType>) {\n-  return (\n-    <div className={props.selectProps.classes.indicatorsContainer}>\n-      {props.children}\n-    </div>\n-  );\n-}\n+const filterOptions = createFilterOptions<Option>({\n+  limit: 500,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6db063bfb1ae1cf7084ab3c41db4a80cf8251832"}, "originalPosition": 246}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM0MDA2NzE2", "url": "https://github.com/line/armeria/pull/3167#pullrequestreview-534006716", "createdAt": "2020-11-19T01:14:00Z", "commit": {"oid": "6db063bfb1ae1cf7084ab3c41db4a80cf8251832"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4815, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}