{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcyNDkxNTQw", "number": 2471, "title": "Preserve service binding order when building routers", "bodyText": "Motivation:\nAnnotated services are lazily bond to VirtualHost to apply AnnotatedServiceExtensions to them. #2316\nIt causes a change in the order of original service binding defined by the user.\nThis is critical if a user uses a global fallback service.\nIn the following example, the user added the fallback service in the last.\nHowever, the fallback will be added first and annotated services will be added later.\nsb.annotatedService(\"/api/v0/\", new Object() {\n    @Get(\"regex:/projects/(?<projectName>[^/]+)\")\n     ...\n});\nsb.annotatedService(\"/api/v0/\", new Object() {\n    @Get(\"/users/me\")\n    ...\n});\nsb.serviceUnder(\"/\", (ctx, req) -> HttpResponse.of(\"fallback\"));\nModifications:\n\nMake ServiceConfigBuilder implement ServiceConfigSetters\nRemove unused getters in ServiceConfigBuilder\nMerge addAnnotatedServiceBindingBuilder and  addServiceConfigBuilder into addServiceConfigSetters\nRemove annotatedServiceBindingBuilders and delegate it to virtualHostTemplate\n\nResult:\nFix regression in service bindings.", "createdAt": "2020-02-07T16:19:19Z", "url": "https://github.com/line/armeria/pull/2471", "merged": true, "mergeCommit": {"oid": "fa60201ff5ac45f70e2e74f34edcf0505096ed81"}, "closed": true, "closedAt": "2020-02-08T06:04:39Z", "author": {"login": "ikhoon"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcCB1NIgH2gAyMzcyNDkxNTQwOjZlYjk5YTdjNWUwMDliMWEwZGM1ZDkxNDQ1YTliMjQyMDU1OGYzMTE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcCMds5AH2gAyMzcyNDkxNTQwOjg3ZTcxNjdlMTBiOGY1MGQ4MjliNzU5MGUzMjQzZDcyYzY5NGVjYzg=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "6eb99a7c5e009b1a0dc5d91445a9b2420558f311", "author": {"user": {"login": "ikhoon", "name": "Ikhun Um"}}, "url": "https://github.com/line/armeria/commit/6eb99a7c5e009b1a0dc5d91445a9b2420558f311", "committedDate": "2020-02-07T16:21:57Z", "message": "Preserve service binding order when building routers\n\nMotivation:\nAnnotated services are lazily bond to `VirtualHost` to apply `AnnotatedServiceExtensions` to them. #2316\nIt causes a change in the order of routing defined by the user.\nThis is critical if a user uses a global fallback service.\nIn the following example, the user added the fallback service in the last.\nHowever, the fallback will be added first and annotated services will be added later.\n\n```java\nsb.annotatedService(\"/api/v0/\", new Object() {\n    @Get(\"regex:/projects/(?<projectName>[^/]+)\")\n     ...\n});\nsb.annotatedService(\"/api/v0/\", new Object() {\n    @Get(\"/users/me\")\n    ...\n});\nsb.serviceUnder(\"/\", (ctx, req) -> HttpResponse.of(\"fallback\"));\n```\n\nModifications:\n* Make ServiceConfigBuilder implement ServiceConfigSetters\n* Remove unsed getters in ServiceConfigBuilder\n* Merge `addAnnotatedServiceBindingBuilder` and  `addServiceConfigBuilder` into `addServiceConfigSetters`\n* Remove `annotatedServiceBindingBuilders` and delegate to `virtualHostTemplate`\n\nResult:\nFix regression in service bindings."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5d1070c7f37fcd2c08d6783163806bb7055cd4de", "author": {"user": {"login": "ikhoon", "name": "Ikhun Um"}}, "url": "https://github.com/line/armeria/commit/5d1070c7f37fcd2c08d6783163806bb7055cd4de", "committedDate": "2020-02-07T16:17:28Z", "message": "Preserve service binding order when building routers\n\nMotivation:\nAnnotated services are lazily bond to `VirtualHost` to apply `AnnotatedServiceExtensions` to them. #2316\nIt causes a change in the order of routing defined by the user.\nThis is critical if a user uses a global fallback service.\nIn the following example, the user added the fallback service in the last.\nHowever, the fallback will be added first and annotated services will be added later.\n\n```java\nsb.annotatedService(\"/api/v0/\", new Object() {\n    @Get(\"regex:/projects/(?<projectName>[^/]+)\")\n     ...\n});\nsb.annotatedService(\"/api/v0/\", new Object() {\n    @Get(\"/users/me\")\n    ...\n});\nsb.serviceUnder(\"/\", (ctx, req) -> HttpResponse.of(\"fallback\"));\n```\n\nModifications:\n* Make ServiceConfigBuilder implement ServiceConfigSetters\n* Remove unsed getters in ServiceConfigBuilder\n* Merge `addAnnotatedServiceBindingBuilder` and  `addServiceConfigBuilder` into `addServiceConfigSetters`\n* Remove `annotatedServiceBindingBuilders` and delegate to `virtualHostTemplate`\n\nResult:\nFix regression in service bindings."}, "afterCommit": {"oid": "6eb99a7c5e009b1a0dc5d91445a9b2420558f311", "author": {"user": {"login": "ikhoon", "name": "Ikhun Um"}}, "url": "https://github.com/line/armeria/commit/6eb99a7c5e009b1a0dc5d91445a9b2420558f311", "committedDate": "2020-02-07T16:21:57Z", "message": "Preserve service binding order when building routers\n\nMotivation:\nAnnotated services are lazily bond to `VirtualHost` to apply `AnnotatedServiceExtensions` to them. #2316\nIt causes a change in the order of routing defined by the user.\nThis is critical if a user uses a global fallback service.\nIn the following example, the user added the fallback service in the last.\nHowever, the fallback will be added first and annotated services will be added later.\n\n```java\nsb.annotatedService(\"/api/v0/\", new Object() {\n    @Get(\"regex:/projects/(?<projectName>[^/]+)\")\n     ...\n});\nsb.annotatedService(\"/api/v0/\", new Object() {\n    @Get(\"/users/me\")\n    ...\n});\nsb.serviceUnder(\"/\", (ctx, req) -> HttpResponse.of(\"fallback\"));\n```\n\nModifications:\n* Make ServiceConfigBuilder implement ServiceConfigSetters\n* Remove unsed getters in ServiceConfigBuilder\n* Merge `addAnnotatedServiceBindingBuilder` and  `addServiceConfigBuilder` into `addServiceConfigSetters`\n* Remove `annotatedServiceBindingBuilders` and delegate to `virtualHostTemplate`\n\nResult:\nFix regression in service bindings."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU1MjkwNzc5", "url": "https://github.com/line/armeria/pull/2471#pullrequestreview-355290779", "createdAt": "2020-02-07T16:46:23Z", "commit": {"oid": "6eb99a7c5e009b1a0dc5d91445a9b2420558f311"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QxNjo0NjoyM1rOFnDW0g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QxNjo0NjoyM1rOFnDW0g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjQ5Mzc3OA==", "bodyText": "Error is too generic in here may be we should throw more specific Exception in here", "url": "https://github.com/line/armeria/pull/2471#discussion_r376493778", "createdAt": "2020-02-07T16:46:23Z", "author": {"login": "mercanil"}, "path": "core/src/main/java/com/linecorp/armeria/server/VirtualHostBuilder.java", "diffHunk": "@@ -917,17 +911,24 @@ VirtualHost build(VirtualHostBuilder template) {\n         assert accessLoggerMapper != null;\n         assert extensions != null;\n \n-        virtualHostAnnotatedServiceBindingBuilders.stream()\n-                                                  .flatMap(b -> b.buildServiceConfigBuilder(extensions)\n-                                                                 .stream())\n-                                                  .forEach(this::addServiceConfigBuilder);\n-\n-        final List<ServiceConfigBuilder> serviceConfigBuilders =\n-                getServiceConfigBuilders(template);\n-        final List<ServiceConfig> serviceConfigs = serviceConfigBuilders.stream().map(cfgBuilder -> {\n-            return cfgBuilder.build(requestTimeoutMillis, maxRequestLength, verboseResponses,\n-                                    accessLogWriter, shutdownAccessLogWriterOnStop);\n-        }).collect(toImmutableList());\n+        final List<ServiceConfig> serviceConfigs = getServiceConfigSetters(template)\n+                .stream()\n+                .flatMap(cfgSetters -> {\n+                    if (cfgSetters instanceof VirtualHostAnnotatedServiceBindingBuilder) {\n+                        return ((VirtualHostAnnotatedServiceBindingBuilder) cfgSetters)\n+                                .buildServiceConfigBuilder(extensions).stream();\n+                    } else if (cfgSetters instanceof AnnotatedServiceBindingBuilder) {\n+                        return ((AnnotatedServiceBindingBuilder) cfgSetters)\n+                                .buildServiceConfigBuilder(extensions).stream();\n+                    } else if (cfgSetters instanceof ServiceConfigBuilder) {\n+                        return Stream.of((ServiceConfigBuilder) cfgSetters);\n+                    } else {\n+                        throw new Error(); // Should not reach here.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6eb99a7c5e009b1a0dc5d91445a9b2420558f311"}, "originalPosition": 105}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU1NTI0MjQ1", "url": "https://github.com/line/armeria/pull/2471#pullrequestreview-355524245", "createdAt": "2020-02-08T02:35:52Z", "commit": {"oid": "6eb99a7c5e009b1a0dc5d91445a9b2420558f311"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU1NTI3MzQ3", "url": "https://github.com/line/armeria/pull/2471#pullrequestreview-355527347", "createdAt": "2020-02-08T03:39:14Z", "commit": {"oid": "6eb99a7c5e009b1a0dc5d91445a9b2420558f311"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wOFQwMzozOToxNVrOFnO-PQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wOFQwMzozOToxNVrOFnO-PQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjY4NDA5Mw==", "bodyText": "You sometimes return ServiceConfigSetters and sometimes ServiceConfigBuilder in this class. It doesn't hurt to return ServiceConfigSetters because it's package-private, but perhaps it's better returning ServiceConfigBuilder for consistency.", "url": "https://github.com/line/armeria/pull/2471#discussion_r376684093", "createdAt": "2020-02-08T03:39:15Z", "author": {"login": "trustin"}, "path": "core/src/main/java/com/linecorp/armeria/server/ServiceConfigBuilder.java", "diffHunk": "@@ -44,47 +47,47 @@\n         this.service = requireNonNull(service, \"service\");\n     }\n \n-    @Nullable\n-    Long requestTimeoutMillis() {\n-        return requestTimeoutMillis;\n+    @Override\n+    public ServiceConfigSetters requestTimeout(Duration requestTimeout) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6eb99a7c5e009b1a0dc5d91445a9b2420558f311"}, "originalPosition": 26}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ab089e6ab27d2f2c9f0a0e2c2fcce7899da06dfb", "author": {"user": {"login": "ikhoon", "name": "Ikhun Um"}}, "url": "https://github.com/line/armeria/commit/ab089e6ab27d2f2c9f0a0e2c2fcce7899da06dfb", "committedDate": "2020-02-08T03:48:29Z", "message": "Address comments by @trustin"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU1NTI5NTA1", "url": "https://github.com/line/armeria/pull/2471#pullrequestreview-355529505", "createdAt": "2020-02-08T04:36:02Z", "commit": {"oid": "ab089e6ab27d2f2c9f0a0e2c2fcce7899da06dfb"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wOFQwNDozNjowMlrOFnPIjw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wOFQwNDozNjowMlrOFnPIjw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjY4NjczNQ==", "bodyText": "nit: let's do this after adding the below annotated service so that two tri routers are made which is the regression case. never mind. \ud83d\ude05", "url": "https://github.com/line/armeria/pull/2471#discussion_r376686735", "createdAt": "2020-02-08T04:36:02Z", "author": {"login": "minwoox"}, "path": "core/src/test/java/com/linecorp/armeria/server/ServiceRoutingTest.java", "diffHunk": "@@ -0,0 +1,55 @@\n+/*\n+ * Copyright 2020 LINE Corporation\n+ *\n+ * LINE Corporation licenses this file to you under the Apache License,\n+ * version 2.0 (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *   https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package com.linecorp.armeria.server;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.extension.RegisterExtension;\n+\n+import com.linecorp.armeria.client.WebClient;\n+import com.linecorp.armeria.common.HttpResponse;\n+import com.linecorp.armeria.server.annotation.Get;\n+import com.linecorp.armeria.server.annotation.Param;\n+import com.linecorp.armeria.testing.junit.server.ServerExtension;\n+\n+class ServiceRoutingTest {\n+    @RegisterExtension\n+    static ServerExtension server = new ServerExtension() {\n+        @Override\n+        protected void configure(ServerBuilder sb) throws Exception {\n+            sb.annotatedService(\"/api/v0/\", new Object() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ab089e6ab27d2f2c9f0a0e2c2fcce7899da06dfb"}, "originalPosition": 34}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU1NTI5NTEw", "url": "https://github.com/line/armeria/pull/2471#pullrequestreview-355529510", "createdAt": "2020-02-08T04:36:08Z", "commit": {"oid": "ab089e6ab27d2f2c9f0a0e2c2fcce7899da06dfb"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "87e7167e10b8f50d829b7590e3243d72c694ecc8", "author": {"user": {"login": "ikhoon", "name": "Ikhun Um"}}, "url": "https://github.com/line/armeria/commit/87e7167e10b8f50d829b7590e3243d72c694ecc8", "committedDate": "2020-02-08T04:45:14Z", "message": "Add more test case"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 986, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}