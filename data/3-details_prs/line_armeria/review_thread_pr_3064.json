{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg4MDM0Njk3", "number": 3064, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QwNTo0ODoyNlrOEkYCcA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QwNTo0ODoyNlrOEkYCcA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2NTc4MDMyOnYy", "diffSide": "RIGHT", "path": "spring/boot2-webflux-autoconfigure/src/main/java/com/linecorp/armeria/spring/web/reactive/ArmeriaClientHttpRequest.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QwNTo0ODoyNlrOHTSUyQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQwMToyMzo1MlrOHT6vuA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTk4NTIyNQ==", "bodyText": "Don't we need to complete Mono lazily? If then, how about?\nMono.fromFuture(request.whenComplete())\n    .onErrorResume(unused -> Mono.empty())", "url": "https://github.com/line/armeria/pull/3064#discussion_r489985225", "createdAt": "2020-09-17T05:48:26Z", "author": {"login": "ikhoon"}, "path": "spring/boot2-webflux-autoconfigure/src/main/java/com/linecorp/armeria/spring/web/reactive/ArmeriaClientHttpRequest.java", "diffHunk": "@@ -141,7 +141,7 @@ public DataBufferFactory bufferFactory() {\n             assert request == null : request;\n             request = supplier.get();\n             future.complete(client.execute(request));\n-            return Mono.fromFuture(request.whenComplete());\n+            return Mono.empty();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "600cf10d9aa138dedf9e95d1bbd1e4d5754468f3"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDYzMzM2NA==", "bodyText": "If so, we cannot get the response until the request is complete which means that we cannot use bidi streaming request.\nSo the Mono should not depend on whether the request is complete or not. \ud83d\ude09", "url": "https://github.com/line/armeria/pull/3064#discussion_r490633364", "createdAt": "2020-09-18T00:28:21Z", "author": {"login": "minwoox"}, "path": "spring/boot2-webflux-autoconfigure/src/main/java/com/linecorp/armeria/spring/web/reactive/ArmeriaClientHttpRequest.java", "diffHunk": "@@ -141,7 +141,7 @@ public DataBufferFactory bufferFactory() {\n             assert request == null : request;\n             request = supplier.get();\n             future.complete(client.execute(request));\n-            return Mono.fromFuture(request.whenComplete());\n+            return Mono.empty();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTk4NTIyNQ=="}, "originalCommit": {"oid": "600cf10d9aa138dedf9e95d1bbd1e4d5754468f3"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDY0NzQ4MA==", "bodyText": "Ah... I see. Let's leave as it is.", "url": "https://github.com/line/armeria/pull/3064#discussion_r490647480", "createdAt": "2020-09-18T01:23:52Z", "author": {"login": "ikhoon"}, "path": "spring/boot2-webflux-autoconfigure/src/main/java/com/linecorp/armeria/spring/web/reactive/ArmeriaClientHttpRequest.java", "diffHunk": "@@ -141,7 +141,7 @@ public DataBufferFactory bufferFactory() {\n             assert request == null : request;\n             request = supplier.get();\n             future.complete(client.execute(request));\n-            return Mono.fromFuture(request.whenComplete());\n+            return Mono.empty();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTk4NTIyNQ=="}, "originalCommit": {"oid": "600cf10d9aa138dedf9e95d1bbd1e4d5754468f3"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1880, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}