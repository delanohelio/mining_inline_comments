{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcxMTY2MDMw", "number": 2452, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQwMzozNTozOFrODdM8ig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQwMzozNTozOFrODdM8ig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxOTQ3NDAyOnYy", "diffSide": "LEFT", "path": "core/src/main/java/com/linecorp/armeria/internal/HttpHeaderSubscriber.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQwMzozNTozOFrOFlq42Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQwMzozNTozOFrOFlq42Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTA0NDMxMw==", "bodyText": "This class has been removed since it's not used anywhere.", "url": "https://github.com/line/armeria/pull/2452#discussion_r375044313", "createdAt": "2020-02-05T03:35:38Z", "author": {"login": "trustin"}, "path": "core/src/main/java/com/linecorp/armeria/internal/HttpHeaderSubscriber.java", "diffHunk": "@@ -1,91 +0,0 @@\n-/*\n- * Copyright 2017 LINE Corporation\n- *\n- * LINE Corporation licenses this file to you under the Apache License,\n- * version 2.0 (the \"License\"); you may not use this file except in compliance\n- * with the License. You may obtain a copy of the License at:\n- *\n- *   https://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n- * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n- * License for the specific language governing permissions and limitations\n- * under the License.\n- */\n-\n-package com.linecorp.armeria.internal;\n-\n-import static com.google.common.base.MoreObjects.firstNonNull;\n-\n-import java.util.concurrent.CompletableFuture;\n-import java.util.function.BiConsumer;\n-\n-import javax.annotation.Nullable;\n-\n-import org.reactivestreams.Subscriber;\n-import org.reactivestreams.Subscription;\n-\n-import com.linecorp.armeria.common.HttpHeaders;\n-import com.linecorp.armeria.common.HttpObject;\n-import com.linecorp.armeria.common.HttpStatusClass;\n-import com.linecorp.armeria.common.ResponseHeaders;\n-import com.linecorp.armeria.common.stream.AbortedStreamException;\n-import com.linecorp.armeria.common.stream.CancelledSubscriptionException;\n-\n-/**\n- * A {@link Subscriber} that completes the {@link CompletableFuture} which has taken as the argument in the\n- * constructor with {@link HttpHeaders}. The {@link HttpHeaders} contains a status that is not informational.\n- * If subscription is finished before subscribing a status, this will complete the future with\n- * the {@link HttpHeaders#of()}.\n- */\n-public final class HttpHeaderSubscriber\n-        implements Subscriber<HttpObject>, BiConsumer<Void, Throwable> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9f76508ea9fb52b3b17a83a97bb333de13773cd2"}, "originalPosition": 43}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2979, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}