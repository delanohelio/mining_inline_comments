{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE5Mjk0ODU0", "number": 2723, "title": "Add `RequestContextStorage.hook()`", "bodyText": "Motivation:\nThere's currently no way to perform an additional operation on top of\nthe RequestContextStorage implementation discovered via ServiceLoader.\nModifications:\n\nAdded RequestContextStorage.hook(Function) so that a user is allowed\nto modify the current RequestContextStorage.\nRequestContextStorage is now Unwrappable.\n\nAdded RequestContextStorageWrapper\n\n\n\nResult:\n\nA user can install a custom hook in runtime, usually at startup time,\nlike other frameworks.", "createdAt": "2020-05-18T06:49:33Z", "url": "https://github.com/line/armeria/pull/2723", "merged": true, "mergeCommit": {"oid": "e568538890fda6c44f34e40ba339c01a36288ea3"}, "closed": true, "closedAt": "2020-05-19T06:06:33Z", "author": {"login": "trustin"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABciaHs1gH2gAyNDE5Mjk0ODU0OmQ1NjA0MWE4ZGI0ZGM1MDA2OGRjYzBiZjNjOGY1Mzk4ZjQ5NzBiNDc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcic5JSAH2gAyNDE5Mjk0ODU0OmI5NmI2YWViOWFhZTY5YmU4ZWNiZjg2YTg3MDYwMTBiNjRkMGVhODk=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "d56041a8db4dc50068dcc0bf3c8f5398f4970b47", "author": {"user": {"login": "trustin", "name": "Trustin Lee"}}, "url": "https://github.com/line/armeria/commit/d56041a8db4dc50068dcc0bf3c8f5398f4970b47", "committedDate": "2020-05-18T06:45:27Z", "message": "Add `RequestContextStorage.hook()`\n\nMotivation:\n\nThere's currently no way to perform an additional operation on top of\nthe `RequestContextStorage` implementation discovered via `ServiceLoader`.\n\nModifications:\n\n- Added `RequestContextStorage.hook(Function)` so that a user is allowed\n  to modify the current `RequestContextStorage`.\n- `RequestContextStorage` is now `Unwrappable`.\n  - Added `RequestContextStorageWrapper`\n\nResult:\n\n- A user can install a custom hook in runtime, usually at startup time,\n  like other frameworks."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEzMzI0ODkz", "url": "https://github.com/line/armeria/pull/2723#pullrequestreview-413324893", "createdAt": "2020-05-18T07:14:03Z", "commit": {"oid": "d56041a8db4dc50068dcc0bf3c8f5398f4970b47"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQwNzoxNDowM1rOGWqJ4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQwNzoxNDowM1rOGWqJ4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjQxMjUxMg==", "bodyText": "Now we have a hook \ud83d\ude0e, could remove this and add a hook for counting?", "url": "https://github.com/line/armeria/pull/2723#discussion_r426412512", "createdAt": "2020-05-18T07:14:03Z", "author": {"login": "ikhoon"}, "path": "it/context-storage/src/test/java/com/linecorp/armeria/common/CustomRequestContextStorageProvider.java", "diffHunk": "@@ -48,32 +48,33 @@ static int popCalled() {\n \n     @Override\n     public RequestContextStorage newStorage() {\n-        return new RequestContextStorage() {\n-\n-            @Nullable\n-            @Override\n-            @SuppressWarnings(\"unchecked\")\n-            public <T extends RequestContext> T push(RequestContext toPush) {\n-                requireNonNull(toPush, \"toPush\");\n-                pushCalled.incrementAndGet();\n-                final InternalThreadLocalMap map = InternalThreadLocalMap.get();\n-                final RequestContext oldCtx = context.get(map);\n-                context.set(map, toPush);\n-                return (T) oldCtx;\n-            }\n-\n-            @Override\n-            public void pop(RequestContext current, @Nullable RequestContext toRestore) {\n-                popCalled.incrementAndGet();\n-                context.set(toRestore);\n-            }\n-\n-            @Nullable\n-            @Override\n-            @SuppressWarnings(\"unchecked\")\n-            public <T extends RequestContext> T currentOrNull() {\n-                return (T) context.get();\n-            }\n-        };\n+        return new CustomRequestContextStorage();\n+    }\n+\n+    static final class CustomRequestContextStorage implements RequestContextStorage {\n+        @Nullable\n+        @Override\n+        @SuppressWarnings(\"unchecked\")\n+        public <T extends RequestContext> T push(RequestContext toPush) {\n+            requireNonNull(toPush, \"toPush\");\n+            pushCalled.incrementAndGet();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d56041a8db4dc50068dcc0bf3c8f5398f4970b47"}, "originalPosition": 40}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEzMzI5NDMy", "url": "https://github.com/line/armeria/pull/2723#pullrequestreview-413329432", "createdAt": "2020-05-18T07:21:54Z", "commit": {"oid": "d56041a8db4dc50068dcc0bf3c8f5398f4970b47"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEzMzMxNDA5", "url": "https://github.com/line/armeria/pull/2723#pullrequestreview-413331409", "createdAt": "2020-05-18T07:24:59Z", "commit": {"oid": "d56041a8db4dc50068dcc0bf3c8f5398f4970b47"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQwNzoyNDo1OVrOGWqeGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQwNzoyNDo1OVrOGWqeGw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjQxNzY5MQ==", "bodyText": "How about adding more warnings such as thread safety?", "url": "https://github.com/line/armeria/pull/2723#discussion_r426417691", "createdAt": "2020-05-18T07:24:59Z", "author": {"login": "minwoox"}, "path": "core/src/main/java/com/linecorp/armeria/common/RequestContextStorage.java", "diffHunk": "@@ -57,7 +63,17 @@\n  * }</pre>\n  */\n @UnstableApi\n-public interface RequestContextStorage {\n+public interface RequestContextStorage extends Unwrappable {\n+\n+    /**\n+     * Customizes the current {@link RequestContextStorage} by applying the specified {@link Function} to it.\n+     * This method is useful when you need to perform an additional operation when a {@link RequestContext}\n+     * is pushed or popped. However, keep in mind that all {@link RequestContextStorage} operations are\n+     * highly performance-sensitive operation and thus it's not a good idea to run a time-consuming task.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d56041a8db4dc50068dcc0bf3c8f5398f4970b47"}, "originalPosition": 27}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b96b6aeb9aae69be8ecbf86a8706010b64d0ea89", "author": {"user": {"login": "trustin", "name": "Trustin Lee"}}, "url": "https://github.com/line/armeria/commit/b96b6aeb9aae69be8ecbf86a8706010b64d0ea89", "committedDate": "2020-05-18T09:59:16Z", "message": "Address the comment from @minwoox"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 515, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}