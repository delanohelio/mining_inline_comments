{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA0NzI2Nzg4", "number": 3115, "title": "Complete response before aborting request", "bodyText": "Motivation:\nWe currently, abort the request when the client receives the response.\nHowever, if the request is not complete, the AbortedStreamException is propagated to the response\neven though the client received the response normally.\nModifications:\n\nComplete response before aborting request in HttpResonseDecoder\nChange to use the attribute to apply ContentPreviewing(Client|Service) only once.\n\nResult:\n\nYou can now get the normal response even when the request is not fully sent.", "createdAt": "2020-10-16T09:54:56Z", "url": "https://github.com/line/armeria/pull/3115", "merged": true, "mergeCommit": {"oid": "8689584b4288fe224385f284ec88049afa96e590"}, "closed": true, "closedAt": "2020-10-21T03:10:37Z", "author": {"login": "minwoox"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdTDSaCgH2gAyNTA0NzI2Nzg4OmNmOWFiYmZhZDI5NjVlYTU2YjI1NzJhM2VlOTRmMDExNGQyYzlhYzE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdT6LvjgFqTUxMTM2NjE1NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "cf9abbfad2965ea56b2572a3ee94f0114d2c9ac1", "author": {"user": {"login": "minwoox", "name": "minux"}}, "url": "https://github.com/line/armeria/commit/cf9abbfad2965ea56b2572a3ee94f0114d2c9ac1", "committedDate": "2020-10-16T09:51:37Z", "message": "Complete response before aborting request\nMotivation:\nWe currently, abort request when the client receives the response.\nHowever, if the request is not complete, the AbortedStreamException is propagated to the response\neven though the client received the response normally.\n\nModifications:\n- Complete response before aboring request in `HttpResonseDecoder`\n- Change to use attribute to apply `ContentPreviewing(Client|Service)` only once.\n\nResult:\n- You can now get the normal response even when the request is not fully sent."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEwMzMzMTg4", "url": "https://github.com/line/armeria/pull/3115#pullrequestreview-510333188", "createdAt": "2020-10-16T10:08:18Z", "commit": {"oid": "cf9abbfad2965ea56b2572a3ee94f0114d2c9ac1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQxMDowODoxOFrOHizRXg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQxMDowODoxOFrOHizRXg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjI1MzY2Mg==", "bodyText": "Shouldn't it be SETTING_CONTENT_PREVIEW? Technically we did not set any preview they setting true.", "url": "https://github.com/line/armeria/pull/3115#discussion_r506253662", "createdAt": "2020-10-16T10:08:18Z", "author": {"login": "trustin"}, "path": "core/src/main/java/com/linecorp/armeria/client/logging/ContentPreviewingClient.java", "diffHunk": "@@ -54,6 +56,9 @@\n  */\n public final class ContentPreviewingClient extends SimpleDecoratingHttpClient {\n \n+    private static final AttributeKey<Boolean> CONTENT_PREVIEWING_SET =\n+            AttributeKey.valueOf(ContentPreviewingClient.class, \"CONTENT_PREVIEWING_SET\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cf9abbfad2965ea56b2572a3ee94f0114d2c9ac1"}, "originalPosition": 14}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEwMzMzMzk0", "url": "https://github.com/line/armeria/pull/3115#pullrequestreview-510333394", "createdAt": "2020-10-16T10:08:35Z", "commit": {"oid": "cf9abbfad2965ea56b2572a3ee94f0114d2c9ac1"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEwMzQ5NzI5", "url": "https://github.com/line/armeria/pull/3115#pullrequestreview-510349729", "createdAt": "2020-10-16T10:33:06Z", "commit": {"oid": "cf9abbfad2965ea56b2572a3ee94f0114d2c9ac1"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b5b84a3f153d0489ff97849762d20b3c7b10b34b", "author": {"user": {"login": "minwoox", "name": "minux"}}, "url": "https://github.com/line/armeria/commit/b5b84a3f153d0489ff97849762d20b3c7b10b34b", "committedDate": "2020-10-16T11:04:51Z", "message": "Address the comment by @trustin"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEwNDQxMTg3", "url": "https://github.com/line/armeria/pull/3115#pullrequestreview-510441187", "createdAt": "2020-10-16T12:55:51Z", "commit": {"oid": "b5b84a3f153d0489ff97849762d20b3c7b10b34b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQxMjo1NTo1MVrOHi7UBg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQxMjo1NTo1MVrOHi7UBg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjM4NTQxNA==", "bodyText": "maybe some more assertions are needed here?\ni don't see where the request is aborted (could be a comment if I'm just not seeing it)\nalso, might need a signal to ensure the exceptionally was actually invoked, as I would guess we are assuming that hook is in fact called. If it weren't the assertion would silently not run", "url": "https://github.com/line/armeria/pull/3115#discussion_r506385414", "createdAt": "2020-10-16T12:55:51Z", "author": {"login": "codefromthecrypt"}, "path": "core/src/test/java/com/linecorp/armeria/client/HttpResponseDecoderTest.java", "diffHunk": "@@ -107,4 +111,17 @@ void confirmResponseStartAndEndInTheSameThread(SessionProtocol protocol)\n         latch.await(System.getenv(\"CI\") != null ? 60 : 10, TimeUnit.SECONDS);\n         assertThat(failed.get()).isFalse();\n     }\n+\n+    @ParameterizedTest\n+    @EnumSource(value = SessionProtocol.class, names = {\"H1C\", \"H2C\"})\n+    void responseCompleteNormallyIfRequestIsAborted(SessionProtocol protocol) throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b5b84a3f153d0489ff97849762d20b3c7b10b34b"}, "originalPosition": 23}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "651233f7c4aa10a56c4a8c2fce9ae95c841fa397", "author": {"user": {"login": "minwoox", "name": "minux"}}, "url": "https://github.com/line/armeria/commit/651233f7c4aa10a56c4a8c2fce9ae95c841fa397", "committedDate": "2020-10-17T03:41:58Z", "message": "Address the comment by @adriancole"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEwOTYwMDEy", "url": "https://github.com/line/armeria/pull/3115#pullrequestreview-510960012", "createdAt": "2020-10-17T07:55:35Z", "commit": {"oid": "651233f7c4aa10a56c4a8c2fce9ae95c841fa397"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xN1QwNzo1NTozNVrOHjYVAQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xN1QwNzo1NTozNVrOHjYVAQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjg2MDgwMQ==", "bodyText": "Abort sounds like an error.. I wonder if there's another way to say this as it sounds scary terminology in response to someone calling close (as opposed to cancel or abort)\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    // The request is aborted in HttpResponseDecoder.close(...) after the client receives the response.\n          \n          \n            \n                    // The stream is aborted in HttpResponseDecoder.close(...) after the client receives the response.", "url": "https://github.com/line/armeria/pull/3115#discussion_r506860801", "createdAt": "2020-10-17T07:55:35Z", "author": {"login": "codefromthecrypt"}, "path": "core/src/test/java/com/linecorp/armeria/client/HttpResponseDecoderTest.java", "diffHunk": "@@ -107,4 +111,18 @@ void confirmResponseStartAndEndInTheSameThread(SessionProtocol protocol)\n         latch.await(System.getenv(\"CI\") != null ? 60 : 10, TimeUnit.SECONDS);\n         assertThat(failed.get()).isFalse();\n     }\n+\n+    @ParameterizedTest\n+    @EnumSource(value = SessionProtocol.class, names = {\"H1C\", \"H2C\"})\n+    void responseCompleteNormallyIfRequestIsAborted(SessionProtocol protocol) throws Exception {\n+        final WebClient client = WebClient.of(server.uri(protocol));\n+        final HttpRequestWriter request = HttpRequest.streaming(RequestHeaders.of(HttpMethod.POST, \"/\"));\n+        final AggregatedHttpResponse res = client.execute(request).aggregate().join();\n+        assertThat(res.contentUtf8()).isEqualTo(\"Hello, Armeria!\");\n+        // The request is aborted in HttpResponseDecoder.close(...) after the client receives the response.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "651233f7c4aa10a56c4a8c2fce9ae95c841fa397"}, "originalPosition": 28}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "534ca16962e87112b2250d28cd67f5f25056ceb3", "author": {"user": {"login": "minwoox", "name": "minux"}}, "url": "https://github.com/line/armeria/commit/534ca16962e87112b2250d28cd67f5f25056ceb3", "committedDate": "2020-10-19T01:03:30Z", "message": "Address the comment by @adriancole"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTExMzY2MTU0", "url": "https://github.com/line/armeria/pull/3115#pullrequestreview-511366154", "createdAt": "2020-10-19T01:49:07Z", "commit": {"oid": "534ca16962e87112b2250d28cd67f5f25056ceb3"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4748, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}