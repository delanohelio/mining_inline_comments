{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY1NzQwOTUz", "number": 2413, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQwNjo0Mjo0M1rODbd3sA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQwNjo1NTo1M1rODbd_qw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwMTI3NTM2OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/com/linecorp/armeria/common/logging/DefaultRequestLog.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQwNjo0Mjo0NFrOFi9_Sg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQwNjo1ODozOVrOFi-N3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjIxMTUzMA==", "bodyText": "nit: we can combine these two using isNullOrEmpty", "url": "https://github.com/line/armeria/pull/2413#discussion_r372211530", "createdAt": "2020-01-29T06:42:44Z", "author": {"login": "minwoox"}, "path": "core/src/main/java/com/linecorp/armeria/common/logging/DefaultRequestLog.java", "diffHunk": "@@ -642,6 +646,25 @@ public Scheme scheme() {\n         return scheme;\n     }\n \n+    @Override\n+    @Nullable\n+    public String name() {\n+        ensureAvailable(RequestLogProperty.NAME);\n+        return name;\n+    }\n+\n+    @Override\n+    public void name(String name) {\n+        requireNonNull(name, \"name\");\n+        checkArgument(!name.isEmpty(), \"name is empty.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c4847530d810c4d3c75911ecee2c87579f2bc280"}, "originalPosition": 74}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjIxNTI2Mw==", "bodyText": "Nope. Can't throw an NPE with it.", "url": "https://github.com/line/armeria/pull/2413#discussion_r372215263", "createdAt": "2020-01-29T06:58:39Z", "author": {"login": "trustin"}, "path": "core/src/main/java/com/linecorp/armeria/common/logging/DefaultRequestLog.java", "diffHunk": "@@ -642,6 +646,25 @@ public Scheme scheme() {\n         return scheme;\n     }\n \n+    @Override\n+    @Nullable\n+    public String name() {\n+        ensureAvailable(RequestLogProperty.NAME);\n+        return name;\n+    }\n+\n+    @Override\n+    public void name(String name) {\n+        requireNonNull(name, \"name\");\n+        checkArgument(!name.isEmpty(), \"name is empty.\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjIxMTUzMA=="}, "originalCommit": {"oid": "c4847530d810c4d3c75911ecee2c87579f2bc280"}, "originalPosition": 74}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwMTI5NTc5OnYy", "diffSide": "RIGHT", "path": "core/src/test/java/com/linecorp/armeria/internal/metric/RequestMetricSupportTest.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQwNjo1NTo1M1rOFi-LUw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQxMTowNzowOFrOFjEnJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjIxNDYxMQ==", "bodyText": "You mean activeRequestMetrics.decrement()?", "url": "https://github.com/line/armeria/pull/2413#discussion_r372214611", "createdAt": "2020-01-29T06:55:53Z", "author": {"login": "minwoox"}, "path": "core/src/test/java/com/linecorp/armeria/internal/metric/RequestMetricSupportTest.java", "diffHunk": "@@ -56,18 +51,21 @@ void httpSuccess() {\n         final ClientRequestContext ctx = setupClientRequestCtx(registry);\n \n         setConnectionTimings(ctx);\n-        ctx.logBuilder().requestHeaders(RequestHeaders.of(HttpMethod.POST, \"/foo\"));\n-        ctx.logBuilder().requestFirstBytesTransferred();\n-        ctx.logBuilder().requestContent(null, null);\n-        ctx.logBuilder().requestLength(123);\n+        // FIXME(trustin): In reality, most HTTP requests will not have any name.\n+        //                 As a result, `activeRequestMeterId()` will be invoked only after", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c4847530d810c4d3c75911ecee2c87579f2bc280"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjIxNTMzNQ==", "bodyText": "I meant MeterIdPrefixFunction.activeRequestMeterId().", "url": "https://github.com/line/armeria/pull/2413#discussion_r372215335", "createdAt": "2020-01-29T06:58:58Z", "author": {"login": "trustin"}, "path": "core/src/test/java/com/linecorp/armeria/internal/metric/RequestMetricSupportTest.java", "diffHunk": "@@ -56,18 +51,21 @@ void httpSuccess() {\n         final ClientRequestContext ctx = setupClientRequestCtx(registry);\n \n         setConnectionTimings(ctx);\n-        ctx.logBuilder().requestHeaders(RequestHeaders.of(HttpMethod.POST, \"/foo\"));\n-        ctx.logBuilder().requestFirstBytesTransferred();\n-        ctx.logBuilder().requestContent(null, null);\n-        ctx.logBuilder().requestLength(123);\n+        // FIXME(trustin): In reality, most HTTP requests will not have any name.\n+        //                 As a result, `activeRequestMeterId()` will be invoked only after", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjIxNDYxMQ=="}, "originalCommit": {"oid": "c4847530d810c4d3c75911ecee2c87579f2bc280"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjIxODczMg==", "bodyText": "Then it's activeRequestPrefix? \ud83d\ude06", "url": "https://github.com/line/armeria/pull/2413#discussion_r372218732", "createdAt": "2020-01-29T07:12:14Z", "author": {"login": "minwoox"}, "path": "core/src/test/java/com/linecorp/armeria/internal/metric/RequestMetricSupportTest.java", "diffHunk": "@@ -56,18 +51,21 @@ void httpSuccess() {\n         final ClientRequestContext ctx = setupClientRequestCtx(registry);\n \n         setConnectionTimings(ctx);\n-        ctx.logBuilder().requestHeaders(RequestHeaders.of(HttpMethod.POST, \"/foo\"));\n-        ctx.logBuilder().requestFirstBytesTransferred();\n-        ctx.logBuilder().requestContent(null, null);\n-        ctx.logBuilder().requestLength(123);\n+        // FIXME(trustin): In reality, most HTTP requests will not have any name.\n+        //                 As a result, `activeRequestMeterId()` will be invoked only after", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjIxNDYxMQ=="}, "originalCommit": {"oid": "c4847530d810c4d3c75911ecee2c87579f2bc280"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjMyMDAzNw==", "bodyText": "Ah yeah :-)", "url": "https://github.com/line/armeria/pull/2413#discussion_r372320037", "createdAt": "2020-01-29T11:07:08Z", "author": {"login": "trustin"}, "path": "core/src/test/java/com/linecorp/armeria/internal/metric/RequestMetricSupportTest.java", "diffHunk": "@@ -56,18 +51,21 @@ void httpSuccess() {\n         final ClientRequestContext ctx = setupClientRequestCtx(registry);\n \n         setConnectionTimings(ctx);\n-        ctx.logBuilder().requestHeaders(RequestHeaders.of(HttpMethod.POST, \"/foo\"));\n-        ctx.logBuilder().requestFirstBytesTransferred();\n-        ctx.logBuilder().requestContent(null, null);\n-        ctx.logBuilder().requestLength(123);\n+        // FIXME(trustin): In reality, most HTTP requests will not have any name.\n+        //                 As a result, `activeRequestMeterId()` will be invoked only after", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjIxNDYxMQ=="}, "originalCommit": {"oid": "c4847530d810c4d3c75911ecee2c87579f2bc280"}, "originalPosition": 36}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2928, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}