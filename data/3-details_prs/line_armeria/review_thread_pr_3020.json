{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDcxOTUwODQw", "number": 3020, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QwMTozMjoxMFrOEc6M0Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QwNzowOTozM1rOEgzomA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk4NzQ5MTM3OnYy", "diffSide": "RIGHT", "path": "it/kotlin/error-message/src/test/kotlin/com/linecorp/armeria/it/AnnotatedServiceErrorMessageTest.kt", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QwMTozMjoxMFrOHHvPFQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QwMjo1NTo0M1rOHH2RAA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Nzg3NTk4OQ==", "bodyText": "This will make the test failed if the port is used by another test.\nHow about just removing this?", "url": "https://github.com/line/armeria/pull/3020#discussion_r477875989", "createdAt": "2020-08-27T01:32:10Z", "author": {"login": "minwoox"}, "path": "it/kotlin/error-message/src/test/kotlin/com/linecorp/armeria/it/AnnotatedServiceErrorMessageTest.kt", "diffHunk": "@@ -0,0 +1,43 @@\n+/*\n+ *  Copyright 2020 LINE Corporation\n+ *\n+ *  LINE Corporation licenses this file to you under the Apache License,\n+ *  version 2.0 (the \"License\"); you may not use this file except in compliance\n+ *  with the License. You may obtain a copy of the License at:\n+ *\n+ *    https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ *  WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ *  License for the specific language governing permissions and limitations\n+ *  under the License.\n+ */\n+\n+package com.linecorp.armeria.it\n+\n+import com.linecorp.armeria.server.Server\n+import com.linecorp.armeria.server.annotation.Get\n+import org.assertj.core.api.Assertions.assertThatThrownBy\n+import org.junit.jupiter.api.Test\n+\n+class AnnotatedServiceErrorMessageTest {\n+    @Test\n+    fun test() {\n+        val serverBuilder = Server.builder()\n+            .http(8888)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d7d377f4c1277ecabf7d2ff14f86b16c7eb4a3a6"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Nzk5MTE2OA==", "bodyText": "Thanks.", "url": "https://github.com/line/armeria/pull/3020#discussion_r477991168", "createdAt": "2020-08-27T02:55:43Z", "author": {"login": "okue"}, "path": "it/kotlin/error-message/src/test/kotlin/com/linecorp/armeria/it/AnnotatedServiceErrorMessageTest.kt", "diffHunk": "@@ -0,0 +1,43 @@\n+/*\n+ *  Copyright 2020 LINE Corporation\n+ *\n+ *  LINE Corporation licenses this file to you under the Apache License,\n+ *  version 2.0 (the \"License\"); you may not use this file except in compliance\n+ *  with the License. You may obtain a copy of the License at:\n+ *\n+ *    https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ *  WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ *  License for the specific language governing permissions and limitations\n+ *  under the License.\n+ */\n+\n+package com.linecorp.armeria.it\n+\n+import com.linecorp.armeria.server.Server\n+import com.linecorp.armeria.server.annotation.Get\n+import org.assertj.core.api.Assertions.assertThatThrownBy\n+import org.junit.jupiter.api.Test\n+\n+class AnnotatedServiceErrorMessageTest {\n+    @Test\n+    fun test() {\n+        val serverBuilder = Server.builder()\n+            .http(8888)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Nzg3NTk4OQ=="}, "originalCommit": {"oid": "d7d377f4c1277ecabf7d2ff14f86b16c7eb4a3a6"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk4NzYxMTY3OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/com/linecorp/armeria/internal/server/annotation/AnnotatedServiceFactory.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QwMTo0ODoyOFrOHHwh3w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QwMTo0ODoyOFrOHHwh3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Nzg5NzE4Mw==", "bodyText": "How about just checking whether CALL_KOTLIN_SUSPENDING_METHOD is null instead of introducing another field?", "url": "https://github.com/line/armeria/pull/3020#discussion_r477897183", "createdAt": "2020-08-27T01:48:28Z", "author": {"login": "minwoox"}, "path": "core/src/main/java/com/linecorp/armeria/internal/server/annotation/AnnotatedServiceFactory.java", "diffHunk": "@@ -242,6 +242,12 @@ private static HttpStatus defaultResponseStatus(Method method) {\n                                                 List<ResponseConverterFunction> baseResponseConverters,\n                                                 List<ExceptionHandlerFunction> baseExceptionHandlers) {\n \n+        if (!KotlinUtil.isArmeriaKotlinDependencyPresent() && KotlinUtil.maybeSuspendingFunction(method)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d7d377f4c1277ecabf7d2ff14f86b16c7eb4a3a6"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk4ODU0MDIyOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/com/linecorp/armeria/internal/server/annotation/KotlinUtil.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QwMzo0OTo1NlrOHH6jkA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QwMzo0OTo1NlrOHH6jkA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODA2MTQ1Ng==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * Returns true if the last parameter of a method is a kotlin.coroutines.Continuation.\n          \n          \n            \n                 * Returns true if the last parameter of a method is a {@code kotlin.coroutines.Continuation}.", "url": "https://github.com/line/armeria/pull/3020#discussion_r478061456", "createdAt": "2020-08-27T03:49:56Z", "author": {"login": "ikhoon"}, "path": "core/src/main/java/com/linecorp/armeria/internal/server/annotation/KotlinUtil.java", "diffHunk": "@@ -124,6 +131,14 @@ static boolean isKotlinMethod(Method method) {\n                method.getDeclaringClass().getAnnotation(METADATA_CLASS) != null;\n     }\n \n+    /**\n+     * Returns true if the last parameter of a method is a kotlin.coroutines.Continuation.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b249ad1ad433beab261624153c9bf39b1ed14430"}, "originalPosition": 67}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk4ODU3NDMzOnYy", "diffSide": "RIGHT", "path": "settings.gradle", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QwMzo1NjowM1rOHH66yA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxMDozNjoxOFrOHIKaSw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODA2NzQwMA==", "bodyText": "How about renaming :error-message to :annotated-service? I think the error-message name is too specific for a module name and hard to predict what is tested in the module.", "url": "https://github.com/line/armeria/pull/3020#discussion_r478067400", "createdAt": "2020-08-27T03:56:03Z", "author": {"login": "ikhoon"}, "path": "settings.gradle", "diffHunk": "@@ -47,6 +47,7 @@ includeWithFlags ':javadoc',                             'java', 'publish', 'no_\n includeWithFlags ':benchmarks',              'java'\n includeWithFlags ':it:context-storage',      'java'\n includeWithFlags ':it:grpcweb',              'java', 'akka-grpc_2.13'\n+includeWithFlags ':it:kotlin:error-message', 'java', 'relocate'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b249ad1ad433beab261624153c9bf39b1ed14430"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODEwMTUyNw==", "bodyText": "OR just :it:kotlin?\nI think we don't want to create another module every time we add an IT test for kotlin.", "url": "https://github.com/line/armeria/pull/3020#discussion_r478101527", "createdAt": "2020-08-27T04:32:04Z", "author": {"login": "minwoox"}, "path": "settings.gradle", "diffHunk": "@@ -47,6 +47,7 @@ includeWithFlags ':javadoc',                             'java', 'publish', 'no_\n includeWithFlags ':benchmarks',              'java'\n includeWithFlags ':it:context-storage',      'java'\n includeWithFlags ':it:grpcweb',              'java', 'akka-grpc_2.13'\n+includeWithFlags ':it:kotlin:error-message', 'java', 'relocate'", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODA2NzQwMA=="}, "originalCommit": {"oid": "b249ad1ad433beab261624153c9bf39b1ed14430"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODMyMTIyNw==", "bodyText": "I changed to :it:kotlin for now.", "url": "https://github.com/line/armeria/pull/3020#discussion_r478321227", "createdAt": "2020-08-27T10:36:18Z", "author": {"login": "okue"}, "path": "settings.gradle", "diffHunk": "@@ -47,6 +47,7 @@ includeWithFlags ':javadoc',                             'java', 'publish', 'no_\n includeWithFlags ':benchmarks',              'java'\n includeWithFlags ':it:context-storage',      'java'\n includeWithFlags ':it:grpcweb',              'java', 'akka-grpc_2.13'\n+includeWithFlags ':it:kotlin:error-message', 'java', 'relocate'", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODA2NzQwMA=="}, "originalCommit": {"oid": "b249ad1ad433beab261624153c9bf39b1ed14430"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyODM1ODY0OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/com/linecorp/armeria/internal/server/annotation/AnnotatedServiceFactory.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QwNzowOTozM1rOHNyskw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QwOTo1MjoyNlrOHN4y6g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDIyNDE0Nw==", "bodyText": "Did we document about Kotlin suspending functions before? If so, how about adding a URL to the exception message? e.g.\nKotlin suspending functions are supported only when you added 'armeria-kotlin' as a dependency.\nSee https://armeria.dev/.... for more information.", "url": "https://github.com/line/armeria/pull/3020#discussion_r484224147", "createdAt": "2020-09-07T07:09:33Z", "author": {"login": "trustin"}, "path": "core/src/main/java/com/linecorp/armeria/internal/server/annotation/AnnotatedServiceFactory.java", "diffHunk": "@@ -242,6 +242,12 @@ private static HttpStatus defaultResponseStatus(Method method) {\n                                                 List<ResponseConverterFunction> baseResponseConverters,\n                                                 List<ExceptionHandlerFunction> baseExceptionHandlers) {\n \n+        if (KotlinUtil.getCallKotlinSuspendingMethod() == null && KotlinUtil.maybeSuspendingFunction(method)) {\n+            throw new IllegalArgumentException(\n+                    \"Kotlin suspending functions cannot be used. You should add the armeria-kotlin dependency.\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7fa752882fa42a704fb2b71c1c6daac6be1b6e3b"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDMyNDA3NA==", "bodyText": "OK, I added the URL to the exception message.", "url": "https://github.com/line/armeria/pull/3020#discussion_r484324074", "createdAt": "2020-09-07T09:52:26Z", "author": {"login": "okue"}, "path": "core/src/main/java/com/linecorp/armeria/internal/server/annotation/AnnotatedServiceFactory.java", "diffHunk": "@@ -242,6 +242,12 @@ private static HttpStatus defaultResponseStatus(Method method) {\n                                                 List<ResponseConverterFunction> baseResponseConverters,\n                                                 List<ExceptionHandlerFunction> baseExceptionHandlers) {\n \n+        if (KotlinUtil.getCallKotlinSuspendingMethod() == null && KotlinUtil.maybeSuspendingFunction(method)) {\n+            throw new IllegalArgumentException(\n+                    \"Kotlin suspending functions cannot be used. You should add the armeria-kotlin dependency.\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDIyNDE0Nw=="}, "originalCommit": {"oid": "7fa752882fa42a704fb2b71c1c6daac6be1b6e3b"}, "originalPosition": 6}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2280, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}