{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc0NzMxMjcw", "number": 2483, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QwOTo1ODoxMFrODfe60w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNVQwNzozODozNFrODgH34w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0MzM5MDI3OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/com/linecorp/armeria/client/AbstractClientOptionsBuilder.java", "isResolved": true, "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QwOTo1ODoxMFrOFpNiRg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxNDowNToyMFrOFpU-WA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODc1NzcwMg==", "bodyText": "How about moving to the internal package then?\nIt seems like only this class is going to be moved and done.", "url": "https://github.com/line/armeria/pull/2483#discussion_r378757702", "createdAt": "2020-02-13T09:58:10Z", "author": {"login": "minwoox"}, "path": "core/src/main/java/com/linecorp/armeria/client/AbstractClientOptionsBuilder.java", "diffHunk": "@@ -30,17 +30,23 @@\n import com.linecorp.armeria.common.HttpHeaders;\n import com.linecorp.armeria.common.HttpHeadersBuilder;\n import com.linecorp.armeria.common.RequestId;\n+import com.linecorp.armeria.common.util.UnstableApi;\n \n-class AbstractClientOptionsBuilder {\n+/**\n+ * A skeletal builder implementation for {@link ClientOptions}.\n+ * Note: This class is meant for internal use only.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dc8aad73befe54ff5015c105ef202b41b0137084"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODc2NTE4MA==", "bodyText": "I tried to move to the internal package first but AbstractClientOptionsBuilder access package-private method in ClientDecoration\n\n  \n    \n      armeria/core/src/main/java/com/linecorp/armeria/client/AbstractClientOptionsBuilder.java\n    \n    \n        Lines 100 to 102\n      in\n      6178d35\n    \n    \n    \n    \n\n        \n          \n           final ClientDecoration d = (ClientDecoration) optionValue.value(); \n        \n\n        \n          \n           d.decorators().forEach(decoration::add); \n        \n\n        \n          \n           d.rpcDecorators().forEach(decoration::addRpc); \n        \n    \n  \n\n\nI thought making this public with @Unstable annotation is better than change the method to public.\n\n  \n    \n      armeria/core/src/main/java/com/linecorp/armeria/client/ClientDecoration.java\n    \n    \n        Lines 78 to 84\n      in\n      8a67c58\n    \n    \n    \n    \n\n        \n          \n           List<Function<? super HttpClient, ? extends HttpClient>> decorators() { \n        \n\n        \n          \n               return decorators; \n        \n\n        \n          \n           } \n        \n\n        \n          \n            \n        \n\n        \n          \n           List<Function<? super RpcClient, ? extends RpcClient>> rpcDecorators() { \n        \n\n        \n          \n               return rpcDecorators; \n        \n\n        \n          \n           }", "url": "https://github.com/line/armeria/pull/2483#discussion_r378765180", "createdAt": "2020-02-13T10:12:15Z", "author": {"login": "ikhoon"}, "path": "core/src/main/java/com/linecorp/armeria/client/AbstractClientOptionsBuilder.java", "diffHunk": "@@ -30,17 +30,23 @@\n import com.linecorp.armeria.common.HttpHeaders;\n import com.linecorp.armeria.common.HttpHeadersBuilder;\n import com.linecorp.armeria.common.RequestId;\n+import com.linecorp.armeria.common.util.UnstableApi;\n \n-class AbstractClientOptionsBuilder {\n+/**\n+ * A skeletal builder implementation for {@link ClientOptions}.\n+ * Note: This class is meant for internal use only.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODc1NzcwMg=="}, "originalCommit": {"oid": "dc8aad73befe54ff5015c105ef202b41b0137084"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODc2OTE2OQ==", "bodyText": "As a follow-up of this pull request, how about adding ClientDecorationBuilder, so that AbstractClientOptionsBuilder can mutate/build a ClientDecoration without accessing package-private methods?", "url": "https://github.com/line/armeria/pull/2483#discussion_r378769169", "createdAt": "2020-02-13T10:19:43Z", "author": {"login": "trustin"}, "path": "core/src/main/java/com/linecorp/armeria/client/AbstractClientOptionsBuilder.java", "diffHunk": "@@ -30,17 +30,23 @@\n import com.linecorp.armeria.common.HttpHeaders;\n import com.linecorp.armeria.common.HttpHeadersBuilder;\n import com.linecorp.armeria.common.RequestId;\n+import com.linecorp.armeria.common.util.UnstableApi;\n \n-class AbstractClientOptionsBuilder {\n+/**\n+ * A skeletal builder implementation for {@link ClientOptions}.\n+ * Note: This class is meant for internal use only.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODc1NzcwMg=="}, "originalCommit": {"oid": "dc8aad73befe54ff5015c105ef202b41b0137084"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODc2OTI5NQ==", "bodyText": "Then, we could move AbstractrClientOptionsBuilder to internal.", "url": "https://github.com/line/armeria/pull/2483#discussion_r378769295", "createdAt": "2020-02-13T10:20:01Z", "author": {"login": "trustin"}, "path": "core/src/main/java/com/linecorp/armeria/client/AbstractClientOptionsBuilder.java", "diffHunk": "@@ -30,17 +30,23 @@\n import com.linecorp.armeria.common.HttpHeaders;\n import com.linecorp.armeria.common.HttpHeadersBuilder;\n import com.linecorp.armeria.common.RequestId;\n+import com.linecorp.armeria.common.util.UnstableApi;\n \n-class AbstractClientOptionsBuilder {\n+/**\n+ * A skeletal builder implementation for {@link ClientOptions}.\n+ * Note: This class is meant for internal use only.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODc1NzcwMg=="}, "originalCommit": {"oid": "dc8aad73befe54ff5015c105ef202b41b0137084"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODc5ODYzNQ==", "bodyText": "I tried to move to the internal package first but AbstractClientOptionsBuilder access package-private method in ClientDecoration\n\nAh, I didn't notice that. \ud83d\ude05", "url": "https://github.com/line/armeria/pull/2483#discussion_r378798635", "createdAt": "2020-02-13T11:16:41Z", "author": {"login": "minwoox"}, "path": "core/src/main/java/com/linecorp/armeria/client/AbstractClientOptionsBuilder.java", "diffHunk": "@@ -30,17 +30,23 @@\n import com.linecorp.armeria.common.HttpHeaders;\n import com.linecorp.armeria.common.HttpHeadersBuilder;\n import com.linecorp.armeria.common.RequestId;\n+import com.linecorp.armeria.common.util.UnstableApi;\n \n-class AbstractClientOptionsBuilder {\n+/**\n+ * A skeletal builder implementation for {@link ClientOptions}.\n+ * Note: This class is meant for internal use only.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODc1NzcwMg=="}, "originalCommit": {"oid": "dc8aad73befe54ff5015c105ef202b41b0137084"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODgxMjc5Ng==", "bodyText": "how about adding ClientDecorationBuilder, so that AbstractClientOptionsBuilder can mutate/build a ClientDecoration without accessing package-private methods?\n\nIIUC, you were meant to add addClientDecoration(ClientDecoration) to ClientDecorationBuilder?\nSorry, I don't thoroughly understand your direction. \ud83d\ude05", "url": "https://github.com/line/armeria/pull/2483#discussion_r378812796", "createdAt": "2020-02-13T11:48:46Z", "author": {"login": "ikhoon"}, "path": "core/src/main/java/com/linecorp/armeria/client/AbstractClientOptionsBuilder.java", "diffHunk": "@@ -30,17 +30,23 @@\n import com.linecorp.armeria.common.HttpHeaders;\n import com.linecorp.armeria.common.HttpHeadersBuilder;\n import com.linecorp.armeria.common.RequestId;\n+import com.linecorp.armeria.common.util.UnstableApi;\n \n-class AbstractClientOptionsBuilder {\n+/**\n+ * A skeletal builder implementation for {@link ClientOptions}.\n+ * Note: This class is meant for internal use only.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODc1NzcwMg=="}, "originalCommit": {"oid": "dc8aad73befe54ff5015c105ef202b41b0137084"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODg2NzE5OA==", "bodyText": "Oh, I completely forgot we have ClientDecorationBuilder already. \ud83e\udd23\nIf it's enough with adding just public ClientDecorationBuilder.add(ClientDecoration), then how about handling it in this PR?", "url": "https://github.com/line/armeria/pull/2483#discussion_r378867198", "createdAt": "2020-02-13T13:44:54Z", "author": {"login": "trustin"}, "path": "core/src/main/java/com/linecorp/armeria/client/AbstractClientOptionsBuilder.java", "diffHunk": "@@ -30,17 +30,23 @@\n import com.linecorp.armeria.common.HttpHeaders;\n import com.linecorp.armeria.common.HttpHeadersBuilder;\n import com.linecorp.armeria.common.RequestId;\n+import com.linecorp.armeria.common.util.UnstableApi;\n \n-class AbstractClientOptionsBuilder {\n+/**\n+ * A skeletal builder implementation for {@link ClientOptions}.\n+ * Note: This class is meant for internal use only.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODc1NzcwMg=="}, "originalCommit": {"oid": "dc8aad73befe54ff5015c105ef202b41b0137084"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODg3OTU3Ng==", "bodyText": "Sure, will handle it in this PR. :-)", "url": "https://github.com/line/armeria/pull/2483#discussion_r378879576", "createdAt": "2020-02-13T14:05:20Z", "author": {"login": "ikhoon"}, "path": "core/src/main/java/com/linecorp/armeria/client/AbstractClientOptionsBuilder.java", "diffHunk": "@@ -30,17 +30,23 @@\n import com.linecorp.armeria.common.HttpHeaders;\n import com.linecorp.armeria.common.HttpHeadersBuilder;\n import com.linecorp.armeria.common.RequestId;\n+import com.linecorp.armeria.common.util.UnstableApi;\n \n-class AbstractClientOptionsBuilder {\n+/**\n+ * A skeletal builder implementation for {@link ClientOptions}.\n+ * Note: This class is meant for internal use only.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODc1NzcwMg=="}, "originalCommit": {"oid": "dc8aad73befe54ff5015c105ef202b41b0137084"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0NjQwNjUwOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/com/linecorp/armeria/internal/client/AbstractClientOptionsBuilder.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQwMzo0MDoxMVrOFpqztQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQwNjoyMzo0OFrOFpspLA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTIzNzMwMQ==", "bodyText": "Hmm, I'm not sure if it's a good idea to expose empty() in the public API. How about this:\n\nRemove EMPTY and empty()\nChange the signiture of buildOptions() to:\n\nbuildOptions(@Nullable ClientOptions baseOptions) (We pass WebClient.options() in this PR, or null for other cases.)\n\n\nUse ClientOptions.of(baseOptions, optValArray) (if null, use ClientOptions.of(optValArray).", "url": "https://github.com/line/armeria/pull/2483#discussion_r379237301", "createdAt": "2020-02-14T03:40:11Z", "author": {"login": "trustin"}, "path": "core/src/main/java/com/linecorp/armeria/internal/client/AbstractClientOptionsBuilder.java", "diffHunk": "@@ -380,7 +386,7 @@ protected final ClientOptions buildOptions(boolean includeDefault) {\n         if (includeDefault) {\n             return ClientOptions.of(optValArray);\n         } else {\n-            return ClientOptions.of(ClientOptions.EMPTY, optValArray);\n+            return ClientOptions.of(ClientOptions.empty(), optValArray);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "56a2aedc7cb8aa760d1d5d3ab042a7c1cc883068"}, "originalPosition": 64}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTI2NzM3Mg==", "bodyText": "I'm not sure if it's a good idea to expose empty()\n\nThat was my considering point. buildOptions(@Nullable ClientOptions baseOptions) sounds good.\nThanks for reviewing \ud83d\udc4d", "url": "https://github.com/line/armeria/pull/2483#discussion_r379267372", "createdAt": "2020-02-14T06:23:48Z", "author": {"login": "ikhoon"}, "path": "core/src/main/java/com/linecorp/armeria/internal/client/AbstractClientOptionsBuilder.java", "diffHunk": "@@ -380,7 +386,7 @@ protected final ClientOptions buildOptions(boolean includeDefault) {\n         if (includeDefault) {\n             return ClientOptions.of(optValArray);\n         } else {\n-            return ClientOptions.of(ClientOptions.EMPTY, optValArray);\n+            return ClientOptions.of(ClientOptions.empty(), optValArray);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTIzNzMwMQ=="}, "originalCommit": {"oid": "56a2aedc7cb8aa760d1d5d3ab042a7c1cc883068"}, "originalPosition": 64}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0OTQ1NDM4OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/com/linecorp/armeria/client/ClientFactoryOptions.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNVQwMzoyMTowNVrOFqH5vA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNVQwMzoyMTowNVrOFqH5vA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTcxMzk4MA==", "bodyText": "Could use newValue.value() and oldValue.value() instead of calling .value() many times.", "url": "https://github.com/line/armeria/pull/2483#discussion_r379713980", "createdAt": "2020-02-15T03:21:05Z", "author": {"login": "trustin"}, "path": "core/src/main/java/com/linecorp/armeria/client/ClientFactoryOptions.java", "diffHunk": "@@ -411,4 +412,26 @@ public ConnectionPoolListener connectionPoolListener() {\n     public MeterRegistry meterRegistry() {\n         return get0(ClientFactoryOption.METER_REGISTRY);\n     }\n+\n+    @Override\n+    @SuppressWarnings(\"unchecked\")\n+    protected <T extends AbstractOptionValue<?, ?>> T mergeValue(T oldValue, T newValue) {\n+        if (oldValue.option() == ClientFactoryOption.CHANNEL_OPTIONS) {\n+            final ClientFactoryOptionValue<Map<ChannelOption<?>, Object>> castOldValue =\n+                    (ClientFactoryOptionValue<Map<ChannelOption<?>, Object>>) oldValue;\n+            final ClientFactoryOptionValue<Map<ChannelOption<?>, Object>> castNewValue =\n+                    (ClientFactoryOptionValue<Map<ChannelOption<?>, Object>>) newValue;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ecb54124614a0cb0c4ce28d775230ef030d25829"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0OTQ1NTI5OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/com/linecorp/armeria/client/ClientFactoryOptions.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNVQwMzoyMzozMFrOFqH6Jw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNVQwMzoyMzozMFrOFqH6Jw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTcxNDA4Nw==", "bodyText": "Probably better using oldValue's size + newValue's size? Not always optimal, but expansion is more expensive.\nCould just return the oldValue if newValue is empty (or newValue is oldValue is empty.)", "url": "https://github.com/line/armeria/pull/2483#discussion_r379714087", "createdAt": "2020-02-15T03:23:30Z", "author": {"login": "trustin"}, "path": "core/src/main/java/com/linecorp/armeria/client/ClientFactoryOptions.java", "diffHunk": "@@ -411,4 +412,26 @@ public ConnectionPoolListener connectionPoolListener() {\n     public MeterRegistry meterRegistry() {\n         return get0(ClientFactoryOption.METER_REGISTRY);\n     }\n+\n+    @Override\n+    @SuppressWarnings(\"unchecked\")\n+    protected <T extends AbstractOptionValue<?, ?>> T mergeValue(T oldValue, T newValue) {\n+        if (oldValue.option() == ClientFactoryOption.CHANNEL_OPTIONS) {\n+            final ClientFactoryOptionValue<Map<ChannelOption<?>, Object>> castOldValue =\n+                    (ClientFactoryOptionValue<Map<ChannelOption<?>, Object>>) oldValue;\n+            final ClientFactoryOptionValue<Map<ChannelOption<?>, Object>> castNewValue =\n+                    (ClientFactoryOptionValue<Map<ChannelOption<?>, Object>>) newValue;\n+            final ImmutableMap.Builder<ChannelOption<?>, Object> builder =\n+                    ImmutableMap.builderWithExpectedSize(castNewValue.value().size());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ecb54124614a0cb0c4ce28d775230ef030d25829"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0OTQ1NTgxOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/com/linecorp/armeria/client/ClientOptions.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNVQwMzoyNDo1OVrOFqH6bA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNVQwMzoyNDo1OVrOFqH6bA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTcxNDE1Ng==", "bodyText": "Could return oldDecoration or newDecoration if newDecoration or oldDecoration is empty respectively.", "url": "https://github.com/line/armeria/pull/2483#discussion_r379714156", "createdAt": "2020-02-15T03:24:59Z", "author": {"login": "trustin"}, "path": "core/src/main/java/com/linecorp/armeria/client/ClientOptions.java", "diffHunk": "@@ -208,6 +209,30 @@ private ClientOptions(ClientOptions baseOptions, ClientOptions additionalOptions\n         super(baseOptions, additionalOptions);\n     }\n \n+    @Override\n+    protected <T extends AbstractOptionValue<?, ?>> T mergeValue(T oldValue, T newValue) {\n+        if (oldValue.option() == DECORATION) {\n+            final ClientDecoration oldDecoration = (ClientDecoration) oldValue.value();\n+            final ClientDecoration newDecoration = (ClientDecoration) newValue.value();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ecb54124614a0cb0c4ce28d775230ef030d25829"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0OTQ1NTg4OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/com/linecorp/armeria/client/ClientOptions.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNVQwMzoyNToyMlrOFqH6eg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNVQwMzoyNToyMlrOFqH6eg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTcxNDE3MA==", "bodyText": "Ditto - Could optimize when either is empty.", "url": "https://github.com/line/armeria/pull/2483#discussion_r379714170", "createdAt": "2020-02-15T03:25:22Z", "author": {"login": "trustin"}, "path": "core/src/main/java/com/linecorp/armeria/client/ClientOptions.java", "diffHunk": "@@ -208,6 +209,30 @@ private ClientOptions(ClientOptions baseOptions, ClientOptions additionalOptions\n         super(baseOptions, additionalOptions);\n     }\n \n+    @Override\n+    protected <T extends AbstractOptionValue<?, ?>> T mergeValue(T oldValue, T newValue) {\n+        if (oldValue.option() == DECORATION) {\n+            final ClientDecoration oldDecoration = (ClientDecoration) oldValue.value();\n+            final ClientDecoration newDecoration = (ClientDecoration) newValue.value();\n+            final ClientDecoration merged = ClientDecoration.builder()\n+                                                            .add(oldDecoration)\n+                                                            .add(newDecoration)\n+                                                            .build();\n+            @SuppressWarnings(\"unchecked\")\n+            final T cast = (T) DECORATION.newValue(merged);\n+            return cast;\n+        } else if (oldValue.option() == HTTP_HEADERS) {\n+            final HttpHeaders oldHeaders = (HttpHeaders) oldValue.value();\n+            final HttpHeaders newHeaders = (HttpHeaders) newValue.value();\n+            final HttpHeaders merged = oldHeaders.toBuilder().setObject(newHeaders).build();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ecb54124614a0cb0c4ce28d775230ef030d25829"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1MDEwMDE5OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/com/linecorp/armeria/client/ClientOptions.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNVQwNzozODozNFrOFqMWFA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNVQwNzo0MjoyNFrOFqMavA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTc4Njc3Mg==", "bodyText": "How about adding ClientDecoration.isEmpty() and simplifying here?", "url": "https://github.com/line/armeria/pull/2483#discussion_r379786772", "createdAt": "2020-02-15T07:38:34Z", "author": {"login": "trustin"}, "path": "core/src/main/java/com/linecorp/armeria/client/ClientOptions.java", "diffHunk": "@@ -192,19 +177,70 @@ private static HttpHeaders filterHttpHeaders(HttpHeaders headers) {\n     }\n \n     private ClientOptions(ClientOptionValue<?>... options) {\n-        super(ClientOptions::filterValue, options);\n+        super(options);\n+    }\n+\n+    private ClientOptions(ClientOptions baseOptions, ClientOptionValue<?>... additionalOptions) {\n+        super(baseOptions, additionalOptions);\n     }\n \n-    private ClientOptions(ClientOptions clientOptions, ClientOptionValue<?>... options) {\n-        super(ClientOptions::filterValue, clientOptions, options);\n+    private ClientOptions(ClientOptions baseOptions, Iterable<ClientOptionValue<?>> additionalOptions) {\n+        super(baseOptions, additionalOptions);\n     }\n \n-    private ClientOptions(ClientOptions clientOptions, Iterable<ClientOptionValue<?>> options) {\n-        super(ClientOptions::filterValue, clientOptions, options);\n+    private ClientOptions(ClientOptions baseOptions, ClientOptions additionalOptions) {\n+        super(baseOptions, additionalOptions);\n     }\n \n-    private ClientOptions(ClientOptions clientOptions, ClientOptions options) {\n-        super(clientOptions, options);\n+    @Override\n+    protected <T extends AbstractOptionValue<?, ?>> T filterValue(T optionValue) {\n+        if (optionValue.option() == HTTP_HEADERS) {\n+            @SuppressWarnings(\"unchecked\")\n+            final ClientOption<HttpHeaders> castOption = (ClientOption<HttpHeaders>) optionValue.option();\n+            @SuppressWarnings(\"unchecked\")\n+            final T castOptionValue = (T) castOption.newValue(\n+                    filterHttpHeaders((HttpHeaders) optionValue.value()));\n+            return castOptionValue;\n+        }\n+        return optionValue;\n+    }\n+\n+    @Override\n+    protected <T extends AbstractOptionValue<?, ?>> T mergeValue(T oldValue, T newValue) {\n+        if (oldValue.option() == DECORATION) {\n+            final ClientDecoration oldDecoration = (ClientDecoration) oldValue.value();\n+            final ClientDecoration newDecoration = (ClientDecoration) newValue.value();\n+            if (oldDecoration.decorators().isEmpty() && oldDecoration.rpcDecorators().isEmpty()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d4445ebc99b8fb31902bfc5d22e30d0761c3e7b0"}, "originalPosition": 130}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTc4Nzk2NA==", "bodyText": "Oh, that sounds nice.", "url": "https://github.com/line/armeria/pull/2483#discussion_r379787964", "createdAt": "2020-02-15T07:42:24Z", "author": {"login": "ikhoon"}, "path": "core/src/main/java/com/linecorp/armeria/client/ClientOptions.java", "diffHunk": "@@ -192,19 +177,70 @@ private static HttpHeaders filterHttpHeaders(HttpHeaders headers) {\n     }\n \n     private ClientOptions(ClientOptionValue<?>... options) {\n-        super(ClientOptions::filterValue, options);\n+        super(options);\n+    }\n+\n+    private ClientOptions(ClientOptions baseOptions, ClientOptionValue<?>... additionalOptions) {\n+        super(baseOptions, additionalOptions);\n     }\n \n-    private ClientOptions(ClientOptions clientOptions, ClientOptionValue<?>... options) {\n-        super(ClientOptions::filterValue, clientOptions, options);\n+    private ClientOptions(ClientOptions baseOptions, Iterable<ClientOptionValue<?>> additionalOptions) {\n+        super(baseOptions, additionalOptions);\n     }\n \n-    private ClientOptions(ClientOptions clientOptions, Iterable<ClientOptionValue<?>> options) {\n-        super(ClientOptions::filterValue, clientOptions, options);\n+    private ClientOptions(ClientOptions baseOptions, ClientOptions additionalOptions) {\n+        super(baseOptions, additionalOptions);\n     }\n \n-    private ClientOptions(ClientOptions clientOptions, ClientOptions options) {\n-        super(clientOptions, options);\n+    @Override\n+    protected <T extends AbstractOptionValue<?, ?>> T filterValue(T optionValue) {\n+        if (optionValue.option() == HTTP_HEADERS) {\n+            @SuppressWarnings(\"unchecked\")\n+            final ClientOption<HttpHeaders> castOption = (ClientOption<HttpHeaders>) optionValue.option();\n+            @SuppressWarnings(\"unchecked\")\n+            final T castOptionValue = (T) castOption.newValue(\n+                    filterHttpHeaders((HttpHeaders) optionValue.value()));\n+            return castOptionValue;\n+        }\n+        return optionValue;\n+    }\n+\n+    @Override\n+    protected <T extends AbstractOptionValue<?, ?>> T mergeValue(T oldValue, T newValue) {\n+        if (oldValue.option() == DECORATION) {\n+            final ClientDecoration oldDecoration = (ClientDecoration) oldValue.value();\n+            final ClientDecoration newDecoration = (ClientDecoration) newValue.value();\n+            if (oldDecoration.decorators().isEmpty() && oldDecoration.rpcDecorators().isEmpty()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTc4Njc3Mg=="}, "originalCommit": {"oid": "d4445ebc99b8fb31902bfc5d22e30d0761c3e7b0"}, "originalPosition": 130}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3004, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}