{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDcwNjUyMTMx", "number": 3009, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQwNToyNjo0NFrOEaUFcg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQwNzozNToxNVrOEaXqCw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2MDI3NTA2OnYy", "diffSide": "RIGHT", "path": "settings.gradle", "isResolved": true, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQwNToyNjo0NFrOHDqkGA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQwMjowMDoxN1rOHEY_yw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzYwNTE0NA==", "bodyText": "Can't we just use :examples:thrift and :examples:grpc for :examples:grpc-example?\n(for dropwizard as well)", "url": "https://github.com/line/armeria/pull/3009#discussion_r473605144", "createdAt": "2020-08-20T05:26:44Z", "author": {"login": "minwoox"}, "path": "settings.gradle", "diffHunk": "@@ -88,3 +88,5 @@ includeWithFlags ':examples:spring-boot-minimal-kotlin',          'java'\n includeWithFlags ':examples:spring-boot-tomcat',                  'java'\n includeWithFlags ':examples:spring-boot-webflux',                 'java'\n includeWithFlags ':examples:static-files',                        'java'\n+includeWithFlags ':examples:thrift-example',                      'java'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3a49e4f8df9e18e4aaec89f8ddaee3dc94ad6001"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzYyMTQyOA==", "bodyText": "That sounds good!", "url": "https://github.com/line/armeria/pull/3009#discussion_r473621428", "createdAt": "2020-08-20T05:52:33Z", "author": {"login": "ikhoon"}, "path": "settings.gradle", "diffHunk": "@@ -88,3 +88,5 @@ includeWithFlags ':examples:spring-boot-minimal-kotlin',          'java'\n includeWithFlags ':examples:spring-boot-tomcat',                  'java'\n includeWithFlags ':examples:spring-boot-webflux',                 'java'\n includeWithFlags ':examples:static-files',                        'java'\n+includeWithFlags ':examples:thrift-example',                      'java'", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzYwNTE0NA=="}, "originalCommit": {"oid": "3a49e4f8df9e18e4aaec89f8ddaee3dc94ad6001"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDM2NDYwNA==", "bodyText": "How about leaving a comment for grpc-example why we use the different name\nwith the link? #2236 (comment)", "url": "https://github.com/line/armeria/pull/3009#discussion_r474364604", "createdAt": "2020-08-21T01:55:17Z", "author": {"login": "minwoox"}, "path": "settings.gradle", "diffHunk": "@@ -88,3 +88,5 @@ includeWithFlags ':examples:spring-boot-minimal-kotlin',          'java'\n includeWithFlags ':examples:spring-boot-tomcat',                  'java'\n includeWithFlags ':examples:spring-boot-webflux',                 'java'\n includeWithFlags ':examples:static-files',                        'java'\n+includeWithFlags ':examples:thrift-example',                      'java'", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzYwNTE0NA=="}, "originalCommit": {"oid": "3a49e4f8df9e18e4aaec89f8ddaee3dc94ad6001"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDM2NDc2NA==", "bodyText": "It did not work because of Gradle's known bug. gradle/gradle#847\nI only renamed examples:thrift-example to example:thrift because it is not conflict.", "url": "https://github.com/line/armeria/pull/3009#discussion_r474364764", "createdAt": "2020-08-21T01:56:02Z", "author": {"login": "ikhoon"}, "path": "settings.gradle", "diffHunk": "@@ -88,3 +88,5 @@ includeWithFlags ':examples:spring-boot-minimal-kotlin',          'java'\n includeWithFlags ':examples:spring-boot-tomcat',                  'java'\n includeWithFlags ':examples:spring-boot-webflux',                 'java'\n includeWithFlags ':examples:static-files',                        'java'\n+includeWithFlags ':examples:thrift-example',                      'java'", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzYwNTE0NA=="}, "originalCommit": {"oid": "3a49e4f8df9e18e4aaec89f8ddaee3dc94ad6001"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDM2NTA4MQ==", "bodyText": "Yes so how about leaving a comment so that everybody knows about it?", "url": "https://github.com/line/armeria/pull/3009#discussion_r474365081", "createdAt": "2020-08-21T01:57:10Z", "author": {"login": "minwoox"}, "path": "settings.gradle", "diffHunk": "@@ -88,3 +88,5 @@ includeWithFlags ':examples:spring-boot-minimal-kotlin',          'java'\n includeWithFlags ':examples:spring-boot-tomcat',                  'java'\n includeWithFlags ':examples:spring-boot-webflux',                 'java'\n includeWithFlags ':examples:static-files',                        'java'\n+includeWithFlags ':examples:thrift-example',                      'java'", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzYwNTE0NA=="}, "originalCommit": {"oid": "3a49e4f8df9e18e4aaec89f8ddaee3dc94ad6001"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDM2NTg5OQ==", "bodyText": "Yeap, let me leave a comment :-)", "url": "https://github.com/line/armeria/pull/3009#discussion_r474365899", "createdAt": "2020-08-21T02:00:17Z", "author": {"login": "ikhoon"}, "path": "settings.gradle", "diffHunk": "@@ -88,3 +88,5 @@ includeWithFlags ':examples:spring-boot-minimal-kotlin',          'java'\n includeWithFlags ':examples:spring-boot-tomcat',                  'java'\n includeWithFlags ':examples:spring-boot-webflux',                 'java'\n includeWithFlags ':examples:static-files',                        'java'\n+includeWithFlags ':examples:thrift-example',                      'java'", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzYwNTE0NA=="}, "originalCommit": {"oid": "3a49e4f8df9e18e4aaec89f8ddaee3dc94ad6001"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2MDg2MDI3OnYy", "diffSide": "RIGHT", "path": "examples/thrift/src/main/java/example/armeria/thrift/Main.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQwNzozNToxNVrOHDwWEA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQwMjoyODozMVrOHEZb4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzY5OTg1Ng==", "bodyText": "You don't need to specify class and method name for Thrift examples. Can use ..._args.", "url": "https://github.com/line/armeria/pull/3009#discussion_r473699856", "createdAt": "2020-08-20T07:35:15Z", "author": {"login": "trustin"}, "path": "examples/thrift/src/main/java/example/armeria/thrift/Main.java", "diffHunk": "@@ -0,0 +1,52 @@\n+package example.armeria.thrift;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import com.linecorp.armeria.server.Server;\n+import com.linecorp.armeria.server.docs.DocService;\n+import com.linecorp.armeria.server.thrift.THttpService;\n+\n+public final class Main {\n+\n+    private static final Logger logger = LoggerFactory.getLogger(Main.class);\n+\n+    public static void main(String[] args) throws Exception {\n+        final Server server = newServer(8080, 8443);\n+\n+        Runtime.getRuntime().addShutdownHook(new Thread(() -> {\n+            server.stop().join();\n+            logger.info(\"Server has been stopped.\");\n+        }));\n+\n+        server.start().join();\n+\n+        logger.info(\"Server has been started. Serving DocService at http://127.0.0.1:{}/docs\",\n+                    server.activeLocalPort());\n+    }\n+\n+    static Server newServer(int httpPort, int httpsPort) throws Exception {\n+        final HelloRequest exampleRequest = new HelloRequest(\"Armeria\");\n+        final THttpService thriftService =\n+                THttpService.builder()\n+                            .addService(new HelloServiceImpl())\n+                            .build();\n+        return Server.builder()\n+                     .http(httpPort)\n+                     .https(httpsPort)\n+                     .tlsSelfSigned()\n+                     .service(\"/\", thriftService)\n+                     // You can access the documentation service at http://127.0.0.1:8080/docs.\n+                     // See https://armeria.dev/docs/server-docservice for more information.\n+                     .serviceUnder(\"/docs\",\n+                                   DocService.builder()\n+                                             .exampleRequests(HelloService.class, \"hello\", exampleRequest)\n+                                             .exampleRequests(HelloService.class, \"lazyHello\", exampleRequest)\n+                                             .exampleRequests(HelloService.class, \"blockingHello\",\n+                                                              exampleRequest)\n+                                             .build())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f7adb202dbdbbc9f658bb31f06cb6499af8ffa9"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDM2NTY5Ng==", "bodyText": "Oops...", "url": "https://github.com/line/armeria/pull/3009#discussion_r474365696", "createdAt": "2020-08-21T01:59:32Z", "author": {"login": "ikhoon"}, "path": "examples/thrift/src/main/java/example/armeria/thrift/Main.java", "diffHunk": "@@ -0,0 +1,52 @@\n+package example.armeria.thrift;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import com.linecorp.armeria.server.Server;\n+import com.linecorp.armeria.server.docs.DocService;\n+import com.linecorp.armeria.server.thrift.THttpService;\n+\n+public final class Main {\n+\n+    private static final Logger logger = LoggerFactory.getLogger(Main.class);\n+\n+    public static void main(String[] args) throws Exception {\n+        final Server server = newServer(8080, 8443);\n+\n+        Runtime.getRuntime().addShutdownHook(new Thread(() -> {\n+            server.stop().join();\n+            logger.info(\"Server has been stopped.\");\n+        }));\n+\n+        server.start().join();\n+\n+        logger.info(\"Server has been started. Serving DocService at http://127.0.0.1:{}/docs\",\n+                    server.activeLocalPort());\n+    }\n+\n+    static Server newServer(int httpPort, int httpsPort) throws Exception {\n+        final HelloRequest exampleRequest = new HelloRequest(\"Armeria\");\n+        final THttpService thriftService =\n+                THttpService.builder()\n+                            .addService(new HelloServiceImpl())\n+                            .build();\n+        return Server.builder()\n+                     .http(httpPort)\n+                     .https(httpsPort)\n+                     .tlsSelfSigned()\n+                     .service(\"/\", thriftService)\n+                     // You can access the documentation service at http://127.0.0.1:8080/docs.\n+                     // See https://armeria.dev/docs/server-docservice for more information.\n+                     .serviceUnder(\"/docs\",\n+                                   DocService.builder()\n+                                             .exampleRequests(HelloService.class, \"hello\", exampleRequest)\n+                                             .exampleRequests(HelloService.class, \"lazyHello\", exampleRequest)\n+                                             .exampleRequests(HelloService.class, \"blockingHello\",\n+                                                              exampleRequest)\n+                                             .build())", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzY5OTg1Ng=="}, "originalCommit": {"oid": "8f7adb202dbdbbc9f658bb31f06cb6499af8ffa9"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDM3MzA4OA==", "bodyText": "Fixed.", "url": "https://github.com/line/armeria/pull/3009#discussion_r474373088", "createdAt": "2020-08-21T02:28:31Z", "author": {"login": "ikhoon"}, "path": "examples/thrift/src/main/java/example/armeria/thrift/Main.java", "diffHunk": "@@ -0,0 +1,52 @@\n+package example.armeria.thrift;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import com.linecorp.armeria.server.Server;\n+import com.linecorp.armeria.server.docs.DocService;\n+import com.linecorp.armeria.server.thrift.THttpService;\n+\n+public final class Main {\n+\n+    private static final Logger logger = LoggerFactory.getLogger(Main.class);\n+\n+    public static void main(String[] args) throws Exception {\n+        final Server server = newServer(8080, 8443);\n+\n+        Runtime.getRuntime().addShutdownHook(new Thread(() -> {\n+            server.stop().join();\n+            logger.info(\"Server has been stopped.\");\n+        }));\n+\n+        server.start().join();\n+\n+        logger.info(\"Server has been started. Serving DocService at http://127.0.0.1:{}/docs\",\n+                    server.activeLocalPort());\n+    }\n+\n+    static Server newServer(int httpPort, int httpsPort) throws Exception {\n+        final HelloRequest exampleRequest = new HelloRequest(\"Armeria\");\n+        final THttpService thriftService =\n+                THttpService.builder()\n+                            .addService(new HelloServiceImpl())\n+                            .build();\n+        return Server.builder()\n+                     .http(httpPort)\n+                     .https(httpsPort)\n+                     .tlsSelfSigned()\n+                     .service(\"/\", thriftService)\n+                     // You can access the documentation service at http://127.0.0.1:8080/docs.\n+                     // See https://armeria.dev/docs/server-docservice for more information.\n+                     .serviceUnder(\"/docs\",\n+                                   DocService.builder()\n+                                             .exampleRequests(HelloService.class, \"hello\", exampleRequest)\n+                                             .exampleRequests(HelloService.class, \"lazyHello\", exampleRequest)\n+                                             .exampleRequests(HelloService.class, \"blockingHello\",\n+                                                              exampleRequest)\n+                                             .build())", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzY5OTg1Ng=="}, "originalCommit": {"oid": "8f7adb202dbdbbc9f658bb31f06cb6499af8ffa9"}, "originalPosition": 47}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2266, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}