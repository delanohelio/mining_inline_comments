{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQzNDY0NTY1", "number": 3240, "title": "Remove a class name of cglib from `serviceName`", "bodyText": "Motivation:\nSpring proxies a bean using cglib to intecept a method.\nThis makes serviceName of RequestLog dirty and decrease readability in access logs or metrics.\nModifications:\n\nRemove the cglib class name from serviceNames of annotated services.\nAdd proper default names instead of lambda class names produced by JDK.\n\nResult:\n\nYou no longer see a cglib class name from serviceName.\nFixes #3103", "createdAt": "2020-12-21T12:49:48Z", "url": "https://github.com/line/armeria/pull/3240", "merged": true, "mergeCommit": {"oid": "6d2986cf0bba0694d0a6b166ee6edb050f142b44"}, "closed": true, "closedAt": "2020-12-24T07:41:09Z", "author": {"login": "ikhoon"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdogtFqgH2gAyNTQzNDY0NTY1OmIzMjMxN2Q3MDQ1NGY4MjQ0NWM1ZTU5ZDkxODllYjAwZmI5MDA2NmU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdpNczAgFqTU1ODM1NTkzMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "b32317d70454f82445c5e59d9189eb00fb90066e", "author": {"user": {"login": "ikhoon", "name": "Ikhun Um"}}, "url": "https://github.com/line/armeria/commit/b32317d70454f82445c5e59d9189eb00fb90066e", "committedDate": "2020-12-22T02:00:25Z", "message": "Remove a class name of cglib from `serviceName`\n\nMotivation:\n\nSpring proxies a bean using [cglib](https://www.baeldung.com/cglib) to intecept a method.\nThis makes serviceName of `RequestLog` dirty and decrease readability in access logs or metrics.\n\nModifications:\n\n- Remove cglib class name from `serviceName` of annotated services.\n- Add proper default name instead of lambda class name produced by JDK.\n\nResult:\n\n- You no longer see a cglib class name from `serviceName`.\n- Fixes #3103"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b72668d4925c6a173a04ce4d1a62c9613db8b9f7", "author": {"user": {"login": "ikhoon", "name": "Ikhun Um"}}, "url": "https://github.com/line/armeria/commit/b72668d4925c6a173a04ce4d1a62c9613db8b9f7", "committedDate": "2020-12-21T14:09:06Z", "message": "[wip] Reflect serviceName to DocService"}, "afterCommit": {"oid": "b32317d70454f82445c5e59d9189eb00fb90066e", "author": {"user": {"login": "ikhoon", "name": "Ikhun Um"}}, "url": "https://github.com/line/armeria/commit/b32317d70454f82445c5e59d9189eb00fb90066e", "committedDate": "2020-12-22T02:00:25Z", "message": "Remove a class name of cglib from `serviceName`\n\nMotivation:\n\nSpring proxies a bean using [cglib](https://www.baeldung.com/cglib) to intecept a method.\nThis makes serviceName of `RequestLog` dirty and decrease readability in access logs or metrics.\n\nModifications:\n\n- Remove cglib class name from `serviceName` of annotated services.\n- Add proper default name instead of lambda class name produced by JDK.\n\nResult:\n\n- You no longer see a cglib class name from `serviceName`.\n- Fixes #3103"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU2OTM4MjEy", "url": "https://github.com/line/armeria/pull/3240#pullrequestreview-556938212", "createdAt": "2020-12-22T09:28:56Z", "commit": {"oid": "b32317d70454f82445c5e59d9189eb00fb90066e"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQwOToyODo1NlrOIJ0Z0w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQwOToyODo1NlrOIJ0Z0w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzE2NjY3NQ==", "bodyText": "Could you add some Javadoc about what this is trying to test? You could add an explanation for CGLIB byte code generation done by Spring.", "url": "https://github.com/line/armeria/pull/3240#discussion_r547166675", "createdAt": "2020-12-22T09:28:56Z", "author": {"login": "trustin"}, "path": "spring/boot2-autoconfigure/src/test/java/com/linecorp/armeria/spring/CgLibServiceNameTest.java", "diffHunk": "@@ -0,0 +1,87 @@\n+/*\n+ * Copyright 2020 LINE Corporation\n+ *\n+ * LINE Corporation licenses this file to you under the Apache License,\n+ * version 2.0 (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *   https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package com.linecorp.armeria.spring;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+\n+import java.util.concurrent.atomic.AtomicReference;\n+\n+import javax.inject.Inject;\n+\n+import org.junit.jupiter.api.Test;\n+import org.junit.runner.RunWith;\n+import org.springframework.boot.autoconfigure.SpringBootApplication;\n+import org.springframework.boot.test.context.SpringBootTest;\n+import org.springframework.boot.test.context.SpringBootTest.WebEnvironment;\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.stereotype.Component;\n+import org.springframework.test.context.ActiveProfiles;\n+import org.springframework.test.context.junit4.SpringRunner;\n+import org.springframework.validation.annotation.Validated;\n+\n+import com.linecorp.armeria.client.WebClient;\n+import com.linecorp.armeria.common.HttpResponse;\n+import com.linecorp.armeria.common.HttpStatus;\n+import com.linecorp.armeria.common.logging.RequestLog;\n+import com.linecorp.armeria.common.logging.RequestLogAccess;\n+import com.linecorp.armeria.server.Server;\n+import com.linecorp.armeria.server.annotation.Get;\n+import com.linecorp.armeria.spring.CgLibServiceNameTest.TestConfiguration;\n+import com.linecorp.armeria.spring.CgLibServiceNameTest.TestConfiguration.MyAnnotatedService;\n+\n+@RunWith(SpringRunner.class)\n+@SpringBootTest(classes = TestConfiguration.class, webEnvironment = WebEnvironment.NONE)\n+@ActiveProfiles({ \"local\", \"autoConfTest\" })\n+class CgLibServiceNameTest {\n+\n+    private static final AtomicReference<RequestLogAccess> logRef = new AtomicReference<>();\n+\n+    @SpringBootApplication\n+    public static class TestConfiguration {\n+\n+        @Validated\n+        @Component\n+        public class MyAnnotatedService {\n+            @Get(\"/hello\")\n+            public HttpResponse world() {\n+                return HttpResponse.of(HttpStatus.OK);\n+            }\n+        }\n+\n+        @Bean\n+        public ArmeriaServerConfigurator annotatedService(MyAnnotatedService annotatedService) {\n+            return sb -> {\n+                sb.annotatedService(annotatedService);\n+                sb.decorator((delegate, ctx, req) -> {\n+                    logRef.set(ctx.log());\n+                    return delegate.serve(ctx, req);\n+                });\n+            };\n+        }\n+    }\n+\n+    @Inject\n+    private Server server;\n+\n+    @Test\n+    void normalizedServiceName() throws InterruptedException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b32317d70454f82445c5e59d9189eb00fb90066e"}, "originalPosition": 81}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9572ae4d35d7c5ff5e1f8f4083fe576bc748503b", "author": {"user": {"login": "ikhoon", "name": "Ikhun Um"}}, "url": "https://github.com/line/armeria/commit/9572ae4d35d7c5ff5e1f8f4083fe576bc748503b", "committedDate": "2020-12-22T15:12:39Z", "message": "Address comments by @trustin"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "87fb08f1ee922e90234e3c82a60347f031a88100", "author": {"user": {"login": "ikhoon", "name": "Ikhun Um"}}, "url": "https://github.com/line/armeria/commit/87fb08f1ee922e90234e3c82a60347f031a88100", "committedDate": "2020-12-22T14:54:27Z", "message": "Address comments by @trustin"}, "afterCommit": {"oid": "9572ae4d35d7c5ff5e1f8f4083fe576bc748503b", "author": {"user": {"login": "ikhoon", "name": "Ikhun Um"}}, "url": "https://github.com/line/armeria/commit/9572ae4d35d7c5ff5e1f8f4083fe576bc748503b", "committedDate": "2020-12-22T15:12:39Z", "message": "Address comments by @trustin"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cc831c52974be5f2bf66c3c430242cfa496cb089", "author": {"user": {"login": "ikhoon", "name": "Ikhun Um"}}, "url": "https://github.com/line/armeria/commit/cc831c52974be5f2bf66c3c430242cfa496cb089", "committedDate": "2020-12-22T15:42:24Z", "message": "Checkstyle"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "934277d0d544c8967c29d6f6cc153ab59a72bf7a", "author": {"user": {"login": "ikhoon", "name": "Ikhun Um"}}, "url": "https://github.com/line/armeria/commit/934277d0d544c8967c29d6f6cc153ab59a72bf7a", "committedDate": "2020-12-23T06:17:00Z", "message": "Use JUnit4 for Spring Boot 1"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU4MzMyNDE3", "url": "https://github.com/line/armeria/pull/3240#pullrequestreview-558332417", "createdAt": "2020-12-24T04:40:39Z", "commit": {"oid": "934277d0d544c8967c29d6f6cc153ab59a72bf7a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNFQwNDo0MDozOVrOIK-aGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNFQwNDo0MDozOVrOIK-aGQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODM3OTE2MQ==", "bodyText": "Thanks!", "url": "https://github.com/line/armeria/pull/3240#discussion_r548379161", "createdAt": "2020-12-24T04:40:39Z", "author": {"login": "trustin"}, "path": "spring/boot2-autoconfigure/src/test/java/com/linecorp/armeria/spring/CgLibServiceNameTest.java", "diffHunk": "@@ -0,0 +1,101 @@\n+/*\n+ * Copyright 2020 LINE Corporation\n+ *\n+ * LINE Corporation licenses this file to you under the Apache License,\n+ * version 2.0 (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *   https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package com.linecorp.armeria.spring;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+\n+import java.util.concurrent.atomic.AtomicReference;\n+\n+import javax.annotation.Nullable;\n+import javax.inject.Inject;\n+\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.springframework.boot.autoconfigure.SpringBootApplication;\n+import org.springframework.boot.test.context.SpringBootTest;\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.stereotype.Component;\n+import org.springframework.test.context.ActiveProfiles;\n+import org.springframework.test.context.junit4.SpringRunner;\n+import org.springframework.validation.annotation.Validated;\n+\n+import com.linecorp.armeria.client.WebClient;\n+import com.linecorp.armeria.common.HttpResponse;\n+import com.linecorp.armeria.common.HttpStatus;\n+import com.linecorp.armeria.common.logging.RequestLog;\n+import com.linecorp.armeria.common.logging.RequestLogAccess;\n+import com.linecorp.armeria.server.Server;\n+import com.linecorp.armeria.server.annotation.Get;\n+import com.linecorp.armeria.spring.CgLibServiceNameTest.TestConfiguration;\n+import com.linecorp.armeria.spring.CgLibServiceNameTest.TestConfiguration.MyAnnotatedService;\n+\n+@RunWith(SpringRunner.class)\n+@SpringBootTest(classes = TestConfiguration.class)\n+@ActiveProfiles({ \"local\", \"autoConfTest\" })\n+public class CgLibServiceNameTest {\n+\n+    private static final AtomicReference<RequestLogAccess> logRef = new AtomicReference<>();\n+\n+    @Nullable\n+    private static MyAnnotatedService proxiedMyAnnotatedService;\n+\n+    @SpringBootApplication\n+    public static class TestConfiguration {\n+\n+        @Validated\n+        @Component\n+        public class MyAnnotatedService {\n+            @Get(\"/hello\")\n+            public HttpResponse world() {\n+                return HttpResponse.of(HttpStatus.OK);\n+            }\n+        }\n+\n+        @Bean\n+        public ArmeriaServerConfigurator annotatedService(MyAnnotatedService annotatedService) {\n+            proxiedMyAnnotatedService = annotatedService;\n+            return sb -> {\n+                sb.annotatedService(annotatedService);\n+                sb.decorator((delegate, ctx, req) -> {\n+                    logRef.set(ctx.log());\n+                    return delegate.serve(ctx, req);\n+                });\n+            };\n+        }\n+    }\n+\n+    @Inject\n+    private Server server;\n+\n+    /**\n+     * Verifies that a default service name returned by RequestLog is a user-defined class name.\n+     * The user-defined class could be changed at runtime by Spring which uses cglib for generation of\n+     * dynamic proxies. For example, if a class is annotated with `@Validated`,\n+     * a proxy class of MyAnnotatedService, such as MyAnnotatedService$$EnhancerBySpringCGLIB$$1a2b3c4d,\n+     * will be injected instead.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "934277d0d544c8967c29d6f6cc153ab59a72bf7a"}, "originalPosition": 89}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU4MzU1OTMz", "url": "https://github.com/line/armeria/pull/3240#pullrequestreview-558355933", "createdAt": "2020-12-24T06:08:21Z", "commit": {"oid": "934277d0d544c8967c29d6f6cc153ab59a72bf7a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4570, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}