{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEyNDEzOTEw", "number": 2685, "title": "Fix a bug where `HttpStreamReader` calls deframer multiple times with\u2026", "bodyText": "\u2026 endOfStream.\nMotivation:\nIf ArmeriaMessageDefarmer.deframe(HttpData, endOfStream) is called with endOfStream more than once,\nit will throws IlligalStateException.\nThis happens intermittently due to a race condition like the following:\n\nHttpStreamReader received all data from publisher and added them to unprocessed of deframer.\nA gRPC client does not request next messages yet, so deframer still has unprocessedBytes and is not stalled.\nHttpStreamReader receives onCompleted signal and closes deframer.\nA gRPC client requests a message and the received message contains trailers, so ArmeriaClientCall tries to close deframer.\n\nModifications:\n\nAdd isClosing() method to ArmeriaMessageDefarmer, it returns whether or not closeWhenComplete is true\nDo not close deframer, if defarmer is closing.\n\nResult:\ngRPC client can request unprocessed bytes even if HttpStreamReader was completed.", "createdAt": "2020-05-02T07:42:42Z", "url": "https://github.com/line/armeria/pull/2685", "merged": true, "mergeCommit": {"oid": "17ad454c06471ff174c06fabc251a6f0bef8985c"}, "closed": true, "closedAt": "2020-05-07T07:37:27Z", "author": {"login": "ikhoon"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcdo61UgH2gAyNDEyNDEzOTEwOmI5NmFkY2FiMjBiNjNkNzc1ZThkYzdiODkyMGQwOGRmYTMwYTI5YTA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABce0Jf_gH2gAyNDEyNDEzOTEwOjI0ZGVmOWFkMTIzZTYzNDExNWEyZWVkODA5NzYwNGYwMGJhZGJmZjk=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "b96adcab20b63d775e8dc7b8920d08dfa30a29a0", "author": {"user": {"login": "ikhoon", "name": "Ikhun Um"}}, "url": "https://github.com/line/armeria/commit/b96adcab20b63d775e8dc7b8920d08dfa30a29a0", "committedDate": "2020-05-03T11:10:21Z", "message": "Fix a bug where `HttpStreamReader` calls deframer multiple times with endOfStream.\n\nMotivation:\n\nIf `ArmeriaMessageDefarmer.deframe(HttpData, endOfStream)` is called with `endOfStream` more than once,\nit will throws `IlligalStateException`.\nThis happens intermittently due to a race condition like the following:\n\n1) `HttpStreamReader` received all data from publisher and added them to unprocessed of `deframer`.\n2) A gRPC client does not request next messages yet, so `deframer` still has unprocessedBytes and is not stalled.\n3) `HttpStreamReader` receives onCompleted signal and closes `deframer`.\n4) A gRPC client requests a message and the received message contains trailers, so `ArmeriaClientCall` tries to close deframer.\n\nModifications:\n\n- Add `isClosing()` method to `ArmeriaMessageDefarmer`, it returns whether or not `closeWhenComplete` is `true`\n- Do not close `deframer`, if `defarmer` is closing.\n\nResult:\ngRPC client can request unprocessed bytes even if `HttpStreamReader` was completed."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c75db73eda0d9bb451262a163a98346f94eec296", "author": {"user": {"login": "ikhoon", "name": "Ikhun Um"}}, "url": "https://github.com/line/armeria/commit/c75db73eda0d9bb451262a163a98346f94eec296", "committedDate": "2020-05-02T07:40:36Z", "message": "Fix a bug where `HttpStreamReader` calls deframer multiple times with endOfStream.\n\nMotivation:\n\nIf `ArmeriaMessageDefarmer.deframe(HttpData, endOfStream)` is called with `endOfStream` more than once,\nit will throws `IlligalStateException`.\nThis happens intermittently due to a race condition like the following:\n\n1) `HttpStreamReader` received all data from publisher and added them to unprocessed of `deframer`.\n2) A gRPC client does not request next messages yet, so `deframer` still has unprocessedBytes and is not stalled.\n3) `HttpStreamReader` receives onCompleted signal and closes `deframer`.\n4) A gRPC client requests a message and the received message contains trailers, so `ArmeriaClientCall` tries to close deframer.\n\nModifications:\n\n- Add `isClosing()` method to `ArmeriaMessageDefarmer`, it returns whether or not `closeWhenComplete` is `true`\n- Do not close `deframer`, if `defarmer` is closing.\n- Miscellaneous\n  - Make `HttpStreamReader` handle `onComplete` and `onError` signal correctly.\n\nResult:\ngRPC client can request unprocessed bytes even if `HttpStreamReader` was completed."}, "afterCommit": {"oid": "b96adcab20b63d775e8dc7b8920d08dfa30a29a0", "author": {"user": {"login": "ikhoon", "name": "Ikhun Um"}}, "url": "https://github.com/line/armeria/commit/b96adcab20b63d775e8dc7b8920d08dfa30a29a0", "committedDate": "2020-05-03T11:10:21Z", "message": "Fix a bug where `HttpStreamReader` calls deframer multiple times with endOfStream.\n\nMotivation:\n\nIf `ArmeriaMessageDefarmer.deframe(HttpData, endOfStream)` is called with `endOfStream` more than once,\nit will throws `IlligalStateException`.\nThis happens intermittently due to a race condition like the following:\n\n1) `HttpStreamReader` received all data from publisher and added them to unprocessed of `deframer`.\n2) A gRPC client does not request next messages yet, so `deframer` still has unprocessedBytes and is not stalled.\n3) `HttpStreamReader` receives onCompleted signal and closes `deframer`.\n4) A gRPC client requests a message and the received message contains trailers, so `ArmeriaClientCall` tries to close deframer.\n\nModifications:\n\n- Add `isClosing()` method to `ArmeriaMessageDefarmer`, it returns whether or not `closeWhenComplete` is `true`\n- Do not close `deframer`, if `defarmer` is closing.\n\nResult:\ngRPC client can request unprocessed bytes even if `HttpStreamReader` was completed."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA0Njk0NTg5", "url": "https://github.com/line/armeria/pull/2685#pullrequestreview-404694589", "createdAt": "2020-05-04T03:24:09Z", "commit": {"oid": "b96adcab20b63d775e8dc7b8920d08dfa30a29a0"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b4e69db528762b06e9047b430a02eee902143967", "author": {"user": {"login": "ikhoon", "name": "Ikhun Um"}}, "url": "https://github.com/line/armeria/commit/b4e69db528762b06e9047b430a02eee902143967", "committedDate": "2020-05-04T03:46:22Z", "message": "Fix test"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA0Nzc2OTU2", "url": "https://github.com/line/armeria/pull/2685#pullrequestreview-404776956", "createdAt": "2020-05-04T08:02:41Z", "commit": {"oid": "b4e69db528762b06e9047b430a02eee902143967"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQwODowMjo0MVrOGP2MKg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQwODowMzo1N1rOGP2OZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTI2OTY3NA==", "bodyText": "Is this necessary?", "url": "https://github.com/line/armeria/pull/2685#discussion_r419269674", "createdAt": "2020-05-04T08:02:41Z", "author": {"login": "minwoox"}, "path": "grpc-protocol/src/main/java/com/linecorp/armeria/common/grpc/protocol/ArmeriaMessageDeframer.java", "diffHunk": "@@ -317,6 +317,7 @@ public void close() {\n                 unprocessed.forEach(ByteBuf::release);\n             } finally {\n                 unprocessed = null;\n+                closeWhenComplete = false;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b4e69db528762b06e9047b430a02eee902143967"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTI3MDI0NA==", "bodyText": "Can we handle this without using BiFunction?", "url": "https://github.com/line/armeria/pull/2685#discussion_r419270244", "createdAt": "2020-05-04T08:03:57Z", "author": {"login": "minwoox"}, "path": "grpc/src/main/java/com/linecorp/armeria/internal/common/grpc/HttpStreamReader.java", "diffHunk": "@@ -166,12 +166,12 @@ public void onNext(HttpObject obj) {\n \n     @Override\n     public void onError(Throwable cause) {\n-        // Handled by accept() below.\n+        // Handled by apply() below.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b4e69db528762b06e9047b430a02eee902143967"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA0ODIzMDgw", "url": "https://github.com/line/armeria/pull/2685#pullrequestreview-404823080", "createdAt": "2020-05-04T09:15:34Z", "commit": {"oid": "b4e69db528762b06e9047b430a02eee902143967"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA2Mjc4ODY1", "url": "https://github.com/line/armeria/pull/2685#pullrequestreview-406278865", "createdAt": "2020-05-06T03:05:27Z", "commit": {"oid": "b4e69db528762b06e9047b430a02eee902143967"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQwMzowNToyN1rOGRCmNg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQwMzowNToyN1rOGRCmNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDUyMTUyNg==", "bodyText": "isClosing() in other API often implies that it will return true after it's closed. How about renaming it to something else? e.g. needsToCloseWhenComplete()?", "url": "https://github.com/line/armeria/pull/2685#discussion_r420521526", "createdAt": "2020-05-06T03:05:27Z", "author": {"login": "trustin"}, "path": "grpc-protocol/src/main/java/com/linecorp/armeria/common/grpc/protocol/ArmeriaMessageDeframer.java", "diffHunk": "@@ -325,6 +326,13 @@ public void close() {\n         }\n     }\n \n+    /**\n+     * Indicates whether or not this deframer is closing.\n+     */\n+    public boolean isClosing() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b4e69db528762b06e9047b430a02eee902143967"}, "originalPosition": 15}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "24def9ad123e634115a2eed8097604f00badbff9", "author": {"user": {"login": "ikhoon", "name": "Ikhun Um"}}, "url": "https://github.com/line/armeria/commit/24def9ad123e634115a2eed8097604f00badbff9", "committedDate": "2020-05-07T02:49:15Z", "message": "Make 'isClosing()' return true after closing"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 422, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}