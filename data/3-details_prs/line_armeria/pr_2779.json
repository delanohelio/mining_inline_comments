{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI4MzY2OTM1", "number": 2779, "title": "Provide type parameter information to `RequestConverterFunction`", "bodyText": "Motivation:\nSome generic converters such as JacksonRequestConverterFunction need\nto get the complete type parameter information from annotated service\nmethods, so that the type of elements of a container type is known.\nFor example, let's say a user posts a JSON array:\n[1, 2, 3]\n\nto an annotated service method:\n@Post(\"/post\")\npublic String post(List<Long> values) {\n    return Joiner.on(\", \").join(values);\n}\n\nWithout proper type parameter information, JacksonRequestConverterFunction\ncannot convert the elements into Long.\nModifications:\n\n(Breaking) Changed the signature of RequestConverterFunction.convertRequest()\nso that a converter is given with ParameterizedType.\n(Breaking) Optional is now always handled automatically.\n\nIf you wrote a RequestConverterFunction that converts to an Optional, it will not work anymore. Return null instead.\n\n\n(Breaking) Without @Nullable, null will never be injected into a request object,\nwhich was possible when a RequestConverterFunction returns null.\n\nAdd @Nullable if your converter returns null.\n\n\nMade sure ParameterizedType is passed to the request converter when\nnecessary.\nMicellaneous:\n\nA value can now be converted to AsciiString, CharSequence or Object.\nJacksonRequestConverterFunction now knows how to convert to\nTreeNode and JsonNode.\n\n\n\nResult:\n\nCloses #2769\nJacksonRequestConverterFunction now considers type parameters during\nconversion.\nA user can write more complex request object converter.\nCan inject CharSequence, AsciiString and Object now.\n(Breaking) Changed the signature of RequestConverterFunction.convertRequest()\nso that a converter is given with ParameterizedType.\n(Breaking) Optional is now always handled automatically.\n\nIf you wrote a RequestConverterFunction that converts to an Optional, it will not work anymore. Return null instead.\n\n\n(Breaking) Without @Nullable, null will never be injected into a request object,\nwhich was possible when a RequestConverterFunction returns null.\n\nAdd @Nullable if your converter returns null.", "createdAt": "2020-06-05T10:34:12Z", "url": "https://github.com/line/armeria/pull/2779", "merged": true, "mergeCommit": {"oid": "2255dfa7c8f36d0a8861f763ed00361d4f4a153a"}, "closed": true, "closedAt": "2020-06-16T09:30:13Z", "author": {"login": "trustin"}, "timelineItems": {"totalCount": 19, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcoQKzYAH2gAyNDI4MzY2OTM1OmVhZGMyM2E0ZmU2NzMyODY0M2ZhNDQ0OGEzNmQ3MjExZjhlNTY4ODQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcrwZBcAFqTQzMTI0MzcwNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "eadc23a4fe67328643fa4448a36d7211f8e56884", "author": {"user": {"login": "trustin", "name": "Trustin Lee"}}, "url": "https://github.com/line/armeria/commit/eadc23a4fe67328643fa4448a36d7211f8e56884", "committedDate": "2020-06-05T10:33:20Z", "message": "Provide type parameter information to `RequestConverterFunction`\n\nMotivation:\n\nSome generic converters such as `JacksonRequestConverterFunction` need\nto get the complete type parameter information from annotated service\nmethods, so that the type of elements of a container type is known.\n\nFor example, let's say a user posts a JSON array:\n\n    [1, 2, 3]\n\nto an annotated service method:\n\n    @Post(\"/post\")\n    public String post(List<Long> values) {\n        return Joiner.on(\", \").join(values);\n    }\n\nWithout proper type parameter information, `JacksonRequestConverterFunction`\ncannot convert the elements into `Long`.\n\nModifications:\n\n- (Breaking) Changed the signature of `RequestConverterFunction.convertRequest()`\n  so that a converter is given with `ParameterizedType`.\n- Made sure `ParameterizedType` is passed to the request converter when\n  necessary.\n- Micellaneous:\n  - A value can now be converted to `AsciiString`, `CharSequence` or `Object`.\n  - `JacksonRequestConverterFunction` now knows how to convert to\n    `TreeNode` and `JsonNode`.\n\nResult:\n\n- Closes #2769\n- `JacksonRequestConverterFunction` now considers type parameters during\n  conversion.\n- A user can write more complex request object converter.\n- Can inject `CharSequence`, `AsciiString` and `Object` now."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a342304676b3f25154552e187ed84baaccb833f1", "author": {"user": {"login": "trustin", "name": "Trustin Lee"}}, "url": "https://github.com/line/armeria/commit/a342304676b3f25154552e187ed84baaccb833f1", "committedDate": "2020-06-05T10:37:09Z", "message": "Javadoc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f6d68db588d2f99a4926e8c537ac65098c44ae52", "author": {"user": {"login": "trustin", "name": "Trustin Lee"}}, "url": "https://github.com/line/armeria/commit/f6d68db588d2f99a4926e8c537ac65098c44ae52", "committedDate": "2020-06-05T10:38:39Z", "message": "Checkstyle"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ea0295e7602fd03e85135e713d3fd7dd6807474a", "author": {"user": {"login": "trustin", "name": "Trustin Lee"}}, "url": "https://github.com/line/armeria/commit/ea0295e7602fd03e85135e713d3fd7dd6807474a", "committedDate": "2020-06-05T10:48:36Z", "message": "Remove `supportOptional`, because `Optional` is now always supported"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "296719ba8ccb08ca3587447dc43a1b668388aac5", "author": {"user": {"login": "trustin", "name": "Trustin Lee"}}, "url": "https://github.com/line/armeria/commit/296719ba8ccb08ca3587447dc43a1b668388aac5", "committedDate": "2020-06-05T11:01:51Z", "message": "Fix a bug where an exception is raised when a converter returns null"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c60c19739849cf8e51d99c94690620648c7d7730", "author": {"user": {"login": "trustin", "name": "Trustin Lee"}}, "url": "https://github.com/line/armeria/commit/c60c19739849cf8e51d99c94690620648c7d7730", "committedDate": "2020-06-05T11:23:55Z", "message": "Merge branch 'master' into fix_number_element_type"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c0fc076e1a33da3379a636f282aa8848213196e5", "author": {"user": {"login": "trustin", "name": "Trustin Lee"}}, "url": "https://github.com/line/armeria/commit/c0fc076e1a33da3379a636f282aa8848213196e5", "committedDate": "2020-06-05T11:53:20Z", "message": "Merge branch 'master' into fix_number_element_type"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a8447677aac53c16d288531ee18df1d246f7f996", "author": {"user": {"login": "trustin", "name": "Trustin Lee"}}, "url": "https://github.com/line/armeria/commit/a8447677aac53c16d288531ee18df1d246f7f996", "committedDate": "2020-06-05T13:24:05Z", "message": "Fixed a test failure"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4133f3a9b63eabd6f2e5cbb2b68d7862d275da04", "author": {"user": {"login": "trustin", "name": "Trustin Lee"}}, "url": "https://github.com/line/armeria/commit/4133f3a9b63eabd6f2e5cbb2b68d7862d275da04", "committedDate": "2020-06-05T14:09:01Z", "message": "Checkstyle"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6010bb591f567e0d7d617ec9af8a73c462385d2d", "author": {"user": {"login": "trustin", "name": "Trustin Lee"}}, "url": "https://github.com/line/armeria/commit/6010bb591f567e0d7d617ec9af8a73c462385d2d", "committedDate": "2020-06-05T14:09:29Z", "message": "Merge branch 'master' into fix_number_element_type"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI1OTA0MzA0", "url": "https://github.com/line/armeria/pull/2779#pullrequestreview-425904304", "createdAt": "2020-06-08T04:06:45Z", "commit": {"oid": "6010bb591f567e0d7d617ec9af8a73c462385d2d"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQwNDowNjo0NVrOGgOqTA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQwNDoyMDo1NVrOGgO0FQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjQ0NzgyMA==", "bodyText": "I'm wondering if we need to warn when @Nullable is specified as well.", "url": "https://github.com/line/armeria/pull/2779#discussion_r436447820", "createdAt": "2020-06-08T04:06:45Z", "author": {"login": "minwoox"}, "path": "core/src/main/java/com/linecorp/armeria/internal/server/annotation/AnnotatedValueResolver.java", "diffHunk": "@@ -1013,7 +966,7 @@ private AnnotatedValueResolver build() {\n             if (aDefault != null) {\n                 if (supportDefault) {\n                     // Warn unusual usage. e.g. @Param @Default(\"a\") Optional<String> param\n-                    if (shouldWrapValueAsOptional) {\n+                    if (isOptional) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6010bb591f567e0d7d617ec9af8a73c462385d2d"}, "originalPosition": 306}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjQ1MDMyNQ==", "bodyText": "Can we support Map, GenericArrayType and arrays as we do in the DocService? \ud83e\udd14\nSupporting Map is maybe too much because we have to use varagrs for expectedParameterizedResultType though. \ud83e\udd14", "url": "https://github.com/line/armeria/pull/2779#discussion_r436450325", "createdAt": "2020-06-08T04:20:55Z", "author": {"login": "minwoox"}, "path": "core/src/main/java/com/linecorp/armeria/internal/server/annotation/AnnotatedValueResolver.java", "diffHunk": "@@ -1094,16 +1039,116 @@ private AnnotatedValueResolver build() {\n                 // - QueryParams (or HttpParameters)\n                 // - User classes which can be converted by request converter\n                 //\n-                // So the container type should be 'null'.\n-                //\n-                types = new SimpleImmutableEntry<>(null, (Class<?>) type);\n+                if (unwrappedParameterizedType instanceof Class) {\n+                    elementType = (Class<?>) unwrappedParameterizedType;\n+                    parameterizedElementType = null;\n+                } else if (unwrappedParameterizedType instanceof ParameterizedType) {\n+                    parameterizedElementType = (ParameterizedType) unwrappedParameterizedType;\n+                    elementType = (Class<?>) parameterizedElementType.getRawType();\n+                } else {\n+                    throw new IllegalArgumentException(\"Unsupported parameter type: \" +\n+                                                       unwrappedParameterizedType.getTypeName());\n+                }\n             }\n \n             return new AnnotatedValueResolver(annotationType, httpElementName, pathVariable, shouldExist,\n-                                              shouldWrapValueAsOptional, types.getKey(), types.getValue(),\n-                                              defaultValue, description, resolver,\n+                                              isOptional, containerType, elementType,\n+                                              parameterizedElementType, defaultValue, description, resolver,\n                                               beanFactoryId, aggregation);\n         }\n+\n+        @Nullable\n+        private Class<?> getContainerType(Type parameterizedType) {\n+            final Class<?> rawType = toRawType(parameterizedType);\n+            if (pathVariable) {\n+                if (Iterable.class.isAssignableFrom(rawType)) {\n+                    throw new IllegalArgumentException(\n+                            \"Container type is not supported for a path variable: \" + httpElementName +\n+                            \" (\" + parameterizedType + ')');\n+                }\n+            }\n+\n+            if (!supportContainer) {\n+                return null;\n+            }\n+\n+            if (rawType == Iterable.class ||\n+                rawType == List.class ||\n+                rawType == Collection.class) {\n+                return ArrayList.class;\n+            }\n+\n+            if (rawType == Set.class) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6010bb591f567e0d7d617ec9af8a73c462385d2d"}, "originalPosition": 411}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a722599f54419adfebf53d6b0b014f28396255c3", "author": {"user": {"login": "trustin", "name": "Trustin Lee"}}, "url": "https://github.com/line/armeria/commit/a722599f54419adfebf53d6b0b014f28396255c3", "committedDate": "2020-06-08T07:37:41Z", "message": "Merge branch 'master' into fix_number_element_type"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c08aac908c8253364229e1153f4ec9d474feed53", "author": {"user": {"login": "trustin", "name": "Trustin Lee"}}, "url": "https://github.com/line/armeria/commit/c08aac908c8253364229e1153f4ec9d474feed53", "committedDate": "2020-06-08T08:47:27Z", "message": "Clean up / add warning messages"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI2MDkyODgx", "url": "https://github.com/line/armeria/pull/2779#pullrequestreview-426092881", "createdAt": "2020-06-08T10:16:24Z", "commit": {"oid": "c08aac908c8253364229e1153f4ec9d474feed53"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxMDoxNjoyNFrOGgXiPg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxMDoxNjoyNFrOGgXiPg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjU5MzIxNA==", "bodyText": "Question: What is the expected behavior if String nullable is not annotated by @Nullable?\nnull value is injected into nullable.", "url": "https://github.com/line/armeria/pull/2779#discussion_r436593214", "createdAt": "2020-06-08T10:16:24Z", "author": {"login": "ikhoon"}, "path": "core/src/test/java/com/linecorp/armeria/internal/server/annotation/AnnotatedServiceRequestConverterTest.java", "diffHunk": "@@ -100,14 +101,19 @@ public String convert2(RequestJsonObj1 obj1) {\n         }\n \n         @Post(\"/convert3\")\n-        public String convert3(@RequestConverter(TestRequestConverterOptional1.class)\n-                                       Optional<RequestJsonObj1> obj1,\n-                               @RequestConverter(TestRequestConverterOptional2.class)\n-                                       Optional<RequestJsonObj2> obj2) {\n+        public String convert3(@RequestConverter(TestRequestConverter1.class) Optional<RequestJsonObj1> obj1,\n+                               @RequestConverter(TestRequestConverter2.class) Optional<RequestJsonObj2> obj2) {\n             assertThat(obj1.isPresent()).isTrue();\n             assertThat(obj2.isPresent()).isTrue();\n             return obj2.get().strVal();\n         }\n+\n+        @Post(\"/convert4\")\n+        @RequestConverter(NullReturningConverter.class)\n+        public void convert4(Optional<String> optional, @Nullable String nullable) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c08aac908c8253364229e1153f4ec9d474feed53"}, "originalPosition": 25}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI2MDk4NTI1", "url": "https://github.com/line/armeria/pull/2779#pullrequestreview-426098525", "createdAt": "2020-06-08T10:24:51Z", "commit": {"oid": "c08aac908c8253364229e1153f4ec9d474feed53"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI2OTI2MjQ3", "url": "https://github.com/line/armeria/pull/2779#pullrequestreview-426926247", "createdAt": "2020-06-09T08:55:08Z", "commit": {"oid": "c08aac908c8253364229e1153f4ec9d474feed53"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c2745532f01cf369305df22a2c6271fc9e1ac39a", "author": {"user": {"login": "trustin", "name": "Trustin Lee"}}, "url": "https://github.com/line/armeria/commit/c2745532f01cf369305df22a2c6271fc9e1ac39a", "committedDate": "2020-06-16T05:25:09Z", "message": "Merge branch 'master' into fix_number_element_type"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "82fc7da616f9e704a6ffe0b675feb20136950617", "author": {"user": {"login": "trustin", "name": "Trustin Lee"}}, "url": "https://github.com/line/armeria/commit/82fc7da616f9e704a6ffe0b675feb20136950617", "committedDate": "2020-06-16T05:52:04Z", "message": "Fail with 400 when injecting null into a non-null target"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMxMjQzNzA2", "url": "https://github.com/line/armeria/pull/2779#pullrequestreview-431243706", "createdAt": "2020-06-16T07:47:36Z", "commit": {"oid": "82fc7da616f9e704a6ffe0b675feb20136950617"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 179, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}