{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE4NzAyODA2", "number": 2716, "title": "Fix ClassNotFoundException for Spring Boot 2.3.0", "bodyText": "Hi, I tried Spring Boot 2.3.0 GA with Armeria 0.99.5\nBut my app couldn't start due to ClassNotFoundException.\nHealthStatusHttpMapper has been deprecated since 2.2.0 and deleted since 2.3.0\nWe can use HttpCodeStatusMapper or SimpleHttpCodeStatusMapper instead of it.\n2020-05-16 00:54:21.586  WARN 88826 --- [           main] o.s.boot.SpringApplication               : Unable to close ApplicationContext\n\njava.lang.IllegalStateException: Failed to introspect Class [com.linecorp.armeria.spring.actuate.ArmeriaSpringActuatorAutoConfiguration] from ClassLoader [org.springframework.boot.loader.LaunchedURLClassLoader@5010be6]\n\tat org.springframework.util.ReflectionUtils.getDeclaredMethods(ReflectionUtils.java:481) ~[spring-core-5.2.6.RELEASE.jar!/:5.2.6.RELEASE]\n\tat org.springframework.util.ReflectionUtils.doWithMethods(ReflectionUtils.java:358) ~[spring-core-5.2.6.RELEASE.jar!/:5.2.6.RELEASE]\n\tat org.springframework.util.ReflectionUtils.getUniqueDeclaredMethods(ReflectionUtils.java:414) ~[spring-core-5.2.6.RELEASE.jar!/:5.2.6.RELEASE]\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.lambda$getTypeForFactoryMethod$2(AbstractAutowireCapableBeanFactory.java:743) ~[spring-beans-5.2.6.RELEASE.jar!/:5.2.6.RELEASE]\n\tat java.base/java.util.concurrent.ConcurrentHashMap.computeIfAbsent(ConcurrentHashMap.java:1708) ~[na:na]\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryMethod(AbstractAutowireCapableBeanFactory.java:742) ~[spring-beans-5.2.6.RELEASE.jar!/:5.2.6.RELEASE]\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.determineTargetType(AbstractAutowireCapableBeanFactory.java:681) ~[spring-beans-5.2.6.RELEASE.jar!/:5.2.6.RELEASE]\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.predictBeanType(AbstractAutowireCapableBeanFactory.java:649) ~[spring-beans-5.2.6.RELEASE.jar!/:5.2.6.RELEASE]\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.isFactoryBean(AbstractBeanFactory.java:1608) ~[spring-beans-5.2.6.RELEASE.jar!/:5.2.6.RELEASE]\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:526) ~[spring-beans-5.2.6.RELEASE.jar!/:5.2.6.RELEASE]\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:497) ~[spring-beans-5.2.6.RELEASE.jar!/:5.2.6.RELEASE]\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeansOfType(DefaultListableBeanFactory.java:619) ~[spring-beans-5.2.6.RELEASE.jar!/:5.2.6.RELEASE]\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeansOfType(DefaultListableBeanFactory.java:611) ~[spring-beans-5.2.6.RELEASE.jar!/:5.2.6.RELEASE]\n\tat org.springframework.context.support.AbstractApplicationContext.getBeansOfType(AbstractApplicationContext.java:1242) ~[spring-context-5.2.6.RELEASE.jar!/:5.2.6.RELEASE]\n\tat org.springframework.boot.SpringApplication.getExitCodeFromMappedException(SpringApplication.java:880) ~[spring-boot-2.3.0.RELEASE.jar!/:2.3.0.RELEASE]\n\tat org.springframework.boot.SpringApplication.getExitCodeFromException(SpringApplication.java:868) ~[spring-boot-2.3.0.RELEASE.jar!/:2.3.0.RELEASE]\n\tat org.springframework.boot.SpringApplication.handleExitCode(SpringApplication.java:855) ~[spring-boot-2.3.0.RELEASE.jar!/:2.3.0.RELEASE]\n\tat org.springframework.boot.SpringApplication.handleRunFailure(SpringApplication.java:806) ~[spring-boot-2.3.0.RELEASE.jar!/:2.3.0.RELEASE]\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:325) ~[spring-boot-2.3.0.RELEASE.jar!/:2.3.0.RELEASE]\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1237) ~[spring-boot-2.3.0.RELEASE.jar!/:2.3.0.RELEASE]\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1226) ~[spring-boot-2.3.0.RELEASE.jar!/:2.3.0.RELEASE]\n\tat info.matsumana.psystrike.Application.main(Application.java:16) ~[classes!/:na]\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:na]\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:na]\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:na]\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:564) ~[na:na]\n\tat org.springframework.boot.loader.MainMethodRunner.run(MainMethodRunner.java:49) ~[psystrike-psystrike-1.0.3-SNAPSHOT.jar:na]\n\tat org.springframework.boot.loader.Launcher.launch(Launcher.java:109) ~[psystrike-psystrike-1.0.3-SNAPSHOT.jar:na]\n\tat org.springframework.boot.loader.Launcher.launch(Launcher.java:58) ~[psystrike-psystrike-1.0.3-SNAPSHOT.jar:na]\n\tat org.springframework.boot.loader.JarLauncher.main(JarLauncher.java:88) ~[psystrike-psystrike-1.0.3-SNAPSHOT.jar:na]\nCaused by: java.lang.NoClassDefFoundError: org/springframework/boot/actuate/health/HealthStatusHttpMapper\n\tat java.base/java.lang.Class.getDeclaredMethods0(Native Method) ~[na:na]\n\tat java.base/java.lang.Class.privateGetDeclaredMethods(Class.java:3244) ~[na:na]\n\tat java.base/java.lang.Class.getDeclaredMethods(Class.java:2387) ~[na:na]\n\tat org.springframework.util.ReflectionUtils.getDeclaredMethods(ReflectionUtils.java:463) ~[spring-core-5.2.6.RELEASE.jar!/:5.2.6.RELEASE]\n\t... 29 common frames omitted\nCaused by: java.lang.ClassNotFoundException: org.springframework.boot.actuate.health.HealthStatusHttpMapper\n\tat java.base/java.net.URLClassLoader.findClass(URLClassLoader.java:435) ~[na:na]\n\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:589) ~[na:na]\n\tat org.springframework.boot.loader.LaunchedURLClassLoader.loadClass(LaunchedURLClassLoader.java:129) ~[psystrike-psystrike-1.0.3-SNAPSHOT.jar:na]\n\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:522) ~[na:na]\n\t... 33 common frames omitted\n\nSpring Boot sources:\n\nhttps://github.com/spring-projects/spring-boot/blob/v2.2.7.RELEASE/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/health/HealthStatusHttpMapper.java#L31-L32\nhttps://github.com/spring-projects/spring-boot/blob/v2.2.7.RELEASE/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/health/HttpCodeStatusMapper.java\nhttps://github.com/spring-projects/spring-boot/blob/v2.2.7.RELEASE/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/health/SimpleHttpCodeStatusMapper.java", "createdAt": "2020-05-15T17:02:42Z", "url": "https://github.com/line/armeria/pull/2716", "merged": true, "mergeCommit": {"oid": "9fe518f85159ba619d66f88311d8a4b56fcfdc54"}, "closed": true, "closedAt": "2020-05-19T04:56:06Z", "author": {"login": "matsumana"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABchk3ooAH2gAyNDE4NzAyODA2OjBmNWJkNGY2MjgzZGJhZGM5Nzc4MGM3OTE2ODE3ZWNjYTIxZTYyNzQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcirNSGAFqTQxNDA2MjM3Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "0f5bd4f6283dbadc97780c7916817ecca21e6274", "author": {"user": {"login": "matsumana", "name": "Manabu Matsuzaki"}}, "url": "https://github.com/line/armeria/commit/0f5bd4f6283dbadc97780c7916817ecca21e6274", "committedDate": "2020-05-15T16:42:56Z", "message": "Fix ClassNotFoundException due to deleted HealthStatusHttpMapper in Spring Boot 2.3.0"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEzMDMzNjM0", "url": "https://github.com/line/armeria/pull/2716#pullrequestreview-413033634", "createdAt": "2020-05-16T01:14:44Z", "commit": {"oid": "0f5bd4f6283dbadc97780c7916817ecca21e6274"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "38c196a890c493db148a6a0f18e5b2ca9f7bbecd", "author": {"user": {"login": "matsumana", "name": "Manabu Matsuzaki"}}, "url": "https://github.com/line/armeria/commit/38c196a890c493db148a6a0f18e5b2ca9f7bbecd", "committedDate": "2020-05-17T07:06:20Z", "message": "Copy SimpleHttpCodeStatusMapper from spring-boot-actuator"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEzMTUzMzgx", "url": "https://github.com/line/armeria/pull/2716#pullrequestreview-413153381", "createdAt": "2020-05-17T11:35:09Z", "commit": {"oid": "38c196a890c493db148a6a0f18e5b2ca9f7bbecd"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xN1QxMTozNTowOVrOGWgRxg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQwMTo0NzoxOFrOGWlZFg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjI1MDY5NA==", "bodyText": "Can you copy in the original license and put it below Armeria's here?\nhttps://github.com/spring-projects/spring-boot/blob/master/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/health/SimpleHttpCodeStatusMapper.java#L1", "url": "https://github.com/line/armeria/pull/2716#discussion_r426250694", "createdAt": "2020-05-17T11:35:09Z", "author": {"login": "anuraaga"}, "path": "spring/boot-actuator-autoconfigure/src/main/java/com/linecorp/armeria/spring/actuate/SimpleHttpCodeStatusMapper.java", "diffHunk": "@@ -0,0 +1,74 @@\n+/*\n+ * Copyright 2020 LINE Corporation\n+ *\n+ * LINE Corporation licenses this file to you under the Apache License,\n+ * version 2.0 (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *   https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations\n+ * under the License.\n+ */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "38c196a890c493db148a6a0f18e5b2ca9f7bbecd"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjMzNDQ4Ng==", "bodyText": "Thanks, looking at it I think this class has a lot of complexity due to being user-configurable with string properties in Spring, but we don't need such configuration. How about we just declare the Map and use it directly without all this other stuff? I don't think we will ever need this normalization, etc.", "url": "https://github.com/line/armeria/pull/2716#discussion_r426334486", "createdAt": "2020-05-18T01:47:18Z", "author": {"login": "anuraaga"}, "path": "spring/boot-actuator-autoconfigure/src/main/java/com/linecorp/armeria/spring/actuate/SimpleHttpCodeStatusMapper.java", "diffHunk": "@@ -0,0 +1,74 @@\n+/*\n+ * Copyright 2020 LINE Corporation\n+ *\n+ * LINE Corporation licenses this file to you under the Apache License,\n+ * version 2.0 (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *   https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package com.linecorp.armeria.spring.actuate;\n+\n+import java.util.Collections;\n+import java.util.HashMap;\n+import java.util.LinkedHashMap;\n+import java.util.Map;\n+\n+import javax.annotation.Nullable;\n+\n+import org.springframework.boot.actuate.endpoint.web.WebEndpointResponse;\n+import org.springframework.boot.actuate.health.Status;\n+\n+/**\n+ * Copied from spring-boot-actuator 2.3.0 to avoid breaking compatibility.\n+ * We used spring-boot-actuator's HealthStatusHttpMapper previously\n+ * but it has been deprecated since 2.2.0 and deleted since 2.3.0.\n+ */\n+class SimpleHttpCodeStatusMapper {\n+\n+    private final Map<String, Integer> mappings;\n+\n+    SimpleHttpCodeStatusMapper() {\n+        final Map<String, Integer> defaultMappings = new HashMap<>();\n+        defaultMappings.put(Status.DOWN.getCode(), WebEndpointResponse.STATUS_SERVICE_UNAVAILABLE);\n+        defaultMappings.put(Status.OUT_OF_SERVICE.getCode(), WebEndpointResponse.STATUS_SERVICE_UNAVAILABLE);\n+        mappings = getUniformMappings(defaultMappings);\n+    }\n+\n+    int getStatusCode(Status status) {\n+        final String code = getUniformCode(status.getCode());\n+        return mappings.getOrDefault(code, WebEndpointResponse.STATUS_OK);\n+    }\n+\n+    private static Map<String, Integer> getUniformMappings(Map<String, Integer> mappings) {\n+        final Map<String, Integer> result = new LinkedHashMap<>();\n+        for (Map.Entry<String, Integer> entry : mappings.entrySet()) {\n+            final String code = getUniformCode(entry.getKey());\n+            if (code != null) {\n+                result.putIfAbsent(code, entry.getValue());\n+            }\n+        }\n+        return Collections.unmodifiableMap(result);\n+    }\n+\n+    @Nullable\n+    private static String getUniformCode(@Nullable String code) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "38c196a890c493db148a6a0f18e5b2ca9f7bbecd"}, "originalPosition": 62}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d96ef6dc3c0472e50065e235f0d6b2db8e6c4436", "author": {"user": {"login": "matsumana", "name": "Manabu Matsuzaki"}}, "url": "https://github.com/line/armeria/commit/d96ef6dc3c0472e50065e235f0d6b2db8e6c4436", "committedDate": "2020-05-18T16:17:03Z", "message": "Add Spring's license"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c30b49f09c04dca57de141758647b51ba345e988", "author": {"user": {"login": "matsumana", "name": "Manabu Matsuzaki"}}, "url": "https://github.com/line/armeria/commit/c30b49f09c04dca57de141758647b51ba345e988", "committedDate": "2020-05-18T16:29:08Z", "message": "Delete unnecessary logic"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE0MDA5MDMw", "url": "https://github.com/line/armeria/pull/2716#pullrequestreview-414009030", "createdAt": "2020-05-18T23:45:41Z", "commit": {"oid": "c30b49f09c04dca57de141758647b51ba345e988"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE0MDEwMDIz", "url": "https://github.com/line/armeria/pull/2716#pullrequestreview-414010023", "createdAt": "2020-05-18T23:48:46Z", "commit": {"oid": "c30b49f09c04dca57de141758647b51ba345e988"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE0MDYyMzcy", "url": "https://github.com/line/armeria/pull/2716#pullrequestreview-414062372", "createdAt": "2020-05-19T02:39:56Z", "commit": {"oid": "c30b49f09c04dca57de141758647b51ba345e988"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 495, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}