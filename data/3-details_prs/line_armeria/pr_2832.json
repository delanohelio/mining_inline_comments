{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM5MDQ3NTAz", "number": 2832, "title": "Publish stream events before calling `RequestLogBuilder`", "bodyText": "Motivation:\nWe currently call RequestLogBuilder methods even before publishing\nstream events (StreamMesssage.write/close/abort()) in some places,\nsuch as HttpResponseDecoder. This can be a problem because the\ncallbacks added to the RequestLog may be invoked even before any\nstream events are published.\nFor example, HttpResponseDecoder may fail to publish the received\nResponseHeaders when a RequestLog callback aborts the response\neven before the publication, leading to the following exception:\nio.netty.handler.codec.http2.Http2Exception: failed to consume a HEADERS frame\n    at io.netty.handler.codec.http2.Http2Exception.connectionError(Http2Exception.java:117)\n    at com.linecorp.armeria.client.Http2ResponseDecoder.onHeadersRead(Http2ResponseDecoder.java:206)\n    at com.linecorp.armeria.client.Http2ResponseDecoder.onHeadersRead(Http2ResponseDecoder.java:219)\n    ...\nCaused by: com.linecorp.armeria.common.stream.ClosedStreamException: null\n    at com.linecorp.armeria.common.stream.ClosedStreamException.get(ClosedStreamException.java:37)\n    at com.linecorp.armeria.common.stream.StreamWriter.write(StreamWriter.java:72)\n    at com.linecorp.armeria.client.Http2ResponseDecoder.onHeadersRead(Http2ResponseDecoder.java:203)\n    ... 40 common frames omitted\n\nModifications:\n\nAdd a generalized mechanism to defer any RequestLogProperty:\n\nisDeferred(RequestLogProperty)\ndefer(RequestLogProperty)\ndefer*Content*() and isDefer*Content*Set() have been deprecated.\n\n\nDefer setting some log properties before publishing stream events,\nso that they are recorded after the publication.\nMiscellaneous:\n\nDo not warn unnecessarily when propagating content previews in\nDefaultRequestLog.propagate*().\nMake HttpClientMaxConcurrentStreamTest.exceededMaxStreamsPropagatesFailureCorrectly()\nless flaky.\nOptimize DefaultRequestLog.isAvailable()\n\n\n\nResult:\n\nNo more Http2Exception: failed to consume a HEADERS frame error.\nNo more You tried to set the content preview twice warning.\n\nFixes #2830\n\n\nSlightly faster RequestLogAccess.isAvailable() implementation.\n(Deprecation) RequestLogBuilder.defer*Content*() and\nisDefer*Content*Set() have been deprecated in favor of\ndefer(RequestLogProperty) and isDeferred(RequestLogProperty).", "createdAt": "2020-06-24T08:29:05Z", "url": "https://github.com/line/armeria/pull/2832", "merged": true, "mergeCommit": {"oid": "344798358bad7e9adfb4e58c41782d605b686dd5"}, "closed": true, "closedAt": "2020-06-26T09:24:59Z", "author": {"login": "trustin"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcuVhABgH2gAyNDM5MDQ3NTAzOmU4MmI0OWJlZTZjOWIxMzI3OTNkNWZkNWEwMzRhNjIyZDI3MTc3NzQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcu_FbmgH2gAyNDM5MDQ3NTAzOjI3ZmRhNDY1NTE5NTQ2ZWFjM2FjOWUwODQ4ZGIzYzAwNzhiYjg1OGE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "e82b49bee6c9b132793d5fd5a034a622d2717774", "author": {"user": {"login": "trustin", "name": "Trustin Lee"}}, "url": "https://github.com/line/armeria/commit/e82b49bee6c9b132793d5fd5a034a622d2717774", "committedDate": "2020-06-24T08:10:39Z", "message": "Publish stream events before calling `RequestLogBuilder`\n\nMotivation:\n\nWe currently call `RequestLogBuilder` methods even before publishing\nstream events (`StreamMesssage.write/close/abort()`) in some places,\nsuch as `HttpResponseDecoder`. This can be a problem because the\ncallbacks added to the `RequestLog` may be invoked even before any\nstream events are published.\n\nFor example, `HttpResponseDecoder` may fail to publish the received\n`ResponseHeaders` when a `RequestLog` callback aborts the response\neven before the publication, leading to the following exception:\n\n    io.netty.handler.codec.http2.Http2Exception: failed to consume a HEADERS frame\n        at io.netty.handler.codec.http2.Http2Exception.connectionError(Http2Exception.java:117)\n        at com.linecorp.armeria.client.Http2ResponseDecoder.onHeadersRead(Http2ResponseDecoder.java:206)\n        at com.linecorp.armeria.client.Http2ResponseDecoder.onHeadersRead(Http2ResponseDecoder.java:219)\n        ...\n    Caused by: com.linecorp.armeria.common.stream.ClosedStreamException: null\n        at com.linecorp.armeria.common.stream.ClosedStreamException.get(ClosedStreamException.java:37)\n        at com.linecorp.armeria.common.stream.StreamWriter.write(StreamWriter.java:72)\n        at com.linecorp.armeria.client.Http2ResponseDecoder.onHeadersRead(Http2ResponseDecoder.java:203)\n        ... 40 common frames omitted\n\nModifications:\n\n- Add a generalized mechanism to defer any `RequestLogProperty`:\n  - `isDeferred(RequestLogProperty)`\n  - `defer(RequestLogProperty)`\n  - `defer*Content*()` and `isDefer*Content*Set()` have been deprecated.\n- Defer setting some log properties before publishing stream events,\n  so that they are recorded after the publication.\n- Miscellaneous:\n  - Do not warn unnecessarily when propagating content previews in\n    `DefaultRequestLog.propagate*()`.\n  - Make `HttpClientMaxConcurrentStreamTest.exceededMaxStreamsPropagatesFailureCorrectly()`\n    less flaky.\n  - Optimize `DefaultRequestLog.isAvailable()`\n\nResult:\n\n- No more `Http2Exception: failed to consume a HEADERS frame` error.\n- No more `You tried to set the content preview twice` warning.\n  - Fixes #2830\n- (Deprecation) `RequestLogBuilder.defer*Content*()` and\n  `isDefer*Content*Set()` have been deprecated in favor of\n  `defer(RequestLogProperty)` and `isDeferred(RequestLogProperty)`."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM2NDM0NDUy", "url": "https://github.com/line/armeria/pull/2832#pullrequestreview-436434452", "createdAt": "2020-06-24T08:30:26Z", "commit": {"oid": "e82b49bee6c9b132793d5fd5a034a622d2717774"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQwODozMDoyNlrOGoIQYw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQwODozMDoyNlrOGoIQYw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDczMTQ5MQ==", "bodyText": "Not sure why it was cause before. \ud83e\udd14", "url": "https://github.com/line/armeria/pull/2832#discussion_r444731491", "createdAt": "2020-06-24T08:30:26Z", "author": {"login": "trustin"}, "path": "core/src/main/java/com/linecorp/armeria/client/DefaultClientRequestContext.java", "diffHunk": "@@ -248,16 +248,16 @@ private void runThreadLocalContextCustomizers() {\n     }\n \n     private void failEarly(Throwable cause) {\n-        final RequestLogBuilder logBuilder = logBuilder();\n         final UnprocessedRequestException wrapped = new UnprocessedRequestException(cause);\n-        logBuilder.endRequest(wrapped);\n-        logBuilder.endResponse(wrapped);\n-\n         final HttpRequest req = request();\n         if (req != null) {\n             autoFillSchemeAndAuthority();\n-            req.abort(cause);\n+            req.abort(wrapped);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e82b49bee6c9b132793d5fd5a034a622d2717774"}, "originalPosition": 13}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM2NDQ0MzM0", "url": "https://github.com/line/armeria/pull/2832#pullrequestreview-436444334", "createdAt": "2020-06-24T08:43:51Z", "commit": {"oid": "e82b49bee6c9b132793d5fd5a034a622d2717774"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQwODo0Mzo1MVrOGoIutQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQwODo0Mzo1MVrOGoIutQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDczOTI1Mw==", "bodyText": "It seems unnecessary because of pre-checked condition. https://github.com/line/armeria/pull/2832/files#diff-833e9abb4a1607339097e0e3aab8b26dR226", "url": "https://github.com/line/armeria/pull/2832#discussion_r444739253", "createdAt": "2020-06-24T08:43:51Z", "author": {"login": "hexoul"}, "path": "core/src/main/java/com/linecorp/armeria/client/HttpResponseDecoder.java", "diffHunk": "@@ -199,50 +200,73 @@ public boolean isOpen() {\n          */\n         @Override\n         public boolean tryWrite(HttpObject o) {\n+            boolean wrote = false;\n             switch (state) {\n                 case WAIT_NON_INFORMATIONAL:\n-                    // NB: It's safe to call logBuilder.startResponse() multiple times.\n-                    if (ctx != null) {\n-                        ctx.logBuilder().startResponse();\n-                    }\n-\n-                    assert o instanceof HttpHeaders && !(o instanceof RequestHeaders) : o;\n-\n-                    if (o instanceof ResponseHeaders) {\n-                        final ResponseHeaders headers = (ResponseHeaders) o;\n-                        final HttpStatus status = headers.status();\n-                        if (!status.isInformational()) {\n-                            state = State.WAIT_DATA_OR_TRAILERS;\n-                            if (ctx != null) {\n-                                ctx.logBuilder().responseHeaders(headers);\n-                            }\n-                        }\n-                    }\n+                    wrote = handleWaitNonInformational(o);\n                     break;\n                 case WAIT_DATA_OR_TRAILERS:\n-                    if (o instanceof HttpHeaders) {\n-                        state = State.DONE;\n-                        if (ctx != null) {\n-                            ctx.logBuilder().responseTrailers((HttpHeaders) o);\n-                        }\n-                    } else {\n-                        if (ctx != null) {\n-                            ctx.logBuilder().increaseResponseLength((HttpData) o);\n-                        }\n-                    }\n+                    wrote = handleWaitDateOrTrailers(o);\n                     break;\n                 case DONE:\n                     ReferenceCountUtil.safeRelease(o);\n-                    return false;\n+                    break;\n             }\n-            return delegate.tryWrite(o);\n+\n+            return wrote;\n         }\n \n         @Override\n         public boolean tryWrite(Supplier<? extends HttpObject> o) {\n             return delegate.tryWrite(o);\n         }\n \n+        private boolean handleWaitNonInformational(HttpObject o) {\n+            // NB: It's safe to call logBuilder.startResponse() multiple times.\n+            if (ctx != null) {\n+                ctx.logBuilder().startResponse();\n+            }\n+\n+            assert o instanceof HttpHeaders && !(o instanceof RequestHeaders) : o;\n+\n+            if (o instanceof ResponseHeaders) {\n+                final ResponseHeaders headers = (ResponseHeaders) o;\n+                final HttpStatus status = headers.status();\n+                if (!status.isInformational()) {\n+                    state = State.WAIT_DATA_OR_TRAILERS;\n+                    if (ctx != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e82b49bee6c9b132793d5fd5a034a622d2717774"}, "originalPosition": 75}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cf7d0bab36d5c10eb9e76836ce2388bfd5977dce", "author": {"user": {"login": "trustin", "name": "Trustin Lee"}}, "url": "https://github.com/line/armeria/commit/cf7d0bab36d5c10eb9e76836ce2388bfd5977dce", "committedDate": "2020-06-24T09:24:21Z", "message": "Fix a silly mistake"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8f332ec8a7b88619c9c9efa564fd234dd294745f", "author": {"user": {"login": "trustin", "name": "Trustin Lee"}}, "url": "https://github.com/line/armeria/commit/8f332ec8a7b88619c9c9efa564fd234dd294745f", "committedDate": "2020-06-24T12:19:45Z", "message": "Typo"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM2NjA0OTU4", "url": "https://github.com/line/armeria/pull/2832#pullrequestreview-436604958", "createdAt": "2020-06-24T12:38:46Z", "commit": {"oid": "cf7d0bab36d5c10eb9e76836ce2388bfd5977dce"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxMjozODo0NlrOGoQRHQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxMjo0ODo1NlrOGoQmtA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDg2Mjc0OQ==", "bodyText": "nit: can remove this method and just call hasInterestedFlags directly?", "url": "https://github.com/line/armeria/pull/2832#discussion_r444862749", "createdAt": "2020-06-24T12:38:46Z", "author": {"login": "minwoox"}, "path": "core/src/main/java/com/linecorp/armeria/common/logging/DefaultRequestLog.java", "diffHunk": "@@ -187,26 +188,60 @@ private static boolean isComplete(int flags) {\n \n     @Override\n     public boolean isRequestComplete() {\n-        return isAvailable(flags, RequestLogProperty.FLAGS_REQUEST_COMPLETE);\n+        return hasInterestedFlags(flags, RequestLogProperty.FLAGS_REQUEST_COMPLETE);\n     }\n \n     @Override\n     public boolean isAvailable(RequestLogProperty property) {\n-        return isAvailable(flags, property.flag());\n+        requireNonNull(property, \"property\");\n+        return hasInterestedFlags(flags, property.flag());\n+    }\n+\n+    @Override\n+    public boolean isAvailable(RequestLogProperty... properties) {\n+        requireNonNull(properties, \"properties\");\n+        checkArgument(properties.length != 0, \"properties is empty.\");\n+        return isAvailable(interestedFlags(properties));\n+    }\n+\n+    @Override\n+    public boolean isAvailable(Iterable<RequestLogProperty> properties) {\n+        requireNonNull(properties, \"properties\");\n+        final int flags = interestedFlags(properties);\n+        checkArgument(flags != 0, \"properties is empty.\");\n+        return isAvailable(flags);\n     }\n \n     private boolean isAvailable(int interestedFlags) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cf7d0bab36d5c10eb9e76836ce2388bfd5977dce"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDg2ODI3Ng==", "bodyText": "Thanks, I needed it.", "url": "https://github.com/line/armeria/pull/2832#discussion_r444868276", "createdAt": "2020-06-24T12:48:56Z", "author": {"login": "minwoox"}, "path": "core/src/main/java/com/linecorp/armeria/common/logging/DefaultRequestLog.java", "diffHunk": "@@ -1223,15 +1276,20 @@ public String responseContentPreview() {\n \n     @Override\n     public void responseContentPreview(@Nullable String responseContentPreview) {\n+        responseContentPreview(responseContentPreview, true);\n+    }\n+\n+    private void responseContentPreview(@Nullable String responseContentPreview, boolean warnIfSetAlready) {\n         if (isAvailable(RequestLogProperty.RESPONSE_CONTENT_PREVIEW)) {\n-            if (!warnedSettingContentPreviewTwice && responseContentPreview != null) {\n+            if (warnIfSetAlready && responseContentPreview != null && !warnedSettingContentPreviewTwice) {\n                 warnedSettingContentPreviewTwice = true;\n-                logger.warn(\"You tried to set the content preview twice: {} \" +\n+                logger.warn(\"You tried to set the response content preview twice: {} \" +", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cf7d0bab36d5c10eb9e76836ce2388bfd5977dce"}, "originalPosition": 320}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dabe9cb0e55b90dbe940cda93e09ada674817bc5", "author": {"user": {"login": "trustin", "name": "Trustin Lee"}}, "url": "https://github.com/line/armeria/commit/dabe9cb0e55b90dbe940cda93e09ada674817bc5", "committedDate": "2020-06-25T02:00:11Z", "message": "Merge branch 'master' into log_after_publication"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM2NDQzOTMz", "url": "https://github.com/line/armeria/pull/2832#pullrequestreview-436443933", "createdAt": "2020-06-24T08:43:18Z", "commit": {"oid": "e82b49bee6c9b132793d5fd5a034a622d2717774"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQwMjoyMDozMlrOGpRqJQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQwMjoyMDozMlrOGpRqJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTkzNDExNw==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/line/armeria/pull/2832#discussion_r445934117", "createdAt": "2020-06-26T02:20:32Z", "author": {"login": "ikhoon"}, "path": "core/src/main/java/com/linecorp/armeria/common/logging/DefaultRequestLog.java", "diffHunk": "@@ -982,8 +1040,8 @@ private void endRequest0(@Nullable Throwable requestCause, long requestEndTimeNa\n \n         // Set names if request content is not deferred or it was deferred but has been set\n         // before the request completion.\n-        if (!isDeferRequestContentSet() ||\n-            (isDeferRequestContentSet() && isAvailable(RequestLogProperty.REQUEST_CONTENT))) {\n+        if (!hasInterestedFlags(deferredFlags, RequestLogProperty.REQUEST_CONTENT) ||\n+            isAvailable(RequestLogProperty.REQUEST_CONTENT)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dabe9cb0e55b90dbe940cda93e09ada674817bc5"}, "originalPosition": 279}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "27fda465519546eac3ac9e0848db3c0078bb858a", "author": {"user": {"login": "trustin", "name": "Trustin Lee"}}, "url": "https://github.com/line/armeria/commit/27fda465519546eac3ac9e0848db3c0078bb858a", "committedDate": "2020-06-26T08:36:33Z", "message": "Merge branch 'master' into log_after_publication"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 265, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}