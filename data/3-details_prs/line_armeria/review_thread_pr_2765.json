{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI2OTUyMTMw", "number": 2765, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QwNDo0NzozNlrOEB_6nw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QwNDo0NzozNlrOEB_6nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwNTMxMjMxOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/com/linecorp/armeria/client/HttpSessionHandler.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QwNDo0NzozNlrOGeL5EA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QwNToyMTo0N1rOGeMbeA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDMwNTI5Ng==", "bodyText": "How about using CompletableFuture.allOf(...)?", "url": "https://github.com/line/armeria/pull/2765#discussion_r434305296", "createdAt": "2020-06-03T04:47:36Z", "author": {"login": "ikhoon"}, "path": "core/src/main/java/com/linecorp/armeria/client/HttpSessionHandler.java", "diffHunk": "@@ -167,9 +167,11 @@ public void invoke(PooledChannel pooledChannel, ClientRequestContext ctx,\n         if (!protocol.isMultiplex()) {\n             // When HTTP/1.1 is used:\n             // If pipelining is enabled, return as soon as the request is fully sent.\n-            // If pipelining is disabled, return after the response is fully received.\n+            // If pipelining is disabled,\n+            // return after the response is fully received and the request is fully sent.\n             final CompletableFuture<Void> completionFuture =\n-                    useHttp1Pipelining ? req.whenComplete() : res.whenComplete();\n+                    useHttp1Pipelining ? req.whenComplete()\n+                                       : req.whenComplete().thenCombine(res.whenComplete(), (a, b) -> null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c04931bff5c6a846433698c2bd13f45e7c5086fa"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDMxNDEwNA==", "bodyText": "Fixed. \ud83d\ude09", "url": "https://github.com/line/armeria/pull/2765#discussion_r434314104", "createdAt": "2020-06-03T05:21:47Z", "author": {"login": "minwoox"}, "path": "core/src/main/java/com/linecorp/armeria/client/HttpSessionHandler.java", "diffHunk": "@@ -167,9 +167,11 @@ public void invoke(PooledChannel pooledChannel, ClientRequestContext ctx,\n         if (!protocol.isMultiplex()) {\n             // When HTTP/1.1 is used:\n             // If pipelining is enabled, return as soon as the request is fully sent.\n-            // If pipelining is disabled, return after the response is fully received.\n+            // If pipelining is disabled,\n+            // return after the response is fully received and the request is fully sent.\n             final CompletableFuture<Void> completionFuture =\n-                    useHttp1Pipelining ? req.whenComplete() : res.whenComplete();\n+                    useHttp1Pipelining ? req.whenComplete()\n+                                       : req.whenComplete().thenCombine(res.whenComplete(), (a, b) -> null);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDMwNTI5Ng=="}, "originalCommit": {"oid": "c04931bff5c6a846433698c2bd13f45e7c5086fa"}, "originalPosition": 10}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2302, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}