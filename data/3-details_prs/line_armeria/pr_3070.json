{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg5MTYxMzU2", "number": 3070, "title": "Add release note for 1.1.0", "bodyText": "", "createdAt": "2020-09-18T08:28:41Z", "url": "https://github.com/line/armeria/pull/3070", "merged": true, "mergeCommit": {"oid": "cdb176ddf44dfb876102a390aff3c0de6335f60d"}, "closed": true, "closedAt": "2020-09-22T02:33:17Z", "author": {"login": "minwoox"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdKBS5_AH2gAyNDg5MTYxMzU2OmU4YjdkNThkNjFjMWE4MDdhZTEwMjIyOGVmMjJiYzc1MmU0OTdjYjc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdLOcCjAFqTQ5MzA5MTE4Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "e8b7d58d61c1a807ae102228ef22bc752e497cb7", "author": {"user": {"login": "minwoox", "name": "minux"}}, "url": "https://github.com/line/armeria/commit/e8b7d58d61c1a807ae102228ef22bc752e497cb7", "committedDate": "2020-09-18T08:27:02Z", "message": "Add release note for 1.1.0"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkyMjAwNTc5", "url": "https://github.com/line/armeria/pull/3070#pullrequestreview-492200579", "createdAt": "2020-09-20T15:03:15Z", "commit": {"oid": "e8b7d58d61c1a807ae102228ef22bc752e497cb7"}, "state": "COMMENTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMFQxNTowMzoxNVrOHU6-4g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMFQxNTowNzo0N1rOHU7Akg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTY5OTkzOA==", "bodyText": "How about:\n`RequestLog#serviceName()` is now used as a span name if you use ... for <why it's better>.", "url": "https://github.com/line/armeria/pull/3070#discussion_r491699938", "createdAt": "2020-09-20T15:03:15Z", "author": {"login": "trustin"}, "path": "site/src/pages/release-notes/1.1.0.mdx", "diffHunk": "@@ -0,0 +1,86 @@\n+---\n+date: 2020-09-18\n+---\n+\n+## \ud83c\udf1f New features\n+\n+- You can now inject your own <type://MeterIdPrefixFunction> when using Armeria Spring boot autoconfigure. #3034\n+  ```java\n+  @Bean\n+  public MeterIdPrefixFunction myMeterIdPrefixFunction() {\n+      return MeterIdPrefixFunction.of(\"custom.armeria.server\");\n+  }\n+  ```\n+- You can now use a string to specify the `Logger` for <type://LoggingService> and <type://LoggingClient>. #3035\n+  ```java\n+  ServerBuilder sb = ...\n+  sb.decorator(LoggingService.builder()\n+                             .logger(\"com.foo\")\n+                             .build());\n+  ```\n+\n+## \ud83d\udcc8 Improvements\n+\n+- Span name is the service name if you use the default `HttpRequestParser` and `HttpResponseParser` with", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e8b7d58d61c1a807ae102228ef22bc752e497cb7"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTcwMDA4Ng==", "bodyText": "while converting a RequestLog into a String?", "url": "https://github.com/line/armeria/pull/3070#discussion_r491700086", "createdAt": "2020-09-20T15:04:59Z", "author": {"login": "trustin"}, "path": "site/src/pages/release-notes/1.1.0.mdx", "diffHunk": "@@ -0,0 +1,86 @@\n+---\n+date: 2020-09-18\n+---\n+\n+## \ud83c\udf1f New features\n+\n+- You can now inject your own <type://MeterIdPrefixFunction> when using Armeria Spring boot autoconfigure. #3034\n+  ```java\n+  @Bean\n+  public MeterIdPrefixFunction myMeterIdPrefixFunction() {\n+      return MeterIdPrefixFunction.of(\"custom.armeria.server\");\n+  }\n+  ```\n+- You can now use a string to specify the `Logger` for <type://LoggingService> and <type://LoggingClient>. #3035\n+  ```java\n+  ServerBuilder sb = ...\n+  sb.decorator(LoggingService.builder()\n+                             .logger(\"com.foo\")\n+                             .build());\n+  ```\n+\n+## \ud83d\udcc8 Improvements\n+\n+- Span name is the service name if you use the default `HttpRequestParser` and `HttpResponseParser` with\n+  `BraveClient` and `BraveService`. #3023\n+- You can now easily find out whether SPI service interfaces are applied from the logs. #3039\n+- You can now get the log of the exception which is raised while making request and response logs. #3043", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e8b7d58d61c1a807ae102228ef22bc752e497cb7"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTcwMDE2NQ==", "bodyText": "stack-trace -> stack trace\nnot logged anymore by\nExplain why we don't do that anymore. Depending on the explanation, could it be a bug fix?", "url": "https://github.com/line/armeria/pull/3070#discussion_r491700165", "createdAt": "2020-09-20T15:05:34Z", "author": {"login": "trustin"}, "path": "site/src/pages/release-notes/1.1.0.mdx", "diffHunk": "@@ -0,0 +1,86 @@\n+---\n+date: 2020-09-18\n+---\n+\n+## \ud83c\udf1f New features\n+\n+- You can now inject your own <type://MeterIdPrefixFunction> when using Armeria Spring boot autoconfigure. #3034\n+  ```java\n+  @Bean\n+  public MeterIdPrefixFunction myMeterIdPrefixFunction() {\n+      return MeterIdPrefixFunction.of(\"custom.armeria.server\");\n+  }\n+  ```\n+- You can now use a string to specify the `Logger` for <type://LoggingService> and <type://LoggingClient>. #3035\n+  ```java\n+  ServerBuilder sb = ...\n+  sb.decorator(LoggingService.builder()\n+                             .logger(\"com.foo\")\n+                             .build());\n+  ```\n+\n+## \ud83d\udcc8 Improvements\n+\n+- Span name is the service name if you use the default `HttpRequestParser` and `HttpResponseParser` with\n+  `BraveClient` and `BraveService`. #3023\n+- You can now easily find out whether SPI service interfaces are applied from the logs. #3039\n+- You can now get the log of the exception which is raised while making request and response logs. #3043\n+- The stack-trace of <type://HttpStatusException> and <type://HttpResponseException> are not logged in", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e8b7d58d61c1a807ae102228ef22bc752e497cb7"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTcwMDI0MA==", "bodyText": "is now initialized", "url": "https://github.com/line/armeria/pull/3070#discussion_r491700240", "createdAt": "2020-09-20T15:06:35Z", "author": {"login": "trustin"}, "path": "site/src/pages/release-notes/1.1.0.mdx", "diffHunk": "@@ -0,0 +1,86 @@\n+---\n+date: 2020-09-18\n+---\n+\n+## \ud83c\udf1f New features\n+\n+- You can now inject your own <type://MeterIdPrefixFunction> when using Armeria Spring boot autoconfigure. #3034\n+  ```java\n+  @Bean\n+  public MeterIdPrefixFunction myMeterIdPrefixFunction() {\n+      return MeterIdPrefixFunction.of(\"custom.armeria.server\");\n+  }\n+  ```\n+- You can now use a string to specify the `Logger` for <type://LoggingService> and <type://LoggingClient>. #3035\n+  ```java\n+  ServerBuilder sb = ...\n+  sb.decorator(LoggingService.builder()\n+                             .logger(\"com.foo\")\n+                             .build());\n+  ```\n+\n+## \ud83d\udcc8 Improvements\n+\n+- Span name is the service name if you use the default `HttpRequestParser` and `HttpResponseParser` with\n+  `BraveClient` and `BraveService`. #3023\n+- You can now easily find out whether SPI service interfaces are applied from the logs. #3039\n+- You can now get the log of the exception which is raised while making request and response logs. #3043\n+- The stack-trace of <type://HttpStatusException> and <type://HttpResponseException> are not logged in\n+  <type://LoggingService>. #3053, #3054\n+\n+## \ud83d\udee0\ufe0f Bug fixes\n+\n+- <type://TimeoutScheduler> is initialized exactly once. #3066", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e8b7d58d61c1a807ae102228ef22bc752e497cb7"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTcwMDMwNg==", "bodyText": "boot autoconfigure -> Boot integration ?", "url": "https://github.com/line/armeria/pull/3070#discussion_r491700306", "createdAt": "2020-09-20T15:07:09Z", "author": {"login": "trustin"}, "path": "site/src/pages/release-notes/1.1.0.mdx", "diffHunk": "@@ -0,0 +1,86 @@\n+---\n+date: 2020-09-18\n+---\n+\n+## \ud83c\udf1f New features\n+\n+- You can now inject your own <type://MeterIdPrefixFunction> when using Armeria Spring boot autoconfigure. #3034\n+  ```java\n+  @Bean\n+  public MeterIdPrefixFunction myMeterIdPrefixFunction() {\n+      return MeterIdPrefixFunction.of(\"custom.armeria.server\");\n+  }\n+  ```\n+- You can now use a string to specify the `Logger` for <type://LoggingService> and <type://LoggingClient>. #3035\n+  ```java\n+  ServerBuilder sb = ...\n+  sb.decorator(LoggingService.builder()\n+                             .logger(\"com.foo\")\n+                             .build());\n+  ```\n+\n+## \ud83d\udcc8 Improvements\n+\n+- Span name is the service name if you use the default `HttpRequestParser` and `HttpResponseParser` with\n+  `BraveClient` and `BraveService`. #3023\n+- You can now easily find out whether SPI service interfaces are applied from the logs. #3039\n+- You can now get the log of the exception which is raised while making request and response logs. #3043\n+- The stack-trace of <type://HttpStatusException> and <type://HttpResponseException> are not logged in\n+  <type://LoggingService>. #3053, #3054\n+\n+## \ud83d\udee0\ufe0f Bug fixes\n+\n+- <type://TimeoutScheduler> is initialized exactly once. #3066\n+- Reactor subscriber context is now properly propagated. #3058\n+- Armeria Spring boot autoconfigure collects metrics correctly if <type://ArmeriaSettings#enableMetrics>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e8b7d58d61c1a807ae102228ef22bc752e497cb7"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTcwMDM3MA==", "bodyText": "rejects -> now rejects\na PUSH_PROMISE frame (missing a)", "url": "https://github.com/line/armeria/pull/3070#discussion_r491700370", "createdAt": "2020-09-20T15:07:47Z", "author": {"login": "trustin"}, "path": "site/src/pages/release-notes/1.1.0.mdx", "diffHunk": "@@ -0,0 +1,86 @@\n+---\n+date: 2020-09-18\n+---\n+\n+## \ud83c\udf1f New features\n+\n+- You can now inject your own <type://MeterIdPrefixFunction> when using Armeria Spring boot autoconfigure. #3034\n+  ```java\n+  @Bean\n+  public MeterIdPrefixFunction myMeterIdPrefixFunction() {\n+      return MeterIdPrefixFunction.of(\"custom.armeria.server\");\n+  }\n+  ```\n+- You can now use a string to specify the `Logger` for <type://LoggingService> and <type://LoggingClient>. #3035\n+  ```java\n+  ServerBuilder sb = ...\n+  sb.decorator(LoggingService.builder()\n+                             .logger(\"com.foo\")\n+                             .build());\n+  ```\n+\n+## \ud83d\udcc8 Improvements\n+\n+- Span name is the service name if you use the default `HttpRequestParser` and `HttpResponseParser` with\n+  `BraveClient` and `BraveService`. #3023\n+- You can now easily find out whether SPI service interfaces are applied from the logs. #3039\n+- You can now get the log of the exception which is raised while making request and response logs. #3043\n+- The stack-trace of <type://HttpStatusException> and <type://HttpResponseException> are not logged in\n+  <type://LoggingService>. #3053, #3054\n+\n+## \ud83d\udee0\ufe0f Bug fixes\n+\n+- <type://TimeoutScheduler> is initialized exactly once. #3066\n+- Reactor subscriber context is now properly propagated. #3058\n+- Armeria Spring boot autoconfigure collects metrics correctly if <type://ArmeriaSettings#enableMetrics>\n+is `true`. #3048\n+- You now see the proper exception from WebFlux `WebClient` when <type://CircuitBreakerClient> is applied. #3064\n+- Armeria client rejects `PUSH_PROMISE` frame correctly because it doesn't support it yet. #3045", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e8b7d58d61c1a807ae102228ef22bc752e497cb7"}, "originalPosition": 38}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkyMjA1NzQ3", "url": "https://github.com/line/armeria/pull/3070#pullrequestreview-492205747", "createdAt": "2020-09-20T16:26:44Z", "commit": {"oid": "e8b7d58d61c1a807ae102228ef22bc752e497cb7"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMFQxNjoyNjo0NFrOHU7drw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMFQxNjo0MzoxMVrOHU7jhw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTcwNzgyMw==", "bodyText": "Missing issue link #3032", "url": "https://github.com/line/armeria/pull/3070#discussion_r491707823", "createdAt": "2020-09-20T16:26:44Z", "author": {"login": "ikhoon"}, "path": "site/src/pages/release-notes/1.1.0.mdx", "diffHunk": "@@ -0,0 +1,86 @@\n+---\n+date: 2020-09-18\n+---\n+\n+## \ud83c\udf1f New features\n+\n+- You can now inject your own <type://MeterIdPrefixFunction> when using Armeria Spring boot autoconfigure. #3034\n+  ```java\n+  @Bean\n+  public MeterIdPrefixFunction myMeterIdPrefixFunction() {\n+      return MeterIdPrefixFunction.of(\"custom.armeria.server\");\n+  }\n+  ```\n+- You can now use a string to specify the `Logger` for <type://LoggingService> and <type://LoggingClient>. #3035\n+  ```java\n+  ServerBuilder sb = ...\n+  sb.decorator(LoggingService.builder()\n+                             .logger(\"com.foo\")\n+                             .build());\n+  ```\n+\n+## \ud83d\udcc8 Improvements\n+\n+- Span name is the service name if you use the default `HttpRequestParser` and `HttpResponseParser` with\n+  `BraveClient` and `BraveService`. #3023\n+- You can now easily find out whether SPI service interfaces are applied from the logs. #3039\n+- You can now get the log of the exception which is raised while making request and response logs. #3043\n+- The stack-trace of <type://HttpStatusException> and <type://HttpResponseException> are not logged in\n+  <type://LoggingService>. #3053, #3054\n+\n+## \ud83d\udee0\ufe0f Bug fixes\n+\n+- <type://TimeoutScheduler> is initialized exactly once. #3066\n+- Reactor subscriber context is now properly propagated. #3058\n+- Armeria Spring boot autoconfigure collects metrics correctly if <type://ArmeriaSettings#enableMetrics>\n+is `true`. #3048\n+- You now see the proper exception from WebFlux `WebClient` when <type://CircuitBreakerClient> is applied. #3064\n+- Armeria client rejects `PUSH_PROMISE` frame correctly because it doesn't support it yet. #3045\n+- Armeria gRPC server does not raise a `NullPointerException` anymore when a gRPC server interceptor closes\n+  the `ServerCall`.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e8b7d58d61c1a807ae102228ef22bc752e497cb7"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTcwODE0Mw==", "bodyText": "Spring boot -> Spring Boot", "url": "https://github.com/line/armeria/pull/3070#discussion_r491708143", "createdAt": "2020-09-20T16:29:57Z", "author": {"login": "ikhoon"}, "path": "site/src/pages/release-notes/1.1.0.mdx", "diffHunk": "@@ -0,0 +1,86 @@\n+---\n+date: 2020-09-18\n+---\n+\n+## \ud83c\udf1f New features\n+\n+- You can now inject your own <type://MeterIdPrefixFunction> when using Armeria Spring boot autoconfigure. #3034", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e8b7d58d61c1a807ae102228ef22bc752e497cb7"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTcwOTMxOQ==", "bodyText": "A PUSH_PROMISE frame is not rejected. SETTINGS_ENABLE_PUSH of the initial settings is set to 0.\nArmeria client tells the server that it doesn't expect PUSH_PROMISE. ?", "url": "https://github.com/line/armeria/pull/3070#discussion_r491709319", "createdAt": "2020-09-20T16:43:11Z", "author": {"login": "ikhoon"}, "path": "site/src/pages/release-notes/1.1.0.mdx", "diffHunk": "@@ -0,0 +1,86 @@\n+---\n+date: 2020-09-18\n+---\n+\n+## \ud83c\udf1f New features\n+\n+- You can now inject your own <type://MeterIdPrefixFunction> when using Armeria Spring boot autoconfigure. #3034\n+  ```java\n+  @Bean\n+  public MeterIdPrefixFunction myMeterIdPrefixFunction() {\n+      return MeterIdPrefixFunction.of(\"custom.armeria.server\");\n+  }\n+  ```\n+- You can now use a string to specify the `Logger` for <type://LoggingService> and <type://LoggingClient>. #3035\n+  ```java\n+  ServerBuilder sb = ...\n+  sb.decorator(LoggingService.builder()\n+                             .logger(\"com.foo\")\n+                             .build());\n+  ```\n+\n+## \ud83d\udcc8 Improvements\n+\n+- Span name is the service name if you use the default `HttpRequestParser` and `HttpResponseParser` with\n+  `BraveClient` and `BraveService`. #3023\n+- You can now easily find out whether SPI service interfaces are applied from the logs. #3039\n+- You can now get the log of the exception which is raised while making request and response logs. #3043\n+- The stack-trace of <type://HttpStatusException> and <type://HttpResponseException> are not logged in\n+  <type://LoggingService>. #3053, #3054\n+\n+## \ud83d\udee0\ufe0f Bug fixes\n+\n+- <type://TimeoutScheduler> is initialized exactly once. #3066\n+- Reactor subscriber context is now properly propagated. #3058\n+- Armeria Spring boot autoconfigure collects metrics correctly if <type://ArmeriaSettings#enableMetrics>\n+is `true`. #3048\n+- You now see the proper exception from WebFlux `WebClient` when <type://CircuitBreakerClient> is applied. #3064\n+- Armeria client rejects `PUSH_PROMISE` frame correctly because it doesn't support it yet. #3045", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTcwMDM3MA=="}, "originalCommit": {"oid": "e8b7d58d61c1a807ae102228ef22bc752e497cb7"}, "originalPosition": 38}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f3b92e57c9edc69bac4cb544d6824cadb5a84fc6", "author": {"user": {"login": "minwoox", "name": "minux"}}, "url": "https://github.com/line/armeria/commit/f3b92e57c9edc69bac4cb544d6824cadb5a84fc6", "committedDate": "2020-09-21T02:57:33Z", "message": "Address comments by @trustin and @ikhoon"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5d3193ea2615707c1c32bb18d9fd35180a6f2e41", "author": {"user": {"login": "minwoox", "name": "minux"}}, "url": "https://github.com/line/armeria/commit/5d3193ea2615707c1c32bb18d9fd35180a6f2e41", "committedDate": "2020-09-21T02:59:24Z", "message": "Add description"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "04ebacb2abc7d4df8cea13d2307200effa5d3ed1", "author": {"user": {"login": "minwoox", "name": "minux"}}, "url": "https://github.com/line/armeria/commit/04ebacb2abc7d4df8cea13d2307200effa5d3ed1", "committedDate": "2020-09-21T03:04:24Z", "message": "Fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "abae50fb8b99862b100928891defe7c657980ab5", "author": {"user": {"login": "minwoox", "name": "minux"}}, "url": "https://github.com/line/armeria/commit/abae50fb8b99862b100928891defe7c657980ab5", "committedDate": "2020-09-21T03:08:23Z", "message": "Add disable TLS verification"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cbb78d619dbaeec54b1f77f7de1a4451323e9670", "author": {"user": {"login": "minwoox", "name": "minux"}}, "url": "https://github.com/line/armeria/commit/cbb78d619dbaeec54b1f77f7de1a4451323e9670", "committedDate": "2020-09-22T02:03:44Z", "message": "Fix date"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkzMDkxMTgy", "url": "https://github.com/line/armeria/pull/3070#pullrequestreview-493091182", "createdAt": "2020-09-22T02:19:42Z", "commit": {"oid": "cbb78d619dbaeec54b1f77f7de1a4451323e9670"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4680, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}