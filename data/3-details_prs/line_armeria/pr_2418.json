{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY2ODU1MDQ4", "number": 2418, "title": "Fix StackOverFlow when dumpOpenSslInfo is set to true", "bodyText": "Motivation:\nRelated #2417\nModification:\n\nSet Flags.useOpenSsl first so that useOpenSsl() does not call recursively.\nFlags.dumpOneSslInfo() returns false when Flags.useOpenSsl() returns false.\nAdd a test case\n\nResult:\n\nCloses #2417\nYou can now set com.linecorp.armeria.dumpOpenSslInfo=true property.", "createdAt": "2020-01-24T14:12:41Z", "url": "https://github.com/line/armeria/pull/2418", "merged": true, "mergeCommit": {"oid": "fcfa023e62df732f17dc0aef6016d449b80416ac"}, "closed": true, "closedAt": "2020-01-29T11:38:21Z", "author": {"login": "minwoox"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb9ffpaAH2gAyMzY2ODU1MDQ4OjQ1MzNkYTQ3ZjBmZDlhZDNlMGQyNzA2MjczYTY5Mjg2YWE4NDllMWU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb_CBQ-gH2gAyMzY2ODU1MDQ4OmNkNmI0OTkzNTU3ZGJjZDAyNmE0NDZhNTc4ZTQzM2ZhNGVlYjIxMTM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "4533da47f0fd9ad3e0d2706273a69286aa849e1e", "author": {"user": {"login": "minwoox", "name": "minux"}}, "url": "https://github.com/line/armeria/commit/4533da47f0fd9ad3e0d2706273a69286aa849e1e", "committedDate": "2020-01-24T14:05:56Z", "message": "Fix StackOverFlow when dumpOpenSslInfo is set to true\nMotivation:\nRelated #2417\n\nModification:\n- Fix not to call `Flags.useOpenSsl()` in `Flags.useOpenSsl()`.\n\nResult:\n- Closes #2417\n- You can now set `com.linecorp.armeria.dumpOpenSslInfo=true` property."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ3OTg5MTg0", "url": "https://github.com/line/armeria/pull/2418#pullrequestreview-347989184", "createdAt": "2020-01-24T14:29:56Z", "commit": {"oid": "4533da47f0fd9ad3e0d2706273a69286aa849e1e"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQxNDoyOTo1NlrOFhfZjQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQxNDoyOTo1NlrOFhfZjQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDY2MTc3Mw==", "bodyText": "You don't need to address this review. Just I guess @SetSystemProperty in JUnit Pioneer seems cleaner to set a system property.\n@SetSystemProperty(key = \"some property\", value = \"new value\")\nhttps://junit-pioneer.org/docs/system-properties/", "url": "https://github.com/line/armeria/pull/2418#discussion_r370661773", "createdAt": "2020-01-24T14:29:56Z", "author": {"login": "ikhoon"}, "path": "core/src/test/java/com/linecorp/armeria/common/FlagsTest.java", "diffHunk": "@@ -48,12 +48,21 @@ public void epollAvailableOnLinux() {\n      * on Linux, Windows and OS X.\n      */\n     @Test\n-    public void openSslAvailable() {\n+    void openSslAvailable() {\n         assumeTrue(osName.startsWith(\"linux\") || osName.startsWith(\"windows\") ||\n                    osName.startsWith(\"macosx\") || osName.startsWith(\"osx\"));\n         assumeFalse(\"false\".equals(System.getProperty(\"com.linecorp.armeria.useOpenSsl\")));\n \n         assertThat(Flags.useOpenSsl()).isTrue();\n         assertThat(OpenSsl.isAvailable()).isTrue();\n     }\n+\n+    @Test\n+    void dumpOpenSslInfoDoNotThrowStackOverFlowError() {\n+        System.setProperty(\"com.linecorp.armeria.dumpOpenSslInfo\", \"true\");\n+        System.setProperty(\"com.linecorp.armeria.useOpenSsl\", \"true\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4533da47f0fd9ad3e0d2706273a69286aa849e1e"}, "originalPosition": 48}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1d2ad4067f5a0f7bfef6dfb3904ac15f7d9a6fe4", "author": {"user": {"login": "minwoox", "name": "minux"}}, "url": "https://github.com/line/armeria/commit/1d2ad4067f5a0f7bfef6dfb3904ac15f7d9a6fe4", "committedDate": "2020-01-24T14:50:16Z", "message": "Address the comment by @ikhoon"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9e8a350bfffaf5ba12e03fa4f3f71feda0115eb2", "author": {"user": {"login": "minwoox", "name": "minux"}}, "url": "https://github.com/line/armeria/commit/9e8a350bfffaf5ba12e03fa4f3f71feda0115eb2", "committedDate": "2020-01-24T15:58:23Z", "message": "Set dumpOpenSslInfo lazily"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fd432e3177ddddc422ffd5aef9135d7c3649f290", "author": {"user": {"login": "minwoox", "name": "minux"}}, "url": "https://github.com/line/armeria/commit/fd432e3177ddddc422ffd5aef9135d7c3649f290", "committedDate": "2020-01-24T16:22:22Z", "message": "Fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6b38e2c0311b7aec4f5d264c85b38e2d327205c1", "author": {"user": {"login": "minwoox", "name": "minux"}}, "url": "https://github.com/line/armeria/commit/6b38e2c0311b7aec4f5d264c85b38e2d327205c1", "committedDate": "2020-01-28T03:50:45Z", "message": "Use different class loader"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4da5da93ce7a7f1add0eb9cbd87fae303f81e875", "author": {"user": {"login": "minwoox", "name": "minux"}}, "url": "https://github.com/line/armeria/commit/4da5da93ce7a7f1add0eb9cbd87fae303f81e875", "committedDate": "2020-01-28T03:58:36Z", "message": "remove_junit-pioneer"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ5MTM0NzU5", "url": "https://github.com/line/armeria/pull/2418#pullrequestreview-349134759", "createdAt": "2020-01-28T05:17:24Z", "commit": {"oid": "4da5da93ce7a7f1add0eb9cbd87fae303f81e875"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQwNToxNzoyNFrOFiZgNQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQwNToxNzoyNFrOFiZgNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTYxMzc0OQ==", "bodyText": "nit: The current workaround is not bad. But how about making useOpenSsl and dumpOpenSslInfo package-private?\nI think We can test Flags.useOpenSsl() after setting useOpenSsl and dumpOpenSslInfo to null.", "url": "https://github.com/line/armeria/pull/2418#discussion_r371613749", "createdAt": "2020-01-28T05:17:24Z", "author": {"login": "ikhoon"}, "path": "core/src/test/java/com/linecorp/armeria/common/FlagsTest.java", "diffHunk": "@@ -48,12 +61,69 @@ public void epollAvailableOnLinux() {\n      * on Linux, Windows and OS X.\n      */\n     @Test\n-    public void openSslAvailable() {\n+    void openSslAvailable() {\n         assumeTrue(osName.startsWith(\"linux\") || osName.startsWith(\"windows\") ||\n                    osName.startsWith(\"macosx\") || osName.startsWith(\"osx\"));\n         assumeFalse(\"false\".equals(System.getProperty(\"com.linecorp.armeria.useOpenSsl\")));\n \n         assertThat(Flags.useOpenSsl()).isTrue();\n         assertThat(OpenSsl.isAvailable()).isTrue();\n     }\n+\n+    @Test\n+    void dumpOpenSslInfoDoNotThrowStackOverFlowError() throws Throwable {\n+        assumeTrue(OpenSsl.isAvailable());\n+        System.setProperty(\"com.linecorp.armeria.dumpOpenSslInfo\", \"true\");\n+\n+        // There's a chance that Flags.useOpenSsl() is already called by other test cases, which means that\n+        // we cannot set dumpOpenSslInfo. So we use our own class loader to load the Flags class.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4da5da93ce7a7f1add0eb9cbd87fae303f81e875"}, "originalPosition": 64}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ5MTM1MDE1", "url": "https://github.com/line/armeria/pull/2418#pullrequestreview-349135015", "createdAt": "2020-01-28T05:18:32Z", "commit": {"oid": "4da5da93ce7a7f1add0eb9cbd87fae303f81e875"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ5ODY4MzY4", "url": "https://github.com/line/armeria/pull/2418#pullrequestreview-349868368", "createdAt": "2020-01-29T05:23:56Z", "commit": {"oid": "4da5da93ce7a7f1add0eb9cbd87fae303f81e875"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQwNToyMzo1NlrOFi866w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQwNToyMzo1NlrOFi866w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjE5NDAyNw==", "bodyText": "AssertJ also has assumeThat.", "url": "https://github.com/line/armeria/pull/2418#discussion_r372194027", "createdAt": "2020-01-29T05:23:56Z", "author": {"login": "trustin"}, "path": "core/src/test/java/com/linecorp/armeria/common/FlagsTest.java", "diffHunk": "@@ -16,25 +16,38 @@\n package com.linecorp.armeria.common;\n \n import static org.assertj.core.api.Assertions.assertThat;\n-import static org.junit.Assume.assumeFalse;\n-import static org.junit.Assume.assumeTrue;\n+import static org.junit.jupiter.api.Assumptions.assumeFalse;\n+import static org.junit.jupiter.api.Assumptions.assumeTrue;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4da5da93ce7a7f1add0eb9cbd87fae303f81e875"}, "originalPosition": 7}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cd6b4993557dbcd026a446a578e433fa4eeb2113", "author": {"user": {"login": "minwoox", "name": "minux"}}, "url": "https://github.com/line/armeria/commit/cd6b4993557dbcd026a446a578e433fa4eeb2113", "committedDate": "2020-01-29T08:53:21Z", "message": "Use assumeThat"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 901, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}