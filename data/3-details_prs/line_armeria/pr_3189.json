{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI1NTIxMTM5", "number": 3189, "title": "Support Scala Future for annotated services", "bodyText": "Motivation:\nScala standard libary provides Future that is similar to CompletableFuture.\nBy supporting Scala Future, ScalaPB users can return a Scala Future that completes a GeneratedMesage\nwithout explicitly converting it to CompletableFuture.\nModifications:\n\nAdd scala-library as a optionalImplementation to core module\nAdd ScalaUtil for supporting Scala types\nMake ExecutionContext, which wraps eventLoop, a default injectable type for annotated service\n\nUsers can easily execute async task on top of Armeria's event loop\n\n@Get(\"/items/{id}\")\ndef items(@Param id: Int)(implicit ec: ExecutionContext): Future[String] = {\n  Future {\n    // Perform asynchronous task using Armeria's event loop\n    ...\n  }\n}\n\nConvert returned Scala Future to CompletableFuture in annotated service\nMove ScalaPbJsonMarshaller and ScalaPbGrpcDocServicePlugin from grpc-scala example\n\nResult:\n\nYou can now return Scala Future in annotated service\nYou can now inject Armeria's ExecutionContext as a parameter", "createdAt": "2020-11-23T07:31:51Z", "url": "https://github.com/line/armeria/pull/3189", "merged": true, "mergeCommit": {"oid": "5ab3609dcf5c1bb435d294537c034e73bcf1af12"}, "closed": true, "closedAt": "2020-11-25T07:54:01Z", "author": {"login": "ikhoon"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdfP3zegH2gAyNTI1NTIxMTM5OmZiOGI2NWU1NWFhNDBkMzdjNmQ1Y2Y1ZjIyZTBmYzQyMzFjNGU1MzM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdf5k03AFqTUzODIzMDg5MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "fb8b65e55aa40d37c6d5cf5f22e0fc4231c4e533", "author": {"user": {"login": "ikhoon", "name": "Ikhun Um"}}, "url": "https://github.com/line/armeria/commit/fb8b65e55aa40d37c6d5cf5f22e0fc4231c4e533", "committedDate": "2020-11-23T07:18:25Z", "message": "Support Scala Future for annotated services\n\nMotivation:\n\nScala standard libary provides [Future](https://www.scala-lang.org/api/2.12.3/scala/concurrent/Future.html) that is similar to `CompletableFuture`.\nBy supporting Scala Future, ScalaPB users can return a Scala Future that completes a `GeneratedMesage`\nwithout explicitly convertering it to `CompletableFuture`.\n\nModifications:\n\n- Add `scala-library` as a `optionalImplementation` to core module\n- Add `ScalaUtil` for supporting Scala types\n- Make `ExecutionContext`, which wraps `eventLoop`, a default injectable type for annotated service\n  - Users can easily execute async task on top of Armeria's event loop\n  ```scala\n  @Get(\"/items/{id}\")\n  def items(@Param id: Int)(implicit ec: ExecutionContext): Future[String] =\n    Future {\n      // Perform asynchronous task on top of Armeria's event loop\n      ...\n    }\n  ```\n- Convert returned Scala Future to CompletableFuture in annotated service\n- Move ScalaPbJsonMarshaller and ScalaPbGrpcDocServicePlugin from grpc-scala exmaple\n\nResult:\n\n- You can now return Scala Future in annotated service\n- You can now inject Armeria's `ExecutionContext` as an parameter"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7c0d9f10649617cbb3832ae6cb209760881708ed", "author": {"user": {"login": "ikhoon", "name": "Ikhun Um"}}, "url": "https://github.com/line/armeria/commit/7c0d9f10649617cbb3832ae6cb209760881708ed", "committedDate": "2020-11-23T07:38:06Z", "message": "Clean up"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f588db80e5f79376647bb698ce7819bdf2db56a0", "author": {"user": {"login": "ikhoon", "name": "Ikhun Um"}}, "url": "https://github.com/line/armeria/commit/f588db80e5f79376647bb698ce7819bdf2db56a0", "committedDate": "2020-11-23T07:58:16Z", "message": "Lazyily load"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8d1d205589a79b0c6af078138470fa5606929516", "author": {"user": {"login": "ikhoon", "name": "Ikhun Um"}}, "url": "https://github.com/line/armeria/commit/8d1d205589a79b0c6af078138470fa5606929516", "committedDate": "2020-11-23T10:51:38Z", "message": "Fix broken test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e6136cc698330cdec01bb53019c2b4aac58cce54", "author": {"user": {"login": "ikhoon", "name": "Ikhun Um"}}, "url": "https://github.com/line/armeria/commit/e6136cc698330cdec01bb53019c2b4aac58cce54", "committedDate": "2020-11-23T12:19:35Z", "message": "Down Scala version for optionalImplementation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7002136e89d24c5f44ec88ffb6c264b4b9d18eac", "author": {"user": {"login": "ikhoon", "name": "Ikhun Um"}}, "url": "https://github.com/line/armeria/commit/7002136e89d24c5f44ec88ffb6c264b4b9d18eac", "committedDate": "2020-11-23T13:58:39Z", "message": "jacoco"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM3MDM0MDM3", "url": "https://github.com/line/armeria/pull/3189#pullrequestreview-537034037", "createdAt": "2020-11-24T02:40:20Z", "commit": {"oid": "7002136e89d24c5f44ec88ffb6c264b4b9d18eac"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQwMjo0MDoyMFrOH4pkGA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQwMjo0Mjo0OVrOH4pnSw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTE2MzI4OA==", "bodyText": "nit: can remove scala.concurrent.", "url": "https://github.com/line/armeria/pull/3189#discussion_r529163288", "createdAt": "2020-11-24T02:40:20Z", "author": {"login": "minwoox"}, "path": "core/src/main/java/com/linecorp/armeria/internal/server/annotation/ScalaUtil.java", "diffHunk": "@@ -0,0 +1,87 @@\n+/*\n+ * Copyright 2020 LINE Corporation\n+ *\n+ * LINE Corporation licenses this file to you under the Apache License,\n+ * version 2.0 (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *   https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package com.linecorp.armeria.internal.server.annotation;\n+\n+import java.util.concurrent.CompletableFuture;\n+import java.util.concurrent.ExecutorService;\n+\n+import javax.annotation.Nullable;\n+\n+import scala.concurrent.ExecutionContext;\n+import scala.util.Failure;\n+\n+final class ScalaUtil {\n+\n+    @Nullable\n+    private static final Class<?> SCALA_FUTURE;\n+    @Nullable\n+    private static final Class<?> SCALA_EXECUTION_CONTEXT;\n+\n+    static {\n+        Class<?> futureClass;\n+        try {\n+            futureClass = Class.forName(\"scala.concurrent.Future\");\n+        } catch (ClassNotFoundException e) {\n+            futureClass = null;\n+        }\n+        SCALA_FUTURE = futureClass;\n+\n+        Class<?> executionContextClass;\n+        try {\n+            executionContextClass = Class.forName(\"scala.concurrent.ExecutionContext\");\n+        } catch (ClassNotFoundException e) {\n+            executionContextClass = null;\n+        }\n+        SCALA_EXECUTION_CONTEXT = executionContextClass;\n+    }\n+\n+    static boolean isScalaFuture(Class<?> clazz) {\n+        return SCALA_FUTURE != null && SCALA_FUTURE.isAssignableFrom(clazz);\n+    }\n+\n+    static boolean isExecutionContext(Class<?> clazz) {\n+        return SCALA_EXECUTION_CONTEXT != null && SCALA_EXECUTION_CONTEXT.isAssignableFrom(clazz);\n+    }\n+\n+    /**\n+     * A converter that converts {@link scala.concurrent.Future} to {@link CompletableFuture}.\n+     * This nested class is lazily initialized only when scala-library is in the classpath.\n+     */\n+    static final class FutureConverter {\n+\n+        static <T> CompletableFuture<T> toCompletableFuture(scala.concurrent.Future<T> scalaFuture,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7002136e89d24c5f44ec88ffb6c264b4b9d18eac"}, "originalPosition": 66}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTE2NDEwNw==", "bodyText": "nit: empty line", "url": "https://github.com/line/armeria/pull/3189#discussion_r529164107", "createdAt": "2020-11-24T02:42:49Z", "author": {"login": "minwoox"}, "path": "scalapb/scalapb_2.13/src/test/scala/com/linecorp/armeria/server/scalapb/ScalaPbResponseAnnotatedServiceTest.scala", "diffHunk": "@@ -44,7 +59,11 @@ class ScalaPbResponseAnnotatedServiceTest {\n   @BeforeEach\n   private def setUp(): Unit = {\n     server.start()\n-    client = WebClient.of(ScalaPbResponseAnnotatedServiceTest.server.httpUri)\n+    client = WebClient\n+      .builder(ScalaPbResponseAnnotatedServiceTest.server.httpUri)\n+      .responseTimeoutMillis(0)\n+      .build()\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7002136e89d24c5f44ec88ffb6c264b4b9d18eac"}, "originalPosition": 51}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "22103dae79b135c0a0fe67b44d24ec9255b0c0ca", "author": {"user": {"login": "ikhoon", "name": "Ikhun Um"}}, "url": "https://github.com/line/armeria/commit/22103dae79b135c0a0fe67b44d24ec9255b0c0ca", "committedDate": "2020-11-24T02:55:59Z", "message": "Address comments by @minwoox"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b71177a1536b504c5d247a3e389cd42da1a20d26", "author": {"user": {"login": "ikhoon", "name": "Ikhun Um"}}, "url": "https://github.com/line/armeria/commit/b71177a1536b504c5d247a3e389cd42da1a20d26", "committedDate": "2020-11-24T04:13:51Z", "message": "Clean up"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM4MjMwODkx", "url": "https://github.com/line/armeria/pull/3189#pullrequestreview-538230891", "createdAt": "2020-11-25T07:53:42Z", "commit": {"oid": "b71177a1536b504c5d247a3e389cd42da1a20d26"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4854, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}