{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY3NDI0Mjk5", "number": 2996, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQwOToyOToyN1rOEYZw5Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQxMDoxMTo1MlrOEYamKQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk0MDIzMzk3OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/com/linecorp/armeria/client/endpoint/healthcheck/HealthCheckedEndpointGroup.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQwOToyOToyN1rOHAuA-w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQwOToyOToyN1rOHAuA-w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDUxNTk2Mw==", "bodyText": "nit: could merge these two lines?", "url": "https://github.com/line/armeria/pull/2996#discussion_r470515963", "createdAt": "2020-08-14T09:29:27Z", "author": {"login": "minwoox"}, "path": "core/src/main/java/com/linecorp/armeria/client/endpoint/healthcheck/HealthCheckedEndpointGroup.java", "diffHunk": "@@ -231,8 +230,7 @@ protected void doCloseAsync(CompletableFuture<?> future) {\n      * {@link HealthCheckedEndpointGroup} with the default meter names.\n      */\n     public MeterBinder newMeterBinder(String groupName) {\n-        return newMeterBinder(new MeterIdPrefix(Flags.useLegacyMeterNames() ? \"armeria.client.endpointGroup\"\n-                                                                            : \"armeria.client.endpoint.group\",\n+        return newMeterBinder(new MeterIdPrefix(\"armeria.client.endpoint.group\",\n                                                 \"name\", groupName));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b9e3019d6b96e71cbc9dfc9aff59dd399c8659f6"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk0MDI1Njk5OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/com/linecorp/armeria/server/Server.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQwOTozNjowN1rOHAuOkA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQwOTozNjowN1rOHAuOkA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDUxOTQ0MA==", "bodyText": "nit: need a space after ,", "url": "https://github.com/line/armeria/pull/2996#discussion_r470519440", "createdAt": "2020-08-14T09:36:07Z", "author": {"login": "minwoox"}, "path": "core/src/main/java/com/linecorp/armeria/server/Server.java", "diffHunk": "@@ -486,9 +481,8 @@ private void setupServerMetrics() {\n             final GracefulShutdownSupport gracefulShutdownSupport = this.gracefulShutdownSupport;\n             assert gracefulShutdownSupport != null;\n \n-            meterRegistry.gauge(Flags.useLegacyMeterNames() ? \"armeria.server.pendingResponses\"\n-                                                            : \"armeria.server.pending.responses\",\n-                                gracefulShutdownSupport, GracefulShutdownSupport::pendingResponses);\n+            meterRegistry.gauge(\"armeria.server.pending.responses\",gracefulShutdownSupport,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b9e3019d6b96e71cbc9dfc9aff59dd399c8659f6"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk0MDI2MzUzOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/com/linecorp/armeria/server/docs/DocService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQwOTozODoxOVrOHAuSpQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQwOTozODoxOVrOHAuSpQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDUyMDQ4NQ==", "bodyText": "nit: Could merge into one line?", "url": "https://github.com/line/armeria/pull/2996#discussion_r470520485", "createdAt": "2020-08-14T09:38:19Z", "author": {"login": "minwoox"}, "path": "core/src/main/java/com/linecorp/armeria/server/docs/DocService.java", "diffHunk": "@@ -331,13 +331,13 @@ private ServiceInfo addServiceExamples(ServiceInfo service) {\n                         m.endpoints(),\n                         // Show the examples added via `DocServiceBuilder` before the examples\n                         // generated by the plugin.\n-                        concatAndDedup(exampleHttpHeaders.get(m.name()), m.exampleHttpHeaders()),\n+                        concatAndDedup(exampleHeaders.get(m.name()), m.exampleHeaders()),\n                         concatAndDedup(exampleRequests.get(m.name()), m.exampleRequests()),\n                         examplePaths.get(m.name()),\n                         exampleQueries.get(m.name()),\n                         m.httpMethod(), m.docString()))::iterator,\n-                Iterables.concat(service.exampleHttpHeaders(),\n-                                 exampleHttpHeaders.get(\"\")),\n+                Iterables.concat(service.exampleHeaders(),\n+                                 exampleHeaders.get(\"\")),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b9e3019d6b96e71cbc9dfc9aff59dd399c8659f6"}, "originalPosition": 94}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk0MDMwMzM4OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/com/linecorp/armeria/client/circuitbreaker/CircuitBreakerListener.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQwOTo1MToxNlrOHAuq6g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQwOTo1MToxNlrOHAuq6g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDUyNjY5OA==", "bodyText": "rejected.requests?", "url": "https://github.com/line/armeria/pull/2996#discussion_r470526698", "createdAt": "2020-08-14T09:51:16Z", "author": {"login": "ikhoon"}, "path": "core/src/main/java/com/linecorp/armeria/client/circuitbreaker/CircuitBreakerListener.java", "diffHunk": "@@ -31,15 +26,84 @@\n \n     /**\n      * Returns a new {@link CircuitBreakerListener} that collects metric with the specified\n-     * {@link MeterRegistry}.\n+     * {@link MeterRegistry}. The returned listener will generate the following metrics:\n+     * <table>\n+     * <caption>metrics that will be generated by this class</caption>\n+     * <tr>\n+     *   <th>metric name</th>\n+     *   <th>description</th>\n+     * </tr>\n+     * <tr>\n+     *   <td>\n+     *     {@code armeria.client.circuit.breaker.requests{name=\"<circuit breaker name>\",result=\"success\"}}\n+     *   </td>\n+     *   <td>The number of successful requests in the counter time window.</td></tr>\n+     * <tr>\n+     *   <td>\n+     *     {@code armeria.client.circuit.breaker.requests{name=\"<circuit breaker name>\",result=\"failure\"}}\n+     *   </td>\n+     *   <td>The number of failed requests in the counter time window.</td></tr>\n+     * <tr>\n+     *   <td>\n+     *     {@code armeria.client.circuit.breaker.transitions{name=\"<circuit breaker name>\",state=\"CLOSED\"}}\n+     *   </td>\n+     *   <td>The number of circuit breaker state transitions to {@link CircuitState#CLOSED}.</td></tr>\n+     * <tr>\n+     *   <td>\n+     *     {@code armeria.client.circuit.breaker.transitions{name=\"<circuit breaker name>\",state=\"OPEN\"}}\n+     *   </td>\n+     *   <td>The number of circuit breaker state transitions to {@link CircuitState#OPEN}.</td>\n+     * </tr>\n+     * <tr>\n+     *   <td>\n+     *     {@code armeria.client.circuit.breaker.transitions{name=\"<circuit breaker name>\",state=\"HALF_OPEN\"}}\n+     *   </td>\n+     *   <td>The number of circuit breaker state transitions to {@link CircuitState#HALF_OPEN}.</td>\n+     * </tr>\n+     * <tr>\n+     *   <td>{@code armeria.client.circuit.breaker.rejectedRequests{name=\"<circuit breaker name>\"}}</td>\n+     *   <td>The number of requests rejected by the circuit breaker.</td>\n+     * </tr>\n+     * </table>\n      */\n     static CircuitBreakerListener metricCollecting(MeterRegistry registry) {\n-        return metricCollecting(registry, Flags.useLegacyMeterNames() ? LEGACY_METER_NAME : DEFAULT_METER_NAME);\n+        return metricCollecting(registry, \"armeria.client.circuit.breaker\");\n     }\n \n     /**\n      * Returns a new {@link CircuitBreakerListener} that collects metric with the specified\n-     * {@link MeterRegistry} and {@link Meter} name.\n+     * {@link MeterRegistry} and {@link Meter} name. The returned listener will generate the following metrics:\n+     * <table>\n+     * <caption>metrics that will be generated by this class</caption>\n+     * <tr>\n+     *   <th>metric name</th>\n+     *   <th>description</th>\n+     * </tr>\n+     * <tr>\n+     *   <td>{@code <name>.requests{name=\"<circuit breaker name>\",result=\"success\"}}</td>\n+     *   <td>The number of successful requests in the counter time window.</td>\n+     * </tr>\n+     * <tr>\n+     *   <td>{@code <name>.requests{name=\"<circuit breaker name>\",result=\"failure\"}}</td>\n+     *   <td>The number of failed requests in the counter time window.</td>\n+     * </tr>\n+     * <tr>\n+     *   <td>{@code <name>.transitions{name=\"<circuit breaker name>\",state=\"CLOSED\"}}</td>\n+     *   <td>The number of circuit breaker state transitions to {@link CircuitState#CLOSED}.</td>\n+     * </tr>\n+     * <tr>\n+     *   <td>{@code <name>.transitions{name=\"<circuit breaker name>\",state=\"OPEN\"}}</td>\n+     *   <td>The number of circuit breaker state transitions to {@link CircuitState#OPEN}.</td>\n+     * </tr>\n+     * <tr>\n+     *   <td>{@code <name>.transitions{name=\"<circuit breaker name>\",state=\"HALF_OPEN\"}}</td>\n+     *   <td>The number of circuit breaker state transitions to {@link CircuitState#HALF_OPEN}.</td>\n+     * </tr>\n+     * <tr>\n+     *   <td>{@code <name>.rejectedRequests{name=\"<circuit breaker name>\"}}</td>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b9e3019d6b96e71cbc9dfc9aff59dd399c8659f6"}, "originalPosition": 93}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk0MDM3MDMzOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/com/linecorp/armeria/client/circuitbreaker/CircuitBreakerListener.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQxMDoxMTo1MlrOHAvS4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQxMDoxMTo1MlrOHAvS4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDUzNjkyOA==", "bodyText": "Ditto", "url": "https://github.com/line/armeria/pull/2996#discussion_r470536928", "createdAt": "2020-08-14T10:11:52Z", "author": {"login": "ikhoon"}, "path": "core/src/main/java/com/linecorp/armeria/client/circuitbreaker/CircuitBreakerListener.java", "diffHunk": "@@ -31,15 +26,84 @@\n \n     /**\n      * Returns a new {@link CircuitBreakerListener} that collects metric with the specified\n-     * {@link MeterRegistry}.\n+     * {@link MeterRegistry}. The returned listener will generate the following metrics:\n+     * <table>\n+     * <caption>metrics that will be generated by this class</caption>\n+     * <tr>\n+     *   <th>metric name</th>\n+     *   <th>description</th>\n+     * </tr>\n+     * <tr>\n+     *   <td>\n+     *     {@code armeria.client.circuit.breaker.requests{name=\"<circuit breaker name>\",result=\"success\"}}\n+     *   </td>\n+     *   <td>The number of successful requests in the counter time window.</td></tr>\n+     * <tr>\n+     *   <td>\n+     *     {@code armeria.client.circuit.breaker.requests{name=\"<circuit breaker name>\",result=\"failure\"}}\n+     *   </td>\n+     *   <td>The number of failed requests in the counter time window.</td></tr>\n+     * <tr>\n+     *   <td>\n+     *     {@code armeria.client.circuit.breaker.transitions{name=\"<circuit breaker name>\",state=\"CLOSED\"}}\n+     *   </td>\n+     *   <td>The number of circuit breaker state transitions to {@link CircuitState#CLOSED}.</td></tr>\n+     * <tr>\n+     *   <td>\n+     *     {@code armeria.client.circuit.breaker.transitions{name=\"<circuit breaker name>\",state=\"OPEN\"}}\n+     *   </td>\n+     *   <td>The number of circuit breaker state transitions to {@link CircuitState#OPEN}.</td>\n+     * </tr>\n+     * <tr>\n+     *   <td>\n+     *     {@code armeria.client.circuit.breaker.transitions{name=\"<circuit breaker name>\",state=\"HALF_OPEN\"}}\n+     *   </td>\n+     *   <td>The number of circuit breaker state transitions to {@link CircuitState#HALF_OPEN}.</td>\n+     * </tr>\n+     * <tr>\n+     *   <td>{@code armeria.client.circuit.breaker.rejectedRequests{name=\"<circuit breaker name>\"}}</td>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "79a698d2a2c129a9a26bb211d22ace11c8a08d49"}, "originalPosition": 52}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2227, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}