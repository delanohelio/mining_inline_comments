{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDczMDg4ODQ5", "number": 3024, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQyMzoyMjowNlrOEcTsNg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQxMTo0NDowMFrOEigqqw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk4MTE4MTk4OnYy", "diffSide": "RIGHT", "path": "docs-client/src/lib/transports/thrift.ts", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQyMzoyMjowNlrOHGwkaw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQyMzoyMjowNlrOHGwkaw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Njg0OTI1OQ==", "bodyText": "Notice that I need to use the endpointPath parameter to fetch the correct endpoint and thriftMethod above.", "url": "https://github.com/line/armeria/pull/3024#discussion_r476849259", "createdAt": "2020-08-25T23:22:06Z", "author": {"login": "kojilin"}, "path": "docs-client/src/lib/transports/thrift.ts", "diffHunk": "@@ -58,7 +59,7 @@ export default class ThriftTransport extends Transport {\n       hdrs.set(name, value);\n     }\n \n-    const httpResponse = await fetch(endpoint.pathMapping, {\n+    const httpResponse = await fetch(endpointPath || endpoint.pathMapping, {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1cb11d4fcf50f8751a7224f8d3ec43e180a75380"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk4Mjk1NTQ5OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/com/linecorp/armeria/server/docs/DocService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQwODo0NjozOVrOHHCMyQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQwODo0NjozOVrOHHCMyQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzEzODEyMQ==", "bodyText": "Question: can we do concatAndDedup for the queries as well?", "url": "https://github.com/line/armeria/pull/3024#discussion_r477138121", "createdAt": "2020-08-26T08:46:39Z", "author": {"login": "minwoox"}, "path": "core/src/main/java/com/linecorp/armeria/server/docs/DocService.java", "diffHunk": "@@ -333,7 +333,7 @@ private ServiceInfo addServiceExamples(ServiceInfo service) {\n                         // generated by the plugin.\n                         concatAndDedup(exampleHeaders.get(m.name()), m.exampleHeaders()),\n                         concatAndDedup(exampleRequests.get(m.name()), m.exampleRequests()),\n-                        examplePaths.get(m.name()),\n+                        concatAndDedup(examplePaths.get(m.name()), m.examplePaths()),\n                         exampleQueries.get(m.name()),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9b3c246144f343ff1713366cc527127aa5f7e9a8"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk4Mjk2NDQyOnYy", "diffSide": "LEFT", "path": "thrift0.13/src/main/java/com/linecorp/armeria/internal/server/thrift/ThriftDocServicePlugin.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQwODo0OToxMFrOHHCSeg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQwODo0OToxMFrOHHCSeg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzEzOTU3OA==", "bodyText": "How about removing this constructor because it's unstableApi and not used anymore?", "url": "https://github.com/line/armeria/pull/3024#discussion_r477139578", "createdAt": "2020-08-26T08:49:10Z", "author": {"login": "minwoox"}, "path": "thrift0.13/src/main/java/com/linecorp/armeria/internal/server/thrift/ThriftDocServicePlugin.java", "diffHunk": "@@ -266,7 +268,15 @@ private static MethodInfo newMethodInfo(String name,\n                       .map(TypeSignature::ofNamed)\n                       .collect(toImmutableList());\n \n-        return new MethodInfo(name, returnTypeSignature, parameters, exceptionTypeSignatures, endpoints);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9b3c246144f343ff1713366cc527127aa5f7e9a8"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk4MzUxOTg3OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/com/linecorp/armeria/server/docs/DocService.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQxMToyNToxMFrOHHHpdA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QwMDo0NTozN1rOHHq1qg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzIyNzM4MA==", "bodyText": "one question, in this PR I remove the ImmutableList.builderWithExpectedSize(Iterables.size(examplePaths)); and change it don't use size. Because below code is making iterable after streamed.\n    private static <T> Iterable<T> concatAndDedup(Iterable<T> first, Iterable<T> second) {\n        return Stream.concat(Streams.stream(first), Streams.stream(second)).distinct()::iterator;\n    }\n}\n\nIs it intentioned? I mean when we see the Iterable parameter, should we think we just can iterate once.", "url": "https://github.com/line/armeria/pull/3024#discussion_r477227380", "createdAt": "2020-08-26T11:25:10Z", "author": {"login": "kojilin"}, "path": "core/src/main/java/com/linecorp/armeria/server/docs/DocService.java", "diffHunk": "@@ -333,8 +333,8 @@ private ServiceInfo addServiceExamples(ServiceInfo service) {\n                         // generated by the plugin.\n                         concatAndDedup(exampleHeaders.get(m.name()), m.exampleHeaders()),\n                         concatAndDedup(exampleRequests.get(m.name()), m.exampleRequests()),\n-                        examplePaths.get(m.name()),\n-                        exampleQueries.get(m.name()),\n+                        concatAndDedup(examplePaths.get(m.name()), m.examplePaths()),\n+                        concatAndDedup(exampleQueries.get(m.name()), m.exampleQueries()),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a27ac4d58ef7626bfde5a3f5531cf208bf036d13"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzgwMzk0Ng==", "bodyText": "Oops I think we can just do distinct().collect(toImmutableList());", "url": "https://github.com/line/armeria/pull/3024#discussion_r477803946", "createdAt": "2020-08-27T00:45:37Z", "author": {"login": "minwoox"}, "path": "core/src/main/java/com/linecorp/armeria/server/docs/DocService.java", "diffHunk": "@@ -333,8 +333,8 @@ private ServiceInfo addServiceExamples(ServiceInfo service) {\n                         // generated by the plugin.\n                         concatAndDedup(exampleHeaders.get(m.name()), m.exampleHeaders()),\n                         concatAndDedup(exampleRequests.get(m.name()), m.exampleRequests()),\n-                        examplePaths.get(m.name()),\n-                        exampleQueries.get(m.name()),\n+                        concatAndDedup(examplePaths.get(m.name()), m.examplePaths()),\n+                        concatAndDedup(exampleQueries.get(m.name()), m.exampleQueries()),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzIyNzM4MA=="}, "originalCommit": {"oid": "a27ac4d58ef7626bfde5a3f5531cf208bf036d13"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyNzk1MzI2OnYy", "diffSide": "RIGHT", "path": "docs-client/src/containers/MethodPage/EndpointPath.tsx", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QwMzoyMjoyMlrOHNvCIQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QwMzoyMjoyMlrOHNvCIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDE2NDEyOQ==", "bodyText": "nit: No need to use return?", "url": "https://github.com/line/armeria/pull/3024#discussion_r484164129", "createdAt": "2020-09-07T03:22:22Z", "author": {"login": "trustin"}, "path": "docs-client/src/containers/MethodPage/EndpointPath.tsx", "diffHunk": "@@ -32,39 +33,54 @@ interface Props {\n   onPathFormChange: (e: ChangeEvent<HTMLInputElement>) => void;\n }\n \n-const EndpointPath: React.FunctionComponent<Props> = (props) => (\n-  <>\n-    <Typography variant=\"body2\" paragraph />\n-    <Button color=\"secondary\" onClick={props.onEditEndpointPathClick}>\n-      Endpoint path\n-    </Button>\n-    <Typography variant=\"body2\" paragraph />\n-    {props.endpointPathOpen && (\n-      <>\n-        {props.examplePaths.length > 0 && (\n-          <>\n-            <Typography variant=\"body2\" paragraph />\n-            <Dropdown\n-              placeholder=\"Select an example path...\"\n-              options={props.examplePaths}\n-              onChange={props.onSelectedPathChange}\n-            />\n-          </>\n-        )}\n-        <Typography variant=\"body2\" paragraph />\n-        <TextField\n-          fullWidth\n-          value={props.additionalPath}\n-          placeholder={endpointPathPlaceHolder}\n-          onChange={props.onPathFormChange}\n-          inputProps={{\n-            readOnly: !props.editable,\n-            className: 'code',\n-          }}\n-        />\n-      </>\n-    )}\n-  </>\n-);\n+const EndpointPath: React.FunctionComponent<Props> = (props) => {\n+  return (", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cdd563640c321add69454c910b9628be26e51542"}, "originalPosition": 47}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA0NjIyMjUxOnYy", "diffSide": "RIGHT", "path": "docs-client/src/lib/transports/transport.ts", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQxMTo0NDowMFrOHQbh3w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQxMTo0NDowMFrOHQbh3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njk5MDMwMw==", "bodyText": "Could remove | null?\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                endpointPath?: string | null,\n          \n          \n            \n                endpointPath?: string,", "url": "https://github.com/line/armeria/pull/3024#discussion_r486990303", "createdAt": "2020-09-11T11:44:00Z", "author": {"login": "ikhoon"}, "path": "docs-client/src/lib/transports/transport.ts", "diffHunk": "@@ -51,11 +51,44 @@ export default abstract class Transport {\n     return this.doSend(method, filledHeaders, bodyJson, endpointPath, queries);\n   }\n \n-  public findDebugMimeTypeEndpoint(method: Method): Endpoint {\n-    const endpoint = method.endpoints.find((ep) =>\n-      ep.availableMimeTypes.includes(this.getDebugMimeType()),\n-    );\n+  public findDebugMimeTypeEndpoint(\n+    method: Method,\n+    endpointPath?: string | null,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9a8e4f0f29191e41fbc28120a581a5a8e7797530"}, "originalPosition": 10}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2286, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}