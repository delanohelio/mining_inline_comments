{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY5ODg5OTgx", "number": 2439, "title": "Public API clean up", "bodyText": "Related: #2360\n\nRemoved ExceptionFilter which is not used anywhere.\nAdded StreamDecoderFactory.gzip() and deflate() and hid\n{Gzip,Deflate}StreamDecoderFactory.\nRemoved AbstractConcurrencyLimitingClient.Deferred.\nDeprecated DefaultRequestLog to hide it from public API later.\nRemoved everything under 'structured' package.\nCleaned up and move Jackson serializers for Thrift types to common.thrift.\nDEFAULT -> ofDefault()\nMinor Javadoc fixes here and there", "createdAt": "2020-02-01T11:46:18Z", "url": "https://github.com/line/armeria/pull/2439", "merged": true, "mergeCommit": {"oid": "add6da5035552ac15fae8086433e1e8bbe4b26bf"}, "closed": true, "closedAt": "2020-02-03T06:59:29Z", "author": {"login": "trustin"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcACSUVAH2gAyMzY5ODg5OTgxOjgzNGZjNTQzYWIyMDE4YTUxMzQ2ODA3YzVlZGY4YzAzOWZmZWMzN2U=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcAm1QtgH2gAyMzY5ODg5OTgxOjViNzU5NmE0MDEwZGJhZGY1ZGVjMTE2NmY4NzlkZTlhYmYxYTY1ZWI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "834fc543ab2018a51346807c5edf8c039ffec37e", "author": {"user": {"login": "trustin", "name": "Trustin Lee"}}, "url": "https://github.com/line/armeria/commit/834fc543ab2018a51346807c5edf8c039ffec37e", "committedDate": "2020-02-01T11:45:54Z", "message": "Public API clean up\n\nRelated: #2360\n\n- Removed `ExceptionFilter` which is not used anywhere.\n- Added `StreamDecoderFactory.gzip()` and `deflate()` and deprecated\n  `{Gzip,Deflate}StreamDecoderFactory`.\n- Removed `AbstractConcurrencyLimitingClient.Deferred`.\n- `DEFAULT` -> `ofDefault()`\n- Minor Javadoc fixes here and there"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7df64a9f8dba9c4a2386275b539f60d51a3c0d20", "author": {"user": {"login": "trustin", "name": "Trustin Lee"}}, "url": "https://github.com/line/armeria/commit/7df64a9f8dba9c4a2386275b539f60d51a3c0d20", "committedDate": "2020-02-01T11:55:49Z", "message": "Update Javadocs for `armeria-zookeeper`"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5ad087cab6208bb019ff8d0a76314ecee6ee7f4b", "author": {"user": {"login": "trustin", "name": "Trustin Lee"}}, "url": "https://github.com/line/armeria/commit/5ad087cab6208bb019ff8d0a76314ecee6ee7f4b", "committedDate": "2020-02-01T11:58:09Z", "message": "Checkstyle"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c911825eadc2ca55fcfc790819a69593efa7e9be", "author": {"user": {"login": "trustin", "name": "Trustin Lee"}}, "url": "https://github.com/line/armeria/commit/c911825eadc2ca55fcfc790819a69593efa7e9be", "committedDate": "2020-02-01T13:18:48Z", "message": "Remove everything under 'structured' package and clean up Thrift Jackson serialization"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6ef1fbd9299716e88469a27551028f327b37949a", "author": {"user": {"login": "trustin", "name": "Trustin Lee"}}, "url": "https://github.com/line/armeria/commit/6ef1fbd9299716e88469a27551028f327b37949a", "committedDate": "2020-02-01T13:27:26Z", "message": "Deprecate `DefaultRequestLog` to hide it from public API later"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUxOTg5OTEy", "url": "https://github.com/line/armeria/pull/2439#pullrequestreview-351989912", "createdAt": "2020-02-03T01:49:06Z", "commit": {"oid": "6ef1fbd9299716e88469a27551028f327b37949a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUxOTkyMjU3", "url": "https://github.com/line/armeria/pull/2439#pullrequestreview-351992257", "createdAt": "2020-02-03T02:06:31Z", "commit": {"oid": "6ef1fbd9299716e88469a27551028f327b37949a"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QwMjowNjozMlrOFkk84g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QwMjowNjozMlrOFkk84g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzg5ODQ2Ng==", "bodyText": "nit: Could be private?", "url": "https://github.com/line/armeria/pull/2439#discussion_r373898466", "createdAt": "2020-02-03T02:06:32Z", "author": {"login": "ikhoon"}, "path": "thrift/src/main/java/com/linecorp/armeria/common/thrift/ThriftJacksonSerializers.java", "diffHunk": "@@ -0,0 +1,233 @@\n+/*\n+ * Copyright 2020 LINE Corporation\n+ *\n+ * LINE Corporation licenses this file to you under the Apache License,\n+ * version 2.0 (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *   https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package com.linecorp.armeria.common.thrift;\n+\n+import java.io.IOException;\n+import java.io.Serializable;\n+import java.util.function.Consumer;\n+\n+import javax.annotation.Nullable;\n+\n+import org.apache.thrift.TApplicationException;\n+import org.apache.thrift.TBase;\n+import org.apache.thrift.TException;\n+import org.apache.thrift.protocol.TMessage;\n+import org.apache.thrift.protocol.TProtocol;\n+import org.apache.thrift.transport.TMemoryBuffer;\n+\n+import com.fasterxml.jackson.core.JsonGenerator;\n+import com.fasterxml.jackson.databind.BeanDescription;\n+import com.fasterxml.jackson.databind.JavaType;\n+import com.fasterxml.jackson.databind.JsonSerializer;\n+import com.fasterxml.jackson.databind.SerializationConfig;\n+import com.fasterxml.jackson.databind.SerializerProvider;\n+import com.fasterxml.jackson.databind.ser.Serializers;\n+import com.fasterxml.jackson.databind.ser.std.StdSerializer;\n+\n+import com.linecorp.armeria.common.thrift.text.TTextProtocol;\n+\n+final class ThriftJacksonSerializers extends Serializers.Base implements Serializable {\n+\n+    private static final long serialVersionUID = -285900387635271875L;\n+\n+    @Override\n+    public JsonSerializer<?> findSerializer(SerializationConfig config, JavaType type,\n+                                            BeanDescription beanDesc) {\n+\n+        final Class<?> rawType = type.getRawClass();\n+        if (TMessage.class.isAssignableFrom(rawType)) {\n+            return new TMessageJsonSerializer();\n+        }\n+        if (TBase.class.isAssignableFrom(rawType)) {\n+            return new TBaseJsonSerializer();\n+        }\n+        if (TApplicationException.class.isAssignableFrom(rawType)) {\n+            return new TApplicationExceptionJsonSerializer();\n+        }\n+        if (ThriftCall.class.isAssignableFrom(rawType)) {\n+            return new ThriftCallJsonSerializer();\n+        }\n+        if (ThriftReply.class.isAssignableFrom(rawType)) {\n+            return new ThriftReplyJsonSerializer();\n+        }\n+        return super.findSerializer(config, type, beanDesc);\n+    }\n+\n+    static void serializeTMessage(TMessage value, JsonGenerator gen) throws IOException {\n+        gen.writeStartObject();\n+\n+        gen.writeStringField(\"name\", value.name);\n+        gen.writeNumberField(\"type\", value.type);\n+        gen.writeNumberField(\"seqid\", value.seqid);\n+\n+        gen.writeEndObject();\n+    }\n+\n+    @SuppressWarnings(\"rawtypes\")\n+    static void serializeTBase(@Nullable TBase value, JsonGenerator gen) throws IOException {\n+        if (value == null) {\n+            gen.writeNull();\n+            return;\n+        }\n+\n+        gen.writeRawValue(serializeTBaseLike(protocol -> {\n+            try {\n+                value.write(protocol);\n+            } catch (TException ex) {\n+                throw new IllegalArgumentException(ex);\n+            }\n+        }));\n+    }\n+\n+    static void serializeTApplicationException(@Nullable TApplicationException value, JsonGenerator gen)\n+            throws IOException {\n+        if (value == null) {\n+            gen.writeNull();\n+            return;\n+        }\n+\n+        gen.writeRawValue(serializeTBaseLike(protocol -> {\n+            try {\n+                value.write(protocol);\n+            } catch (TException ex) {\n+                throw new IllegalArgumentException(ex);\n+            }\n+        }));\n+    }\n+\n+    static String serializeTBaseLike(Consumer<TProtocol> writer) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6ef1fbd9299716e88469a27551028f327b37949a"}, "originalPosition": 111}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUyMDI1ODM3", "url": "https://github.com/line/armeria/pull/2439#pullrequestreview-352025837", "createdAt": "2020-02-03T05:23:49Z", "commit": {"oid": "6ef1fbd9299716e88469a27551028f327b37949a"}, "state": "APPROVED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QwNToyMzo1MFrOFkmpfA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QwNTo0ODoyOVrOFkm5eQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzkyNjI2OA==", "bodyText": "Maybe use enum singleton pattern for simple singletons like these", "url": "https://github.com/line/armeria/pull/2439#discussion_r373926268", "createdAt": "2020-02-03T05:23:50Z", "author": {"login": "anuraaga"}, "path": "core/src/main/java/com/linecorp/armeria/client/encoding/GzipStreamDecoderFactory.java", "diffHunk": "@@ -22,7 +22,11 @@\n /**\n  * A {@link StreamDecoderFactory} which supports the 'gzip' encoding.\n  */\n-public class GzipStreamDecoderFactory implements StreamDecoderFactory {\n+final class GzipStreamDecoderFactory implements StreamDecoderFactory {\n+\n+    static final GzipStreamDecoderFactory INSTANCE = new GzipStreamDecoderFactory();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6ef1fbd9299716e88469a27551028f327b37949a"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzkyNjk5NA==", "bodyText": "This stopped being a singleton - probably not a big issue but just to make sure", "url": "https://github.com/line/armeria/pull/2439#discussion_r373926994", "createdAt": "2020-02-03T05:28:19Z", "author": {"login": "anuraaga"}, "path": "spring/boot-autoconfigure/src/main/java/com/linecorp/armeria/spring/MeterIdPrefixFunctionFactory.java", "diffHunk": "@@ -27,10 +27,20 @@\n \n     /**\n      * The default {@link MeterIdPrefixFunctionFactory} instance.\n+     *\n+     * @deprecated Use {@link #ofDefault()}.\n      */\n-    MeterIdPrefixFunctionFactory DEFAULT = (type, serviceName) ->\n-            MeterIdPrefixFunction.ofDefault(\"armeria.\" + requireNonNull(type, \"type\"))\n-                                 .withTags(\"service\", requireNonNull(serviceName, \"serviceName\"));\n+    @Deprecated\n+    MeterIdPrefixFunctionFactory DEFAULT = ofDefault();\n+\n+    /**\n+     * Returns the default {@link MeterIdPrefixFunctionFactory} instance.\n+     */\n+    static MeterIdPrefixFunctionFactory ofDefault() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6ef1fbd9299716e88469a27551028f327b37949a"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzkzMDM2MQ==", "bodyText": "The following sentence explains deregistration and I think this reads better as just which registers the current..., it's the main point of the class.", "url": "https://github.com/line/armeria/pull/2439#discussion_r373930361", "createdAt": "2020-02-03T05:48:29Z", "author": {"login": "anuraaga"}, "path": "zookeeper/src/main/java/com/linecorp/armeria/server/zookeeper/ZooKeeperUpdatingListener.java", "diffHunk": "@@ -25,15 +25,20 @@\n import org.apache.zookeeper.CreateMode;\n \n import com.linecorp.armeria.client.Endpoint;\n+import com.linecorp.armeria.client.zookeeper.ZooKeeperEndpointGroup;\n import com.linecorp.armeria.common.zookeeper.NodeValueCodec;\n import com.linecorp.armeria.internal.zookeeper.ZooKeeperDefaults;\n import com.linecorp.armeria.server.Server;\n+import com.linecorp.armeria.server.ServerListener;\n import com.linecorp.armeria.server.ServerListenerAdapter;\n import com.linecorp.armeria.server.ServerPort;\n \n /**\n- * A ZooKeeper Server Listener. When you add this listener, server will be automatically registered\n- * into the ZooKeeper.\n+ * A {@link ServerListener} which (de)registers the current {@link Server} to", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6ef1fbd9299716e88469a27551028f327b37949a"}, "originalPosition": 15}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7d67195fb4c612caab89a79c5a607e11dd2e0e1d", "author": {"user": {"login": "trustin", "name": "Trustin Lee"}}, "url": "https://github.com/line/armeria/commit/7d67195fb4c612caab89a79c5a607e11dd2e0e1d", "committedDate": "2020-02-03T05:52:43Z", "message": "Merge branch 'master' into api_clean_up"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d99ccb4436ced0cbd0ae92bd669970c2f3cd9745", "author": {"user": {"login": "trustin", "name": "Trustin Lee"}}, "url": "https://github.com/line/armeria/commit/d99ccb4436ced0cbd0ae92bd669970c2f3cd9745", "committedDate": "2020-02-03T06:09:49Z", "message": "Address the comments from @anuraaga\n\n- Made the default `MeterIdPrefixFunctionFactory` a singleton.\n- Merged `{Gzip,Deflate}StreamDecoderFactory` into an enum class.\n- Fixed Javadoc."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5b7596a4010dbadf5dec1166f879de9abf1a65eb", "author": {"user": {"login": "trustin", "name": "Trustin Lee"}}, "url": "https://github.com/line/armeria/commit/5b7596a4010dbadf5dec1166f879de9abf1a65eb", "committedDate": "2020-02-03T06:20:39Z", "message": "Fix"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 932, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}