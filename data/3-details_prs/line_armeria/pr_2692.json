{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE0NDQ4NjI3", "number": 2692, "title": "Fix a bug where ClassLoader blocks thread when using TTEXT", "bodyText": "Motivation:\nWhen decoding TTEXT protocol to Thrift Struct, FieldMetaData does not provide class instance,\nit tries to load class from FQCN.\nIf TTEXT is used in production, the thread could be blocked by ClassLoader.\njava.lang.Thread.State: RUNNABLE\n    at sun.misc.URLClassPath$Loader.getResource(URLClassPath.java:727)\n    at sun.misc.URLClassPath.getResource(URLClassPath.java:239)\n    at java.net.URLClassLoader$1.run(URLClassLoader.java:365)\n    at java.net.URLClassLoader$1.run(URLClassLoader.java:362)\n    at java.security.AccessController.doPrivileged(Native Method)\n    at java.net.URLClassLoader.findClass(URLClassLoader.java:361)\n    at java.lang.ClassLoader.loadClass(ClassLoader.java:424)\n    - locked <0x00000004cc90fcf8> (a java.lang.Object)\n    at org.springframework.boot.loader.LaunchedURLClassLoader.loadClass(LaunchedURLClassLoader.java:92)\n    at java.lang.ClassLoader.loadClass(ClassLoader.java:357)\n    at java.lang.Class.forName0(Native Method)\n    at java.lang.Class.forName(Class.java:264)\n    at com.linecorp.armeria.common.thrift.text.StructContext.computeFieldNameMap(StructContext.java:202)\nModifications:\n\nCache loaded class instance from FQCN\n\nResult:\n\nLess thread blocking", "createdAt": "2020-05-07T04:09:53Z", "url": "https://github.com/line/armeria/pull/2692", "merged": true, "mergeCommit": {"oid": "c23becb4e4c0e0dc39474573cf75cad8e6172420"}, "closed": true, "closedAt": "2020-05-08T03:45:51Z", "author": {"login": "ikhoon"}, "timelineItems": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABce1JdvgH2gAyNDE0NDQ4NjI3OmY1OTI3ODE3YWEyMjQyOTBhOTU4OGIyM2UxY2MxYzRkNjY1ZThiYjk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcfJd8NgFqTQwNzk3NjAzOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "f5927817aa224290a9588b23e1cc1c4d665e8bb9", "author": {"user": {"login": "ikhoon", "name": "Ikhun Um"}}, "url": "https://github.com/line/armeria/commit/f5927817aa224290a9588b23e1cc1c4d665e8bb9", "committedDate": "2020-05-07T03:59:07Z", "message": "Fix a bug where ClassLoader blocks thread when using TTEXT\n\nMotivation:\nWhen decoding TTEXT protocol to Thrift Struct, FieldMetaData does not provide class instance,\nit tries to load class from FQCN.\n\nIf TTEXT is used in production, the thread could be blocked by ClassLoader.\n```java\njava.lang.Thread.State: RUNNABLE\n    at sun.misc.URLClassPath$Loader.getResource(URLClassPath.java:727)\n    at sun.misc.URLClassPath.getResource(URLClassPath.java:239)\n    at java.net.URLClassLoader$1.run(URLClassLoader.java:365)\n    at java.net.URLClassLoader$1.run(URLClassLoader.java:362)\n    at java.security.AccessController.doPrivileged(Native Method)\n    at java.net.URLClassLoader.findClass(URLClassLoader.java:361)\n    at java.lang.ClassLoader.loadClass(ClassLoader.java:424)\n    - locked <0x00000004cc90fcf8> (a java.lang.Object)\n    at org.springframework.boot.loader.LaunchedURLClassLoader.loadClass(LaunchedURLClassLoader.java:92)\n    at java.lang.ClassLoader.loadClass(ClassLoader.java:357)\n    at java.lang.Class.forName0(Native Method)\n    at java.lang.Class.forName(Class.java:264)\n    at com.linecorp.armeria.common.thrift.text.StructContext.computeFieldNameMap(StructContext.java:202)\n```\n\nModifications:\n\n* Cache loaded class instance from FQCN\n\nResult:\n* Less thread blocking"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA3MTM5MjE0", "url": "https://github.com/line/armeria/pull/2692#pullrequestreview-407139214", "createdAt": "2020-05-07T04:20:49Z", "commit": {"oid": "f5927817aa224290a9588b23e1cc1c4d665e8bb9"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA3MTQzMjQx", "url": "https://github.com/line/armeria/pull/2692#pullrequestreview-407143241", "createdAt": "2020-05-07T04:36:50Z", "commit": {"oid": "f5927817aa224290a9588b23e1cc1c4d665e8bb9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QwNDozNjo1MFrOGRuFvQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QwNDozNjo1MFrOGRuFvQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTIzNDEwOQ==", "bodyText": "How about using Class#forName(, false ,) not to initialize an instance? Initializing seems unnecessary by specifications. https://docs.oracle.com/javase/specs/jls/se8/html/jls-12.html#jls-12.4 I guess, it makes lock shorter by reducing an overhead of class loader.", "url": "https://github.com/line/armeria/pull/2692#discussion_r421234109", "createdAt": "2020-05-07T04:36:50Z", "author": {"login": "hexoul"}, "path": "thrift/src/main/java/com/linecorp/armeria/common/thrift/text/StructContext.java", "diffHunk": "@@ -198,9 +200,18 @@ protected TField getTFieldByName(String name) throws TException {\n                     // Workaround a bug where the generated 'FieldMetaData' does not provide\n                     // a fully qualified class name.\n                     final String fqcn = clazz.getPackage().getName() + '.' + elementMetaData.getTypedefName();\n-                    try {\n-                        classMap.put(fieldName, Class.forName(fqcn));\n-                    } catch (ClassNotFoundException ignored) {\n+                    Class<?> fieldClass = fieldMetaDataClassCache.get(fqcn);\n+                    if (fieldClass == null) {\n+                        fieldClass = fieldMetaDataClassCache.computeIfAbsent(fqcn, key -> {\n+                            try {\n+                                return Class.forName(fqcn);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f5927817aa224290a9588b23e1cc1c4d665e8bb9"}, "originalPosition": 27}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA3MTg0NTQ0", "url": "https://github.com/line/armeria/pull/2692#pullrequestreview-407184544", "createdAt": "2020-05-07T06:36:42Z", "commit": {"oid": "f5927817aa224290a9588b23e1cc1c4d665e8bb9"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e3fde3e83a44552289c60c1788a006fdfe6100b9", "author": {"user": {"login": "ikhoon", "name": "Ikhun Um"}}, "url": "https://github.com/line/armeria/commit/e3fde3e83a44552289c60c1788a006fdfe6100b9", "committedDate": "2020-05-07T07:14:07Z", "message": "Address comments by @anuraaga, @trustin / Add benchmark and use weah hash map"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA3MjA1MzAz", "url": "https://github.com/line/armeria/pull/2692#pullrequestreview-407205303", "createdAt": "2020-05-07T07:15:44Z", "commit": {"oid": "e3fde3e83a44552289c60c1788a006fdfe6100b9"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QwNzoxNTo0NFrOGRxZjQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QwNzoxNzoyMVrOGRxc3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTI4ODMzMw==", "bodyText": "weakValueCache", "url": "https://github.com/line/armeria/pull/2692#discussion_r421288333", "createdAt": "2020-05-07T07:15:44Z", "author": {"login": "trustin"}, "path": "benchmarks/src/jmh/java/com/linecorp/armeria/internal/common/CacheableClassLoader.java", "diffHunk": "@@ -0,0 +1,67 @@\n+/*\n+ * Copyright 2020 LINE Corporation\n+ *\n+ * LINE Corporation licenses this file to you under the Apache License,\n+ * version 2.0 (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *   https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package com.linecorp.armeria.internal.common;\n+\n+import java.util.Map;\n+import java.util.concurrent.ConcurrentHashMap;\n+\n+import com.google.common.collect.MapMaker;\n+\n+public final class CacheableClassLoader {\n+\n+    private static final Map<String, Class<?>> cache = new ConcurrentHashMap<>();\n+    private static final Map<String, Class<?>> weakKeyCache = new MapMaker().weakValues().makeMap();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e3fde3e83a44552289c60c1788a006fdfe6100b9"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTI4OTE4Mw==", "bodyText": "Cruft?", "url": "https://github.com/line/armeria/pull/2692#discussion_r421289183", "createdAt": "2020-05-07T07:17:21Z", "author": {"login": "trustin"}, "path": "thrift/src/test/java/com/linecorp/armeria/server/thrift/ThriftTreeStructureTest.java", "diffHunk": "@@ -66,7 +66,7 @@ void setUp() {\n         treeRequest = new TreeRequest().setBase(base);\n     }\n \n-    @Test\n+    @RepeatedTest(10)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e3fde3e83a44552289c60c1788a006fdfe6100b9"}, "originalPosition": 14}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "964f535d5ec69537a921e32f5e796dbb38708793", "author": {"user": {"login": "ikhoon", "name": "Ikhun Um"}}, "url": "https://github.com/line/armeria/commit/964f535d5ec69537a921e32f5e796dbb38708793", "committedDate": "2020-05-07T07:18:20Z", "message": "Fix checkstyle"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA3MjA1MjEy", "url": "https://github.com/line/armeria/pull/2692#pullrequestreview-407205212", "createdAt": "2020-05-07T07:15:35Z", "commit": {"oid": "e3fde3e83a44552289c60c1788a006fdfe6100b9"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QwNzoxNjoyMlrOGRxa5Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QwNzoxNjoyMlrOGRxa5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTI4ODY3Nw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                                return Class.forName(fqcn);\n          \n          \n            \n                                                return Class.forName(key);", "url": "https://github.com/line/armeria/pull/2692#discussion_r421288677", "createdAt": "2020-05-07T07:16:22Z", "author": {"login": "anuraaga"}, "path": "thrift/src/main/java/com/linecorp/armeria/common/thrift/text/StructContext.java", "diffHunk": "@@ -197,10 +199,22 @@ protected TField getTFieldByName(String name) throws TException {\n                 } else {\n                     // Workaround a bug where the generated 'FieldMetaData' does not provide\n                     // a fully qualified class name.\n-                    final String fqcn = clazz.getPackage().getName() + '.' + elementMetaData.getTypedefName();\n-                    try {\n-                        classMap.put(fieldName, Class.forName(fqcn));\n-                    } catch (ClassNotFoundException ignored) {\n+                    final String typedefName = elementMetaData.getTypedefName();\n+                    if (typedefName != null) {\n+                        final String fqcn = clazz.getPackage().getName() + '.' + typedefName;\n+                        Class<?> fieldClass = fieldMetaDataClassCache.get(fqcn);\n+                        if (fieldClass == null) {\n+                            fieldClass = fieldMetaDataClassCache.computeIfAbsent(fqcn, key -> {\n+                                try {\n+                                    return Class.forName(fqcn);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e3fde3e83a44552289c60c1788a006fdfe6100b9"}, "originalPosition": 31}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "440ccda8207e4c4cb6fd561d24eeacfc5791d907", "author": {"user": {"login": "ikhoon", "name": "Ikhun Um"}}, "url": "https://github.com/line/armeria/commit/440ccda8207e4c4cb6fd561d24eeacfc5791d907", "committedDate": "2020-05-07T07:21:11Z", "message": "Address comments @trustin / Fix wrong field name"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "28f2f8b7a9a1ba833f6e9fdaaf39831d630885ed", "author": {"user": {"login": "ikhoon", "name": "Ikhun Um"}}, "url": "https://github.com/line/armeria/commit/28f2f8b7a9a1ba833f6e9fdaaf39831d630885ed", "committedDate": "2020-05-07T07:23:58Z", "message": "Address comments @anuraaga"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cde0bcfd85ee933dfbae4b7a0558401dff971f6c", "author": {"user": {"login": "ikhoon", "name": "Ikhun Um"}}, "url": "https://github.com/line/armeria/commit/cde0bcfd85ee933dfbae4b7a0558401dff971f6c", "committedDate": "2020-05-07T07:25:56Z", "message": "Use passed key in computeIfAbsent"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA3MjE5MzUy", "url": "https://github.com/line/armeria/pull/2692#pullrequestreview-407219352", "createdAt": "2020-05-07T07:37:39Z", "commit": {"oid": "cde0bcfd85ee933dfbae4b7a0558401dff971f6c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QwNzozNzozOVrOGRyHiQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QwNzozNzozOVrOGRyHiQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTMwMDEwNQ==", "bodyText": "nit. new line?", "url": "https://github.com/line/armeria/pull/2692#discussion_r421300105", "createdAt": "2020-05-07T07:37:39Z", "author": {"login": "hexoul"}, "path": "benchmarks/src/jmh/java/com/linecorp/armeria/internal/common/ClassLoadBenchmark.java", "diffHunk": "@@ -0,0 +1,54 @@\n+/*\n+ * Copyright 2020 LINE Corporation\n+ *\n+ * LINE Corporation licenses this file to you under the Apache License,\n+ * version 2.0 (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *   https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package com.linecorp.armeria.internal.common;\n+\n+import org.openjdk.jmh.annotations.Benchmark;\n+import org.openjdk.jmh.infra.Blackhole;\n+\n+/**\n+ * Microbenchmarks of {@link Class} loading.\n+ */\n+public class ClassLoadBenchmark {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cde0bcfd85ee933dfbae4b7a0558401dff971f6c"}, "originalPosition": 25}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "617740bc265217fd755472ecb0eabb6122569db4", "author": {"user": {"login": "ikhoon", "name": "Ikhun Um"}}, "url": "https://github.com/line/armeria/commit/617740bc265217fd755472ecb0eabb6122569db4", "committedDate": "2020-05-07T07:59:28Z", "message": "Address comments by @hexoul / Add new line after class declaration"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA3OTc2MDM4", "url": "https://github.com/line/armeria/pull/2692#pullrequestreview-407976038", "createdAt": "2020-05-08T03:39:35Z", "commit": {"oid": "617740bc265217fd755472ecb0eabb6122569db4"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 454, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}