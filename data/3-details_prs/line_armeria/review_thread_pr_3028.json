{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDczNzEyNTcy", "number": 3028, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQwNzo1Mjo1MlrOEcdNDw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QwNzoxODo0M1rOEgzzXw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk4Mjc0MDYzOnYy", "diffSide": "RIGHT", "path": "site/src/pages/docs/client-service-discovery.mdx", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQwNzo1Mjo1MlrOHHAJ2g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQwODozNzozOVrOHHB2fA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzEwNDYwMg==", "bodyText": "How about mentioning that ZooKeeperRegistrationSpec#curator(String) is compatible with Spring Cloud Zookeeper.", "url": "https://github.com/line/armeria/pull/3028#discussion_r477104602", "createdAt": "2020-08-26T07:52:52Z", "author": {"login": "ikhoon"}, "path": "site/src/pages/docs/client-service-discovery.mdx", "diffHunk": "@@ -234,4 +234,76 @@ group.whenReady().get();\n \n ## ZooKeeper-based service discovery with `ZooKeeperEndpointGroup`\n \n-See [Service discovery with ZooKeeper](/docs/advanced-zookeeper).\n+Use <type://ZooKeeperEndpointGroup> and <type://ZooKeeperDiscoverySpec> to retrieve the information of servers:\n+\n+```java\n+import com.linecorp.armeria.client.zookeeper.ZooKeeperDiscoverySpec;\n+import com.linecorp.armeria.client.zookeeper.ZooKeeperEndpointGroup;\n+\n+String zkConnectionStr = \"myZooKeeperHost:2181\";\n+String znodePath = \"/myProductionEndpoints\";\n+ZooKeeperDiscoverySpec discoverySpec = ZooKeeperDiscoverySpec.curator(serviceName);\n+ZooKeeperEndpointGroup myEndpointGroup =\n+        ZooKeeperEndpointGroup.builder(zkConnectionStr, znodePath, discoverySpec)\n+                              .sessionTimeoutMillis(10000)\n+                              .build();\n+```\n+\n+The <type://ZooKeeperEndpointGroup> is used to fetch the binary representation of server information.\n+The <type://ZooKeeperDiscoverySpec> converts the binary representation to an <type://Endpoint>.\n+\n+<type://ZooKeeperDiscoverySpec#curator(String)> uses the format of\n+[Curator Service Discovery](https://curator.apache.org/curator-x-discovery/index.html). If you registered your\n+server with <type://ZooKeeperRegistrationSpec#curator(String)>, you must use\n+<type://ZooKeeperDiscoverySpec#curator(String)>.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f41b3a64110cc93a8cefee8b79778ae3ba47ea9"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzEzMjQxMg==", "bodyText": "Fixed. \ud83d\ude09", "url": "https://github.com/line/armeria/pull/3028#discussion_r477132412", "createdAt": "2020-08-26T08:37:39Z", "author": {"login": "minwoox"}, "path": "site/src/pages/docs/client-service-discovery.mdx", "diffHunk": "@@ -234,4 +234,76 @@ group.whenReady().get();\n \n ## ZooKeeper-based service discovery with `ZooKeeperEndpointGroup`\n \n-See [Service discovery with ZooKeeper](/docs/advanced-zookeeper).\n+Use <type://ZooKeeperEndpointGroup> and <type://ZooKeeperDiscoverySpec> to retrieve the information of servers:\n+\n+```java\n+import com.linecorp.armeria.client.zookeeper.ZooKeeperDiscoverySpec;\n+import com.linecorp.armeria.client.zookeeper.ZooKeeperEndpointGroup;\n+\n+String zkConnectionStr = \"myZooKeeperHost:2181\";\n+String znodePath = \"/myProductionEndpoints\";\n+ZooKeeperDiscoverySpec discoverySpec = ZooKeeperDiscoverySpec.curator(serviceName);\n+ZooKeeperEndpointGroup myEndpointGroup =\n+        ZooKeeperEndpointGroup.builder(zkConnectionStr, znodePath, discoverySpec)\n+                              .sessionTimeoutMillis(10000)\n+                              .build();\n+```\n+\n+The <type://ZooKeeperEndpointGroup> is used to fetch the binary representation of server information.\n+The <type://ZooKeeperDiscoverySpec> converts the binary representation to an <type://Endpoint>.\n+\n+<type://ZooKeeperDiscoverySpec#curator(String)> uses the format of\n+[Curator Service Discovery](https://curator.apache.org/curator-x-discovery/index.html). If you registered your\n+server with <type://ZooKeeperRegistrationSpec#curator(String)>, you must use\n+<type://ZooKeeperDiscoverySpec#curator(String)>.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzEwNDYwMg=="}, "originalCommit": {"oid": "3f41b3a64110cc93a8cefee8b79778ae3ba47ea9"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk4Mjc2NDgzOnYy", "diffSide": "RIGHT", "path": "site/src/pages/docs/setup.mdx", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQwNzo1ODozOVrOHHAYPg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQwODozNzo0N1rOHHB24w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzEwODI4Ng==", "bodyText": "IIRC, [ZooKeeper service discovery][ZooKeeper service discovery] could be simplified with [ZooKeeper service discovery]", "url": "https://github.com/line/armeria/pull/3028#discussion_r477108286", "createdAt": "2020-08-26T07:58:39Z", "author": {"login": "ikhoon"}, "path": "site/src/pages/docs/setup.mdx", "diffHunk": "@@ -68,10 +72,15 @@ the list of major Armeria artifacts which might interest you:\n |                                             |  See [Embedding a servlet container](/docs/server-servlet).                     |\n +---------------------------------------------+---------------------------------------------------------------------------------+\n | `armeria-zookeeper3`                        | ZooKeeper 3 based service discovery.                                            |\n-|                                             | See [Service discovery with ZooKeeper](/docs/advanced-zookeeper).               |\n+|                                             | See [ZooKeeper service discovery][ZooKeeper service discovery] and              |", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f41b3a64110cc93a8cefee8b79778ae3ba47ea9"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzEzMjUxNQ==", "bodyText": "Fixed. \ud83d\ude09", "url": "https://github.com/line/armeria/pull/3028#discussion_r477132515", "createdAt": "2020-08-26T08:37:47Z", "author": {"login": "minwoox"}, "path": "site/src/pages/docs/setup.mdx", "diffHunk": "@@ -68,10 +72,15 @@ the list of major Armeria artifacts which might interest you:\n |                                             |  See [Embedding a servlet container](/docs/server-servlet).                     |\n +---------------------------------------------+---------------------------------------------------------------------------------+\n | `armeria-zookeeper3`                        | ZooKeeper 3 based service discovery.                                            |\n-|                                             | See [Service discovery with ZooKeeper](/docs/advanced-zookeeper).               |\n+|                                             | See [ZooKeeper service discovery][ZooKeeper service discovery] and              |", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzEwODI4Ng=="}, "originalCommit": {"oid": "3f41b3a64110cc93a8cefee8b79778ae3ba47ea9"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyODM3OTQ4OnYy", "diffSide": "RIGHT", "path": "site/src/pages/docs/client-service-discovery.mdx", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QwNzoxNjoyOFrOHNy5AQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QwNzoxNjoyOFrOHNy5AQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDIyNzMyOQ==", "bodyText": "How about using <Tip /> ?", "url": "https://github.com/line/armeria/pull/3028#discussion_r484227329", "createdAt": "2020-09-07T07:16:28Z", "author": {"login": "trustin"}, "path": "site/src/pages/docs/client-service-discovery.mdx", "diffHunk": "@@ -234,4 +234,77 @@ group.whenReady().get();\n \n ## ZooKeeper-based service discovery with `ZooKeeperEndpointGroup`\n \n-See [Service discovery with ZooKeeper](/docs/advanced-zookeeper).\n+Use <type://ZooKeeperEndpointGroup> and <type://ZooKeeperDiscoverySpec> to retrieve the information of servers:\n+\n+```java\n+import com.linecorp.armeria.client.zookeeper.ZooKeeperDiscoverySpec;\n+import com.linecorp.armeria.client.zookeeper.ZooKeeperEndpointGroup;\n+\n+String zkConnectionStr = \"myZooKeeperHost:2181\";\n+String znodePath = \"/myProductionEndpoints\";\n+ZooKeeperDiscoverySpec discoverySpec = ZooKeeperDiscoverySpec.curator(serviceName);\n+ZooKeeperEndpointGroup myEndpointGroup =\n+        ZooKeeperEndpointGroup.builder(zkConnectionStr, znodePath, discoverySpec)\n+                              .sessionTimeoutMillis(10000)\n+                              .build();\n+```\n+\n+The <type://ZooKeeperEndpointGroup> is used to fetch the binary representation of server information.\n+The <type://ZooKeeperDiscoverySpec> converts the binary representation to an <type://Endpoint>.\n+\n+<type://ZooKeeperDiscoverySpec#curator(String)> uses the format of\n+[Curator Service Discovery](https://curator.apache.org/curator-x-discovery/index.html) which is compatible\n+with [Spring Cloud Zookeeper](https://cloud.spring.io/spring-cloud-zookeeper/reference/html/). If you\n+registered your server with <type://ZooKeeperRegistrationSpec#curator(String)>, you must use\n+<type://ZooKeeperDiscoverySpec#curator(String)>.\n+\n+You can use an existing\n+[CuratorFramework](https://curator.apache.org/apidocs/org/apache/curator/framework/CuratorFramework.html)\n+instance instead of the ZooKeeper connection string at this time as well.\n+\n+```java\n+import org.apache.curator.framework.CuratorFramework;\n+\n+CuratorFramework client = ...\n+String znodePath = ...\n+ZooKeeperDiscoverySpec discoverySpec = ...\n+ZooKeeperEndpointGroup myEndpointGroup =\n+        ZooKeeperEndpointGroup.builder(client, znodePath, discoverySpec)\n+                              .build();\n+```\n+\n+For more information, please refer to the API documentation of the\n+[com.linecorp.armeria.client.zookeeper](https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/client/package-summary.html) package.\n+\n+### See also\n+- [ZooKeeper service registration](/docs/server-service-registration#zookeeper-based-service-registration-with-zookeeperupdatinglistener)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "95a9e053349585ba6d39a37b8b0215d2a01d05a2"}, "originalPosition": 48}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyODM4MDI0OnYy", "diffSide": "RIGHT", "path": "site/src/pages/docs/client-service-discovery.mdx", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QwNzoxNjo0NlrOHNy5fQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QwNzoxNjo0NlrOHNy5fQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDIyNzQ1Mw==", "bodyText": "Ditto", "url": "https://github.com/line/armeria/pull/3028#discussion_r484227453", "createdAt": "2020-09-07T07:16:46Z", "author": {"login": "trustin"}, "path": "site/src/pages/docs/client-service-discovery.mdx", "diffHunk": "@@ -234,4 +234,77 @@ group.whenReady().get();\n \n ## ZooKeeper-based service discovery with `ZooKeeperEndpointGroup`\n \n-See [Service discovery with ZooKeeper](/docs/advanced-zookeeper).\n+Use <type://ZooKeeperEndpointGroup> and <type://ZooKeeperDiscoverySpec> to retrieve the information of servers:\n+\n+```java\n+import com.linecorp.armeria.client.zookeeper.ZooKeeperDiscoverySpec;\n+import com.linecorp.armeria.client.zookeeper.ZooKeeperEndpointGroup;\n+\n+String zkConnectionStr = \"myZooKeeperHost:2181\";\n+String znodePath = \"/myProductionEndpoints\";\n+ZooKeeperDiscoverySpec discoverySpec = ZooKeeperDiscoverySpec.curator(serviceName);\n+ZooKeeperEndpointGroup myEndpointGroup =\n+        ZooKeeperEndpointGroup.builder(zkConnectionStr, znodePath, discoverySpec)\n+                              .sessionTimeoutMillis(10000)\n+                              .build();\n+```\n+\n+The <type://ZooKeeperEndpointGroup> is used to fetch the binary representation of server information.\n+The <type://ZooKeeperDiscoverySpec> converts the binary representation to an <type://Endpoint>.\n+\n+<type://ZooKeeperDiscoverySpec#curator(String)> uses the format of\n+[Curator Service Discovery](https://curator.apache.org/curator-x-discovery/index.html) which is compatible\n+with [Spring Cloud Zookeeper](https://cloud.spring.io/spring-cloud-zookeeper/reference/html/). If you\n+registered your server with <type://ZooKeeperRegistrationSpec#curator(String)>, you must use\n+<type://ZooKeeperDiscoverySpec#curator(String)>.\n+\n+You can use an existing\n+[CuratorFramework](https://curator.apache.org/apidocs/org/apache/curator/framework/CuratorFramework.html)\n+instance instead of the ZooKeeper connection string at this time as well.\n+\n+```java\n+import org.apache.curator.framework.CuratorFramework;\n+\n+CuratorFramework client = ...\n+String znodePath = ...\n+ZooKeeperDiscoverySpec discoverySpec = ...\n+ZooKeeperEndpointGroup myEndpointGroup =\n+        ZooKeeperEndpointGroup.builder(client, znodePath, discoverySpec)\n+                              .build();\n+```\n+\n+For more information, please refer to the API documentation of the\n+[com.linecorp.armeria.client.zookeeper](https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/client/package-summary.html) package.\n+\n+### See also\n+- [ZooKeeper service registration](/docs/server-service-registration#zookeeper-based-service-registration-with-zookeeperupdatinglistener)\n+\n+## Eureka-based service discovery with `EurekaEndpointGroup`\n+\n+Use <type://EurekaEndpointGroup> to retrieve the information of servers:\n+\n+```java\n+import com.linecorp.armeria.client.eureka.EurekaEndpointGroup;\n+\n+EurekaEndpointGroup eurekaEndpointGroup =\n+        EurekaEndpointGroup.of(\"https://eureka.com:8001/eureka/v2\");\n+```\n+\n+If you want to retrieve the information of certain regions or a service,\n+use <type://EurekaEndpointGroupBuilder>:\n+\n+```java\n+import com.linecorp.armeria.client.eureka.EurekaEndpointGroupBuilder;\n+\n+EurekaEndpointGroupBuilder builder =\n+        EurekaEndpointGroup.builder(\"https://eureka.com:8001/eureka/v2\");\n+builder.regions(\"aws\")\n+       .appName(\"myApplication\");\n+EurekaEndpointGroup eurekaEndpointGroup = builder.build();\n+```\n+\n+For more information, please refer to the API documentation of the\n+[com.linecorp.armeria.client.eureka](https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/client/eureka/package-summary.html) package.\n+\n+### See also\n+- [Eureka service registration](/docs/server-service-registration#eureka-based-service-registration-with-eurekaupdatinglistener)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "95a9e053349585ba6d39a37b8b0215d2a01d05a2"}, "originalPosition": 78}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyODM4MTY4OnYy", "diffSide": "RIGHT", "path": "site/src/pages/docs/server-service-registration.mdx", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QwNzoxNzoxNFrOHNy6Sg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QwNzoxNzoxNFrOHNy6Sg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDIyNzY1OA==", "bodyText": "for service registration:", "url": "https://github.com/line/armeria/pull/3028#discussion_r484227658", "createdAt": "2020-09-07T07:17:14Z", "author": {"login": "trustin"}, "path": "site/src/pages/docs/server-service-registration.mdx", "diffHunk": "@@ -1,6 +1,16 @@\n-# Service discovery with ZooKeeper\n+# Service registration for discovery\n \n-## Automatic service registration\n+You can use <type://ServerListener> to register the information of Armeria servers when they start so that\n+a client uses the information to distribute its requests to the servers autonomously, unlike\n+traditional server-side load balancing where the requests go through a dedicated load balancer such as\n+[L4 and L7 switches](https://en.wikipedia.org/wiki/Multilayer_switch#Layer_4%E2%80%937_switch,_web_switch,_or_content_switch).\n+\n+Armeria provides 2 <type://ServerListener> implementations for registering:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "95a9e053349585ba6d39a37b8b0215d2a01d05a2"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyODM4MzIxOnYy", "diffSide": "RIGHT", "path": "site/src/pages/docs/server-service-registration.mdx", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QwNzoxNzo0M1rOHNy7NQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QwNzoxNzo0M1rOHNy7NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDIyNzg5Mw==", "bodyText": "<Tip /> ?", "url": "https://github.com/line/armeria/pull/3028#discussion_r484227893", "createdAt": "2020-09-07T07:17:43Z", "author": {"login": "trustin"}, "path": "site/src/pages/docs/server-service-registration.mdx", "diffHunk": "@@ -58,55 +68,51 @@ server.start();\n ```\n \n For more information, please refer to the API documentation of the\n-[com.linecorp.armeria.server.zookeeper](https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/common/zookeeper/package-summary.html) package.\n-\n-## Service discovery\n-\n-Use <type://ZooKeeperEndpointGroup> and <type://ZooKeeperDiscoverySpec> to retrieve the information of servers:\n-\n-```java\n-import com.linecorp.armeria.client.zookeeper.ZooKeeperDiscoverySpec;\n-import com.linecorp.armeria.client.zookeeper.ZooKeeperEndpointGroup;\n-\n-String zkConnectionStr = \"myZooKeeperHost:2181\";\n-String znodePath = \"/myProductionEndpoints\";\n-ZooKeeperDiscoverySpec discoverySpec = ZooKeeperDiscoverySpec.curator(serviceName);\n-ZooKeeperEndpointGroup myEndpointGroup =\n-        ZooKeeperEndpointGroup.builder(zkConnectionStr, znodePath, discoverySpec)\n-                              .sessionTimeoutMillis(10000)\n-                              .build();\n-```\n+[com.linecorp.armeria.server.zookeeper](https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/zookeeper/package-summary.html) package.\n \n-The <type://ZooKeeperEndpointGroup> is used to fetch the binary representation of server information.\n-The <type://ZooKeeperDiscoverySpec> converts the binary representation to an <type://Endpoint>.\n+### See also\n+- [ZooKeeper service discovery](/docs/client-service-discovery#zookeeper-based-service-discovery-with-zookeeperendpointgroup)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "95a9e053349585ba6d39a37b8b0215d2a01d05a2"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyODM4NjIzOnYy", "diffSide": "RIGHT", "path": "site/src/pages/docs/server-service-registration.mdx", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QwNzoxODo0M1rOHNy9GA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QwNzoxODo0M1rOHNy9GA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDIyODM3Ng==", "bodyText": "Maybe you can just chain?", "url": "https://github.com/line/armeria/pull/3028#discussion_r484228376", "createdAt": "2020-09-07T07:18:43Z", "author": {"login": "trustin"}, "path": "site/src/pages/docs/server-service-registration.mdx", "diffHunk": "@@ -58,55 +68,51 @@ server.start();\n ```\n \n For more information, please refer to the API documentation of the\n-[com.linecorp.armeria.server.zookeeper](https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/common/zookeeper/package-summary.html) package.\n-\n-## Service discovery\n-\n-Use <type://ZooKeeperEndpointGroup> and <type://ZooKeeperDiscoverySpec> to retrieve the information of servers:\n-\n-```java\n-import com.linecorp.armeria.client.zookeeper.ZooKeeperDiscoverySpec;\n-import com.linecorp.armeria.client.zookeeper.ZooKeeperEndpointGroup;\n-\n-String zkConnectionStr = \"myZooKeeperHost:2181\";\n-String znodePath = \"/myProductionEndpoints\";\n-ZooKeeperDiscoverySpec discoverySpec = ZooKeeperDiscoverySpec.curator(serviceName);\n-ZooKeeperEndpointGroup myEndpointGroup =\n-        ZooKeeperEndpointGroup.builder(zkConnectionStr, znodePath, discoverySpec)\n-                              .sessionTimeoutMillis(10000)\n-                              .build();\n-```\n+[com.linecorp.armeria.server.zookeeper](https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/zookeeper/package-summary.html) package.\n \n-The <type://ZooKeeperEndpointGroup> is used to fetch the binary representation of server information.\n-The <type://ZooKeeperDiscoverySpec> converts the binary representation to an <type://Endpoint>.\n+### See also\n+- [ZooKeeper service discovery](/docs/client-service-discovery#zookeeper-based-service-discovery-with-zookeeperendpointgroup)\n \n-<type://ZooKeeperDiscoverySpec#curator(String)> uses the format of\n-[Curator Service Discovery](https://curator.apache.org/curator-x-discovery/index.html). If you registered your\n-server with <type://ZooKeeperRegistrationSpec#curator(String)>, you must use\n-<type://ZooKeeperDiscoverySpec#curator(String)>.\n+## Eureka-based service registration with `EurekaUpdatingListener`\n \n-You can use an existing\n-[CuratorFramework](https://curator.apache.org/apidocs/org/apache/curator/framework/CuratorFramework.html)\n-instance instead of the ZooKeeper connection string at this time as well.\n+Use <type://EurekaUpdatingListener> to register your server to the Eureka:\n \n ```java\n-import org.apache.curator.framework.CuratorFramework;\n+import com.linecorp.armeria.server.Server;\n+import com.linecorp.armeria.server.ServerBuilder;\n+import com.linecorp.armeria.server.eureka.EurekaUpdatingListener;\n \n-CuratorFramework client = ...\n-String znodePath = ...\n-ZooKeeperDiscoverySpec discoverySpec = ...\n-ZooKeeperEndpointGroup myEndpointGroup =\n-        ZooKeeperEndpointGroup.builder(client, znodePath, discoverySpec)\n-                              .build();\n+EurekaUpdatingListener listener =\n+        EurekaUpdatingListener.of(\"https://eureka.com:8001/eureka/v2\");\n+\n+ServerBuilder sb = Server.builder();\n+sb.addListener(listener);\n+sb.builder().start();\n ```\n \n-Now, you can specify the <type://ZooKeeperEndpointGroup> when you build a client:\n+If you want to specify the [properties](https://github.com/Netflix/eureka/wiki/Eureka-REST-operations)\n+of the <type://Server>, use <type://EurekaUpdatingListenerBuilder>:\n \n ```java\n-import com.linecorp.armeria.common.SessionProtocol;\n-\n-WebClient webClient = WebClient.of(SessionProtocol.HTTP, myEndpointGroup, \"/hello\");\n+import com.linecorp.armeria.server.eureka.EurekaUpdatingListenerBuilder;\n+\n+EurekaUpdatingListenerBuilder builder =\n+        EurekaUpdatingListener.builder(\"https://eureka.com:8001/eureka/v2\");\n+builder.instanceId(\"i-00000000\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "95a9e053349585ba6d39a37b8b0215d2a01d05a2"}, "originalPosition": 91}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2289, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}