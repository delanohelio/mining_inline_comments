{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc4MTUxMjMx", "number": 2520, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQwNzo1MToyM1rODhyopQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQwODo1Mjo1MVrODhziDQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2NzU5MjA1OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/com/linecorp/armeria/common/logging/RequestContextExporter.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQwNzo1MToyM1rOFsuOUg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQwNzo1OTozMVrOFsuZIw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjQzODk5NA==", "bodyText": "!needsUpdate &&", "url": "https://github.com/line/armeria/pull/2520#discussion_r382438994", "createdAt": "2020-02-21T07:51:23Z", "author": {"login": "anuraaga"}, "path": "core/src/main/java/com/linecorp/armeria/common/logging/RequestContextExporter.java", "diffHunk": "@@ -235,15 +240,37 @@ public boolean containsBuiltIn(BuiltInProperty property) {\n         requireNonNull(ctx, \"ctx\");\n \n         final State state = state(ctx);\n-        final RequestLog log = ctx.log().partial();\n-        final int availabilities = log.availabilityStamp();\n-        if (availabilities != state.availabilities) {\n-            state.availabilities = availabilities;\n-            export(state, ctx, log);\n+        final RequestLogAccess log = ctx.log();\n+\n+        boolean needsUpdate;\n+\n+        // Needs to update if availabilityStamp has changed.\n+        final int availabilityStamp = log.availabilityStamp();\n+        if (state.availabilityStamp != availabilityStamp) {\n+            state.availabilityStamp = availabilityStamp;\n+            needsUpdate = true;\n+        } else {\n+            needsUpdate = false;\n+        }\n+\n+        // Needs to update if any attributes have changed.\n+        if (attrs != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5f0e8a3d26cb678762f075ac8f97996e0fd82078"}, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjQ0MTYwMw==", "bodyText": "Let me make it clear that this loop also updates state.attrValues while scanning.", "url": "https://github.com/line/armeria/pull/2520#discussion_r382441603", "createdAt": "2020-02-21T07:59:03Z", "author": {"login": "trustin"}, "path": "core/src/main/java/com/linecorp/armeria/common/logging/RequestContextExporter.java", "diffHunk": "@@ -235,15 +240,37 @@ public boolean containsBuiltIn(BuiltInProperty property) {\n         requireNonNull(ctx, \"ctx\");\n \n         final State state = state(ctx);\n-        final RequestLog log = ctx.log().partial();\n-        final int availabilities = log.availabilityStamp();\n-        if (availabilities != state.availabilities) {\n-            state.availabilities = availabilities;\n-            export(state, ctx, log);\n+        final RequestLogAccess log = ctx.log();\n+\n+        boolean needsUpdate;\n+\n+        // Needs to update if availabilityStamp has changed.\n+        final int availabilityStamp = log.availabilityStamp();\n+        if (state.availabilityStamp != availabilityStamp) {\n+            state.availabilityStamp = availabilityStamp;\n+            needsUpdate = true;\n+        } else {\n+            needsUpdate = false;\n+        }\n+\n+        // Needs to update if any attributes have changed.\n+        if (attrs != null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjQzODk5NA=="}, "originalCommit": {"oid": "5f0e8a3d26cb678762f075ac8f97996e0fd82078"}, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjQ0MTc2Mw==", "bodyText": "Ah :)", "url": "https://github.com/line/armeria/pull/2520#discussion_r382441763", "createdAt": "2020-02-21T07:59:31Z", "author": {"login": "anuraaga"}, "path": "core/src/main/java/com/linecorp/armeria/common/logging/RequestContextExporter.java", "diffHunk": "@@ -235,15 +240,37 @@ public boolean containsBuiltIn(BuiltInProperty property) {\n         requireNonNull(ctx, \"ctx\");\n \n         final State state = state(ctx);\n-        final RequestLog log = ctx.log().partial();\n-        final int availabilities = log.availabilityStamp();\n-        if (availabilities != state.availabilities) {\n-            state.availabilities = availabilities;\n-            export(state, ctx, log);\n+        final RequestLogAccess log = ctx.log();\n+\n+        boolean needsUpdate;\n+\n+        // Needs to update if availabilityStamp has changed.\n+        final int availabilityStamp = log.availabilityStamp();\n+        if (state.availabilityStamp != availabilityStamp) {\n+            state.availabilityStamp = availabilityStamp;\n+            needsUpdate = true;\n+        } else {\n+            needsUpdate = false;\n+        }\n+\n+        // Needs to update if any attributes have changed.\n+        if (attrs != null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjQzODk5NA=="}, "originalCommit": {"oid": "5f0e8a3d26cb678762f075ac8f97996e0fd82078"}, "originalPosition": 69}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2NzU5NDE0OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/com/linecorp/armeria/common/logging/RequestContextExporter.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQwNzo1MjoxMlrOFsuPiw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQwODowMjo1NVrOFsudyQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjQzOTMwNw==", "bodyText": "if (!equals) {\n  needsUpdate = true;\n  break;\n}", "url": "https://github.com/line/armeria/pull/2520#discussion_r382439307", "createdAt": "2020-02-21T07:52:12Z", "author": {"login": "anuraaga"}, "path": "core/src/main/java/com/linecorp/armeria/common/logging/RequestContextExporter.java", "diffHunk": "@@ -235,15 +240,37 @@ public boolean containsBuiltIn(BuiltInProperty property) {\n         requireNonNull(ctx, \"ctx\");\n \n         final State state = state(ctx);\n-        final RequestLog log = ctx.log().partial();\n-        final int availabilities = log.availabilityStamp();\n-        if (availabilities != state.availabilities) {\n-            state.availabilities = availabilities;\n-            export(state, ctx, log);\n+        final RequestLogAccess log = ctx.log();\n+\n+        boolean needsUpdate;\n+\n+        // Needs to update if availabilityStamp has changed.\n+        final int availabilityStamp = log.availabilityStamp();\n+        if (state.availabilityStamp != availabilityStamp) {\n+            state.availabilityStamp = availabilityStamp;\n+            needsUpdate = true;\n+        } else {\n+            needsUpdate = false;\n+        }\n+\n+        // Needs to update if any attributes have changed.\n+        if (attrs != null) {\n+            assert state.attrValues != null;\n+            for (int i = 0; i < attrs.length; i++) {\n+                final Object oldValue = state.attrValues[i];\n+                final Object newValue = ctx.attr(attrs[i].key);\n+                state.attrValues[i] = newValue;\n+                needsUpdate |= !Objects.equals(oldValue, newValue);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5f0e8a3d26cb678762f075ac8f97996e0fd82078"}, "originalPosition": 75}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjQ0Mjk1Mw==", "bodyText": "Can't break out of the loop because it needs to update state.attrValues with the new values.", "url": "https://github.com/line/armeria/pull/2520#discussion_r382442953", "createdAt": "2020-02-21T08:02:55Z", "author": {"login": "trustin"}, "path": "core/src/main/java/com/linecorp/armeria/common/logging/RequestContextExporter.java", "diffHunk": "@@ -235,15 +240,37 @@ public boolean containsBuiltIn(BuiltInProperty property) {\n         requireNonNull(ctx, \"ctx\");\n \n         final State state = state(ctx);\n-        final RequestLog log = ctx.log().partial();\n-        final int availabilities = log.availabilityStamp();\n-        if (availabilities != state.availabilities) {\n-            state.availabilities = availabilities;\n-            export(state, ctx, log);\n+        final RequestLogAccess log = ctx.log();\n+\n+        boolean needsUpdate;\n+\n+        // Needs to update if availabilityStamp has changed.\n+        final int availabilityStamp = log.availabilityStamp();\n+        if (state.availabilityStamp != availabilityStamp) {\n+            state.availabilityStamp = availabilityStamp;\n+            needsUpdate = true;\n+        } else {\n+            needsUpdate = false;\n+        }\n+\n+        // Needs to update if any attributes have changed.\n+        if (attrs != null) {\n+            assert state.attrValues != null;\n+            for (int i = 0; i < attrs.length; i++) {\n+                final Object oldValue = state.attrValues[i];\n+                final Object newValue = ctx.attr(attrs[i].key);\n+                state.attrValues[i] = newValue;\n+                needsUpdate |= !Objects.equals(oldValue, newValue);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjQzOTMwNw=="}, "originalCommit": {"oid": "5f0e8a3d26cb678762f075ac8f97996e0fd82078"}, "originalPosition": 75}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2NzYwMDA5OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/com/linecorp/armeria/common/logging/RequestContextExporter.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQwNzo1NTowNFrOFsuTKg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQwNzo1NTowNFrOFsuTKg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjQ0MDIzNA==", "bodyText": "I guess easier to read if this is false and remove below else.", "url": "https://github.com/line/armeria/pull/2520#discussion_r382440234", "createdAt": "2020-02-21T07:55:04Z", "author": {"login": "anuraaga"}, "path": "core/src/main/java/com/linecorp/armeria/common/logging/RequestContextExporter.java", "diffHunk": "@@ -235,15 +240,37 @@ public boolean containsBuiltIn(BuiltInProperty property) {\n         requireNonNull(ctx, \"ctx\");\n \n         final State state = state(ctx);\n-        final RequestLog log = ctx.log().partial();\n-        final int availabilities = log.availabilityStamp();\n-        if (availabilities != state.availabilities) {\n-            state.availabilities = availabilities;\n-            export(state, ctx, log);\n+        final RequestLogAccess log = ctx.log();\n+\n+        boolean needsUpdate;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5f0e8a3d26cb678762f075ac8f97996e0fd82078"}, "originalPosition": 57}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2NzczOTAxOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/com/linecorp/armeria/common/logging/RequestContextExporter.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQwODo1Mjo1MVrOFsvnvQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQwODo1Mjo1MVrOFsvnvQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjQ2MTg4NQ==", "bodyText": "nit\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    for (int i = 0; i < attrs.length; i++) {\n          \n          \n            \n                    for (int i = 0; i < numAttrs; i++) {", "url": "https://github.com/line/armeria/pull/2520#discussion_r382461885", "createdAt": "2020-02-21T08:52:51Z", "author": {"login": "ikhoon"}, "path": "core/src/main/java/com/linecorp/armeria/common/logging/RequestContextExporter.java", "diffHunk": "@@ -537,54 +565,60 @@ private void exportRpcResponse(Map<String, String> out, RequestLog log) {\n         }\n     }\n \n-    private void exportAttributes(Map<String, String> out, RequestContext ctx) {\n+    private void exportAttributes(State state) {\n         if (attrs == null) {\n             return;\n         }\n \n-        for (ExportEntry<AttributeKey<?>> e : attrs) {\n-            putOtherProperty(out, e, ctx.attr(e.key));\n+        assert state.attrValues != null;\n+        for (int i = 0; i < attrs.length; i++) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "71b598e927833207da0dd2afa8c5771a0e30c1ef"}, "originalPosition": 414}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2683, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}