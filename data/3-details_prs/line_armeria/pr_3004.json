{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY5OTM3ODY1", "number": 3004, "title": "Make `RequestContext.setAttr()` return an old value / Remove `*AttrIf\u2026", "bodyText": "\u2026Absent()`\nMotivation:\n\nA user would expect the behavior similar to Map.put() when setting a\ncontext attribute. However, RequestContext.setAttr() does not return\nanything.\nThe behavior of setAttrIfAbsent() and computeAttrIfAbsent() where\nthey set the attribute only when 'own attribute' is absent can be\nconfusing to a user. (That is, it will set an attribute even if\nthere's already an attribute in the root context.)\n\nAdding more variants of those methods would increase the cognitive\nload of the context API. Given that they are not really used often,\nit's better removing them entirely for simplicity.\n\n\n\nModifications:\n\nMade RequestContext.setAttr() return the old attribute value,\nlooking up the root context if necessary.\nRemoved RequestContext.setAttrIfAbsent() and computeAttrIfAbsent()\n\nResult:\n\n\nCloses #2997\n\n\nRequestContext.setAttr() now returns the old attribute value,\nlooking up the root context if necessary.\n\n\n(Breaking) RequestContext.setAttrIfAbsent() and\ncomputeAttrIfAbsent() have been removed. Use hasOwnAttr() and\nsetAttr() instead:\nif (ctx.hasOwnAttr(MY_ATTR)) {\n    ctx.setAttr(MY_ATTR, newValue);\n}", "createdAt": "2020-08-19T05:52:56Z", "url": "https://github.com/line/armeria/pull/3004", "merged": true, "mergeCommit": {"oid": "61e9398d0960773ac3d43050c7108dc0eadd2d0e"}, "closed": true, "closedAt": "2020-08-19T12:57:41Z", "author": {"login": "trustin"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdAU_QpAH2gAyNDY5OTM3ODY1OjZiOGNlMTNhN2UwZDgzYWFjM2IwYmI3NjE5NmI4MTZlNDBiZWU3NzE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdAaI2ZAFqTQ3MDM3NTg0Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "6b8ce13a7e0d83aac3b0bb76196b816e40bee771", "author": {"user": {"login": "trustin", "name": "Trustin Lee"}}, "url": "https://github.com/line/armeria/commit/6b8ce13a7e0d83aac3b0bb76196b816e40bee771", "committedDate": "2020-08-19T05:44:26Z", "message": "Make `RequestContext.setAttr()` return an old value / Remove `*AttrIfAbsent()`\n\nMotivation:\n\n- A user would expect the behavior similar to `Map.put()` when setting a\n  context attribute. However, `RequestContext.setAttr()` does not return\n  anything.\n- The behavior of `setAttrIfAbsent()` and `computeAttrIfAbsent()` where\n  they set the attribute only when 'own attribute' is absent can be\n  confusing to a user. (That is, it will set an attribute even if\n  there's already an attribute in the root context.)\n  - Adding more variants of those methods would increase the cognitive\n    load of the context API. Given that they are not really used often,\n    it's better removing them entirely for simplicity.\n\nModifications:\n\n- Made `RequestContext.setAttr()` return the old attribute value,\n  looking up the root context if necessary.\n- Removed `RequestContext.setAttrIfAbsent()` and `computeAttrIfAbsent()`\n\nResult:\n\n- Closes #2997\n- `RequestContext.setAttr()` now returns the old attribute value,\n  looking up the root context if necessary.\n- (Breaking) `RequestContext.setAttrIfAbsent()` and\n  `computeAttrIfAbsent()` have been removed. Use `hasOwnAttr()` and\n  `setAttr()` instead:\n\n  ```java\n  if (ctx.hasOwnAttr(MY_ATTR)) {\n      ctx.setAttr(MY_ATTR, newValue);\n  }\n  ```"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcwMTQ5Nzc3", "url": "https://github.com/line/armeria/pull/3004#pullrequestreview-470149777", "createdAt": "2020-08-19T06:09:12Z", "commit": {"oid": "6b8ce13a7e0d83aac3b0bb76196b816e40bee771"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcwMjEwODc0", "url": "https://github.com/line/armeria/pull/3004#pullrequestreview-470210874", "createdAt": "2020-08-19T07:54:21Z", "commit": {"oid": "6b8ce13a7e0d83aac3b0bb76196b816e40bee771"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQwNzo1NDoyMVrOHC7Cgg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQwNzo1NDoyMVrOHC7Cgg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjgyNjQ5OA==", "bodyText": "Glad that we can remove this. \ud83d\ude09", "url": "https://github.com/line/armeria/pull/3004#discussion_r472826498", "createdAt": "2020-08-19T07:54:21Z", "author": {"login": "minwoox"}, "path": "core/src/main/java/com/linecorp/armeria/common/DefaultAttributeMap.java", "diffHunk": "@@ -132,19 +131,13 @@ private static int index(AttributeKey<?> key) {\n     }\n \n     @Nullable\n-    <T> T setAttrIfAbsent(AttributeKey<T> key, @Nullable T value) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6b8ce13a7e0d83aac3b0bb76196b816e40bee771"}, "originalPosition": 12}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcwMzc1ODQz", "url": "https://github.com/line/armeria/pull/3004#pullrequestreview-470375843", "createdAt": "2020-08-19T11:44:26Z", "commit": {"oid": "6b8ce13a7e0d83aac3b0bb76196b816e40bee771"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 93, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}