{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkxOTU1NjA4", "number": 2618, "title": "Updates to Brave 5.11.2 and backfills tests", "bodyText": "some hints to clean this up welcome!", "createdAt": "2020-03-22T04:34:36Z", "url": "https://github.com/line/armeria/pull/2618", "merged": true, "mergeCommit": {"oid": "6f1a89d246575536040d6806c324be546b9cc3a9"}, "closed": true, "closedAt": "2020-04-07T10:03:53Z", "author": {"login": "codefromthecrypt"}, "timelineItems": {"totalCount": 28, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcQCF-AAFqTM3ODk3MTQ5OA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcU6GJ3gH2gAyMzkxOTU1NjA4OjY0OGIzYTUxYTRhMWVkMDc5ZjE3ZmFkY2RlYWVkMTFjMjYzNmZmNjg=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc4OTcxNDk4", "url": "https://github.com/line/armeria/pull/2618#pullrequestreview-378971498", "createdAt": "2020-03-22T04:35:12Z", "commit": {"oid": "cc26eb658ebf8d3d67d3940d76e15d69dbc3aa09"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMlQwNDozNToxMlrOF5tMSA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMlQwNDozNToxMlrOF5tMSA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjA1MzU3Ng==", "bodyText": "I tried status exception with cause, but that eats the causes message in favor of the generic message from the status code.", "url": "https://github.com/line/armeria/pull/2618#discussion_r396053576", "createdAt": "2020-03-22T04:35:12Z", "author": {"login": "codefromthecrypt"}, "path": "brave/src/test/java/com/linecorp/armeria/server/brave/BraveServiceIntegrationTest.java", "diffHunk": "@@ -65,23 +78,63 @@ protected void init() {\n             return HttpResponse.of(HttpStatus.NOT_FOUND);\n         });\n         sb.service(\"/foo\", (ctx, req) -> HttpResponse.of(OK, MediaType.PLAIN_TEXT_UTF_8, \"bar\"));\n-        sb.service(\"/extra\",\n+        sb.service(\"/async\", (ctx, req) -> asyncResponse(future ->\n+            future.complete(HttpResponse.of(OK, MediaType.PLAIN_TEXT_UTF_8, \"bar\"))));\n+\n+        sb.service(\"/exception\", (ctx, req) -> {\n+            // TODO: how do we set status 503 and also retain the cause's message?\n+            throw new IllegalStateException(\"not ready\");\n+        });\n+        sb.service(\"/exceptionAsync\", (ctx, req) -> asyncResponse(future ->\n+            // TODO: how do we set status 503 and also retain the cause's message?", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc26eb658ebf8d3d67d3940d76e15d69dbc3aa09"}, "originalPosition": 42}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc4OTcxNjgw", "url": "https://github.com/line/armeria/pull/2618#pullrequestreview-378971680", "createdAt": "2020-03-22T04:40:11Z", "commit": {"oid": "cc26eb658ebf8d3d67d3940d76e15d69dbc3aa09"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMlQwNDo0MDoxMlrOF5tNQg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMlQwNDo0MDoxMlrOF5tNQg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjA1MzgyNg==", "bodyText": "chatted about this with @anuraaga.. maybe we can share the clock used for the log timestamps in armeria with brave perhaps..", "url": "https://github.com/line/armeria/pull/2618#discussion_r396053826", "createdAt": "2020-03-22T04:40:12Z", "author": {"login": "codefromthecrypt"}, "path": "brave/src/test/java/com/linecorp/armeria/server/brave/BraveServiceIntegrationTest.java", "diffHunk": "@@ -65,23 +78,63 @@ protected void init() {\n             return HttpResponse.of(HttpStatus.NOT_FOUND);\n         });\n         sb.service(\"/foo\", (ctx, req) -> HttpResponse.of(OK, MediaType.PLAIN_TEXT_UTF_8, \"bar\"));\n-        sb.service(\"/extra\",\n+        sb.service(\"/async\", (ctx, req) -> asyncResponse(future ->\n+            future.complete(HttpResponse.of(OK, MediaType.PLAIN_TEXT_UTF_8, \"bar\"))));\n+\n+        sb.service(\"/exception\", (ctx, req) -> {\n+            // TODO: how do we set status 503 and also retain the cause's message?\n+            throw new IllegalStateException(\"not ready\");\n+        });\n+        sb.service(\"/exceptionAsync\", (ctx, req) -> asyncResponse(future ->\n+            // TODO: how do we set status 503 and also retain the cause's message?\n+            future.completeExceptionally(new IllegalStateException(\"not ready\"))));\n+\n+        sb.service(\"/items/:itemId\",\n                    (ctx, req) -> HttpResponse.of(OK, MediaType.PLAIN_TEXT_UTF_8,\n-                                                 String.valueOf(req.headers().get(EXTRA_KEY))));\n-        sb.service(\"/badrequest\", (ctx, req) -> HttpResponse.of(BAD_REQUEST));\n+                                                 String.valueOf(ctx.pathParam(\"itemId\"))));\n+        sb.service(\"/async_items/:itemId\", (ctx, req) -> asyncResponse(future ->\n+            future.complete(HttpResponse.of(OK, MediaType.PLAIN_TEXT_UTF_8,\n+                                                String.valueOf(ctx.pathParam(\"itemId\"))))));\n+        // TODO: how do we mount \"/items/:itemId\" under the prefix \"/nested\"?\n+\n         sb.service(\"/child\", (ctx, req) -> {\n+            // TODO: this fails because the timestamp is out of range, eventhough it finishes before\n+            // the response is returned.\n             Tracing.currentTracer().nextSpan().name(\"child\").start().finish();\n             return HttpResponse.of(OK, MediaType.PLAIN_TEXT_UTF_8, \"happy\");\n         });\n-        sb.service(\"/exception\", (ctx, req) -> {\n-            throw new Exception(\"not ready\");\n+        sb.service(\"/extra\",\n+            (ctx, req) -> HttpResponse.of(OK, MediaType.PLAIN_TEXT_UTF_8,\n+                String.valueOf(req.headers().get(EXTRA_KEY))));\n+        sb.service(\"/badrequest\", (ctx, req) -> HttpResponse.of(BAD_REQUEST));\n+        sb.service(\"/child\", (ctx, req) -> {\n+            Tracing.currentTracer().nextSpan().name(\"child\").start().finish();\n+            return HttpResponse.of(OK, MediaType.PLAIN_TEXT_UTF_8, \"happy\");\n         });\n+\n         sb.decorator(BraveService.newDecorator(httpTracing));\n \n         server = sb.build();\n         server.start().join();\n     }\n \n+    HttpResponse asyncResponse(Consumer<CompletableFuture<HttpResponse>> completeResponse) {\n+        final CompletableFuture<HttpResponse> responseFuture = new CompletableFuture<>();\n+        final HttpResponse res = HttpResponse.from(responseFuture);\n+        executorService.submit(() -> completeResponse.accept(responseFuture));\n+        return res;\n+    }\n+\n+    @Override\n+    @Test\n+    public void createsChildSpan() {\n+        // Armeria uses different timings than Tracing.clock(context) provided by Brave. This means", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc26eb658ebf8d3d67d3940d76e15d69dbc3aa09"}, "originalPosition": 88}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc5MDkzNDgw", "url": "https://github.com/line/armeria/pull/2618#pullrequestreview-379093480", "createdAt": "2020-03-23T01:56:47Z", "commit": {"oid": "cc26eb658ebf8d3d67d3940d76e15d69dbc3aa09"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QwMTo1Njo0N1rOF508Fw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QwMTo1Njo0N1rOF508Fw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjE4MDUwMw==", "bodyText": "throw HttpResponseException.of(HttpResponse.of(HttpStatus.SERVICE_UNAVAILABLE, \"not ready\")) ?", "url": "https://github.com/line/armeria/pull/2618#discussion_r396180503", "createdAt": "2020-03-23T01:56:47Z", "author": {"login": "trustin"}, "path": "brave/src/test/java/com/linecorp/armeria/server/brave/BraveServiceIntegrationTest.java", "diffHunk": "@@ -65,23 +78,63 @@ protected void init() {\n             return HttpResponse.of(HttpStatus.NOT_FOUND);\n         });\n         sb.service(\"/foo\", (ctx, req) -> HttpResponse.of(OK, MediaType.PLAIN_TEXT_UTF_8, \"bar\"));\n-        sb.service(\"/extra\",\n+        sb.service(\"/async\", (ctx, req) -> asyncResponse(future ->\n+            future.complete(HttpResponse.of(OK, MediaType.PLAIN_TEXT_UTF_8, \"bar\"))));\n+\n+        sb.service(\"/exception\", (ctx, req) -> {\n+            // TODO: how do we set status 503 and also retain the cause's message?\n+            throw new IllegalStateException(\"not ready\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc26eb658ebf8d3d67d3940d76e15d69dbc3aa09"}, "originalPosition": 39}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc5MDkzNTU0", "url": "https://github.com/line/armeria/pull/2618#pullrequestreview-379093554", "createdAt": "2020-03-23T01:57:10Z", "commit": {"oid": "cc26eb658ebf8d3d67d3940d76e15d69dbc3aa09"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc5MDk0NjY2", "url": "https://github.com/line/armeria/pull/2618#pullrequestreview-379094666", "createdAt": "2020-03-23T02:02:42Z", "commit": {"oid": "cc26eb658ebf8d3d67d3940d76e15d69dbc3aa09"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QwMjowMjo0MlrOF50_0w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QwMjowMjo0MlrOF50_0w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjE4MTQ1OQ==", "bodyText": "Nice! \ud83d\ude00", "url": "https://github.com/line/armeria/pull/2618#discussion_r396181459", "createdAt": "2020-03-23T02:02:42Z", "author": {"login": "ikhoon"}, "path": "brave/src/test/java/com/linecorp/armeria/client/brave/BraveClientIntegrationTest.java", "diffHunk": "@@ -53,9 +49,6 @@\n @RunWith(Parameterized.class)\n public class BraveClientIntegrationTest extends ITHttpAsyncClient<WebClient> {\n \n-    @Rule(order = Integer.MAX_VALUE)\n-    public TestRule globalTimeout = new DisableOnDebug(Timeout.seconds(15));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc26eb658ebf8d3d67d3940d76e15d69dbc3aa09"}, "originalPosition": 17}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg2ODg2OTA2", "url": "https://github.com/line/armeria/pull/2618#pullrequestreview-386886906", "createdAt": "2020-04-03T01:42:54Z", "commit": {"oid": "15c22d4b88cbc5219507b70b1fd1cd85ff11ddd3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QwMTo0Mjo1NFrOGACTZA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QwMTo0Mjo1NFrOGACTZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjY5MDkxNg==", "bodyText": "can we get a constructor like this please? it will help with testing to know difference between throwable message and http body.", "url": "https://github.com/line/armeria/pull/2618#discussion_r402690916", "createdAt": "2020-04-03T01:42:54Z", "author": {"login": "codefromthecrypt"}, "path": "brave/src/test/java/com/linecorp/armeria/server/brave/BraveServiceIntegrationTest.java", "diffHunk": "@@ -65,34 +82,123 @@ protected void init() {\n             return HttpResponse.of(HttpStatus.NOT_FOUND);\n         });\n         sb.service(\"/foo\", (ctx, req) -> HttpResponse.of(OK, MediaType.PLAIN_TEXT_UTF_8, \"bar\"));\n-        sb.service(\"/extra\",\n+        sb.service(\"/async\", (ctx, req) -> asyncResponse(future ->\n+            future.complete(HttpResponse.of(OK, MediaType.PLAIN_TEXT_UTF_8, \"bar\"))));\n+\n+        sb.service(\"/exception\", (ctx, req) -> {\n+            // TODO: HttpResponseException.of(status, \"not ready\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "15c22d4b88cbc5219507b70b1fd1cd85ff11ddd3"}, "originalPosition": 74}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg2ODg3MDEz", "url": "https://github.com/line/armeria/pull/2618#pullrequestreview-386887013", "createdAt": "2020-04-03T01:43:14Z", "commit": {"oid": "15c22d4b88cbc5219507b70b1fd1cd85ff11ddd3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QwMTo0MzoxNFrOGACTsQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QwMTo0MzoxNFrOGACTsQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjY5MDk5Mw==", "bodyText": "anything obvious here? the body is not in the server context.", "url": "https://github.com/line/armeria/pull/2618#discussion_r402690993", "createdAt": "2020-04-03T01:43:14Z", "author": {"login": "codefromthecrypt"}, "path": "brave/src/test/java/com/linecorp/armeria/server/brave/BraveServiceIntegrationTest.java", "diffHunk": "@@ -65,34 +82,123 @@ protected void init() {\n             return HttpResponse.of(HttpStatus.NOT_FOUND);\n         });\n         sb.service(\"/foo\", (ctx, req) -> HttpResponse.of(OK, MediaType.PLAIN_TEXT_UTF_8, \"bar\"));\n-        sb.service(\"/extra\",\n+        sb.service(\"/async\", (ctx, req) -> asyncResponse(future ->\n+            future.complete(HttpResponse.of(OK, MediaType.PLAIN_TEXT_UTF_8, \"bar\"))));\n+\n+        sb.service(\"/exception\", (ctx, req) -> {\n+            // TODO: HttpResponseException.of(status, \"not ready\")\n+            throw HttpResponseException.of(HttpStatus.SERVICE_UNAVAILABLE);\n+        });\n+        sb.service(\"/exceptionAsync\", (ctx, req) -> asyncResponse(future ->\n+            // TODO: HttpResponseException.of(status, \"not ready\")\n+            future.completeExceptionally(HttpResponseException.of(HttpStatus.SERVICE_UNAVAILABLE))));\n+\n+        sb.service(\"/items/:itemId\",\n                    (ctx, req) -> HttpResponse.of(OK, MediaType.PLAIN_TEXT_UTF_8,\n-                                                 String.valueOf(req.headers().get(EXTRA_KEY))));\n+                                                 String.valueOf(ctx.pathParam(\"itemId\"))));\n+        sb.service(\"/async_items/:itemId\", (ctx, req) -> asyncResponse(future ->\n+            future.complete(HttpResponse.of(OK, MediaType.PLAIN_TEXT_UTF_8,\n+                                                String.valueOf(ctx.pathParam(\"itemId\"))))));\n+        // TODO: how do we mount \"/items/:itemId\" under the prefix \"/nested\"?\n+\n+        // TODO: these fail because the context isn't here for some reason?\n+        sb.service(\"/child\", (ctx, req) -> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "15c22d4b88cbc5219507b70b1fd1cd85ff11ddd3"}, "originalPosition": 91}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg2ODg3MTMx", "url": "https://github.com/line/armeria/pull/2618#pullrequestreview-386887131", "createdAt": "2020-04-03T01:43:41Z", "commit": {"oid": "15c22d4b88cbc5219507b70b1fd1cd85ff11ddd3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QwMTo0Mzo0MVrOGACUKA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QwMTo0Mzo0MVrOGACUKA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjY5MTExMg==", "bodyText": "any hint on how to forward \"/items/:itemId\" under /nested?", "url": "https://github.com/line/armeria/pull/2618#discussion_r402691112", "createdAt": "2020-04-03T01:43:41Z", "author": {"login": "codefromthecrypt"}, "path": "brave/src/test/java/com/linecorp/armeria/server/brave/BraveServiceIntegrationTest.java", "diffHunk": "@@ -65,34 +82,123 @@ protected void init() {\n             return HttpResponse.of(HttpStatus.NOT_FOUND);\n         });\n         sb.service(\"/foo\", (ctx, req) -> HttpResponse.of(OK, MediaType.PLAIN_TEXT_UTF_8, \"bar\"));\n-        sb.service(\"/extra\",\n+        sb.service(\"/async\", (ctx, req) -> asyncResponse(future ->\n+            future.complete(HttpResponse.of(OK, MediaType.PLAIN_TEXT_UTF_8, \"bar\"))));\n+\n+        sb.service(\"/exception\", (ctx, req) -> {\n+            // TODO: HttpResponseException.of(status, \"not ready\")\n+            throw HttpResponseException.of(HttpStatus.SERVICE_UNAVAILABLE);\n+        });\n+        sb.service(\"/exceptionAsync\", (ctx, req) -> asyncResponse(future ->\n+            // TODO: HttpResponseException.of(status, \"not ready\")\n+            future.completeExceptionally(HttpResponseException.of(HttpStatus.SERVICE_UNAVAILABLE))));\n+\n+        sb.service(\"/items/:itemId\",\n                    (ctx, req) -> HttpResponse.of(OK, MediaType.PLAIN_TEXT_UTF_8,\n-                                                 String.valueOf(req.headers().get(EXTRA_KEY))));\n+                                                 String.valueOf(ctx.pathParam(\"itemId\"))));\n+        sb.service(\"/async_items/:itemId\", (ctx, req) -> asyncResponse(future ->\n+            future.complete(HttpResponse.of(OK, MediaType.PLAIN_TEXT_UTF_8,\n+                                                String.valueOf(ctx.pathParam(\"itemId\"))))));\n+        // TODO: how do we mount \"/items/:itemId\" under the prefix \"/nested\"?", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "15c22d4b88cbc5219507b70b1fd1cd85ff11ddd3"}, "originalPosition": 88}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg3MTQxMzUw", "url": "https://github.com/line/armeria/pull/2618#pullrequestreview-387141350", "createdAt": "2020-04-03T10:34:58Z", "commit": {"oid": "bc5ab3d725f5e403e9e9410146b9fd380060fb43"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxMDozNDo1OFrOGAP5mQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxMDozNDo1OFrOGAP5mQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjkxMzY4OQ==", "bodyText": "this doesn't end up as ServiceRequestContext.responseCause()", "url": "https://github.com/line/armeria/pull/2618#discussion_r402913689", "createdAt": "2020-04-03T10:34:58Z", "author": {"login": "codefromthecrypt"}, "path": "brave/src/test/java/com/linecorp/armeria/server/brave/BraveServiceIntegrationTest.java", "diffHunk": "@@ -65,25 +69,49 @@ protected void init() {\n             return HttpResponse.of(HttpStatus.NOT_FOUND);\n         });\n         sb.service(\"/foo\", (ctx, req) -> HttpResponse.of(OK, MediaType.PLAIN_TEXT_UTF_8, \"bar\"));\n-        sb.service(\"/extra\",\n+        sb.service(\"/async\", (ctx, req) -> asyncResponse(future ->\n+            future.complete(HttpResponse.of(OK, MediaType.PLAIN_TEXT_UTF_8, \"bar\"))));\n+\n+        sb.service(\"/exception\", (ctx, req) -> {\n+            throw HttpResponseException.of(HttpStatus.SERVICE_UNAVAILABLE, \"not ready\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bc5ab3d725f5e403e9e9410146b9fd380060fb43"}, "originalPosition": 63}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg3MTQ3Njgy", "url": "https://github.com/line/armeria/pull/2618#pullrequestreview-387147682", "createdAt": "2020-04-03T10:45:37Z", "commit": {"oid": "a312b4d5296afe2b6a658f3cffaed44b93c6e68c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxMDo0NTozN1rOGAQOXQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxMDo0NTozN1rOGAQOXQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjkxOTAwNQ==", "bodyText": "there's a code change needed to HttpServerHandler to set the HttpResponseException's cause to the context responseCause. Any hints or help appreciated! cc @trustin", "url": "https://github.com/line/armeria/pull/2618#discussion_r402919005", "createdAt": "2020-04-03T10:45:37Z", "author": {"login": "codefromthecrypt"}, "path": "brave/src/test/java/com/linecorp/armeria/server/brave/BraveServiceIntegrationTest.java", "diffHunk": "@@ -65,25 +69,52 @@ protected void init() {\n             return HttpResponse.of(HttpStatus.NOT_FOUND);\n         });\n         sb.service(\"/foo\", (ctx, req) -> HttpResponse.of(OK, MediaType.PLAIN_TEXT_UTF_8, \"bar\"));\n-        sb.service(\"/extra\",\n+        sb.service(\"/async\", (ctx, req) -> asyncResponse(future ->\n+            future.complete(HttpResponse.of(OK, MediaType.PLAIN_TEXT_UTF_8, \"bar\"))));\n+\n+        sb.service(\"/exception\", (ctx, req) -> {\n+            IllegalStateException ex = new IllegalStateException(\"not ready\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a312b4d5296afe2b6a658f3cffaed44b93c6e68c"}, "originalPosition": 63}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg3NjY3NjQ5", "url": "https://github.com/line/armeria/pull/2618#pullrequestreview-387667649", "createdAt": "2020-04-04T04:47:30Z", "commit": {"oid": "e3a435a33604454154a0bce757dc387c8fe51476"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5236f15f8555b5dd25e4db715a9c2701301c0ae7", "author": {"user": null}, "url": "https://github.com/line/armeria/commit/5236f15f8555b5dd25e4db715a9c2701301c0ae7", "committedDate": "2020-04-06T07:43:47Z", "message": "Updates to Brave 5.10.2 and backfills tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5345a255d51cf9011aba116b9e5f45a4316010b7", "author": {"user": null}, "url": "https://github.com/line/armeria/commit/5345a255d51cf9011aba116b9e5f45a4316010b7", "committedDate": "2020-04-06T07:43:47Z", "message": "progress on 5.11"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0494aa78c6b97f79e708c55b49230c27d6a36617", "author": {"user": null}, "url": "https://github.com/line/armeria/commit/0494aa78c6b97f79e708c55b49230c27d6a36617", "committedDate": "2020-04-06T07:43:47Z", "message": "progress"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2a3056b72e3fbd8db92fb847b295ba392b0328b9", "author": {"user": null}, "url": "https://github.com/line/armeria/commit/2a3056b72e3fbd8db92fb847b295ba392b0328b9", "committedDate": "2020-04-06T07:43:47Z", "message": "finally"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7abd17afb71aa29ff8a5c6b4ccdd662d689e8c89", "author": {"user": null}, "url": "https://github.com/line/armeria/commit/7abd17afb71aa29ff8a5c6b4ccdd662d689e8c89", "committedDate": "2020-04-06T07:43:47Z", "message": "status"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2344dd805d1e9e8f837a879f12f08af941f18431", "author": {"user": null}, "url": "https://github.com/line/armeria/commit/2344dd805d1e9e8f837a879f12f08af941f18431", "committedDate": "2020-04-06T07:43:47Z", "message": "cause"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8387b73c14767451af2ba2744864f1dd7c63b8e1", "author": {"user": null}, "url": "https://github.com/line/armeria/commit/8387b73c14767451af2ba2744864f1dd7c63b8e1", "committedDate": "2020-04-06T07:43:47Z", "message": "decouples merging this from the http response cause topic"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2c05b5e61119213c7ba8b6aac2272bc0b99295c8", "author": {"user": null}, "url": "https://github.com/line/armeria/commit/2c05b5e61119213c7ba8b6aac2272bc0b99295c8", "committedDate": "2020-04-06T07:43:47Z", "message": "how ya like me now?"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6bb77912ee8bfc6e679ee95e2907c09e5e4d8604", "author": {"user": {"login": "trustin", "name": "Trustin Lee"}}, "url": "https://github.com/line/armeria/commit/6bb77912ee8bfc6e679ee95e2907c09e5e4d8604", "committedDate": "2020-04-06T07:43:47Z", "message": "Fix test failure in `HttpResponseExceptionTest`"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5ffd6ab6e25c017ca1233267eda9c8a3ede0f154", "author": {"user": {"login": "trustin", "name": "Trustin Lee"}}, "url": "https://github.com/line/armeria/commit/5ffd6ab6e25c017ca1233267eda9c8a3ede0f154", "committedDate": "2020-04-06T07:43:47Z", "message": "Fix a few TODOs in `BraveServiceIntegrationTest` / Indentation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "58e1f1678749f7c9aaa352ca1c6f27b177a10370", "author": {"user": null}, "url": "https://github.com/line/armeria/commit/58e1f1678749f7c9aaa352ca1c6f27b177a10370", "committedDate": "2020-04-06T07:43:47Z", "message": "latest brave"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg4MDA5NDQ2", "url": "https://github.com/line/armeria/pull/2618#pullrequestreview-388009446", "createdAt": "2020-04-06T07:54:01Z", "commit": {"oid": "58e1f1678749f7c9aaa352ca1c6f27b177a10370"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQwNzo1NDowMlrOGBLwtg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQwNzo1NDowMlrOGBLwtg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzg5NDQ1NA==", "bodyText": "I don't see how we are setting the status code 503, though.. we should put a TODO until we do?", "url": "https://github.com/line/armeria/pull/2618#discussion_r403894454", "createdAt": "2020-04-06T07:54:02Z", "author": {"login": "codefromthecrypt"}, "path": "brave/src/test/java/com/linecorp/armeria/server/brave/BraveServiceIntegrationTest.java", "diffHunk": "@@ -65,34 +67,63 @@ protected void init() {\n             return HttpResponse.of(HttpStatus.NOT_FOUND);\n         });\n         sb.service(\"/foo\", (ctx, req) -> HttpResponse.of(OK, MediaType.PLAIN_TEXT_UTF_8, \"bar\"));\n-        sb.service(\"/extra\",\n+        sb.service(\"/async\", (ctx, req) -> asyncResponse(future -> {\n+            future.complete(HttpResponse.of(OK, MediaType.PLAIN_TEXT_UTF_8, \"bar\"));\n+        }));\n+\n+        sb.service(\"/exception\", (ctx, req) -> {\n+            throw new IllegalStateException(\"not ready\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "58e1f1678749f7c9aaa352ca1c6f27b177a10370"}, "originalPosition": 68}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "20fe6485fc3afeb7faeec39d7b0fe12095ab0c3a", "author": {"user": null}, "url": "https://github.com/line/armeria/commit/20fe6485fc3afeb7faeec39d7b0fe12095ab0c3a", "committedDate": "2020-04-06T07:55:00Z", "message": "fuzz"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3d6293f7c62e575b6f261c8ca0e13eb01549f746", "author": {"user": null}, "url": "https://github.com/line/armeria/commit/3d6293f7c62e575b6f261c8ca0e13eb01549f746", "committedDate": "2020-04-06T07:56:55Z", "message": "accidentally clobbered test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cd3cc85815fe547f63adb171b37362bc17e48b9f", "author": {"user": null}, "url": "https://github.com/line/armeria/commit/cd3cc85815fe547f63adb171b37362bc17e48b9f", "committedDate": "2020-04-06T08:02:45Z", "message": "more fuzz"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg4MDE2MDky", "url": "https://github.com/line/armeria/pull/2618#pullrequestreview-388016092", "createdAt": "2020-04-06T08:03:51Z", "commit": {"oid": "cd3cc85815fe547f63adb171b37362bc17e48b9f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "648b3a51a4a1ed079f17fadcdeaed11c2636ff68", "author": {"user": null}, "url": "https://github.com/line/armeria/commit/648b3a51a4a1ed079f17fadcdeaed11c2636ff68", "committedDate": "2020-04-06T08:05:47Z", "message": "let the fuzz be with you"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 727, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}