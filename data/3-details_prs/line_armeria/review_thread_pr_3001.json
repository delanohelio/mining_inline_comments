{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY5MjUwNDA0", "number": 3001, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQwOTo0NDoyNVrOEZZd8w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxNDo1ODozNVrOEZhgZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk1MDY3MTIzOnYy", "diffSide": "RIGHT", "path": "grpc/src/main/java/com/linecorp/armeria/server/grpc/GrpcServiceBuilder.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQwOTo0NDoyNVrOHCL17w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQwOTo0NDoyNVrOHCL17w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjA1MzIzMQ==", "bodyText": "nit: We can make this as final\nprivate static final boolean USE_COROUTINE_CONTEXT_INTERCEPTOR;\n\nstatic {\n    boolean useCoroutineContextInterceptor = false;\n    try {\n        Class.forName(\"io.grpc.kotlin.CoroutineContextServerInterceptor\", false,\n                      GrpcServiceBuilder.class.getClassLoader());\n        useCoroutineContextInterceptor = true;\n    } catch (Throwable ignored) {\n    }\n    USE_COROUTINE_CONTEXT_INTERCEPTOR = useCoroutineContextInterceptor;\n}", "url": "https://github.com/line/armeria/pull/3001#discussion_r472053231", "createdAt": "2020-08-18T09:44:25Z", "author": {"login": "minwoox"}, "path": "grpc/src/main/java/com/linecorp/armeria/server/grpc/GrpcServiceBuilder.java", "diffHunk": "@@ -67,6 +68,18 @@\n     private static final Set<SerializationFormat> DEFAULT_SUPPORTED_SERIALIZATION_FORMATS =\n             GrpcSerializationFormats.values();\n \n+    private static boolean useCoroutineContextInterceptor;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2d36dff45059cd285caa0680d86cbf2ff2492d2f"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk1MTk4ODIwOnYy", "diffSide": "RIGHT", "path": "grpc/src/main/java/com/linecorp/armeria/server/grpc/GrpcServiceBuilder.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxNDo1ODozNVrOHCYqhg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQwMjowMTowMVrOHCsr-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjI2MzMwMg==", "bodyText": "How about logging whether coroutine context interceptor is available? e.g.\nlogger.debug(\"{}: {}\", className, useCoroutineContextInterceptor ? \"available\" : \"unavailable\");", "url": "https://github.com/line/armeria/pull/3001#discussion_r472263302", "createdAt": "2020-08-18T14:58:35Z", "author": {"login": "trustin"}, "path": "grpc/src/main/java/com/linecorp/armeria/server/grpc/GrpcServiceBuilder.java", "diffHunk": "@@ -67,6 +68,20 @@\n     private static final Set<SerializationFormat> DEFAULT_SUPPORTED_SERIALIZATION_FORMATS =\n             GrpcSerializationFormats.values();\n \n+    private static final boolean USE_COROUTINE_CONTEXT_INTERCEPTOR;\n+\n+    static {\n+        boolean useCoroutineContextInterceptor;\n+        try {\n+            Class.forName(\"io.grpc.kotlin.CoroutineContextServerInterceptor\", false,\n+                          GrpcServiceBuilder.class.getClassLoader());\n+            useCoroutineContextInterceptor = true;\n+        } catch (Throwable ignored) {\n+            useCoroutineContextInterceptor = false;\n+        }\n+        USE_COROUTINE_CONTEXT_INTERCEPTOR = useCoroutineContextInterceptor;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e02557cbeed4b65bfd55bcdbf9f56e198fc77dd5"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjU5MTM1NA==", "bodyText": "Yeah. That's a good idea!", "url": "https://github.com/line/armeria/pull/3001#discussion_r472591354", "createdAt": "2020-08-19T02:01:01Z", "author": {"login": "ikhoon"}, "path": "grpc/src/main/java/com/linecorp/armeria/server/grpc/GrpcServiceBuilder.java", "diffHunk": "@@ -67,6 +68,20 @@\n     private static final Set<SerializationFormat> DEFAULT_SUPPORTED_SERIALIZATION_FORMATS =\n             GrpcSerializationFormats.values();\n \n+    private static final boolean USE_COROUTINE_CONTEXT_INTERCEPTOR;\n+\n+    static {\n+        boolean useCoroutineContextInterceptor;\n+        try {\n+            Class.forName(\"io.grpc.kotlin.CoroutineContextServerInterceptor\", false,\n+                          GrpcServiceBuilder.class.getClassLoader());\n+            useCoroutineContextInterceptor = true;\n+        } catch (Throwable ignored) {\n+            useCoroutineContextInterceptor = false;\n+        }\n+        USE_COROUTINE_CONTEXT_INTERCEPTOR = useCoroutineContextInterceptor;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjI2MzMwMg=="}, "originalCommit": {"oid": "e02557cbeed4b65bfd55bcdbf9f56e198fc77dd5"}, "originalPosition": 23}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2235, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}