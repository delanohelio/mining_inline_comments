{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY4OTc5Njcx", "number": 2429, "title": "Fix 'cannot start a new stream with a DATA frame' error under load", "bodyText": "Motivation:\nWhen a server under load receives GOAWAY frame from client,\nthe server try to close the given connection with the flowing step:\n\nThe server receives the GOAWAY frame.\nClose all active streams before closing connection.\nFlush outboundBuffer buffer.\nThe callback of future.addListener is called after successfully writing nioBuffers to channel.\n\n  \n    \n      armeria/core/src/main/java/com/linecorp/armeria/server/HttpResponseSubscriber.java\n    \n    \n         Line 307\n      in\n      84403ba\n    \n    \n    \n    \n\n        \n          \n           future.addListener((ChannelFuture f) -> { \n        \n    \n  \n\n\nRequest the next item in the future.addListener.\n\n  \n    \n      armeria/core/src/main/java/com/linecorp/armeria/server/HttpResponseSubscriber.java\n    \n    \n         Line 333\n      in\n      84403ba\n    \n    \n    \n    \n\n        \n          \n           subscription.request(1); \n        \n    \n  \n\n\nTry to write the next item to the stream, but it was already closed on 2)\n\nIf try to write HttpData to the closed stream, it will throw 'cannot start a new stream with a DATA frame'.\nModification:\n\nAdd isWritable(id, streamId) to HttpObjectEncoder\nCancel subscription and propagate error\n\nResult:\nNo more 'cannot start a new stream with a DATA frame' error when receiving GOAWAY with non empty ChannelOutboundBuffer.\nFixes: #1410", "createdAt": "2020-01-30T09:55:22Z", "url": "https://github.com/line/armeria/pull/2429", "merged": true, "mergeCommit": {"oid": "1e1520047a4117180d8231972cb980133bf25213"}, "closed": true, "closedAt": "2020-02-04T08:56:00Z", "author": {"login": "ikhoon"}, "timelineItems": {"totalCount": 27, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb_XjObgH2gAyMzY4OTc5NjcxOjg4OTMxZWVkMzM0NGRiYzAxM2M5ZWY3ZjZmZTM3YzQ4OTdlYzM1Yzg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcA9pgxAFqTM1MjgwODEzMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "88931eed3344dbc013c9ef7f6fe37c4897ec35c8", "author": {"user": {"login": "ikhoon", "name": "Ikhun Um"}}, "url": "https://github.com/line/armeria/commit/88931eed3344dbc013c9ef7f6fe37c4897ec35c8", "committedDate": "2020-01-30T09:58:27Z", "message": "Fix 'cannot start a new stream with a DATA frame' error under load\n\nMotivation:\nWhen a server under load receives `GOAWAY` frame from client,\nthe server try to close the given connection with the flowing step:\n1) The server receives the `GOAWAY` frame.\n2) Close all active streams before closing connection.\n3) Flush `outboundBuffer` buffer.\n4) The callback of `future.addListener` is called after successfully writing `nioBuffers` to channel.\nhttps://github.com/line/armeria/blob/84403ba1424faf85ca883bb6a299705a3198c4bd/core/src/main/java/com/linecorp/armeria/server/HttpResponseSubscriber.java#L307\n5) Request the next item in the `future.addListener`.\nhttps://github.com/line/armeria/blob/84403ba1424faf85ca883bb6a299705a3198c4bd/core/src/main/java/com/linecorp/armeria/server/HttpResponseSubscriber.java#L333\n6) Try to write the next item to the stream, but it was already closed on 2)\n\nIf 'HttpData' try to write closed stream, it will throw 'cannot start a new stream with a DATA frame'.\n\nModification:\n* Add `isWritable(id, streamId) to `HttpObjectEncoder`\n* Cancel subscription and propagate error\n\nResult:\nNo more 'cannot start a new stream with a DATA frame' error when receiving GOAWAY with non empty `ChannelOutboundBuffer`.\nFixes: #1410"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "167f33643e8b9eae009fad65d08e79fcb3d0d8f6", "author": {"user": {"login": "ikhoon", "name": "Ikhun Um"}}, "url": "https://github.com/line/armeria/commit/167f33643e8b9eae009fad65d08e79fcb3d0d8f6", "committedDate": "2020-01-30T09:54:15Z", "message": "Fix 'cannot start a new stream with a DATA frame' error under load\n\nMotivation:\nWhen a server under load receives `GOAWAY` frame from client,\nthe server try to close the given connection with the flowing step:\n1) The server receives the `GOAWAY` frame.\n2) Close all active streams before closing connection.\n3) Flush `outboundBuffer` buffer.\n4) The callback of `future.addListener` is called after successfully writing `nioBuffers` to channel.\nhttps://github.com/line/armeria/blob/84403ba1424faf85ca883bb6a299705a3198c4bd/core/src/main/java/com/linecorp/armeria/server/HttpResponseSubscriber.java#L307\n5) Request the next item in the `future.addListener`.\nhttps://github.com/line/armeria/blob/84403ba1424faf85ca883bb6a299705a3198c4bd/core/src/main/java/com/linecorp/armeria/server/HttpResponseSubscriber.java#L333\n6) Try to write the next item to the stream, but it was already closed on 2)\n\nIf 'HttpData' try to write closed stream, it will throw 'cannot start a new stream with a DATA frame'.\n\nModification:\n* Add `isWritable(id, streamId) to `HttpObjectEncoder`\n* Cancel subscription and propagate error\n\nResult:\nNo more 'cannot start a new stream with a DATA frame' error when receiving GOAWAY with non empty `ChannelOutboundBuffer`.\nFixes: #1410"}, "afterCommit": {"oid": "88931eed3344dbc013c9ef7f6fe37c4897ec35c8", "author": {"user": {"login": "ikhoon", "name": "Ikhun Um"}}, "url": "https://github.com/line/armeria/commit/88931eed3344dbc013c9ef7f6fe37c4897ec35c8", "committedDate": "2020-01-30T09:58:27Z", "message": "Fix 'cannot start a new stream with a DATA frame' error under load\n\nMotivation:\nWhen a server under load receives `GOAWAY` frame from client,\nthe server try to close the given connection with the flowing step:\n1) The server receives the `GOAWAY` frame.\n2) Close all active streams before closing connection.\n3) Flush `outboundBuffer` buffer.\n4) The callback of `future.addListener` is called after successfully writing `nioBuffers` to channel.\nhttps://github.com/line/armeria/blob/84403ba1424faf85ca883bb6a299705a3198c4bd/core/src/main/java/com/linecorp/armeria/server/HttpResponseSubscriber.java#L307\n5) Request the next item in the `future.addListener`.\nhttps://github.com/line/armeria/blob/84403ba1424faf85ca883bb6a299705a3198c4bd/core/src/main/java/com/linecorp/armeria/server/HttpResponseSubscriber.java#L333\n6) Try to write the next item to the stream, but it was already closed on 2)\n\nIf 'HttpData' try to write closed stream, it will throw 'cannot start a new stream with a DATA frame'.\n\nModification:\n* Add `isWritable(id, streamId) to `HttpObjectEncoder`\n* Cancel subscription and propagate error\n\nResult:\nNo more 'cannot start a new stream with a DATA frame' error when receiving GOAWAY with non empty `ChannelOutboundBuffer`.\nFixes: #1410"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "00bec95c46ad456c360f19c1f18d25887a44ccb7", "author": {"user": {"login": "ikhoon", "name": "Ikhun Um"}}, "url": "https://github.com/line/armeria/commit/00bec95c46ad456c360f19c1f18d25887a44ccb7", "committedDate": "2020-01-30T10:00:52Z", "message": "Fix if condition"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUwNzA4MDU3", "url": "https://github.com/line/armeria/pull/2429#pullrequestreview-350708057", "createdAt": "2020-01-30T10:10:48Z", "commit": {"oid": "00bec95c46ad456c360f19c1f18d25887a44ccb7"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQxMDoxMDo0OFrOFjlmFw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQxMDoxNTowMlrOFjluKg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mjg2MDQzOQ==", "bodyText": "Maybe better grouping with final boolean isSuccess;?", "url": "https://github.com/line/armeria/pull/2429#discussion_r372860439", "createdAt": "2020-01-30T10:10:48Z", "author": {"login": "trustin"}, "path": "core/src/main/java/com/linecorp/armeria/server/HttpResponseSubscriber.java", "diffHunk": "@@ -321,6 +323,7 @@ private void write(HttpObject o, boolean endOfStream) {\n                                 f.cause() instanceof ClosedChannelException &&\n                                 responseEncoder instanceof Http1ObjectEncoder;\n                 }\n+                final boolean isWritable = responseEncoder.isWritable(req.id(), req.streamId());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "00bec95c46ad456c360f19c1f18d25887a44ccb7"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mjg2MjUwNg==", "bodyText": "Could be merged into the if (isSuccess) above, i.e.\nfinal ChannelFuture failedFuture;\nif (isSuccess) {\n    ...\n    if (isWritable) {\n        subscription.request(1);\n        return;\n    }\n\n    if (reqCtx.sessionProtocol().isMultiplex()) {\n        failedFuture = f.channel().newFailedFuture(ClosedPublisherException.get());\n    } else {\n        failedFuture = f.channel().newFailedFuture(ClosedSessionException.get());\n    }\n} else {\n    failedFuture = f;\n}", "url": "https://github.com/line/armeria/pull/2429#discussion_r372862506", "createdAt": "2020-01-30T10:15:02Z", "author": {"login": "trustin"}, "path": "core/src/main/java/com/linecorp/armeria/server/HttpResponseSubscriber.java", "diffHunk": "@@ -333,17 +336,28 @@ private void write(HttpObject o, boolean endOfStream) {\n                         reqCtx.log().whenComplete().thenAccept(reqCtx.accessLogWriter()::log);\n                     }\n \n-                    subscription.request(1);\n-                    return;\n+                    if (isWritable) {\n+                        subscription.request(1);\n+                        return;\n+                    }\n+                }\n+\n+                ChannelFuture failedFuture = f;\n+                if (isSuccess && !isWritable) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "00bec95c46ad456c360f19c1f18d25887a44ccb7"}, "originalPosition": 37}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "de3434eadb45f0536463ebdf74f26408c518376a", "author": {"user": {"login": "ikhoon", "name": "Ikhun Um"}}, "url": "https://github.com/line/armeria/commit/de3434eadb45f0536463ebdf74f26408c518376a", "committedDate": "2020-01-30T11:25:50Z", "message": "Address comments by @trustin / TODO inspect test failures"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "780a64f6707ecf87615316cb78ffcc020164374b", "author": {"user": {"login": "ikhoon", "name": "Ikhun Um"}}, "url": "https://github.com/line/armeria/commit/780a64f6707ecf87615316cb78ffcc020164374b", "committedDate": "2020-01-31T03:07:21Z", "message": "Add return when endOfStream is true"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "53ad6019311986a090ceb8e96471d6c874046388", "author": {"user": {"login": "ikhoon", "name": "Ikhun Um"}}, "url": "https://github.com/line/armeria/commit/53ad6019311986a090ceb8e96471d6c874046388", "committedDate": "2020-01-31T03:50:04Z", "message": "Add subsription.cancel()"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7e50413a047a118147f5a2b9eca1a83d80b20035", "author": {"user": {"login": "ikhoon", "name": "Ikhun Um"}}, "url": "https://github.com/line/armeria/commit/7e50413a047a118147f5a2b9eca1a83d80b20035", "committedDate": "2020-01-31T09:25:32Z", "message": "Fix broken test"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUxMzg5NTU3", "url": "https://github.com/line/armeria/pull/2429#pullrequestreview-351389557", "createdAt": "2020-01-31T09:43:45Z", "commit": {"oid": "7e50413a047a118147f5a2b9eca1a83d80b20035"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQwOTo0Mzo0NVrOFkGDAA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQwOTo0Mzo0NVrOFkGDAA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzM5MjEyOA==", "bodyText": "Oops, this is miss pushed. \ud83d\ude31  Let me revert this.", "url": "https://github.com/line/armeria/pull/2429#discussion_r373392128", "createdAt": "2020-01-31T09:43:45Z", "author": {"login": "ikhoon"}, "path": "core/src/main/java/com/linecorp/armeria/server/HttpResponseSubscriber.java", "diffHunk": "@@ -325,25 +328,43 @@ private void write(HttpObject o, boolean endOfStream) {\n                 // Write an access log if:\n                 // - every message has been sent successfully.\n                 // - any write operation is failed with a cause.\n+                final ChannelFuture failedFuture;\n                 if (isSuccess) {\n                     maybeLogFirstResponseBytesTransferred();\n \n+                    if (state == State.DONE && !endOfStream) {\n+                        // if state is DONE, the response should be ended with endOfStream.\n+                        return;\n+                    }\n+\n                     if (endOfStream && tryComplete()) {\n                         logBuilder().endResponse();\n+                        subscription.cancel();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7e50413a047a118147f5a2b9eca1a83d80b20035"}, "originalPosition": 39}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4c394ff8fbfec59da0778e955906580ae45b8b7c", "author": {"user": {"login": "ikhoon", "name": "Ikhun Um"}}, "url": "https://github.com/line/armeria/commit/4c394ff8fbfec59da0778e955906580ae45b8b7c", "committedDate": "2020-01-31T10:36:12Z", "message": "Revert miss commits"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f291e15d1570a982866672060184002bca9a8de0", "author": {"user": {"login": "ikhoon", "name": "Ikhun Um"}}, "url": "https://github.com/line/armeria/commit/f291e15d1570a982866672060184002bca9a8de0", "committedDate": "2020-01-31T12:46:01Z", "message": "Merge branch 'master' into data-frame-error"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUxNDgyNzA2", "url": "https://github.com/line/armeria/pull/2429#pullrequestreview-351482706", "createdAt": "2020-01-31T12:48:30Z", "commit": {"oid": "f291e15d1570a982866672060184002bca9a8de0"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUxODYyNzY4", "url": "https://github.com/line/armeria/pull/2429#pullrequestreview-351862768", "createdAt": "2020-02-01T03:33:17Z", "commit": {"oid": "f291e15d1570a982866672060184002bca9a8de0"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMVQwNDozNDo0OFrOFkcV4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMVQwNDozNDo0OFrOFkcV4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzc1NzQwOA==", "bodyText": "This is just gone?", "url": "https://github.com/line/armeria/pull/2429#discussion_r373757408", "createdAt": "2020-02-01T04:34:48Z", "author": {"login": "mauhiz"}, "path": "thrift/src/test/java/com/linecorp/armeria/it/metric/DropwizardMetricsIntegrationTest.java", "diffHunk": "@@ -72,16 +67,13 @@ protected void configure(ServerBuilder sb) throws Exception {\n     private static final ClientFactory clientFactory =\n             ClientFactory.builder().meterRegistry(registry).build();\n \n-    @AfterClass\n-    public static void closeClientFactory() {\n+    @AfterAll\n+    static void closeClientFactory() {\n         clientFactory.close();\n     }\n \n-    @Rule\n-    public final TestRule globalTimeout = new DisableOnDebug(new Timeout(30, TimeUnit.SECONDS));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f291e15d1570a982866672060184002bca9a8de0"}, "originalPosition": 53}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUxOTgzNjMz", "url": "https://github.com/line/armeria/pull/2429#pullrequestreview-351983633", "createdAt": "2020-02-03T01:01:39Z", "commit": {"oid": "f291e15d1570a982866672060184002bca9a8de0"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QwMTowMTo0MFrOFkkhFw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QwMTowMTo0MFrOFkkhFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzg5MTM1MQ==", "bodyText": "I realized that we might need this in HttpRequestSubscriber when we send more that one HttpData.", "url": "https://github.com/line/armeria/pull/2429#discussion_r373891351", "createdAt": "2020-02-03T01:01:40Z", "author": {"login": "minwoox"}, "path": "core/src/main/java/com/linecorp/armeria/server/HttpResponseSubscriber.java", "diffHunk": "@@ -325,25 +328,41 @@ private void write(HttpObject o, boolean endOfStream) {\n                 // Write an access log if:\n                 // - every message has been sent successfully.\n                 // - any write operation is failed with a cause.\n+                final ChannelFuture failedFuture;\n                 if (isSuccess) {\n                     maybeLogFirstResponseBytesTransferred();\n \n+                    if (state == State.DONE && !endOfStream) {\n+                        // if state is DONE, the response should be ended with endOfStream.\n+                        return;\n+                    }\n+\n                     if (endOfStream && tryComplete()) {\n                         logBuilder().endResponse();\n                         reqCtx.log().whenComplete().thenAccept(reqCtx.accessLogWriter()::log);\n                     }\n \n-                    subscription.request(1);\n-                    return;\n+                    if (isWritable) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f291e15d1570a982866672060184002bca9a8de0"}, "originalPosition": 44}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c65a9a5a1e921dca8d42ebc4ed5a6e7fb791e366", "author": {"user": {"login": "ikhoon", "name": "Ikhun Um"}}, "url": "https://github.com/line/armeria/commit/c65a9a5a1e921dca8d42ebc4ed5a6e7fb791e366", "committedDate": "2020-02-03T09:07:21Z", "message": "Address comments by @minwoox / check writable before write()"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a55d5a3cdb7fb39389bc7c008a8d5ad62c1b64e8", "author": {"user": {"login": "ikhoon", "name": "Ikhun Um"}}, "url": "https://github.com/line/armeria/commit/a55d5a3cdb7fb39389bc7c008a8d5ad62c1b64e8", "committedDate": "2020-02-03T09:06:31Z", "message": "Address comments by @minwoox / check writable before write()"}, "afterCommit": {"oid": "c65a9a5a1e921dca8d42ebc4ed5a6e7fb791e366", "author": {"user": {"login": "ikhoon", "name": "Ikhun Um"}}, "url": "https://github.com/line/armeria/commit/c65a9a5a1e921dca8d42ebc4ed5a6e7fb791e366", "committedDate": "2020-02-03T09:07:21Z", "message": "Address comments by @minwoox / check writable before write()"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0f86ffc96706f3d673dd6c86348eada68ae08cb8", "author": {"user": {"login": "ikhoon", "name": "Ikhun Um"}}, "url": "https://github.com/line/armeria/commit/0f86ffc96706f3d673dd6c86348eada68ae08cb8", "committedDate": "2020-02-03T09:32:25Z", "message": "Clean up"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3769aebae7d7aa5406f836afddb72d5dbc6782f2", "author": {"user": {"login": "ikhoon", "name": "Ikhun Um"}}, "url": "https://github.com/line/armeria/commit/3769aebae7d7aa5406f836afddb72d5dbc6782f2", "committedDate": "2020-02-03T09:39:52Z", "message": "Add comment"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1fc948e2dbc31ec409c737b4ec9d1ef6aac0b47b", "author": {"user": {"login": "ikhoon", "name": "Ikhun Um"}}, "url": "https://github.com/line/armeria/commit/1fc948e2dbc31ec409c737b4ec9d1ef6aac0b47b", "committedDate": "2020-02-03T09:52:51Z", "message": "Change variable declration order"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUyMjE5NjYy", "url": "https://github.com/line/armeria/pull/2429#pullrequestreview-352219662", "createdAt": "2020-02-03T12:32:19Z", "commit": {"oid": "1fc948e2dbc31ec409c737b4ec9d1ef6aac0b47b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUyMzM3ODY2", "url": "https://github.com/line/armeria/pull/2429#pullrequestreview-352337866", "createdAt": "2020-02-03T15:26:35Z", "commit": {"oid": "3769aebae7d7aa5406f836afddb72d5dbc6782f2"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxNToyNjozNlrOFk1S_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxNToyNjozNlrOFk1S_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDE2NjI3MA==", "bodyText": "if -> If\ntransferred -> were transferred\nopen -> open.", "url": "https://github.com/line/armeria/pull/2429#discussion_r374166270", "createdAt": "2020-02-03T15:26:36Z", "author": {"login": "trustin"}, "path": "core/src/main/java/com/linecorp/armeria/server/HttpResponseSubscriber.java", "diffHunk": "@@ -289,6 +289,7 @@ public void onComplete() {\n     }\n \n     private void write(HttpObject o, boolean endOfStream) {\n+        // if the first bytes transferred, the stream must be open", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3769aebae7d7aa5406f836afddb72d5dbc6782f2"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUyMzM4Njk1", "url": "https://github.com/line/armeria/pull/2429#pullrequestreview-352338695", "createdAt": "2020-02-03T15:27:36Z", "commit": {"oid": "1fc948e2dbc31ec409c737b4ec9d1ef6aac0b47b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxNToyNzozNlrOFk1VZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxNToyNzozNlrOFk1VZQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDE2Njg4NQ==", "bodyText": "Could you explain why?", "url": "https://github.com/line/armeria/pull/2429#discussion_r374166885", "createdAt": "2020-02-03T15:27:36Z", "author": {"login": "trustin"}, "path": "core/src/main/java/com/linecorp/armeria/client/HttpRequestSubscriber.java", "diffHunk": "@@ -297,6 +296,16 @@ private void write(HttpObject o, boolean endOfStream, boolean flush) {\n     }\n \n     private void write0(HttpObject o, boolean endOfStream, boolean flush) {\n+        // if the first bytes transferred, the stream must be open", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1fc948e2dbc31ec409c737b4ec9d1ef6aac0b47b"}, "originalPosition": 12}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8d8ef8b8e235698891b8b7ba3406cc6c28494d6f", "author": {"user": {"login": "ikhoon", "name": "Ikhun Um"}}, "url": "https://github.com/line/armeria/commit/8d8ef8b8e235698891b8b7ba3406cc6c28494d6f", "committedDate": "2020-02-04T04:44:53Z", "message": "Update code comments"}, "afterCommit": {"oid": "0913c9a1ccf113bbec8e29ec857532f3c40a0673", "author": {"user": {"login": "ikhoon", "name": "Ikhun Um"}}, "url": "https://github.com/line/armeria/commit/0913c9a1ccf113bbec8e29ec857532f3c40a0673", "committedDate": "2020-02-04T04:49:09Z", "message": "Update code comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "41f1e62bfa06b5318897437c472a5fde0e7cffcb", "author": {"user": {"login": "ikhoon", "name": "Ikhun Um"}}, "url": "https://github.com/line/armeria/commit/41f1e62bfa06b5318897437c472a5fde0e7cffcb", "committedDate": "2020-02-04T05:26:01Z", "message": "Update code comments"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0913c9a1ccf113bbec8e29ec857532f3c40a0673", "author": {"user": {"login": "ikhoon", "name": "Ikhun Um"}}, "url": "https://github.com/line/armeria/commit/0913c9a1ccf113bbec8e29ec857532f3c40a0673", "committedDate": "2020-02-04T04:49:09Z", "message": "Update code comments"}, "afterCommit": {"oid": "41f1e62bfa06b5318897437c472a5fde0e7cffcb", "author": {"user": {"login": "ikhoon", "name": "Ikhun Um"}}, "url": "https://github.com/line/armeria/commit/41f1e62bfa06b5318897437c472a5fde0e7cffcb", "committedDate": "2020-02-04T05:26:01Z", "message": "Update code comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2c7d1ad139afdf281760da14d9abd8c0dde63883", "author": {"user": {"login": "ikhoon", "name": "Ikhun Um"}}, "url": "https://github.com/line/armeria/commit/2c7d1ad139afdf281760da14d9abd8c0dde63883", "committedDate": "2020-02-04T06:07:52Z", "message": "Update error message"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUyODA4MTMw", "url": "https://github.com/line/armeria/pull/2429#pullrequestreview-352808130", "createdAt": "2020-02-04T08:55:38Z", "commit": {"oid": "2c7d1ad139afdf281760da14d9abd8c0dde63883"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 919, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}