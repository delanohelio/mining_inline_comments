{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkxNDA2OTEw", "number": 2616, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQyMzozMDo0N1rODqCh5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QwNDozNDozNFrODqO4Yg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1NDA4MjI4OnYy", "diffSide": "RIGHT", "path": "grpc/src/main/java/com/linecorp/armeria/internal/common/grpc/GrpcStatus.java", "isResolved": false, "comments": {"totalCount": 21, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQyMzozMDo0N1rOF5lu7g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwOTozNjoyOVrOF7SwZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTkzMTM3NA==", "bodyText": "Can we add a helper somewhere that just returns this boolean condition with documentation? It's not clear to me what the semantic meaning of this is. Or perhaps it's an overridden method of ClosedStreamException.\nThough one thought is given the complexity of this sort of check, is it actually a good idea to have the inheritance relationship after all?", "url": "https://github.com/line/armeria/pull/2616#discussion_r395931374", "createdAt": "2020-03-20T23:30:47Z", "author": {"login": "anuraaga"}, "path": "grpc/src/main/java/com/linecorp/armeria/internal/common/grpc/GrpcStatus.java", "diffHunk": "@@ -81,7 +82,7 @@ public static Status fromThrowable(Throwable t) {\n         if (s.getCode() != Code.UNKNOWN) {\n             return s;\n         }\n-        if (t instanceof ClosedStreamException) {\n+        if (t instanceof ClosedStreamException && !(t instanceof ClosedSessionException)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "37c19947a85a739a8e804d49376a5ce5e3424cb2"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTk3NTY5Mw==", "bodyText": "Can we add a helper somewhere that just returns this boolean condition with documentation?\n\nThat's good. Will add it to Exceptions.\n\nThough one thought is given the complexity of this sort of check, is it actually a good idea to have the inheritance relationship after all?\n\nI know both approaches have cons.\n\nCons of inheritance: Devs should pay attention to filter an exception caused by a closed stream not closed session.\nCons of isolation: When a request fails to write a stream, users want to handle this, they should catch both ClosedStreamException and ClosedSessionException. Because it could be failed by a closed session.", "url": "https://github.com/line/armeria/pull/2616#discussion_r395975693", "createdAt": "2020-03-21T09:01:32Z", "author": {"login": "ikhoon"}, "path": "grpc/src/main/java/com/linecorp/armeria/internal/common/grpc/GrpcStatus.java", "diffHunk": "@@ -81,7 +82,7 @@ public static Status fromThrowable(Throwable t) {\n         if (s.getCode() != Code.UNKNOWN) {\n             return s;\n         }\n-        if (t instanceof ClosedStreamException) {\n+        if (t instanceof ClosedStreamException && !(t instanceof ClosedSessionException)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTkzMTM3NA=="}, "originalCommit": {"oid": "37c19947a85a739a8e804d49376a5ce5e3424cb2"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTk3NzcwNw==", "bodyText": "I think it's common for methods to throw different types of exceptions and Java even has special syntax to catch ClosedStreamException | ClosedSessionException.\nOn the flip side, filtering subclasses when working with anything, even non-exceptions is quite unusual. Inheritance should express \"is a\", so I don't find it to be idiomatic in Java to want to catch ClosedStreamException but not want it's subclasses, which are supposed to be semantically the same.", "url": "https://github.com/line/armeria/pull/2616#discussion_r395977707", "createdAt": "2020-03-21T09:34:37Z", "author": {"login": "anuraaga"}, "path": "grpc/src/main/java/com/linecorp/armeria/internal/common/grpc/GrpcStatus.java", "diffHunk": "@@ -81,7 +82,7 @@ public static Status fromThrowable(Throwable t) {\n         if (s.getCode() != Code.UNKNOWN) {\n             return s;\n         }\n-        if (t instanceof ClosedStreamException) {\n+        if (t instanceof ClosedStreamException && !(t instanceof ClosedSessionException)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTkzMTM3NA=="}, "originalCommit": {"oid": "37c19947a85a739a8e804d49376a5ce5e3424cb2"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTk3OTQ4Nw==", "bodyText": "filtering subclasses when working with anything, even non-exceptions is quite unusual.\n\nYes, I understand what you are concerned about and greatly appreciate your opinion. \ud83d\ude4f Let's discuss this with other folks at the beginning of next week. \ud83d\ude00", "url": "https://github.com/line/armeria/pull/2616#discussion_r395979487", "createdAt": "2020-03-21T10:02:47Z", "author": {"login": "ikhoon"}, "path": "grpc/src/main/java/com/linecorp/armeria/internal/common/grpc/GrpcStatus.java", "diffHunk": "@@ -81,7 +82,7 @@ public static Status fromThrowable(Throwable t) {\n         if (s.getCode() != Code.UNKNOWN) {\n             return s;\n         }\n-        if (t instanceof ClosedStreamException) {\n+        if (t instanceof ClosedStreamException && !(t instanceof ClosedSessionException)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTkzMTM3NA=="}, "originalCommit": {"oid": "37c19947a85a739a8e804d49376a5ce5e3424cb2"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjE4MDkyMw==", "bodyText": "My guess is that most users wouldn't need to distinguish between closed streams and closed sessions, while Armeria devs might in some cases, so it's probably better for users' standpoint?", "url": "https://github.com/line/armeria/pull/2616#discussion_r396180923", "createdAt": "2020-03-23T01:59:11Z", "author": {"login": "trustin"}, "path": "grpc/src/main/java/com/linecorp/armeria/internal/common/grpc/GrpcStatus.java", "diffHunk": "@@ -81,7 +82,7 @@ public static Status fromThrowable(Throwable t) {\n         if (s.getCode() != Code.UNKNOWN) {\n             return s;\n         }\n-        if (t instanceof ClosedStreamException) {\n+        if (t instanceof ClosedStreamException && !(t instanceof ClosedSessionException)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTkzMTM3NA=="}, "originalCommit": {"oid": "37c19947a85a739a8e804d49376a5ce5e3424cb2"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjE4MzY3MA==", "bodyText": "question: Don't we need to return Status.CANCELLED for ClosedSessionException?", "url": "https://github.com/line/armeria/pull/2616#discussion_r396183670", "createdAt": "2020-03-23T02:15:57Z", "author": {"login": "minwoox"}, "path": "grpc/src/main/java/com/linecorp/armeria/internal/common/grpc/GrpcStatus.java", "diffHunk": "@@ -81,7 +82,7 @@ public static Status fromThrowable(Throwable t) {\n         if (s.getCode() != Code.UNKNOWN) {\n             return s;\n         }\n-        if (t instanceof ClosedStreamException) {\n+        if (t instanceof ClosedStreamException && !(t instanceof ClosedSessionException)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTkzMTM3NA=="}, "originalCommit": {"oid": "37c19947a85a739a8e804d49376a5ce5e3424cb2"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjE4NzQ2Mw==", "bodyText": "That's an interesting point. I've tried to keep the original condition.\nAny thoughts on this @anuraaga ?", "url": "https://github.com/line/armeria/pull/2616#discussion_r396187463", "createdAt": "2020-03-23T02:37:11Z", "author": {"login": "ikhoon"}, "path": "grpc/src/main/java/com/linecorp/armeria/internal/common/grpc/GrpcStatus.java", "diffHunk": "@@ -81,7 +82,7 @@ public static Status fromThrowable(Throwable t) {\n         if (s.getCode() != Code.UNKNOWN) {\n             return s;\n         }\n-        if (t instanceof ClosedStreamException) {\n+        if (t instanceof ClosedStreamException && !(t instanceof ClosedSessionException)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTkzMTM3NA=="}, "originalCommit": {"oid": "37c19947a85a739a8e804d49376a5ce5e3424cb2"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjE5MDY3OA==", "bodyText": "The test with reverting this, GrpcServiceServerTest.clientSocketClosedBeforeHalfCloseHttp1 is failed.\n\n  \n    \n      armeria/grpc/src/test/java/com/linecorp/armeria/server/grpc/GrpcServiceServerTest.java\n    \n    \n        Lines 807 to 808\n      in\n      46eff82\n    \n    \n    \n    \n\n        \n          \n           assertThat(grpcStatus.getCode()).isEqualTo(protocol.startsWith(\"h2\") ? Code.CANCELLED \n        \n\n        \n          \n                                                                                : Code.UNKNOWN); \n        \n    \n  \n\n\nThe assert of the HTTP1 half-close test expects UNKNOWN when the connection has been closed.", "url": "https://github.com/line/armeria/pull/2616#discussion_r396190678", "createdAt": "2020-03-23T02:54:23Z", "author": {"login": "ikhoon"}, "path": "grpc/src/main/java/com/linecorp/armeria/internal/common/grpc/GrpcStatus.java", "diffHunk": "@@ -81,7 +82,7 @@ public static Status fromThrowable(Throwable t) {\n         if (s.getCode() != Code.UNKNOWN) {\n             return s;\n         }\n-        if (t instanceof ClosedStreamException) {\n+        if (t instanceof ClosedStreamException && !(t instanceof ClosedSessionException)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTkzMTM3NA=="}, "originalCommit": {"oid": "37c19947a85a739a8e804d49376a5ce5e3424cb2"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjE5MTkyMA==", "bodyText": "Upstream only uses CANCELLED with RST_STREAM. Actually it is a bit more complex, looking at the http error code too which I guess we aren't but don't think we can catch connection failure here.\nIt's hard to know what a user would do but I guess they might implement a client type and run into this, or otherwise will generally just catch Throwable anyways.\nAnyways I guess having this sort of complexity is ok, but it looks like wrong Java to me. It makes me question ClosedStreamException a little - this was meant to only map RST_STREAM but is that still the case?\nAlso what if stream extends session instead other way around? There is generic concept of session, whild HTTP/2 specializes that to the concept of a stream? Semantically it seems just a little better.", "url": "https://github.com/line/armeria/pull/2616#discussion_r396191920", "createdAt": "2020-03-23T03:01:07Z", "author": {"login": "anuraaga"}, "path": "grpc/src/main/java/com/linecorp/armeria/internal/common/grpc/GrpcStatus.java", "diffHunk": "@@ -81,7 +82,7 @@ public static Status fromThrowable(Throwable t) {\n         if (s.getCode() != Code.UNKNOWN) {\n             return s;\n         }\n-        if (t instanceof ClosedStreamException) {\n+        if (t instanceof ClosedStreamException && !(t instanceof ClosedSessionException)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTkzMTM3NA=="}, "originalCommit": {"oid": "37c19947a85a739a8e804d49376a5ce5e3424cb2"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjE5OTE2NQ==", "bodyText": "Hi, all. I'm a fan and a user of Armeria and I'm interested in this topic. Would you mind I join the discussion? :-) What's about to create a new base class, let's say BaseClosedException, and make both ClosedSessionException and ClosedStreamException to extend it?", "url": "https://github.com/line/armeria/pull/2616#discussion_r396199165", "createdAt": "2020-03-23T03:40:00Z", "author": {"login": "alex-lx"}, "path": "grpc/src/main/java/com/linecorp/armeria/internal/common/grpc/GrpcStatus.java", "diffHunk": "@@ -81,7 +82,7 @@ public static Status fromThrowable(Throwable t) {\n         if (s.getCode() != Code.UNKNOWN) {\n             return s;\n         }\n-        if (t instanceof ClosedStreamException) {\n+        if (t instanceof ClosedStreamException && !(t instanceof ClosedSessionException)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTkzMTM3NA=="}, "originalCommit": {"oid": "37c19947a85a739a8e804d49376a5ce5e3424cb2"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjIwMzE2Mw==", "bodyText": "Hi @alex-lx, thanks a lot for joining in! Sure, that also could be an option, but I guess we need to name it properly. Another issue is that ClosedStreamException is in com.linecorp.armeria.common.stream while ClosedSessionException is in com.linecorp.armeria.common. Which package should the parent exception go to?", "url": "https://github.com/line/armeria/pull/2616#discussion_r396203163", "createdAt": "2020-03-23T04:02:19Z", "author": {"login": "trustin"}, "path": "grpc/src/main/java/com/linecorp/armeria/internal/common/grpc/GrpcStatus.java", "diffHunk": "@@ -81,7 +82,7 @@ public static Status fromThrowable(Throwable t) {\n         if (s.getCode() != Code.UNKNOWN) {\n             return s;\n         }\n-        if (t instanceof ClosedStreamException) {\n+        if (t instanceof ClosedStreamException && !(t instanceof ClosedSessionException)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTkzMTM3NA=="}, "originalCommit": {"oid": "37c19947a85a739a8e804d49376a5ce5e3424cb2"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjIwNTE4Mg==", "bodyText": "Hi, all. I'm a fan and a user of Armeria and I'm interested in this topic.\n\n\u2665\ufe0f Welcome @alex-lx\n\nWhat's about to create a new base class, let's say BaseClosedException\n\nYes. That is another option that an exception includes ClosedSessionException and ClosedStreamException.\nLet's say a user make their own RetryStrategy:\nRetryStrategy.onStatus((status, cause) -> {\n    // retry if a request fails to write a stream\n    if (cause instanceof ClosedStreamException) {\n        return backoff;\n    }\n    return null;\n});\nIf we make ClosedSessionException and ClosedStreamException extend BaseClosedException, a user needs to know the exceptions' hierarchy. I'm not sure this is the best choice for Armeria users. \ud83e\udd14", "url": "https://github.com/line/armeria/pull/2616#discussion_r396205182", "createdAt": "2020-03-23T04:13:36Z", "author": {"login": "ikhoon"}, "path": "grpc/src/main/java/com/linecorp/armeria/internal/common/grpc/GrpcStatus.java", "diffHunk": "@@ -81,7 +82,7 @@ public static Status fromThrowable(Throwable t) {\n         if (s.getCode() != Code.UNKNOWN) {\n             return s;\n         }\n-        if (t instanceof ClosedStreamException) {\n+        if (t instanceof ClosedStreamException && !(t instanceof ClosedSessionException)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTkzMTM3NA=="}, "originalCommit": {"oid": "37c19947a85a739a8e804d49376a5ce5e3424cb2"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjIwNzU3Mw==", "bodyText": "If we want to keep the class hierarchy and need to return UNKNOWN for ClosedSessionException and CANCELLED for ClosedStreamException, don't we need to always check if the exception is the subclass or not, first? So that we can get rid of this complex condition?\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (t instanceof ClosedStreamException && !(t instanceof ClosedSessionException)) {\n          \n          \n            \n            if (t instanceof ClosedSessionException | t instanceof ClosedChannelException) { // Remove line 88 as well.\n          \n          \n            \n                return s;\n          \n          \n            \n            }\n          \n          \n            \n            if (t instanceof ClosedStreamException) {\n          \n          \n            \n                return Status.CANCELLED;\n          \n          \n            \n            }", "url": "https://github.com/line/armeria/pull/2616#discussion_r396207573", "createdAt": "2020-03-23T04:27:04Z", "author": {"login": "minwoox"}, "path": "grpc/src/main/java/com/linecorp/armeria/internal/common/grpc/GrpcStatus.java", "diffHunk": "@@ -81,7 +82,7 @@ public static Status fromThrowable(Throwable t) {\n         if (s.getCode() != Code.UNKNOWN) {\n             return s;\n         }\n-        if (t instanceof ClosedStreamException) {\n+        if (t instanceof ClosedStreamException && !(t instanceof ClosedSessionException)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTkzMTM3NA=="}, "originalCommit": {"oid": "37c19947a85a739a8e804d49376a5ce5e3424cb2"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjIwNzg1NQ==", "bodyText": "If we make ClosedSessionException and ClosedStreamException extend BaseClosedException, a user needs to know the exceptions' hierarchy. I'm not sure this is the best choice for Armeria users.\n\nI think it's fine since we didn't release 1.0 just yet :-)", "url": "https://github.com/line/armeria/pull/2616#discussion_r396207855", "createdAt": "2020-03-23T04:28:19Z", "author": {"login": "trustin"}, "path": "grpc/src/main/java/com/linecorp/armeria/internal/common/grpc/GrpcStatus.java", "diffHunk": "@@ -81,7 +82,7 @@ public static Status fromThrowable(Throwable t) {\n         if (s.getCode() != Code.UNKNOWN) {\n             return s;\n         }\n-        if (t instanceof ClosedStreamException) {\n+        if (t instanceof ClosedStreamException && !(t instanceof ClosedSessionException)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTkzMTM3NA=="}, "originalCommit": {"oid": "37c19947a85a739a8e804d49376a5ce5e3424cb2"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjI1MDAwMQ==", "bodyText": "I think one reasonable naming for a base class would be ClosedByPeerException - both are the message being closed by the peer. One type of closing is a connection close, another is a HTTP/2 RST_STREAM.", "url": "https://github.com/line/armeria/pull/2616#discussion_r396250001", "createdAt": "2020-03-23T07:21:43Z", "author": {"login": "anuraaga"}, "path": "grpc/src/main/java/com/linecorp/armeria/internal/common/grpc/GrpcStatus.java", "diffHunk": "@@ -81,7 +82,7 @@ public static Status fromThrowable(Throwable t) {\n         if (s.getCode() != Code.UNKNOWN) {\n             return s;\n         }\n-        if (t instanceof ClosedStreamException) {\n+        if (t instanceof ClosedStreamException && !(t instanceof ClosedSessionException)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTkzMTM3NA=="}, "originalCommit": {"oid": "37c19947a85a739a8e804d49376a5ce5e3424cb2"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjI1MjYxOQ==", "bodyText": "let's say BaseClosedException, and make both ClosedSessionException and ClosedStreamException to extend it?\n\nThe name of BaseClosedException is a little vague.\nHow about reviving ClosedPublisherException(#2468) and making ClosedSessionException and ClosedStreamException extend it?\nOn second thought, ClosedPublisherException does not fit this case.", "url": "https://github.com/line/armeria/pull/2616#discussion_r396252619", "createdAt": "2020-03-23T07:28:54Z", "author": {"login": "ikhoon"}, "path": "grpc/src/main/java/com/linecorp/armeria/internal/common/grpc/GrpcStatus.java", "diffHunk": "@@ -81,7 +82,7 @@ public static Status fromThrowable(Throwable t) {\n         if (s.getCode() != Code.UNKNOWN) {\n             return s;\n         }\n-        if (t instanceof ClosedStreamException) {\n+        if (t instanceof ClosedStreamException && !(t instanceof ClosedSessionException)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTkzMTM3NA=="}, "originalCommit": {"oid": "37c19947a85a739a8e804d49376a5ce5e3424cb2"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjI1NTM5OQ==", "bodyText": "ClosedByPeerException\n\nI think we use the exception even if it's not closed by the peer. For example:\nhttps://github.com/line/armeria/blob/master/core/src/main/java/com/linecorp/armeria/client/HttpRequestSubscriber.java#L151", "url": "https://github.com/line/armeria/pull/2616#discussion_r396255399", "createdAt": "2020-03-23T07:36:06Z", "author": {"login": "minwoox"}, "path": "grpc/src/main/java/com/linecorp/armeria/internal/common/grpc/GrpcStatus.java", "diffHunk": "@@ -81,7 +82,7 @@ public static Status fromThrowable(Throwable t) {\n         if (s.getCode() != Code.UNKNOWN) {\n             return s;\n         }\n-        if (t instanceof ClosedStreamException) {\n+        if (t instanceof ClosedStreamException && !(t instanceof ClosedSessionException)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTkzMTM3NA=="}, "originalCommit": {"oid": "37c19947a85a739a8e804d49376a5ce5e3424cb2"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjI2NTIwOQ==", "bodyText": "Perhaps, we can define another exception for other cases and use ClosedStreamException and ClosedSessionException only when it's closed by the peer?\nOther cases mean that the client and server want to close the stream and session.", "url": "https://github.com/line/armeria/pull/2616#discussion_r396265209", "createdAt": "2020-03-23T08:00:28Z", "author": {"login": "minwoox"}, "path": "grpc/src/main/java/com/linecorp/armeria/internal/common/grpc/GrpcStatus.java", "diffHunk": "@@ -81,7 +82,7 @@ public static Status fromThrowable(Throwable t) {\n         if (s.getCode() != Code.UNKNOWN) {\n             return s;\n         }\n-        if (t instanceof ClosedStreamException) {\n+        if (t instanceof ClosedStreamException && !(t instanceof ClosedSessionException)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTkzMTM3NA=="}, "originalCommit": {"oid": "37c19947a85a739a8e804d49376a5ce5e3424cb2"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzcwNjM4OA==", "bodyText": "Other cases mean that the client and server want to close the stream and session.\n\nI guess it may not always be easy to determine who closed stream/session and there's nothing much a user can do with such distinction.", "url": "https://github.com/line/armeria/pull/2616#discussion_r397706388", "createdAt": "2020-03-25T09:18:28Z", "author": {"login": "trustin"}, "path": "grpc/src/main/java/com/linecorp/armeria/internal/common/grpc/GrpcStatus.java", "diffHunk": "@@ -81,7 +82,7 @@ public static Status fromThrowable(Throwable t) {\n         if (s.getCode() != Code.UNKNOWN) {\n             return s;\n         }\n-        if (t instanceof ClosedStreamException) {\n+        if (t instanceof ClosedStreamException && !(t instanceof ClosedSessionException)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTkzMTM3NA=="}, "originalCommit": {"oid": "37c19947a85a739a8e804d49376a5ce5e3424cb2"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzcxNTU5OA==", "bodyText": "After thinking a little bit more, I'm leaning toward the original idea of leaving this PR as it is. Here's why:\n\nA user doesn't really care about why the stream was aborted but only about whether the stream was aborted or not.\n\nIf a user wants to know why, then he or she can catch ClosedSessionException first, e.g.\ntry { ... }\ncatch (ClosedSessionException e) { ... }\ncatch (ClosedStreamException e) { ... }\n// or\nif (e instanceof ClosedSessionException) { ... }\nelse if (e instanceof ClosedStreamException) { ... }\n.. and this isn't that complex. It's like catching FileNotFoundException before IOException.\n\n\nI'm not sure if a common base exception helps the situation. It helps users catch the 'stream closed but not disconnected' case easily, but again, I don't think users are interested in this in most cases. If interested, an extra instanceof or catch() does the job.", "url": "https://github.com/line/armeria/pull/2616#discussion_r397715598", "createdAt": "2020-03-25T09:33:00Z", "author": {"login": "trustin"}, "path": "grpc/src/main/java/com/linecorp/armeria/internal/common/grpc/GrpcStatus.java", "diffHunk": "@@ -81,7 +82,7 @@ public static Status fromThrowable(Throwable t) {\n         if (s.getCode() != Code.UNKNOWN) {\n             return s;\n         }\n-        if (t instanceof ClosedStreamException) {\n+        if (t instanceof ClosedStreamException && !(t instanceof ClosedSessionException)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTkzMTM3NA=="}, "originalCommit": {"oid": "37c19947a85a739a8e804d49376a5ce5e3424cb2"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzcxNzYwNA==", "bodyText": "Ok SGTM", "url": "https://github.com/line/armeria/pull/2616#discussion_r397717604", "createdAt": "2020-03-25T09:36:29Z", "author": {"login": "anuraaga"}, "path": "grpc/src/main/java/com/linecorp/armeria/internal/common/grpc/GrpcStatus.java", "diffHunk": "@@ -81,7 +82,7 @@ public static Status fromThrowable(Throwable t) {\n         if (s.getCode() != Code.UNKNOWN) {\n             return s;\n         }\n-        if (t instanceof ClosedStreamException) {\n+        if (t instanceof ClosedStreamException && !(t instanceof ClosedSessionException)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTkzMTM3NA=="}, "originalCommit": {"oid": "37c19947a85a739a8e804d49376a5ce5e3424cb2"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1NjEwNTk0OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/com/linecorp/armeria/server/HttpServerHandler.java", "isResolved": false, "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QwNDozNDozNFrOF52rkA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QwNzoxNTozMFrOF55C1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjIwOTA0MA==", "bodyText": "cause instanceof ClosedSessionException is true when the cause is ClosedStreamException.", "url": "https://github.com/line/armeria/pull/2616#discussion_r396209040", "createdAt": "2020-03-23T04:34:34Z", "author": {"login": "minwoox"}, "path": "core/src/main/java/com/linecorp/armeria/server/HttpServerHandler.java", "diffHunk": "@@ -106,7 +106,8 @@\n \n     static final ChannelFutureListener CLOSE_ON_FAILURE = future -> {\n         final Throwable cause = future.cause();\n-        if (cause != null && !(cause instanceof ClosedStreamException)) {\n+        if (cause != null && (!(cause instanceof ClosedStreamException) ||\n+                              cause instanceof ClosedSessionException)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d473039dad8497fdd3b87e9733d4184aa1bfd4ed"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjIwOTM3Ng==", "bodyText": "So I think checking if it's subclass or not is better and readable not to make mistakes.\nif (cause instanceof ClosedSessionException) {\n    return;\n}\n...", "url": "https://github.com/line/armeria/pull/2616#discussion_r396209376", "createdAt": "2020-03-23T04:36:19Z", "author": {"login": "minwoox"}, "path": "core/src/main/java/com/linecorp/armeria/server/HttpServerHandler.java", "diffHunk": "@@ -106,7 +106,8 @@\n \n     static final ChannelFutureListener CLOSE_ON_FAILURE = future -> {\n         final Throwable cause = future.cause();\n-        if (cause != null && !(cause instanceof ClosedStreamException)) {\n+        if (cause != null && (!(cause instanceof ClosedStreamException) ||\n+                              cause instanceof ClosedSessionException)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjIwOTA0MA=="}, "originalCommit": {"oid": "d473039dad8497fdd3b87e9733d4184aa1bfd4ed"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjIyNjQ0NQ==", "bodyText": "if (cause instanceof ClosedSessionException) { will return ClosedSessionException but,\nThe ClosedSessionException have to invoke safeClose so we cannot just return ClosedSessionException.\nThe channel will be closed if:\n\nthe cause is not null\naccept all causes except ClosedStreamException\n\nHow about inverting the boolean expression?\nif (cause == null) {\n    return;\n}\nif (cause instanceof ClosedStreamException && !(cause instanceof ClosedSessionException)) {\n    return;\n}\n\n// or just one if \nif (cause == null || (cause instanceof ClosedStreamException &&\n                      !(cause instanceof ClosedSessionException))) {\n    return;\n}", "url": "https://github.com/line/armeria/pull/2616#discussion_r396226445", "createdAt": "2020-03-23T05:56:56Z", "author": {"login": "ikhoon"}, "path": "core/src/main/java/com/linecorp/armeria/server/HttpServerHandler.java", "diffHunk": "@@ -106,7 +106,8 @@\n \n     static final ChannelFutureListener CLOSE_ON_FAILURE = future -> {\n         final Throwable cause = future.cause();\n-        if (cause != null && !(cause instanceof ClosedStreamException)) {\n+        if (cause != null && (!(cause instanceof ClosedStreamException) ||\n+                              cause instanceof ClosedSessionException)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjIwOTA0MA=="}, "originalCommit": {"oid": "d473039dad8497fdd3b87e9733d4184aa1bfd4ed"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjIzMjE4Ng==", "bodyText": "Ah, I didn't mean to return when the cause is an instance of ClosedSessionException, but call safeClose.\nThe original condition was wrong and I think these expressions will confuse others as well.", "url": "https://github.com/line/armeria/pull/2616#discussion_r396232186", "createdAt": "2020-03-23T06:21:21Z", "author": {"login": "minwoox"}, "path": "core/src/main/java/com/linecorp/armeria/server/HttpServerHandler.java", "diffHunk": "@@ -106,7 +106,8 @@\n \n     static final ChannelFutureListener CLOSE_ON_FAILURE = future -> {\n         final Throwable cause = future.cause();\n-        if (cause != null && !(cause instanceof ClosedStreamException)) {\n+        if (cause != null && (!(cause instanceof ClosedStreamException) ||\n+                              cause instanceof ClosedSessionException)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjIwOTA0MA=="}, "originalCommit": {"oid": "d473039dad8497fdd3b87e9733d4184aa1bfd4ed"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjIzMzUyNw==", "bodyText": "So this could be:\nstatic final ChannelFutureListener CLOSE_ON_FAILURE = future -> {\n    final Throwable cause = future.cause();\n    if (cause == null) {\n        return;\n    }\n    if (cause instanceof ClosedSessionException) {\n        safeClose(future.channel());\n        return;\n    }\n    if (cause instanceof ClosedStreamException) {\n        return;\n    }\n    final Channel ch = future.channel();\n    logException(ch, cause);\n    safeClose(ch);\n};", "url": "https://github.com/line/armeria/pull/2616#discussion_r396233527", "createdAt": "2020-03-23T06:26:32Z", "author": {"login": "minwoox"}, "path": "core/src/main/java/com/linecorp/armeria/server/HttpServerHandler.java", "diffHunk": "@@ -106,7 +106,8 @@\n \n     static final ChannelFutureListener CLOSE_ON_FAILURE = future -> {\n         final Throwable cause = future.cause();\n-        if (cause != null && !(cause instanceof ClosedStreamException)) {\n+        if (cause != null && (!(cause instanceof ClosedStreamException) ||\n+                              cause instanceof ClosedSessionException)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjIwOTA0MA=="}, "originalCommit": {"oid": "d473039dad8497fdd3b87e9733d4184aa1bfd4ed"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjIzNDM0OA==", "bodyText": "And we might change this listener to send RST_STREAM when cause is an instance of ClosedStreamException.", "url": "https://github.com/line/armeria/pull/2616#discussion_r396234348", "createdAt": "2020-03-23T06:29:45Z", "author": {"login": "minwoox"}, "path": "core/src/main/java/com/linecorp/armeria/server/HttpServerHandler.java", "diffHunk": "@@ -106,7 +106,8 @@\n \n     static final ChannelFutureListener CLOSE_ON_FAILURE = future -> {\n         final Throwable cause = future.cause();\n-        if (cause != null && !(cause instanceof ClosedStreamException)) {\n+        if (cause != null && (!(cause instanceof ClosedStreamException) ||\n+                              cause instanceof ClosedSessionException)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjIwOTA0MA=="}, "originalCommit": {"oid": "d473039dad8497fdd3b87e9733d4184aa1bfd4ed"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjIzNTY1Ng==", "bodyText": "Also, I'm wondering if we can add this listener a little bit more inside such as encoder so that we can send RST_STREAM or close the channel completely.", "url": "https://github.com/line/armeria/pull/2616#discussion_r396235656", "createdAt": "2020-03-23T06:34:33Z", "author": {"login": "minwoox"}, "path": "core/src/main/java/com/linecorp/armeria/server/HttpServerHandler.java", "diffHunk": "@@ -106,7 +106,8 @@\n \n     static final ChannelFutureListener CLOSE_ON_FAILURE = future -> {\n         final Throwable cause = future.cause();\n-        if (cause != null && !(cause instanceof ClosedStreamException)) {\n+        if (cause != null && (!(cause instanceof ClosedStreamException) ||\n+                              cause instanceof ClosedSessionException)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjIwOTA0MA=="}, "originalCommit": {"oid": "d473039dad8497fdd3b87e9733d4184aa1bfd4ed"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjI0Nzc2NA==", "bodyText": "Let me address this comment once we decide our direction. \ud83d\ude00", "url": "https://github.com/line/armeria/pull/2616#discussion_r396247764", "createdAt": "2020-03-23T07:15:30Z", "author": {"login": "ikhoon"}, "path": "core/src/main/java/com/linecorp/armeria/server/HttpServerHandler.java", "diffHunk": "@@ -106,7 +106,8 @@\n \n     static final ChannelFutureListener CLOSE_ON_FAILURE = future -> {\n         final Throwable cause = future.cause();\n-        if (cause != null && !(cause instanceof ClosedStreamException)) {\n+        if (cause != null && (!(cause instanceof ClosedStreamException) ||\n+                              cause instanceof ClosedSessionException)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjIwOTA0MA=="}, "originalCommit": {"oid": "d473039dad8497fdd3b87e9733d4184aa1bfd4ed"}, "originalPosition": 6}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2798, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}