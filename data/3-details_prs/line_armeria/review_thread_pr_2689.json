{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEzNTcxOTY0", "number": 2689, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQwMzowOTowN1rOD5p1Sw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQwNDoyMzo0MlrOD5qfew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxNzgwODExOnYy", "diffSide": "LEFT", "path": "core/src/main/java/com/linecorp/armeria/server/ServerConfig.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQwMzowOTowN1rOGRCpMg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQwMzoxNzoyOFrOGRCv2w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDUyMjI5MA==", "bodyText": "Could you revive this check only for TimedScheduledExecutorService, TimedExecutorService and TimedExecutor?\n#2612 (comment)", "url": "https://github.com/line/armeria/pull/2689#discussion_r420522290", "createdAt": "2020-05-06T03:09:07Z", "author": {"login": "ikhoon"}, "path": "core/src/main/java/com/linecorp/armeria/server/ServerConfig.java", "diffHunk": "@@ -155,11 +155,9 @@\n                                    gracefulShutdownQuietPeriod, \"gracefulShutdownQuietPeriod\");\n \n         requireNonNull(blockingTaskExecutor, \"blockingTaskExecutor\");\n-        if (!ExecutorServiceMetrics.isMonitoredExecutor(blockingTaskExecutor)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eee4164012e810042301dbc3ea2bb1bb21c7bf52"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDUyMjk2Ng==", "bodyText": "Hmm? Any thoughts on what I wrote in the PR description?", "url": "https://github.com/line/armeria/pull/2689#discussion_r420522966", "createdAt": "2020-05-06T03:12:29Z", "author": {"login": "anuraaga"}, "path": "core/src/main/java/com/linecorp/armeria/server/ServerConfig.java", "diffHunk": "@@ -155,11 +155,9 @@\n                                    gracefulShutdownQuietPeriod, \"gracefulShutdownQuietPeriod\");\n \n         requireNonNull(blockingTaskExecutor, \"blockingTaskExecutor\");\n-        if (!ExecutorServiceMetrics.isMonitoredExecutor(blockingTaskExecutor)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDUyMjI5MA=="}, "originalCommit": {"oid": "eee4164012e810042301dbc3ea2bb1bb21c7bf52"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDUyMzk5NQ==", "bodyText": "Oops, I missed the PR description. \ud83d\ude05 That makes sense!", "url": "https://github.com/line/armeria/pull/2689#discussion_r420523995", "createdAt": "2020-05-06T03:17:28Z", "author": {"login": "ikhoon"}, "path": "core/src/main/java/com/linecorp/armeria/server/ServerConfig.java", "diffHunk": "@@ -155,11 +155,9 @@\n                                    gracefulShutdownQuietPeriod, \"gracefulShutdownQuietPeriod\");\n \n         requireNonNull(blockingTaskExecutor, \"blockingTaskExecutor\");\n-        if (!ExecutorServiceMetrics.isMonitoredExecutor(blockingTaskExecutor)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDUyMjI5MA=="}, "originalCommit": {"oid": "eee4164012e810042301dbc3ea2bb1bb21c7bf52"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxNzkxNjExOnYy", "diffSide": "RIGHT", "path": "spring/boot1-autoconfigure/build.gradle", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQwNDoyMzo0MlrOGRDlRw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQwMzo1NDoyNVrOGSYGww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDUzNzY3MQ==", "bodyText": "@shakuzen Any thoughts on mixing LTS versions like this?", "url": "https://github.com/line/armeria/pull/2689#discussion_r420537671", "createdAt": "2020-05-06T04:23:42Z", "author": {"login": "anuraaga"}, "path": "spring/boot1-autoconfigure/build.gradle", "diffHunk": "@@ -1,19 +1,24 @@\n final def SPRING_BOOT_VERSION = '1.5.22.RELEASE'\n-final def MICROMETER_VERSION = '1.3.6'\n+final def MICROMETER_VERSION = '1.5.0'\n \n dependencies {\n     // To let a user choose between thrift and thrift0.9.\n     compileOnly project(':thrift')\n     implementation project(':logback')\n \n-    [ 'micrometer-core', 'micrometer-spring-legacy' ].each {\n-        implementation(\"io.micrometer:$it\") {\n-            version {\n-                // Will fail the build if the override doesn't work\n-                strictly MICROMETER_VERSION\n-            }\n+    implementation(\"io.micrometer:micrometer-spring-legacy\") {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f5d726e2dc0c6b388db4bfd2e710b3dd913b5ae0"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTkxOTUyNw==", "bodyText": "It's probably better to keep the version consistent within this sub-project. I would expect a user still using micrometer-spring-legacy to stay on Micrometer 1.3.x. Of course the best suggestion is that they upgrade to Spring Boot 2 to be on the latest supported versions, though.", "url": "https://github.com/line/armeria/pull/2689#discussion_r421919527", "createdAt": "2020-05-08T03:41:54Z", "author": {"login": "shakuzen"}, "path": "spring/boot1-autoconfigure/build.gradle", "diffHunk": "@@ -1,19 +1,24 @@\n final def SPRING_BOOT_VERSION = '1.5.22.RELEASE'\n-final def MICROMETER_VERSION = '1.3.6'\n+final def MICROMETER_VERSION = '1.5.0'\n \n dependencies {\n     // To let a user choose between thrift and thrift0.9.\n     compileOnly project(':thrift')\n     implementation project(':logback')\n \n-    [ 'micrometer-core', 'micrometer-spring-legacy' ].each {\n-        implementation(\"io.micrometer:$it\") {\n-            version {\n-                // Will fail the build if the override doesn't work\n-                strictly MICROMETER_VERSION\n-            }\n+    implementation(\"io.micrometer:micrometer-spring-legacy\") {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDUzNzY3MQ=="}, "originalCommit": {"oid": "f5d726e2dc0c6b388db4bfd2e710b3dd913b5ae0"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTkyMjQ5OQ==", "bodyText": "Hmm - in that case can we backport the ExecutorServiceMetrics change to 1.3.x? Right now we have the conundrum of having it only in 1.5.x, but only a 1.3.x of spring-legacy.", "url": "https://github.com/line/armeria/pull/2689#discussion_r421922499", "createdAt": "2020-05-08T03:54:25Z", "author": {"login": "anuraaga"}, "path": "spring/boot1-autoconfigure/build.gradle", "diffHunk": "@@ -1,19 +1,24 @@\n final def SPRING_BOOT_VERSION = '1.5.22.RELEASE'\n-final def MICROMETER_VERSION = '1.3.6'\n+final def MICROMETER_VERSION = '1.5.0'\n \n dependencies {\n     // To let a user choose between thrift and thrift0.9.\n     compileOnly project(':thrift')\n     implementation project(':logback')\n \n-    [ 'micrometer-core', 'micrometer-spring-legacy' ].each {\n-        implementation(\"io.micrometer:$it\") {\n-            version {\n-                // Will fail the build if the override doesn't work\n-                strictly MICROMETER_VERSION\n-            }\n+    implementation(\"io.micrometer:micrometer-spring-legacy\") {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDUzNzY3MQ=="}, "originalCommit": {"oid": "f5d726e2dc0c6b388db4bfd2e710b3dd913b5ae0"}, "originalPosition": 16}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2576, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}