{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQxNDE3MDE2", "number": 2852, "title": "Close the connection with failed HTTP/2 upgrade request early", "bodyText": "Motivation:\nWhen we are sure that we cannot reuse the HTTP/1 connection that we\nfailed to upgrade to HTTP/2, we do not need to wait until the response\nis fully received.\nModifications:\n\nDisconnect early when it's not possible to reuse the HTTP/1 connection\nthat we failed to upgrade to HTTP/2.\n\nImprove how we determine whether it's possible to reuse or not, by\nchecking connection, content-length and transfer-encoding.\n\n\nRecord the response headers of rejected upgrade requests\n\nResult:\n\nPotentially lower initial connection latency by giving up hopeless\nHTTP/1 connection early\nMaybe easier to figure out why upgrade was failed", "createdAt": "2020-06-29T13:32:11Z", "url": "https://github.com/line/armeria/pull/2852", "merged": true, "mergeCommit": {"oid": "b71e12e7e78dfa9fbcf0e817b976989fc55ba1c6"}, "closed": true, "closedAt": "2020-06-30T02:36:34Z", "author": {"login": "trustin"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcwBDnVAH2gAyNDQxNDE3MDE2OmVhZDMxYWMyNDM1N2ViMzVhNGIzMzViM2IyOTRmMjRkZGVhMGQ1ZTk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcwMClkAFqTQzOTYyMjExNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "ead31ac24357eb35a4b335b3b294f24ddea0d5e9", "author": {"user": {"login": "trustin", "name": "Trustin Lee"}}, "url": "https://github.com/line/armeria/commit/ead31ac24357eb35a4b335b3b294f24ddea0d5e9", "committedDate": "2020-06-29T13:28:18Z", "message": "Close the connection with failed HTTP/2 upgrade request early\n\nMotivation:\n\nWhen we are sure that we cannot reuse the HTTP/1 connection that we\nfailed to upgrade to HTTP/2, we do not need to wait until the response\nis fully received.\n\nModifications:\n\n- Disconnect early when it's not possible to reuse the HTTP/1 connection\n  that we failed to upgrade to HTTP/2.\n  - Improve how we determine whether it's possible to reuse or not, by\n    checking `connection`, `content-length` and `transfer-encoding`.\n- Record the response headers of rejected upgrade requests\n\nResult:\n\n- Potentially lower initial connection latency by giving up hopeless\n  HTTP/1 connection early\n- Maybe easier to figure out why upgrade was failed"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM5MTc3MDQ4", "url": "https://github.com/line/armeria/pull/2852#pullrequestreview-439177048", "createdAt": "2020-06-29T14:04:22Z", "commit": {"oid": "ead31ac24357eb35a4b335b3b294f24ddea0d5e9"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQxNDowNDoyMlrOGqShVQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQxNDowNDoyMlrOGqShVQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njk5NjgyMQ==", "bodyText": "question: which one releases the msg?", "url": "https://github.com/line/armeria/pull/2852#discussion_r446996821", "createdAt": "2020-06-29T14:04:22Z", "author": {"login": "minwoox"}, "path": "core/src/main/java/com/linecorp/armeria/client/HttpClientPipelineConfigurator.java", "diffHunk": "@@ -467,28 +467,51 @@ public void userEventTriggered(ChannelHandlerContext ctx, Object evt) throws Exc\n \n         @Override\n         public void channelRead(ChannelHandlerContext ctx, Object msg) throws Exception {\n-            boolean handled = false;\n             if (msg instanceof HttpResponse) {\n                 // The server rejected the upgrade request and sent its response in HTTP/1.\n                 assert upgradeEvt == UPGRADE_REJECTED;\n-                final String connection = ((HttpResponse) msg).headers().get(HttpHeaderNames.CONNECTION);\n-                needsToClose = connection != null && Ascii.equalsIgnoreCase(\"close\", connection);\n-                handled = true;\n+                final HttpResponse res = (HttpResponse) msg;\n+                upgradeRejectionCause = \"Upgrade request rejected with: \" + res.headers();\n+                // We can persist connection only when:\n+                // - The response has 'Connection: keep-alive' header on HTTP/1.0.\n+                // - The response has no 'Connection: close' header on HTTP/1.1.\n+                // and:\n+                // - The response has 'Content-Length' or 'Transfer-Encoding: chunked',\n+                //   i.e. possible to determine the end of the response.\n+                //\n+                // See: https://www.w3.org/Protocols/rfc2616/rfc2616-sec8.html#sec8.1.2.1\n+                //      https://www.w3.org/Protocols/rfc2616/rfc2616-sec4.html#sec4.4\n+                needsToClose = !(HttpUtil.isKeepAlive(res) &&\n+                                 (HttpUtil.isContentLengthSet(res) ||\n+                                  HttpUtil.isTransferEncodingChunked(res)));\n+                if (needsToClose) {\n+                    // No need to wait till the end of the response.\n+                    // Close the connection immediately and finish the upgrade process.\n+                    onUpgradeResponse(ctx, false);\n+                }\n+\n+                ReferenceCountUtil.release(msg);\n+                return;\n+            }\n+\n+            // We're not going to reuse the connection,\n+            // so we just discard everything received.\n+            if (needsToClose) {\n+                ReferenceCountUtil.release(msg);\n+                return;\n             }\n \n+            // We're not going to close but reuse the connection,\n+            // so we wait until the end of the rejecting response.\n             if (msg instanceof HttpContent) {\n                 if (msg instanceof LastHttpContent) {\n-                    // Received the rejecting response completely.\n                     onUpgradeResponse(ctx, false);\n                 }\n-                handled = true;\n-            }\n-\n-            if (!handled) {\n-                ctx.fireChannelRead(msg);\n-            } else {\n                 ReferenceCountUtil.release(msg);\n+                return;\n             }\n+\n+            ctx.fireChannelRead(msg);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ead31ac24357eb35a4b335b3b294f24ddea0d5e9"}, "originalPosition": 117}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "500d615d8bb379b1d95b7a8073119e4bd05e0102", "author": {"user": {"login": "trustin", "name": "Trustin Lee"}}, "url": "https://github.com/line/armeria/commit/500d615d8bb379b1d95b7a8073119e4bd05e0102", "committedDate": "2020-06-30T01:42:23Z", "message": "Record status and protocol version as well"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "21a5cde3f5c83797afb455d353eb20d506560478", "author": {"user": {"login": "trustin", "name": "Trustin Lee"}}, "url": "https://github.com/line/armeria/commit/21a5cde3f5c83797afb455d353eb20d506560478", "committedDate": "2020-06-30T01:55:52Z", "message": "Merge branch 'master' into upgrade_close"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM5NjIyMTE0", "url": "https://github.com/line/armeria/pull/2852#pullrequestreview-439622114", "createdAt": "2020-06-30T02:16:08Z", "commit": {"oid": "21a5cde3f5c83797afb455d353eb20d506560478"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 328, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}