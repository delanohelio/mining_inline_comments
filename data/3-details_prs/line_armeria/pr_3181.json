{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIxNjYwMTQw", "number": 3181, "title": "Fix a bug where HealthCheckedEndpointGroup.endpoints() is not set", "bodyText": "Motivation:\nWhen EndpointGroup.orElse(...) is used and the endpoint group is wrapped by HealthCheckedEndpointGroup,\nthere's a chance that endpoints are not set forever in this situation:\n\nOrELseEndpointGroup.whenReady() is completed with the second endpoint group.\nThe first EndpointGroup.setEndpoints(...) are called.\nHealthCheckedEndpointGroup is created.\nIn this case, the health check requests are sent to the second endpoint group to filter unhealthy endpoints.\nHowever, because OrELseEndpointGroup.endpoints() returns the endpoint group in the first EndpointGroup, there's always no matching.\n\nModifications:\n\nDelay to set the List<EndpointGroup> for the whenReady() future.\n\nIt's set when the list is first accessed.\n\n\nUse delegate.endpoint() instead of delegate.whenReady().join().\n\nResult:\n\nHealthCheckedEndpointGroup.endpoints() now returns healthy endpoints when EndpointGroup.orElse(...) is used.", "createdAt": "2020-11-16T13:22:04Z", "url": "https://github.com/line/armeria/pull/3181", "merged": true, "mergeCommit": {"oid": "39e97e2686c76e8122f2c1ec6057abcd201a485b"}, "closed": true, "closedAt": "2020-11-19T10:21:03Z", "author": {"login": "minwoox"}, "timelineItems": {"totalCount": 18, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABddE26HAH2gAyNTIxNjYwMTQwOjljOGU4MDViNzU4OWU5N2JkMjRiZTE2NDExNTI1MzgzZTM3YTAzM2U=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdd_msFgH2gAyNTIxNjYwMTQwOjQ2ZjgwNjBmMTQ2NDU3MjkxOGZlNWQzMTdkMGI4OWI5Y2ZlNzUxYTA=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "9c8e805b7589e97bd24be16411525383e37a033e", "author": {"user": {"login": "minwoox", "name": "minux"}}, "url": "https://github.com/line/armeria/commit/9c8e805b7589e97bd24be16411525383e37a033e", "committedDate": "2020-11-16T13:20:38Z", "message": "Fix a bug wheren HealthCheckedEndpointGroup.endpoints() is not set\nMotivation:\nWhen `EndpointGroup.orElse(...)` is used and the endpoint group is wrapped by `HealthCheckedEndpointGroup`,\nthere's a chance that endpoints are not set forever in this situation:\n1. `OrELseEndpointGroup.whenReady()` is completed with the second endpoint group.\n2. The first `EndpointGroup.setEndpoints(...)` are called.\n3. `HealthCheckedEndpointGroup` is created.\nIn this case, the health check reqeusts are sent to the second endpoint group to filter unhealthy endpoints.\nHowever, because `OrELseEndpointGroup.endpoints()` returns the endpoint group in first, there's always no matching.\n\nModifications:\n- Use `delegate.endpoint()` instead of `delegate.whenReady().join()`.\n\nResult:\n- `HealthCheckedEndpointGroup.endpoints()` now returns healthy endpoints when `EndpointGroup.orElse(...)` is used."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMxOTIxOTAx", "url": "https://github.com/line/armeria/pull/3181#pullrequestreview-531921901", "createdAt": "2020-11-17T00:08:36Z", "commit": {"oid": "9c8e805b7589e97bd24be16411525383e37a033e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QwMDowODozNlrOH0eh9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QwMDowODozNlrOH0eh9A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDc4ODIxMg==", "bodyText": "Seems it is better to leave a comment the reason why we cannot use the result of delegate.whenReady().join()?", "url": "https://github.com/line/armeria/pull/3181#discussion_r524788212", "createdAt": "2020-11-17T00:08:36Z", "author": {"login": "imasahiro"}, "path": "core/src/main/java/com/linecorp/armeria/client/endpoint/healthcheck/HealthCheckedEndpointGroup.java", "diffHunk": "@@ -139,7 +139,8 @@ public static HealthCheckedEndpointGroupBuilder builder(EndpointGroup delegate,\n \n         clientOptions.factory().whenClosed().thenRun(this::closeAsync);\n         delegate.addListener(this::updateCandidates);\n-        updateCandidates(delegate.whenReady().join());\n+        delegate.whenReady().join();\n+        updateCandidates(delegate.endpoints());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9c8e805b7589e97bd24be16411525383e37a033e"}, "originalPosition": 6}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "121d3a3ca2b7ebd252b2499a5c68247efc3105e1", "author": {"user": {"login": "minwoox", "name": "minux"}}, "url": "https://github.com/line/armeria/commit/121d3a3ca2b7ebd252b2499a5c68247efc3105e1", "committedDate": "2020-11-17T00:55:57Z", "message": "Add comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMxOTc3MTgy", "url": "https://github.com/line/armeria/pull/3181#pullrequestreview-531977182", "createdAt": "2020-11-17T02:30:23Z", "commit": {"oid": "121d3a3ca2b7ebd252b2499a5c68247efc3105e1"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "752623c40c010e531c83fa52370a0ce4f138a4ff", "author": {"user": {"login": "minwoox", "name": "minux"}}, "url": "https://github.com/line/armeria/commit/752623c40c010e531c83fa52370a0ce4f138a4ff", "committedDate": "2020-11-17T03:40:15Z", "message": "Add LazyList"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "135ed0195dace011a64b855b9ac89b9f15bc5b90", "author": {"user": {"login": "minwoox", "name": "minux"}}, "url": "https://github.com/line/armeria/commit/135ed0195dace011a64b855b9ac89b9f15bc5b90", "committedDate": "2020-11-17T03:42:47Z", "message": "Fix"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMzMjUzMzg5", "url": "https://github.com/line/armeria/pull/3181#pullrequestreview-533253389", "createdAt": "2020-11-18T09:29:52Z", "commit": {"oid": "135ed0195dace011a64b855b9ac89b9f15bc5b90"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQwOToyOTo1MlrOH1koxw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQwOToyOTo1MlrOH1koxw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTkzNjgzOQ==", "bodyText": "How about extends Guava's ForwardingList instead of implementing List?\nI think we can reduce the overall code size with the same result. \ud83d\ude09\nFor example:\nfinal class LazyList<E> extends ForwardingList<E> {\n    @Override\n    protected List<E> delegate() {\n        final List<E> delegate = this.delegate;\n        if (delegate != null) {\n            return delegate;\n        }\n\n        final List<E> supplied = ImmutableList.copyOf(delegateSupplier.get());\n        if (delegateUpdater.compareAndSet(this, null, supplied)) {\n            return supplied;\n        } else {\n            return this.delegate;\n        }\n    }\n\n    // Override unwanted methods\n    @Override\n    public void add(int index, E element) {\n        throw new UnsupportedOperationException();\n    }\n    ...\n}", "url": "https://github.com/line/armeria/pull/3181#discussion_r525936839", "createdAt": "2020-11-18T09:29:52Z", "author": {"login": "ikhoon"}, "path": "core/src/main/java/com/linecorp/armeria/client/endpoint/LazyList.java", "diffHunk": "@@ -0,0 +1,240 @@\n+/*\n+ * Copyright 2020 LINE Corporation\n+ *\n+ * LINE Corporation licenses this file to you under the Apache License,\n+ * version 2.0 (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *   https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package com.linecorp.armeria.client.endpoint;\n+\n+import static java.util.Objects.requireNonNull;\n+\n+import java.util.Collection;\n+import java.util.Iterator;\n+import java.util.List;\n+import java.util.ListIterator;\n+import java.util.concurrent.atomic.AtomicReferenceFieldUpdater;\n+import java.util.function.Supplier;\n+\n+import javax.annotation.Nullable;\n+\n+import com.google.common.collect.ImmutableList;\n+\n+final class LazyList<E> implements List<E> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "135ed0195dace011a64b855b9ac89b9f15bc5b90"}, "originalPosition": 31}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f4a5963db80a30d6892d023799f640a64e2c1f36", "author": {"user": {"login": "minwoox", "name": "minux"}}, "url": "https://github.com/line/armeria/commit/f4a5963db80a30d6892d023799f640a64e2c1f36", "committedDate": "2020-11-19T02:48:14Z", "message": "Address the comment by @ikhoon"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM0MDQ0OTAz", "url": "https://github.com/line/armeria/pull/3181#pullrequestreview-534044903", "createdAt": "2020-11-19T03:00:30Z", "commit": {"oid": "f4a5963db80a30d6892d023799f640a64e2c1f36"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM0MDcwODI3", "url": "https://github.com/line/armeria/pull/3181#pullrequestreview-534070827", "createdAt": "2020-11-19T04:19:18Z", "commit": {"oid": "f4a5963db80a30d6892d023799f640a64e2c1f36"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQwNDoxOToxOFrOH2MKGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQwNDoxOTo0OVrOH2MKuw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjU4NDM0Nw==", "bodyText": "Flaky -> Race?\nCould you add a Javadoc that explains what race condition this test tries to test?", "url": "https://github.com/line/armeria/pull/3181#discussion_r526584347", "createdAt": "2020-11-19T04:19:18Z", "author": {"login": "trustin"}, "path": "core/src/test/java/com/linecorp/armeria/client/endpoint/healthcheck/HealthCheckEndpointGroupFlakyTest.java", "diffHunk": "@@ -0,0 +1,69 @@\n+/*\n+ * Copyright 2020 LINE Corporation\n+ *\n+ * LINE Corporation licenses this file to you under the Apache License,\n+ * version 2.0 (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *   https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package com.linecorp.armeria.client.endpoint.healthcheck;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static org.awaitility.Awaitility.await;\n+\n+import java.util.concurrent.TimeUnit;\n+\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.extension.RegisterExtension;\n+\n+import com.google.common.collect.ImmutableList;\n+\n+import com.linecorp.armeria.client.Endpoint;\n+import com.linecorp.armeria.client.WebClient;\n+import com.linecorp.armeria.client.endpoint.DynamicEndpointGroup;\n+import com.linecorp.armeria.client.endpoint.EndpointGroup;\n+import com.linecorp.armeria.common.HttpResponse;\n+import com.linecorp.armeria.common.HttpStatus;\n+import com.linecorp.armeria.common.SessionProtocol;\n+import com.linecorp.armeria.server.ServerBuilder;\n+import com.linecorp.armeria.server.healthcheck.HealthCheckService;\n+import com.linecorp.armeria.testing.junit5.server.ServerExtension;\n+\n+class HealthCheckEndpointGroupFlakyTest {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f4a5963db80a30d6892d023799f640a64e2c1f36"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjU4NDUwNw==", "bodyText": "Could you add a comment about why we're not using EventLoopCheckingFuture here?", "url": "https://github.com/line/armeria/pull/3181#discussion_r526584507", "createdAt": "2020-11-19T04:19:49Z", "author": {"login": "trustin"}, "path": "core/src/main/java/com/linecorp/armeria/client/endpoint/DynamicEndpointGroup.java", "diffHunk": "@@ -52,8 +51,9 @@\n     private final AtomicReference<EndpointSelector> selector = new AtomicReference<>();\n     private volatile List<Endpoint> endpoints = UNINITIALIZED_ENDPOINTS;\n     private final Lock endpointsLock = new ReentrantLock();\n-    private final CompletableFuture<List<Endpoint>> initialEndpointsFuture =\n-            new EventLoopCheckingFuture<>();\n+\n+    private final CompletableFuture<Void> initialEndpointsSet = new CompletableFuture<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f4a5963db80a30d6892d023799f640a64e2c1f36"}, "originalPosition": 15}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "42023b74c93e8fcebee8486582d1e6e3c13c1a4a", "author": {"user": {"login": "minwoox", "name": "minux"}}, "url": "https://github.com/line/armeria/commit/42023b74c93e8fcebee8486582d1e6e3c13c1a4a", "committedDate": "2020-11-19T05:54:30Z", "message": "Address the comment by @trustin"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "25196e1d9b302568fdcafac2a8b17d20fcdb3e4b", "author": {"user": {"login": "minwoox", "name": "minux"}}, "url": "https://github.com/line/armeria/commit/25196e1d9b302568fdcafac2a8b17d20fcdb3e4b", "committedDate": "2020-11-19T06:09:19Z", "message": "Use thenAccept"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM0MTA5Nzg3", "url": "https://github.com/line/armeria/pull/3181#pullrequestreview-534109787", "createdAt": "2020-11-19T06:17:33Z", "commit": {"oid": "25196e1d9b302568fdcafac2a8b17d20fcdb3e4b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQwNjoxNzozM1rOH2OPYw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQwNjoxNzozM1rOH2OPYw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjYxODQ2Nw==", "bodyText": "What happens if the future returned by anyOf() completes exceptionally?", "url": "https://github.com/line/armeria/pull/3181#discussion_r526618467", "createdAt": "2020-11-19T06:17:33Z", "author": {"login": "trustin"}, "path": "core/src/main/java/com/linecorp/armeria/client/endpoint/CompositeEndpointGroup.java", "diffHunk": "@@ -67,11 +68,12 @@\n             });\n         }\n \n-        initialEndpointsFuture =\n-                CompletableFuture.anyOf(this.endpointGroups.stream()\n-                                                           .map(EndpointGroup::whenReady)\n-                                                           .toArray(CompletableFuture[]::new))\n-                                 .thenApply(unused -> endpoints());\n+        CompletableFuture.anyOf(this.endpointGroups.stream()\n+                                                   .map(EndpointGroup::whenReady)\n+                                                   .toArray(CompletableFuture[]::new))\n+                         .thenAccept(unused -> {\n+                             initialEndpointsFuture.complete(new LazyList<>(this::endpoints));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "25196e1d9b302568fdcafac2a8b17d20fcdb3e4b"}, "originalPosition": 30}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "80d52bdf96de321e16f0da155962af0ded53fd2f", "author": {"user": {"login": "minwoox", "name": "minux"}}, "url": "https://github.com/line/armeria/commit/80d52bdf96de321e16f0da155962af0ded53fd2f", "committedDate": "2020-11-19T06:25:11Z", "message": "Address comment by @trustin"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "99ed0c1c2edf6e30d905e6c9a9c504f5293f0945", "author": {"user": {"login": "minwoox", "name": "minux"}}, "url": "https://github.com/line/armeria/commit/99ed0c1c2edf6e30d905e6c9a9c504f5293f0945", "committedDate": "2020-11-19T06:29:59Z", "message": "cleanup"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM0MTk3OTMw", "url": "https://github.com/line/armeria/pull/3181#pullrequestreview-534197930", "createdAt": "2020-11-19T08:52:51Z", "commit": {"oid": "99ed0c1c2edf6e30d905e6c9a9c504f5293f0945"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "023d6d7ed2c7cf518e63141698559e5584201c13", "author": {"user": {"login": "trustin", "name": "Trustin Lee"}}, "url": "https://github.com/line/armeria/commit/023d6d7ed2c7cf518e63141698559e5584201c13", "committedDate": "2020-11-19T08:53:42Z", "message": "Checkstyle"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "46f8060f1464572918fe5d317d0b89b9cfe751a0", "author": {"user": {"login": "minwoox", "name": "minux"}}, "url": "https://github.com/line/armeria/commit/46f8060f1464572918fe5d317d0b89b9cfe751a0", "committedDate": "2020-11-19T09:47:19Z", "message": "Fix check style"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4837, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}