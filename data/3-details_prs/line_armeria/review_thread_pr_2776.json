{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI4MjA4ODM3", "number": 2776, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQwNDozMTowOVrOEC0GNw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQwNDozMjo1MlrOEC0HFQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxMzg2MTY3OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/com/linecorp/armeria/client/Client.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQwNDozMTowOVrOGfgDOA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQwNjoxODozMVrOGfhtLg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTY4NDE1Mg==", "bodyText": "@Nullable is an inherited annotation, which means you do not have to specify it when the method you are overriding already has it, i.e. this is false positive.", "url": "https://github.com/line/armeria/pull/2776#discussion_r435684152", "createdAt": "2020-06-05T04:31:09Z", "author": {"login": "trustin"}, "path": "core/src/main/java/com/linecorp/armeria/client/Client.java", "diffHunk": "@@ -71,6 +73,7 @@\n      * @see ClientFactory#unwrap(Object, Class)\n      * @see Unwrappable\n      */\n+    @Nullable", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e02980007790f7ce2223ee349adb2a58790ab78b"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTcxMTI3OA==", "bodyText": "Agreed. I reverted all @Nullable in override methods.", "url": "https://github.com/line/armeria/pull/2776#discussion_r435711278", "createdAt": "2020-06-05T06:18:31Z", "author": {"login": "ikhoon"}, "path": "core/src/main/java/com/linecorp/armeria/client/Client.java", "diffHunk": "@@ -71,6 +73,7 @@\n      * @see ClientFactory#unwrap(Object, Class)\n      * @see Unwrappable\n      */\n+    @Nullable", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTY4NDE1Mg=="}, "originalCommit": {"oid": "e02980007790f7ce2223ee349adb2a58790ab78b"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxMzg2MjcyOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/com/linecorp/armeria/client/DefaultClientRequestContext.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQwNDozMjowMVrOGfgD3g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQwNDozMjowMVrOGfgD3g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTY4NDMxOA==", "bodyText": "How about using assert? It's perhaps a bug if this method is exposed to a user before init() is invoked.", "url": "https://github.com/line/armeria/pull/2776#discussion_r435684318", "createdAt": "2020-06-05T04:32:01Z", "author": {"login": "trustin"}, "path": "core/src/main/java/com/linecorp/armeria/client/DefaultClientRequestContext.java", "diffHunk": "@@ -393,11 +393,13 @@ public ClientOptions options() {\n \n     @Override\n     public EndpointGroup endpointGroup() {\n+        checkState(endpointGroup != null, \"Should call init(endpoint) before invoking this method.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e02980007790f7ce2223ee349adb2a58790ab78b"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxMzg2Mzg5OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/com/linecorp/armeria/internal/server/annotation/AnnotationUtil.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQwNDozMjo1M1rOGfgEkQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQwNDozMjo1M1rOGfgEkQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTY4NDQ5Nw==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/line/armeria/pull/2776#discussion_r435684497", "createdAt": "2020-06-05T04:32:53Z", "author": {"login": "trustin"}, "path": "core/src/main/java/com/linecorp/armeria/internal/server/annotation/AnnotationUtil.java", "diffHunk": "@@ -220,14 +220,14 @@\n \n     private static <T extends Annotation> void findMetaAnnotations(\n             Builder<T> builder, Annotation annotation,\n-            Class<T> annotationType, Class<? extends Annotation> containerType) {\n+            Class<T> annotationType, @Nullable Class<? extends Annotation> containerType) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e02980007790f7ce2223ee349adb2a58790ab78b"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2320, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}