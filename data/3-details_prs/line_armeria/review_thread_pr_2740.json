{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIxOTAzODU5", "number": 2740, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQwNToyNzoxM1rOEBmSdA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQwMToyOTo1NlrOECX-Rw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwMTExMzQ4OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/com/linecorp/armeria/server/ServiceRequestContextBuilder.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQwNToyNzoxM1rOGdiifA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQwNToyNzoxM1rOGdiifA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzYyNzc3Mg==", "bodyText": "Can we use ImmediateEventExecutor, so that we do not instantiate event loop threads in CommonPools unnecessarily during the class initialization?", "url": "https://github.com/line/armeria/pull/2740#discussion_r433627772", "createdAt": "2020-06-02T05:27:13Z", "author": {"login": "trustin"}, "path": "core/src/main/java/com/linecorp/armeria/server/ServiceRequestContextBuilder.java", "diffHunk": "@@ -62,6 +65,26 @@ public void serverStarting(Server server) throws Exception {\n         }\n     };\n \n+    private static final TimeoutTask noopTimeoutTask = new TimeoutTask() {\n+        @Override\n+        public boolean canSchedule() {\n+            return true;\n+        }\n+\n+        @Override\n+        public void run() { /* no-op */ }\n+    };\n+\n+    /**\n+     * A timeout controller that has been timed-out.\n+     */\n+    private static final DefaultTimeoutController noopTimedOutController =\n+            new DefaultTimeoutController(noopTimeoutTask, CommonPools.workerGroup().next());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "afa9bfa4c98f5fe1a669979eb437fc8ef10e8149"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwMTExNzg2OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/com/linecorp/armeria/client/ClientRequestContextBuilder.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQwNToyOTowOVrOGdik7g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQwNToyOTowOVrOGdik7g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzYyODM5OA==", "bodyText": "Should we rename this to timedOut(boolean)?", "url": "https://github.com/line/armeria/pull/2740#discussion_r433628398", "createdAt": "2020-06-02T05:29:09Z", "author": {"login": "trustin"}, "path": "core/src/main/java/com/linecorp/armeria/client/ClientRequestContextBuilder.java", "diffHunk": "@@ -170,4 +213,9 @@ public ClientRequestContextBuilder requestStartTime(long requestStartTimeNanos,\n         return (ClientRequestContextBuilder) super.requestStartTime(requestStartTimeNanos,\n                                                                     requestStartTimeMicros);\n     }\n+\n+    @Override\n+    public ClientRequestContextBuilder isTimedOut(boolean timeout) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "afa9bfa4c98f5fe1a669979eb437fc8ef10e8149"}, "originalPosition": 92}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwNTU0MTc5OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/com/linecorp/armeria/client/ClientRequestContextBuilder.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QwNjo0MzoxMVrOGeOFIw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQwMToyNToyNVrOGeysfA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDM0MTE1NQ==", "bodyText": "What's the difference between enableTimeout and timedOut?\nCan't we combine them?", "url": "https://github.com/line/armeria/pull/2740#discussion_r434341155", "createdAt": "2020-06-03T06:43:11Z", "author": {"login": "minwoox"}, "path": "core/src/main/java/com/linecorp/armeria/client/ClientRequestContextBuilder.java", "diffHunk": "@@ -91,6 +118,12 @@ public ClientRequestContextBuilder connectionTimings(ClientConnectionTimings con\n         return this;\n     }\n \n+    @VisibleForTesting\n+    ClientRequestContextBuilder enableTimeout(boolean enableTimeout) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2679490b4bee9231c51231a42f2488385812b286"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDM5NDQwNA==", "bodyText": "The difference between them is:\n\nenableTimeout(false) does not set DefaultTimeoutController when building ClientRequestContext. This is useful when testing a pending timeout task because we can set it later via DefaultClientRequestContext.setResponseTimeoutController(). TimeoutController can be set only once.\n\n  \n    \n      armeria/core/src/main/java/com/linecorp/armeria/internal/common/TimeoutScheduler.java\n    \n    \n        Lines 184 to 187\n      in\n      a7318e4\n    \n    \n    \n    \n\n        \n          \n           public void setTimeoutController(TimeoutController timeoutController, EventLoop eventLoop) { \n        \n\n        \n          \n               requireNonNull(timeoutController, \"timeoutController\"); \n        \n\n        \n          \n               requireNonNull(eventLoop, \"eventLoop\"); \n        \n\n        \n          \n               checkState(this.timeoutController == null, \"timeoutController is set already.\"); \n        \n    \n  \n\n\nAs you know, just inject a TimeoutController that has been timed-out.", "url": "https://github.com/line/armeria/pull/2740#discussion_r434394404", "createdAt": "2020-06-03T08:24:34Z", "author": {"login": "ikhoon"}, "path": "core/src/main/java/com/linecorp/armeria/client/ClientRequestContextBuilder.java", "diffHunk": "@@ -91,6 +118,12 @@ public ClientRequestContextBuilder connectionTimings(ClientConnectionTimings con\n         return this;\n     }\n \n+    @VisibleForTesting\n+    ClientRequestContextBuilder enableTimeout(boolean enableTimeout) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDM0MTE1NQ=="}, "originalCommit": {"oid": "2679490b4bee9231c51231a42f2488385812b286"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDQxMDIwNg==", "bodyText": "Thanks for the explanation. I felt that enableTimeout(false) meant that the timeout is disabled for this context so we cannot schedule it.\nHow about renaming something like configureDefaultTimeoutController?", "url": "https://github.com/line/armeria/pull/2740#discussion_r434410206", "createdAt": "2020-06-03T08:50:53Z", "author": {"login": "minwoox"}, "path": "core/src/main/java/com/linecorp/armeria/client/ClientRequestContextBuilder.java", "diffHunk": "@@ -91,6 +118,12 @@ public ClientRequestContextBuilder connectionTimings(ClientConnectionTimings con\n         return this;\n     }\n \n+    @VisibleForTesting\n+    ClientRequestContextBuilder enableTimeout(boolean enableTimeout) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDM0MTE1NQ=="}, "originalCommit": {"oid": "2679490b4bee9231c51231a42f2488385812b286"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDU0NTI0OA==", "bodyText": "I felt that enableTimeout(false) meant that the timeout is disabled for this context so we cannot schedule it.\n\nIt seems better to remove the boolean argument. How about renaming to noTimeoutController()?", "url": "https://github.com/line/armeria/pull/2740#discussion_r434545248", "createdAt": "2020-06-03T12:56:24Z", "author": {"login": "ikhoon"}, "path": "core/src/main/java/com/linecorp/armeria/client/ClientRequestContextBuilder.java", "diffHunk": "@@ -91,6 +118,12 @@ public ClientRequestContextBuilder connectionTimings(ClientConnectionTimings con\n         return this;\n     }\n \n+    @VisibleForTesting\n+    ClientRequestContextBuilder enableTimeout(boolean enableTimeout) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDM0MTE1NQ=="}, "originalCommit": {"oid": "2679490b4bee9231c51231a42f2488385812b286"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDk0MTA1Mg==", "bodyText": "Sounds good to me. \ud83d\udc4d", "url": "https://github.com/line/armeria/pull/2740#discussion_r434941052", "createdAt": "2020-06-04T01:25:25Z", "author": {"login": "minwoox"}, "path": "core/src/main/java/com/linecorp/armeria/client/ClientRequestContextBuilder.java", "diffHunk": "@@ -91,6 +118,12 @@ public ClientRequestContextBuilder connectionTimings(ClientConnectionTimings con\n         return this;\n     }\n \n+    @VisibleForTesting\n+    ClientRequestContextBuilder enableTimeout(boolean enableTimeout) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDM0MTE1NQ=="}, "originalCommit": {"oid": "2679490b4bee9231c51231a42f2488385812b286"}, "originalPosition": 61}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwNTk0ODM4OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/com/linecorp/armeria/server/ServiceRequestContextBuilder.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QwODo0NTowNFrOGeSFcA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQwMToyNzo0MFrOGeyu6g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDQwNjc2OA==", "bodyText": "Is there any reason that uses ImmediateEventExecutor.INSTANCE unlike ClientRequestContextBuilder uses?\nAlso, can we put this into the superclass to share?", "url": "https://github.com/line/armeria/pull/2740#discussion_r434406768", "createdAt": "2020-06-03T08:45:04Z", "author": {"login": "minwoox"}, "path": "core/src/main/java/com/linecorp/armeria/server/ServiceRequestContextBuilder.java", "diffHunk": "@@ -62,6 +65,26 @@ public void serverStarting(Server server) throws Exception {\n         }\n     };\n \n+    private static final TimeoutTask noopTimeoutTask = new TimeoutTask() {\n+        @Override\n+        public boolean canSchedule() {\n+            return true;\n+        }\n+\n+        @Override\n+        public void run() { /* no-op */ }\n+    };\n+\n+    /**\n+     * A timeout controller that has been timed-out.\n+     */\n+    private static final DefaultTimeoutController noopTimedOutController =\n+            new DefaultTimeoutController(noopTimeoutTask, ImmediateEventExecutor.INSTANCE);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2679490b4bee9231c51231a42f2488385812b286"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDUyOTg0Mg==", "bodyText": "Is there any reason that uses ImmediateEventExecutor.INSTANCE unlike ClientRequestContextBuilder uses?\n\nOops, I missed it. I changed this based on #2740 (comment)\n\nAlso, can we put this into the superclass to share?\n\nThis is duplicate code, but I intentionally added these to the subclasses. DefaultTimeoutController is an internal class. We can't expose it to public or protected.", "url": "https://github.com/line/armeria/pull/2740#discussion_r434529842", "createdAt": "2020-06-03T12:30:22Z", "author": {"login": "ikhoon"}, "path": "core/src/main/java/com/linecorp/armeria/server/ServiceRequestContextBuilder.java", "diffHunk": "@@ -62,6 +65,26 @@ public void serverStarting(Server server) throws Exception {\n         }\n     };\n \n+    private static final TimeoutTask noopTimeoutTask = new TimeoutTask() {\n+        @Override\n+        public boolean canSchedule() {\n+            return true;\n+        }\n+\n+        @Override\n+        public void run() { /* no-op */ }\n+    };\n+\n+    /**\n+     * A timeout controller that has been timed-out.\n+     */\n+    private static final DefaultTimeoutController noopTimedOutController =\n+            new DefaultTimeoutController(noopTimeoutTask, ImmediateEventExecutor.INSTANCE);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDQwNjc2OA=="}, "originalCommit": {"oid": "2679490b4bee9231c51231a42f2488385812b286"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDk0MTY3NA==", "bodyText": "Yeah, it's fine as it is.", "url": "https://github.com/line/armeria/pull/2740#discussion_r434941674", "createdAt": "2020-06-04T01:27:40Z", "author": {"login": "minwoox"}, "path": "core/src/main/java/com/linecorp/armeria/server/ServiceRequestContextBuilder.java", "diffHunk": "@@ -62,6 +65,26 @@ public void serverStarting(Server server) throws Exception {\n         }\n     };\n \n+    private static final TimeoutTask noopTimeoutTask = new TimeoutTask() {\n+        @Override\n+        public boolean canSchedule() {\n+            return true;\n+        }\n+\n+        @Override\n+        public void run() { /* no-op */ }\n+    };\n+\n+    /**\n+     * A timeout controller that has been timed-out.\n+     */\n+    private static final DefaultTimeoutController noopTimedOutController =\n+            new DefaultTimeoutController(noopTimeoutTask, ImmediateEventExecutor.INSTANCE);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDQwNjc2OA=="}, "originalCommit": {"oid": "2679490b4bee9231c51231a42f2488385812b286"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwNTk3NjQzOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/com/linecorp/armeria/common/AbstractRequestContextBuilder.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QwODo1Mjo0NFrOGeSXUw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QwODo1Mjo0NFrOGeSXUw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDQxMTM0Nw==", "bodyText": "probably better to use timedOut as well?", "url": "https://github.com/line/armeria/pull/2740#discussion_r434411347", "createdAt": "2020-06-03T08:52:44Z", "author": {"login": "minwoox"}, "path": "core/src/main/java/com/linecorp/armeria/common/AbstractRequestContextBuilder.java", "diffHunk": "@@ -485,6 +488,24 @@ protected final Channel fakeChannel() {\n         return channel;\n     }\n \n+    /**\n+     * Returns whether a timeout is set.\n+     */\n+    protected final boolean timedOut() {\n+        return timeout;\n+    }\n+\n+    /**\n+     * Sets the specified {@code timeout}. If the specified {@code timeout} is {@code true},", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5d96e99b28eeea721a680b0bcad05af0c853e78c"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwOTI1MzgzOnYy", "diffSide": "RIGHT", "path": "core/src/test/java/com/linecorp/armeria/server/HttpServerRequestTimeoutTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQwMToyOTo1NlrOGeyxMQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQwMjowMjo1OVrOGezSJA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDk0MjI1Nw==", "bodyText": "We need to change this. \ud83d\ude09", "url": "https://github.com/line/armeria/pull/2740#discussion_r434942257", "createdAt": "2020-06-04T01:29:56Z", "author": {"login": "minwoox"}, "path": "core/src/test/java/com/linecorp/armeria/server/HttpServerRequestTimeoutTest.java", "diffHunk": "@@ -187,4 +191,11 @@ void limitRequestTimeoutByDecorator(String path) {\n                 clientWithoutTimeout.get(serverWithoutTimeout.httpUri() + path).aggregate().join();\n         assertThat(response.status().code()).isEqualTo(503);\n     }\n+\n+    @Test\n+    void timeoutNow() {\n+        final AggregatedHttpResponse response =\n+                clientWithoutTimeout.get(serverWithoutTimeout.httpUri() + \"/timeout-now\").aggregate().join();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "367d5e97957bdfdd0d4e39609050e89bf26f27c4"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDk1MDY5Mg==", "bodyText": "Ahh.... Oops \ud83d\ude4a\ud83d\ude31", "url": "https://github.com/line/armeria/pull/2740#discussion_r434950692", "createdAt": "2020-06-04T02:02:59Z", "author": {"login": "ikhoon"}, "path": "core/src/test/java/com/linecorp/armeria/server/HttpServerRequestTimeoutTest.java", "diffHunk": "@@ -187,4 +191,11 @@ void limitRequestTimeoutByDecorator(String path) {\n                 clientWithoutTimeout.get(serverWithoutTimeout.httpUri() + path).aggregate().join();\n         assertThat(response.status().code()).isEqualTo(503);\n     }\n+\n+    @Test\n+    void timeoutNow() {\n+        final AggregatedHttpResponse response =\n+                clientWithoutTimeout.get(serverWithoutTimeout.httpUri() + \"/timeout-now\").aggregate().join();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDk0MjI1Nw=="}, "originalCommit": {"oid": "367d5e97957bdfdd0d4e39609050e89bf26f27c4"}, "originalPosition": 19}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2655, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}