{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg2NTYzNTk2", "number": 2570, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQwOToxOTo1OVrODm_lCA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQwOTo0Njo1N1rODnAMNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyMjE0MTUyOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/com/linecorp/armeria/server/DefaultRoute.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQwOToxOTo1OVrOF0uunA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQwOTozNDowM1rOF0vNlg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDgzNTg2OA==", "bodyText": "(Maybe) don't we need to update methods.isEmpty() condition in apply(RoutingContext routingCtx)?\n\n  \n    \n      armeria/core/src/main/java/com/linecorp/armeria/server/DefaultRoute.java\n    \n    \n         Line 99\n      in\n      3bc7bbd\n    \n    \n    \n    \n\n        \n          \n           if (!methods.isEmpty() && !methods.contains(routingCtx.method())) {", "url": "https://github.com/line/armeria/pull/2570#discussion_r390835868", "createdAt": "2020-03-11T09:19:59Z", "author": {"login": "ikhoon"}, "path": "core/src/main/java/com/linecorp/armeria/server/DefaultRoute.java", "diffHunk": "@@ -244,7 +244,9 @@ private static String generateLoggerName(String prefix, Set<HttpMethod> methods,\n                                              List<RoutingPredicate<HttpHeaders>> headerPredicates) {\n         final StringJoiner name = new StringJoiner(\".\");\n         name.add(prefix);\n-        if (!methods.isEmpty()) {\n+\n+        // Skip if the methods is empty or it's knownMethods because it's verbose.\n+        if (!methods.isEmpty() && methods != HttpMethod.knownMethods()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "18da010f4a7dae8204c5632a2817bbc19790dc4a"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDg0Mzc5OA==", "bodyText": "Indeed! Thanks.", "url": "https://github.com/line/armeria/pull/2570#discussion_r390843798", "createdAt": "2020-03-11T09:34:03Z", "author": {"login": "minwoox"}, "path": "core/src/main/java/com/linecorp/armeria/server/DefaultRoute.java", "diffHunk": "@@ -244,7 +244,9 @@ private static String generateLoggerName(String prefix, Set<HttpMethod> methods,\n                                              List<RoutingPredicate<HttpHeaders>> headerPredicates) {\n         final StringJoiner name = new StringJoiner(\".\");\n         name.add(prefix);\n-        if (!methods.isEmpty()) {\n+\n+        // Skip if the methods is empty or it's knownMethods because it's verbose.\n+        if (!methods.isEmpty() && methods != HttpMethod.knownMethods()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDgzNTg2OA=="}, "originalCommit": {"oid": "18da010f4a7dae8204c5632a2817bbc19790dc4a"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyMjI0MTgwOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/com/linecorp/armeria/server/DefaultRoute.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQwOTo0Njo1N1rOF0vq2g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxMDowMzo1MVrOF0wRhA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDg1MTI5MA==", "bodyText": "You have to check null first.", "url": "https://github.com/line/armeria/pull/2570#discussion_r390851290", "createdAt": "2020-03-11T09:46:57Z", "author": {"login": "trustin"}, "path": "core/src/main/java/com/linecorp/armeria/server/DefaultRoute.java", "diffHunk": "@@ -58,6 +59,7 @@\n                  List<RoutingPredicate<QueryParams>> paramPredicates,\n                  List<RoutingPredicate<HttpHeaders>> headerPredicates) {\n         this.pathMapping = requireNonNull(pathMapping, \"pathMapping\");\n+        checkArgument(!methods.isEmpty(), \"methods is empty.\");\n         this.methods = Sets.immutableEnumSet(requireNonNull(methods, \"methods\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "35385c1e9484e6b4df1b1683e1708da988ce6a3e"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDg2MTE4OA==", "bodyText": "Oops \ud83d\ude05", "url": "https://github.com/line/armeria/pull/2570#discussion_r390861188", "createdAt": "2020-03-11T10:03:51Z", "author": {"login": "minwoox"}, "path": "core/src/main/java/com/linecorp/armeria/server/DefaultRoute.java", "diffHunk": "@@ -58,6 +59,7 @@\n                  List<RoutingPredicate<QueryParams>> paramPredicates,\n                  List<RoutingPredicate<HttpHeaders>> headerPredicates) {\n         this.pathMapping = requireNonNull(pathMapping, \"pathMapping\");\n+        checkArgument(!methods.isEmpty(), \"methods is empty.\");\n         this.methods = Sets.immutableEnumSet(requireNonNull(methods, \"methods\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDg1MTI5MA=="}, "originalCommit": {"oid": "35385c1e9484e6b4df1b1683e1708da988ce6a3e"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2762, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}