{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI4MDM4Mzc2", "number": 3197, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yN1QwODoyNTozM1rOE95niw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQwNzo1NjowOFrOE-iEbw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMzMzQyNjAzOnYy", "diffSide": "RIGHT", "path": "grpc/src/main/java/com/linecorp/armeria/internal/common/grpc/GrpcStatusUtil.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yN1QwODoyNTozM1rOH608MQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yN1QxNTowNzozNVrOH7BeCA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTQ0NjgzMw==", "bodyText": "Should we iterate and use isAssignableFrom() instead?", "url": "https://github.com/line/armeria/pull/3197#discussion_r531446833", "createdAt": "2020-11-27T08:25:33Z", "author": {"login": "trustin"}, "path": "grpc/src/main/java/com/linecorp/armeria/internal/common/grpc/GrpcStatusUtil.java", "diffHunk": "@@ -80,6 +85,13 @@\n     public static Status fromThrowable(Throwable t) {\n         t = unwrap(requireNonNull(t, \"t\"));\n \n+        if (!exceptionMappings.isEmpty()) {\n+            final Status status = exceptionMappings.get(t.getClass());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9ae6d1d81fe734b0a52445e5a67d685f4893a721"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTY1MjEwNA==", "bodyText": "\ud83d\udc4d We need it to find the nearest exception type from the exception hierarchy.", "url": "https://github.com/line/armeria/pull/3197#discussion_r531652104", "createdAt": "2020-11-27T15:07:35Z", "author": {"login": "ikhoon"}, "path": "grpc/src/main/java/com/linecorp/armeria/internal/common/grpc/GrpcStatusUtil.java", "diffHunk": "@@ -80,6 +85,13 @@\n     public static Status fromThrowable(Throwable t) {\n         t = unwrap(requireNonNull(t, \"t\"));\n \n+        if (!exceptionMappings.isEmpty()) {\n+            final Status status = exceptionMappings.get(t.getClass());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTQ0NjgzMw=="}, "originalCommit": {"oid": "9ae6d1d81fe734b0a52445e5a67d685f4893a721"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMzNzQ0MDIyOnYy", "diffSide": "RIGHT", "path": "grpc/src/main/java/com/linecorp/armeria/internal/client/grpc/ArmeriaClientCall.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yOFQxNjo1NDozM1rOH7aaAA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yOFQxNjo1NDozM1rOH7aaAA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjA2MDY3Mg==", "bodyText": "This is a bug fix. onNext() of Subscriber should return normally.\nhttps://github.com/reactive-streams/reactive-streams-jvm#2.13", "url": "https://github.com/line/armeria/pull/3197#discussion_r532060672", "createdAt": "2020-11-28T16:54:33Z", "author": {"login": "ikhoon"}, "path": "grpc/src/main/java/com/linecorp/armeria/internal/client/grpc/ArmeriaClientCall.java", "diffHunk": "@@ -390,8 +397,9 @@ public void onNext(DeframedMessage message) {\n                 listener.onMessage(msg);\n             }\n         } catch (Throwable t) {\n-            req.close(GrpcStatus.fromThrowable(t).asException());\n-            throw t instanceof RuntimeException ? (RuntimeException) t : new RuntimeException(t);\n+            final Status status = GrpcStatus.fromThrowable(exceptionMappings, t);\n+            req.close(status.asException());\n+            close(status, new Metadata());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6bab87d0b2549fe9f779d8b60e11e6665cab1e43"}, "originalPosition": 69}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMzOTc0MzIyOnYy", "diffSide": "RIGHT", "path": "grpc/src/main/java/com/linecorp/armeria/internal/common/grpc/HttpStreamDeframerHandler.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQwNTozOTozM1rOH7siyA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQwNTozOTozM1rOH7siyA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjM1NzgzMg==", "bodyText": "statusFunction?", "url": "https://github.com/line/armeria/pull/3197#discussion_r532357832", "createdAt": "2020-11-30T05:39:33Z", "author": {"login": "trustin"}, "path": "grpc/src/main/java/com/linecorp/armeria/internal/common/grpc/HttpStreamDeframerHandler.java", "diffHunk": "@@ -39,16 +40,21 @@\n \n     private final DecompressorRegistry decompressorRegistry;\n     private final TransportStatusListener transportStatusListener;\n+    @Nullable\n+    private final GrpcStatusFunction exceptionHandler;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8fb939219c57f0f22003afa217bcc844a866fb57"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMzOTc0NTUyOnYy", "diffSide": "RIGHT", "path": "grpc/src/main/java/com/linecorp/armeria/server/grpc/ArmeriaServerCall.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQwNTo0MDo0MlrOH7skFQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQwNTo0MDo0MlrOH7skFQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjM1ODE2NQ==", "bodyText": "How about adding close(Throwable, Metadata) to deduplicate the convertThrowableToStatus() calls?", "url": "https://github.com/line/armeria/pull/3197#discussion_r532358165", "createdAt": "2020-11-30T05:40:42Z", "author": {"login": "trustin"}, "path": "grpc/src/main/java/com/linecorp/armeria/server/grpc/ArmeriaServerCall.java", "diffHunk": "@@ -441,7 +449,7 @@ private void invokeOnMessage(I request) {\n             listener.onMessage(request);\n         } catch (Throwable t) {\n             upstream.cancel();\n-            close(GrpcStatus.fromThrowable(t), new Metadata());\n+            close(convertThrowableToStatus(t), new Metadata());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8fb939219c57f0f22003afa217bcc844a866fb57"}, "originalPosition": 116}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMzOTk3NDExOnYy", "diffSide": "RIGHT", "path": "grpc/src/main/java/com/linecorp/armeria/server/grpc/GrpcServiceBuilder.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQwNzoyNzo0OFrOH7uj4w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQwNzo0NDowOFrOH7u9CA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjM5MDg4Mw==", "bodyText": "Could we introduce a local variable? Otherwise a user cannot do this:\nbuilder.addExceptionMapping(...);\nGrpcService a = builder.build();\nbuilder.addExceptionMapping(...);\nGrpcService b = builder.build();", "url": "https://github.com/line/armeria/pull/3197#discussion_r532390883", "createdAt": "2020-11-30T07:27:48Z", "author": {"login": "trustin"}, "path": "grpc/src/main/java/com/linecorp/armeria/server/grpc/GrpcServiceBuilder.java", "diffHunk": "@@ -467,6 +566,10 @@ public GrpcService build() {\n             handlerRegistry = registryBuilder.build();\n         }\n \n+        if (exceptionMappings != null) {\n+            statusFunction = toGrpcStatusFunction(exceptionMappings);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "722118d8270bcf744b674f1ad48963201a6d6405"}, "originalPosition": 146}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjM5NzMyMA==", "bodyText": "Oops... Thanks for pointing out. Fixed", "url": "https://github.com/line/armeria/pull/3197#discussion_r532397320", "createdAt": "2020-11-30T07:44:08Z", "author": {"login": "ikhoon"}, "path": "grpc/src/main/java/com/linecorp/armeria/server/grpc/GrpcServiceBuilder.java", "diffHunk": "@@ -467,6 +566,10 @@ public GrpcService build() {\n             handlerRegistry = registryBuilder.build();\n         }\n \n+        if (exceptionMappings != null) {\n+            statusFunction = toGrpcStatusFunction(exceptionMappings);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjM5MDg4Mw=="}, "originalCommit": {"oid": "722118d8270bcf744b674f1ad48963201a6d6405"}, "originalPosition": 146}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0MDA1MzU5OnYy", "diffSide": "RIGHT", "path": "grpc/src/main/java/com/linecorp/armeria/server/grpc/GrpcServiceBuilder.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQwNzo1NjowOFrOH7vRZg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQwODoyMTo0MVrOH7wBnA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjQwMjUzNA==", "bodyText": "nit: is used?\nOr, I think we can just remove this line. \ud83e\udd14", "url": "https://github.com/line/armeria/pull/3197#discussion_r532402534", "createdAt": "2020-11-30T07:56:08Z", "author": {"login": "minwoox"}, "path": "grpc/src/main/java/com/linecorp/armeria/server/grpc/GrpcServiceBuilder.java", "diffHunk": "@@ -442,6 +456,91 @@ public GrpcServiceBuilder useClientTimeoutHeader(boolean useClientTimeoutHeader)\n         return this;\n     }\n \n+    /**\n+     * Sets the specified {@link GrpcStatusFunction} that maps a {@link Throwable} to a gRPC {@link Status}.\n+     * The mapping function are used to handle a {@link Throwable} when it is raised.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8630c3ecc744a614eb3d4ac88dc572836a7e72c7"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjQxNDg3Ng==", "bodyText": "Removed", "url": "https://github.com/line/armeria/pull/3197#discussion_r532414876", "createdAt": "2020-11-30T08:21:41Z", "author": {"login": "trustin"}, "path": "grpc/src/main/java/com/linecorp/armeria/server/grpc/GrpcServiceBuilder.java", "diffHunk": "@@ -442,6 +456,91 @@ public GrpcServiceBuilder useClientTimeoutHeader(boolean useClientTimeoutHeader)\n         return this;\n     }\n \n+    /**\n+     * Sets the specified {@link GrpcStatusFunction} that maps a {@link Throwable} to a gRPC {@link Status}.\n+     * The mapping function are used to handle a {@link Throwable} when it is raised.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjQwMjUzNA=="}, "originalCommit": {"oid": "8630c3ecc744a614eb3d4ac88dc572836a7e72c7"}, "originalPosition": 55}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2064, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}