{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk0MDUxODUw", "number": 2631, "title": "Do not encode response when the status indicates empty content", "bodyText": "\u2026mpty\nMotivation:\nEncodingService should not try to encode the body when the status indicates that the content it empty.\nModifications:\n\nCheck the status if it indicates the content is empty in EncodingService.\nDowngrade Micrometer to 1.3.6 becuase 1.4.0 is Non-LTS.\n\nResult:\n\nEncodingService does not encode the content when the status is 204, 205 and 304", "createdAt": "2020-03-26T09:28:49Z", "url": "https://github.com/line/armeria/pull/2631", "merged": true, "mergeCommit": {"oid": "890631e15dff9b7030f20b18649d461e3efb5b34"}, "closed": true, "closedAt": "2020-03-26T13:26:56Z", "author": {"login": "minwoox"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcRYjFJAH2gAyMzk0MDUxODUwOjU5OTU3NTI2OTFlZWUwMWFlMzJmNTgyMjI1YjM2YTI5MzFlODdkMzA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcRbXIlAFqTM4MTk2NDE5NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "5995752691eee01ae32f582225b36a2931e87d30", "author": {"user": {"login": "minwoox", "name": "minux"}}, "url": "https://github.com/line/armeria/commit/5995752691eee01ae32f582225b36a2931e87d30", "committedDate": "2020-03-26T09:18:50Z", "message": "Fix not to encode response when the status indicates the content is empty\nMotivation:\n`EncodingService` should not try to encode the body when the status indicates that the content it empty.\n\nModifications:\n- Check the status if it indicates the content is empty in `EncodingService`.\n- Downgrade Micrometer to 1.3.6 becuase 1.4.0 is Non-LTS.\n\nResult:\n- `EncodingService` does not encode the content when the status is 204, 205 and 304"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgxODQxNDkx", "url": "https://github.com/line/armeria/pull/2631#pullrequestreview-381841491", "createdAt": "2020-03-26T09:42:55Z", "commit": {"oid": "5995752691eee01ae32f582225b36a2931e87d30"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgxODQyMjI4", "url": "https://github.com/line/armeria/pull/2631#pullrequestreview-381842228", "createdAt": "2020-03-26T09:43:51Z", "commit": {"oid": "5995752691eee01ae32f582225b36a2931e87d30"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgxODY0MTgy", "url": "https://github.com/line/armeria/pull/2631#pullrequestreview-381864182", "createdAt": "2020-03-26T10:12:10Z", "commit": {"oid": "5995752691eee01ae32f582225b36a2931e87d30"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxMDoxMjoxMFrOF7_xcQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxMDoxNDowMlrOF7_10Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODQ1NTE1Mw==", "bodyText": "Just wondering is this change enough to fix the issue?", "url": "https://github.com/line/armeria/pull/2631#discussion_r398455153", "createdAt": "2020-03-26T10:12:10Z", "author": {"login": "anuraaga"}, "path": "core/src/main/java/com/linecorp/armeria/server/HttpResponseSubscriber.java", "diffHunk": "@@ -180,12 +182,19 @@ public void onNext(HttpObject o) {\n                 break;\n             }\n             case NEEDS_TRAILERS: {\n-                if (o instanceof HttpData || o instanceof ResponseHeaders) {\n+                if (o instanceof ResponseHeaders) {\n                     failAndRespond(new IllegalStateException(\n-                            \"published an HttpData or a ResponseHeaders: \" + o +\n+                            \"published a ResponseHeaders: \" + o +\n                             \" (expected: an HTTP trailers). service: \" + service()));\n                     return;\n                 }\n+                if (o instanceof HttpData) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5995752691eee01ae32f582225b36a2931e87d30"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODQ1NTQ2Mw==", "bodyText": "Can we move this check to shouldEncodeResponse?", "url": "https://github.com/line/armeria/pull/2631#discussion_r398455463", "createdAt": "2020-03-26T10:12:41Z", "author": {"login": "anuraaga"}, "path": "core/src/main/java/com/linecorp/armeria/server/encoding/HttpEncodedResponse.java", "diffHunk": "@@ -76,8 +76,8 @@ protected HttpObject filter(HttpObject obj) {\n             final ResponseHeaders headers = (ResponseHeaders) obj;\n \n             // Skip informational headers.\n-            final String status = headers.get(HttpHeaderNames.STATUS);\n-            if (ArmeriaHttpUtil.isInformational(status)) {\n+            final HttpStatus status = headers.status();\n+            if (status.isInformational() || status.isContentAlwaysEmpty()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5995752691eee01ae32f582225b36a2931e87d30"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODQ1NjExOA==", "bodyText": "// HTTP does not allow a payload with a CONTINUE status, make sure we ignore it.", "url": "https://github.com/line/armeria/pull/2631#discussion_r398456118", "createdAt": "2020-03-26T10:13:47Z", "author": {"login": "anuraaga"}, "path": "core/src/test/java/com/linecorp/armeria/server/HttpResponseSubscriberTest.java", "diffHunk": "@@ -0,0 +1,55 @@\n+/*\n+ * Copyright 2020 LINE Corporation\n+ *\n+ * LINE Corporation licenses this file to you under the Apache License,\n+ * version 2.0 (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *   https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package com.linecorp.armeria.server;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.extension.RegisterExtension;\n+\n+import com.linecorp.armeria.client.WebClient;\n+import com.linecorp.armeria.common.AggregatedHttpResponse;\n+import com.linecorp.armeria.common.HttpData;\n+import com.linecorp.armeria.common.HttpResponse;\n+import com.linecorp.armeria.common.HttpStatus;\n+import com.linecorp.armeria.common.MediaType;\n+import com.linecorp.armeria.common.ResponseHeaders;\n+import com.linecorp.armeria.testing.junit.server.ServerExtension;\n+\n+public class HttpResponseSubscriberTest {\n+\n+    @RegisterExtension\n+    static final ServerExtension server = new ServerExtension() {\n+        @Override\n+        protected void configure(ServerBuilder sb) throws Exception {\n+            sb.service(\"/\", (ctx, req) -> {\n+                final ResponseHeaders headers = ResponseHeaders.builder(HttpStatus.NO_CONTENT).contentType(\n+                        MediaType.PLAIN_TEXT_UTF_8).build();\n+                // Add CONTINUE not to validate when creating HttpResponse.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5995752691eee01ae32f582225b36a2931e87d30"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODQ1NjI3Mw==", "bodyText": "DoesNot", "url": "https://github.com/line/armeria/pull/2631#discussion_r398456273", "createdAt": "2020-03-26T10:14:02Z", "author": {"login": "anuraaga"}, "path": "core/src/test/java/com/linecorp/armeria/server/HttpResponseSubscriberTest.java", "diffHunk": "@@ -0,0 +1,55 @@\n+/*\n+ * Copyright 2020 LINE Corporation\n+ *\n+ * LINE Corporation licenses this file to you under the Apache License,\n+ * version 2.0 (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *   https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package com.linecorp.armeria.server;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.extension.RegisterExtension;\n+\n+import com.linecorp.armeria.client.WebClient;\n+import com.linecorp.armeria.common.AggregatedHttpResponse;\n+import com.linecorp.armeria.common.HttpData;\n+import com.linecorp.armeria.common.HttpResponse;\n+import com.linecorp.armeria.common.HttpStatus;\n+import com.linecorp.armeria.common.MediaType;\n+import com.linecorp.armeria.common.ResponseHeaders;\n+import com.linecorp.armeria.testing.junit.server.ServerExtension;\n+\n+public class HttpResponseSubscriberTest {\n+\n+    @RegisterExtension\n+    static final ServerExtension server = new ServerExtension() {\n+        @Override\n+        protected void configure(ServerBuilder sb) throws Exception {\n+            sb.service(\"/\", (ctx, req) -> {\n+                final ResponseHeaders headers = ResponseHeaders.builder(HttpStatus.NO_CONTENT).contentType(\n+                        MediaType.PLAIN_TEXT_UTF_8).build();\n+                // Add CONTINUE not to validate when creating HttpResponse.\n+                return HttpResponse.of(ResponseHeaders.of(HttpStatus.CONTINUE), headers,\n+                                       HttpData.ofUtf8(\"foo\"));\n+            });\n+        }\n+    };\n+\n+    @Test\n+    void httpResponseSubscriberDoNotThrowExceptionWhenContentIsNotEmpty() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5995752691eee01ae32f582225b36a2931e87d30"}, "originalPosition": 50}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "432f665ffe26da4fd287289effd8e05cd6f6453f", "author": {"user": {"login": "minwoox", "name": "minux"}}, "url": "https://github.com/line/armeria/commit/432f665ffe26da4fd287289effd8e05cd6f6453f", "committedDate": "2020-03-26T10:35:36Z", "message": "Address comments by @anuraaga"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "94116dffbdd471360b2ae91691205321274478d2", "author": {"user": {"login": "minwoox", "name": "minux"}}, "url": "https://github.com/line/armeria/commit/94116dffbdd471360b2ae91691205321274478d2", "committedDate": "2020-03-26T10:46:38Z", "message": "Fix"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgxOTY0MTk0", "url": "https://github.com/line/armeria/pull/2631#pullrequestreview-381964194", "createdAt": "2020-03-26T12:35:31Z", "commit": {"oid": "94116dffbdd471360b2ae91691205321274478d2"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 748, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}