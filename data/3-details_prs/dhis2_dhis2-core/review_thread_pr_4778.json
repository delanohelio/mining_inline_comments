{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY4NTYyODcx", "number": 4778, "reviewThreads": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QwODo1MTowMFrODcjkRw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxMTo1MjozMFrODcm0XA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxMjY5NDQ3OnYy", "diffSide": "RIGHT", "path": "dhis-2/dhis-api/src/main/java/org/hisp/dhis/visualization/SimpleVisualizationView.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QwODo1MTowMFrOFkp6Xw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QwOTowNDoxMFrOFkqQ9A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzk3OTc0Mw==", "bodyText": "Codestyle, brackets on new line.", "url": "https://github.com/dhis2/dhis2-core/pull/4778#discussion_r373979743", "createdAt": "2020-02-03T08:51:00Z", "author": {"login": "larshelge"}, "path": "dhis-2/dhis-api/src/main/java/org/hisp/dhis/visualization/SimpleVisualizationView.java", "diffHunk": "@@ -0,0 +1,51 @@\n+/*\n+ * Copyright (c) 2004-2020, University of Oslo\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ * Redistributions of source code must retain the above copyright notice, this\n+ * list of conditions and the following disclaimer.\n+ *\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following disclaimer in the documentation\n+ * and/or other materials provided with the distribution.\n+ * Neither the name of the HISP project nor the names of its contributors may\n+ * be used to endorse or promote products derived from this software without\n+ * specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n+ * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+\n+package org.hisp.dhis.visualization;\n+\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlProperty;\n+import org.hisp.dhis.common.BaseIdentifiableObject;\n+import org.hisp.dhis.common.DxfNamespaces;\n+import org.hisp.dhis.common.annotation.Description;\n+\n+public class SimpleVisualizationView extends BaseIdentifiableObject {\n+\n+    private VisualizationType type;\n+\n+    @JsonProperty\n+    @JacksonXmlProperty( namespace = DxfNamespaces.DXF_2_0 )\n+    @Description( \"The type of the Visualization object. Only used for Visualization objects.\" )\n+    public VisualizationType getType() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0623c3c6c97e1e7b4ab3c05487a1cb99a50bc773"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzk4NTUyNA==", "bodyText": "Fixed", "url": "https://github.com/dhis2/dhis2-core/pull/4778#discussion_r373985524", "createdAt": "2020-02-03T09:04:10Z", "author": {"login": "maikelarabori"}, "path": "dhis-2/dhis-api/src/main/java/org/hisp/dhis/visualization/SimpleVisualizationView.java", "diffHunk": "@@ -0,0 +1,51 @@\n+/*\n+ * Copyright (c) 2004-2020, University of Oslo\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ * Redistributions of source code must retain the above copyright notice, this\n+ * list of conditions and the following disclaimer.\n+ *\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following disclaimer in the documentation\n+ * and/or other materials provided with the distribution.\n+ * Neither the name of the HISP project nor the names of its contributors may\n+ * be used to endorse or promote products derived from this software without\n+ * specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n+ * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+\n+package org.hisp.dhis.visualization;\n+\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlProperty;\n+import org.hisp.dhis.common.BaseIdentifiableObject;\n+import org.hisp.dhis.common.DxfNamespaces;\n+import org.hisp.dhis.common.annotation.Description;\n+\n+public class SimpleVisualizationView extends BaseIdentifiableObject {\n+\n+    private VisualizationType type;\n+\n+    @JsonProperty\n+    @JacksonXmlProperty( namespace = DxfNamespaces.DXF_2_0 )\n+    @Description( \"The type of the Visualization object. Only used for Visualization objects.\" )\n+    public VisualizationType getType() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzk3OTc0Mw=="}, "originalCommit": {"oid": "0623c3c6c97e1e7b4ab3c05487a1cb99a50bc773"}, "originalPosition": 44}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxMzAxNjA4OnYy", "diffSide": "RIGHT", "path": "dhis-2/dhis-api/src/main/java/org/hisp/dhis/dashboard/DashboardItem.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxMDozNDo0N1rOFks4kw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxMDozNDo0N1rOFks4kw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDAyODQzNQ==", "bodyText": "Instead of converting \"real-time\", should we instead convert dashboard items once with Flyway?", "url": "https://github.com/dhis2/dhis2-core/pull/4778#discussion_r374028435", "createdAt": "2020-02-03T10:34:47Z", "author": {"login": "larshelge"}, "path": "dhis-2/dhis-api/src/main/java/org/hisp/dhis/dashboard/DashboardItem.java", "diffHunk": "@@ -528,4 +540,96 @@ public void setWidth( Integer width )\n     {\n         this.width = width;\n     }\n+\n+    /******************************\n+     * Deprecated methods required to keep ReportTable and Chart backward compatible\n+     ******************************/\n+\n+    private Visualization convertToVisualization( final Chart chart )", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aa9f2a2b25dbb0d0983c76f33b15492c6ae344c1"}, "originalPosition": 64}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxMzAxNzc0OnYy", "diffSide": "RIGHT", "path": "dhis-2/dhis-api/src/main/java/org/hisp/dhis/visualization/SimpleVisualizationView.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxMDozNToxN1rOFks5kw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxMTo0NTo1NFrOFkuuoQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDAyODY5MQ==", "bodyText": "Could we add a description at the class level with the purpose of this class?", "url": "https://github.com/dhis2/dhis2-core/pull/4778#discussion_r374028691", "createdAt": "2020-02-03T10:35:17Z", "author": {"login": "larshelge"}, "path": "dhis-2/dhis-api/src/main/java/org/hisp/dhis/visualization/SimpleVisualizationView.java", "diffHunk": "@@ -0,0 +1,56 @@\n+/*\n+ * Copyright (c) 2004-2020, University of Oslo\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ * Redistributions of source code must retain the above copyright notice, this\n+ * list of conditions and the following disclaimer.\n+ *\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following disclaimer in the documentation\n+ * and/or other materials provided with the distribution.\n+ * Neither the name of the HISP project nor the names of its contributors may\n+ * be used to endorse or promote products derived from this software without\n+ * specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n+ * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+\n+package org.hisp.dhis.visualization;\n+\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlProperty;\n+import org.hisp.dhis.common.BaseIdentifiableObject;\n+import org.hisp.dhis.common.DxfNamespaces;\n+import org.hisp.dhis.common.annotation.Description;\n+\n+public class SimpleVisualizationView", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aa9f2a2b25dbb0d0983c76f33b15492c6ae344c1"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDA1ODY1Nw==", "bodyText": "Done", "url": "https://github.com/dhis2/dhis2-core/pull/4778#discussion_r374058657", "createdAt": "2020-02-03T11:45:54Z", "author": {"login": "maikelarabori"}, "path": "dhis-2/dhis-api/src/main/java/org/hisp/dhis/visualization/SimpleVisualizationView.java", "diffHunk": "@@ -0,0 +1,56 @@\n+/*\n+ * Copyright (c) 2004-2020, University of Oslo\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ * Redistributions of source code must retain the above copyright notice, this\n+ * list of conditions and the following disclaimer.\n+ *\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following disclaimer in the documentation\n+ * and/or other materials provided with the distribution.\n+ * Neither the name of the HISP project nor the names of its contributors may\n+ * be used to endorse or promote products derived from this software without\n+ * specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n+ * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+\n+package org.hisp.dhis.visualization;\n+\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlProperty;\n+import org.hisp.dhis.common.BaseIdentifiableObject;\n+import org.hisp.dhis.common.DxfNamespaces;\n+import org.hisp.dhis.common.annotation.Description;\n+\n+public class SimpleVisualizationView", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDAyODY5MQ=="}, "originalCommit": {"oid": "aa9f2a2b25dbb0d0983c76f33b15492c6ae344c1"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxMzIyNDUxOnYy", "diffSide": "RIGHT", "path": "dhis-2/dhis-web/dhis-web-api/src/main/java/org/hisp/dhis/webapi/controller/ReportTableFacadeController.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxMTo1MToyNVrOFku3Dg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxMTo1MToyNVrOFku3Dg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDA2MDgxNA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                if (visualization.hasReportingParams()) {\n          \n          \n            \n                                if ( visualization.hasReportingParams() ) \n          \n          \n            \n                                {", "url": "https://github.com/dhis2/dhis2-core/pull/4778#discussion_r374060814", "createdAt": "2020-02-03T11:51:25Z", "author": {"login": "stian-sandvold"}, "path": "dhis-2/dhis-web/dhis-web-api/src/main/java/org/hisp/dhis/webapi/controller/ReportTableFacadeController.java", "diffHunk": "@@ -1138,28 +1143,33 @@ private Visualization convertToVisualization( final ReportTable reportTable )\n     private List<ReportTable> convertToReportTableList( List<Visualization> entities )\n     {\n         List<ReportTable> reportTables = new ArrayList<>();\n+\n         if ( CollectionUtils.isNotEmpty( entities ) )\n         {\n             for ( final Visualization visualization : entities )\n             {\n-                final ReportTable reportTable = new ReportTable();\n-                BeanUtils.copyProperties( visualization, reportTable );\n-\n-                // Copy report params\n-                if ( visualization.hasReportingParams() )\n+                // Consider only Visualization types of Pivot Table\n+                if ( visualization.getType() != null\n+                    && \"PIVOT_TABLE\".equalsIgnoreCase( visualization.getType().name() ) )\n                 {\n-                    final ReportingParams reportingParams = visualization.getReportingParams();\n-                    final ReportParams reportParams = new ReportParams();\n+                    final ReportTable reportTable = new ReportTable();\n+                    BeanUtils.copyProperties( visualization, reportTable );\n \n-                    reportParams.setParamGrandParentOrganisationUnit( reportingParams.isGrandParentOrganisationUnit() );\n-                    reportParams.setParamOrganisationUnit( reportingParams.isOrganisationUnit() );\n-                    reportParams.setParamParentOrganisationUnit( reportingParams.isParentOrganisationUnit() );\n-                    reportParams.setParamReportingMonth( reportingParams.isReportingPeriod() );\n+                    // Copy report params\n+                    if (visualization.hasReportingParams()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6ba633dd67823231484297bae1779bf965dec902"}, "originalPosition": 154}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxMzIyNTAyOnYy", "diffSide": "RIGHT", "path": "dhis-2/dhis-web/dhis-web-api/src/main/java/org/hisp/dhis/webapi/controller/ReportTableFacadeController.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxMTo1MTozN1rOFku3Ww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxMTo1MTozN1rOFku3Ww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDA2MDg5MQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                    reportParams.setParamGrandParentOrganisationUnit(reportingParams.isGrandParentOrganisationUnit());\n          \n          \n            \n                                    reportParams.setParamGrandParentOrganisationUnit( reportingParams.isGrandParentOrganisationUnit() );", "url": "https://github.com/dhis2/dhis2-core/pull/4778#discussion_r374060891", "createdAt": "2020-02-03T11:51:37Z", "author": {"login": "stian-sandvold"}, "path": "dhis-2/dhis-web/dhis-web-api/src/main/java/org/hisp/dhis/webapi/controller/ReportTableFacadeController.java", "diffHunk": "@@ -1138,28 +1143,33 @@ private Visualization convertToVisualization( final ReportTable reportTable )\n     private List<ReportTable> convertToReportTableList( List<Visualization> entities )\n     {\n         List<ReportTable> reportTables = new ArrayList<>();\n+\n         if ( CollectionUtils.isNotEmpty( entities ) )\n         {\n             for ( final Visualization visualization : entities )\n             {\n-                final ReportTable reportTable = new ReportTable();\n-                BeanUtils.copyProperties( visualization, reportTable );\n-\n-                // Copy report params\n-                if ( visualization.hasReportingParams() )\n+                // Consider only Visualization types of Pivot Table\n+                if ( visualization.getType() != null\n+                    && \"PIVOT_TABLE\".equalsIgnoreCase( visualization.getType().name() ) )\n                 {\n-                    final ReportingParams reportingParams = visualization.getReportingParams();\n-                    final ReportParams reportParams = new ReportParams();\n+                    final ReportTable reportTable = new ReportTable();\n+                    BeanUtils.copyProperties( visualization, reportTable );\n \n-                    reportParams.setParamGrandParentOrganisationUnit( reportingParams.isGrandParentOrganisationUnit() );\n-                    reportParams.setParamOrganisationUnit( reportingParams.isOrganisationUnit() );\n-                    reportParams.setParamParentOrganisationUnit( reportingParams.isParentOrganisationUnit() );\n-                    reportParams.setParamReportingMonth( reportingParams.isReportingPeriod() );\n+                    // Copy report params\n+                    if (visualization.hasReportingParams()) {\n+                        final ReportingParams reportingParams = visualization.getReportingParams();\n+                        final ReportParams reportParams = new ReportParams();\n \n-                    reportTable.setReportParams( reportParams );\n-                }\n+                        reportParams.setParamGrandParentOrganisationUnit(reportingParams.isGrandParentOrganisationUnit());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6ba633dd67823231484297bae1779bf965dec902"}, "originalPosition": 160}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxMzIyNTQ5OnYy", "diffSide": "RIGHT", "path": "dhis-2/dhis-web/dhis-web-api/src/main/java/org/hisp/dhis/webapi/controller/ReportTableFacadeController.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxMTo1MTo0OFrOFku3qQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxMTo1MTo0OFrOFku3qQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDA2MDk2OQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                    reportParams.setParamOrganisationUnit(reportingParams.isOrganisationUnit());\n          \n          \n            \n                                    reportParams.setParamOrganisationUnit( reportingParams.isOrganisationUnit() );", "url": "https://github.com/dhis2/dhis2-core/pull/4778#discussion_r374060969", "createdAt": "2020-02-03T11:51:48Z", "author": {"login": "stian-sandvold"}, "path": "dhis-2/dhis-web/dhis-web-api/src/main/java/org/hisp/dhis/webapi/controller/ReportTableFacadeController.java", "diffHunk": "@@ -1138,28 +1143,33 @@ private Visualization convertToVisualization( final ReportTable reportTable )\n     private List<ReportTable> convertToReportTableList( List<Visualization> entities )\n     {\n         List<ReportTable> reportTables = new ArrayList<>();\n+\n         if ( CollectionUtils.isNotEmpty( entities ) )\n         {\n             for ( final Visualization visualization : entities )\n             {\n-                final ReportTable reportTable = new ReportTable();\n-                BeanUtils.copyProperties( visualization, reportTable );\n-\n-                // Copy report params\n-                if ( visualization.hasReportingParams() )\n+                // Consider only Visualization types of Pivot Table\n+                if ( visualization.getType() != null\n+                    && \"PIVOT_TABLE\".equalsIgnoreCase( visualization.getType().name() ) )\n                 {\n-                    final ReportingParams reportingParams = visualization.getReportingParams();\n-                    final ReportParams reportParams = new ReportParams();\n+                    final ReportTable reportTable = new ReportTable();\n+                    BeanUtils.copyProperties( visualization, reportTable );\n \n-                    reportParams.setParamGrandParentOrganisationUnit( reportingParams.isGrandParentOrganisationUnit() );\n-                    reportParams.setParamOrganisationUnit( reportingParams.isOrganisationUnit() );\n-                    reportParams.setParamParentOrganisationUnit( reportingParams.isParentOrganisationUnit() );\n-                    reportParams.setParamReportingMonth( reportingParams.isReportingPeriod() );\n+                    // Copy report params\n+                    if (visualization.hasReportingParams()) {\n+                        final ReportingParams reportingParams = visualization.getReportingParams();\n+                        final ReportParams reportParams = new ReportParams();\n \n-                    reportTable.setReportParams( reportParams );\n-                }\n+                        reportParams.setParamGrandParentOrganisationUnit(reportingParams.isGrandParentOrganisationUnit());\n+                        reportParams.setParamOrganisationUnit(reportingParams.isOrganisationUnit());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6ba633dd67823231484297bae1779bf965dec902"}, "originalPosition": 161}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxMzIyNTg5OnYy", "diffSide": "RIGHT", "path": "dhis-2/dhis-web/dhis-web-api/src/main/java/org/hisp/dhis/webapi/controller/ReportTableFacadeController.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxMTo1MjowMFrOFku39w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxMTo1MjowMFrOFku39w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDA2MTA0Nw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                    reportParams.setParamParentOrganisationUnit(reportingParams.isParentOrganisationUnit());\n          \n          \n            \n                                    reportParams.setParamParentOrganisationUnit( reportingParams.isParentOrganisationUnit() );", "url": "https://github.com/dhis2/dhis2-core/pull/4778#discussion_r374061047", "createdAt": "2020-02-03T11:52:00Z", "author": {"login": "stian-sandvold"}, "path": "dhis-2/dhis-web/dhis-web-api/src/main/java/org/hisp/dhis/webapi/controller/ReportTableFacadeController.java", "diffHunk": "@@ -1138,28 +1143,33 @@ private Visualization convertToVisualization( final ReportTable reportTable )\n     private List<ReportTable> convertToReportTableList( List<Visualization> entities )\n     {\n         List<ReportTable> reportTables = new ArrayList<>();\n+\n         if ( CollectionUtils.isNotEmpty( entities ) )\n         {\n             for ( final Visualization visualization : entities )\n             {\n-                final ReportTable reportTable = new ReportTable();\n-                BeanUtils.copyProperties( visualization, reportTable );\n-\n-                // Copy report params\n-                if ( visualization.hasReportingParams() )\n+                // Consider only Visualization types of Pivot Table\n+                if ( visualization.getType() != null\n+                    && \"PIVOT_TABLE\".equalsIgnoreCase( visualization.getType().name() ) )\n                 {\n-                    final ReportingParams reportingParams = visualization.getReportingParams();\n-                    final ReportParams reportParams = new ReportParams();\n+                    final ReportTable reportTable = new ReportTable();\n+                    BeanUtils.copyProperties( visualization, reportTable );\n \n-                    reportParams.setParamGrandParentOrganisationUnit( reportingParams.isGrandParentOrganisationUnit() );\n-                    reportParams.setParamOrganisationUnit( reportingParams.isOrganisationUnit() );\n-                    reportParams.setParamParentOrganisationUnit( reportingParams.isParentOrganisationUnit() );\n-                    reportParams.setParamReportingMonth( reportingParams.isReportingPeriod() );\n+                    // Copy report params\n+                    if (visualization.hasReportingParams()) {\n+                        final ReportingParams reportingParams = visualization.getReportingParams();\n+                        final ReportParams reportParams = new ReportParams();\n \n-                    reportTable.setReportParams( reportParams );\n-                }\n+                        reportParams.setParamGrandParentOrganisationUnit(reportingParams.isGrandParentOrganisationUnit());\n+                        reportParams.setParamOrganisationUnit(reportingParams.isOrganisationUnit());\n+                        reportParams.setParamParentOrganisationUnit(reportingParams.isParentOrganisationUnit());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6ba633dd67823231484297bae1779bf965dec902"}, "originalPosition": 162}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxMzIyNjUwOnYy", "diffSide": "RIGHT", "path": "dhis-2/dhis-web/dhis-web-api/src/main/java/org/hisp/dhis/webapi/controller/ReportTableFacadeController.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxMTo1MjoxM1rOFku4Tg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxMTo1MjoxM1rOFku4Tg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDA2MTEzNA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                    reportParams.setParamReportingMonth(reportingParams.isReportingPeriod());\n          \n          \n            \n                                    reportParams.setParamReportingMonth( reportingParams.isReportingPeriod() );", "url": "https://github.com/dhis2/dhis2-core/pull/4778#discussion_r374061134", "createdAt": "2020-02-03T11:52:13Z", "author": {"login": "stian-sandvold"}, "path": "dhis-2/dhis-web/dhis-web-api/src/main/java/org/hisp/dhis/webapi/controller/ReportTableFacadeController.java", "diffHunk": "@@ -1138,28 +1143,33 @@ private Visualization convertToVisualization( final ReportTable reportTable )\n     private List<ReportTable> convertToReportTableList( List<Visualization> entities )\n     {\n         List<ReportTable> reportTables = new ArrayList<>();\n+\n         if ( CollectionUtils.isNotEmpty( entities ) )\n         {\n             for ( final Visualization visualization : entities )\n             {\n-                final ReportTable reportTable = new ReportTable();\n-                BeanUtils.copyProperties( visualization, reportTable );\n-\n-                // Copy report params\n-                if ( visualization.hasReportingParams() )\n+                // Consider only Visualization types of Pivot Table\n+                if ( visualization.getType() != null\n+                    && \"PIVOT_TABLE\".equalsIgnoreCase( visualization.getType().name() ) )\n                 {\n-                    final ReportingParams reportingParams = visualization.getReportingParams();\n-                    final ReportParams reportParams = new ReportParams();\n+                    final ReportTable reportTable = new ReportTable();\n+                    BeanUtils.copyProperties( visualization, reportTable );\n \n-                    reportParams.setParamGrandParentOrganisationUnit( reportingParams.isGrandParentOrganisationUnit() );\n-                    reportParams.setParamOrganisationUnit( reportingParams.isOrganisationUnit() );\n-                    reportParams.setParamParentOrganisationUnit( reportingParams.isParentOrganisationUnit() );\n-                    reportParams.setParamReportingMonth( reportingParams.isReportingPeriod() );\n+                    // Copy report params\n+                    if (visualization.hasReportingParams()) {\n+                        final ReportingParams reportingParams = visualization.getReportingParams();\n+                        final ReportParams reportParams = new ReportParams();\n \n-                    reportTable.setReportParams( reportParams );\n-                }\n+                        reportParams.setParamGrandParentOrganisationUnit(reportingParams.isGrandParentOrganisationUnit());\n+                        reportParams.setParamOrganisationUnit(reportingParams.isOrganisationUnit());\n+                        reportParams.setParamParentOrganisationUnit(reportingParams.isParentOrganisationUnit());\n+                        reportParams.setParamReportingMonth(reportingParams.isReportingPeriod());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6ba633dd67823231484297bae1779bf965dec902"}, "originalPosition": 163}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxMzIyNjgxOnYy", "diffSide": "RIGHT", "path": "dhis-2/dhis-web/dhis-web-api/src/main/java/org/hisp/dhis/webapi/controller/ReportTableFacadeController.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxMTo1MjoyMFrOFku4hQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxMTo1MjoyMFrOFku4hQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDA2MTE4OQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                    reportTable.setReportParams(reportParams);\n          \n          \n            \n                                    reportTable.setReportParams( reportParams );", "url": "https://github.com/dhis2/dhis2-core/pull/4778#discussion_r374061189", "createdAt": "2020-02-03T11:52:20Z", "author": {"login": "stian-sandvold"}, "path": "dhis-2/dhis-web/dhis-web-api/src/main/java/org/hisp/dhis/webapi/controller/ReportTableFacadeController.java", "diffHunk": "@@ -1138,28 +1143,33 @@ private Visualization convertToVisualization( final ReportTable reportTable )\n     private List<ReportTable> convertToReportTableList( List<Visualization> entities )\n     {\n         List<ReportTable> reportTables = new ArrayList<>();\n+\n         if ( CollectionUtils.isNotEmpty( entities ) )\n         {\n             for ( final Visualization visualization : entities )\n             {\n-                final ReportTable reportTable = new ReportTable();\n-                BeanUtils.copyProperties( visualization, reportTable );\n-\n-                // Copy report params\n-                if ( visualization.hasReportingParams() )\n+                // Consider only Visualization types of Pivot Table\n+                if ( visualization.getType() != null\n+                    && \"PIVOT_TABLE\".equalsIgnoreCase( visualization.getType().name() ) )\n                 {\n-                    final ReportingParams reportingParams = visualization.getReportingParams();\n-                    final ReportParams reportParams = new ReportParams();\n+                    final ReportTable reportTable = new ReportTable();\n+                    BeanUtils.copyProperties( visualization, reportTable );\n \n-                    reportParams.setParamGrandParentOrganisationUnit( reportingParams.isGrandParentOrganisationUnit() );\n-                    reportParams.setParamOrganisationUnit( reportingParams.isOrganisationUnit() );\n-                    reportParams.setParamParentOrganisationUnit( reportingParams.isParentOrganisationUnit() );\n-                    reportParams.setParamReportingMonth( reportingParams.isReportingPeriod() );\n+                    // Copy report params\n+                    if (visualization.hasReportingParams()) {\n+                        final ReportingParams reportingParams = visualization.getReportingParams();\n+                        final ReportParams reportParams = new ReportParams();\n \n-                    reportTable.setReportParams( reportParams );\n-                }\n+                        reportParams.setParamGrandParentOrganisationUnit(reportingParams.isGrandParentOrganisationUnit());\n+                        reportParams.setParamOrganisationUnit(reportingParams.isOrganisationUnit());\n+                        reportParams.setParamParentOrganisationUnit(reportingParams.isParentOrganisationUnit());\n+                        reportParams.setParamReportingMonth(reportingParams.isReportingPeriod());\n \n-                reportTables.add( reportTable );\n+                        reportTable.setReportParams(reportParams);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6ba633dd67823231484297bae1779bf965dec902"}, "originalPosition": 166}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxMzIyNzE2OnYy", "diffSide": "RIGHT", "path": "dhis-2/dhis-web/dhis-web-api/src/main/java/org/hisp/dhis/webapi/controller/ReportTableFacadeController.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxMTo1MjozMFrOFku4vw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxMTo1MjozMFrOFku4vw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDA2MTI0Nw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                reportTables.add(reportTable);\n          \n          \n            \n                                reportTables.add( reportTable );", "url": "https://github.com/dhis2/dhis2-core/pull/4778#discussion_r374061247", "createdAt": "2020-02-03T11:52:30Z", "author": {"login": "stian-sandvold"}, "path": "dhis-2/dhis-web/dhis-web-api/src/main/java/org/hisp/dhis/webapi/controller/ReportTableFacadeController.java", "diffHunk": "@@ -1138,28 +1143,33 @@ private Visualization convertToVisualization( final ReportTable reportTable )\n     private List<ReportTable> convertToReportTableList( List<Visualization> entities )\n     {\n         List<ReportTable> reportTables = new ArrayList<>();\n+\n         if ( CollectionUtils.isNotEmpty( entities ) )\n         {\n             for ( final Visualization visualization : entities )\n             {\n-                final ReportTable reportTable = new ReportTable();\n-                BeanUtils.copyProperties( visualization, reportTable );\n-\n-                // Copy report params\n-                if ( visualization.hasReportingParams() )\n+                // Consider only Visualization types of Pivot Table\n+                if ( visualization.getType() != null\n+                    && \"PIVOT_TABLE\".equalsIgnoreCase( visualization.getType().name() ) )\n                 {\n-                    final ReportingParams reportingParams = visualization.getReportingParams();\n-                    final ReportParams reportParams = new ReportParams();\n+                    final ReportTable reportTable = new ReportTable();\n+                    BeanUtils.copyProperties( visualization, reportTable );\n \n-                    reportParams.setParamGrandParentOrganisationUnit( reportingParams.isGrandParentOrganisationUnit() );\n-                    reportParams.setParamOrganisationUnit( reportingParams.isOrganisationUnit() );\n-                    reportParams.setParamParentOrganisationUnit( reportingParams.isParentOrganisationUnit() );\n-                    reportParams.setParamReportingMonth( reportingParams.isReportingPeriod() );\n+                    // Copy report params\n+                    if (visualization.hasReportingParams()) {\n+                        final ReportingParams reportingParams = visualization.getReportingParams();\n+                        final ReportParams reportParams = new ReportParams();\n \n-                    reportTable.setReportParams( reportParams );\n-                }\n+                        reportParams.setParamGrandParentOrganisationUnit(reportingParams.isGrandParentOrganisationUnit());\n+                        reportParams.setParamOrganisationUnit(reportingParams.isOrganisationUnit());\n+                        reportParams.setParamParentOrganisationUnit(reportingParams.isParentOrganisationUnit());\n+                        reportParams.setParamReportingMonth(reportingParams.isReportingPeriod());\n \n-                reportTables.add( reportTable );\n+                        reportTable.setReportParams(reportParams);\n+                    }\n+\n+                    reportTables.add(reportTable);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6ba633dd67823231484297bae1779bf965dec902"}, "originalPosition": 169}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3620, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}