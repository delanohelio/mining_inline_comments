{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM0NDQ3MDk4", "number": 5745, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxNTowMToyMVrOEFkzZw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxNTowMToyMVrOEFkzZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0MjgxMzE5OnYy", "diffSide": "RIGHT", "path": "dhis-2/dhis-services/dhis-service-administration/src/main/java/org/hisp/dhis/resourcetable/table/PeriodResourceTable.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxNTowMToyMVrOGj2Kbg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxNjowMDoyMlrOGj4q8g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDI0MDc1MA==", "bodyText": "Looks great.\nMy only concern here is our famous Calendar system. I think we need to retrieve the current calendar and use that when determining the year? We can check with Morten H.", "url": "https://github.com/dhis2/dhis2-core/pull/5745#discussion_r440240750", "createdAt": "2020-06-15T15:01:21Z", "author": {"login": "larshelge"}, "path": "dhis-2/dhis-services/dhis-service-administration/src/main/java/org/hisp/dhis/resourcetable/table/PeriodResourceTable.java", "diffHunk": "@@ -140,4 +142,20 @@ public String getCreateTempTableStatement()\n \n         return Lists.newArrayList( sql );\n     }\n+    \n+    private int resolveYearFromPeriod( Period period )\n+    {\n+        // Weekly type has to be treated separately from other Period types.\n+        // In order to handle all weekly types uniformly, 3 days are added to the week start day and\n+        // the year of the modified start date is used as reference year for the Period\n+\n+        if ( WeeklyAbstractPeriodType.class.isAssignableFrom( period.getPeriodType().getClass() ) )\n+        {\n+            return new DateTime( period.getStartDate().getTime() ).plusDays( 3 ).getYear();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6c0ce36e09aa39e0d0da22e2ebfe962f85924319"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDI3NDUwMQ==", "bodyText": "Ok, thanks, I'll add Morten to the reviewers", "url": "https://github.com/dhis2/dhis2-core/pull/5745#discussion_r440274501", "createdAt": "2020-06-15T15:49:45Z", "author": {"login": "luciano-fiandesio"}, "path": "dhis-2/dhis-services/dhis-service-administration/src/main/java/org/hisp/dhis/resourcetable/table/PeriodResourceTable.java", "diffHunk": "@@ -140,4 +142,20 @@ public String getCreateTempTableStatement()\n \n         return Lists.newArrayList( sql );\n     }\n+    \n+    private int resolveYearFromPeriod( Period period )\n+    {\n+        // Weekly type has to be treated separately from other Period types.\n+        // In order to handle all weekly types uniformly, 3 days are added to the week start day and\n+        // the year of the modified start date is used as reference year for the Period\n+\n+        if ( WeeklyAbstractPeriodType.class.isAssignableFrom( period.getPeriodType().getClass() ) )\n+        {\n+            return new DateTime( period.getStartDate().getTime() ).plusDays( 3 ).getYear();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDI0MDc1MA=="}, "originalCommit": {"oid": "6c0ce36e09aa39e0d0da22e2ebfe962f85924319"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDI3Njg2Nw==", "bodyText": "When it comes to weeks we currently don't do much considerations for other calendars, mostly because they normally don't have properly defined weeks etc... so i think this is fine (for now at least lets just do ISO weeks for all calendars)", "url": "https://github.com/dhis2/dhis2-core/pull/5745#discussion_r440276867", "createdAt": "2020-06-15T15:53:07Z", "author": {"login": "mortenoh"}, "path": "dhis-2/dhis-services/dhis-service-administration/src/main/java/org/hisp/dhis/resourcetable/table/PeriodResourceTable.java", "diffHunk": "@@ -140,4 +142,20 @@ public String getCreateTempTableStatement()\n \n         return Lists.newArrayList( sql );\n     }\n+    \n+    private int resolveYearFromPeriod( Period period )\n+    {\n+        // Weekly type has to be treated separately from other Period types.\n+        // In order to handle all weekly types uniformly, 3 days are added to the week start day and\n+        // the year of the modified start date is used as reference year for the Period\n+\n+        if ( WeeklyAbstractPeriodType.class.isAssignableFrom( period.getPeriodType().getClass() ) )\n+        {\n+            return new DateTime( period.getStartDate().getTime() ).plusDays( 3 ).getYear();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDI0MDc1MA=="}, "originalCommit": {"oid": "6c0ce36e09aa39e0d0da22e2ebfe962f85924319"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDI4MTg0Mg==", "bodyText": "Just to be clear, if you want to add support you can simply get the calendar, check if iso (then do what you did), if not.. you can get year from the the calendar instance, but generally we have not been considering weeks for other calendars (we might want to do better, but its hard when week periods are not defined in their calendar)\n@abyot might have something to add about the Ethiopian calendar", "url": "https://github.com/dhis2/dhis2-core/pull/5745#discussion_r440281842", "createdAt": "2020-06-15T16:00:22Z", "author": {"login": "mortenoh"}, "path": "dhis-2/dhis-services/dhis-service-administration/src/main/java/org/hisp/dhis/resourcetable/table/PeriodResourceTable.java", "diffHunk": "@@ -140,4 +142,20 @@ public String getCreateTempTableStatement()\n \n         return Lists.newArrayList( sql );\n     }\n+    \n+    private int resolveYearFromPeriod( Period period )\n+    {\n+        // Weekly type has to be treated separately from other Period types.\n+        // In order to handle all weekly types uniformly, 3 days are added to the week start day and\n+        // the year of the modified start date is used as reference year for the Period\n+\n+        if ( WeeklyAbstractPeriodType.class.isAssignableFrom( period.getPeriodType().getClass() ) )\n+        {\n+            return new DateTime( period.getStartDate().getTime() ).plusDays( 3 ).getYear();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDI0MDc1MA=="}, "originalCommit": {"oid": "6c0ce36e09aa39e0d0da22e2ebfe962f85924319"}, "originalPosition": 35}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3365, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}