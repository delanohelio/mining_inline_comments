{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzczNTI5MTk5", "number": 4854, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxMToyMzo0N1rODiSu5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxMTozNjowN1rODiS7Ig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3Mjg1MDkyOnYy", "diffSide": "RIGHT", "path": "dhis-2/dhis-api/src/main/java/org/hisp/dhis/programrule/engine/RuleActionImplementer.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxMToyMzo0N1rOFtdWBg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxMTo1OTo0MVrOFteO1Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzIxMTAxNA==", "bodyText": "This interface is a bit inconistent, since it uses Objects and String as function parameters for ProgramInstance and ProgramStageInstance", "url": "https://github.com/dhis2/dhis2-core/pull/4854#discussion_r383211014", "createdAt": "2020-02-24T11:23:47Z", "author": {"login": "luciano-fiandesio"}, "path": "dhis-2/dhis-api/src/main/java/org/hisp/dhis/programrule/engine/RuleActionImplementer.java", "diffHunk": "@@ -43,4 +43,8 @@\n     void implement( RuleEffect ruleEffect, ProgramInstance programInstance );\n \n     void implement( RuleEffect ruleEffect, ProgramStageInstance programStageInstance );\n+\n+    void implementEnrollmentAction( RuleEffect ruleEffect, String programInstance );\n+\n+    void implementEventAction( RuleEffect ruleEffect, String programStageInstance );", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "75e410fd05e981fe961af089b3856c883c33bde0"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzIyNTU1Nw==", "bodyText": "yes i agree. The reason is these implementer classes were previously invoked only by ProgramRuleService ( which works in async way ). But in this feature, i am already receiving ProgramRule effects in TrackerBundle object and all i have to do is to invoke implementer classes to apply those effects. This invocation is happening in SideEffectHandlerService and it uses parallel stream. So in order to avoid those lazy loading problems, i have created two new methods to take UIDs and explicitly fetch those objects.", "url": "https://github.com/dhis2/dhis2-core/pull/4854#discussion_r383225557", "createdAt": "2020-02-24T11:59:41Z", "author": {"login": "zubaira"}, "path": "dhis-2/dhis-api/src/main/java/org/hisp/dhis/programrule/engine/RuleActionImplementer.java", "diffHunk": "@@ -43,4 +43,8 @@\n     void implement( RuleEffect ruleEffect, ProgramInstance programInstance );\n \n     void implement( RuleEffect ruleEffect, ProgramStageInstance programStageInstance );\n+\n+    void implementEnrollmentAction( RuleEffect ruleEffect, String programInstance );\n+\n+    void implementEventAction( RuleEffect ruleEffect, String programStageInstance );", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzIxMTAxNA=="}, "originalCommit": {"oid": "75e410fd05e981fe961af089b3856c883c33bde0"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3Mjg1MzIzOnYy", "diffSide": "RIGHT", "path": "dhis-2/dhis-services/dhis-service-program-rule/src/main/java/org/hisp/dhis/programrule/engine/NotificationRuleActionImplementer.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxMToyNDo0MFrOFtdXUw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxMToyNDo0MFrOFtdXUw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzIxMTM0Nw==", "bodyText": "Can you use   constructor based injection, so we keep the same approach everywhere", "url": "https://github.com/dhis2/dhis2-core/pull/4854#discussion_r383211347", "createdAt": "2020-02-24T11:24:40Z", "author": {"login": "luciano-fiandesio"}, "path": "dhis-2/dhis-services/dhis-service-program-rule/src/main/java/org/hisp/dhis/programrule/engine/NotificationRuleActionImplementer.java", "diffHunk": "@@ -56,10 +58,16 @@\n     // -------------------------------------------------------------------------\n \n     @Autowired\n-    private ProgramNotificationTemplateStore programNotificationTemplateStore;\n+    protected ProgramNotificationTemplateStore programNotificationTemplateStore;\n \n     @Autowired\n-    private NotificationLoggingService notificationLoggingService;\n+    protected NotificationLoggingService notificationLoggingService;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "75e410fd05e981fe961af089b3856c883c33bde0"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3Mjg2MjEwOnYy", "diffSide": "RIGHT", "path": "dhis-2/dhis-services/dhis-service-tracker/src/main/java/org/hisp/dhis/tracker/bundle/DefaultTrackerBundleService.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxMToyODoxM1rOFtdcwQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxMToyODoxM1rOFtdcwQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzIxMjczNw==", "bodyText": "Unused", "url": "https://github.com/dhis2/dhis2-core/pull/4854#discussion_r383212737", "createdAt": "2020-02-24T11:28:13Z", "author": {"login": "luciano-fiandesio"}, "path": "dhis-2/dhis-services/dhis-service-tracker/src/main/java/org/hisp/dhis/tracker/bundle/DefaultTrackerBundleService.java", "diffHunk": "@@ -60,6 +62,7 @@\n import java.util.ArrayList;\n import java.util.Collections;\n import java.util.Date;\n+import java.util.HashMap;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "75e410fd05e981fe961af089b3856c883c33bde0"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3Mjg2NzY4OnYy", "diffSide": "RIGHT", "path": "dhis-2/dhis-services/dhis-service-tracker/src/main/java/org/hisp/dhis/tracker/job/TrackerNotificationMessageManager.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxMTozMDozN1rOFtdgQQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxMTozMDozN1rOFtdgQQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzIxMzYzMw==", "bodyText": "For clearness sake, I would rename this classes to include the word consumer", "url": "https://github.com/dhis2/dhis2-core/pull/4854#discussion_r383213633", "createdAt": "2020-02-24T11:30:37Z", "author": {"login": "luciano-fiandesio"}, "path": "dhis-2/dhis-services/dhis-service-tracker/src/main/java/org/hisp/dhis/tracker/job/TrackerNotificationMessageManager.java", "diffHunk": "@@ -0,0 +1,78 @@\n+package org.hisp.dhis.tracker.job;\n+\n+/*\n+ * Copyright (c) 2004-2020, University of Oslo\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ * Redistributions of source code must retain the above copyright notice, this\n+ * list of conditions and the following disclaimer.\n+ *\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following disclaimer in the documentation\n+ * and/or other materials provided with the distribution.\n+ * Neither the name of the HISP project nor the names of its contributors may\n+ * be used to endorse or promote products derived from this software without\n+ * specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n+ * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+\n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import org.hisp.dhis.artemis.MessageManager;\n+import org.hisp.dhis.artemis.Topics;\n+import org.hisp.dhis.scheduling.SchedulingManager;\n+import org.springframework.beans.factory.ObjectFactory;\n+import org.springframework.jms.annotation.JmsListener;\n+import org.springframework.stereotype.Component;\n+\n+import javax.jms.JMSException;\n+import javax.jms.TextMessage;\n+\n+/**\n+ * @author Zubair Asghar\n+ */\n+@Component\n+public class TrackerNotificationMessageManager extends BaseMessageManager", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "75e410fd05e981fe961af089b3856c883c33bde0"}, "originalPosition": 47}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3Mjg2OTc5OnYy", "diffSide": "RIGHT", "path": "dhis-2/dhis-services/dhis-service-tracker/src/main/java/org/hisp/dhis/tracker/job/TrackerNotificationMessageManager.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxMTozMToyNVrOFtdhlg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxMTozMToyNVrOFtdhlg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzIxMzk3NA==", "bodyText": "you can consider passing TrackerSideEffectDataBundle directly,  why do you need the serialization/deserialization?", "url": "https://github.com/dhis2/dhis2-core/pull/4854#discussion_r383213974", "createdAt": "2020-02-24T11:31:25Z", "author": {"login": "luciano-fiandesio"}, "path": "dhis-2/dhis-services/dhis-service-tracker/src/main/java/org/hisp/dhis/tracker/job/TrackerNotificationMessageManager.java", "diffHunk": "@@ -0,0 +1,78 @@\n+package org.hisp.dhis.tracker.job;\n+\n+/*\n+ * Copyright (c) 2004-2020, University of Oslo\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ * Redistributions of source code must retain the above copyright notice, this\n+ * list of conditions and the following disclaimer.\n+ *\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following disclaimer in the documentation\n+ * and/or other materials provided with the distribution.\n+ * Neither the name of the HISP project nor the names of its contributors may\n+ * be used to endorse or promote products derived from this software without\n+ * specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n+ * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+\n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import org.hisp.dhis.artemis.MessageManager;\n+import org.hisp.dhis.artemis.Topics;\n+import org.hisp.dhis.scheduling.SchedulingManager;\n+import org.springframework.beans.factory.ObjectFactory;\n+import org.springframework.jms.annotation.JmsListener;\n+import org.springframework.stereotype.Component;\n+\n+import javax.jms.JMSException;\n+import javax.jms.TextMessage;\n+\n+/**\n+ * @author Zubair Asghar\n+ */\n+@Component\n+public class TrackerNotificationMessageManager extends BaseMessageManager\n+{\n+    private final ObjectFactory<TrackerNotificationThread> trackerNotificationThreadObjectFactory;\n+\n+    public TrackerNotificationMessageManager(\n+            MessageManager messageManager,\n+            SchedulingManager schedulingManager,\n+            ObjectMapper objectMapper,\n+            ObjectFactory<TrackerNotificationThread> trackerNotificationThreadObjectFactory )\n+    {\n+        super( messageManager, schedulingManager, objectMapper );\n+        this.trackerNotificationThreadObjectFactory = trackerNotificationThreadObjectFactory;\n+    }\n+\n+    @Override\n+    public String getTopic()\n+    {\n+        return Topics.TRACKER_IMPORT_NOTIFICATION_TOPIC_NAME;\n+    }\n+\n+    @JmsListener( destination = Topics.TRACKER_IMPORT_NOTIFICATION_TOPIC_NAME, containerFactory = \"jmsQueueListenerContainerFactory\" )\n+    public void consume( TextMessage message ) throws JMSException, JsonProcessingException", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "75e410fd05e981fe961af089b3856c883c33bde0"}, "originalPosition": 68}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3Mjg3MTg5OnYy", "diffSide": "RIGHT", "path": "dhis-2/dhis-services/dhis-service-tracker/src/main/java/org/hisp/dhis/tracker/job/TrackerNotificationThread.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxMTozMjoxNFrOFtdi4Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxMTozMjoxNFrOFtdi4Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzIxNDMwNQ==", "bodyText": "Can you add Javadocs to explain what are the responsibilities of this class", "url": "https://github.com/dhis2/dhis2-core/pull/4854#discussion_r383214305", "createdAt": "2020-02-24T11:32:14Z", "author": {"login": "luciano-fiandesio"}, "path": "dhis-2/dhis-services/dhis-service-tracker/src/main/java/org/hisp/dhis/tracker/job/TrackerNotificationThread.java", "diffHunk": "@@ -0,0 +1,83 @@\n+package org.hisp.dhis.tracker.job;\n+\n+/*\n+ * Copyright (c) 2004-2020, University of Oslo\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ * Redistributions of source code must retain the above copyright notice, this\n+ * list of conditions and the following disclaimer.\n+ *\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following disclaimer in the documentation\n+ * and/or other materials provided with the distribution.\n+ * Neither the name of the HISP project nor the names of its contributors may\n+ * be used to endorse or promote products derived from this software without\n+ * specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n+ * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+\n+import com.google.common.collect.ImmutableMap;\n+import org.hisp.dhis.common.BaseIdentifiableObject;\n+import org.hisp.dhis.program.ProgramInstance;\n+import org.hisp.dhis.program.ProgramStageInstance;\n+import org.hisp.dhis.program.notification.ProgramNotificationService;\n+import org.hisp.dhis.security.SecurityContextRunnable;\n+import org.springframework.beans.factory.config.BeanDefinition;\n+import org.springframework.context.annotation.Scope;\n+import org.springframework.stereotype.Component;\n+\n+import java.util.function.Consumer;\n+\n+/**", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "75e410fd05e981fe961af089b3856c883c33bde0"}, "originalPosition": 43}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3Mjg4MjI2OnYy", "diffSide": "RIGHT", "path": "dhis-2/dhis-support/dhis-support-artemis/src/main/java/org/hisp/dhis/artemis/Topics.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxMTozNjowN1rOFtdo9w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxMTozNjowN1rOFtdo9w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzIxNTg2Mw==", "bodyText": "This are really queues, it would be better to create a QUEUE constant class for queues", "url": "https://github.com/dhis2/dhis2-core/pull/4854#discussion_r383215863", "createdAt": "2020-02-24T11:36:07Z", "author": {"login": "luciano-fiandesio"}, "path": "dhis-2/dhis-support/dhis-support-artemis/src/main/java/org/hisp/dhis/artemis/Topics.java", "diffHunk": "@@ -40,4 +40,8 @@\n     String TRACKER_TOPIC_NAME = \"dhis2.topic.tracker\";\n \n     String TRACKER_IMPORT_JOB_TOPIC_NAME = \"dhis2.jobs.tracker\";\n+\n+    String TRACKER_IMPORT_NOTIFICATION_TOPIC_NAME = \"dhis2.jobs.tracker.notifications\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "75e410fd05e981fe961af089b3856c883c33bde0"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3579, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}