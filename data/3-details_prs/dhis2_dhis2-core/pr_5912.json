{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY2MTY3MzUy", "number": 5912, "title": "feat: fetch Org Unit coordinate in event analytics query", "bodyText": "Allows to return the Org Unit coordinates of an Event attribute, if present.\nGiven: S33cRBsnXPo as Event attribute UID of type OrganizationalUnit with name \"Inpatient Place of Infection\"\nGiven the following query: /api/34/analytics/events/query/eBAyeGv0exc.json?dimension=ou:ImspTQPwCqd&dimension=S33cRBsnXPo&filter=pe:THIS_MONTH&stage=Zj7UnCAulEk&coordinatesOnly=true&coordinateField=S33cRBsnXPo\nThe system will return the following payload:\n{\n  \"headers\": [\n\t. . . \n\t{\n      \"name\": \"S33cRBsnXPo\",\n      \"column\": \"Inpatient Place of Infection\",\n      \"valueType\": \"COORDINATE\",\n      \"type\": \"org.opengis.geometry.primitive.Point\",\n      \"hidden\": false,\n      \"meta\": true\n\t}\n\n  ],\n  \"rows\": [\n\t[\n\t  \"BAU1evNg3ua\",\n\t  \"Zj7UnCAulEk\",\n\t  \"2020-08-11 00:00:00.0\",\n\t  \"{\\\"type\\\":\\\"Point\\\",\\\"coordinates\\\":[-11.840027,8.640035]}\",\n\t  \"-11.840027\",\n\t  \"8.640035\",\n\t  \"Ngelehun CHC\",\n\t  \"OU_559\",\n\t  \"DiszpKrYNg8\",\n\t  \"[-12.387800,8.055700]\"\n    ]\n  ]\n}\n\nThe type of value is always org.opengis.geometry.primitive.Point. If the Org Unit has a geometry which is not a Point, the system will return the centre point of the shape (using the ST_Centroid function in Postgres).\nref: DHIS2-3351", "createdAt": "2020-08-11T15:10:13Z", "url": "https://github.com/dhis2/dhis2-core/pull/5912", "merged": true, "mergeCommit": {"oid": "fe6b538a0c57fa8a385acbc8f93e02e154c325ca"}, "closed": true, "closedAt": "2020-09-01T06:59:48Z", "author": {"login": "luciano-fiandesio"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc-HsI4ABqjM2NDY3MzY4Njc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdEh2XhgFqTQ3OTQ1MDgzNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "614765bc120d181c3cbfa24fce03d9553e51b376", "author": {"user": {"login": "luciano-fiandesio", "name": "Luciano Fiandesio"}}, "url": "https://github.com/dhis2/dhis2-core/commit/614765bc120d181c3cbfa24fce03d9553e51b376", "committedDate": "2020-08-11T15:07:56Z", "message": "feat: fetch Org Unit coordinate in event analytics query\n\nAllows to return the Org Unit coordinates of an Event attribute, if present.\n\nGiven: `S33cRBsnXPo` as Event attribute UID of type `OrganizationalUnit` with name \"Inpatient Place of Infection\"\n\nGiven the following query: `/api/34/analytics/events/query/eBAyeGv0exc.json?dimension=ou:ImspTQPwCqd&dimension=S33cRBsnXPo&filter=pe:THIS_MONTH&stage=Zj7UnCAulEk&coordinatesOnly=true&coordinateField=S33cRBsnXPo`\n\nThe system will return the following payload:\n\n```\n{\n\t\"headers\": [\n\t\t. . .\n\t\t{\n\t      \"name\": \"S33cRBsnXPo\",\n\t      \"column\": \"Inpatient Place of Infection\",\n\t      \"valueType\": \"COORDINATE\",\n\t      \"type\": \"org.opengis.geometry.primitive.Point\",\n\t      \"hidden\": false,\n\t      \"meta\": true\n    \t}\n\n\t],\n\t\"rows\": [\n    [\n      \"BAU1evNg3ua\",\n      \"Zj7UnCAulEk\",\n      \"2020-08-11 00:00:00.0\",\n      \"{\\\"type\\\":\\\"Point\\\",\\\"coordinates\\\":[-11.840027,8.640035]}\",\n      \"-11.840027\",\n      \"8.640035\",\n      \"Ngelehun CHC\",\n      \"OU_559\",\n      \"DiszpKrYNg8\",\n      \"[-12.387800,8.055700]\"\n    ]\n  ]\n}\n```\n\nThe type of value is always `org.opengis.geometry.primitive.Point`. If the Org Unit has a geometry which is not a Point, the system will return the centre point of the shape (using the `ST_Centroid` function in Postgres).\n\nmissing:\n\t- tests\n\nref: DHIS2-3351"}, "afterCommit": {"oid": "f28e03fc66dd70330d27e42abf03433cefdedfb3", "author": {"user": {"login": "luciano-fiandesio", "name": "Luciano Fiandesio"}}, "url": "https://github.com/dhis2/dhis2-core/commit/f28e03fc66dd70330d27e42abf03433cefdedfb3", "committedDate": "2020-08-12T09:06:40Z", "message": "test: add more unit tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY1ODUwNTE2", "url": "https://github.com/dhis2/dhis2-core/pull/5912#pullrequestreview-465850516", "createdAt": "2020-08-12T12:13:32Z", "commit": {"oid": "f28e03fc66dd70330d27e42abf03433cefdedfb3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxMjoxMzozM1rOG_ebCQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxMjoxMzozM1rOG_ebCQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTIxMTkxMw==", "bodyText": "This feels a bit \"iffy\". Could we instead change it so that the QueryItem contains the correct value type? We do have ValueType.COORDINATE. If the Query item contains this value type in the case of org unit, we can remove this if statement.", "url": "https://github.com/dhis2/dhis2-core/pull/5912#discussion_r469211913", "createdAt": "2020-08-12T12:13:33Z", "author": {"login": "larshelge"}, "path": "dhis-2/dhis-services/dhis-service-analytics/src/main/java/org/hisp/dhis/analytics/event/data/AbstractAnalyticsService.java", "diffHunk": "@@ -102,7 +104,21 @@ protected Grid getGrid( EventQueryParams params )\n \n         for ( QueryItem item : params.getItems() )\n         {\n-            grid.addHeader( new GridHeader( item.getItem().getUid(), item.getItem().getDisplayProperty( params.getDisplayProperty() ), item.getValueType(), item.getTypeAsString(), false, true, item.getOptionSet(), item.getLegendSet() ) );\n+            if ( item.getValueType() == ValueType.ORGANISATION_UNIT\n+                && params.getCoordinateField().equals( item.getItem().getUid() ) )\n+            {   // Special case: if the request contains an item of Org Unit value type and the item uid\n+                // is linked to coordinates (coordinateField), then create an Header of ValueType\n+                // COORDINATE and type \"Point\"\n+                grid.addHeader( new GridHeader( item.getItem().getUid(),\n+                    item.getItem().getDisplayProperty( params.getDisplayProperty() ), COORDINATE,\n+                    Point.class.getName(), false, true, item.getOptionSet(), item.getLegendSet() ) );", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f28e03fc66dd70330d27e42abf03433cefdedfb3"}, "originalPosition": 28}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY1OTIyMTUy", "url": "https://github.com/dhis2/dhis2-core/pull/5912#pullrequestreview-465922152", "createdAt": "2020-08-12T13:36:01Z", "commit": {"oid": "f28e03fc66dd70330d27e42abf03433cefdedfb3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxMzozNjowMVrOG_hmug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxMzozNjowMVrOG_hmug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTI2NDA1OA==", "bodyText": "This comes back to my previous question. Do we only support Point for OrgUnit Geometry? I would expect org units most often to be areas? Also, will this result in the correct numbers? I don't remember which standard Bj\u00f8rn told me to use, but he mentioned a specific one.", "url": "https://github.com/dhis2/dhis2-core/pull/5912#discussion_r469264058", "createdAt": "2020-08-12T13:36:01Z", "author": {"login": "stian-sandvold"}, "path": "dhis-2/dhis-services/dhis-service-analytics/src/main/java/org/hisp/dhis/analytics/event/data/AbstractJdbcEventAnalyticsManager.java", "diffHunk": "@@ -268,6 +269,16 @@ else if ( ValueType.COORDINATE == queryItem.getValueType() )\n \n                 columns.add( coordSql );\n             }\n+            else if ( ValueType.ORGANISATION_UNIT == queryItem.getValueType()\n+                && params.getCoordinateField().equals( queryItem.getItem().getUid() ) )\n+            {\n+                String colName = quote( queryItem.getItemId() + OU_GEOMETRY_COL_SUFFIX );\n+\n+                String coordSql =  \"'[' || round(ST_X(ST_Centroid(\" + colName + \"))::numeric, 6) || ',' || round(ST_Y(ST_Centroid(\" + colName + \"))::numeric, 6) || ']' as \" + colName;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f28e03fc66dd70330d27e42abf03433cefdedfb3"}, "originalPosition": 17}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY1OTIyMzkw", "url": "https://github.com/dhis2/dhis2-core/pull/5912#pullrequestreview-465922390", "createdAt": "2020-08-12T13:36:17Z", "commit": {"oid": "f28e03fc66dd70330d27e42abf03433cefdedfb3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxMzozNjoxN1rOG_hnZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxMzozNjoxN1rOG_hnZQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTI2NDIyOQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        return getCoordinateFieldOrFail( dataElement.getValueType(), coordinateField, ErrorCode.E7219);\n          \n          \n            \n                        return getCoordinateFieldOrFail( dataElement.getValueType(), coordinateField, ErrorCode.E7219 );", "url": "https://github.com/dhis2/dhis2-core/pull/5912#discussion_r469264229", "createdAt": "2020-08-12T13:36:17Z", "author": {"login": "stian-sandvold"}, "path": "dhis-2/dhis-services/dhis-service-analytics/src/main/java/org/hisp/dhis/analytics/event/data/DefaultEventDataQueryService.java", "diffHunk": "@@ -326,24 +327,14 @@ public String getCoordinateField( String coordinateField )\n \n         if ( dataElement != null )\n         {\n-            if ( ValueType.COORDINATE != dataElement.getValueType() )\n-            {\n-                throwIllegalQueryEx( ErrorCode.E7219, coordinateField );\n-            }\n-\n-            return dataElement.getUid();\n+            return getCoordinateFieldOrFail( dataElement.getValueType(), coordinateField, ErrorCode.E7219);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f28e03fc66dd70330d27e42abf03433cefdedfb3"}, "originalPosition": 18}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY1OTIyNDkx", "url": "https://github.com/dhis2/dhis2-core/pull/5912#pullrequestreview-465922491", "createdAt": "2020-08-12T13:36:24Z", "commit": {"oid": "f28e03fc66dd70330d27e42abf03433cefdedfb3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxMzozNjoyNVrOG_hnsw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxMzozNjoyNVrOG_hnsw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTI2NDMwNw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        return getCoordinateFieldOrFail( attribute.getValueType(), coordinateField, ErrorCode.E7220);\n          \n          \n            \n                        return getCoordinateFieldOrFail( attribute.getValueType(), coordinateField, ErrorCode.E7220 );", "url": "https://github.com/dhis2/dhis2-core/pull/5912#discussion_r469264307", "createdAt": "2020-08-12T13:36:25Z", "author": {"login": "stian-sandvold"}, "path": "dhis-2/dhis-services/dhis-service-analytics/src/main/java/org/hisp/dhis/analytics/event/data/DefaultEventDataQueryService.java", "diffHunk": "@@ -326,24 +327,14 @@ public String getCoordinateField( String coordinateField )\n \n         if ( dataElement != null )\n         {\n-            if ( ValueType.COORDINATE != dataElement.getValueType() )\n-            {\n-                throwIllegalQueryEx( ErrorCode.E7219, coordinateField );\n-            }\n-\n-            return dataElement.getUid();\n+            return getCoordinateFieldOrFail( dataElement.getValueType(), coordinateField, ErrorCode.E7219);\n         }\n \n         TrackedEntityAttribute attribute = attributeService.getTrackedEntityAttribute( coordinateField );\n \n         if ( attribute != null )\n         {\n-            if ( ValueType.COORDINATE != attribute.getValueType() )\n-            {\n-                throwIllegalQueryEx( ErrorCode.E7220, coordinateField );\n-            }\n-\n-            return attribute.getUid();\n+            return getCoordinateFieldOrFail( attribute.getValueType(), coordinateField, ErrorCode.E7220);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f28e03fc66dd70330d27e42abf03433cefdedfb3"}, "originalPosition": 31}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY1OTI0MzMx", "url": "https://github.com/dhis2/dhis2-core/pull/5912#pullrequestreview-465924331", "createdAt": "2020-08-12T13:38:31Z", "commit": {"oid": "f28e03fc66dd70330d27e42abf03433cefdedfb3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxMzozODozMVrOG_htUg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxMzozODozMVrOG_htUg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTI2NTc0Ng==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    assertThat( whereClause, containsString( \"and ax.\\\"\" + deA.getUid() + \"_geom\" + \"\\\" is not null\" ));\n          \n          \n            \n                    assertThat( whereClause, containsString( \"and ax.\\\"\" + deA.getUid() + \"_geom\" + \"\\\" is not null\" ) );", "url": "https://github.com/dhis2/dhis2-core/pull/5912#discussion_r469265746", "createdAt": "2020-08-12T13:38:31Z", "author": {"login": "stian-sandvold"}, "path": "dhis-2/dhis-services/dhis-service-analytics/src/test/java/org/hisp/dhis/analytics/event/data/AbstractJdbcEventAnalyticsManagerTest.java", "diffHunk": "@@ -224,18 +236,86 @@ public void verifyGetAggregateClauseWithProgramIndicatorAndCustomAggregationType\n     public void verifyGetAggregateClauseWithEnrollmentDimension()\n     {\n         ProgramIndicator programIndicator = createProgramIndicator( 'A', programA, \"9.0\", null );\n-        programIndicator.setAnalyticsType(AnalyticsType.ENROLLMENT);\n+        programIndicator.setAnalyticsType( AnalyticsType.ENROLLMENT );\n         EventQueryParams params = new EventQueryParams.Builder( createRequestParams() )\n             .withProgramIndicator( programIndicator )\n             .build();\n \n         when( programIndicatorService.getAnalyticsSql( programIndicator.getExpression(), programIndicator,\n-                params.getEarliestStartDate(), params.getLatestEndDate() ) )\n+            params.getEarliestStartDate(), params.getLatestEndDate() ) )\n                 .thenReturn( \"select * from table\" );\n \n         String clause = subject.getAggregateClause( params );\n \n         assertThat( clause, is( \"avg(select * from table)\" ) );\n     }\n \n+    @Test\n+    public void verifyGetColumnsWithAttributeOrgUnitTypeAndCoordinatesReturnsFetchesCoordinatesFromOrgUnite()\n+    {\n+        // Given\n+\n+        DataElement deA = createDataElement( 'A', ValueType.ORGANISATION_UNIT, AggregationType.NONE );\n+        DimensionalObject periods = new BaseDimensionalObject( DimensionalObject.PERIOD_DIM_ID, DimensionType.PERIOD,\n+            Lists.newArrayList( MonthlyPeriodType.getPeriodFromIsoString( \"201701\" ) ) );\n+\n+        DimensionalObject orgUnits = new BaseDimensionalObject( DimensionalObject.ORGUNIT_DIM_ID,\n+            DimensionType.ORGANISATION_UNIT, \"ouA\", Lists.newArrayList( createOrganisationUnit( 'A' ) ) );\n+\n+        QueryItem qiA = new QueryItem( deA, null, deA.getValueType(), deA.getAggregationType(), null );\n+\n+        // When\n+        EventQueryParams params = new EventQueryParams.Builder()\n+            .addDimension( periods )\n+            .addDimension( orgUnits )\n+            .addItem( qiA )\n+            .withCoordinateField( deA.getUid() )\n+            .withSkipData( true )\n+            .withSkipMeta( false )\n+            .build();\n+\n+        final List<String> columns = this.subject.getSelectColumns( params );\n+\n+        // Then\n+\n+        assertThat( columns, hasSize( 3 ) );\n+        assertThat( columns, containsInAnyOrder( \"ax.\\\"pe\\\"\", \"ax.\\\"ou\\\"\",\n+            \"'[' || round(ST_X(ST_Centroid(\\\"\" + deA.getUid() + \"_geom\"\n+                + \"\\\"))::numeric, 6) || ',' || round(ST_Y(ST_Centroid(\\\"\" + deA.getUid() + \"_geom\"\n+                + \"\\\"))::numeric, 6) || ']' as \\\"\" + deA.getUid() + \"_geom\" + \"\\\"\" ) );\n+    }\n+\n+    @Test\n+    public void verifyGetWhereClauseWithAttributeOrgUnitTypeAndCoordinatesReturnsFetchesCoordinatesFromOrgUnite()\n+    {\n+        // Given\n+\n+        DataElement deA = createDataElement( 'A', ValueType.ORGANISATION_UNIT, AggregationType.NONE );\n+        DimensionalObject periods = new BaseDimensionalObject( DimensionalObject.PERIOD_DIM_ID, DimensionType.PERIOD,\n+                Lists.newArrayList( MonthlyPeriodType.getPeriodFromIsoString( \"201701\" ) ) );\n+\n+        DimensionalObject orgUnits = new BaseDimensionalObject( DimensionalObject.ORGUNIT_DIM_ID,\n+                DimensionType.ORGANISATION_UNIT, \"ouA\", Lists.newArrayList( createOrganisationUnit( 'A' ) ) );\n+\n+        QueryItem qiA = new QueryItem( deA, null, deA.getValueType(), deA.getAggregationType(), null );\n+\n+        // When\n+        EventQueryParams params = new EventQueryParams.Builder()\n+                .addDimension( periods )\n+                .addDimension( orgUnits )\n+                .addItem( qiA )\n+                .withCoordinateField( deA.getUid() )\n+                .withSkipData( true )\n+                .withSkipMeta( false )\n+                .withStartDate(new Date() )\n+                .withEndDate( new Date() )\n+                // the not null condition is only triggered by this flag (or withGeometry) being true\n+                .withCoordinatesOnly( true )\n+                .build();\n+\n+        final String whereClause = this.subject.getWhereClause( params );\n+\n+        // Then\n+        assertThat( whereClause, containsString( \"and ax.\\\"\" + deA.getUid() + \"_geom\" + \"\\\" is not null\" ));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f28e03fc66dd70330d27e42abf03433cefdedfb3"}, "originalPosition": 161}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f28e03fc66dd70330d27e42abf03433cefdedfb3", "author": {"user": {"login": "luciano-fiandesio", "name": "Luciano Fiandesio"}}, "url": "https://github.com/dhis2/dhis2-core/commit/f28e03fc66dd70330d27e42abf03433cefdedfb3", "committedDate": "2020-08-12T09:06:40Z", "message": "test: add more unit tests"}, "afterCommit": {"oid": "9162ae788eadacb7fbbf1f2359d9bebe6ebe687a", "author": {"user": {"login": "luciano-fiandesio", "name": "Luciano Fiandesio"}}, "url": "https://github.com/dhis2/dhis2-core/commit/9162ae788eadacb7fbbf1f2359d9bebe6ebe687a", "committedDate": "2020-08-12T14:14:21Z", "message": "rebased after conflicts + resolve review comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a2f289b251d5f1c29c74a9e4877e0ff367a9714b", "author": {"user": {"login": "luciano-fiandesio", "name": "Luciano Fiandesio"}}, "url": "https://github.com/dhis2/dhis2-core/commit/a2f289b251d5f1c29c74a9e4877e0ff367a9714b", "committedDate": "2020-08-13T07:01:34Z", "message": "feat: fetch Org Unit coordinate in event analytics query\n\nAllows to return the Org Unit coordinates of an Event attribute, if present.\n\nGiven: `S33cRBsnXPo` as Event attribute UID of type `OrganizationalUnit` with name \"Inpatient Place of Infection\"\n\nGiven the following query: `/api/34/analytics/events/query/eBAyeGv0exc.json?dimension=ou:ImspTQPwCqd&dimension=S33cRBsnXPo&filter=pe:THIS_MONTH&stage=Zj7UnCAulEk&coordinatesOnly=true&coordinateField=S33cRBsnXPo`\n\nThe system will return the following payload:\n\n```\n{\n\t\"headers\": [\n\t\t. . .\n\t\t{\n\t      \"name\": \"S33cRBsnXPo\",\n\t      \"column\": \"Inpatient Place of Infection\",\n\t      \"valueType\": \"COORDINATE\",\n\t      \"type\": \"org.opengis.geometry.primitive.Point\",\n\t      \"hidden\": false,\n\t      \"meta\": true\n    \t}\n\n\t],\n\t\"rows\": [\n    [\n      \"BAU1evNg3ua\",\n      \"Zj7UnCAulEk\",\n      \"2020-08-11 00:00:00.0\",\n      \"{\\\"type\\\":\\\"Point\\\",\\\"coordinates\\\":[-11.840027,8.640035]}\",\n      \"-11.840027\",\n      \"8.640035\",\n      \"Ngelehun CHC\",\n      \"OU_559\",\n      \"DiszpKrYNg8\",\n      \"[-12.387800,8.055700]\"\n    ]\n  ]\n}\n```\n\nThe type of value is always `org.opengis.geometry.primitive.Point`. If the Org Unit has a geometry which is not a Point, the system will return the centre point of the shape (using the `ST_Centroid` function in Postgres).\n\nmissing:\n\t- tests\n\nref: DHIS2-3351"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "343215d73b8aa3c43d4f5eb177050ee588320b58", "author": {"user": {"login": "luciano-fiandesio", "name": "Luciano Fiandesio"}}, "url": "https://github.com/dhis2/dhis2-core/commit/343215d73b8aa3c43d4f5eb177050ee588320b58", "committedDate": "2020-08-13T07:01:34Z", "message": "test: add more unit tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6c6b72b86cacf8b82c62ecdf397d1defb1fa76e0", "author": {"user": {"login": "luciano-fiandesio", "name": "Luciano Fiandesio"}}, "url": "https://github.com/dhis2/dhis2-core/commit/6c6b72b86cacf8b82c62ecdf397d1defb1fa76e0", "committedDate": "2020-08-13T07:01:34Z", "message": "rebased after conflicts + resolve review comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e59db06ad0477dd991a392c4894361c80872270f", "author": {"user": {"login": "luciano-fiandesio", "name": "Luciano Fiandesio"}}, "url": "https://github.com/dhis2/dhis2-core/commit/e59db06ad0477dd991a392c4894361c80872270f", "committedDate": "2020-08-13T07:01:34Z", "message": "fix unit test after rebase/fix conflicts"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "df3d6b2899e2a0971d75c86d5a1c28e960bf7fb3", "author": {"user": {"login": "luciano-fiandesio", "name": "Luciano Fiandesio"}}, "url": "https://github.com/dhis2/dhis2-core/commit/df3d6b2899e2a0971d75c86d5a1c28e960bf7fb3", "committedDate": "2020-08-12T15:51:03Z", "message": "fix unit test after rebase/fix conflicts"}, "afterCommit": {"oid": "e59db06ad0477dd991a392c4894361c80872270f", "author": {"user": {"login": "luciano-fiandesio", "name": "Luciano Fiandesio"}}, "url": "https://github.com/dhis2/dhis2-core/commit/e59db06ad0477dd991a392c4894361c80872270f", "committedDate": "2020-08-13T07:01:34Z", "message": "fix unit test after rebase/fix conflicts"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc5NDUwODM2", "url": "https://github.com/dhis2/dhis2-core/pull/5912#pullrequestreview-479450836", "createdAt": "2020-09-01T06:59:11Z", "commit": {"oid": "e59db06ad0477dd991a392c4894361c80872270f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2604, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}