{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg4MDYxMjM5", "number": 6163, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQwODoyMzoyNlrOEl-Zbw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQwODoyNDoxOFrOEl-avw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4MjU1MDg3OnYy", "diffSide": "RIGHT", "path": "dhis-2/dhis-services/dhis-service-program-rule/src/main/java/org/hisp/dhis/programrule/ProgramRuleDeletionHandler.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQwODoyMzoyNlrOHVvPCA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQwODoyMzoyNlrOHVvPCA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjU1NjA0MA==", "bodyText": "Minor: Might be slightly more compact and avoid to stream twice, like this:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                @Override\n          \n          \n            \n                public String allowDeleteProgramStage( ProgramStage programStage )\n          \n          \n            \n                {\n          \n          \n            \n                    List<ProgramRule> programRuleVariables = programRuleService\n          \n          \n            \n                        .getProgramRule( programStage.getProgram() )\n          \n          \n            \n                        .stream()\n          \n          \n            \n                        .filter( pr -> isLinkedToProgramStage( programStage, pr ) )\n          \n          \n            \n                        .collect( Collectors.toList() );\n          \n          \n            \n            \n          \n          \n            \n                    if ( programRuleVariables.isEmpty() )\n          \n          \n            \n                    {\n          \n          \n            \n                        return null;\n          \n          \n            \n                    }\n          \n          \n            \n            \n          \n          \n            \n                    return programRuleVariables.stream()\n          \n          \n            \n                        .map( BaseIdentifiableObject::getName )\n          \n          \n            \n                        .collect( Collectors.joining( \", \" ) );\n          \n          \n            \n                }\n          \n          \n            \n                @Override\n          \n          \n            \n                public String allowDeleteProgramStage( ProgramStage programStage )\n          \n          \n            \n                {\n          \n          \n            \n                    String programRuleVariables = programRuleService\n          \n          \n            \n                        .getProgramRule( programStage.getProgram() )\n          \n          \n            \n                        .stream()\n          \n          \n            \n                        .filter( pr -> isLinkedToProgramStage( programStage, pr ) )\n          \n          \n            \n                        .map( BaseIdentifiableObject::getName )\n          \n          \n            \n                        .collect( Collectors.joining( \", \" ) );\n          \n          \n            \n            \n          \n          \n            \n                    return StringUtils.isBlank( programRuleVariables ) ? null : programRuleVariables;\n          \n          \n            \n                }", "url": "https://github.com/dhis2/dhis2-core/pull/6163#discussion_r492556040", "createdAt": "2020-09-22T08:23:26Z", "author": {"login": "gnespolino"}, "path": "dhis-2/dhis-services/dhis-service-program-rule/src/main/java/org/hisp/dhis/programrule/ProgramRuleDeletionHandler.java", "diffHunk": "@@ -72,4 +78,31 @@ public void deleteProgram( Program program )\n             programRuleService.deleteProgramRule( programRule );\n         }\n     }\n+\n+    @Override\n+    public String allowDeleteProgramStage( ProgramStage programStage )\n+    {\n+        List<ProgramRule> programRuleVariables = programRuleService\n+            .getProgramRule( programStage.getProgram() )\n+            .stream()\n+            .filter( pr -> isLinkedToProgramStage( programStage, pr ) )\n+            .collect( Collectors.toList() );\n+\n+        if ( programRuleVariables.isEmpty() )\n+        {\n+            return null;\n+        }\n+\n+        return programRuleVariables.stream()\n+            .map( BaseIdentifiableObject::getName )\n+            .collect( Collectors.joining( \", \" ) );\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6f752745e476d1421f775ef5044315ab564d954a"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4MjU1NDIzOnYy", "diffSide": "RIGHT", "path": "dhis-2/dhis-services/dhis-service-program-rule/src/main/java/org/hisp/dhis/programrule/ProgramRuleVariableDeletionHandler.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQwODoyNDoxOFrOHVvRFQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQwODo0NTo0MFrOHVwFuQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjU1NjU2NQ==", "bodyText": "Same comment as before.", "url": "https://github.com/dhis2/dhis2-core/pull/6163#discussion_r492556565", "createdAt": "2020-09-22T08:24:18Z", "author": {"login": "gnespolino"}, "path": "dhis-2/dhis-services/dhis-service-program-rule/src/main/java/org/hisp/dhis/programrule/ProgramRuleVariableDeletionHandler.java", "diffHunk": "@@ -61,6 +67,25 @@ protected String getClassName()\n     {\n         return ProgramRuleVariable.class.getSimpleName();\n     }\n+\n+    @Override\n+    public String allowDeleteProgramStage( ProgramStage programStage )\n+    {\n+        List<ProgramRuleVariable> programRuleVariables = programRuleVariableService\n+            .getProgramRuleVariable( programStage.getProgram() )\n+            .stream()\n+            .filter( prv -> Objects.equals( prv.getProgramStage(), programStage ) )\n+            .collect( Collectors.toList() );\n+\n+        if ( programRuleVariables.isEmpty() )\n+        {\n+            return null;\n+        }\n+\n+        return programRuleVariables.stream()\n+            .map( BaseIdentifiableObject::getName )\n+            .collect( Collectors.joining( \", \" ) );\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6f752745e476d1421f775ef5044315ab564d954a"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjU3MDA0MQ==", "bodyText": "Done", "url": "https://github.com/dhis2/dhis2-core/pull/6163#discussion_r492570041", "createdAt": "2020-09-22T08:45:40Z", "author": {"login": "enricocolasante"}, "path": "dhis-2/dhis-services/dhis-service-program-rule/src/main/java/org/hisp/dhis/programrule/ProgramRuleVariableDeletionHandler.java", "diffHunk": "@@ -61,6 +67,25 @@ protected String getClassName()\n     {\n         return ProgramRuleVariable.class.getSimpleName();\n     }\n+\n+    @Override\n+    public String allowDeleteProgramStage( ProgramStage programStage )\n+    {\n+        List<ProgramRuleVariable> programRuleVariables = programRuleVariableService\n+            .getProgramRuleVariable( programStage.getProgram() )\n+            .stream()\n+            .filter( prv -> Objects.equals( prv.getProgramStage(), programStage ) )\n+            .collect( Collectors.toList() );\n+\n+        if ( programRuleVariables.isEmpty() )\n+        {\n+            return null;\n+        }\n+\n+        return programRuleVariables.stream()\n+            .map( BaseIdentifiableObject::getName )\n+            .collect( Collectors.joining( \", \" ) );\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjU1NjU2NQ=="}, "originalCommit": {"oid": "6f752745e476d1421f775ef5044315ab564d954a"}, "originalPosition": 39}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3863, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}