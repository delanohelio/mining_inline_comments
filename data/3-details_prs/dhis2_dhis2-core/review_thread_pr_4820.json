{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcxMzk0NTM1", "number": 4820, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQxNTozNDoxMFrODdYElw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQxNTozNDo1NlrODdYFtQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyMTI5Njg3OnYy", "diffSide": "RIGHT", "path": "dhis-2/dhis-api/src/main/java/org/hisp/dhis/reporttable/ReportTable.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQxNTozNDoxMFrOFl8R9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQxNTozNDoxMFrOFl8R9A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTMyOTI2OA==", "bodyText": "Added some preventive code in case the database data/rows are inconsistent, ie: contains wrong sort_order or no columns/rows at all (depending on the Visualization)", "url": "https://github.com/dhis2/dhis2-core/pull/4820#discussion_r375329268", "createdAt": "2020-02-05T15:34:10Z", "author": {"login": "maikelarabori"}, "path": "dhis-2/dhis-api/src/main/java/org/hisp/dhis/reporttable/ReportTable.java", "diffHunk": "@@ -387,21 +393,35 @@ public void populateGridColumnsAndRows( Date date, User user,\n     }\r\n \r\n     @Override\r\n-    public void populateAnalyticalProperties()\r\n-    {\r\n-        for ( String column : columnDimensions )\r\n+    public void populateAnalyticalProperties() {\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "381fdab739addc69afcf5e537ea449eb059c708a"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyMTI5OTczOnYy", "diffSide": "RIGHT", "path": "dhis-2/dhis-api/src/main/java/org/hisp/dhis/reporttable/ReportTable.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQxNTozNDo1NlrOFl8Tzg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQxNTozNDo1NlrOFl8Tzg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTMyOTc0Mg==", "bodyText": "This kind of code is needed so the e2e tests can pass, forcing this field as mandatory in the Schema.", "url": "https://github.com/dhis2/dhis2-core/pull/4820#discussion_r375329742", "createdAt": "2020-02-05T15:34:56Z", "author": {"login": "maikelarabori"}, "path": "dhis-2/dhis-api/src/main/java/org/hisp/dhis/reporttable/ReportTable.java", "diffHunk": "@@ -1110,4 +1130,21 @@ public ReportTable setGridTitle( String gridTitle )\n         this.gridTitle = gridTitle;\r\n         return this;\r\n     }\r\n+    \r\n+    // -------------------------------------------------------------------------\r\n+    // Temporary overriding getters so the Schema properties are read as mandatory.\r\n+    // Required in order to enable backward support during the migration to the\r\n+    // new Visualization API\r\n+    // -------------------------------------------------------------------------\r\n+\r\n+    @Override\r\n+    @JsonProperty\r\n+    @JacksonXmlProperty( isAttribute = true )\r\n+    @Description( \"The name of this Object. Required and unique.\" )\r\n+    @PropertyRange( min = 1 )\r\n+    @Property( required = TRUE )\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "381fdab739addc69afcf5e537ea449eb059c708a"}, "originalPosition": 87}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3566, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}