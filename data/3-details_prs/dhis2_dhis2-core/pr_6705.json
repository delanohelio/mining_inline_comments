{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIyNTE0Nzkw", "number": 6705, "title": "fix: [DHIS2-9894] Assign enrollment to event when program is  without\u2026", "bodyText": "\u2026 registration", "createdAt": "2020-11-17T15:52:47Z", "url": "https://github.com/dhis2/dhis2-core/pull/6705", "merged": true, "mergeCommit": {"oid": "f1aea92d544cf8cd82eb788e4029bff612b99f95"}, "closed": true, "closedAt": "2020-11-18T08:44:59Z", "author": {"login": "enricocolasante"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABddboB-AH2gAyNTIyNTE0NzkwOmJmZDY3OGU2NWEzZWMzMjRkYjczZjdmZDRjZjBlZDkyMTczY2JlOTI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABddoPpeAH2gAyNTIyNTE0NzkwOmQxNDI5MWQ5ZjJiOGY3ZTc3OWYxMjM1MTFhZWZiMzQxNTAzYjdkYTY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "bfd678e65a3ec324db73f7fd4cf0ed92173cbe92", "author": {"user": {"login": "enricocolasante", "name": "Enrico Colasante"}}, "url": "https://github.com/dhis2/dhis2-core/commit/bfd678e65a3ec324db73f7fd4cf0ed92173cbe92", "committedDate": "2020-11-17T15:52:12Z", "message": "fix: [DHIS2-9894] Assign enrollment to event when program is  without registration"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMyNTY2Mzg3", "url": "https://github.com/dhis2/dhis2-core/pull/6705#pullrequestreview-532566387", "createdAt": "2020-11-17T16:40:16Z", "commit": {"oid": "bfd678e65a3ec324db73f7fd4cf0ed92173cbe92"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QxNjo0MDoxNlrOH0-avg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QxNjo0MDoxNlrOH0-avg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTMxMDY1NA==", "bodyText": "Code style", "url": "https://github.com/dhis2/dhis2-core/pull/6705#discussion_r525310654", "createdAt": "2020-11-17T16:40:16Z", "author": {"login": "luciano-fiandesio"}, "path": "dhis-2/dhis-services/dhis-service-tracker/src/main/java/org/hisp/dhis/tracker/preprocess/EventWithoutRegistrationPreProcessor.java", "diffHunk": "@@ -0,0 +1,72 @@\n+package org.hisp.dhis.tracker.preprocess;\n+\n+/*\n+ * Copyright (c) 2004-2020, University of Oslo\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ * Redistributions of source code must retain the above copyright notice, this\n+ * list of conditions and the following disclaimer.\n+ *\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following disclaimer in the documentation\n+ * and/or other materials provided with the distribution.\n+ * Neither the name of the HISP project nor the names of its contributors may\n+ * be used to endorse or promote products derived from this software without\n+ * specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n+ * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+\n+import org.apache.commons.lang3.StringUtils;\n+import org.hisp.dhis.program.ProgramInstance;\n+import org.hisp.dhis.tracker.TrackerIdScheme;\n+import org.hisp.dhis.tracker.bundle.TrackerBundle;\n+import org.hisp.dhis.tracker.domain.Enrollment;\n+import org.hisp.dhis.tracker.domain.Event;\n+import org.hisp.dhis.tracker.preheat.ReferenceTrackerEntity;\n+import org.hisp.dhis.tracker.preheat.TrackerPreheat;\n+import org.springframework.stereotype.Component;\n+\n+import java.util.List;\n+import java.util.Optional;\n+\n+import static java.util.Collections.singletonList;\n+\n+/**\n+ * This preprocessor is responsible for setting the ProgramInstance UID on\n+ * an Event if the Program that the event belongs is of type 'WITHOUT_REGISTRATION'\n+ *\n+ * @author Enrico Colasante\n+ */\n+@Component\n+public class EventWithoutRegistrationPreProcessor\n+    implements BundlePreProcessor\n+{\n+    @Override\n+    public void process( TrackerBundle bundle )\n+    {\n+        for ( Event event : bundle.getEvents() )\n+        {\n+            // If the event program is missing, it will be captured later by validation\n+            if ( !StringUtils.isEmpty( event.getProgram() ) )\n+            {\n+                ProgramInstance enrollment = bundle.getPreheat().getProgramInstancesWithoutRegistration( event.getProgram() );\n+\n+                if (enrollment != null ) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bfd678e65a3ec324db73f7fd4cf0ed92173cbe92"}, "originalPosition": 66}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMyNTgyNjI3", "url": "https://github.com/dhis2/dhis2-core/pull/6705#pullrequestreview-532582627", "createdAt": "2020-11-17T16:56:46Z", "commit": {"oid": "bfd678e65a3ec324db73f7fd4cf0ed92173cbe92"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMzMTM4MzM1", "url": "https://github.com/dhis2/dhis2-core/pull/6705#pullrequestreview-533138335", "createdAt": "2020-11-18T06:33:55Z", "commit": {"oid": "bfd678e65a3ec324db73f7fd4cf0ed92173cbe92"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMzMTM4NDc2", "url": "https://github.com/dhis2/dhis2-core/pull/6705#pullrequestreview-533138476", "createdAt": "2020-11-18T06:34:16Z", "commit": {"oid": "bfd678e65a3ec324db73f7fd4cf0ed92173cbe92"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQwNjozNDoxNlrOH1e-Hg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQwNjozNDoxNlrOH1e-Hg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTg0Mzk5OA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            if (enrollment != null ) {\n          \n          \n            \n                            if ( enrollment != null ) {", "url": "https://github.com/dhis2/dhis2-core/pull/6705#discussion_r525843998", "createdAt": "2020-11-18T06:34:16Z", "author": {"login": "stian-sandvold"}, "path": "dhis-2/dhis-services/dhis-service-tracker/src/main/java/org/hisp/dhis/tracker/preprocess/EventWithoutRegistrationPreProcessor.java", "diffHunk": "@@ -0,0 +1,72 @@\n+package org.hisp.dhis.tracker.preprocess;\n+\n+/*\n+ * Copyright (c) 2004-2020, University of Oslo\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ * Redistributions of source code must retain the above copyright notice, this\n+ * list of conditions and the following disclaimer.\n+ *\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following disclaimer in the documentation\n+ * and/or other materials provided with the distribution.\n+ * Neither the name of the HISP project nor the names of its contributors may\n+ * be used to endorse or promote products derived from this software without\n+ * specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n+ * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+\n+import org.apache.commons.lang3.StringUtils;\n+import org.hisp.dhis.program.ProgramInstance;\n+import org.hisp.dhis.tracker.TrackerIdScheme;\n+import org.hisp.dhis.tracker.bundle.TrackerBundle;\n+import org.hisp.dhis.tracker.domain.Enrollment;\n+import org.hisp.dhis.tracker.domain.Event;\n+import org.hisp.dhis.tracker.preheat.ReferenceTrackerEntity;\n+import org.hisp.dhis.tracker.preheat.TrackerPreheat;\n+import org.springframework.stereotype.Component;\n+\n+import java.util.List;\n+import java.util.Optional;\n+\n+import static java.util.Collections.singletonList;\n+\n+/**\n+ * This preprocessor is responsible for setting the ProgramInstance UID on\n+ * an Event if the Program that the event belongs is of type 'WITHOUT_REGISTRATION'\n+ *\n+ * @author Enrico Colasante\n+ */\n+@Component\n+public class EventWithoutRegistrationPreProcessor\n+    implements BundlePreProcessor\n+{\n+    @Override\n+    public void process( TrackerBundle bundle )\n+    {\n+        for ( Event event : bundle.getEvents() )\n+        {\n+            // If the event program is missing, it will be captured later by validation\n+            if ( !StringUtils.isEmpty( event.getProgram() ) )\n+            {\n+                ProgramInstance enrollment = bundle.getPreheat().getProgramInstancesWithoutRegistration( event.getProgram() );\n+\n+                if (enrollment != null ) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bfd678e65a3ec324db73f7fd4cf0ed92173cbe92"}, "originalPosition": 66}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d14291d9f2b8f7e779f123511aefb341503b7da6", "author": {"user": {"login": "stian-sandvold", "name": "Stian Sandvold"}}, "url": "https://github.com/dhis2/dhis2-core/commit/d14291d9f2b8f7e779f123511aefb341503b7da6", "committedDate": "2020-11-18T06:34:20Z", "message": "Update dhis-2/dhis-services/dhis-service-tracker/src/main/java/org/hisp/dhis/tracker/preprocess/EventWithoutRegistrationPreProcessor.java"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2280, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}