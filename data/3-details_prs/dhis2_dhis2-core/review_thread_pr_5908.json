{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY1NjExODEz", "number": 5908, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQwNDo1MzozNlrOEXDaEg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QwNzoxNzoyOVrOEX7SRQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyNjA4NTMwOnYy", "diffSide": "RIGHT", "path": "dhis-2/dhis-api/src/main/java/org/hisp/dhis/program/ProgramTrackedEntityAttributeStore.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQwNDo1MzozNlrOG-oUjw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQwODoyMToyMlrOG-tZaQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODMyNTUxOQ==", "bodyText": "Please add Javadoc\nI would rename this method to getAttributes and explain the ACL part in the java docs", "url": "https://github.com/dhis2/dhis2-core/pull/5908#discussion_r468325519", "createdAt": "2020-08-11T04:53:36Z", "author": {"login": "luciano-fiandesio"}, "path": "dhis-2/dhis-api/src/main/java/org/hisp/dhis/program/ProgramTrackedEntityAttributeStore.java", "diffHunk": "@@ -39,4 +42,6 @@\n     extends IdentifiableObjectStore<ProgramTrackedEntityAttribute>\n {\n     ProgramTrackedEntityAttribute get( Program program, TrackedEntityAttribute attribute );\n+\n+    List<TrackedEntityAttribute> getAttributesByProgramsWithDataRead( List<Program> programs, User user );", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dff4a8282affd2f551fd8600e299506d164a6483"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODQwODY4MQ==", "bodyText": "Fixed and added unit test", "url": "https://github.com/dhis2/dhis2-core/pull/5908#discussion_r468408681", "createdAt": "2020-08-11T08:21:22Z", "author": {"login": "vietnguyen"}, "path": "dhis-2/dhis-api/src/main/java/org/hisp/dhis/program/ProgramTrackedEntityAttributeStore.java", "diffHunk": "@@ -39,4 +42,6 @@\n     extends IdentifiableObjectStore<ProgramTrackedEntityAttribute>\n {\n     ProgramTrackedEntityAttribute get( Program program, TrackedEntityAttribute attribute );\n+\n+    List<TrackedEntityAttribute> getAttributesByProgramsWithDataRead( List<Program> programs, User user );", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODMyNTUxOQ=="}, "originalCommit": {"oid": "dff4a8282affd2f551fd8600e299506d164a6483"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyNjA4NjA5OnYy", "diffSide": "RIGHT", "path": "dhis-2/dhis-api/src/main/java/org/hisp/dhis/trackedentity/TrackedEntityTypeAttributeStore.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQwNDo1NDowMlrOG-oVCA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQwODoyMToxMVrOG-tZBA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODMyNTY0MA==", "bodyText": "Please add Javadoc\nI would rename this method to getAttributes and explain the ACL part in the java docs", "url": "https://github.com/dhis2/dhis2-core/pull/5908#discussion_r468325640", "createdAt": "2020-08-11T04:54:02Z", "author": {"login": "luciano-fiandesio"}, "path": "dhis-2/dhis-api/src/main/java/org/hisp/dhis/trackedentity/TrackedEntityTypeAttributeStore.java", "diffHunk": "@@ -28,13 +28,14 @@\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n \n-import org.hisp.dhis.render.type.SectionRenderingObject;\n+import org.hisp.dhis.common.IdentifiableObjectStore;\n+import org.hisp.dhis.program.ProgramTrackedEntityAttribute;\n+import org.hisp.dhis.user.User;\n \n-public class SectionRenderTypeDeserialize\n-    extends AbstractDeviceRenderTypeMapDeserializer<SectionRenderingObject>\n+import java.util.List;\n+\n+public interface TrackedEntityTypeAttributeStore\n+    extends IdentifiableObjectStore<TrackedEntityTypeAttribute>\n {\n-    public SectionRenderTypeDeserialize()\n-    {\n-        super( SectionRenderingObject::new );\n-    }\n+    List<TrackedEntityAttribute> getAttributesByTrackedEntityTypesWithDataRead( List<TrackedEntityType> trackedEntityTypes, User user );", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dff4a8282affd2f551fd8600e299506d164a6483"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODQwODU4MA==", "bodyText": "Fixed and added unit test", "url": "https://github.com/dhis2/dhis2-core/pull/5908#discussion_r468408580", "createdAt": "2020-08-11T08:21:11Z", "author": {"login": "vietnguyen"}, "path": "dhis-2/dhis-api/src/main/java/org/hisp/dhis/trackedentity/TrackedEntityTypeAttributeStore.java", "diffHunk": "@@ -28,13 +28,14 @@\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n \n-import org.hisp.dhis.render.type.SectionRenderingObject;\n+import org.hisp.dhis.common.IdentifiableObjectStore;\n+import org.hisp.dhis.program.ProgramTrackedEntityAttribute;\n+import org.hisp.dhis.user.User;\n \n-public class SectionRenderTypeDeserialize\n-    extends AbstractDeviceRenderTypeMapDeserializer<SectionRenderingObject>\n+import java.util.List;\n+\n+public interface TrackedEntityTypeAttributeStore\n+    extends IdentifiableObjectStore<TrackedEntityTypeAttribute>\n {\n-    public SectionRenderTypeDeserialize()\n-    {\n-        super( SectionRenderingObject::new );\n-    }\n+    List<TrackedEntityAttribute> getAttributesByTrackedEntityTypesWithDataRead( List<TrackedEntityType> trackedEntityTypes, User user );", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODMyNTY0MA=="}, "originalCommit": {"oid": "dff4a8282affd2f551fd8600e299506d164a6483"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyNjA5MTA2OnYy", "diffSide": "LEFT", "path": "dhis-2/dhis-support/dhis-support-hibernate/src/main/java/org/hisp/dhis/hibernate/jsonb/type/JsonDeviceRenderTypeMap.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQwNDo1Njo1N1rOG-oX0g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQwODoyMDo0N1rOG-tYKQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODMyNjM1NA==", "bodyText": "I'm not very familiar with this renderer, but this look like a drastic change. Can you comment what has been done here?", "url": "https://github.com/dhis2/dhis2-core/pull/5908#discussion_r468326354", "createdAt": "2020-08-11T04:56:57Z", "author": {"login": "luciano-fiandesio"}, "path": "dhis-2/dhis-support/dhis-support-hibernate/src/main/java/org/hisp/dhis/hibernate/jsonb/type/JsonDeviceRenderTypeMap.java", "diffHunk": "@@ -28,38 +28,32 @@\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n \n-import com.fasterxml.jackson.core.JsonParser;\n-import com.fasterxml.jackson.databind.JsonDeserializer;\n+import com.fasterxml.jackson.databind.JavaType;\n import org.hisp.dhis.render.DeviceRenderTypeMap;\n+import org.hisp.dhis.render.RenderDevice;\n+import org.hisp.dhis.render.type.RenderingObject;\n \n import java.io.IOException;\n+import java.util.LinkedHashMap;\n import java.util.Properties;\n \n public class JsonDeviceRenderTypeMap extends JsonBinaryType\n {\n-    private Class<? extends JsonDeserializer> deserializer;\n+    private Class<? extends RenderingObject> renderType;\n \n     @Override\n-    protected Object convertJsonToObject( String content )\n+    protected JavaType getResultingJavaType( Class<?> returnedClass )\n     {\n-        try", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dff4a8282affd2f551fd8600e299506d164a6483"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODQwODM2MQ==", "bodyText": "In an attempt to fix the issue, I have removed AbstractDeviceRenderTypeMapDeserializer which I have added to support XML deserialization of RenderType. So the content of the method JsonDeviceRenderTypeMap.convertMapToObject() is actually copied from the deserializer. Eventually even if this doesn't solve the issue, I think it reduces the complexity of the code.\nThis is covered by the test MetadataImportServiceTest.testSerializeDeviceRenderTypeMap()", "url": "https://github.com/dhis2/dhis2-core/pull/5908#discussion_r468408361", "createdAt": "2020-08-11T08:20:47Z", "author": {"login": "vietnguyen"}, "path": "dhis-2/dhis-support/dhis-support-hibernate/src/main/java/org/hisp/dhis/hibernate/jsonb/type/JsonDeviceRenderTypeMap.java", "diffHunk": "@@ -28,38 +28,32 @@\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n \n-import com.fasterxml.jackson.core.JsonParser;\n-import com.fasterxml.jackson.databind.JsonDeserializer;\n+import com.fasterxml.jackson.databind.JavaType;\n import org.hisp.dhis.render.DeviceRenderTypeMap;\n+import org.hisp.dhis.render.RenderDevice;\n+import org.hisp.dhis.render.type.RenderingObject;\n \n import java.io.IOException;\n+import java.util.LinkedHashMap;\n import java.util.Properties;\n \n public class JsonDeviceRenderTypeMap extends JsonBinaryType\n {\n-    private Class<? extends JsonDeserializer> deserializer;\n+    private Class<? extends RenderingObject> renderType;\n \n     @Override\n-    protected Object convertJsonToObject( String content )\n+    protected JavaType getResultingJavaType( Class<?> returnedClass )\n     {\n-        try", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODMyNjM1NA=="}, "originalCommit": {"oid": "dff4a8282affd2f551fd8600e299506d164a6483"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyNjA5MjQ3OnYy", "diffSide": "RIGHT", "path": "dhis-2/dhis-services/dhis-service-core/src/main/java/org/hisp/dhis/program/hibernate/HibernateProgramTrackedEntityAttributeStore.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQwNDo1ODowMlrOG-oYrA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQwODoyMTowMlrOG-tYrg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODMyNjU3Mg==", "bodyText": "Do we have a test for this function?", "url": "https://github.com/dhis2/dhis2-core/pull/5908#discussion_r468326572", "createdAt": "2020-08-11T04:58:02Z", "author": {"login": "luciano-fiandesio"}, "path": "dhis-2/dhis-services/dhis-service-core/src/main/java/org/hisp/dhis/program/hibernate/HibernateProgramTrackedEntityAttributeStore.java", "diffHunk": "@@ -66,4 +75,21 @@ public ProgramTrackedEntityAttribute get(Program program, TrackedEntityAttribute\n             .addPredicate( root -> builder.equal( root.get( \"program\" ), program ) )\n             .addPredicate( root -> builder.equal( root.get( \"attribute\" ), attribute ) ) );\n     }\n+\n+    @Override\n+    public List<TrackedEntityAttribute> getAttributesByProgramsWithDataRead( List<Program> programs, User user )", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dff4a8282affd2f551fd8600e299506d164a6483"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODQwODQ5NA==", "bodyText": "Added unit test", "url": "https://github.com/dhis2/dhis2-core/pull/5908#discussion_r468408494", "createdAt": "2020-08-11T08:21:02Z", "author": {"login": "vietnguyen"}, "path": "dhis-2/dhis-services/dhis-service-core/src/main/java/org/hisp/dhis/program/hibernate/HibernateProgramTrackedEntityAttributeStore.java", "diffHunk": "@@ -66,4 +75,21 @@ public ProgramTrackedEntityAttribute get(Program program, TrackedEntityAttribute\n             .addPredicate( root -> builder.equal( root.get( \"program\" ), program ) )\n             .addPredicate( root -> builder.equal( root.get( \"attribute\" ), attribute ) ) );\n     }\n+\n+    @Override\n+    public List<TrackedEntityAttribute> getAttributesByProgramsWithDataRead( List<Program> programs, User user )", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODMyNjU3Mg=="}, "originalCommit": {"oid": "dff4a8282affd2f551fd8600e299506d164a6483"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzNTI0MDM3OnYy", "diffSide": "RIGHT", "path": "dhis-2/dhis-services/dhis-service-core/src/main/java/org/hisp/dhis/trackedentity/DefaultTrackedEntityAttributeService.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QwNzoxNzoyOVrOG_-_4w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QwNzoxNzoyOVrOG_-_4w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTc0NTYzNQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                Collectors.toList()) ));\n          \n          \n            \n                                Collectors.toList() ) ) );", "url": "https://github.com/dhis2/dhis2-core/pull/5908#discussion_r469745635", "createdAt": "2020-08-13T07:17:29Z", "author": {"login": "stian-sandvold"}, "path": "dhis-2/dhis-services/dhis-service-core/src/main/java/org/hisp/dhis/trackedentity/DefaultTrackedEntityAttributeService.java", "diffHunk": "@@ -283,13 +288,20 @@ else if ( trackedEntityAttribute.hasOptionSet() && !trackedEntityAttribute.isVal\n     @Transactional(readOnly = true)\n     public Set<TrackedEntityAttribute> getAllUserReadableTrackedEntityAttributes( User user, List<Program> programs, List<TrackedEntityType> trackedEntityTypes )\n     {\n-        Set<TrackedEntityAttribute> attributes;\n+        Set<TrackedEntityAttribute> attributes = new HashSet<>();\n \n-        attributes = programs.stream().filter( program -> aclService.canDataRead( user, program ) ).collect( Collectors.toList() )\n-            .stream().map( Program::getTrackedEntityAttributes ).flatMap( Collection::stream ).collect( Collectors.toSet() );\n+        if ( programs != null && !programs.isEmpty() )\n+        {\n+            attributes.addAll( programAttributeStore.getAttributes(\n+                programs.stream().filter( program -> aclService.canDataRead( user, program ) ).collect( Collectors.toList()) ) );\n+        }\n \n-        attributes.addAll( trackedEntityTypes.stream().filter( trackedEntityType -> aclService.canDataRead( user, trackedEntityType ) ).collect( Collectors.toList() )\n-            .stream().map( TrackedEntityType::getTrackedEntityAttributes ).flatMap( Collection::stream ).collect( Collectors.toSet() ) );\n+        if ( trackedEntityTypes != null && !trackedEntityTypes.isEmpty() )\n+        {\n+            attributes.addAll( entityTypeAttributeStore.getAttributes(\n+                trackedEntityTypes.stream().filter( trackedEntityType -> aclService.canDataRead( user, trackedEntityType ) ).collect(\n+                    Collectors.toList()) ));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "00e79abb0bc57a4fa7d044431e17cf5ac250d216"}, "originalPosition": 77}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3977, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}