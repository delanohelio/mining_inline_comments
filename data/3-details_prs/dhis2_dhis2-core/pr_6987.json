{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQ0OTYyNzcy", "number": 6987, "title": "Dhis2 10093  - New Tracker Importer GET endpoints", "bodyText": "Ticket includes also other endpoints, so this can be basically be considered as a WIP, but I'd like some review on this.\nAlso, old endpoints had an acl-based fields filtering capability which it's pretty complex to understand and to port into new endpoints. If that's a feature that is still needed we can discuss how to implement it and implement in a separate ticket", "createdAt": "2020-12-23T17:57:48Z", "url": "https://github.com/dhis2/dhis2-core/pull/6987", "merged": true, "mergeCommit": {"oid": "adf7ed76f3dd8d7aa2369e710fc5256a5ae4967f"}, "closed": true, "closedAt": "2021-01-05T11:57:25Z", "author": {"login": "gnespolino"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdo-0wwgH2gAyNTQ0OTYyNzcyOmZiNWJjZmRmNjBjYzM5YTVkMTNiOTg0Y2VkY2I0NjE5MTBhMDQ2MDU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdtIrkBgFqTU2MTY5MTE1Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "fb5bcfdf60cc39a5d13b984cedcb461910a04605", "author": {"user": {"login": "gnespolino", "name": "Giuseppe Nespolino"}}, "url": "https://github.com/dhis2/dhis2-core/commit/fb5bcfdf60cc39a5d13b984cedcb461910a04605", "committedDate": "2020-12-23T13:05:57Z", "message": "feat: DHIS2-10093 renamed TrackerController.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b6e78bbee1408e66562e0cc25ca0699e313b2fbb", "author": {"user": {"login": "gnespolino", "name": "Giuseppe Nespolino"}}, "url": "https://github.com/dhis2/dhis2-core/commit/b6e78bbee1408e66562e0cc25ca0699e313b2fbb", "committedDate": "2020-12-23T17:54:27Z", "message": "feat: DHIS2-10093 added mappers, GET /tracker and GET /tracker/{id} endpoints"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU5NTQ2NjYx", "url": "https://github.com/dhis2/dhis2-core/pull/6987#pullrequestreview-559546661", "createdAt": "2020-12-29T14:05:26Z", "commit": {"oid": "b6e78bbee1408e66562e0cc25ca0699e313b2fbb"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOVQxNDowNToyN1rOIMQCcA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOVQxNDoyMjowNlrOIMQY8w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTcxNjU5Mg==", "bodyText": "I wonder if we could \"merge\" this interface with org.hisp.dhis.tracker.preheat.mappers.PreheatMapper. Perhaps one interface named TrackerEntityMapper. These two interfaces now are doing more or less the same thing.", "url": "https://github.com/dhis2/dhis2-core/pull/6987#discussion_r549716592", "createdAt": "2020-12-29T14:05:27Z", "author": {"login": "luciano-fiandesio"}, "path": "dhis-2/dhis-services/dhis-service-tracker/src/main/java/org/hisp/dhis/tracker/domain/mapper/DomainMapper.java", "diffHunk": "@@ -0,0 +1,45 @@\n+package org.hisp.dhis.tracker.domain.mapper;\n+\n+/*\n+ *  Copyright (c) 2004-2020, University of Oslo\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ * Redistributions of source code must retain the above copyright notice, this\n+ * list of conditions and the following disclaimer.\n+ *\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following disclaimer in the documentation\n+ * and/or other materials provided with the distribution.\n+ * Neither the name of the HISP project nor the names of its contributors may\n+ * be used to endorse or promote products derived from this software without\n+ * specific prior written permission.\n+ *\n+ *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ *  ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ *  DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ *  ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ *  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ *  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n+ *  ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ *  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ *  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ *\n+ */\n+\n+import java.util.Collection;\n+import java.util.stream.Collectors;\n+\n+public interface DomainMapper<FROM, TO>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b6e78bbee1408e66562e0cc25ca0699e313b2fbb"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTcxOTE4Mw==", "bodyText": "You can remove these two exceptions: no longer thrown", "url": "https://github.com/dhis2/dhis2-core/pull/6987#discussion_r549719183", "createdAt": "2020-12-29T14:13:04Z", "author": {"login": "luciano-fiandesio"}, "path": "dhis-2/dhis-web/dhis-web-api/src/main/java/org/hisp/dhis/webapi/controller/event/TrackedEntityInstanceController.java", "diffHunk": "@@ -390,10 +346,11 @@ public void queryTrackedEntityInstancesCsv( TrackedEntityInstanceCriteria criter\n         throws WebMessageException,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b6e78bbee1408e66562e0cc25ca0699e313b2fbb"}, "originalPosition": 135}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTcxOTU5Ng==", "bodyText": "Note that the header goes between the package declaration and thee import", "url": "https://github.com/dhis2/dhis2-core/pull/6987#discussion_r549719596", "createdAt": "2020-12-29T14:14:21Z", "author": {"login": "luciano-fiandesio"}, "path": "dhis-2/dhis-web/dhis-web-api/src/main/java/org/hisp/dhis/webapi/controller/tracker/TrackerControllerSupport.java", "diffHunk": "@@ -0,0 +1,35 @@\n+/*", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b6e78bbee1408e66562e0cc25ca0699e313b2fbb"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTcyMTQxMw==", "bodyText": "No public?", "url": "https://github.com/dhis2/dhis2-core/pull/6987#discussion_r549721413", "createdAt": "2020-12-29T14:19:06Z", "author": {"login": "luciano-fiandesio"}, "path": "dhis-2/dhis-web/dhis-web-api/src/main/java/org/hisp/dhis/webapi/controller/tracker/TrackerExportController.java", "diffHunk": "@@ -0,0 +1,101 @@\n+package org.hisp.dhis.webapi.controller.tracker;\n+\n+/*\n+ * Copyright (c) 2004-2020, University of Oslo\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ * Redistributions of source code must retain the above copyright notice, this\n+ * list of conditions and the following disclaimer.\n+ *\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following disclaimer in the documentation\n+ * and/or other materials provided with the distribution.\n+ * Neither the name of the HISP project nor the names of its contributors may\n+ * be used to endorse or promote products derived from this software without\n+ * specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n+ * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+\n+import static org.hisp.dhis.webapi.controller.tracker.TrackerControllerSupport.RESOURCE_PATH;\n+import static org.springframework.http.MediaType.APPLICATION_JSON_VALUE;\n+\n+import java.util.Collection;\n+import java.util.List;\n+\n+import org.hisp.dhis.common.Pager;\n+import org.hisp.dhis.dxf2.events.trackedentity.TrackedEntityInstanceService;\n+import org.hisp.dhis.trackedentity.TrackedEntityInstanceQueryParams;\n+import org.hisp.dhis.tracker.domain.TrackedEntity;\n+import org.hisp.dhis.tracker.domain.mapper.TrackedEntityMapper;\n+import org.hisp.dhis.tracker.domain.web.PagingWrapper;\n+import org.hisp.dhis.webapi.controller.event.TrackedEntityInstanceCriteria;\n+import org.hisp.dhis.webapi.controller.event.mapper.TrackedEntityCriteriaMapper;\n+import org.hisp.dhis.webapi.service.ContextService;\n+import org.hisp.dhis.webapi.service.TrackedEntityInstanceSupportService;\n+import org.springframework.web.bind.annotation.GetMapping;\n+import org.springframework.web.bind.annotation.PathVariable;\n+import org.springframework.web.bind.annotation.RequestMapping;\n+import org.springframework.web.bind.annotation.RequestParam;\n+import org.springframework.web.bind.annotation.RestController;\n+\n+import lombok.RequiredArgsConstructor;\n+\n+@RestController\n+@RequestMapping( value = RESOURCE_PATH )\n+@RequiredArgsConstructor\n+public class TrackerExportController\n+{\n+    private final ContextService contextService;\n+\n+    private final TrackedEntityCriteriaMapper criteriaMapper;\n+\n+    private final TrackedEntityInstanceService trackedEntityInstanceService;\n+\n+    private final TrackedEntityMapper trackedEntityMapper;\n+\n+    private final TrackedEntityInstanceSupportService trackedEntityInstanceSupportService;\n+\n+    @GetMapping( produces = APPLICATION_JSON_VALUE )\n+    PagingWrapper<TrackedEntity> getInstances( TrackedEntityInstanceCriteria criteria )", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b6e78bbee1408e66562e0cc25ca0699e313b2fbb"}, "originalPosition": 71}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTcyMjM1NQ==", "bodyText": "@stian-sandvold I think we can now rename this method to getTrackedEntityInstances and remove the 2?", "url": "https://github.com/dhis2/dhis2-core/pull/6987#discussion_r549722355", "createdAt": "2020-12-29T14:22:06Z", "author": {"login": "luciano-fiandesio"}, "path": "dhis-2/dhis-web/dhis-web-api/src/main/java/org/hisp/dhis/webapi/controller/tracker/TrackerExportController.java", "diffHunk": "@@ -0,0 +1,101 @@\n+package org.hisp.dhis.webapi.controller.tracker;\n+\n+/*\n+ * Copyright (c) 2004-2020, University of Oslo\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ * Redistributions of source code must retain the above copyright notice, this\n+ * list of conditions and the following disclaimer.\n+ *\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following disclaimer in the documentation\n+ * and/or other materials provided with the distribution.\n+ * Neither the name of the HISP project nor the names of its contributors may\n+ * be used to endorse or promote products derived from this software without\n+ * specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n+ * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+\n+import static org.hisp.dhis.webapi.controller.tracker.TrackerControllerSupport.RESOURCE_PATH;\n+import static org.springframework.http.MediaType.APPLICATION_JSON_VALUE;\n+\n+import java.util.Collection;\n+import java.util.List;\n+\n+import org.hisp.dhis.common.Pager;\n+import org.hisp.dhis.dxf2.events.trackedentity.TrackedEntityInstanceService;\n+import org.hisp.dhis.trackedentity.TrackedEntityInstanceQueryParams;\n+import org.hisp.dhis.tracker.domain.TrackedEntity;\n+import org.hisp.dhis.tracker.domain.mapper.TrackedEntityMapper;\n+import org.hisp.dhis.tracker.domain.web.PagingWrapper;\n+import org.hisp.dhis.webapi.controller.event.TrackedEntityInstanceCriteria;\n+import org.hisp.dhis.webapi.controller.event.mapper.TrackedEntityCriteriaMapper;\n+import org.hisp.dhis.webapi.service.ContextService;\n+import org.hisp.dhis.webapi.service.TrackedEntityInstanceSupportService;\n+import org.springframework.web.bind.annotation.GetMapping;\n+import org.springframework.web.bind.annotation.PathVariable;\n+import org.springframework.web.bind.annotation.RequestMapping;\n+import org.springframework.web.bind.annotation.RequestParam;\n+import org.springframework.web.bind.annotation.RestController;\n+\n+import lombok.RequiredArgsConstructor;\n+\n+@RestController\n+@RequestMapping( value = RESOURCE_PATH )\n+@RequiredArgsConstructor\n+public class TrackerExportController\n+{\n+    private final ContextService contextService;\n+\n+    private final TrackedEntityCriteriaMapper criteriaMapper;\n+\n+    private final TrackedEntityInstanceService trackedEntityInstanceService;\n+\n+    private final TrackedEntityMapper trackedEntityMapper;\n+\n+    private final TrackedEntityInstanceSupportService trackedEntityInstanceSupportService;\n+\n+    @GetMapping( produces = APPLICATION_JSON_VALUE )\n+    PagingWrapper<TrackedEntity> getInstances( TrackedEntityInstanceCriteria criteria )\n+    {\n+        List<String> fields = contextService.getFieldsFromRequest();\n+\n+        TrackedEntityInstanceQueryParams queryParams = criteriaMapper.map( criteria );\n+\n+        Collection<TrackedEntity> trackedEntityInstances = trackedEntityMapper\n+            .fromCollection( trackedEntityInstanceService.getTrackedEntityInstances2( queryParams,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b6e78bbee1408e66562e0cc25ca0699e313b2fbb"}, "originalPosition": 78}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "27c3859035015c6b56df68c0fcea56724f131c87", "author": {"user": {"login": "gnespolino", "name": "Giuseppe Nespolino"}}, "url": "https://github.com/dhis2/dhis2-core/commit/27c3859035015c6b56df68c0fcea56724f131c87", "committedDate": "2021-01-04T18:30:22Z", "message": "feat: DHIS2-10093 peer review, minor changes, removed legacy getTrackedEntityInstances method"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "111b35951cc4ba413a3d804be1c3af013274c163", "author": {"user": {"login": "gnespolino", "name": "Giuseppe Nespolino"}}, "url": "https://github.com/dhis2/dhis2-core/commit/111b35951cc4ba413a3d804be1c3af013274c163", "committedDate": "2021-01-05T10:22:25Z", "message": "feat: DHIS2-10093 added trackedEntities path segment to export controller, controller class renamed"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYxNjgzMTY1", "url": "https://github.com/dhis2/dhis2-core/pull/6987#pullrequestreview-561683165", "createdAt": "2021-01-05T10:39:05Z", "commit": {"oid": "111b35951cc4ba413a3d804be1c3af013274c163"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYxNjkxMTUy", "url": "https://github.com/dhis2/dhis2-core/pull/6987#pullrequestreview-561691152", "createdAt": "2021-01-05T10:50:39Z", "commit": {"oid": "111b35951cc4ba413a3d804be1c3af013274c163"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2190, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}