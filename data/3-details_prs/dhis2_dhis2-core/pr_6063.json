{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc3ODE4MjM1", "number": 6063, "title": "fix: prevent Hibernate session errors with User object", "bodyText": "Introduce a TrackerUserService dedicated to fetching the User object within\na read-only Transaction: this allows to initialize the User's proxied collections.\nThe User object can now be used safely across the different Tracker layers.\nref: DHIS2-9285", "createdAt": "2020-09-02T13:24:16Z", "url": "https://github.com/dhis2/dhis2-core/pull/6063", "merged": true, "mergeCommit": {"oid": "c2e0b3718cd8c7597ee5ec2e5193e7eafacf5827"}, "closed": true, "closedAt": "2020-09-08T07:47:20Z", "author": {"login": "luciano-fiandesio"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdE8FoLgBqjM3MTk4NjIwOTI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdFhzVuAFqTQ4MjUwMzU2NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f4b811af193e5c2d4bbde338bc0acfed9a39c8ee", "author": {"user": {"login": "luciano-fiandesio", "name": "Luciano Fiandesio"}}, "url": "https://github.com/dhis2/dhis2-core/commit/f4b811af193e5c2d4bbde338bc0acfed9a39c8ee", "committedDate": "2020-09-02T13:21:53Z", "message": "fix: prevent Hibernate session errors with User object\n\nIntroduce a TrackerUserService dedicated to fetch the User object within\na read-only Transaction: this allow to initialize the user's proxied collection.\nThe User object can now be used safely across the different Tracker layers."}, "afterCommit": {"oid": "d8ef3c7180e2969cc93e2d291c55a392f73d788c", "author": {"user": {"login": "luciano-fiandesio", "name": "Luciano Fiandesio"}}, "url": "https://github.com/dhis2/dhis2-core/commit/d8ef3c7180e2969cc93e2d291c55a392f73d788c", "committedDate": "2020-09-02T13:32:41Z", "message": "fix: prevent Hibernate session errors with User object\n\nIntroduce a TrackerUserService dedicated to fetch the User object within\na read-only Transaction: this allow to initialize the user's proxied collection.\nThe User object can now be used safely across the different Tracker layers."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c234789c1964c969ddc0a87ef0c34a8987457417", "author": {"user": {"login": "luciano-fiandesio", "name": "Luciano Fiandesio"}}, "url": "https://github.com/dhis2/dhis2-core/commit/c234789c1964c969ddc0a87ef0c34a8987457417", "committedDate": "2020-09-02T13:37:38Z", "message": "fix: prevent Hibernate session errors with User object\n\nIntroduce a `TrackerUserService` dedicated to fetch the `User` object within\na read-only Transaction: this allows to initialize the `User`'s proxied collections.\nThe User object can now be used safely across the different Tracker layers."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d8ef3c7180e2969cc93e2d291c55a392f73d788c", "author": {"user": {"login": "luciano-fiandesio", "name": "Luciano Fiandesio"}}, "url": "https://github.com/dhis2/dhis2-core/commit/d8ef3c7180e2969cc93e2d291c55a392f73d788c", "committedDate": "2020-09-02T13:32:41Z", "message": "fix: prevent Hibernate session errors with User object\n\nIntroduce a TrackerUserService dedicated to fetch the User object within\na read-only Transaction: this allow to initialize the user's proxied collection.\nThe User object can now be used safely across the different Tracker layers."}, "afterCommit": {"oid": "c234789c1964c969ddc0a87ef0c34a8987457417", "author": {"user": {"login": "luciano-fiandesio", "name": "Luciano Fiandesio"}}, "url": "https://github.com/dhis2/dhis2-core/commit/c234789c1964c969ddc0a87ef0c34a8987457417", "committedDate": "2020-09-02T13:37:38Z", "message": "fix: prevent Hibernate session errors with User object\n\nIntroduce a `TrackerUserService` dedicated to fetch the `User` object within\na read-only Transaction: this allows to initialize the `User`'s proxied collections.\nThe User object can now be used safely across the different Tracker layers."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgwODY3NTAx", "url": "https://github.com/dhis2/dhis2-core/pull/6063#pullrequestreview-480867501", "createdAt": "2020-09-02T14:18:11Z", "commit": {"oid": "c234789c1964c969ddc0a87ef0c34a8987457417"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxNDoxODoxMlrOHLxX5Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxNDoxODoxMlrOHLxX5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjEwNTMxNw==", "bodyText": "Do we really need to set the user here?\nIt should be already be set before and just passed during the conversions", "url": "https://github.com/dhis2/dhis2-core/pull/6063#discussion_r482105317", "createdAt": "2020-09-02T14:18:12Z", "author": {"login": "enricocolasante"}, "path": "dhis-2/dhis-services/dhis-service-tracker/src/main/java/org/hisp/dhis/tracker/bundle/DefaultTrackerBundleService.java", "diffHunk": "@@ -189,7 +187,10 @@ public DefaultTrackerBundleService( TrackerPreheatService trackerPreheatService,\n     {\n         TrackerBundle trackerBundle = params.toTrackerBundle();\n         TrackerPreheatParams preheatParams = params.toTrackerPreheatParams();\n-        preheatParams.setUser( getUser( preheatParams.getUser(), preheatParams.getUserId() ) );\n+        if ( preheatParams.getUser() == null )", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c234789c1964c969ddc0a87ef0c34a8987457417"}, "originalPosition": 43}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgwODgyMzQ1", "url": "https://github.com/dhis2/dhis2-core/pull/6063#pullrequestreview-480882345", "createdAt": "2020-09-02T14:32:12Z", "commit": {"oid": "c234789c1964c969ddc0a87ef0c34a8987457417"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxNDozMjoxMlrOHLyDTg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxNDozMjoxMlrOHLyDTg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjExNjQzMA==", "bodyText": "can we try HibernateUtils.initializeProxy( user );", "url": "https://github.com/dhis2/dhis2-core/pull/6063#discussion_r482116430", "createdAt": "2020-09-02T14:32:12Z", "author": {"login": "zubaira"}, "path": "dhis-2/dhis-services/dhis-service-tracker/src/main/java/org/hisp/dhis/tracker/TrackerUserService.java", "diffHunk": "@@ -0,0 +1,72 @@\n+package org.hisp.dhis.tracker;\n+\n+import org.hisp.dhis.common.IdentifiableObjectManager;\n+import org.hisp.dhis.hibernate.HibernateUtils;\n+import org.hisp.dhis.user.CurrentUserService;\n+import org.hisp.dhis.user.User;\n+import org.hisp.dhis.user.UserCredentials;\n+import org.springframework.stereotype.Service;\n+import org.springframework.transaction.annotation.Transactional;\n+import org.springframework.util.StringUtils;\n+\n+/**\n+ * Specialized User Service for Tracker that executes User look-up in a read-only transaction\n+ *\n+ * @author Luciano Fiandesio\n+ */\n+@Service\n+public class TrackerUserService\n+{\n+    private final CurrentUserService currentUserService;\n+\n+    private final IdentifiableObjectManager manager;\n+\n+    public TrackerUserService( CurrentUserService currentUserService, IdentifiableObjectManager manager )\n+    {\n+        this.currentUserService = currentUserService;\n+        this.manager = manager;\n+    }\n+\n+    /**\n+     * Fetch a User by user uid\n+     * @param userUid a User uid\n+     * @return a User\n+     */\n+    @Transactional( readOnly = true )\n+    public User getUser( String userUid )\n+    {\n+        User user = null;\n+\n+        if ( !StringUtils.isEmpty( userUid ) )\n+        {\n+            user = manager.get( User.class, userUid );\n+        }\n+        if ( user == null )\n+        {\n+            user = currentUserService.getCurrentUser();\n+        }\n+\n+        initUser( user );\n+\n+        return user;\n+    }\n+\n+    /**\n+     * Make sure the User object has all collection initialized, since Tracker creates new threads and there is\n+     * no Hibernate Session available.\n+     */\n+    private void initUser( final User user )\n+    {\n+        if (user == null) return;\n+\n+        UserCredentials userCredentials = user.getUserCredentials();\n+        // Init all collections\n+        HibernateUtils.initializeProxy( userCredentials );\n+\n+        // Trigger additional collections which are not covered by `initializeProxy`.\n+        // This is not very \"elegant\" but it avoids opening a transaction in other parts of Tracker\n+        // just to fetch user data\n+        user.isSuper();\n+        user.getOrganisationUnits().size();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c234789c1964c969ddc0a87ef0c34a8987457417"}, "originalPosition": 70}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgxNjAxNjg0", "url": "https://github.com/dhis2/dhis2-core/pull/6063#pullrequestreview-481601684", "createdAt": "2020-09-03T08:15:02Z", "commit": {"oid": "c234789c1964c969ddc0a87ef0c34a8987457417"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgyNTAyNzMx", "url": "https://github.com/dhis2/dhis2-core/pull/6063#pullrequestreview-482502731", "createdAt": "2020-09-04T09:28:35Z", "commit": {"oid": "c234789c1964c969ddc0a87ef0c34a8987457417"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQwOToyODozNVrOHNGngg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQwOToyODozNVrOHNGngg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzUwMTk1NA==", "bodyText": "I'm wondering if this is really specific to tracker. Looks fairly generic and might be used everywhere. Could we move it to CurrentUserService or similar @luciano-fiandesio ?", "url": "https://github.com/dhis2/dhis2-core/pull/6063#discussion_r483501954", "createdAt": "2020-09-04T09:28:35Z", "author": {"login": "larshelge"}, "path": "dhis-2/dhis-services/dhis-service-tracker/src/main/java/org/hisp/dhis/tracker/TrackerUserService.java", "diffHunk": "@@ -0,0 +1,72 @@\n+package org.hisp.dhis.tracker;\n+\n+import org.hisp.dhis.common.IdentifiableObjectManager;\n+import org.hisp.dhis.hibernate.HibernateUtils;\n+import org.hisp.dhis.user.CurrentUserService;\n+import org.hisp.dhis.user.User;\n+import org.hisp.dhis.user.UserCredentials;\n+import org.springframework.stereotype.Service;\n+import org.springframework.transaction.annotation.Transactional;\n+import org.springframework.util.StringUtils;\n+\n+/**\n+ * Specialized User Service for Tracker that executes User look-up in a read-only transaction\n+ *\n+ * @author Luciano Fiandesio\n+ */\n+@Service\n+public class TrackerUserService\n+{\n+    private final CurrentUserService currentUserService;\n+\n+    private final IdentifiableObjectManager manager;\n+\n+    public TrackerUserService( CurrentUserService currentUserService, IdentifiableObjectManager manager )\n+    {\n+        this.currentUserService = currentUserService;\n+        this.manager = manager;\n+    }\n+\n+    /**\n+     * Fetch a User by user uid\n+     * @param userUid a User uid\n+     * @return a User\n+     */\n+    @Transactional( readOnly = true )\n+    public User getUser( String userUid )", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c234789c1964c969ddc0a87ef0c34a8987457417"}, "originalPosition": 36}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgyNTAzNTY0", "url": "https://github.com/dhis2/dhis2-core/pull/6063#pullrequestreview-482503564", "createdAt": "2020-09-04T09:29:48Z", "commit": {"oid": "c234789c1964c969ddc0a87ef0c34a8987457417"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQwOToyOTo0OFrOHNGqCA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQwOToyOTo0OFrOHNGqCA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzUwMjYwMA==", "bodyText": "Maybe a little bit shaky to have very different behavior based on whether the input argument is null or not in a service method.", "url": "https://github.com/dhis2/dhis2-core/pull/6063#discussion_r483502600", "createdAt": "2020-09-04T09:29:48Z", "author": {"login": "larshelge"}, "path": "dhis-2/dhis-services/dhis-service-tracker/src/main/java/org/hisp/dhis/tracker/TrackerUserService.java", "diffHunk": "@@ -0,0 +1,72 @@\n+package org.hisp.dhis.tracker;\n+\n+import org.hisp.dhis.common.IdentifiableObjectManager;\n+import org.hisp.dhis.hibernate.HibernateUtils;\n+import org.hisp.dhis.user.CurrentUserService;\n+import org.hisp.dhis.user.User;\n+import org.hisp.dhis.user.UserCredentials;\n+import org.springframework.stereotype.Service;\n+import org.springframework.transaction.annotation.Transactional;\n+import org.springframework.util.StringUtils;\n+\n+/**\n+ * Specialized User Service for Tracker that executes User look-up in a read-only transaction\n+ *\n+ * @author Luciano Fiandesio\n+ */\n+@Service\n+public class TrackerUserService\n+{\n+    private final CurrentUserService currentUserService;\n+\n+    private final IdentifiableObjectManager manager;\n+\n+    public TrackerUserService( CurrentUserService currentUserService, IdentifiableObjectManager manager )\n+    {\n+        this.currentUserService = currentUserService;\n+        this.manager = manager;\n+    }\n+\n+    /**\n+     * Fetch a User by user uid\n+     * @param userUid a User uid\n+     * @return a User\n+     */\n+    @Transactional( readOnly = true )\n+    public User getUser( String userUid )\n+    {\n+        User user = null;\n+\n+        if ( !StringUtils.isEmpty( userUid ) )", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c234789c1964c969ddc0a87ef0c34a8987457417"}, "originalPosition": 40}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2482, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}