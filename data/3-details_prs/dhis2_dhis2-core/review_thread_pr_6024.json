{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc1Mjk0Njcw", "number": 6024, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxMTowNzoxOVrOEdp-YA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxMTo0NToyMVrOEdrmhQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5NTMxODcyOnYy", "diffSide": "RIGHT", "path": "dhis-2/dhis-services/dhis-service-core/src/main/java/org/hisp/dhis/security/oidc/OidcDisabledCondition.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxMTowNzoxOVrOHI8NXg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQwNToyODoxMlrOHKjo9A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTEzNzExOA==", "bodyText": "@netroms Do you see any problem with doing this? Should only be in effect during tests.", "url": "https://github.com/dhis2/dhis2-core/pull/6024#discussion_r479137118", "createdAt": "2020-08-28T11:07:19Z", "author": {"login": "ameenhere"}, "path": "dhis-2/dhis-services/dhis-service-core/src/main/java/org/hisp/dhis/security/oidc/OidcDisabledCondition.java", "diffHunk": "@@ -41,6 +41,10 @@\n     @Override\n     public boolean matches( ConditionContext context, AnnotatedTypeMetadata metadata )\n     {\n+        if ( isTestRun( context ) )", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d7c4b06fa5e6242de9567c3b0a07ed229f2b086d"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDE1MjIyMw==", "bodyText": "I'm not quite sure this is necessary, this oidc feature will only affect a very specific code path when doing the oidc authentication.", "url": "https://github.com/dhis2/dhis2-core/pull/6024#discussion_r480152223", "createdAt": "2020-08-31T14:03:06Z", "author": {"login": "netroms"}, "path": "dhis-2/dhis-services/dhis-service-core/src/main/java/org/hisp/dhis/security/oidc/OidcDisabledCondition.java", "diffHunk": "@@ -41,6 +41,10 @@\n     @Override\n     public boolean matches( ConditionContext context, AnnotatedTypeMetadata metadata )\n     {\n+        if ( isTestRun( context ) )", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTEzNzExOA=="}, "originalCommit": {"oid": "d7c4b06fa5e6242de9567c3b0a07ed229f2b086d"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDUwMzI3Nw==", "bodyText": "One of the integration test file failed to load context because it tries to instantiate \"DefaultDhisConfigurationProvider\" from here, even though \"TestDhisConfigurationProvider\" should have been loaded instead. This was the simplest way to stop spring from loading DefaultDhisConfigurationProvider. So if it does not do any harm, then let it stay here to ensure the test passes always :)", "url": "https://github.com/dhis2/dhis2-core/pull/6024#discussion_r480503277", "createdAt": "2020-09-01T00:38:41Z", "author": {"login": "ameenhere"}, "path": "dhis-2/dhis-services/dhis-service-core/src/main/java/org/hisp/dhis/security/oidc/OidcDisabledCondition.java", "diffHunk": "@@ -41,6 +41,10 @@\n     @Override\n     public boolean matches( ConditionContext context, AnnotatedTypeMetadata metadata )\n     {\n+        if ( isTestRun( context ) )", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTEzNzExOA=="}, "originalCommit": {"oid": "d7c4b06fa5e6242de9567c3b0a07ed229f2b086d"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDgzMTczMg==", "bodyText": "Ah, I can see that now. Well then it makes a lot of sense :) Thanks Ameen!", "url": "https://github.com/dhis2/dhis2-core/pull/6024#discussion_r480831732", "createdAt": "2020-09-01T05:28:12Z", "author": {"login": "netroms"}, "path": "dhis-2/dhis-services/dhis-service-core/src/main/java/org/hisp/dhis/security/oidc/OidcDisabledCondition.java", "diffHunk": "@@ -41,6 +41,10 @@\n     @Override\n     public boolean matches( ConditionContext context, AnnotatedTypeMetadata metadata )\n     {\n+        if ( isTestRun( context ) )", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTEzNzExOA=="}, "originalCommit": {"oid": "d7c4b06fa5e6242de9567c3b0a07ed229f2b086d"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5NTMzMDc2OnYy", "diffSide": "RIGHT", "path": "dhis-2/dhis-support/dhis-support-db-migration/src/main/java/org/hisp/dhis/db/migration/config/FlywayConfig.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxMTowODo1MVrOHI8UzA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxMTowODo1MVrOHI8UzA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTEzOTAyMA==", "bodyText": "@luciano-fiandesio  Group ensures the \"migration group\" is executed in a single transaction. This would be ideal for instance to rollback to a clean state in case of migration failures.\nBut we have introduced certain non-transaction statements in our migrations. We can enable \"Mixed\" mode so that it wraps in transaction on a best effort basis.", "url": "https://github.com/dhis2/dhis2-core/pull/6024#discussion_r479139020", "createdAt": "2020-08-28T11:08:51Z", "author": {"login": "ameenhere"}, "path": "dhis-2/dhis-support/dhis-support-db-migration/src/main/java/org/hisp/dhis/db/migration/config/FlywayConfig.java", "diffHunk": "@@ -62,8 +62,9 @@ public Flyway flyway( DhisConfigurationProvider configurationProvider, DataSourc\n             Boolean.parseBoolean( configurationProvider.getProperty( FLYWAY_OUT_OF_ORDER_MIGRATION ) ) );\n         classicConfiguration.setIgnoreMissingMigrations( true );\n         classicConfiguration.setIgnoreFutureMigrations( false );\n-        classicConfiguration.setGroup( false );\n+        classicConfiguration.setGroup( true );", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d7c4b06fa5e6242de9567c3b0a07ed229f2b086d"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5NTU4MzMwOnYy", "diffSide": "LEFT", "path": "dhis-2/dhis-services/dhis-service-dxf2/src/main/java/org/hisp/dhis/dxf2/events/trackedentity/store/mapper/EnrollmentRowCallbackHandler.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxMTo0NTowM1rOHI-72A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxMTo0NTowM1rOHI-72A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTE4MTc4NA==", "bodyText": "This returns \"t\" and Boolean.parseBoolean( \"t\" ) is false. Changed it to use resultSet.wasNull() to preserve null", "url": "https://github.com/dhis2/dhis2-core/pull/6024#discussion_r479181784", "createdAt": "2020-08-28T11:45:03Z", "author": {"login": "ameenhere"}, "path": "dhis-2/dhis-services/dhis-service-dxf2/src/main/java/org/hisp/dhis/dxf2/events/trackedentity/store/mapper/EnrollmentRowCallbackHandler.java", "diffHunk": "@@ -108,8 +108,8 @@ private Enrollment getEnrollment( ResultSet rs )\n         enrollment.setStatus( EnrollmentStatus.fromStatusString( rs.getString( getColumnName( STATUS ) ) ) );\n         enrollment.setEnrollmentDate( rs.getTimestamp( getColumnName( ENROLLMENTDATE ) ) );\n         enrollment.setIncidentDate( rs.getTimestamp( getColumnName( INCIDENTDATE ) ) );\n-        final String followup = rs.getString( getColumnName( FOLLOWUP ) );", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cddb8931fba14ffb166e7867eb3bbbab639b235f"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5NTU4NTMzOnYy", "diffSide": "LEFT", "path": "dhis-2/dhis-services/dhis-service-dxf2/src/main/java/org/hisp/dhis/dxf2/events/trackedentity/store/mapper/EventRowCallbackHandler.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxMTo0NToyMVrOHI-9NQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxMTo0NToyMVrOHI-9NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTE4MjEzMw==", "bodyText": "This returns \"t\" and Boolean.parseBoolean( \"t\" ) is false. Changed it to use resultSet.wasNull() to preserve null", "url": "https://github.com/dhis2/dhis2-core/pull/6024#discussion_r479182133", "createdAt": "2020-08-28T11:45:21Z", "author": {"login": "ameenhere"}, "path": "dhis-2/dhis-services/dhis-service-dxf2/src/main/java/org/hisp/dhis/dxf2/events/trackedentity/store/mapper/EventRowCallbackHandler.java", "diffHunk": "@@ -67,8 +67,8 @@ private Event getEvent( ResultSet rs )\n         event.setEvent( rs.getString( getColumnName( COLUMNS.UID ) ) );\n         event.setId( rs.getLong( getColumnName( COLUMNS.ID ) ) );\n         event.setTrackedEntityInstance( rs.getString( getColumnName( COLUMNS.TEI_UID ) ) );\n-        final String followup = rs.getString( getColumnName( COLUMNS.ENROLLMENT_FOLLOWUP ) );", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cddb8931fba14ffb166e7867eb3bbbab639b235f"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3949, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}