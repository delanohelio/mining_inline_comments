{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQ0OTYyNzcy", "number": 6987, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOVQxNDowNToyN1rOFJx9qA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOVQxNDoyMjowNlrOFJyNOg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ1ODAwMTA0OnYy", "diffSide": "RIGHT", "path": "dhis-2/dhis-services/dhis-service-tracker/src/main/java/org/hisp/dhis/tracker/domain/mapper/DomainMapper.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOVQxNDowNToyN1rOIMQCcA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNFQxMjo0MDoyN1rOINwTxQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTcxNjU5Mg==", "bodyText": "I wonder if we could \"merge\" this interface with org.hisp.dhis.tracker.preheat.mappers.PreheatMapper. Perhaps one interface named TrackerEntityMapper. These two interfaces now are doing more or less the same thing.", "url": "https://github.com/dhis2/dhis2-core/pull/6987#discussion_r549716592", "createdAt": "2020-12-29T14:05:27Z", "author": {"login": "luciano-fiandesio"}, "path": "dhis-2/dhis-services/dhis-service-tracker/src/main/java/org/hisp/dhis/tracker/domain/mapper/DomainMapper.java", "diffHunk": "@@ -0,0 +1,45 @@\n+package org.hisp.dhis.tracker.domain.mapper;\n+\n+/*\n+ *  Copyright (c) 2004-2020, University of Oslo\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ * Redistributions of source code must retain the above copyright notice, this\n+ * list of conditions and the following disclaimer.\n+ *\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following disclaimer in the documentation\n+ * and/or other materials provided with the distribution.\n+ * Neither the name of the HISP project nor the names of its contributors may\n+ * be used to endorse or promote products derived from this software without\n+ * specific prior written permission.\n+ *\n+ *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ *  ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ *  DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ *  ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ *  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ *  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n+ *  ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ *  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ *  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ *\n+ */\n+\n+import java.util.Collection;\n+import java.util.stream.Collectors;\n+\n+public interface DomainMapper<FROM, TO>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b6e78bbee1408e66562e0cc25ca0699e313b2fbb"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTI5Mzg5Mw==", "bodyText": "PreheatMapper has one only generic \"T\", while in these cases we need 2 <FROM, TO>. Maybe we might say that a PreheatMapper is just a DomainMapper<T, T>.", "url": "https://github.com/dhis2/dhis2-core/pull/6987#discussion_r551293893", "createdAt": "2021-01-04T12:40:27Z", "author": {"login": "gnespolino"}, "path": "dhis-2/dhis-services/dhis-service-tracker/src/main/java/org/hisp/dhis/tracker/domain/mapper/DomainMapper.java", "diffHunk": "@@ -0,0 +1,45 @@\n+package org.hisp.dhis.tracker.domain.mapper;\n+\n+/*\n+ *  Copyright (c) 2004-2020, University of Oslo\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ * Redistributions of source code must retain the above copyright notice, this\n+ * list of conditions and the following disclaimer.\n+ *\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following disclaimer in the documentation\n+ * and/or other materials provided with the distribution.\n+ * Neither the name of the HISP project nor the names of its contributors may\n+ * be used to endorse or promote products derived from this software without\n+ * specific prior written permission.\n+ *\n+ *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ *  ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ *  DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ *  ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ *  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ *  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n+ *  ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ *  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ *  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ *\n+ */\n+\n+import java.util.Collection;\n+import java.util.stream.Collectors;\n+\n+public interface DomainMapper<FROM, TO>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTcxNjU5Mg=="}, "originalCommit": {"oid": "b6e78bbee1408e66562e0cc25ca0699e313b2fbb"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ1ODAxODk3OnYy", "diffSide": "RIGHT", "path": "dhis-2/dhis-web/dhis-web-api/src/main/java/org/hisp/dhis/webapi/controller/event/TrackedEntityInstanceController.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOVQxNDoxMzowNFrOIMQMjw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNFQxMjo0MzozNVrOINwY6w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTcxOTE4Mw==", "bodyText": "You can remove these two exceptions: no longer thrown", "url": "https://github.com/dhis2/dhis2-core/pull/6987#discussion_r549719183", "createdAt": "2020-12-29T14:13:04Z", "author": {"login": "luciano-fiandesio"}, "path": "dhis-2/dhis-web/dhis-web-api/src/main/java/org/hisp/dhis/webapi/controller/event/TrackedEntityInstanceController.java", "diffHunk": "@@ -390,10 +346,11 @@ public void queryTrackedEntityInstancesCsv( TrackedEntityInstanceCriteria criter\n         throws WebMessageException,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b6e78bbee1408e66562e0cc25ca0699e313b2fbb"}, "originalPosition": 135}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTI5NTIxMQ==", "bodyText": "done, ty", "url": "https://github.com/dhis2/dhis2-core/pull/6987#discussion_r551295211", "createdAt": "2021-01-04T12:43:35Z", "author": {"login": "gnespolino"}, "path": "dhis-2/dhis-web/dhis-web-api/src/main/java/org/hisp/dhis/webapi/controller/event/TrackedEntityInstanceController.java", "diffHunk": "@@ -390,10 +346,11 @@ public void queryTrackedEntityInstancesCsv( TrackedEntityInstanceCriteria criter\n         throws WebMessageException,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTcxOTE4Mw=="}, "originalCommit": {"oid": "b6e78bbee1408e66562e0cc25ca0699e313b2fbb"}, "originalPosition": 135}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ1ODAyMTkyOnYy", "diffSide": "RIGHT", "path": "dhis-2/dhis-web/dhis-web-api/src/main/java/org/hisp/dhis/webapi/controller/tracker/TrackerControllerSupport.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOVQxNDoxNDoyMVrOIMQOLA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNFQxMjo0Mjo0M1rOINwXgw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTcxOTU5Ng==", "bodyText": "Note that the header goes between the package declaration and thee import", "url": "https://github.com/dhis2/dhis2-core/pull/6987#discussion_r549719596", "createdAt": "2020-12-29T14:14:21Z", "author": {"login": "luciano-fiandesio"}, "path": "dhis-2/dhis-web/dhis-web-api/src/main/java/org/hisp/dhis/webapi/controller/tracker/TrackerControllerSupport.java", "diffHunk": "@@ -0,0 +1,35 @@\n+/*", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b6e78bbee1408e66562e0cc25ca0699e313b2fbb"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTI5NDg1MQ==", "bodyText": "ty, fixed", "url": "https://github.com/dhis2/dhis2-core/pull/6987#discussion_r551294851", "createdAt": "2021-01-04T12:42:43Z", "author": {"login": "gnespolino"}, "path": "dhis-2/dhis-web/dhis-web-api/src/main/java/org/hisp/dhis/webapi/controller/tracker/TrackerControllerSupport.java", "diffHunk": "@@ -0,0 +1,35 @@\n+/*", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTcxOTU5Ng=="}, "originalCommit": {"oid": "b6e78bbee1408e66562e0cc25ca0699e313b2fbb"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ1ODAzNDU2OnYy", "diffSide": "RIGHT", "path": "dhis-2/dhis-web/dhis-web-api/src/main/java/org/hisp/dhis/webapi/controller/tracker/TrackerExportController.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOVQxNDoxOTowNlrOIMQVRQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNFQxMjo0NTowOVrOINwcow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTcyMTQxMw==", "bodyText": "No public?", "url": "https://github.com/dhis2/dhis2-core/pull/6987#discussion_r549721413", "createdAt": "2020-12-29T14:19:06Z", "author": {"login": "luciano-fiandesio"}, "path": "dhis-2/dhis-web/dhis-web-api/src/main/java/org/hisp/dhis/webapi/controller/tracker/TrackerExportController.java", "diffHunk": "@@ -0,0 +1,101 @@\n+package org.hisp.dhis.webapi.controller.tracker;\n+\n+/*\n+ * Copyright (c) 2004-2020, University of Oslo\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ * Redistributions of source code must retain the above copyright notice, this\n+ * list of conditions and the following disclaimer.\n+ *\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following disclaimer in the documentation\n+ * and/or other materials provided with the distribution.\n+ * Neither the name of the HISP project nor the names of its contributors may\n+ * be used to endorse or promote products derived from this software without\n+ * specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n+ * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+\n+import static org.hisp.dhis.webapi.controller.tracker.TrackerControllerSupport.RESOURCE_PATH;\n+import static org.springframework.http.MediaType.APPLICATION_JSON_VALUE;\n+\n+import java.util.Collection;\n+import java.util.List;\n+\n+import org.hisp.dhis.common.Pager;\n+import org.hisp.dhis.dxf2.events.trackedentity.TrackedEntityInstanceService;\n+import org.hisp.dhis.trackedentity.TrackedEntityInstanceQueryParams;\n+import org.hisp.dhis.tracker.domain.TrackedEntity;\n+import org.hisp.dhis.tracker.domain.mapper.TrackedEntityMapper;\n+import org.hisp.dhis.tracker.domain.web.PagingWrapper;\n+import org.hisp.dhis.webapi.controller.event.TrackedEntityInstanceCriteria;\n+import org.hisp.dhis.webapi.controller.event.mapper.TrackedEntityCriteriaMapper;\n+import org.hisp.dhis.webapi.service.ContextService;\n+import org.hisp.dhis.webapi.service.TrackedEntityInstanceSupportService;\n+import org.springframework.web.bind.annotation.GetMapping;\n+import org.springframework.web.bind.annotation.PathVariable;\n+import org.springframework.web.bind.annotation.RequestMapping;\n+import org.springframework.web.bind.annotation.RequestParam;\n+import org.springframework.web.bind.annotation.RestController;\n+\n+import lombok.RequiredArgsConstructor;\n+\n+@RestController\n+@RequestMapping( value = RESOURCE_PATH )\n+@RequiredArgsConstructor\n+public class TrackerExportController\n+{\n+    private final ContextService contextService;\n+\n+    private final TrackedEntityCriteriaMapper criteriaMapper;\n+\n+    private final TrackedEntityInstanceService trackedEntityInstanceService;\n+\n+    private final TrackedEntityMapper trackedEntityMapper;\n+\n+    private final TrackedEntityInstanceSupportService trackedEntityInstanceSupportService;\n+\n+    @GetMapping( produces = APPLICATION_JSON_VALUE )\n+    PagingWrapper<TrackedEntity> getInstances( TrackedEntityInstanceCriteria criteria )", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b6e78bbee1408e66562e0cc25ca0699e313b2fbb"}, "originalPosition": 71}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTI5NjE2Mw==", "bodyText": "it's not necessary to have public visibility for a controller method since Spring will be able to invoke it anyway. Ideally lower visibility is better. Also since test is in same package it will be visible from testing classes. If there's a valid point to make it public I can change it.", "url": "https://github.com/dhis2/dhis2-core/pull/6987#discussion_r551296163", "createdAt": "2021-01-04T12:45:09Z", "author": {"login": "gnespolino"}, "path": "dhis-2/dhis-web/dhis-web-api/src/main/java/org/hisp/dhis/webapi/controller/tracker/TrackerExportController.java", "diffHunk": "@@ -0,0 +1,101 @@\n+package org.hisp.dhis.webapi.controller.tracker;\n+\n+/*\n+ * Copyright (c) 2004-2020, University of Oslo\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ * Redistributions of source code must retain the above copyright notice, this\n+ * list of conditions and the following disclaimer.\n+ *\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following disclaimer in the documentation\n+ * and/or other materials provided with the distribution.\n+ * Neither the name of the HISP project nor the names of its contributors may\n+ * be used to endorse or promote products derived from this software without\n+ * specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n+ * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+\n+import static org.hisp.dhis.webapi.controller.tracker.TrackerControllerSupport.RESOURCE_PATH;\n+import static org.springframework.http.MediaType.APPLICATION_JSON_VALUE;\n+\n+import java.util.Collection;\n+import java.util.List;\n+\n+import org.hisp.dhis.common.Pager;\n+import org.hisp.dhis.dxf2.events.trackedentity.TrackedEntityInstanceService;\n+import org.hisp.dhis.trackedentity.TrackedEntityInstanceQueryParams;\n+import org.hisp.dhis.tracker.domain.TrackedEntity;\n+import org.hisp.dhis.tracker.domain.mapper.TrackedEntityMapper;\n+import org.hisp.dhis.tracker.domain.web.PagingWrapper;\n+import org.hisp.dhis.webapi.controller.event.TrackedEntityInstanceCriteria;\n+import org.hisp.dhis.webapi.controller.event.mapper.TrackedEntityCriteriaMapper;\n+import org.hisp.dhis.webapi.service.ContextService;\n+import org.hisp.dhis.webapi.service.TrackedEntityInstanceSupportService;\n+import org.springframework.web.bind.annotation.GetMapping;\n+import org.springframework.web.bind.annotation.PathVariable;\n+import org.springframework.web.bind.annotation.RequestMapping;\n+import org.springframework.web.bind.annotation.RequestParam;\n+import org.springframework.web.bind.annotation.RestController;\n+\n+import lombok.RequiredArgsConstructor;\n+\n+@RestController\n+@RequestMapping( value = RESOURCE_PATH )\n+@RequiredArgsConstructor\n+public class TrackerExportController\n+{\n+    private final ContextService contextService;\n+\n+    private final TrackedEntityCriteriaMapper criteriaMapper;\n+\n+    private final TrackedEntityInstanceService trackedEntityInstanceService;\n+\n+    private final TrackedEntityMapper trackedEntityMapper;\n+\n+    private final TrackedEntityInstanceSupportService trackedEntityInstanceSupportService;\n+\n+    @GetMapping( produces = APPLICATION_JSON_VALUE )\n+    PagingWrapper<TrackedEntity> getInstances( TrackedEntityInstanceCriteria criteria )", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTcyMTQxMw=="}, "originalCommit": {"oid": "b6e78bbee1408e66562e0cc25ca0699e313b2fbb"}, "originalPosition": 71}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ1ODA0MDkwOnYy", "diffSide": "RIGHT", "path": "dhis-2/dhis-web/dhis-web-api/src/main/java/org/hisp/dhis/webapi/controller/tracker/TrackerExportController.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOVQxNDoyMjowNlrOIMQY8w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNFQxOTo0MzoyOVrOIN-mZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTcyMjM1NQ==", "bodyText": "@stian-sandvold I think we can now rename this method to getTrackedEntityInstances and remove the 2?", "url": "https://github.com/dhis2/dhis2-core/pull/6987#discussion_r549722355", "createdAt": "2020-12-29T14:22:06Z", "author": {"login": "luciano-fiandesio"}, "path": "dhis-2/dhis-web/dhis-web-api/src/main/java/org/hisp/dhis/webapi/controller/tracker/TrackerExportController.java", "diffHunk": "@@ -0,0 +1,101 @@\n+package org.hisp.dhis.webapi.controller.tracker;\n+\n+/*\n+ * Copyright (c) 2004-2020, University of Oslo\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ * Redistributions of source code must retain the above copyright notice, this\n+ * list of conditions and the following disclaimer.\n+ *\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following disclaimer in the documentation\n+ * and/or other materials provided with the distribution.\n+ * Neither the name of the HISP project nor the names of its contributors may\n+ * be used to endorse or promote products derived from this software without\n+ * specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n+ * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+\n+import static org.hisp.dhis.webapi.controller.tracker.TrackerControllerSupport.RESOURCE_PATH;\n+import static org.springframework.http.MediaType.APPLICATION_JSON_VALUE;\n+\n+import java.util.Collection;\n+import java.util.List;\n+\n+import org.hisp.dhis.common.Pager;\n+import org.hisp.dhis.dxf2.events.trackedentity.TrackedEntityInstanceService;\n+import org.hisp.dhis.trackedentity.TrackedEntityInstanceQueryParams;\n+import org.hisp.dhis.tracker.domain.TrackedEntity;\n+import org.hisp.dhis.tracker.domain.mapper.TrackedEntityMapper;\n+import org.hisp.dhis.tracker.domain.web.PagingWrapper;\n+import org.hisp.dhis.webapi.controller.event.TrackedEntityInstanceCriteria;\n+import org.hisp.dhis.webapi.controller.event.mapper.TrackedEntityCriteriaMapper;\n+import org.hisp.dhis.webapi.service.ContextService;\n+import org.hisp.dhis.webapi.service.TrackedEntityInstanceSupportService;\n+import org.springframework.web.bind.annotation.GetMapping;\n+import org.springframework.web.bind.annotation.PathVariable;\n+import org.springframework.web.bind.annotation.RequestMapping;\n+import org.springframework.web.bind.annotation.RequestParam;\n+import org.springframework.web.bind.annotation.RestController;\n+\n+import lombok.RequiredArgsConstructor;\n+\n+@RestController\n+@RequestMapping( value = RESOURCE_PATH )\n+@RequiredArgsConstructor\n+public class TrackerExportController\n+{\n+    private final ContextService contextService;\n+\n+    private final TrackedEntityCriteriaMapper criteriaMapper;\n+\n+    private final TrackedEntityInstanceService trackedEntityInstanceService;\n+\n+    private final TrackedEntityMapper trackedEntityMapper;\n+\n+    private final TrackedEntityInstanceSupportService trackedEntityInstanceSupportService;\n+\n+    @GetMapping( produces = APPLICATION_JSON_VALUE )\n+    PagingWrapper<TrackedEntity> getInstances( TrackedEntityInstanceCriteria criteria )\n+    {\n+        List<String> fields = contextService.getFieldsFromRequest();\n+\n+        TrackedEntityInstanceQueryParams queryParams = criteriaMapper.map( criteria );\n+\n+        Collection<TrackedEntity> trackedEntityInstances = trackedEntityMapper\n+            .fromCollection( trackedEntityInstanceService.getTrackedEntityInstances2( queryParams,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b6e78bbee1408e66562e0cc25ca0699e313b2fbb"}, "originalPosition": 78}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTUyODAzNg==", "bodyText": "Done, even if some tests need to be rewritten in a different way since some of them won't run on H2 database now.", "url": "https://github.com/dhis2/dhis2-core/pull/6987#discussion_r551528036", "createdAt": "2021-01-04T19:43:29Z", "author": {"login": "gnespolino"}, "path": "dhis-2/dhis-web/dhis-web-api/src/main/java/org/hisp/dhis/webapi/controller/tracker/TrackerExportController.java", "diffHunk": "@@ -0,0 +1,101 @@\n+package org.hisp.dhis.webapi.controller.tracker;\n+\n+/*\n+ * Copyright (c) 2004-2020, University of Oslo\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ * Redistributions of source code must retain the above copyright notice, this\n+ * list of conditions and the following disclaimer.\n+ *\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following disclaimer in the documentation\n+ * and/or other materials provided with the distribution.\n+ * Neither the name of the HISP project nor the names of its contributors may\n+ * be used to endorse or promote products derived from this software without\n+ * specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n+ * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+\n+import static org.hisp.dhis.webapi.controller.tracker.TrackerControllerSupport.RESOURCE_PATH;\n+import static org.springframework.http.MediaType.APPLICATION_JSON_VALUE;\n+\n+import java.util.Collection;\n+import java.util.List;\n+\n+import org.hisp.dhis.common.Pager;\n+import org.hisp.dhis.dxf2.events.trackedentity.TrackedEntityInstanceService;\n+import org.hisp.dhis.trackedentity.TrackedEntityInstanceQueryParams;\n+import org.hisp.dhis.tracker.domain.TrackedEntity;\n+import org.hisp.dhis.tracker.domain.mapper.TrackedEntityMapper;\n+import org.hisp.dhis.tracker.domain.web.PagingWrapper;\n+import org.hisp.dhis.webapi.controller.event.TrackedEntityInstanceCriteria;\n+import org.hisp.dhis.webapi.controller.event.mapper.TrackedEntityCriteriaMapper;\n+import org.hisp.dhis.webapi.service.ContextService;\n+import org.hisp.dhis.webapi.service.TrackedEntityInstanceSupportService;\n+import org.springframework.web.bind.annotation.GetMapping;\n+import org.springframework.web.bind.annotation.PathVariable;\n+import org.springframework.web.bind.annotation.RequestMapping;\n+import org.springframework.web.bind.annotation.RequestParam;\n+import org.springframework.web.bind.annotation.RestController;\n+\n+import lombok.RequiredArgsConstructor;\n+\n+@RestController\n+@RequestMapping( value = RESOURCE_PATH )\n+@RequiredArgsConstructor\n+public class TrackerExportController\n+{\n+    private final ContextService contextService;\n+\n+    private final TrackedEntityCriteriaMapper criteriaMapper;\n+\n+    private final TrackedEntityInstanceService trackedEntityInstanceService;\n+\n+    private final TrackedEntityMapper trackedEntityMapper;\n+\n+    private final TrackedEntityInstanceSupportService trackedEntityInstanceSupportService;\n+\n+    @GetMapping( produces = APPLICATION_JSON_VALUE )\n+    PagingWrapper<TrackedEntity> getInstances( TrackedEntityInstanceCriteria criteria )\n+    {\n+        List<String> fields = contextService.getFieldsFromRequest();\n+\n+        TrackedEntityInstanceQueryParams queryParams = criteriaMapper.map( criteria );\n+\n+        Collection<TrackedEntity> trackedEntityInstances = trackedEntityMapper\n+            .fromCollection( trackedEntityInstanceService.getTrackedEntityInstances2( queryParams,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTcyMjM1NQ=="}, "originalCommit": {"oid": "b6e78bbee1408e66562e0cc25ca0699e313b2fbb"}, "originalPosition": 78}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3657, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}