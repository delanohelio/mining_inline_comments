{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE5NzIzMDAz", "number": 6640, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQwODo1MzoyNFrOE4DxZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQwOTowOTowNFrOE4EKAg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI3MjE3NTA5OnYy", "diffSide": "RIGHT", "path": "dhis-2/dhis-services/dhis-service-tracker/src/main/java/org/hisp/dhis/tracker/DefaultTrackerProgramRuleService.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQwODo1MzoyNFrOHxwiww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQwOTowMDo1MFrOHxw1Yg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTkzNzYwMw==", "bodyText": "Just a suggestion. Instead of hiding the original exception, wouldn't it be better to use log.warn( \"message\", ex);", "url": "https://github.com/dhis2/dhis2-core/pull/6640#discussion_r521937603", "createdAt": "2020-11-12T08:53:24Z", "author": {"login": "zubaira"}, "path": "dhis-2/dhis-services/dhis-service-tracker/src/main/java/org/hisp/dhis/tracker/DefaultTrackerProgramRuleService.java", "diffHunk": "@@ -79,7 +82,12 @@ public DefaultTrackerProgramRuleService(\n             .collect( Collectors.toMap( Enrollment::getEnrollment, e -> {\n                 ProgramInstance enrollment = enrollmentTrackerConverterService.fromForRuleEngine( bundle.getPreheat(),\n                     e );\n-                return programRuleEngine.evaluate( enrollment, Sets.newHashSet() );\n+                try{\n+                    return programRuleEngine.evaluate( enrollment, Sets.newHashSet() );\n+                } catch (Exception ex) {\n+                    log.warn(\"Something bad happen calling rule engine. The reason should be an invalid payload\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff3fb4c8793bf8c4afdcdc71aac09cf34d610033"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTk0MjM3MA==", "bodyText": "Of course. Just got lost in the commit.\nThanks", "url": "https://github.com/dhis2/dhis2-core/pull/6640#discussion_r521942370", "createdAt": "2020-11-12T09:00:50Z", "author": {"login": "enricocolasante"}, "path": "dhis-2/dhis-services/dhis-service-tracker/src/main/java/org/hisp/dhis/tracker/DefaultTrackerProgramRuleService.java", "diffHunk": "@@ -79,7 +82,12 @@ public DefaultTrackerProgramRuleService(\n             .collect( Collectors.toMap( Enrollment::getEnrollment, e -> {\n                 ProgramInstance enrollment = enrollmentTrackerConverterService.fromForRuleEngine( bundle.getPreheat(),\n                     e );\n-                return programRuleEngine.evaluate( enrollment, Sets.newHashSet() );\n+                try{\n+                    return programRuleEngine.evaluate( enrollment, Sets.newHashSet() );\n+                } catch (Exception ex) {\n+                    log.warn(\"Something bad happen calling rule engine. The reason should be an invalid payload\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTkzNzYwMw=="}, "originalCommit": {"oid": "ff3fb4c8793bf8c4afdcdc71aac09cf34d610033"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI3MjIwMjE4OnYy", "diffSide": "RIGHT", "path": "dhis-2/dhis-services/dhis-service-tracker/src/main/java/org/hisp/dhis/tracker/DefaultTrackerProgramRuleService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQwOTowMDowMlrOHxwzbQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQwOTowMDowMlrOHxwzbQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTk0MTg2OQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                log.warn(\"Something bad happen calling rule engine. The reason should be an invalid payload\");\n          \n          \n            \n                                log.warn(\"Something bad happen calling rule engine. The reason should be an invalid payload\", ex);", "url": "https://github.com/dhis2/dhis2-core/pull/6640#discussion_r521941869", "createdAt": "2020-11-12T09:00:02Z", "author": {"login": "enricocolasante"}, "path": "dhis-2/dhis-services/dhis-service-tracker/src/main/java/org/hisp/dhis/tracker/DefaultTrackerProgramRuleService.java", "diffHunk": "@@ -79,7 +82,12 @@ public DefaultTrackerProgramRuleService(\n             .collect( Collectors.toMap( Enrollment::getEnrollment, e -> {\n                 ProgramInstance enrollment = enrollmentTrackerConverterService.fromForRuleEngine( bundle.getPreheat(),\n                     e );\n-                return programRuleEngine.evaluate( enrollment, Sets.newHashSet() );\n+                try{\n+                    return programRuleEngine.evaluate( enrollment, Sets.newHashSet() );\n+                } catch (Exception ex) {\n+                    log.warn(\"Something bad happen calling rule engine. The reason should be an invalid payload\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff3fb4c8793bf8c4afdcdc71aac09cf34d610033"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI3MjIyNDI3OnYy", "diffSide": "RIGHT", "path": "dhis-2/dhis-services/dhis-service-tracker/src/main/java/org/hisp/dhis/tracker/DefaultTrackerProgramRuleService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQwOTowNTo1MFrOHxxA9w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQwOTowNTo1MFrOHxxA9w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTk0NTMzNQ==", "bodyText": "code style ;)", "url": "https://github.com/dhis2/dhis2-core/pull/6640#discussion_r521945335", "createdAt": "2020-11-12T09:05:50Z", "author": {"login": "luciano-fiandesio"}, "path": "dhis-2/dhis-services/dhis-service-tracker/src/main/java/org/hisp/dhis/tracker/DefaultTrackerProgramRuleService.java", "diffHunk": "@@ -79,7 +82,12 @@ public DefaultTrackerProgramRuleService(\n             .collect( Collectors.toMap( Enrollment::getEnrollment, e -> {\n                 ProgramInstance enrollment = enrollmentTrackerConverterService.fromForRuleEngine( bundle.getPreheat(),\n                     e );\n-                return programRuleEngine.evaluate( enrollment, Sets.newHashSet() );\n+                try{", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f61fc84ebc49491afb6d526cc2955b61b8a0e86d"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI3MjIyNjEwOnYy", "diffSide": "RIGHT", "path": "dhis-2/dhis-services/dhis-service-tracker/src/main/java/org/hisp/dhis/tracker/DefaultTrackerProgramRuleService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQwOTowNjoxNFrOHxxCDw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQwOTowNjoxNFrOHxxCDw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTk0NTYxNQ==", "bodyText": "code style", "url": "https://github.com/dhis2/dhis2-core/pull/6640#discussion_r521945615", "createdAt": "2020-11-12T09:06:14Z", "author": {"login": "luciano-fiandesio"}, "path": "dhis-2/dhis-services/dhis-service-tracker/src/main/java/org/hisp/dhis/tracker/DefaultTrackerProgramRuleService.java", "diffHunk": "@@ -90,9 +98,14 @@ public DefaultTrackerProgramRuleService(\n             .stream()\n             .collect( Collectors.toMap( Event::getEvent, event -> {\n                 ProgramInstance enrollment = getEnrollment( bundle, event );\n-                return programRuleEngine.evaluate( enrollment,\n-                    eventTrackerConverterService.from( bundle.getPreheat(), event ),\n-                    getEventsFromEnrollment( enrollment.getUid(), bundle, events ) );\n+                try {\n+                    return programRuleEngine.evaluate(enrollment,\n+                            eventTrackerConverterService.from(bundle.getPreheat(), event),\n+                            getEventsFromEnrollment(enrollment.getUid(), bundle, events));\n+                } catch (Exception e){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f61fc84ebc49491afb6d526cc2955b61b8a0e86d"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI3MjIzODEwOnYy", "diffSide": "RIGHT", "path": "dhis-2/dhis-services/dhis-service-tracker/src/main/java/org/hisp/dhis/tracker/DefaultTrackerProgramRuleService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQwOTowOTowNFrOHxxJMQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQwOTowOTowNFrOHxxJMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTk0NzQ0MQ==", "bodyText": "I'm not sure about the message: I would not reference the payload, since we are catching a generic exception. Perhaps something along the line: \"An error occured during an Program RUle engine call for enrollment ..... Please check the response payload for additional information\"", "url": "https://github.com/dhis2/dhis2-core/pull/6640#discussion_r521947441", "createdAt": "2020-11-12T09:09:04Z", "author": {"login": "luciano-fiandesio"}, "path": "dhis-2/dhis-services/dhis-service-tracker/src/main/java/org/hisp/dhis/tracker/DefaultTrackerProgramRuleService.java", "diffHunk": "@@ -79,7 +82,12 @@ public DefaultTrackerProgramRuleService(\n             .collect( Collectors.toMap( Enrollment::getEnrollment, e -> {\n                 ProgramInstance enrollment = enrollmentTrackerConverterService.fromForRuleEngine( bundle.getPreheat(),\n                     e );\n-                return programRuleEngine.evaluate( enrollment, Sets.newHashSet() );\n+                try{\n+                    return programRuleEngine.evaluate( enrollment, Sets.newHashSet() );\n+                } catch (Exception ex) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f61fc84ebc49491afb6d526cc2955b61b8a0e86d"}, "originalPosition": 24}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3768, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}