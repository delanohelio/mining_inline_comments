{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY1MTIxNTc0", "number": 5897, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxNDo1MDoxM1rOEXqYfg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQwODo1NzoyM1rOEYZI5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzMjQ3MTAyOnYy", "diffSide": "RIGHT", "path": "dhis-2/dhis-services/dhis-service-validation/src/test/java/org/hisp/dhis/validation/ValidationNotificationServiceTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxNDo1MDoxM1rOG_k4SA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxNDo1MDoxM1rOG_k4SA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTMxNzcwNA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    this.periodService = new DefaultPeriodService(periodStore, sessionFactory);\n          \n          \n            \n                    this.periodService = new DefaultPeriodService( periodStore, sessionFactory );", "url": "https://github.com/dhis2/dhis2-core/pull/5897#discussion_r469317704", "createdAt": "2020-08-12T14:50:13Z", "author": {"login": "stian-sandvold"}, "path": "dhis-2/dhis-services/dhis-service-validation/src/test/java/org/hisp/dhis/validation/ValidationNotificationServiceTest.java", "diffHunk": "@@ -134,7 +139,7 @@ public void initTest()\n \n         subject = new DefaultValidationNotificationService(renderer, messageService, validationResultService);\n \n-        this.periodService = new DefaultPeriodService(periodStore);\n+        this.periodService = new DefaultPeriodService(periodStore, sessionFactory);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "799119efed0dd0f7e0c832d474c8be6dbefb4ce0"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk0MDEzMTU4OnYy", "diffSide": "RIGHT", "path": "dhis-2/dhis-services/dhis-service-core/src/main/java/org/hisp/dhis/period/DefaultPeriodService.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQwODo1NzoyM1rOHAtC3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQxMDozODo1MVrOHAwAzw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDUwMDA2MQ==", "bodyText": "Ideally, the close statement should have its own try-finally block, as the commit operation might also fail, leaving the session open. Perhaps move those two statements to a utility method.", "url": "https://github.com/dhis2/dhis2-core/pull/5897#discussion_r470500061", "createdAt": "2020-08-14T08:57:23Z", "author": {"login": "larshelge"}, "path": "dhis-2/dhis-services/dhis-service-core/src/main/java/org/hisp/dhis/period/DefaultPeriodService.java", "diffHunk": "@@ -284,6 +296,53 @@ public Period reloadPeriod( Period period )\n     {\n         return periodStore.reloadForceAddPeriod( period );\n     }\n+\n+    /**\n+     * Fix issue DHIS2-7539\n+     * If period doesn't exist in cache and database.\n+     * Need to add and sync with database right away in a separate session/transaction.\n+     * Otherwise will get foreign key constraint error in subsequence calls of batch.flush()\n+     **/\n+    @Override\n+    @Transactional(readOnly = true)\n+    public Period reloadIsoPeriodInStatelessSession( String isoPeriod )\n+    {\n+        Period period = PeriodType.getPeriodFromIsoString( isoPeriod );\n+\n+        if ( period == null )\n+        {\n+            return null;\n+        }\n+\n+        Period reloadedPeriod = periodStore.reloadPeriod( period );\n+\n+        if ( reloadedPeriod != null )\n+        {\n+            return reloadedPeriod;\n+        }\n+\n+        StatelessSession session = sessionFactory.openStatelessSession();\n+        session.beginTransaction();\n+        try\n+        {\n+            period.setPeriodType( reloadPeriodType( period.getPeriodType() ) );\n+\n+            session.insert( period );\n+\n+            return period;\n+        }\n+        catch ( Exception exception )\n+        {\n+            log.error( DebugUtils.getStackTrace( exception ) );\n+        }\n+        finally\n+        {\n+            session.getTransaction().commit();\n+            session.close();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "799119efed0dd0f7e0c832d474c8be6dbefb4ce0"}, "originalPosition": 88}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDU0ODY4Nw==", "bodyText": "Agree, fixed by adding method DbmsUtils.closeStatelessSession( session );", "url": "https://github.com/dhis2/dhis2-core/pull/5897#discussion_r470548687", "createdAt": "2020-08-14T10:38:51Z", "author": {"login": "vietnguyen"}, "path": "dhis-2/dhis-services/dhis-service-core/src/main/java/org/hisp/dhis/period/DefaultPeriodService.java", "diffHunk": "@@ -284,6 +296,53 @@ public Period reloadPeriod( Period period )\n     {\n         return periodStore.reloadForceAddPeriod( period );\n     }\n+\n+    /**\n+     * Fix issue DHIS2-7539\n+     * If period doesn't exist in cache and database.\n+     * Need to add and sync with database right away in a separate session/transaction.\n+     * Otherwise will get foreign key constraint error in subsequence calls of batch.flush()\n+     **/\n+    @Override\n+    @Transactional(readOnly = true)\n+    public Period reloadIsoPeriodInStatelessSession( String isoPeriod )\n+    {\n+        Period period = PeriodType.getPeriodFromIsoString( isoPeriod );\n+\n+        if ( period == null )\n+        {\n+            return null;\n+        }\n+\n+        Period reloadedPeriod = periodStore.reloadPeriod( period );\n+\n+        if ( reloadedPeriod != null )\n+        {\n+            return reloadedPeriod;\n+        }\n+\n+        StatelessSession session = sessionFactory.openStatelessSession();\n+        session.beginTransaction();\n+        try\n+        {\n+            period.setPeriodType( reloadPeriodType( period.getPeriodType() ) );\n+\n+            session.insert( period );\n+\n+            return period;\n+        }\n+        catch ( Exception exception )\n+        {\n+            log.error( DebugUtils.getStackTrace( exception ) );\n+        }\n+        finally\n+        {\n+            session.getTransaction().commit();\n+            session.close();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDUwMDA2MQ=="}, "originalCommit": {"oid": "799119efed0dd0f7e0c832d474c8be6dbefb4ce0"}, "originalPosition": 88}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3974, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}