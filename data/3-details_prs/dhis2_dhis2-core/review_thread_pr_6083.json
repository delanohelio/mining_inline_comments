{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc4NDg1NDM3", "number": 6083, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QwOToyMDo1MVrOEf5vpg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQwNzo0NToxOVrOEgR0FQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAxODg3Mzk4OnYy", "diffSide": "RIGHT", "path": "dhis-2/dhis-services/dhis-service-tracker/src/main/java/org/hisp/dhis/tracker/DefaultTrackerImportService.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QwOToyMDo1MVrOHMd4Xg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxMTo0MzoxM1rOHMiv5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjgzNDUyNg==", "bodyText": "@luciano-fiandesio  Your thoughts?", "url": "https://github.com/dhis2/dhis2-core/pull/6083#discussion_r482834526", "createdAt": "2020-09-03T09:20:51Z", "author": {"login": "ameenhere"}, "path": "dhis-2/dhis-services/dhis-service-tracker/src/main/java/org/hisp/dhis/tracker/DefaultTrackerImportService.java", "diffHunk": "@@ -102,32 +104,62 @@ public TrackerImportReport importTracker( TrackerImportParams params )\n         {\n             notifier.notify( params.getJobConfiguration(), \"(\" + params.getUsername() + \") Import:Start\" );\n         }\n+        \n+        try\n+        {\n \n-        List<TrackerBundle> trackerBundles = preheatBundle( params, importReport );\n+            List<TrackerBundle> trackerBundles = preheatBundle( params, importReport );\n \n-        trackerBundles = preProcessBundle( trackerBundles, importReport );\n+            trackerBundles = preProcessBundle( trackerBundles, importReport );\n \n-        TrackerValidationReport validationReport = validateBundle( params, importReport, trackerBundles );\n+            TrackerValidationReport validationReport = validateBundle( params, importReport, trackerBundles );\n \n-        if ( validationReport.hasErrors() && params.getAtomicMode() == AtomicMode.ALL )\n-        {\n-            importReport.setStatus( TrackerStatus.ERROR );\n-        }\n-        else\n-        {\n-            if ( TrackerImportStrategy.DELETE == params.getImportStrategy() )\n+            if ( validationReport.hasErrors() && params.getAtomicMode() == AtomicMode.ALL )\n             {\n-                deleteBundle( params, importReport, trackerBundles );\n+                importReport.setStatus( TrackerStatus.ERROR );\n             }\n             else\n             {\n-                commitBundle( params, importReport, trackerBundles );\n+                if ( TrackerImportStrategy.DELETE == params.getImportStrategy() )\n+                {\n+                    deleteBundle( params, importReport, trackerBundles );\n+                }\n+                else\n+                {\n+                    commitBundle( params, importReport, trackerBundles );\n+                }\n             }\n+\n+            importReport.getTimings().setTotalImport( requestTimer.toString() );\n+\n+            TrackerBundleReportModeUtils.filter( importReport, params.getReportMode() );\n+\n         }\n+        catch ( Exception e )\n+        {\n+            \n+            TrackerValidationReport tvr = importReport.getTrackerValidationReport();\n+            \n+            if ( tvr == null )\n+            {\n+                tvr = new TrackerValidationReport();\n+            }\n+            \n+            tvr.getErrorReports().add(new TrackerErrorReport( null, \"Exception:\"+e.getMessage(), TrackerErrorCode.E9999, 0, null, null, null, null ));\n+            importReport.setTrackerValidationReport( tvr );\n+            importReport.setStatus( TrackerStatus.ERROR );\n+            \n+            if ( params.hasJobConfiguration() )\n+            {\n+                notifier.update( params.getJobConfiguration(), \"(\" + params.getUsername() + \") Import:Failed with exception: \" + e.getMessage(), true );\n+                notifier.addJobSummary( params.getJobConfiguration(), importReport, TrackerImportReport.class );\n+            }\n+            \n+            //TODO: Should this be rethrown in case of sync? Or is the error report added to the import report in the above lines enough?\n+            throw e;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d4ff562a5310c3d51d0efac153fe7a8f736ad452"}, "originalPosition": 77}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjkxNDI3OA==", "bodyText": "I don't think we should rethrow. If we rethrow, then the exception will be \"handled\" by the SecurityContextRunnable class (or a subclass). Please, see my comment in the approve box, based on our conversation.", "url": "https://github.com/dhis2/dhis2-core/pull/6083#discussion_r482914278", "createdAt": "2020-09-03T11:43:13Z", "author": {"login": "luciano-fiandesio"}, "path": "dhis-2/dhis-services/dhis-service-tracker/src/main/java/org/hisp/dhis/tracker/DefaultTrackerImportService.java", "diffHunk": "@@ -102,32 +104,62 @@ public TrackerImportReport importTracker( TrackerImportParams params )\n         {\n             notifier.notify( params.getJobConfiguration(), \"(\" + params.getUsername() + \") Import:Start\" );\n         }\n+        \n+        try\n+        {\n \n-        List<TrackerBundle> trackerBundles = preheatBundle( params, importReport );\n+            List<TrackerBundle> trackerBundles = preheatBundle( params, importReport );\n \n-        trackerBundles = preProcessBundle( trackerBundles, importReport );\n+            trackerBundles = preProcessBundle( trackerBundles, importReport );\n \n-        TrackerValidationReport validationReport = validateBundle( params, importReport, trackerBundles );\n+            TrackerValidationReport validationReport = validateBundle( params, importReport, trackerBundles );\n \n-        if ( validationReport.hasErrors() && params.getAtomicMode() == AtomicMode.ALL )\n-        {\n-            importReport.setStatus( TrackerStatus.ERROR );\n-        }\n-        else\n-        {\n-            if ( TrackerImportStrategy.DELETE == params.getImportStrategy() )\n+            if ( validationReport.hasErrors() && params.getAtomicMode() == AtomicMode.ALL )\n             {\n-                deleteBundle( params, importReport, trackerBundles );\n+                importReport.setStatus( TrackerStatus.ERROR );\n             }\n             else\n             {\n-                commitBundle( params, importReport, trackerBundles );\n+                if ( TrackerImportStrategy.DELETE == params.getImportStrategy() )\n+                {\n+                    deleteBundle( params, importReport, trackerBundles );\n+                }\n+                else\n+                {\n+                    commitBundle( params, importReport, trackerBundles );\n+                }\n             }\n+\n+            importReport.getTimings().setTotalImport( requestTimer.toString() );\n+\n+            TrackerBundleReportModeUtils.filter( importReport, params.getReportMode() );\n+\n         }\n+        catch ( Exception e )\n+        {\n+            \n+            TrackerValidationReport tvr = importReport.getTrackerValidationReport();\n+            \n+            if ( tvr == null )\n+            {\n+                tvr = new TrackerValidationReport();\n+            }\n+            \n+            tvr.getErrorReports().add(new TrackerErrorReport( null, \"Exception:\"+e.getMessage(), TrackerErrorCode.E9999, 0, null, null, null, null ));\n+            importReport.setTrackerValidationReport( tvr );\n+            importReport.setStatus( TrackerStatus.ERROR );\n+            \n+            if ( params.hasJobConfiguration() )\n+            {\n+                notifier.update( params.getJobConfiguration(), \"(\" + params.getUsername() + \") Import:Failed with exception: \" + e.getMessage(), true );\n+                notifier.addJobSummary( params.getJobConfiguration(), importReport, TrackerImportReport.class );\n+            }\n+            \n+            //TODO: Should this be rethrown in case of sync? Or is the error report added to the import report in the above lines enough?\n+            throw e;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjgzNDUyNg=="}, "originalCommit": {"oid": "d4ff562a5310c3d51d0efac153fe7a8f736ad452"}, "originalPosition": 77}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyMjgxNzQ5OnYy", "diffSide": "RIGHT", "path": "dhis-2/dhis-services/dhis-service-tracker/src/main/java/org/hisp/dhis/tracker/DefaultTrackerImportService.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQwNzo0NToxOVrOHNDOlA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQwODowMjozM1rOHNDyNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzQ0NjQyMA==", "bodyText": "There is a static method to create new errors ValidationErrorReporter.newReport(errorCode) and then you can add an arg.\nYou can find a lot of examples in the validation hooks.\nNot a big change, but we avoid to have all this null in the constructor", "url": "https://github.com/dhis2/dhis2-core/pull/6083#discussion_r483446420", "createdAt": "2020-09-04T07:45:19Z", "author": {"login": "enricocolasante"}, "path": "dhis-2/dhis-services/dhis-service-tracker/src/main/java/org/hisp/dhis/tracker/DefaultTrackerImportService.java", "diffHunk": "@@ -102,32 +107,60 @@ public TrackerImportReport importTracker( TrackerImportParams params )\n         {\n             notifier.notify( params.getJobConfiguration(), \"(\" + params.getUsername() + \") Import:Start\" );\n         }\n+        \n+        try\n+        {\n \n-        List<TrackerBundle> trackerBundles = preheatBundle( params, importReport );\n+            List<TrackerBundle> trackerBundles = preheatBundle( params, importReport );\n \n-        trackerBundles = preProcessBundle( trackerBundles, importReport );\n+            trackerBundles = preProcessBundle( trackerBundles, importReport );\n \n-        TrackerValidationReport validationReport = validateBundle( params, importReport, trackerBundles );\n+            TrackerValidationReport validationReport = validateBundle( params, importReport, trackerBundles );\n \n-        if ( validationReport.hasErrors() && params.getAtomicMode() == AtomicMode.ALL )\n-        {\n-            importReport.setStatus( TrackerStatus.ERROR );\n-        }\n-        else\n-        {\n-            if ( TrackerImportStrategy.DELETE == params.getImportStrategy() )\n+            if ( validationReport.hasErrors() && params.getAtomicMode() == AtomicMode.ALL )\n             {\n-                deleteBundle( params, importReport, trackerBundles );\n+                importReport.setStatus( TrackerStatus.ERROR );\n             }\n             else\n             {\n-                commitBundle( params, importReport, trackerBundles );\n+                if ( TrackerImportStrategy.DELETE == params.getImportStrategy() )\n+                {\n+                    deleteBundle( params, importReport, trackerBundles );\n+                }\n+                else\n+                {\n+                    commitBundle( params, importReport, trackerBundles );\n+                }\n             }\n+\n+            importReport.getTimings().setTotalImport( requestTimer.toString() );\n+\n+            TrackerBundleReportModeUtils.filter( importReport, params.getReportMode() );\n+\n         }\n+        catch ( Exception e )\n+        {\n+            log.error( \"Exception thrown during import.\",e );\n+            \n+            TrackerValidationReport tvr = importReport.getTrackerValidationReport();\n+            \n+            if ( tvr == null )\n+            {\n+                tvr = new TrackerValidationReport();\n+            }\n+            \n+            tvr.getErrorReports().add(new TrackerErrorReport( null, \"Exception:\"+e.getMessage(), TrackerErrorCode.E9999, 0, null, null, null, null ));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d636d78108d3e74e5c053c48febd67119d665ad0"}, "originalPosition": 81}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzQ1NTU0Mg==", "bodyText": "Good point! Thanks", "url": "https://github.com/dhis2/dhis2-core/pull/6083#discussion_r483455542", "createdAt": "2020-09-04T08:02:33Z", "author": {"login": "ameenhere"}, "path": "dhis-2/dhis-services/dhis-service-tracker/src/main/java/org/hisp/dhis/tracker/DefaultTrackerImportService.java", "diffHunk": "@@ -102,32 +107,60 @@ public TrackerImportReport importTracker( TrackerImportParams params )\n         {\n             notifier.notify( params.getJobConfiguration(), \"(\" + params.getUsername() + \") Import:Start\" );\n         }\n+        \n+        try\n+        {\n \n-        List<TrackerBundle> trackerBundles = preheatBundle( params, importReport );\n+            List<TrackerBundle> trackerBundles = preheatBundle( params, importReport );\n \n-        trackerBundles = preProcessBundle( trackerBundles, importReport );\n+            trackerBundles = preProcessBundle( trackerBundles, importReport );\n \n-        TrackerValidationReport validationReport = validateBundle( params, importReport, trackerBundles );\n+            TrackerValidationReport validationReport = validateBundle( params, importReport, trackerBundles );\n \n-        if ( validationReport.hasErrors() && params.getAtomicMode() == AtomicMode.ALL )\n-        {\n-            importReport.setStatus( TrackerStatus.ERROR );\n-        }\n-        else\n-        {\n-            if ( TrackerImportStrategy.DELETE == params.getImportStrategy() )\n+            if ( validationReport.hasErrors() && params.getAtomicMode() == AtomicMode.ALL )\n             {\n-                deleteBundle( params, importReport, trackerBundles );\n+                importReport.setStatus( TrackerStatus.ERROR );\n             }\n             else\n             {\n-                commitBundle( params, importReport, trackerBundles );\n+                if ( TrackerImportStrategy.DELETE == params.getImportStrategy() )\n+                {\n+                    deleteBundle( params, importReport, trackerBundles );\n+                }\n+                else\n+                {\n+                    commitBundle( params, importReport, trackerBundles );\n+                }\n             }\n+\n+            importReport.getTimings().setTotalImport( requestTimer.toString() );\n+\n+            TrackerBundleReportModeUtils.filter( importReport, params.getReportMode() );\n+\n         }\n+        catch ( Exception e )\n+        {\n+            log.error( \"Exception thrown during import.\",e );\n+            \n+            TrackerValidationReport tvr = importReport.getTrackerValidationReport();\n+            \n+            if ( tvr == null )\n+            {\n+                tvr = new TrackerValidationReport();\n+            }\n+            \n+            tvr.getErrorReports().add(new TrackerErrorReport( null, \"Exception:\"+e.getMessage(), TrackerErrorCode.E9999, 0, null, null, null, null ));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzQ0NjQyMA=="}, "originalCommit": {"oid": "d636d78108d3e74e5c053c48febd67119d665ad0"}, "originalPosition": 81}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3895, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}