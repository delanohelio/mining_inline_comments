{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzU5NjE0MDEw", "number": 4673, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQxMToyNDo1N1rODWgz2A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQxMToyNDo1N1rODWgz2A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI0OTMyODI0OnYy", "diffSide": "RIGHT", "path": "dhis-2/dhis-services/dhis-service-analytics/src/main/java/org/hisp/dhis/analytics/event/EventQueryParams.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQxMToyNDo1N1rOFbUCmQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQxNTo1NDoyM1rOFbbWNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDE4NDIxNw==", "bodyText": "Since \"if at least one Program Indicator doesn't validate, we fail the validation\", could instead of checking all program indicators just break when we find one program indicator that does not validate?\n(It is needless to check all if we fail at the first false).\nInstead of using arrays we can also rewrite using a stream and anyMatch with a predicate.", "url": "https://github.com/dhis2/dhis2-core/pull/4673#discussion_r364184217", "createdAt": "2020-01-08T11:24:57Z", "author": {"login": "larshelge"}, "path": "dhis-2/dhis-services/dhis-service-analytics/src/main/java/org/hisp/dhis/analytics/event/EventQueryParams.java", "diffHunk": "@@ -500,6 +503,33 @@ public boolean orgUnitFieldIsValid()\n             return true;\n         }\n \n+        if ( program != null )\n+        {\n+            return validateProgramHasOrgUnitField( program );\n+        }\n+\n+        if ( !itemProgramIndicators.isEmpty() )\n+        {\n+            boolean[] isValidated = new boolean[itemProgramIndicators.size()];\n+\n+            for ( int i = 0; i < itemProgramIndicators.size(); i++ )\n+            {\n+                ProgramIndicator itemProgramIndicator = itemProgramIndicators.get( i );\n+                Program program = itemProgramIndicator.getProgram();\n+\n+                isValidated[i] = validateProgramHasOrgUnitField( program );\n+\n+            }\n+            // if at least one Program Indicator doesn't validate, fail the validation\n+            return !Booleans.contains( isValidated, false );", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7f68a3bb966413976e2286925d53107ce23bf262"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDE4NjQxNw==", "bodyText": "yes, absolutely. Is the logic ok, though? I kind of made it up myself. For instance, if all the PI fails shall we considering falling back to the reporting unit?", "url": "https://github.com/dhis2/dhis2-core/pull/4673#discussion_r364186417", "createdAt": "2020-01-08T11:30:29Z", "author": {"login": "luciano-fiandesio"}, "path": "dhis-2/dhis-services/dhis-service-analytics/src/main/java/org/hisp/dhis/analytics/event/EventQueryParams.java", "diffHunk": "@@ -500,6 +503,33 @@ public boolean orgUnitFieldIsValid()\n             return true;\n         }\n \n+        if ( program != null )\n+        {\n+            return validateProgramHasOrgUnitField( program );\n+        }\n+\n+        if ( !itemProgramIndicators.isEmpty() )\n+        {\n+            boolean[] isValidated = new boolean[itemProgramIndicators.size()];\n+\n+            for ( int i = 0; i < itemProgramIndicators.size(); i++ )\n+            {\n+                ProgramIndicator itemProgramIndicator = itemProgramIndicators.get( i );\n+                Program program = itemProgramIndicator.getProgram();\n+\n+                isValidated[i] = validateProgramHasOrgUnitField( program );\n+\n+            }\n+            // if at least one Program Indicator doesn't validate, fail the validation\n+            return !Booleans.contains( isValidated, false );", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDE4NDIxNw=="}, "originalCommit": {"oid": "7f68a3bb966413976e2286925d53107ce23bf262"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDE5NDg2Ng==", "bodyText": "Simplified the logic  using stream.anyMatch", "url": "https://github.com/dhis2/dhis2-core/pull/4673#discussion_r364194866", "createdAt": "2020-01-08T11:53:28Z", "author": {"login": "luciano-fiandesio"}, "path": "dhis-2/dhis-services/dhis-service-analytics/src/main/java/org/hisp/dhis/analytics/event/EventQueryParams.java", "diffHunk": "@@ -500,6 +503,33 @@ public boolean orgUnitFieldIsValid()\n             return true;\n         }\n \n+        if ( program != null )\n+        {\n+            return validateProgramHasOrgUnitField( program );\n+        }\n+\n+        if ( !itemProgramIndicators.isEmpty() )\n+        {\n+            boolean[] isValidated = new boolean[itemProgramIndicators.size()];\n+\n+            for ( int i = 0; i < itemProgramIndicators.size(); i++ )\n+            {\n+                ProgramIndicator itemProgramIndicator = itemProgramIndicators.get( i );\n+                Program program = itemProgramIndicator.getProgram();\n+\n+                isValidated[i] = validateProgramHasOrgUnitField( program );\n+\n+            }\n+            // if at least one Program Indicator doesn't validate, fail the validation\n+            return !Booleans.contains( isValidated, false );", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDE4NDIxNw=="}, "originalCommit": {"oid": "7f68a3bb966413976e2286925d53107ce23bf262"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDMwMzkyNA==", "bodyText": "I think the logic makes sense.", "url": "https://github.com/dhis2/dhis2-core/pull/4673#discussion_r364303924", "createdAt": "2020-01-08T15:54:23Z", "author": {"login": "larshelge"}, "path": "dhis-2/dhis-services/dhis-service-analytics/src/main/java/org/hisp/dhis/analytics/event/EventQueryParams.java", "diffHunk": "@@ -500,6 +503,33 @@ public boolean orgUnitFieldIsValid()\n             return true;\n         }\n \n+        if ( program != null )\n+        {\n+            return validateProgramHasOrgUnitField( program );\n+        }\n+\n+        if ( !itemProgramIndicators.isEmpty() )\n+        {\n+            boolean[] isValidated = new boolean[itemProgramIndicators.size()];\n+\n+            for ( int i = 0; i < itemProgramIndicators.size(); i++ )\n+            {\n+                ProgramIndicator itemProgramIndicator = itemProgramIndicators.get( i );\n+                Program program = itemProgramIndicator.getProgram();\n+\n+                isValidated[i] = validateProgramHasOrgUnitField( program );\n+\n+            }\n+            // if at least one Program Indicator doesn't validate, fail the validation\n+            return !Booleans.contains( isValidated, false );", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDE4NDIxNw=="}, "originalCommit": {"oid": "7f68a3bb966413976e2286925d53107ce23bf262"}, "originalPosition": 58}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3643, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}