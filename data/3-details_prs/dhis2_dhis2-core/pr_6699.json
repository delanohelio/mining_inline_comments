{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIyMzE0Mjc4", "number": 6699, "title": "fix: NPE when retrieving relationship with event", "bodyText": "", "createdAt": "2020-11-17T10:47:36Z", "url": "https://github.com/dhis2/dhis2-core/pull/6699", "merged": true, "mergeCommit": {"oid": "0da875a0811106b4619c753dadeee71cb7cab747"}, "closed": true, "closedAt": "2020-12-17T08:29:55Z", "author": {"login": "stian-sandvold"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdcxcGEgH2gAyNTIyMzE0Mjc4OjkzZWNkY2NlMWRmM2I2OTg3ZGE2YTBmZGUyNmRjNmEyYWY0YjAyZWY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdmvuf2gH2gAyNTIyMzE0Mjc4OjM4OWMzNmU4NWJhZTlhYjFjMmMxODU0ZmIzMDc2YjY1NTI4Yzg4NTA=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "93ecdcce1df3b6987da6a0fde26dc6a2af4b02ef", "author": {"user": {"login": "stian-sandvold", "name": "Stian Sandvold"}}, "url": "https://github.com/dhis2/dhis2-core/commit/93ecdcce1df3b6987da6a0fde26dc6a2af4b02ef", "committedDate": "2020-11-15T14:43:09Z", "message": "Updated the Converter class; Fixed failing tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c3f11e59a52bb38b78c029df4d75d05fa8db08ed", "author": {"user": {"login": "stian-sandvold", "name": "Stian Sandvold"}}, "url": "https://github.com/dhis2/dhis2-core/commit/c3f11e59a52bb38b78c029df4d75d05fa8db08ed", "committedDate": "2020-11-16T07:58:29Z", "message": "expand import for Assert.*"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "efac254e3ce0af93a656b68a1ab97f42f6af735d", "author": {"user": {"login": "stian-sandvold", "name": "Stian Sandvold"}}, "url": "https://github.com/dhis2/dhis2-core/commit/efac254e3ce0af93a656b68a1ab97f42f6af735d", "committedDate": "2020-11-17T09:27:41Z", "message": "Fixed code based on initial feedback"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1adca824b3dd60095d1350829836a0463e1d9d8c", "author": {"user": {"login": "stian-sandvold", "name": "Stian Sandvold"}}, "url": "https://github.com/dhis2/dhis2-core/commit/1adca824b3dd60095d1350829836a0463e1d9d8c", "committedDate": "2020-11-17T09:31:19Z", "message": "Merge branch 'NTI-converter-update' of github.com:dhis2/dhis2-core into NTI-converter-update"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "46d87f4dfbf8ecf3b7e6a75823ac54ee2eddc70e", "author": {"user": {"login": "stian-sandvold", "name": "Stian Sandvold"}}, "url": "https://github.com/dhis2/dhis2-core/commit/46d87f4dfbf8ecf3b7e6a75823ac54ee2eddc70e", "committedDate": "2020-11-17T10:45:28Z", "message": "Add a null check for a stream that could cause NPE"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMyMzg0OTQy", "url": "https://github.com/dhis2/dhis2-core/pull/6699#pullrequestreview-532384942", "createdAt": "2020-11-17T13:56:16Z", "commit": {"oid": "46d87f4dfbf8ecf3b7e6a75823ac54ee2eddc70e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM0MTExOTg4", "url": "https://github.com/dhis2/dhis2-core/pull/6699#pullrequestreview-534111988", "createdAt": "2020-11-19T06:22:58Z", "commit": {"oid": "46d87f4dfbf8ecf3b7e6a75823ac54ee2eddc70e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM0MTU3MTY3", "url": "https://github.com/dhis2/dhis2-core/pull/6699#pullrequestreview-534157167", "createdAt": "2020-11-19T07:56:07Z", "commit": {"oid": "46d87f4dfbf8ecf3b7e6a75823ac54ee2eddc70e"}, "state": "DISMISSED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQwNzo1NjowN1rOH2QqBw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQwNzo1Nzo1OFrOH2Qtjw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjY1ODA1NQ==", "bodyText": "As we discussed, make sure that we only generate UID for enrollment.getEnrollment()\nThe trackedEntity property should be left empty if it's not present in the original payload\nEnrollment:\nupdateReference(enrollment.getEnrollment)\nenrollment.getTei -> isEmpty() ? null : tei", "url": "https://github.com/dhis2/dhis2-core/pull/6699#discussion_r526658055", "createdAt": "2020-11-19T07:56:07Z", "author": {"login": "luciano-fiandesio"}, "path": "dhis-2/dhis-services/dhis-service-tracker/src/main/java/org/hisp/dhis/tracker/converter/TrackerBundleParamsConverter.java", "diffHunk": "@@ -84,174 +82,238 @@\n     extends\n     StdConverter<TrackerBundleParams, TrackerBundleParams>\n {\n+\n+    /**\n+     * Iterates over the collections of a dataBundle. If any objects in those collections have objects nested within\n+     * them, they are extracted. For each object we process, we make sure all references are valid as well.\n+     *\n+     * @param dataBundle containing collections to check and update.\n+     * @return a dataBundle with a flattened data structure, and valid uid references.\n+     */\n     @Override\n-    public TrackerBundleParams convert( TrackerBundleParams bundle )\n+    public TrackerBundleParams convert( TrackerBundleParams dataBundle )\n     {\n-        // pre assign UIDs to entities, if UIDs are missing\n-        generateUid( bundle );\n+        Map<String, TrackedEntity> trackedEntityMap = new HashMap<>();\n+        Map<String, Enrollment> enrollmentHashMap = new HashMap<>();\n+        Map<String, Event> eventHashMap = new HashMap<>();\n+        Map<String, Relationship> relationshipHashMap = new HashMap<>();\n \n-        if ( hasNestedStructure( bundle ) )\n+        // Extract all enrollments and relationships, and set parent reference.\n+        for ( TrackedEntity te : dataBundle.getTrackedEntities() )\n         {\n-            flattenPayload( bundle );\n-        }\n+            updateTrackedEntityReferences( te );\n+            trackedEntityMap.put( te.getTrackedEntity(), te );\n \n-        return bundle;\n-    }\n+            extractEnrollments( te )\n+                .forEach( enrollment -> enrollmentHashMap.put( enrollment.getEnrollment(), enrollment ) );\n \n-    private void flattenPayload( TrackerBundleParams bundle )\n-    {\n+            extractRelationships( te )\n+                .forEach( relationship -> relationshipHashMap.put( relationship.getRelationship(), relationship ) );\n+        }\n \n-        List<Event> events = new ArrayList<>();\n+        // Set UID for all enrollments and notes\n+        dataBundle.getEnrollments().stream()\n+            .peek( enrollment -> updateEnrollmentReferences( enrollment, enrollment.getTrackedEntity() ) )", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "46d87f4dfbf8ecf3b7e6a75823ac54ee2eddc70e"}, "originalPosition": 73}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjY1ODk1OQ==", "bodyText": "As we discussed, make sure that we only generate UID for event.setEvent()\nThe trackedEntity and enrollment property should be left empty if it's not present in the original payload.\nEvent:\nUpdateReference(event.getEvent)\nevent.getEnrollment -> isEmpty() ? null : enrollment\nevent.getTei -> isEmpty()? null : tei", "url": "https://github.com/dhis2/dhis2-core/pull/6699#discussion_r526658959", "createdAt": "2020-11-19T07:57:58Z", "author": {"login": "luciano-fiandesio"}, "path": "dhis-2/dhis-services/dhis-service-tracker/src/main/java/org/hisp/dhis/tracker/converter/TrackerBundleParamsConverter.java", "diffHunk": "@@ -84,174 +82,238 @@\n     extends\n     StdConverter<TrackerBundleParams, TrackerBundleParams>\n {\n+\n+    /**\n+     * Iterates over the collections of a dataBundle. If any objects in those collections have objects nested within\n+     * them, they are extracted. For each object we process, we make sure all references are valid as well.\n+     *\n+     * @param dataBundle containing collections to check and update.\n+     * @return a dataBundle with a flattened data structure, and valid uid references.\n+     */\n     @Override\n-    public TrackerBundleParams convert( TrackerBundleParams bundle )\n+    public TrackerBundleParams convert( TrackerBundleParams dataBundle )\n     {\n-        // pre assign UIDs to entities, if UIDs are missing\n-        generateUid( bundle );\n+        Map<String, TrackedEntity> trackedEntityMap = new HashMap<>();\n+        Map<String, Enrollment> enrollmentHashMap = new HashMap<>();\n+        Map<String, Event> eventHashMap = new HashMap<>();\n+        Map<String, Relationship> relationshipHashMap = new HashMap<>();\n \n-        if ( hasNestedStructure( bundle ) )\n+        // Extract all enrollments and relationships, and set parent reference.\n+        for ( TrackedEntity te : dataBundle.getTrackedEntities() )\n         {\n-            flattenPayload( bundle );\n-        }\n+            updateTrackedEntityReferences( te );\n+            trackedEntityMap.put( te.getTrackedEntity(), te );\n \n-        return bundle;\n-    }\n+            extractEnrollments( te )\n+                .forEach( enrollment -> enrollmentHashMap.put( enrollment.getEnrollment(), enrollment ) );\n \n-    private void flattenPayload( TrackerBundleParams bundle )\n-    {\n+            extractRelationships( te )\n+                .forEach( relationship -> relationshipHashMap.put( relationship.getRelationship(), relationship ) );\n+        }\n \n-        List<Event> events = new ArrayList<>();\n+        // Set UID for all enrollments and notes\n+        dataBundle.getEnrollments().stream()\n+            .peek( enrollment -> updateEnrollmentReferences( enrollment, enrollment.getTrackedEntity() ) )\n+            .forEach( enrollment -> enrollmentHashMap.put( enrollment.getEnrollment(), enrollment ) );\n \n-        List<Enrollment> enrollments = new ArrayList<>();\n+        // Extract all events and relationships, and set parent references\n+        for ( Enrollment enrollment : enrollmentHashMap.values() )\n+        {\n+            extractEvents( enrollment )\n+                .forEach( event -> eventHashMap.put( event.getEvent(), event ) );\n \n-        Set<Relationship> relationships = new HashSet<>();\n+            extractRelationships( enrollment )\n+                .forEach( relationship -> relationshipHashMap.put( relationship.getRelationship(), relationship ) );\n \n-        // Iterate over **all** enrollments\n-        for ( Enrollment enrollment : bundle.getTrackedEntities().stream()\n-            .flatMap( l -> l.getEnrollments().stream() ).collect( Collectors.toList() ) )\n-        {\n-            // collect all events from enrollments and add them to the flattened events collection\n-            events.addAll( enrollment.getEvents().stream().map( e -> addParent( e, enrollment.getEnrollment() ) )\n-                .collect( Collectors.toList() ) );\n-\n-            // Extract relationships from enrollment\n-            relationships.addAll( enrollment.getRelationships() );\n-\n-            // Extract relationships from events\n-            relationships\n-                .addAll( events.stream().flatMap( l -> l.getRelationships().stream() ).collect( Collectors.toSet() ) );\n-\n-            // remove events and relationships from enrollment\n-            enrollment.setEvents( Collections.emptyList() );\n-            enrollment.setRelationships( Collections.emptyList() );\n-            // remove relationships from events\n-            events.forEach( e -> e.setRelationships( Collections.emptyList() ) );\n+            enrollment.setNotes( enrollment.getNotes().stream()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "46d87f4dfbf8ecf3b7e6a75823ac54ee2eddc70e"}, "originalPosition": 107}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b7f6af3ac02f10f68bb8e904db64d4edc36b0518", "author": {"user": {"login": "stian-sandvold", "name": "Stian Sandvold"}}, "url": "https://github.com/dhis2/dhis2-core/commit/b7f6af3ac02f10f68bb8e904db64d4edc36b0518", "committedDate": "2020-11-23T08:28:28Z", "message": "fix invalid generation of uids"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3e10e59f4133c7407a44141f97cfea5a6d05b865", "author": {"user": {"login": "stian-sandvold", "name": "Stian Sandvold"}}, "url": "https://github.com/dhis2/dhis2-core/commit/3e10e59f4133c7407a44141f97cfea5a6d05b865", "committedDate": "2020-11-23T08:30:12Z", "message": "Merge branch 'master' into NPE-fix-relationship-with-event"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a957cdc59953e02c6cd9ea26548ecd171f8240dc", "author": {"user": {"login": "stian-sandvold", "name": "Stian Sandvold"}}, "url": "https://github.com/dhis2/dhis2-core/commit/a957cdc59953e02c6cd9ea26548ecd171f8240dc", "committedDate": "2020-12-15T14:35:18Z", "message": "Merge branch 'master' into NPE-fix-relationship-with-event"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "389c36e85bae9ab1c2c1854fb3076b65528c8850", "author": {"user": {"login": "stian-sandvold", "name": "Stian Sandvold"}}, "url": "https://github.com/dhis2/dhis2-core/commit/389c36e85bae9ab1c2c1854fb3076b65528c8850", "committedDate": "2020-12-16T14:22:41Z", "message": "Merge branch 'master' into NPE-fix-relationship-with-event"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2277, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}