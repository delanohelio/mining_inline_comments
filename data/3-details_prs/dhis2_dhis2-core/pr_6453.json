{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA3Mjk4MTE2", "number": 6453, "title": "refactor: bind @RequestParam to object in Analytics controller", "bodyText": "This refactor aims at improving the maintenance of the Analytics and Analytics Event controllers, by removing the list of @RequestParam annotations in each method of the controllers and replacing it with a new class that encapsulates all the Analytics argument.\nAdditionally, the @RequestMapping annotation has been replaced with @GetMapping.\nFix deprecation warning in some tests, related to wrong Mockito class being used.", "createdAt": "2020-10-21T06:46:27Z", "url": "https://github.com/dhis2/dhis2-core/pull/6453", "merged": true, "mergeCommit": {"oid": "ef4caab1ff21a6749fef14e735e38d89d8fe07a0"}, "closed": true, "closedAt": "2020-10-28T15:36:55Z", "author": {"login": "luciano-fiandesio"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdUo1jWgFqTUxMzQxMzI2OA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdW90yPABqjM5MzEzMzM1MDI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEzNDEzMjY4", "url": "https://github.com/dhis2/dhis2-core/pull/6453#pullrequestreview-513413268", "createdAt": "2020-10-21T08:10:24Z", "commit": {"oid": "a0256b7dd6e86127acf870b77dc19639c2fd0ccb"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQwODoxMDoyNFrOHlfe4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQwODoxMDoyNFrOHlfe4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTA3NTE2OA==", "bodyText": "I suggest using @link instead of @see.", "url": "https://github.com/dhis2/dhis2-core/pull/6453#discussion_r509075168", "createdAt": "2020-10-21T08:10:24Z", "author": {"login": "larshelge"}, "path": "dhis-2/dhis-api/src/main/java/org/hisp/dhis/common/AnalyticsQueryCriteria.java", "diffHunk": "@@ -0,0 +1,184 @@\n+package org.hisp.dhis.common;\n+\n+import java.util.Date;\n+import java.util.Set;\n+\n+import org.hisp.dhis.analytics.AggregationType;\n+import org.hisp.dhis.analytics.SortOrder;\n+import org.hisp.dhis.analytics.UserOrgUnitType;\n+\n+import lombok.Data;\n+import lombok.NoArgsConstructor;\n+\n+/**\n+ * This class contains all the criteria that can be used to execute a DHIS2\n+ * analytics query using the {@see AnalyticsController}\n+ */\n+@Data\n+@NoArgsConstructor\n+public class AnalyticsQueryCriteria\n+{\n+    /**\n+     * The analytics dimensions\n+     */\n+    private Set<String> dimension;\n+\n+    /**\n+     * Filters to apply to the analytics query\n+     */\n+    private Set<String> filter;\n+\n+    /**\n+     * The {@see AggregationType}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a0256b7dd6e86127acf870b77dc19639c2fd0ccb"}, "originalPosition": 32}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEzNDE0NTc5", "url": "https://github.com/dhis2/dhis2-core/pull/6453#pullrequestreview-513414579", "createdAt": "2020-10-21T08:11:57Z", "commit": {"oid": "a0256b7dd6e86127acf870b77dc19639c2fd0ccb"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQwODoxMTo1OFrOHlfi6g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQwODoxMTo1OFrOHlfi6g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTA3NjIwMg==", "bodyText": "Codestyle, indent.", "url": "https://github.com/dhis2/dhis2-core/pull/6453#discussion_r509076202", "createdAt": "2020-10-21T08:11:58Z", "author": {"login": "larshelge"}, "path": "dhis-2/dhis-web/dhis-web-api/src/main/java/org/hisp/dhis/webapi/controller/AnalyticsController.java", "diffHunk": "@@ -585,109 +207,63 @@ public void getRawDataCsv(\n     // Data value set\n     // -------------------------------------------------------------------------\n \n-    @RequestMapping( value = RESOURCE_PATH + DATA_VALUE_SET_PATH + \".xml\", method = RequestMethod.GET )\n+    @GetMapping( value = RESOURCE_PATH + DATA_VALUE_SET_PATH + \".xml\" )\n     public @ResponseBody DataValueSet getDataValueSetXml(\n-        @RequestParam Set<String> dimension,\n-        @RequestParam( required = false ) Set<String> filter,\n-        @RequestParam( required = false ) AggregationType aggregationType,\n-        @RequestParam( required = false ) String measureCriteria,\n-        @RequestParam( required = false ) String preAggregationMeasureCriteria,\n-        @RequestParam( required = false ) Date startDate,\n-        @RequestParam( required = false ) Date endDate,\n-        @RequestParam( required = false ) boolean skipMeta,\n-        @RequestParam( required = false ) boolean skipData,\n-        @RequestParam( required = false ) boolean skipRounding,\n-        @RequestParam( required = false ) boolean completedOnly,\n-        @RequestParam( required = false ) boolean hierarchyMeta,\n-        @RequestParam( required = false ) boolean ignoreLimit,\n-        @RequestParam( required = false ) boolean hideEmptyRows,\n-        @RequestParam( required = false ) boolean hideEmptyColumns,\n-        @RequestParam( required = false ) boolean showHierarchy,\n-        @RequestParam( required = false ) boolean includeNumDen,\n-        @RequestParam( required = false ) boolean includeMetadataDetails,\n-        @RequestParam( required = false ) DisplayProperty displayProperty,\n-        @RequestParam( required = false ) IdScheme outputIdScheme,\n-        @RequestParam( required = false ) IdScheme inputIdScheme,\n-        @RequestParam( required = false ) boolean duplicatesOnly,\n-        @RequestParam( required = false ) String approvalLevel,\n-        @RequestParam( required = false ) Date relativePeriodDate,\n-        @RequestParam( required = false ) String userOrgUnit,\n-        @RequestParam( required = false ) String columns,\n-        @RequestParam( required = false ) String rows,\n+        AnalyticsQueryCriteria criteria,\n         DhisApiVersion apiVersion,\n-        Model model,\n-        HttpServletResponse response ) throws Exception\n+        HttpServletResponse response )\n     {\n-        DataQueryRequest request = DataQueryRequest.newBuilder()\n-            .dimension( dimension ).filter( filter ).aggregationType( aggregationType ).measureCriteria( measureCriteria )\n-            .preAggregationMeasureCriteria( preAggregationMeasureCriteria ).startDate( startDate ).endDate( endDate )\n-            .skipMeta( skipMeta ).skipData( skipData ).skipRounding( skipRounding ).completedOnly( completedOnly )\n-            .hierarchyMeta( hierarchyMeta ).ignoreLimit( ignoreLimit ).hideEmptyRows( hideEmptyRows )\n-            .hideEmptyColumns( hideEmptyColumns ).showHierarchy( showHierarchy ).includeNumDen( includeNumDen )\n-            .includeMetadataDetails( includeMetadataDetails ).displayProperty( displayProperty )\n-            .outputIdScheme( outputIdScheme ).inputIdScheme( inputIdScheme ).duplicatesOnly( duplicatesOnly )\n-            .approvalLevel( approvalLevel ).relativePeriodDate( relativePeriodDate ).userOrgUnit( userOrgUnit )\n-            .apiVersion( apiVersion ).build();\n-\n-        DataQueryParams params = dataQueryService.getFromRequest( request );\n+        DataQueryParams params = dataQueryService.getFromRequest( mapFromCriteria( criteria, apiVersion) );\n \n         contextUtils.configureAnalyticsResponse( response, ContextUtils.CONTENT_TYPE_XML, CacheStrategy.RESPECT_SYSTEM_SETTING, null, false, params.getLatestEndDate() );\n         return analyticsService.getAggregatedDataValueSet( params );\n     }\n \n-    @RequestMapping( value = RESOURCE_PATH + DATA_VALUE_SET_PATH + \".json\", method = RequestMethod.GET )\n+    @GetMapping( value = RESOURCE_PATH + DATA_VALUE_SET_PATH + \".json\" )\n     public @ResponseBody DataValueSet getDataValueSetJson(\n-        @RequestParam Set<String> dimension,\n-        @RequestParam( required = false ) Set<String> filter,\n-        @RequestParam( required = false ) AggregationType aggregationType,\n-        @RequestParam( required = false ) String measureCriteria,\n-        @RequestParam( required = false ) String preAggregationMeasureCriteria,\n-        @RequestParam( required = false ) Date startDate,\n-        @RequestParam( required = false ) Date endDate,\n-        @RequestParam( required = false ) boolean skipMeta,\n-        @RequestParam( required = false ) boolean skipData,\n-        @RequestParam( required = false ) boolean skipRounding,\n-        @RequestParam( required = false ) boolean completedOnly,\n-        @RequestParam( required = false ) boolean hierarchyMeta,\n-        @RequestParam( required = false ) boolean ignoreLimit,\n-        @RequestParam( required = false ) boolean hideEmptyRows,\n-        @RequestParam( required = false ) boolean hideEmptyColumns,\n-        @RequestParam( required = false ) boolean showHierarchy,\n-        @RequestParam( required = false ) boolean includeNumDen,\n-        @RequestParam( required = false ) boolean includeMetadataDetails,\n-        @RequestParam( required = false ) DisplayProperty displayProperty,\n-        @RequestParam( required = false ) IdScheme outputIdScheme,\n-        @RequestParam( required = false ) IdScheme inputIdScheme,\n-        @RequestParam( required = false ) boolean duplicatesOnly,\n-        @RequestParam( required = false ) String approvalLevel,\n-        @RequestParam( required = false ) Date relativePeriodDate,\n-        @RequestParam( required = false ) String userOrgUnit,\n-        @RequestParam( required = false ) String columns,\n-        @RequestParam( required = false ) String rows,\n+        AnalyticsQueryCriteria criteria,\n         DhisApiVersion apiVersion,\n-        Model model,\n-        HttpServletResponse response ) throws Exception\n+        HttpServletResponse response )\n     {\n-        DataQueryRequest request = DataQueryRequest.newBuilder()\n-            .dimension( dimension ).filter( filter ).aggregationType( aggregationType ).measureCriteria( measureCriteria )\n-            .preAggregationMeasureCriteria( preAggregationMeasureCriteria ).startDate( startDate ).endDate( endDate )\n-            .skipMeta( skipMeta ).skipData( skipData ).skipRounding( skipRounding ).completedOnly( completedOnly )\n-            .hierarchyMeta( hierarchyMeta ).ignoreLimit( ignoreLimit ).hideEmptyRows( hideEmptyRows )\n-            .hideEmptyColumns( hideEmptyColumns ).showHierarchy( showHierarchy ).includeNumDen( includeNumDen )\n-            .includeMetadataDetails( includeMetadataDetails ).displayProperty( displayProperty )\n-            .outputIdScheme( outputIdScheme ).inputIdScheme( inputIdScheme ).duplicatesOnly( duplicatesOnly )\n-            .approvalLevel( approvalLevel ).relativePeriodDate( relativePeriodDate ).userOrgUnit( userOrgUnit )\n-            .apiVersion( apiVersion ).build();\n-\n-        DataQueryParams params = dataQueryService.getFromRequest( request );\n+        DataQueryParams params = dataQueryService.getFromRequest( mapFromCriteria( criteria, apiVersion) );\n \n         contextUtils.configureAnalyticsResponse( response, ContextUtils.CONTENT_TYPE_JSON, CacheStrategy.RESPECT_SYSTEM_SETTING, null, false, params.getLatestEndDate() );\n         return analyticsService.getAggregatedDataValueSet( params );\n     }\n \n-    @RequestMapping( value = RESOURCE_PATH + \"/tableTypes\", method = RequestMethod.GET, produces = { \"application/json\", \"application/javascript\" } )\n+    @GetMapping( value = RESOURCE_PATH + \"/tableTypes\", produces = { APPLICATION_JSON_VALUE, \"application/javascript\" } )\n     public @ResponseBody AnalyticsTableType[] getTableTypes()\n     {\n         return AnalyticsTableType.values();\n     }\n+\n+    private Grid getGrid( AnalyticsQueryCriteria criteria, DhisApiVersion apiVersion, String contentType,\n+        HttpServletResponse response )\n+    {\n+        DataQueryParams params = dataQueryService.getFromRequest(  mapFromCriteria( criteria, apiVersion)  );\n+\n+        contextUtils.configureAnalyticsResponse( response, contentType, CacheStrategy.RESPECT_SYSTEM_SETTING, null,\n+            false, params.getLatestEndDate() );\n+\n+        return analyticsService.getAggregatedDataValues( params, getItemsFromParam( criteria.getColumns() ),\n+            getItemsFromParam( criteria.getRows() ) );\n+    }\n+\n+    private Grid getGridWithAttachment( AnalyticsQueryCriteria criteria, DhisApiVersion apiVersion, String contentType, String file,\n+                          HttpServletResponse response )", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a0256b7dd6e86127acf870b77dc19639c2fd0ccb"}, "originalPosition": 743}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEzNDE4MTkw", "url": "https://github.com/dhis2/dhis2-core/pull/6453#pullrequestreview-513418190", "createdAt": "2020-10-21T08:16:15Z", "commit": {"oid": "a0256b7dd6e86127acf870b77dc19639c2fd0ccb"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE4NTIwMjU0", "url": "https://github.com/dhis2/dhis2-core/pull/6453#pullrequestreview-518520254", "createdAt": "2020-10-28T10:31:13Z", "commit": {"oid": "4d2065f00b9a949da3cc5b743e3ecac6d8db5e7b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8e4888f923055e0f7f6eb05aac49e078bdb787af", "author": {"user": {"login": "luciano-fiandesio", "name": "Luciano Fiandesio"}}, "url": "https://github.com/dhis2/dhis2-core/commit/8e4888f923055e0f7f6eb05aac49e078bdb787af", "committedDate": "2020-10-28T13:40:40Z", "message": "refactor: bind @RequestParam to object in Analytics controller\n\nThis refactor aims at improving maintenance of the Analytics controller arguments by removing the list of `@RequestParam` annotations in each method of the controller and replacing it with a new class that encapsulates all the Analytics argument.\nAdditionally, the `@RequestMapping` annotation has been replaced with `@GetMapping`"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8ec7177e8ef46d2c3874a113316c61715dbba79c", "author": {"user": {"login": "luciano-fiandesio", "name": "Luciano Fiandesio"}}, "url": "https://github.com/dhis2/dhis2-core/commit/8ec7177e8ef46d2c3874a113316c61715dbba79c", "committedDate": "2020-10-28T13:40:41Z", "message": "refactor: bind @RequestParam to object in Events Analytics controller"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f72145da6e40c467a3682dbd50cd037241943729", "author": {"user": {"login": "luciano-fiandesio", "name": "Luciano Fiandesio"}}, "url": "https://github.com/dhis2/dhis2-core/commit/f72145da6e40c467a3682dbd50cd037241943729", "committedDate": "2020-10-28T13:40:41Z", "message": "refactor: extract response configuration code"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4adc7c9a8a92cc5a1231c552b8198b6ce3c57f2f", "author": {"user": {"login": "luciano-fiandesio", "name": "Luciano Fiandesio"}}, "url": "https://github.com/dhis2/dhis2-core/commit/4adc7c9a8a92cc5a1231c552b8198b6ce3c57f2f", "committedDate": "2020-10-28T13:42:16Z", "message": "chore: replaced deprecated call to assertThat in multiple tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a0ff93f083144d92df91d5f249e3b26e2d4d1f60", "author": {"user": {"login": "luciano-fiandesio", "name": "Luciano Fiandesio"}}, "url": "https://github.com/dhis2/dhis2-core/commit/a0ff93f083144d92df91d5f249e3b26e2d4d1f60", "committedDate": "2020-10-28T13:44:24Z", "message": "chore: replaced deprecated call to mockito init"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "17478ab1b25538c06e9bdad5e809c6b3043bfc5f", "author": {"user": {"login": "luciano-fiandesio", "name": "Luciano Fiandesio"}}, "url": "https://github.com/dhis2/dhis2-core/commit/17478ab1b25538c06e9bdad5e809c6b3043bfc5f", "committedDate": "2020-10-28T13:45:02Z", "message": "test: add unit tests for analytics controller"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4d2065f00b9a949da3cc5b743e3ecac6d8db5e7b", "author": {"user": {"login": "luciano-fiandesio", "name": "Luciano Fiandesio"}}, "url": "https://github.com/dhis2/dhis2-core/commit/4d2065f00b9a949da3cc5b743e3ecac6d8db5e7b", "committedDate": "2020-10-23T14:08:25Z", "message": "test: add unit tests for analytics controller"}, "afterCommit": {"oid": "17478ab1b25538c06e9bdad5e809c6b3043bfc5f", "author": {"user": {"login": "luciano-fiandesio", "name": "Luciano Fiandesio"}}, "url": "https://github.com/dhis2/dhis2-core/commit/17478ab1b25538c06e9bdad5e809c6b3043bfc5f", "committedDate": "2020-10-28T13:45:02Z", "message": "test: add unit tests for analytics controller"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2340, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}