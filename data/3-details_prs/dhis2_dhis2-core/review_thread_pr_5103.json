{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg3ODY2Mzk1", "number": 5103, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxNjoyNjozNFrODn5UCQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxNjoyNzoyOFrODn5VZg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzMTYwMDczOnYy", "diffSide": "RIGHT", "path": "dhis-2/dhis-services/dhis-service-core/src/main/java/org/hisp/dhis/query/PaginationData.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxNjoyNjozNFrOF2KPCA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxODozNDowM1rOF3pGag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjMzNTExMg==", "bodyText": "Could we call this class just Pagination ? More concise, if not already taken.", "url": "https://github.com/dhis2/dhis2-core/pull/5103#discussion_r392335112", "createdAt": "2020-03-13T16:26:34Z", "author": {"login": "larshelge"}, "path": "dhis-2/dhis-services/dhis-service-core/src/main/java/org/hisp/dhis/query/PaginationData.java", "diffHunk": "@@ -0,0 +1,74 @@\n+/*\n+ * Copyright (c) 2004-2020, University of Oslo\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ * Redistributions of source code must retain the above copyright notice, this\n+ * list of conditions and the following disclaimer.\n+ *\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following disclaimer in the documentation\n+ * and/or other materials provided with the distribution.\n+ * Neither the name of the HISP project nor the names of its contributors may\n+ * be used to endorse or promote products derived from this software without\n+ * specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n+ * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+\n+package org.hisp.dhis.query;\n+\n+/**\n+ * Simple POJO containing the pagination directive from the HTTP Request\n+ * \n+ * @author Luciano Fiandesio\n+ */\n+public class PaginationData", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1da1f80f28e7f81ac82fe7b6e5d7a3880ce582f5"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjM0MDkzMg==", "bodyText": "We also already have class Pager, could we reuse?", "url": "https://github.com/dhis2/dhis2-core/pull/5103#discussion_r392340932", "createdAt": "2020-03-13T16:36:30Z", "author": {"login": "larshelge"}, "path": "dhis-2/dhis-services/dhis-service-core/src/main/java/org/hisp/dhis/query/PaginationData.java", "diffHunk": "@@ -0,0 +1,74 @@\n+/*\n+ * Copyright (c) 2004-2020, University of Oslo\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ * Redistributions of source code must retain the above copyright notice, this\n+ * list of conditions and the following disclaimer.\n+ *\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following disclaimer in the documentation\n+ * and/or other materials provided with the distribution.\n+ * Neither the name of the HISP project nor the names of its contributors may\n+ * be used to endorse or promote products derived from this software without\n+ * specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n+ * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+\n+package org.hisp.dhis.query;\n+\n+/**\n+ * Simple POJO containing the pagination directive from the HTTP Request\n+ * \n+ * @author Luciano Fiandesio\n+ */\n+public class PaginationData", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjMzNTExMg=="}, "originalCommit": {"oid": "1da1f80f28e7f81ac82fe7b6e5d7a3880ce582f5"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzg4OTM4Ng==", "bodyText": "I wasn't able to reuse the Pager object, since it expects also the total number of pages in order to function. It would have been a lot of changes in the logic to adapt it to become a simple object to send data from the front-end to the backend", "url": "https://github.com/dhis2/dhis2-core/pull/5103#discussion_r393889386", "createdAt": "2020-03-17T18:34:03Z", "author": {"login": "luciano-fiandesio"}, "path": "dhis-2/dhis-services/dhis-service-core/src/main/java/org/hisp/dhis/query/PaginationData.java", "diffHunk": "@@ -0,0 +1,74 @@\n+/*\n+ * Copyright (c) 2004-2020, University of Oslo\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ * Redistributions of source code must retain the above copyright notice, this\n+ * list of conditions and the following disclaimer.\n+ *\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following disclaimer in the documentation\n+ * and/or other materials provided with the distribution.\n+ * Neither the name of the HISP project nor the names of its contributors may\n+ * be used to endorse or promote products derived from this software without\n+ * specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n+ * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+\n+package org.hisp.dhis.query;\n+\n+/**\n+ * Simple POJO containing the pagination directive from the HTTP Request\n+ * \n+ * @author Luciano Fiandesio\n+ */\n+public class PaginationData", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjMzNTExMg=="}, "originalCommit": {"oid": "1da1f80f28e7f81ac82fe7b6e5d7a3880ce582f5"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzMTYwNDIyOnYy", "diffSide": "RIGHT", "path": "dhis-2/dhis-services/dhis-service-core/src/main/java/org/hisp/dhis/query/planner/QueryPlan.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxNjoyNzoyOFrOF2KRMA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxMDoyNDo0OFrOF3WClA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjMzNTY2NA==", "bodyText": "Rename to instance? Perhaps a bit more standard and consistent e.g. with DataQueryParams.", "url": "https://github.com/dhis2/dhis2-core/pull/5103#discussion_r392335664", "createdAt": "2020-03-13T16:27:28Z", "author": {"login": "larshelge"}, "path": "dhis-2/dhis-services/dhis-service-core/src/main/java/org/hisp/dhis/query/planner/QueryPlan.java", "diffHunk": "@@ -97,4 +97,37 @@ public void setUser( User user )\n             nonPersistedQuery.setUser( user );\n         }\n     }\n+\n+    public static final class QueryPlanBuilder\n+    {\n+        private Query persistedQuery;\n+\n+        private Query nonPersistedQuery;\n+\n+        private QueryPlanBuilder()\n+        {\n+        }\n+\n+        public static QueryPlanBuilder aQueryPlan()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1da1f80f28e7f81ac82fe7b6e5d7a3880ce582f5"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzU3NzEwOA==", "bodyText": "Renamed to newBuilder(), same as DataQueryParams", "url": "https://github.com/dhis2/dhis2-core/pull/5103#discussion_r393577108", "createdAt": "2020-03-17T10:24:48Z", "author": {"login": "luciano-fiandesio"}, "path": "dhis-2/dhis-services/dhis-service-core/src/main/java/org/hisp/dhis/query/planner/QueryPlan.java", "diffHunk": "@@ -97,4 +97,37 @@ public void setUser( User user )\n             nonPersistedQuery.setUser( user );\n         }\n     }\n+\n+    public static final class QueryPlanBuilder\n+    {\n+        private Query persistedQuery;\n+\n+        private Query nonPersistedQuery;\n+\n+        private QueryPlanBuilder()\n+        {\n+        }\n+\n+        public static QueryPlanBuilder aQueryPlan()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjMzNTY2NA=="}, "originalCommit": {"oid": "1da1f80f28e7f81ac82fe7b6e5d7a3880ce582f5"}, "originalPosition": 24}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3509, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}