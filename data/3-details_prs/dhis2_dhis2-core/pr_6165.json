{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg4MTAzOTA5", "number": 6165, "title": "fix: DHIS2-8910 filter out Data Element which are not present in Program Stage", "bodyText": "", "createdAt": "2020-09-16T16:23:14Z", "url": "https://github.com/dhis2/dhis2-core/pull/6165", "merged": true, "mergeCommit": {"oid": "7beda2ceeec04961eb876575c25f2b32e5ac7494"}, "closed": true, "closedAt": "2020-09-22T14:02:49Z", "author": {"login": "gnespolino"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdJezuOAH2gAyNDg4MTAzOTA5OjZlMjhhYmRmNmU0MDBlZTRmYjk1NjJmOGQ4YzUyZDI2NzFlYjdjZGU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdLTzXNAH2gAyNDg4MTAzOTA5OmJiY2FiOTEyOTE1ZjgzMzhhOTkzYmM2ZmUwYjg0NTFlMDY5NTQ5ZDA=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "6e28abdf6e400ee4fb9562f8d8c52d2671eb7cde", "author": {"user": {"login": "gnespolino", "name": "Giuseppe Nespolino"}}, "url": "https://github.com/dhis2/dhis2-core/commit/6e28abdf6e400ee4fb9562f8d8c52d2671eb7cde", "committedDate": "2020-09-16T16:16:12Z", "message": "fix: filter out Data Element which are not present in Program Stage"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkwMzE5NzE2", "url": "https://github.com/dhis2/dhis2-core/pull/6165#pullrequestreview-490319716", "createdAt": "2020-09-17T07:35:51Z", "commit": {"oid": "6e28abdf6e400ee4fb9562f8d8c52d2671eb7cde"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QwNzozNTo1MVrOHTVPtg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QwNzozNTo1MVrOHTVPtg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDAzMzA3OA==", "bodyText": "Can you add a short Javadoc that explain what this Pre-proc is doing?", "url": "https://github.com/dhis2/dhis2-core/pull/6165#discussion_r490033078", "createdAt": "2020-09-17T07:35:51Z", "author": {"login": "luciano-fiandesio"}, "path": "dhis-2/dhis-services/dhis-service-dxf2/src/main/java/org/hisp/dhis/dxf2/events/importer/shared/preprocess/FilteringOutUndeclaredDataElementsProcessor.java", "diffHunk": "@@ -0,0 +1,71 @@\n+package org.hisp.dhis.dxf2.events.importer.shared.preprocess;\n+\n+/*\n+ * Copyright (c) 2004-2020, University of Oslo\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ * Redistributions of source code must retain the above copyright notice, this\n+ * list of conditions and the following disclaimer.\n+ *\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following disclaimer in the documentation\n+ * and/or other materials provided with the distribution.\n+ * Neither the name of the HISP project nor the names of its contributors may\n+ * be used to endorse or promote products derived from this software without\n+ * specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n+ * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+\n+import java.util.Set;\n+import java.util.stream.Collectors;\n+\n+import org.apache.commons.lang3.StringUtils;\n+import org.hisp.dhis.common.BaseIdentifiableObject;\n+import org.hisp.dhis.common.IdScheme;\n+import org.hisp.dhis.dxf2.events.event.Event;\n+import org.hisp.dhis.dxf2.events.importer.Processor;\n+import org.hisp.dhis.dxf2.events.importer.context.WorkContext;\n+import org.hisp.dhis.program.ProgramStage;\n+\n+/**\n+ * @author Giuseppe Nespolino <g.nespolino@gmail.com>\n+ */\n+public class FilteringOutUndeclaredDataElementsProcessor implements Processor", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6e28abdf6e400ee4fb9562f8d8c52d2671eb7cde"}, "originalPosition": 45}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e00e2d6b88644e91665b0bbef48457e9e575f582", "author": {"user": {"login": "gnespolino", "name": "Giuseppe Nespolino"}}, "url": "https://github.com/dhis2/dhis2-core/commit/e00e2d6b88644e91665b0bbef48457e9e575f582", "committedDate": "2020-09-17T07:44:45Z", "message": "fix: javadoc comment on FilteringOutUndeclaredDataElementsProcessor"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f0f84d0585101c7f4d1cc899c30680e589f374a6", "author": {"user": {"login": "gnespolino", "name": "Giuseppe Nespolino"}}, "url": "https://github.com/dhis2/dhis2-core/commit/f0f84d0585101c7f4d1cc899c30680e589f374a6", "committedDate": "2020-09-17T10:11:01Z", "message": "fix: FilteringOutUndeclaredDataElementsProcessor unit test added"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkwNzIxODQ0", "url": "https://github.com/dhis2/dhis2-core/pull/6165#pullrequestreview-490721844", "createdAt": "2020-09-17T15:29:08Z", "commit": {"oid": "f0f84d0585101c7f4d1cc899c30680e589f374a6"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4c55be7404fb1c1347d56b4f63139482c3aa64af", "author": {"user": {"login": "gnespolino", "name": "Giuseppe Nespolino"}}, "url": "https://github.com/dhis2/dhis2-core/commit/4c55be7404fb1c1347d56b4f63139482c3aa64af", "committedDate": "2020-09-18T08:16:49Z", "message": "fix: Integration test failing"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkzMjM2MTA0", "url": "https://github.com/dhis2/dhis2-core/pull/6165#pullrequestreview-493236104", "createdAt": "2020-09-22T08:33:27Z", "commit": {"oid": "4c55be7404fb1c1347d56b4f63139482c3aa64af"}, "state": "APPROVED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQwODozMzoyN1rOHVvoOw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQwODozMzo0M1rOHVvoyw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjU2MjQ5MQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    return Optional.ofNullable(programStage)\n          \n          \n            \n                    return Optional.ofNullable( programStage )", "url": "https://github.com/dhis2/dhis2-core/pull/6165#discussion_r492562491", "createdAt": "2020-09-22T08:33:27Z", "author": {"login": "stian-sandvold"}, "path": "dhis-2/dhis-services/dhis-service-dxf2/src/main/java/org/hisp/dhis/dxf2/events/importer/shared/preprocess/FilteringOutUndeclaredDataElementsProcessor.java", "diffHunk": "@@ -0,0 +1,78 @@\n+package org.hisp.dhis.dxf2.events.importer.shared.preprocess;\n+\n+/*\n+ * Copyright (c) 2004-2020, University of Oslo\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ * Redistributions of source code must retain the above copyright notice, this\n+ * list of conditions and the following disclaimer.\n+ *\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following disclaimer in the documentation\n+ * and/or other materials provided with the distribution.\n+ * Neither the name of the HISP project nor the names of its contributors may\n+ * be used to endorse or promote products derived from this software without\n+ * specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n+ * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+\n+import java.util.Collections;\n+import java.util.Optional;\n+import java.util.Set;\n+import java.util.stream.Collectors;\n+\n+import org.apache.commons.lang3.StringUtils;\n+import org.hisp.dhis.common.BaseIdentifiableObject;\n+import org.hisp.dhis.common.IdScheme;\n+import org.hisp.dhis.dxf2.events.event.Event;\n+import org.hisp.dhis.dxf2.events.importer.Processor;\n+import org.hisp.dhis.dxf2.events.importer.context.WorkContext;\n+import org.hisp.dhis.program.ProgramStage;\n+\n+/**\n+ * Remove data elements from event which are not present in the program stage\n+ * that is linked to it.\n+ *\n+ * @author Giuseppe Nespolino <g.nespolino@gmail.com>\n+ */\n+public class FilteringOutUndeclaredDataElementsProcessor implements Processor\n+{\n+    @Override\n+    public void process( final Event event, final WorkContext ctx )\n+    {\n+        if ( StringUtils.isNotBlank( event.getProgramStage() ) )\n+        {\n+            Set<String> programStageDataElementUids = getDataElementUidsFromProgramStage( event.getProgramStage(),\n+                ctx );\n+            event.setDataValues(\n+                event.getDataValues().stream()\n+                    .filter( dataValue -> programStageDataElementUids.contains( dataValue.getDataElement() ) )\n+                    .collect( Collectors.toSet() ) );\n+        }\n+    }\n+\n+    private Set<String> getDataElementUidsFromProgramStage( String programStageUid, WorkContext ctx )\n+    {\n+        IdScheme scheme = ctx.getImportOptions().getIdSchemes().getProgramStageIdScheme();\n+        ProgramStage programStage = ctx.getProgramStage( scheme, programStageUid );\n+        return Optional.ofNullable(programStage)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c55be7404fb1c1347d56b4f63139482c3aa64af"}, "originalPosition": 70}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjU2MjU3NQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            .map(ProgramStage::getDataElements)\n          \n          \n            \n                            .map( ProgramStage::getDataElements )", "url": "https://github.com/dhis2/dhis2-core/pull/6165#discussion_r492562575", "createdAt": "2020-09-22T08:33:36Z", "author": {"login": "stian-sandvold"}, "path": "dhis-2/dhis-services/dhis-service-dxf2/src/main/java/org/hisp/dhis/dxf2/events/importer/shared/preprocess/FilteringOutUndeclaredDataElementsProcessor.java", "diffHunk": "@@ -0,0 +1,78 @@\n+package org.hisp.dhis.dxf2.events.importer.shared.preprocess;\n+\n+/*\n+ * Copyright (c) 2004-2020, University of Oslo\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ * Redistributions of source code must retain the above copyright notice, this\n+ * list of conditions and the following disclaimer.\n+ *\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following disclaimer in the documentation\n+ * and/or other materials provided with the distribution.\n+ * Neither the name of the HISP project nor the names of its contributors may\n+ * be used to endorse or promote products derived from this software without\n+ * specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n+ * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+\n+import java.util.Collections;\n+import java.util.Optional;\n+import java.util.Set;\n+import java.util.stream.Collectors;\n+\n+import org.apache.commons.lang3.StringUtils;\n+import org.hisp.dhis.common.BaseIdentifiableObject;\n+import org.hisp.dhis.common.IdScheme;\n+import org.hisp.dhis.dxf2.events.event.Event;\n+import org.hisp.dhis.dxf2.events.importer.Processor;\n+import org.hisp.dhis.dxf2.events.importer.context.WorkContext;\n+import org.hisp.dhis.program.ProgramStage;\n+\n+/**\n+ * Remove data elements from event which are not present in the program stage\n+ * that is linked to it.\n+ *\n+ * @author Giuseppe Nespolino <g.nespolino@gmail.com>\n+ */\n+public class FilteringOutUndeclaredDataElementsProcessor implements Processor\n+{\n+    @Override\n+    public void process( final Event event, final WorkContext ctx )\n+    {\n+        if ( StringUtils.isNotBlank( event.getProgramStage() ) )\n+        {\n+            Set<String> programStageDataElementUids = getDataElementUidsFromProgramStage( event.getProgramStage(),\n+                ctx );\n+            event.setDataValues(\n+                event.getDataValues().stream()\n+                    .filter( dataValue -> programStageDataElementUids.contains( dataValue.getDataElement() ) )\n+                    .collect( Collectors.toSet() ) );\n+        }\n+    }\n+\n+    private Set<String> getDataElementUidsFromProgramStage( String programStageUid, WorkContext ctx )\n+    {\n+        IdScheme scheme = ctx.getImportOptions().getIdSchemes().getProgramStageIdScheme();\n+        ProgramStage programStage = ctx.getProgramStage( scheme, programStageUid );\n+        return Optional.ofNullable(programStage)\n+                .map(ProgramStage::getDataElements)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c55be7404fb1c1347d56b4f63139482c3aa64af"}, "originalPosition": 71}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjU2MjYzNQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            .orElse(Collections.emptySet())\n          \n          \n            \n                            .orElse( Collections.emptySet() )", "url": "https://github.com/dhis2/dhis2-core/pull/6165#discussion_r492562635", "createdAt": "2020-09-22T08:33:43Z", "author": {"login": "stian-sandvold"}, "path": "dhis-2/dhis-services/dhis-service-dxf2/src/main/java/org/hisp/dhis/dxf2/events/importer/shared/preprocess/FilteringOutUndeclaredDataElementsProcessor.java", "diffHunk": "@@ -0,0 +1,78 @@\n+package org.hisp.dhis.dxf2.events.importer.shared.preprocess;\n+\n+/*\n+ * Copyright (c) 2004-2020, University of Oslo\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ * Redistributions of source code must retain the above copyright notice, this\n+ * list of conditions and the following disclaimer.\n+ *\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following disclaimer in the documentation\n+ * and/or other materials provided with the distribution.\n+ * Neither the name of the HISP project nor the names of its contributors may\n+ * be used to endorse or promote products derived from this software without\n+ * specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n+ * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+\n+import java.util.Collections;\n+import java.util.Optional;\n+import java.util.Set;\n+import java.util.stream.Collectors;\n+\n+import org.apache.commons.lang3.StringUtils;\n+import org.hisp.dhis.common.BaseIdentifiableObject;\n+import org.hisp.dhis.common.IdScheme;\n+import org.hisp.dhis.dxf2.events.event.Event;\n+import org.hisp.dhis.dxf2.events.importer.Processor;\n+import org.hisp.dhis.dxf2.events.importer.context.WorkContext;\n+import org.hisp.dhis.program.ProgramStage;\n+\n+/**\n+ * Remove data elements from event which are not present in the program stage\n+ * that is linked to it.\n+ *\n+ * @author Giuseppe Nespolino <g.nespolino@gmail.com>\n+ */\n+public class FilteringOutUndeclaredDataElementsProcessor implements Processor\n+{\n+    @Override\n+    public void process( final Event event, final WorkContext ctx )\n+    {\n+        if ( StringUtils.isNotBlank( event.getProgramStage() ) )\n+        {\n+            Set<String> programStageDataElementUids = getDataElementUidsFromProgramStage( event.getProgramStage(),\n+                ctx );\n+            event.setDataValues(\n+                event.getDataValues().stream()\n+                    .filter( dataValue -> programStageDataElementUids.contains( dataValue.getDataElement() ) )\n+                    .collect( Collectors.toSet() ) );\n+        }\n+    }\n+\n+    private Set<String> getDataElementUidsFromProgramStage( String programStageUid, WorkContext ctx )\n+    {\n+        IdScheme scheme = ctx.getImportOptions().getIdSchemes().getProgramStageIdScheme();\n+        ProgramStage programStage = ctx.getProgramStage( scheme, programStageUid );\n+        return Optional.ofNullable(programStage)\n+                .map(ProgramStage::getDataElements)\n+                .orElse(Collections.emptySet())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c55be7404fb1c1347d56b4f63139482c3aa64af"}, "originalPosition": 72}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bbcab912915f8338a993bc6fe0b8451e069549d0", "author": {"user": {"login": "stian-sandvold", "name": "Stian Sandvold"}}, "url": "https://github.com/dhis2/dhis2-core/commit/bbcab912915f8338a993bc6fe0b8451e069549d0", "committedDate": "2020-09-22T08:34:42Z", "message": "Apply suggestions from code review"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2450, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}