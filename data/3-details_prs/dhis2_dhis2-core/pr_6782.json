{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI5NDA3NTM5", "number": 6782, "title": "fix: remove long running transaction during Tracker Import", "bodyText": "This PR introduces a \"mapping layer\" in the Tracker Import pre-heater, in order to detach the pre-heated objects from the Hibernate Session\nand prevent LazyInitializationException errors during the validation and processing stage of the Import.\nThanks to this new layer, it is possible to remove the @Transactional annotation from the Tracker Service import method and open fast-running transactionz only during the preheat stage and the persistence stage.\nThe role of the mapping layer is to map the Hibernate-managed objects fetched by the preheater to the same object. This operation has two benefits:\n\ninitialize lazy collections which are required during the validation stage and would normally fail, without a Transaction\nreduce the amount of data stored in the pre-heat layer\n\nThe new mapping layer is based on the MapStruct library.\nThis library is very efficient because it does not use reflection: instead it generates the mapping code at build time.\nThe current overhead of the mapping layer is negligible.\nFor a more detailed description of this layer, please see the SAD document.\nAdditionaly this PR:\n\nremoves TrackerBundleParams and PreheatParams, simplifying the propagation of import arguments across the layers\nsimplifies the propagation of the User object across the layers\nrefactors the Tracker Import unit and integration test cases for better long term maintenance and clarity\nmoves the TrackerBundleParamsConverter to the controller layer", "createdAt": "2020-11-30T09:16:43Z", "url": "https://github.com/dhis2/dhis2-core/pull/6782", "merged": true, "mergeCommit": {"oid": "3e799d196b8f73ad216ea100a07ddd5f7dfc53e0"}, "closed": true, "closedAt": "2020-11-30T15:37:15Z", "author": {"login": "luciano-fiandesio"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdhhuw-gH2gAyNTI5NDA3NTM5OjJhM2QwMmZjZmIzZDg5OTMyYjBhZTA3MTEyZjAwZTY4YmZjMTAzODc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdhnAC6gFqTU0MTAxMjU4Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "2a3d02fcfb3d89932b0ae07112f00e68bfc10387", "author": {"user": {"login": "enricocolasante", "name": "Enrico Colasante"}}, "url": "https://github.com/dhis2/dhis2-core/commit/2a3d02fcfb3d89932b0ae07112f00e68bfc10387", "committedDate": "2020-11-30T09:14:41Z", "message": "fix: remove long running transaction during Tracker Import\n\nThis PR introduces a \"mapping layer\" in the Tracker Import pre-heater, in order to detach the pre-heated objects from the Hibernate Session\nand prevent `LazyInitializationException` errors during the validation and processing stage of the Import.\nThanks to this new layer, it is possible to remove the `@Transactional` annotation from the Tracker Service `import` method and open fast-running transactionz only during the preheat stage and the persistence stage.\n\nThe role of the mapping layer is to map the Hibernate-managed objects fetched by the preheater to the same object. This operation has two benefits:\n\n- initialize `lazy` collections which are required during the validation stage and would normally fail, without a Transaction\n- reduce the amount of data stored in the pre-heat layer\n\nThe new mapping layer is based on the [MapStruct](https://mapstruct.org/) library.\nThis library is very efficient because it does not use reflection: instead it generates the mapping code at build time.\nThe current overhead of the mapping layer is negligible.\nFor a more detailed description of this layer, please see the [SAD document](https://docs.google.com/document/d/1VgFhJecVipoQps6Th8VZbMnbn6YqfyLWi93_SrMUhBQ/edit?usp=sharing).\n\nAdditionaly this PR:\n\n- removes `TrackerBundleParams` and `PreheatParams`, simplifying the propagation of import arguments across the layers\n- simplifies the propagation of the `User` object across the layers\n- refactors the Tracker Import unit and integration test cases for better long term maintenance and clarity\n- moves the `TrackerBundleParamsConverter` to the controller layer"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7609ad704819038d49dbd3438c5185bc390d22e7", "author": {"user": {"login": "luciano-fiandesio", "name": "Luciano Fiandesio"}}, "url": "https://github.com/dhis2/dhis2-core/commit/7609ad704819038d49dbd3438c5185bc390d22e7", "committedDate": "2020-11-30T09:18:15Z", "message": "removed commented out code"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQwNzQ5Mzk3", "url": "https://github.com/dhis2/dhis2-core/pull/6782#pullrequestreview-540749397", "createdAt": "2020-11-30T09:54:19Z", "commit": {"oid": "7609ad704819038d49dbd3438c5185bc390d22e7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQwOTo1NDoxOVrOH7zZIQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQwOTo1NDoxOVrOH7zZIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjQ3MDA0OQ==", "bodyText": "if we had\n    To from( TrackerPreheat preheat, From object, To existingInstance );\n\n    default To from( TrackerPreheat trackerPreheat, Function<TrackerPreheat, To> toInstanceProvider, From object )\n    {\n        To instance = toInstanceProvider.apply( trackerPreheat );\n        return from( trackerPreheat, object, instance );\n    }\n\n    default List<To> from( TrackerPreheat preheat, List<From> objects )\n    {\n        return objects\n            .stream()\n            .map( object -> from( preheat, object ) )\n            .collect( Collectors.toList() );\n    }\n\nwe might remove all implementations of these methods from children classes, whose responsibility would just be to implement:\n    To from( TrackerPreheat preheat, From object, To existingInstance );", "url": "https://github.com/dhis2/dhis2-core/pull/6782#discussion_r532470049", "createdAt": "2020-11-30T09:54:19Z", "author": {"login": "gnespolino"}, "path": "dhis-2/dhis-services/dhis-service-tracker/src/main/java/org/hisp/dhis/tracker/converter/TrackerConverterService.java", "diffHunk": "@@ -46,4 +46,9 @@\n     List<To> from( TrackerPreheat preheat, List<From> objects );\n ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7609ad704819038d49dbd3438c5185bc390d22e7"}, "originalPosition": 2}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQwNzUzMDk5", "url": "https://github.com/dhis2/dhis2-core/pull/6782#pullrequestreview-540753099", "createdAt": "2020-11-30T09:58:50Z", "commit": {"oid": "7609ad704819038d49dbd3438c5185bc390d22e7"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQwOTo1ODo1MFrOH7zkmQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxMDowMTo0MVrOH7zsOw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjQ3Mjk4NQ==", "bodyText": "I'll comment this just in one place.\nI believe we can use an abstract base mapper to map all common fields like id, uid, code, so we don't have to repeat in all mappers", "url": "https://github.com/dhis2/dhis2-core/pull/6782#discussion_r532472985", "createdAt": "2020-11-30T09:58:50Z", "author": {"login": "gnespolino"}, "path": "dhis-2/dhis-services/dhis-service-tracker/src/main/java/org/hisp/dhis/tracker/preheat/mappers/UserMapper.java", "diffHunk": "@@ -0,0 +1,19 @@\n+package org.hisp.dhis.tracker.preheat.mappers;\n+\n+import org.hisp.dhis.user.User;\n+import org.mapstruct.BeanMapping;\n+import org.mapstruct.Mapper;\n+import org.mapstruct.Mapping;\n+import org.mapstruct.factory.Mappers;\n+\n+@Mapper( uses = DebugMapper.class )\n+public interface UserMapper extends PreheatMapper<User>\n+{\n+    UserMapper INSTANCE = Mappers.getMapper( UserMapper.class );\n+\n+    @BeanMapping( ignoreByDefault = true )\n+    @Mapping( target = \"id\" )\n+    @Mapping( target = \"uid\" )\n+    @Mapping( target = \"code\" )", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7609ad704819038d49dbd3438c5185bc390d22e7"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjQ3NDkzOQ==", "bodyText": "Mappers generated by MapStruct can be regular Spring Beans, so if we use that approach we might avoid passing them around and we might rather just autowire them as dependency where needed. Since this PR is already quite big, we might have a dedicated ticket to promote mappers to be regular Spring Bean (if possible)", "url": "https://github.com/dhis2/dhis2-core/pull/6782#discussion_r532474939", "createdAt": "2020-11-30T10:01:41Z", "author": {"login": "gnespolino"}, "path": "dhis-2/dhis-services/dhis-service-tracker/src/main/java/org/hisp/dhis/tracker/preheat/supplier/classStrategy/AbstractSchemaStrategy.java", "diffHunk": "@@ -83,7 +92,7 @@ public void add( TrackerPreheatParams params, List<List<String>> splitList, Trac\n \n     @SuppressWarnings( \"unchecked\" )\n     protected void queryForIdentifiableObjects( TrackerPreheat preheat, Schema schema, TrackerIdentifier identifier,\n-        List<List<String>> splitList )\n+        List<List<String>> splitList, Class<? extends PreheatMapper> mapper )", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7609ad704819038d49dbd3438c5185bc390d22e7"}, "originalPosition": 46}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQwNzgwNTcx", "url": "https://github.com/dhis2/dhis2-core/pull/6782#pullrequestreview-540780571", "createdAt": "2020-11-30T10:33:35Z", "commit": {"oid": "7609ad704819038d49dbd3438c5185bc390d22e7"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQwNzg1Njc1", "url": "https://github.com/dhis2/dhis2-core/pull/6782#pullrequestreview-540785675", "createdAt": "2020-11-30T10:40:13Z", "commit": {"oid": "7609ad704819038d49dbd3438c5185bc390d22e7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxMDo0MDoxM1rOH71MQg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxMDo0MDoxM1rOH71MQg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjQ5OTUyMg==", "bodyText": "add assertions - sonarqube reported issue", "url": "https://github.com/dhis2/dhis2-core/pull/6782#discussion_r532499522", "createdAt": "2020-11-30T10:40:13Z", "author": {"login": "vilkg"}, "path": "dhis-2/dhis-services/dhis-service-tracker/src/test/java/org/hisp/dhis/tracker/preheat/TrackerPreheatServiceTest.java", "diffHunk": "@@ -28,98 +28,57 @@\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n \n-import com.google.common.collect.Lists;\n-import org.hisp.dhis.DhisSpringTest;\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertFalse;\n+import static org.junit.Assert.assertNotNull;\n+import static org.junit.Assert.assertTrue;\n+\n+import java.io.IOException;\n+import java.util.Map;\n+import java.util.Set;\n+\n import org.hisp.dhis.category.CategoryOption;\n import org.hisp.dhis.category.CategoryOptionCombo;\n-import org.hisp.dhis.common.IdentifiableObject;\n import org.hisp.dhis.dataelement.DataElement;\n-import org.hisp.dhis.dxf2.metadata.objectbundle.ObjectBundle;\n-import org.hisp.dhis.dxf2.metadata.objectbundle.ObjectBundleMode;\n-import org.hisp.dhis.dxf2.metadata.objectbundle.ObjectBundleParams;\n-import org.hisp.dhis.dxf2.metadata.objectbundle.ObjectBundleService;\n-import org.hisp.dhis.dxf2.metadata.objectbundle.ObjectBundleValidationService;\n-import org.hisp.dhis.dxf2.metadata.objectbundle.feedback.ObjectBundleValidationReport;\n-import org.hisp.dhis.importexport.ImportStrategy;\n import org.hisp.dhis.organisationunit.OrganisationUnit;\n import org.hisp.dhis.program.Program;\n import org.hisp.dhis.program.ProgramStage;\n-import org.hisp.dhis.render.RenderFormat;\n-import org.hisp.dhis.render.RenderService;\n import org.hisp.dhis.tracker.TrackerIdScheme;\n import org.hisp.dhis.tracker.TrackerIdentifier;\n import org.hisp.dhis.tracker.TrackerIdentifierCollector;\n import org.hisp.dhis.tracker.TrackerIdentifierParams;\n-import org.hisp.dhis.tracker.bundle.TrackerBundleParams;\n+import org.hisp.dhis.tracker.TrackerImportParams;\n+import org.hisp.dhis.tracker.TrackerTest;\n import org.hisp.dhis.tracker.domain.TrackedEntity;\n-import org.hisp.dhis.user.UserService;\n import org.junit.Test;\n import org.springframework.beans.factory.annotation.Autowired;\n-import org.springframework.core.io.ClassPathResource;\n \n-import java.io.IOException;\n-import java.util.List;\n-import java.util.Map;\n-import java.util.Set;\n-\n-import static org.junit.Assert.assertEquals;\n-import static org.junit.Assert.assertFalse;\n-import static org.junit.Assert.assertNotNull;\n-import static org.junit.Assert.assertTrue;\n+import com.google.common.collect.Lists;\n \n /**\n  * @author Morten Olav Hansen <mortenoh@gmail.com>\n  */\n-public class TrackerPreheatServiceTest\n-    extends DhisSpringTest\n+public class TrackerPreheatServiceTest extends TrackerTest\n {\n-    @Autowired\n-    private ObjectBundleService objectBundleService;\n-\n-    @Autowired\n-    private ObjectBundleValidationService objectBundleValidationService;\n-\n-    @Autowired\n-    private RenderService _renderService;\n-\n-    @Autowired\n-    private UserService _userService;\n-\n     @Autowired\n     private TrackerPreheatService trackerPreheatService;\n \n     @Override\n-    protected void setUpTest()\n+    protected void initTest()\n     {\n-        preCreateInjectAdminUserWithoutPersistence();\n-\n-        renderService = _renderService;\n-        userService = _userService;\n     }\n \n     @Test\n     public void testEventMetadata()\n         throws IOException\n     {\n-        Map<Class<? extends IdentifiableObject>, List<IdentifiableObject>> metadata = renderService.fromMetadata(\n-            new ClassPathResource( \"tracker/event_metadata.json\" ).getInputStream(), RenderFormat.JSON );\n-\n-        ObjectBundleParams params = new ObjectBundleParams();\n-        params.setObjectBundleMode( ObjectBundleMode.COMMIT );\n-        params.setImportStrategy( ImportStrategy.CREATE );\n-        params.setObjects( metadata );\n-\n-        ObjectBundle bundle = objectBundleService.create( params );\n-        ObjectBundleValidationReport validationReport = objectBundleValidationService.validate( bundle );\n-        assertTrue( validationReport.getErrorReports().isEmpty() );\n-\n-        objectBundleService.commit( bundle );\n+        setUpMetadata( \"tracker/event_metadata.json\" );", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7609ad704819038d49dbd3438c5185bc390d22e7"}, "originalPosition": 104}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0bde828fc285bce6b432687998fbfb5c28fb72f1", "author": {"user": {"login": "luciano-fiandesio", "name": "Luciano Fiandesio"}}, "url": "https://github.com/dhis2/dhis2-core/commit/0bde828fc285bce6b432687998fbfb5c28fb72f1", "committedDate": "2020-11-30T14:42:30Z", "message": "add class header"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "36e13752ebd740e99d5fa9b872dd5ba69a61081b", "author": {"user": {"login": "luciano-fiandesio", "name": "Luciano Fiandesio"}}, "url": "https://github.com/dhis2/dhis2-core/commit/36e13752ebd740e99d5fa9b872dd5ba69a61081b", "committedDate": "2020-11-30T14:58:26Z", "message": "fix: removed expensive call from Tracker mapper\n\nAvoid fetching all Program Stage Instances for a Program Instance, by removing the mapping to 'programStageInstances' in the ProgramStageMapper.\nIntroduce two new Preheat supplier to keep track of ProgramStageInstance count required for validation.\nMinor refactoring of `TrackerPreheat` object."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c45f210aa30507401b8e0291da3691a4769e5de6", "author": {"user": {"login": "luciano-fiandesio", "name": "Luciano Fiandesio"}}, "url": "https://github.com/dhis2/dhis2-core/commit/c45f210aa30507401b8e0291da3691a4769e5de6", "committedDate": "2020-11-30T15:06:44Z", "message": "fix: Sonar issue"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQxMDEyNTg2", "url": "https://github.com/dhis2/dhis2-core/pull/6782#pullrequestreview-541012586", "createdAt": "2020-11-30T15:23:05Z", "commit": {"oid": "c45f210aa30507401b8e0291da3691a4769e5de6"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2249, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}