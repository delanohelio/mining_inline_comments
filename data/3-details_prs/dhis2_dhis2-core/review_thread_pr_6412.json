{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAzNDQ0MTY2", "number": 6412, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwODowMDoyNFrOEt2qmA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwODowNToxMFrOEt25EQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2NTE3MDE2OnYy", "diffSide": "RIGHT", "path": "dhis-2/dhis-support/dhis-support-external/src/main/java/org/hisp/dhis/external/conf/ConfigurationKey.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwODowMDoyNFrOHh5Niw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwODowMDoyNFrOHh5Niw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTMwMjQxMQ==", "bodyText": "Code style, space after \"(\" and \",\". This and next line.", "url": "https://github.com/dhis2/dhis2-core/pull/6412#discussion_r505302411", "createdAt": "2020-10-15T08:00:24Z", "author": {"login": "larshelge"}, "path": "dhis-2/dhis-support/dhis-support-external/src/main/java/org/hisp/dhis/external/conf/ConfigurationKey.java", "diffHunk": "@@ -52,6 +52,14 @@\n     CONNECTION_PASSWORD( \"connection.password\", \"\", true ),\n     CONNECTION_SCHEMA( \"connection.schema\", \"\", false ),\n     CONNECTION_POOL_MAX_SIZE( \"connection.pool.max_size\", \"80\", false ),\n+    CONNECTION_POOL_MIN_SIZE( \"connection.pool.min_size\", \"5\", false ),\n+    CONNECTION_POOL_INITIAL_SIZE( \"connection.pool.initial_size\", \"5\", false ),\n+    CONNECTION_POOL_ACQUIRE_INCR( \"connection.pool.acquire_incr\", \"5\", false ),\n+    CONNECTION_POOL_MAX_IDLE_TIME( \"connection.pool.max_idle_time\", \"7200\", false ),\n+    CONNECTION_POOL_MAX_IDLE_TIME_EXCESS_CON( \"connection.pool.max_idle_time_excess_con\", \"0\", false ),\n+    CONNECTION_POOL_IDLE_CON_TEST_PERIOD( \"connection.pool.idle.con.test.period\", \"0\", false ),\n+    CONNECTION_POOL_TEST_ON_CHECKOUT(\"connection.pool.test.on.checkout\",\"false\",false),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ce7e1852b6045c447c03641255d7f0c0f9a9537f"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2NTIwNzIxOnYy", "diffSide": "RIGHT", "path": "dhis-2/dhis-support/dhis-support-hibernate/src/main/java/org/hisp/dhis/hibernate/DefaultHibernateConfigurationProvider.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwODowNToxMFrOHh5mWA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwOToyMDowM1rOHh-dnw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTMwODc2MA==", "bodyText": "Here we need to use the Hibernate Environment equivalent @netroms as the second argument . E.g. use Environment.C3P0_MAX_SIZE. This because we are eventually passing these properties to Hibernate. Hibernate needs its own config properties (or the C3P0 specific properties), not the DHIS 2 specific properties.", "url": "https://github.com/dhis2/dhis2-core/pull/6412#discussion_r505308760", "createdAt": "2020-10-15T08:05:10Z", "author": {"login": "larshelge"}, "path": "dhis-2/dhis-support/dhis-support-hibernate/src/main/java/org/hisp/dhis/hibernate/DefaultHibernateConfigurationProvider.java", "diffHunk": "@@ -232,6 +232,22 @@ private Properties getHibernateProperties()\n         putIfExists( configurationProvider.getProperty( ConfigurationKey.CONNECTION_USERNAME ), Environment.USER, props );\n         putIfExists( configurationProvider.getProperty( ConfigurationKey.CONNECTION_PASSWORD ), Environment.PASS, props );\n         putIfExists( configurationProvider.getProperty( ConfigurationKey.CONNECTION_POOL_MAX_SIZE ), Environment.C3P0_MAX_SIZE, props );\n+        putIfExists( configurationProvider.getProperty( ConfigurationKey.CONNECTION_POOL_MIN_SIZE ),\n+            ConfigurationKey.CONNECTION_POOL_MIN_SIZE.getKey(), props );", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ce7e1852b6045c447c03641255d7f0c0f9a9537f"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTMxMzQ0MQ==", "bodyText": "Or with the Java config change in HibernateConfig, maybe this is no longer needed, and we could refactor and not use the Hibernate property names at all?", "url": "https://github.com/dhis2/dhis2-core/pull/6412#discussion_r505313441", "createdAt": "2020-10-15T08:09:25Z", "author": {"login": "larshelge"}, "path": "dhis-2/dhis-support/dhis-support-hibernate/src/main/java/org/hisp/dhis/hibernate/DefaultHibernateConfigurationProvider.java", "diffHunk": "@@ -232,6 +232,22 @@ private Properties getHibernateProperties()\n         putIfExists( configurationProvider.getProperty( ConfigurationKey.CONNECTION_USERNAME ), Environment.USER, props );\n         putIfExists( configurationProvider.getProperty( ConfigurationKey.CONNECTION_PASSWORD ), Environment.PASS, props );\n         putIfExists( configurationProvider.getProperty( ConfigurationKey.CONNECTION_POOL_MAX_SIZE ), Environment.C3P0_MAX_SIZE, props );\n+        putIfExists( configurationProvider.getProperty( ConfigurationKey.CONNECTION_POOL_MIN_SIZE ),\n+            ConfigurationKey.CONNECTION_POOL_MIN_SIZE.getKey(), props );", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTMwODc2MA=="}, "originalCommit": {"oid": "ce7e1852b6045c447c03641255d7f0c0f9a9537f"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTMyMTcxMQ==", "bodyText": "Hi, yes I have tested it, the properties are propagated as normal properties through the Configuration object", "url": "https://github.com/dhis2/dhis2-core/pull/6412#discussion_r505321711", "createdAt": "2020-10-15T08:16:13Z", "author": {"login": "netroms"}, "path": "dhis-2/dhis-support/dhis-support-hibernate/src/main/java/org/hisp/dhis/hibernate/DefaultHibernateConfigurationProvider.java", "diffHunk": "@@ -232,6 +232,22 @@ private Properties getHibernateProperties()\n         putIfExists( configurationProvider.getProperty( ConfigurationKey.CONNECTION_USERNAME ), Environment.USER, props );\n         putIfExists( configurationProvider.getProperty( ConfigurationKey.CONNECTION_PASSWORD ), Environment.PASS, props );\n         putIfExists( configurationProvider.getProperty( ConfigurationKey.CONNECTION_POOL_MAX_SIZE ), Environment.C3P0_MAX_SIZE, props );\n+        putIfExists( configurationProvider.getProperty( ConfigurationKey.CONNECTION_POOL_MIN_SIZE ),\n+            ConfigurationKey.CONNECTION_POOL_MIN_SIZE.getKey(), props );", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTMwODc2MA=="}, "originalCommit": {"oid": "ce7e1852b6045c447c03641255d7f0c0f9a9537f"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTM4ODQ0Nw==", "bodyText": "That's good. I think it's time for a refactor of the config stuff but that can certainly wait.", "url": "https://github.com/dhis2/dhis2-core/pull/6412#discussion_r505388447", "createdAt": "2020-10-15T09:20:03Z", "author": {"login": "larshelge"}, "path": "dhis-2/dhis-support/dhis-support-hibernate/src/main/java/org/hisp/dhis/hibernate/DefaultHibernateConfigurationProvider.java", "diffHunk": "@@ -232,6 +232,22 @@ private Properties getHibernateProperties()\n         putIfExists( configurationProvider.getProperty( ConfigurationKey.CONNECTION_USERNAME ), Environment.USER, props );\n         putIfExists( configurationProvider.getProperty( ConfigurationKey.CONNECTION_PASSWORD ), Environment.PASS, props );\n         putIfExists( configurationProvider.getProperty( ConfigurationKey.CONNECTION_POOL_MAX_SIZE ), Environment.C3P0_MAX_SIZE, props );\n+        putIfExists( configurationProvider.getProperty( ConfigurationKey.CONNECTION_POOL_MIN_SIZE ),\n+            ConfigurationKey.CONNECTION_POOL_MIN_SIZE.getKey(), props );", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTMwODc2MA=="}, "originalCommit": {"oid": "ce7e1852b6045c447c03641255d7f0c0f9a9537f"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3820, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}