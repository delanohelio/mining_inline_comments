{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI0MDIzNzE2", "number": 6720, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQwNzo1OTozMFrOE7bI5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQwODowNDoyNVrOE7bR6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwNzQ2MDg0OnYy", "diffSide": "RIGHT", "path": "dhis-2/dhis-services/dhis-service-tracker/src/main/java/org/hisp/dhis/tracker/validation/hooks/AssignedUserValidationHook.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQwNzo1OTozMFrOH3EI7w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQwNzo1OTozMFrOH3EI7w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzUwMTU1MQ==", "bodyText": "Not sure if the add warning utility method is implemented, but I think is a good moment to do so\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            reporter.addWarning( TrackerWarningReport.builder()\n          \n          \n            \n                                .warningCode( E1120 )\n          \n          \n            \n                                .trackerType( TrackerType.EVENT )\n          \n          \n            \n                                .addArg( event.getProgramStage() ) );\n          \n          \n            \n                            addWarning( reporter, E1118, event.getAssignedUser() );", "url": "https://github.com/dhis2/dhis2-core/pull/6720#discussion_r527501551", "createdAt": "2020-11-20T07:59:30Z", "author": {"login": "enricocolasante"}, "path": "dhis-2/dhis-services/dhis-service-tracker/src/main/java/org/hisp/dhis/tracker/validation/hooks/AssignedUserValidationHook.java", "diffHunk": "@@ -49,20 +54,56 @@\n     @Override\n     public void validateEvent( ValidationErrorReporter reporter, Event event )\n     {\n-        if ( event.getAssignedUser() != null &&\n-            ( !CodeGenerator.isValidUid( event.getAssignedUser() ) ||\n-                reporter.getValidationContext().getBundle().getPreheat().get( TrackerIdScheme.UID, User.class,\n-                    event.getAssignedUser() ) == null) )\n+        if ( event.getAssignedUser() != null )\n         {\n-            TrackerErrorReport.TrackerErrorReportBuilder report = TrackerErrorReport.builder()\n-                .errorCode( E1118 )\n-                .trackerType( TrackerType.EVENT )\n-                .addArg( event.getAssignedUser() );\n+            if ( isNotValidAssignedUserUid( event ) || userNotPresentInPreheat( reporter, event ) )\n+            {\n+                TrackerErrorReport.TrackerErrorReportBuilder report = TrackerErrorReport.builder()\n+                    .errorCode( E1118 )\n+                    .trackerType( TrackerType.EVENT )\n+                    .addArg( event.getAssignedUser() );\n \n-            reporter.addError( report );\n+                reporter.addError( report );\n+            }\n+            if ( isNotEnabledUserAssignment( reporter, event ) )\n+            {\n+                reporter.addWarning( TrackerWarningReport.builder()\n+                    .warningCode( E1120 )\n+                    .trackerType( TrackerType.EVENT )\n+                    .addArg( event.getProgramStage() ) );", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f0e2edf11b368ebd28639b22754b49ecb2318d03"}, "originalPosition": 50}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwNzQ2NDg1OnYy", "diffSide": "RIGHT", "path": "dhis-2/dhis-services/dhis-service-tracker/src/main/java/org/hisp/dhis/tracker/validation/hooks/AssignedUserValidationHook.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQwODowMDo1MFrOH3ELZg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQwODowMDo1MFrOH3ELZg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzUwMjE4Mg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    Boolean userAssignmentEnabled = ((ProgramStage) reporter.getValidationContext().getBundle().getPreheat().get(\n          \n          \n            \n                        TrackerIdScheme.UID, ProgramStage.class, event.getProgramStage() )).isEnableUserAssignment();\n          \n          \n            \n                    Boolean userAssignmentEnabled = ctx.getProgramStage( event.getProgramStage() ).isEnableUserAssignment();", "url": "https://github.com/dhis2/dhis2-core/pull/6720#discussion_r527502182", "createdAt": "2020-11-20T08:00:50Z", "author": {"login": "enricocolasante"}, "path": "dhis-2/dhis-services/dhis-service-tracker/src/main/java/org/hisp/dhis/tracker/validation/hooks/AssignedUserValidationHook.java", "diffHunk": "@@ -49,20 +54,56 @@\n     @Override\n     public void validateEvent( ValidationErrorReporter reporter, Event event )\n     {\n-        if ( event.getAssignedUser() != null &&\n-            ( !CodeGenerator.isValidUid( event.getAssignedUser() ) ||\n-                reporter.getValidationContext().getBundle().getPreheat().get( TrackerIdScheme.UID, User.class,\n-                    event.getAssignedUser() ) == null) )\n+        if ( event.getAssignedUser() != null )\n         {\n-            TrackerErrorReport.TrackerErrorReportBuilder report = TrackerErrorReport.builder()\n-                .errorCode( E1118 )\n-                .trackerType( TrackerType.EVENT )\n-                .addArg( event.getAssignedUser() );\n+            if ( isNotValidAssignedUserUid( event ) || userNotPresentInPreheat( reporter, event ) )\n+            {\n+                TrackerErrorReport.TrackerErrorReportBuilder report = TrackerErrorReport.builder()\n+                    .errorCode( E1118 )\n+                    .trackerType( TrackerType.EVENT )\n+                    .addArg( event.getAssignedUser() );\n \n-            reporter.addError( report );\n+                reporter.addError( report );\n+            }\n+            if ( isNotEnabledUserAssignment( reporter, event ) )\n+            {\n+                reporter.addWarning( TrackerWarningReport.builder()\n+                    .warningCode( E1120 )\n+                    .trackerType( TrackerType.EVENT )\n+                    .addArg( event.getProgramStage() ) );\n+            }\n         }\n     }\n \n+    private Boolean isNotEnabledUserAssignment( ValidationErrorReporter reporter, Event event )\n+    {\n+        /*\n+         * TODO: should we have an helper method in base class (or a dedicated service)\n+         * to easily access preheat maps ? this is hard to read\n+         */\n+\n+        Boolean userAssignmentEnabled = ((ProgramStage) reporter.getValidationContext().getBundle().getPreheat().get(\n+            TrackerIdScheme.UID, ProgramStage.class, event.getProgramStage() )).isEnableUserAssignment();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f0e2edf11b368ebd28639b22754b49ecb2318d03"}, "originalPosition": 63}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwNzQ4MzkzOnYy", "diffSide": "RIGHT", "path": "dhis-2/dhis-services/dhis-service-tracker/src/main/java/org/hisp/dhis/tracker/validation/hooks/AssignedUserValidationHook.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQwODowNDoyNVrOH3EXhg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQwODowNDoyNVrOH3EXhg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzUwNTI4Ng==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            TrackerErrorReport.TrackerErrorReportBuilder report = TrackerErrorReport.builder()\n          \n          \n            \n                                .errorCode( E1118 )\n          \n          \n            \n                                .trackerType( TrackerType.EVENT )\n          \n          \n            \n                                .addArg( event.getAssignedUser() );\n          \n          \n            \n                            addError( reporter, E1118, event.getAssignedUser() );", "url": "https://github.com/dhis2/dhis2-core/pull/6720#discussion_r527505286", "createdAt": "2020-11-20T08:04:25Z", "author": {"login": "enricocolasante"}, "path": "dhis-2/dhis-services/dhis-service-tracker/src/main/java/org/hisp/dhis/tracker/validation/hooks/AssignedUserValidationHook.java", "diffHunk": "@@ -49,20 +54,56 @@\n     @Override\n     public void validateEvent( ValidationErrorReporter reporter, Event event )\n     {\n-        if ( event.getAssignedUser() != null &&\n-            ( !CodeGenerator.isValidUid( event.getAssignedUser() ) ||\n-                reporter.getValidationContext().getBundle().getPreheat().get( TrackerIdScheme.UID, User.class,\n-                    event.getAssignedUser() ) == null) )\n+        if ( event.getAssignedUser() != null )\n         {\n-            TrackerErrorReport.TrackerErrorReportBuilder report = TrackerErrorReport.builder()\n-                .errorCode( E1118 )\n-                .trackerType( TrackerType.EVENT )\n-                .addArg( event.getAssignedUser() );\n+            if ( isNotValidAssignedUserUid( event ) || userNotPresentInPreheat( reporter, event ) )\n+            {\n+                TrackerErrorReport.TrackerErrorReportBuilder report = TrackerErrorReport.builder()\n+                    .errorCode( E1118 )\n+                    .trackerType( TrackerType.EVENT )\n+                    .addArg( event.getAssignedUser() );", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f0e2edf11b368ebd28639b22754b49ecb2318d03"}, "originalPosition": 40}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3737, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}