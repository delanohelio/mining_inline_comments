{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc4NTI3NzA1", "number": 6085, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxMjoxMjo0N1rOEf9kDA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxNToxOTo0MFrOEgCk7A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAxOTQ5OTY0OnYy", "diffSide": "RIGHT", "path": "dhis-2/dhis-web/dhis-web-api/src/main/java/org/hisp/dhis/webapi/controller/AppHubController.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxMjoxMjo0N1rOHMjvaA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxMzowNjo0MlrOHMlsbw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjkzMDUzNg==", "bodyText": "No need for @responsebody since the controller is already annotated with @RestController", "url": "https://github.com/dhis2/dhis2-core/pull/6085#discussion_r482930536", "createdAt": "2020-09-03T12:12:47Z", "author": {"login": "mortenoh"}, "path": "dhis-2/dhis-web/dhis-web-api/src/main/java/org/hisp/dhis/webapi/controller/AppHubController.java", "diffHunk": "@@ -66,20 +70,29 @@\n     @Autowired\n     private I18nManager i18nManager;\n \n-\n-    @RequestMapping( method = RequestMethod.GET, produces = \"application/json\" )\n-    public @ResponseBody List<WebApp> listAppHub( HttpServletResponse response )\n+    /**\n+     * Deprecated as of version 2.35 and should be removed eventually.\n+     */\n+    @GetMapping( produces = \"application/json\" )\n+    public @ResponseBody List<WebApp> listAppHub( @RequestParam String query, HttpServletResponse response )", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "304bb68632c89eb5b15416fd2ab6497d5a3c793d"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mjk2MjU0Mw==", "bodyText": "Agreed.", "url": "https://github.com/dhis2/dhis2-core/pull/6085#discussion_r482962543", "createdAt": "2020-09-03T13:06:42Z", "author": {"login": "larshelge"}, "path": "dhis-2/dhis-web/dhis-web-api/src/main/java/org/hisp/dhis/webapi/controller/AppHubController.java", "diffHunk": "@@ -66,20 +70,29 @@\n     @Autowired\n     private I18nManager i18nManager;\n \n-\n-    @RequestMapping( method = RequestMethod.GET, produces = \"application/json\" )\n-    public @ResponseBody List<WebApp> listAppHub( HttpServletResponse response )\n+    /**\n+     * Deprecated as of version 2.35 and should be removed eventually.\n+     */\n+    @GetMapping( produces = \"application/json\" )\n+    public @ResponseBody List<WebApp> listAppHub( @RequestParam String query, HttpServletResponse response )", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjkzMDUzNg=="}, "originalCommit": {"oid": "304bb68632c89eb5b15416fd2ab6497d5a3c793d"}, "originalPosition": 55}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAxOTUyNDQ3OnYy", "diffSide": "RIGHT", "path": "dhis-2/dhis-web/dhis-web-api/src/main/java/org/hisp/dhis/webapi/controller/AppHubController.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxMjoyMDowNVrOHMj-lQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxNDoxMDozMFrOHModmg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjkzNDQyMQ==", "bodyText": "I believe this should be /{apiVersion}/{query} with query as a @PathVariable instead of a @RequestParam, otherwise it is difficult (currently impossible) to pass query parameters to the upstream API", "url": "https://github.com/dhis2/dhis2-core/pull/6085#discussion_r482934421", "createdAt": "2020-09-03T12:20:05Z", "author": {"login": "amcgee"}, "path": "dhis-2/dhis-web/dhis-web-api/src/main/java/org/hisp/dhis/webapi/controller/AppHubController.java", "diffHunk": "@@ -66,20 +70,29 @@\n     @Autowired\n     private I18nManager i18nManager;\n \n-\n-    @RequestMapping( method = RequestMethod.GET, produces = \"application/json\" )\n-    public @ResponseBody List<WebApp> listAppHub( HttpServletResponse response )\n+    /**\n+     * Deprecated as of version 2.35 and should be removed eventually.\n+     */\n+    @GetMapping( produces = \"application/json\" )\n+    public @ResponseBody List<WebApp> listAppHub( @RequestParam String query, HttpServletResponse response )\n         throws IOException\n     {\n         return appHubService.getAppHub();\n     }\n \n-    @RequestMapping( value = \"/{versionId}\", method = RequestMethod.POST )\n+    @GetMapping( value = \"/{apiVersion}\", produces = \"application/json\" )", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "304bb68632c89eb5b15416fd2ab6497d5a3c793d"}, "originalPosition": 62}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzAwNzg5OA==", "bodyText": "Changed now.", "url": "https://github.com/dhis2/dhis2-core/pull/6085#discussion_r483007898", "createdAt": "2020-09-03T14:10:30Z", "author": {"login": "larshelge"}, "path": "dhis-2/dhis-web/dhis-web-api/src/main/java/org/hisp/dhis/webapi/controller/AppHubController.java", "diffHunk": "@@ -66,20 +70,29 @@\n     @Autowired\n     private I18nManager i18nManager;\n \n-\n-    @RequestMapping( method = RequestMethod.GET, produces = \"application/json\" )\n-    public @ResponseBody List<WebApp> listAppHub( HttpServletResponse response )\n+    /**\n+     * Deprecated as of version 2.35 and should be removed eventually.\n+     */\n+    @GetMapping( produces = \"application/json\" )\n+    public @ResponseBody List<WebApp> listAppHub( @RequestParam String query, HttpServletResponse response )\n         throws IOException\n     {\n         return appHubService.getAppHub();\n     }\n \n-    @RequestMapping( value = \"/{versionId}\", method = RequestMethod.POST )\n+    @GetMapping( value = \"/{apiVersion}\", produces = \"application/json\" )", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjkzNDQyMQ=="}, "originalCommit": {"oid": "304bb68632c89eb5b15416fd2ab6497d5a3c793d"}, "originalPosition": 62}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAxOTg5MzQ4OnYy", "diffSide": "RIGHT", "path": "dhis-2/dhis-web/dhis-web-api/src/main/java/org/hisp/dhis/webapi/utils/ContextUtils.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxMzo0OTowMFrOHMne8g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxNDoxMTowNlrOHMofRw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mjk5MTg1OA==", "bodyText": "Nice!  Should this also be used by AppController.js?", "url": "https://github.com/dhis2/dhis2-core/pull/6085#discussion_r482991858", "createdAt": "2020-09-03T13:49:00Z", "author": {"login": "amcgee"}, "path": "dhis-2/dhis-web/dhis-web-api/src/main/java/org/hisp/dhis/webapi/utils/ContextUtils.java", "diffHunk": "@@ -421,4 +423,20 @@ public static String getAttachmentFileName( @Nullable String contentDispositionH\n         Matcher matcher = CONTENT_DISPOSITION_ATTACHMENT_FILENAME_PATTERN.matcher( contentDispositionHeaderValue );\n         return matcher.matches() ? matcher.group( 1 ) : null;\n     }\n+\n+    /**\n+     * Returns the value associated with a double wildcard ({@code **}) in the request mapping.\n+     * <p>\n+     * As an example, for a request mapping {@code /apps/**} and a request {@code /apps/data-visualizer/index.html},\n+     * this method will return {@code data-visualizer/index.html}.\n+     *\n+     * @param request the {@link HttpServletRequest}.\n+     * @return the wildcard value.\n+     */\n+    public static String getWildcardPathValue( HttpServletRequest request )", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c41099604a5871b0d59809cca8a13b72e450df7a"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzAwODMyNw==", "bodyText": "Yes we can use this other places too (in Java :-)", "url": "https://github.com/dhis2/dhis2-core/pull/6085#discussion_r483008327", "createdAt": "2020-09-03T14:11:06Z", "author": {"login": "larshelge"}, "path": "dhis-2/dhis-web/dhis-web-api/src/main/java/org/hisp/dhis/webapi/utils/ContextUtils.java", "diffHunk": "@@ -421,4 +423,20 @@ public static String getAttachmentFileName( @Nullable String contentDispositionH\n         Matcher matcher = CONTENT_DISPOSITION_ATTACHMENT_FILENAME_PATTERN.matcher( contentDispositionHeaderValue );\n         return matcher.matches() ? matcher.group( 1 ) : null;\n     }\n+\n+    /**\n+     * Returns the value associated with a double wildcard ({@code **}) in the request mapping.\n+     * <p>\n+     * As an example, for a request mapping {@code /apps/**} and a request {@code /apps/data-visualizer/index.html},\n+     * this method will return {@code data-visualizer/index.html}.\n+     *\n+     * @param request the {@link HttpServletRequest}.\n+     * @return the wildcard value.\n+     */\n+    public static String getWildcardPathValue( HttpServletRequest request )", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mjk5MTg1OA=="}, "originalCommit": {"oid": "c41099604a5871b0d59809cca8a13b72e450df7a"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAxOTkwNDY5OnYy", "diffSide": "RIGHT", "path": "dhis-2/dhis-web/dhis-web-api/src/main/java/org/hisp/dhis/webapi/controller/AppHubController.java", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxMzo1MTozMlrOHMnl-w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxNToxMjoxMVrOHMrT_w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mjk5MzY1OQ==", "bodyText": "This seems cleaner to me, thanks!  I'll leave it to @larshelge and @netroms to decide if this has negative implications for security, api cleanliness, or performance - if so we can use the ?query= version so long as additional query parameters are transparently forwarded to the apps.dhis2.org API.", "url": "https://github.com/dhis2/dhis2-core/pull/6085#discussion_r482993659", "createdAt": "2020-09-03T13:51:32Z", "author": {"login": "amcgee"}, "path": "dhis-2/dhis-web/dhis-web-api/src/main/java/org/hisp/dhis/webapi/controller/AppHubController.java", "diffHunk": "@@ -80,9 +82,12 @@\n         return appHubService.getAppHub();\n     }\n \n-    @GetMapping( value = \"/{apiVersion}\", produces = \"application/json\" )\n-    public @ResponseBody String getAppHubApiResponse( @PathVariable String apiVersion, @RequestParam String query )\n+    @GetMapping( value = \"/{apiVersion}/**\", produces = \"application/json\" )", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c41099604a5871b0d59809cca8a13b72e450df7a"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzAyMTE1MQ==", "bodyText": "Just tested and this will forward anything after /appHub/ on, should we restrict it to only /appHub/v\\d+/**?  That's a little narrower and should always be what we need, but not sure it's critical", "url": "https://github.com/dhis2/dhis2-core/pull/6085#discussion_r483021151", "createdAt": "2020-09-03T14:28:17Z", "author": {"login": "amcgee"}, "path": "dhis-2/dhis-web/dhis-web-api/src/main/java/org/hisp/dhis/webapi/controller/AppHubController.java", "diffHunk": "@@ -80,9 +82,12 @@\n         return appHubService.getAppHub();\n     }\n \n-    @GetMapping( value = \"/{apiVersion}\", produces = \"application/json\" )\n-    public @ResponseBody String getAppHubApiResponse( @PathVariable String apiVersion, @RequestParam String query )\n+    @GetMapping( value = \"/{apiVersion}/**\", produces = \"application/json\" )", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mjk5MzY1OQ=="}, "originalCommit": {"oid": "c41099604a5871b0d59809cca8a13b72e450df7a"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzAyMTU3Mw==", "bodyText": "@larshelge I don't think we can use regex here, so /appHub/v{apiVersion}/** perhaps?", "url": "https://github.com/dhis2/dhis2-core/pull/6085#discussion_r483021573", "createdAt": "2020-09-03T14:28:53Z", "author": {"login": "amcgee"}, "path": "dhis-2/dhis-web/dhis-web-api/src/main/java/org/hisp/dhis/webapi/controller/AppHubController.java", "diffHunk": "@@ -80,9 +82,12 @@\n         return appHubService.getAppHub();\n     }\n \n-    @GetMapping( value = \"/{apiVersion}\", produces = \"application/json\" )\n-    public @ResponseBody String getAppHubApiResponse( @PathVariable String apiVersion, @RequestParam String query )\n+    @GetMapping( value = \"/{apiVersion}/**\", produces = \"application/json\" )", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mjk5MzY1OQ=="}, "originalCommit": {"oid": "c41099604a5871b0d59809cca8a13b72e450df7a"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzA0NzgyNA==", "bodyText": "Right, I think v{apiVersion} might not add a lot value if you can still substitute apiVersion with anything.\nIf this is important we can do validation in application logic. Is it safe to assume v\\d+ for all future?", "url": "https://github.com/dhis2/dhis2-core/pull/6085#discussion_r483047824", "createdAt": "2020-09-03T15:02:39Z", "author": {"login": "larshelge"}, "path": "dhis-2/dhis-web/dhis-web-api/src/main/java/org/hisp/dhis/webapi/controller/AppHubController.java", "diffHunk": "@@ -80,9 +82,12 @@\n         return appHubService.getAppHub();\n     }\n \n-    @GetMapping( value = \"/{apiVersion}\", produces = \"application/json\" )\n-    public @ResponseBody String getAppHubApiResponse( @PathVariable String apiVersion, @RequestParam String query )\n+    @GetMapping( value = \"/{apiVersion}/**\", produces = \"application/json\" )", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mjk5MzY1OQ=="}, "originalCommit": {"oid": "c41099604a5871b0d59809cca8a13b72e450df7a"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzA1NDU5MQ==", "bodyText": "Added API version validation now in service layer (v\\d+).", "url": "https://github.com/dhis2/dhis2-core/pull/6085#discussion_r483054591", "createdAt": "2020-09-03T15:12:11Z", "author": {"login": "larshelge"}, "path": "dhis-2/dhis-web/dhis-web-api/src/main/java/org/hisp/dhis/webapi/controller/AppHubController.java", "diffHunk": "@@ -80,9 +82,12 @@\n         return appHubService.getAppHub();\n     }\n \n-    @GetMapping( value = \"/{apiVersion}\", produces = \"application/json\" )\n-    public @ResponseBody String getAppHubApiResponse( @PathVariable String apiVersion, @RequestParam String query )\n+    @GetMapping( value = \"/{apiVersion}/**\", produces = \"application/json\" )", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mjk5MzY1OQ=="}, "originalCommit": {"oid": "c41099604a5871b0d59809cca8a13b72e450df7a"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyMDAyNzk5OnYy", "diffSide": "RIGHT", "path": "dhis-2/dhis-services/dhis-service-administration/src/main/java/org/hisp/dhis/apphub/DefaultAppHubService.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxNDoxODowNVrOHMozHA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxNDozMjowOVrOHMpdKQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzAxMzQwNA==", "bodyText": "Base URL and Query are switched here, log example:\nGet App Hub response, base URL: 'apps', API version: 'v1', query: 'https://apps.dhis2.org/api'", "url": "https://github.com/dhis2/dhis2-core/pull/6085#discussion_r483013404", "createdAt": "2020-09-03T14:18:05Z", "author": {"login": "amcgee"}, "path": "dhis-2/dhis-services/dhis-service-administration/src/main/java/org/hisp/dhis/apphub/DefaultAppHubService.java", "diffHunk": "@@ -76,6 +80,28 @@ public DefaultAppHubService( RestTemplate restTemplate, AppManager appManager,\n         this.dhisConfigurationProvider = dhisConfigurationProvider;\n     }\n \n+    @Override\n+    public String getAppHubApiResponse( String apiVersion, String query )\n+    {\n+        validateQuery( apiVersion );\n+        validateQuery( query );\n+\n+        apiVersion = sanitizeQuery( apiVersion );\n+        query = sanitizeQuery( query );\n+\n+        String appHubApiUrl = dhisConfigurationProvider.getProperty( ConfigurationKey.APPHUB_API_URL );\n+\n+        log.info( \"Get App Hub response, base URL: '{}', API version: '{}', query: '{}'\", query, apiVersion, appHubApiUrl );", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f2901612b122bd99ff757de5ff329b49459a0c43"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzAyNDE2OQ==", "bodyText": "True, fixed.", "url": "https://github.com/dhis2/dhis2-core/pull/6085#discussion_r483024169", "createdAt": "2020-09-03T14:32:09Z", "author": {"login": "larshelge"}, "path": "dhis-2/dhis-services/dhis-service-administration/src/main/java/org/hisp/dhis/apphub/DefaultAppHubService.java", "diffHunk": "@@ -76,6 +80,28 @@ public DefaultAppHubService( RestTemplate restTemplate, AppManager appManager,\n         this.dhisConfigurationProvider = dhisConfigurationProvider;\n     }\n \n+    @Override\n+    public String getAppHubApiResponse( String apiVersion, String query )\n+    {\n+        validateQuery( apiVersion );\n+        validateQuery( query );\n+\n+        apiVersion = sanitizeQuery( apiVersion );\n+        query = sanitizeQuery( query );\n+\n+        String appHubApiUrl = dhisConfigurationProvider.getProperty( ConfigurationKey.APPHUB_API_URL );\n+\n+        log.info( \"Get App Hub response, base URL: '{}', API version: '{}', query: '{}'\", query, apiVersion, appHubApiUrl );", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzAxMzQwNA=="}, "originalCommit": {"oid": "f2901612b122bd99ff757de5ff329b49459a0c43"}, "originalPosition": 44}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyMDA1MTU3OnYy", "diffSide": "RIGHT", "path": "dhis-2/dhis-services/dhis-service-administration/src/main/java/org/hisp/dhis/apphub/DefaultAppHubService.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxNDoyMzoxM1rOHMpB4Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxNToxMDo0NlrOHMrQNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzAxNzE4NQ==", "bodyText": "This does not forward on any parameters to the apps.dhis2.org API - for example, the following queries all print App Hub request URL: 'https://apps.dhis2.org/api/v1/apps' and return the full list of 39 apps without any filtering applied:\nhttp://d2.winged.tech:8080/api/appHub/v1/apps?channel=canary (should return 0 apps)\nhttp://d2.winged.tech:8080/api/appHub/v1/apps?dhis2_version=2.22 (should return 8 apps)\nhttp://d2.winged.tech:8080/api/appHub/v1/apps?dhis2_version=2.34 (should return 27 apps)", "url": "https://github.com/dhis2/dhis2-core/pull/6085#discussion_r483017185", "createdAt": "2020-09-03T14:23:13Z", "author": {"login": "amcgee"}, "path": "dhis-2/dhis-services/dhis-service-administration/src/main/java/org/hisp/dhis/apphub/DefaultAppHubService.java", "diffHunk": "@@ -76,6 +80,28 @@ public DefaultAppHubService( RestTemplate restTemplate, AppManager appManager,\n         this.dhisConfigurationProvider = dhisConfigurationProvider;\n     }\n \n+    @Override\n+    public String getAppHubApiResponse( String apiVersion, String query )\n+    {\n+        validateQuery( apiVersion );\n+        validateQuery( query );\n+\n+        apiVersion = sanitizeQuery( apiVersion );\n+        query = sanitizeQuery( query );\n+\n+        String appHubApiUrl = dhisConfigurationProvider.getProperty( ConfigurationKey.APPHUB_API_URL );\n+\n+        log.info( \"Get App Hub response, base URL: '{}', API version: '{}', query: '{}'\", query, apiVersion, appHubApiUrl );\n+\n+        String url = String.format( \"%s/%s/%s\", appHubApiUrl, apiVersion, query );\n+\n+        log.info( \"App Hub request URL: '{}'\", url );\n+\n+        ResponseEntity<String> response = restTemplate.exchange( url, HttpMethod.GET, getJsonRequestEntity(), String.class );", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f2901612b122bd99ff757de5ff329b49459a0c43"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzA1MzYyMg==", "bodyText": "Including the query string now (see ContextUtils).", "url": "https://github.com/dhis2/dhis2-core/pull/6085#discussion_r483053622", "createdAt": "2020-09-03T15:10:46Z", "author": {"login": "larshelge"}, "path": "dhis-2/dhis-services/dhis-service-administration/src/main/java/org/hisp/dhis/apphub/DefaultAppHubService.java", "diffHunk": "@@ -76,6 +80,28 @@ public DefaultAppHubService( RestTemplate restTemplate, AppManager appManager,\n         this.dhisConfigurationProvider = dhisConfigurationProvider;\n     }\n \n+    @Override\n+    public String getAppHubApiResponse( String apiVersion, String query )\n+    {\n+        validateQuery( apiVersion );\n+        validateQuery( query );\n+\n+        apiVersion = sanitizeQuery( apiVersion );\n+        query = sanitizeQuery( query );\n+\n+        String appHubApiUrl = dhisConfigurationProvider.getProperty( ConfigurationKey.APPHUB_API_URL );\n+\n+        log.info( \"Get App Hub response, base URL: '{}', API version: '{}', query: '{}'\", query, apiVersion, appHubApiUrl );\n+\n+        String url = String.format( \"%s/%s/%s\", appHubApiUrl, apiVersion, query );\n+\n+        log.info( \"App Hub request URL: '{}'\", url );\n+\n+        ResponseEntity<String> response = restTemplate.exchange( url, HttpMethod.GET, getJsonRequestEntity(), String.class );", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzAxNzE4NQ=="}, "originalCommit": {"oid": "f2901612b122bd99ff757de5ff329b49459a0c43"}, "originalPosition": 50}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyMDMyMTA4OnYy", "diffSide": "RIGHT", "path": "dhis-2/dhis-web/dhis-web-api/src/main/java/org/hisp/dhis/webapi/controller/AppHubController.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxNToxOTo0MFrOHMrpiw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QyMDozODoxMlrOHM2rxA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzA2MDEwNw==", "bodyText": "I think this @RequestParam String query is new and shouldn't have been added?  It causes /api/appHub to fail with a 400 error when it should be an alias for /api/appHub/v1/apps I think?  Maybe it should automatically pass the dhis2_version parameter?  Not sure this is actually in use anywhere, but as-is this is an unnecessary breaking change", "url": "https://github.com/dhis2/dhis2-core/pull/6085#discussion_r483060107", "createdAt": "2020-09-03T15:19:40Z", "author": {"login": "amcgee"}, "path": "dhis-2/dhis-web/dhis-web-api/src/main/java/org/hisp/dhis/webapi/controller/AppHubController.java", "diffHunk": "@@ -66,20 +71,32 @@\n     @Autowired\n     private I18nManager i18nManager;\n \n-\n-    @RequestMapping( method = RequestMethod.GET, produces = \"application/json\" )\n-    public @ResponseBody List<WebApp> listAppHub( HttpServletResponse response )\n+    /**\n+     * Deprecated as of version 2.35 and should be removed eventually.\n+     */\n+    @GetMapping( produces = \"application/json\" )\n+    public  List<WebApp> listAppHub( @RequestParam String query, HttpServletResponse response )", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "240496255c46b265a43b40f9ffde9e4c9800d008"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzI0MDkwMA==", "bodyText": "Yep, this was a copy-paste issue. Fixed now.", "url": "https://github.com/dhis2/dhis2-core/pull/6085#discussion_r483240900", "createdAt": "2020-09-03T20:38:12Z", "author": {"login": "larshelge"}, "path": "dhis-2/dhis-web/dhis-web-api/src/main/java/org/hisp/dhis/webapi/controller/AppHubController.java", "diffHunk": "@@ -66,20 +71,32 @@\n     @Autowired\n     private I18nManager i18nManager;\n \n-\n-    @RequestMapping( method = RequestMethod.GET, produces = \"application/json\" )\n-    public @ResponseBody List<WebApp> listAppHub( HttpServletResponse response )\n+    /**\n+     * Deprecated as of version 2.35 and should be removed eventually.\n+     */\n+    @GetMapping( produces = \"application/json\" )\n+    public  List<WebApp> listAppHub( @RequestParam String query, HttpServletResponse response )", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzA2MDEwNw=="}, "originalCommit": {"oid": "240496255c46b265a43b40f9ffde9e4c9800d008"}, "originalPosition": 58}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3898, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}