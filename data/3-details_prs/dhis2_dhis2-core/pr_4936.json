{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc4NTc5OTI3", "number": 4936, "title": "feat: Add support for idSchemes in new tracker importer", "bodyText": "", "createdAt": "2020-02-22T11:18:11Z", "url": "https://github.com/dhis2/dhis2-core/pull/4936", "merged": true, "mergeCommit": {"oid": "124a17bdd586d0a41df7067d640a15e429b83612"}, "closed": true, "closedAt": "2020-02-27T10:06:10Z", "author": {"login": "stian-sandvold"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcGyeE8AH2gAyMzc4NTc5OTI3OjdjMGJmYzY0ODk5Njc1MTEwMDU2NjliN2M0MWRlMTcyYTk4YTI3ODU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcIX_MXgH2gAyMzc4NTc5OTI3OjA5NjQ5MjVhMjQ3ZmU1ZjQzZmI1ZGU0NTczNzk1ODgwNGUwMDZhZjY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "7c0bfc6489967511005669b7c41de172a98a2785", "author": {"user": {"login": "stian-sandvold", "name": "Stian Sandvold"}}, "url": "https://github.com/dhis2/dhis2-core/commit/7c0bfc6489967511005669b7c41de172a98a2785", "committedDate": "2020-02-22T11:17:44Z", "message": "Add support for idSchemes in new tracker importer"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1a791d3f428adb6bd5fd5ae76f2656c57c5c3d6f", "author": {"user": {"login": "stian-sandvold", "name": "Stian Sandvold"}}, "url": "https://github.com/dhis2/dhis2-core/commit/1a791d3f428adb6bd5fd5ae76f2656c57c5c3d6f", "committedDate": "2020-02-22T11:22:00Z", "message": "minor cleanup"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYzMjEyMjI5", "url": "https://github.com/dhis2/dhis2-core/pull/4936#pullrequestreview-363212229", "createdAt": "2020-02-24T08:04:19Z", "commit": {"oid": "1a791d3f428adb6bd5fd5ae76f2656c57c5c3d6f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQwODowNDoxOVrOFtX5WA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQwODowNDoxOVrOFtX5WA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzEyMTc1Mg==", "bodyText": "Wondering it we could instead check  if property's class extends JsonBinaryType\nPeople may forget to add new JsonB type into this list.", "url": "https://github.com/dhis2/dhis2-core/pull/4936#discussion_r383121752", "createdAt": "2020-02-24T08:04:19Z", "author": {"login": "vietnguyen"}, "path": "dhis-2/dhis-services/dhis-service-schema/src/main/java/org/hisp/dhis/schema/AbstractPropertyIntrospectorService.java", "diffHunk": "@@ -85,6 +95,18 @@\n         .put( AnalyticalObject.class, BaseAnalyticalObject.class )\n         .build();\n \n+    private static final ImmutableSet<String> JSONB_TYPE_CLASSES = ImmutableSet.<String>builder()\n+        .add( JsonBinaryType.class.getName() )\n+        .add( JsonBinaryPlainStringType.class.getName() )\n+        .add( JsonDeviceRenderTypeMap.class.getName() )\n+        .add( JsonJobParametersType.class.getName() )\n+        .add( JsonListBinaryType.class.getName() )\n+        .add( JsonSetBinaryType.class.getName() )\n+        .add( JsonEventDataValueSetBinaryType.class.getName() )\n+        .add( JsonProgramRuleEvaluationEnvironmentSetBinaryType.class.getName() )\n+        .add( JsonAttributeValueBinaryType.class.getName() )\n+        .build();\n+\n     private final Map<Class<?>, Map<String, Property>> classMapCache = new HashMap<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1a791d3f428adb6bd5fd5ae76f2656c57c5c3d6f"}, "originalPosition": 40}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "11c06f58ab233b4aa82db3b2e9d2ea9cc5a863e4", "author": {"user": {"login": "stian-sandvold", "name": "Stian Sandvold"}}, "url": "https://github.com/dhis2/dhis2-core/commit/11c06f58ab233b4aa82db3b2e9d2ea9cc5a863e4", "committedDate": "2020-02-24T16:44:50Z", "message": "Added tests; Added new TrackerIdentifier; Renamed old TrackerIdentifier to TrackerIdScheme"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "10bd94a076eca45193589f3886b74518e61134ac", "author": {"user": {"login": "stian-sandvold", "name": "Stian Sandvold"}}, "url": "https://github.com/dhis2/dhis2-core/commit/10bd94a076eca45193589f3886b74518e61134ac", "committedDate": "2020-02-25T22:15:13Z", "message": "merged from master"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a4ef3a23be3af05403737a50487e70446df4a6e0", "author": {"user": {"login": "stian-sandvold", "name": "Stian Sandvold"}}, "url": "https://github.com/dhis2/dhis2-core/commit/a4ef3a23be3af05403737a50487e70446df4a6e0", "committedDate": "2020-02-25T22:42:34Z", "message": "Merging from master cont."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "492a498b29fbd79e0d3a1080645c0d634704b753", "author": {"user": {"login": "stian-sandvold", "name": "Stian Sandvold"}}, "url": "https://github.com/dhis2/dhis2-core/commit/492a498b29fbd79e0d3a1080645c0d634704b753", "committedDate": "2020-02-25T22:45:07Z", "message": "merging cont."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4e58bdd6742ce69a2ed1150935a96facb44624da", "author": {"user": {"login": "stian-sandvold", "name": "Stian Sandvold"}}, "url": "https://github.com/dhis2/dhis2-core/commit/4e58bdd6742ce69a2ed1150935a96facb44624da", "committedDate": "2020-02-26T14:43:25Z", "message": "Cleanup"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b61a1f1c7f9bebd99095dfab08668b8415c08c66", "author": {"user": {"login": "stian-sandvold", "name": "Stian Sandvold"}}, "url": "https://github.com/dhis2/dhis2-core/commit/b61a1f1c7f9bebd99095dfab08668b8415c08c66", "committedDate": "2020-02-26T14:47:47Z", "message": "Minor changes based on sonarqube"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY1NDAyNzg5", "url": "https://github.com/dhis2/dhis2-core/pull/4936#pullrequestreview-365402789", "createdAt": "2020-02-27T04:05:12Z", "commit": {"oid": "b61a1f1c7f9bebd99095dfab08668b8415c08c66"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QwNDowNToxMlrOFvEnpw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QwNDoxNjo1NVrOFvEw_Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDkwMzA3OQ==", "bodyText": "What if there is no : in the string.. won't this give error? (the [1] part)", "url": "https://github.com/dhis2/dhis2-core/pull/4936#discussion_r384903079", "createdAt": "2020-02-27T04:05:12Z", "author": {"login": "mortenoh"}, "path": "dhis-2/dhis-services/dhis-service-tracker/src/main/java/org/hisp/dhis/tracker/DefaultTrackerImportService.java", "diffHunk": "@@ -180,18 +182,61 @@ public TrackerImportParams getParamsFromMap( Map<String, List<String>> parameter\n     // Utility Methods\n     //-----------------------------------------------------------------------------------\n \n+    private TrackerIdentifierParams getTrackerIdentifiers( Map<String, List<String>> parameters )\n+    {\n+        TrackerIdScheme idScheme = getEnumWithDefault( TrackerIdScheme.class, parameters, \"idScheme\", TrackerIdScheme.UID );\n+        TrackerIdScheme orgUnitIdScheme  = getEnumWithDefault( TrackerIdScheme.class, parameters, \"orgUnitIdScheme\", idScheme );\n+        TrackerIdScheme programIdScheme  = getEnumWithDefault( TrackerIdScheme.class, parameters, \"programIdScheme\", idScheme );\n+        TrackerIdScheme programStageIdScheme  = getEnumWithDefault( TrackerIdScheme.class, parameters, \"programStageIdScheme\", idScheme );\n+        TrackerIdScheme dataElementIdScheme  = getEnumWithDefault( TrackerIdScheme.class, parameters, \"dataElementIdScheme\", idScheme );\n+\n+        return TrackerIdentifierParams.builder()\n+            .idScheme( TrackerIdentifier.builder().idScheme( idScheme ).value( getAttributeUidOrNull( parameters, \"idScheme\" ) ).build() )\n+            .orgUnitIdScheme( TrackerIdentifier.builder().idScheme( orgUnitIdScheme ).value( getAttributeUidOrNull( parameters, \"orgUnitIdScheme\" ) ).build() )\n+            .programIdScheme( TrackerIdentifier.builder().idScheme( programIdScheme ).value( getAttributeUidOrNull( parameters, \"programIdScheme\" ) ).build() )\n+            .programStageIdScheme( TrackerIdentifier.builder().idScheme( programStageIdScheme ).value( getAttributeUidOrNull( parameters, \"programStageIdScheme\" ) ).build() )\n+            .dataElementIdScheme( TrackerIdentifier.builder().idScheme( dataElementIdScheme ).value( getAttributeUidOrNull( parameters, \"dataElementIdScheme\" ) ).build() )\n+            .build();\n+    }\n+\n     private <T extends Enum<T>> T getEnumWithDefault( Class<T> enumKlass, Map<String, List<String>> parameters, String key, T defaultValue )\n     {\n         if ( parameters == null || parameters.get( key ) == null || parameters.get( key ).isEmpty() )\n         {\n             return defaultValue;\n         }\n \n+        if ( TrackerIdScheme.class.equals( enumKlass ) && IdScheme.isAttribute( parameters.get( key ).get( 0 ) ) )\n+        {\n+            return Enums.getIfPresent( enumKlass, \"ATTRIBUTE\" ).orNull();\n+        }\n+\n         String value = String.valueOf( parameters.get( key ).get( 0 ) );\n \n         return Enums.getIfPresent( enumKlass, value ).or( defaultValue );\n     }\n \n+    private String getAttributeUidOrNull(Map<String, List<String>> parameters, String key)\n+    {\n+        if ( parameters == null || parameters.get( key ) == null || parameters.get( key ).isEmpty() )\n+        {\n+            return null;\n+        }\n+\n+        if ( IdScheme.isAttribute( parameters.get( key ).get( 0 ) ) )\n+        {\n+            // Get second half of string, separated by ':'\n+            String uid = parameters.get( key ).get( 0 ).split( \":\" )[1];", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b61a1f1c7f9bebd99095dfab08668b8415c08c66"}, "originalPosition": 66}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDkwMzUzNQ==", "bodyText": "Null should already be default for strings", "url": "https://github.com/dhis2/dhis2-core/pull/4936#discussion_r384903535", "createdAt": "2020-02-27T04:07:27Z", "author": {"login": "mortenoh"}, "path": "dhis-2/dhis-services/dhis-service-tracker/src/main/java/org/hisp/dhis/tracker/TrackerIdentifier.java", "diffHunk": "@@ -28,39 +28,56 @@\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n \n+import lombok.AllArgsConstructor;\n+import lombok.Builder;\n+import lombok.Data;\n+import lombok.NoArgsConstructor;\n+import org.hisp.dhis.attribute.AttributeValue;\n import org.hisp.dhis.common.IdentifiableObject;\n+import org.hisp.dhis.util.ObjectUtils;\n \n /**\n- * @author Morten Olav Hansen <mortenoh@gmail.com>\n+ * @author Stian Sandvold\n  */\n-public enum TrackerIdentifier\n+\n+@Data\n+@Builder\n+@NoArgsConstructor\n+@AllArgsConstructor\n+public class TrackerIdentifier\n {\n-    /**\n-     * Preheat using UID identifiers.\n-     */\n-    UID,\n+    public final static TrackerIdentifier UID = builder().idScheme( TrackerIdScheme.UID ).build();\n+\n+    public final static TrackerIdentifier CODE = builder().idScheme( TrackerIdScheme.CODE ).build();\n \n-    /**\n-     * Preheat using CODE identifiers.\n-     */\n-    CODE,\n+    public final static TrackerIdentifier AUTO = builder().idScheme( TrackerIdScheme.AUTO ).build();\n \n-    /**\n-     * Find first non-null identifier in order: UID, CODE\n-     */\n-    AUTO;\n+    @Builder.Default\n+    private TrackerIdScheme idScheme = TrackerIdScheme.UID;\n+\n+    @Builder.Default\n+    private String value = null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b61a1f1c7f9bebd99095dfab08668b8415c08c66"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDkwNTQ2OQ==", "bodyText": "Have you done any performance testing here? should we also look into adding jsonb indexes?", "url": "https://github.com/dhis2/dhis2-core/pull/4936#discussion_r384905469", "createdAt": "2020-02-27T04:16:55Z", "author": {"login": "mortenoh"}, "path": "dhis-2/dhis-support/dhis-support-hibernate/src/main/java/org/hisp/dhis/hibernate/HibernateGenericStore.java", "diffHunk": "@@ -575,6 +576,19 @@ public int getCount()\n         return objects.isEmpty() || (object != null && objects.size() == 1 && object.equals( objects.get( 0 ) ) );\r\n     }\r\n \r\n+    @Override\r\n+    public List<T> getAllByAttributeAndValues( Attribute attribute, List<String> values )\r\n+    {\r\n+        CriteriaBuilder builder = getCriteriaBuilder();\r\n+\r\n+        CriteriaQuery<T> query = builder.createQuery( getClazz() );\r\n+        Root<T> root = query.from( getClazz() );\r\n+        query.select( root );\r\n+        query.where( builder.function( FUNCTION_JSONB_EXTRACT_PATH_TEXT, String.class, root.get( \"attributeValues\" ), builder.literal( attribute.getUid() ), builder.literal( \"value\" ) ).in( values ) );\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b61a1f1c7f9bebd99095dfab08668b8415c08c66"}, "originalPosition": 29}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0964925a247fe5f43fb5de45737958804e006af6", "author": {"user": {"login": "stian-sandvold", "name": "Stian Sandvold"}}, "url": "https://github.com/dhis2/dhis2-core/commit/0964925a247fe5f43fb5de45737958804e006af6", "committedDate": "2020-02-27T09:34:19Z", "message": "Fixed failing test and made changes according to feedback"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2838, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}