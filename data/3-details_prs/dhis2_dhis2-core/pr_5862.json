{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU1MDA1NDc3", "number": 5862, "title": "feat: Convert sharing objects to Jsonb", "bodyText": "Doc link https://github.com/dhis2/notes-backend/blob/master/platform/36/changelog/sharing_model.md\nJira https://jira.dhis2.org/browse/DHIS2-5814\n\nMigration script is in  V2_36_11__Migrate_sharings_to_jsonb\nThe new sharing property format\n\n\"sharing\": {\n  \"owner\": \"GOLswS44mh8\",\n  \"external\": false,\n  \"public\": \"rwrw----\",\n  \"users\": {\n    \"xE7jOejl9FI\": {\n      \"access\": \"rw------\",\n      \"id\": \"xE7jOejl9FI\"\n    }\n  },\n  \"userGroups\": {\n    \"tH0GcNZZ1vW\": {\n      \"access\": \"rwrw----\",\n      \"id\": \"tH0GcNZZ1vW\"\n    },\n    \"Rg8wusV7QYi\": {\n      \"access\": \"rw------\",\n      \"id\": \"Rg8wusV7QYi\"\n    }\n  }\n}\n\n\nSharing dialog still post the old format\nAdded /{uid}/sharing in AbstractCrudController so we can using new sharing format with this endpoint. Same as the /translations endpoint\nPUT request to api/29/categoryOptions/FbLZS3ueWbQ/sharing\nPayload\n\n{\n  \"owner\": \"GOLswS44mh8\",\n  \"external\": true,\n  \"userGroups\": {\n    \"tH0GcNZZ1vW\": {\n      \"access\": \"rwrw----\",\n      \"id\": \"tH0GcNZZ1vW\"\n    },\n    \"Rg8wusV7QYi\": {\n      \"access\": \"rw------\",\n      \"id\": \"Rg8wusV7QYi\"\n    }\n  },\n  \"public\": \"rw------\"\n}\n\nTo do list\n\n Fix TokenOperator\n Fix unit test error for DataApproval\n Performance test\n Flyway script to delete all legacy tables", "createdAt": "2020-07-22T09:48:39Z", "url": "https://github.com/dhis2/dhis2-core/pull/5862", "merged": true, "mergeCommit": {"oid": "3e25b9b834757233501b068c1fd96b5b68cc22f7"}, "closed": true, "closedAt": "2020-12-22T11:59:14Z", "author": {"login": "vietnguyen"}, "timelineItems": {"totalCount": 116, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdomjIJAH2gAyNDU1MDA1NDc3OjdlYWY5NDkyMTE0NmU3ZTA2YmEyZGIzMGNlZjg5ZmU3MjY3ZjY1ZGQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdopP8sAFqTU1NzAyNjc4Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "7eaf94921146e7e06ba2db30cef89fe7267f65dd", "author": {"user": {"login": "vietnguyen", "name": "Viet Nguyen"}}, "url": "https://github.com/dhis2/dhis2-core/commit/7eaf94921146e7e06ba2db30cef89fe7267f65dd", "committedDate": "2020-12-22T08:48:58Z", "message": "fix: revert  debug code"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "49f3aed949647fce4a00f2a3e8690dc71c100aef", "author": {"user": {"login": "vietnguyen", "name": "Viet Nguyen"}}, "url": "https://github.com/dhis2/dhis2-core/commit/49f3aed949647fce4a00f2a3e8690dc71c100aef", "committedDate": "2020-12-22T08:49:24Z", "message": "Merge remote-tracking branch 'origin/master' into DHIS2-5814"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cef213e26393cd6a66224887690d3fc1ae65b905", "author": {"user": {"login": "vietnguyen", "name": "Viet Nguyen"}}, "url": "https://github.com/dhis2/dhis2-core/commit/cef213e26393cd6a66224887690d3fc1ae65b905", "committedDate": "2020-12-22T08:51:08Z", "message": "Merge branch 'DHIS2-5814' of https://github.com/dhis2/dhis2-core into DHIS2-5814"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1235e183fe954012bb6dbe68986d618e6090a20c", "author": {"user": {"login": "larshelge", "name": "Lars Helge \u00d8verland"}}, "url": "https://github.com/dhis2/dhis2-core/commit/1235e183fe954012bb6dbe68986d618e6090a20c", "committedDate": "2020-12-22T09:30:27Z", "message": "fix: Clean up code"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c89696f866427a89a23a089823478d29834a6fa1", "author": {"user": {"login": "larshelge", "name": "Lars Helge \u00d8verland"}}, "url": "https://github.com/dhis2/dhis2-core/commit/c89696f866427a89a23a089823478d29834a6fa1", "committedDate": "2020-12-22T09:30:57Z", "message": "Merge branch 'DHIS2-5814' of github.com:dhis2/dhis2-core into DHIS2-5814"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3bfd3e1bd0bc9f0dd66ca07bd788b8f0748b2e18", "author": {"user": {"login": "vietnguyen", "name": "Viet Nguyen"}}, "url": "https://github.com/dhis2/dhis2-core/commit/3bfd3e1bd0bc9f0dd66ca07bd788b8f0748b2e18", "committedDate": "2020-12-22T09:40:42Z", "message": "fix: convert TrackerAccessManagerTest to integration test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9eb11cced0b776902ce88b89ba0fbcd469ff8db4", "author": {"user": {"login": "vietnguyen", "name": "Viet Nguyen"}}, "url": "https://github.com/dhis2/dhis2-core/commit/9eb11cced0b776902ce88b89ba0fbcd469ff8db4", "committedDate": "2020-12-22T09:40:59Z", "message": "Merge branch 'DHIS2-5814' of https://github.com/dhis2/dhis2-core into DHIS2-5814"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU2OTY2MTA2", "url": "https://github.com/dhis2/dhis2-core/pull/5862#pullrequestreview-556966106", "createdAt": "2020-12-22T10:12:12Z", "commit": {"oid": "9eb11cced0b776902ce88b89ba0fbcd469ff8db4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQxMDoxMjoxMlrOIJ1t8w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQxMDoxMjoxMlrOIJ1t8w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzE4ODIxMQ==", "bodyText": "Missing author", "url": "https://github.com/dhis2/dhis2-core/pull/5862#discussion_r547188211", "createdAt": "2020-12-22T10:12:12Z", "author": {"login": "netroms"}, "path": "dhis-2/dhis-services/dhis-service-core/src/test/java/org/hisp/dhis/common/HibernateIdentifiableObjectStoreTest.java", "diffHunk": "@@ -0,0 +1,236 @@\n+package org.hisp.dhis.common;\n+\n+/*\n+ * Copyright (c) 2004-2020, University of Oslo\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ * Redistributions of source code must retain the above copyright notice, this\n+ * list of conditions and the following disclaimer.\n+ *\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following disclaimer in the documentation\n+ * and/or other materials provided with the distribution.\n+ * Neither the name of the HISP project nor the names of its contributors may\n+ * be used to endorse or promote products derived from this software without\n+ * specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n+ * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+\n+import com.google.common.collect.Sets;\n+import org.hisp.dhis.TransactionalIntegrationTestBase;\n+import org.hisp.dhis.category.CategoryOption;\n+import org.hisp.dhis.category.CategoryOptionCombo;\n+import org.hisp.dhis.dataelement.DataElement;\n+import org.hisp.dhis.dataelement.DataElementStore;\n+import org.hisp.dhis.datavalue.AggregateAccessManager;\n+import org.hisp.dhis.datavalue.DataValue;\n+import org.hisp.dhis.datavalue.DataValueStore;\n+import org.hisp.dhis.organisationunit.OrganisationUnit;\n+import org.hisp.dhis.period.MonthlyPeriodType;\n+import org.hisp.dhis.period.Period;\n+import org.hisp.dhis.period.PeriodType;\n+import org.hisp.dhis.security.acl.AccessStringHelper;\n+import org.hisp.dhis.user.User;\n+import org.hisp.dhis.user.UserGroup;\n+import org.hisp.dhis.user.UserService;\n+import org.hisp.dhis.user.sharing.Sharing;\n+import org.hisp.dhis.user.sharing.UserAccess;\n+import org.hisp.dhis.user.sharing.UserGroupAccess;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.springframework.beans.factory.annotation.Autowired;\n+\n+import java.util.Date;\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertNotNull;\n+import static org.junit.Assert.assertNull;\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9eb11cced0b776902ce88b89ba0fbcd469ff8db4"}, "originalPosition": 62}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "68f5b0a2571fb96b8168928e6cd3245a6bfd3798", "author": {"user": {"login": "larshelge", "name": "Lars Helge \u00d8verland"}}, "url": "https://github.com/dhis2/dhis2-core/commit/68f5b0a2571fb96b8168928e6cd3245a6bfd3798", "committedDate": "2020-12-22T10:14:43Z", "message": "Merge branch 'master' of github.com:dhis2/dhis2-core"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "46158a9398714a1dcf619704444117e1ac48e12b", "author": {"user": {"login": "vietnguyen", "name": "Viet Nguyen"}}, "url": "https://github.com/dhis2/dhis2-core/commit/46158a9398714a1dcf619704444117e1ac48e12b", "committedDate": "2020-12-22T10:19:41Z", "message": "clean up codes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "74748f1ad4fb2ca0e986c36e880d864ea590b4af", "author": {"user": {"login": "larshelge", "name": "Lars Helge \u00d8verland"}}, "url": "https://github.com/dhis2/dhis2-core/commit/74748f1ad4fb2ca0e986c36e880d864ea590b4af", "committedDate": "2020-12-22T10:22:28Z", "message": "Merge branch 'master' into DHIS2-5814"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5030988f43d976dc07235a08cc89f6e9250239dd", "author": {"user": {"login": "larshelge", "name": "Lars Helge \u00d8verland"}}, "url": "https://github.com/dhis2/dhis2-core/commit/5030988f43d976dc07235a08cc89f6e9250239dd", "committedDate": "2020-12-22T10:22:38Z", "message": "Merge branch 'DHIS2-5814' of github.com:dhis2/dhis2-core into DHIS2-5814"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU2OTc3OTI5", "url": "https://github.com/dhis2/dhis2-core/pull/5862#pullrequestreview-556977929", "createdAt": "2020-12-22T10:30:37Z", "commit": {"oid": "5030988f43d976dc07235a08cc89f6e9250239dd"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQxMDozMDozN1rOIJ2SPg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQxMDozMDozN1rOIJ2SPg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzE5NzUwMg==", "bodyText": "Is this code nullpointer vulnerable? Is sharing not null, or can it be null?", "url": "https://github.com/dhis2/dhis2-core/pull/5862#discussion_r547197502", "createdAt": "2020-12-22T10:30:37Z", "author": {"login": "larshelge"}, "path": "dhis-2/dhis-services/dhis-service-acl/src/main/java/org/hisp/dhis/security/acl/DefaultAclService.java", "diffHunk": "@@ -644,30 +646,35 @@ private boolean checkSharingAccess( User user, IdentifiableObject object )\n      */\n     private boolean checkSharingPermission( User user, IdentifiableObject object, Permission permission )\n     {\n-        if ( AccessStringHelper.isEnabled( object.getPublicAccess(), permission ) )\n+        if ( AccessStringHelper.isEnabled( object.getSharing().getPublicAccess(), permission ) )\n         {\n             return true;\n         }\n \n-        for ( UserGroupAccess userGroupAccess : object.getUserGroupAccesses() )\n+        if ( object.getSharing().getUserGroups() != null && !CollectionUtils.isEmpty( user.getGroups() ) )\n         {\n-            // Check if user is allowed to read this object through group access\n-\n-            if ( AccessStringHelper.isEnabled( userGroupAccess.getAccess(), permission )\n-                    && userGroupAccess.userGroupContainsUser( user ) )\n+            for ( UserGroupAccess userGroupAccess : object.getSharing().getUserGroups().values() )\n             {\n-                return true;\n+                // Check if user is allowed to read this object through group access\n+                if ( AccessStringHelper.isEnabled( userGroupAccess.getAccess(), permission )\n+                    && checkUserGroupAccess( user.getGroups(), userGroupAccess.getId() ) )\n+                {\n+                    return true;\n+                }\n             }\n         }\n \n-        for ( UserAccess userAccess : object.getUserAccesses() )\n+        if ( object.getSharing().getUsers() != null )", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5030988f43d976dc07235a08cc89f6e9250239dd"}, "originalPosition": 162}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b66008a505b6d310262df11d028427fb0fb888c4", "author": {"user": {"login": "larshelge", "name": "Lars Helge \u00d8verland"}}, "url": "https://github.com/dhis2/dhis2-core/commit/b66008a505b6d310262df11d028427fb0fb888c4", "committedDate": "2020-12-22T10:36:46Z", "message": "Update code style"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU2OTgwNDY5", "url": "https://github.com/dhis2/dhis2-core/pull/5862#pullrequestreview-556980469", "createdAt": "2020-12-22T10:34:44Z", "commit": {"oid": "9eb11cced0b776902ce88b89ba0fbcd469ff8db4"}, "state": "APPROVED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQxMDozNToxOVrOIJ2buA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQxMDo1NToyMVrOIJ3B1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzE5OTkyOA==", "bodyText": "Extra newline", "url": "https://github.com/dhis2/dhis2-core/pull/5862#discussion_r547199928", "createdAt": "2020-12-22T10:35:19Z", "author": {"login": "netroms"}, "path": "dhis-2/dhis-services/dhis-service-core/src/main/java/org/hisp/dhis/patch/DefaultPatchService.java", "diffHunk": "@@ -407,7 +408,9 @@ private void applyMutation( Mutation mutation, Property property, Object target\n                     Schema schema = schemaService.getDynamicSchema( property.getItemKlass() );\n \n                     Query query = Query.from( schema );\n-                    query.add( Restrictions.eq( \"id\", object ) ); // optimize by using .in(..) query\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5030988f43d976dc07235a08cc89f6e9250239dd"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzIwNDkxNQ==", "bodyText": "Fix todo?", "url": "https://github.com/dhis2/dhis2-core/pull/5862#discussion_r547204915", "createdAt": "2020-12-22T10:45:32Z", "author": {"login": "netroms"}, "path": "dhis-2/dhis-services/dhis-service-core/src/test/java/org/hisp/dhis/preheat/PreheatServiceTest.java", "diffHunk": "@@ -543,9 +555,10 @@ public void testPreheatReferenceConnectAUTO()\n         assertContains(members, \"DataElementB\", \"DataElementCodeB\");\n         assertContains(members, \"DataElementC\", \"DataElementCodeC\");\n \n-        assertEquals( \"FirstNameA\", dataElementGroup.getUser().getFirstName() );\n-        assertEquals( \"SurnameA\", dataElementGroup.getUser().getSurname() );\n-        assertEquals( \"UserCodeA\", dataElementGroup.getUser().getCode() );\n+        // TODO Fix this", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5030988f43d976dc07235a08cc89f6e9250239dd"}, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzIwNzg4Mg==", "bodyText": "Commented lines", "url": "https://github.com/dhis2/dhis2-core/pull/5862#discussion_r547207882", "createdAt": "2020-12-22T10:51:30Z", "author": {"login": "netroms"}, "path": "dhis-2/dhis-services/dhis-service-validation/src/test/java/org/hisp/dhis/validation/ValidationResultStoreTest.java", "diffHunk": "@@ -191,8 +194,10 @@ private CurrentUserService getMockCurrentUserService( String userName, boolean s\n \n     private void setPrivateAccess( BaseIdentifiableObject object, UserGroup... userGroups )\n     {\n-        object.setPublicAccess( ACCESS_NONE );\n-        object.setUser( userZ ); // Needed for sharing to work\n+//        object.setPublicAccess( ACCESS_NONE );", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5030988f43d976dc07235a08cc89f6e9250239dd"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzIwOTM3OQ==", "bodyText": "Commented line", "url": "https://github.com/dhis2/dhis2-core/pull/5862#discussion_r547209379", "createdAt": "2020-12-22T10:54:44Z", "author": {"login": "netroms"}, "path": "dhis-2/dhis-web/dhis-web-api/src/main/java/org/hisp/dhis/webapi/controller/AbstractCrudController.java", "diffHunk": "@@ -274,6 +281,8 @@\n \n         handleAttributeValues( entities, fields );\n \n+//        handleSharingAttributes( entities, fields );", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5030988f43d976dc07235a08cc89f6e9250239dd"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzIwOTQxOA==", "bodyText": "Commented line", "url": "https://github.com/dhis2/dhis2-core/pull/5862#discussion_r547209418", "createdAt": "2020-12-22T10:54:51Z", "author": {"login": "netroms"}, "path": "dhis-2/dhis-web/dhis-web-api/src/main/java/org/hisp/dhis/webapi/controller/AbstractCrudController.java", "diffHunk": "@@ -547,6 +556,8 @@ private RootNode getObjectInternal( String uid, Map<String, String> parameters,\n \n         handleAttributeValues( entities, fields );\n \n+//        handleSharingAttributes( entities, fields );", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5030988f43d976dc07235a08cc89f6e9250239dd"}, "originalPosition": 68}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzIwOTY4NA==", "bodyText": "Commented block", "url": "https://github.com/dhis2/dhis2-core/pull/5862#discussion_r547209684", "createdAt": "2020-12-22T10:55:21Z", "author": {"login": "netroms"}, "path": "dhis-2/dhis-web/dhis-web-api/src/main/java/org/hisp/dhis/webapi/controller/AbstractCrudController.java", "diffHunk": "@@ -1314,6 +1359,23 @@ protected void handleAttributeValues( List<T> entityList, List<String> fields )\n         }\n     }\n \n+//    protected void handleSharingAttributes(  List<T> entityList, List<String> fields )", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5030988f43d976dc07235a08cc89f6e9250239dd"}, "originalPosition": 127}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU3MDI2Nzg3", "url": "https://github.com/dhis2/dhis2-core/pull/5862#pullrequestreview-557026787", "createdAt": "2020-12-22T11:57:44Z", "commit": {"oid": "b66008a505b6d310262df11d028427fb0fb888c4"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ef885c3dda2014ea63edc5dd35d78b3320cde2fd", "author": {"user": {"login": "vietnguyen", "name": "Viet Nguyen"}}, "url": "https://github.com/dhis2/dhis2-core/commit/ef885c3dda2014ea63edc5dd35d78b3320cde2fd", "committedDate": "2020-07-13T05:14:21Z", "message": "convert sharings to jsonb"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "eb5cbf13715ccff4ea2d5e7b5fc618c02b95c899", "author": {"user": {"login": "vietnguyen", "name": "Viet Nguyen"}}, "url": "https://github.com/dhis2/dhis2-core/commit/eb5cbf13715ccff4ea2d5e7b5fc618c02b95c899", "committedDate": "2020-07-22T09:47:24Z", "message": "feat: Contert sharing objects to jsonb"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0857abefaf62b23855273d184cadd7cf252e8b51", "author": {"user": {"login": "vietnguyen", "name": "Viet Nguyen"}}, "url": "https://github.com/dhis2/dhis2-core/commit/0857abefaf62b23855273d184cadd7cf252e8b51", "committedDate": "2020-07-31T04:30:10Z", "message": "fix userPredicate in HibernateGenericStore"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "09c8cd098aa04940a03c35ae6d2a4cb7037a4c86", "author": {"user": {"login": "vietnguyen", "name": "Viet Nguyen"}}, "url": "https://github.com/dhis2/dhis2-core/commit/09c8cd098aa04940a03c35ae6d2a4cb7037a4c86", "committedDate": "2020-08-01T16:07:43Z", "message": "Done with getJsonbSharingPredicates"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1a0b2648f91e39fa1c315056493099f1f3469d64", "author": {"user": {"login": "vietnguyen", "name": "Viet Nguyen"}}, "url": "https://github.com/dhis2/dhis2-core/commit/1a0b2648f91e39fa1c315056493099f1f3469d64", "committedDate": "2020-08-03T07:55:59Z", "message": "Add unit test description for testSaveDEWithObjectSharings"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1bfb1698478082c95b1ef616288e68d45db5a8a8", "author": {"user": {"login": "vietnguyen", "name": "Viet Nguyen"}}, "url": "https://github.com/dhis2/dhis2-core/commit/1bfb1698478082c95b1ef616288e68d45db5a8a8", "committedDate": "2020-08-03T13:33:52Z", "message": "Clean up codes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4f60379643200821642ffb71e870a7b06889a370", "author": {"user": {"login": "vietnguyen", "name": "Viet Nguyen"}}, "url": "https://github.com/dhis2/dhis2-core/commit/4f60379643200821642ffb71e870a7b06889a370", "committedDate": "2020-08-06T02:59:19Z", "message": "Fix NPE in HibernateIdentifiableObjectStore"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6b6c9829a02881f7cfb40b0fef690c574b8df68b", "author": {"user": {"login": "vietnguyen", "name": "Viet Nguyen"}}, "url": "https://github.com/dhis2/dhis2-core/commit/6b6c9829a02881f7cfb40b0fef690c574b8df68b", "committedDate": "2020-08-07T14:57:36Z", "message": "Add script to add sharing jsonb column"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1f43e5b133b5bba761dcb2bb5b145e160310c648", "author": {"user": {"login": "vietnguyen", "name": "Viet Nguyen"}}, "url": "https://github.com/dhis2/dhis2-core/commit/1f43e5b133b5bba761dcb2bb5b145e160310c648", "committedDate": "2020-08-12T08:11:50Z", "message": "cont"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "08dbf70d4ddcec9515543525678fdcc89356c930", "author": {"user": {"login": "vietnguyen", "name": "Viet Nguyen"}}, "url": "https://github.com/dhis2/dhis2-core/commit/08dbf70d4ddcec9515543525678fdcc89356c930", "committedDate": "2020-08-13T04:29:47Z", "message": "add jsonb column"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "30c80c8e94dd17df908ee3fb647d3cd729e4bca2", "author": {"user": {"login": "vietnguyen", "name": "Viet Nguyen"}}, "url": "https://github.com/dhis2/dhis2-core/commit/30c80c8e94dd17df908ee3fb647d3cd729e4bca2", "committedDate": "2020-08-19T14:20:08Z", "message": "sharing jsonb cont"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d0934c83d2ef32e080a5bb25674a5f870b3aad96", "author": {"user": {"login": "vietnguyen", "name": "Viet Nguyen"}}, "url": "https://github.com/dhis2/dhis2-core/commit/d0934c83d2ef32e080a5bb25674a5f870b3aad96", "committedDate": "2020-08-20T09:14:11Z", "message": "sharing jsonb cont."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9fd48563f52ffefcfacca1da1c05721ec2370e08", "author": {"user": {"login": "vietnguyen", "name": "Viet Nguyen"}}, "url": "https://github.com/dhis2/dhis2-core/commit/9fd48563f52ffefcfacca1da1c05721ec2370e08", "committedDate": "2020-08-20T18:41:22Z", "message": "Updated hbm files"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "176a44fa59a9ab12294b365b10f1300b1644935c", "author": {"user": {"login": "vietnguyen", "name": "Viet Nguyen"}}, "url": "https://github.com/dhis2/dhis2-core/commit/176a44fa59a9ab12294b365b10f1300b1644935c", "committedDate": "2020-08-24T07:38:31Z", "message": "fix: unit test error for sharing jsonb"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b337f1ef724f139083b684dc5ad5806a9ac1e80a", "author": {"user": {"login": "vietnguyen", "name": "Viet Nguyen"}}, "url": "https://github.com/dhis2/dhis2-core/commit/b337f1ef724f139083b684dc5ad5806a9ac1e80a", "committedDate": "2020-08-24T17:09:25Z", "message": "fix: unit test errors in ValidationResultStoreTest"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6c82a5de1d610314cb518460d8655a37e550819a", "author": {"user": {"login": "vietnguyen", "name": "Viet Nguyen"}}, "url": "https://github.com/dhis2/dhis2-core/commit/6c82a5de1d610314cb518460d8655a37e550819a", "committedDate": "2020-08-26T07:16:14Z", "message": "fix: add sharing dto objects to support old format"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8c935359c85c4aaffbf4cf5a595f1cad09fe4c52", "author": {"user": {"login": "vietnguyen", "name": "Viet Nguyen"}}, "url": "https://github.com/dhis2/dhis2-core/commit/8c935359c85c4aaffbf4cf5a595f1cad09fe4c52", "committedDate": "2020-09-01T06:51:59Z", "message": "Replace getSharingDetachedCriteria with JPA query"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a61bc2a5f79e5867639019e46dfb7d43fae9db1a", "author": {"user": {"login": "vietnguyen", "name": "Viet Nguyen"}}, "url": "https://github.com/dhis2/dhis2-core/commit/a61bc2a5f79e5867639019e46dfb7d43fae9db1a", "committedDate": "2020-09-01T06:53:16Z", "message": "Replace getSharingDetachedCriteria with JPA query"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "39714d2085b4ecf8617faff00cb94f2a002b9c34", "author": {"user": {"login": "vietnguyen", "name": "Viet Nguyen"}}, "url": "https://github.com/dhis2/dhis2-core/commit/39714d2085b4ecf8617faff00cb94f2a002b9c34", "committedDate": "2020-09-10T14:14:23Z", "message": "jsonb for sharing"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "34fd6ce05d073e81efa552bba321fedc32a06151", "author": {"user": {"login": "vietnguyen", "name": "Viet Nguyen"}}, "url": "https://github.com/dhis2/dhis2-core/commit/34fd6ce05d073e81efa552bba321fedc32a06151", "committedDate": "2020-09-22T11:57:53Z", "message": "jsonb sharing: fixed queryEngine"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "25752089bf6bdafe520c919db461cc54e70ca2dd", "author": {"user": {"login": "vietnguyen", "name": "Viet Nguyen"}}, "url": "https://github.com/dhis2/dhis2-core/commit/25752089bf6bdafe520c919db461cc54e70ca2dd", "committedDate": "2020-09-24T18:01:22Z", "message": "sharing jsonb: added back user columns"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bf1cdfc5e9befd0514649d152c62e5de41bdd048", "author": {"user": {"login": "vietnguyen", "name": "Viet Nguyen"}}, "url": "https://github.com/dhis2/dhis2-core/commit/bf1cdfc5e9befd0514649d152c62e5de41bdd048", "committedDate": "2020-10-13T06:55:05Z", "message": "feat: jsonb for sharing cont."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fb6b2c5bd16f534d9605ca4351b2b4df1af44cb8", "author": {"user": {"login": "vietnguyen", "name": "Viet Nguyen"}}, "url": "https://github.com/dhis2/dhis2-core/commit/fb6b2c5bd16f534d9605ca4351b2b4df1af44cb8", "committedDate": "2020-10-14T19:26:43Z", "message": "feat:jsonb for sharing cont."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4974dafb25079e15b4ff571fafd032c873a41fe7", "author": {"user": {"login": "vietnguyen", "name": "Viet Nguyen"}}, "url": "https://github.com/dhis2/dhis2-core/commit/4974dafb25079e15b4ff571fafd032c873a41fe7", "committedDate": "2020-10-21T06:17:18Z", "message": "fix unit errors for jsonb sharing"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "de2aba874996114d6043b0328f1bd892ee392391", "author": {"user": {"login": "vietnguyen", "name": "Viet Nguyen"}}, "url": "https://github.com/dhis2/dhis2-core/commit/de2aba874996114d6043b0328f1bd892ee392391", "committedDate": "2020-10-21T08:05:48Z", "message": "Merge remote-tracking branch 'origin/master' into DHIS2-5814"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9f75058cadda87b7a2c6ed4f2992be4fc79fabab", "author": {"user": {"login": "vietnguyen", "name": "Viet Nguyen"}}, "url": "https://github.com/dhis2/dhis2-core/commit/9f75058cadda87b7a2c6ed4f2992be4fc79fabab", "committedDate": "2020-10-27T03:31:50Z", "message": "fix unit test errors for jsonb sharing"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3b1cd32bed9adc3e489f90387c29ac3bf4564bff", "author": {"user": {"login": "vietnguyen", "name": "Viet Nguyen"}}, "url": "https://github.com/dhis2/dhis2-core/commit/3b1cd32bed9adc3e489f90387c29ac3bf4564bff", "committedDate": "2020-10-28T07:57:18Z", "message": "fix unit test errors"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2236c6e981b070d3b8813efd90578679971c6d2c", "author": {"user": {"login": "vietnguyen", "name": "Viet Nguyen"}}, "url": "https://github.com/dhis2/dhis2-core/commit/2236c6e981b070d3b8813efd90578679971c6d2c", "committedDate": "2020-11-04T08:44:33Z", "message": "fix NPE in DefaultAclService"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6f2e76e863f5f639bae56df251fbd5a116312c0b", "author": {"user": {"login": "vietnguyen", "name": "Viet Nguyen"}}, "url": "https://github.com/dhis2/dhis2-core/commit/6f2e76e863f5f639bae56df251fbd5a116312c0b", "committedDate": "2020-11-19T09:09:22Z", "message": "fix unit test errors"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bc36623089ec0817d76d4f3531f940fb5d3300f2", "author": {"user": {"login": "vietnguyen", "name": "Viet Nguyen"}}, "url": "https://github.com/dhis2/dhis2-core/commit/bc36623089ec0817d76d4f3531f940fb5d3300f2", "committedDate": "2020-11-22T06:54:29Z", "message": "fix: unit test errors"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ff9646afc6cdfc9a031c68fe0f1613cc05afbacc", "author": {"user": {"login": "vietnguyen", "name": "Viet Nguyen"}}, "url": "https://github.com/dhis2/dhis2-core/commit/ff9646afc6cdfc9a031c68fe0f1613cc05afbacc", "committedDate": "2020-11-23T04:50:37Z", "message": "fix: filter non-entity class for preheat"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8e3f3060bdd317a18f8058e288cb8ea7055559fd", "author": {"user": {"login": "vietnguyen", "name": "Viet Nguyen"}}, "url": "https://github.com/dhis2/dhis2-core/commit/8e3f3060bdd317a18f8058e288cb8ea7055559fd", "committedDate": "2020-11-24T08:30:24Z", "message": "fix unit test errors for jsonb sharing"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4b5242b3b2f8dd8dde9a64a48b13532c13ed5664", "author": {"user": {"login": "vietnguyen", "name": "Viet Nguyen"}}, "url": "https://github.com/dhis2/dhis2-core/commit/4b5242b3b2f8dd8dde9a64a48b13532c13ed5664", "committedDate": "2020-11-24T14:40:03Z", "message": "fix: jsonb sharing test error in AclStore"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "015f6d54777280561f717e6c2e20c8193aa0333f", "author": {"user": {"login": "vietnguyen", "name": "Viet Nguyen"}}, "url": "https://github.com/dhis2/dhis2-core/commit/015f6d54777280561f717e6c2e20c8193aa0333f", "committedDate": "2020-11-24T19:40:05Z", "message": "fix: unit test errors in EnrollmentSecurityTest"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "25140af79f2ad17e249b45cba7d1707642ee43c9", "author": {"user": {"login": "vietnguyen", "name": "Viet Nguyen"}}, "url": "https://github.com/dhis2/dhis2-core/commit/25140af79f2ad17e249b45cba7d1707642ee43c9", "committedDate": "2020-11-25T15:04:16Z", "message": "fix: unit test errors in EventSecurityTest"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d5a5ce45e8878f7e58be237f2f75a30e5ffb6e7b", "author": {"user": {"login": "vietnguyen", "name": "Viet Nguyen"}}, "url": "https://github.com/dhis2/dhis2-core/commit/d5a5ce45e8878f7e58be237f2f75a30e5ffb6e7b", "committedDate": "2020-11-27T07:30:40Z", "message": "fix: unit test errors in DataValueSetExportAccessControlTest"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1abc9907375b245689a047d858d558165e7cb8d0", "author": {"user": {"login": "vietnguyen", "name": "Viet Nguyen"}}, "url": "https://github.com/dhis2/dhis2-core/commit/1abc9907375b245689a047d858d558165e7cb8d0", "committedDate": "2020-11-27T08:19:38Z", "message": "fix: unit test errors DefaultMetadataVersionServiceTest"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "afbaa8e669487261c9dc5e8368171398bb0eed17", "author": {"user": {"login": "vietnguyen", "name": "Viet Nguyen"}}, "url": "https://github.com/dhis2/dhis2-core/commit/afbaa8e669487261c9dc5e8368171398bb0eed17", "committedDate": "2020-11-30T17:44:49Z", "message": "fix: unit test errors"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b57148155a04e8b55cf56706158f8bdf71b15654", "author": {"user": {"login": "vietnguyen", "name": "Viet Nguyen"}}, "url": "https://github.com/dhis2/dhis2-core/commit/b57148155a04e8b55cf56706158f8bdf71b15654", "committedDate": "2020-12-01T09:23:49Z", "message": "fix: unit test errors in EventSecurityTest"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6a7536d13039c2cd9b240ccbf68d67a3f330aa64", "author": {"user": {"login": "vietnguyen", "name": "Viet Nguyen"}}, "url": "https://github.com/dhis2/dhis2-core/commit/6a7536d13039c2cd9b240ccbf68d67a3f330aa64", "committedDate": "2020-12-01T09:39:59Z", "message": "Merge remote-tracking branch 'origin/master' into DHIS2-5814"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "adb619e8a0572b390f1ac49c315dc39d1e228c3c", "author": {"user": {"login": "vietnguyen", "name": "Viet Nguyen"}}, "url": "https://github.com/dhis2/dhis2-core/commit/adb619e8a0572b390f1ac49c315dc39d1e228c3c", "committedDate": "2020-12-01T14:24:36Z", "message": "fix: unit test error in EventSecurityTest"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b7d3ef2cfd072c57f5c82b005d3f53030de7e7b5", "author": {"user": {"login": "vietnguyen", "name": "Viet Nguyen"}}, "url": "https://github.com/dhis2/dhis2-core/commit/b7d3ef2cfd072c57f5c82b005d3f53030de7e7b5", "committedDate": "2020-12-01T15:41:27Z", "message": "fix: unit test errors in EventSecurityTest"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e74945a821a4b25851348dad13b5cf2d746f8b29", "author": {"user": {"login": "vietnguyen", "name": "Viet Nguyen"}}, "url": "https://github.com/dhis2/dhis2-core/commit/e74945a821a4b25851348dad13b5cf2d746f8b29", "committedDate": "2020-12-01T16:12:36Z", "message": "fix: use correct default COC uid in TrackerTest"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3b74529446b2f1271505e311df155bbde7a7a5d2", "author": {"user": {"login": "vietnguyen", "name": "Viet Nguyen"}}, "url": "https://github.com/dhis2/dhis2-core/commit/3b74529446b2f1271505e311df155bbde7a7a5d2", "committedDate": "2020-12-02T06:23:03Z", "message": "Merge remote-tracking branch 'origin/master' into DHIS2-5814"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d20f5ea09ed051685d9f6b25d0eded7eac000c1d", "author": {"user": {"login": "vietnguyen", "name": "Viet Nguyen"}}, "url": "https://github.com/dhis2/dhis2-core/commit/d20f5ea09ed051685d9f6b25d0eded7eac000c1d", "committedDate": "2020-12-02T06:55:22Z", "message": "fix: unit test error in ProgramSupplierAclIntegrationTest"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1dd2b0ade89b9c92b58c1eae554ecb052c21d1c3", "author": {"user": {"login": "vietnguyen", "name": "Viet Nguyen"}}, "url": "https://github.com/dhis2/dhis2-core/commit/1dd2b0ade89b9c92b58c1eae554ecb052c21d1c3", "committedDate": "2020-12-02T07:14:07Z", "message": "fix: unit test error in QueryServiceTest"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9b7e11912d111f7d0f3e243fed95b44460a56680", "author": {"user": {"login": "larshelge", "name": "Lars Helge \u00d8verland"}}, "url": "https://github.com/dhis2/dhis2-core/commit/9b7e11912d111f7d0f3e243fed95b44460a56680", "committedDate": "2020-12-02T07:39:04Z", "message": "fix: Ignore line 1691 in DataApprovalServiceTest"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "de7e5306ffe907ad3c6a598a050e54588c44fe3b", "author": {"user": {"login": "vietnguyen", "name": "Viet Nguyen"}}, "url": "https://github.com/dhis2/dhis2-core/commit/de7e5306ffe907ad3c6a598a050e54588c44fe3b", "committedDate": "2020-12-02T07:53:09Z", "message": "fix: unit test error in AttributeOptionComboLoaderTest"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "15bd5cd23bd542e2a07cb41f05f23bc4e9f5067e", "author": {"user": {"login": "vietnguyen", "name": "Viet Nguyen"}}, "url": "https://github.com/dhis2/dhis2-core/commit/15bd5cd23bd542e2a07cb41f05f23bc4e9f5067e", "committedDate": "2020-12-02T07:53:36Z", "message": "Merge remote-tracking branch 'origin/DHIS2-5814' into DHIS2-5814"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3501ea1ee13abd17f5a59f1af9a6a3601ec3c757", "author": {"user": {"login": "vietnguyen", "name": "Viet Nguyen"}}, "url": "https://github.com/dhis2/dhis2-core/commit/3501ea1ee13abd17f5a59f1af9a6a3601ec3c757", "committedDate": "2020-12-02T15:35:09Z", "message": "fix: unit test error AnalyticsSecurityManagerTest"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7123588eb9f7cb885e11fbe7e4de8b298d5b9c82", "author": {"user": {"login": "vietnguyen", "name": "Viet Nguyen"}}, "url": "https://github.com/dhis2/dhis2-core/commit/7123588eb9f7cb885e11fbe7e4de8b298d5b9c82", "committedDate": "2020-12-03T07:59:31Z", "message": "fix: unit test error for TrackerTest"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a366cfc74ba594940523595374a6a0f798675be0", "author": {"user": {"login": "vietnguyen", "name": "Viet Nguyen"}}, "url": "https://github.com/dhis2/dhis2-core/commit/a366cfc74ba594940523595374a6a0f798675be0", "committedDate": "2020-12-03T08:14:55Z", "message": "fix: remove unused code"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e7a98cf60e99588c7973b94cfa5b2530bf23ce6e", "author": {"user": {"login": "vietnguyen", "name": "Viet Nguyen"}}, "url": "https://github.com/dhis2/dhis2-core/commit/e7a98cf60e99588c7973b94cfa5b2530bf23ce6e", "committedDate": "2020-12-04T13:34:23Z", "message": "fix: unit test errors EventImportValidationTest"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "22ddcbda19bcd41aef642f24df4c90cc24f8834d", "author": {"user": {"login": "vietnguyen", "name": "Viet Nguyen"}}, "url": "https://github.com/dhis2/dhis2-core/commit/22ddcbda19bcd41aef642f24df4c90cc24f8834d", "committedDate": "2020-12-04T15:47:05Z", "message": "Merge remote-tracking branch 'origin/master' into DHIS2-5814"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "61303bd86d678417219e6d64bce359c8a3ffaaea", "author": {"user": {"login": "vietnguyen", "name": "Viet Nguyen"}}, "url": "https://github.com/dhis2/dhis2-core/commit/61303bd86d678417219e6d64bce359c8a3ffaaea", "committedDate": "2020-12-05T03:51:51Z", "message": "fix: unit test error in EventImportValidationTest"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0feef76a8d108b33f8900c288115e7cadd37a0fd", "author": {"user": {"login": "vietnguyen", "name": "Viet Nguyen"}}, "url": "https://github.com/dhis2/dhis2-core/commit/0feef76a8d108b33f8900c288115e7cadd37a0fd", "committedDate": "2020-12-05T05:27:13Z", "message": "fix: unit test error UserSupplier"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3522754220617613c4ddae52ac4684ef63a66acc", "author": {"user": {"login": "vietnguyen", "name": "Viet Nguyen"}}, "url": "https://github.com/dhis2/dhis2-core/commit/3522754220617613c4ddae52ac4684ef63a66acc", "committedDate": "2020-12-05T09:48:49Z", "message": "fix: unit test error DataElementOperandControllerTest"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5bd57a9b4e4fc396641459114b15227671a4858c", "author": {"user": {"login": "vietnguyen", "name": "Viet Nguyen"}}, "url": "https://github.com/dhis2/dhis2-core/commit/5bd57a9b4e4fc396641459114b15227671a4858c", "committedDate": "2020-12-05T15:30:37Z", "message": "fix: unit test error ResponseHandlerTest"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f2c702eaa05a5c64ea26d0259d798a10c6f79ec7", "author": {"user": {"login": "vietnguyen", "name": "Viet Nguyen"}}, "url": "https://github.com/dhis2/dhis2-core/commit/f2c702eaa05a5c64ea26d0259d798a10c6f79ec7", "committedDate": "2020-12-08T09:25:26Z", "message": "feat: add currentUserGroupInfoCache for acl check"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ea84eb2575cd5747378c5f825044e9c0cc47e274", "author": {"user": {"login": "vietnguyen", "name": "Viet Nguyen"}}, "url": "https://github.com/dhis2/dhis2-core/commit/ea84eb2575cd5747378c5f825044e9c0cc47e274", "committedDate": "2020-12-08T15:01:05Z", "message": "fix: clean up sharing migration script."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c819a5263ddbc33965fbf7a8be8b095bd0e1817a", "author": {"user": {"login": "vietnguyen", "name": "Viet Nguyen"}}, "url": "https://github.com/dhis2/dhis2-core/commit/c819a5263ddbc33965fbf7a8be8b095bd0e1817a", "committedDate": "2020-12-08T16:53:49Z", "message": "feat: add sharing endpoint to crud controller"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "028b991c5df117545760617c30fe6a29a0f2de79", "author": {"user": {"login": "vietnguyen", "name": "Viet Nguyen"}}, "url": "https://github.com/dhis2/dhis2-core/commit/028b991c5df117545760617c30fe6a29a0f2de79", "committedDate": "2020-12-09T10:41:44Z", "message": "fix: error in TokenOperator"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7bfd1b0adc99688613d42119ffacaa5b08dd5a0a", "author": {"user": {"login": "vietnguyen", "name": "Viet Nguyen"}}, "url": "https://github.com/dhis2/dhis2-core/commit/7bfd1b0adc99688613d42119ffacaa5b08dd5a0a", "committedDate": "2020-12-09T11:35:01Z", "message": "fix: api test error in TrackedEntityInstanceAclReadTests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ba10fa5357236fb80525411b013c1b95ae8b0867", "author": {"user": {"login": "vietnguyen", "name": "Viet Nguyen"}}, "url": "https://github.com/dhis2/dhis2-core/commit/ba10fa5357236fb80525411b013c1b95ae8b0867", "committedDate": "2020-12-09T11:38:45Z", "message": "fix: allow updating object owner"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ4ODEyNTk4", "url": "https://github.com/dhis2/dhis2-core/pull/5862#pullrequestreview-548812598", "createdAt": "2020-12-10T04:36:48Z", "commit": {"oid": "ba10fa5357236fb80525411b013c1b95ae8b0867"}, "state": "COMMENTED", "comments": {"totalCount": 19, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQwNDozNjo0OFrOIC1Jyg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQwNTozODo1OFrOIC2YoQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTgzODkyMg==", "bodyText": "Add some simple javadocs explaining the purpose of this service", "url": "https://github.com/dhis2/dhis2-core/pull/5862#discussion_r539838922", "createdAt": "2020-12-10T04:36:48Z", "author": {"login": "mortenoh"}, "path": "dhis-2/dhis-api/src/main/java/org/hisp/dhis/sharing/SharingService.java", "diffHunk": "@@ -0,0 +1,43 @@\n+package org.hisp.dhis.sharing;\n+\n+/*\n+ *\n+ *  * Copyright (c) 2004-2020, University of Oslo\n+ *  * All rights reserved.\n+ *  *\n+ *  * Redistribution and use in source and binary forms, with or without\n+ *  * modification, are permitted provided that the following conditions are met:\n+ *  * Redistributions of source code must retain the above copyright notice, this\n+ *  * list of conditions and the following disclaimer.\n+ *  *\n+ *  * Redistributions in binary form must reproduce the above copyright notice,\n+ *  * this list of conditions and the following disclaimer in the documentation\n+ *  * and/or other materials provided with the distribution.\n+ *  * Neither the name of the HISP project nor the names of its contributors may\n+ *  * be used to endorse or promote products derived from this software without\n+ *  * specific prior written permission.\n+ *  *\n+ *  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ *  * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ *  * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ *  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ *  * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ *  * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ *  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n+ *  * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ *  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ *  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ *\n+ */\n+\n+import org.hisp.dhis.common.IdentifiableObject;\n+import org.hisp.dhis.feedback.ObjectReport;\n+import org.hisp.dhis.user.sharing.Sharing;\n+\n+import javax.validation.constraints.NotNull;\n+\n+public interface SharingService", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba10fa5357236fb80525411b013c1b95ae8b0867"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTgzODk5NQ==", "bodyText": "extra newline", "url": "https://github.com/dhis2/dhis2-core/pull/5862#discussion_r539838995", "createdAt": "2020-12-10T04:37:01Z", "author": {"login": "mortenoh"}, "path": "dhis-2/dhis-api/src/main/java/org/hisp/dhis/user/CurrentUserGroupInfo.java", "diffHunk": "@@ -0,0 +1,54 @@\n+package org.hisp.dhis.user;\n+\n+/*\n+ *\n+ *  * Copyright (c) 2004-2020, University of Oslo\n+ *  * All rights reserved.\n+ *  *\n+ *  * Redistribution and use in source and binary forms, with or without\n+ *  * modification, are permitted provided that the following conditions are met:\n+ *  * Redistributions of source code must retain the above copyright notice, this\n+ *  * list of conditions and the following disclaimer.\n+ *  *\n+ *  * Redistributions in binary form must reproduce the above copyright notice,\n+ *  * this list of conditions and the following disclaimer in the documentation\n+ *  * and/or other materials provided with the distribution.\n+ *  * Neither the name of the HISP project nor the names of its contributors may\n+ *  * be used to endorse or promote products derived from this software without\n+ *  * specific prior written permission.\n+ *  *\n+ *  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ *  * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ *  * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ *  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ *  * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ *  * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ *  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n+ *  * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ *  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ *  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ *\n+ */\n+\n+import lombok.AllArgsConstructor;\n+import lombok.Getter;\n+import lombok.NoArgsConstructor;\n+import lombok.Setter;\n+\n+import java.util.HashSet;\n+import java.util.Set;\n+\n+/**\n+ * Contains minimal User info used for ACL check in {@link org.hisp.dhis.common.IdentifiableObjectStore}\n+ */\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba10fa5357236fb80525411b013c1b95ae8b0867"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTg0MDk5Nw==", "bodyText": "Add some simple javadocs", "url": "https://github.com/dhis2/dhis2-core/pull/5862#discussion_r539840997", "createdAt": "2020-12-10T04:43:11Z", "author": {"login": "mortenoh"}, "path": "dhis-2/dhis-api/src/main/java/org/hisp/dhis/user/UserGroupStore.java", "diffHunk": "@@ -0,0 +1,37 @@\n+package org.hisp.dhis.user;\n+\n+/*\n+ * Copyright (c) 2004-2020, University of Oslo\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ * Redistributions of source code must retain the above copyright notice, this\n+ * list of conditions and the following disclaimer.\n+ *\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following disclaimer in the documentation\n+ * and/or other materials provided with the distribution.\n+ * Neither the name of the HISP project nor the names of its contributors may\n+ * be used to endorse or promote products derived from this software without\n+ * specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n+ * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+\n+import org.hisp.dhis.common.IdentifiableObjectStore;\n+\n+public interface UserGroupStore", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba10fa5357236fb80525411b013c1b95ae8b0867"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTg0MTk3MQ==", "bodyText": "Should also be embedded object to mark it properly in the schema", "url": "https://github.com/dhis2/dhis2-core/pull/5862#discussion_r539841971", "createdAt": "2020-12-10T04:46:19Z", "author": {"login": "mortenoh"}, "path": "dhis-2/dhis-api/src/main/java/org/hisp/dhis/user/sharing/Sharing.java", "diffHunk": "@@ -0,0 +1,148 @@\n+package org.hisp.dhis.user.sharing;\n+\n+import com.fasterxml.jackson.annotation.JsonIgnore;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlRootElement;\n+import lombok.AllArgsConstructor;\n+import lombok.Builder;\n+import lombok.Data;\n+import lombok.NoArgsConstructor;\n+import org.hisp.dhis.common.DxfNamespaces;\n+import org.hisp.dhis.user.User;\n+\n+import java.io.Serializable;\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.Set;\n+\n+@Builder\n+@Data\n+@AllArgsConstructor\n+@NoArgsConstructor\n+@JacksonXmlRootElement( localName = \"sharing\", namespace = DxfNamespaces.DXF_2_0 )\n+public class Sharing\n+    implements Serializable", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba10fa5357236fb80525411b013c1b95ae8b0867"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTg0MjAwOQ==", "bodyText": "license", "url": "https://github.com/dhis2/dhis2-core/pull/5862#discussion_r539842009", "createdAt": "2020-12-10T04:46:30Z", "author": {"login": "mortenoh"}, "path": "dhis-2/dhis-api/src/main/java/org/hisp/dhis/user/sharing/Sharing.java", "diffHunk": "@@ -0,0 +1,148 @@\n+package org.hisp.dhis.user.sharing;\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba10fa5357236fb80525411b013c1b95ae8b0867"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTg0MzgxNQ==", "bodyText": "default is already false?", "url": "https://github.com/dhis2/dhis2-core/pull/5862#discussion_r539843815", "createdAt": "2020-12-10T04:52:09Z", "author": {"login": "mortenoh"}, "path": "dhis-2/dhis-api/src/main/java/org/hisp/dhis/user/sharing/Sharing.java", "diffHunk": "@@ -0,0 +1,148 @@\n+package org.hisp.dhis.user.sharing;\n+\n+import com.fasterxml.jackson.annotation.JsonIgnore;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlRootElement;\n+import lombok.AllArgsConstructor;\n+import lombok.Builder;\n+import lombok.Data;\n+import lombok.NoArgsConstructor;\n+import org.hisp.dhis.common.DxfNamespaces;\n+import org.hisp.dhis.user.User;\n+\n+import java.io.Serializable;\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.Set;\n+\n+@Builder\n+@Data\n+@AllArgsConstructor\n+@NoArgsConstructor\n+@JacksonXmlRootElement( localName = \"sharing\", namespace = DxfNamespaces.DXF_2_0 )\n+public class Sharing\n+    implements Serializable\n+{\n+    private static final long serialVersionUID = 6977793211734844477L;\n+\n+    public static final String DEFAULT = \"--------\";\n+\n+    @JsonProperty\n+    private String owner = null;\n+\n+    @JsonProperty(\"public\")\n+    private String publicAccess = DEFAULT;\n+\n+    @JsonProperty\n+    private boolean external = false;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba10fa5357236fb80525411b013c1b95ae8b0867"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTg0Mzg4NA==", "bodyText": "default is already null?", "url": "https://github.com/dhis2/dhis2-core/pull/5862#discussion_r539843884", "createdAt": "2020-12-10T04:52:18Z", "author": {"login": "mortenoh"}, "path": "dhis-2/dhis-api/src/main/java/org/hisp/dhis/user/sharing/Sharing.java", "diffHunk": "@@ -0,0 +1,148 @@\n+package org.hisp.dhis.user.sharing;\n+\n+import com.fasterxml.jackson.annotation.JsonIgnore;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlRootElement;\n+import lombok.AllArgsConstructor;\n+import lombok.Builder;\n+import lombok.Data;\n+import lombok.NoArgsConstructor;\n+import org.hisp.dhis.common.DxfNamespaces;\n+import org.hisp.dhis.user.User;\n+\n+import java.io.Serializable;\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.Set;\n+\n+@Builder\n+@Data\n+@AllArgsConstructor\n+@NoArgsConstructor\n+@JacksonXmlRootElement( localName = \"sharing\", namespace = DxfNamespaces.DXF_2_0 )\n+public class Sharing\n+    implements Serializable\n+{\n+    private static final long serialVersionUID = 6977793211734844477L;\n+\n+    public static final String DEFAULT = \"--------\";\n+\n+    @JsonProperty\n+    private String owner = null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba10fa5357236fb80525411b013c1b95ae8b0867"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTg0NDQ4OA==", "bodyText": "code style, { }\u00a0", "url": "https://github.com/dhis2/dhis2-core/pull/5862#discussion_r539844488", "createdAt": "2020-12-10T04:54:29Z", "author": {"login": "mortenoh"}, "path": "dhis-2/dhis-api/src/main/java/org/hisp/dhis/user/sharing/Sharing.java", "diffHunk": "@@ -0,0 +1,148 @@\n+package org.hisp.dhis.user.sharing;\n+\n+import com.fasterxml.jackson.annotation.JsonIgnore;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlRootElement;\n+import lombok.AllArgsConstructor;\n+import lombok.Builder;\n+import lombok.Data;\n+import lombok.NoArgsConstructor;\n+import org.hisp.dhis.common.DxfNamespaces;\n+import org.hisp.dhis.user.User;\n+\n+import java.io.Serializable;\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.Set;\n+\n+@Builder\n+@Data\n+@AllArgsConstructor\n+@NoArgsConstructor\n+@JacksonXmlRootElement( localName = \"sharing\", namespace = DxfNamespaces.DXF_2_0 )\n+public class Sharing\n+    implements Serializable\n+{\n+    private static final long serialVersionUID = 6977793211734844477L;\n+\n+    public static final String DEFAULT = \"--------\";\n+\n+    @JsonProperty\n+    private String owner = null;\n+\n+    @JsonProperty(\"public\")\n+    private String publicAccess = DEFAULT;\n+\n+    @JsonProperty\n+    private boolean external = false;\n+\n+    @JsonProperty\n+    private Map<String, UserAccess> users = new HashMap<>();\n+\n+    @JsonProperty\n+    private Map<String, UserGroupAccess> userGroups = new HashMap<>();\n+\n+    public Sharing copy()\n+    {\n+        return builder()\n+            .external( this.external )\n+            .publicAccess( this.publicAccess )\n+            .owner( this.owner )\n+            .users( new HashMap<>( users ) )\n+            .userGroups( new HashMap<>( userGroups ) ).build();\n+    }\n+\n+    public void setOwner( User user )\n+    {\n+        this.owner =  user != null ? user.getUid() : null;\n+    }\n+\n+    public void setOwner( String userId )\n+    {\n+        this.owner = userId;\n+    }\n+\n+    @JsonIgnore\n+    public User getUserOwner()\n+    {\n+        User user = new User();\n+        user.setUid( this.owner );\n+        return user;\n+    }\n+\n+    public void setUserAccesses( Set<UserAccess> userAccesses )\n+    {\n+        if ( this.users != null ) this.users.clear();\n+        else this.users = new HashMap<>();\n+\n+        userAccesses.forEach( ua -> this.addUserAccess( ua ) );\n+    }\n+\n+    public void setDtoUserAccesses( Set<org.hisp.dhis.user.UserAccess> userAccesses )\n+    {\n+        if ( this.users != null ) this.users.clear();\n+        else this.users = new HashMap<>();\n+\n+        if ( userAccesses != null && !userAccesses.isEmpty() )\n+        {\n+            userAccesses.forEach( ua ->  this.addUserAccess( new UserAccess( ua ) ) );\n+        }\n+    }\n+\n+    public void setDtoUserGroupAccesses( Set<org.hisp.dhis.user.UserGroupAccess> userGroupAccesses )\n+    {\n+        if ( this.userGroups != null ) this.userGroups.clear();\n+        else this.userGroups = new HashMap<>();\n+\n+        if ( userGroupAccesses != null && !userGroupAccesses.isEmpty() )\n+        {\n+            userGroupAccesses.forEach( uga ->  this.addUserGroupAccess( new UserGroupAccess( uga ) ) );\n+        }\n+    }\n+\n+    public void setUserGroupAccess( Set<UserGroupAccess> userGroupAccesses )\n+    {\n+        if ( this.userGroups != null ) this.userGroups.clear();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba10fa5357236fb80525411b013c1b95ae8b0867"}, "originalPosition": 105}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTg0NDc1NQ==", "bodyText": "should probably convert to lombok?", "url": "https://github.com/dhis2/dhis2-core/pull/5862#discussion_r539844755", "createdAt": "2020-12-10T04:55:13Z", "author": {"login": "mortenoh"}, "path": "dhis-2/dhis-api/src/main/java/org/hisp/dhis/user/sharing/UserAccess.java", "diffHunk": "@@ -0,0 +1,138 @@\n+package org.hisp.dhis.user.sharing;\n+\n+/*\n+ * Copyright (c) 2004-2020, University of Oslo\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ * Redistributions of source code must retain the above copyright notice, this\n+ * list of conditions and the following disclaimer.\n+ *\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following disclaimer in the documentation\n+ * and/or other materials provided with the distribution.\n+ * Neither the name of the HISP project nor the names of its contributors may\n+ * be used to endorse or promote products derived from this software without\n+ * specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n+ * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlProperty;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlRootElement;\n+import com.google.common.base.MoreObjects;\n+import org.hisp.dhis.common.DxfNamespaces;\n+import org.hisp.dhis.user.User;\n+\n+import java.io.Serializable;\n+import java.util.Objects;\n+\n+/**\n+ * @author Morten Olav Hansen <mortenoh@gmail.com>\n+ */\n+@JacksonXmlRootElement( localName = \"userAccess\", namespace = DxfNamespaces.DXF_2_0 )", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba10fa5357236fb80525411b013c1b95ae8b0867"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTg0NDg5NQ==", "bodyText": "should probably convert to lombok?", "url": "https://github.com/dhis2/dhis2-core/pull/5862#discussion_r539844895", "createdAt": "2020-12-10T04:55:38Z", "author": {"login": "mortenoh"}, "path": "dhis-2/dhis-api/src/main/java/org/hisp/dhis/user/sharing/UserGroupAccess.java", "diffHunk": "@@ -0,0 +1,145 @@\n+package org.hisp.dhis.user.sharing;\n+\n+/*\n+ * Copyright (c) 2004-2020, University of Oslo\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ * Redistributions of source code must retain the above copyright notice, this\n+ * list of conditions and the following disclaimer.\n+ *\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following disclaimer in the documentation\n+ * and/or other materials provided with the distribution.\n+ * Neither the name of the HISP project nor the names of its contributors may\n+ * be used to endorse or promote products derived from this software without\n+ * specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n+ * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlProperty;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlRootElement;\n+import com.google.common.base.MoreObjects;\n+import org.hisp.dhis.common.DxfNamespaces;\n+import org.hisp.dhis.user.UserGroup;\n+\n+import java.io.Serializable;\n+import java.util.Objects;\n+import java.util.Set;\n+\n+/**\n+ * @author Morten Olav Hansen <mortenoh@gmail.com>\n+ */\n+@JacksonXmlRootElement( localName = \"userGroupAccess\", namespace = DxfNamespaces.DXF_2_0 )\n+public class UserGroupAccess", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba10fa5357236fb80525411b013c1b95ae8b0867"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTg0NTAzNg==", "bodyText": "double *", "url": "https://github.com/dhis2/dhis2-core/pull/5862#discussion_r539845036", "createdAt": "2020-12-10T04:56:07Z", "author": {"login": "mortenoh"}, "path": "dhis-2/dhis-api/src/main/java/org/hisp/dhis/util/SharingUtils.java", "diffHunk": "@@ -0,0 +1,54 @@\n+/*\n+ *\n+ *  * Copyright (c) 2004-2020, University of Oslo", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba10fa5357236fb80525411b013c1b95ae8b0867"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTg0NTA4NA==", "bodyText": "package on top", "url": "https://github.com/dhis2/dhis2-core/pull/5862#discussion_r539845084", "createdAt": "2020-12-10T04:56:16Z", "author": {"login": "mortenoh"}, "path": "dhis-2/dhis-api/src/main/java/org/hisp/dhis/util/SharingUtils.java", "diffHunk": "@@ -0,0 +1,54 @@\n+/*\n+ *\n+ *  * Copyright (c) 2004-2020, University of Oslo\n+ *  * All rights reserved.\n+ *  *\n+ *  * Redistribution and use in source and binary forms, with or without\n+ *  * modification, are permitted provided that the following conditions are met:\n+ *  * Redistributions of source code must retain the above copyright notice, this\n+ *  * list of conditions and the following disclaimer.\n+ *  *\n+ *  * Redistributions in binary form must reproduce the above copyright notice,\n+ *  * this list of conditions and the following disclaimer in the documentation\n+ *  * and/or other materials provided with the distribution.\n+ *  * Neither the name of the HISP project nor the names of its contributors may\n+ *  * be used to endorse or promote products derived from this software without\n+ *  * specific prior written permission.\n+ *  *\n+ *  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ *  * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ *  * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ *  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ *  * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ *  * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ *  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n+ *  * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ *  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ *  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ *\n+ */\n+\n+package org.hisp.dhis.util;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba10fa5357236fb80525411b013c1b95ae8b0867"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTg0NzIzOA==", "bodyText": "should use resetUserAccesses?", "url": "https://github.com/dhis2/dhis2-core/pull/5862#discussion_r539847238", "createdAt": "2020-12-10T05:02:48Z", "author": {"login": "mortenoh"}, "path": "dhis-2/dhis-services/dhis-service-acl/src/main/java/org/hisp/dhis/security/acl/DefaultAclService.java", "diffHunk": "@@ -427,24 +430,26 @@ public boolean canManage( User user, IdentifiableObject object )\n         }\n \n         BaseIdentifiableObject baseIdentifiableObject = (BaseIdentifiableObject) object;\n-        baseIdentifiableObject.setPublicAccess( AccessStringHelper.DEFAULT );\n-        baseIdentifiableObject.setExternalAccess( false );\n+//        baseIdentifiableObject.setPublicAccess( AccessStringHelper.DEFAULT );\n+        baseIdentifiableObject.getSharing().setPublicAccess( AccessStringHelper.DEFAULT );\n+//        baseIdentifiableObject.setExternalAccess( false );\n+        baseIdentifiableObject.getSharing().setExternal( false );\n \n-        if ( object.getUser() == null )\n+        if ( object.getSharing().getOwner() == null )\n         {\n-            baseIdentifiableObject.setUser( user );\n+            baseIdentifiableObject.getSharing().setOwner( user );\n         }\n \n         if ( canMakePublic( user, object.getClass() ) )\n         {\n             if ( defaultPublic( object.getClass() ) )\n             {\n-                baseIdentifiableObject.setPublicAccess( AccessStringHelper.READ_WRITE );\n+                baseIdentifiableObject.getSharing().setPublicAccess( AccessStringHelper.READ_WRITE );\n             }\n         }\n \n-        object.getUserAccesses().clear();\n-        object.getUserGroupAccesses().clear();\n+        object.getSharing().getUsers().clear();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba10fa5357236fb80525411b013c1b95ae8b0867"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTg0NzI2NA==", "bodyText": "Should use resetUserGroupAccesses?", "url": "https://github.com/dhis2/dhis2-core/pull/5862#discussion_r539847264", "createdAt": "2020-12-10T05:02:57Z", "author": {"login": "mortenoh"}, "path": "dhis-2/dhis-services/dhis-service-acl/src/main/java/org/hisp/dhis/security/acl/DefaultAclService.java", "diffHunk": "@@ -427,24 +430,26 @@ public boolean canManage( User user, IdentifiableObject object )\n         }\n \n         BaseIdentifiableObject baseIdentifiableObject = (BaseIdentifiableObject) object;\n-        baseIdentifiableObject.setPublicAccess( AccessStringHelper.DEFAULT );\n-        baseIdentifiableObject.setExternalAccess( false );\n+//        baseIdentifiableObject.setPublicAccess( AccessStringHelper.DEFAULT );\n+        baseIdentifiableObject.getSharing().setPublicAccess( AccessStringHelper.DEFAULT );\n+//        baseIdentifiableObject.setExternalAccess( false );\n+        baseIdentifiableObject.getSharing().setExternal( false );\n \n-        if ( object.getUser() == null )\n+        if ( object.getSharing().getOwner() == null )\n         {\n-            baseIdentifiableObject.setUser( user );\n+            baseIdentifiableObject.getSharing().setOwner( user );\n         }\n \n         if ( canMakePublic( user, object.getClass() ) )\n         {\n             if ( defaultPublic( object.getClass() ) )\n             {\n-                baseIdentifiableObject.setPublicAccess( AccessStringHelper.READ_WRITE );\n+                baseIdentifiableObject.getSharing().setPublicAccess( AccessStringHelper.READ_WRITE );\n             }\n         }\n \n-        object.getUserAccesses().clear();\n-        object.getUserGroupAccesses().clear();\n+        object.getSharing().getUsers().clear();\n+        object.getSharing().getUserGroups().clear();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba10fa5357236fb80525411b013c1b95ae8b0867"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTg0NzY2NA==", "bodyText": "Would it make sense to move this validation logic to Sharing? sharing.validate() could return a list of ErrorReport", "url": "https://github.com/dhis2/dhis2-core/pull/5862#discussion_r539847664", "createdAt": "2020-12-10T05:04:14Z", "author": {"login": "mortenoh"}, "path": "dhis-2/dhis-services/dhis-service-acl/src/main/java/org/hisp/dhis/security/acl/DefaultAclService.java", "diffHunk": "@@ -474,7 +478,7 @@ public boolean canManage( User user, IdentifiableObject object )\n             return errorReports;\n         }\n \n-        if ( !AccessStringHelper.isValid( object.getPublicAccess() ) )\n+        if ( !AccessStringHelper.isValid( object.getSharing().getPublicAccess() ) )", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba10fa5357236fb80525411b013c1b95ae8b0867"}, "originalPosition": 83}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTg1MzE0Mw==", "bodyText": "double *", "url": "https://github.com/dhis2/dhis2-core/pull/5862#discussion_r539853143", "createdAt": "2020-12-10T05:21:26Z", "author": {"login": "mortenoh"}, "path": "dhis-2/dhis-services/dhis-service-core/src/main/java/org/hisp/dhis/sharing/DefaultSharingService.java", "diffHunk": "@@ -0,0 +1,280 @@\n+package org.hisp.dhis.sharing;\n+\n+/*\n+ *\n+ *  * Copyright (c) 2004-2020, University of Oslo", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba10fa5357236fb80525411b013c1b95ae8b0867"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTg1ODgyMg==", "bodyText": "license", "url": "https://github.com/dhis2/dhis2-core/pull/5862#discussion_r539858822", "createdAt": "2020-12-10T05:38:00Z", "author": {"login": "mortenoh"}, "path": "dhis-2/dhis-services/dhis-service-core/src/main/java/org/hisp/dhis/user/UserGroupPopulator.java", "diffHunk": "@@ -0,0 +1,51 @@\n+package org.hisp.dhis.user;\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba10fa5357236fb80525411b013c1b95ae8b0867"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTg1OTAzMQ==", "bodyText": "Is this class needed? seems the only function is commented out", "url": "https://github.com/dhis2/dhis2-core/pull/5862#discussion_r539859031", "createdAt": "2020-12-10T05:38:42Z", "author": {"login": "mortenoh"}, "path": "dhis-2/dhis-services/dhis-service-core/src/main/java/org/hisp/dhis/user/UserGroupPopulator.java", "diffHunk": "@@ -0,0 +1,51 @@\n+package org.hisp.dhis.user;\n+\n+import lombok.extern.slf4j.Slf4j;\n+import org.hisp.dhis.common.IdentifiableObjectStore;\n+import org.hisp.dhis.security.acl.AclService;\n+import org.hisp.dhis.system.startup.TransactionContextStartupRoutine;\n+import org.springframework.stereotype.Component;\n+\n+import java.util.List;\n+\n+import static com.google.common.base.Preconditions.checkNotNull;\n+\n+@Slf4j\n+public class UserGroupPopulator", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba10fa5357236fb80525411b013c1b95ae8b0867"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTg1OTEwNQ==", "bodyText": "double * and extra newline in top", "url": "https://github.com/dhis2/dhis2-core/pull/5862#discussion_r539859105", "createdAt": "2020-12-10T05:38:58Z", "author": {"login": "mortenoh"}, "path": "dhis-2/dhis-services/dhis-service-core/src/main/java/org/hisp/dhis/user/hibernate/HibernateUserGroupStore.java", "diffHunk": "@@ -0,0 +1,70 @@\n+package org.hisp.dhis.user.hibernate;\n+\n+/*\n+ *\n+ *  * Copyright (c) 2004-2020, University of Oslo", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba10fa5357236fb80525411b013c1b95ae8b0867"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "68f7d6a6a351cc19a5180697666e2bec7b60c4c5", "author": {"user": {"login": "vietnguyen", "name": "Viet Nguyen"}}, "url": "https://github.com/dhis2/dhis2-core/commit/68f7d6a6a351cc19a5180697666e2bec7b60c4c5", "committedDate": "2020-12-11T05:18:12Z", "message": "fix: api test errors"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "79baa22b2f2e8a064dabaf049b277134796af484", "author": {"user": {"login": "vietnguyen", "name": "Viet Nguyen"}}, "url": "https://github.com/dhis2/dhis2-core/commit/79baa22b2f2e8a064dabaf049b277134796af484", "committedDate": "2020-12-11T05:55:58Z", "message": "fix: unit test errors in AclServiceTest"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7f61c9fcc1ac12e78cd26b6f9528ac2e96fd571d", "author": {"user": {"login": "vietnguyen", "name": "Viet Nguyen"}}, "url": "https://github.com/dhis2/dhis2-core/commit/7f61c9fcc1ac12e78cd26b6f9528ac2e96fd571d", "committedDate": "2020-12-11T06:07:06Z", "message": "fix: unit test error in TrackerAccessManagerTest"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5570ce87f3e245893ad7b6a0d5f0ca66de3c7675", "author": {"user": {"login": "vietnguyen", "name": "Viet Nguyen"}}, "url": "https://github.com/dhis2/dhis2-core/commit/5570ce87f3e245893ad7b6a0d5f0ca66de3c7675", "committedDate": "2020-12-11T08:40:38Z", "message": "fix: support preheat userGroup UID when mode = code"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "deee54223be676382fc926e16df0738a06b955d2", "author": {"user": {"login": "vietnguyen", "name": "Viet Nguyen"}}, "url": "https://github.com/dhis2/dhis2-core/commit/deee54223be676382fc926e16df0738a06b955d2", "committedDate": "2020-12-11T09:23:54Z", "message": "fix: unit test error TrackerAccessManagerTest"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8526688be2b701b637ac3100880f1629bb6d0382", "author": {"user": {"login": "vietnguyen", "name": "Viet Nguyen"}}, "url": "https://github.com/dhis2/dhis2-core/commit/8526688be2b701b637ac3100880f1629bb6d0382", "committedDate": "2020-12-11T10:07:37Z", "message": "fix: jsonb query to compare null public access"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "62c75dbd61e7917cb1d70cddb942124965dbe3e4", "author": {"user": {"login": "vietnguyen", "name": "Viet Nguyen"}}, "url": "https://github.com/dhis2/dhis2-core/commit/62c75dbd61e7917cb1d70cddb942124965dbe3e4", "committedDate": "2020-12-11T10:08:31Z", "message": "revert debug code"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7f561f9e12750d1161dac868347b824472918379", "author": {"user": {"login": "vietnguyen", "name": "Viet Nguyen"}}, "url": "https://github.com/dhis2/dhis2-core/commit/7f561f9e12750d1161dac868347b824472918379", "committedDate": "2020-12-11T10:24:32Z", "message": "fix: unit test error in EnrollmentSecurityTest"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "71fc5d4effcc9c31ab8ea63ff6f89518d484495d", "author": {"user": {"login": "vietnguyen", "name": "Viet Nguyen"}}, "url": "https://github.com/dhis2/dhis2-core/commit/71fc5d4effcc9c31ab8ea63ff6f89518d484495d", "committedDate": "2020-12-11T12:34:25Z", "message": "fix: sharing query error in DefaultAclStore"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6af890ff8799337c94faa00ac8491a76db0f83e7", "author": {"user": {"login": "vietnguyen", "name": "Viet Nguyen"}}, "url": "https://github.com/dhis2/dhis2-core/commit/6af890ff8799337c94faa00ac8491a76db0f83e7", "committedDate": "2020-12-11T13:52:00Z", "message": "clean up codes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1fffe1a25d2e4463d4ad88e92c4a105c400c698c", "author": {"user": {"login": "vietnguyen", "name": "Viet Nguyen"}}, "url": "https://github.com/dhis2/dhis2-core/commit/1fffe1a25d2e4463d4ad88e92c4a105c400c698c", "committedDate": "2020-12-11T14:46:12Z", "message": "fix: add nullif function for sharing migration script"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "231100f125a62c84bd717ad678fff977558baf53", "author": {"user": {"login": "vietnguyen", "name": "Viet Nguyen"}}, "url": "https://github.com/dhis2/dhis2-core/commit/231100f125a62c84bd717ad678fff977558baf53", "committedDate": "2020-12-11T14:58:42Z", "message": "fix: unit test error DataApprovalServiceTest"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "01f0238e186c453dac7a4ddae3ac3144d58d9765", "author": {"user": {"login": "vietnguyen", "name": "Viet Nguyen"}}, "url": "https://github.com/dhis2/dhis2-core/commit/01f0238e186c453dac7a4ddae3ac3144d58d9765", "committedDate": "2020-12-12T05:14:46Z", "message": "clean up codes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2e92e4681d0d848694a6eaa378760c02d63b2b8c", "author": {"user": {"login": "vietnguyen", "name": "Viet Nguyen"}}, "url": "https://github.com/dhis2/dhis2-core/commit/2e92e4681d0d848694a6eaa378760c02d63b2b8c", "committedDate": "2020-12-14T09:19:03Z", "message": "fix: add ACL check for getListObject in AbstractCrudController"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b3f1dd2ca82ea1421f9f6b800bab09ae4b1913f5", "author": {"user": {"login": "vietnguyen", "name": "Viet Nguyen"}}, "url": "https://github.com/dhis2/dhis2-core/commit/b3f1dd2ca82ea1421f9f6b800bab09ae4b1913f5", "committedDate": "2020-12-14T09:41:45Z", "message": "Merge remote-tracking branch 'origin/master' into DHIS2-5814"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "87d86c0ff70bf6de761d70bed8722b5e0fd4e82f", "author": {"user": {"login": "vietnguyen", "name": "Viet Nguyen"}}, "url": "https://github.com/dhis2/dhis2-core/commit/87d86c0ff70bf6de761d70bed8722b5e0fd4e82f", "committedDate": "2020-12-14T16:01:20Z", "message": "fix: unit test error TrackerTest"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "01ff73727831c7b2c39668d4cc7fcab18712482a", "author": {"user": {"login": "vietnguyen", "name": "Viet Nguyen"}}, "url": "https://github.com/dhis2/dhis2-core/commit/01ff73727831c7b2c39668d4cc7fcab18712482a", "committedDate": "2020-12-14T19:48:51Z", "message": "fix: add unit test for JpaQueryEngine"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "473a6f242d98abec33b34ad40fe20a837237e90c", "author": {"user": {"login": "vietnguyen", "name": "Viet Nguyen"}}, "url": "https://github.com/dhis2/dhis2-core/commit/473a6f242d98abec33b34ad40fe20a837237e90c", "committedDate": "2020-12-15T02:50:48Z", "message": "fix: unit test error"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "09279a5d1c9cbc8a5ed5e1fc0874c16eb5608997", "author": {"user": {"login": "vietnguyen", "name": "Viet Nguyen"}}, "url": "https://github.com/dhis2/dhis2-core/commit/09279a5d1c9cbc8a5ed5e1fc0874c16eb5608997", "committedDate": "2020-12-15T05:18:43Z", "message": "fix: tracker unit test error"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "74bb95cb70cecf2dc5f37cc25bdab33d66acffa2", "author": {"user": {"login": "vietnguyen", "name": "Viet Nguyen"}}, "url": "https://github.com/dhis2/dhis2-core/commit/74bb95cb70cecf2dc5f37cc25bdab33d66acffa2", "committedDate": "2020-12-15T05:38:13Z", "message": "fix: tracker unit test error"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4d2d31a0deae2aa3842dd305db690b24bd26a18c", "author": {"user": {"login": "vietnguyen", "name": "Viet Nguyen"}}, "url": "https://github.com/dhis2/dhis2-core/commit/4d2d31a0deae2aa3842dd305db690b24bd26a18c", "committedDate": "2020-12-15T13:23:15Z", "message": "fix: unit test error  EnrollmentSecurityImportValidationTest"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "aaaac142ace5cca9d713c6a1711f16bb197790d3", "author": {"user": {"login": "vietnguyen", "name": "Viet Nguyen"}}, "url": "https://github.com/dhis2/dhis2-core/commit/aaaac142ace5cca9d713c6a1711f16bb197790d3", "committedDate": "2020-12-15T13:27:37Z", "message": "Merge remote-tracking branch 'origin/master' into DHIS2-5814"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8d96d9bbabea09ddbe33b367a53acf4dbb545f6a", "author": {"user": {"login": "vietnguyen", "name": "Viet Nguyen"}}, "url": "https://github.com/dhis2/dhis2-core/commit/8d96d9bbabea09ddbe33b367a53acf4dbb545f6a", "committedDate": "2020-12-15T14:33:56Z", "message": "fix: merge conflicts"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "08db59951950704d6cbc4c1014cfa91ec1083239", "author": {"user": {"login": "vietnguyen", "name": "Viet Nguyen"}}, "url": "https://github.com/dhis2/dhis2-core/commit/08db59951950704d6cbc4c1014cfa91ec1083239", "committedDate": "2020-12-15T14:47:31Z", "message": "Merge remote-tracking branch 'origin/master' into DHIS2-5814"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "820e05983cfa42d8df52950aae615acf3d131f25", "author": {"user": {"login": "vietnguyen", "name": "Viet Nguyen"}}, "url": "https://github.com/dhis2/dhis2-core/commit/820e05983cfa42d8df52950aae615acf3d131f25", "committedDate": "2020-12-16T05:36:16Z", "message": "fix: merge conflicts"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7f52dc9cc339e912a007a75520b24e77880029b6", "author": {"user": {"login": "vietnguyen", "name": "Viet Nguyen"}}, "url": "https://github.com/dhis2/dhis2-core/commit/7f52dc9cc339e912a007a75520b24e77880029b6", "committedDate": "2020-12-16T05:41:26Z", "message": "Merge remote-tracking branch 'origin/master' into DHIS2-5814"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "07ee9d1e1f90583988cb0b9e01d5d6e8b0640cd3", "author": {"user": {"login": "vietnguyen", "name": "Viet Nguyen"}}, "url": "https://github.com/dhis2/dhis2-core/commit/07ee9d1e1f90583988cb0b9e01d5d6e8b0640cd3", "committedDate": "2020-12-16T10:33:55Z", "message": "fix: tracker unit test errors"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3913c37f48f3fb193a436ab621619b320dc32981", "author": {"user": {"login": "vietnguyen", "name": "Viet Nguyen"}}, "url": "https://github.com/dhis2/dhis2-core/commit/3913c37f48f3fb193a436ab621619b320dc32981", "committedDate": "2020-12-16T11:17:17Z", "message": "fix: tracker test errors"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f459f123278b968e24cf30947e1466bafaccda97", "author": {"user": {"login": "vietnguyen", "name": "Viet Nguyen"}}, "url": "https://github.com/dhis2/dhis2-core/commit/f459f123278b968e24cf30947e1466bafaccda97", "committedDate": "2020-12-17T06:47:46Z", "message": "Merge remote-tracking branch 'origin/master' into DHIS2-5814"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "57062891dc8a22bdab3b8920ee57ae485a65ddbd", "author": {"user": {"login": "vietnguyen", "name": "Viet Nguyen"}}, "url": "https://github.com/dhis2/dhis2-core/commit/57062891dc8a22bdab3b8920ee57ae485a65ddbd", "committedDate": "2020-12-17T08:44:10Z", "message": "Merge remote-tracking branch 'origin/master' into DHIS2-5814"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "24cd20ec504ce0a7f86d2acbd33df5a8bd53ddf4", "author": {"user": {"login": "vietnguyen", "name": "Viet Nguyen"}}, "url": "https://github.com/dhis2/dhis2-core/commit/24cd20ec504ce0a7f86d2acbd33df5a8bd53ddf4", "committedDate": "2020-12-17T10:14:43Z", "message": "fix: ProgramStageInstance.assignedUser constraint error"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU2MTU3NzE0", "url": "https://github.com/dhis2/dhis2-core/pull/5862#pullrequestreview-556157714", "createdAt": "2020-12-21T06:38:04Z", "commit": {"oid": "24cd20ec504ce0a7f86d2acbd33df5a8bd53ddf4"}, "state": "COMMENTED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMVQwNjozODowNFrOIJNv8w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMVQwNjo0OToxMVrOIJN8ZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjUzMzM2Mw==", "bodyText": "newline", "url": "https://github.com/dhis2/dhis2-core/pull/5862#discussion_r546533363", "createdAt": "2020-12-21T06:38:04Z", "author": {"login": "mortenoh"}, "path": "dhis-2/dhis-api/src/main/java/org/hisp/dhis/common/BaseIdentifiableObject.java", "diffHunk": "@@ -449,52 +463,58 @@ public void setUser( User user )\n     @PropertyRange( min = 8, max = 8 )\n     public String getPublicAccess()\n     {\n-        return publicAccess;\n+        return getSharing().getPublicAccess();\n     }\n \n     public void setPublicAccess( String publicAccess )\n     {\n-        this.publicAccess = publicAccess;\n+        getSharing().setPublicAccess( publicAccess );\n     }\n \n     @Override\n     @JsonProperty\n     @JacksonXmlProperty( namespace = DxfNamespaces.DXF_2_0 )\n     public boolean getExternalAccess()\n     {\n-        return externalAccess;\n+        if ( sharing == null )\n+        {\n+            sharing = new Sharing();\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "24cd20ec504ce0a7f86d2acbd33df5a8bd53ddf4"}, "originalPosition": 90}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjUzMzY4OQ==", "bodyText": "javadocs", "url": "https://github.com/dhis2/dhis2-core/pull/5862#discussion_r546533689", "createdAt": "2020-12-21T06:39:14Z", "author": {"login": "mortenoh"}, "path": "dhis-2/dhis-api/src/main/java/org/hisp/dhis/sharing/SharingService.java", "diffHunk": "@@ -0,0 +1,41 @@\n+package org.hisp.dhis.sharing;\n+\n+/*\n+ * Copyright (c) 2004-2020, University of Oslo\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ * Redistributions of source code must retain the above copyright notice, this\n+ * list of conditions and the following disclaimer.\n+ *\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following disclaimer in the documentation\n+ * and/or other materials provided with the distribution.\n+ * Neither the name of the HISP project nor the names of its contributors may\n+ * be used to endorse or promote products derived from this software without\n+ * specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n+ * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+\n+import org.hisp.dhis.common.IdentifiableObject;\n+import org.hisp.dhis.feedback.ObjectReport;\n+import org.hisp.dhis.user.sharing.Sharing;\n+\n+/**\n+ * Contains functions for managing {@link Sharing}\n+ */\n+public interface SharingService\n+{\n+    <T extends IdentifiableObject> ObjectReport saveSharing( Class<T> entityClass, T entity, Sharing sharing );", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "24cd20ec504ce0a7f86d2acbd33df5a8bd53ddf4"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjUzNDA0MA==", "bodyText": "code style", "url": "https://github.com/dhis2/dhis2-core/pull/5862#discussion_r546534040", "createdAt": "2020-12-21T06:40:32Z", "author": {"login": "mortenoh"}, "path": "dhis-2/dhis-api/src/main/java/org/hisp/dhis/user/sharing/Sharing.java", "diffHunk": "@@ -0,0 +1,195 @@\n+package org.hisp.dhis.user.sharing;\n+\n+/*\n+ * Copyright (c) 2004-2020, University of Oslo\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ * Redistributions of source code must retain the above copyright notice, this\n+ * list of conditions and the following disclaimer.\n+ *\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following disclaimer in the documentation\n+ * and/or other materials provided with the distribution.\n+ * Neither the name of the HISP project nor the names of its contributors may\n+ * be used to endorse or promote products derived from this software without\n+ * specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n+ * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+\n+import com.fasterxml.jackson.annotation.JsonIgnore;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlRootElement;\n+import lombok.AllArgsConstructor;\n+import lombok.Builder;\n+import lombok.Data;\n+import lombok.NoArgsConstructor;\n+import org.apache.commons.collections.MapUtils;\n+import org.hisp.dhis.common.DxfNamespaces;\n+import org.hisp.dhis.common.EmbeddedObject;\n+import org.hisp.dhis.user.User;\n+\n+import java.io.Serializable;\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.Set;\n+\n+@Builder\n+@Data\n+@AllArgsConstructor\n+@NoArgsConstructor\n+@JacksonXmlRootElement( localName = \"sharing\", namespace = DxfNamespaces.DXF_2_0 )\n+public class Sharing\n+    implements Serializable, EmbeddedObject\n+{\n+    private static final long serialVersionUID = 6977793211734844477L;\n+\n+    /**\n+     * Uid of the User who owns the object\n+     */\n+    @JsonProperty\n+    private String owner;\n+\n+    @JsonProperty(\"public\")\n+    private String publicAccess = null;\n+\n+    @JsonProperty\n+    private boolean external;\n+\n+    /**\n+     * Map of UserAccess. Key is User uid\n+     */\n+    @JsonProperty\n+    private Map<String, UserAccess> users = new HashMap<>();\n+\n+    /**\n+     * Map of UserGroupAccess. Key is UserGroup uid\n+     */\n+    @JsonProperty\n+    private Map<String, UserGroupAccess> userGroups = new HashMap<>();\n+\n+    public void setOwner( User user )\n+    {\n+        this.owner =  user != null ? user.getUid() : null;\n+    }\n+\n+    public void setOwner( String userId )\n+    {\n+        this.owner = userId;\n+    }\n+\n+    @JsonIgnore\n+    public User getUserOwner()\n+    {\n+        User user = new User();\n+        user.setUid( this.owner );\n+        return user;\n+    }\n+\n+    public void setUserAccesses( Set<UserAccess> userAccesses )\n+    {\n+        if ( this.users != null ) this.users.clear();\n+        else this.users = new HashMap<>();\n+\n+        userAccesses.forEach( ua -> this.addUserAccess( ua ) );\n+    }\n+\n+    public void setDtoUserAccesses( Set<org.hisp.dhis.user.UserAccess> userAccesses )\n+    {\n+        if ( this.users != null ) this.users.clear();\n+        else this.users = new HashMap<>();\n+\n+        if ( userAccesses != null && !userAccesses.isEmpty() )\n+        {\n+            userAccesses.forEach( ua ->  this.addUserAccess( new UserAccess( ua ) ) );\n+        }\n+    }\n+\n+    public void setDtoUserGroupAccesses( Set<org.hisp.dhis.user.UserGroupAccess> userGroupAccesses )\n+    {\n+        if ( this.userGroups != null )\n+        {\n+            this.userGroups.clear();\n+        }\n+\n+        else this.userGroups = new HashMap<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "24cd20ec504ce0a7f86d2acbd33df5a8bd53ddf4"}, "originalPosition": 126}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjUzNDA3Mw==", "bodyText": "codestyle on both lines, {}", "url": "https://github.com/dhis2/dhis2-core/pull/5862#discussion_r546534073", "createdAt": "2020-12-21T06:40:42Z", "author": {"login": "mortenoh"}, "path": "dhis-2/dhis-api/src/main/java/org/hisp/dhis/user/sharing/Sharing.java", "diffHunk": "@@ -0,0 +1,195 @@\n+package org.hisp.dhis.user.sharing;\n+\n+/*\n+ * Copyright (c) 2004-2020, University of Oslo\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ * Redistributions of source code must retain the above copyright notice, this\n+ * list of conditions and the following disclaimer.\n+ *\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following disclaimer in the documentation\n+ * and/or other materials provided with the distribution.\n+ * Neither the name of the HISP project nor the names of its contributors may\n+ * be used to endorse or promote products derived from this software without\n+ * specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n+ * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+\n+import com.fasterxml.jackson.annotation.JsonIgnore;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlRootElement;\n+import lombok.AllArgsConstructor;\n+import lombok.Builder;\n+import lombok.Data;\n+import lombok.NoArgsConstructor;\n+import org.apache.commons.collections.MapUtils;\n+import org.hisp.dhis.common.DxfNamespaces;\n+import org.hisp.dhis.common.EmbeddedObject;\n+import org.hisp.dhis.user.User;\n+\n+import java.io.Serializable;\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.Set;\n+\n+@Builder\n+@Data\n+@AllArgsConstructor\n+@NoArgsConstructor\n+@JacksonXmlRootElement( localName = \"sharing\", namespace = DxfNamespaces.DXF_2_0 )\n+public class Sharing\n+    implements Serializable, EmbeddedObject\n+{\n+    private static final long serialVersionUID = 6977793211734844477L;\n+\n+    /**\n+     * Uid of the User who owns the object\n+     */\n+    @JsonProperty\n+    private String owner;\n+\n+    @JsonProperty(\"public\")\n+    private String publicAccess = null;\n+\n+    @JsonProperty\n+    private boolean external;\n+\n+    /**\n+     * Map of UserAccess. Key is User uid\n+     */\n+    @JsonProperty\n+    private Map<String, UserAccess> users = new HashMap<>();\n+\n+    /**\n+     * Map of UserGroupAccess. Key is UserGroup uid\n+     */\n+    @JsonProperty\n+    private Map<String, UserGroupAccess> userGroups = new HashMap<>();\n+\n+    public void setOwner( User user )\n+    {\n+        this.owner =  user != null ? user.getUid() : null;\n+    }\n+\n+    public void setOwner( String userId )\n+    {\n+        this.owner = userId;\n+    }\n+\n+    @JsonIgnore\n+    public User getUserOwner()\n+    {\n+        User user = new User();\n+        user.setUid( this.owner );\n+        return user;\n+    }\n+\n+    public void setUserAccesses( Set<UserAccess> userAccesses )\n+    {\n+        if ( this.users != null ) this.users.clear();\n+        else this.users = new HashMap<>();\n+\n+        userAccesses.forEach( ua -> this.addUserAccess( ua ) );\n+    }\n+\n+    public void setDtoUserAccesses( Set<org.hisp.dhis.user.UserAccess> userAccesses )\n+    {\n+        if ( this.users != null ) this.users.clear();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "24cd20ec504ce0a7f86d2acbd33df5a8bd53ddf4"}, "originalPosition": 110}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjUzNDMyMA==", "bodyText": "author", "url": "https://github.com/dhis2/dhis2-core/pull/5862#discussion_r546534320", "createdAt": "2020-12-21T06:41:39Z", "author": {"login": "mortenoh"}, "path": "dhis-2/dhis-api/src/main/java/org/hisp/dhis/util/SharingUtils.java", "diffHunk": "@@ -0,0 +1,64 @@\n+package org.hisp.dhis.util;\n+\n+/*\n+ * Copyright (c) 2004-2020, University of Oslo\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ * Redistributions of source code must retain the above copyright notice, this\n+ * list of conditions and the following disclaimer.\n+ *\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following disclaimer in the documentation\n+ * and/or other materials provided with the distribution.\n+ * Neither the name of the HISP project nor the names of its contributors may\n+ * be used to endorse or promote products derived from this software without\n+ * specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n+ * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+\n+import org.apache.commons.collections.MapUtils;\n+import org.hisp.dhis.common.IdentifiableObject;\n+import org.hisp.dhis.user.UserGroupAccess;\n+import org.hisp.dhis.user.sharing.Sharing;\n+\n+import java.util.HashSet;\n+import java.util.Set;\n+import java.util.stream.Collectors;\n+\n+public class SharingUtils", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "24cd20ec504ce0a7f86d2acbd33df5a8bd53ddf4"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjUzNDQzNw==", "bodyText": "newline", "url": "https://github.com/dhis2/dhis2-core/pull/5862#discussion_r546534437", "createdAt": "2020-12-21T06:42:03Z", "author": {"login": "mortenoh"}, "path": "dhis-2/dhis-api/src/main/java/org/hisp/dhis/util/SharingUtils.java", "diffHunk": "@@ -0,0 +1,64 @@\n+package org.hisp.dhis.util;\n+\n+/*\n+ * Copyright (c) 2004-2020, University of Oslo\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ * Redistributions of source code must retain the above copyright notice, this\n+ * list of conditions and the following disclaimer.\n+ *\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following disclaimer in the documentation\n+ * and/or other materials provided with the distribution.\n+ * Neither the name of the HISP project nor the names of its contributors may\n+ * be used to endorse or promote products derived from this software without\n+ * specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n+ * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+\n+import org.apache.commons.collections.MapUtils;\n+import org.hisp.dhis.common.IdentifiableObject;\n+import org.hisp.dhis.user.UserGroupAccess;\n+import org.hisp.dhis.user.sharing.Sharing;\n+\n+import java.util.HashSet;\n+import java.util.Set;\n+import java.util.stream.Collectors;\n+\n+public class SharingUtils\n+{\n+    public static final Set<UserGroupAccess> getDtoUserGroupAccesses( Sharing sharing )\n+    {\n+        return !MapUtils.isEmpty( sharing.getUserGroups() ) ? sharing.getUserGroups().values()\n+            .stream().map( uag -> uag.toDtoObject() ).collect( Collectors.toSet() ) : new HashSet<>();\n+    }\n+\n+    public static final  Set<org.hisp.dhis.user.UserAccess> getDtoUserAccess( Sharing sharing )\n+    {\n+        return !MapUtils.isEmpty( sharing.getUsers() ) ? sharing.getUsers().values()\n+            .stream().map( ua -> ua.toDtoObject() ).collect( Collectors.toSet() ) : new HashSet<>();\n+    }\n+\n+    public static final Sharing generateSharingFromIdentifiableObject( IdentifiableObject object )\n+    {\n+        Sharing sharing = new Sharing();\n+        sharing.setOwner( object.getUser() );\n+        sharing.setExternal( object.getExternalAccess() );\n+        sharing.setPublicAccess( object.getPublicAccess() );\n+        sharing.setDtoUserGroupAccesses( object.getUserGroupAccesses() );\n+        sharing.setDtoUserAccesses( object.getUserAccesses() );", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "24cd20ec504ce0a7f86d2acbd33df5a8bd53ddf4"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjUzNjU0OA==", "bodyText": "why are we returning null here?", "url": "https://github.com/dhis2/dhis2-core/pull/5862#discussion_r546536548", "createdAt": "2020-12-21T06:49:11Z", "author": {"login": "mortenoh"}, "path": "dhis-2/dhis-services/dhis-service-core/src/main/java/org/hisp/dhis/common/hibernate/HibernateIdentifiableObjectStore.java", "diffHunk": "@@ -995,182 +944,38 @@ public Date getLastUpdated()\n         return getList( builder, parameters );\n     }\n \n-    //----------------------------------------------------------------------------------------------------------------\n-    // Supportive methods\n-    //----------------------------------------------------------------------------------------------------------------\n-\n-    /**\n-     * Creates a criteria with sharing restrictions relative to the given\n-     * user and access string.\n-     */\n-    @Override\n-    public final Criteria getSharingCriteria()\n-    {\n-        return getExecutableCriteria( getSharingDetachedCriteria( currentUserService.getCurrentUserInfo(), AclService.LIKE_READ_METADATA ) );\n-    }\n-\n-    /**\n-     * Creates a detached criteria with data sharing restrictions relative to the\n-     * given user and access string.\n-     *\n-     * @param user the user.\n-     * @param access the access string.\n-     * @return a DetachedCriteria.\n-     */\n-    private DetachedCriteria getDataSharingDetachedCriteria( UserInfo user, String access )\n-    {\n-        DetachedCriteria criteria = DetachedCriteria.forClass( getClazz(), \"c\" );\n-\n-        if ( user == null || !dataSharingEnabled( user ) )\n-        {\n-            return criteria;\n-        }\n-\n-        Assert.notNull( user, \"User argument can't be null.\" );\n-\n-        Disjunction disjunction = Restrictions.disjunction();\n-\n-        disjunction.add( Restrictions.like( \"c.publicAccess\", access ) );\n-        disjunction.add( Restrictions.isNull( \"c.publicAccess\" ) );\n-\n-        DetachedCriteria userGroupDetachedCriteria = DetachedCriteria.forClass( getClazz(), \"ugdc\" );\n-        userGroupDetachedCriteria.createCriteria( \"ugdc.userGroupAccesses\", \"uga\" );\n-        userGroupDetachedCriteria.createCriteria( \"uga.userGroup\", \"ug\" );\n-        userGroupDetachedCriteria.createCriteria( \"ug.members\", \"ugm\" );\n-\n-        userGroupDetachedCriteria.add( Restrictions.eqProperty( \"ugdc.id\", \"c.id\" ) );\n-        userGroupDetachedCriteria.add( Restrictions.eq( \"ugm.id\", user.getId() ) );\n-        userGroupDetachedCriteria.add( Restrictions.like( \"uga.access\", access ) );\n-\n-        userGroupDetachedCriteria.setProjection( Property.forName( \"uga.id\" ) );\n-\n-        disjunction.add( Subqueries.exists( userGroupDetachedCriteria ) );\n-\n-        DetachedCriteria userDetachedCriteria = DetachedCriteria.forClass( getClazz(), \"udc\" );\n-        userDetachedCriteria.createCriteria( \"udc.userAccesses\", \"ua\" );\n-        userDetachedCriteria.createCriteria( \"ua.user\", \"u\" );\n-\n-        userDetachedCriteria.add( Restrictions.eqProperty( \"udc.id\", \"c.id\" ) );\n-        userDetachedCriteria.add( Restrictions.eq( \"u.id\", user.getId() ) );\n-        userDetachedCriteria.add( Restrictions.like( \"ua.access\", access ) );\n-\n-        userDetachedCriteria.setProjection( Property.forName( \"ua.id\" ) );\n-\n-        disjunction.add( Subqueries.exists( userDetachedCriteria ) );\n-\n-        criteria.add( disjunction );\n-\n-        return criteria;\n-    }\n-\n-    /**\n-     * Creates a detached criteria with sharing restrictions relative to the given\n-     * user and access string.\n-     *\n-     * @param user   the user.\n-     * @param access the access string.\n-     * @return a DetachedCriteria.\n-     */\n-    private DetachedCriteria getSharingDetachedCriteria( UserInfo user, String access )\n-    {\n-        DetachedCriteria criteria = DetachedCriteria.forClass( getClazz(), \"c\" );\n-\n-        preProcessDetachedCriteria( criteria );\n-\n-        if ( !sharingEnabled( user ) || user == null )\n-        {\n-            return criteria;\n-        }\n-\n-        Assert.notNull( user, \"User argument can't be null.\" );\n-\n-        Disjunction disjunction = Restrictions.disjunction();\n-\n-        disjunction.add( Restrictions.like( \"c.publicAccess\", access ) );\n-        disjunction.add( Restrictions.isNull( \"c.publicAccess\" ) );\n-        disjunction.add( Restrictions.isNull( \"c.user.id\" ) );\n-        disjunction.add( Restrictions.eq( \"c.user.id\", user.getId() ) );\n-\n-        DetachedCriteria userGroupDetachedCriteria = DetachedCriteria.forClass( getClazz(), \"ugdc\" );\n-        userGroupDetachedCriteria.createCriteria( \"ugdc.userGroupAccesses\", \"uga\" );\n-        userGroupDetachedCriteria.createCriteria( \"uga.userGroup\", \"ug\" );\n-        userGroupDetachedCriteria.createCriteria( \"ug.members\", \"ugm\" );\n-\n-        userGroupDetachedCriteria.add( Restrictions.eqProperty( \"ugdc.id\", \"c.id\" ) );\n-        userGroupDetachedCriteria.add( Restrictions.eq( \"ugm.id\", user.getId() ) );\n-        userGroupDetachedCriteria.add( Restrictions.like( \"uga.access\", access ) );\n-\n-        userGroupDetachedCriteria.setProjection( Property.forName( \"uga.id\" ) );\n-\n-        disjunction.add( Subqueries.exists( userGroupDetachedCriteria ) );\n-\n-        DetachedCriteria userDetachedCriteria = DetachedCriteria.forClass( getClazz(), \"udc\" );\n-        userDetachedCriteria.createCriteria( \"udc.userAccesses\", \"ua\" );\n-        userDetachedCriteria.createCriteria( \"ua.user\", \"u\" );\n-\n-        userDetachedCriteria.add( Restrictions.eqProperty( \"udc.id\", \"c.id\" ) );\n-        userDetachedCriteria.add( Restrictions.eq( \"u.id\", user.getId() ) );\n-        userDetachedCriteria.add( Restrictions.like( \"ua.access\", access ) );\n-\n-        userDetachedCriteria.setProjection( Property.forName( \"ua.id\" ) );\n-\n-        disjunction.add( Subqueries.exists( userDetachedCriteria ) );\n-\n-        criteria.add( disjunction );\n-\n-        return criteria;\n-    }\n-\n     // ----------------------------------------------------------------------\n     // JPA support methods\n     // ----------------------------------------------------------------------\n \n     @Override\n     public final List<Function<Root<T>, Predicate>> getDataSharingPredicates( CriteriaBuilder builder )\n     {\n-        return getDataSharingPredicates( builder, currentUserService.getCurrentUserInfo(), AclService.LIKE_READ_DATA );\n+        return getDataSharingPredicates( builder, currentUserService.getCurrentUserInfo(), currentUserService.getCurrentUserGroupsInfo(), AclService.LIKE_READ_DATA );\n     }\n \n     @Override\n-    public List<Function<Root<T>, Predicate>> getDataSharingPredicates( CriteriaBuilder builder, UserInfo user )\n+    public List<Function<Root<T>, Predicate>> getDataSharingPredicates( CriteriaBuilder builder, User user )\n     {\n         return getDataSharingPredicates( builder, user, AclService.LIKE_READ_DATA );\n     }\n \n     @Override\n-    public List<Function<Root<T>, Predicate>> getDataSharingPredicates( CriteriaBuilder builder, User user )\n+    public List<Function<Root<T>, Predicate>> getDataSharingPredicates( CriteriaBuilder builder, UserInfo userInfo )\n     {\n-        return getDataSharingPredicates( builder, UserInfo.fromUser( user ), AclService.LIKE_READ_DATA );\n+        return null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "24cd20ec504ce0a7f86d2acbd33df5a8bd53ddf4"}, "originalPosition": 337}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0cad5bbf9f17ba79c266283a1da19f7d2d6b833b", "author": {"user": {"login": "larshelge", "name": "Lars Helge \u00d8verland"}}, "url": "https://github.com/dhis2/dhis2-core/commit/0cad5bbf9f17ba79c266283a1da19f7d2d6b833b", "committedDate": "2020-12-21T08:06:08Z", "message": "Minor"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3164467aed68616a509f49ca6b6e2a076318e1a5", "author": {"user": {"login": "larshelge", "name": "Lars Helge \u00d8verland"}}, "url": "https://github.com/dhis2/dhis2-core/commit/3164467aed68616a509f49ca6b6e2a076318e1a5", "committedDate": "2020-12-22T07:17:10Z", "message": "Merge branch 'master' of github.com:dhis2/dhis2-core"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "28581dc6028f85d7e32f659c6125abeb04c9a79f", "author": {"user": {"login": "larshelge", "name": "Lars Helge \u00d8verland"}}, "url": "https://github.com/dhis2/dhis2-core/commit/28581dc6028f85d7e32f659c6125abeb04c9a79f", "committedDate": "2020-12-22T07:17:48Z", "message": "Merge branch 'master' into DHIS2-5814"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2570, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}