{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDYyODM3MTMx", "number": 5888, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxNToxMToxMFrOEVdOiQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxNToxMToxMFrOEVdOiQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwOTM0NDA5OnYy", "diffSide": "RIGHT", "path": "dhis-2/dhis-services/dhis-service-tracker/src/main/java/org/hisp/dhis/tracker/converter/NotesConverterService.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxNToxMToxMFrOG8OKLA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQyMToyNjo1OFrOG8bPHQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTc5OTcyNA==", "bodyText": "Minor performance issue, if you do setAutoFields and uid is not set, it will generate one for you.. so maybe better to set the uid first", "url": "https://github.com/dhis2/dhis2-core/pull/5888#discussion_r465799724", "createdAt": "2020-08-05T15:11:10Z", "author": {"login": "mortenoh"}, "path": "dhis-2/dhis-services/dhis-service-tracker/src/main/java/org/hisp/dhis/tracker/converter/NotesConverterService.java", "diffHunk": "@@ -0,0 +1,86 @@\n+package org.hisp.dhis.tracker.converter;\n+\n+/*\n+ * Copyright (c) 2004-2020, University of Oslo\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ * Redistributions of source code must retain the above copyright notice, this\n+ * list of conditions and the following disclaimer.\n+ *\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following disclaimer in the documentation\n+ * and/or other materials provided with the distribution.\n+ * Neither the name of the HISP project nor the names of its contributors may\n+ * be used to endorse or promote products derived from this software without\n+ * specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n+ * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+import org.hisp.dhis.trackedentitycomment.TrackedEntityComment;\n+import org.hisp.dhis.tracker.domain.Note;\n+import org.hisp.dhis.tracker.preheat.TrackerPreheat;\n+import org.hisp.dhis.util.DateUtils;\n+import org.springframework.stereotype.Service;\n+\n+/**\n+ * @author Luciano Fiandesio\n+ */\n+@Service\n+public class NotesConverterService implements TrackerConverterService<Note, TrackedEntityComment>\n+{\n+    @Override\n+    public Note to( TrackedEntityComment trackedEntityComment )\n+    {\n+        Note note = new Note();\n+        note.setNote( trackedEntityComment.getUid() );\n+        note.setValue( trackedEntityComment.getCommentText() );\n+        note.setStoredAt( DateUtils.getIso8601NoTz( trackedEntityComment.getCreated() ) );\n+        note.setStoredBy( trackedEntityComment.getCreator() );\n+        return note;\n+    }\n+\n+    @Override\n+    public List<Note> to( List<TrackedEntityComment> trackedEntityComments )\n+    {\n+        return trackedEntityComments.stream().map( this::to ).collect( Collectors.toList() );\n+    }\n+\n+    @Override\n+    public TrackedEntityComment from( Note note )\n+    {\n+        TrackedEntityComment comment = new TrackedEntityComment();\n+        comment.setAutoFields();\n+        comment.setCommentText( note.getValue() );\n+        comment.setUid( note.getNote() );", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "969f25ca303dccefd5c10ed39fd8ca92a0bc6583"}, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjAxMzk4MQ==", "bodyText": "Fixed.", "url": "https://github.com/dhis2/dhis2-core/pull/5888#discussion_r466013981", "createdAt": "2020-08-05T21:26:58Z", "author": {"login": "luciano-fiandesio"}, "path": "dhis-2/dhis-services/dhis-service-tracker/src/main/java/org/hisp/dhis/tracker/converter/NotesConverterService.java", "diffHunk": "@@ -0,0 +1,86 @@\n+package org.hisp.dhis.tracker.converter;\n+\n+/*\n+ * Copyright (c) 2004-2020, University of Oslo\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ * Redistributions of source code must retain the above copyright notice, this\n+ * list of conditions and the following disclaimer.\n+ *\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following disclaimer in the documentation\n+ * and/or other materials provided with the distribution.\n+ * Neither the name of the HISP project nor the names of its contributors may\n+ * be used to endorse or promote products derived from this software without\n+ * specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n+ * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+import org.hisp.dhis.trackedentitycomment.TrackedEntityComment;\n+import org.hisp.dhis.tracker.domain.Note;\n+import org.hisp.dhis.tracker.preheat.TrackerPreheat;\n+import org.hisp.dhis.util.DateUtils;\n+import org.springframework.stereotype.Service;\n+\n+/**\n+ * @author Luciano Fiandesio\n+ */\n+@Service\n+public class NotesConverterService implements TrackerConverterService<Note, TrackedEntityComment>\n+{\n+    @Override\n+    public Note to( TrackedEntityComment trackedEntityComment )\n+    {\n+        Note note = new Note();\n+        note.setNote( trackedEntityComment.getUid() );\n+        note.setValue( trackedEntityComment.getCommentText() );\n+        note.setStoredAt( DateUtils.getIso8601NoTz( trackedEntityComment.getCreated() ) );\n+        note.setStoredBy( trackedEntityComment.getCreator() );\n+        return note;\n+    }\n+\n+    @Override\n+    public List<Note> to( List<TrackedEntityComment> trackedEntityComments )\n+    {\n+        return trackedEntityComments.stream().map( this::to ).collect( Collectors.toList() );\n+    }\n+\n+    @Override\n+    public TrackedEntityComment from( Note note )\n+    {\n+        TrackedEntityComment comment = new TrackedEntityComment();\n+        comment.setAutoFields();\n+        comment.setCommentText( note.getValue() );\n+        comment.setUid( note.getNote() );", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTc5OTcyNA=="}, "originalCommit": {"oid": "969f25ca303dccefd5c10ed39fd8ca92a0bc6583"}, "originalPosition": 69}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3972, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}