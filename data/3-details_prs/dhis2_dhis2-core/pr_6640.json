{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE5NzIzMDAz", "number": 6640, "title": "fix: Do not fail on rule engine call  and just log an exception", "bodyText": "", "createdAt": "2020-11-12T08:47:52Z", "url": "https://github.com/dhis2/dhis2-core/pull/6640", "merged": true, "mergeCommit": {"oid": "35caca8b2119f52f19a22fed146d7669e756f356"}, "closed": true, "closedAt": "2020-11-12T14:51:38Z", "author": {"login": "enricocolasante"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdbub6tgH2gAyNTE5NzIzMDAzOmZmM2ZiNGM4NzkzYmY4YzRhZmRjZGM3MWFhYzA5Y2YzNGQ2MTAwMzM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdbzwmbAFqTUyOTE2MzI0OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "ff3fb4c8793bf8c4afdcdc71aac09cf34d610033", "author": {"user": {"login": "enricocolasante", "name": "Enrico Colasante"}}, "url": "https://github.com/dhis2/dhis2-core/commit/ff3fb4c8793bf8c4afdcdc71aac09cf34d610033", "committedDate": "2020-11-12T08:39:19Z", "message": "fix: Do not fail on rule engine call  and just log an exception"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI4ODY5Mzg0", "url": "https://github.com/dhis2/dhis2-core/pull/6640#pullrequestreview-528869384", "createdAt": "2020-11-12T08:53:24Z", "commit": {"oid": "ff3fb4c8793bf8c4afdcdc71aac09cf34d610033"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQwODo1MzoyNFrOHxwiww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQwODo1MzoyNFrOHxwiww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTkzNzYwMw==", "bodyText": "Just a suggestion. Instead of hiding the original exception, wouldn't it be better to use log.warn( \"message\", ex);", "url": "https://github.com/dhis2/dhis2-core/pull/6640#discussion_r521937603", "createdAt": "2020-11-12T08:53:24Z", "author": {"login": "zubaira"}, "path": "dhis-2/dhis-services/dhis-service-tracker/src/main/java/org/hisp/dhis/tracker/DefaultTrackerProgramRuleService.java", "diffHunk": "@@ -79,7 +82,12 @@ public DefaultTrackerProgramRuleService(\n             .collect( Collectors.toMap( Enrollment::getEnrollment, e -> {\n                 ProgramInstance enrollment = enrollmentTrackerConverterService.fromForRuleEngine( bundle.getPreheat(),\n                     e );\n-                return programRuleEngine.evaluate( enrollment, Sets.newHashSet() );\n+                try{\n+                    return programRuleEngine.evaluate( enrollment, Sets.newHashSet() );\n+                } catch (Exception ex) {\n+                    log.warn(\"Something bad happen calling rule engine. The reason should be an invalid payload\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff3fb4c8793bf8c4afdcdc71aac09cf34d610033"}, "originalPosition": 25}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI4ODc0NjYz", "url": "https://github.com/dhis2/dhis2-core/pull/6640#pullrequestreview-528874663", "createdAt": "2020-11-12T09:00:02Z", "commit": {"oid": "ff3fb4c8793bf8c4afdcdc71aac09cf34d610033"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQwOTowMDowMlrOHxwzbQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQwOTowMDowMlrOHxwzbQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTk0MTg2OQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                log.warn(\"Something bad happen calling rule engine. The reason should be an invalid payload\");\n          \n          \n            \n                                log.warn(\"Something bad happen calling rule engine. The reason should be an invalid payload\", ex);", "url": "https://github.com/dhis2/dhis2-core/pull/6640#discussion_r521941869", "createdAt": "2020-11-12T09:00:02Z", "author": {"login": "enricocolasante"}, "path": "dhis-2/dhis-services/dhis-service-tracker/src/main/java/org/hisp/dhis/tracker/DefaultTrackerProgramRuleService.java", "diffHunk": "@@ -79,7 +82,12 @@ public DefaultTrackerProgramRuleService(\n             .collect( Collectors.toMap( Enrollment::getEnrollment, e -> {\n                 ProgramInstance enrollment = enrollmentTrackerConverterService.fromForRuleEngine( bundle.getPreheat(),\n                     e );\n-                return programRuleEngine.evaluate( enrollment, Sets.newHashSet() );\n+                try{\n+                    return programRuleEngine.evaluate( enrollment, Sets.newHashSet() );\n+                } catch (Exception ex) {\n+                    log.warn(\"Something bad happen calling rule engine. The reason should be an invalid payload\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff3fb4c8793bf8c4afdcdc71aac09cf34d610033"}, "originalPosition": 25}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f61fc84ebc49491afb6d526cc2955b61b8a0e86d", "author": {"user": {"login": "enricocolasante", "name": "Enrico Colasante"}}, "url": "https://github.com/dhis2/dhis2-core/commit/f61fc84ebc49491afb6d526cc2955b61b8a0e86d", "committedDate": "2020-11-12T09:00:10Z", "message": "Update dhis-2/dhis-services/dhis-service-tracker/src/main/java/org/hisp/dhis/tracker/DefaultTrackerProgramRuleService.java"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI4ODc5MzE2", "url": "https://github.com/dhis2/dhis2-core/pull/6640#pullrequestreview-528879316", "createdAt": "2020-11-12T09:05:50Z", "commit": {"oid": "f61fc84ebc49491afb6d526cc2955b61b8a0e86d"}, "state": "APPROVED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQwOTowNTo1MFrOHxxA9w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQwOTowOTowNFrOHxxJMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTk0NTMzNQ==", "bodyText": "code style ;)", "url": "https://github.com/dhis2/dhis2-core/pull/6640#discussion_r521945335", "createdAt": "2020-11-12T09:05:50Z", "author": {"login": "luciano-fiandesio"}, "path": "dhis-2/dhis-services/dhis-service-tracker/src/main/java/org/hisp/dhis/tracker/DefaultTrackerProgramRuleService.java", "diffHunk": "@@ -79,7 +82,12 @@ public DefaultTrackerProgramRuleService(\n             .collect( Collectors.toMap( Enrollment::getEnrollment, e -> {\n                 ProgramInstance enrollment = enrollmentTrackerConverterService.fromForRuleEngine( bundle.getPreheat(),\n                     e );\n-                return programRuleEngine.evaluate( enrollment, Sets.newHashSet() );\n+                try{", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f61fc84ebc49491afb6d526cc2955b61b8a0e86d"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTk0NTYxNQ==", "bodyText": "code style", "url": "https://github.com/dhis2/dhis2-core/pull/6640#discussion_r521945615", "createdAt": "2020-11-12T09:06:14Z", "author": {"login": "luciano-fiandesio"}, "path": "dhis-2/dhis-services/dhis-service-tracker/src/main/java/org/hisp/dhis/tracker/DefaultTrackerProgramRuleService.java", "diffHunk": "@@ -90,9 +98,14 @@ public DefaultTrackerProgramRuleService(\n             .stream()\n             .collect( Collectors.toMap( Event::getEvent, event -> {\n                 ProgramInstance enrollment = getEnrollment( bundle, event );\n-                return programRuleEngine.evaluate( enrollment,\n-                    eventTrackerConverterService.from( bundle.getPreheat(), event ),\n-                    getEventsFromEnrollment( enrollment.getUid(), bundle, events ) );\n+                try {\n+                    return programRuleEngine.evaluate(enrollment,\n+                            eventTrackerConverterService.from(bundle.getPreheat(), event),\n+                            getEventsFromEnrollment(enrollment.getUid(), bundle, events));\n+                } catch (Exception e){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f61fc84ebc49491afb6d526cc2955b61b8a0e86d"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTk0NzQ0MQ==", "bodyText": "I'm not sure about the message: I would not reference the payload, since we are catching a generic exception. Perhaps something along the line: \"An error occured during an Program RUle engine call for enrollment ..... Please check the response payload for additional information\"", "url": "https://github.com/dhis2/dhis2-core/pull/6640#discussion_r521947441", "createdAt": "2020-11-12T09:09:04Z", "author": {"login": "luciano-fiandesio"}, "path": "dhis-2/dhis-services/dhis-service-tracker/src/main/java/org/hisp/dhis/tracker/DefaultTrackerProgramRuleService.java", "diffHunk": "@@ -79,7 +82,12 @@ public DefaultTrackerProgramRuleService(\n             .collect( Collectors.toMap( Enrollment::getEnrollment, e -> {\n                 ProgramInstance enrollment = enrollmentTrackerConverterService.fromForRuleEngine( bundle.getPreheat(),\n                     e );\n-                return programRuleEngine.evaluate( enrollment, Sets.newHashSet() );\n+                try{\n+                    return programRuleEngine.evaluate( enrollment, Sets.newHashSet() );\n+                } catch (Exception ex) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f61fc84ebc49491afb6d526cc2955b61b8a0e86d"}, "originalPosition": 24}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "327e2d191409d987c6619195e99eabfd753eec69", "author": {"user": {"login": "enricocolasante", "name": "Enrico Colasante"}}, "url": "https://github.com/dhis2/dhis2-core/commit/327e2d191409d987c6619195e99eabfd753eec69", "committedDate": "2020-11-12T09:35:54Z", "message": "Fix tests and code review comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI5MTYzMjQ5", "url": "https://github.com/dhis2/dhis2-core/pull/6640#pullrequestreview-529163249", "createdAt": "2020-11-12T14:51:26Z", "commit": {"oid": "327e2d191409d987c6619195e99eabfd753eec69"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2333, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}