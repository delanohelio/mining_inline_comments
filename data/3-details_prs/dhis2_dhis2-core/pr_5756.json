{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM1NjYzODU2", "number": 5756, "title": "fix: Add audit for hard delete TEI", "bodyText": "https://jira.dhis2.org/browse/DHIS2-8442\n\nWe have a function JdbcMaintenanceStore.deleteSoftDeletedTrackedEntityInstances() for hard delete all soft deleted TEI.\nThis function use jdbcTemplate.batchUpdate() for executing native sql delete statement\nThe task is to create audit entry for TEI after they are hard deleted from database.\n\nIn order to do that this PR does below steps\n\nGet a List of soft deleted TEI's uid before they are hard delete from database. This query also use jdbcTemplate.\nAfter they are hard deleted from database, create audit entry which will include blank TEI object with only uid, no other properties. Because the full snapshot of hard deleted TEI is in the last audit entry of same uid with auditType=UPDATE.\nSend audit message with auditType = DELETE to Artemis\n\n\nThere are also other functions that need to be handled: deleteSoftDeletedDataValues(), deleteSoftDeletedProgramStageInstances(), deleteSoftDeletedProgramInstances()", "createdAt": "2020-06-17T07:42:44Z", "url": "https://github.com/dhis2/dhis2-core/pull/5756", "merged": true, "mergeCommit": {"oid": "9eef51fcafacb850aac4bf030735a055624f3e29"}, "closed": true, "closedAt": "2020-09-29T06:25:35Z", "author": {"login": "vietnguyen"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcsGuwXgBqjM0NTI3Nzc5ODQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdMWFE7gH2gAyNDM1NjYzODU2OjA2MjBmMTMxYjA3N2IxMjM5Y2JmMjIyZDdjOGExZTcyYzM5ODkxMTE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b416842a7376c73710dc19f672b7965cabe1926b", "author": {"user": {"login": "vietnguyen", "name": "Viet Nguyen"}}, "url": "https://github.com/dhis2/dhis2-core/commit/b416842a7376c73710dc19f672b7965cabe1926b", "committedDate": "2020-06-17T07:30:39Z", "message": "fix: Add audit for hard delete TEI"}, "afterCommit": {"oid": "7db66b69b10d766509d77207d78f297cdd04153a", "author": {"user": {"login": "vietnguyen", "name": "Viet Nguyen"}}, "url": "https://github.com/dhis2/dhis2-core/commit/7db66b69b10d766509d77207d78f297cdd04153a", "committedDate": "2020-06-17T09:48:59Z", "message": "fix: Add audit for hard delete TEI"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMyOTg4NzA4", "url": "https://github.com/dhis2/dhis2-core/pull/5756#pullrequestreview-432988708", "createdAt": "2020-06-18T06:54:15Z", "commit": {"oid": "7db66b69b10d766509d77207d78f297cdd04153a"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQwNjo1NDoxNVrOGlh6yw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQwNjo1NDoxNVrOGlh6yw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjAwNjIxOQ==", "bodyText": "Design consideration: I wonder if we should allow sending an Audit object without the createdBy pre-populated (to avoid having to use the UserSupplier in each class that needs to send audit).\nThe AuditManager can check if the createdAt is null and use the supplier to populate.\nThe design advantage is that we remove one dependency (UserSupplier) from  classes that need to use to create an Audit object. .\nThe send method of AuditManager would contain this snippet:\nif ( StringUtils.isEmpty( audit.getCreatedBy() ) )\n{\n    audit.setCreatedBy( usernameSupplier.get() );\n}\n\n@mortenoh what do you think? (this is really a minor thing)", "url": "https://github.com/dhis2/dhis2-core/pull/5756#discussion_r442006219", "createdAt": "2020-06-18T06:54:15Z", "author": {"login": "luciano-fiandesio"}, "path": "dhis-2/dhis-services/dhis-service-administration/src/main/java/org/hisp/dhis/maintenance/jdbc/JdbcMaintenanceStore.java", "diffHunk": "@@ -165,6 +204,31 @@ public int deleteSoftDeletedTrackedEntityInstances()\n             \"delete from programownershiphistory where trackedentityinstanceid in \" + teiSelect,\n             \"delete from trackedentityinstance where deleted is true\" };\n \n-        return jdbcTemplate.batchUpdate( sqlStmts )[sqlStmts.length - 1];\n+        int result = jdbcTemplate.batchUpdate( sqlStmts )[sqlStmts.length - 1];\n+\n+        if ( result > 0 && deletedTeiUids.size() > 0 )\n+        {\n+            auditHardDeletedTrackedEntityInstances( deletedTeiUids );\n+        }\n+\n+        return result;\n+    }\n+\n+    private void auditHardDeletedTrackedEntityInstances( List<String> deletedTeiUids )\n+    {\n+        deletedTeiUids.forEach( teiUid -> {\n+            TrackedEntityInstance tei = new TrackedEntityInstance();\n+            tei.setUid( teiUid );\n+            tei.setDeleted( true );\n+            auditManager.send( Audit.builder()\n+                .auditType( AuditType.DELETE )\n+                .auditScope( AuditScope.TRACKER )\n+                .createdAt( LocalDateTime.now() )\n+                .createdBy( usernameSupplier.get() )", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7db66b69b10d766509d77207d78f297cdd04153a"}, "originalPosition": 100}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM4NzcwNDg3", "url": "https://github.com/dhis2/dhis2-core/pull/5756#pullrequestreview-438770487", "createdAt": "2020-06-28T11:15:19Z", "commit": {"oid": "7db66b69b10d766509d77207d78f297cdd04153a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOFQxMToxNToxOVrOGp8krQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOFQxMToxNToxOVrOGp8krQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjYzNzIyOQ==", "bodyText": "I assume this is basically to wait for our embedded artemis to have processed the message? is there a better way here? maybe using mocking? @luciano-fiandesio", "url": "https://github.com/dhis2/dhis2-core/pull/5756#discussion_r446637229", "createdAt": "2020-06-28T11:15:19Z", "author": {"login": "mortenoh"}, "path": "dhis-2/dhis-services/dhis-service-administration/src/test/java/org/hisp/dhis/maintenance/HardDeleteAuditTest.java", "diffHunk": "@@ -0,0 +1,89 @@\n+package org.hisp.dhis.maintenance;\n+\n+import com.google.common.collect.Sets;\n+import org.hisp.dhis.IntegrationTestBase;\n+import org.hisp.dhis.audit.Audit;\n+import org.hisp.dhis.audit.AuditQuery;\n+import org.hisp.dhis.audit.AuditService;\n+import org.hisp.dhis.audit.AuditType;\n+import org.hisp.dhis.common.IdentifiableObjectManager;\n+import org.hisp.dhis.maintenance.jdbc.JdbcMaintenanceStore;\n+import org.hisp.dhis.organisationunit.OrganisationUnit;\n+import org.hisp.dhis.trackedentity.TrackedEntityAttribute;\n+import org.hisp.dhis.trackedentity.TrackedEntityInstance;\n+import org.hisp.dhis.trackedentity.TrackedEntityInstanceService;\n+import org.junit.Test;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.test.context.ActiveProfiles;\n+\n+import java.util.List;\n+import java.util.concurrent.TimeUnit;\n+\n+import static org.awaitility.Awaitility.await;\n+import static org.junit.Assert.assertEquals;\n+\n+@ActiveProfiles( profiles = { \"test-audit\" } )\n+public class HardDeleteAuditTest\n+    extends IntegrationTestBase\n+{\n+    private static final int TIMEOUT = 5;\n+    @Autowired\n+    private AuditService auditService;\n+\n+    @Autowired\n+    private TrackedEntityInstanceService trackedEntityInstanceService;\n+\n+    @Autowired\n+    private IdentifiableObjectManager manager;\n+\n+    @Autowired\n+    private JdbcMaintenanceStore jdbcMaintenanceStore;\n+\n+    @Test\n+    public void testHardDeleteTei()\n+    {\n+        OrganisationUnit ou = createOrganisationUnit( 'A' );\n+        TrackedEntityAttribute attribute = createTrackedEntityAttribute( 'A' );\n+        manager.save( ou );\n+        manager.save( attribute );\n+\n+        TrackedEntityInstance tei = createTrackedEntityInstance( 'A', ou, attribute );\n+\n+        trackedEntityInstanceService.addTrackedEntityInstance( tei );\n+\n+        trackedEntityInstanceService.deleteTrackedEntityInstance( tei );\n+\n+        final AuditQuery query = AuditQuery.builder()\n+            .uid( Sets.newHashSet( tei.getUid() ) )\n+            .build();\n+\n+        await().atMost( TIMEOUT, TimeUnit.SECONDS ).until( () -> auditService.countAudits( query ) > 0 );", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7db66b69b10d766509d77207d78f297cdd04153a"}, "originalPosition": 60}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c18646f981222ca7ce204cab31bc88c522b0eaac", "author": {"user": {"login": "vietnguyen", "name": "Viet Nguyen"}}, "url": "https://github.com/dhis2/dhis2-core/commit/c18646f981222ca7ce204cab31bc88c522b0eaac", "committedDate": "2020-07-01T08:20:48Z", "message": "fix: Add audit for hard delete TEI"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7db66b69b10d766509d77207d78f297cdd04153a", "author": {"user": {"login": "vietnguyen", "name": "Viet Nguyen"}}, "url": "https://github.com/dhis2/dhis2-core/commit/7db66b69b10d766509d77207d78f297cdd04153a", "committedDate": "2020-06-17T09:48:59Z", "message": "fix: Add audit for hard delete TEI"}, "afterCommit": {"oid": "c18646f981222ca7ce204cab31bc88c522b0eaac", "author": {"user": {"login": "vietnguyen", "name": "Viet Nguyen"}}, "url": "https://github.com/dhis2/dhis2-core/commit/c18646f981222ca7ce204cab31bc88c522b0eaac", "committedDate": "2020-07-01T08:20:48Z", "message": "fix: Add audit for hard delete TEI"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk0NjE3MTc1", "url": "https://github.com/dhis2/dhis2-core/pull/5756#pullrequestreview-494617175", "createdAt": "2020-09-23T12:42:41Z", "commit": {"oid": "c18646f981222ca7ce204cab31bc88c522b0eaac"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0620f131b077b1239cbf222d7c8a1e72c3989111", "author": {"user": {"login": "vietnguyen", "name": "Viet Nguyen"}}, "url": "https://github.com/dhis2/dhis2-core/commit/0620f131b077b1239cbf222d7c8a1e72c3989111", "committedDate": "2020-09-25T13:47:47Z", "message": "Merge remote-tracking branch 'origin/master' into DHIS2-8442-35"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2658, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}