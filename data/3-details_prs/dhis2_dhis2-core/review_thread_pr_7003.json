{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQ2NDk3MzY4", "number": 7003, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOVQxNDowNDowOVrOFJx8mA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOVQxNDowNDowOVrOFJx8mA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ1Nzk5ODMyOnYy", "diffSide": "RIGHT", "path": "dhis-2/dhis-services/dhis-service-tracker/src/main/java/org/hisp/dhis/tracker/preheat/PreheatUtils.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOVQxNDowNDowOVrOIMQA1A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOVQxNDowNzo0OFrOIMQF2A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTcxNjE4MA==", "bodyText": "Not sure if this was missed, or will stay here for future implementation?", "url": "https://github.com/dhis2/dhis2-core/pull/7003#discussion_r549716180", "createdAt": "2020-12-29T14:04:09Z", "author": {"login": "maikelarabori"}, "path": "dhis-2/dhis-services/dhis-service-tracker/src/main/java/org/hisp/dhis/tracker/preheat/PreheatUtils.java", "diffHunk": "@@ -0,0 +1,39 @@\n+package org.hisp.dhis.tracker.preheat;\n+\n+import java.util.Optional;\n+\n+import org.hisp.dhis.common.IdentifiableObject;\n+import org.hisp.dhis.tracker.TrackerIdScheme;\n+import org.hisp.dhis.tracker.TrackerIdentifier;\n+\n+import lombok.experimental.UtilityClass;\n+\n+/**\n+ * @author Luciano Fiandesio\n+ */\n+@UtilityClass\n+public class PreheatUtils\n+{\n+    public <T extends IdentifiableObject> Optional<String> resolveKey( TrackerIdentifier identifier, T object )\n+    {\n+        if ( identifier.getIdScheme().equals( TrackerIdScheme.UID ) )\n+        {\n+            return Optional.ofNullable( object.getUid() );\n+        }\n+        else if ( identifier.getIdScheme().equals( TrackerIdScheme.CODE ) )\n+        {\n+            return Optional.ofNullable( object.getCode() );\n+        }\n+        else if ( identifier.getIdScheme().equals( TrackerIdScheme.NAME ) )\n+        {\n+            return Optional.ofNullable( object.getName() );\n+        }\n+        else if ( identifier.getIdScheme().equals( TrackerIdScheme.ATTRIBUTE ) )\n+        {\n+            return Optional.ofNullable( identifier.getIdentifier( object ) );\n+        }\n+        // TODO TrackerIdScheme.AUTO ??", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f76a1a436f0663c66789b292f33ab9652140b428"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTcxNzQ2NA==", "bodyText": "This is more a reminder, because I'm not sure how we should tread AUTO: I don't think it is even used now.", "url": "https://github.com/dhis2/dhis2-core/pull/7003#discussion_r549717464", "createdAt": "2020-12-29T14:07:48Z", "author": {"login": "luciano-fiandesio"}, "path": "dhis-2/dhis-services/dhis-service-tracker/src/main/java/org/hisp/dhis/tracker/preheat/PreheatUtils.java", "diffHunk": "@@ -0,0 +1,39 @@\n+package org.hisp.dhis.tracker.preheat;\n+\n+import java.util.Optional;\n+\n+import org.hisp.dhis.common.IdentifiableObject;\n+import org.hisp.dhis.tracker.TrackerIdScheme;\n+import org.hisp.dhis.tracker.TrackerIdentifier;\n+\n+import lombok.experimental.UtilityClass;\n+\n+/**\n+ * @author Luciano Fiandesio\n+ */\n+@UtilityClass\n+public class PreheatUtils\n+{\n+    public <T extends IdentifiableObject> Optional<String> resolveKey( TrackerIdentifier identifier, T object )\n+    {\n+        if ( identifier.getIdScheme().equals( TrackerIdScheme.UID ) )\n+        {\n+            return Optional.ofNullable( object.getUid() );\n+        }\n+        else if ( identifier.getIdScheme().equals( TrackerIdScheme.CODE ) )\n+        {\n+            return Optional.ofNullable( object.getCode() );\n+        }\n+        else if ( identifier.getIdScheme().equals( TrackerIdScheme.NAME ) )\n+        {\n+            return Optional.ofNullable( object.getName() );\n+        }\n+        else if ( identifier.getIdScheme().equals( TrackerIdScheme.ATTRIBUTE ) )\n+        {\n+            return Optional.ofNullable( identifier.getIdentifier( object ) );\n+        }\n+        // TODO TrackerIdScheme.AUTO ??", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTcxNjE4MA=="}, "originalCommit": {"oid": "f76a1a436f0663c66789b292f33ab9652140b428"}, "originalPosition": 35}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3659, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}