{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg2NDAwNTg1", "number": 6145, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQwODowNzo1NFrOEjAo2A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxMjoyMjoyMlrOEjGS1w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1MTQ2MDcyOnYy", "diffSide": "RIGHT", "path": "dhis-2/dhis-web/dhis-web-api/src/main/java/org/hisp/dhis/webapi/controller/CrudControllerAdvice.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQwODowNzo1NFrOHRId_Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxMjoxNzozM1rOHRQ-ww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzcyNjU4OQ==", "bodyText": "This Advice is only applied  to MetadataSyncController and MetadataVersionController so the \"sensitive exception\" logic would not be applied to Tracker import - which I guess was the original trigger for this PR.", "url": "https://github.com/dhis2/dhis2-core/pull/6145#discussion_r487726589", "createdAt": "2020-09-14T08:07:54Z", "author": {"login": "luciano-fiandesio"}, "path": "dhis-2/dhis-web/dhis-web-api/src/main/java/org/hisp/dhis/webapi/controller/CrudControllerAdvice.java", "diffHunk": "@@ -84,6 +85,11 @@\n @ControllerAdvice\n public class CrudControllerAdvice", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7caa6ff6ead7f57ef4824acc04e251d6b2212722"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzg1MzMyNg==", "bodyText": "I am confused now. ControllerAdvice is applied globally across all controllers unless explicitly limited correct?\nWhy do you think this only applies to those 2 controllers?\nI have also tested them on TrackedEntityInstanceController  and the exception handlers are handling the exceptions for that as well.", "url": "https://github.com/dhis2/dhis2-core/pull/6145#discussion_r487853326", "createdAt": "2020-09-14T11:53:50Z", "author": {"login": "ameenhere"}, "path": "dhis-2/dhis-web/dhis-web-api/src/main/java/org/hisp/dhis/webapi/controller/CrudControllerAdvice.java", "diffHunk": "@@ -84,6 +85,11 @@\n @ControllerAdvice\n public class CrudControllerAdvice", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzcyNjU4OQ=="}, "originalCommit": {"oid": "7caa6ff6ead7f57ef4824acc04e251d6b2212722"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzg2NjA1MQ==", "bodyText": "You are absolutely right:\n\nBy default, the methods in an @ControllerAdvice apply globally to all controllers\n\nI got confused by the fact that we have a couple of controllers extending CrudControllerAdvice, which, could probably be corrected.", "url": "https://github.com/dhis2/dhis2-core/pull/6145#discussion_r487866051", "createdAt": "2020-09-14T12:17:33Z", "author": {"login": "luciano-fiandesio"}, "path": "dhis-2/dhis-web/dhis-web-api/src/main/java/org/hisp/dhis/webapi/controller/CrudControllerAdvice.java", "diffHunk": "@@ -84,6 +85,11 @@\n @ControllerAdvice\n public class CrudControllerAdvice", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzcyNjU4OQ=="}, "originalCommit": {"oid": "7caa6ff6ead7f57ef4824acc04e251d6b2212722"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1MjM4NzQzOnYy", "diffSide": "RIGHT", "path": "dhis-2/dhis-web/dhis-web-api/src/main/java/org/hisp/dhis/webapi/controller/CrudControllerAdvice.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxMjoyMjoyMlrOHRRI2g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQwODo1NTo0NVrOHSnC3g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzg2ODYzNA==", "bodyText": "You  can also consider using the standard Spring exception handler approach, like so:\n@ExceptionHandler({BadSqlGrammarException.class,QueryException.class})\n  public String sensitiveErrorHandler() {\n   \n    return GENERIC_MESSAGE;\n  }", "url": "https://github.com/dhis2/dhis2-core/pull/6145#discussion_r487868634", "createdAt": "2020-09-14T12:22:22Z", "author": {"login": "luciano-fiandesio"}, "path": "dhis-2/dhis-web/dhis-web-api/src/main/java/org/hisp/dhis/webapi/controller/CrudControllerAdvice.java", "diffHunk": "@@ -84,6 +85,11 @@\n @ControllerAdvice\n public class CrudControllerAdvice\n {\n+    //Add sensitive exceptions into this array\n+    private static final Class<?>[] SENSITIVE_EXCEPTIONS = { BadSqlGrammarException.class, org.hibernate.QueryException.class };", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7caa6ff6ead7f57ef4824acc04e251d6b2212722"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzkyMjE3NA==", "bodyText": "I also wanted to handle the cases when these exceptions are nested inside other exceptions. For example CompletionException could have a nested exception  [cause] as BadSqlGrammarException. So wanted to eliminate adding extra exception handlers and then handling it separately for the nested ones.\nDoes that justify my implementation? Feel free to recommend better ways to implement this to handle both cases.", "url": "https://github.com/dhis2/dhis2-core/pull/6145#discussion_r487922174", "createdAt": "2020-09-14T13:38:32Z", "author": {"login": "ameenhere"}, "path": "dhis-2/dhis-web/dhis-web-api/src/main/java/org/hisp/dhis/webapi/controller/CrudControllerAdvice.java", "diffHunk": "@@ -84,6 +85,11 @@\n @ControllerAdvice\n public class CrudControllerAdvice\n {\n+    //Add sensitive exceptions into this array\n+    private static final Class<?>[] SENSITIVE_EXCEPTIONS = { BadSqlGrammarException.class, org.hibernate.QueryException.class };", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzg2ODYzNA=="}, "originalCommit": {"oid": "7caa6ff6ead7f57ef4824acc04e251d6b2212722"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTI2OTgwOA==", "bodyText": "So I double checked. Spring exception handlers does not catch \"nested exceptions\" if they are not nested by spring itself. So ideally the concrete exception that is actually thrown out the controller is what is handled.\nThe PR currently handles this and can be easily extended to include more sensitive Exceptions as and when needed by adding the exception class into the list.", "url": "https://github.com/dhis2/dhis2-core/pull/6145#discussion_r489269808", "createdAt": "2020-09-16T08:46:21Z", "author": {"login": "ameenhere"}, "path": "dhis-2/dhis-web/dhis-web-api/src/main/java/org/hisp/dhis/webapi/controller/CrudControllerAdvice.java", "diffHunk": "@@ -84,6 +85,11 @@\n @ControllerAdvice\n public class CrudControllerAdvice\n {\n+    //Add sensitive exceptions into this array\n+    private static final Class<?>[] SENSITIVE_EXCEPTIONS = { BadSqlGrammarException.class, org.hibernate.QueryException.class };", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzg2ODYzNA=="}, "originalCommit": {"oid": "7caa6ff6ead7f57ef4824acc04e251d6b2212722"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTI3NjEyNg==", "bodyText": "Got it, great that you checked. Then there is not much to discuss, your solution is the perfect approach for this case.", "url": "https://github.com/dhis2/dhis2-core/pull/6145#discussion_r489276126", "createdAt": "2020-09-16T08:55:45Z", "author": {"login": "luciano-fiandesio"}, "path": "dhis-2/dhis-web/dhis-web-api/src/main/java/org/hisp/dhis/webapi/controller/CrudControllerAdvice.java", "diffHunk": "@@ -84,6 +85,11 @@\n @ControllerAdvice\n public class CrudControllerAdvice\n {\n+    //Add sensitive exceptions into this array\n+    private static final Class<?>[] SENSITIVE_EXCEPTIONS = { BadSqlGrammarException.class, org.hibernate.QueryException.class };", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzg2ODYzNA=="}, "originalCommit": {"oid": "7caa6ff6ead7f57ef4824acc04e251d6b2212722"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3854, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}