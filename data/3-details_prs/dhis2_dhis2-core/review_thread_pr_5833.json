{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ2MzkyOTQ1", "number": 5833, "reviewThreads": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQwOToyNjozMVrOEOLZfw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QwNjo0MToxM1rOEUfEeg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzMzAyMjcxOnYy", "diffSide": "RIGHT", "path": "dhis-2/dhis-services/dhis-service-program-rule/src/main/java/org/hisp/dhis/programrule/engine/NotificationRuleActionImplementer.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQwOToyNjozMVrOGxLryQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQwOTo1NTo1NFrOG8Cpuw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDIyNDg0MQ==", "bodyText": "Might it be better to cast a np here and use checkNotNull, since a silent fail will mask a potential bug?", "url": "https://github.com/dhis2/dhis2-core/pull/5833#discussion_r454224841", "createdAt": "2020-07-14T09:26:31Z", "author": {"login": "netroms"}, "path": "dhis-2/dhis-services/dhis-service-program-rule/src/main/java/org/hisp/dhis/programrule/engine/NotificationRuleActionImplementer.java", "diffHunk": "@@ -120,18 +124,21 @@ protected ProgramNotificationInstance createNotificationInstance( ProgramNotific\n         return notificationInstance;\n     }\n \n-    protected boolean validate( RuleEffect ruleEffect, ProgramInstance programInstance )\n+    @Transactional\n+    public boolean validate( RuleEffect ruleEffect, ProgramInstance programInstance )\n     {\n-        if ( ruleEffect == null )\n+        if ( ruleEffect == null || programInstance == null )", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dbe627784cbc751cb4b0fcaec02159a2ef9efd63"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTA0ODA4MA==", "bodyText": "fixed", "url": "https://github.com/dhis2/dhis2-core/pull/5833#discussion_r465048080", "createdAt": "2020-08-04T13:25:51Z", "author": {"login": "zubaira"}, "path": "dhis-2/dhis-services/dhis-service-program-rule/src/main/java/org/hisp/dhis/programrule/engine/NotificationRuleActionImplementer.java", "diffHunk": "@@ -120,18 +124,21 @@ protected ProgramNotificationInstance createNotificationInstance( ProgramNotific\n         return notificationInstance;\n     }\n \n-    protected boolean validate( RuleEffect ruleEffect, ProgramInstance programInstance )\n+    @Transactional\n+    public boolean validate( RuleEffect ruleEffect, ProgramInstance programInstance )\n     {\n-        if ( ruleEffect == null )\n+        if ( ruleEffect == null || programInstance == null )", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDIyNDg0MQ=="}, "originalCommit": {"oid": "dbe627784cbc751cb4b0fcaec02159a2ef9efd63"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTYxMDQ5MQ==", "bodyText": "Is it fixed in the branch and pushed?", "url": "https://github.com/dhis2/dhis2-core/pull/5833#discussion_r465610491", "createdAt": "2020-08-05T09:54:39Z", "author": {"login": "larshelge"}, "path": "dhis-2/dhis-services/dhis-service-program-rule/src/main/java/org/hisp/dhis/programrule/engine/NotificationRuleActionImplementer.java", "diffHunk": "@@ -120,18 +124,21 @@ protected ProgramNotificationInstance createNotificationInstance( ProgramNotific\n         return notificationInstance;\n     }\n \n-    protected boolean validate( RuleEffect ruleEffect, ProgramInstance programInstance )\n+    @Transactional\n+    public boolean validate( RuleEffect ruleEffect, ProgramInstance programInstance )\n     {\n-        if ( ruleEffect == null )\n+        if ( ruleEffect == null || programInstance == null )", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDIyNDg0MQ=="}, "originalCommit": {"oid": "dbe627784cbc751cb4b0fcaec02159a2ef9efd63"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTYxMTE5NQ==", "bodyText": "fixed in the branch but have not pushed it yet.", "url": "https://github.com/dhis2/dhis2-core/pull/5833#discussion_r465611195", "createdAt": "2020-08-05T09:55:54Z", "author": {"login": "zubaira"}, "path": "dhis-2/dhis-services/dhis-service-program-rule/src/main/java/org/hisp/dhis/programrule/engine/NotificationRuleActionImplementer.java", "diffHunk": "@@ -120,18 +124,21 @@ protected ProgramNotificationInstance createNotificationInstance( ProgramNotific\n         return notificationInstance;\n     }\n \n-    protected boolean validate( RuleEffect ruleEffect, ProgramInstance programInstance )\n+    @Transactional\n+    public boolean validate( RuleEffect ruleEffect, ProgramInstance programInstance )\n     {\n-        if ( ruleEffect == null )\n+        if ( ruleEffect == null || programInstance == null )", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDIyNDg0MQ=="}, "originalCommit": {"oid": "dbe627784cbc751cb4b0fcaec02159a2ef9efd63"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5OTExNDgwOnYy", "diffSide": "RIGHT", "path": "dhis-2/dhis-services/dhis-service-core/src/main/java/org/hisp/dhis/program/notification/DefaultProgramNotificationTemplateStore.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QwNjoyMDoyNVrOG6tZ3g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxMjozMzoyMFrOG8HmCw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDIxNDQ5NA==", "bodyText": "What is the reason to move the @Transactional boundary \"down\" to the DAO class? Normally, we transactionally annotate services rather than a repository. I would suggest adding a short comment to explain the deviation from the norm.", "url": "https://github.com/dhis2/dhis2-core/pull/5833#discussion_r464214494", "createdAt": "2020-08-03T06:20:25Z", "author": {"login": "luciano-fiandesio"}, "path": "dhis-2/dhis-services/dhis-service-core/src/main/java/org/hisp/dhis/program/notification/DefaultProgramNotificationTemplateStore.java", "diffHunk": "@@ -39,11 +39,13 @@\n import org.springframework.context.ApplicationEventPublisher;\n import org.springframework.jdbc.core.JdbcTemplate;\n import org.springframework.stereotype.Repository;\n+import org.springframework.transaction.annotation.Transactional;\n \n /**\n  * Created by zubair@dhis2.org on 16.11.17.\n  */\n @Repository( \"org.hisp.dhis.program.notification.ProgramNotificationTemplateStore\" )\n+@Transactional", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9d5336e61cdd08cc580c3dafb9a94fb514f126cc"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTY5MjE3MQ==", "bodyText": "fixed by creating a service layer class", "url": "https://github.com/dhis2/dhis2-core/pull/5833#discussion_r465692171", "createdAt": "2020-08-05T12:33:20Z", "author": {"login": "zubaira"}, "path": "dhis-2/dhis-services/dhis-service-core/src/main/java/org/hisp/dhis/program/notification/DefaultProgramNotificationTemplateStore.java", "diffHunk": "@@ -39,11 +39,13 @@\n import org.springframework.context.ApplicationEventPublisher;\n import org.springframework.jdbc.core.JdbcTemplate;\n import org.springframework.stereotype.Repository;\n+import org.springframework.transaction.annotation.Transactional;\n \n /**\n  * Created by zubair@dhis2.org on 16.11.17.\n  */\n @Repository( \"org.hisp.dhis.program.notification.ProgramNotificationTemplateStore\" )\n+@Transactional", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDIxNDQ5NA=="}, "originalCommit": {"oid": "9d5336e61cdd08cc580c3dafb9a94fb514f126cc"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5OTExOTg5OnYy", "diffSide": "RIGHT", "path": "dhis-2/dhis-services/dhis-service-core/src/main/java/org/hisp/dhis/program/ProgramNotificationInstanceDeletionHandler.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QwNjoyMjo0MFrOG6tcsA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QwNzozODoxM1rOG__onw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDIxNTIxNg==", "bodyText": "This class doesn't seem to be Spring-managed and the constructor is not used. Is it used in some other way?", "url": "https://github.com/dhis2/dhis2-core/pull/5833#discussion_r464215216", "createdAt": "2020-08-03T06:22:40Z", "author": {"login": "luciano-fiandesio"}, "path": "dhis-2/dhis-services/dhis-service-core/src/main/java/org/hisp/dhis/program/ProgramNotificationInstanceDeletionHandler.java", "diffHunk": "@@ -0,0 +1,73 @@\n+package org.hisp.dhis.program;\n+\n+/*\n+ * Copyright (c) 2004-2020, University of Oslo\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ * Redistributions of source code must retain the above copyright notice, this\n+ * list of conditions and the following disclaimer.\n+ *\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following disclaimer in the documentation\n+ * and/or other materials provided with the distribution.\n+ * Neither the name of the HISP project nor the names of its contributors may\n+ * be used to endorse or promote products derived from this software without\n+ * specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n+ * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+\n+import org.hisp.dhis.program.notification.ProgramNotificationInstance;\n+import org.hisp.dhis.program.notification.ProgramNotificationInstanceStore;\n+import org.hisp.dhis.system.deletion.DeletionHandler;\n+\n+import java.util.List;\n+\n+/**\n+ * @author Zubair Asghar\n+ */\n+public class ProgramNotificationInstanceDeletionHandler", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9d5336e61cdd08cc580c3dafb9a94fb514f126cc"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTYwOTk5Mw==", "bodyText": "Agree, this needs to be a component to have any effect.", "url": "https://github.com/dhis2/dhis2-core/pull/5833#discussion_r465609993", "createdAt": "2020-08-05T09:53:46Z", "author": {"login": "larshelge"}, "path": "dhis-2/dhis-services/dhis-service-core/src/main/java/org/hisp/dhis/program/ProgramNotificationInstanceDeletionHandler.java", "diffHunk": "@@ -0,0 +1,73 @@\n+package org.hisp.dhis.program;\n+\n+/*\n+ * Copyright (c) 2004-2020, University of Oslo\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ * Redistributions of source code must retain the above copyright notice, this\n+ * list of conditions and the following disclaimer.\n+ *\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following disclaimer in the documentation\n+ * and/or other materials provided with the distribution.\n+ * Neither the name of the HISP project nor the names of its contributors may\n+ * be used to endorse or promote products derived from this software without\n+ * specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n+ * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+\n+import org.hisp.dhis.program.notification.ProgramNotificationInstance;\n+import org.hisp.dhis.program.notification.ProgramNotificationInstanceStore;\n+import org.hisp.dhis.system.deletion.DeletionHandler;\n+\n+import java.util.List;\n+\n+/**\n+ * @author Zubair Asghar\n+ */\n+public class ProgramNotificationInstanceDeletionHandler", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDIxNTIxNg=="}, "originalCommit": {"oid": "9d5336e61cdd08cc580c3dafb9a94fb514f126cc"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTYxMDU2MA==", "bodyText": "PR is coming", "url": "https://github.com/dhis2/dhis2-core/pull/5833#discussion_r465610560", "createdAt": "2020-08-05T09:54:45Z", "author": {"login": "zubaira"}, "path": "dhis-2/dhis-services/dhis-service-core/src/main/java/org/hisp/dhis/program/ProgramNotificationInstanceDeletionHandler.java", "diffHunk": "@@ -0,0 +1,73 @@\n+package org.hisp.dhis.program;\n+\n+/*\n+ * Copyright (c) 2004-2020, University of Oslo\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ * Redistributions of source code must retain the above copyright notice, this\n+ * list of conditions and the following disclaimer.\n+ *\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following disclaimer in the documentation\n+ * and/or other materials provided with the distribution.\n+ * Neither the name of the HISP project nor the names of its contributors may\n+ * be used to endorse or promote products derived from this software without\n+ * specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n+ * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+\n+import org.hisp.dhis.program.notification.ProgramNotificationInstance;\n+import org.hisp.dhis.program.notification.ProgramNotificationInstanceStore;\n+import org.hisp.dhis.system.deletion.DeletionHandler;\n+\n+import java.util.List;\n+\n+/**\n+ * @author Zubair Asghar\n+ */\n+public class ProgramNotificationInstanceDeletionHandler", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDIxNTIxNg=="}, "originalCommit": {"oid": "9d5336e61cdd08cc580c3dafb9a94fb514f126cc"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTc1NDg1Mg==", "bodyText": "Thanks Zubair. Is this fixed in the PR?", "url": "https://github.com/dhis2/dhis2-core/pull/5833#discussion_r469754852", "createdAt": "2020-08-13T07:35:45Z", "author": {"login": "larshelge"}, "path": "dhis-2/dhis-services/dhis-service-core/src/main/java/org/hisp/dhis/program/ProgramNotificationInstanceDeletionHandler.java", "diffHunk": "@@ -0,0 +1,73 @@\n+package org.hisp.dhis.program;\n+\n+/*\n+ * Copyright (c) 2004-2020, University of Oslo\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ * Redistributions of source code must retain the above copyright notice, this\n+ * list of conditions and the following disclaimer.\n+ *\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following disclaimer in the documentation\n+ * and/or other materials provided with the distribution.\n+ * Neither the name of the HISP project nor the names of its contributors may\n+ * be used to endorse or promote products derived from this software without\n+ * specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n+ * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+\n+import org.hisp.dhis.program.notification.ProgramNotificationInstance;\n+import org.hisp.dhis.program.notification.ProgramNotificationInstanceStore;\n+import org.hisp.dhis.system.deletion.DeletionHandler;\n+\n+import java.util.List;\n+\n+/**\n+ * @author Zubair Asghar\n+ */\n+public class ProgramNotificationInstanceDeletionHandler", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDIxNTIxNg=="}, "originalCommit": {"oid": "9d5336e61cdd08cc580c3dafb9a94fb514f126cc"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTc1NjA2Mw==", "bodyText": "yes. It is fixed in this PR. Just waiting for this PR to be merged.", "url": "https://github.com/dhis2/dhis2-core/pull/5833#discussion_r469756063", "createdAt": "2020-08-13T07:38:13Z", "author": {"login": "zubaira"}, "path": "dhis-2/dhis-services/dhis-service-core/src/main/java/org/hisp/dhis/program/ProgramNotificationInstanceDeletionHandler.java", "diffHunk": "@@ -0,0 +1,73 @@\n+package org.hisp.dhis.program;\n+\n+/*\n+ * Copyright (c) 2004-2020, University of Oslo\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ * Redistributions of source code must retain the above copyright notice, this\n+ * list of conditions and the following disclaimer.\n+ *\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following disclaimer in the documentation\n+ * and/or other materials provided with the distribution.\n+ * Neither the name of the HISP project nor the names of its contributors may\n+ * be used to endorse or promote products derived from this software without\n+ * specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n+ * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+\n+import org.hisp.dhis.program.notification.ProgramNotificationInstance;\n+import org.hisp.dhis.program.notification.ProgramNotificationInstanceStore;\n+import org.hisp.dhis.system.deletion.DeletionHandler;\n+\n+import java.util.List;\n+\n+/**\n+ * @author Zubair Asghar\n+ */\n+public class ProgramNotificationInstanceDeletionHandler", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDIxNTIxNg=="}, "originalCommit": {"oid": "9d5336e61cdd08cc580c3dafb9a94fb514f126cc"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5OTEyNzQ3OnYy", "diffSide": "RIGHT", "path": "dhis-2/dhis-services/dhis-service-program-rule/src/main/java/org/hisp/dhis/programrule/engine/NotificationRuleActionImplementer.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QwNjoyNjowNVrOG6tg9w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxMjozODo0MFrOG8HyMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDIxNjMxMQ==", "bodyText": "Consider removing this annotation. The method doesn't accces the DB directly, but only through another method (getNotificationTemplate) which is already annotated with @Transactional", "url": "https://github.com/dhis2/dhis2-core/pull/5833#discussion_r464216311", "createdAt": "2020-08-03T06:26:05Z", "author": {"login": "luciano-fiandesio"}, "path": "dhis-2/dhis-services/dhis-service-program-rule/src/main/java/org/hisp/dhis/programrule/engine/NotificationRuleActionImplementer.java", "diffHunk": "@@ -86,7 +89,8 @@ protected ExternalNotificationLogEntry createLogEntry(String key, String templat\n         return entry;\n     }\n \n-    protected ProgramNotificationTemplate getNotificationTemplate( RuleAction action )\n+    @Transactional", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9d5336e61cdd08cc580c3dafb9a94fb514f126cc"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTY5NTI4Mg==", "bodyText": "fixed", "url": "https://github.com/dhis2/dhis2-core/pull/5833#discussion_r465695282", "createdAt": "2020-08-05T12:38:40Z", "author": {"login": "zubaira"}, "path": "dhis-2/dhis-services/dhis-service-program-rule/src/main/java/org/hisp/dhis/programrule/engine/NotificationRuleActionImplementer.java", "diffHunk": "@@ -86,7 +89,8 @@ protected ExternalNotificationLogEntry createLogEntry(String key, String templat\n         return entry;\n     }\n \n-    protected ProgramNotificationTemplate getNotificationTemplate( RuleAction action )\n+    @Transactional", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDIxNjMxMQ=="}, "originalCommit": {"oid": "9d5336e61cdd08cc580c3dafb9a94fb514f126cc"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5OTEyODY4OnYy", "diffSide": "RIGHT", "path": "dhis-2/dhis-services/dhis-service-program-rule/src/main/java/org/hisp/dhis/programrule/engine/RuleActionAssignValueImplementer.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QwNjoyNjo0MFrOG6thqQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QwNjoyNjo0MFrOG6thqQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDIxNjQ4OQ==", "bodyText": "invalid tag, use @author", "url": "https://github.com/dhis2/dhis2-core/pull/5833#discussion_r464216489", "createdAt": "2020-08-03T06:26:40Z", "author": {"login": "luciano-fiandesio"}, "path": "dhis-2/dhis-services/dhis-service-program-rule/src/main/java/org/hisp/dhis/programrule/engine/RuleActionAssignValueImplementer.java", "diffHunk": "@@ -44,12 +44,14 @@\n import org.springframework.stereotype.Component;\n \n import lombok.extern.slf4j.Slf4j;\n+import org.springframework.transaction.annotation.Transactional;\n \n /**\n  * @Author Zubair Asghar.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9d5336e61cdd08cc580c3dafb9a94fb514f126cc"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5OTEzNDk4OnYy", "diffSide": "RIGHT", "path": "dhis-2/dhis-services/dhis-service-program-rule/src/main/java/org/hisp/dhis/programrule/engine/RuleActionAssignValueImplementer.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QwNjoyOTozMVrOG6tlSA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxMjozODo1NFrOG8HysA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDIxNzQxNg==", "bodyText": "We standardized the usage of @Trasactional: it should be used on methods rather that at class level. I have the impression that this method does not really need this annotation, since all the methods are\n\nread-only\ncalling other methods on different classes that are already annotated.\n\nPlease review the remaining methods and move the @transactional annotation only to methods where it is needed.", "url": "https://github.com/dhis2/dhis2-core/pull/5833#discussion_r464217416", "createdAt": "2020-08-03T06:29:31Z", "author": {"login": "luciano-fiandesio"}, "path": "dhis-2/dhis-services/dhis-service-program-rule/src/main/java/org/hisp/dhis/programrule/engine/RuleActionAssignValueImplementer.java", "diffHunk": "@@ -44,12 +44,14 @@\n import org.springframework.stereotype.Component;\n \n import lombok.extern.slf4j.Slf4j;\n+import org.springframework.transaction.annotation.Transactional;\n \n /**\n  * @Author Zubair Asghar.\n  */\n @Slf4j\n @Component( \"org.hisp.dhis.programrule.engine.RuleActionAssignValueImplementer\" )\n+@Transactional", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9d5336e61cdd08cc580c3dafb9a94fb514f126cc"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTY5NTQwOA==", "bodyText": "fixed", "url": "https://github.com/dhis2/dhis2-core/pull/5833#discussion_r465695408", "createdAt": "2020-08-05T12:38:54Z", "author": {"login": "zubaira"}, "path": "dhis-2/dhis-services/dhis-service-program-rule/src/main/java/org/hisp/dhis/programrule/engine/RuleActionAssignValueImplementer.java", "diffHunk": "@@ -44,12 +44,14 @@\n import org.springframework.stereotype.Component;\n \n import lombok.extern.slf4j.Slf4j;\n+import org.springframework.transaction.annotation.Transactional;\n \n /**\n  * @Author Zubair Asghar.\n  */\n @Slf4j\n @Component( \"org.hisp.dhis.programrule.engine.RuleActionAssignValueImplementer\" )\n+@Transactional", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDIxNzQxNg=="}, "originalCommit": {"oid": "9d5336e61cdd08cc580c3dafb9a94fb514f126cc"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5OTE0NDA5OnYy", "diffSide": "RIGHT", "path": "dhis-2/dhis-services/dhis-service-tracker/src/main/java/org/hisp/dhis/tracker/bundle/DefaultTrackerBundleService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QwNjozMzo0MlrOG6tqpg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QwNjozMzo0MlrOG6tqpg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDIxODc5MA==", "bodyText": "This seems unused", "url": "https://github.com/dhis2/dhis2-core/pull/5833#discussion_r464218790", "createdAt": "2020-08-03T06:33:42Z", "author": {"login": "luciano-fiandesio"}, "path": "dhis-2/dhis-services/dhis-service-tracker/src/main/java/org/hisp/dhis/tracker/bundle/DefaultTrackerBundleService.java", "diffHunk": "@@ -147,6 +153,7 @@ public DefaultTrackerBundleService( TrackerPreheatService trackerPreheatService,\n         this.dbmsManager = dbmsManager;\n         this.trackerProgramRuleService = trackerProgramRuleService;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9d5336e61cdd08cc580c3dafb9a94fb514f126cc"}, "originalPosition": 66}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5OTE1NjA1OnYy", "diffSide": "RIGHT", "path": "dhis-2/dhis-services/dhis-service-tracker/src/main/java/org/hisp/dhis/tracker/sideeffect/TrackerAssignValueSideEffect.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QwNjozOToyMlrOG6txww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxMzo0OTo0OVrOG7hPkg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDIyMDYxMQ==", "bodyText": "Some Javadoc would be good", "url": "https://github.com/dhis2/dhis2-core/pull/5833#discussion_r464220611", "createdAt": "2020-08-03T06:39:22Z", "author": {"login": "luciano-fiandesio"}, "path": "dhis-2/dhis-services/dhis-service-tracker/src/main/java/org/hisp/dhis/tracker/sideeffect/TrackerAssignValueSideEffect.java", "diffHunk": "@@ -0,0 +1,65 @@\n+package org.hisp.dhis.tracker.sideeffect;\n+\n+/*\n+ * Copyright (c) 2004-2020, University of Oslo\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ * Redistributions of source code must retain the above copyright notice, this\n+ * list of conditions and the following disclaimer.\n+ *\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following disclaimer in the documentation\n+ * and/or other materials provided with the distribution.\n+ * Neither the name of the HISP project nor the names of its contributors may\n+ * be used to endorse or promote products derived from this software without\n+ * specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n+ * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.fasterxml.jackson.databind.annotation.JsonDeserialize;\n+import com.fasterxml.jackson.databind.annotation.JsonPOJOBuilder;\n+import lombok.Builder;\n+import lombok.Data;\n+\n+/**\n+ * @author Zubair Asghar\n+ */\n+\n+@Data\n+@Builder( builderClassName = \"TrackerAssignValueSideEffectBuilder\" )\n+@JsonDeserialize( builder = TrackerAssignValueSideEffect.TrackerAssignValueSideEffectBuilder.class )\n+public class TrackerAssignValueSideEffect implements TrackerSideEffect", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9d5336e61cdd08cc580c3dafb9a94fb514f126cc"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTA2MzgyNg==", "bodyText": "fixed", "url": "https://github.com/dhis2/dhis2-core/pull/5833#discussion_r465063826", "createdAt": "2020-08-04T13:49:49Z", "author": {"login": "zubaira"}, "path": "dhis-2/dhis-services/dhis-service-tracker/src/main/java/org/hisp/dhis/tracker/sideeffect/TrackerAssignValueSideEffect.java", "diffHunk": "@@ -0,0 +1,65 @@\n+package org.hisp.dhis.tracker.sideeffect;\n+\n+/*\n+ * Copyright (c) 2004-2020, University of Oslo\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ * Redistributions of source code must retain the above copyright notice, this\n+ * list of conditions and the following disclaimer.\n+ *\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following disclaimer in the documentation\n+ * and/or other materials provided with the distribution.\n+ * Neither the name of the HISP project nor the names of its contributors may\n+ * be used to endorse or promote products derived from this software without\n+ * specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n+ * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.fasterxml.jackson.databind.annotation.JsonDeserialize;\n+import com.fasterxml.jackson.databind.annotation.JsonPOJOBuilder;\n+import lombok.Builder;\n+import lombok.Data;\n+\n+/**\n+ * @author Zubair Asghar\n+ */\n+\n+@Data\n+@Builder( builderClassName = \"TrackerAssignValueSideEffectBuilder\" )\n+@JsonDeserialize( builder = TrackerAssignValueSideEffect.TrackerAssignValueSideEffectBuilder.class )\n+public class TrackerAssignValueSideEffect implements TrackerSideEffect", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDIyMDYxMQ=="}, "originalCommit": {"oid": "9d5336e61cdd08cc580c3dafb9a94fb514f126cc"}, "originalPosition": 44}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5OTE2MDI2OnYy", "diffSide": "RIGHT", "path": "dhis-2/dhis-services/dhis-service-tracker/src/test/java/org/hisp/dhis/tracker/bundle/TrackerSideEffectHandlerServiceTest.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QwNjo0MToxM1rOG6t0Qw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QwODowNToyOFrOHAAiSw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDIyMTI1MQ==", "bodyText": "10 seconds is a bit too long for a test? Have you considered lowering to 1 or 2 secs?", "url": "https://github.com/dhis2/dhis2-core/pull/5833#discussion_r464221251", "createdAt": "2020-08-03T06:41:13Z", "author": {"login": "luciano-fiandesio"}, "path": "dhis-2/dhis-services/dhis-service-tracker/src/test/java/org/hisp/dhis/tracker/bundle/TrackerSideEffectHandlerServiceTest.java", "diffHunk": "@@ -129,6 +140,20 @@ public void testRuleEngineSideEffectHandlerService()\n \n         TrackerBundleReport report = trackerBundleService.commit( trackerBundles.get( 0 ) );\n \n+        List<TrackerSideEffectDataBundle> sideEffectDataBundles = ListUtils.union(\n+            report.getTypeReportMap().get( TrackerType.ENROLLMENT ).getSideEffectDataBundles(),\n+            report.getTypeReportMap().get( TrackerType.EVENT ).getSideEffectDataBundles() );\n+\n+        trackerBundleService.handleTrackerSideEffects( sideEffectDataBundles );\n+\n         assertEquals( report.getStatus(), TrackerStatus.OK );\n+\n+        await().atMost( 10, TimeUnit.SECONDS ).until( () -> manager.getAll( ProgramNotificationInstance.class ).size() > 0 );", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9d5336e61cdd08cc580c3dafb9a94fb514f126cc"}, "originalPosition": 93}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTY5NTUyNw==", "bodyText": "set it to 2", "url": "https://github.com/dhis2/dhis2-core/pull/5833#discussion_r465695527", "createdAt": "2020-08-05T12:39:06Z", "author": {"login": "zubaira"}, "path": "dhis-2/dhis-services/dhis-service-tracker/src/test/java/org/hisp/dhis/tracker/bundle/TrackerSideEffectHandlerServiceTest.java", "diffHunk": "@@ -129,6 +140,20 @@ public void testRuleEngineSideEffectHandlerService()\n \n         TrackerBundleReport report = trackerBundleService.commit( trackerBundles.get( 0 ) );\n \n+        List<TrackerSideEffectDataBundle> sideEffectDataBundles = ListUtils.union(\n+            report.getTypeReportMap().get( TrackerType.ENROLLMENT ).getSideEffectDataBundles(),\n+            report.getTypeReportMap().get( TrackerType.EVENT ).getSideEffectDataBundles() );\n+\n+        trackerBundleService.handleTrackerSideEffects( sideEffectDataBundles );\n+\n         assertEquals( report.getStatus(), TrackerStatus.OK );\n+\n+        await().atMost( 10, TimeUnit.SECONDS ).until( () -> manager.getAll( ProgramNotificationInstance.class ).size() > 0 );", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDIyMTI1MQ=="}, "originalCommit": {"oid": "9d5336e61cdd08cc580c3dafb9a94fb514f126cc"}, "originalPosition": 93}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTc2MzAwNw==", "bodyText": "2 also sounds a bit high :-) Do we need this? I.e. is there a way to mock or handle it differently?", "url": "https://github.com/dhis2/dhis2-core/pull/5833#discussion_r469763007", "createdAt": "2020-08-13T07:51:20Z", "author": {"login": "larshelge"}, "path": "dhis-2/dhis-services/dhis-service-tracker/src/test/java/org/hisp/dhis/tracker/bundle/TrackerSideEffectHandlerServiceTest.java", "diffHunk": "@@ -129,6 +140,20 @@ public void testRuleEngineSideEffectHandlerService()\n \n         TrackerBundleReport report = trackerBundleService.commit( trackerBundles.get( 0 ) );\n \n+        List<TrackerSideEffectDataBundle> sideEffectDataBundles = ListUtils.union(\n+            report.getTypeReportMap().get( TrackerType.ENROLLMENT ).getSideEffectDataBundles(),\n+            report.getTypeReportMap().get( TrackerType.EVENT ).getSideEffectDataBundles() );\n+\n+        trackerBundleService.handleTrackerSideEffects( sideEffectDataBundles );\n+\n         assertEquals( report.getStatus(), TrackerStatus.OK );\n+\n+        await().atMost( 10, TimeUnit.SECONDS ).until( () -> manager.getAll( ProgramNotificationInstance.class ).size() > 0 );", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDIyMTI1MQ=="}, "originalCommit": {"oid": "9d5336e61cdd08cc580c3dafb9a94fb514f126cc"}, "originalPosition": 93}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTc3MDgyNw==", "bodyText": "Side effects are handled asynchronously. So this is one of the ways to test thread functionality.", "url": "https://github.com/dhis2/dhis2-core/pull/5833#discussion_r469770827", "createdAt": "2020-08-13T08:05:28Z", "author": {"login": "zubaira"}, "path": "dhis-2/dhis-services/dhis-service-tracker/src/test/java/org/hisp/dhis/tracker/bundle/TrackerSideEffectHandlerServiceTest.java", "diffHunk": "@@ -129,6 +140,20 @@ public void testRuleEngineSideEffectHandlerService()\n \n         TrackerBundleReport report = trackerBundleService.commit( trackerBundles.get( 0 ) );\n \n+        List<TrackerSideEffectDataBundle> sideEffectDataBundles = ListUtils.union(\n+            report.getTypeReportMap().get( TrackerType.ENROLLMENT ).getSideEffectDataBundles(),\n+            report.getTypeReportMap().get( TrackerType.EVENT ).getSideEffectDataBundles() );\n+\n+        trackerBundleService.handleTrackerSideEffects( sideEffectDataBundles );\n+\n         assertEquals( report.getStatus(), TrackerStatus.OK );\n+\n+        await().atMost( 10, TimeUnit.SECONDS ).until( () -> manager.getAll( ProgramNotificationInstance.class ).size() > 0 );", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDIyMTI1MQ=="}, "originalCommit": {"oid": "9d5336e61cdd08cc580c3dafb9a94fb514f126cc"}, "originalPosition": 93}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3952, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}