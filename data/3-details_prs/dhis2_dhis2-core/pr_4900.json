{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc3MjQ4NjQ0", "number": 4900, "title": "feat: [DHIS2-8326] Run program rule engine in importer for notification rules ", "bodyText": "", "createdAt": "2020-02-19T16:09:51Z", "url": "https://github.com/dhis2/dhis2-core/pull/4900", "merged": true, "mergeCommit": {"oid": "24e48a496b4d7db29ad2637c394100814b150291"}, "closed": true, "closedAt": "2020-02-24T09:41:19Z", "author": {"login": "enricocolasante"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcF40-ZgH2gAyMzc3MjQ4NjQ0OmE5MTBiZmEwZTU0NWYzZWJlMjQ3NDM2ZDdmZDcyMzcxYzE4ZThlYTU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcHaRwsgFqTM2MzI1ODk4OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "a910bfa0e545f3ebe247436d7fd72371c18e8ea5", "author": {"user": {"login": "enricocolasante", "name": "Enrico Colasante"}}, "url": "https://github.com/dhis2/dhis2-core/commit/a910bfa0e545f3ebe247436d7fd72371c18e8ea5", "committedDate": "2020-02-19T16:08:15Z", "message": "Run program rule engine in importer for notification rules"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYxNDY2NTI3", "url": "https://github.com/dhis2/dhis2-core/pull/4900#pullrequestreview-361466527", "createdAt": "2020-02-19T21:54:49Z", "commit": {"oid": "a910bfa0e545f3ebe247436d7fd72371c18e8ea5"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYxNjQxODUw", "url": "https://github.com/dhis2/dhis2-core/pull/4900#pullrequestreview-361641850", "createdAt": "2020-02-20T05:31:26Z", "commit": {"oid": "a910bfa0e545f3ebe247436d7fd72371c18e8ea5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQwNTozMToyNlrOFsFbqA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQwNTozMToyNlrOFsFbqA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTc3MDY2NA==", "bodyText": "In legacy importer, this was handled by async spring event. But this is synchronous and it will probably slow down the new tracker importer unless we make ProgramRuleEngine more performant.", "url": "https://github.com/dhis2/dhis2-core/pull/4900#discussion_r381770664", "createdAt": "2020-02-20T05:31:26Z", "author": {"login": "zubaira"}, "path": "dhis-2/dhis-services/dhis-service-tracker/src/main/java/org/hisp/dhis/tracker/bundle/DefaultTrackerBundleService.java", "diffHunk": "@@ -116,6 +124,13 @@ public DefaultTrackerBundleService(\n         TrackerPreheat preheat = trackerPreheatService.preheat( preheatParams );\n         trackerBundle.setPreheat( preheat );\n \n+        Map<Enrollment, List<RuleEffect>> enrollmentRuleEffects = trackerProgramRuleService\n+            .calculateEnrollmentRuleEffects( trackerBundle );", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a910bfa0e545f3ebe247436d7fd72371c18e8ea5"}, "originalPosition": 53}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bd677e31ba4d4ab150f8b8fc1113d28174156a3c", "author": {"user": {"login": "enricocolasante", "name": "Enrico Colasante"}}, "url": "https://github.com/dhis2/dhis2-core/commit/bd677e31ba4d4ab150f8b8fc1113d28174156a3c", "committedDate": "2020-02-20T13:16:06Z", "message": "Merge remote-tracking branch 'origin/master' into DHIS2-8326"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bd81b90aa8f416c1d425f13435471efd80f29c18", "author": {"user": {"login": "enricocolasante", "name": "Enrico Colasante"}}, "url": "https://github.com/dhis2/dhis2-core/commit/bd81b90aa8f416c1d425f13435471efd80f29c18", "committedDate": "2020-02-20T15:10:12Z", "message": "Add test calling rule engine for events"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "354f7d0f935116fde682712f79413b0277bdb0e9", "author": {"user": {"login": "enricocolasante", "name": "Enrico Colasante"}}, "url": "https://github.com/dhis2/dhis2-core/commit/354f7d0f935116fde682712f79413b0277bdb0e9", "committedDate": "2020-02-20T15:48:55Z", "message": "Fix sonar code smells"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4bae1182499fdd0d9a89ebd2b95a9131ca7214b8", "author": {"user": {"login": "enricocolasante", "name": "Enrico Colasante"}}, "url": "https://github.com/dhis2/dhis2-core/commit/4bae1182499fdd0d9a89ebd2b95a9131ca7214b8", "committedDate": "2020-02-21T09:09:50Z", "message": "Merge remote-tracking branch 'origin/master' into DHIS2-8326"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "30e9b254ac1c1281e446fff66ea66e9247b0941a", "author": {"user": {"login": "enricocolasante", "name": "Enrico Colasante"}}, "url": "https://github.com/dhis2/dhis2-core/commit/30e9b254ac1c1281e446fff66ea66e9247b0941a", "committedDate": "2020-02-21T13:23:48Z", "message": "Fix antlr grammar and make the project independent from dhis"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d046cca256912a43dafca96f0ef8268e6537b11a", "author": {"user": {"login": "enricocolasante", "name": "Enrico Colasante"}}, "url": "https://github.com/dhis2/dhis2-core/commit/d046cca256912a43dafca96f0ef8268e6537b11a", "committedDate": "2020-02-24T07:53:46Z", "message": "Merge remote-tracking branch 'origin/master' into DHIS2-8326"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYzMjI1ODkw", "url": "https://github.com/dhis2/dhis2-core/pull/4900#pullrequestreview-363225890", "createdAt": "2020-02-24T08:39:00Z", "commit": {"oid": "d046cca256912a43dafca96f0ef8268e6537b11a"}, "state": "APPROVED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQwODozOTowMFrOFtYjzg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQwODo1MDo0NVrOFtY1Zw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzEzMjYyMg==", "bodyText": "The interface now uses objects and long, which is a bit confusing. I normally favour primary keys as function parameters: when using Hibernate there is no overhead anyway, because the object is normally in the first level cache, so the additional lookup is free.", "url": "https://github.com/dhis2/dhis2-core/pull/4900#discussion_r383132622", "createdAt": "2020-02-24T08:39:00Z", "author": {"login": "luciano-fiandesio"}, "path": "dhis-2/dhis-api/src/main/java/org/hisp/dhis/programrule/engine/ProgramRuleEngineService.java", "diffHunk": "@@ -37,7 +39,11 @@\n  */\n public interface ProgramRuleEngineService\n {\n-    List<RuleEffect> evaluateEnrollment( long enrollment );\n+    List<RuleEffect> evaluateEnrollment( ProgramInstance enrollment );", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d046cca256912a43dafca96f0ef8268e6537b11a"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzEzNTQ1Mw==", "bodyText": "Hi, if the code is no longer async, do we need to keep the @TransactionalEventListener annotation on ProgramRuleEngineListener?", "url": "https://github.com/dhis2/dhis2-core/pull/4900#discussion_r383135453", "createdAt": "2020-02-24T08:46:18Z", "author": {"login": "luciano-fiandesio"}, "path": "dhis-2/dhis-services/dhis-service-tracker/src/main/java/org/hisp/dhis/tracker/bundle/DefaultTrackerBundleService.java", "diffHunk": "@@ -116,6 +124,13 @@ public DefaultTrackerBundleService(\n         TrackerPreheat preheat = trackerPreheatService.preheat( preheatParams );\n         trackerBundle.setPreheat( preheat );\n \n+        Map<Enrollment, List<RuleEffect>> enrollmentRuleEffects = trackerProgramRuleService\n+            .calculateEnrollmentRuleEffects( trackerBundle );", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTc3MDY2NA=="}, "originalCommit": {"oid": "a910bfa0e545f3ebe247436d7fd72371c18e8ea5"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzEzNzAzMg==", "bodyText": "Just make sure when using parallelStream that the objects the system is iterating over do not need to lazily access the db. Proxies need a Hibernate Session to access the db lazily, but Session is not thread-safe and you'll end up with very weird, random errors.", "url": "https://github.com/dhis2/dhis2-core/pull/4900#discussion_r383137032", "createdAt": "2020-02-24T08:50:30Z", "author": {"login": "luciano-fiandesio"}, "path": "dhis-2/dhis-services/dhis-service-tracker/src/main/java/org/hisp/dhis/tracker/DefaultTrackerProgramRuleService.java", "diffHunk": "@@ -0,0 +1,105 @@\n+package org.hisp.dhis.tracker;\n+\n+/*\n+ * Copyright (c) 2004-2020, University of Oslo\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ * Redistributions of source code must retain the above copyright notice, this\n+ * list of conditions and the following disclaimer.\n+ *\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following disclaimer in the documentation\n+ * and/or other materials provided with the distribution.\n+ * Neither the name of the HISP project nor the names of its contributors may\n+ * be used to endorse or promote products derived from this software without\n+ * specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n+ * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+\n+import lombok.extern.slf4j.Slf4j;\n+import org.hisp.dhis.program.ProgramInstance;\n+import org.hisp.dhis.program.ProgramStageInstance;\n+import org.hisp.dhis.programrule.engine.DefaultProgramRuleEngineService;\n+import org.hisp.dhis.rules.models.RuleEffect;\n+import org.hisp.dhis.tracker.bundle.TrackerBundle;\n+import org.hisp.dhis.tracker.converter.TrackerConverterService;\n+import org.hisp.dhis.tracker.domain.Enrollment;\n+import org.hisp.dhis.tracker.domain.Event;\n+import org.hisp.dhis.tracker.preheat.TrackerPreheat;\n+import org.springframework.stereotype.Service;\n+\n+import java.util.List;\n+import java.util.Map;\n+import java.util.function.Function;\n+import java.util.stream.Collectors;\n+\n+/**\n+ * @author Enrico Colasante\n+ */\n+@Slf4j\n+@Service\n+public class DefaultTrackerProgramRuleService\n+    implements TrackerProgramRuleService\n+{\n+    private final DefaultProgramRuleEngineService programRuleEngineService;\n+\n+    private final TrackerConverterService<Enrollment, ProgramInstance> enrollmentTrackerConverterService;\n+\n+    private final TrackerConverterService<Event, ProgramStageInstance> eventTrackerConverterService;\n+\n+    public DefaultTrackerProgramRuleService( DefaultProgramRuleEngineService programRuleEngineService,\n+        TrackerConverterService<Enrollment, ProgramInstance> enrollmentTrackerConverterService,\n+        TrackerConverterService<Event, ProgramStageInstance> eventTrackerConverterService )\n+    {\n+        this.programRuleEngineService = programRuleEngineService;\n+        this.enrollmentTrackerConverterService = enrollmentTrackerConverterService;\n+        this.eventTrackerConverterService = eventTrackerConverterService;\n+    }\n+\n+    @Override\n+    public Map<Enrollment, List<RuleEffect>> calculateEnrollmentRuleEffects( TrackerBundle trackerBundle )\n+    {\n+        return getProgramRulesForEnrollments( trackerBundle.getEnrollments(), trackerBundle.getPreheat() );\n+    }\n+\n+    @Override\n+    public Map<Event, List<RuleEffect>> calculateEventRuleEffects( TrackerBundle trackerBundle )\n+    {\n+        return getProgramRulesForEvents( trackerBundle.getEvents(), trackerBundle.getPreheat() );\n+    }\n+\n+    private Map<Enrollment, List<RuleEffect>> getProgramRulesForEnrollments( List<Enrollment> enrollments,\n+        TrackerPreheat preheat )\n+    {\n+        return enrollments\n+            .parallelStream()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d046cca256912a43dafca96f0ef8268e6537b11a"}, "originalPosition": 87}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzEzNzEyNw==", "bodyText": "Javadoc", "url": "https://github.com/dhis2/dhis2-core/pull/4900#discussion_r383137127", "createdAt": "2020-02-24T08:50:45Z", "author": {"login": "luciano-fiandesio"}, "path": "dhis-2/dhis-services/dhis-service-tracker/src/main/java/org/hisp/dhis/tracker/TrackerProgramRuleService.java", "diffHunk": "@@ -0,0 +1,44 @@\n+package org.hisp.dhis.tracker;\n+\n+/*\n+ * Copyright (c) 2004-2020, University of Oslo\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ * Redistributions of source code must retain the above copyright notice, this\n+ * list of conditions and the following disclaimer.\n+ *\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following disclaimer in the documentation\n+ * and/or other materials provided with the distribution.\n+ * Neither the name of the HISP project nor the names of its contributors may\n+ * be used to endorse or promote products derived from this software without\n+ * specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n+ * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+\n+import org.hisp.dhis.rules.models.RuleEffect;\n+import org.hisp.dhis.tracker.bundle.TrackerBundle;\n+import org.hisp.dhis.tracker.domain.Enrollment;\n+import org.hisp.dhis.tracker.domain.Event;\n+\n+import java.util.List;\n+import java.util.Map;\n+\n+public interface TrackerProgramRuleService\n+{\n+    Map<Enrollment, List<RuleEffect>> calculateEnrollmentRuleEffects( TrackerBundle trackerBundle );", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d046cca256912a43dafca96f0ef8268e6537b11a"}, "originalPosition": 41}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYzMjU4OTg4", "url": "https://github.com/dhis2/dhis2-core/pull/4900#pullrequestreview-363258988", "createdAt": "2020-02-24T09:40:29Z", "commit": {"oid": "d046cca256912a43dafca96f0ef8268e6537b11a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2897, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}