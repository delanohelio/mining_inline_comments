{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTEyMTk5NDQ3", "number": 6521, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxNjo0NTowOFrOEzY0KQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxNzozNzoxMVrOEzaLYQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyMzE5NDAxOnYy", "diffSide": "RIGHT", "path": "dhis-2/dhis-services/dhis-service-dxf2/src/main/java/org/hisp/dhis/dxf2/events/event/JdbcEventStore.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxNjo0NTowOFrOHqlBjA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxNzowMjo1MlrOHqlzSA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDQwODg0NA==", "bodyText": "Move to EventUtils class as static method", "url": "https://github.com/dhis2/dhis2-core/pull/6521#discussion_r514408844", "createdAt": "2020-10-29T16:45:08Z", "author": {"login": "luciano-fiandesio"}, "path": "dhis-2/dhis-services/dhis-service-dxf2/src/main/java/org/hisp/dhis/dxf2/events/event/JdbcEventStore.java", "diffHunk": "@@ -1653,24 +1688,33 @@ private void bindEventParamsForUpdate( PreparedStatement ps, ProgramStageInstanc\n         ps.setTimestamp( 8, JdbcEventSupport.toTimestamp( new Date() ) );\n         ps.setLong( 9, programStageInstance.getAttributeOptionCombo().getId() );\n         ps.setString( 10, programStageInstance.getStoredBy() );\n-        ps.setString( 11, programStageInstance.getCompletedBy() );\n-        ps.setBoolean( 12, programStageInstance.isDeleted() );\n-        ps.setString( 13, programStageInstance.getCode() );\n-        ps.setTimestamp( 14, JdbcEventSupport.toTimestamp( programStageInstance.getCreatedAtClient() ) );\n-        ps.setTimestamp( 15, JdbcEventSupport.toTimestamp( programStageInstance.getLastUpdatedAtClient() ) );\n-        ps.setObject( 16, JdbcEventSupport.toGeometry( programStageInstance.getGeometry() ) );\n+        ps.setObject( 11, userInfoToJson( programStageInstance.getLastUpdatedByUserInfo() ) );\n+        ps.setString( 12, programStageInstance.getCompletedBy() );\n+        ps.setBoolean( 13, programStageInstance.isDeleted() );\n+        ps.setString( 14, programStageInstance.getCode() );\n+        ps.setTimestamp( 15, JdbcEventSupport.toTimestamp( programStageInstance.getCreatedAtClient() ) );\n+        ps.setTimestamp( 16, JdbcEventSupport.toTimestamp( programStageInstance.getLastUpdatedAtClient() ) );\n+        ps.setObject( 17, JdbcEventSupport.toGeometry( programStageInstance.getGeometry() ) );\n \n         if ( programStageInstance.getAssignedUser() != null )\n         {\n-            ps.setLong( 17, programStageInstance.getAssignedUser().getId() );\n+            ps.setLong( 18, programStageInstance.getAssignedUser().getId() );\n         }\n         else\n         {\n-            ps.setObject( 17, null );\n+            ps.setObject( 18, null );\n         }\n \n-        ps.setObject( 18, eventDataValuesToJson( programStageInstance.getEventDataValues(), this.jsonMapper ) );\n-        ps.setString( 19, programStageInstance.getUid() );\n+        ps.setObject( 19, eventDataValuesToJson( programStageInstance.getEventDataValues(), this.jsonMapper ) );\n+        ps.setString( 20, programStageInstance.getUid() );\n+    }\n+\n+    @SneakyThrows\n+    private PGobject userInfoToJson(ProgramStageInstanceUserInfo userInfo) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fd2d1027f990dafe8cc5e034f359a07e2209c74c"}, "originalPosition": 236}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDQyMTU3Ng==", "bodyText": "done, thank you", "url": "https://github.com/dhis2/dhis2-core/pull/6521#discussion_r514421576", "createdAt": "2020-10-29T17:02:52Z", "author": {"login": "gnespolino"}, "path": "dhis-2/dhis-services/dhis-service-dxf2/src/main/java/org/hisp/dhis/dxf2/events/event/JdbcEventStore.java", "diffHunk": "@@ -1653,24 +1688,33 @@ private void bindEventParamsForUpdate( PreparedStatement ps, ProgramStageInstanc\n         ps.setTimestamp( 8, JdbcEventSupport.toTimestamp( new Date() ) );\n         ps.setLong( 9, programStageInstance.getAttributeOptionCombo().getId() );\n         ps.setString( 10, programStageInstance.getStoredBy() );\n-        ps.setString( 11, programStageInstance.getCompletedBy() );\n-        ps.setBoolean( 12, programStageInstance.isDeleted() );\n-        ps.setString( 13, programStageInstance.getCode() );\n-        ps.setTimestamp( 14, JdbcEventSupport.toTimestamp( programStageInstance.getCreatedAtClient() ) );\n-        ps.setTimestamp( 15, JdbcEventSupport.toTimestamp( programStageInstance.getLastUpdatedAtClient() ) );\n-        ps.setObject( 16, JdbcEventSupport.toGeometry( programStageInstance.getGeometry() ) );\n+        ps.setObject( 11, userInfoToJson( programStageInstance.getLastUpdatedByUserInfo() ) );\n+        ps.setString( 12, programStageInstance.getCompletedBy() );\n+        ps.setBoolean( 13, programStageInstance.isDeleted() );\n+        ps.setString( 14, programStageInstance.getCode() );\n+        ps.setTimestamp( 15, JdbcEventSupport.toTimestamp( programStageInstance.getCreatedAtClient() ) );\n+        ps.setTimestamp( 16, JdbcEventSupport.toTimestamp( programStageInstance.getLastUpdatedAtClient() ) );\n+        ps.setObject( 17, JdbcEventSupport.toGeometry( programStageInstance.getGeometry() ) );\n \n         if ( programStageInstance.getAssignedUser() != null )\n         {\n-            ps.setLong( 17, programStageInstance.getAssignedUser().getId() );\n+            ps.setLong( 18, programStageInstance.getAssignedUser().getId() );\n         }\n         else\n         {\n-            ps.setObject( 17, null );\n+            ps.setObject( 18, null );\n         }\n \n-        ps.setObject( 18, eventDataValuesToJson( programStageInstance.getEventDataValues(), this.jsonMapper ) );\n-        ps.setString( 19, programStageInstance.getUid() );\n+        ps.setObject( 19, eventDataValuesToJson( programStageInstance.getEventDataValues(), this.jsonMapper ) );\n+        ps.setString( 20, programStageInstance.getUid() );\n+    }\n+\n+    @SneakyThrows\n+    private PGobject userInfoToJson(ProgramStageInstanceUserInfo userInfo) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDQwODg0NA=="}, "originalCommit": {"oid": "fd2d1027f990dafe8cc5e034f359a07e2209c74c"}, "originalPosition": 236}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyMzE5NDc4OnYy", "diffSide": "RIGHT", "path": "dhis-2/dhis-services/dhis-service-dxf2/src/main/java/org/hisp/dhis/dxf2/events/event/JdbcEventStore.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxNjo0NToxN1rOHqlCAw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQwODo1MTo1OVrOHrGA1Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDQwODk2Mw==", "bodyText": "Move to EventUtils class as static method", "url": "https://github.com/dhis2/dhis2-core/pull/6521#discussion_r514408963", "createdAt": "2020-10-29T16:45:17Z", "author": {"login": "luciano-fiandesio"}, "path": "dhis-2/dhis-services/dhis-service-dxf2/src/main/java/org/hisp/dhis/dxf2/events/event/JdbcEventStore.java", "diffHunk": "@@ -439,6 +451,23 @@ public JdbcEventStore( StatementBuilder statementBuilder, JdbcTemplate jdbcTempl\n         return events;\n     }\n \n+    private ProgramStageInstanceUserInfo jsonToUserInfo( String userInfoAsString )", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fd2d1027f990dafe8cc5e034f359a07e2209c74c"}, "originalPosition": 119}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDk0OTMzMw==", "bodyText": "Done, thank you", "url": "https://github.com/dhis2/dhis2-core/pull/6521#discussion_r514949333", "createdAt": "2020-10-30T08:51:59Z", "author": {"login": "gnespolino"}, "path": "dhis-2/dhis-services/dhis-service-dxf2/src/main/java/org/hisp/dhis/dxf2/events/event/JdbcEventStore.java", "diffHunk": "@@ -439,6 +451,23 @@ public JdbcEventStore( StatementBuilder statementBuilder, JdbcTemplate jdbcTempl\n         return events;\n     }\n \n+    private ProgramStageInstanceUserInfo jsonToUserInfo( String userInfoAsString )", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDQwODk2Mw=="}, "originalCommit": {"oid": "fd2d1027f990dafe8cc5e034f359a07e2209c74c"}, "originalPosition": 119}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyMzQxNzI5OnYy", "diffSide": "RIGHT", "path": "dhis-2/dhis-services/dhis-service-dxf2/src/main/java/org/hisp/dhis/dxf2/events/event/JdbcEventStore.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxNzozNzoxMVrOHqnONg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQwODo1MTozM1rOHrF_6A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDQ0NDg1NA==", "bodyText": "Could we use named parameters instead of index/? based params. When there is so many variables it's very easy to mix up when it's index based...", "url": "https://github.com/dhis2/dhis2-core/pull/6521#discussion_r514444854", "createdAt": "2020-10-29T17:37:11Z", "author": {"login": "netroms"}, "path": "dhis-2/dhis-services/dhis-service-dxf2/src/main/java/org/hisp/dhis/dxf2/events/event/JdbcEventStore.java", "diffHunk": "@@ -174,16 +183,18 @@\n         \"lastupdated, \" +               // 10\n         \"attributeoptioncomboid, \" +    // 11\n         \"storedby, \" +                  // 12\n-        \"completedby, \" +               // 13\n-        \"deleted, \" +                   // 14\n-        \"code, \" +                      // 15\n-        \"createdatclient, \" +           // 16\n-        \"lastupdatedatclient, \" +       // 17\n-        \"geometry, \" +                  // 18\n-        \"assigneduserid, \" +            // 19\n-        \"eventdatavalues) \" +           // 20\n+        \"createdbyuserinfo, \" +         // 13\n+        \"lastupdatedbyuserinfo, \" +     // 14\n+        \"completedby, \" +               // 15\n+        \"deleted, \" +                   // 16\n+        \"code, \" +                      // 17\n+        \"createdatclient, \" +           // 18\n+        \"lastupdatedatclient, \" +       // 19\n+        \"geometry, \" +                  // 20\n+        \"assigneduserid, \" +            // 21\n+        \"eventdatavalues) \" +           // 22\n         // @formatter:on\n-        \"values ( nextval('programstageinstance_sequence'), ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? )\";\n+        \"values ( nextval('programstageinstance_sequence'), ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? )\";\n \n     private final static String UPDATE_EVENT_SQL = \"update programstageinstance set \" +", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff2434b81ec0a5b08de6bcefb0688f813b3ced32"}, "originalPosition": 86}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDk0OTA5Ng==", "bodyText": "I agree. I'm going to create a technical ticket to use constants from EventQuery instead of using hard coded column names in the code, so replacing sql parameters with named one could be included in that ticket.", "url": "https://github.com/dhis2/dhis2-core/pull/6521#discussion_r514949096", "createdAt": "2020-10-30T08:51:33Z", "author": {"login": "gnespolino"}, "path": "dhis-2/dhis-services/dhis-service-dxf2/src/main/java/org/hisp/dhis/dxf2/events/event/JdbcEventStore.java", "diffHunk": "@@ -174,16 +183,18 @@\n         \"lastupdated, \" +               // 10\n         \"attributeoptioncomboid, \" +    // 11\n         \"storedby, \" +                  // 12\n-        \"completedby, \" +               // 13\n-        \"deleted, \" +                   // 14\n-        \"code, \" +                      // 15\n-        \"createdatclient, \" +           // 16\n-        \"lastupdatedatclient, \" +       // 17\n-        \"geometry, \" +                  // 18\n-        \"assigneduserid, \" +            // 19\n-        \"eventdatavalues) \" +           // 20\n+        \"createdbyuserinfo, \" +         // 13\n+        \"lastupdatedbyuserinfo, \" +     // 14\n+        \"completedby, \" +               // 15\n+        \"deleted, \" +                   // 16\n+        \"code, \" +                      // 17\n+        \"createdatclient, \" +           // 18\n+        \"lastupdatedatclient, \" +       // 19\n+        \"geometry, \" +                  // 20\n+        \"assigneduserid, \" +            // 21\n+        \"eventdatavalues) \" +           // 22\n         // @formatter:on\n-        \"values ( nextval('programstageinstance_sequence'), ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? )\";\n+        \"values ( nextval('programstageinstance_sequence'), ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? )\";\n \n     private final static String UPDATE_EVENT_SQL = \"update programstageinstance set \" +", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDQ0NDg1NA=="}, "originalCommit": {"oid": "ff2434b81ec0a5b08de6bcefb0688f813b3ced32"}, "originalPosition": 86}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3784, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}