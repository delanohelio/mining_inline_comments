{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY2MjQ4NjQx", "number": 3060, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQwNzo1OTozN1rOEXg_wg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxNjowNToyMlrOEknIVQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzMDkzMzE0OnYy", "diffSide": "RIGHT", "path": "extensions/wikidata/src/org/openrefine/wikidata/qa/SchemaPropertyFetcher.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQwNzo1OTozN1rOG_WKzg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQwNzo1OTozN1rOG_WKzg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTA3NjY4Ng==", "bodyText": "Here, you are adding new snaks to the list of qualifiers of the expression (statementExpr.getQualifiers()). This will modify the list of qualifiers in the schema. This is my fault, I should have wrapped the returned lists with Collections.unmodifiableList() in getters. Opening an issue about it: #3064.\nOn your side, the solution should be to create a new list: new ArrayList<>(statementExpr.getQualifiers()) instead of just statementExpr.getQualifiers().", "url": "https://github.com/OpenRefine/OpenRefine/pull/3060#discussion_r469076686", "createdAt": "2020-08-12T07:59:37Z", "author": {"login": "wetneb"}, "path": "extensions/wikidata/src/org/openrefine/wikidata/qa/SchemaPropertyFetcher.java", "diffHunk": "@@ -0,0 +1,51 @@\n+package org.openrefine.wikidata.qa;\n+\n+import org.openrefine.wikidata.schema.WbExpression;\n+import org.openrefine.wikidata.schema.WbItemDocumentExpr;\n+import org.openrefine.wikidata.schema.WbPropConstant;\n+import org.openrefine.wikidata.schema.WbReferenceExpr;\n+import org.openrefine.wikidata.schema.WbSnakExpr;\n+import org.openrefine.wikidata.schema.WbStatementExpr;\n+import org.openrefine.wikidata.schema.WbStatementGroupExpr;\n+import org.openrefine.wikidata.schema.WikibaseSchema;\n+import org.wikidata.wdtk.datamodel.helpers.Datamodel;\n+import org.wikidata.wdtk.datamodel.interfaces.PropertyIdValue;\n+\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Set;\n+\n+public class SchemaPropertyFetcher {\n+\n+    public Set<PropertyIdValue> getAllProperties(WikibaseSchema schema) {\n+        Set<PropertyIdValue> properties = new HashSet<>();\n+        List<WbItemDocumentExpr> itemDocumentExprs = schema.getItemDocumentExpressions();\n+        for (WbItemDocumentExpr itemDocumentExpr : itemDocumentExprs) {\n+            List<WbStatementGroupExpr> statementGroups = itemDocumentExpr.getStatementGroups();\n+            for(WbStatementGroupExpr statementGroup : statementGroups) {\n+                WbExpression<? extends PropertyIdValue> statementGroupProperty = statementGroup.getProperty();\n+                if (statementGroupProperty instanceof WbPropConstant) {\n+                    properties.add(Datamodel.makeWikidataPropertyIdValue(((WbPropConstant) statementGroupProperty).getPid()));\n+                }\n+                List<WbStatementExpr> statementExprs = statementGroup.getStatements();\n+                for(WbStatementExpr statementExpr : statementExprs) {\n+                    List<WbSnakExpr> snakExprs = statementExpr.getQualifiers();\n+                    List<WbReferenceExpr> referenceExprs = statementExpr.getReferences();\n+                    for (WbReferenceExpr referenceExpr : referenceExprs) {\n+                        snakExprs.addAll(referenceExpr.getSnaks());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "551da2c5ac34e7315d30d3278a2a44de4b8ca442"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2ODI1MzAxOnYy", "diffSide": "RIGHT", "path": "extensions/wikidata/tests/src/org/openrefine/wikidata/qa/SchemaPropertyFetcherTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxNjowNToyMlrOHTp0Nw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxNjowNToyMlrOHTp0Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDM3MDEwMw==", "bodyText": "This test class should be renamed accordingly (SchemaPropertyExtractorTest) and it should be relatively easy to add a small test in it. You could load the schema from a file (like in PreviewWikibaseSchemaCommandTest), extract the properties appearing in it, and check that against the expected result.", "url": "https://github.com/OpenRefine/OpenRefine/pull/3060#discussion_r490370103", "createdAt": "2020-09-17T16:05:22Z", "author": {"login": "wetneb"}, "path": "extensions/wikidata/tests/src/org/openrefine/wikidata/qa/SchemaPropertyFetcherTest.java", "diffHunk": "@@ -1,4 +1,5 @@\n package org.openrefine.wikidata.qa;\n \n public class SchemaPropertyFetcherTest {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "50f3f4605b843f3123ef435143dbc9174df65b9d"}, "originalPosition": 3}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2600, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}