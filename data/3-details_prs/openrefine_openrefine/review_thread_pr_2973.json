{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU0NzI4MjQ2", "number": 2973, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQwMjozMzozOVrOERraCw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQwMjozODoxNlrOERrcVw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2OTcyNDI3OnYy", "diffSide": "RIGHT", "path": "main/webapp/modules/core/scripts/views/data-table/cell-ui.js", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQwMjozMzozOVrOG2hh_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxOToxODo0MVrOG3wH6w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTgyNTY2Mw==", "bodyText": "I haven't investigated in detail, so I may be completely off base, but is there an opportunity to use a single global function here which knows how to find the relevant element and visible/hidden status based on information from the event so that we don't have to create N*2 functions?", "url": "https://github.com/OpenRefine/OpenRefine/pull/2973#discussion_r459825663", "createdAt": "2020-07-24T02:33:39Z", "author": {"login": "tfmorris"}, "path": "main/webapp/modules/core/scripts/views/data-table/cell-ui.js", "diffHunk": "@@ -62,43 +62,50 @@ DataTableCellUI.prototype._render = function() {\n   var self = this;\n   var cell = this._cell;\n \n-  var divContent = $('<div/>')\n-  .addClass(\"data-table-cell-content\");\n+  var divContent = document.createElement('div');\n+  divContent.className = 'data-table-cell-content';\n \n-  var editLink = $('<a href=\"javascript:{}\">&nbsp;</a>')\n-  .addClass(\"data-table-cell-edit\")\n-  .attr(\"title\", $.i18n('core-views/edit-cell'))\n-  .appendTo(divContent)\n-  .click(function() { self._startEdit(this); });\n+  var editLink = document.createElement('a');\n+  editLink.className = 'data-table-cell-edit';\n+  editLink.setAttribute('title', $.i18n('core-views/edit-cell'));\n+  editLink.href = 'javascript:{}';\n+  divContent.appendChild(editLink).appendChild(document.createTextNode('\\u00A0'));\n+  editLink.addEventListener('click', function() { self._startEdit(this); });\n \n   $(this._td).empty()\n   .unbind()\n-  .mouseenter(function() { editLink.css(\"visibility\", \"visible\"); })\n-  .mouseleave(function() { editLink.css(\"visibility\", \"hidden\"); });\n+  .mouseenter(function() { editLink.style.visibility = \"visible\" })", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "28272bdfccb62d884f69c8084a1a49370f254d6a"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDUzNTQ0Mw==", "bodyText": "That should be possible, I will take a look it.", "url": "https://github.com/OpenRefine/OpenRefine/pull/2973#discussion_r460535443", "createdAt": "2020-07-26T14:37:11Z", "author": {"login": "lisa761"}, "path": "main/webapp/modules/core/scripts/views/data-table/cell-ui.js", "diffHunk": "@@ -62,43 +62,50 @@ DataTableCellUI.prototype._render = function() {\n   var self = this;\n   var cell = this._cell;\n \n-  var divContent = $('<div/>')\n-  .addClass(\"data-table-cell-content\");\n+  var divContent = document.createElement('div');\n+  divContent.className = 'data-table-cell-content';\n \n-  var editLink = $('<a href=\"javascript:{}\">&nbsp;</a>')\n-  .addClass(\"data-table-cell-edit\")\n-  .attr(\"title\", $.i18n('core-views/edit-cell'))\n-  .appendTo(divContent)\n-  .click(function() { self._startEdit(this); });\n+  var editLink = document.createElement('a');\n+  editLink.className = 'data-table-cell-edit';\n+  editLink.setAttribute('title', $.i18n('core-views/edit-cell'));\n+  editLink.href = 'javascript:{}';\n+  divContent.appendChild(editLink).appendChild(document.createTextNode('\\u00A0'));\n+  editLink.addEventListener('click', function() { self._startEdit(this); });\n \n   $(this._td).empty()\n   .unbind()\n-  .mouseenter(function() { editLink.css(\"visibility\", \"visible\"); })\n-  .mouseleave(function() { editLink.css(\"visibility\", \"hidden\"); });\n+  .mouseenter(function() { editLink.style.visibility = \"visible\" })", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTgyNTY2Mw=="}, "originalCommit": {"oid": "28272bdfccb62d884f69c8084a1a49370f254d6a"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDk1MzYwMg==", "bodyText": "So I checked it, and passing arguments to an event handler is not possible unless we create a function to do it, which would make it's removal redundant. The other possible way would be to use event.currentTarget instead of passing editLink, or declaring it as a global variable. But since it's jQuery the event is a jQuery object, and we'd end up using jQuery to style the element.", "url": "https://github.com/OpenRefine/OpenRefine/pull/2973#discussion_r460953602", "createdAt": "2020-07-27T14:57:46Z", "author": {"login": "lisa761"}, "path": "main/webapp/modules/core/scripts/views/data-table/cell-ui.js", "diffHunk": "@@ -62,43 +62,50 @@ DataTableCellUI.prototype._render = function() {\n   var self = this;\n   var cell = this._cell;\n \n-  var divContent = $('<div/>')\n-  .addClass(\"data-table-cell-content\");\n+  var divContent = document.createElement('div');\n+  divContent.className = 'data-table-cell-content';\n \n-  var editLink = $('<a href=\"javascript:{}\">&nbsp;</a>')\n-  .addClass(\"data-table-cell-edit\")\n-  .attr(\"title\", $.i18n('core-views/edit-cell'))\n-  .appendTo(divContent)\n-  .click(function() { self._startEdit(this); });\n+  var editLink = document.createElement('a');\n+  editLink.className = 'data-table-cell-edit';\n+  editLink.setAttribute('title', $.i18n('core-views/edit-cell'));\n+  editLink.href = 'javascript:{}';\n+  divContent.appendChild(editLink).appendChild(document.createTextNode('\\u00A0'));\n+  editLink.addEventListener('click', function() { self._startEdit(this); });\n \n   $(this._td).empty()\n   .unbind()\n-  .mouseenter(function() { editLink.css(\"visibility\", \"visible\"); })\n-  .mouseleave(function() { editLink.css(\"visibility\", \"hidden\"); });\n+  .mouseenter(function() { editLink.style.visibility = \"visible\" })", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTgyNTY2Mw=="}, "originalCommit": {"oid": "28272bdfccb62d884f69c8084a1a49370f254d6a"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTExMzMyMw==", "bodyText": "OK, thanks for investigating. Sorry to send you on a wild goose chase!", "url": "https://github.com/OpenRefine/OpenRefine/pull/2973#discussion_r461113323", "createdAt": "2020-07-27T19:18:41Z", "author": {"login": "tfmorris"}, "path": "main/webapp/modules/core/scripts/views/data-table/cell-ui.js", "diffHunk": "@@ -62,43 +62,50 @@ DataTableCellUI.prototype._render = function() {\n   var self = this;\n   var cell = this._cell;\n \n-  var divContent = $('<div/>')\n-  .addClass(\"data-table-cell-content\");\n+  var divContent = document.createElement('div');\n+  divContent.className = 'data-table-cell-content';\n \n-  var editLink = $('<a href=\"javascript:{}\">&nbsp;</a>')\n-  .addClass(\"data-table-cell-edit\")\n-  .attr(\"title\", $.i18n('core-views/edit-cell'))\n-  .appendTo(divContent)\n-  .click(function() { self._startEdit(this); });\n+  var editLink = document.createElement('a');\n+  editLink.className = 'data-table-cell-edit';\n+  editLink.setAttribute('title', $.i18n('core-views/edit-cell'));\n+  editLink.href = 'javascript:{}';\n+  divContent.appendChild(editLink).appendChild(document.createTextNode('\\u00A0'));\n+  editLink.addEventListener('click', function() { self._startEdit(this); });\n \n   $(this._td).empty()\n   .unbind()\n-  .mouseenter(function() { editLink.css(\"visibility\", \"visible\"); })\n-  .mouseleave(function() { editLink.css(\"visibility\", \"hidden\"); });\n+  .mouseenter(function() { editLink.style.visibility = \"visible\" })", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTgyNTY2Mw=="}, "originalCommit": {"oid": "28272bdfccb62d884f69c8084a1a49370f254d6a"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2OTcyNTYzOnYy", "diffSide": "RIGHT", "path": "main/webapp/modules/core/scripts/views/data-table/cell-ui.js", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQwMjozNDo0OFrOG2hiyA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNlQxMzozOToyNlrOG3Md-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTgyNTg2NA==", "bodyText": "Is this duplication correct? (I know it has nothing to do with your change)", "url": "https://github.com/OpenRefine/OpenRefine/pull/2973#discussion_r459825864", "createdAt": "2020-07-24T02:34:48Z", "author": {"login": "tfmorris"}, "path": "main/webapp/modules/core/scripts/views/data-table/cell-ui.js", "diffHunk": "@@ -62,43 +62,50 @@ DataTableCellUI.prototype._render = function() {\n   var self = this;\n   var cell = this._cell;\n \n-  var divContent = $('<div/>')\n-  .addClass(\"data-table-cell-content\");\n+  var divContent = document.createElement('div');\n+  divContent.className = 'data-table-cell-content';\n \n-  var editLink = $('<a href=\"javascript:{}\">&nbsp;</a>')\n-  .addClass(\"data-table-cell-edit\")\n-  .attr(\"title\", $.i18n('core-views/edit-cell'))\n-  .appendTo(divContent)\n-  .click(function() { self._startEdit(this); });\n+  var editLink = document.createElement('a');\n+  editLink.className = 'data-table-cell-edit';\n+  editLink.setAttribute('title', $.i18n('core-views/edit-cell'));\n+  editLink.href = 'javascript:{}';\n+  divContent.appendChild(editLink).appendChild(document.createTextNode('\\u00A0'));\n+  editLink.addEventListener('click', function() { self._startEdit(this); });\n \n   $(this._td).empty()\n   .unbind()\n-  .mouseenter(function() { editLink.css(\"visibility\", \"visible\"); })\n-  .mouseleave(function() { editLink.css(\"visibility\", \"hidden\"); });\n+  .mouseenter(function() { editLink.style.visibility = \"visible\" })\n+  .mouseleave(function() { editLink.style.visibility = \"hidden\" });\n \n   if (!cell || (\"v\" in cell && cell.v === null)) {\n-    $('<span>').addClass(\"data-table-null\").html('null').appendTo(divContent);\n+    var nullSpan = document.createElement('span');\n+    nullSpan.className = 'data-table-null';\n+    nullSpan.innerHTML = 'null';\n+    divContent.appendChild(nullSpan);\n   } else if (\"e\" in cell) {\n-    $('<span>').addClass(\"data-table-error\").text(cell.e).appendTo(divContent);\n+    var errorSpan = document.createElement('span');\n+    errorSpan.className = 'data-table-error';\n+    errorSpan.textContent = cell.e;\n+    divContent.appendChild(errorSpan);\n   } else if (!(\"r\" in cell) || !cell.r) {\n     if (typeof cell.v !== \"string\" || \"t\" in cell) {\n       if (typeof cell.v == \"number\") {\n         divContent.addClass(\"data-table-cell-content-numeric\");\n       }\n-      $('<span>')\n-      .addClass(\"data-table-value-nonstring\")\n-      .text(cell.v)\n-      .appendTo(divContent);\n+      var nonstringSpan = document.createElement('span');\n+      nonstringSpan.className = 'data-table-value-nonstring';\n+      nonstringSpan.textContent = cell.v;\n+      divContent.appendChild(nonstringSpan);\n     } else if (URL.looksLikeUrl(cell.v)) {\n-      $('<a>')\n-      .text(cell.v)\n-      .attr(\"href\", cell.v)\n-      .attr(\"target\", \"_blank\")\n-      .appendTo(divContent);\n+      var url = document.createElement('a');\n+      url.textContent = cell.v;\n+      url.setAttribute('href', cell.v);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "28272bdfccb62d884f69c8084a1a49370f254d6a"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDUyOTE0NA==", "bodyText": "This is used in cases of url so that what's displayed within the cell is the same url as the hyperlink for the <a> tag. So for cells that have a url, the displayed value is the said url.", "url": "https://github.com/OpenRefine/OpenRefine/pull/2973#discussion_r460529144", "createdAt": "2020-07-26T13:39:26Z", "author": {"login": "lisa761"}, "path": "main/webapp/modules/core/scripts/views/data-table/cell-ui.js", "diffHunk": "@@ -62,43 +62,50 @@ DataTableCellUI.prototype._render = function() {\n   var self = this;\n   var cell = this._cell;\n \n-  var divContent = $('<div/>')\n-  .addClass(\"data-table-cell-content\");\n+  var divContent = document.createElement('div');\n+  divContent.className = 'data-table-cell-content';\n \n-  var editLink = $('<a href=\"javascript:{}\">&nbsp;</a>')\n-  .addClass(\"data-table-cell-edit\")\n-  .attr(\"title\", $.i18n('core-views/edit-cell'))\n-  .appendTo(divContent)\n-  .click(function() { self._startEdit(this); });\n+  var editLink = document.createElement('a');\n+  editLink.className = 'data-table-cell-edit';\n+  editLink.setAttribute('title', $.i18n('core-views/edit-cell'));\n+  editLink.href = 'javascript:{}';\n+  divContent.appendChild(editLink).appendChild(document.createTextNode('\\u00A0'));\n+  editLink.addEventListener('click', function() { self._startEdit(this); });\n \n   $(this._td).empty()\n   .unbind()\n-  .mouseenter(function() { editLink.css(\"visibility\", \"visible\"); })\n-  .mouseleave(function() { editLink.css(\"visibility\", \"hidden\"); });\n+  .mouseenter(function() { editLink.style.visibility = \"visible\" })\n+  .mouseleave(function() { editLink.style.visibility = \"hidden\" });\n \n   if (!cell || (\"v\" in cell && cell.v === null)) {\n-    $('<span>').addClass(\"data-table-null\").html('null').appendTo(divContent);\n+    var nullSpan = document.createElement('span');\n+    nullSpan.className = 'data-table-null';\n+    nullSpan.innerHTML = 'null';\n+    divContent.appendChild(nullSpan);\n   } else if (\"e\" in cell) {\n-    $('<span>').addClass(\"data-table-error\").text(cell.e).appendTo(divContent);\n+    var errorSpan = document.createElement('span');\n+    errorSpan.className = 'data-table-error';\n+    errorSpan.textContent = cell.e;\n+    divContent.appendChild(errorSpan);\n   } else if (!(\"r\" in cell) || !cell.r) {\n     if (typeof cell.v !== \"string\" || \"t\" in cell) {\n       if (typeof cell.v == \"number\") {\n         divContent.addClass(\"data-table-cell-content-numeric\");\n       }\n-      $('<span>')\n-      .addClass(\"data-table-value-nonstring\")\n-      .text(cell.v)\n-      .appendTo(divContent);\n+      var nonstringSpan = document.createElement('span');\n+      nonstringSpan.className = 'data-table-value-nonstring';\n+      nonstringSpan.textContent = cell.v;\n+      divContent.appendChild(nonstringSpan);\n     } else if (URL.looksLikeUrl(cell.v)) {\n-      $('<a>')\n-      .text(cell.v)\n-      .attr(\"href\", cell.v)\n-      .attr(\"target\", \"_blank\")\n-      .appendTo(divContent);\n+      var url = document.createElement('a');\n+      url.textContent = cell.v;\n+      url.setAttribute('href', cell.v);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTgyNTg2NA=="}, "originalCommit": {"oid": "28272bdfccb62d884f69c8084a1a49370f254d6a"}, "originalPosition": 61}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2OTczMDE1OnYy", "diffSide": "RIGHT", "path": "main/webapp/modules/core/scripts/views/data-table/data-table-view.js", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQwMjozODoxNlrOG2hlLw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QyMDozMjo1OFrOG3ygjQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTgyNjQ3OQ==", "bodyText": "I don't recognize the \\u00A0 text node idiom. What is it doing? If it's uncommon, as opposed to just my Javascript na\u00efvet\u00e9, perhaps a comment on first appearance is in order.", "url": "https://github.com/OpenRefine/OpenRefine/pull/2973#discussion_r459826479", "createdAt": "2020-07-24T02:38:16Z", "author": {"login": "tfmorris"}, "path": "main/webapp/modules/core/scripts/views/data-table/data-table-view.js", "diffHunk": "@@ -397,11 +397,12 @@ DataTableView.prototype._renderDataTables = function(table, tableHeader) {\n     $(tr).empty();\n     var cells = row.cells;\n     var tdStar = tr.insertCell(tr.cells.length);\n-    var star = $('<a href=\"javascript:{}\">&nbsp;</a>')\n-    .addClass(row.starred ? \"data-table-star-on\" : \"data-table-star-off\")\n-    .appendTo(tdStar)\n-    .click(function() {\n-      var newStarred = !row.starred;\n+    var star = document.createElement('a');\n+    star.href = \"javascript:{}\";\n+    star.classList.add(row.starred ? \"data-table-star-on\" : \"data-table-star-off\");\n+    tdStar.appendChild(star).appendChild(document.createTextNode('\\u00A0'));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "28272bdfccb62d884f69c8084a1a49370f254d6a"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDUzMDA5OQ==", "bodyText": "\\u00A0 is actually the unicode character for nbsp, I used it here to insert nbsp text nodes within the tags. I am not sure how common it is though. But as far as I checked this seems to be one of the easier ways to insert nbsp text using javascript. Here is the Stack Overflow answer about it: https://stackoverflow.com/a/10951405/11943496", "url": "https://github.com/OpenRefine/OpenRefine/pull/2973#discussion_r460530099", "createdAt": "2020-07-26T13:49:11Z", "author": {"login": "lisa761"}, "path": "main/webapp/modules/core/scripts/views/data-table/data-table-view.js", "diffHunk": "@@ -397,11 +397,12 @@ DataTableView.prototype._renderDataTables = function(table, tableHeader) {\n     $(tr).empty();\n     var cells = row.cells;\n     var tdStar = tr.insertCell(tr.cells.length);\n-    var star = $('<a href=\"javascript:{}\">&nbsp;</a>')\n-    .addClass(row.starred ? \"data-table-star-on\" : \"data-table-star-off\")\n-    .appendTo(tdStar)\n-    .click(function() {\n-      var newStarred = !row.starred;\n+    var star = document.createElement('a');\n+    star.href = \"javascript:{}\";\n+    star.classList.add(row.starred ? \"data-table-star-on\" : \"data-table-star-off\");\n+    tdStar.appendChild(star).appendChild(document.createTextNode('\\u00A0'));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTgyNjQ3OQ=="}, "originalCommit": {"oid": "28272bdfccb62d884f69c8084a1a49370f254d6a"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTExNDc1OA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                tdStar.appendChild(star).appendChild(document.createTextNode('\\u00A0'));\n          \n          \n            \n                tdStar.appendChild(star).appendChild(document.createTextNode('\\u00A0')); // NBSP\n          \n      \n    \n    \n  \n\nGot it. Perhaps just add a brief comment on the first use to help out readers who don't have their Unicode code points memorized.", "url": "https://github.com/OpenRefine/OpenRefine/pull/2973#discussion_r461114758", "createdAt": "2020-07-27T19:21:22Z", "author": {"login": "tfmorris"}, "path": "main/webapp/modules/core/scripts/views/data-table/data-table-view.js", "diffHunk": "@@ -397,11 +397,12 @@ DataTableView.prototype._renderDataTables = function(table, tableHeader) {\n     $(tr).empty();\n     var cells = row.cells;\n     var tdStar = tr.insertCell(tr.cells.length);\n-    var star = $('<a href=\"javascript:{}\">&nbsp;</a>')\n-    .addClass(row.starred ? \"data-table-star-on\" : \"data-table-star-off\")\n-    .appendTo(tdStar)\n-    .click(function() {\n-      var newStarred = !row.starred;\n+    var star = document.createElement('a');\n+    star.href = \"javascript:{}\";\n+    star.classList.add(row.starred ? \"data-table-star-on\" : \"data-table-star-off\");\n+    tdStar.appendChild(star).appendChild(document.createTextNode('\\u00A0'));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTgyNjQ3OQ=="}, "originalCommit": {"oid": "28272bdfccb62d884f69c8084a1a49370f254d6a"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTE1MjM5Nw==", "bodyText": "Okay, I will add it!", "url": "https://github.com/OpenRefine/OpenRefine/pull/2973#discussion_r461152397", "createdAt": "2020-07-27T20:32:58Z", "author": {"login": "lisa761"}, "path": "main/webapp/modules/core/scripts/views/data-table/data-table-view.js", "diffHunk": "@@ -397,11 +397,12 @@ DataTableView.prototype._renderDataTables = function(table, tableHeader) {\n     $(tr).empty();\n     var cells = row.cells;\n     var tdStar = tr.insertCell(tr.cells.length);\n-    var star = $('<a href=\"javascript:{}\">&nbsp;</a>')\n-    .addClass(row.starred ? \"data-table-star-on\" : \"data-table-star-off\")\n-    .appendTo(tdStar)\n-    .click(function() {\n-      var newStarred = !row.starred;\n+    var star = document.createElement('a');\n+    star.href = \"javascript:{}\";\n+    star.classList.add(row.starred ? \"data-table-star-on\" : \"data-table-star-off\");\n+    tdStar.appendChild(star).appendChild(document.createTextNode('\\u00A0'));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTgyNjQ3OQ=="}, "originalCommit": {"oid": "28272bdfccb62d884f69c8084a1a49370f254d6a"}, "originalPosition": 12}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2582, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}