{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk1NTYyODEx", "number": 2496, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQwMjoxMzoyMlrODs63jA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQwMjoxMzoyMlrODs63jA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4NDI4NDI4OnYy", "diffSide": "RIGHT", "path": "main/webapp/modules/core/MOD-INF/controller.js", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQwMjoxMzoyMlrOF-CykA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQwMjoxMzoyMlrOF-CykA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDYwMTc0NA==", "bodyText": "It would be good to also recognize the +xml suffix as a fallback when we don't have a more specific type, e.g. application/atom+xml but that would require introducing additional generality into the underlying code, so perhaps we can spin that off as a separate issue. We already support a few of the more specific ones such as application/rdf+xml.", "url": "https://github.com/OpenRefine/OpenRefine/pull/2496#discussion_r400601744", "createdAt": "2020-03-31T02:13:22Z", "author": {"login": "tfmorris"}, "path": "main/webapp/modules/core/MOD-INF/controller.js", "diffHunk": "@@ -275,6 +275,8 @@ function registerImporting() {\n   IM.registerMimeType(\"text/n3\", \"text/rdf/n3\");\n   IM.registerMimeType(\"text/rdf+n3\", \"text/rdf/n3\");\n   IM.registerMimeType(\"text/turtle\", \"text/rdf/ttl\");\n+  IM.registerMimeType(\"application/xml\", \"text/xml\");\n+  IM.registerMimeType(\"text/xml\", \"text/xml\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "417bbb1bc91c11cf55fa71bf958103f32e034b71"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2701, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}