{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkzMDgzMDEw", "number": 2471, "title": "[FEAT]Adds new options for split", "bodyText": "Closes #2238\nNow splitting multi-cell values can have two more options:\n\nOn transition from lowercase to uppercase\nSplit between numbers and letters", "createdAt": "2020-03-24T15:58:24Z", "url": "https://github.com/OpenRefine/OpenRefine/pull/2471", "merged": true, "mergeCommit": {"oid": "947356ddad43cf4a125ec541046a9c220bb16dc4"}, "closed": true, "closedAt": "2020-06-15T17:30:19Z", "author": {"login": "lisa761"}, "timelineItems": {"totalCount": 15, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcQxUUqgH2gAyMzkzMDgzMDEwOjg1YjQ1MjM3NDhkYjZiOGU1NzYxOTAyMWM0MGEyOTIzNjA4NjA3Y2E=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcYcHk-gFqTM5NTIyMDAxOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "85b4523748db6b8e57619021c40a2923608607ca", "author": {"user": {"login": "lisa761", "name": "Lisa Chandra"}}, "url": "https://github.com/OpenRefine/OpenRefine/commit/85b4523748db6b8e57619021c40a2923608607ca", "committedDate": "2020-03-24T11:36:25Z", "message": "added options ui"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ce2f8d21dead297bf5bb4677ce70cd27564426e8", "author": {"user": {"login": "lisa761", "name": "Lisa Chandra"}}, "url": "https://github.com/OpenRefine/OpenRefine/commit/ce2f8d21dead297bf5bb4677ce70cd27564426e8", "committedDate": "2020-03-24T12:43:45Z", "message": "added definition for both separators"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3834835a7cad9bfb42e5aaaa29b80210c56631a1", "author": {"user": {"login": "lisa761", "name": "Lisa Chandra"}}, "url": "https://github.com/OpenRefine/OpenRefine/commit/3834835a7cad9bfb42e5aaaa29b80210c56631a1", "committedDate": "2020-03-24T15:54:01Z", "message": "added tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgwNDg1MzI0", "url": "https://github.com/OpenRefine/OpenRefine/pull/2471#pullrequestreview-380485324", "createdAt": "2020-03-24T16:28:53Z", "commit": {"oid": "3834835a7cad9bfb42e5aaaa29b80210c56631a1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQxNjoyODo1M1rOF64tfw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQxNjoyODo1M1rOF64tfw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzI5MDg3OQ==", "bodyText": "Instead of duplicating the two lines Process process = op.createProcess(project, new Properties()); and performProcessAndRespond(request, response, project, process); in each case of the if/else block, can we move them outside so that they are shared for all blocks? (The original code already had that duplication, it just feels more painful now that we have more cases)", "url": "https://github.com/OpenRefine/OpenRefine/pull/2471#discussion_r397290879", "createdAt": "2020-03-24T16:28:53Z", "author": {"login": "wetneb"}, "path": "main/src/com/google/refine/commands/cell/SplitMultiValueCellsCommand.java", "diffHunk": "@@ -84,6 +84,20 @@ public void doPost(HttpServletRequest request, HttpServletResponse response)\n                                                                          fieldLengths);\n                 Process process = op.createProcess(project, new Properties());\n                 \n+                performProcessAndRespond(request, response, project, process);\n+            } else if (\"cases\".equals(mode)) {\n+                AbstractOperation op = new MultiValuedCellSplitOperation(columnName, \n+                                                                         keyColumnName,\n+                                                                         true);\n+                Process process = op.createProcess(project, new Properties());\n+\n+                performProcessAndRespond(request, response, project, process);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3834835a7cad9bfb42e5aaaa29b80210c56631a1"}, "originalPosition": 20}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "eb7521bb3806ed0ec5e5f50779b8fe4f0997af9e", "author": {"user": {"login": "lisa761", "name": "Lisa Chandra"}}, "url": "https://github.com/OpenRefine/OpenRefine/commit/eb7521bb3806ed0ec5e5f50779b8fe4f0997af9e", "committedDate": "2020-03-24T19:08:56Z", "message": "removed definitions from backend and added them to frontend"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgwNjIwNzU4", "url": "https://github.com/OpenRefine/OpenRefine/pull/2471#pullrequestreview-380620758", "createdAt": "2020-03-24T19:13:10Z", "commit": {"oid": "eb7521bb3806ed0ec5e5f50779b8fe4f0997af9e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQxOToxMzoxMFrOF6_UaA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQxOToxMzoxMFrOF6_UaA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzM5OTE0NA==", "bodyText": "I let the tests remain for the sake of different mode names wrt the UI.", "url": "https://github.com/OpenRefine/OpenRefine/pull/2471#discussion_r397399144", "createdAt": "2020-03-24T19:13:10Z", "author": {"login": "lisa761"}, "path": "main/tests/server/src/com/google/refine/operations/cell/SplitMultiValuedCellsTests.java", "diffHunk": "@@ -163,5 +163,54 @@ public void testSplitMultiValuedCellsLengths() throws Exception {\n         Assert.assertEquals(project.rows.get(3).getCellValue(keyCol), null);\n         Assert.assertEquals(project.rows.get(3).getCellValue(valueCol), \"four\");\n     }\n+\n+    @Test\n+    public void testSplitMultiValuedCellsTextCase() throws Exception {\n+        AbstractOperation op = new MultiValuedCellSplitOperation(\n+            \"Value\",\n+            \"Key\",\n+            \"(?<=[a-z]|[a-z][\\\\s])(?=[A-Z])\",\n+            true);\n+        Process process = op.createProcess(project, new Properties());\n+        process.performImmediate();\n+\n+        int keyCol = project.columnModel.getColumnByName(\"Key\").getCellIndex();\n+        int valueCol = project.columnModel.getColumnByName(\"Value\").getCellIndex();\n+\n+        Assert.assertEquals(project.rows.get(0).getCellValue(keyCol), \"Record_1\");\n+        Assert.assertEquals(project.rows.get(0).getCellValue(valueCol), \"one:two;three four;five\");\n+        Assert.assertEquals(project.rows.get(1).getCellValue(keyCol), null);\n+        Assert.assertEquals(project.rows.get(1).getCellValue(valueCol), \"Six \");\n+        Assert.assertEquals(project.rows.get(2).getCellValue(keyCol), null);\n+        Assert.assertEquals(project.rows.get(2).getCellValue(valueCol), \"Seven\");\n+        Assert.assertEquals(project.rows.get(3).getCellValue(keyCol), null);\n+        Assert.assertEquals(project.rows.get(3).getCellValue(valueCol), \"Eight;nine91011twelve thirteen 14Fifteen\");\n+    }\n+\n+    @Test\n+    public void testSplitMultiValuedCellsTextNumber() throws Exception {\n+        AbstractOperation op = new MultiValuedCellSplitOperation(\n+            \"Value\",\n+            \"Key\",\n+            \"(?<=[0-9]|[0-9][\\\\s])(?=[A-Z]|[a-z])|(?<=[a-z]|\\\\s|[A-Z])(?=[0-9])\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eb7521bb3806ed0ec5e5f50779b8fe4f0997af9e"}, "originalPosition": 73}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgwOTE3Njk3", "url": "https://github.com/OpenRefine/OpenRefine/pull/2471#pullrequestreview-380917697", "createdAt": "2020-03-25T07:53:17Z", "commit": {"oid": "eb7521bb3806ed0ec5e5f50779b8fe4f0997af9e"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg0MzY5MTI1", "url": "https://github.com/OpenRefine/OpenRefine/pull/2471#pullrequestreview-384369125", "createdAt": "2020-03-31T02:54:49Z", "commit": {"oid": "eb7521bb3806ed0ec5e5f50779b8fe4f0997af9e"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQwMjo1NDo0OVrOF-DdPQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQwMjo1NDo1NlrOF-DdYQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDYxMjY2OQ==", "bodyText": "Test cases including accented upper and lower case characters are needed here. Probably also Unicode digits outside the 0-9 range.", "url": "https://github.com/OpenRefine/OpenRefine/pull/2471#discussion_r400612669", "createdAt": "2020-03-31T02:54:49Z", "author": {"login": "tfmorris"}, "path": "main/tests/server/src/com/google/refine/operations/cell/SplitMultiValuedCellsTests.java", "diffHunk": "@@ -163,5 +163,54 @@ public void testSplitMultiValuedCellsLengths() throws Exception {\n         Assert.assertEquals(project.rows.get(3).getCellValue(keyCol), null);\n         Assert.assertEquals(project.rows.get(3).getCellValue(valueCol), \"four\");\n     }\n+\n+    @Test\n+    public void testSplitMultiValuedCellsTextCase() throws Exception {\n+        AbstractOperation op = new MultiValuedCellSplitOperation(\n+            \"Value\",\n+            \"Key\",\n+            \"(?<=[a-z]|[a-z][\\\\s])(?=[A-Z])\",\n+            true);\n+        Process process = op.createProcess(project, new Properties());\n+        process.performImmediate();\n+\n+        int keyCol = project.columnModel.getColumnByName(\"Key\").getCellIndex();\n+        int valueCol = project.columnModel.getColumnByName(\"Value\").getCellIndex();\n+\n+        Assert.assertEquals(project.rows.get(0).getCellValue(keyCol), \"Record_1\");\n+        Assert.assertEquals(project.rows.get(0).getCellValue(valueCol), \"one:two;three four;five\");\n+        Assert.assertEquals(project.rows.get(1).getCellValue(keyCol), null);\n+        Assert.assertEquals(project.rows.get(1).getCellValue(valueCol), \"Six \");\n+        Assert.assertEquals(project.rows.get(2).getCellValue(keyCol), null);\n+        Assert.assertEquals(project.rows.get(2).getCellValue(valueCol), \"Seven\");\n+        Assert.assertEquals(project.rows.get(3).getCellValue(keyCol), null);\n+        Assert.assertEquals(project.rows.get(3).getCellValue(valueCol), \"Eight;nine91011twelve thirteen 14Fifteen\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eb7521bb3806ed0ec5e5f50779b8fe4f0997af9e"}, "originalPosition": 65}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDYxMjcwNQ==", "bodyText": "This won't work for characters with diacritics e.g. \u00c9\u00e8", "url": "https://github.com/OpenRefine/OpenRefine/pull/2471#discussion_r400612705", "createdAt": "2020-03-31T02:54:56Z", "author": {"login": "tfmorris"}, "path": "main/webapp/modules/core/scripts/views/data-table/menu-edit-cells.js", "diffHunk": "@@ -347,6 +350,12 @@ DataTableColumnHeaderUI.extendMenu(function(column, columnHeaderUI, menu) {\n           alert($.i18n('core-views/warning-format'));\n           return;\n         }\n+      } else if (mode === \"cases\") {\n+        config.separator = \"(?<=[a-z]|[a-z][\\\\s])(?=[A-Z])\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eb7521bb3806ed0ec5e5f50779b8fe4f0997af9e"}, "originalPosition": 24}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d1dc57dfbf68484e32bfb35d9d37c03852c958a0", "author": {"user": {"login": "lisa761", "name": "Lisa Chandra"}}, "url": "https://github.com/OpenRefine/OpenRefine/commit/d1dc57dfbf68484e32bfb35d9d37c03852c958a0", "committedDate": "2020-04-01T17:24:12Z", "message": "added reverse order and handling for accented characters"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d7ad180a623f685eb569d8c70b0a964f072bdb6f", "author": {"user": {"login": "lisa761", "name": "Lisa Chandra"}}, "url": "https://github.com/OpenRefine/OpenRefine/commit/d7ad180a623f685eb569d8c70b0a964f072bdb6f", "committedDate": "2020-04-01T17:58:28Z", "message": "added tests for accented characters and reverse split"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3c9ccf49a0a537656f234c33412d3b64c8d1e7eb", "author": {"user": {"login": "lisa761", "name": "Lisa Chandra"}}, "url": "https://github.com/OpenRefine/OpenRefine/commit/3c9ccf49a0a537656f234c33412d3b64c8d1e7eb", "committedDate": "2020-04-01T18:13:53Z", "message": "fixed build errors"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg1ODQzNzM4", "url": "https://github.com/OpenRefine/OpenRefine/pull/2471#pullrequestreview-385843738", "createdAt": "2020-04-01T18:29:48Z", "commit": {"oid": "d1dc57dfbf68484e32bfb35d9d37c03852c958a0"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxODoyOTo0OVrOF_NVQg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxODoyOTo0OVrOF_NVQg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTgyMzA0Mg==", "bodyText": "I would avoid hard-coding the character ranges. We should be able to use unicode character ranges as specified here: https://docs.oracle.com/javase/7/docs/api/java/util/regex/Pattern.html. It should just be a matter of enabling unicode in the Pattern declaration and then using the corresponding escape sequences.", "url": "https://github.com/OpenRefine/OpenRefine/pull/2471#discussion_r401823042", "createdAt": "2020-04-01T18:29:49Z", "author": {"login": "wetneb"}, "path": "main/webapp/modules/core/scripts/views/data-table/menu-edit-cells.js", "diffHunk": "@@ -351,10 +353,18 @@ DataTableColumnHeaderUI.extendMenu(function(column, columnHeaderUI, menu) {\n           return;\n         }\n       } else if (mode === \"cases\") {\n-        config.separator = \"(?<=[a-z]|[a-z][\\\\s])(?=[A-Z])\";\n+        if(elmts.reversTranistionCases[0].checked) {\n+          config.separator = \"(?<=[A-Z]|[\u00c0-\u00dd]|[A-Z\\\\s][\u00c0-\u00dd\\\\s])(?=[a-z]|[\u00e0-\u00ff])\";\n+        } else {\n+          config.separator = \"(?<=[a-z]|[a-z\\\\s]|[\u00e0-\u00ff]|[\u00e0-\u00ff\\\\s])(?=[A-Z]|[\u00c0-\u00dd])\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d1dc57dfbf68484e32bfb35d9d37c03852c958a0"}, "originalPosition": 17}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "78b8eb1b86a87388338e52efea8707d761c9afa2", "author": {"user": {"login": "lisa761", "name": "Lisa Chandra"}}, "url": "https://github.com/OpenRefine/OpenRefine/commit/78b8eb1b86a87388338e52efea8707d761c9afa2", "committedDate": "2020-04-01T20:42:10Z", "message": "unicode character ranges instead"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2d10a536a590831e8b7a60c869b614975921265d", "author": {"user": {"login": "lisa761", "name": "Lisa Chandra"}}, "url": "https://github.com/OpenRefine/OpenRefine/commit/2d10a536a590831e8b7a60c869b614975921265d", "committedDate": "2020-04-02T08:17:13Z", "message": "added examples"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk1MjIwMDE4", "url": "https://github.com/OpenRefine/OpenRefine/pull/2471#pullrequestreview-395220018", "createdAt": "2020-04-17T07:25:53Z", "commit": {"oid": "2d10a536a590831e8b7a60c869b614975921265d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3348, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}