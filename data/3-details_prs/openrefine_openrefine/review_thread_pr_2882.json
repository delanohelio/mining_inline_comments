{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ0NDEzNjAy", "number": 2882, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNVQxNTozMToxMVrOELeSIQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNVQxNTozMToxMVrOELeSIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwNDY1OTUzOnYy", "diffSide": "RIGHT", "path": "extensions/wikidata/tests/src/org/openrefine/wikidata/qa/scrutinizers/ConflictsWithScrutinizerTest.java", "isResolved": false, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNVQxNTozMToxMVrOGtDGSQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxNDoyNTo0NFrOGtZl-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTg4OTg2NQ==", "bodyText": "Why not use the constant values defined in the corresponding scrutinizer instead of hardcoding the pids in yet another location?", "url": "https://github.com/OpenRefine/OpenRefine/pull/2882#discussion_r449889865", "createdAt": "2020-07-05T15:31:11Z", "author": {"login": "wetneb"}, "path": "extensions/wikidata/tests/src/org/openrefine/wikidata/qa/scrutinizers/ConflictsWithScrutinizerTest.java", "diffHunk": "@@ -27,12 +26,12 @@\n \n public class ConflictsWithScrutinizerTest extends ScrutinizerTest {\n \n-    public static PropertyIdValue conflictsWithPid = MockConstraintFetcher.conflictsWithPid;\n-    public static Value conflictsWithValue = MockConstraintFetcher.conflictsWithStatementValue;\n-    public static PropertyIdValue propertyWithConflictsPid1 = MockConstraintFetcher.conflictingStatement1Pid;\n-    public static Value conflictingValue1  = MockConstraintFetcher.conflictingStatement1Value;\n-    public static PropertyIdValue propertyWithConflictsPid2 = MockConstraintFetcher.conflictingStatement2Pid;\n-    public static Value conflictingValue2  = MockConstraintFetcher.conflictingStatement2Value;\n+    public static PropertyIdValue conflictsWithPid = Datamodel.makeWikidataPropertyIdValue(\"P2002\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1a02d6fe21222850dd7f98d60de4d5d93a717167"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTk5NDI1Ng==", "bodyText": "I can reuse the QIDs and parameter PIDs but rest these properties need to be hardcoded here I guess.", "url": "https://github.com/OpenRefine/OpenRefine/pull/2882#discussion_r449994256", "createdAt": "2020-07-06T05:42:46Z", "author": {"login": "darecoder"}, "path": "extensions/wikidata/tests/src/org/openrefine/wikidata/qa/scrutinizers/ConflictsWithScrutinizerTest.java", "diffHunk": "@@ -27,12 +26,12 @@\n \n public class ConflictsWithScrutinizerTest extends ScrutinizerTest {\n \n-    public static PropertyIdValue conflictsWithPid = MockConstraintFetcher.conflictsWithPid;\n-    public static Value conflictsWithValue = MockConstraintFetcher.conflictsWithStatementValue;\n-    public static PropertyIdValue propertyWithConflictsPid1 = MockConstraintFetcher.conflictingStatement1Pid;\n-    public static Value conflictingValue1  = MockConstraintFetcher.conflictingStatement1Value;\n-    public static PropertyIdValue propertyWithConflictsPid2 = MockConstraintFetcher.conflictingStatement2Pid;\n-    public static Value conflictingValue2  = MockConstraintFetcher.conflictingStatement2Value;\n+    public static PropertyIdValue conflictsWithPid = Datamodel.makeWikidataPropertyIdValue(\"P2002\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTg4OTg2NQ=="}, "originalCommit": {"oid": "1a02d6fe21222850dd7f98d60de4d5d93a717167"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDA4ODg0NA==", "bodyText": "Each constraint type should be hard-coded but only in one locations:\u00a0all classes which use it should import it from there.", "url": "https://github.com/OpenRefine/OpenRefine/pull/2882#discussion_r450088844", "createdAt": "2020-07-06T09:11:55Z", "author": {"login": "wetneb"}, "path": "extensions/wikidata/tests/src/org/openrefine/wikidata/qa/scrutinizers/ConflictsWithScrutinizerTest.java", "diffHunk": "@@ -27,12 +26,12 @@\n \n public class ConflictsWithScrutinizerTest extends ScrutinizerTest {\n \n-    public static PropertyIdValue conflictsWithPid = MockConstraintFetcher.conflictsWithPid;\n-    public static Value conflictsWithValue = MockConstraintFetcher.conflictsWithStatementValue;\n-    public static PropertyIdValue propertyWithConflictsPid1 = MockConstraintFetcher.conflictingStatement1Pid;\n-    public static Value conflictingValue1  = MockConstraintFetcher.conflictingStatement1Value;\n-    public static PropertyIdValue propertyWithConflictsPid2 = MockConstraintFetcher.conflictingStatement2Pid;\n-    public static Value conflictingValue2  = MockConstraintFetcher.conflictingStatement2Value;\n+    public static PropertyIdValue conflictsWithPid = Datamodel.makeWikidataPropertyIdValue(\"P2002\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTg4OTg2NQ=="}, "originalCommit": {"oid": "1a02d6fe21222850dd7f98d60de4d5d93a717167"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDE1NTY3NA==", "bodyText": "So, I have done that for these two classes. Should I do the changes for all test classes in this PR or open a new PR for these changes?", "url": "https://github.com/OpenRefine/OpenRefine/pull/2882#discussion_r450155674", "createdAt": "2020-07-06T11:23:55Z", "author": {"login": "darecoder"}, "path": "extensions/wikidata/tests/src/org/openrefine/wikidata/qa/scrutinizers/ConflictsWithScrutinizerTest.java", "diffHunk": "@@ -27,12 +26,12 @@\n \n public class ConflictsWithScrutinizerTest extends ScrutinizerTest {\n \n-    public static PropertyIdValue conflictsWithPid = MockConstraintFetcher.conflictsWithPid;\n-    public static Value conflictsWithValue = MockConstraintFetcher.conflictsWithStatementValue;\n-    public static PropertyIdValue propertyWithConflictsPid1 = MockConstraintFetcher.conflictingStatement1Pid;\n-    public static Value conflictingValue1  = MockConstraintFetcher.conflictingStatement1Value;\n-    public static PropertyIdValue propertyWithConflictsPid2 = MockConstraintFetcher.conflictingStatement2Pid;\n-    public static Value conflictingValue2  = MockConstraintFetcher.conflictingStatement2Value;\n+    public static PropertyIdValue conflictsWithPid = Datamodel.makeWikidataPropertyIdValue(\"P2002\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTg4OTg2NQ=="}, "originalCommit": {"oid": "1a02d6fe21222850dd7f98d60de4d5d93a717167"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDE3NDE5MA==", "bodyText": "As you prefer!", "url": "https://github.com/OpenRefine/OpenRefine/pull/2882#discussion_r450174190", "createdAt": "2020-07-06T12:04:16Z", "author": {"login": "wetneb"}, "path": "extensions/wikidata/tests/src/org/openrefine/wikidata/qa/scrutinizers/ConflictsWithScrutinizerTest.java", "diffHunk": "@@ -27,12 +26,12 @@\n \n public class ConflictsWithScrutinizerTest extends ScrutinizerTest {\n \n-    public static PropertyIdValue conflictsWithPid = MockConstraintFetcher.conflictsWithPid;\n-    public static Value conflictsWithValue = MockConstraintFetcher.conflictsWithStatementValue;\n-    public static PropertyIdValue propertyWithConflictsPid1 = MockConstraintFetcher.conflictingStatement1Pid;\n-    public static Value conflictingValue1  = MockConstraintFetcher.conflictingStatement1Value;\n-    public static PropertyIdValue propertyWithConflictsPid2 = MockConstraintFetcher.conflictingStatement2Pid;\n-    public static Value conflictingValue2  = MockConstraintFetcher.conflictingStatement2Value;\n+    public static PropertyIdValue conflictsWithPid = Datamodel.makeWikidataPropertyIdValue(\"P2002\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTg4OTg2NQ=="}, "originalCommit": {"oid": "1a02d6fe21222850dd7f98d60de4d5d93a717167"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDI1ODQyNQ==", "bodyText": "So, I'll create another PR for that with an appropriate branch name and commit message to be clear. :)\nWhat else needed to improve in this one?", "url": "https://github.com/OpenRefine/OpenRefine/pull/2882#discussion_r450258425", "createdAt": "2020-07-06T14:25:44Z", "author": {"login": "darecoder"}, "path": "extensions/wikidata/tests/src/org/openrefine/wikidata/qa/scrutinizers/ConflictsWithScrutinizerTest.java", "diffHunk": "@@ -27,12 +26,12 @@\n \n public class ConflictsWithScrutinizerTest extends ScrutinizerTest {\n \n-    public static PropertyIdValue conflictsWithPid = MockConstraintFetcher.conflictsWithPid;\n-    public static Value conflictsWithValue = MockConstraintFetcher.conflictsWithStatementValue;\n-    public static PropertyIdValue propertyWithConflictsPid1 = MockConstraintFetcher.conflictingStatement1Pid;\n-    public static Value conflictingValue1  = MockConstraintFetcher.conflictingStatement1Value;\n-    public static PropertyIdValue propertyWithConflictsPid2 = MockConstraintFetcher.conflictingStatement2Pid;\n-    public static Value conflictingValue2  = MockConstraintFetcher.conflictingStatement2Value;\n+    public static PropertyIdValue conflictsWithPid = Datamodel.makeWikidataPropertyIdValue(\"P2002\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTg4OTg2NQ=="}, "originalCommit": {"oid": "1a02d6fe21222850dd7f98d60de4d5d93a717167"}, "originalPosition": 18}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2652, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}