{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY2OTE4MDE2", "number": 3070, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxODo0OTo1MFrOEXwOKg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QwNzozNDo0NlrOEX7oeg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzMzQyNzYyOnYy", "diffSide": "RIGHT", "path": "extensions/wikidata/src/org/openrefine/wikidata/schema/WbItemDocumentExpr.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxODo0OTo1MFrOG_uKcQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxODo0OTo1MFrOG_uKcQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTQ2OTgwOQ==", "bodyText": "Any chance of convincing your IDE to not reorder imports? It makes for a very noisy diff.", "url": "https://github.com/OpenRefine/OpenRefine/pull/3070#discussion_r469469809", "createdAt": "2020-08-12T18:49:50Z", "author": {"login": "tfmorris"}, "path": "extensions/wikidata/src/org/openrefine/wikidata/schema/WbItemDocumentExpr.java", "diffHunk": "@@ -23,20 +23,20 @@\n  ******************************************************************************/\n package org.openrefine.wikidata.schema;\n \n-import java.util.Collections;\n-import java.util.List;\n-\n+import com.fasterxml.jackson.annotation.JsonCreator;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d6ccaffda3500343f073b3c11495eedaeb6aa511"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzMzQ0MzkzOnYy", "diffSide": "RIGHT", "path": "extensions/wikidata/src/org/openrefine/wikidata/schema/WbItemDocumentExpr.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxODo1NDozNlrOG_uU0Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxODo1NDozNlrOG_uU0Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTQ3MjQ2NQ==", "bodyText": "Collections.unmodifiableList() is probably a simpler (and higher performance?) idiom here.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    return nameDescs.stream().collect(ImmutableList.toImmutableList());\n          \n          \n            \n                    return Collections.unmodifiableList(nameDescs);", "url": "https://github.com/OpenRefine/OpenRefine/pull/3070#discussion_r469472465", "createdAt": "2020-08-12T18:54:36Z", "author": {"login": "tfmorris"}, "path": "extensions/wikidata/src/org/openrefine/wikidata/schema/WbItemDocumentExpr.java", "diffHunk": "@@ -96,12 +96,12 @@ public ItemUpdate evaluate(ExpressionContext ctxt)\n \n     @JsonProperty(\"nameDescs\")\n     public List<WbNameDescExpr> getNameDescs() {\n-        return nameDescs;\n+        return nameDescs.stream().collect(ImmutableList.toImmutableList());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d6ccaffda3500343f073b3c11495eedaeb6aa511"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzNTIxMTA5OnYy", "diffSide": "RIGHT", "path": "extensions/wikidata/tests/src/org/openrefine/wikidata/schema/WbReferenceExprTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QwNzowNzo1NFrOG_-umA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QwNzowNzo1NFrOG_-umA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTc0MTIwOA==", "bodyText": "This way of testing immutability might be a bit brittle - the tests could fail if we use other implementations of unmodifiable lists which have a different name (typically, the immutable variant you first used). Perhaps a simpler way to test that would be to try to modify the list and check that it throws an exception?\nFor instance\n@Test(expectedExceptions = UnsupportedOperationException.class)\npublic void testUnmodifiableList() {\n        expr.getSnaks().clear();\n}", "url": "https://github.com/OpenRefine/OpenRefine/pull/3070#discussion_r469741208", "createdAt": "2020-08-13T07:07:54Z", "author": {"login": "wetneb"}, "path": "extensions/wikidata/tests/src/org/openrefine/wikidata/schema/WbReferenceExprTest.java", "diffHunk": "@@ -77,4 +79,10 @@ public void testSerialize()\n             throws JsonProcessingException {\n         JacksonSerializationTest.canonicalSerialization(WbReferenceExpr.class, expr, jsonRepresentation);\n     }\n+\n+    @Test\n+    public void testUnmodifiableList() {\n+        List<WbSnakExpr> snakExprs = expr.getSnaks();\n+        Assert.assertTrue(snakExprs.getClass().getName().contains(\"Unmodifiable\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a70f164053b0cd5e046e5685da6f2b911a15be8b"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzNTI5NzIyOnYy", "diffSide": "RIGHT", "path": "extensions/wikidata/tests/src/org/openrefine/wikidata/schema/WbItemDocumentExprTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QwNzozNDo0NlrOG__htQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QwNzozNDo0NlrOG__htQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTc1NDI5Mw==", "bodyText": "This will only test if expr.getNameDescs() is immutable, since that will already throw an exception. The second line will not be executed if the first line throws an exception. So you need to split that into two tests.", "url": "https://github.com/OpenRefine/OpenRefine/pull/3070#discussion_r469754293", "createdAt": "2020-08-13T07:34:46Z", "author": {"login": "wetneb"}, "path": "extensions/wikidata/tests/src/org/openrefine/wikidata/schema/WbItemDocumentExprTest.java", "diffHunk": "@@ -92,11 +92,9 @@ public void testSerialize() {\n         JacksonSerializationTest.canonicalSerialization(WbItemDocumentExpr.class, expr, jsonRepresentation);\n     }\n \n-    @Test\n+    @Test(expectedExceptions = UnsupportedOperationException.class)\n     public void testUnmodifiableList() {\n-        List<WbNameDescExpr> nameDescExprs = expr.getNameDescs();\n-        Assert.assertTrue(nameDescExprs.getClass().getName().contains(\"Unmodifiable\"));\n-        List<WbStatementGroupExpr> statementGroupExprs = expr.getStatementGroups();\n-        Assert.assertTrue(statementGroupExprs.getClass().getName().contains(\"Unmodifiable\"));\n+        expr.getNameDescs().clear();\n+        expr.getStatementGroups().clear();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "733443fb1a7d74089d7f38044d3c4c809b6426a1"}, "originalPosition": 12}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2602, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}