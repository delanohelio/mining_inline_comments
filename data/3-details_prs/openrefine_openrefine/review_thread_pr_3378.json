{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMwNTgwMDA5", "number": 3378, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxOTowNzoxMVrOE_xKzg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQyMzozMDoyOVrOE_2s8w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1MzAxMzI2OnYy", "diffSide": "RIGHT", "path": ".github/workflows/pull_request.yml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxOTowNzoxMVrOH9qBCQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQyMDoxNzoyMFrOH9sflQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDQxMzU3Nw==", "bodyText": "@wetneb Wait, I'm confused here on this fetch-depth line.  I don't see the git describe need. Where at?  I see git describe used in the refine script for mac_dist() which says no longer used in a comment, and then also for broker_build() and broker_appengine_build().  Are those even run or needed now since we now do \"mvn package\" ?  For our PR workflow, I think we just care about what the last tag was on master, no?  Or even just 'heads/master' ?\nE:\\GitHubRepos\\OpenRefine>git describe --tags --first-parent --all\nheads/master\n\nBTW, we also have access to the environment variable in the runner at any time with GITHUB_REF which represents the PR merge branch refs/pull/:prNumber/merge as shown in docs https://docs.github.com/en/free-pro-team@latest/actions/reference/events-that-trigger-workflows#pull_request", "url": "https://github.com/OpenRefine/OpenRefine/pull/3378#discussion_r534413577", "createdAt": "2020-12-02T19:07:11Z", "author": {"login": "thadguidry"}, "path": ".github/workflows/pull_request.yml", "diffHunk": "@@ -0,0 +1,57 @@\n+name: Java CI\n+\n+on: [pull_request]\n+\n+jobs:\n+  build:\n+\n+    runs-on: ubuntu-latest\n+\n+    services:\n+      postgres:\n+        image: postgres\n+        env:\n+          POSTGRES_USER: postgres\n+          POSTGRES_PASSWORD: 'postgres'\n+          POSTGRES_DB: test_db\n+        options: >-\n+          --health-cmd pg_isready\n+          --health-interval 10s\n+          --health-timeout 5s\n+          --health-retries 5\n+\n+    steps:\n+    - uses: actions/checkout@v2.3.4\n+      with:\n+        fetch-depth: 0 # This is wasteful, but needed for git describe", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a8d246d3e1e519428ed2d37143bdd50228ffaa88"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDQ1NDE2NQ==", "bodyText": "Good point, I just took that from the other workflow, it's not needed here indeed.", "url": "https://github.com/OpenRefine/OpenRefine/pull/3378#discussion_r534454165", "createdAt": "2020-12-02T20:17:20Z", "author": {"login": "wetneb"}, "path": ".github/workflows/pull_request.yml", "diffHunk": "@@ -0,0 +1,57 @@\n+name: Java CI\n+\n+on: [pull_request]\n+\n+jobs:\n+  build:\n+\n+    runs-on: ubuntu-latest\n+\n+    services:\n+      postgres:\n+        image: postgres\n+        env:\n+          POSTGRES_USER: postgres\n+          POSTGRES_PASSWORD: 'postgres'\n+          POSTGRES_DB: test_db\n+        options: >-\n+          --health-cmd pg_isready\n+          --health-interval 10s\n+          --health-timeout 5s\n+          --health-retries 5\n+\n+    steps:\n+    - uses: actions/checkout@v2.3.4\n+      with:\n+        fetch-depth: 0 # This is wasteful, but needed for git describe", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDQxMzU3Nw=="}, "originalCommit": {"oid": "a8d246d3e1e519428ed2d37143bdd50228ffaa88"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1Mzg2NzM4OnYy", "diffSide": "RIGHT", "path": ".github/workflows/pull_request.yml", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQyMzoxMTozOFrOH9yEng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQwMTozMzoyOVrOH-80sA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDU0NTU2Ng==", "bodyText": "Do we want to pin this? Based on the update to Ubuntu 20, it looks like they're happy to include updates of installed versions which have breaking changes.", "url": "https://github.com/OpenRefine/OpenRefine/pull/3378#discussion_r534545566", "createdAt": "2020-12-02T23:11:38Z", "author": {"login": "tfmorris"}, "path": ".github/workflows/pull_request.yml", "diffHunk": "@@ -0,0 +1,66 @@\n+name: Java CI\n+\n+on: [pull_request]\n+\n+jobs:\n+  build:\n+\n+    runs-on: ubuntu-latest", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c88b2e90376737d3c084ba8565678cb7f2bc931b"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDgxMjI0NQ==", "bodyText": "I would say that if we become incompatible with new versions of Ubuntu, it's good to be aware of it as soon as possible, so that's why ubuntu-latest makes intuitive sense to me.", "url": "https://github.com/OpenRefine/OpenRefine/pull/3378#discussion_r534812245", "createdAt": "2020-12-03T07:31:32Z", "author": {"login": "wetneb"}, "path": ".github/workflows/pull_request.yml", "diffHunk": "@@ -0,0 +1,66 @@\n+name: Java CI\n+\n+on: [pull_request]\n+\n+jobs:\n+  build:\n+\n+    runs-on: ubuntu-latest", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDU0NTU2Ng=="}, "originalCommit": {"oid": "c88b2e90376737d3c084ba8565678cb7f2bc931b"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTc3MDI4OA==", "bodyText": "They apparently generate artificial build \"warnings\" when they're getting ready to change what \"latest\" points to, so I suppose we can use that as a prompt to proactively test. Having avoidable unscheduled build breakages isn't really the best (as we've found out).", "url": "https://github.com/OpenRefine/OpenRefine/pull/3378#discussion_r535770288", "createdAt": "2020-12-04T01:33:29Z", "author": {"login": "tfmorris"}, "path": ".github/workflows/pull_request.yml", "diffHunk": "@@ -0,0 +1,66 @@\n+name: Java CI\n+\n+on: [pull_request]\n+\n+jobs:\n+  build:\n+\n+    runs-on: ubuntu-latest", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDU0NTU2Ng=="}, "originalCommit": {"oid": "c88b2e90376737d3c084ba8565678cb7f2bc931b"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1MzkwODkzOnYy", "diffSide": "RIGHT", "path": ".github/workflows/pull_request.yml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQyMzoyNjozNVrOH9ycsQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQyMzoyNjozNVrOH9ycsQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDU1MTcyOQ==", "bodyText": "I think we can probably run MySQL as a service too, along the lines of https://firefart.at/post/using-mysql-service-with-github-actions/, including the \"wait for availability\" check", "url": "https://github.com/OpenRefine/OpenRefine/pull/3378#discussion_r534551729", "createdAt": "2020-12-02T23:26:35Z", "author": {"login": "tfmorris"}, "path": ".github/workflows/pull_request.yml", "diffHunk": "@@ -0,0 +1,66 @@\n+name: Java CI\n+\n+on: [pull_request]\n+\n+jobs:\n+  build:\n+\n+    runs-on: ubuntu-latest\n+\n+    services:\n+      postgres:\n+        image: postgres\n+        env:\n+          POSTGRES_USER: postgres\n+          POSTGRES_PASSWORD: 'postgres'\n+          POSTGRES_DB: test_db\n+        options: >-\n+          --health-cmd pg_isready\n+          --health-interval 10s\n+          --health-timeout 5s\n+          --health-retries 5\n+\n+    steps:\n+    - name: Create test MySQL database\n+      id: create_test_db\n+      uses: mirromutth/mysql-action@v1.1\n+      with:\n+        host port: 3306\n+        container port: 3306\n+        mysql database: 'test_db'\n+        mysql root password: 'root'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c88b2e90376737d3c084ba8565678cb7f2bc931b"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1MzkxMjU2OnYy", "diffSide": "RIGHT", "path": ".github/workflows/pull_request.yml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQyMzoyNzo1NVrOH9yewg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxNzozNTozN1rOH-oxdw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDU1MjI1OA==", "bodyText": "Perhaps precede this with a \"wait for databases to be available\" check?", "url": "https://github.com/OpenRefine/OpenRefine/pull/3378#discussion_r534552258", "createdAt": "2020-12-02T23:27:55Z", "author": {"login": "tfmorris"}, "path": ".github/workflows/pull_request.yml", "diffHunk": "@@ -0,0 +1,66 @@\n+name: Java CI\n+\n+on: [pull_request]\n+\n+jobs:\n+  build:\n+\n+    runs-on: ubuntu-latest\n+\n+    services:\n+      postgres:\n+        image: postgres\n+        env:\n+          POSTGRES_USER: postgres\n+          POSTGRES_PASSWORD: 'postgres'\n+          POSTGRES_DB: test_db\n+        options: >-\n+          --health-cmd pg_isready\n+          --health-interval 10s\n+          --health-timeout 5s\n+          --health-retries 5\n+\n+    steps:\n+    - name: Create test MySQL database\n+      id: create_test_db\n+      uses: mirromutth/mysql-action@v1.1\n+      with:\n+        host port: 3306\n+        container port: 3306\n+        mysql database: 'test_db'\n+        mysql root password: 'root'\n+\n+    - uses: actions/checkout@v2.3.4\n+\n+    - name: Restore dependency cache\n+      uses: actions/cache@v2.1.3\n+      with:\n+        path: ~/.m2/repository\n+        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}\n+        restore-keys: |\n+            ${{ runner.os }}-maven-\n+\n+    - name: Set up JDK 1.8\n+      uses: actions/setup-java@v1\n+      with:\n+        java-version: 1.8\n+\n+    - name: Configure connections to databases\n+      id: configure_db_connections\n+      run: cp extensions/database/tests/conf/github_actions_tests.xml extensions/database/tests/conf/tests.xml \n+\n+    - name: Populate databases with test data", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c88b2e90376737d3c084ba8565678cb7f2bc931b"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTQ0MTc4Mw==", "bodyText": "Done when adding MySQL as a service.", "url": "https://github.com/OpenRefine/OpenRefine/pull/3378#discussion_r535441783", "createdAt": "2020-12-03T17:35:37Z", "author": {"login": "wetneb"}, "path": ".github/workflows/pull_request.yml", "diffHunk": "@@ -0,0 +1,66 @@\n+name: Java CI\n+\n+on: [pull_request]\n+\n+jobs:\n+  build:\n+\n+    runs-on: ubuntu-latest\n+\n+    services:\n+      postgres:\n+        image: postgres\n+        env:\n+          POSTGRES_USER: postgres\n+          POSTGRES_PASSWORD: 'postgres'\n+          POSTGRES_DB: test_db\n+        options: >-\n+          --health-cmd pg_isready\n+          --health-interval 10s\n+          --health-timeout 5s\n+          --health-retries 5\n+\n+    steps:\n+    - name: Create test MySQL database\n+      id: create_test_db\n+      uses: mirromutth/mysql-action@v1.1\n+      with:\n+        host port: 3306\n+        container port: 3306\n+        mysql database: 'test_db'\n+        mysql root password: 'root'\n+\n+    - uses: actions/checkout@v2.3.4\n+\n+    - name: Restore dependency cache\n+      uses: actions/cache@v2.1.3\n+      with:\n+        path: ~/.m2/repository\n+        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}\n+        restore-keys: |\n+            ${{ runner.os }}-maven-\n+\n+    - name: Set up JDK 1.8\n+      uses: actions/setup-java@v1\n+      with:\n+        java-version: 1.8\n+\n+    - name: Configure connections to databases\n+      id: configure_db_connections\n+      run: cp extensions/database/tests/conf/github_actions_tests.xml extensions/database/tests/conf/tests.xml \n+\n+    - name: Populate databases with test data", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDU1MjI1OA=="}, "originalCommit": {"oid": "c88b2e90376737d3c084ba8565678cb7f2bc931b"}, "originalPosition": 52}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1MzkxNjY2OnYy", "diffSide": "RIGHT", "path": "extensions/database/tests/conf/github_actions_tests.xml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQyMzoyOToyM1rOH9yhIg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQyMzoyOToyM1rOH9yhIg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDU1Mjg2Ng==", "bodyText": "I think these will need to be adjusted for DB as a service.", "url": "https://github.com/OpenRefine/OpenRefine/pull/3378#discussion_r534552866", "createdAt": "2020-12-02T23:29:23Z", "author": {"login": "tfmorris"}, "path": "extensions/database/tests/conf/github_actions_tests.xml", "diffHunk": "@@ -0,0 +1,55 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<suite name=\"DatabaseExtensionUnitTestSuite\">\n+    <parameter name = \"mySqlDbName\" value=\"test_db\"/> \n+    <parameter name = \"mySqlDbHost\" value=\"127.0.0.1\"/> \n+    <parameter name = \"mySqlDbPort\" value=\"3306\"/> ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c88b2e90376737d3c084ba8565678cb7f2bc931b"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1MzkxNzUwOnYy", "diffSide": "RIGHT", "path": "extensions/database/tests/conf/github_actions_tests.xml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQyMzoyOTo0MVrOH9yhnw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQyMzoyOTo0MVrOH9yhnw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDU1Mjk5MQ==", "bodyText": "Ditto comment above", "url": "https://github.com/OpenRefine/OpenRefine/pull/3378#discussion_r534552991", "createdAt": "2020-12-02T23:29:41Z", "author": {"login": "tfmorris"}, "path": "extensions/database/tests/conf/github_actions_tests.xml", "diffHunk": "@@ -0,0 +1,55 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<suite name=\"DatabaseExtensionUnitTestSuite\">\n+    <parameter name = \"mySqlDbName\" value=\"test_db\"/> \n+    <parameter name = \"mySqlDbHost\" value=\"127.0.0.1\"/> \n+    <parameter name = \"mySqlDbPort\" value=\"3306\"/> \n+    <parameter name = \"mySqlDbUser\" value=\"root\"/>\n+    <parameter name = \"mySqlDbPassword\" value=\"root\"/>\n+    <parameter name = \"mySqlTestTable\" value=\"test_table\"/>\n+    \n+    <parameter name = \"pgSqlDbName\" value=\"test_db\"/> \n+    <parameter name = \"pgSqlDbHost\" value=\"postgres\"/> \n+    <parameter name = \"pgSqlDbPort\" value=\"5432\"/> ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c88b2e90376737d3c084ba8565678cb7f2bc931b"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1MzkxOTg3OnYy", "diffSide": "RIGHT", "path": "extensions/database/tests/conf/github_actions_tests.xml", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQyMzozMDoyOVrOH9yi-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QwNjo1ODoxM1rOH9_QeQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDU1MzMzOA==", "bodyText": "I don't see this database being started anywhere.", "url": "https://github.com/OpenRefine/OpenRefine/pull/3378#discussion_r534553338", "createdAt": "2020-12-02T23:30:29Z", "author": {"login": "tfmorris"}, "path": "extensions/database/tests/conf/github_actions_tests.xml", "diffHunk": "@@ -0,0 +1,55 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<suite name=\"DatabaseExtensionUnitTestSuite\">\n+    <parameter name = \"mySqlDbName\" value=\"test_db\"/> \n+    <parameter name = \"mySqlDbHost\" value=\"127.0.0.1\"/> \n+    <parameter name = \"mySqlDbPort\" value=\"3306\"/> \n+    <parameter name = \"mySqlDbUser\" value=\"root\"/>\n+    <parameter name = \"mySqlDbPassword\" value=\"root\"/>\n+    <parameter name = \"mySqlTestTable\" value=\"test_table\"/>\n+    \n+    <parameter name = \"pgSqlDbName\" value=\"test_db\"/> \n+    <parameter name = \"pgSqlDbHost\" value=\"postgres\"/> \n+    <parameter name = \"pgSqlDbPort\" value=\"5432\"/> \n+    <parameter name = \"pgSqlDbUser\" value=\"postgres\"/>\n+    <parameter name = \"pgSqlDbPassword\" value=\"postgres\"/>\n+    <parameter name = \"pgSqlTestTable\" value=\"test_table\"/>\n+    \n+    <parameter name = \"mariaDbName\" value=\"test_db\"/> \n+    <parameter name = \"mariaDbHost\" value=\"127.0.0.1\"/> \n+    <parameter name = \"mariadbDbPort\" value=\"3306\"/> \n+    <parameter name = \"mariaDbUser\" value=\"root\"/>\n+    <parameter name = \"mariaDbPassword\" value=\"root\"/>\n+    <parameter name = \"mariaDbTestTable\" value=\"test_table\"/>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c88b2e90376737d3c084ba8565678cb7f2bc931b"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDc2MTU5Mw==", "bodyText": "Yes indeed, I realized that so far in Travis we actually tested the MariaDB connector with the MySQL instance (since they both connected to port 3306). It could be worth spinning a real MariaDB instance instead.", "url": "https://github.com/OpenRefine/OpenRefine/pull/3378#discussion_r534761593", "createdAt": "2020-12-03T06:58:13Z", "author": {"login": "wetneb"}, "path": "extensions/database/tests/conf/github_actions_tests.xml", "diffHunk": "@@ -0,0 +1,55 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<suite name=\"DatabaseExtensionUnitTestSuite\">\n+    <parameter name = \"mySqlDbName\" value=\"test_db\"/> \n+    <parameter name = \"mySqlDbHost\" value=\"127.0.0.1\"/> \n+    <parameter name = \"mySqlDbPort\" value=\"3306\"/> \n+    <parameter name = \"mySqlDbUser\" value=\"root\"/>\n+    <parameter name = \"mySqlDbPassword\" value=\"root\"/>\n+    <parameter name = \"mySqlTestTable\" value=\"test_table\"/>\n+    \n+    <parameter name = \"pgSqlDbName\" value=\"test_db\"/> \n+    <parameter name = \"pgSqlDbHost\" value=\"postgres\"/> \n+    <parameter name = \"pgSqlDbPort\" value=\"5432\"/> \n+    <parameter name = \"pgSqlDbUser\" value=\"postgres\"/>\n+    <parameter name = \"pgSqlDbPassword\" value=\"postgres\"/>\n+    <parameter name = \"pgSqlTestTable\" value=\"test_table\"/>\n+    \n+    <parameter name = \"mariaDbName\" value=\"test_db\"/> \n+    <parameter name = \"mariaDbHost\" value=\"127.0.0.1\"/> \n+    <parameter name = \"mariadbDbPort\" value=\"3306\"/> \n+    <parameter name = \"mariaDbUser\" value=\"root\"/>\n+    <parameter name = \"mariaDbPassword\" value=\"root\"/>\n+    <parameter name = \"mariaDbTestTable\" value=\"test_table\"/>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDU1MzMzOA=="}, "originalCommit": {"oid": "c88b2e90376737d3c084ba8565678cb7f2bc931b"}, "originalPosition": 22}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2838, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}