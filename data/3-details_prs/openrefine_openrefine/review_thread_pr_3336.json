{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIxODcwNTcz", "number": 3336, "reviewThreads": {"totalCount": 16, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQxNjoyNjo0OVrOE9s0rw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QxMDo1ODoxMVrOFGpfEA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMzMTMyOTc1OnYy", "diffSide": "RIGHT", "path": "docs/docs/manual/exporting.md", "isResolved": true, "comments": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQxNjoyNjo0OVrOH6h2sg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QyMDo1MToyOFrOH-yQbw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTEzNDEzMA==", "bodyText": "I think it would be worth expanding a bit here, on the following topics:\n\nthe syntax of the templates (how do you introduce a template bit? how do you escape braces?)\nthe evaluation context of the expressions used in the template: what variables can you use there?\ncan you use other expression languages than GREL inside the templates?", "url": "https://github.com/OpenRefine/OpenRefine/pull/3336#discussion_r531134130", "createdAt": "2020-11-26T16:26:49Z", "author": {"login": "wetneb"}, "path": "docs/docs/manual/exporting.md", "diffHunk": "@@ -6,34 +6,76 @@ sidebar_label: Exporting\n \n ## Overview\n \n+Once your data is cleaned, you will need to get it out of OpenRefine and into the system of your choice. OpenRefine outputs a number of file formats, can upload your data directly into Google Sheets, and can export directly to Wikidata. \n+\n+You can also export your full project data so that it can be opened by someone else using OpenRefine (or yourself, on another computer).\n \n ## Export data\n \n Note you will only export data in the current view - that is, with current filters and facets applied. \n \n+To export from a project, click the Export button at the top right corner and pick the format you want. You options are:\n \n-\n-*   TSV/CSV\n-*   HTML table\n+*   Tab-separated value (TSV) or Comma-separated value (CSV)\n+*   HTML-formatted table\n *   Excel (XLS or XLSX)\n *   ODF spreadsheet\n-*   Google Sheets \\\n+*   Upload to Google Sheets (requires Google account authorization)\n+*   [Custom tabular exporter](#custom-tabular-exporter)\n+*   [SQL statement exporter](#sql-statement-exporter)\n+*   [Templating exporter](#templating-exporter)\n \n-*   Custom tabular export\n-*   SQL\n-*   Templating export \\\n+You can also [export reconciled data to Wikidata](wikidata#editing-wikidata-with-openrefine), or save your schema for future use with others OpenRefine projects:\n \n *   Upload edits to Wikidata\n *   Export to QuickStatement\n *   Export Wikidata schema\n \n+### Custom tabular exporter\n+\n+![A screenshot of the custom tabular content tab.](/img/custom-tabular-exporter.png)\n+\n+With the custom tabular exporter, you can choose which of your data to export, the separator you wish to use, and whether you'd like to download it to your computer or upload it into a Google Sheet. This exporter is especially useful with reconciled data, as you can choose whether you wish to output the cells' original values, the matched values, or the matched IDs. \n+\n+You can also choose how to output date-formatted cells, and whether you wish to export all the project's data or just the current view set. \n+\n+![A screenshot of the custom tabular file download tab.](/img/custom-tabular-exporter2.png)\n+\n+With the download options, you can generate a preview of how the first ten rows of your dataset will output. If you do not choose one of the file formats on the right, the \"Download\" button will generate a text file. \n+\n+With the \"Option Code\" tab, you can copy JSON data that saves your current settings, to reuse on another project, or you can paste in existing JSON settings data to apply to the current project. \n+\n+### SQL statement exporter\n+\n+The SQL statement exporter creates a table containing the data you\u2019ve exported, which you can use to overwrite an existing database.\n+\n+![A screenshot of the SQL statement creator window.](/img/sql-exporter.png)\n+\n+A window with two tabs will pop up: one to define what data to output, and another to modify the statement table. This allows you to craft a complete SQL command, including DROP and IF EXISTS if you require them. \n+\n+![A screenshot of the SQL statement download window.](/img/sql-exporter2.png)\n+\n+\n+### Templating exporter\n+\n+If you pick <span class=\"menuItems\">Templating\u2026</span> from the <span class=\"menuItems\">Export</span> dropdown menu, you can \u201croll your own\u201d exporter. This is useful for formats that we don't support natively yet, or won't support. For example, the Templating exporter generates JSON by default. \n+\n+The window that appears allows you to set your own separators, prefix, and suffix to create a complete dataset in the language of your choice. In the Row Template section, you can choose which columns to generate from each row by calling them with variables. \n+\n+![A screenshot of the Templating exporter generating JSON by default.](/img/templating-exporter.png)\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bf8c2c4ec8ac0d8bae416a4e2258c1d71624edbf"}, "originalPosition": 68}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTc4MzE4Ng==", "bodyText": "Thanks for these suggestions. I'm able to expand on the variables and some syntax, but: can you use other expression languages? I wouldn't know where to begin figuring that out on my own. Is there a jsonize() equivalent in clojure? I can't seem to get any clojure syntax to work but that's hardly an indicator of anything.", "url": "https://github.com/OpenRefine/OpenRefine/pull/3336#discussion_r531783186", "createdAt": "2020-11-27T20:52:41Z", "author": {"login": "allanaaa"}, "path": "docs/docs/manual/exporting.md", "diffHunk": "@@ -6,34 +6,76 @@ sidebar_label: Exporting\n \n ## Overview\n \n+Once your data is cleaned, you will need to get it out of OpenRefine and into the system of your choice. OpenRefine outputs a number of file formats, can upload your data directly into Google Sheets, and can export directly to Wikidata. \n+\n+You can also export your full project data so that it can be opened by someone else using OpenRefine (or yourself, on another computer).\n \n ## Export data\n \n Note you will only export data in the current view - that is, with current filters and facets applied. \n \n+To export from a project, click the Export button at the top right corner and pick the format you want. You options are:\n \n-\n-*   TSV/CSV\n-*   HTML table\n+*   Tab-separated value (TSV) or Comma-separated value (CSV)\n+*   HTML-formatted table\n *   Excel (XLS or XLSX)\n *   ODF spreadsheet\n-*   Google Sheets \\\n+*   Upload to Google Sheets (requires Google account authorization)\n+*   [Custom tabular exporter](#custom-tabular-exporter)\n+*   [SQL statement exporter](#sql-statement-exporter)\n+*   [Templating exporter](#templating-exporter)\n \n-*   Custom tabular export\n-*   SQL\n-*   Templating export \\\n+You can also [export reconciled data to Wikidata](wikidata#editing-wikidata-with-openrefine), or save your schema for future use with others OpenRefine projects:\n \n *   Upload edits to Wikidata\n *   Export to QuickStatement\n *   Export Wikidata schema\n \n+### Custom tabular exporter\n+\n+![A screenshot of the custom tabular content tab.](/img/custom-tabular-exporter.png)\n+\n+With the custom tabular exporter, you can choose which of your data to export, the separator you wish to use, and whether you'd like to download it to your computer or upload it into a Google Sheet. This exporter is especially useful with reconciled data, as you can choose whether you wish to output the cells' original values, the matched values, or the matched IDs. \n+\n+You can also choose how to output date-formatted cells, and whether you wish to export all the project's data or just the current view set. \n+\n+![A screenshot of the custom tabular file download tab.](/img/custom-tabular-exporter2.png)\n+\n+With the download options, you can generate a preview of how the first ten rows of your dataset will output. If you do not choose one of the file formats on the right, the \"Download\" button will generate a text file. \n+\n+With the \"Option Code\" tab, you can copy JSON data that saves your current settings, to reuse on another project, or you can paste in existing JSON settings data to apply to the current project. \n+\n+### SQL statement exporter\n+\n+The SQL statement exporter creates a table containing the data you\u2019ve exported, which you can use to overwrite an existing database.\n+\n+![A screenshot of the SQL statement creator window.](/img/sql-exporter.png)\n+\n+A window with two tabs will pop up: one to define what data to output, and another to modify the statement table. This allows you to craft a complete SQL command, including DROP and IF EXISTS if you require them. \n+\n+![A screenshot of the SQL statement download window.](/img/sql-exporter2.png)\n+\n+\n+### Templating exporter\n+\n+If you pick <span class=\"menuItems\">Templating\u2026</span> from the <span class=\"menuItems\">Export</span> dropdown menu, you can \u201croll your own\u201d exporter. This is useful for formats that we don't support natively yet, or won't support. For example, the Templating exporter generates JSON by default. \n+\n+The window that appears allows you to set your own separators, prefix, and suffix to create a complete dataset in the language of your choice. In the Row Template section, you can choose which columns to generate from each row by calling them with variables. \n+\n+![A screenshot of the Templating exporter generating JSON by default.](/img/templating-exporter.png)\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTEzNDEzMA=="}, "originalCommit": {"oid": "bf8c2c4ec8ac0d8bae416a4e2258c1d71624edbf"}, "originalPosition": 68}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTc4OTQ0NA==", "bodyText": "My mistake, you've tricked me. How do you escape a curly brace? Our regular approach is useless here.", "url": "https://github.com/OpenRefine/OpenRefine/pull/3336#discussion_r531789444", "createdAt": "2020-11-27T21:27:42Z", "author": {"login": "allanaaa"}, "path": "docs/docs/manual/exporting.md", "diffHunk": "@@ -6,34 +6,76 @@ sidebar_label: Exporting\n \n ## Overview\n \n+Once your data is cleaned, you will need to get it out of OpenRefine and into the system of your choice. OpenRefine outputs a number of file formats, can upload your data directly into Google Sheets, and can export directly to Wikidata. \n+\n+You can also export your full project data so that it can be opened by someone else using OpenRefine (or yourself, on another computer).\n \n ## Export data\n \n Note you will only export data in the current view - that is, with current filters and facets applied. \n \n+To export from a project, click the Export button at the top right corner and pick the format you want. You options are:\n \n-\n-*   TSV/CSV\n-*   HTML table\n+*   Tab-separated value (TSV) or Comma-separated value (CSV)\n+*   HTML-formatted table\n *   Excel (XLS or XLSX)\n *   ODF spreadsheet\n-*   Google Sheets \\\n+*   Upload to Google Sheets (requires Google account authorization)\n+*   [Custom tabular exporter](#custom-tabular-exporter)\n+*   [SQL statement exporter](#sql-statement-exporter)\n+*   [Templating exporter](#templating-exporter)\n \n-*   Custom tabular export\n-*   SQL\n-*   Templating export \\\n+You can also [export reconciled data to Wikidata](wikidata#editing-wikidata-with-openrefine), or save your schema for future use with others OpenRefine projects:\n \n *   Upload edits to Wikidata\n *   Export to QuickStatement\n *   Export Wikidata schema\n \n+### Custom tabular exporter\n+\n+![A screenshot of the custom tabular content tab.](/img/custom-tabular-exporter.png)\n+\n+With the custom tabular exporter, you can choose which of your data to export, the separator you wish to use, and whether you'd like to download it to your computer or upload it into a Google Sheet. This exporter is especially useful with reconciled data, as you can choose whether you wish to output the cells' original values, the matched values, or the matched IDs. \n+\n+You can also choose how to output date-formatted cells, and whether you wish to export all the project's data or just the current view set. \n+\n+![A screenshot of the custom tabular file download tab.](/img/custom-tabular-exporter2.png)\n+\n+With the download options, you can generate a preview of how the first ten rows of your dataset will output. If you do not choose one of the file formats on the right, the \"Download\" button will generate a text file. \n+\n+With the \"Option Code\" tab, you can copy JSON data that saves your current settings, to reuse on another project, or you can paste in existing JSON settings data to apply to the current project. \n+\n+### SQL statement exporter\n+\n+The SQL statement exporter creates a table containing the data you\u2019ve exported, which you can use to overwrite an existing database.\n+\n+![A screenshot of the SQL statement creator window.](/img/sql-exporter.png)\n+\n+A window with two tabs will pop up: one to define what data to output, and another to modify the statement table. This allows you to craft a complete SQL command, including DROP and IF EXISTS if you require them. \n+\n+![A screenshot of the SQL statement download window.](/img/sql-exporter2.png)\n+\n+\n+### Templating exporter\n+\n+If you pick <span class=\"menuItems\">Templating\u2026</span> from the <span class=\"menuItems\">Export</span> dropdown menu, you can \u201croll your own\u201d exporter. This is useful for formats that we don't support natively yet, or won't support. For example, the Templating exporter generates JSON by default. \n+\n+The window that appears allows you to set your own separators, prefix, and suffix to create a complete dataset in the language of your choice. In the Row Template section, you can choose which columns to generate from each row by calling them with variables. \n+\n+![A screenshot of the Templating exporter generating JSON by default.](/img/templating-exporter.png)\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTEzNDEzMA=="}, "originalCommit": {"oid": "bf8c2c4ec8ac0d8bae416a4e2258c1d71624edbf"}, "originalPosition": 68}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjAzNDE0MA==", "bodyText": "Good points, I don't actually know the answer to any of these questions! I'll investigate in the code and report back.", "url": "https://github.com/OpenRefine/OpenRefine/pull/3336#discussion_r532034140", "createdAt": "2020-11-28T12:22:14Z", "author": {"login": "wetneb"}, "path": "docs/docs/manual/exporting.md", "diffHunk": "@@ -6,34 +6,76 @@ sidebar_label: Exporting\n \n ## Overview\n \n+Once your data is cleaned, you will need to get it out of OpenRefine and into the system of your choice. OpenRefine outputs a number of file formats, can upload your data directly into Google Sheets, and can export directly to Wikidata. \n+\n+You can also export your full project data so that it can be opened by someone else using OpenRefine (or yourself, on another computer).\n \n ## Export data\n \n Note you will only export data in the current view - that is, with current filters and facets applied. \n \n+To export from a project, click the Export button at the top right corner and pick the format you want. You options are:\n \n-\n-*   TSV/CSV\n-*   HTML table\n+*   Tab-separated value (TSV) or Comma-separated value (CSV)\n+*   HTML-formatted table\n *   Excel (XLS or XLSX)\n *   ODF spreadsheet\n-*   Google Sheets \\\n+*   Upload to Google Sheets (requires Google account authorization)\n+*   [Custom tabular exporter](#custom-tabular-exporter)\n+*   [SQL statement exporter](#sql-statement-exporter)\n+*   [Templating exporter](#templating-exporter)\n \n-*   Custom tabular export\n-*   SQL\n-*   Templating export \\\n+You can also [export reconciled data to Wikidata](wikidata#editing-wikidata-with-openrefine), or save your schema for future use with others OpenRefine projects:\n \n *   Upload edits to Wikidata\n *   Export to QuickStatement\n *   Export Wikidata schema\n \n+### Custom tabular exporter\n+\n+![A screenshot of the custom tabular content tab.](/img/custom-tabular-exporter.png)\n+\n+With the custom tabular exporter, you can choose which of your data to export, the separator you wish to use, and whether you'd like to download it to your computer or upload it into a Google Sheet. This exporter is especially useful with reconciled data, as you can choose whether you wish to output the cells' original values, the matched values, or the matched IDs. \n+\n+You can also choose how to output date-formatted cells, and whether you wish to export all the project's data or just the current view set. \n+\n+![A screenshot of the custom tabular file download tab.](/img/custom-tabular-exporter2.png)\n+\n+With the download options, you can generate a preview of how the first ten rows of your dataset will output. If you do not choose one of the file formats on the right, the \"Download\" button will generate a text file. \n+\n+With the \"Option Code\" tab, you can copy JSON data that saves your current settings, to reuse on another project, or you can paste in existing JSON settings data to apply to the current project. \n+\n+### SQL statement exporter\n+\n+The SQL statement exporter creates a table containing the data you\u2019ve exported, which you can use to overwrite an existing database.\n+\n+![A screenshot of the SQL statement creator window.](/img/sql-exporter.png)\n+\n+A window with two tabs will pop up: one to define what data to output, and another to modify the statement table. This allows you to craft a complete SQL command, including DROP and IF EXISTS if you require them. \n+\n+![A screenshot of the SQL statement download window.](/img/sql-exporter2.png)\n+\n+\n+### Templating exporter\n+\n+If you pick <span class=\"menuItems\">Templating\u2026</span> from the <span class=\"menuItems\">Export</span> dropdown menu, you can \u201croll your own\u201d exporter. This is useful for formats that we don't support natively yet, or won't support. For example, the Templating exporter generates JSON by default. \n+\n+The window that appears allows you to set your own separators, prefix, and suffix to create a complete dataset in the language of your choice. In the Row Template section, you can choose which columns to generate from each row by calling them with variables. \n+\n+![A screenshot of the Templating exporter generating JSON by default.](/img/templating-exporter.png)\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTEzNDEzMA=="}, "originalCommit": {"oid": "bf8c2c4ec8ac0d8bae416a4e2258c1d71624edbf"}, "originalPosition": 68}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjUxNzI1Mw==", "bodyText": "So, looking at the code (I haven't checked that it does work, it'd be useful if you do)\n\nThe characters \\, { and $ can be escaped with \\ (so, \\\\, \\{ and \\$ respectively produce \\, { and $).\nYou can use ${myColumn} to insert values from a given column\nYou can use {{ some expression }} to insert values obtained by any expression. By default the expression is expected to be written in GREL, but you can use other languages too: {{jython:return cells[\"myColumn\"].value}} should work as well (and same for clojure).\nIt's not clear to me if there is a simple way for users to figure out the exact language identifier (here jython) to use - it can be observed in the history when you use these expressions in other operations, but that is not very convenient. Perhaps we could just list the available language identifiers in this part of the documentation for convenience? Or in the general documentation about expressions if this is useful elsewhere.", "url": "https://github.com/OpenRefine/OpenRefine/pull/3336#discussion_r532517253", "createdAt": "2020-11-30T11:09:18Z", "author": {"login": "wetneb"}, "path": "docs/docs/manual/exporting.md", "diffHunk": "@@ -6,34 +6,76 @@ sidebar_label: Exporting\n \n ## Overview\n \n+Once your data is cleaned, you will need to get it out of OpenRefine and into the system of your choice. OpenRefine outputs a number of file formats, can upload your data directly into Google Sheets, and can export directly to Wikidata. \n+\n+You can also export your full project data so that it can be opened by someone else using OpenRefine (or yourself, on another computer).\n \n ## Export data\n \n Note you will only export data in the current view - that is, with current filters and facets applied. \n \n+To export from a project, click the Export button at the top right corner and pick the format you want. You options are:\n \n-\n-*   TSV/CSV\n-*   HTML table\n+*   Tab-separated value (TSV) or Comma-separated value (CSV)\n+*   HTML-formatted table\n *   Excel (XLS or XLSX)\n *   ODF spreadsheet\n-*   Google Sheets \\\n+*   Upload to Google Sheets (requires Google account authorization)\n+*   [Custom tabular exporter](#custom-tabular-exporter)\n+*   [SQL statement exporter](#sql-statement-exporter)\n+*   [Templating exporter](#templating-exporter)\n \n-*   Custom tabular export\n-*   SQL\n-*   Templating export \\\n+You can also [export reconciled data to Wikidata](wikidata#editing-wikidata-with-openrefine), or save your schema for future use with others OpenRefine projects:\n \n *   Upload edits to Wikidata\n *   Export to QuickStatement\n *   Export Wikidata schema\n \n+### Custom tabular exporter\n+\n+![A screenshot of the custom tabular content tab.](/img/custom-tabular-exporter.png)\n+\n+With the custom tabular exporter, you can choose which of your data to export, the separator you wish to use, and whether you'd like to download it to your computer or upload it into a Google Sheet. This exporter is especially useful with reconciled data, as you can choose whether you wish to output the cells' original values, the matched values, or the matched IDs. \n+\n+You can also choose how to output date-formatted cells, and whether you wish to export all the project's data or just the current view set. \n+\n+![A screenshot of the custom tabular file download tab.](/img/custom-tabular-exporter2.png)\n+\n+With the download options, you can generate a preview of how the first ten rows of your dataset will output. If you do not choose one of the file formats on the right, the \"Download\" button will generate a text file. \n+\n+With the \"Option Code\" tab, you can copy JSON data that saves your current settings, to reuse on another project, or you can paste in existing JSON settings data to apply to the current project. \n+\n+### SQL statement exporter\n+\n+The SQL statement exporter creates a table containing the data you\u2019ve exported, which you can use to overwrite an existing database.\n+\n+![A screenshot of the SQL statement creator window.](/img/sql-exporter.png)\n+\n+A window with two tabs will pop up: one to define what data to output, and another to modify the statement table. This allows you to craft a complete SQL command, including DROP and IF EXISTS if you require them. \n+\n+![A screenshot of the SQL statement download window.](/img/sql-exporter2.png)\n+\n+\n+### Templating exporter\n+\n+If you pick <span class=\"menuItems\">Templating\u2026</span> from the <span class=\"menuItems\">Export</span> dropdown menu, you can \u201croll your own\u201d exporter. This is useful for formats that we don't support natively yet, or won't support. For example, the Templating exporter generates JSON by default. \n+\n+The window that appears allows you to set your own separators, prefix, and suffix to create a complete dataset in the language of your choice. In the Row Template section, you can choose which columns to generate from each row by calling them with variables. \n+\n+![A screenshot of the Templating exporter generating JSON by default.](/img/templating-exporter.png)\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTEzNDEzMA=="}, "originalCommit": {"oid": "bf8c2c4ec8ac0d8bae416a4e2258c1d71624edbf"}, "originalPosition": 68}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjc1NjMwNQ==", "bodyText": "I don't have any luck escaping curly braces in regex with a backslash.\nvalue.match(/.*(\\d\\d\\d\\d)/) works fine but value.match(/.*(\\d\\{4\\})/) does not resolve - it just outputs the entire {{}} formula as text.\nThe statement value.find(/[,.!{@#$\\?]/) doesn't need the opening curly brace escaped. But it won't accept a CLOSING curly brace, with or without a backslash.\nI don't seem to need to escape a $ at all - the GREL runs just fine with it in. I don't need to cancel a backslash, but I do need to cancel a forward slash with a backslash. (value.find(/[,.!{@#\\/$\\?]/))\nSo, I am not sure what this has to do with the code you looked at. Help please!\nThanks for the jython though!", "url": "https://github.com/OpenRefine/OpenRefine/pull/3336#discussion_r532756305", "createdAt": "2020-11-30T17:06:50Z", "author": {"login": "allanaaa"}, "path": "docs/docs/manual/exporting.md", "diffHunk": "@@ -6,34 +6,76 @@ sidebar_label: Exporting\n \n ## Overview\n \n+Once your data is cleaned, you will need to get it out of OpenRefine and into the system of your choice. OpenRefine outputs a number of file formats, can upload your data directly into Google Sheets, and can export directly to Wikidata. \n+\n+You can also export your full project data so that it can be opened by someone else using OpenRefine (or yourself, on another computer).\n \n ## Export data\n \n Note you will only export data in the current view - that is, with current filters and facets applied. \n \n+To export from a project, click the Export button at the top right corner and pick the format you want. You options are:\n \n-\n-*   TSV/CSV\n-*   HTML table\n+*   Tab-separated value (TSV) or Comma-separated value (CSV)\n+*   HTML-formatted table\n *   Excel (XLS or XLSX)\n *   ODF spreadsheet\n-*   Google Sheets \\\n+*   Upload to Google Sheets (requires Google account authorization)\n+*   [Custom tabular exporter](#custom-tabular-exporter)\n+*   [SQL statement exporter](#sql-statement-exporter)\n+*   [Templating exporter](#templating-exporter)\n \n-*   Custom tabular export\n-*   SQL\n-*   Templating export \\\n+You can also [export reconciled data to Wikidata](wikidata#editing-wikidata-with-openrefine), or save your schema for future use with others OpenRefine projects:\n \n *   Upload edits to Wikidata\n *   Export to QuickStatement\n *   Export Wikidata schema\n \n+### Custom tabular exporter\n+\n+![A screenshot of the custom tabular content tab.](/img/custom-tabular-exporter.png)\n+\n+With the custom tabular exporter, you can choose which of your data to export, the separator you wish to use, and whether you'd like to download it to your computer or upload it into a Google Sheet. This exporter is especially useful with reconciled data, as you can choose whether you wish to output the cells' original values, the matched values, or the matched IDs. \n+\n+You can also choose how to output date-formatted cells, and whether you wish to export all the project's data or just the current view set. \n+\n+![A screenshot of the custom tabular file download tab.](/img/custom-tabular-exporter2.png)\n+\n+With the download options, you can generate a preview of how the first ten rows of your dataset will output. If you do not choose one of the file formats on the right, the \"Download\" button will generate a text file. \n+\n+With the \"Option Code\" tab, you can copy JSON data that saves your current settings, to reuse on another project, or you can paste in existing JSON settings data to apply to the current project. \n+\n+### SQL statement exporter\n+\n+The SQL statement exporter creates a table containing the data you\u2019ve exported, which you can use to overwrite an existing database.\n+\n+![A screenshot of the SQL statement creator window.](/img/sql-exporter.png)\n+\n+A window with two tabs will pop up: one to define what data to output, and another to modify the statement table. This allows you to craft a complete SQL command, including DROP and IF EXISTS if you require them. \n+\n+![A screenshot of the SQL statement download window.](/img/sql-exporter2.png)\n+\n+\n+### Templating exporter\n+\n+If you pick <span class=\"menuItems\">Templating\u2026</span> from the <span class=\"menuItems\">Export</span> dropdown menu, you can \u201croll your own\u201d exporter. This is useful for formats that we don't support natively yet, or won't support. For example, the Templating exporter generates JSON by default. \n+\n+The window that appears allows you to set your own separators, prefix, and suffix to create a complete dataset in the language of your choice. In the Row Template section, you can choose which columns to generate from each row by calling them with variables. \n+\n+![A screenshot of the Templating exporter generating JSON by default.](/img/templating-exporter.png)\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTEzNDEzMA=="}, "originalCommit": {"oid": "bf8c2c4ec8ac0d8bae416a4e2258c1d71624edbf"}, "originalPosition": 68}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTIyNTM0Ng==", "bodyText": "I would not be surprised if this escaping code was buggy. Let's debug this together in today's meeting perhaps?", "url": "https://github.com/OpenRefine/OpenRefine/pull/3336#discussion_r535225346", "createdAt": "2020-12-03T13:26:12Z", "author": {"login": "wetneb"}, "path": "docs/docs/manual/exporting.md", "diffHunk": "@@ -6,34 +6,76 @@ sidebar_label: Exporting\n \n ## Overview\n \n+Once your data is cleaned, you will need to get it out of OpenRefine and into the system of your choice. OpenRefine outputs a number of file formats, can upload your data directly into Google Sheets, and can export directly to Wikidata. \n+\n+You can also export your full project data so that it can be opened by someone else using OpenRefine (or yourself, on another computer).\n \n ## Export data\n \n Note you will only export data in the current view - that is, with current filters and facets applied. \n \n+To export from a project, click the Export button at the top right corner and pick the format you want. You options are:\n \n-\n-*   TSV/CSV\n-*   HTML table\n+*   Tab-separated value (TSV) or Comma-separated value (CSV)\n+*   HTML-formatted table\n *   Excel (XLS or XLSX)\n *   ODF spreadsheet\n-*   Google Sheets \\\n+*   Upload to Google Sheets (requires Google account authorization)\n+*   [Custom tabular exporter](#custom-tabular-exporter)\n+*   [SQL statement exporter](#sql-statement-exporter)\n+*   [Templating exporter](#templating-exporter)\n \n-*   Custom tabular export\n-*   SQL\n-*   Templating export \\\n+You can also [export reconciled data to Wikidata](wikidata#editing-wikidata-with-openrefine), or save your schema for future use with others OpenRefine projects:\n \n *   Upload edits to Wikidata\n *   Export to QuickStatement\n *   Export Wikidata schema\n \n+### Custom tabular exporter\n+\n+![A screenshot of the custom tabular content tab.](/img/custom-tabular-exporter.png)\n+\n+With the custom tabular exporter, you can choose which of your data to export, the separator you wish to use, and whether you'd like to download it to your computer or upload it into a Google Sheet. This exporter is especially useful with reconciled data, as you can choose whether you wish to output the cells' original values, the matched values, or the matched IDs. \n+\n+You can also choose how to output date-formatted cells, and whether you wish to export all the project's data or just the current view set. \n+\n+![A screenshot of the custom tabular file download tab.](/img/custom-tabular-exporter2.png)\n+\n+With the download options, you can generate a preview of how the first ten rows of your dataset will output. If you do not choose one of the file formats on the right, the \"Download\" button will generate a text file. \n+\n+With the \"Option Code\" tab, you can copy JSON data that saves your current settings, to reuse on another project, or you can paste in existing JSON settings data to apply to the current project. \n+\n+### SQL statement exporter\n+\n+The SQL statement exporter creates a table containing the data you\u2019ve exported, which you can use to overwrite an existing database.\n+\n+![A screenshot of the SQL statement creator window.](/img/sql-exporter.png)\n+\n+A window with two tabs will pop up: one to define what data to output, and another to modify the statement table. This allows you to craft a complete SQL command, including DROP and IF EXISTS if you require them. \n+\n+![A screenshot of the SQL statement download window.](/img/sql-exporter2.png)\n+\n+\n+### Templating exporter\n+\n+If you pick <span class=\"menuItems\">Templating\u2026</span> from the <span class=\"menuItems\">Export</span> dropdown menu, you can \u201croll your own\u201d exporter. This is useful for formats that we don't support natively yet, or won't support. For example, the Templating exporter generates JSON by default. \n+\n+The window that appears allows you to set your own separators, prefix, and suffix to create a complete dataset in the language of your choice. In the Row Template section, you can choose which columns to generate from each row by calling them with variables. \n+\n+![A screenshot of the Templating exporter generating JSON by default.](/img/templating-exporter.png)\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTEzNDEzMA=="}, "originalCommit": {"oid": "bf8c2c4ec8ac0d8bae416a4e2258c1d71624edbf"}, "originalPosition": 68}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTUyMTQwNQ==", "bodyText": "Anything that appears inside curly braces ({{}}) is treated as a GREL expression; anything outside is generated as straight text. You can use Jython or Clojure by declaring it at the start: for example, {{jython:return cells[\"Author\"].value}} will run a Jython expression.\ncaution\nNote that some syntax is different in this tool than elsewhere in OpenRefine: a forward slash must be escaped with a backslash, while other characters do not need escaping. You cannot, at this time, include a closing curly brace (}) anywhere in your expression, or it will cause it to malfunction.\n\nHere's what we've got for now.", "url": "https://github.com/OpenRefine/OpenRefine/pull/3336#discussion_r535521405", "createdAt": "2020-12-03T19:28:47Z", "author": {"login": "allanaaa"}, "path": "docs/docs/manual/exporting.md", "diffHunk": "@@ -6,34 +6,76 @@ sidebar_label: Exporting\n \n ## Overview\n \n+Once your data is cleaned, you will need to get it out of OpenRefine and into the system of your choice. OpenRefine outputs a number of file formats, can upload your data directly into Google Sheets, and can export directly to Wikidata. \n+\n+You can also export your full project data so that it can be opened by someone else using OpenRefine (or yourself, on another computer).\n \n ## Export data\n \n Note you will only export data in the current view - that is, with current filters and facets applied. \n \n+To export from a project, click the Export button at the top right corner and pick the format you want. You options are:\n \n-\n-*   TSV/CSV\n-*   HTML table\n+*   Tab-separated value (TSV) or Comma-separated value (CSV)\n+*   HTML-formatted table\n *   Excel (XLS or XLSX)\n *   ODF spreadsheet\n-*   Google Sheets \\\n+*   Upload to Google Sheets (requires Google account authorization)\n+*   [Custom tabular exporter](#custom-tabular-exporter)\n+*   [SQL statement exporter](#sql-statement-exporter)\n+*   [Templating exporter](#templating-exporter)\n \n-*   Custom tabular export\n-*   SQL\n-*   Templating export \\\n+You can also [export reconciled data to Wikidata](wikidata#editing-wikidata-with-openrefine), or save your schema for future use with others OpenRefine projects:\n \n *   Upload edits to Wikidata\n *   Export to QuickStatement\n *   Export Wikidata schema\n \n+### Custom tabular exporter\n+\n+![A screenshot of the custom tabular content tab.](/img/custom-tabular-exporter.png)\n+\n+With the custom tabular exporter, you can choose which of your data to export, the separator you wish to use, and whether you'd like to download it to your computer or upload it into a Google Sheet. This exporter is especially useful with reconciled data, as you can choose whether you wish to output the cells' original values, the matched values, or the matched IDs. \n+\n+You can also choose how to output date-formatted cells, and whether you wish to export all the project's data or just the current view set. \n+\n+![A screenshot of the custom tabular file download tab.](/img/custom-tabular-exporter2.png)\n+\n+With the download options, you can generate a preview of how the first ten rows of your dataset will output. If you do not choose one of the file formats on the right, the \"Download\" button will generate a text file. \n+\n+With the \"Option Code\" tab, you can copy JSON data that saves your current settings, to reuse on another project, or you can paste in existing JSON settings data to apply to the current project. \n+\n+### SQL statement exporter\n+\n+The SQL statement exporter creates a table containing the data you\u2019ve exported, which you can use to overwrite an existing database.\n+\n+![A screenshot of the SQL statement creator window.](/img/sql-exporter.png)\n+\n+A window with two tabs will pop up: one to define what data to output, and another to modify the statement table. This allows you to craft a complete SQL command, including DROP and IF EXISTS if you require them. \n+\n+![A screenshot of the SQL statement download window.](/img/sql-exporter2.png)\n+\n+\n+### Templating exporter\n+\n+If you pick <span class=\"menuItems\">Templating\u2026</span> from the <span class=\"menuItems\">Export</span> dropdown menu, you can \u201croll your own\u201d exporter. This is useful for formats that we don't support natively yet, or won't support. For example, the Templating exporter generates JSON by default. \n+\n+The window that appears allows you to set your own separators, prefix, and suffix to create a complete dataset in the language of your choice. In the Row Template section, you can choose which columns to generate from each row by calling them with variables. \n+\n+![A screenshot of the Templating exporter generating JSON by default.](/img/templating-exporter.png)\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTEzNDEzMA=="}, "originalCommit": {"oid": "bf8c2c4ec8ac0d8bae416a4e2258c1d71624edbf"}, "originalPosition": 68}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTU0NDA2MA==", "bodyText": "Is it not worth mentioning the ${columnName} syntax too?", "url": "https://github.com/OpenRefine/OpenRefine/pull/3336#discussion_r535544060", "createdAt": "2020-12-03T19:58:07Z", "author": {"login": "wetneb"}, "path": "docs/docs/manual/exporting.md", "diffHunk": "@@ -6,34 +6,76 @@ sidebar_label: Exporting\n \n ## Overview\n \n+Once your data is cleaned, you will need to get it out of OpenRefine and into the system of your choice. OpenRefine outputs a number of file formats, can upload your data directly into Google Sheets, and can export directly to Wikidata. \n+\n+You can also export your full project data so that it can be opened by someone else using OpenRefine (or yourself, on another computer).\n \n ## Export data\n \n Note you will only export data in the current view - that is, with current filters and facets applied. \n \n+To export from a project, click the Export button at the top right corner and pick the format you want. You options are:\n \n-\n-*   TSV/CSV\n-*   HTML table\n+*   Tab-separated value (TSV) or Comma-separated value (CSV)\n+*   HTML-formatted table\n *   Excel (XLS or XLSX)\n *   ODF spreadsheet\n-*   Google Sheets \\\n+*   Upload to Google Sheets (requires Google account authorization)\n+*   [Custom tabular exporter](#custom-tabular-exporter)\n+*   [SQL statement exporter](#sql-statement-exporter)\n+*   [Templating exporter](#templating-exporter)\n \n-*   Custom tabular export\n-*   SQL\n-*   Templating export \\\n+You can also [export reconciled data to Wikidata](wikidata#editing-wikidata-with-openrefine), or save your schema for future use with others OpenRefine projects:\n \n *   Upload edits to Wikidata\n *   Export to QuickStatement\n *   Export Wikidata schema\n \n+### Custom tabular exporter\n+\n+![A screenshot of the custom tabular content tab.](/img/custom-tabular-exporter.png)\n+\n+With the custom tabular exporter, you can choose which of your data to export, the separator you wish to use, and whether you'd like to download it to your computer or upload it into a Google Sheet. This exporter is especially useful with reconciled data, as you can choose whether you wish to output the cells' original values, the matched values, or the matched IDs. \n+\n+You can also choose how to output date-formatted cells, and whether you wish to export all the project's data or just the current view set. \n+\n+![A screenshot of the custom tabular file download tab.](/img/custom-tabular-exporter2.png)\n+\n+With the download options, you can generate a preview of how the first ten rows of your dataset will output. If you do not choose one of the file formats on the right, the \"Download\" button will generate a text file. \n+\n+With the \"Option Code\" tab, you can copy JSON data that saves your current settings, to reuse on another project, or you can paste in existing JSON settings data to apply to the current project. \n+\n+### SQL statement exporter\n+\n+The SQL statement exporter creates a table containing the data you\u2019ve exported, which you can use to overwrite an existing database.\n+\n+![A screenshot of the SQL statement creator window.](/img/sql-exporter.png)\n+\n+A window with two tabs will pop up: one to define what data to output, and another to modify the statement table. This allows you to craft a complete SQL command, including DROP and IF EXISTS if you require them. \n+\n+![A screenshot of the SQL statement download window.](/img/sql-exporter2.png)\n+\n+\n+### Templating exporter\n+\n+If you pick <span class=\"menuItems\">Templating\u2026</span> from the <span class=\"menuItems\">Export</span> dropdown menu, you can \u201croll your own\u201d exporter. This is useful for formats that we don't support natively yet, or won't support. For example, the Templating exporter generates JSON by default. \n+\n+The window that appears allows you to set your own separators, prefix, and suffix to create a complete dataset in the language of your choice. In the Row Template section, you can choose which columns to generate from each row by calling them with variables. \n+\n+![A screenshot of the Templating exporter generating JSON by default.](/img/templating-exporter.png)\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTEzNDEzMA=="}, "originalCommit": {"oid": "bf8c2c4ec8ac0d8bae416a4e2258c1d71624edbf"}, "originalPosition": 68}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTU5NzE2Nw==", "bodyText": "It is, I totally forgot. Thanks!", "url": "https://github.com/OpenRefine/OpenRefine/pull/3336#discussion_r535597167", "createdAt": "2020-12-03T20:51:28Z", "author": {"login": "allanaaa"}, "path": "docs/docs/manual/exporting.md", "diffHunk": "@@ -6,34 +6,76 @@ sidebar_label: Exporting\n \n ## Overview\n \n+Once your data is cleaned, you will need to get it out of OpenRefine and into the system of your choice. OpenRefine outputs a number of file formats, can upload your data directly into Google Sheets, and can export directly to Wikidata. \n+\n+You can also export your full project data so that it can be opened by someone else using OpenRefine (or yourself, on another computer).\n \n ## Export data\n \n Note you will only export data in the current view - that is, with current filters and facets applied. \n \n+To export from a project, click the Export button at the top right corner and pick the format you want. You options are:\n \n-\n-*   TSV/CSV\n-*   HTML table\n+*   Tab-separated value (TSV) or Comma-separated value (CSV)\n+*   HTML-formatted table\n *   Excel (XLS or XLSX)\n *   ODF spreadsheet\n-*   Google Sheets \\\n+*   Upload to Google Sheets (requires Google account authorization)\n+*   [Custom tabular exporter](#custom-tabular-exporter)\n+*   [SQL statement exporter](#sql-statement-exporter)\n+*   [Templating exporter](#templating-exporter)\n \n-*   Custom tabular export\n-*   SQL\n-*   Templating export \\\n+You can also [export reconciled data to Wikidata](wikidata#editing-wikidata-with-openrefine), or save your schema for future use with others OpenRefine projects:\n \n *   Upload edits to Wikidata\n *   Export to QuickStatement\n *   Export Wikidata schema\n \n+### Custom tabular exporter\n+\n+![A screenshot of the custom tabular content tab.](/img/custom-tabular-exporter.png)\n+\n+With the custom tabular exporter, you can choose which of your data to export, the separator you wish to use, and whether you'd like to download it to your computer or upload it into a Google Sheet. This exporter is especially useful with reconciled data, as you can choose whether you wish to output the cells' original values, the matched values, or the matched IDs. \n+\n+You can also choose how to output date-formatted cells, and whether you wish to export all the project's data or just the current view set. \n+\n+![A screenshot of the custom tabular file download tab.](/img/custom-tabular-exporter2.png)\n+\n+With the download options, you can generate a preview of how the first ten rows of your dataset will output. If you do not choose one of the file formats on the right, the \"Download\" button will generate a text file. \n+\n+With the \"Option Code\" tab, you can copy JSON data that saves your current settings, to reuse on another project, or you can paste in existing JSON settings data to apply to the current project. \n+\n+### SQL statement exporter\n+\n+The SQL statement exporter creates a table containing the data you\u2019ve exported, which you can use to overwrite an existing database.\n+\n+![A screenshot of the SQL statement creator window.](/img/sql-exporter.png)\n+\n+A window with two tabs will pop up: one to define what data to output, and another to modify the statement table. This allows you to craft a complete SQL command, including DROP and IF EXISTS if you require them. \n+\n+![A screenshot of the SQL statement download window.](/img/sql-exporter2.png)\n+\n+\n+### Templating exporter\n+\n+If you pick <span class=\"menuItems\">Templating\u2026</span> from the <span class=\"menuItems\">Export</span> dropdown menu, you can \u201croll your own\u201d exporter. This is useful for formats that we don't support natively yet, or won't support. For example, the Templating exporter generates JSON by default. \n+\n+The window that appears allows you to set your own separators, prefix, and suffix to create a complete dataset in the language of your choice. In the Row Template section, you can choose which columns to generate from each row by calling them with variables. \n+\n+![A screenshot of the Templating exporter generating JSON by default.](/img/templating-exporter.png)\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTEzNDEzMA=="}, "originalCommit": {"oid": "bf8c2c4ec8ac0d8bae416a4e2258c1d71624edbf"}, "originalPosition": 68}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMzMTMzMzk4OnYy", "diffSide": "RIGHT", "path": "docs/docs/manual/exporting.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQxNjoyODowNFrOH6h5Nw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQxNjoyODowNFrOH6h5Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTEzNDc3NQ==", "bodyText": "\"Option code\" should be displayed as UI text I would say.", "url": "https://github.com/OpenRefine/OpenRefine/pull/3336#discussion_r531134775", "createdAt": "2020-11-26T16:28:04Z", "author": {"login": "wetneb"}, "path": "docs/docs/manual/exporting.md", "diffHunk": "@@ -6,34 +6,76 @@ sidebar_label: Exporting\n \n ## Overview\n \n+Once your data is cleaned, you will need to get it out of OpenRefine and into the system of your choice. OpenRefine outputs a number of file formats, can upload your data directly into Google Sheets, and can export directly to Wikidata. \n+\n+You can also export your full project data so that it can be opened by someone else using OpenRefine (or yourself, on another computer).\n \n ## Export data\n \n Note you will only export data in the current view - that is, with current filters and facets applied. \n \n+To export from a project, click the Export button at the top right corner and pick the format you want. You options are:\n \n-\n-*   TSV/CSV\n-*   HTML table\n+*   Tab-separated value (TSV) or Comma-separated value (CSV)\n+*   HTML-formatted table\n *   Excel (XLS or XLSX)\n *   ODF spreadsheet\n-*   Google Sheets \\\n+*   Upload to Google Sheets (requires Google account authorization)\n+*   [Custom tabular exporter](#custom-tabular-exporter)\n+*   [SQL statement exporter](#sql-statement-exporter)\n+*   [Templating exporter](#templating-exporter)\n \n-*   Custom tabular export\n-*   SQL\n-*   Templating export \\\n+You can also [export reconciled data to Wikidata](wikidata#editing-wikidata-with-openrefine), or save your schema for future use with others OpenRefine projects:\n \n *   Upload edits to Wikidata\n *   Export to QuickStatement\n *   Export Wikidata schema\n \n+### Custom tabular exporter\n+\n+![A screenshot of the custom tabular content tab.](/img/custom-tabular-exporter.png)\n+\n+With the custom tabular exporter, you can choose which of your data to export, the separator you wish to use, and whether you'd like to download it to your computer or upload it into a Google Sheet. This exporter is especially useful with reconciled data, as you can choose whether you wish to output the cells' original values, the matched values, or the matched IDs. \n+\n+You can also choose how to output date-formatted cells, and whether you wish to export all the project's data or just the current view set. \n+\n+![A screenshot of the custom tabular file download tab.](/img/custom-tabular-exporter2.png)\n+\n+With the download options, you can generate a preview of how the first ten rows of your dataset will output. If you do not choose one of the file formats on the right, the \"Download\" button will generate a text file. \n+\n+With the \"Option Code\" tab, you can copy JSON data that saves your current settings, to reuse on another project, or you can paste in existing JSON settings data to apply to the current project. ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bf8c2c4ec8ac0d8bae416a4e2258c1d71624edbf"}, "originalPosition": 48}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1ODE0Mzc3OnYy", "diffSide": "RIGHT", "path": "docs/docs/manual/exporting.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxNDowMzo1MFrOH-dL3g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxNDowMzo1MFrOH-dL3g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTI1MTkzNA==", "bodyText": "Would \"use it to create or update Wikidata items\" be a better phrasing than \"export directly to Wikidata\"?", "url": "https://github.com/OpenRefine/OpenRefine/pull/3336#discussion_r535251934", "createdAt": "2020-12-03T14:03:50Z", "author": {"login": "ostephens"}, "path": "docs/docs/manual/exporting.md", "diffHunk": "@@ -6,34 +6,97 @@ sidebar_label: Exporting\n \n ## Overview\n \n+Once your data is cleaned, you will need to get it out of OpenRefine and into the system of your choice. OpenRefine outputs a number of file formats, can upload your data directly into Google Sheets, and can export directly to Wikidata. \n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ecc36dba573a9ea9bea74ac0f975535194eb2eec"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1ODE1MTk3OnYy", "diffSide": "RIGHT", "path": "docs/docs/manual/exporting.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxNDowNTozNVrOH-dQ2Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxNDowNTozNVrOH-dQ2Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTI1MzIwOQ==", "bodyText": "This isn't completely accurate. Some of the exports have the option to ignore current filters and facets", "url": "https://github.com/OpenRefine/OpenRefine/pull/3336#discussion_r535253209", "createdAt": "2020-12-03T14:05:35Z", "author": {"login": "ostephens"}, "path": "docs/docs/manual/exporting.md", "diffHunk": "@@ -6,34 +6,97 @@ sidebar_label: Exporting\n \n ## Overview\n \n+Once your data is cleaned, you will need to get it out of OpenRefine and into the system of your choice. OpenRefine outputs a number of file formats, can upload your data directly into Google Sheets, and can export directly to Wikidata. \n+\n+You can also export your full project data so that it can be opened by someone else using OpenRefine (or yourself, on another computer).\n \n ## Export data\n \n Note you will only export data in the current view - that is, with current filters and facets applied. ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ecc36dba573a9ea9bea74ac0f975535194eb2eec"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1ODE2MTQxOnYy", "diffSide": "RIGHT", "path": "docs/docs/manual/exporting.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxNDowNzoyN1rOH-dWTg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxNjoxOToxOVrOH-k5jA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTI1NDYwNg==", "bodyText": "I think this should be plural Quickstatements. Do we also need to mention which version of Quickstatements is supported?", "url": "https://github.com/OpenRefine/OpenRefine/pull/3336#discussion_r535254606", "createdAt": "2020-12-03T14:07:27Z", "author": {"login": "ostephens"}, "path": "docs/docs/manual/exporting.md", "diffHunk": "@@ -6,34 +6,97 @@ sidebar_label: Exporting\n \n ## Overview\n \n+Once your data is cleaned, you will need to get it out of OpenRefine and into the system of your choice. OpenRefine outputs a number of file formats, can upload your data directly into Google Sheets, and can export directly to Wikidata. \n+\n+You can also export your full project data so that it can be opened by someone else using OpenRefine (or yourself, on another computer).\n \n ## Export data\n \n Note you will only export data in the current view - that is, with current filters and facets applied. \n \n+To export from a project, click the Export button at the top right corner and pick the format you want. You options are:\n \n-\n-*   TSV/CSV\n-*   HTML table\n+*   Tab-separated value (TSV) or Comma-separated value (CSV)\n+*   HTML-formatted table\n *   Excel (XLS or XLSX)\n *   ODF spreadsheet\n-*   Google Sheets \\\n+*   Upload to Google Sheets (requires Google account authorization)\n+*   [Custom tabular exporter](#custom-tabular-exporter)\n+*   [SQL statement exporter](#sql-statement-exporter)\n+*   [Templating exporter](#templating-exporter)\n \n-*   Custom tabular export\n-*   SQL\n-*   Templating export \\\n+You can also [export reconciled data to Wikidata](wikidata#editing-wikidata-with-openrefine), or save your schema for future use with other OpenRefine projects:\n \n *   Upload edits to Wikidata\n *   Export to QuickStatement", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ecc36dba573a9ea9bea74ac0f975535194eb2eec"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTM3ODMxNg==", "bodyText": "It produces QuickStatements commands in version 1.", "url": "https://github.com/OpenRefine/OpenRefine/pull/3336#discussion_r535378316", "createdAt": "2020-12-03T16:19:19Z", "author": {"login": "wetneb"}, "path": "docs/docs/manual/exporting.md", "diffHunk": "@@ -6,34 +6,97 @@ sidebar_label: Exporting\n \n ## Overview\n \n+Once your data is cleaned, you will need to get it out of OpenRefine and into the system of your choice. OpenRefine outputs a number of file formats, can upload your data directly into Google Sheets, and can export directly to Wikidata. \n+\n+You can also export your full project data so that it can be opened by someone else using OpenRefine (or yourself, on another computer).\n \n ## Export data\n \n Note you will only export data in the current view - that is, with current filters and facets applied. \n \n+To export from a project, click the Export button at the top right corner and pick the format you want. You options are:\n \n-\n-*   TSV/CSV\n-*   HTML table\n+*   Tab-separated value (TSV) or Comma-separated value (CSV)\n+*   HTML-formatted table\n *   Excel (XLS or XLSX)\n *   ODF spreadsheet\n-*   Google Sheets \\\n+*   Upload to Google Sheets (requires Google account authorization)\n+*   [Custom tabular exporter](#custom-tabular-exporter)\n+*   [SQL statement exporter](#sql-statement-exporter)\n+*   [Templating exporter](#templating-exporter)\n \n-*   Custom tabular export\n-*   SQL\n-*   Templating export \\\n+You can also [export reconciled data to Wikidata](wikidata#editing-wikidata-with-openrefine), or save your schema for future use with other OpenRefine projects:\n \n *   Upload edits to Wikidata\n *   Export to QuickStatement", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTI1NDYwNg=="}, "originalCommit": {"oid": "ecc36dba573a9ea9bea74ac0f975535194eb2eec"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1ODE2Njg4OnYy", "diffSide": "RIGHT", "path": "docs/docs/manual/exporting.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxNDowODozM1rOH-dZfw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxNDowODozM1rOH-dZfw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTI1NTQyMw==", "bodyText": "How does the Google account authorization work?", "url": "https://github.com/OpenRefine/OpenRefine/pull/3336#discussion_r535255423", "createdAt": "2020-12-03T14:08:33Z", "author": {"login": "ostephens"}, "path": "docs/docs/manual/exporting.md", "diffHunk": "@@ -6,34 +6,97 @@ sidebar_label: Exporting\n \n ## Overview\n \n+Once your data is cleaned, you will need to get it out of OpenRefine and into the system of your choice. OpenRefine outputs a number of file formats, can upload your data directly into Google Sheets, and can export directly to Wikidata. \n+\n+You can also export your full project data so that it can be opened by someone else using OpenRefine (or yourself, on another computer).\n \n ## Export data\n \n Note you will only export data in the current view - that is, with current filters and facets applied. \n \n+To export from a project, click the Export button at the top right corner and pick the format you want. You options are:\n \n-\n-*   TSV/CSV\n-*   HTML table\n+*   Tab-separated value (TSV) or Comma-separated value (CSV)\n+*   HTML-formatted table\n *   Excel (XLS or XLSX)\n *   ODF spreadsheet\n-*   Google Sheets \\\n+*   Upload to Google Sheets (requires Google account authorization)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ecc36dba573a9ea9bea74ac0f975535194eb2eec"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1ODE3NjU1OnYy", "diffSide": "RIGHT", "path": "docs/docs/manual/exporting.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxNDoxMDoyMFrOH-dfDg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxOToxMjoxMFrOH-s1qg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTI1Njg0Ng==", "bodyText": "Do we need to say that for \"Output nothing...\" option what happens for matched cells?\nIn second sentence I think \"have no effect\" rather than \"have no change\" would be better phrasing", "url": "https://github.com/OpenRefine/OpenRefine/pull/3336#discussion_r535256846", "createdAt": "2020-12-03T14:10:20Z", "author": {"login": "ostephens"}, "path": "docs/docs/manual/exporting.md", "diffHunk": "@@ -6,34 +6,97 @@ sidebar_label: Exporting\n \n ## Overview\n \n+Once your data is cleaned, you will need to get it out of OpenRefine and into the system of your choice. OpenRefine outputs a number of file formats, can upload your data directly into Google Sheets, and can export directly to Wikidata. \n+\n+You can also export your full project data so that it can be opened by someone else using OpenRefine (or yourself, on another computer).\n \n ## Export data\n \n Note you will only export data in the current view - that is, with current filters and facets applied. \n \n+To export from a project, click the Export button at the top right corner and pick the format you want. You options are:\n \n-\n-*   TSV/CSV\n-*   HTML table\n+*   Tab-separated value (TSV) or Comma-separated value (CSV)\n+*   HTML-formatted table\n *   Excel (XLS or XLSX)\n *   ODF spreadsheet\n-*   Google Sheets \\\n+*   Upload to Google Sheets (requires Google account authorization)\n+*   [Custom tabular exporter](#custom-tabular-exporter)\n+*   [SQL statement exporter](#sql-statement-exporter)\n+*   [Templating exporter](#templating-exporter)\n \n-*   Custom tabular export\n-*   SQL\n-*   Templating export \\\n+You can also [export reconciled data to Wikidata](wikidata#editing-wikidata-with-openrefine), or save your schema for future use with other OpenRefine projects:\n \n *   Upload edits to Wikidata\n *   Export to QuickStatement\n *   Export Wikidata schema\n \n+### Custom tabular exporter\n+\n+![A screenshot of the custom tabular content tab.](/img/custom-tabular-exporter.png)\n+\n+With the custom tabular exporter, you can choose which of your data to export, the separator you wish to use, and whether you'd like to download it to your computer or upload it into a Google Sheet. \n+\n+You can drag and drop the columns appearing in the column list to reorder the output. The options for reconciled and date data are applied to each column individually. \n+\n+This exporter is especially useful with reconciled data, as you can choose whether you wish to output the cells' original values, the matched values, or the matched IDs. Ouputting \u201cmatch entity's name\u201d, \u201cmatched entity's ID\u201d, or \u201ccell's content\u201d will output, respectively, the contents of `cell.recon.match.name`, `cell.recon.match.id`, and `cell.value`. \n+\n+\u201cOutput nothing for unmatched cells\u201d will export empty cells for both newly-created matches and cells with no chosen matches. \u201cLink to matched entity's page\u201d will produce hyperlinked text in an HTML table output, but have no change in other formats.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ecc36dba573a9ea9bea74ac0f975535194eb2eec"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTUwODM5NA==", "bodyText": "\"Output nothing\" will do whatever you've chosen above it for matched cells. Or do you mean something else?", "url": "https://github.com/OpenRefine/OpenRefine/pull/3336#discussion_r535508394", "createdAt": "2020-12-03T19:12:10Z", "author": {"login": "allanaaa"}, "path": "docs/docs/manual/exporting.md", "diffHunk": "@@ -6,34 +6,97 @@ sidebar_label: Exporting\n \n ## Overview\n \n+Once your data is cleaned, you will need to get it out of OpenRefine and into the system of your choice. OpenRefine outputs a number of file formats, can upload your data directly into Google Sheets, and can export directly to Wikidata. \n+\n+You can also export your full project data so that it can be opened by someone else using OpenRefine (or yourself, on another computer).\n \n ## Export data\n \n Note you will only export data in the current view - that is, with current filters and facets applied. \n \n+To export from a project, click the Export button at the top right corner and pick the format you want. You options are:\n \n-\n-*   TSV/CSV\n-*   HTML table\n+*   Tab-separated value (TSV) or Comma-separated value (CSV)\n+*   HTML-formatted table\n *   Excel (XLS or XLSX)\n *   ODF spreadsheet\n-*   Google Sheets \\\n+*   Upload to Google Sheets (requires Google account authorization)\n+*   [Custom tabular exporter](#custom-tabular-exporter)\n+*   [SQL statement exporter](#sql-statement-exporter)\n+*   [Templating exporter](#templating-exporter)\n \n-*   Custom tabular export\n-*   SQL\n-*   Templating export \\\n+You can also [export reconciled data to Wikidata](wikidata#editing-wikidata-with-openrefine), or save your schema for future use with other OpenRefine projects:\n \n *   Upload edits to Wikidata\n *   Export to QuickStatement\n *   Export Wikidata schema\n \n+### Custom tabular exporter\n+\n+![A screenshot of the custom tabular content tab.](/img/custom-tabular-exporter.png)\n+\n+With the custom tabular exporter, you can choose which of your data to export, the separator you wish to use, and whether you'd like to download it to your computer or upload it into a Google Sheet. \n+\n+You can drag and drop the columns appearing in the column list to reorder the output. The options for reconciled and date data are applied to each column individually. \n+\n+This exporter is especially useful with reconciled data, as you can choose whether you wish to output the cells' original values, the matched values, or the matched IDs. Ouputting \u201cmatch entity's name\u201d, \u201cmatched entity's ID\u201d, or \u201ccell's content\u201d will output, respectively, the contents of `cell.recon.match.name`, `cell.recon.match.id`, and `cell.value`. \n+\n+\u201cOutput nothing for unmatched cells\u201d will export empty cells for both newly-created matches and cells with no chosen matches. \u201cLink to matched entity's page\u201d will produce hyperlinked text in an HTML table output, but have no change in other formats.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTI1Njg0Ng=="}, "originalCommit": {"oid": "ecc36dba573a9ea9bea74ac0f975535194eb2eec"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1ODE5NDEyOnYy", "diffSide": "RIGHT", "path": "docs/docs/manual/exporting.md", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxNDoxMzozM1rOH-dpVg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQyMTowMjowOFrOIFoxlA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTI1OTQ3OA==", "bodyText": "I feel this would be easier to read with some more structured layout - maybe a table? I also feel we should probably list all the options together (at the moment some options are explained above the graphic and some under the graphic - I think we should keep them all together", "url": "https://github.com/OpenRefine/OpenRefine/pull/3336#discussion_r535259478", "createdAt": "2020-12-03T14:13:33Z", "author": {"login": "ostephens"}, "path": "docs/docs/manual/exporting.md", "diffHunk": "@@ -6,34 +6,97 @@ sidebar_label: Exporting\n \n ## Overview\n \n+Once your data is cleaned, you will need to get it out of OpenRefine and into the system of your choice. OpenRefine outputs a number of file formats, can upload your data directly into Google Sheets, and can export directly to Wikidata. \n+\n+You can also export your full project data so that it can be opened by someone else using OpenRefine (or yourself, on another computer).\n \n ## Export data\n \n Note you will only export data in the current view - that is, with current filters and facets applied. \n \n+To export from a project, click the Export button at the top right corner and pick the format you want. You options are:\n \n-\n-*   TSV/CSV\n-*   HTML table\n+*   Tab-separated value (TSV) or Comma-separated value (CSV)\n+*   HTML-formatted table\n *   Excel (XLS or XLSX)\n *   ODF spreadsheet\n-*   Google Sheets \\\n+*   Upload to Google Sheets (requires Google account authorization)\n+*   [Custom tabular exporter](#custom-tabular-exporter)\n+*   [SQL statement exporter](#sql-statement-exporter)\n+*   [Templating exporter](#templating-exporter)\n \n-*   Custom tabular export\n-*   SQL\n-*   Templating export \\\n+You can also [export reconciled data to Wikidata](wikidata#editing-wikidata-with-openrefine), or save your schema for future use with other OpenRefine projects:\n \n *   Upload edits to Wikidata\n *   Export to QuickStatement\n *   Export Wikidata schema\n \n+### Custom tabular exporter\n+\n+![A screenshot of the custom tabular content tab.](/img/custom-tabular-exporter.png)\n+\n+With the custom tabular exporter, you can choose which of your data to export, the separator you wish to use, and whether you'd like to download it to your computer or upload it into a Google Sheet. \n+\n+You can drag and drop the columns appearing in the column list to reorder the output. The options for reconciled and date data are applied to each column individually. \n+\n+This exporter is especially useful with reconciled data, as you can choose whether you wish to output the cells' original values, the matched values, or the matched IDs. Ouputting \u201cmatch entity's name\u201d, \u201cmatched entity's ID\u201d, or \u201ccell's content\u201d will output, respectively, the contents of `cell.recon.match.name`, `cell.recon.match.id`, and `cell.value`. \n+\n+\u201cOutput nothing for unmatched cells\u201d will export empty cells for both newly-created matches and cells with no chosen matches. \u201cLink to matched entity's page\u201d will produce hyperlinked text in an HTML table output, but have no change in other formats.\n+\n+You can also choose how to [output date-formatted cells](exploring#dates). You can create a custom date output by using [formatting according to the SimpleDateFormat parsing key found here](grelfunctions#todateo-b-monthfirst-s-format1-s-format2-).\n+\n+![A screenshot of the custom tabular file download tab.](/img/custom-tabular-exporter2.png)\n+\n+With the download options, you can generate a preview of how the first ten rows of your dataset will output. If you do not choose one of the file formats on the right, the \"Download\" button will generate a text file. \n+\n+With the <span class=\"menuItems\">Option Code</span> tab, you can copy JSON data that saves your current settings, to reuse on another project, or you can paste in existing JSON settings data to apply to the current project. \n+\n+### SQL exporter\n+\n+The SQL exporter creates a SQL statement containing the data you\u2019ve exported, which you can use to overwrite or add to an existing database. \n+\n+![A screenshot of the SQL statement creator window.](/img/sql-exporter.png)\n+\n+A window with two tabs will pop up: one to define what data to output, and another to modify the statement table. This allows you to craft a complete SQL command, including DROP and IF EXISTS if you require them. \n+\n+You can set a default value for empty cells after unchecking \u201cAllow null\u201d in one or more columns. Trimming column names will remove their whitespace characters. \n+\n+![A screenshot of the SQL statement download window.](/img/sql-exporter2.png)\n+\n+\u201cInclude schema\u201d means that you will start your statement with the creation of a table. Without that, you will only have an INSERT statement. ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ecc36dba573a9ea9bea74ac0f975535194eb2eec"}, "originalPosition": 68}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTUxMjY4Mw==", "bodyText": "Now that I think of it, the reasons why some thing are included on \"Content\" and some on \"Download\" are not clearly defined to me. The options on the \"Download\" tab include the option to exclude everything you decided on the \"Content\" tab; to me, it makes sense to present those checkboxes at the outset.\nI wonder if these options should be moved around, or if I'm just missing why someone would want the workflow to be this way.", "url": "https://github.com/OpenRefine/OpenRefine/pull/3336#discussion_r535512683", "createdAt": "2020-12-03T19:18:54Z", "author": {"login": "allanaaa"}, "path": "docs/docs/manual/exporting.md", "diffHunk": "@@ -6,34 +6,97 @@ sidebar_label: Exporting\n \n ## Overview\n \n+Once your data is cleaned, you will need to get it out of OpenRefine and into the system of your choice. OpenRefine outputs a number of file formats, can upload your data directly into Google Sheets, and can export directly to Wikidata. \n+\n+You can also export your full project data so that it can be opened by someone else using OpenRefine (or yourself, on another computer).\n \n ## Export data\n \n Note you will only export data in the current view - that is, with current filters and facets applied. \n \n+To export from a project, click the Export button at the top right corner and pick the format you want. You options are:\n \n-\n-*   TSV/CSV\n-*   HTML table\n+*   Tab-separated value (TSV) or Comma-separated value (CSV)\n+*   HTML-formatted table\n *   Excel (XLS or XLSX)\n *   ODF spreadsheet\n-*   Google Sheets \\\n+*   Upload to Google Sheets (requires Google account authorization)\n+*   [Custom tabular exporter](#custom-tabular-exporter)\n+*   [SQL statement exporter](#sql-statement-exporter)\n+*   [Templating exporter](#templating-exporter)\n \n-*   Custom tabular export\n-*   SQL\n-*   Templating export \\\n+You can also [export reconciled data to Wikidata](wikidata#editing-wikidata-with-openrefine), or save your schema for future use with other OpenRefine projects:\n \n *   Upload edits to Wikidata\n *   Export to QuickStatement\n *   Export Wikidata schema\n \n+### Custom tabular exporter\n+\n+![A screenshot of the custom tabular content tab.](/img/custom-tabular-exporter.png)\n+\n+With the custom tabular exporter, you can choose which of your data to export, the separator you wish to use, and whether you'd like to download it to your computer or upload it into a Google Sheet. \n+\n+You can drag and drop the columns appearing in the column list to reorder the output. The options for reconciled and date data are applied to each column individually. \n+\n+This exporter is especially useful with reconciled data, as you can choose whether you wish to output the cells' original values, the matched values, or the matched IDs. Ouputting \u201cmatch entity's name\u201d, \u201cmatched entity's ID\u201d, or \u201ccell's content\u201d will output, respectively, the contents of `cell.recon.match.name`, `cell.recon.match.id`, and `cell.value`. \n+\n+\u201cOutput nothing for unmatched cells\u201d will export empty cells for both newly-created matches and cells with no chosen matches. \u201cLink to matched entity's page\u201d will produce hyperlinked text in an HTML table output, but have no change in other formats.\n+\n+You can also choose how to [output date-formatted cells](exploring#dates). You can create a custom date output by using [formatting according to the SimpleDateFormat parsing key found here](grelfunctions#todateo-b-monthfirst-s-format1-s-format2-).\n+\n+![A screenshot of the custom tabular file download tab.](/img/custom-tabular-exporter2.png)\n+\n+With the download options, you can generate a preview of how the first ten rows of your dataset will output. If you do not choose one of the file formats on the right, the \"Download\" button will generate a text file. \n+\n+With the <span class=\"menuItems\">Option Code</span> tab, you can copy JSON data that saves your current settings, to reuse on another project, or you can paste in existing JSON settings data to apply to the current project. \n+\n+### SQL exporter\n+\n+The SQL exporter creates a SQL statement containing the data you\u2019ve exported, which you can use to overwrite or add to an existing database. \n+\n+![A screenshot of the SQL statement creator window.](/img/sql-exporter.png)\n+\n+A window with two tabs will pop up: one to define what data to output, and another to modify the statement table. This allows you to craft a complete SQL command, including DROP and IF EXISTS if you require them. \n+\n+You can set a default value for empty cells after unchecking \u201cAllow null\u201d in one or more columns. Trimming column names will remove their whitespace characters. \n+\n+![A screenshot of the SQL statement download window.](/img/sql-exporter2.png)\n+\n+\u201cInclude schema\u201d means that you will start your statement with the creation of a table. Without that, you will only have an INSERT statement. ", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTI1OTQ3OA=="}, "originalCommit": {"oid": "ecc36dba573a9ea9bea74ac0f975535194eb2eec"}, "originalPosition": 68}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mjc4MTg0NA==", "bodyText": "I think this is the only unresolved bit on this PR. If everyone could give this section a re-read, I can use some guidance on a good way to present this information.\nhttps://deploy-preview-3336--openrefine-docs.netlify.app/manual/exporting/#sql-exporter", "url": "https://github.com/OpenRefine/OpenRefine/pull/3336#discussion_r542781844", "createdAt": "2020-12-14T21:02:08Z", "author": {"login": "allanaaa"}, "path": "docs/docs/manual/exporting.md", "diffHunk": "@@ -6,34 +6,97 @@ sidebar_label: Exporting\n \n ## Overview\n \n+Once your data is cleaned, you will need to get it out of OpenRefine and into the system of your choice. OpenRefine outputs a number of file formats, can upload your data directly into Google Sheets, and can export directly to Wikidata. \n+\n+You can also export your full project data so that it can be opened by someone else using OpenRefine (or yourself, on another computer).\n \n ## Export data\n \n Note you will only export data in the current view - that is, with current filters and facets applied. \n \n+To export from a project, click the Export button at the top right corner and pick the format you want. You options are:\n \n-\n-*   TSV/CSV\n-*   HTML table\n+*   Tab-separated value (TSV) or Comma-separated value (CSV)\n+*   HTML-formatted table\n *   Excel (XLS or XLSX)\n *   ODF spreadsheet\n-*   Google Sheets \\\n+*   Upload to Google Sheets (requires Google account authorization)\n+*   [Custom tabular exporter](#custom-tabular-exporter)\n+*   [SQL statement exporter](#sql-statement-exporter)\n+*   [Templating exporter](#templating-exporter)\n \n-*   Custom tabular export\n-*   SQL\n-*   Templating export \\\n+You can also [export reconciled data to Wikidata](wikidata#editing-wikidata-with-openrefine), or save your schema for future use with other OpenRefine projects:\n \n *   Upload edits to Wikidata\n *   Export to QuickStatement\n *   Export Wikidata schema\n \n+### Custom tabular exporter\n+\n+![A screenshot of the custom tabular content tab.](/img/custom-tabular-exporter.png)\n+\n+With the custom tabular exporter, you can choose which of your data to export, the separator you wish to use, and whether you'd like to download it to your computer or upload it into a Google Sheet. \n+\n+You can drag and drop the columns appearing in the column list to reorder the output. The options for reconciled and date data are applied to each column individually. \n+\n+This exporter is especially useful with reconciled data, as you can choose whether you wish to output the cells' original values, the matched values, or the matched IDs. Ouputting \u201cmatch entity's name\u201d, \u201cmatched entity's ID\u201d, or \u201ccell's content\u201d will output, respectively, the contents of `cell.recon.match.name`, `cell.recon.match.id`, and `cell.value`. \n+\n+\u201cOutput nothing for unmatched cells\u201d will export empty cells for both newly-created matches and cells with no chosen matches. \u201cLink to matched entity's page\u201d will produce hyperlinked text in an HTML table output, but have no change in other formats.\n+\n+You can also choose how to [output date-formatted cells](exploring#dates). You can create a custom date output by using [formatting according to the SimpleDateFormat parsing key found here](grelfunctions#todateo-b-monthfirst-s-format1-s-format2-).\n+\n+![A screenshot of the custom tabular file download tab.](/img/custom-tabular-exporter2.png)\n+\n+With the download options, you can generate a preview of how the first ten rows of your dataset will output. If you do not choose one of the file formats on the right, the \"Download\" button will generate a text file. \n+\n+With the <span class=\"menuItems\">Option Code</span> tab, you can copy JSON data that saves your current settings, to reuse on another project, or you can paste in existing JSON settings data to apply to the current project. \n+\n+### SQL exporter\n+\n+The SQL exporter creates a SQL statement containing the data you\u2019ve exported, which you can use to overwrite or add to an existing database. \n+\n+![A screenshot of the SQL statement creator window.](/img/sql-exporter.png)\n+\n+A window with two tabs will pop up: one to define what data to output, and another to modify the statement table. This allows you to craft a complete SQL command, including DROP and IF EXISTS if you require them. \n+\n+You can set a default value for empty cells after unchecking \u201cAllow null\u201d in one or more columns. Trimming column names will remove their whitespace characters. \n+\n+![A screenshot of the SQL statement download window.](/img/sql-exporter2.png)\n+\n+\u201cInclude schema\u201d means that you will start your statement with the creation of a table. Without that, you will only have an INSERT statement. ", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTI1OTQ3OA=="}, "originalCommit": {"oid": "ecc36dba573a9ea9bea74ac0f975535194eb2eec"}, "originalPosition": 68}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1ODIxMTE1OnYy", "diffSide": "RIGHT", "path": "docs/docs/manual/exporting.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxNDoxNzowMFrOH-dzvQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxNDoxNzowMFrOH-dzvQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTI2MjE0MQ==", "bodyText": "I think the inclusion of curly braces in the templates is more general than just the instance of RegEx in GREL. Need to check this but we may need a more blanket statement about this", "url": "https://github.com/OpenRefine/OpenRefine/pull/3336#discussion_r535262141", "createdAt": "2020-12-03T14:17:00Z", "author": {"login": "ostephens"}, "path": "docs/docs/manual/exporting.md", "diffHunk": "@@ -6,34 +6,97 @@ sidebar_label: Exporting\n \n ## Overview\n \n+Once your data is cleaned, you will need to get it out of OpenRefine and into the system of your choice. OpenRefine outputs a number of file formats, can upload your data directly into Google Sheets, and can export directly to Wikidata. \n+\n+You can also export your full project data so that it can be opened by someone else using OpenRefine (or yourself, on another computer).\n \n ## Export data\n \n Note you will only export data in the current view - that is, with current filters and facets applied. \n \n+To export from a project, click the Export button at the top right corner and pick the format you want. You options are:\n \n-\n-*   TSV/CSV\n-*   HTML table\n+*   Tab-separated value (TSV) or Comma-separated value (CSV)\n+*   HTML-formatted table\n *   Excel (XLS or XLSX)\n *   ODF spreadsheet\n-*   Google Sheets \\\n+*   Upload to Google Sheets (requires Google account authorization)\n+*   [Custom tabular exporter](#custom-tabular-exporter)\n+*   [SQL statement exporter](#sql-statement-exporter)\n+*   [Templating exporter](#templating-exporter)\n \n-*   Custom tabular export\n-*   SQL\n-*   Templating export \\\n+You can also [export reconciled data to Wikidata](wikidata#editing-wikidata-with-openrefine), or save your schema for future use with other OpenRefine projects:\n \n *   Upload edits to Wikidata\n *   Export to QuickStatement\n *   Export Wikidata schema\n \n+### Custom tabular exporter\n+\n+![A screenshot of the custom tabular content tab.](/img/custom-tabular-exporter.png)\n+\n+With the custom tabular exporter, you can choose which of your data to export, the separator you wish to use, and whether you'd like to download it to your computer or upload it into a Google Sheet. \n+\n+You can drag and drop the columns appearing in the column list to reorder the output. The options for reconciled and date data are applied to each column individually. \n+\n+This exporter is especially useful with reconciled data, as you can choose whether you wish to output the cells' original values, the matched values, or the matched IDs. Ouputting \u201cmatch entity's name\u201d, \u201cmatched entity's ID\u201d, or \u201ccell's content\u201d will output, respectively, the contents of `cell.recon.match.name`, `cell.recon.match.id`, and `cell.value`. \n+\n+\u201cOutput nothing for unmatched cells\u201d will export empty cells for both newly-created matches and cells with no chosen matches. \u201cLink to matched entity's page\u201d will produce hyperlinked text in an HTML table output, but have no change in other formats.\n+\n+You can also choose how to [output date-formatted cells](exploring#dates). You can create a custom date output by using [formatting according to the SimpleDateFormat parsing key found here](grelfunctions#todateo-b-monthfirst-s-format1-s-format2-).\n+\n+![A screenshot of the custom tabular file download tab.](/img/custom-tabular-exporter2.png)\n+\n+With the download options, you can generate a preview of how the first ten rows of your dataset will output. If you do not choose one of the file formats on the right, the \"Download\" button will generate a text file. \n+\n+With the <span class=\"menuItems\">Option Code</span> tab, you can copy JSON data that saves your current settings, to reuse on another project, or you can paste in existing JSON settings data to apply to the current project. \n+\n+### SQL exporter\n+\n+The SQL exporter creates a SQL statement containing the data you\u2019ve exported, which you can use to overwrite or add to an existing database. \n+\n+![A screenshot of the SQL statement creator window.](/img/sql-exporter.png)\n+\n+A window with two tabs will pop up: one to define what data to output, and another to modify the statement table. This allows you to craft a complete SQL command, including DROP and IF EXISTS if you require them. \n+\n+You can set a default value for empty cells after unchecking \u201cAllow null\u201d in one or more columns. Trimming column names will remove their whitespace characters. \n+\n+![A screenshot of the SQL statement download window.](/img/sql-exporter2.png)\n+\n+\u201cInclude schema\u201d means that you will start your statement with the creation of a table. Without that, you will only have an INSERT statement. \n+\u201cInclude content\u201d means the INSERT statement with data from your project. Without that, you will only create empty columns. \n+\n+You can preview the statement, which will open up a new browser tab/window showing a statement with the first ten rows of your data, or you can save a `.sql` file to your computer. \n+\n+### Templating exporter\n+\n+If you pick <span class=\"menuItems\">Templating\u2026</span> from the <span class=\"menuItems\">Export</span> dropdown menu, you can \u201croll your own\u201d exporter. This is useful for formats that we don't support natively yet, or won't support. The Templating exporter generates JSON by default. \n+\n+The window that appears allows you to set your own separators, prefix, and suffix to create a complete dataset in the language of your choice. In the <span class=\"menuItems\">Row Template</span> section, you can choose which columns to generate from each row by calling them with variables. \n+\n+This can be used to:\n+* output reconciliation data (`cells[\"column name\"].recon.match.name`, `.recon.match.id`, and `.recon.best.name`, for example) instead of cell values\n+* create multiple columns of output from different member fields of a single project column\n+* employ GREL expressions to modify cell data for output (for example, `cells[\"column name\"].value.toUppercase()`). \n+\n+Anything that appears inside curly braces ({{}}) is treated as a GREL expression; anything outside is generated as straight text. You can include [regular expressions](expressions#regular-expressions) as usual (inside forward slashes, with any GREL function that accepts them), with the exception that you cannot use curly braces (for example, to denote a `{min,max}` capture range). ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ecc36dba573a9ea9bea74ac0f975535194eb2eec"}, "originalPosition": 84}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1ODIyNjU5OnYy", "diffSide": "RIGHT", "path": "docs/docs/manual/exporting.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxNDoyMDoxMlrOH-d9Xg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxNTo0Mzo1OVrOH-jClQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTI2NDYwNg==", "bodyText": "Is it worth us emphasising here that the fact it is the entire project means that any recipient can step the project back to its original state - so, for example, if there was confidential information in the original data import that you don't want to share, you shouldn't share the project file directly even if you removed that data while working with the project?", "url": "https://github.com/OpenRefine/OpenRefine/pull/3336#discussion_r535264606", "createdAt": "2020-12-03T14:20:12Z", "author": {"login": "ostephens"}, "path": "docs/docs/manual/exporting.md", "diffHunk": "@@ -6,34 +6,97 @@ sidebar_label: Exporting\n \n ## Overview\n \n+Once your data is cleaned, you will need to get it out of OpenRefine and into the system of your choice. OpenRefine outputs a number of file formats, can upload your data directly into Google Sheets, and can export directly to Wikidata. \n+\n+You can also export your full project data so that it can be opened by someone else using OpenRefine (or yourself, on another computer).\n \n ## Export data\n \n Note you will only export data in the current view - that is, with current filters and facets applied. \n \n+To export from a project, click the Export button at the top right corner and pick the format you want. You options are:\n \n-\n-*   TSV/CSV\n-*   HTML table\n+*   Tab-separated value (TSV) or Comma-separated value (CSV)\n+*   HTML-formatted table\n *   Excel (XLS or XLSX)\n *   ODF spreadsheet\n-*   Google Sheets \\\n+*   Upload to Google Sheets (requires Google account authorization)\n+*   [Custom tabular exporter](#custom-tabular-exporter)\n+*   [SQL statement exporter](#sql-statement-exporter)\n+*   [Templating exporter](#templating-exporter)\n \n-*   Custom tabular export\n-*   SQL\n-*   Templating export \\\n+You can also [export reconciled data to Wikidata](wikidata#editing-wikidata-with-openrefine), or save your schema for future use with other OpenRefine projects:\n \n *   Upload edits to Wikidata\n *   Export to QuickStatement\n *   Export Wikidata schema\n \n+### Custom tabular exporter\n+\n+![A screenshot of the custom tabular content tab.](/img/custom-tabular-exporter.png)\n+\n+With the custom tabular exporter, you can choose which of your data to export, the separator you wish to use, and whether you'd like to download it to your computer or upload it into a Google Sheet. \n+\n+You can drag and drop the columns appearing in the column list to reorder the output. The options for reconciled and date data are applied to each column individually. \n+\n+This exporter is especially useful with reconciled data, as you can choose whether you wish to output the cells' original values, the matched values, or the matched IDs. Ouputting \u201cmatch entity's name\u201d, \u201cmatched entity's ID\u201d, or \u201ccell's content\u201d will output, respectively, the contents of `cell.recon.match.name`, `cell.recon.match.id`, and `cell.value`. \n+\n+\u201cOutput nothing for unmatched cells\u201d will export empty cells for both newly-created matches and cells with no chosen matches. \u201cLink to matched entity's page\u201d will produce hyperlinked text in an HTML table output, but have no change in other formats.\n+\n+You can also choose how to [output date-formatted cells](exploring#dates). You can create a custom date output by using [formatting according to the SimpleDateFormat parsing key found here](grelfunctions#todateo-b-monthfirst-s-format1-s-format2-).\n+\n+![A screenshot of the custom tabular file download tab.](/img/custom-tabular-exporter2.png)\n+\n+With the download options, you can generate a preview of how the first ten rows of your dataset will output. If you do not choose one of the file formats on the right, the \"Download\" button will generate a text file. \n+\n+With the <span class=\"menuItems\">Option Code</span> tab, you can copy JSON data that saves your current settings, to reuse on another project, or you can paste in existing JSON settings data to apply to the current project. \n+\n+### SQL exporter\n+\n+The SQL exporter creates a SQL statement containing the data you\u2019ve exported, which you can use to overwrite or add to an existing database. \n+\n+![A screenshot of the SQL statement creator window.](/img/sql-exporter.png)\n+\n+A window with two tabs will pop up: one to define what data to output, and another to modify the statement table. This allows you to craft a complete SQL command, including DROP and IF EXISTS if you require them. \n+\n+You can set a default value for empty cells after unchecking \u201cAllow null\u201d in one or more columns. Trimming column names will remove their whitespace characters. \n+\n+![A screenshot of the SQL statement download window.](/img/sql-exporter2.png)\n+\n+\u201cInclude schema\u201d means that you will start your statement with the creation of a table. Without that, you will only have an INSERT statement. \n+\u201cInclude content\u201d means the INSERT statement with data from your project. Without that, you will only create empty columns. \n+\n+You can preview the statement, which will open up a new browser tab/window showing a statement with the first ten rows of your data, or you can save a `.sql` file to your computer. \n+\n+### Templating exporter\n+\n+If you pick <span class=\"menuItems\">Templating\u2026</span> from the <span class=\"menuItems\">Export</span> dropdown menu, you can \u201croll your own\u201d exporter. This is useful for formats that we don't support natively yet, or won't support. The Templating exporter generates JSON by default. \n+\n+The window that appears allows you to set your own separators, prefix, and suffix to create a complete dataset in the language of your choice. In the <span class=\"menuItems\">Row Template</span> section, you can choose which columns to generate from each row by calling them with variables. \n+\n+This can be used to:\n+* output reconciliation data (`cells[\"column name\"].recon.match.name`, `.recon.match.id`, and `.recon.best.name`, for example) instead of cell values\n+* create multiple columns of output from different member fields of a single project column\n+* employ GREL expressions to modify cell data for output (for example, `cells[\"column name\"].value.toUppercase()`). \n+\n+Anything that appears inside curly braces ({{}}) is treated as a GREL expression; anything outside is generated as straight text. You can include [regular expressions](expressions#regular-expressions) as usual (inside forward slashes, with any GREL function that accepts them), with the exception that you cannot use curly braces (for example, to denote a `{min,max}` capture range). \n+\n+You could also simply output a plain-text document inserting data from your project into sentences (for example, \"In `{{cells[\"Year\"].value}}` we received `{{cells[\"RequestCount\"].value}}` requests.\").\n+\n+![A screenshot of the Templating exporter generating JSON by default.](/img/templating-exporter.png)\n+\n+Once you have created your template, you may wish to save the text you produced in each field, in order to reuse it in the future. Once you click \u201cExport\u201d OpenRefine will output a simple text file, and your template will be discarded.\n+\n+We have recipes on using the Templating exporter to [produce several different formats](https://github.com/OpenRefine/OpenRefine/wiki/Recipes#12-templating-exporter).\n \n ## Export a project\n \n+You can share a project in progress with another computer, a colleague, or with someone who wants to check your history. This can be useful for showing that your data cleanup didn\u2019t distort or manipulate the information in any way. Once you have exported a project, another OpenRefine installation can [import it as a new project](starting#import-a-project). \n+\n+From the <span class=\"menuItems\">Export</span> dropdown, select <span class=\"menuItems\">OpenRefine project archive to file</span>. OpenRefine exports your full project with all of its history. It does not export any current views or applied facets. Any reconciliation information will be preserved, but the importing installation will need to add the same reconciliation services to keep working with that data. ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ecc36dba573a9ea9bea74ac0f975535194eb2eec"}, "originalPosition": 98}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTM0Nzg2MQ==", "bodyText": "Yes, absolutely emphasize.  That point of \"OpenRefine Projects contain confidential data from previous steps which is hidden but still accessible to anyone who has the OpenRefine Project file\" is something that I emphasize when I give trainings.  \"When you don't want to expose any history or hidden, removed, confidential data, but only the current selected data as sharable, then export in any other format besides an OpenRefine Project\".", "url": "https://github.com/OpenRefine/OpenRefine/pull/3336#discussion_r535347861", "createdAt": "2020-12-03T15:43:59Z", "author": {"login": "thadguidry"}, "path": "docs/docs/manual/exporting.md", "diffHunk": "@@ -6,34 +6,97 @@ sidebar_label: Exporting\n \n ## Overview\n \n+Once your data is cleaned, you will need to get it out of OpenRefine and into the system of your choice. OpenRefine outputs a number of file formats, can upload your data directly into Google Sheets, and can export directly to Wikidata. \n+\n+You can also export your full project data so that it can be opened by someone else using OpenRefine (or yourself, on another computer).\n \n ## Export data\n \n Note you will only export data in the current view - that is, with current filters and facets applied. \n \n+To export from a project, click the Export button at the top right corner and pick the format you want. You options are:\n \n-\n-*   TSV/CSV\n-*   HTML table\n+*   Tab-separated value (TSV) or Comma-separated value (CSV)\n+*   HTML-formatted table\n *   Excel (XLS or XLSX)\n *   ODF spreadsheet\n-*   Google Sheets \\\n+*   Upload to Google Sheets (requires Google account authorization)\n+*   [Custom tabular exporter](#custom-tabular-exporter)\n+*   [SQL statement exporter](#sql-statement-exporter)\n+*   [Templating exporter](#templating-exporter)\n \n-*   Custom tabular export\n-*   SQL\n-*   Templating export \\\n+You can also [export reconciled data to Wikidata](wikidata#editing-wikidata-with-openrefine), or save your schema for future use with other OpenRefine projects:\n \n *   Upload edits to Wikidata\n *   Export to QuickStatement\n *   Export Wikidata schema\n \n+### Custom tabular exporter\n+\n+![A screenshot of the custom tabular content tab.](/img/custom-tabular-exporter.png)\n+\n+With the custom tabular exporter, you can choose which of your data to export, the separator you wish to use, and whether you'd like to download it to your computer or upload it into a Google Sheet. \n+\n+You can drag and drop the columns appearing in the column list to reorder the output. The options for reconciled and date data are applied to each column individually. \n+\n+This exporter is especially useful with reconciled data, as you can choose whether you wish to output the cells' original values, the matched values, or the matched IDs. Ouputting \u201cmatch entity's name\u201d, \u201cmatched entity's ID\u201d, or \u201ccell's content\u201d will output, respectively, the contents of `cell.recon.match.name`, `cell.recon.match.id`, and `cell.value`. \n+\n+\u201cOutput nothing for unmatched cells\u201d will export empty cells for both newly-created matches and cells with no chosen matches. \u201cLink to matched entity's page\u201d will produce hyperlinked text in an HTML table output, but have no change in other formats.\n+\n+You can also choose how to [output date-formatted cells](exploring#dates). You can create a custom date output by using [formatting according to the SimpleDateFormat parsing key found here](grelfunctions#todateo-b-monthfirst-s-format1-s-format2-).\n+\n+![A screenshot of the custom tabular file download tab.](/img/custom-tabular-exporter2.png)\n+\n+With the download options, you can generate a preview of how the first ten rows of your dataset will output. If you do not choose one of the file formats on the right, the \"Download\" button will generate a text file. \n+\n+With the <span class=\"menuItems\">Option Code</span> tab, you can copy JSON data that saves your current settings, to reuse on another project, or you can paste in existing JSON settings data to apply to the current project. \n+\n+### SQL exporter\n+\n+The SQL exporter creates a SQL statement containing the data you\u2019ve exported, which you can use to overwrite or add to an existing database. \n+\n+![A screenshot of the SQL statement creator window.](/img/sql-exporter.png)\n+\n+A window with two tabs will pop up: one to define what data to output, and another to modify the statement table. This allows you to craft a complete SQL command, including DROP and IF EXISTS if you require them. \n+\n+You can set a default value for empty cells after unchecking \u201cAllow null\u201d in one or more columns. Trimming column names will remove their whitespace characters. \n+\n+![A screenshot of the SQL statement download window.](/img/sql-exporter2.png)\n+\n+\u201cInclude schema\u201d means that you will start your statement with the creation of a table. Without that, you will only have an INSERT statement. \n+\u201cInclude content\u201d means the INSERT statement with data from your project. Without that, you will only create empty columns. \n+\n+You can preview the statement, which will open up a new browser tab/window showing a statement with the first ten rows of your data, or you can save a `.sql` file to your computer. \n+\n+### Templating exporter\n+\n+If you pick <span class=\"menuItems\">Templating\u2026</span> from the <span class=\"menuItems\">Export</span> dropdown menu, you can \u201croll your own\u201d exporter. This is useful for formats that we don't support natively yet, or won't support. The Templating exporter generates JSON by default. \n+\n+The window that appears allows you to set your own separators, prefix, and suffix to create a complete dataset in the language of your choice. In the <span class=\"menuItems\">Row Template</span> section, you can choose which columns to generate from each row by calling them with variables. \n+\n+This can be used to:\n+* output reconciliation data (`cells[\"column name\"].recon.match.name`, `.recon.match.id`, and `.recon.best.name`, for example) instead of cell values\n+* create multiple columns of output from different member fields of a single project column\n+* employ GREL expressions to modify cell data for output (for example, `cells[\"column name\"].value.toUppercase()`). \n+\n+Anything that appears inside curly braces ({{}}) is treated as a GREL expression; anything outside is generated as straight text. You can include [regular expressions](expressions#regular-expressions) as usual (inside forward slashes, with any GREL function that accepts them), with the exception that you cannot use curly braces (for example, to denote a `{min,max}` capture range). \n+\n+You could also simply output a plain-text document inserting data from your project into sentences (for example, \"In `{{cells[\"Year\"].value}}` we received `{{cells[\"RequestCount\"].value}}` requests.\").\n+\n+![A screenshot of the Templating exporter generating JSON by default.](/img/templating-exporter.png)\n+\n+Once you have created your template, you may wish to save the text you produced in each field, in order to reuse it in the future. Once you click \u201cExport\u201d OpenRefine will output a simple text file, and your template will be discarded.\n+\n+We have recipes on using the Templating exporter to [produce several different formats](https://github.com/OpenRefine/OpenRefine/wiki/Recipes#12-templating-exporter).\n \n ## Export a project\n \n+You can share a project in progress with another computer, a colleague, or with someone who wants to check your history. This can be useful for showing that your data cleanup didn\u2019t distort or manipulate the information in any way. Once you have exported a project, another OpenRefine installation can [import it as a new project](starting#import-a-project). \n+\n+From the <span class=\"menuItems\">Export</span> dropdown, select <span class=\"menuItems\">OpenRefine project archive to file</span>. OpenRefine exports your full project with all of its history. It does not export any current views or applied facets. Any reconciliation information will be preserved, but the importing installation will need to add the same reconciliation services to keep working with that data. ", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTI2NDYwNg=="}, "originalCommit": {"oid": "ecc36dba573a9ea9bea74ac0f975535194eb2eec"}, "originalPosition": 98}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1OTAyMDExOnYy", "diffSide": "RIGHT", "path": "docs/docs/manual/exporting.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxNjoyNjoyMFrOH-lPMA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxNjoyNjoyMFrOH-lPMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTM4Mzg1Ng==", "bodyText": "The option here is to export the schema rather than \"save\" (only because we use \"save\" for the schema to mean saving it without exporting it", "url": "https://github.com/OpenRefine/OpenRefine/pull/3336#discussion_r535383856", "createdAt": "2020-12-03T16:26:20Z", "author": {"login": "ostephens"}, "path": "docs/docs/manual/exporting.md", "diffHunk": "@@ -6,34 +6,97 @@ sidebar_label: Exporting\n \n ## Overview\n \n+Once your data is cleaned, you will need to get it out of OpenRefine and into the system of your choice. OpenRefine outputs a number of file formats, can upload your data directly into Google Sheets, and can export directly to Wikidata. \n+\n+You can also export your full project data so that it can be opened by someone else using OpenRefine (or yourself, on another computer).\n \n ## Export data\n \n Note you will only export data in the current view - that is, with current filters and facets applied. \n \n+To export from a project, click the Export button at the top right corner and pick the format you want. You options are:\n \n-\n-*   TSV/CSV\n-*   HTML table\n+*   Tab-separated value (TSV) or Comma-separated value (CSV)\n+*   HTML-formatted table\n *   Excel (XLS or XLSX)\n *   ODF spreadsheet\n-*   Google Sheets \\\n+*   Upload to Google Sheets (requires Google account authorization)\n+*   [Custom tabular exporter](#custom-tabular-exporter)\n+*   [SQL statement exporter](#sql-statement-exporter)\n+*   [Templating exporter](#templating-exporter)\n \n-*   Custom tabular export\n-*   SQL\n-*   Templating export \\\n+You can also [export reconciled data to Wikidata](wikidata#editing-wikidata-with-openrefine), or save your schema for future use with other OpenRefine projects:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ecc36dba573a9ea9bea74ac0f975535194eb2eec"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQyMTc0MzU5OnYy", "diffSide": "RIGHT", "path": "docs/docs/manual/exporting.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQxNzo1NzoxMVrOIHSALA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQxNzo1NzoxMVrOIHSALA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDUwNTkwMA==", "bodyText": "The sentence \"A window with two tabs will pop up: one to define what data to output, and another to modify the statement table.\" doesn't make sense to me. What is \"the statement table.\"?\nMaybe \"A window with two tabs will pop up: one to define what data to output, and another to modify other aspects of the SQL statement with options to preview and download the statement\"", "url": "https://github.com/OpenRefine/OpenRefine/pull/3336#discussion_r544505900", "createdAt": "2020-12-16T17:57:11Z", "author": {"login": "ostephens"}, "path": "docs/docs/manual/exporting.md", "diffHunk": "@@ -6,34 +6,115 @@ sidebar_label: Exporting\n \n ## Overview\n \n+Once your data is cleaned, you will need to get it out of OpenRefine and into the system of your choice. OpenRefine outputs a number of file formats, can upload your data directly into Google Sheets, and can create or update statements on Wikidata.\n \n-## Export data\n+You can also [export your full project data](#export-a-project) so that it can be opened by someone else using OpenRefine (or yourself, on another computer).\n \n-Note you will only export data in the current view - that is, with current filters and facets applied. \n+## Export data\n \n+Many of the following options only export data in the current view - that is, with current filters and facets applied. Some will give you the choice to export your entire dataset or just your current view.\n \n+To export from a project, click the <span class=\"menuItems\">Export</span> dropdown button at the top right corner and pick the format you want. You options are:\n \n-*   TSV/CSV\n-*   HTML table\n+*   Tab-separated value (TSV) or Comma-separated value (CSV)\n+*   HTML-formatted table\n *   Excel (XLS or XLSX)\n *   ODF spreadsheet\n-*   Google Sheets \\\n+*   Upload to Google Sheets (requires [Google account authorization](starting#google-sheet-from-drive))\n+*   [Custom tabular exporter](#custom-tabular-exporter)\n+*   [SQL statement exporter](#sql-statement-exporter)\n+*   [Templating exporter](#templating-exporter)\n+\n+You can also export reconciled data to Wikidata, or export your Wikidata schema for future use with other OpenRefine projects:\n+\n+*   [Upload edits to Wikidata](wikidata#upload-edits-to-wikidata)\n+*   [Export to QuickStatements](wikidata#quickstatements-export) (version 1)\n+*   [Export Wikidata schema](wikidata#import-and-export-schema)\n+\n+### Custom tabular exporter\n+\n+![A screenshot of the custom tabular content tab.](/img/custom-tabular-exporter.png)\n+\n+With the custom tabular exporter, you can choose which of your data to export, the separator you wish to use, and whether you'd like to download it to your computer or upload it into a Google Sheet. \n+\n+On the <span class=\"tabLabels\">Content</span> tab, you can drag and drop the columns appearing in the column list to reorder the output. The options for reconciled and date data are applied to each column individually. \n+\n+This exporter is especially useful with reconciled data, as you can choose whether you wish to output the cells' original values, the matched values, or the matched IDs. Ouputting \u201cmatch entity's name\u201d, \u201cmatched entity's ID\u201d, or \u201ccell's content\u201d will output, respectively, the contents of `cell.recon.match.name`, `cell.recon.match.id`, and `cell.value`. \n+\n+\u201cOutput nothing for unmatched cells\u201d will export empty cells for both newly-created matches and cells with no chosen matches. \u201cLink to matched entity's page\u201d will produce hyperlinked text in an HTML table output, but have no effect in other formats.\n+\n+At this time, the date-formatting options in this window do not work. You can [keep track of this issue on Github](https://github.com/OpenRefine/OpenRefine/issues/3368).\n+In the future, you will also be able to choose how to [output date-formatted cells](exploring#dates). You can create a custom date output by using [formatting according to the SimpleDateFormat parsing key found here](grelfunctions#todateo-b-monthfirst-s-format1-s-format2-).\n+\n+![A screenshot of the custom tabular file download tab.](/img/custom-tabular-exporter2.png)\n+\n+On the <span class=\"tabLabels\">Download</span> tab, you can generate a preview of how the first ten rows of your dataset will output. If you do not choose one of the file formats on the right, the <span class=\"buttonLabels\">Download</span> button will generate a text file. On the <span class=\"tabLabels\">Upload</span> tab, you can create a new Google Sheet. \n+\n+With the <span class=\"tabLabels\">Option Code</span> tab, you can copy JSON of your current settings to reuse on another project, or you can paste in existing JSON settings to apply to the current project. \n+\n+### SQL exporter\n+\n+The SQL exporter creates a SQL statement containing the data you\u2019ve exported, which you can use to overwrite or add to an existing database. A window with two tabs will pop up: one to define what data to output, and another to modify the statement table. ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "714e022c9605b1d6369c21d7287211e98bd9fd1d"}, "originalPosition": 57}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQyMTc0ODYxOnYy", "diffSide": "RIGHT", "path": "docs/docs/manual/exporting.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQxNzo1ODoxOFrOIHSDMQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQxNzo1ODoxOFrOIHSDMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDUwNjY3Mw==", "bodyText": "The options to include DROP and IF EXISTS are on the Download tab, not the Content tab", "url": "https://github.com/OpenRefine/OpenRefine/pull/3336#discussion_r544506673", "createdAt": "2020-12-16T17:58:18Z", "author": {"login": "ostephens"}, "path": "docs/docs/manual/exporting.md", "diffHunk": "@@ -6,34 +6,115 @@ sidebar_label: Exporting\n \n ## Overview\n \n+Once your data is cleaned, you will need to get it out of OpenRefine and into the system of your choice. OpenRefine outputs a number of file formats, can upload your data directly into Google Sheets, and can create or update statements on Wikidata.\n \n-## Export data\n+You can also [export your full project data](#export-a-project) so that it can be opened by someone else using OpenRefine (or yourself, on another computer).\n \n-Note you will only export data in the current view - that is, with current filters and facets applied. \n+## Export data\n \n+Many of the following options only export data in the current view - that is, with current filters and facets applied. Some will give you the choice to export your entire dataset or just your current view.\n \n+To export from a project, click the <span class=\"menuItems\">Export</span> dropdown button at the top right corner and pick the format you want. You options are:\n \n-*   TSV/CSV\n-*   HTML table\n+*   Tab-separated value (TSV) or Comma-separated value (CSV)\n+*   HTML-formatted table\n *   Excel (XLS or XLSX)\n *   ODF spreadsheet\n-*   Google Sheets \\\n+*   Upload to Google Sheets (requires [Google account authorization](starting#google-sheet-from-drive))\n+*   [Custom tabular exporter](#custom-tabular-exporter)\n+*   [SQL statement exporter](#sql-statement-exporter)\n+*   [Templating exporter](#templating-exporter)\n+\n+You can also export reconciled data to Wikidata, or export your Wikidata schema for future use with other OpenRefine projects:\n+\n+*   [Upload edits to Wikidata](wikidata#upload-edits-to-wikidata)\n+*   [Export to QuickStatements](wikidata#quickstatements-export) (version 1)\n+*   [Export Wikidata schema](wikidata#import-and-export-schema)\n+\n+### Custom tabular exporter\n+\n+![A screenshot of the custom tabular content tab.](/img/custom-tabular-exporter.png)\n+\n+With the custom tabular exporter, you can choose which of your data to export, the separator you wish to use, and whether you'd like to download it to your computer or upload it into a Google Sheet. \n+\n+On the <span class=\"tabLabels\">Content</span> tab, you can drag and drop the columns appearing in the column list to reorder the output. The options for reconciled and date data are applied to each column individually. \n+\n+This exporter is especially useful with reconciled data, as you can choose whether you wish to output the cells' original values, the matched values, or the matched IDs. Ouputting \u201cmatch entity's name\u201d, \u201cmatched entity's ID\u201d, or \u201ccell's content\u201d will output, respectively, the contents of `cell.recon.match.name`, `cell.recon.match.id`, and `cell.value`. \n+\n+\u201cOutput nothing for unmatched cells\u201d will export empty cells for both newly-created matches and cells with no chosen matches. \u201cLink to matched entity's page\u201d will produce hyperlinked text in an HTML table output, but have no effect in other formats.\n+\n+At this time, the date-formatting options in this window do not work. You can [keep track of this issue on Github](https://github.com/OpenRefine/OpenRefine/issues/3368).\n+In the future, you will also be able to choose how to [output date-formatted cells](exploring#dates). You can create a custom date output by using [formatting according to the SimpleDateFormat parsing key found here](grelfunctions#todateo-b-monthfirst-s-format1-s-format2-).\n+\n+![A screenshot of the custom tabular file download tab.](/img/custom-tabular-exporter2.png)\n+\n+On the <span class=\"tabLabels\">Download</span> tab, you can generate a preview of how the first ten rows of your dataset will output. If you do not choose one of the file formats on the right, the <span class=\"buttonLabels\">Download</span> button will generate a text file. On the <span class=\"tabLabels\">Upload</span> tab, you can create a new Google Sheet. \n+\n+With the <span class=\"tabLabels\">Option Code</span> tab, you can copy JSON of your current settings to reuse on another project, or you can paste in existing JSON settings to apply to the current project. \n+\n+### SQL exporter\n+\n+The SQL exporter creates a SQL statement containing the data you\u2019ve exported, which you can use to overwrite or add to an existing database. A window with two tabs will pop up: one to define what data to output, and another to modify the statement table. \n+\n+![A screenshot of the SQL statement creator window.](/img/sql-exporter.png)\n+\n+The <span class=\"tabLabels\">Content</span> tab allows you to craft a complete SQL statement, including DROP and IF EXISTS if you require them.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "714e022c9605b1d6369c21d7287211e98bd9fd1d"}, "originalPosition": 61}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQyMTc1NTQzOnYy", "diffSide": "RIGHT", "path": "docs/docs/manual/exporting.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQxNzo1OTo0MFrOIHSHLQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQxNzo1OTo0MFrOIHSHLQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDUwNzY5Mw==", "bodyText": "\"tab allows you to finalize your statement, name it, and preview or download it.\"\nThis suggests that you can \"name your statement\" but in fact you can set a name for the table which the statement will refer to", "url": "https://github.com/OpenRefine/OpenRefine/pull/3336#discussion_r544507693", "createdAt": "2020-12-16T17:59:40Z", "author": {"login": "ostephens"}, "path": "docs/docs/manual/exporting.md", "diffHunk": "@@ -6,34 +6,115 @@ sidebar_label: Exporting\n \n ## Overview\n \n+Once your data is cleaned, you will need to get it out of OpenRefine and into the system of your choice. OpenRefine outputs a number of file formats, can upload your data directly into Google Sheets, and can create or update statements on Wikidata.\n \n-## Export data\n+You can also [export your full project data](#export-a-project) so that it can be opened by someone else using OpenRefine (or yourself, on another computer).\n \n-Note you will only export data in the current view - that is, with current filters and facets applied. \n+## Export data\n \n+Many of the following options only export data in the current view - that is, with current filters and facets applied. Some will give you the choice to export your entire dataset or just your current view.\n \n+To export from a project, click the <span class=\"menuItems\">Export</span> dropdown button at the top right corner and pick the format you want. You options are:\n \n-*   TSV/CSV\n-*   HTML table\n+*   Tab-separated value (TSV) or Comma-separated value (CSV)\n+*   HTML-formatted table\n *   Excel (XLS or XLSX)\n *   ODF spreadsheet\n-*   Google Sheets \\\n+*   Upload to Google Sheets (requires [Google account authorization](starting#google-sheet-from-drive))\n+*   [Custom tabular exporter](#custom-tabular-exporter)\n+*   [SQL statement exporter](#sql-statement-exporter)\n+*   [Templating exporter](#templating-exporter)\n+\n+You can also export reconciled data to Wikidata, or export your Wikidata schema for future use with other OpenRefine projects:\n+\n+*   [Upload edits to Wikidata](wikidata#upload-edits-to-wikidata)\n+*   [Export to QuickStatements](wikidata#quickstatements-export) (version 1)\n+*   [Export Wikidata schema](wikidata#import-and-export-schema)\n+\n+### Custom tabular exporter\n+\n+![A screenshot of the custom tabular content tab.](/img/custom-tabular-exporter.png)\n+\n+With the custom tabular exporter, you can choose which of your data to export, the separator you wish to use, and whether you'd like to download it to your computer or upload it into a Google Sheet. \n+\n+On the <span class=\"tabLabels\">Content</span> tab, you can drag and drop the columns appearing in the column list to reorder the output. The options for reconciled and date data are applied to each column individually. \n+\n+This exporter is especially useful with reconciled data, as you can choose whether you wish to output the cells' original values, the matched values, or the matched IDs. Ouputting \u201cmatch entity's name\u201d, \u201cmatched entity's ID\u201d, or \u201ccell's content\u201d will output, respectively, the contents of `cell.recon.match.name`, `cell.recon.match.id`, and `cell.value`. \n+\n+\u201cOutput nothing for unmatched cells\u201d will export empty cells for both newly-created matches and cells with no chosen matches. \u201cLink to matched entity's page\u201d will produce hyperlinked text in an HTML table output, but have no effect in other formats.\n+\n+At this time, the date-formatting options in this window do not work. You can [keep track of this issue on Github](https://github.com/OpenRefine/OpenRefine/issues/3368).\n+In the future, you will also be able to choose how to [output date-formatted cells](exploring#dates). You can create a custom date output by using [formatting according to the SimpleDateFormat parsing key found here](grelfunctions#todateo-b-monthfirst-s-format1-s-format2-).\n+\n+![A screenshot of the custom tabular file download tab.](/img/custom-tabular-exporter2.png)\n+\n+On the <span class=\"tabLabels\">Download</span> tab, you can generate a preview of how the first ten rows of your dataset will output. If you do not choose one of the file formats on the right, the <span class=\"buttonLabels\">Download</span> button will generate a text file. On the <span class=\"tabLabels\">Upload</span> tab, you can create a new Google Sheet. \n+\n+With the <span class=\"tabLabels\">Option Code</span> tab, you can copy JSON of your current settings to reuse on another project, or you can paste in existing JSON settings to apply to the current project. \n+\n+### SQL exporter\n+\n+The SQL exporter creates a SQL statement containing the data you\u2019ve exported, which you can use to overwrite or add to an existing database. A window with two tabs will pop up: one to define what data to output, and another to modify the statement table. \n+\n+![A screenshot of the SQL statement creator window.](/img/sql-exporter.png)\n+\n+The <span class=\"tabLabels\">Content</span> tab allows you to craft a complete SQL statement, including DROP and IF EXISTS if you require them.\n+\n+You can set a default value for empty cells after unchecking \u201cAllow null\u201d in one or more columns. Trimming column names will remove their whitespace characters. \n \n-*   Custom tabular export\n-*   SQL\n-*   Templating export \\\n+![A screenshot of the SQL statement download window.](/img/sql-exporter2.png)\n \n-*   Upload edits to Wikidata\n-*   Export to QuickStatement\n-*   Export Wikidata schema\n+The <span class=\"tabLabels\">Download</span> tab allows you to finalize your statement, name it, and preview or download it.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "714e022c9605b1d6369c21d7287211e98bd9fd1d"}, "originalPosition": 73}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQyNTEyNTYxOnYy", "diffSide": "RIGHT", "path": "docs/docs/manual/exporting.md", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QxMDo1MTozNlrOIHvy8g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QxMDo1MTozNlrOIHvy8g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDk5NDAzNA==", "bodyText": "There's a mismatch between this link (#sql-statement-exporter) and the anchor further down (#sql-exporter) meaning that the link doesn't work", "url": "https://github.com/OpenRefine/OpenRefine/pull/3336#discussion_r544994034", "createdAt": "2020-12-17T10:51:36Z", "author": {"login": "ostephens"}, "path": "docs/docs/manual/exporting.md", "diffHunk": "@@ -6,34 +6,117 @@ sidebar_label: Exporting\n \n ## Overview\n \n+Once your data is cleaned, you will need to get it out of OpenRefine and into the system of your choice. OpenRefine outputs a number of file formats, can upload your data directly into Google Sheets, and can create or update statements on Wikidata.\n \n-## Export data\n+You can also [export your full project data](#export-a-project) so that it can be opened by someone else using OpenRefine (or yourself, on another computer).\n \n-Note you will only export data in the current view - that is, with current filters and facets applied. \n+## Export data\n \n+Many of the following options only export data in the current view - that is, with current filters and facets applied. Some will give you the choice to export your entire dataset or just your current view.\n \n+To export from a project, click the <span class=\"menuItems\">Export</span> dropdown button at the top right corner and pick the format you want. You options are:\n \n-*   TSV/CSV\n-*   HTML table\n+*   Tab-separated value (TSV) or Comma-separated value (CSV)\n+*   HTML-formatted table\n *   Excel (XLS or XLSX)\n *   ODF spreadsheet\n-*   Google Sheets \\\n+*   Upload to Google Sheets (requires [Google account authorization](starting#google-sheet-from-drive))\n+*   [Custom tabular exporter](#custom-tabular-exporter)\n+*   [SQL statement exporter](#sql-statement-exporter)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4269419d3e12c6e23935a8c86680d3f8310596b7"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQyNTE1NDcyOnYy", "diffSide": "RIGHT", "path": "docs/docs/manual/exporting.md", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QxMDo1ODoxMVrOIHwD1Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QxMDo1ODoxMVrOIHwD1Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDk5ODM1Nw==", "bodyText": "In my local preview there is no line break between these two lines, but looking at the code I'm not sure why not", "url": "https://github.com/OpenRefine/OpenRefine/pull/3336#discussion_r544998357", "createdAt": "2020-12-17T10:58:11Z", "author": {"login": "ostephens"}, "path": "docs/docs/manual/exporting.md", "diffHunk": "@@ -6,34 +6,117 @@ sidebar_label: Exporting\n \n ## Overview\n \n+Once your data is cleaned, you will need to get it out of OpenRefine and into the system of your choice. OpenRefine outputs a number of file formats, can upload your data directly into Google Sheets, and can create or update statements on Wikidata.\n \n-## Export data\n+You can also [export your full project data](#export-a-project) so that it can be opened by someone else using OpenRefine (or yourself, on another computer).\n \n-Note you will only export data in the current view - that is, with current filters and facets applied. \n+## Export data\n \n+Many of the following options only export data in the current view - that is, with current filters and facets applied. Some will give you the choice to export your entire dataset or just your current view.\n \n+To export from a project, click the <span class=\"menuItems\">Export</span> dropdown button at the top right corner and pick the format you want. You options are:\n \n-*   TSV/CSV\n-*   HTML table\n+*   Tab-separated value (TSV) or Comma-separated value (CSV)\n+*   HTML-formatted table\n *   Excel (XLS or XLSX)\n *   ODF spreadsheet\n-*   Google Sheets \\\n+*   Upload to Google Sheets (requires [Google account authorization](starting#google-sheet-from-drive))\n+*   [Custom tabular exporter](#custom-tabular-exporter)\n+*   [SQL statement exporter](#sql-statement-exporter)\n+*   [Templating exporter](#templating-exporter)\n+\n+You can also export reconciled data to Wikidata, or export your Wikidata schema for future use with other OpenRefine projects:\n+\n+*   [Upload edits to Wikidata](wikidata#upload-edits-to-wikidata)\n+*   [Export to QuickStatements](wikidata#quickstatements-export) (version 1)\n+*   [Export Wikidata schema](wikidata#import-and-export-schema)\n+\n+### Custom tabular exporter\n+\n+![A screenshot of the custom tabular content tab.](/img/custom-tabular-exporter.png)\n+\n+With the custom tabular exporter, you can choose which of your data to export, the separator you wish to use, and whether you'd like to download it to your computer or upload it into a Google Sheet. \n+\n+On the <span class=\"tabLabels\">Content</span> tab, you can drag and drop the columns appearing in the column list to reorder the output. The options for reconciled and date data are applied to each column individually. \n+\n+This exporter is especially useful with reconciled data, as you can choose whether you wish to output the cells' original values, the matched values, or the matched IDs. Ouputting \u201cmatch entity's name\u201d, \u201cmatched entity's ID\u201d, or \u201ccell's content\u201d will output, respectively, the contents of `cell.recon.match.name`, `cell.recon.match.id`, and `cell.value`. \n+\n+\u201cOutput nothing for unmatched cells\u201d will export empty cells for both newly-created matches and cells with no chosen matches. \u201cLink to matched entity's page\u201d will produce hyperlinked text in an HTML table output, but have no effect in other formats.\n+\n+At this time, the date-formatting options in this window do not work. You can [keep track of this issue on Github](https://github.com/OpenRefine/OpenRefine/issues/3368).\n+In the future, you will also be able to choose how to [output date-formatted cells](exploring#dates). You can create a custom date output by using [formatting according to the SimpleDateFormat parsing key found here](grelfunctions#todateo-b-monthfirst-s-format1-s-format2-).\n+\n+![A screenshot of the custom tabular file download tab.](/img/custom-tabular-exporter2.png)\n+\n+On the <span class=\"tabLabels\">Download</span> tab, you can generate a preview of how the first ten rows of your dataset will output. If you do not choose one of the file formats on the right, the <span class=\"buttonLabels\">Download</span> button will generate a text file. On the <span class=\"tabLabels\">Upload</span> tab, you can create a new Google Sheet. \n+\n+With the <span class=\"tabLabels\">Option Code</span> tab, you can copy JSON of your current settings to reuse on another project, or you can paste in existing JSON settings to apply to the current project. \n+\n+### SQL exporter\n+\n+The SQL exporter creates a SQL statement containing the data you\u2019ve exported, which you can use to overwrite or add to an existing database. Choosing <span class=\"menuItems\">Export</span> \u2192 <span class=\"menuItems\">SQL exporter</span> will bring up a window with two tabs: one to define what data to output, and another to modify other aspects of the SQL statement with options to preview and download the statement.  \n+\n+![A screenshot of the SQL statement content window.](/img/sql-exporter.png)\n+\n+The <span class=\"tabLabels\">Content</span> tab allows you to craft your dataset into an SQL table. From here, you can choose which columns to export, the data type to export for each (or choose \"VARCHAR\"), and the maximum character length for each field (if applicable based on the data type). You can set a default value for empty cells after unchecking \u201cAllow null\u201d in one or more columns. \n+\n+With this output tool, you can choose whether to output only currently visible rows, or all the rows in your dataset, as well as whether to include empty rows. Trimming column names will remove their whitespace characters. \n \n-*   Custom tabular export\n-*   SQL\n-*   Templating export \\\n+![A screenshot of the SQL statement download window.](/img/sql-exporter2.png)\n \n-*   Upload edits to Wikidata\n-*   Export to QuickStatement\n-*   Export Wikidata schema\n+The <span class=\"tabLabels\">Download</span> tab allows you to finalize your complete SQL statement. \n \n+<span class=\"fieldLabels\">Include schema</span> means that you will start your statement with the creation of a table. Without that, you will only have an INSERT statement. \n+\n+<span class=\"fieldLabels\">Include content</span> means the INSERT statement with data from your project. Without that, you will only create empty columns. ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4269419d3e12c6e23935a8c86680d3f8310596b7"}, "originalPosition": 77}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2819, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}