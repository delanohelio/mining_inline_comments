{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMyODAyOTE2", "number": 2692, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNFQwODowMzozM1rOEFTVFQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNFQwODowNTowMVrOEFTVZQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczOTk1MDI5OnYy", "diffSide": "RIGHT", "path": "main/src/com/google/refine/operations/column/ColumnAdditionByFetchingURLsOperation.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNFQwODowMzozM1rOGjbdSw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQwMDo0MDoyN1rOGkHUXA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTgwMzIxMQ==", "bodyText": "Shouldn't checks like header.name != \"\" use equals instead?", "url": "https://github.com/OpenRefine/OpenRefine/pull/2692#discussion_r439803211", "createdAt": "2020-06-14T08:03:33Z", "author": {"login": "wetneb"}, "path": "main/src/com/google/refine/operations/column/ColumnAdditionByFetchingURLsOperation.java", "diffHunk": "@@ -134,8 +151,34 @@ public ColumnAdditionByFetchingURLsOperation(\n         _delay = delay;\n         _cacheResponses = cacheResponses;\n         _httpHeadersJson = httpHeadersJson;\n+\n+        List<Header> headers = new ArrayList<Header>();\n+        if (_httpHeadersJson != null) {\n+            for (HttpHeader header : _httpHeadersJson) {\n+                if (header.name != null && header.name != \"\" && header.value != null && header.value != \"\") {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "caa159bd5720174f0977b039ce55ea3471ed2bab"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTg1ODA2MQ==", "bodyText": "Yes, of course! I'll fix it.", "url": "https://github.com/OpenRefine/OpenRefine/pull/2692#discussion_r439858061", "createdAt": "2020-06-14T18:57:24Z", "author": {"login": "tfmorris"}, "path": "main/src/com/google/refine/operations/column/ColumnAdditionByFetchingURLsOperation.java", "diffHunk": "@@ -134,8 +151,34 @@ public ColumnAdditionByFetchingURLsOperation(\n         _delay = delay;\n         _cacheResponses = cacheResponses;\n         _httpHeadersJson = httpHeadersJson;\n+\n+        List<Header> headers = new ArrayList<Header>();\n+        if (_httpHeadersJson != null) {\n+            for (HttpHeader header : _httpHeadersJson) {\n+                if (header.name != null && header.name != \"\" && header.value != null && header.value != \"\") {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTgwMzIxMQ=="}, "originalCommit": {"oid": "caa159bd5720174f0977b039ce55ea3471ed2bab"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDUyMTgyMA==", "bodyText": "Done.", "url": "https://github.com/OpenRefine/OpenRefine/pull/2692#discussion_r440521820", "createdAt": "2020-06-16T00:40:27Z", "author": {"login": "tfmorris"}, "path": "main/src/com/google/refine/operations/column/ColumnAdditionByFetchingURLsOperation.java", "diffHunk": "@@ -134,8 +151,34 @@ public ColumnAdditionByFetchingURLsOperation(\n         _delay = delay;\n         _cacheResponses = cacheResponses;\n         _httpHeadersJson = httpHeadersJson;\n+\n+        List<Header> headers = new ArrayList<Header>();\n+        if (_httpHeadersJson != null) {\n+            for (HttpHeader header : _httpHeadersJson) {\n+                if (header.name != null && header.name != \"\" && header.value != null && header.value != \"\") {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTgwMzIxMQ=="}, "originalCommit": {"oid": "caa159bd5720174f0977b039ce55ea3471ed2bab"}, "originalPosition": 58}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczOTk1MTA5OnYy", "diffSide": "RIGHT", "path": "main/src/com/google/refine/operations/column/ColumnAdditionByFetchingURLsOperation.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNFQwODowNTowMVrOGjbdtw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQwMDo0MDo0M1rOGkHUuA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTgwMzMxOQ==", "bodyText": "Why is this code commented out?", "url": "https://github.com/OpenRefine/OpenRefine/pull/2692#discussion_r439803319", "createdAt": "2020-06-14T08:05:01Z", "author": {"login": "wetneb"}, "path": "main/src/com/google/refine/operations/column/ColumnAdditionByFetchingURLsOperation.java", "diffHunk": "@@ -134,8 +151,34 @@ public ColumnAdditionByFetchingURLsOperation(\n         _delay = delay;\n         _cacheResponses = cacheResponses;\n         _httpHeadersJson = httpHeadersJson;\n+\n+        List<Header> headers = new ArrayList<Header>();\n+        if (_httpHeadersJson != null) {\n+            for (HttpHeader header : _httpHeadersJson) {\n+                if (header.name != null && header.name != \"\" && header.value != null && header.value != \"\") {\n+                    headers.add(new BasicHeader(header.name, header.value));\n+                }\n+            }\n+        }\n+        httpHeaders = headers.toArray(httpHeaders);\n+\n+        defaultRequestConfig = RequestConfig.custom()\n+                .setConnectTimeout(30 * 1000)\n+                .setConnectionRequestTimeout(30 * 1000)\n+                .setSocketTimeout(10 * 1000).build();\n+\n+//        CredentialsProvider credsProvider = new BasicCredentialsProvider();\n+//        credsProvider.setCredentials(new AuthScope(host, 443),\n+//                new UsernamePasswordCredentials(user, password));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "caa159bd5720174f0977b039ce55ea3471ed2bab"}, "originalPosition": 72}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTg1ODE1Ng==", "bodyText": "It's not part of the current functionality, so not included in the refactoring. I left it as a placeholder for future feature enhancement, but I can remove it if you think that would be cleaner.", "url": "https://github.com/OpenRefine/OpenRefine/pull/2692#discussion_r439858156", "createdAt": "2020-06-14T18:58:36Z", "author": {"login": "tfmorris"}, "path": "main/src/com/google/refine/operations/column/ColumnAdditionByFetchingURLsOperation.java", "diffHunk": "@@ -134,8 +151,34 @@ public ColumnAdditionByFetchingURLsOperation(\n         _delay = delay;\n         _cacheResponses = cacheResponses;\n         _httpHeadersJson = httpHeadersJson;\n+\n+        List<Header> headers = new ArrayList<Header>();\n+        if (_httpHeadersJson != null) {\n+            for (HttpHeader header : _httpHeadersJson) {\n+                if (header.name != null && header.name != \"\" && header.value != null && header.value != \"\") {\n+                    headers.add(new BasicHeader(header.name, header.value));\n+                }\n+            }\n+        }\n+        httpHeaders = headers.toArray(httpHeaders);\n+\n+        defaultRequestConfig = RequestConfig.custom()\n+                .setConnectTimeout(30 * 1000)\n+                .setConnectionRequestTimeout(30 * 1000)\n+                .setSocketTimeout(10 * 1000).build();\n+\n+//        CredentialsProvider credsProvider = new BasicCredentialsProvider();\n+//        credsProvider.setCredentials(new AuthScope(host, 443),\n+//                new UsernamePasswordCredentials(user, password));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTgwMzMxOQ=="}, "originalCommit": {"oid": "caa159bd5720174f0977b039ce55ea3471ed2bab"}, "originalPosition": 72}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTg1OTIzNA==", "bodyText": "Ah yes, I thought we supported this already, but we only expose an Authorization header in the UI. I generally try to avoid committing commented out code, but if you want to leave it as a demo for future improvements, it could be worth explaining that intention with a comment, perhaps?", "url": "https://github.com/OpenRefine/OpenRefine/pull/2692#discussion_r439859234", "createdAt": "2020-06-14T19:12:57Z", "author": {"login": "wetneb"}, "path": "main/src/com/google/refine/operations/column/ColumnAdditionByFetchingURLsOperation.java", "diffHunk": "@@ -134,8 +151,34 @@ public ColumnAdditionByFetchingURLsOperation(\n         _delay = delay;\n         _cacheResponses = cacheResponses;\n         _httpHeadersJson = httpHeadersJson;\n+\n+        List<Header> headers = new ArrayList<Header>();\n+        if (_httpHeadersJson != null) {\n+            for (HttpHeader header : _httpHeadersJson) {\n+                if (header.name != null && header.name != \"\" && header.value != null && header.value != \"\") {\n+                    headers.add(new BasicHeader(header.name, header.value));\n+                }\n+            }\n+        }\n+        httpHeaders = headers.toArray(httpHeaders);\n+\n+        defaultRequestConfig = RequestConfig.custom()\n+                .setConnectTimeout(30 * 1000)\n+                .setConnectionRequestTimeout(30 * 1000)\n+                .setSocketTimeout(10 * 1000).build();\n+\n+//        CredentialsProvider credsProvider = new BasicCredentialsProvider();\n+//        credsProvider.setCredentials(new AuthScope(host, 443),\n+//                new UsernamePasswordCredentials(user, password));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTgwMzMxOQ=="}, "originalCommit": {"oid": "caa159bd5720174f0977b039ce55ea3471ed2bab"}, "originalPosition": 72}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDUyMTkxMg==", "bodyText": "Comment added", "url": "https://github.com/OpenRefine/OpenRefine/pull/2692#discussion_r440521912", "createdAt": "2020-06-16T00:40:43Z", "author": {"login": "tfmorris"}, "path": "main/src/com/google/refine/operations/column/ColumnAdditionByFetchingURLsOperation.java", "diffHunk": "@@ -134,8 +151,34 @@ public ColumnAdditionByFetchingURLsOperation(\n         _delay = delay;\n         _cacheResponses = cacheResponses;\n         _httpHeadersJson = httpHeadersJson;\n+\n+        List<Header> headers = new ArrayList<Header>();\n+        if (_httpHeadersJson != null) {\n+            for (HttpHeader header : _httpHeadersJson) {\n+                if (header.name != null && header.name != \"\" && header.value != null && header.value != \"\") {\n+                    headers.add(new BasicHeader(header.name, header.value));\n+                }\n+            }\n+        }\n+        httpHeaders = headers.toArray(httpHeaders);\n+\n+        defaultRequestConfig = RequestConfig.custom()\n+                .setConnectTimeout(30 * 1000)\n+                .setConnectionRequestTimeout(30 * 1000)\n+                .setSocketTimeout(10 * 1000).build();\n+\n+//        CredentialsProvider credsProvider = new BasicCredentialsProvider();\n+//        credsProvider.setCredentials(new AuthScope(host, 443),\n+//                new UsernamePasswordCredentials(user, password));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTgwMzMxOQ=="}, "originalCommit": {"oid": "caa159bd5720174f0977b039ce55ea3471ed2bab"}, "originalPosition": 72}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2688, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}