{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ2Mzk0NDg1", "number": 2907, "title": "Add One-of qualifier value property constraint", "bodyText": "Implemented one-of qualifier value property constraint as part of #2354", "createdAt": "2020-07-08T17:49:50Z", "url": "https://github.com/OpenRefine/OpenRefine/pull/2907", "merged": true, "mergeCommit": {"oid": "2bf493a498d142d9c5718ea6ca37f914e566336f"}, "closed": true, "closedAt": "2020-07-15T12:13:49Z", "author": {"login": "darecoder"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc03DPqAFqTQ0ODE2ODcwNw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABc1JlEPAFqTQ0ODg5Mjc2OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ4MTY4NzA3", "url": "https://github.com/OpenRefine/OpenRefine/pull/2907#pullrequestreview-448168707", "createdAt": "2020-07-14T14:36:23Z", "commit": {"oid": "3bd3f0f3a288bc1f00e210d1b8c956f0949d5888"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxNDozNjoyM1rOGxWpPg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxNDozNzozNlrOGxWtDg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDQwNDQxNA==", "bodyText": "The constraint body does not look grammatical to me. The variable names are not ideal either, I would replace added_property_entity by qualifier_entity and property_entity by statement_entity to emphasize their roles. How about this for the title and body:\nInvalid value for qualifier {qualifier_entity} on statement {statement_entity}\nOn items such as {example_entity}, an invalid value for qualifier {qualifier_entity} was supplied on statement {statement_entity}.", "url": "https://github.com/OpenRefine/OpenRefine/pull/2907#discussion_r454404414", "createdAt": "2020-07-14T14:36:23Z", "author": {"login": "wetneb"}, "path": "extensions/wikidata/module/langs/translation-en.json", "diffHunk": "@@ -148,6 +148,8 @@\n     \"warnings-messages/multi-valued-property-is-required-for-new-item/body\": \"This property is expected to have more than one statement on each item but it has single statement, for instance on {example_entity}.\",\n     \"warnings-messages/multi-valued-property-is-required-for-existing-item/title\": \"{property_entity} should have more than one statement on existing items.\",\n     \"warnings-messages/multi-valued-property-is-required-for-existing-item/body\": \"This property is expected to have more than one statement on each item but it has single statement, for instance on {example_entity}. If the item already has statements with this property in Wikidata, then this warning can be ignored.\",\n+    \"warnings-messages/values-should-not-be-used-as-qualifier/title\": \"{property_entity} have qualifiers with inappropriate values.\",\n+    \"warnings-messages/values-should-not-be-used-as-qualifier/body\": \"{property_entity} have qualifier with {added_property_entity} have in appropriate values. for instance on {example_entity}.\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3bd3f0f3a288bc1f00e210d1b8c956f0949d5888"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDQwNTM5MA==", "bodyText": "Why call this variable specs? Those are the qualifiers you are inspecting, not the specifications of a constraint.", "url": "https://github.com/OpenRefine/OpenRefine/pull/2907#discussion_r454405390", "createdAt": "2020-07-14T14:37:36Z", "author": {"login": "wetneb"}, "path": "extensions/wikidata/src/org/openrefine/wikidata/qa/scrutinizers/UseAsQualifierScrutinizer.java", "diffHunk": "@@ -0,0 +1,84 @@\n+package org.openrefine.wikidata.qa.scrutinizers;\n+\n+import org.openrefine.wikidata.qa.QAWarning;\n+import org.openrefine.wikidata.updates.ItemUpdate;\n+import org.wikidata.wdtk.datamodel.helpers.Datamodel;\n+import org.wikidata.wdtk.datamodel.interfaces.PropertyIdValue;\n+import org.wikidata.wdtk.datamodel.interfaces.Snak;\n+import org.wikidata.wdtk.datamodel.interfaces.SnakGroup;\n+import org.wikidata.wdtk.datamodel.interfaces.Statement;\n+import org.wikidata.wdtk.datamodel.interfaces.Value;\n+\n+import java.util.ArrayList;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+\n+public class UseAsQualifierScrutinizer extends EditScrutinizer {\n+\n+    public static final String type = \"values-should-not-be-used-as-qualifier\";\n+    public static String ONE_OF_QUALIFIER_VALUE_PROPERTY_QID = \"Q52712340\";\n+    public static String QUALIFIER_PROPERTY_PID = \"P2306\";\n+    public static String ITEM_OF_PROPERTY_CONSTRAINT_PID = \"P2305\";\n+\n+    class UseAsQualifierConstraint {\n+        final PropertyIdValue allowedQualifierPid;\n+        final List<Value> itemList;\n+        UseAsQualifierConstraint(Statement statement) {\n+            List<SnakGroup> specs = statement.getClaim().getQualifiers();\n+            PropertyIdValue pid = null;\n+            this.itemList = new ArrayList<>();\n+            for(SnakGroup group : specs) {\n+                for (Snak snak : group.getSnaks()) {\n+                    if (group.getProperty().getId().equals(QUALIFIER_PROPERTY_PID)){\n+                        pid = (PropertyIdValue) snak.getValue();\n+                    }\n+                    if (group.getProperty().getId().equals(ITEM_OF_PROPERTY_CONSTRAINT_PID)){\n+                        this.itemList.add(snak.getValue());\n+                    }\n+                }\n+            }\n+            this.allowedQualifierPid = pid;\n+        }\n+    }\n+\n+    @Override\n+    public void scrutinize(ItemUpdate update) {\n+        for (Statement statement : update.getAddedStatements()) {\n+            PropertyIdValue pid = statement.getClaim().getMainSnak().getPropertyId();\n+            Map<PropertyIdValue, List<Value>> qualifiersMap = new HashMap<>();\n+            List<SnakGroup> specs = statement.getClaim().getQualifiers();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3bd3f0f3a288bc1f00e210d1b8c956f0949d5888"}, "originalPosition": 50}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0d8f42b27fd4a28d6e393866b597b9a58e1399e0", "author": {"user": {"login": "darecoder", "name": "Ekta Mishra"}}, "url": "https://github.com/OpenRefine/OpenRefine/commit/0d8f42b27fd4a28d6e393866b597b9a58e1399e0", "committedDate": "2020-07-14T19:16:50Z", "message": "Add One-of qualifier value property constraint\n\nImplemented one-of qualifier value property constraint as part of #2354"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5a509e2a96c99e804d857e35a02784cfb15432f5", "author": {"user": {"login": "darecoder", "name": "Ekta Mishra"}}, "url": "https://github.com/OpenRefine/OpenRefine/commit/5a509e2a96c99e804d857e35a02784cfb15432f5", "committedDate": "2020-07-14T19:16:52Z", "message": "Test class added"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "92ed6f3f9e8c227914ac5837b67c7f626c610395", "author": {"user": {"login": "darecoder", "name": "Ekta Mishra"}}, "url": "https://github.com/OpenRefine/OpenRefine/commit/92ed6f3f9e8c227914ac5837b67c7f626c610395", "committedDate": "2020-07-14T19:20:02Z", "message": "Test cases updated and working fine"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "28908ca8028d03124ce038176ccd595d7af9d198", "author": {"user": {"login": "darecoder", "name": "Ekta Mishra"}}, "url": "https://github.com/OpenRefine/OpenRefine/commit/28908ca8028d03124ce038176ccd595d7af9d198", "committedDate": "2020-07-15T09:23:32Z", "message": "resolved merge conflicts"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ4ODkyNzY5", "url": "https://github.com/OpenRefine/OpenRefine/pull/2907#pullrequestreview-448892769", "createdAt": "2020-07-15T12:13:42Z", "commit": {"oid": "28908ca8028d03124ce038176ccd595d7af9d198"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3159, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}