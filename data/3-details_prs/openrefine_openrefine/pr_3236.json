{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk1ODA2OTE0", "number": 3236, "title": "Maintain ordering for GREL uniques() function", "bodyText": "Fixes #3235. Also adds tests.\nUnrelated bonus test additions include:\n\nenables an array sort test that wasn't annotated correctly.\nadds tests for reverse and join", "createdAt": "2020-09-30T21:46:14Z", "url": "https://github.com/OpenRefine/OpenRefine/pull/3236", "merged": true, "mergeCommit": {"oid": "82b1cf0bfaf3c8ab57a12e0f2004bdeb71432383"}, "closed": true, "closedAt": "2020-10-02T03:26:20Z", "author": {"login": "tfmorris"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdOD48IgH2gAyNDk1ODA2OTE0OmJiNGZjNTBmMTdjNmRiNmQ1MmVjZDZhMjlmMTZiMTA4YTA0YmVlMjQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdOLLS0AFqTUwMDAzMzQ2Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "bb4fc50f17c6db6d52ecd6a29f16b108a04bee24", "author": {"user": {"login": "tfmorris", "name": "Tom Morris"}}, "url": "https://github.com/OpenRefine/OpenRefine/commit/bb4fc50f17c6db6d52ecd6a29f16b108a04bee24", "committedDate": "2020-09-30T21:44:05Z", "message": "Enable missed test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "959200d141e11020f9980dc8f5c45da026c584fa", "author": {"user": {"login": "tfmorris", "name": "Tom Morris"}}, "url": "https://github.com/OpenRefine/OpenRefine/commit/959200d141e11020f9980dc8f5c45da026c584fa", "committedDate": "2020-09-30T21:45:24Z", "message": "Maintain order for uniques() - fixes #3235\n\nAlso add tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk5ODUzOTgx", "url": "https://github.com/OpenRefine/OpenRefine/pull/3236#pullrequestreview-499853981", "createdAt": "2020-09-30T22:24:11Z", "commit": {"oid": "959200d141e11020f9980dc8f5c45da026c584fa"}, "state": "DISMISSED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQyMjoyNDoxMlrOHaxahw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQyMjoyNDoxMlrOHaxahw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzgzNDYzMQ==", "bodyText": "Just in case, I think having a test5 for only nulls (thinking about that problem Owen had one time when updating the GREL null handling parts?)\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                }\n          \n          \n            \n                    String[] test5 = {\"[null,null,null].uniques().toString()\", \"[null]\"};\n          \n          \n            \n                    parseEval(bindings, test5);\n          \n          \n            \n                }", "url": "https://github.com/OpenRefine/OpenRefine/pull/3236#discussion_r497834631", "createdAt": "2020-09-30T22:24:12Z", "author": {"login": "thadguidry"}, "path": "main/tests/server/src/com/google/refine/expr/functions/arrays/UniquesTests.java", "diffHunk": "@@ -28,13 +28,47 @@\n \n import org.testng.annotations.Test;\n \n+import com.google.refine.RefineTest;\n+import com.google.refine.expr.ParsingException;\n import com.google.refine.util.TestUtils;\n \n-public class UniquesTests {\n+public class UniquesTests extends RefineTest {\n     @Test\n     public void serializeUniques() {\n         String json = \"{\\\"description\\\":\\\"Returns array a with duplicates removed\\\",\\\"params\\\":\\\"array a\\\",\\\"returns\\\":\\\"array\\\"}\";\n         TestUtils.isSerializedTo(new Uniques(), json);\n     }\n+\n+    public void uniquesJsonArray() throws ParsingException {\n+        String[] test = {\"'[2,1,1,3]'.parseJson().uniques().toString()\", \"[2, 1, 3]\"};\n+        parseEval(bindings, test);\n+        String[] test1 = {\"'[2,2,null,null,3,3]'.parseJson().uniques().toString()\", \"[2, null, 3]\"};\n+        parseEval(bindings, test1);\n+    }\n+\n+    @Test\n+    public void uniquesArray() throws ParsingException {\n+        String[] test = {\"[2,1,1,3].uniques().toString()\", \"[2, 1, 3]\"};\n+        parseEval(bindings, test);\n+        String[] test1 = {\"[2,2,null,null,3,3,3].uniques().toString()\", \"[2, null, 3]\"};\n+        parseEval(bindings, test1);\n+\n+        String[] test2 = {\"['z','b','c','c','a'].uniques().toString()\", \"[z, b, c, a]\"};\n+        parseEval(bindings, test2);\n+        String[] test3 = {\"['z','z',null,'c','a'].uniques().toString()\", \"[z, null, c, a]\"};\n+        parseEval(bindings, test3);\n+\n+        String[] test4 = {\"[toDate(2020), '2018-03-02'.toDate(), toDate(2020)].uniques().toString()\", \"[2020-01-01T00:00Z, 2018-03-02T00:00Z]\"};\n+        parseEval(bindings, test4);\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "959200d141e11020f9980dc8f5c45da026c584fa"}, "originalPosition": 37}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d6e42bf5d9eb683b81d76bde908ddd2fe9a956be", "author": {"user": {"login": "tfmorris", "name": "Tom Morris"}}, "url": "https://github.com/OpenRefine/OpenRefine/commit/d6e42bf5d9eb683b81d76bde908ddd2fe9a956be", "committedDate": "2020-10-01T00:00:08Z", "message": "Annotate another missed test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dbb8e530c8bddf573eace7f9b6f071a3206ab1f5", "author": {"user": {"login": "tfmorris", "name": "Tom Morris"}}, "url": "https://github.com/OpenRefine/OpenRefine/commit/dbb8e530c8bddf573eace7f9b6f071a3206ab1f5", "committedDate": "2020-10-01T00:24:05Z", "message": "Add tests for array reverse & join"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "30d16c207787fe37ef7eb5b366cb0a4adea6783e", "author": {"user": {"login": "tfmorris", "name": "Tom Morris"}}, "url": "https://github.com/OpenRefine/OpenRefine/commit/30d16c207787fe37ef7eb5b366cb0a4adea6783e", "committedDate": "2020-10-01T00:57:57Z", "message": "Add Thad/Owen's test"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk5OTU3NjMy", "url": "https://github.com/OpenRefine/OpenRefine/pull/3236#pullrequestreview-499957632", "createdAt": "2020-10-01T01:37:09Z", "commit": {"oid": "30d16c207787fe37ef7eb5b366cb0a4adea6783e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQwMTozNzowOVrOHa2rYg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQwMTozNzowOVrOHa2rYg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzkyMDg2Ng==", "bodyText": "Yes, they should return differently.  I think that was agreed in #820 and it's linked issues/pr's\nWe might even consider a combined test for null/empty?\nString[] test4 = {\"['z', '', null,'c','a'].join('-')\", \"z---c-a\"};", "url": "https://github.com/OpenRefine/OpenRefine/pull/3236#discussion_r497920866", "createdAt": "2020-10-01T01:37:09Z", "author": {"login": "thadguidry"}, "path": "main/tests/server/src/com/google/refine/expr/functions/arrays/JoinTests.java", "diffHunk": "@@ -28,13 +28,35 @@\n \n import org.testng.annotations.Test;\n \n+import com.google.refine.RefineTest;\n+import com.google.refine.expr.ParsingException;\n import com.google.refine.util.TestUtils;\n \n-public class JoinTests {\n+public class JoinTests extends RefineTest {\n     @Test\n     public void serializeJoin() {\n         String json = \"{\\\"description\\\":\\\"Returns the string obtained by joining the array a with the separator sep\\\",\\\"params\\\":\\\"array a, string sep\\\",\\\"returns\\\":\\\"string\\\"}\";\n         TestUtils.isSerializedTo(new Join(), json);\n     }\n+\n+    @Test\n+    public void joinArray() throws ParsingException {\n+        String[] test = {\"[2,1,3].join('|')\", \"2|1|3\"};\n+        parseEval(bindings, test);\n+\n+        // TODO: This is current behavior, but is it what we want?\n+        String[] test1 = {\"[2,null,3].join(', ')\", \"2, 3\"};\n+        parseEval(bindings, test1);\n+\n+        String[] test2 = {\"['z','b','c','a'].join('-')\", \"z-b-c-a\"};\n+        parseEval(bindings, test2);\n+\n+        // TODO: Do we really want the following two tests to return different results?\n+        String[] test3 = {\"['z', null,'c','a'].join('-')\", \"z-c-a\"};\n+        parseEval(bindings, test3);\n+        String[] test4 = {\"['z', '','c','a'].join('-')\", \"z--c-a\"};", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "30d16c207787fe37ef7eb5b366cb0a4adea6783e"}, "originalPosition": 31}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAwMDMzNDYy", "url": "https://github.com/OpenRefine/OpenRefine/pull/3236#pullrequestreview-500033462", "createdAt": "2020-10-01T06:13:28Z", "commit": {"oid": "30d16c207787fe37ef7eb5b366cb0a4adea6783e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3432, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}