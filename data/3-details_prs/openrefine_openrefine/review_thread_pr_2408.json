{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg3OTY1NjIw", "number": 2408, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNFQwOToyOToyM1rODoCsbg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNFQyMDozMzo0NVrODoEx6A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzMzEzNzc0OnYy", "diffSide": "RIGHT", "path": "main/src/com/google/refine/importers/TabularImportingParserBase.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNFQwOToyOToyM1rOF2Yp8A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNFQwOToyOToyM1rOF2Yp8A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjU3MTM3Ng==", "bodyText": "If value is an instance of Cell, then you should not replace it by a String. This will cause runtime type errors.", "url": "https://github.com/OpenRefine/OpenRefine/pull/2408#discussion_r392571376", "createdAt": "2020-03-14T09:29:23Z", "author": {"login": "wetneb"}, "path": "main/src/com/google/refine/importers/TabularImportingParserBase.java", "diffHunk": "@@ -161,6 +163,9 @@ static public void readTable(\n                             \n                             Object value = cells.get(c);\n                             if (value instanceof Cell) {\n+                                if(trimStrings) {\n+                                    value = ((Cell) value).value.toString().trim();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "263431481859a050ecad7d9e8b3d1f73d3652267"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzMzQ3OTQ0OnYy", "diffSide": "RIGHT", "path": "main/src/com/google/refine/importers/SeparatorBasedImporter.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNFQyMDozMzo0NVrOF2bdNA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNFQyMjowMzo0NFrOF2bzJw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjYxNzI2OA==", "bodyText": "We could potentially set this to true instead - this would enable the option by default in the UI. The importer would still behave in the same way if using an importer configuration generated by a previous version, since you use false as default value in getBoolean in readTable.\nI don't have strong feelings about whether this should be enabled by default in the UI. It would perhaps make it more consistent with the other importers which already support trimming strings. And I would expect that workflows where preserving whitespace around strings are quite rare for TSV/CSV. So leaning towards enabling\u2026 @ostephens what do you think?", "url": "https://github.com/OpenRefine/OpenRefine/pull/2408#discussion_r392617268", "createdAt": "2020-03-14T20:33:45Z", "author": {"login": "wetneb"}, "path": "main/src/com/google/refine/importers/SeparatorBasedImporter.java", "diffHunk": "@@ -76,6 +76,7 @@ public ObjectNode createParserUIInitializationData(ImportingJob job,\n         JSONUtilities.safePut(options, \"guessCellValueTypes\", false);\n         JSONUtilities.safePut(options, \"processQuotes\", true);\n         JSONUtilities.safePut(options, \"quoteCharacter\", String.valueOf(CSVParser.DEFAULT_QUOTE_CHARACTER));\n+        JSONUtilities.safePut(options, \"trimStrings\", false);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9eb6f5d1edf8479d34eb39dcd05b4ac9504d2ee0"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjYxNzc4NA==", "bodyText": "Yes, that would be a better option, I think.", "url": "https://github.com/OpenRefine/OpenRefine/pull/2408#discussion_r392617784", "createdAt": "2020-03-14T20:42:35Z", "author": {"login": "lisa761"}, "path": "main/src/com/google/refine/importers/SeparatorBasedImporter.java", "diffHunk": "@@ -76,6 +76,7 @@ public ObjectNode createParserUIInitializationData(ImportingJob job,\n         JSONUtilities.safePut(options, \"guessCellValueTypes\", false);\n         JSONUtilities.safePut(options, \"processQuotes\", true);\n         JSONUtilities.safePut(options, \"quoteCharacter\", String.valueOf(CSVParser.DEFAULT_QUOTE_CHARACTER));\n+        JSONUtilities.safePut(options, \"trimStrings\", false);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjYxNzI2OA=="}, "originalCommit": {"oid": "9eb6f5d1edf8479d34eb39dcd05b4ac9504d2ee0"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjYyMjg4Nw==", "bodyText": "\ud83d\udc4d \"enabled\", it's a smart default.", "url": "https://github.com/OpenRefine/OpenRefine/pull/2408#discussion_r392622887", "createdAt": "2020-03-14T22:03:44Z", "author": {"login": "thadguidry"}, "path": "main/src/com/google/refine/importers/SeparatorBasedImporter.java", "diffHunk": "@@ -76,6 +76,7 @@ public ObjectNode createParserUIInitializationData(ImportingJob job,\n         JSONUtilities.safePut(options, \"guessCellValueTypes\", false);\n         JSONUtilities.safePut(options, \"processQuotes\", true);\n         JSONUtilities.safePut(options, \"quoteCharacter\", String.valueOf(CSVParser.DEFAULT_QUOTE_CHARACTER));\n+        JSONUtilities.safePut(options, \"trimStrings\", false);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjYxNzI2OA=="}, "originalCommit": {"oid": "9eb6f5d1edf8479d34eb39dcd05b4ac9504d2ee0"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2792, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}