{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMxMjI0MzY3", "number": 3380, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xMlQyMDozMzoyNlrOFN3VBg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNVQxNToyMDoyOFrOFPQKKA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzUwMDgyMzEwOnYy", "diffSide": "RIGHT", "path": "docs/docs/manual/exploring.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xMlQyMDozMzoyNlrOIST78w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xMlQyMDozMzoyNlrOIST78w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NjA3MTkyMw==", "bodyText": "The date subsection in the Data Types section is new and needs review.", "url": "https://github.com/OpenRefine/OpenRefine/pull/3380#discussion_r556071923", "createdAt": "2021-01-12T20:33:26Z", "author": {"login": "allanaaa"}, "path": "docs/docs/manual/exploring.md", "diffHunk": "@@ -1,54 +1,92 @@\n----\n+\ufeff---\n id: exploring\n title: Exploring data\n sidebar_label: Overview\n ---\n \n ## Overview\n \n-OpenRefine is a powerful tool for learning about your dataset, even if you don\u2019t change a single character. In this section we cover different ways for sorting through, filtering, and viewing your data. \n+OpenRefine offers lots of features to help you learn about your dataset, even if you don\u2019t change a single character. In this section we cover different ways for sorting through, filtering, and viewing your data. \n \n Unlike spreadsheets, OpenRefine doesn\u2019t store formulas and display the output of those calculations; it only shows the value inside each cell. It doesn\u2019t support cell colors or text formatting. \n \n ## Data types\n \n Each piece of information (each cell) in OpenRefine is assigned a data type. Some file formats, when imported, can set data types that are recognized by OpenRefine. Cells without an associated data type on import will be considered a \u201cstring\u201d at first, but you can have OpenRefine convert cell contents into other data types later. This is set at the cell level, not at the column level. \n \n-You can see data types in action when you preview a new project: check the box that says \u201cAttempt to parse cell text into numbers\u201d and cells will be converted to the \u201cnumber\u201d data type based on their contents. You\u2019ll see numbers change from black text to green if they are recognized.\n+You can see data types in action when you preview a new project: check the box next to <span class=\"fieldLabels\">Attempt to parse cell text into numbers</span>, and cells will be converted to the \u201cnumber\u201d data type based on their contents. You\u2019ll see numbers change from black text to green if they are recognized.\n \n The data type will determine what you can do with the value. For example, if you want to add two values together, they must both be recognized as the number type. \n \n You can check data types at any time by:\n *   clicking \u201cedit\u201d on a single cell (where you can also edit the type)\n-*   creating a Custom Text Facet on a column, and inserting `type(value)` into the \u201cExpression\u201d field. This will generate the data type in the preview, and you can facet by data type if you press \u201cOK.\u201d\n+*   creating a <span class=\"menuItems\">Custom Text Facet</span> on a column, and inserting `type(value)` into the <span class=\"fieldLabels\">Expression</span> field. This will generate the data type in the preview, and you can facet by data type if you press <span class=\"buttonLabels\">OK</span>.\n \n The data types supported are:\n *   string (one or more text characters)\n *   number (one or more characters of numbers only)\n *   boolean (values of \u201ctrue\u201d or \u201cfalse\u201d)\n-*   date (ISO-8601-compliant extended format with time in UTC: YYYY-MM-DDTHH:MM:SSZ)\n-\n-A \u201cdate\u201d type is created when a text column is [transformed into dates](transforming#to-date), or when individual cells are set to have the data type \u201cdate.\u201d \n+*   [date](#dates) (ISO-8601-compliant extended format with time in UTC: YYYY-MM-DDTHH:MM:SSZ)\n \n OpenRefine recognizes two further data types as a result of its own processes:\n *   error\n *   null\n \n An \u201cerror\u201d data type is created when the cell is storing an error generated during a transformation in OpenRefine.\n \n-A \u201cnull\u201d data type is a special value which basically means \u201cthis cell has no value.\u201d It\u2019s used to differentiate between cells that have values such as \u201c0\u201d or \u201cfalse\u201d - or a cell that looks empty but has, for example, spaces in it. When you use `type(value)`, it will show you that the cell\u2019s value is \u201cnull\u201d and its type is \u201cundefined.\u201d You can opt to [show \u201cnull\u201d values](#view) to differentiate them from empty strings, by going to \u201cAll\u201d \u2192 \u201cView\u201d \u2192 \u201cShow/Hide \u2018null\u2019 values in cells.\u201d\n+A \u201cnull\u201d data type is a special type that means \u201cthis cell has no value.\u201d It\u2019s distinct from cells that have values such as \u201c0\u201d or \u201cfalse\u201d, or cells that look empty but have whitespace in them, or cells that contain empty strings. When you use `type(value)`, it will show you that the cell\u2019s value is \u201cnull\u201d and its type is \u201cundefined.\u201d You can opt to [show \u201cnull\u201d values](sortview#showhide-null), by going to <span class=\"menuItems\">All</span> \u2192 <span class=\"menuItems\">View</span> \u2192 <span class=\"menuItems\">Show/Hide \u2018null\u2019 values in cells</span>.\n+\n+Changing a cell's data type is not the same operation as transforming its contents. For example, using a column-wide transform such as <span class=\"menuItems\">Transform</span> \u2192 <span class=\"menuItems\">Common transforms</span> \u2192 <span class=\"menuItems\">To date</span> may not convert all values successfully, but going to an individual cell, clicking \u201cedit\u201d, and changing the data type can successfully convert text to a date. These operations use different underlying code. Learn more about date formatting and transformations in the next section. \n+\n+To transform data from one type to another, see [Transforming data](cellediting#data-type-transforms) for information on using common tranforms, and see [Expressions](expressions) for information on using [toString()](grelfunctions#tostringo-string-format-optional), [toDate()](grelfunctions#todateo-b-monthfirst-s-format1-s-format2-), and other functions. \n+\n \n-Converting a cell's data type is not the same operation as transforming its contents. For example, using a column-wide transform such as \u201cTransform\u201d \u2192 \u201cCommon transforms \u2026\u201d \u2192 \u201cto date\u201d may not convert all values successfully, but going to an individual cell, clicking \u201cedit\u201d and changing the data type can successfully convert text to a date. These operations use different underlying code. \n+### Dates", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "07d3153839a09d9871810c030a58dc6b199ba2b6"}, "originalPosition": 53}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzUwMDg0NzUxOnYy", "diffSide": "RIGHT", "path": "docs/docs/manual/running.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xMlQyMDo0MDoxMFrOISUKUQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xMlQyMDo0MDoxMFrOISUKUQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NjA3NTYwMQ==", "bodyText": "Everything from here to the end of the page is new and requires review.", "url": "https://github.com/OpenRefine/OpenRefine/pull/3380#discussion_r556075601", "createdAt": "2021-01-12T20:40:10Z", "author": {"login": "allanaaa"}, "path": "docs/docs/manual/running.md", "diffHunk": "@@ -387,22 +433,74 @@ When you click on <span class=\"menuItems\">Undo / Redo</span> in the sidebar of a\n \n The current state of the project is highlighted with a dark blue background. If you move back and forth on the timeline you will see the current state become highlighted, while the actions that came after that state will be grayed out. \n \n-To revert your data back to an earlier state, simply click on the last action in the timeline you want to keep. In the example above, if we keep the removal of 7 rows but revert everything we did after that, then click on <span class=\"menuItems\">Remove 7 rows</span>. The last 2 changes will be undone, in order to bring the project back to state #1.\n+To revert your data back to an earlier state, simply click on the last action in the timeline you want to keep. In the example above, if we keep the removal of 7 rows but revert everything we did after that, then click on \u201cRemove 7 rows.\u201d The last 2 changes will be undone, in order to bring the project back to state #1.\n \n In this example, changes #2 and #3 will now be grayed out. You can redo a change by clicking on it in the history - everything up to and including it will be redone. \n \n If you have moved back one or more states, and then you perform a new operation on your data, the later actions (everything that\u2019s greyed out) will be erased and cannot be re-applied. \n \n-The <span class=\"menuItems\">Undo/Redo</span> tab will show you which step you\u2019re on, and if you\u2019re about to risk erasing work - by saying something like \"4/5\" or \"1/7\" at the end.\n+The Undo/Redo tab will indicate which step you\u2019re on, and if you\u2019re about to risk erasing work - by saying something like \u201c4/5\" or \u201c1/7\u201d at the end.\n \n-##### Reusing operations\n+#### Reusing operations\n \n Operations that you perform in OpenRefine can be reused. For example, a formula you wrote inside one project can be copied and applied to another project later. \n \n-To reuse one or more operations, you first extract it from the project where it was first applied. Click to the <span class=\"menuItems\">Undo/Redo</span> tab and click <span class=\"menuItems\">Extract\u2026</span>. This brings up a box that lists all operations up to the current state (it does not show undone operations). Select the operation or operations you want to extract using the checkboxes on the left, and they will be encoded as JSON on the right. Copy that JSON off to the clipboard. \n+To reuse one or more operations, first extract it from the project where it was first applied. Click to the <span class=\"tabLabels\">Undo/Redo</span> tab and click <span class=\"menuItems\">Extract\u2026</span>. This brings up a box that lists all operations up to the current state (it does not show undone operations). Select the operation or operations you want to extract using the checkboxes on the left, and they will be encoded as JSON on the right. Copy that JSON to the clipboard. \n \n-Move to the second project, go to the <span class=\"menuItems\">Undo/Redo</span> tab, click <span class=\"menuItems\">Apply\u2026</span> and paste in that JSON.\n+Move to the second project, go to the <span class=\"tabLabels\">Undo/Redo</span> tab, click <span class=\"menuItems\">Apply\u2026</span> and paste in that JSON.\n \n Not all operations can be extracted. Edits to a single cell, for example, can\u2019t be replicated.\n \n-### Common extension buttons\n+## Advanced OpenRefine uses", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "07d3153839a09d9871810c030a58dc6b199ba2b6"}, "originalPosition": 390}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzUxMDI3Mjk4OnYy", "diffSide": "RIGHT", "path": "docs/docs/manual/running.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNFQxNzowNToyMVrOITuRvA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNFQxNzowNToyMVrOITuRvA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NzU1MjA2MA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Please note that if your machine has an external IP (is exposed to the Internet), you should not do this, or should protect it behind a proxy or firewall, such as nginx. Proceed at your own risk.\n          \n          \n            \n            Please note that exposing an OpenRefine instance to the Internet is dangerous, as it gives anyone the ability to read and modify your projects and run arbitrary code on your computer. OpenRefine should at least be protected by an authenticating proxy.", "url": "https://github.com/OpenRefine/OpenRefine/pull/3380#discussion_r557552060", "createdAt": "2021-01-14T17:05:21Z", "author": {"login": "wetneb"}, "path": "docs/docs/manual/running.md", "diffHunk": "@@ -387,22 +433,74 @@ When you click on <span class=\"menuItems\">Undo / Redo</span> in the sidebar of a\n \n The current state of the project is highlighted with a dark blue background. If you move back and forth on the timeline you will see the current state become highlighted, while the actions that came after that state will be grayed out. \n \n-To revert your data back to an earlier state, simply click on the last action in the timeline you want to keep. In the example above, if we keep the removal of 7 rows but revert everything we did after that, then click on <span class=\"menuItems\">Remove 7 rows</span>. The last 2 changes will be undone, in order to bring the project back to state #1.\n+To revert your data back to an earlier state, simply click on the last action in the timeline you want to keep. In the example above, if we keep the removal of 7 rows but revert everything we did after that, then click on \u201cRemove 7 rows.\u201d The last 2 changes will be undone, in order to bring the project back to state #1.\n \n In this example, changes #2 and #3 will now be grayed out. You can redo a change by clicking on it in the history - everything up to and including it will be redone. \n \n If you have moved back one or more states, and then you perform a new operation on your data, the later actions (everything that\u2019s greyed out) will be erased and cannot be re-applied. \n \n-The <span class=\"menuItems\">Undo/Redo</span> tab will show you which step you\u2019re on, and if you\u2019re about to risk erasing work - by saying something like \"4/5\" or \"1/7\" at the end.\n+The Undo/Redo tab will indicate which step you\u2019re on, and if you\u2019re about to risk erasing work - by saying something like \u201c4/5\" or \u201c1/7\u201d at the end.\n \n-##### Reusing operations\n+#### Reusing operations\n \n Operations that you perform in OpenRefine can be reused. For example, a formula you wrote inside one project can be copied and applied to another project later. \n \n-To reuse one or more operations, you first extract it from the project where it was first applied. Click to the <span class=\"menuItems\">Undo/Redo</span> tab and click <span class=\"menuItems\">Extract\u2026</span>. This brings up a box that lists all operations up to the current state (it does not show undone operations). Select the operation or operations you want to extract using the checkboxes on the left, and they will be encoded as JSON on the right. Copy that JSON off to the clipboard. \n+To reuse one or more operations, first extract it from the project where it was first applied. Click to the <span class=\"tabLabels\">Undo/Redo</span> tab and click <span class=\"menuItems\">Extract\u2026</span>. This brings up a box that lists all operations up to the current state (it does not show undone operations). Select the operation or operations you want to extract using the checkboxes on the left, and they will be encoded as JSON on the right. Copy that JSON to the clipboard. \n \n-Move to the second project, go to the <span class=\"menuItems\">Undo/Redo</span> tab, click <span class=\"menuItems\">Apply\u2026</span> and paste in that JSON.\n+Move to the second project, go to the <span class=\"tabLabels\">Undo/Redo</span> tab, click <span class=\"menuItems\">Apply\u2026</span> and paste in that JSON.\n \n Not all operations can be extracted. Edits to a single cell, for example, can\u2019t be replicated.\n \n-### Common extension buttons\n+## Advanced OpenRefine uses\n+\n+### Running as a server\n+\n+:::caution\n+Please note that if your machine has an external IP (is exposed to the Internet), you should not do this, or should protect it behind a proxy or firewall, such as nginx. Proceed at your own risk.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "07d3153839a09d9871810c030a58dc6b199ba2b6"}, "originalPosition": 395}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzUxMDI5MDYwOnYy", "diffSide": "RIGHT", "path": "docs/docs/manual/exploring.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNFQxNzowOToyNVrOITuc0Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNFQxNzowOToyNVrOITuc0Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NzU1NDg5Nw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            A \u201cdate\u201d type is created when a column is [transformed into dates](transforming#to-date), when an expression is used to [convert cells to dates](grelfunctions#todateo-b-monthfirst-s-format1-s-format2-) or when individual cells are set to have the data type \u201cdate.\u201d \n          \n          \n            \n            A \u201cdate\u201d type is created when a column is [transformed into dates](transforming#to-date), when an expression is used to [convert cells to dates](grelfunctions#todateo-b-monthfirst-s-format1-s-format2-) or when individual cells are set to have the data type \u201cdate\u201d.", "url": "https://github.com/OpenRefine/OpenRefine/pull/3380#discussion_r557554897", "createdAt": "2021-01-14T17:09:25Z", "author": {"login": "wetneb"}, "path": "docs/docs/manual/exploring.md", "diffHunk": "@@ -1,54 +1,92 @@\n----\n+\ufeff---\n id: exploring\n title: Exploring data\n sidebar_label: Overview\n ---\n \n ## Overview\n \n-OpenRefine is a powerful tool for learning about your dataset, even if you don\u2019t change a single character. In this section we cover different ways for sorting through, filtering, and viewing your data. \n+OpenRefine offers lots of features to help you learn about your dataset, even if you don\u2019t change a single character. In this section we cover different ways for sorting through, filtering, and viewing your data. \n \n Unlike spreadsheets, OpenRefine doesn\u2019t store formulas and display the output of those calculations; it only shows the value inside each cell. It doesn\u2019t support cell colors or text formatting. \n \n ## Data types\n \n Each piece of information (each cell) in OpenRefine is assigned a data type. Some file formats, when imported, can set data types that are recognized by OpenRefine. Cells without an associated data type on import will be considered a \u201cstring\u201d at first, but you can have OpenRefine convert cell contents into other data types later. This is set at the cell level, not at the column level. \n \n-You can see data types in action when you preview a new project: check the box that says \u201cAttempt to parse cell text into numbers\u201d and cells will be converted to the \u201cnumber\u201d data type based on their contents. You\u2019ll see numbers change from black text to green if they are recognized.\n+You can see data types in action when you preview a new project: check the box next to <span class=\"fieldLabels\">Attempt to parse cell text into numbers</span>, and cells will be converted to the \u201cnumber\u201d data type based on their contents. You\u2019ll see numbers change from black text to green if they are recognized.\n \n The data type will determine what you can do with the value. For example, if you want to add two values together, they must both be recognized as the number type. \n \n You can check data types at any time by:\n *   clicking \u201cedit\u201d on a single cell (where you can also edit the type)\n-*   creating a Custom Text Facet on a column, and inserting `type(value)` into the \u201cExpression\u201d field. This will generate the data type in the preview, and you can facet by data type if you press \u201cOK.\u201d\n+*   creating a <span class=\"menuItems\">Custom Text Facet</span> on a column, and inserting `type(value)` into the <span class=\"fieldLabels\">Expression</span> field. This will generate the data type in the preview, and you can facet by data type if you press <span class=\"buttonLabels\">OK</span>.\n \n The data types supported are:\n *   string (one or more text characters)\n *   number (one or more characters of numbers only)\n *   boolean (values of \u201ctrue\u201d or \u201cfalse\u201d)\n-*   date (ISO-8601-compliant extended format with time in UTC: YYYY-MM-DDTHH:MM:SSZ)\n-\n-A \u201cdate\u201d type is created when a text column is [transformed into dates](transforming#to-date), or when individual cells are set to have the data type \u201cdate.\u201d \n+*   [date](#dates) (ISO-8601-compliant extended format with time in UTC: YYYY-MM-DDTHH:MM:SSZ)\n \n OpenRefine recognizes two further data types as a result of its own processes:\n *   error\n *   null\n \n An \u201cerror\u201d data type is created when the cell is storing an error generated during a transformation in OpenRefine.\n \n-A \u201cnull\u201d data type is a special value which basically means \u201cthis cell has no value.\u201d It\u2019s used to differentiate between cells that have values such as \u201c0\u201d or \u201cfalse\u201d - or a cell that looks empty but has, for example, spaces in it. When you use `type(value)`, it will show you that the cell\u2019s value is \u201cnull\u201d and its type is \u201cundefined.\u201d You can opt to [show \u201cnull\u201d values](#view) to differentiate them from empty strings, by going to \u201cAll\u201d \u2192 \u201cView\u201d \u2192 \u201cShow/Hide \u2018null\u2019 values in cells.\u201d\n+A \u201cnull\u201d data type is a special type that means \u201cthis cell has no value.\u201d It\u2019s distinct from cells that have values such as \u201c0\u201d or \u201cfalse\u201d, or cells that look empty but have whitespace in them, or cells that contain empty strings. When you use `type(value)`, it will show you that the cell\u2019s value is \u201cnull\u201d and its type is \u201cundefined.\u201d You can opt to [show \u201cnull\u201d values](sortview#showhide-null), by going to <span class=\"menuItems\">All</span> \u2192 <span class=\"menuItems\">View</span> \u2192 <span class=\"menuItems\">Show/Hide \u2018null\u2019 values in cells</span>.\n+\n+Changing a cell's data type is not the same operation as transforming its contents. For example, using a column-wide transform such as <span class=\"menuItems\">Transform</span> \u2192 <span class=\"menuItems\">Common transforms</span> \u2192 <span class=\"menuItems\">To date</span> may not convert all values successfully, but going to an individual cell, clicking \u201cedit\u201d, and changing the data type can successfully convert text to a date. These operations use different underlying code. Learn more about date formatting and transformations in the next section. \n+\n+To transform data from one type to another, see [Transforming data](cellediting#data-type-transforms) for information on using common tranforms, and see [Expressions](expressions) for information on using [toString()](grelfunctions#tostringo-string-format-optional), [toDate()](grelfunctions#todateo-b-monthfirst-s-format1-s-format2-), and other functions. \n+\n \n-Converting a cell's data type is not the same operation as transforming its contents. For example, using a column-wide transform such as \u201cTransform\u201d \u2192 \u201cCommon transforms \u2026\u201d \u2192 \u201cto date\u201d may not convert all values successfully, but going to an individual cell, clicking \u201cedit\u201d and changing the data type can successfully convert text to a date. These operations use different underlying code. \n+### Dates\n \n-To transform data from one type to another, see [Transforming data](transforming#transform) for information on using common tranforms, and see [Expressions](expressions) for information on using `toString()`, `toDate()`, and other functions. \n+A \u201cdate\u201d type is created when a column is [transformed into dates](transforming#to-date), when an expression is used to [convert cells to dates](grelfunctions#todateo-b-monthfirst-s-format1-s-format2-) or when individual cells are set to have the data type \u201cdate.\u201d ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "690ae799b0e8f833d16abbcef554127298df45a4"}, "originalPosition": 56}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzUxNTM3NzA0OnYy", "diffSide": "RIGHT", "path": "docs/docs/manual/running.md", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNVQxNToyMDoyOFrOIUglog==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNVQxNTozNToyMVrOIUhL5A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1ODM3NjM1NA==", "bodyText": "Really sorry - I think we need to re-instate the Mac section here - otherwise when the user is switching to the \"Mac\" tab, this can display instructions from Windows/Linux instead - leading to a mix of operating specific instructions on a single screen", "url": "https://github.com/OpenRefine/OpenRefine/pull/3380#discussion_r558376354", "createdAt": "2021-01-15T15:20:28Z", "author": {"login": "ostephens"}, "path": "docs/docs/manual/running.md", "diffHunk": "@@ -92,12 +106,13 @@ If you are having problems connecting to OpenRefine with your browser, [check ou\n \n When you run OpenRefine from a command line, you can change a number of default settings. \n \n+You cannot start the Mac version with modifications using Terminal, but you can modify the way the application starts with [settings within files](#modifications-set-within-files).\n+\n <Tabs\n   groupId=\"operating-systems\"\n   defaultValue=\"win\"\n   values={[\n     {label: 'Windows', value: 'win'},\n-    {label: 'Mac', value: 'mac'},\n     {label: 'Linux', value: 'linux'}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c300239b7a28ac025f2413516e9a7e489a075b5c"}, "originalPosition": 89}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1ODM3NjY3MQ==", "bodyText": "Oh that's a fair point. I guess it doesn't just leave a blank.", "url": "https://github.com/OpenRefine/OpenRefine/pull/3380#discussion_r558376671", "createdAt": "2021-01-15T15:20:59Z", "author": {"login": "allanaaa"}, "path": "docs/docs/manual/running.md", "diffHunk": "@@ -92,12 +106,13 @@ If you are having problems connecting to OpenRefine with your browser, [check ou\n \n When you run OpenRefine from a command line, you can change a number of default settings. \n \n+You cannot start the Mac version with modifications using Terminal, but you can modify the way the application starts with [settings within files](#modifications-set-within-files).\n+\n <Tabs\n   groupId=\"operating-systems\"\n   defaultValue=\"win\"\n   values={[\n     {label: 'Windows', value: 'win'},\n-    {label: 'Mac', value: 'mac'},\n     {label: 'Linux', value: 'linux'}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1ODM3NjM1NA=="}, "originalCommit": {"oid": "c300239b7a28ac025f2413516e9a7e489a075b5c"}, "originalPosition": 89}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1ODM3NzAwNA==", "bodyText": "So - that is to say I don't agree removing the tab is the best idea because Docusaurus tab switching can get mucked up :(", "url": "https://github.com/OpenRefine/OpenRefine/pull/3380#discussion_r558377004", "createdAt": "2021-01-15T15:21:34Z", "author": {"login": "ostephens"}, "path": "docs/docs/manual/running.md", "diffHunk": "@@ -92,12 +106,13 @@ If you are having problems connecting to OpenRefine with your browser, [check ou\n \n When you run OpenRefine from a command line, you can change a number of default settings. \n \n+You cannot start the Mac version with modifications using Terminal, but you can modify the way the application starts with [settings within files](#modifications-set-within-files).\n+\n <Tabs\n   groupId=\"operating-systems\"\n   defaultValue=\"win\"\n   values={[\n     {label: 'Windows', value: 'win'},\n-    {label: 'Mac', value: 'mac'},\n     {label: 'Linux', value: 'linux'}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1ODM3NjM1NA=="}, "originalCommit": {"oid": "c300239b7a28ac025f2413516e9a7e489a075b5c"}, "originalPosition": 89}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1ODM4NjE0OA==", "bodyText": "Yep, it's restored now - take a look and let me know if it looks good to you?", "url": "https://github.com/OpenRefine/OpenRefine/pull/3380#discussion_r558386148", "createdAt": "2021-01-15T15:35:21Z", "author": {"login": "allanaaa"}, "path": "docs/docs/manual/running.md", "diffHunk": "@@ -92,12 +106,13 @@ If you are having problems connecting to OpenRefine with your browser, [check ou\n \n When you run OpenRefine from a command line, you can change a number of default settings. \n \n+You cannot start the Mac version with modifications using Terminal, but you can modify the way the application starts with [settings within files](#modifications-set-within-files).\n+\n <Tabs\n   groupId=\"operating-systems\"\n   defaultValue=\"win\"\n   values={[\n     {label: 'Windows', value: 'win'},\n-    {label: 'Mac', value: 'mac'},\n     {label: 'Linux', value: 'linux'}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1ODM3NjM1NA=="}, "originalCommit": {"oid": "c300239b7a28ac025f2413516e9a7e489a075b5c"}, "originalPosition": 89}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2841, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}