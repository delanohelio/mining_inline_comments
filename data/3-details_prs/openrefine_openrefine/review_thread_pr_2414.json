{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg4NDY3MTIy", "number": 2414, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNFQyMzo0NToyMlrODoFSyQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQwNzoyNzozMFrODqq2rA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzMzU2MzYxOnYy", "diffSide": "RIGHT", "path": "main/src/com/google/refine/importing/DefaultImportingController.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNFQyMzo0NToyMlrOF2cIgQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNVQwNTowOToxM1rOF2c-fA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjYyODM1Mw==", "bodyText": "We should probably add 1 more new line to separate from the error itself more in the dialog and make it stand out.\nAlso, will this get localized properly for our translations support?", "url": "https://github.com/OpenRefine/OpenRefine/pull/2414#discussion_r392628353", "createdAt": "2020-03-14T23:45:22Z", "author": {"login": "thadguidry"}, "path": "main/src/com/google/refine/importing/DefaultImportingController.java", "diffHunk": "@@ -290,7 +292,12 @@ static public void writeErrors(JsonGenerator writer, List<Exception> exceptions)\n             e.printStackTrace(new PrintWriter(sw));\n             \n             writer.writeStartObject();\n-            writer.writeStringField(\"message\", e.getLocalizedMessage());\n+            String errorMessage = e.getLocalizedMessage();\n+            if(e instanceof TreeReaderException) {\n+                errorMessage += \"\\nPlease correct the format of your input file, or choose another\" +", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1728b4761508b57945bcd031999919445e9da018"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjYzMTc3Nw==", "bodyText": "Sadly the whole error message is shown only in English under other languages.\nShould we only localized the latter part (\"Please correct your format ... \") and keep the error message unchanged ?", "url": "https://github.com/OpenRefine/OpenRefine/pull/2414#discussion_r392631777", "createdAt": "2020-03-15T00:59:47Z", "author": {"login": "zengchu2"}, "path": "main/src/com/google/refine/importing/DefaultImportingController.java", "diffHunk": "@@ -290,7 +292,12 @@ static public void writeErrors(JsonGenerator writer, List<Exception> exceptions)\n             e.printStackTrace(new PrintWriter(sw));\n             \n             writer.writeStartObject();\n-            writer.writeStringField(\"message\", e.getLocalizedMessage());\n+            String errorMessage = e.getLocalizedMessage();\n+            if(e instanceof TreeReaderException) {\n+                errorMessage += \"\\nPlease correct the format of your input file, or choose another\" +", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjYyODM1Mw=="}, "originalCommit": {"oid": "1728b4761508b57945bcd031999919445e9da018"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjYzMzk2OQ==", "bodyText": "Yes, please, if it's not too much trouble.", "url": "https://github.com/OpenRefine/OpenRefine/pull/2414#discussion_r392633969", "createdAt": "2020-03-15T01:51:03Z", "author": {"login": "thadguidry"}, "path": "main/src/com/google/refine/importing/DefaultImportingController.java", "diffHunk": "@@ -290,7 +292,12 @@ static public void writeErrors(JsonGenerator writer, List<Exception> exceptions)\n             e.printStackTrace(new PrintWriter(sw));\n             \n             writer.writeStartObject();\n-            writer.writeStringField(\"message\", e.getLocalizedMessage());\n+            String errorMessage = e.getLocalizedMessage();\n+            if(e instanceof TreeReaderException) {\n+                errorMessage += \"\\nPlease correct the format of your input file, or choose another\" +", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjYyODM1Mw=="}, "originalCommit": {"oid": "1728b4761508b57945bcd031999919445e9da018"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjY0MjE3Mg==", "bodyText": "Hi, I manged to fix this problem in front end .\nHere is my test result with incorrect json format input string:", "url": "https://github.com/OpenRefine/OpenRefine/pull/2414#discussion_r392642172", "createdAt": "2020-03-15T05:09:13Z", "author": {"login": "zengchu2"}, "path": "main/src/com/google/refine/importing/DefaultImportingController.java", "diffHunk": "@@ -290,7 +292,12 @@ static public void writeErrors(JsonGenerator writer, List<Exception> exceptions)\n             e.printStackTrace(new PrintWriter(sw));\n             \n             writer.writeStartObject();\n-            writer.writeStringField(\"message\", e.getLocalizedMessage());\n+            String errorMessage = e.getLocalizedMessage();\n+            if(e instanceof TreeReaderException) {\n+                errorMessage += \"\\nPlease correct the format of your input file, or choose another\" +", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjYyODM1Mw=="}, "originalCommit": {"oid": "1728b4761508b57945bcd031999919445e9da018"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzNDI0NjI2OnYy", "diffSide": "RIGHT", "path": "main/webapp/modules/core/scripts/index/default-importing-controller/controller.js", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNVQyMjozMzoyNVrOF2huiw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNVQyMjozMzoyNVrOF2huiw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjcyMDAxMQ==", "bodyText": "console.log should be removed.", "url": "https://github.com/OpenRefine/OpenRefine/pull/2414#discussion_r392720011", "createdAt": "2020-03-15T22:33:25Z", "author": {"login": "wetneb"}, "path": "main/webapp/modules/core/scripts/index/default-importing-controller/controller.js", "diffHunk": "@@ -375,7 +375,8 @@ Refine.TagsManager._getAllProjectTags = function() {\n \n // Helper function to provide more localized message from plain Java Exception message.\n function getLocalizedErrorMessage(message) {\n-    if(message.contains(\"JsonParseException\")){\n+    console.log(message);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "124874f5ae36b8983a0b748f9cfb0760452c1faa"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1MTQ2Nzg2OnYy", "diffSide": "RIGHT", "path": "main/src/com/google/refine/importing/DefaultImportingController.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQwODo1MjoxNFrOF5LkMw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQwODo1MjoxNFrOF5LkMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTUwMjY0Mw==", "bodyText": "This code is specific to the JSON\u00a0importer, but it was added to a general purpose importing class. This is a problem: writing importers should not require making changes to generic classes like this.\nInstead, we should have a generic way to report parsing exceptions to the user. So I propose we do this:\n\nCatch the JsonParseException in the JSON importer;\nExtract the message as you are doing here;\nStore this message in a new exception, that we could introduce in this PR but could then be reused by other importers (we could call it ImportingParserException);\nThen we can still have your isImportingParserException logic with \"core-views/check-format\" as message that we concatenate.", "url": "https://github.com/OpenRefine/OpenRefine/pull/2414#discussion_r395502643", "createdAt": "2020-03-20T08:52:14Z", "author": {"login": "wetneb"}, "path": "main/src/com/google/refine/importing/DefaultImportingController.java", "diffHunk": "@@ -290,7 +293,15 @@ static public void writeErrors(JsonGenerator writer, List<Exception> exceptions)\n             e.printStackTrace(new PrintWriter(sw));\n             \n             writer.writeStartObject();\n-            writer.writeStringField(\"message\", e.getLocalizedMessage());\n+            String message = e.getLocalizedMessage();\n+            \n+            if(e.getCause() instanceof JsonParseException) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f1aa73a440889e48f6e85be2f29687c65559436a"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2MDY4MTY2OnYy", "diffSide": "RIGHT", "path": "main/src/com/google/refine/importers/tree/XmlImportUtilities.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQwNzoyNDozNFrOF6jlgw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQwNzoyNDozNFrOF6jlgw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njk0NDc3MQ==", "bodyText": "I don't think we can assume that all TreeReaderException instances are JsonParseException\u2026 Especially since JsonParseException is not a subclass of TreeReaderException! It would be good to have a unit test to show how this works. (This sort of mistake should be caught by any unit test covering these lines)", "url": "https://github.com/OpenRefine/OpenRefine/pull/2414#discussion_r396944771", "createdAt": "2020-03-24T07:24:34Z", "author": {"login": "wetneb"}, "path": "main/src/com/google/refine/importers/tree/XmlImportUtilities.java", "diffHunk": "@@ -265,13 +268,13 @@ static public void importTreeData(\n             }\n         } catch (TreeReaderException e) {\n             logger.error(\"Exception from XML parse\",e);\n-            throw e;\n+            throw new ImportingParserException(((JsonParseException)e.getCause()).getOriginalMessage());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8e25752fe40909e662126b7b19c53e1e466a4a89"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2MDY4MjQ3OnYy", "diffSide": "RIGHT", "path": "main/src/com/google/refine/importers/tree/XmlImportUtilities.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQwNzoyNDo1N1rOF6jmBA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQwNzoyNDo1N1rOF6jmBA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njk0NDkwMA==", "bodyText": "Why?", "url": "https://github.com/OpenRefine/OpenRefine/pull/2414#discussion_r396944900", "createdAt": "2020-03-24T07:24:57Z", "author": {"login": "wetneb"}, "path": "main/src/com/google/refine/importers/tree/XmlImportUtilities.java", "diffHunk": "@@ -265,13 +268,13 @@ static public void importTreeData(\n             }\n         } catch (TreeReaderException e) {\n             logger.error(\"Exception from XML parse\",e);\n-            throw e;\n+            throw new ImportingParserException(((JsonParseException)e.getCause()).getOriginalMessage());\n         }\n     }\n \n     /**\n      *\n-     * @param project\n+     * @param pro", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8e25752fe40909e662126b7b19c53e1e466a4a89"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2MDY4OTA4OnYy", "diffSide": "RIGHT", "path": "main/src/com/google/refine/importers/ImportingParserException.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQwNzoyNzozMFrOF6jqEw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQwNzoyNzozMFrOF6jqEw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njk0NTkzOQ==", "bodyText": "\"This exception should contain\"\u2026 what?", "url": "https://github.com/OpenRefine/OpenRefine/pull/2414#discussion_r396945939", "createdAt": "2020-03-24T07:27:30Z", "author": {"login": "wetneb"}, "path": "main/src/com/google/refine/importers/ImportingParserException.java", "diffHunk": "@@ -0,0 +1,13 @@\n+package com.google.refine.importers;\n+\n+/**\n+ * Exception thrown by importers.  \n+ * This exception should contain ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04d85e962069ae3ccd39663f9a764d974f79fb32"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2798, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}