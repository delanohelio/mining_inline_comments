{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY5NTc5NDI3", "number": 3097, "title": "Restructured the Facets", "bodyText": "Restructured the facets from prototype to class based structure as discussed in this thread.\nAdded Facet.js to store the base class. It contains these two functions:\n\nminimze\nremove", "createdAt": "2020-08-18T15:38:08Z", "url": "https://github.com/OpenRefine/OpenRefine/pull/3097", "merged": true, "mergeCommit": {"oid": "5ca5f3cb7b6cc1be1813e9e196a3c0f669298a4c"}, "closed": true, "closedAt": "2020-08-25T16:29:28Z", "author": {"login": "lisa761"}, "timelineItems": {"totalCount": 15, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdAHvWCgH2gAyNDY5NTc5NDI3OmExNDJhMzhhYWMzMGE0NDE5MjM4ZmFhY2FkNDJjMDcxY2M1ZDBhMTg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdCZzLwgFqTQ3NDY1MTk0Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "a142a38aac30a4419238faacad42c071cc5d0a18", "author": {"user": {"login": "lisa761", "name": "Lisa Chandra"}}, "url": "https://github.com/OpenRefine/OpenRefine/commit/a142a38aac30a4419238faacad42c071cc5d0a18", "committedDate": "2020-08-18T14:18:17Z", "message": "added class to List Facet"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9a997ec87d09ed06647386961bdb9ee0228afac1", "author": {"user": {"login": "lisa761", "name": "Lisa Chandra"}}, "url": "https://github.com/OpenRefine/OpenRefine/commit/9a997ec87d09ed06647386961bdb9ee0228afac1", "committedDate": "2020-08-18T14:28:37Z", "message": "added class to Timerange Facet"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fe6669f886de0cae5b7b3a42e16a502c48038e92", "author": {"user": {"login": "lisa761", "name": "Lisa Chandra"}}, "url": "https://github.com/OpenRefine/OpenRefine/commit/fe6669f886de0cae5b7b3a42e16a502c48038e92", "committedDate": "2020-08-18T14:42:37Z", "message": "added class to Range Facet"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3b7fa2ee2b91bb8f7bf03a8d24a1a42c8841dd8c", "author": {"user": {"login": "lisa761", "name": "Lisa Chandra"}}, "url": "https://github.com/OpenRefine/OpenRefine/commit/3b7fa2ee2b91bb8f7bf03a8d24a1a42c8841dd8c", "committedDate": "2020-08-18T14:43:57Z", "message": "added class to Text Filter Facet"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a2ccd0961228efb44815399addc0422d8c9e6de6", "author": {"user": {"login": "lisa761", "name": "Lisa Chandra"}}, "url": "https://github.com/OpenRefine/OpenRefine/commit/a2ccd0961228efb44815399addc0422d8c9e6de6", "committedDate": "2020-08-18T14:44:48Z", "message": "added class to Scatterplot Facet"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "af903eeb41c91ad5e79fdf2cc12e1d923ba0faf1", "author": {"user": {"login": "lisa761", "name": "Lisa Chandra"}}, "url": "https://github.com/OpenRefine/OpenRefine/commit/af903eeb41c91ad5e79fdf2cc12e1d923ba0faf1", "committedDate": "2020-08-18T14:44:48Z", "message": "added base class"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a141eead0ee0b7bba3df84e4d386f28d5219e205", "author": {"user": {"login": "lisa761", "name": "Lisa Chandra"}}, "url": "https://github.com/OpenRefine/OpenRefine/commit/a141eead0ee0b7bba3df84e4d386f28d5219e205", "committedDate": "2020-08-18T14:44:48Z", "message": "added end line in facet.js"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "63285475c1bee868b5cb63f1e53c475df129a15a", "author": {"user": {"login": "lisa761", "name": "Lisa Chandra"}}, "url": "https://github.com/OpenRefine/OpenRefine/commit/63285475c1bee868b5cb63f1e53c475df129a15a", "committedDate": "2020-08-18T15:08:49Z", "message": "fixed indentations facet.js"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6f17148f1b35fdb8c6a33396a9d64e27290ed0e3", "author": {"user": {"login": "lisa761", "name": "Lisa Chandra"}}, "url": "https://github.com/OpenRefine/OpenRefine/commit/6f17148f1b35fdb8c6a33396a9d64e27290ed0e3", "committedDate": "2020-08-18T15:17:08Z", "message": "fixed indentation again"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcxMzA2MDI4", "url": "https://github.com/OpenRefine/OpenRefine/pull/3097#pullrequestreview-471306028", "createdAt": "2020-08-20T07:16:02Z", "commit": {"oid": "6f17148f1b35fdb8c6a33396a9d64e27290ed0e3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQwNzoxNjowMlrOHDvSmg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQwNzoxNjowMlrOHDvSmg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzY4MjU4Ng==", "bodyText": "With Firefox 68 I get an error at this line: SyntaxError: fields are not currently supported.", "url": "https://github.com/OpenRefine/OpenRefine/pull/3097#discussion_r473682586", "createdAt": "2020-08-20T07:16:02Z", "author": {"login": "wetneb"}, "path": "main/webapp/modules/core/scripts/facets/facet.js", "diffHunk": "@@ -0,0 +1,67 @@\n+/*\r\n+\r\n+Copyright 2010, Google Inc.\r\n+All rights reserved.\r\n+\r\n+Redistribution and use in source and binary forms, with or without\r\n+modification, are permitted provided that the following conditions are\r\n+met:\r\n+\r\n+ * Redistributions of source code must retain the above copyright\r\n+notice, this list of conditions and the following disclaimer.\r\n+ * Redistributions in binary form must reproduce the above\r\n+copyright notice, this list of conditions and the following disclaimer\r\n+in the documentation and/or other materials provided with the\r\n+distribution.\r\n+ * Neither the name of Google Inc. nor the names of its\r\n+contributors may be used to endorse or promote products derived from\r\n+this software without specific prior written permission.\r\n+\r\n+THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\r\n+\"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\r\n+LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\r\n+A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\r\n+OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\r\n+SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\r\n+LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,           \r\n+DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY           \r\n+THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n+(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\r\n+OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n+\r\n+ */\r\n+\r\n+class Facet {\r\n+  constructor(div, config, options) {\r\n+  \tthis._div = div;\r\n+  \tthis._config = config;\r\n+  \tthis._options = options || {};\r\n+  \tthis._minimizeState = false;\r\n+  };\r\n+\r\n+  _minimize = function() {\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6f17148f1b35fdb8c6a33396a9d64e27290ed0e3"}, "originalPosition": 42}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9522dd4f5cdd40fd63b88470f7f37b829d8d98c1", "author": {"user": {"login": "lisa761", "name": "Lisa Chandra"}}, "url": "https://github.com/OpenRefine/OpenRefine/commit/9522dd4f5cdd40fd63b88470f7f37b829d8d98c1", "committedDate": "2020-08-20T10:23:34Z", "message": "removed fields"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcyNzgwMjIx", "url": "https://github.com/OpenRefine/OpenRefine/pull/3097#pullrequestreview-472780221", "createdAt": "2020-08-21T19:49:34Z", "commit": {"oid": "9522dd4f5cdd40fd63b88470f7f37b829d8d98c1"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMlQxODozODowOVrOHFG7WQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMlQxODo0MToyOFrOHFG8bg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTExODQyNQ==", "bodyText": "addCommas is duplicated in multiple facets, so could be hoisted into the super class, but we should probably just switch to doing it right: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/NumberFormat\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                this._elmts.statusDiv.html(this._addCommas(this._from.toFixed(2)) + \" &mdash; \" + this._addCommas(this._to.toFixed(2)));\n          \n          \n            \n                var lang = Refine.getPreference('userLang', 'en');\n          \n          \n            \n                var formatter = new Intl.NumberFormat(lang, { useGrouping: true, maximumFractionDigits: 2 })\n          \n          \n            \n            \n          \n          \n            \n                this._elmts.statusDiv.html($.i18n('core-facets/value-range', formatter.format(this._from), formatter.format(this._to));\n          \n          \n            \n                \n          \n      \n    \n    \n  \n\nwhere the translation-en.json entry for \"core-facets/value-range\" is \"$1 \u2014 $2\". The formatter can probably be initialized/cached in the constructor.", "url": "https://github.com/OpenRefine/OpenRefine/pull/3097#discussion_r475118425", "createdAt": "2020-08-22T18:38:09Z", "author": {"login": "tfmorris"}, "path": "main/webapp/modules/core/scripts/facets/range-facet.js", "diffHunk": "@@ -31,389 +31,366 @@ OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n \n  */\n \n-function RangeFacet(div, config, options) {\n-  this._div = div;\n-  this._config = config;\n-  this._options = options;\n-\n-  this._minimizeState = false;\n-\n-  this._from = (\"from\" in this._config) ? this._config.from : null;\n-  this._to = (\"to\" in this._config) ? this._config.to : null;\n-\n-  this._selectNumeric = (\"selectNumeric\" in this._config) ? this._config.selectNumeric : true;\n-  this._selectNonNumeric = (\"selectNonNumeric\" in this._config) ? this._config.selectNonNumeric : true;\n-  this._selectBlank = (\"selectBlank\" in this._config) ? this._config.selectBlank : true;\n-  this._selectError = (\"selectError\" in this._config) ? this._config.selectError : true;\n-\n-  this._baseNumericCount = 0;\n-  this._baseNonNumericCount = 0;\n-  this._baseBlankCount = 0;\n-  this._baseErrorCount = 0;\n-\n-  this._numericCount = 0;\n-  this._nonNumericCount = 0;\n-  this._blankCount = 0;\n-  this._errorCount = 0;\n-\n-  this._error = false;\n-  this._initializedUI = false;\n-}\n-\n-RangeFacet.prototype.reset = function() {\n-  this._from = this._config.min;\n-  this._to = this._config.max;\n-  this._sliderWidget.update(\n-      this._config.min, \n-      this._config.max, \n-      this._config.step, \n-      this._from,\n-      this._to\n-  );\n-\n-  this._selectNumeric = true;\n-  this._selectNonNumeric = true;\n-  this._selectBlank = true;\n-  this._selectError = true;\n-\n-  this._setRangeIndicators();\n-};\n+class RangeFacet extends Facet {\n+  constructor(div, config, options) {\n+    super(div, config, options);\n \n-RangeFacet.reconstruct = function(div, uiState) {\n-  return new RangeFacet(div, uiState.c, uiState.o);\n-};\n+    this._from = (\"from\" in this._config) ? this._config.from : null;\n+    this._to = (\"to\" in this._config) ? this._config.to : null;\n \n-RangeFacet.prototype.dispose = function() {\n-};\n+    this._selectNumeric = (\"selectNumeric\" in this._config) ? this._config.selectNumeric : true;\n+    this._selectNonNumeric = (\"selectNonNumeric\" in this._config) ? this._config.selectNonNumeric : true;\n+    this._selectBlank = (\"selectBlank\" in this._config) ? this._config.selectBlank : true;\n+    this._selectError = (\"selectError\" in this._config) ? this._config.selectError : true;\n+\n+    this._baseNumericCount = 0;\n+    this._baseNonNumericCount = 0;\n+    this._baseBlankCount = 0;\n+    this._baseErrorCount = 0;\n+\n+    this._numericCount = 0;\n+    this._nonNumericCount = 0;\n+    this._blankCount = 0;\n+    this._errorCount = 0;\n \n-RangeFacet.prototype.getUIState = function() {\n-  var json = {\n-      c: this.getJSON(),\n-      o: this._options\n+    this._error = false;\n+    this._initializedUI = false;\n   };\n \n-  return json;\n-};\n+  reset() {\n+    this._from = this._config.min;\n+    this._to = this._config.max;\n+    this._sliderWidget.update(\n+        this._config.min, \n+        this._config.max, \n+        this._config.step, \n+        this._from,\n+        this._to\n+    );\n+\n+    this._selectNumeric = true;\n+    this._selectNonNumeric = true;\n+    this._selectBlank = true;\n+    this._selectError = true;\n+\n+    this._setRangeIndicators();\n+  };\n+\n+  getUIState() {\n+    var json = {\n+        c: this.getJSON(),\n+        o: this._options\n+    };\n \n-RangeFacet.prototype.getJSON = function() {\n-  var o = {\n-      type: \"range\",\n-      name: this._config.name,\n-      expression: this._config.expression,\n-      columnName: this._config.columnName,\n-      selectNumeric: this._selectNumeric,\n-      selectNonNumeric: this._selectNonNumeric,\n-      selectBlank: this._selectBlank,\n-      selectError: this._selectError\n+    return json;\n   };\n \n-  if (this._from !== null) {\n-    o.from = this._from;\n-  }\n-  if (this._to !== null) {\n-    o.to = this._to;\n-  }\n+  getJSON() {\n+    var o = {\n+        type: \"range\",\n+        name: this._config.name,\n+        expression: this._config.expression,\n+        columnName: this._config.columnName,\n+        selectNumeric: this._selectNumeric,\n+        selectNonNumeric: this._selectNonNumeric,\n+        selectBlank: this._selectBlank,\n+        selectError: this._selectError\n+    };\n+\n+    if (this._from !== null) {\n+      o.from = this._from;\n+    }\n+    if (this._to !== null) {\n+      o.to = this._to;\n+    }\n \n-  return o;\n-};\n+    return o;\n+  };\n \n-RangeFacet.prototype.hasSelection = function() {\n-  if (!this._selectNumeric || !this._selectNonNumeric || !this._selectBlank || !this._selectError) {\n-    return true;\n-  }\n+  hasSelection() {\n+    if (!this._selectNumeric || !this._selectNonNumeric || !this._selectBlank || !this._selectError) {\n+      return true;\n+    }\n \n-  return (this._from !== null && (!this._initializedUI || this._from > this._config.min)) ||\n-  (this._to !== null && (!this._initializedUI || this._to < this._config.max));\n-};\n+    return (this._from !== null && (!this._initializedUI || this._from > this._config.min)) ||\n+    (this._to !== null && (!this._initializedUI || this._to < this._config.max));\n+  };\n \n-RangeFacet.prototype._initializeUI = function() {\n-  var self = this;\n-  this._div\n-  .empty()\n-  .show()\n-  .html(\n-    '<div class=\"facet-title\" bind=\"headerDiv\">' +\n-      '<div class=\"grid-layout layout-tightest layout-full\"><table><tr>' +\n-        '<td width=\"1%\">' +\n-          '<a href=\"javascript:{}\" title=\"'+$.i18n('core-facets/remove-facet')+'\" class=\"facet-title-remove\" bind=\"removeButton\">&nbsp;</a>' +\n-        '</td>' +\n-        '<td width=\"1%\">' +\n-          '<a href=\"javascript:{}\" title=\"'+$.i18n('core-facets/minimize-facet')+'\" class=\"facet-title-minimize\" bind=\"minimizeButton\">&nbsp;</a>' +\n-        '</td>' +\n-        '<td>' +\n-          '<a href=\"javascript:{}\" class=\"facet-choice-link\" bind=\"resetButton\">'+$.i18n('core-facets/reset')+'</a>' +\n-          '<a href=\"javascript:{}\" class=\"facet-choice-link\" bind=\"changeButton\">'+$.i18n('core-facets/change')+'</a>' +\n-          '<span bind=\"facetTitle\"></span>' +\n-        '</td>' +\n-      '</tr></table></div>' +\n-    '</div>' +\n-    '<div class=\"facet-expression\" bind=\"expressionDiv\" title=\"'+$.i18n('core-facets/click-to-edit')+'\"></div>' +\n-      '<div class=\"facet-range-body\">' +\n-        '<div class=\"facet-range-message\" bind=\"messageDiv\">'+$.i18n('core-facets/loading')+'</div>' +\n-        '<div class=\"facet-range-slider\" bind=\"sliderWidgetDiv\">' +\n-        '<div class=\"facet-range-histogram\" bind=\"histogramDiv\"></div>' +\n+  _initializeUI() {\n+    var self = this;\n+    this._div\n+    .empty()\n+    .show()\n+    .html(\n+      '<div class=\"facet-title\" bind=\"headerDiv\">' +\n+        '<div class=\"grid-layout layout-tightest layout-full\"><table><tr>' +\n+          '<td width=\"1%\">' +\n+            '<a href=\"javascript:{}\" title=\"'+$.i18n('core-facets/remove-facet')+'\" class=\"facet-title-remove\" bind=\"removeButton\">&nbsp;</a>' +\n+          '</td>' +\n+          '<td width=\"1%\">' +\n+            '<a href=\"javascript:{}\" title=\"'+$.i18n('core-facets/minimize-facet')+'\" class=\"facet-title-minimize\" bind=\"minimizeButton\">&nbsp;</a>' +\n+          '</td>' +\n+          '<td>' +\n+            '<a href=\"javascript:{}\" class=\"facet-choice-link\" bind=\"resetButton\">'+$.i18n('core-facets/reset')+'</a>' +\n+            '<a href=\"javascript:{}\" class=\"facet-choice-link\" bind=\"changeButton\">'+$.i18n('core-facets/change')+'</a>' +\n+            '<span bind=\"facetTitle\"></span>' +\n+          '</td>' +\n+        '</tr></table></div>' +\n       '</div>' +\n-      '<div class=\"facet-range-status\" bind=\"statusDiv\"></div>' +\n-      '<div class=\"facet-range-other-choices\" bind=\"otherChoicesDiv\"></div>' +\n-    '</div>'\n-  );\n-  this._elmts = DOM.bind(this._div);\n-\n-  this._elmts.facetTitle.text(this._config.name);\n-  this._elmts.changeButton.attr(\"title\",$.i18n('core-facets/current-expression')+\": \" + this._config.expression).click(function() {\n-    self._elmts.expressionDiv.slideToggle(100, function() {\n-      if (self._elmts.expressionDiv.css(\"display\") != \"none\") {\n-        self._editExpression();\n-      }\n+      '<div class=\"facet-expression\" bind=\"expressionDiv\" title=\"'+$.i18n('core-facets/click-to-edit')+'\"></div>' +\n+        '<div class=\"facet-range-body\">' +\n+          '<div class=\"facet-range-message\" bind=\"messageDiv\">'+$.i18n('core-facets/loading')+'</div>' +\n+          '<div class=\"facet-range-slider\" bind=\"sliderWidgetDiv\">' +\n+          '<div class=\"facet-range-histogram\" bind=\"histogramDiv\"></div>' +\n+        '</div>' +\n+        '<div class=\"facet-range-status\" bind=\"statusDiv\"></div>' +\n+        '<div class=\"facet-range-other-choices\" bind=\"otherChoicesDiv\"></div>' +\n+      '</div>'\n+    );\n+    this._elmts = DOM.bind(this._div);\n+\n+    this._elmts.facetTitle.text(this._config.name);\n+    this._elmts.changeButton.attr(\"title\",$.i18n('core-facets/current-expression')+\": \" + this._config.expression).click(function() {\n+      self._elmts.expressionDiv.slideToggle(100, function() {\n+        if (self._elmts.expressionDiv.css(\"display\") != \"none\") {\n+          self._editExpression();\n+        }\n+      });\n     });\n-  });\n-  this._elmts.expressionDiv.text(this._config.expression).click(function() { \n-    self._editExpression(); \n-  }).hide();\n-\n-  this._elmts.resetButton.click(function() {\n-    self.reset();\n-    self._updateRest();\n-  });\n-  \n-  this._elmts.removeButton.click(function() { self._remove(); });\n-  this._elmts.minimizeButton.click(function() { self._minimize(); });\n-\n-  this._histogram = new HistogramWidget(this._elmts.histogramDiv, { binColors: [ \"#bbccff\", \"#88aaee\" ] });\n-  this._sliderWidget = new SliderWidget(this._elmts.sliderWidgetDiv);\n-\n-  this._elmts.sliderWidgetDiv.bind(\"slide\", function(evt, data) {\n-    self._from = data.from;\n-    self._to = data.to;\n-    self._setRangeIndicators();\n-  }).bind(\"stop\", function(evt, data) {\n-    self._from = data.from;\n-    self._to = data.to;\n-    self._selectNumeric = true;\n-    self._updateRest();\n-  });\n-};\n+    this._elmts.expressionDiv.text(this._config.expression).click(function() { \n+      self._editExpression(); \n+    }).hide();\n+\n+    this._elmts.resetButton.click(function() {\n+      self.reset();\n+      self._updateRest();\n+    });\n+    \n+    this._elmts.removeButton.click(function() { self._remove(); });\n+    this._elmts.minimizeButton.click(function() { self._minimize(); });\n+\n+    this._histogram = new HistogramWidget(this._elmts.histogramDiv, { binColors: [ \"#bbccff\", \"#88aaee\" ] });\n+    this._sliderWidget = new SliderWidget(this._elmts.sliderWidgetDiv);\n+\n+    this._elmts.sliderWidgetDiv.bind(\"slide\", function(evt, data) {\n+      self._from = data.from;\n+      self._to = data.to;\n+      self._setRangeIndicators();\n+    }).bind(\"stop\", function(evt, data) {\n+      self._from = data.from;\n+      self._to = data.to;\n+      self._selectNumeric = true;\n+      self._updateRest();\n+    });\n+  };\n \n-RangeFacet.prototype._renderOtherChoices = function() {\n-  var self = this;\n-  var container = this._elmts.otherChoicesDiv.empty();\n+  _renderOtherChoices() {\n+    var self = this;\n+    var container = this._elmts.otherChoicesDiv.empty();\n \n-  if (this._baseNonNumericCount === 0 && this._baseBlankCount === 0 && this._baseErrorCount === 0) {\n-    return;\n-  }\n+    if (this._baseNonNumericCount === 0 && this._baseBlankCount === 0 && this._baseErrorCount === 0) {\n+      return;\n+    }\n \n-  var facet_id = this._div.attr(\"id\");\n+    var facet_id = this._div.attr(\"id\");\n \n-  var choices = $('<div>').addClass(\"facet-range-choices\");\n+    var choices = $('<div>').addClass(\"facet-range-choices\");\n \n-  // ----------------- numeric -----------------\n+    // ----------------- numeric -----------------\n \n-  var numericDiv = $('<div class=\"facet-range-item\"></div>').appendTo(choices);\n-  var numericCheck = $('<input type=\"checkbox\" />').attr(\"id\",facet_id + \"-numeric\").appendTo(numericDiv).change(function() {\n-    self._selectNumeric = !self._selectNumeric;\n-    self._updateRest();\n-  });\n-  if (this._selectNumeric) numericCheck.prop('checked', true);\n+    var numericDiv = $('<div class=\"facet-range-item\"></div>').appendTo(choices);\n+    var numericCheck = $('<input type=\"checkbox\" />').attr(\"id\",facet_id + \"-numeric\").appendTo(numericDiv).change(function() {\n+      self._selectNumeric = !self._selectNumeric;\n+      self._updateRest();\n+    });\n+    if (this._selectNumeric) numericCheck.prop('checked', true);\n+\n+    var numericLabel = $('<label>').attr(\"for\", facet_id + \"-numeric\").appendTo(numericDiv);    \n+    $('<span>').text($.i18n('core-facets/numeric')+\" \").addClass(\"facet-range-choice-label\").appendTo(numericLabel);\n+    $('<div>').text(this._numericCount).addClass(\"facet-range-choice-count\").appendTo(numericLabel);\n \n-  var numericLabel = $('<label>').attr(\"for\", facet_id + \"-numeric\").appendTo(numericDiv);    \n-  $('<span>').text($.i18n('core-facets/numeric')+\" \").addClass(\"facet-range-choice-label\").appendTo(numericLabel);\n-  $('<div>').text(this._numericCount).addClass(\"facet-range-choice-count\").appendTo(numericLabel);\n+    // ----------------- non-numeric -----------------\n \n-  // ----------------- non-numeric -----------------\n+    var nonNumericDiv = $('<div class=\"facet-range-item\"></div>').appendTo(choices);    \n+    var nonNumericCheck = $('<input type=\"checkbox\" />').attr(\"id\",facet_id + \"-non-numeric\").appendTo(nonNumericDiv).change(function() {\n+      self._selectNonNumeric = !self._selectNonNumeric;\n+      self._updateRest();\n+    });\n+    if (this._selectNonNumeric) nonNumericCheck.prop('checked', true);\n \n-  var nonNumericDiv = $('<div class=\"facet-range-item\"></div>').appendTo(choices);    \n-  var nonNumericCheck = $('<input type=\"checkbox\" />').attr(\"id\",facet_id + \"-non-numeric\").appendTo(nonNumericDiv).change(function() {\n-    self._selectNonNumeric = !self._selectNonNumeric;\n-    self._updateRest();\n-  });\n-  if (this._selectNonNumeric) nonNumericCheck.prop('checked', true);\n+    var nonNumericLabel = $('<label>').attr(\"for\", facet_id + \"-non-numeric\").appendTo(nonNumericDiv);    \n+    $('<span>').text(\"Non-numeric \").addClass(\"facet-range-choice-label\").appendTo(nonNumericLabel);\n+    $('<div>').text(this._nonNumericCount).addClass(\"facet-range-choice-count\").appendTo(nonNumericLabel);\n \n-  var nonNumericLabel = $('<label>').attr(\"for\", facet_id + \"-non-numeric\").appendTo(nonNumericDiv);    \n-  $('<span>').text(\"Non-numeric \").addClass(\"facet-range-choice-label\").appendTo(nonNumericLabel);\n-  $('<div>').text(this._nonNumericCount).addClass(\"facet-range-choice-count\").appendTo(nonNumericLabel);\n+    if (this._baseNonNumericCount === 0) nonNumericCheck.prop('checked', false);\n \n-  if (this._baseNonNumericCount === 0) nonNumericCheck.prop('checked', false);\n+    // ----------------- blank -----------------\n \n-  // ----------------- blank -----------------\n+    var blankDiv = $('<div class=\"facet-range-item\"></div>').appendTo(choices);        \n+    var blankCheck = $('<input type=\"checkbox\" />').attr(\"id\",facet_id + \"-blank\").appendTo(blankDiv).change(function() {\n+      self._selectBlank = !self._selectBlank;\n+      self._updateRest();\n+    });\n+    if (this._selectBlank) blankCheck.prop('checked', true);\n \n-  var blankDiv = $('<div class=\"facet-range-item\"></div>').appendTo(choices);        \n-  var blankCheck = $('<input type=\"checkbox\" />').attr(\"id\",facet_id + \"-blank\").appendTo(blankDiv).change(function() {\n-    self._selectBlank = !self._selectBlank;\n-    self._updateRest();\n-  });\n-  if (this._selectBlank) blankCheck.prop('checked', true);\n+    var blankLabel = $('<label>').attr(\"for\", facet_id + \"-blank\").appendTo(blankDiv);    \n+    $('<span>').text(\"Blank \").addClass(\"facet-range-choice-label\").appendTo(blankLabel);\n+    $('<div>').text(this._blankCount).addClass(\"facet-range-choice-count\").appendTo(blankLabel);\n \n-  var blankLabel = $('<label>').attr(\"for\", facet_id + \"-blank\").appendTo(blankDiv);    \n-  $('<span>').text(\"Blank \").addClass(\"facet-range-choice-label\").appendTo(blankLabel);\n-  $('<div>').text(this._blankCount).addClass(\"facet-range-choice-count\").appendTo(blankLabel);\n+    if (this._baseBlankCount === 0) blankCheck.prop('checked', false);\n \n-  if (this._baseBlankCount === 0) blankCheck.prop('checked', false);\n+    // ----------------- error -----------------\n \n-  // ----------------- error -----------------\n+    var errorDiv = $('<div class=\"facet-range-item\"></div>').appendTo(choices);\n+    var errorCheck = $('<input type=\"checkbox\" />').attr(\"id\",facet_id + \"-error\").appendTo(errorDiv).change(function() {\n+      self._selectError = !self._selectError;\n+      self._updateRest();\n+    });\n+    if (this._selectError) errorCheck.prop('checked', true);\n \n-  var errorDiv = $('<div class=\"facet-range-item\"></div>').appendTo(choices);\n-  var errorCheck = $('<input type=\"checkbox\" />').attr(\"id\",facet_id + \"-error\").appendTo(errorDiv).change(function() {\n-    self._selectError = !self._selectError;\n-    self._updateRest();\n-  });\n-  if (this._selectError) errorCheck.prop('checked', true);\n+    var errorLabel = $('<label>').attr(\"for\", facet_id + \"-error\").appendTo(errorDiv);    \n+    $('<span>').text(\"Error \").addClass(\"facet-range-choice-label\").appendTo(errorLabel);\n+    $('<div>').text(this._errorCount).addClass(\"facet-range-choice-count\").appendTo(errorLabel);\n \n-  var errorLabel = $('<label>').attr(\"for\", facet_id + \"-error\").appendTo(errorDiv);    \n-  $('<span>').text(\"Error \").addClass(\"facet-range-choice-label\").appendTo(errorLabel);\n-  $('<div>').text(this._errorCount).addClass(\"facet-range-choice-count\").appendTo(errorLabel);\n+    if (this._baseErrorCount === 0) errorCheck.prop(\"checked\", false);\n \n-  if (this._baseErrorCount === 0) errorCheck.prop(\"checked\", false);\n+    // --------------------------\n \n-  // --------------------------\n+    choices.appendTo(container);\n+  };\n \n-  choices.appendTo(container);\n-};\n+  _setRangeIndicators() {\n+    this._elmts.statusDiv.html(this._addCommas(this._from.toFixed(2)) + \" &mdash; \" + this._addCommas(this._to.toFixed(2)));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9522dd4f5cdd40fd63b88470f7f37b829d8d98c1"}, "originalPosition": 435}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTExODQ3NA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              _addCommas(nStr) {\n          \n          \n            \n                nStr += '';\n          \n          \n            \n                var x = nStr.split('.');\n          \n          \n            \n                var x1 = x[0];\n          \n          \n            \n                var x2 = x.length > 1 ? '.' + x[1] : '';\n          \n          \n            \n                var rgx = /(\\d+)(\\d{3})/;\n          \n          \n            \n                while (rgx.test(x1)) {\n          \n          \n            \n                  x1 = x1.replace(rgx, '$1' + ',' + '$2');\n          \n          \n            \n                }\n          \n          \n            \n                return x1 + x2;\n          \n          \n            \n              };", "url": "https://github.com/OpenRefine/OpenRefine/pull/3097#discussion_r475118474", "createdAt": "2020-08-22T18:38:48Z", "author": {"login": "tfmorris"}, "path": "main/webapp/modules/core/scripts/facets/range-facet.js", "diffHunk": "@@ -31,389 +31,366 @@ OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n \n  */\n \n-function RangeFacet(div, config, options) {\n-  this._div = div;\n-  this._config = config;\n-  this._options = options;\n-\n-  this._minimizeState = false;\n-\n-  this._from = (\"from\" in this._config) ? this._config.from : null;\n-  this._to = (\"to\" in this._config) ? this._config.to : null;\n-\n-  this._selectNumeric = (\"selectNumeric\" in this._config) ? this._config.selectNumeric : true;\n-  this._selectNonNumeric = (\"selectNonNumeric\" in this._config) ? this._config.selectNonNumeric : true;\n-  this._selectBlank = (\"selectBlank\" in this._config) ? this._config.selectBlank : true;\n-  this._selectError = (\"selectError\" in this._config) ? this._config.selectError : true;\n-\n-  this._baseNumericCount = 0;\n-  this._baseNonNumericCount = 0;\n-  this._baseBlankCount = 0;\n-  this._baseErrorCount = 0;\n-\n-  this._numericCount = 0;\n-  this._nonNumericCount = 0;\n-  this._blankCount = 0;\n-  this._errorCount = 0;\n-\n-  this._error = false;\n-  this._initializedUI = false;\n-}\n-\n-RangeFacet.prototype.reset = function() {\n-  this._from = this._config.min;\n-  this._to = this._config.max;\n-  this._sliderWidget.update(\n-      this._config.min, \n-      this._config.max, \n-      this._config.step, \n-      this._from,\n-      this._to\n-  );\n-\n-  this._selectNumeric = true;\n-  this._selectNonNumeric = true;\n-  this._selectBlank = true;\n-  this._selectError = true;\n-\n-  this._setRangeIndicators();\n-};\n+class RangeFacet extends Facet {\n+  constructor(div, config, options) {\n+    super(div, config, options);\n \n-RangeFacet.reconstruct = function(div, uiState) {\n-  return new RangeFacet(div, uiState.c, uiState.o);\n-};\n+    this._from = (\"from\" in this._config) ? this._config.from : null;\n+    this._to = (\"to\" in this._config) ? this._config.to : null;\n \n-RangeFacet.prototype.dispose = function() {\n-};\n+    this._selectNumeric = (\"selectNumeric\" in this._config) ? this._config.selectNumeric : true;\n+    this._selectNonNumeric = (\"selectNonNumeric\" in this._config) ? this._config.selectNonNumeric : true;\n+    this._selectBlank = (\"selectBlank\" in this._config) ? this._config.selectBlank : true;\n+    this._selectError = (\"selectError\" in this._config) ? this._config.selectError : true;\n+\n+    this._baseNumericCount = 0;\n+    this._baseNonNumericCount = 0;\n+    this._baseBlankCount = 0;\n+    this._baseErrorCount = 0;\n+\n+    this._numericCount = 0;\n+    this._nonNumericCount = 0;\n+    this._blankCount = 0;\n+    this._errorCount = 0;\n \n-RangeFacet.prototype.getUIState = function() {\n-  var json = {\n-      c: this.getJSON(),\n-      o: this._options\n+    this._error = false;\n+    this._initializedUI = false;\n   };\n \n-  return json;\n-};\n+  reset() {\n+    this._from = this._config.min;\n+    this._to = this._config.max;\n+    this._sliderWidget.update(\n+        this._config.min, \n+        this._config.max, \n+        this._config.step, \n+        this._from,\n+        this._to\n+    );\n+\n+    this._selectNumeric = true;\n+    this._selectNonNumeric = true;\n+    this._selectBlank = true;\n+    this._selectError = true;\n+\n+    this._setRangeIndicators();\n+  };\n+\n+  getUIState() {\n+    var json = {\n+        c: this.getJSON(),\n+        o: this._options\n+    };\n \n-RangeFacet.prototype.getJSON = function() {\n-  var o = {\n-      type: \"range\",\n-      name: this._config.name,\n-      expression: this._config.expression,\n-      columnName: this._config.columnName,\n-      selectNumeric: this._selectNumeric,\n-      selectNonNumeric: this._selectNonNumeric,\n-      selectBlank: this._selectBlank,\n-      selectError: this._selectError\n+    return json;\n   };\n \n-  if (this._from !== null) {\n-    o.from = this._from;\n-  }\n-  if (this._to !== null) {\n-    o.to = this._to;\n-  }\n+  getJSON() {\n+    var o = {\n+        type: \"range\",\n+        name: this._config.name,\n+        expression: this._config.expression,\n+        columnName: this._config.columnName,\n+        selectNumeric: this._selectNumeric,\n+        selectNonNumeric: this._selectNonNumeric,\n+        selectBlank: this._selectBlank,\n+        selectError: this._selectError\n+    };\n+\n+    if (this._from !== null) {\n+      o.from = this._from;\n+    }\n+    if (this._to !== null) {\n+      o.to = this._to;\n+    }\n \n-  return o;\n-};\n+    return o;\n+  };\n \n-RangeFacet.prototype.hasSelection = function() {\n-  if (!this._selectNumeric || !this._selectNonNumeric || !this._selectBlank || !this._selectError) {\n-    return true;\n-  }\n+  hasSelection() {\n+    if (!this._selectNumeric || !this._selectNonNumeric || !this._selectBlank || !this._selectError) {\n+      return true;\n+    }\n \n-  return (this._from !== null && (!this._initializedUI || this._from > this._config.min)) ||\n-  (this._to !== null && (!this._initializedUI || this._to < this._config.max));\n-};\n+    return (this._from !== null && (!this._initializedUI || this._from > this._config.min)) ||\n+    (this._to !== null && (!this._initializedUI || this._to < this._config.max));\n+  };\n \n-RangeFacet.prototype._initializeUI = function() {\n-  var self = this;\n-  this._div\n-  .empty()\n-  .show()\n-  .html(\n-    '<div class=\"facet-title\" bind=\"headerDiv\">' +\n-      '<div class=\"grid-layout layout-tightest layout-full\"><table><tr>' +\n-        '<td width=\"1%\">' +\n-          '<a href=\"javascript:{}\" title=\"'+$.i18n('core-facets/remove-facet')+'\" class=\"facet-title-remove\" bind=\"removeButton\">&nbsp;</a>' +\n-        '</td>' +\n-        '<td width=\"1%\">' +\n-          '<a href=\"javascript:{}\" title=\"'+$.i18n('core-facets/minimize-facet')+'\" class=\"facet-title-minimize\" bind=\"minimizeButton\">&nbsp;</a>' +\n-        '</td>' +\n-        '<td>' +\n-          '<a href=\"javascript:{}\" class=\"facet-choice-link\" bind=\"resetButton\">'+$.i18n('core-facets/reset')+'</a>' +\n-          '<a href=\"javascript:{}\" class=\"facet-choice-link\" bind=\"changeButton\">'+$.i18n('core-facets/change')+'</a>' +\n-          '<span bind=\"facetTitle\"></span>' +\n-        '</td>' +\n-      '</tr></table></div>' +\n-    '</div>' +\n-    '<div class=\"facet-expression\" bind=\"expressionDiv\" title=\"'+$.i18n('core-facets/click-to-edit')+'\"></div>' +\n-      '<div class=\"facet-range-body\">' +\n-        '<div class=\"facet-range-message\" bind=\"messageDiv\">'+$.i18n('core-facets/loading')+'</div>' +\n-        '<div class=\"facet-range-slider\" bind=\"sliderWidgetDiv\">' +\n-        '<div class=\"facet-range-histogram\" bind=\"histogramDiv\"></div>' +\n+  _initializeUI() {\n+    var self = this;\n+    this._div\n+    .empty()\n+    .show()\n+    .html(\n+      '<div class=\"facet-title\" bind=\"headerDiv\">' +\n+        '<div class=\"grid-layout layout-tightest layout-full\"><table><tr>' +\n+          '<td width=\"1%\">' +\n+            '<a href=\"javascript:{}\" title=\"'+$.i18n('core-facets/remove-facet')+'\" class=\"facet-title-remove\" bind=\"removeButton\">&nbsp;</a>' +\n+          '</td>' +\n+          '<td width=\"1%\">' +\n+            '<a href=\"javascript:{}\" title=\"'+$.i18n('core-facets/minimize-facet')+'\" class=\"facet-title-minimize\" bind=\"minimizeButton\">&nbsp;</a>' +\n+          '</td>' +\n+          '<td>' +\n+            '<a href=\"javascript:{}\" class=\"facet-choice-link\" bind=\"resetButton\">'+$.i18n('core-facets/reset')+'</a>' +\n+            '<a href=\"javascript:{}\" class=\"facet-choice-link\" bind=\"changeButton\">'+$.i18n('core-facets/change')+'</a>' +\n+            '<span bind=\"facetTitle\"></span>' +\n+          '</td>' +\n+        '</tr></table></div>' +\n       '</div>' +\n-      '<div class=\"facet-range-status\" bind=\"statusDiv\"></div>' +\n-      '<div class=\"facet-range-other-choices\" bind=\"otherChoicesDiv\"></div>' +\n-    '</div>'\n-  );\n-  this._elmts = DOM.bind(this._div);\n-\n-  this._elmts.facetTitle.text(this._config.name);\n-  this._elmts.changeButton.attr(\"title\",$.i18n('core-facets/current-expression')+\": \" + this._config.expression).click(function() {\n-    self._elmts.expressionDiv.slideToggle(100, function() {\n-      if (self._elmts.expressionDiv.css(\"display\") != \"none\") {\n-        self._editExpression();\n-      }\n+      '<div class=\"facet-expression\" bind=\"expressionDiv\" title=\"'+$.i18n('core-facets/click-to-edit')+'\"></div>' +\n+        '<div class=\"facet-range-body\">' +\n+          '<div class=\"facet-range-message\" bind=\"messageDiv\">'+$.i18n('core-facets/loading')+'</div>' +\n+          '<div class=\"facet-range-slider\" bind=\"sliderWidgetDiv\">' +\n+          '<div class=\"facet-range-histogram\" bind=\"histogramDiv\"></div>' +\n+        '</div>' +\n+        '<div class=\"facet-range-status\" bind=\"statusDiv\"></div>' +\n+        '<div class=\"facet-range-other-choices\" bind=\"otherChoicesDiv\"></div>' +\n+      '</div>'\n+    );\n+    this._elmts = DOM.bind(this._div);\n+\n+    this._elmts.facetTitle.text(this._config.name);\n+    this._elmts.changeButton.attr(\"title\",$.i18n('core-facets/current-expression')+\": \" + this._config.expression).click(function() {\n+      self._elmts.expressionDiv.slideToggle(100, function() {\n+        if (self._elmts.expressionDiv.css(\"display\") != \"none\") {\n+          self._editExpression();\n+        }\n+      });\n     });\n-  });\n-  this._elmts.expressionDiv.text(this._config.expression).click(function() { \n-    self._editExpression(); \n-  }).hide();\n-\n-  this._elmts.resetButton.click(function() {\n-    self.reset();\n-    self._updateRest();\n-  });\n-  \n-  this._elmts.removeButton.click(function() { self._remove(); });\n-  this._elmts.minimizeButton.click(function() { self._minimize(); });\n-\n-  this._histogram = new HistogramWidget(this._elmts.histogramDiv, { binColors: [ \"#bbccff\", \"#88aaee\" ] });\n-  this._sliderWidget = new SliderWidget(this._elmts.sliderWidgetDiv);\n-\n-  this._elmts.sliderWidgetDiv.bind(\"slide\", function(evt, data) {\n-    self._from = data.from;\n-    self._to = data.to;\n-    self._setRangeIndicators();\n-  }).bind(\"stop\", function(evt, data) {\n-    self._from = data.from;\n-    self._to = data.to;\n-    self._selectNumeric = true;\n-    self._updateRest();\n-  });\n-};\n+    this._elmts.expressionDiv.text(this._config.expression).click(function() { \n+      self._editExpression(); \n+    }).hide();\n+\n+    this._elmts.resetButton.click(function() {\n+      self.reset();\n+      self._updateRest();\n+    });\n+    \n+    this._elmts.removeButton.click(function() { self._remove(); });\n+    this._elmts.minimizeButton.click(function() { self._minimize(); });\n+\n+    this._histogram = new HistogramWidget(this._elmts.histogramDiv, { binColors: [ \"#bbccff\", \"#88aaee\" ] });\n+    this._sliderWidget = new SliderWidget(this._elmts.sliderWidgetDiv);\n+\n+    this._elmts.sliderWidgetDiv.bind(\"slide\", function(evt, data) {\n+      self._from = data.from;\n+      self._to = data.to;\n+      self._setRangeIndicators();\n+    }).bind(\"stop\", function(evt, data) {\n+      self._from = data.from;\n+      self._to = data.to;\n+      self._selectNumeric = true;\n+      self._updateRest();\n+    });\n+  };\n \n-RangeFacet.prototype._renderOtherChoices = function() {\n-  var self = this;\n-  var container = this._elmts.otherChoicesDiv.empty();\n+  _renderOtherChoices() {\n+    var self = this;\n+    var container = this._elmts.otherChoicesDiv.empty();\n \n-  if (this._baseNonNumericCount === 0 && this._baseBlankCount === 0 && this._baseErrorCount === 0) {\n-    return;\n-  }\n+    if (this._baseNonNumericCount === 0 && this._baseBlankCount === 0 && this._baseErrorCount === 0) {\n+      return;\n+    }\n \n-  var facet_id = this._div.attr(\"id\");\n+    var facet_id = this._div.attr(\"id\");\n \n-  var choices = $('<div>').addClass(\"facet-range-choices\");\n+    var choices = $('<div>').addClass(\"facet-range-choices\");\n \n-  // ----------------- numeric -----------------\n+    // ----------------- numeric -----------------\n \n-  var numericDiv = $('<div class=\"facet-range-item\"></div>').appendTo(choices);\n-  var numericCheck = $('<input type=\"checkbox\" />').attr(\"id\",facet_id + \"-numeric\").appendTo(numericDiv).change(function() {\n-    self._selectNumeric = !self._selectNumeric;\n-    self._updateRest();\n-  });\n-  if (this._selectNumeric) numericCheck.prop('checked', true);\n+    var numericDiv = $('<div class=\"facet-range-item\"></div>').appendTo(choices);\n+    var numericCheck = $('<input type=\"checkbox\" />').attr(\"id\",facet_id + \"-numeric\").appendTo(numericDiv).change(function() {\n+      self._selectNumeric = !self._selectNumeric;\n+      self._updateRest();\n+    });\n+    if (this._selectNumeric) numericCheck.prop('checked', true);\n+\n+    var numericLabel = $('<label>').attr(\"for\", facet_id + \"-numeric\").appendTo(numericDiv);    \n+    $('<span>').text($.i18n('core-facets/numeric')+\" \").addClass(\"facet-range-choice-label\").appendTo(numericLabel);\n+    $('<div>').text(this._numericCount).addClass(\"facet-range-choice-count\").appendTo(numericLabel);\n \n-  var numericLabel = $('<label>').attr(\"for\", facet_id + \"-numeric\").appendTo(numericDiv);    \n-  $('<span>').text($.i18n('core-facets/numeric')+\" \").addClass(\"facet-range-choice-label\").appendTo(numericLabel);\n-  $('<div>').text(this._numericCount).addClass(\"facet-range-choice-count\").appendTo(numericLabel);\n+    // ----------------- non-numeric -----------------\n \n-  // ----------------- non-numeric -----------------\n+    var nonNumericDiv = $('<div class=\"facet-range-item\"></div>').appendTo(choices);    \n+    var nonNumericCheck = $('<input type=\"checkbox\" />').attr(\"id\",facet_id + \"-non-numeric\").appendTo(nonNumericDiv).change(function() {\n+      self._selectNonNumeric = !self._selectNonNumeric;\n+      self._updateRest();\n+    });\n+    if (this._selectNonNumeric) nonNumericCheck.prop('checked', true);\n \n-  var nonNumericDiv = $('<div class=\"facet-range-item\"></div>').appendTo(choices);    \n-  var nonNumericCheck = $('<input type=\"checkbox\" />').attr(\"id\",facet_id + \"-non-numeric\").appendTo(nonNumericDiv).change(function() {\n-    self._selectNonNumeric = !self._selectNonNumeric;\n-    self._updateRest();\n-  });\n-  if (this._selectNonNumeric) nonNumericCheck.prop('checked', true);\n+    var nonNumericLabel = $('<label>').attr(\"for\", facet_id + \"-non-numeric\").appendTo(nonNumericDiv);    \n+    $('<span>').text(\"Non-numeric \").addClass(\"facet-range-choice-label\").appendTo(nonNumericLabel);\n+    $('<div>').text(this._nonNumericCount).addClass(\"facet-range-choice-count\").appendTo(nonNumericLabel);\n \n-  var nonNumericLabel = $('<label>').attr(\"for\", facet_id + \"-non-numeric\").appendTo(nonNumericDiv);    \n-  $('<span>').text(\"Non-numeric \").addClass(\"facet-range-choice-label\").appendTo(nonNumericLabel);\n-  $('<div>').text(this._nonNumericCount).addClass(\"facet-range-choice-count\").appendTo(nonNumericLabel);\n+    if (this._baseNonNumericCount === 0) nonNumericCheck.prop('checked', false);\n \n-  if (this._baseNonNumericCount === 0) nonNumericCheck.prop('checked', false);\n+    // ----------------- blank -----------------\n \n-  // ----------------- blank -----------------\n+    var blankDiv = $('<div class=\"facet-range-item\"></div>').appendTo(choices);        \n+    var blankCheck = $('<input type=\"checkbox\" />').attr(\"id\",facet_id + \"-blank\").appendTo(blankDiv).change(function() {\n+      self._selectBlank = !self._selectBlank;\n+      self._updateRest();\n+    });\n+    if (this._selectBlank) blankCheck.prop('checked', true);\n \n-  var blankDiv = $('<div class=\"facet-range-item\"></div>').appendTo(choices);        \n-  var blankCheck = $('<input type=\"checkbox\" />').attr(\"id\",facet_id + \"-blank\").appendTo(blankDiv).change(function() {\n-    self._selectBlank = !self._selectBlank;\n-    self._updateRest();\n-  });\n-  if (this._selectBlank) blankCheck.prop('checked', true);\n+    var blankLabel = $('<label>').attr(\"for\", facet_id + \"-blank\").appendTo(blankDiv);    \n+    $('<span>').text(\"Blank \").addClass(\"facet-range-choice-label\").appendTo(blankLabel);\n+    $('<div>').text(this._blankCount).addClass(\"facet-range-choice-count\").appendTo(blankLabel);\n \n-  var blankLabel = $('<label>').attr(\"for\", facet_id + \"-blank\").appendTo(blankDiv);    \n-  $('<span>').text(\"Blank \").addClass(\"facet-range-choice-label\").appendTo(blankLabel);\n-  $('<div>').text(this._blankCount).addClass(\"facet-range-choice-count\").appendTo(blankLabel);\n+    if (this._baseBlankCount === 0) blankCheck.prop('checked', false);\n \n-  if (this._baseBlankCount === 0) blankCheck.prop('checked', false);\n+    // ----------------- error -----------------\n \n-  // ----------------- error -----------------\n+    var errorDiv = $('<div class=\"facet-range-item\"></div>').appendTo(choices);\n+    var errorCheck = $('<input type=\"checkbox\" />').attr(\"id\",facet_id + \"-error\").appendTo(errorDiv).change(function() {\n+      self._selectError = !self._selectError;\n+      self._updateRest();\n+    });\n+    if (this._selectError) errorCheck.prop('checked', true);\n \n-  var errorDiv = $('<div class=\"facet-range-item\"></div>').appendTo(choices);\n-  var errorCheck = $('<input type=\"checkbox\" />').attr(\"id\",facet_id + \"-error\").appendTo(errorDiv).change(function() {\n-    self._selectError = !self._selectError;\n-    self._updateRest();\n-  });\n-  if (this._selectError) errorCheck.prop('checked', true);\n+    var errorLabel = $('<label>').attr(\"for\", facet_id + \"-error\").appendTo(errorDiv);    \n+    $('<span>').text(\"Error \").addClass(\"facet-range-choice-label\").appendTo(errorLabel);\n+    $('<div>').text(this._errorCount).addClass(\"facet-range-choice-count\").appendTo(errorLabel);\n \n-  var errorLabel = $('<label>').attr(\"for\", facet_id + \"-error\").appendTo(errorDiv);    \n-  $('<span>').text(\"Error \").addClass(\"facet-range-choice-label\").appendTo(errorLabel);\n-  $('<div>').text(this._errorCount).addClass(\"facet-range-choice-count\").appendTo(errorLabel);\n+    if (this._baseErrorCount === 0) errorCheck.prop(\"checked\", false);\n \n-  if (this._baseErrorCount === 0) errorCheck.prop(\"checked\", false);\n+    // --------------------------\n \n-  // --------------------------\n+    choices.appendTo(container);\n+  };\n \n-  choices.appendTo(container);\n-};\n+  _setRangeIndicators() {\n+    this._elmts.statusDiv.html(this._addCommas(this._from.toFixed(2)) + \" &mdash; \" + this._addCommas(this._to.toFixed(2)));\n+  };\n \n-RangeFacet.prototype._setRangeIndicators = function() {\n-  this._elmts.statusDiv.html(this._addCommas(this._from.toFixed(2)) + \" &mdash; \" + this._addCommas(this._to.toFixed(2)));\n-};\n+  _addCommas(nStr) {\n+    nStr += '';\n+    var x = nStr.split('.');\n+    var x1 = x[0];\n+    var x2 = x.length > 1 ? '.' + x[1] : '';\n+    var rgx = /(\\d+)(\\d{3})/;\n+    while (rgx.test(x1)) {\n+      x1 = x1.replace(rgx, '$1' + ',' + '$2');\n+    }\n+    return x1 + x2;\n+  };", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9522dd4f5cdd40fd63b88470f7f37b829d8d98c1"}, "originalPosition": 451}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTExODcwMg==", "bodyText": "Actually, it looks like this copy isn't used anyway, so it can just be deleted.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              _addCommas(nStr) {\n          \n          \n            \n                nStr += '';\n          \n          \n            \n                x = nStr.split('.');\n          \n          \n            \n                x1 = x[0];\n          \n          \n            \n                x2 = x.length > 1 ? '.' + x[1] : '';\n          \n          \n            \n                var rgx = /(\\d+)(\\d{3})/;\n          \n          \n            \n                while (rgx.test(x1)) {\n          \n          \n            \n                  x1 = x1.replace(rgx, '$1' + ',' + '$2');\n          \n          \n            \n                }\n          \n          \n            \n                return x1 + x2;\n          \n          \n            \n              };", "url": "https://github.com/OpenRefine/OpenRefine/pull/3097#discussion_r475118702", "createdAt": "2020-08-22T18:41:28Z", "author": {"login": "tfmorris"}, "path": "main/webapp/modules/core/scripts/facets/timerange-facet.js", "diffHunk": "@@ -31,419 +31,396 @@ OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n \n  */\n \n-function TimeRangeFacet(div, config, options) {\n-  this._div = div;\n-  this._config = config;\n-  this._options = options;\n-\n-  this._minimizeState = false;\n-\n-  this._from = (\"from\" in this._config) ? this._config.from : null;\n-  this._to = (\"to\" in this._config) ? this._config.to : null;\n-  this._step = (\"step\" in this._config) ? this._config.step : null;\n-\n-  this._selectTime = (\"selectTime\" in this._config) ? this._config.selectTime : true;\n-  this._selectNonTime = (\"selectNonTime\" in this._config) ? this._config.selectNonTime : true;\n-  this._selectBlank = (\"selectBlank\" in this._config) ? this._config.selectBlank : true;\n-  this._selectError = (\"selectError\" in this._config) ? this._config.selectError : true;\n-\n-  this._baseTimeCount = 0;\n-  this._baseNonTimeCount = 0;\n-  this._baseBlankCount = 0;\n-  this._baseErrorCount = 0;\n-\n-  this._timeCount = 0;\n-  this._nonTimeCount = 0;\n-  this._blankCount = 0;\n-  this._errorCount = 0;\n-\n-  this._error = false;\n-  this._initializedUI = false;\n-}\n-\n-TimeRangeFacet.prototype.reset = function() {\n-  this._from = this._config.min;\n-  this._to = this._config.max;\n-  this._sliderWidget.update(\n-      this._config.min, \n-      this._config.max, \n-      this._config.step, \n-      this._from,\n-      this._to\n-  );\n-\n-  this._selectTime = true;\n-  this._selectNonTime = true;\n-  this._selectBlank = true;\n-  this._selectError = true;\n-\n-  this._setRangeIndicators();\n-};\n+class TimeRangeFacet extends Facet{\n+  constructor(div, config, options) {\n+    super(div, config, options);\n \n-TimeRangeFacet.reconstruct = function(div, uiState) {\n-  return new TimeRangeFacet(div, uiState.c, uiState.o);\n-};\n+    this._from = (\"from\" in this._config) ? this._config.from : null;\n+    this._to = (\"to\" in this._config) ? this._config.to : null;\n+    this._step = (\"step\" in this._config) ? this._config.step : null;\n \n-TimeRangeFacet.prototype.dispose = function() {\n-};\n+    this._selectTime = (\"selectTime\" in this._config) ? this._config.selectTime : true;\n+    this._selectNonTime = (\"selectNonTime\" in this._config) ? this._config.selectNonTime : true;\n+    this._selectBlank = (\"selectBlank\" in this._config) ? this._config.selectBlank : true;\n+    this._selectError = (\"selectError\" in this._config) ? this._config.selectError : true;\n \n-TimeRangeFacet.prototype.getUIState = function() {\n-  var json = {\n-      c: this.getJSON(),\n-      o: this._options\n+    this._baseTimeCount = 0;\n+    this._baseNonTimeCount = 0;\n+    this._baseBlankCount = 0;\n+    this._baseErrorCount = 0;\n+\n+    this._timeCount = 0;\n+    this._nonTimeCount = 0;\n+    this._blankCount = 0;\n+    this._errorCount = 0;\n+\n+    this._error = false;\n+    this._initializedUI = false;\n   };\n \n-  return json;\n-};\n+  reset() {\n+    this._from = this._config.min;\n+    this._to = this._config.max;\n+    this._sliderWidget.update(\n+        this._config.min, \n+        this._config.max, \n+        this._config.step, \n+        this._from,\n+        this._to\n+    );\n+\n+    this._selectTime = true;\n+    this._selectNonTime = true;\n+    this._selectBlank = true;\n+    this._selectError = true;\n+\n+    this._setRangeIndicators();\n+  };\n \n-TimeRangeFacet.prototype.getJSON = function() {\n-  var o = {\n-      type: \"timerange\",\n-      name: this._config.name,\n-      expression: this._config.expression,\n-      columnName: this._config.columnName,\n-      selectTime: this._selectTime,\n-      selectNonTime: this._selectNonTime,\n-      selectBlank: this._selectBlank,\n-      selectError: this._selectError\n+  getUIState() {\n+    var json = {\n+        c: this.getJSON(),\n+        o: this._options\n+    };\n+\n+    return json;\n   };\n \n-  if (this._from !== null) {\n-    o.from = this._from;\n-  }\n-  if (this._to !== null) {\n-    o.to = this._to;\n-  }\n+  getJSON() {\n+    var o = {\n+        type: \"timerange\",\n+        name: this._config.name,\n+        expression: this._config.expression,\n+        columnName: this._config.columnName,\n+        selectTime: this._selectTime,\n+        selectNonTime: this._selectNonTime,\n+        selectBlank: this._selectBlank,\n+        selectError: this._selectError\n+    };\n+\n+    if (this._from !== null) {\n+      o.from = this._from;\n+    }\n+    if (this._to !== null) {\n+      o.to = this._to;\n+    }\n \n-  return o;\n-};\n+    return o;\n+  };\n \n-TimeRangeFacet.prototype.hasSelection = function() {\n-  if (!this._selectTime || !this._selectNonTime || !this._selectBlank || !this._selectError) {\n-    return true;\n-  }\n+  hasSelection() {\n+    if (!this._selectTime || !this._selectNonTime || !this._selectBlank || !this._selectError) {\n+      return true;\n+    }\n \n-  return (this._from !== null && (!this._initializedUI || this._from > this._config.min)) ||\n-  (this._to !== null && (!this._initializedUI || this._to < this._config.max));\n-};\n+    return (this._from !== null && (!this._initializedUI || this._from > this._config.min)) ||\n+    (this._to !== null && (!this._initializedUI || this._to < this._config.max));\n+  };\n \n-TimeRangeFacet.prototype._initializeUI = function() {\n-  var self = this;\n-  this._div\n-  .empty()\n-  .show()\n-  .html(\n-    '<div class=\"facet-title\" bind=\"headerDiv\">' +\n-      '<div class=\"grid-layout layout-tightest layout-full\"><table><tr>' +\n-        '<td width=\"1%\">' +\n-          '<a href=\"javascript:{}\" title=\"'+$.i18n('core-facets/remove-facet')+'\" class=\"facet-title-remove\" bind=\"removeButton\">&nbsp;</a>' +\n-        '</td>' +\n-        '<td width=\"1%\">' +\n-          '<a href=\"javascript:{}\" title=\"'+$.i18n('core-facets/minimize-facet')+'\" class=\"facet-title-minimize\" bind=\"minimizeButton\">&nbsp;</a>' +\n-        '</td>' +\n-        '<td>' +\n-          '<a href=\"javascript:{}\" class=\"facet-choice-link\" bind=\"resetButton\">'+$.i18n('core-facets/reset')+'</a>' +\n-          '<a href=\"javascript:{}\" class=\"facet-choice-link\" bind=\"changeButton\">'+$.i18n('core-facets/change')+'</a>' +\n-          '<span bind=\"facetTitle\"></span>' +\n-        '</td>' +\n-      '</tr></table></div>' +\n-    '</div>' +\n-    '<div class=\"facet-expression\" bind=\"expressionDiv\" title=\"'+$.i18n('core-facets/click-to-edit')+'\"></div>' +\n-    '<div class=\"facet-range-body\">' +\n-      '<div class=\"facet-range-message\" bind=\"messageDiv\">'+$.i18n('core-facets/loading')+'</div>' +\n-      '<div class=\"facet-range-slider\" bind=\"sliderWidgetDiv\">' +\n-        '<div class=\"facet-range-histogram\" bind=\"histogramDiv\"></div>' +\n+  _initializeUI() {\n+    var self = this;\n+    this._div\n+    .empty()\n+    .show()\n+    .html(\n+      '<div class=\"facet-title\" bind=\"headerDiv\">' +\n+        '<div class=\"grid-layout layout-tightest layout-full\"><table><tr>' +\n+          '<td width=\"1%\">' +\n+            '<a href=\"javascript:{}\" title=\"'+$.i18n('core-facets/remove-facet')+'\" class=\"facet-title-remove\" bind=\"removeButton\">&nbsp;</a>' +\n+          '</td>' +\n+          '<td width=\"1%\">' +\n+            '<a href=\"javascript:{}\" title=\"'+$.i18n('core-facets/minimize-facet')+'\" class=\"facet-title-minimize\" bind=\"minimizeButton\">&nbsp;</a>' +\n+          '</td>' +\n+          '<td>' +\n+            '<a href=\"javascript:{}\" class=\"facet-choice-link\" bind=\"resetButton\">'+$.i18n('core-facets/reset')+'</a>' +\n+            '<a href=\"javascript:{}\" class=\"facet-choice-link\" bind=\"changeButton\">'+$.i18n('core-facets/change')+'</a>' +\n+            '<span bind=\"facetTitle\"></span>' +\n+          '</td>' +\n+        '</tr></table></div>' +\n       '</div>' +\n-      '<div class=\"facet-range-status\" bind=\"statusDiv\"></div>' +\n-      '<div class=\"facet-range-other-choices\" bind=\"otherChoicesDiv\"></div>' +\n-    '</div>'\n-  );\n-  this._elmts = DOM.bind(this._div);\n-\n-  this._elmts.facetTitle.text(this._config.name);\n-  this._elmts.changeButton.attr(\"title\",$.i18n('core-facets/current-exp')+\": \" + this._config.expression).click(function() {\n-    self._elmts.expressionDiv.slideToggle(100, function() {\n-      if (self._elmts.expressionDiv.css(\"display\") != \"none\") {\n-        self._editExpression();\n-      }\n+      '<div class=\"facet-expression\" bind=\"expressionDiv\" title=\"'+$.i18n('core-facets/click-to-edit')+'\"></div>' +\n+      '<div class=\"facet-range-body\">' +\n+        '<div class=\"facet-range-message\" bind=\"messageDiv\">'+$.i18n('core-facets/loading')+'</div>' +\n+        '<div class=\"facet-range-slider\" bind=\"sliderWidgetDiv\">' +\n+          '<div class=\"facet-range-histogram\" bind=\"histogramDiv\"></div>' +\n+        '</div>' +\n+        '<div class=\"facet-range-status\" bind=\"statusDiv\"></div>' +\n+        '<div class=\"facet-range-other-choices\" bind=\"otherChoicesDiv\"></div>' +\n+      '</div>'\n+    );\n+    this._elmts = DOM.bind(this._div);\n+\n+    this._elmts.facetTitle.text(this._config.name);\n+    this._elmts.changeButton.attr(\"title\",$.i18n('core-facets/current-exp')+\": \" + this._config.expression).click(function() {\n+      self._elmts.expressionDiv.slideToggle(100, function() {\n+        if (self._elmts.expressionDiv.css(\"display\") != \"none\") {\n+          self._editExpression();\n+        }\n+      });\n     });\n-  });\n-  this._elmts.expressionDiv.text(this._config.expression).click(function() { \n-    self._editExpression(); \n-  }).hide();\n-\n-  this._elmts.resetButton.click(function() {\n-    self.reset();\n-    self._updateRest();\n-  });\n-  \n-  this._elmts.removeButton.click(function() { self._remove(); });\n-  this._elmts.minimizeButton.click(function() { self._minimize(); });\n-\n-  this._histogram = new HistogramWidget(this._elmts.histogramDiv, { binColors: [ \"#ccccff\", \"#6666ff\" ] });\n-  this._sliderWidget = new SliderWidget(this._elmts.sliderWidgetDiv);\n-\n-  this._elmts.sliderWidgetDiv.bind(\"slide\", function(evt, data) {\n-    self._from = data.from;\n-    self._to = data.to;\n-    self._setRangeIndicators();\n-  }).bind(\"stop\", function(evt, data) {\n-    self._from = data.from;\n-    self._to = data.to;\n-    self._selectTime = true;\n-    self._updateRest();\n-  });\n-};\n+    this._elmts.expressionDiv.text(this._config.expression).click(function() { \n+      self._editExpression(); \n+    }).hide();\n \n-TimeRangeFacet.prototype._renderOtherChoices = function() {\n-  var self = this;\n-  var container = this._elmts.otherChoicesDiv.empty();\n+    this._elmts.resetButton.click(function() {\n+      self.reset();\n+      self._updateRest();\n+    });\n+    \n+    this._elmts.removeButton.click(function() { self._remove(); });\n+    this._elmts.minimizeButton.click(function() { self._minimize(); });\n+\n+    this._histogram = new HistogramWidget(this._elmts.histogramDiv, { binColors: [ \"#ccccff\", \"#6666ff\" ] });\n+    this._sliderWidget = new SliderWidget(this._elmts.sliderWidgetDiv);\n+\n+    this._elmts.sliderWidgetDiv.bind(\"slide\", function(evt, data) {\n+      self._from = data.from;\n+      self._to = data.to;\n+      self._setRangeIndicators();\n+    }).bind(\"stop\", function(evt, data) {\n+      self._from = data.from;\n+      self._to = data.to;\n+      self._selectTime = true;\n+      self._updateRest();\n+    });\n+  };\n \n-  if (this._baseNonTimeCount === 0 && this._baseBlankCount === 0 && this._baseErrorCount === 0) {\n-    return;\n-  }\n+  _renderOtherChoices() {\n+    var self = this;\n+    var container = this._elmts.otherChoicesDiv.empty();\n \n-  var facet_id = this._div.attr(\"id\");\n+    if (this._baseNonTimeCount === 0 && this._baseBlankCount === 0 && this._baseErrorCount === 0) {\n+      return;\n+    }\n \n-  var choices = $('<div>').addClass(\"facet-range-choices\");\n+    var facet_id = this._div.attr(\"id\");\n \n-  // ----------------- time -----------------\n+    var choices = $('<div>').addClass(\"facet-range-choices\");\n \n-  var timeDiv = $('<div class=\"facet-range-item\"></div>').appendTo(choices);            \n-  var timeCheck = $('<input type=\"checkbox\" />').attr(\"id\",facet_id + \"-time\").appendTo(timeDiv).change(function() {\n-    self._selectTime = !self._selectTime;\n-    self._updateRest();\n-  });\n-  if (this._selectTime) timeCheck.prop('checked', true);\n+    // ----------------- time -----------------\n \n-  var timeLabel = $('<label>').attr(\"for\", facet_id + \"-time\").appendTo(timeDiv);    \n-  $('<span>').text($.i18n('core-facets/time')+\" \").addClass(\"facet-range-choice-label\").appendTo(timeLabel);\n-  $('<div>').text(this._timeCount).addClass(\"facet-range-choice-count\").appendTo(timeLabel);\n+    var timeDiv = $('<div class=\"facet-range-item\"></div>').appendTo(choices);            \n+    var timeCheck = $('<input type=\"checkbox\" />').attr(\"id\",facet_id + \"-time\").appendTo(timeDiv).change(function() {\n+      self._selectTime = !self._selectTime;\n+      self._updateRest();\n+    });\n+    if (this._selectTime) timeCheck.prop('checked', true);\n \n-  // ----------------- non-Time -----------------\n+    var timeLabel = $('<label>').attr(\"for\", facet_id + \"-time\").appendTo(timeDiv);    \n+    $('<span>').text($.i18n('core-facets/time')+\" \").addClass(\"facet-range-choice-label\").appendTo(timeLabel);\n+    $('<div>').text(this._timeCount).addClass(\"facet-range-choice-count\").appendTo(timeLabel);\n \n-  var nonTimeDiv = $('<div class=\"facet-range-item\"></div>').appendTo(choices);            \n-  var nonTimeCheck = $('<input type=\"checkbox\" />').attr(\"id\",facet_id + \"-non-time\").appendTo(nonTimeDiv).change(function() {\n-    self._selectNonTime = !self._selectNonTime;\n-    self._updateRest();\n-  });\n-  if (this._selectNonTime) nonTimeCheck.prop('checked', true);\n+    // ----------------- non-Time -----------------\n \n-  var nonTimeLabel = $('<label>').attr(\"for\", facet_id + \"-non-time\").appendTo(nonTimeDiv);    \n-  $('<span>').text($.i18n('core-facets/non-time')+\" \").addClass(\"facet-range-choice-label\").appendTo(nonTimeLabel);\n-  $('<div>').text(this._nonTimeCount).addClass(\"facet-range-choice-count\").appendTo(nonTimeLabel);\n+    var nonTimeDiv = $('<div class=\"facet-range-item\"></div>').appendTo(choices);            \n+    var nonTimeCheck = $('<input type=\"checkbox\" />').attr(\"id\",facet_id + \"-non-time\").appendTo(nonTimeDiv).change(function() {\n+      self._selectNonTime = !self._selectNonTime;\n+      self._updateRest();\n+    });\n+    if (this._selectNonTime) nonTimeCheck.prop('checked', true);\n \n-  if (this._baseNonTimeCount === 0) nonTimeCheck.prop(\"checked\", false);\n+    var nonTimeLabel = $('<label>').attr(\"for\", facet_id + \"-non-time\").appendTo(nonTimeDiv);    \n+    $('<span>').text($.i18n('core-facets/non-time')+\" \").addClass(\"facet-range-choice-label\").appendTo(nonTimeLabel);\n+    $('<div>').text(this._nonTimeCount).addClass(\"facet-range-choice-count\").appendTo(nonTimeLabel);\n \n-  // ----------------- blank -----------------\n+    if (this._baseNonTimeCount === 0) nonTimeCheck.prop(\"checked\", false);\n \n-  var blankDiv = $('<div class=\"facet-range-item\"></div>').appendTo(choices);            \n-  var blankCheck = $('<input type=\"checkbox\" />').attr(\"id\",facet_id + \"-blank\").appendTo(blankDiv).change(function() {\n-    self._selectBlank = !self._selectBlank;\n-    self._updateRest();\n-  });\n-  if (this._selectBlank) blankCheck.prop('checked', true);\n+    // ----------------- blank -----------------\n \n-  var blankLabel = $('<label>').attr(\"for\", facet_id + \"-blank\").appendTo(blankDiv);    \n-  $('<span>').text($.i18n('core-facets/blank')+\" \").addClass(\"facet-range-choice-label\").appendTo(blankLabel);\n-  $('<div>').text(this._blankCount).addClass(\"facet-range-choice-count\").appendTo(blankLabel);\n+    var blankDiv = $('<div class=\"facet-range-item\"></div>').appendTo(choices);            \n+    var blankCheck = $('<input type=\"checkbox\" />').attr(\"id\",facet_id + \"-blank\").appendTo(blankDiv).change(function() {\n+      self._selectBlank = !self._selectBlank;\n+      self._updateRest();\n+    });\n+    if (this._selectBlank) blankCheck.prop('checked', true);\n \n-  if (this._baseBlankCount === 0) blankCheck.prop(\"checked\", false);\n+    var blankLabel = $('<label>').attr(\"for\", facet_id + \"-blank\").appendTo(blankDiv);    \n+    $('<span>').text($.i18n('core-facets/blank')+\" \").addClass(\"facet-range-choice-label\").appendTo(blankLabel);\n+    $('<div>').text(this._blankCount).addClass(\"facet-range-choice-count\").appendTo(blankLabel);\n \n-  // ----------------- error -----------------\n+    if (this._baseBlankCount === 0) blankCheck.prop(\"checked\", false);\n \n-  var errorDiv = $('<div class=\"facet-range-item\"></div>').appendTo(choices);            \n-  var errorCheck = $('<input type=\"checkbox\" />').attr(\"id\",facet_id + \"-error\").appendTo(errorDiv).change(function() {\n-    self._selectError = !self._selectError;\n-    self._updateRest();\n-  });\n-  if (this._selectError) errorCheck.prop('checked', true);\n+    // ----------------- error -----------------\n \n-  var errorLabel = $('<label>').attr(\"for\", facet_id + \"-error\").appendTo(errorDiv);    \n-  $('<span>').text($.i18n('core-facets/error')+\" \").addClass(\"facet-range-choice-label\").appendTo(errorLabel);\n-  $('<div>').text(this._errorCount).addClass(\"facet-range-choice-count\").appendTo(errorLabel);\n+    var errorDiv = $('<div class=\"facet-range-item\"></div>').appendTo(choices);            \n+    var errorCheck = $('<input type=\"checkbox\" />').attr(\"id\",facet_id + \"-error\").appendTo(errorDiv).change(function() {\n+      self._selectError = !self._selectError;\n+      self._updateRest();\n+    });\n+    if (this._selectError) errorCheck.prop('checked', true);\n \n-  if (this._baseErrorCount === 0) errorCheck.prop(\"checked\", false);\n+    var errorLabel = $('<label>').attr(\"for\", facet_id + \"-error\").appendTo(errorDiv);    \n+    $('<span>').text($.i18n('core-facets/error')+\" \").addClass(\"facet-range-choice-label\").appendTo(errorLabel);\n+    $('<div>').text(this._errorCount).addClass(\"facet-range-choice-count\").appendTo(errorLabel);\n \n-  // --------------------------\n+    if (this._baseErrorCount === 0) errorCheck.prop(\"checked\", false);\n \n-  choices.appendTo(container);\n-};\n+    // --------------------------\n \n-TimeRangeFacet.prototype.steps = [ \n-                                  1,                  // msec\n-                                  1000,               // sec\n-                                  1000*60,            // min\n-                                  1000*60*60,         // hour\n-                                  1000*60*60*24,      // day\n-                                  1000*60*60*24*7,    // week\n-                                  1000*2629746,       // month (average Gregorian year / 12)\n-                                  1000*31556952,      // year (average Gregorian year)\n-                                  1000*31556952*10,   // decade \n-                                  1000*31556952*100,  // century \n-                                  1000*31556952*1000  // millennium \n-                                  ];\n-\n-TimeRangeFacet.prototype._setRangeIndicators = function() {\n-  var fromDate = new Date(this._from);\n-  var toDate = new Date(this._to);\n-\n-  if (this._step > 2629746000) { // > month\n-    var format = \"yyyy\";\n-    this._elmts.statusDiv.html(fromDate.toString(format) + \" &mdash; \" + toDate.toString(format));\n-  } else if (this.step > 3600000) { // > hour\n-    var format = \"yyyy-MM-dd\";\n-    this._elmts.statusDiv.html(fromDate.toString(format) + \" &mdash; \" + toDate.toString(format));\n-  } else {\n-    var timeOfDayformat = \"HH:mm:ss\";\n-    var dayOfYearFormat = \"yyyy-MM-dd\";\n-    this._elmts.statusDiv.html(\"<b>\" + fromDate.toString(dayOfYearFormat) + \"</b>  \" + fromDate.toString(timeOfDayformat) + \" &mdash; \"  + \"<b>\" + toDate.toString(dayOfYearFormat) + \"</b>  \" + toDate.toString(timeOfDayformat) );\n-  }\n-};\n+    choices.appendTo(container);\n+  };\n \n-TimeRangeFacet.prototype._addCommas = function(nStr) {\n-  nStr += '';\n-  x = nStr.split('.');\n-  x1 = x[0];\n-  x2 = x.length > 1 ? '.' + x[1] : '';\n-  var rgx = /(\\d+)(\\d{3})/;\n-  while (rgx.test(x1)) {\n-    x1 = x1.replace(rgx, '$1' + ',' + '$2');\n-  }\n-  return x1 + x2;\n-};\n+  _setRangeIndicators() {\n+    var fromDate = new Date(this._from);\n+    var toDate = new Date(this._to);\n+\n+    if (this._step > 2629746000) { // > month\n+      var format = \"yyyy\";\n+      this._elmts.statusDiv.html(fromDate.toString(format) + \" &mdash; \" + toDate.toString(format));\n+    } else if (this.step > 3600000) { // > hour\n+      var format = \"yyyy-MM-dd\";\n+      this._elmts.statusDiv.html(fromDate.toString(format) + \" &mdash; \" + toDate.toString(format));\n+    } else {\n+      var timeOfDayformat = \"HH:mm:ss\";\n+      var dayOfYearFormat = \"yyyy-MM-dd\";\n+      this._elmts.statusDiv.html(\"<b>\" + fromDate.toString(dayOfYearFormat) + \"</b>  \" + fromDate.toString(timeOfDayformat) + \" &mdash; \"  + \"<b>\" + toDate.toString(dayOfYearFormat) + \"</b>  \" + toDate.toString(timeOfDayformat) );\n+    }\n+  };\n \n-TimeRangeFacet.prototype.updateState = function(data) {\n-  if (\"min\" in data && \"max\" in data) {\n-    this._error = false;\n+  _addCommas(nStr) {\n+    nStr += '';\n+    x = nStr.split('.');\n+    x1 = x[0];\n+    x2 = x.length > 1 ? '.' + x[1] : '';\n+    var rgx = /(\\d+)(\\d{3})/;\n+    while (rgx.test(x1)) {\n+      x1 = x1.replace(rgx, '$1' + ',' + '$2');\n+    }\n+    return x1 + x2;\n+  };", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9522dd4f5cdd40fd63b88470f7f37b829d8d98c1"}, "originalPosition": 507}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "73ad7132c3436c33658bcacc345c0234703bab68", "author": {"user": {"login": "lisa761", "name": "Lisa Chandra"}}, "url": "https://github.com/OpenRefine/OpenRefine/commit/73ad7132c3436c33658bcacc345c0234703bab68", "committedDate": "2020-08-24T15:04:08Z", "message": "added suggested changes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc0MjA2MDc3", "url": "https://github.com/OpenRefine/OpenRefine/pull/3097#pullrequestreview-474206077", "createdAt": "2020-08-25T07:30:01Z", "commit": {"oid": "73ad7132c3436c33658bcacc345c0234703bab68"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc0NjUxOTQ2", "url": "https://github.com/OpenRefine/OpenRefine/pull/3097#pullrequestreview-474651946", "createdAt": "2020-08-25T16:28:37Z", "commit": {"oid": "73ad7132c3436c33658bcacc345c0234703bab68"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3096, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}