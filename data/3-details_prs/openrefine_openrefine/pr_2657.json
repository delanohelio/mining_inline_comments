{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI1NTAwNTI5", "number": 2657, "title": "Save preferences JSON using UTF-8 encoding. Bulletproof prefs load.", "bodyText": "Fixes #2543 Fixes #2544 Fixes #2627.\nAlways use UTF-8 to write JSON because platform default encoding\nmight not be legal JSON (e.g. ISO 8859-1).\nAlso be more conservative about keeping backups if we fail to write.\nTwo open questions:\n\nAre we using the correct filter on write? Looks like it could be wrong.\nDo we want to make sure that we can deserialize the written file before declaring success? That would have saved us from the user data loss due to the write/read mismatch here.", "createdAt": "2020-05-30T17:54:05Z", "url": "https://github.com/OpenRefine/OpenRefine/pull/2657", "merged": true, "mergeCommit": {"oid": "e6ed8e5d62868c31ff83f7b11fc86721466d814f"}, "closed": true, "closedAt": "2020-06-06T09:00:02Z", "author": {"login": "tfmorris"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcmci7lAFqTQyMTQzODY0Mg==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcoOT6AAFqTQyNTA5MzY2OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIxNDM4NjQy", "url": "https://github.com/OpenRefine/OpenRefine/pull/2657#pullrequestreview-421438642", "createdAt": "2020-05-30T19:50:42Z", "commit": {"oid": "9cc4df2ba4bf3269ac3a99539ab74de499e58d57"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0zMFQxOTo1MDo0MlrOGc1BfA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0zMFQxOTo1MDo0MlrOGc1BfA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjg4MjA0NA==", "bodyText": "There is no reason for recon candidates to end up in the project metadata, so both writers are equivalent. Perhaps we could use saveWriter because we are saving things to disk, but it is a style change.", "url": "https://github.com/OpenRefine/OpenRefine/pull/2657#discussion_r432882044", "createdAt": "2020-05-30T19:50:42Z", "author": {"login": "wetneb"}, "path": "main/src/com/google/refine/io/ProjectMetadataUtilities.java", "diffHunk": "@@ -60,25 +61,35 @@\n     public static void save(ProjectMetadata projectMeta, File projectDir) throws IOException  {\n         File tempFile = new File(projectDir, \"metadata.temp.json\");\n         saveToFile(projectMeta, tempFile);\n+        if (tempFile.length() == 0) {\n+            throw new IOException(\"Failed to save project metadata - keeping backups\");\n+        }\n+\n+        // TODO Do we want to make sure we can successfully deserialize the file too?\n \n         File file = new File(projectDir, \"metadata.json\");\n         File oldFile = new File(projectDir, \"metadata.old.json\");\n \n-        if (oldFile.exists()) {\n-            oldFile.delete();\n-        }\n-        \n         if (file.exists()) {\n+            if(file.length() > 0) {\n+                if (oldFile.exists()) {\n+                    oldFile.delete();\n+                }\n             file.renameTo(oldFile);\n+            } else {\n+                file.delete();\n+            }\n         }\n \n         tempFile.renameTo(file);\n     }\n     \n     protected static void saveToFile(ProjectMetadata projectMeta, File metadataFile) throws IOException   {\n-        Writer writer = new OutputStreamWriter(new FileOutputStream(metadataFile));\n+        Writer writer = new OutputStreamWriter(new FileOutputStream(metadataFile), StandardCharsets.UTF_8);\n         try {\n             ParsingUtilities.defaultWriter.writeValue(writer, projectMeta);\n+            // TODO: Do we want the below instead? Doesn't filter recon candidates\n+//            ParsingUtilities.saveWriter.writeValue(writer, projectMeta);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9cc4df2ba4bf3269ac3a99539ab74de499e58d57"}, "originalPosition": 45}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIxNDM4NzI3", "url": "https://github.com/OpenRefine/OpenRefine/pull/2657#pullrequestreview-421438727", "createdAt": "2020-05-30T19:52:10Z", "commit": {"oid": "9cc4df2ba4bf3269ac3a99539ab74de499e58d57"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0zMFQxOTo1MjoxMVrOGc1B3A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0zMFQxOTo1MjoxMVrOGc1B3A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjg4MjE0MA==", "bodyText": "Perhaps we could look into making the deserializer more flexible with respect to encoding issues (just like it can be configured to accept unescaped tabs)? I have not checked if it is possible though.", "url": "https://github.com/OpenRefine/OpenRefine/pull/2657#discussion_r432882140", "createdAt": "2020-05-30T19:52:11Z", "author": {"login": "wetneb"}, "path": "main/src/com/google/refine/io/ProjectMetadataUtilities.java", "diffHunk": "@@ -60,25 +61,35 @@\n     public static void save(ProjectMetadata projectMeta, File projectDir) throws IOException  {\n         File tempFile = new File(projectDir, \"metadata.temp.json\");\n         saveToFile(projectMeta, tempFile);\n+        if (tempFile.length() == 0) {\n+            throw new IOException(\"Failed to save project metadata - keeping backups\");\n+        }\n+\n+        // TODO Do we want to make sure we can successfully deserialize the file too?\n \n         File file = new File(projectDir, \"metadata.json\");\n         File oldFile = new File(projectDir, \"metadata.old.json\");\n \n-        if (oldFile.exists()) {\n-            oldFile.delete();\n-        }\n-        \n         if (file.exists()) {\n+            if(file.length() > 0) {\n+                if (oldFile.exists()) {\n+                    oldFile.delete();\n+                }\n             file.renameTo(oldFile);\n+            } else {\n+                file.delete();\n+            }\n         }\n \n         tempFile.renameTo(file);\n     }\n     \n     protected static void saveToFile(ProjectMetadata projectMeta, File metadataFile) throws IOException   {\n-        Writer writer = new OutputStreamWriter(new FileOutputStream(metadataFile));\n+        Writer writer = new OutputStreamWriter(new FileOutputStream(metadataFile), StandardCharsets.UTF_8);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9cc4df2ba4bf3269ac3a99539ab74de499e58d57"}, "originalPosition": 41}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8d151218534c81252a4dba087a7211f95b0ff08f", "author": {"user": {"login": "tfmorris", "name": "Tom Morris"}}, "url": "https://github.com/OpenRefine/OpenRefine/commit/8d151218534c81252a4dba087a7211f95b0ff08f", "committedDate": "2020-06-04T21:13:13Z", "message": "Run tests with non-UTF-8 encoding\n\nMake sure that we don't depend on UTF-8 being the default encoding\nbecause it isn't true everywhere (e.g. Windows)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2e6d71c3152d1749deb4c5c1eb8efc1e94a6faff", "author": {"user": {"login": "tfmorris", "name": "Tom Morris"}}, "url": "https://github.com/OpenRefine/OpenRefine/commit/2e6d71c3152d1749deb4c5c1eb8efc1e94a6faff", "committedDate": "2020-06-04T21:13:13Z", "message": "Add test for non-ASCII chars in workspace.json\n\nThis depends on the default Java encoding being something\nother than UTF-8 to test properly."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2f579deee2c2d5b2341016623e7b905cafbdd1e4", "author": {"user": {"login": "tfmorris", "name": "Tom Morris"}}, "url": "https://github.com/OpenRefine/OpenRefine/commit/2f579deee2c2d5b2341016623e7b905cafbdd1e4", "committedDate": "2020-06-04T21:13:13Z", "message": "Save preferences JSON using UTF-8 encoding. Bulletproof prefs load.\n\nFixes #2543. Fixes #2627.\n\nAlways use UTF-8 to write JSON because platform default encoding\nmight not be legal JSON (e.g. ISO 8859-1).\n\nAlso be more conservative about keeping backups if we fail to write."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9623f075584b77f3f010b3424793e13f67971b09", "author": {"user": {"login": "tfmorris", "name": "Tom Morris"}}, "url": "https://github.com/OpenRefine/OpenRefine/commit/9623f075584b77f3f010b3424793e13f67971b09", "committedDate": "2020-06-04T21:13:13Z", "message": "Handle case where backup prefs is better than more recent"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a84c8487271d5fb8e2fe60ee320cafcd8a605d4a", "author": {"user": {"login": "tfmorris", "name": "Tom Morris"}}, "url": "https://github.com/OpenRefine/OpenRefine/commit/a84c8487271d5fb8e2fe60ee320cafcd8a605d4a", "committedDate": "2020-06-04T21:13:13Z", "message": "Recover from corrupted prefs with null starred list.\n\nFixes #2544. Replaces null with an empty list."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7bf16c2bddd666b32d41a88c776b06ab82962aee", "author": {"user": {"login": "tfmorris", "name": "Tom Morris"}}, "url": "https://github.com/OpenRefine/OpenRefine/commit/7bf16c2bddd666b32d41a88c776b06ab82962aee", "committedDate": "2020-05-30T20:48:45Z", "message": "Recover from corrupted prefs with null starred list.\n\nFixes #2544. Replaces null with an empty list."}, "afterCommit": {"oid": "a84c8487271d5fb8e2fe60ee320cafcd8a605d4a", "author": {"user": {"login": "tfmorris", "name": "Tom Morris"}}, "url": "https://github.com/OpenRefine/OpenRefine/commit/a84c8487271d5fb8e2fe60ee320cafcd8a605d4a", "committedDate": "2020-06-04T21:13:13Z", "message": "Recover from corrupted prefs with null starred list.\n\nFixes #2544. Replaces null with an empty list."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI1MDkzNjY5", "url": "https://github.com/OpenRefine/OpenRefine/pull/2657#pullrequestreview-425093669", "createdAt": "2020-06-05T08:21:15Z", "commit": {"oid": "a84c8487271d5fb8e2fe60ee320cafcd8a605d4a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQwODoyMToxNVrOGfk92g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQwODoyMToxNVrOGfk92g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTc2NDY5OA==", "bodyText": "I guess we should ideally be able to apply this only for specific tests, no? I am not sure how that could be done, though. I am trying to think about the risks we are taking by switching to this encoding everywhere. Intuitively it should help us surface more bugs rather than hide ones which would only happen if the system encoding is UTF-8, so it is probably fine?", "url": "https://github.com/OpenRefine/OpenRefine/pull/2657#discussion_r435764698", "createdAt": "2020-06-05T08:21:15Z", "author": {"login": "wetneb"}, "path": "pom.xml", "diffHunk": "@@ -57,7 +57,7 @@\n     <jee.port>3333</jee.port>\n     <refine.data>/tmp/refine</refine.data>\n     <surefire.version>2.22.2</surefire.version>\n-    <surefireArgs></surefireArgs>\n+    <surefireArgs>-Dfile.encoding=cp1252</surefireArgs>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a84c8487271d5fb8e2fe60ee320cafcd8a605d4a"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3168, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}