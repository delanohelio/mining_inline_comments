{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAzMzk0MzAz", "number": 760, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwMDoyODo1M1rODx3sow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwMDoyODo1M1rODx3sow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNjE5MzYzOnYy", "diffSide": "RIGHT", "path": "phoenix-core/src/main/java/org/apache/phoenix/coprocessor/IndexToolVerificationResult.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwMDoyODo1M1rOGFlnQA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwMDozMjo1MlrOGFlruA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODUxMjMyMA==", "bodyText": "I suggest the following instead of above\npublic boolean isVerificationFailed() {\nif (getAfter().getInvalidIndexRowCount() + getAfter().getMissingIndexRowCount() +\nafter.getBeyondMaxLookBackInvalidIndexRowCount() + after.getBeyondMaxLookBackMissingIndexRowCount() > 0) {\nreturn true;\n}\nreturn false;\n}", "url": "https://github.com/apache/phoenix/pull/760#discussion_r408512320", "createdAt": "2020-04-15T00:28:53Z", "author": {"login": "kadirozde"}, "path": "phoenix-core/src/main/java/org/apache/phoenix/coprocessor/IndexToolVerificationResult.java", "diffHunk": "@@ -413,13 +413,8 @@ public void update(Cell cell) {\n     }\n \n     public boolean isVerificationFailed(IndexTool.IndexVerifyType verifyType) {\n-        if (verifyType == IndexTool.IndexVerifyType.BEFORE || verifyType == IndexTool.IndexVerifyType.NONE) {\n+        if (verifyType == IndexTool.IndexVerifyType.BEFORE || verifyType == IndexTool.IndexVerifyType.NONE || verifyType == IndexTool.IndexVerifyType.ONLY) {\n             return false;\n-        } else if (verifyType == IndexTool.IndexVerifyType.ONLY) {\n-            if (getBefore().getInvalidIndexRowCount() + getBefore().getMissingIndexRowCount() +\n-                before.getBeyondMaxLookBackInvalidIndexRowCount() + before.getBeyondMaxLookBackMissingIndexRowCount() > 0) {\n-                return true;\n-            }\n         } else if (verifyType == IndexTool.IndexVerifyType.BOTH || verifyType == IndexTool.IndexVerifyType.AFTER) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bfc61424c737f70fbefcc429db2f54bfedcf145e"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODUxMzQ2NA==", "bodyText": "nice, however, we ll still need a check on \"both\" and \"after\"", "url": "https://github.com/apache/phoenix/pull/760#discussion_r408513464", "createdAt": "2020-04-15T00:32:52Z", "author": {"login": "swaroopak"}, "path": "phoenix-core/src/main/java/org/apache/phoenix/coprocessor/IndexToolVerificationResult.java", "diffHunk": "@@ -413,13 +413,8 @@ public void update(Cell cell) {\n     }\n \n     public boolean isVerificationFailed(IndexTool.IndexVerifyType verifyType) {\n-        if (verifyType == IndexTool.IndexVerifyType.BEFORE || verifyType == IndexTool.IndexVerifyType.NONE) {\n+        if (verifyType == IndexTool.IndexVerifyType.BEFORE || verifyType == IndexTool.IndexVerifyType.NONE || verifyType == IndexTool.IndexVerifyType.ONLY) {\n             return false;\n-        } else if (verifyType == IndexTool.IndexVerifyType.ONLY) {\n-            if (getBefore().getInvalidIndexRowCount() + getBefore().getMissingIndexRowCount() +\n-                before.getBeyondMaxLookBackInvalidIndexRowCount() + before.getBeyondMaxLookBackMissingIndexRowCount() > 0) {\n-                return true;\n-            }\n         } else if (verifyType == IndexTool.IndexVerifyType.BOTH || verifyType == IndexTool.IndexVerifyType.AFTER) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODUxMjMyMA=="}, "originalCommit": {"oid": "bfc61424c737f70fbefcc429db2f54bfedcf145e"}, "originalPosition": 12}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4646, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}