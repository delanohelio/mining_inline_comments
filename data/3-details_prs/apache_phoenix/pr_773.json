{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDExODQ3Nzg4", "number": 773, "title": "PHOENIX-5874: IndexTool does not set TTL on its log tables correctly", "bodyText": "", "createdAt": "2020-04-30T21:31:26Z", "url": "https://github.com/apache/phoenix/pull/773", "merged": true, "mergeCommit": {"oid": "c27357978e8df14f9fa97b61e3a246bd12d9d80c"}, "closed": true, "closedAt": "2020-05-01T17:01:43Z", "author": {"login": "swaroopak"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcc0c0PAFqTQwMzkwNzQ4Mw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcdEuRjgBqjMyOTM3OTAwMzU=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAzOTA3NDgz", "url": "https://github.com/apache/phoenix/pull/773#pullrequestreview-403907483", "createdAt": "2020-04-30T22:00:32Z", "commit": {"oid": "45f6bbb14f4f01a12df4a3c724d5b8e29a1c9619"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQyMjowMDozMlrOGO71mQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQyMjowMDo1NFrOGO72RQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODMxMzYyNQ==", "bodyText": "Can be replaced with TestUtil.getRowCount", "url": "https://github.com/apache/phoenix/pull/773#discussion_r418313625", "createdAt": "2020-04-30T22:00:32Z", "author": {"login": "gjacoby126"}, "path": "phoenix-core/src/it/java/org/apache/phoenix/end2end/index/IndexVerificationResultRepositoryIT.java", "diffHunk": "@@ -50,24 +67,62 @@ public void testReadResultRow() throws Exception {\n         byte[] indexNameBytes = Bytes.toBytes(indexName);\n         try (Connection conn = DriverManager.getConnection(getUrl())) {\n             createTableAndIndex(conn, tableName, indexName);\n-            IndexVerificationResultRepository resultRepository =\n-                new IndexVerificationResultRepository(conn, indexNameBytes);\n-            resultRepository.createResultTable(conn);\n-            byte[] regionOne = Bytes.toBytes(\"a.1.00000000000000000000\");\n-            byte[] regionTwo = Bytes.toBytes(\"a.2.00000000000000000000\");\n             long scanMaxTs = EnvironmentEdgeManager.currentTimeMillis();\n             IndexToolVerificationResult expectedResult = getExpectedResult(scanMaxTs);\n-            resultRepository.logToIndexToolResultTable(expectedResult, IndexTool.IndexVerifyType.BOTH,\n-                regionOne);\n-            resultRepository.logToIndexToolResultTable(expectedResult, IndexTool.IndexVerifyType.BOTH,\n-                regionTwo);\n+            IndexVerificationResultRepository resultRepository = setupResultRepository(conn, indexNameBytes, expectedResult);\n             IndexToolVerificationResult actualResult =\n                 resultRepository.getVerificationResult(conn, scanMaxTs);\n             assertVerificationResult(expectedResult, actualResult);\n+        }\n+    }\n \n+    @Test\n+    public void testTTLOnResultTable() throws SQLException, IOException {\n+        String mockString = \"mock_value\";\n+        byte[] mockStringBytes = Strings.toByteArray(mockString);\n+        ManualEnvironmentEdge customClock = new ManualEnvironmentEdge();\n+        customClock.setValue(1);\n+        EnvironmentEdgeManager.injectEdge(customClock);\n+        try (Connection conn = DriverManager.getConnection(getUrl())) {\n+            long scanMaxTs = EnvironmentEdgeManager.currentTimeMillis();\n+            IndexToolVerificationResult expectedResult = getExpectedResult(scanMaxTs);\n+            setupResultRepository(conn, mockStringBytes,expectedResult);\n+            customClock.incrementValue(1000*(DEFAULT_LOG_TTL+5));\n+            EnvironmentEdgeManager.injectEdge(customClock);\n+            HTable hTable = new HTable(config, RESULT_TABLE_NAME_BYTES);\n+            int count = countRows(hTable);\n+\n+            Assert.assertEquals(0, count);\n         }\n     }\n \n+    public static int countRows(HTable hTable) throws IOException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "45f6bbb14f4f01a12df4a3c724d5b8e29a1c9619"}, "originalPosition": 81}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODMxMzc5Nw==", "bodyText": "Can use TestUtil.getRowCount", "url": "https://github.com/apache/phoenix/pull/773#discussion_r418313797", "createdAt": "2020-04-30T22:00:54Z", "author": {"login": "gjacoby126"}, "path": "phoenix-core/src/it/java/org/apache/phoenix/end2end/index/IndexVerificationOutputRepositoryIT.java", "diffHunk": "@@ -39,6 +48,9 @@\n import java.util.List;\n import java.util.Map;\n \n+import static org.apache.phoenix.coprocessor.MetaDataProtocol.DEFAULT_LOG_TTL;\n+import static org.apache.phoenix.end2end.index.IndexVerificationResultRepositoryIT.countRows;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "45f6bbb14f4f01a12df4a3c724d5b8e29a1c9619"}, "originalPosition": 30}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAzOTI4Nzc0", "url": "https://github.com/apache/phoenix/pull/773#pullrequestreview-403928774", "createdAt": "2020-04-30T22:47:38Z", "commit": {"oid": "f42a7e5415ee2199c1379717bb09a6cd2bcabda2"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQyMjo0NzozOFrOGO88Hw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQyMjo0NzozOFrOGO88Hw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODMzMTY3OQ==", "bodyText": "Can you assert here that rowCount is greater than 0", "url": "https://github.com/apache/phoenix/pull/773#discussion_r418331679", "createdAt": "2020-04-30T22:47:38Z", "author": {"login": "gokceni"}, "path": "phoenix-core/src/it/java/org/apache/phoenix/end2end/index/IndexVerificationOutputRepositoryIT.java", "diffHunk": "@@ -94,6 +106,33 @@ public void testReadIndexVerificationOutputRow() throws Exception {\n \n     }\n \n+    @Test\n+    public void testTTLOnOutputTable() throws SQLException, IOException {\n+        String mockString = \"mock_value\";\n+        byte[] mockStringBytes = Strings.toByteArray(mockString);\n+        ManualEnvironmentEdge customClock = new ManualEnvironmentEdge();\n+        customClock.setValue(1);\n+        EnvironmentEdgeManager.injectEdge(customClock);\n+        try (Connection conn = DriverManager.getConnection(getUrl())) {\n+            IndexVerificationOutputRepository\n+                    outputRepository =\n+                    new IndexVerificationOutputRepository(mockStringBytes, conn);\n+\n+            outputRepository.createOutputTable(conn);\n+            TestUtil.assertTableHasTtl(conn, TableName.valueOf(OUTPUT_TABLE_NAME_BYTES), DEFAULT_LOG_TTL);\n+            outputRepository.logToIndexToolOutputTable(mockStringBytes, mockStringBytes,\n+                    1, 2, mockString, mockStringBytes, mockStringBytes,\n+                    EnvironmentEdgeManager.currentTimeMillis(), mockStringBytes, true);\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f42a7e5415ee2199c1379717bb09a6cd2bcabda2"}, "originalPosition": 56}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAzOTI5Mzcx", "url": "https://github.com/apache/phoenix/pull/773#pullrequestreview-403929371", "createdAt": "2020-04-30T22:49:08Z", "commit": {"oid": "f42a7e5415ee2199c1379717bb09a6cd2bcabda2"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAzOTMxNTk3", "url": "https://github.com/apache/phoenix/pull/773#pullrequestreview-403931597", "createdAt": "2020-04-30T22:54:30Z", "commit": {"oid": "f42a7e5415ee2199c1379717bb09a6cd2bcabda2"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAzOTQwMTM1", "url": "https://github.com/apache/phoenix/pull/773#pullrequestreview-403940135", "createdAt": "2020-04-30T23:17:01Z", "commit": {"oid": "f42a7e5415ee2199c1379717bb09a6cd2bcabda2"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a632f187a25fa82be5cfd5c504cb62fc0d736a81", "author": {"user": null}, "url": "https://github.com/apache/phoenix/commit/a632f187a25fa82be5cfd5c504cb62fc0d736a81", "committedDate": "2020-05-01T16:51:20Z", "message": "PHOENIX-5874: IndexTool does not set TTL on its log tables correctly"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f42a7e5415ee2199c1379717bb09a6cd2bcabda2", "author": {"user": null}, "url": "https://github.com/apache/phoenix/commit/f42a7e5415ee2199c1379717bb09a6cd2bcabda2", "committedDate": "2020-04-30T22:22:16Z", "message": "Fixing review comments"}, "afterCommit": {"oid": "a632f187a25fa82be5cfd5c504cb62fc0d736a81", "author": {"user": null}, "url": "https://github.com/apache/phoenix/commit/a632f187a25fa82be5cfd5c504cb62fc0d736a81", "committedDate": "2020-05-01T16:51:20Z", "message": "PHOENIX-5874: IndexTool does not set TTL on its log tables correctly"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2017, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}