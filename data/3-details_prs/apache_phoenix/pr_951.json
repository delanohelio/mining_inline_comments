{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTEzODI5NDgz", "number": 951, "title": "PHOENIX-5895: Leverage WALCellFilter in the SystemCatalogWALEntryFilter to replicate system catalog table", "bodyText": "", "createdAt": "2020-11-02T06:39:40Z", "url": "https://github.com/apache/phoenix/pull/951", "merged": true, "mergeCommit": {"oid": "6cc9d5030da355abc6c8ab9eac9cc32097113e17"}, "closed": true, "closedAt": "2020-11-12T00:12:54Z", "author": {"login": "sandeepvinayak"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdYgTSlgFqTUyMTM4Nzc1NA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdbnKxLgBqjM5ODYxNzg4Njk=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIxMzg3NzU0", "url": "https://github.com/apache/phoenix/pull/951#pullrequestreview-521387754", "createdAt": "2020-11-02T07:42:13Z", "commit": {"oid": "5649d8ee01b2fb9d53a4a62a23b5e423957cbac0"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQwNzo0MjoxM1rOHr5ELQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQwODoyNzowMVrOHr6Sow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTc4NTc3Mw==", "bodyText": "nit: this could be filteredTenantEntry.getEdit().size()) ?", "url": "https://github.com/apache/phoenix/pull/951#discussion_r515785773", "createdAt": "2020-11-02T07:42:13Z", "author": {"login": "virajjasani"}, "path": "phoenix-core/src/it/java/org/apache/phoenix/replication/SystemCatalogWALEntryFilterIT.java", "diffHunk": "@@ -134,11 +135,16 @@ public void testSystemCatalogWALEntryFilter() throws Exception {\n \n     //verify that the tenant view WAL.Entry passes the filter and the non-tenant view does not\n     SystemCatalogWALEntryFilter filter = new SystemCatalogWALEntryFilter();\n-    Assert.assertNull(filter.filter(nonTenantEntry));\n-    WAL.Entry filteredTenantEntry = filter.filter(tenantEntry);\n+    // Chain the system catalog WAL entry filter to ChainWALEntryFilter\n+    ChainWALEntryFilter chainWALEntryFilter = new ChainWALEntryFilter(filter);\n+    // Asserting the WALEdit for non tenant has cells before getting filtered\n+    Assert.assertTrue(nonTenantEntry.getEdit().size() > 0);\n+    // All the cells will get removed by the filter since they do not belong to tenant\n+    Assert.assertTrue(\"Non tenant edits for system catalog got \", chainWALEntryFilter.filter(nonTenantEntry).getEdit().isEmpty());\n+    WAL.Entry filteredTenantEntry = chainWALEntryFilter.filter(tenantEntry);\n     Assert.assertNotNull(\"Tenant view was filtered when it shouldn't be!\", filteredTenantEntry);\n     Assert.assertEquals(tenantEntry.getEdit().size(),\n-        filter.filter(tenantEntry).getEdit().size());\n+        chainWALEntryFilter.filter(tenantEntry).getEdit().size());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5649d8ee01b2fb9d53a4a62a23b5e423957cbac0"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTc4NzM1OQ==", "bodyText": "Not related to this changes, but wondering if we need to construct ImmutableBytesWritable object.\nCan this method impl be reduced to:\n    return cell.getRowArray()[cell.getRowOffset()] != QueryConstants.SEPARATOR_BYTE;", "url": "https://github.com/apache/phoenix/pull/951#discussion_r515787359", "createdAt": "2020-11-02T07:46:07Z", "author": {"login": "virajjasani"}, "path": "phoenix-core/src/main/java/org/apache/phoenix/replication/SystemCatalogWALEntryFilter.java", "diffHunk": "@@ -35,30 +36,30 @@\n  * be copied. This WALEntryFilter will only allow tenant-owned rows in SYSTEM.CATALOG to\n  * be replicated. Data from all other tables is automatically passed.\n  */\n-public class SystemCatalogWALEntryFilter implements WALEntryFilter {\n+public class SystemCatalogWALEntryFilter implements WALEntryFilter, WALCellFilter {\n+  // This is an optimization to just skip the cell filter if we do not care about\n+  // cell filter for certain WALEdits.\n+  private boolean skipCellFilter;\n \n   @Override\n   public WAL.Entry filter(WAL.Entry entry) {\n-\n+    // We use the WALCellFilter to filter the cells from entry, WALEntryFilter\n+    // should not block anything\n     //if the WAL.Entry's table isn't System.Catalog or System.Child_Link, it auto-passes this filter\n-    //TODO: when Phoenix drops support for pre-1.3 versions of HBase, redo as a WALCellFilter\n     if (!SchemaUtil.isMetaTable(entry.getKey().getTableName().getName())){\n-      return entry;\n+      skipCellFilter = true;\n+    } else {\n+      skipCellFilter = false;\n     }\n+    return entry;\n+  }\n \n-    List<Cell> cells = entry.getEdit().getCells();\n-    List<Cell> cellsToRemove = Lists.newArrayList();\n-    for (Cell cell : cells) {\n-      if (!isTenantRowCell(cell)){\n-        cellsToRemove.add(cell);\n-      }\n-    }\n-    cells.removeAll(cellsToRemove);\n-    if (cells.size() > 0) {\n-      return entry;\n-    } else {\n-      return null;\n+  @Override\n+  public Cell filterCell(WAL.Entry entry, Cell cell) {\n+    if (skipCellFilter) {\n+      return cell;\n     }\n+    return isTenantRowCell(cell) ? cell : null;\n   }\n \n   private boolean isTenantRowCell(Cell cell) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5649d8ee01b2fb9d53a4a62a23b5e423957cbac0"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTgwNTg1OQ==", "bodyText": "nit: we can get rid of List and Lists imports", "url": "https://github.com/apache/phoenix/pull/951#discussion_r515805859", "createdAt": "2020-11-02T08:27:01Z", "author": {"login": "virajjasani"}, "path": "phoenix-core/src/main/java/org/apache/phoenix/replication/SystemCatalogWALEntryFilter.java", "diffHunk": "@@ -21,6 +21,7 @@\n \n import org.apache.hadoop.hbase.Cell;\n import org.apache.hadoop.hbase.io.ImmutableBytesWritable;\n+import org.apache.hadoop.hbase.replication.WALCellFilter;\n import org.apache.hadoop.hbase.replication.WALEntryFilter;\n import org.apache.hadoop.hbase.wal.WAL;\n import org.apache.phoenix.query.QueryConstants;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5649d8ee01b2fb9d53a4a62a23b5e423957cbac0"}, "originalPosition": 7}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIyMTA3Mjgz", "url": "https://github.com/apache/phoenix/pull/951#pullrequestreview-522107283", "createdAt": "2020-11-02T23:37:08Z", "commit": {"oid": "5649d8ee01b2fb9d53a4a62a23b5e423957cbac0"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQyMzozNzowOFrOHsajFw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQyMzozODowOFrOHsalIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjMzNDM1OQ==", "bodyText": "@virajjasani - yes, I believe that will work. ImmutableBytesWritable.get() just returns the underlying byte array", "url": "https://github.com/apache/phoenix/pull/951#discussion_r516334359", "createdAt": "2020-11-02T23:37:08Z", "author": {"login": "gjacoby126"}, "path": "phoenix-core/src/main/java/org/apache/phoenix/replication/SystemCatalogWALEntryFilter.java", "diffHunk": "@@ -35,30 +36,30 @@\n  * be copied. This WALEntryFilter will only allow tenant-owned rows in SYSTEM.CATALOG to\n  * be replicated. Data from all other tables is automatically passed.\n  */\n-public class SystemCatalogWALEntryFilter implements WALEntryFilter {\n+public class SystemCatalogWALEntryFilter implements WALEntryFilter, WALCellFilter {\n+  // This is an optimization to just skip the cell filter if we do not care about\n+  // cell filter for certain WALEdits.\n+  private boolean skipCellFilter;\n \n   @Override\n   public WAL.Entry filter(WAL.Entry entry) {\n-\n+    // We use the WALCellFilter to filter the cells from entry, WALEntryFilter\n+    // should not block anything\n     //if the WAL.Entry's table isn't System.Catalog or System.Child_Link, it auto-passes this filter\n-    //TODO: when Phoenix drops support for pre-1.3 versions of HBase, redo as a WALCellFilter\n     if (!SchemaUtil.isMetaTable(entry.getKey().getTableName().getName())){\n-      return entry;\n+      skipCellFilter = true;\n+    } else {\n+      skipCellFilter = false;\n     }\n+    return entry;\n+  }\n \n-    List<Cell> cells = entry.getEdit().getCells();\n-    List<Cell> cellsToRemove = Lists.newArrayList();\n-    for (Cell cell : cells) {\n-      if (!isTenantRowCell(cell)){\n-        cellsToRemove.add(cell);\n-      }\n-    }\n-    cells.removeAll(cellsToRemove);\n-    if (cells.size() > 0) {\n-      return entry;\n-    } else {\n-      return null;\n+  @Override\n+  public Cell filterCell(WAL.Entry entry, Cell cell) {\n+    if (skipCellFilter) {\n+      return cell;\n     }\n+    return isTenantRowCell(cell) ? cell : null;\n   }\n \n   private boolean isTenantRowCell(Cell cell) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTc4NzM1OQ=="}, "originalCommit": {"oid": "5649d8ee01b2fb9d53a4a62a23b5e423957cbac0"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjMzNDg4MQ==", "bodyText": "nit: system catalog get", "url": "https://github.com/apache/phoenix/pull/951#discussion_r516334881", "createdAt": "2020-11-02T23:38:08Z", "author": {"login": "gjacoby126"}, "path": "phoenix-core/src/it/java/org/apache/phoenix/replication/SystemCatalogWALEntryFilterIT.java", "diffHunk": "@@ -134,11 +135,16 @@ public void testSystemCatalogWALEntryFilter() throws Exception {\n \n     //verify that the tenant view WAL.Entry passes the filter and the non-tenant view does not\n     SystemCatalogWALEntryFilter filter = new SystemCatalogWALEntryFilter();\n-    Assert.assertNull(filter.filter(nonTenantEntry));\n-    WAL.Entry filteredTenantEntry = filter.filter(tenantEntry);\n+    // Chain the system catalog WAL entry filter to ChainWALEntryFilter\n+    ChainWALEntryFilter chainWALEntryFilter = new ChainWALEntryFilter(filter);\n+    // Asserting the WALEdit for non tenant has cells before getting filtered\n+    Assert.assertTrue(nonTenantEntry.getEdit().size() > 0);\n+    // All the cells will get removed by the filter since they do not belong to tenant\n+    Assert.assertTrue(\"Non tenant edits for system catalog got \", chainWALEntryFilter.filter(nonTenantEntry).getEdit().isEmpty());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5649d8ee01b2fb9d53a4a62a23b5e423957cbac0"}, "originalPosition": 19}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "58d881310aca857e57a61fd60ce1fa75ae624840", "author": {"user": null}, "url": "https://github.com/apache/phoenix/commit/58d881310aca857e57a61fd60ce1fa75ae624840", "committedDate": "2020-11-04T07:35:40Z", "message": "Addressing comments"}, "afterCommit": {"oid": "2373aa8fb73714efa83457d1c205cfe2e44d8f42", "author": {"user": null}, "url": "https://github.com/apache/phoenix/commit/2373aa8fb73714efa83457d1c205cfe2e44d8f42", "committedDate": "2020-11-04T07:38:54Z", "message": "Addressing comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIzMzIyNjI3", "url": "https://github.com/apache/phoenix/pull/951#pullrequestreview-523322627", "createdAt": "2020-11-04T12:40:18Z", "commit": {"oid": "2373aa8fb73714efa83457d1c205cfe2e44d8f42"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI2NzgyNTAx", "url": "https://github.com/apache/phoenix/pull/951#pullrequestreview-526782501", "createdAt": "2020-11-10T01:21:32Z", "commit": {"oid": "2373aa8fb73714efa83457d1c205cfe2e44d8f42"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI4NDc5NjQ2", "url": "https://github.com/apache/phoenix/pull/951#pullrequestreview-528479646", "createdAt": "2020-11-11T19:40:34Z", "commit": {"oid": "2373aa8fb73714efa83457d1c205cfe2e44d8f42"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2373aa8fb73714efa83457d1c205cfe2e44d8f42", "author": {"user": null}, "url": "https://github.com/apache/phoenix/commit/2373aa8fb73714efa83457d1c205cfe2e44d8f42", "committedDate": "2020-11-04T07:38:54Z", "message": "Addressing comments"}, "afterCommit": {"oid": "5eee6352d19494cf2e10c5d67307dd16acfcda32", "author": {"user": null}, "url": "https://github.com/apache/phoenix/commit/5eee6352d19494cf2e10c5d67307dd16acfcda32", "committedDate": "2020-11-12T00:08:03Z", "message": "Leverage WALCellFilter in the SystemCatalogWALEntryFilter to replicate system catalog table"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "eb8ff61dc6bc2ca666a2fd01d8a09b578cbea804", "author": {"user": null}, "url": "https://github.com/apache/phoenix/commit/eb8ff61dc6bc2ca666a2fd01d8a09b578cbea804", "committedDate": "2020-11-12T00:10:41Z", "message": "PHOENIX-5895 Leverage WALCellFilter in the SystemCatalogWALEntryFilter to replicate system catalog table"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5eee6352d19494cf2e10c5d67307dd16acfcda32", "author": {"user": null}, "url": "https://github.com/apache/phoenix/commit/5eee6352d19494cf2e10c5d67307dd16acfcda32", "committedDate": "2020-11-12T00:08:03Z", "message": "Leverage WALCellFilter in the SystemCatalogWALEntryFilter to replicate system catalog table"}, "afterCommit": {"oid": "eb8ff61dc6bc2ca666a2fd01d8a09b578cbea804", "author": {"user": null}, "url": "https://github.com/apache/phoenix/commit/eb8ff61dc6bc2ca666a2fd01d8a09b578cbea804", "committedDate": "2020-11-12T00:10:41Z", "message": "PHOENIX-5895 Leverage WALCellFilter in the SystemCatalogWALEntryFilter to replicate system catalog table"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1825, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}