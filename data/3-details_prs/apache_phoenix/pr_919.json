{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAyMzEwNTcx", "number": 919, "title": "PHOENIX-6185 : Propagate info available in SQLExceptionInfo to SQLTimeoutException", "bodyText": "", "createdAt": "2020-10-13T13:26:42Z", "url": "https://github.com/apache/phoenix/pull/919", "merged": true, "mergeCommit": {"oid": "178484853f82c7556946ad954d9b146f2882399e"}, "closed": true, "closedAt": "2020-10-16T18:24:07Z", "author": {"login": "virajjasani"}, "timelineItems": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdSIjX6gH2gAyNTAyMzEwNTcxOjdiODI5ODk4YjJmMjU5OGE5NDQ2ZDYyZjU5ZmY2MmEyM2EwNzkxYTA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdTGTefAH2gAyNTAyMzEwNTcxOjY1MDkxMmJhMWJkY2M4OTAyMDFjMmU5ZjcyYWU1ZDZlMTZlNmUzZDU=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "7b829898b2f2598a9446d62f59ff62a23a0791a0", "author": {"user": {"login": "virajjasani", "name": "Viraj Jasani"}}, "url": "https://github.com/apache/phoenix/commit/7b829898b2f2598a9446d62f59ff62a23a0791a0", "committedDate": "2020-10-13T13:25:45Z", "message": "PHOENIX-6185 : Propagate info available in SQLExceptionInfo to OPERATION_TIMED_OUT"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA3NDUxNTk1", "url": "https://github.com/apache/phoenix/pull/919#pullrequestreview-507451595", "createdAt": "2020-10-13T13:44:46Z", "commit": {"oid": "7b829898b2f2598a9446d62f59ff62a23a0791a0"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "185654888a2e596b1f807bee73ed3aef42110448", "author": {"user": {"login": "virajjasani", "name": "Viraj Jasani"}}, "url": "https://github.com/apache/phoenix/commit/185654888a2e596b1f807bee73ed3aef42110448", "committedDate": "2020-10-15T15:04:17Z", "message": "fixing checkstyle"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA5NDkwMjA2", "url": "https://github.com/apache/phoenix/pull/919#pullrequestreview-509490206", "createdAt": "2020-10-15T15:12:27Z", "commit": {"oid": "185654888a2e596b1f807bee73ed3aef42110448"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxNToxMjoyOFrOHiM4cQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxNToxMjoyOFrOHiM4cQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTYyNDY4OQ==", "bodyText": "info.getMessage() != null ? info.getMessage() : \"\"\n\nIn else condition, can we use OPERATION_TIMED_OUT.getMessage(). Atleast we will know it was operation timed out.", "url": "https://github.com/apache/phoenix/pull/919#discussion_r505624689", "createdAt": "2020-10-15T15:12:28Z", "author": {"login": "shahrs87"}, "path": "phoenix-core/src/main/java/org/apache/phoenix/exception/SQLExceptionCode.java", "diffHunk": "@@ -453,8 +453,13 @@ public SQLException newException(SQLExceptionInfo info) {\n     OPERATION_TIMED_OUT(6000, \"TIM01\", \"Operation timed out.\", new Factory() {\n         @Override\n         public SQLException newException(SQLExceptionInfo info) {\n-            return new SQLTimeoutException(OPERATION_TIMED_OUT.getMessage(),\n-                    OPERATION_TIMED_OUT.getSQLState(), OPERATION_TIMED_OUT.getErrorCode());\n+            final String reason =\n+                (info.getMessage() != null ? info.getMessage() : \"\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "185654888a2e596b1f807bee73ed3aef42110448"}, "originalPosition": 7}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA5NDkwNTkx", "url": "https://github.com/apache/phoenix/pull/919#pullrequestreview-509490591", "createdAt": "2020-10-15T15:12:49Z", "commit": {"oid": "185654888a2e596b1f807bee73ed3aef42110448"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA5NTAwODAy", "url": "https://github.com/apache/phoenix/pull/919#pullrequestreview-509500802", "createdAt": "2020-10-15T15:23:17Z", "commit": {"oid": "185654888a2e596b1f807bee73ed3aef42110448"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxNToyMzoxN1rOHiNX0Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxNToyMzoxN1rOHiNX0Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTYzMjcyMQ==", "bodyText": "Sorry missed this in my previous review.\nIf there is root cause exception present, you should use this constructor to create SQLtimeoutException\npublic SQLTimeoutException(String reason,\n                   String SQLState,\n                   int vendorCode,\n                   Throwable cause)", "url": "https://github.com/apache/phoenix/pull/919#discussion_r505632721", "createdAt": "2020-10-15T15:23:17Z", "author": {"login": "shahrs87"}, "path": "phoenix-core/src/main/java/org/apache/phoenix/exception/SQLExceptionCode.java", "diffHunk": "@@ -453,8 +453,13 @@ public SQLException newException(SQLExceptionInfo info) {\n     OPERATION_TIMED_OUT(6000, \"TIM01\", \"Operation timed out.\", new Factory() {\n         @Override\n         public SQLException newException(SQLExceptionInfo info) {\n-            return new SQLTimeoutException(OPERATION_TIMED_OUT.getMessage(),\n-                    OPERATION_TIMED_OUT.getSQLState(), OPERATION_TIMED_OUT.getErrorCode());\n+            final String reason =\n+                (info.getMessage() != null ? info.getMessage() : \"\")\n+                    + (info.getRootCause() != null ? \" , rootCause: \"\n+                    + info.getRootCause() : \"\");\n+            return new SQLTimeoutException(reason,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "185654888a2e596b1f807bee73ed3aef42110448"}, "originalPosition": 10}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ce86a9076b88cb778ae91582eceea486cdf088f7", "author": {"user": {"login": "virajjasani", "name": "Viraj Jasani"}}, "url": "https://github.com/apache/phoenix/commit/ce86a9076b88cb778ae91582eceea486cdf088f7", "committedDate": "2020-10-15T15:34:27Z", "message": "incorporating review"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA5NjE4NjM4", "url": "https://github.com/apache/phoenix/pull/919#pullrequestreview-509618638", "createdAt": "2020-10-15T17:38:54Z", "commit": {"oid": "ce86a9076b88cb778ae91582eceea486cdf088f7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxNzozODo1NFrOHiS3Jg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxNzozODo1NFrOHiS3Jg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTcyMjY2Mg==", "bodyText": "Should we check that e.getCause() != null ?", "url": "https://github.com/apache/phoenix/pull/919#discussion_r505722662", "createdAt": "2020-10-15T17:38:54Z", "author": {"login": "shahrs87"}, "path": "phoenix-core/src/it/java/org/apache/phoenix/end2end/OperationTimeoutWithReasonIT.java", "diffHunk": "@@ -0,0 +1,98 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.phoenix.end2end;\n+\n+import org.apache.phoenix.util.EnvironmentEdge;\n+import org.apache.phoenix.util.EnvironmentEdgeManager;\n+import org.junit.Test;\n+\n+import java.sql.Connection;\n+import java.sql.DriverManager;\n+import java.sql.PreparedStatement;\n+import java.sql.ResultSet;\n+import java.sql.SQLException;\n+import java.sql.Statement;\n+\n+import static org.apache.phoenix.exception.SQLExceptionCode.OPERATION_TIMED_OUT;\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertTrue;\n+import static org.junit.Assert.fail;\n+\n+public class OperationTimeoutWithReasonIT extends ParallelStatsDisabledIT {\n+\n+    private static final class MyClock extends EnvironmentEdge {\n+        private long time;\n+        private final long delay;\n+\n+        public MyClock (long time, long delay) {\n+            this.time = time;\n+            this.delay = delay;\n+        }\n+\n+        @Override\n+        public long currentTime() {\n+            long currentTime = this.time;\n+            this.time += this.delay;\n+            return currentTime;\n+        }\n+    }\n+\n+    @Test\n+    public void testOperationTimeout() throws SQLException {\n+        final String tableName = generateUniqueName();\n+        final String ddl = \"CREATE TABLE \" + tableName\n+            + \" (COL1 VARCHAR NOT NULL PRIMARY KEY, COL2 VARCHAR)\";\n+        try (Connection conn = DriverManager.getConnection(getUrl());\n+                 Statement stmt = conn.createStatement()) {\n+            stmt.execute(ddl);\n+            final String dml = String.format(\"UPSERT INTO %s VALUES (?, ?)\",\n+                tableName);\n+            try(PreparedStatement prepStmt = conn.prepareStatement(dml)) {\n+                for (int i = 1; i <= 100; i++) {\n+                    prepStmt.setString(1, \"key\" + i);\n+                    prepStmt.setString(2, \"value\" + i);\n+                    prepStmt.executeUpdate();\n+                }\n+            }\n+            conn.commit();\n+        }\n+\n+        try (Connection conn = DriverManager.getConnection(getUrl());\n+             Statement stmt = conn.createStatement()) {\n+            stmt.setQueryTimeout(5); // 5 sec\n+            ResultSet rs = stmt.executeQuery(String.format(\"SELECT * FROM %s\",\n+                tableName));\n+            // Use custom EnvironmentEdge to timeout query with a longer delay in ms\n+            MyClock clock = new MyClock(10, 10000);\n+            EnvironmentEdgeManager.injectEdge(clock);\n+            try {\n+                rs.next();\n+                fail();\n+            } catch (SQLException e) {\n+                assertEquals(OPERATION_TIMED_OUT.getErrorCode(),\n+                    e.getErrorCode());\n+                assertTrue(e.getMessage().contains(\"Query couldn't be \" +\n+                    \"completed in the allotted time: 5000 ms\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ce86a9076b88cb778ae91582eceea486cdf088f7"}, "originalPosition": 91}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA5NjYyMTA0", "url": "https://github.com/apache/phoenix/pull/919#pullrequestreview-509662104", "createdAt": "2020-10-15T18:34:01Z", "commit": {"oid": "4b54804dee6df883f06b0d714185951e712fa83c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxODozNDowMVrOHiVBOg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxODozNDowMVrOHiVBOg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTc1ODAxMA==", "bodyText": "Do we use exceptions from this package anywhere else ? Haven't come across this library. Can we add some generic exception ?", "url": "https://github.com/apache/phoenix/pull/919#discussion_r505758010", "createdAt": "2020-10-15T18:34:01Z", "author": {"login": "shahrs87"}, "path": "phoenix-core/src/test/java/org/apache/phoenix/util/SQLExceptionCodeTest.java", "diffHunk": "@@ -0,0 +1,59 @@\n+/*\n+ *  Licensed to the Apache Software Foundation (ASF) under one or more\n+ *  contributor license agreements.  See the NOTICE file distributed with\n+ *  this work for additional information regarding copyright ownership.\n+ *  The ASF licenses this file to You under the Apache License, Version 2.0\n+ *  (the \"License\"); you may not use this file except in compliance with\n+ *  the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+\n+package org.apache.phoenix.util;\n+\n+import com.sun.javaws.exceptions.InvalidArgumentException;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4b54804dee6df883f06b0d714185951e712fa83c"}, "originalPosition": 20}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4b54804dee6df883f06b0d714185951e712fa83c", "author": {"user": {"login": "virajjasani", "name": "Viraj Jasani"}}, "url": "https://github.com/apache/phoenix/commit/4b54804dee6df883f06b0d714185951e712fa83c", "committedDate": "2020-10-15T18:28:30Z", "message": "adding unit test"}, "afterCommit": {"oid": "a37c3381d215ed5bceacea28fef458f10f57a1b8", "author": {"user": {"login": "virajjasani", "name": "Viraj Jasani"}}, "url": "https://github.com/apache/phoenix/commit/a37c3381d215ed5bceacea28fef458f10f57a1b8", "committedDate": "2020-10-15T18:37:38Z", "message": "adding unit test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2e7e2265753831718c429b5b213e989393be93e2", "author": {"user": {"login": "virajjasani", "name": "Viraj Jasani"}}, "url": "https://github.com/apache/phoenix/commit/2e7e2265753831718c429b5b213e989393be93e2", "committedDate": "2020-10-15T18:39:41Z", "message": "adding unit test"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA5NjY2Mjk0", "url": "https://github.com/apache/phoenix/pull/919#pullrequestreview-509666294", "createdAt": "2020-10-15T18:39:48Z", "commit": {"oid": "a37c3381d215ed5bceacea28fef458f10f57a1b8"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a37c3381d215ed5bceacea28fef458f10f57a1b8", "author": {"user": {"login": "virajjasani", "name": "Viraj Jasani"}}, "url": "https://github.com/apache/phoenix/commit/a37c3381d215ed5bceacea28fef458f10f57a1b8", "committedDate": "2020-10-15T18:37:38Z", "message": "adding unit test"}, "afterCommit": {"oid": "2e7e2265753831718c429b5b213e989393be93e2", "author": {"user": {"login": "virajjasani", "name": "Viraj Jasani"}}, "url": "https://github.com/apache/phoenix/commit/2e7e2265753831718c429b5b213e989393be93e2", "committedDate": "2020-10-15T18:39:41Z", "message": "adding unit test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "650912ba1bdcc890201c2e9f72ae5d6e16e6e3d5", "author": {"user": {"login": "virajjasani", "name": "Viraj Jasani"}}, "url": "https://github.com/apache/phoenix/commit/650912ba1bdcc890201c2e9f72ae5d6e16e6e3d5", "committedDate": "2020-10-16T13:22:30Z", "message": "Merge branch 'master' of github.com:apache/phoenix into PHOENIX-6185-master"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1950, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}