{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI0MTYyMDc1", "number": 790, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QyMzo0MTowOFrOEAT9bA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QyMzo0MzoyOFrOEAT_RQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4NzYyNDc2OnYy", "diffSide": "RIGHT", "path": "phoenix-core/src/main/java/org/apache/phoenix/mapreduce/index/IndexUpgradeTool.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QyMzo0MTowOVrOGbg3bg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQwMToyMzo0N1rOGbik2Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTUwMzIxNA==", "bodyText": "Nit: comment", "url": "https://github.com/apache/phoenix/pull/790#discussion_r431503214", "createdAt": "2020-05-27T23:41:09Z", "author": {"login": "abhishek-chouhan"}, "path": "phoenix-core/src/main/java/org/apache/phoenix/mapreduce/index/IndexUpgradeTool.java", "diffHunk": "@@ -463,14 +489,20 @@ private void handleFailure(ConnectionQueryServices queryServices,\n             upgrade = !upgrade;\n \n             tablesAndIndexes.remove(dataTableFullName); //removing from the map\n-            tableList.remove(dataTableFullName); //removing from the list\n+            failedTables.add(dataTableFullName); //removing from the list", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "353b2640d6e4ba80c77bf76b15eb22931620310e"}, "originalPosition": 142}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTUzMTIyNQ==", "bodyText": "Fixed", "url": "https://github.com/apache/phoenix/pull/790#discussion_r431531225", "createdAt": "2020-05-28T01:23:47Z", "author": {"login": "gjacoby126"}, "path": "phoenix-core/src/main/java/org/apache/phoenix/mapreduce/index/IndexUpgradeTool.java", "diffHunk": "@@ -463,14 +489,20 @@ private void handleFailure(ConnectionQueryServices queryServices,\n             upgrade = !upgrade;\n \n             tablesAndIndexes.remove(dataTableFullName); //removing from the map\n-            tableList.remove(dataTableFullName); //removing from the list\n+            failedTables.add(dataTableFullName); //removing from the list", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTUwMzIxNA=="}, "originalCommit": {"oid": "353b2640d6e4ba80c77bf76b15eb22931620310e"}, "originalPosition": 142}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4NzYyOTQ5OnYy", "diffSide": "RIGHT", "path": "phoenix-core/src/main/java/org/apache/phoenix/mapreduce/index/IndexUpgradeTool.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QyMzo0MzoyOFrOGbg6ZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQwMToyMzozOFrOGbiksw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTUwMzk3Mw==", "bodyText": "Should we just catch throwable here(and in the mutable case), so that we cover errors too? in all cases i guess we want the tables to be enabled back.", "url": "https://github.com/apache/phoenix/pull/790#discussion_r431503973", "createdAt": "2020-05-27T23:43:28Z", "author": {"login": "abhishek-chouhan"}, "path": "phoenix-core/src/main/java/org/apache/phoenix/mapreduce/index/IndexUpgradeTool.java", "diffHunk": "@@ -398,28 +414,34 @@ private int executeTool(Connection conn,\n         executeToolForMutableTables(conn, queryServices, conf, mutableList);\n         enableImmutableTables(queryServices, immutableList, startWaitTime);\n         rebuildIndexes(conn, conf, immutableList);\n-        return 0;\n+        if (hasFailure) {\n+            return -1;\n+        } else {\n+            return 0;\n+        }\n     }\n \n     private long executeToolForImmutableTables(ConnectionQueryServices queryServices,\n-            ArrayList<String> immutableList) {\n+            List<String> immutableList) {\n         if (immutableList.isEmpty()) {\n             return 0;\n         }\n         LOGGER.info(\"Started \" + operation + \" for immutable tables\");\n+        List<String> failedTables = new ArrayList<String>();\n         for (String dataTableFullName : immutableList) {\n             try (Admin admin = queryServices.getAdmin()) {\n                 HashSet<String> indexes = tablesAndIndexes.get(dataTableFullName);\n                 LOGGER.info(\"Executing \" + operation + \" of \" + dataTableFullName\n                         + \" (immutable)\");\n                 disableTable(admin, dataTableFullName, indexes);\n                 modifyTable(admin, dataTableFullName, indexes);\n-            } catch (IOException | SQLException e) {\n+            } catch (IOException | SQLException | RuntimeException e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "353b2640d6e4ba80c77bf76b15eb22931620310e"}, "originalPosition": 92}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTUzMTE4Nw==", "bodyText": "Done", "url": "https://github.com/apache/phoenix/pull/790#discussion_r431531187", "createdAt": "2020-05-28T01:23:38Z", "author": {"login": "gjacoby126"}, "path": "phoenix-core/src/main/java/org/apache/phoenix/mapreduce/index/IndexUpgradeTool.java", "diffHunk": "@@ -398,28 +414,34 @@ private int executeTool(Connection conn,\n         executeToolForMutableTables(conn, queryServices, conf, mutableList);\n         enableImmutableTables(queryServices, immutableList, startWaitTime);\n         rebuildIndexes(conn, conf, immutableList);\n-        return 0;\n+        if (hasFailure) {\n+            return -1;\n+        } else {\n+            return 0;\n+        }\n     }\n \n     private long executeToolForImmutableTables(ConnectionQueryServices queryServices,\n-            ArrayList<String> immutableList) {\n+            List<String> immutableList) {\n         if (immutableList.isEmpty()) {\n             return 0;\n         }\n         LOGGER.info(\"Started \" + operation + \" for immutable tables\");\n+        List<String> failedTables = new ArrayList<String>();\n         for (String dataTableFullName : immutableList) {\n             try (Admin admin = queryServices.getAdmin()) {\n                 HashSet<String> indexes = tablesAndIndexes.get(dataTableFullName);\n                 LOGGER.info(\"Executing \" + operation + \" of \" + dataTableFullName\n                         + \" (immutable)\");\n                 disableTable(admin, dataTableFullName, indexes);\n                 modifyTable(admin, dataTableFullName, indexes);\n-            } catch (IOException | SQLException e) {\n+            } catch (IOException | SQLException | RuntimeException e) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTUwMzk3Mw=="}, "originalCommit": {"oid": "353b2640d6e4ba80c77bf76b15eb22931620310e"}, "originalPosition": 92}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4664, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}