{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA5MTAxMjgz", "number": 937, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QxNzoyNTo1NVrOExS4vA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQyMjowNTowMlrOEzf8-w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIwMTI1MTE2OnYy", "diffSide": "RIGHT", "path": "phoenix-core/src/main/java/org/apache/phoenix/mapreduce/index/IndexTool.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QxNzoyNTo1NVrOHnW5BQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QxOToxMzoyOVrOHnatMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTAzMTU1Nw==", "bodyText": "nit: We have a similar enum in the IndexScrutinyTool. Can we re use it?", "url": "https://github.com/apache/phoenix/pull/937#discussion_r511031557", "createdAt": "2020-10-23T17:25:55Z", "author": {"login": "gokceni"}, "path": "phoenix-core/src/main/java/org/apache/phoenix/mapreduce/index/IndexTool.java", "diffHunk": "@@ -192,6 +191,14 @@ public static IndexDisableLoggingType fromValue(byte[] value) {\n         }\n     }\n \n+    /**\n+     * Which table to use as the source table\n+     */\n+    public enum SourceTable {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba2f5a01b834e5e0a2100be5ce57a5938132e345"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTA4OTc2MQ==", "bodyText": "It has a BOTH option which is not supported that is why I didn't want to use it.", "url": "https://github.com/apache/phoenix/pull/937#discussion_r511089761", "createdAt": "2020-10-23T19:07:58Z", "author": {"login": "tkhurana"}, "path": "phoenix-core/src/main/java/org/apache/phoenix/mapreduce/index/IndexTool.java", "diffHunk": "@@ -192,6 +191,14 @@ public static IndexDisableLoggingType fromValue(byte[] value) {\n         }\n     }\n \n+    /**\n+     * Which table to use as the source table\n+     */\n+    public enum SourceTable {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTAzMTU1Nw=="}, "originalCommit": {"oid": "ba2f5a01b834e5e0a2100be5ce57a5938132e345"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTA5NDA2Ng==", "bodyText": "I agree with Gokcen, does not hurt to use it. In the future, we may want to use both. Would be a good extension.", "url": "https://github.com/apache/phoenix/pull/937#discussion_r511094066", "createdAt": "2020-10-23T19:13:29Z", "author": {"login": "swaroopak"}, "path": "phoenix-core/src/main/java/org/apache/phoenix/mapreduce/index/IndexTool.java", "diffHunk": "@@ -192,6 +191,14 @@ public static IndexDisableLoggingType fromValue(byte[] value) {\n         }\n     }\n \n+    /**\n+     * Which table to use as the source table\n+     */\n+    public enum SourceTable {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTAzMTU1Nw=="}, "originalCommit": {"oid": "ba2f5a01b834e5e0a2100be5ce57a5938132e345"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIwMTI2MDU4OnYy", "diffSide": "RIGHT", "path": "phoenix-core/src/main/java/org/apache/phoenix/mapreduce/index/IndexTool.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QxNzoyODo0OFrOHnW-uA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QxNzoyODo0OFrOHnW-uA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTAzMzAxNg==", "bodyText": "I think stating this is clearer: This option is applicable only when -v ONLY or -v BEFORE is provided.", "url": "https://github.com/apache/phoenix/pull/937#discussion_r511033016", "createdAt": "2020-10-23T17:28:48Z", "author": {"login": "gokceni"}, "path": "phoenix-core/src/main/java/org/apache/phoenix/mapreduce/index/IndexTool.java", "diffHunk": "@@ -285,6 +293,11 @@ public static IndexDisableLoggingType fromValue(byte[] value) {\n         , \"Disable logging of failed verification rows for BEFORE, \" +\n         \"AFTER, or BOTH verify jobs\");\n \n+    private static final Option USE_INDEX_TABLE_AS_SOURCE_OPTION =\n+        new Option(\"fi\", \"from-index\", false,\n+            \"To verify every row in the index table has a corresponding row in the data table. \" +\n+                \"Only supported for global indexes. This option is applicable to BEFORE and ONLY type verification jobs\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba2f5a01b834e5e0a2100be5ce57a5938132e345"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyNDM2MzQ3OnYy", "diffSide": "RIGHT", "path": "phoenix-core/src/main/java/org/apache/phoenix/mapreduce/util/PhoenixConfigurationUtil.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQyMjowNTowMlrOHqwXPQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQyMjoxNzo0NlrOHqwrBw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDU5NDYyMQ==", "bodyText": "IndexScrutinyTool.SourceTable.DATA_TABLE_SOURCE.name() the default value?", "url": "https://github.com/apache/phoenix/pull/937#discussion_r514594621", "createdAt": "2020-10-29T22:05:02Z", "author": {"login": "priyankporwal"}, "path": "phoenix-core/src/main/java/org/apache/phoenix/mapreduce/util/PhoenixConfigurationUtil.java", "diffHunk": "@@ -660,6 +663,19 @@ public static String getIndexToolIndexTableName(Configuration configuration) {\n         return configuration.get(INDEX_TOOL_INDEX_TABLE_NAME);\n     }\n \n+    public static void setIndexToolSourceTable(Configuration configuration,\n+            IndexScrutinyTool.SourceTable sourceTable) {\n+        Preconditions.checkNotNull(configuration);\n+        Preconditions.checkNotNull(sourceTable);\n+        configuration.set(INDEX_TOOL_SOURCE_TABLE, sourceTable.name());\n+    }\n+\n+    public static IndexScrutinyTool.SourceTable getIndexToolSourceTable(Configuration configuration) {\n+        Preconditions.checkNotNull(configuration);\n+        return IndexScrutinyTool.SourceTable.valueOf(configuration.get(INDEX_TOOL_SOURCE_TABLE,\n+            IndexScrutinyTool.SourceTable.DATA_TABLE_SOURCE.name()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9d77d0121c67e27ec84420fe2a829f2ddcee5de0"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDU5OTY4Nw==", "bodyText": "By default, we are going to use the data table as the source which is what the current behavior is. We have to return a string from which the appropriate enum is constructed. I am not sure what is the question here.", "url": "https://github.com/apache/phoenix/pull/937#discussion_r514599687", "createdAt": "2020-10-29T22:17:46Z", "author": {"login": "tkhurana"}, "path": "phoenix-core/src/main/java/org/apache/phoenix/mapreduce/util/PhoenixConfigurationUtil.java", "diffHunk": "@@ -660,6 +663,19 @@ public static String getIndexToolIndexTableName(Configuration configuration) {\n         return configuration.get(INDEX_TOOL_INDEX_TABLE_NAME);\n     }\n \n+    public static void setIndexToolSourceTable(Configuration configuration,\n+            IndexScrutinyTool.SourceTable sourceTable) {\n+        Preconditions.checkNotNull(configuration);\n+        Preconditions.checkNotNull(sourceTable);\n+        configuration.set(INDEX_TOOL_SOURCE_TABLE, sourceTable.name());\n+    }\n+\n+    public static IndexScrutinyTool.SourceTable getIndexToolSourceTable(Configuration configuration) {\n+        Preconditions.checkNotNull(configuration);\n+        return IndexScrutinyTool.SourceTable.valueOf(configuration.get(INDEX_TOOL_SOURCE_TABLE,\n+            IndexScrutinyTool.SourceTable.DATA_TABLE_SOURCE.name()));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDU5NDYyMQ=="}, "originalCommit": {"oid": "9d77d0121c67e27ec84420fe2a829f2ddcee5de0"}, "originalPosition": 31}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4550, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}