{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY5MDY5ODY4", "number": 860, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QyMzozMDo1MFrOEZQaPA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQxOTo1ODowNVrOEar5Kw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk0OTE4NzE2OnYy", "diffSide": "RIGHT", "path": "phoenix-core/src/main/java/org/apache/phoenix/coprocessor/IndexRebuildRegionScanner.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QyMzozMDo1MFrOHB-Mag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQwMDowMToxMVrOHB-urA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTgyOTYxMA==", "bodyText": "@swaroopak - do we need the region.closeRegionOperation() and localScanner.close() calls? They appear to already be called in the finally block, which will execute even if we return false early. And a finally block seems like a safer place for them so some other code path doesn't miss them in the future.", "url": "https://github.com/apache/phoenix/pull/860#discussion_r471829610", "createdAt": "2020-08-17T23:30:50Z", "author": {"login": "gjacoby126"}, "path": "phoenix-core/src/main/java/org/apache/phoenix/coprocessor/IndexRebuildRegionScanner.java", "diffHunk": "@@ -1301,11 +1301,24 @@ public boolean next(List<Cell> results) throws IOException {\n         try {\n             localScanner = getLocalScanner();\n             if (localScanner == null) {\n+                region.closeRegionOperation();\n                 return false;\n             }\n             synchronized (localScanner) {\n                 if (!shouldVerify()) {\n                     skipped = true;\n+                    region.closeRegionOperation();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c80c1cfe3b87f1f5d582c241be08705ec08cd62c"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTgzODM4MA==", "bodyText": "As I stated before, the fix is to check the isRegionClosingOrSplitting attribute of the UngroupedAggregateRegionObserver coproc and return an IOException after every scanner next or table batch operation done during index rebuild or verification if  the region is closing or splitting.", "url": "https://github.com/apache/phoenix/pull/860#discussion_r471838380", "createdAt": "2020-08-18T00:01:11Z", "author": {"login": "kadirozde"}, "path": "phoenix-core/src/main/java/org/apache/phoenix/coprocessor/IndexRebuildRegionScanner.java", "diffHunk": "@@ -1301,11 +1301,24 @@ public boolean next(List<Cell> results) throws IOException {\n         try {\n             localScanner = getLocalScanner();\n             if (localScanner == null) {\n+                region.closeRegionOperation();\n                 return false;\n             }\n             synchronized (localScanner) {\n                 if (!shouldVerify()) {\n                     skipped = true;\n+                    region.closeRegionOperation();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTgyOTYxMA=="}, "originalCommit": {"oid": "c80c1cfe3b87f1f5d582c241be08705ec08cd62c"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2NDE3NTc5OnYy", "diffSide": "RIGHT", "path": "phoenix-core/src/main/java/org/apache/phoenix/coprocessor/IndexRebuildRegionScanner.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQxOTo1ODowNVrOHERPNg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQxOTo1OTo0NFrOHERSbg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDIzODc3NA==", "bodyText": "You missed the for loop before this (line 903)", "url": "https://github.com/apache/phoenix/pull/860#discussion_r474238774", "createdAt": "2020-08-20T19:58:05Z", "author": {"login": "kadirozde"}, "path": "phoenix-core/src/main/java/org/apache/phoenix/coprocessor/IndexRebuildRegionScanner.java", "diffHunk": "@@ -899,6 +906,7 @@ private void rebuildIndexRows(Map<byte[], List<Mutation>> indexKeyToMutationMap,\n                 }\n             }\n             if (batchSize > 0) {\n+                ungroupedAggregateRegionObserver.checkForRegionClosing();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d7477ed617fa033fff26ff2b0571521ef53bb41e"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDIzOTU5OA==", "bodyText": "good catch! Thanks!", "url": "https://github.com/apache/phoenix/pull/860#discussion_r474239598", "createdAt": "2020-08-20T19:59:44Z", "author": {"login": "swaroopak"}, "path": "phoenix-core/src/main/java/org/apache/phoenix/coprocessor/IndexRebuildRegionScanner.java", "diffHunk": "@@ -899,6 +906,7 @@ private void rebuildIndexRows(Map<byte[], List<Mutation>> indexKeyToMutationMap,\n                 }\n             }\n             if (batchSize > 0) {\n+                ungroupedAggregateRegionObserver.checkForRegionClosing();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDIzODc3NA=="}, "originalCommit": {"oid": "d7477ed617fa033fff26ff2b0571521ef53bb41e"}, "originalPosition": 49}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4589, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}