{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA0MDk0MTEz", "number": 923, "title": "PHOENIX-6125 : Disable region split for SYSTEM.TASK", "bodyText": "", "createdAt": "2020-10-15T13:12:22Z", "url": "https://github.com/apache/phoenix/pull/923", "merged": true, "mergeCommit": {"oid": "370d8edd995c1e6c94a62401a37f9b89884866d7"}, "closed": true, "closedAt": "2020-10-19T18:48:51Z", "author": {"login": "virajjasani"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdS49nBgFqTUwOTgyNDgyNw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdUHXLDAFqTUxMTk3OTIzMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA5ODI0ODI3", "url": "https://github.com/apache/phoenix/pull/923#pullrequestreview-509824827", "createdAt": "2020-10-15T21:32:34Z", "commit": {"oid": "09a5b2b6f20d7d6d430d2b9859c7bf55df5fa0c7"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQyMTozMjozNFrOHib_PQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQyMTozNzoxOFrOHicM_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTg3MjE4OQ==", "bodyText": "Do we really need a separate IT for this? There is an existing IT that uses the upgrade counting driver and services. Let's reuse that instead", "url": "https://github.com/apache/phoenix/pull/923#discussion_r505872189", "createdAt": "2020-10-15T21:32:34Z", "author": {"login": "ChinmaySKulkarni"}, "path": "phoenix-core/src/it/java/org/apache/phoenix/end2end/DisableSplitForTaskTableIT.java", "diffHunk": "@@ -0,0 +1,134 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.phoenix.end2end;\n+\n+import org.apache.hadoop.hbase.TableName;\n+import org.apache.hadoop.hbase.client.Admin;\n+import org.apache.hadoop.hbase.regionserver.DisabledRegionSplitPolicy;\n+import org.apache.phoenix.coprocessor.MetaDataProtocol;\n+import org.apache.phoenix.jdbc.PhoenixConnection;\n+import org.apache.phoenix.jdbc.PhoenixDatabaseMetaData;\n+import org.apache.phoenix.jdbc.PhoenixEmbeddedDriver;\n+import org.apache.phoenix.jdbc.PhoenixTestDriver;\n+import org.apache.phoenix.query.BaseTest;\n+import org.apache.phoenix.query.ConnectionQueryServices;\n+import org.apache.phoenix.query.ConnectionQueryServicesImpl;\n+import org.apache.phoenix.query.QueryServices;\n+import org.apache.phoenix.query.QueryServicesTestImpl;\n+import org.apache.phoenix.thirdparty.com.google.common.collect.Maps;\n+import org.apache.phoenix.util.ReadOnlyProps;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+\n+import java.sql.DriverManager;\n+import java.sql.SQLException;\n+import java.util.Map;\n+import java.util.Properties;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertTrue;\n+\n+public class DisableSplitForTaskTableIT extends BaseTest {\n+\n+    private static boolean reinitialize;\n+    private static long systemTableVersion = MetaDataProtocol.getPriorVersion();\n+\n+    private static class PhoenixUpgradeCountingServices\n+            extends ConnectionQueryServicesImpl {\n+\n+        public PhoenixUpgradeCountingServices(\n+                QueryServices services,\n+                PhoenixEmbeddedDriver.ConnectionInfo connectionInfo,\n+                Properties info) {\n+            super(services, connectionInfo, info);\n+        }\n+\n+        @Override\n+        protected void setUpgradeRequired() {\n+            super.setUpgradeRequired();\n+        }\n+\n+        @Override\n+        protected long getSystemTableVersion() {\n+            return systemTableVersion;\n+        }\n+\n+        @Override\n+        protected boolean isInitialized() {\n+            return !reinitialize && super.isInitialized();\n+        }\n+    }\n+\n+    public static class PhoenixUpgradeCountingDriver\n+            extends PhoenixTestDriver {\n+        private ConnectionQueryServices connectionQueryServices;\n+        private final ReadOnlyProps overrideProps;\n+\n+        public PhoenixUpgradeCountingDriver(ReadOnlyProps props) {\n+            overrideProps = props;\n+        }\n+\n+        @Override\n+        public boolean acceptsURL(String url) {\n+            return true;\n+        }\n+\n+        @Override\n+        public synchronized ConnectionQueryServices getConnectionQueryServices(\n+                String url, Properties info) throws SQLException {\n+            if (connectionQueryServices == null) {\n+                connectionQueryServices =\n+                    new PhoenixUpgradeCountingServices(\n+                        new QueryServicesTestImpl(getDefaultProps(),\n+                            overrideProps), ConnectionInfo.create(url), info);\n+                connectionQueryServices.init(url, info);\n+            } else if (reinitialize) {\n+                connectionQueryServices.init(url, info);\n+                reinitialize = false;\n+            }\n+            return connectionQueryServices;\n+        }\n+    }\n+\n+    @BeforeClass\n+    public static synchronized void doSetup() throws Exception {\n+        Map<String, String> props = Maps.newConcurrentMap();\n+        props.put(BaseTest.DRIVER_CLASS_NAME_ATTRIB,\n+            PhoenixUpgradeCountingDriver.class.getName());\n+        setUpTestDriver(new ReadOnlyProps(props.entrySet().iterator()));\n+    }\n+\n+    @Test\n+    public void testUpgradeOnlyHappensOnce() throws Exception {\n+        ConnectionQueryServices services = DriverManager.getConnection(getUrl())\n+            .unwrap(PhoenixConnection.class).getQueryServices();\n+        assertTrue(services instanceof PhoenixUpgradeCountingServices);\n+        reinitialize = true;\n+        systemTableVersion = MetaDataProtocol.MIN_SYSTEM_TABLE_TIMESTAMP;\n+        DriverManager.getConnection(getUrl());\n+        try (Admin admin = services.getAdmin()) {\n+            String taskSplitPolicy = admin\n+                .getDescriptor(TableName.valueOf(\n+                    PhoenixDatabaseMetaData.SYSTEM_TASK_NAME))\n+                .getRegionSplitPolicyClassName();\n+            assertEquals(DisabledRegionSplitPolicy.class.getName(),\n+                taskSplitPolicy);\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "09a5b2b6f20d7d6d430d2b9859c7bf55df5fa0c7"}, "originalPosition": 132}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTg3NDEwOQ==", "bodyText": "Since this method actually also replaces the split policy, we should rename it to indicate that.", "url": "https://github.com/apache/phoenix/pull/923#discussion_r505874109", "createdAt": "2020-10-15T21:35:12Z", "author": {"login": "ChinmaySKulkarni"}, "path": "phoenix-core/src/main/java/org/apache/phoenix/query/ConnectionQueryServicesImpl.java", "diffHunk": "@@ -1451,7 +1454,35 @@ private TableDescriptor ensureTableCreated(byte[] physicalTableName, PTableType\n         }\n         return null; // will never make it here\n     }\n-    \n+\n+    private boolean isSplitPolicyUpdatedForTaskTable(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "09a5b2b6f20d7d6d430d2b9859c7bf55df5fa0c7"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTg3NDI0MA==", "bodyText": "Can we add a new unit test for this method?", "url": "https://github.com/apache/phoenix/pull/923#discussion_r505874240", "createdAt": "2020-10-15T21:35:23Z", "author": {"login": "ChinmaySKulkarni"}, "path": "phoenix-core/src/main/java/org/apache/phoenix/query/ConnectionQueryServicesImpl.java", "diffHunk": "@@ -1451,7 +1454,35 @@ private TableDescriptor ensureTableCreated(byte[] physicalTableName, PTableType\n         }\n         return null; // will never make it here\n     }\n-    \n+\n+    private boolean isSplitPolicyUpdatedForTaskTable(\n+            final TableDescriptorBuilder tdBuilder) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "09a5b2b6f20d7d6d430d2b9859c7bf55df5fa0c7"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTg3NDk2NQ==", "bodyText": "Same question here, can we not use namespace mapping property to ensure we are looking for the correct name '.' vs ':'?", "url": "https://github.com/apache/phoenix/pull/923#discussion_r505874965", "createdAt": "2020-10-15T21:36:19Z", "author": {"login": "ChinmaySKulkarni"}, "path": "phoenix-core/src/main/java/org/apache/phoenix/query/ConnectionQueryServicesImpl.java", "diffHunk": "@@ -4006,6 +4037,33 @@ private PhoenixConnection upgradeSystemTask(PhoenixConnection metaConnection)\n                         \"ALTER TABLE \" + taskTableFullName + \" SET \" + TTL + \"=\" + TASK_TABLE_TTL);\n                 clearCache();\n             }\n+            // If SYSTEM.TASK does not have disabled regions split policy,\n+            // set it up here while upgrading it\n+            try (Admin admin = metaConnection.getQueryServices().getAdmin()) {\n+                String tableNameStr = PhoenixDatabaseMetaData.SYSTEM_TASK_NAME;\n+                TableName tableName;\n+                TableDescriptor td;\n+                try {\n+                    tableName = TableName.valueOf(tableNameStr);\n+                    td = admin.getDescriptor(tableName);\n+                } catch (org.apache.hadoop.hbase.TableNotFoundException tnfe) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "09a5b2b6f20d7d6d430d2b9859c7bf55df5fa0c7"}, "originalPosition": 76}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTg3NTcxMA==", "bodyText": "Do we have any specific variant of SQLException to handle any exceptions thrown during the upgrade process?", "url": "https://github.com/apache/phoenix/pull/923#discussion_r505875710", "createdAt": "2020-10-15T21:37:18Z", "author": {"login": "ChinmaySKulkarni"}, "path": "phoenix-core/src/main/java/org/apache/phoenix/query/ConnectionQueryServicesImpl.java", "diffHunk": "@@ -4006,6 +4037,33 @@ private PhoenixConnection upgradeSystemTask(PhoenixConnection metaConnection)\n                         \"ALTER TABLE \" + taskTableFullName + \" SET \" + TTL + \"=\" + TASK_TABLE_TTL);\n                 clearCache();\n             }\n+            // If SYSTEM.TASK does not have disabled regions split policy,\n+            // set it up here while upgrading it\n+            try (Admin admin = metaConnection.getQueryServices().getAdmin()) {\n+                String tableNameStr = PhoenixDatabaseMetaData.SYSTEM_TASK_NAME;\n+                TableName tableName;\n+                TableDescriptor td;\n+                try {\n+                    tableName = TableName.valueOf(tableNameStr);\n+                    td = admin.getDescriptor(tableName);\n+                } catch (org.apache.hadoop.hbase.TableNotFoundException tnfe) {\n+                    tableNameStr = tableNameStr.replace(\n+                        QueryConstants.NAME_SEPARATOR,\n+                        QueryConstants.NAMESPACE_SEPARATOR);\n+                    tableName = TableName.valueOf(tableNameStr);\n+                    td = admin.getDescriptor(tableName);\n+                }\n+                TableDescriptorBuilder tableDescriptorBuilder =\n+                    TableDescriptorBuilder.newBuilder(td);\n+                if (isSplitPolicyUpdatedForTaskTable(tableDescriptorBuilder)) {\n+                    admin.modifyTable(tableDescriptorBuilder.build());\n+                    pollForUpdatedTableDescriptor(admin,\n+                        tableDescriptorBuilder.build(), tableName.getName());\n+                }\n+            } catch (InterruptedException | TimeoutException ite) {\n+                throw new SQLException(PhoenixDatabaseMetaData.SYSTEM_TASK_NAME", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "09a5b2b6f20d7d6d430d2b9859c7bf55df5fa0c7"}, "originalPosition": 91}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA5ODM1MDA5", "url": "https://github.com/apache/phoenix/pull/923#pullrequestreview-509835009", "createdAt": "2020-10-15T21:52:10Z", "commit": {"oid": "09a5b2b6f20d7d6d430d2b9859c7bf55df5fa0c7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQyMTo1MjoxMFrOHic0oQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQyMTo1MjoxMFrOHic0oQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTg4NTg1Nw==", "bodyText": "Can't we use the actual namespace mapping property to get the exact expected name i.e. SYSTEM.TASK vs SYSTEM:TASK instead of trying both variations?", "url": "https://github.com/apache/phoenix/pull/923#discussion_r505885857", "createdAt": "2020-10-15T21:52:10Z", "author": {"login": "ChinmaySKulkarni"}, "path": "phoenix-core/src/main/java/org/apache/phoenix/query/ConnectionQueryServicesImpl.java", "diffHunk": "@@ -1451,7 +1454,35 @@ private TableDescriptor ensureTableCreated(byte[] physicalTableName, PTableType\n         }\n         return null; // will never make it here\n     }\n-    \n+\n+    private boolean isSplitPolicyUpdatedForTaskTable(\n+            final TableDescriptorBuilder tdBuilder) {\n+        boolean isTaskTable = false;\n+        String taskTable = PhoenixDatabaseMetaData.SYSTEM_TASK_NAME;\n+        if (tdBuilder.build().getTableName().getNameAsString()\n+                .equals(taskTable)) {\n+            isTaskTable = true;\n+        } else {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "09a5b2b6f20d7d6d430d2b9859c7bf55df5fa0c7"}, "originalPosition": 30}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA5ODM3NzMx", "url": "https://github.com/apache/phoenix/pull/923#pullrequestreview-509837731", "createdAt": "2020-10-15T21:57:33Z", "commit": {"oid": "09a5b2b6f20d7d6d430d2b9859c7bf55df5fa0c7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQyMTo1NzozM1rOHic9Bw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQyMTo1NzozM1rOHic9Bw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTg4ODAwNw==", "bodyText": "All table creations go through this method so instead of polluting this with SYSTEM.TASK specific stuff, I think we should divide the problem into 2 parts:\n\n\nFresh clusters and <4.15 clusters -> Change the DDL for SYSTEM.TASK (CQSI.CREATE_TASK_METADATA) itself so this would work directly i.e. add\nHTableDescriptor.SPLIT_POLICY + \"='\" + SystemTaskSplitPolicy.class.getName() + \"',\\n\"\nand introduce a new class SystemTaskSplitPolicy which is equivalent to DisabledRegionSplitPolicy for now, but can be easily changed in the future if required without unloading and reloading the coproc.\n\n\nUpgrade path for 4.15 clusters -> We would go through upgradeSystemTask() and here we could load the correct split policy. That way, we don't need the change inside ensureTableCreated() and it is much cleaner. One corner case here (highly unlikely, but still possible) is if a cluster already has SYSTEM.TASK split. In that case, we might want to throw an exception or maybe merge regions of SYSTEM.TASK", "url": "https://github.com/apache/phoenix/pull/923#discussion_r505888007", "createdAt": "2020-10-15T21:57:33Z", "author": {"login": "ChinmaySKulkarni"}, "path": "phoenix-core/src/main/java/org/apache/phoenix/query/ConnectionQueryServicesImpl.java", "diffHunk": "@@ -1336,6 +1337,8 @@ private TableDescriptor ensureTableCreated(byte[] physicalTableName, PTableType\n                         PBoolean.INSTANCE.toObject(newDesc.build().getValue(MetaDataUtil.IS_LOCAL_INDEX_TABLE_PROP_BYTES)))) {\n                     newDesc.setRegionSplitPolicyClassName(IndexRegionSplitPolicy.class.getName());\n                 }\n+                // disable split policy for SYSTEM.TASK\n+                isSplitPolicyUpdatedForTaskTable(newDesc);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "09a5b2b6f20d7d6d430d2b9859c7bf55df5fa0c7"}, "originalPosition": 13}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA5ODM4ODMz", "url": "https://github.com/apache/phoenix/pull/923#pullrequestreview-509838833", "createdAt": "2020-10-15T21:59:56Z", "commit": {"oid": "09a5b2b6f20d7d6d430d2b9859c7bf55df5fa0c7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQyMTo1OTo1NlrOHidAnA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQyMTo1OTo1NlrOHidAnA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTg4ODkyNA==", "bodyText": "Is it possible to add a test case inside BackwardsCompatibilityIT to make sure that the upgrade path changes work and SYSTEM.TASK comes up with the expected split policy?", "url": "https://github.com/apache/phoenix/pull/923#discussion_r505888924", "createdAt": "2020-10-15T21:59:56Z", "author": {"login": "ChinmaySKulkarni"}, "path": "phoenix-core/src/main/java/org/apache/phoenix/query/ConnectionQueryServicesImpl.java", "diffHunk": "@@ -4006,6 +4037,33 @@ private PhoenixConnection upgradeSystemTask(PhoenixConnection metaConnection)\n                         \"ALTER TABLE \" + taskTableFullName + \" SET \" + TTL + \"=\" + TASK_TABLE_TTL);\n                 clearCache();\n             }\n+            // If SYSTEM.TASK does not have disabled regions split policy,\n+            // set it up here while upgrading it\n+            try (Admin admin = metaConnection.getQueryServices().getAdmin()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "09a5b2b6f20d7d6d430d2b9859c7bf55df5fa0c7"}, "originalPosition": 69}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ecd7697c5c8293407514a03858497256d8d6e1cb", "author": {"user": {"login": "virajjasani", "name": "Viraj Jasani"}}, "url": "https://github.com/apache/phoenix/commit/ecd7697c5c8293407514a03858497256d8d6e1cb", "committedDate": "2020-10-16T13:24:27Z", "message": "Merge branch 'master' of github.com:apache/phoenix into PHOENIX-6125-master"}, "afterCommit": {"oid": "1486aa4b2bf990d1d4dfb7ecceb550eee2727999", "author": {"user": {"login": "virajjasani", "name": "Viraj Jasani"}}, "url": "https://github.com/apache/phoenix/commit/1486aa4b2bf990d1d4dfb7ecceb550eee2727999", "committedDate": "2020-10-16T15:03:23Z", "message": "incorporated review"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "483b12c90a068bfc6f5d580a9a045f045d93c2e2", "author": {"user": {"login": "virajjasani", "name": "Viraj Jasani"}}, "url": "https://github.com/apache/phoenix/commit/483b12c90a068bfc6f5d580a9a045f045d93c2e2", "committedDate": "2020-10-16T15:13:08Z", "message": "Merge branch 'master' of github.com:apache/phoenix into PHOENIX-6125-master"}, "afterCommit": {"oid": "deb315e9c941b15bc1bcd6e063fb0e1ab2bbd2f4", "author": {"user": {"login": "virajjasani", "name": "Viraj Jasani"}}, "url": "https://github.com/apache/phoenix/commit/deb315e9c941b15bc1bcd6e063fb0e1ab2bbd2f4", "committedDate": "2020-10-18T11:29:16Z", "message": "PHOENIX-6125 : Disable region split for SYSTEM.TASK"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "deb315e9c941b15bc1bcd6e063fb0e1ab2bbd2f4", "author": {"user": {"login": "virajjasani", "name": "Viraj Jasani"}}, "url": "https://github.com/apache/phoenix/commit/deb315e9c941b15bc1bcd6e063fb0e1ab2bbd2f4", "committedDate": "2020-10-18T11:29:16Z", "message": "PHOENIX-6125 : Disable region split for SYSTEM.TASK"}, "afterCommit": {"oid": "5058c3a5c2ec09ea227a6144a753fef239cee8a7", "author": {"user": {"login": "virajjasani", "name": "Viraj Jasani"}}, "url": "https://github.com/apache/phoenix/commit/5058c3a5c2ec09ea227a6144a753fef239cee8a7", "committedDate": "2020-10-18T11:38:33Z", "message": "PHOENIX-6125 : Disable region split for SYSTEM.TASK"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5058c3a5c2ec09ea227a6144a753fef239cee8a7", "author": {"user": {"login": "virajjasani", "name": "Viraj Jasani"}}, "url": "https://github.com/apache/phoenix/commit/5058c3a5c2ec09ea227a6144a753fef239cee8a7", "committedDate": "2020-10-18T11:38:33Z", "message": "PHOENIX-6125 : Disable region split for SYSTEM.TASK"}, "afterCommit": {"oid": "fb62ed0fc4c8d0d03e32f971483cbe51f6bfca28", "author": {"user": {"login": "virajjasani", "name": "Viraj Jasani"}}, "url": "https://github.com/apache/phoenix/commit/fb62ed0fc4c8d0d03e32f971483cbe51f6bfca28", "committedDate": "2020-10-18T11:43:37Z", "message": "PHOENIX-6125 : Disable region split for SYSTEM.TASK"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9069426f2a899960f14f24386d46b7759e2064d9", "author": {"user": {"login": "virajjasani", "name": "Viraj Jasani"}}, "url": "https://github.com/apache/phoenix/commit/9069426f2a899960f14f24386d46b7759e2064d9", "committedDate": "2020-10-19T13:27:14Z", "message": "PHOENIX-6125 : Disable region split for SYSTEM.TASK"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "fb62ed0fc4c8d0d03e32f971483cbe51f6bfca28", "author": {"user": {"login": "virajjasani", "name": "Viraj Jasani"}}, "url": "https://github.com/apache/phoenix/commit/fb62ed0fc4c8d0d03e32f971483cbe51f6bfca28", "committedDate": "2020-10-18T11:43:37Z", "message": "PHOENIX-6125 : Disable region split for SYSTEM.TASK"}, "afterCommit": {"oid": "9069426f2a899960f14f24386d46b7759e2064d9", "author": {"user": {"login": "virajjasani", "name": "Viraj Jasani"}}, "url": "https://github.com/apache/phoenix/commit/9069426f2a899960f14f24386d46b7759e2064d9", "committedDate": "2020-10-19T13:27:14Z", "message": "PHOENIX-6125 : Disable region split for SYSTEM.TASK"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTExODcyNzc2", "url": "https://github.com/apache/phoenix/pull/923#pullrequestreview-511872776", "createdAt": "2020-10-19T15:12:49Z", "commit": {"oid": "9069426f2a899960f14f24386d46b7759e2064d9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxNToxMjo0OVrOHkTs-w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxNToxMjo0OVrOHkTs-w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzgzMzU5NQ==", "bodyText": "These changes are specific only to whitespace issues that precommit build reported.", "url": "https://github.com/apache/phoenix/pull/923#discussion_r507833595", "createdAt": "2020-10-19T15:12:49Z", "author": {"login": "virajjasani"}, "path": "phoenix-core/src/it/java/org/apache/phoenix/end2end/SystemTablesUpgradeIT.java", "diffHunk": "@@ -25,61 +25,68 @@\n import java.util.Map;\n import java.util.Properties;\n \n+import org.apache.hadoop.hbase.TableName;\n+import org.apache.hadoop.hbase.client.Admin;\n import org.apache.phoenix.coprocessor.MetaDataProtocol;\n import org.apache.phoenix.jdbc.PhoenixConnection;\n+import org.apache.phoenix.jdbc.PhoenixDatabaseMetaData;\n import org.apache.phoenix.jdbc.PhoenixEmbeddedDriver.ConnectionInfo;\n import org.apache.phoenix.jdbc.PhoenixTestDriver;\n import org.apache.phoenix.query.BaseTest;\n import org.apache.phoenix.query.ConnectionQueryServices;\n import org.apache.phoenix.query.ConnectionQueryServicesImpl;\n import org.apache.phoenix.query.QueryServices;\n import org.apache.phoenix.query.QueryServicesTestImpl;\n+import org.apache.phoenix.schema.SystemTaskSplitPolicy;\n import org.apache.phoenix.util.ReadOnlyProps;\n import org.junit.BeforeClass;\n import org.junit.Test;\n \n import org.apache.phoenix.thirdparty.com.google.common.collect.Maps;\n \n-public class SystemCatalogUpgradeIT extends BaseTest {\n+/**\n+ * Tests for upgrades of System tables.\n+ */\n+public class SystemTablesUpgradeIT extends BaseTest {\n     private static boolean reinitialize;\n     private static int countUpgradeAttempts;\n     private static long systemTableVersion = MetaDataProtocol.getPriorVersion();\n-    \n+\n     private static class PhoenixUpgradeCountingServices extends ConnectionQueryServicesImpl {\n         public PhoenixUpgradeCountingServices(QueryServices services, ConnectionInfo connectionInfo, Properties info) {\n             super(services, connectionInfo, info);\n         }\n-        \n+\n         @Override\n         protected void setUpgradeRequired() {\n             super.setUpgradeRequired();\n             countUpgradeAttempts++;\n         }\n-        \n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9069426f2a899960f14f24386d46b7759e2064d9"}, "originalPosition": 45}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTExOTc5MDY0", "url": "https://github.com/apache/phoenix/pull/923#pullrequestreview-511979064", "createdAt": "2020-10-19T17:10:07Z", "commit": {"oid": "9069426f2a899960f14f24386d46b7759e2064d9"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTExOTc5MjMx", "url": "https://github.com/apache/phoenix/pull/923#pullrequestreview-511979231", "createdAt": "2020-10-19T17:10:22Z", "commit": {"oid": "9069426f2a899960f14f24386d46b7759e2064d9"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1957, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}