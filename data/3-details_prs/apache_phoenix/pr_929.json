{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA1OTY5ODE2", "number": 929, "title": "PHOENIX-6083 View index creation does a checkAndPut on an incorrect r\u2026", "bodyText": "\u2026ow key", "createdAt": "2020-10-19T13:32:05Z", "url": "https://github.com/apache/phoenix/pull/929", "merged": true, "mergeCommit": {"oid": "e49c8ff6108456625bef1f6c4a39e116acc91d83"}, "closed": true, "closedAt": "2020-11-05T20:20:09Z", "author": {"login": "richardantal"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdUGxYGgBqjM4OTQ0MDY4Njc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdY9LLPAFqTUyMjc1NTQ0Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a3ea120115742d946e19f0268b1512422d532c4f", "author": {"user": {"login": "richardantal", "name": null}}, "url": "https://github.com/apache/phoenix/commit/a3ea120115742d946e19f0268b1512422d532c4f", "committedDate": "2020-10-19T13:30:31Z", "message": "PHOENIX-6083 View index creation does a checkAndPut on an incorrect row key"}, "afterCommit": {"oid": "082371196d9ee4b6a567d1c25f540ef1d6e8f900", "author": {"user": {"login": "richardantal", "name": null}}, "url": "https://github.com/apache/phoenix/commit/082371196d9ee4b6a567d1c25f540ef1d6e8f900", "committedDate": "2020-10-19T16:28:51Z", "message": "PHOENIX-6083 View index creation does a checkAndPut on an incorrect row key"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTExOTg3NTcw", "url": "https://github.com/apache/phoenix/pull/929#pullrequestreview-511987570", "createdAt": "2020-10-19T17:21:16Z", "commit": {"oid": "082371196d9ee4b6a567d1c25f540ef1d6e8f900"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxNzoyMToxNlrOHkZIWw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxNzoyODowOFrOHkZYbA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzkyMjUyMw==", "bodyText": "nit: try-with-resources for the connection", "url": "https://github.com/apache/phoenix/pull/929#discussion_r507922523", "createdAt": "2020-10-19T17:21:16Z", "author": {"login": "ChinmaySKulkarni"}, "path": "phoenix-core/src/it/java/org/apache/phoenix/end2end/index/ViewIndexIT.java", "diffHunk": "@@ -169,10 +171,67 @@ public void testDeleteViewIndexSequences() throws Exception {\n         verifySequenceValue(null, sequenceName, sequenceSchemaName, Short.MIN_VALUE + 2);\n         conn1.createStatement().execute(\"DROP VIEW \" + fullViewName);\n         conn1.createStatement().execute(\"DROP TABLE \"+ fullTableName);\n-        \n+\n         verifySequenceNotExists(null, sequenceName, sequenceSchemaName);\n     }\n-    \n+\n+    @Test\n+    public void testDroppingColumnWhileCreatingIndex2() throws Exception {\n+        String schemaName = \"S1\";\n+        String tableName = generateUniqueName();\n+        String viewSchemaName = \"S1\";\n+        String fullTableName = SchemaUtil.getTableName(schemaName, tableName);\n+        String indexName = \"IND_\" + generateUniqueName();\n+        String viewName = \"VIEW_\" + generateUniqueName();\n+        String fullViewName = SchemaUtil.getTableName(viewSchemaName, viewName);\n+\n+        createBaseTable(schemaName, tableName, false, null, null, true);\n+        Connection conn = getConnection();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "082371196d9ee4b6a567d1c25f540ef1d6e8f900"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzkyMzIyNg==", "bodyText": "nit: Can we store and hence later assert the SQLException code rather than the exception message?", "url": "https://github.com/apache/phoenix/pull/929#discussion_r507923226", "createdAt": "2020-10-19T17:22:29Z", "author": {"login": "ChinmaySKulkarni"}, "path": "phoenix-core/src/it/java/org/apache/phoenix/end2end/index/ViewIndexIT.java", "diffHunk": "@@ -169,10 +171,67 @@ public void testDeleteViewIndexSequences() throws Exception {\n         verifySequenceValue(null, sequenceName, sequenceSchemaName, Short.MIN_VALUE + 2);\n         conn1.createStatement().execute(\"DROP VIEW \" + fullViewName);\n         conn1.createStatement().execute(\"DROP TABLE \"+ fullTableName);\n-        \n+\n         verifySequenceNotExists(null, sequenceName, sequenceSchemaName);\n     }\n-    \n+\n+    @Test\n+    public void testDroppingColumnWhileCreatingIndex2() throws Exception {\n+        String schemaName = \"S1\";\n+        String tableName = generateUniqueName();\n+        String viewSchemaName = \"S1\";\n+        String fullTableName = SchemaUtil.getTableName(schemaName, tableName);\n+        String indexName = \"IND_\" + generateUniqueName();\n+        String viewName = \"VIEW_\" + generateUniqueName();\n+        String fullViewName = SchemaUtil.getTableName(viewSchemaName, viewName);\n+\n+        createBaseTable(schemaName, tableName, false, null, null, true);\n+        Connection conn = getConnection();\n+        conn.setAutoCommit(true);\n+        conn.createStatement().execute(\"CREATE VIEW \" + fullViewName + \" AS SELECT * FROM \" + fullTableName);\n+        conn.commit();\n+\n+        final String[] failedMsg = new String[1];\n+        final CountDownLatch doneSignal = new CountDownLatch(2);\n+        Runnable r1 = new Runnable() {\n+\n+            @Override public void run() {\n+                try {\n+                    conn.createStatement().execute(\"CREATE INDEX \" + indexName + \" ON \" + fullViewName + \" (v1)\");\n+                } catch (SQLException e) {\n+                    failedMsg[0] = e.getMessage();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "082371196d9ee4b6a567d1c25f540ef1d6e8f900"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzkyNjYzNg==", "bodyText": "Good to either extract this out as a SchemaUtil API and/or add a comment here. Is there some existing API which makes the indexed column name have a ':' instead of '.'?", "url": "https://github.com/apache/phoenix/pull/929#discussion_r507926636", "createdAt": "2020-10-19T17:28:08Z", "author": {"login": "ChinmaySKulkarni"}, "path": "phoenix-core/src/main/java/org/apache/phoenix/schema/MetaDataClient.java", "diffHunk": "@@ -1689,12 +1689,13 @@ public MutationState createIndex(CreateIndexStatement statement, byte[][] splits\n                 for (ColumnName colName : requiredCols) {\n                     // acquire the mutex using the global physical table name to\n                     // prevent this column from being dropped while the index is being created\n+                    String colNameSeparatedByDot = colName.getColumnName().replace(':', '.');", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "082371196d9ee4b6a567d1c25f540ef1d6e8f900"}, "originalPosition": 4}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "74d254ce2dd5cd5064495e2fbb627921e005bd29", "author": {"user": {"login": "richardantal", "name": null}}, "url": "https://github.com/apache/phoenix/commit/74d254ce2dd5cd5064495e2fbb627921e005bd29", "committedDate": "2020-10-20T08:37:27Z", "message": "minor fixes acording to review"}, "afterCommit": {"oid": "64d4b741ad5161bdf594d1c8e5b037ca7c301b6c", "author": {"user": {"login": "richardantal", "name": null}}, "url": "https://github.com/apache/phoenix/commit/64d4b741ad5161bdf594d1c8e5b037ca7c301b6c", "committedDate": "2020-10-30T15:24:17Z", "message": "minor fixes acording to review"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "64d4b741ad5161bdf594d1c8e5b037ca7c301b6c", "author": {"user": {"login": "richardantal", "name": null}}, "url": "https://github.com/apache/phoenix/commit/64d4b741ad5161bdf594d1c8e5b037ca7c301b6c", "committedDate": "2020-10-30T15:24:17Z", "message": "minor fixes acording to review"}, "afterCommit": {"oid": "2a0ddfa952cdc572005aa943790ea80cfdac344c", "author": {"user": {"login": "richardantal", "name": null}}, "url": "https://github.com/apache/phoenix/commit/2a0ddfa952cdc572005aa943790ea80cfdac344c", "committedDate": "2020-11-02T15:44:07Z", "message": "PHOENIX-6083 View index creation does a checkAndPut on an incorrect row key"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2a0ddfa952cdc572005aa943790ea80cfdac344c", "author": {"user": {"login": "richardantal", "name": null}}, "url": "https://github.com/apache/phoenix/commit/2a0ddfa952cdc572005aa943790ea80cfdac344c", "committedDate": "2020-11-02T15:44:07Z", "message": "PHOENIX-6083 View index creation does a checkAndPut on an incorrect row key"}, "afterCommit": {"oid": "8ef65ee01c36685ae9d993775eeae1eacb4398a9", "author": {"user": {"login": "richardantal", "name": null}}, "url": "https://github.com/apache/phoenix/commit/8ef65ee01c36685ae9d993775eeae1eacb4398a9", "committedDate": "2020-11-02T17:07:56Z", "message": "PHOENIX-6083 View index creation does a checkAndPut on an incorrect row key"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIyNjU4OTcx", "url": "https://github.com/apache/phoenix/pull/929#pullrequestreview-522658971", "createdAt": "2020-11-03T16:15:33Z", "commit": {"oid": "8ef65ee01c36685ae9d993775eeae1eacb4398a9"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxNjoxNTozNFrOHs2OLQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxNjoyOTowNVrOHs2zfA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjc4Nzc1Nw==", "bodyText": "This seem preferred way based on existing usages:\nString colNameSeparatedByDot = colName.getColumnName().replace(QueryConstants.NAMESPACE_SEPARATOR, QueryConstants.NAME_SEPARATOR)", "url": "https://github.com/apache/phoenix/pull/929#discussion_r516787757", "createdAt": "2020-11-03T16:15:34Z", "author": {"login": "virajjasani"}, "path": "phoenix-core/src/main/java/org/apache/phoenix/schema/MetaDataClient.java", "diffHunk": "@@ -1685,12 +1685,16 @@ public MutationState createIndex(CreateIndexStatement statement, byte[][] splits\n                 for (ColumnName colName : requiredCols) {\n                     // acquire the mutex using the global physical table name to\n                     // prevent this column from being dropped while the view is being created\n+                    String colNameSeparatedByDot = SchemaUtil\n+                            .replaceColonToDot(colName.getColumnName());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8ef65ee01c36685ae9d993775eeae1eacb4398a9"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjc5NzMwOA==", "bodyText": "Not a strong opinion but since we want threads to mutate exceptionCode, maybe we can use AtomicInteger for exceptionCode rather than array with size 1, threads can set values and finally we can assert with assertEquals(exceptionCode.get(), 301) if you would prefer :)", "url": "https://github.com/apache/phoenix/pull/929#discussion_r516797308", "createdAt": "2020-11-03T16:29:05Z", "author": {"login": "virajjasani"}, "path": "phoenix-core/src/it/java/org/apache/phoenix/end2end/index/ViewIndexIT.java", "diffHunk": "@@ -280,6 +282,64 @@ public void testCoprocsOnGlobalNonMTImmutableViewIndex() throws Exception {\n         testCoprocsOnGlobalViewIndexHelper(false, false);\n     }\n \n+    @Test\n+    public void testDroppingColumnWhileCreatingIndex() throws Exception {\n+        String schemaName = \"S1\";\n+        String tableName = generateUniqueName();\n+        String viewSchemaName = \"S1\";\n+        String fullTableName = SchemaUtil.getTableName(schemaName, tableName);\n+        String indexName = \"IND_\" + generateUniqueName();\n+        String viewName = \"VIEW_\" + generateUniqueName();\n+        String fullViewName = SchemaUtil.getTableName(viewSchemaName, viewName);\n+\n+        createBaseTable(schemaName, tableName, false, null, null, true);\n+        try (Connection conn = getConnection()) {\n+            conn.setAutoCommit(true);\n+            conn.createStatement().execute(\"CREATE VIEW \" + fullViewName + \" AS SELECT * FROM \" + fullTableName);\n+            conn.commit();\n+\n+            final int[] exceptionCode = new int[1];", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8ef65ee01c36685ae9d993775eeae1eacb4398a9"}, "originalPosition": 29}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8ef65ee01c36685ae9d993775eeae1eacb4398a9", "author": {"user": {"login": "richardantal", "name": null}}, "url": "https://github.com/apache/phoenix/commit/8ef65ee01c36685ae9d993775eeae1eacb4398a9", "committedDate": "2020-11-02T17:07:56Z", "message": "PHOENIX-6083 View index creation does a checkAndPut on an incorrect row key"}, "afterCommit": {"oid": "291d4d55bdbf2f19ff1fceb71339333f55cbfcf0", "author": {"user": {"login": "richardantal", "name": null}}, "url": "https://github.com/apache/phoenix/commit/291d4d55bdbf2f19ff1fceb71339333f55cbfcf0", "committedDate": "2020-11-03T16:48:38Z", "message": "PHOENIX-6083 View index creation does a checkAndPut on an incorrect row key"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d1403cce349d696ea53f86466408d9982a6aef2c", "author": {"user": {"login": "richardantal", "name": null}}, "url": "https://github.com/apache/phoenix/commit/d1403cce349d696ea53f86466408d9982a6aef2c", "committedDate": "2020-11-03T17:51:42Z", "message": "PHOENIX-6083 View index creation does a checkAndPut on an incorrect row key"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "291d4d55bdbf2f19ff1fceb71339333f55cbfcf0", "author": {"user": {"login": "richardantal", "name": null}}, "url": "https://github.com/apache/phoenix/commit/291d4d55bdbf2f19ff1fceb71339333f55cbfcf0", "committedDate": "2020-11-03T16:48:38Z", "message": "PHOENIX-6083 View index creation does a checkAndPut on an incorrect row key"}, "afterCommit": {"oid": "d1403cce349d696ea53f86466408d9982a6aef2c", "author": {"user": {"login": "richardantal", "name": null}}, "url": "https://github.com/apache/phoenix/commit/d1403cce349d696ea53f86466408d9982a6aef2c", "committedDate": "2020-11-03T17:51:42Z", "message": "PHOENIX-6083 View index creation does a checkAndPut on an incorrect row key"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIyNzU1NDQ2", "url": "https://github.com/apache/phoenix/pull/929#pullrequestreview-522755446", "createdAt": "2020-11-03T18:07:50Z", "commit": {"oid": "d1403cce349d696ea53f86466408d9982a6aef2c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1804, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}