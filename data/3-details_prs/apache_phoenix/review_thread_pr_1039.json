{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQ2Njk1MjAz", "number": 1039, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMFQwMjoxNzowM1rOFJ6ZUw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMFQwNjowNToyNlrOFJ77uA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ1OTM4MjU5OnYy", "diffSide": "RIGHT", "path": "phoenix-core/src/main/java/org/apache/phoenix/coprocessor/MetaDataEndpointImpl.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMFQwMjoxNzowM1rOIMcBpg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMFQwMjoxNzowM1rOIMcBpg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTkxMjk5OA==", "bodyText": "nit: formatting of comment is mixed up now. (should be \"for backward compatibility\")", "url": "https://github.com/apache/phoenix/pull/1039#discussion_r549912998", "createdAt": "2020-12-30T02:17:03Z", "author": {"login": "gjacoby126"}, "path": "phoenix-core/src/main/java/org/apache/phoenix/coprocessor/MetaDataEndpointImpl.java", "diffHunk": "@@ -867,7 +868,9 @@ private void addColumnToTable(List<Cell> results, PName colName, PName famName,\n         PDataType dataType =\n                 PDataType.fromTypeId(PInteger.INSTANCE.getCodec().decodeInt(\n                         dataTypeKv.getValueArray(), dataTypeKv.getValueOffset(), SortOrder.getDefault()));\n-        if (maxLength == null && dataType == PBinary.INSTANCE) dataType = PVarbinary.INSTANCE;   // For\n+        if (maxLength == null && dataType == PBinary.INSTANCE) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e331469484dda165c91f876ed2da272653003efc"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ1OTM4MzAxOnYy", "diffSide": "RIGHT", "path": "phoenix-core/src/it/java/org/apache/phoenix/end2end/Dummy.java", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMFQwMjoxNzozOVrOIMcB4Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMFQwNjoyMDowMVrOIMeJhA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTkxMzA1Nw==", "bodyText": "This entire file can be removed; I believe it's been causing ASF license failures and it doesn't do anything. I think a previous JIRA checked it in by mistake.", "url": "https://github.com/apache/phoenix/pull/1039#discussion_r549913057", "createdAt": "2020-12-30T02:17:39Z", "author": {"login": "gjacoby126"}, "path": "phoenix-core/src/it/java/org/apache/phoenix/end2end/Dummy.java", "diffHunk": "@@ -1,3 +1,20 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e331469484dda165c91f876ed2da272653003efc"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTkxNTY4Ng==", "bodyText": "thank you , I will remove this class.", "url": "https://github.com/apache/phoenix/pull/1039#discussion_r549915686", "createdAt": "2020-12-30T02:35:58Z", "author": {"login": "wangchao316"}, "path": "phoenix-core/src/it/java/org/apache/phoenix/end2end/Dummy.java", "diffHunk": "@@ -1,3 +1,20 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTkxMzA1Nw=="}, "originalCommit": {"oid": "e331469484dda165c91f876ed2da272653003efc"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTkxNzk5OA==", "bodyText": "@gjacoby126 \uff0c I remove this class , please review again. thank you.", "url": "https://github.com/apache/phoenix/pull/1039#discussion_r549917998", "createdAt": "2020-12-30T02:52:46Z", "author": {"login": "wangchao316"}, "path": "phoenix-core/src/it/java/org/apache/phoenix/end2end/Dummy.java", "diffHunk": "@@ -1,3 +1,20 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTkxMzA1Nw=="}, "originalCommit": {"oid": "e331469484dda165c91f876ed2da272653003efc"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTk0MzI2OQ==", "bodyText": "PHOENIX-6272 is tracking this?", "url": "https://github.com/apache/phoenix/pull/1039#discussion_r549943269", "createdAt": "2020-12-30T05:51:04Z", "author": {"login": "virajjasani"}, "path": "phoenix-core/src/it/java/org/apache/phoenix/end2end/Dummy.java", "diffHunk": "@@ -1,3 +1,20 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTkxMzA1Nw=="}, "originalCommit": {"oid": "e331469484dda165c91f876ed2da272653003efc"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTk0Nzc4MA==", "bodyText": "oh, thank you  @virajjasani ,I will assign me to PHOENIX-6272, and remove Dummy.java in this PR.", "url": "https://github.com/apache/phoenix/pull/1039#discussion_r549947780", "createdAt": "2020-12-30T06:20:01Z", "author": {"login": "wangchao316"}, "path": "phoenix-core/src/it/java/org/apache/phoenix/end2end/Dummy.java", "diffHunk": "@@ -1,3 +1,20 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTkxMzA1Nw=="}, "originalCommit": {"oid": "e331469484dda165c91f876ed2da272653003efc"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ1OTYyOTMwOnYy", "diffSide": "RIGHT", "path": "phoenix-core/src/main/java/org/apache/phoenix/jdbc/PhoenixStatement.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMFQwNjowMDoyOVrOIMd9pQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMFQwNjowMDoyOVrOIMd9pQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTk0NDc0MQ==", "bodyText": "Better replace with placeholder?\nLOGGER.debug(\"Reloading table {} data from server\", e.getTableName());", "url": "https://github.com/apache/phoenix/pull/1039#discussion_r549944741", "createdAt": "2020-12-30T06:00:29Z", "author": {"login": "virajjasani"}, "path": "phoenix-core/src/main/java/org/apache/phoenix/jdbc/PhoenixStatement.java", "diffHunk": "@@ -342,12 +341,12 @@ public PhoenixResultSet call() throws SQLException {\n                     }\n                     //Force update cache and retry if meta not found error occurs\n                     catch (MetaDataEntityNotFoundException e) {\n-                        if(doRetryOnMetaNotFoundError && e.getTableName()!=null){\n-                            if(LOGGER.isDebugEnabled())\n-                                LOGGER.debug(\"Reloading table \"\n-                                        + e.getTableName()+\" data from server\");\n-                            if(new MetaDataClient(connection).updateCache(connection.getTenantId(),\n-                                e.getSchemaName(), e.getTableName(), true).wasUpdated()){\n+                        if (doRetryOnMetaNotFoundError && e.getTableName() != null) {\n+                            if (LOGGER.isDebugEnabled()) {\n+                                LOGGER.debug(\"Reloading table \" + e.getTableName() + \" data from server\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d649c729258fcdb4f2171ea2c772c981f04ea2e7"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ1OTYyOTg0OnYy", "diffSide": "RIGHT", "path": "phoenix-core/src/main/java/org/apache/phoenix/jdbc/PhoenixStatement.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMFQwNjowMTowMlrOIMd97w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMFQwNzozMzo0MVrOIMgp4g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTk0NDgxNQ==", "bodyText": "same here", "url": "https://github.com/apache/phoenix/pull/1039#discussion_r549944815", "createdAt": "2020-12-30T06:01:02Z", "author": {"login": "virajjasani"}, "path": "phoenix-core/src/main/java/org/apache/phoenix/jdbc/PhoenixStatement.java", "diffHunk": "@@ -430,12 +429,12 @@ public Integer call() throws SQLException {\n                             }\n                             //Force update cache and retry if meta not found error occurs\n                             catch (MetaDataEntityNotFoundException e) {\n-                                if(doRetryOnMetaNotFoundError && e.getTableName()!=null){\n-                                    if(LOGGER.isDebugEnabled())\n-                                        LOGGER.debug(\"Reloading table \"+ e.getTableName()\n-                                                +\" data from server\");\n-                                    if(new MetaDataClient(connection).updateCache(connection.getTenantId(),\n-                                        e.getSchemaName(), e.getTableName(), true).wasUpdated()){\n+                                if (doRetryOnMetaNotFoundError && e.getTableName() != null) {\n+                                    if (LOGGER.isDebugEnabled()) {\n+                                        LOGGER.debug(\"Reloading table \" + e.getTableName() + \" data from server\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d649c729258fcdb4f2171ea2c772c981f04ea2e7"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTk4ODgzNA==", "bodyText": "same here\n\nphoenix code have more this ways that not placeholder in log. I will solved this in another issues.", "url": "https://github.com/apache/phoenix/pull/1039#discussion_r549988834", "createdAt": "2020-12-30T07:33:41Z", "author": {"login": "wangchao316"}, "path": "phoenix-core/src/main/java/org/apache/phoenix/jdbc/PhoenixStatement.java", "diffHunk": "@@ -430,12 +429,12 @@ public Integer call() throws SQLException {\n                             }\n                             //Force update cache and retry if meta not found error occurs\n                             catch (MetaDataEntityNotFoundException e) {\n-                                if(doRetryOnMetaNotFoundError && e.getTableName()!=null){\n-                                    if(LOGGER.isDebugEnabled())\n-                                        LOGGER.debug(\"Reloading table \"+ e.getTableName()\n-                                                +\" data from server\");\n-                                    if(new MetaDataClient(connection).updateCache(connection.getTenantId(),\n-                                        e.getSchemaName(), e.getTableName(), true).wasUpdated()){\n+                                if (doRetryOnMetaNotFoundError && e.getTableName() != null) {\n+                                    if (LOGGER.isDebugEnabled()) {\n+                                        LOGGER.debug(\"Reloading table \" + e.getTableName() + \" data from server\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTk0NDgxNQ=="}, "originalCommit": {"oid": "d649c729258fcdb4f2171ea2c772c981f04ea2e7"}, "originalPosition": 57}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ1OTYzMDU4OnYy", "diffSide": "RIGHT", "path": "phoenix-core/src/main/java/org/apache/phoenix/coprocessor/MetaDataEndpointImpl.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMFQwNjowMTo0MVrOIMd-UA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMFQwNzozMzo0OFrOIMgqXg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTk0NDkxMg==", "bodyText": "same here", "url": "https://github.com/apache/phoenix/pull/1039#discussion_r549944912", "createdAt": "2020-12-30T06:01:41Z", "author": {"login": "virajjasani"}, "path": "phoenix-core/src/main/java/org/apache/phoenix/coprocessor/MetaDataEndpointImpl.java", "diffHunk": "@@ -2461,11 +2464,11 @@ public Object run() throws Exception {\n                         try (PhoenixConnection connection =\n                                      QueryUtil.getConnectionOnServer(env.getConfiguration())\n                                              .unwrap(PhoenixConnection.class)) {\n-                            try{\n+                            try {\n                                 MetaDataUtil.deleteFromStatsTable(connection, deletedTable,\n                                         physicalTableNames, sharedTableStates);\n-                                LOGGER.info(\"Table stats deleted successfully. \"+\n-                                        deletedTable.getPhysicalName().getString());\n+                                LOGGER.info(\"Table stats deleted successfully. \"\n+                                    + deletedTable.getPhysicalName().getString());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d649c729258fcdb4f2171ea2c772c981f04ea2e7"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTk4ODk1OA==", "bodyText": "phoenix code have more this ways that not placeholder in log. I will solved this in another issues.", "url": "https://github.com/apache/phoenix/pull/1039#discussion_r549988958", "createdAt": "2020-12-30T07:33:48Z", "author": {"login": "wangchao316"}, "path": "phoenix-core/src/main/java/org/apache/phoenix/coprocessor/MetaDataEndpointImpl.java", "diffHunk": "@@ -2461,11 +2464,11 @@ public Object run() throws Exception {\n                         try (PhoenixConnection connection =\n                                      QueryUtil.getConnectionOnServer(env.getConfiguration())\n                                              .unwrap(PhoenixConnection.class)) {\n-                            try{\n+                            try {\n                                 MetaDataUtil.deleteFromStatsTable(connection, deletedTable,\n                                         physicalTableNames, sharedTableStates);\n-                                LOGGER.info(\"Table stats deleted successfully. \"+\n-                                        deletedTable.getPhysicalName().getString());\n+                                LOGGER.info(\"Table stats deleted successfully. \"\n+                                    + deletedTable.getPhysicalName().getString());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTk0NDkxMg=="}, "originalCommit": {"oid": "d649c729258fcdb4f2171ea2c772c981f04ea2e7"}, "originalPosition": 48}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ1OTYzNDQ4OnYy", "diffSide": "RIGHT", "path": "phoenix-core/src/main/java/org/apache/phoenix/coprocessor/MetaDataEndpointImpl.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMFQwNjowNToyNlrOIMeAag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMFQwNjowNToyNlrOIMeAag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTk0NTQ1MA==", "bodyText": "Since we are sorting list, we can directly use sort():\nCOLUMN_KV_COLUMNS.sort(CellComparator.getInstance());", "url": "https://github.com/apache/phoenix/pull/1039#discussion_r549945450", "createdAt": "2020-12-30T06:05:26Z", "author": {"login": "virajjasani"}, "path": "phoenix-core/src/main/java/org/apache/phoenix/coprocessor/MetaDataEndpointImpl.java", "diffHunk": "@@ -456,7 +457,7 @@\n     );\n \n     static {\n-        Collections.sort(COLUMN_KV_COLUMNS, KeyValue.COMPARATOR);\n+        Collections.sort(COLUMN_KV_COLUMNS, CellComparator.getInstance());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d649c729258fcdb4f2171ea2c772c981f04ea2e7"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4539, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}