{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc1MTgxNTg0", "number": 4496, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNlQxOTozNjo0OVrODgOvtA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxMDowOToyMVrODhdvtQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1MTIyNjEyOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/hudson/model/Items.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNlQxOTozNjo0OVrOFqU72A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QwMTo0Mjo1NFrOFqWspA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTkyNzUxMg==", "bodyText": "Do we need all checks below after adding these predicates?", "url": "https://github.com/jenkinsci/jenkins/pull/4496#discussion_r379927512", "createdAt": "2020-02-16T19:36:49Z", "author": {"login": "oleg-nenashev"}, "path": "core/src/main/java/hudson/model/Items.java", "diffHunk": "@@ -421,7 +421,7 @@ public static XmlFile getConfigFile(Item item) {\n         return r;\n     }\n     private static <T extends Item> void getAllItems(final ItemGroup root, Class<T> type, List<T> r, Predicate<T> pred) {\n-        List<Item> items = new ArrayList<>(((ItemGroup<?>) root).getItems());\n+        List<Item> items = new ArrayList<>(((ItemGroup<?>) root).getItems(t -> t instanceof ItemGroup || (type.isInstance(t) && pred.test(type.cast(t)))));\n         // because we add items depth first, we can use the quicker BY_NAME comparison", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "57d8045e8d777f61246737ed06e33d7ae7be3648"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTk1NjM4OA==", "bodyText": "Yes there is a sneaky edge case where type is an ItemGroup.  Now that I think about it I've forgotten to add a test for this and will be adding one. The test does cover this case due to folders", "url": "https://github.com/jenkinsci/jenkins/pull/4496#discussion_r379956388", "createdAt": "2020-02-17T01:42:54Z", "author": {"login": "res0nance"}, "path": "core/src/main/java/hudson/model/Items.java", "diffHunk": "@@ -421,7 +421,7 @@ public static XmlFile getConfigFile(Item item) {\n         return r;\n     }\n     private static <T extends Item> void getAllItems(final ItemGroup root, Class<T> type, List<T> r, Predicate<T> pred) {\n-        List<Item> items = new ArrayList<>(((ItemGroup<?>) root).getItems());\n+        List<Item> items = new ArrayList<>(((ItemGroup<?>) root).getItems(t -> t instanceof ItemGroup || (type.isInstance(t) && pred.test(type.cast(t)))));\n         // because we add items depth first, we can use the quicker BY_NAME comparison", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTkyNzUxMg=="}, "originalCommit": {"oid": "57d8045e8d777f61246737ed06e33d7ae7be3648"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2NDE2ODMxOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/jenkins/model/Jenkins.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxMDowOTowNFrOFsNZAg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxMDowOTowNFrOFsNZAg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTkwMTA1OA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    for (TopLevelItem i : getItems(type::isInstance))\n          \n          \n            \n                    for (TopLevelItem i : getItems(type::isInstance)) {", "url": "https://github.com/jenkinsci/jenkins/pull/4496#discussion_r381901058", "createdAt": "2020-02-20T10:09:04Z", "author": {"login": "alecharp"}, "path": "core/src/main/java/jenkins/model/Jenkins.java", "diffHunk": "@@ -1796,9 +1796,8 @@ public String getFullDisplayName() {\n      */\n     public <T> List<T> getItems(Class<T> type) {\n         List<T> r = new ArrayList<>();\n-        for (TopLevelItem i : getItems())\n-            if (type.isInstance(i))\n-                 r.add(type.cast(i));\n+        for (TopLevelItem i : getItems(type::isInstance))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "57d8045e8d777f61246737ed06e33d7ae7be3648"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2NDE2OTQ5OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/jenkins/model/Jenkins.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxMDowOToyMVrOFsNZsw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxMDowOToyMVrOFsNZsw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTkwMTIzNQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                         r.add(type.cast(i));\n          \n          \n            \n                         r.add(type.cast(i));\n          \n          \n            \n                     }", "url": "https://github.com/jenkinsci/jenkins/pull/4496#discussion_r381901235", "createdAt": "2020-02-20T10:09:21Z", "author": {"login": "alecharp"}, "path": "core/src/main/java/jenkins/model/Jenkins.java", "diffHunk": "@@ -1796,9 +1796,8 @@ public String getFullDisplayName() {\n      */\n     public <T> List<T> getItems(Class<T> type) {\n         List<T> r = new ArrayList<>();\n-        for (TopLevelItem i : getItems())\n-            if (type.isInstance(i))\n-                 r.add(type.cast(i));\n+        for (TopLevelItem i : getItems(type::isInstance))\n+             r.add(type.cast(i));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "57d8045e8d777f61246737ed06e33d7ae7be3648"}, "originalPosition": 8}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 778, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}