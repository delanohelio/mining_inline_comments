{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM1MzYzNjAx", "number": 5105, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxODowNzoxMVrOFDEGQw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQxOTowNDozOFrOFDotWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM4NzU3MTg3OnYy", "diffSide": "RIGHT", "path": "core/src/test/java/org/acegisecurity/util/FieldUtilsTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxODowNzoxMVrOICiXWg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxODowNzoxMVrOICiXWg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTUzMTA5OA==", "bodyText": "this behaved differently with the initial acegi-rewrite if it was public", "url": "https://github.com/jenkinsci/jenkins/pull/5105#discussion_r539531098", "createdAt": "2020-12-09T18:07:11Z", "author": {"login": "jtnord"}, "path": "core/src/test/java/org/acegisecurity/util/FieldUtilsTest.java", "diffHunk": "@@ -0,0 +1,59 @@\n+package org.acegisecurity.util;\n+\n+import org.junit.jupiter.api.Test;\n+import org.jvnet.hudson.test.Issue;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertThrows;\n+\n+class FieldUtilsTest {\n+\n+    @Issue(\"JENKINS-64390\")\n+    @Test\n+    public void setProtectedFieldValue_Should_fail_silently_to_set_public_final_fields_in_InnerClass() throws Exception {\n+        InnerClassWithPublicFinalField sut = new InnerClassWithPublicFinalField();\n+        FieldUtils.setProtectedFieldValue(\"myField\", sut, \"test\");\n+        assertEquals(sut.getMyField(), \"original\");\n+    }\n+\n+    @Test\n+    @Issue(\"JENKINS-64390\")\n+    public void setProtectedFieldValue_Should_fail_silently_to_set_public_final_fields_in_OuterClass() throws Exception {\n+        OuterClassWithPublicFinalField sut = new OuterClassWithPublicFinalField();\n+        FieldUtils.setProtectedFieldValue(\"myField\", sut, \"test\");\n+        assertEquals(sut.getMyField(), \"original\");\n+    }\n+\n+    @Test\n+    public void setProtectedFieldValue_Should_Succeed() throws Exception {\n+        InnerClassWithProtectedField sut = new InnerClassWithProtectedField();\n+        FieldUtils.setProtectedFieldValue(\"myProtectedField\", sut, \"test\");\n+        assertEquals(sut.getMyNonFinalField(), \"test\");\n+    }\n+\n+    @Test\n+    public void setNonExistingField_Should_Fail() throws Exception {\n+        InnerClassWithProtectedField sut = new InnerClassWithProtectedField();\n+        assertThrows(Exception.class, () -> FieldUtils.setProtectedFieldValue(\"bogus\", sut, \"whatever\"));\n+    }\n+\n+    class InnerClassWithPublicFinalField {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a0a1739f95bbfa41a098c563fe9895b24ca07634"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM4NzY0MzM0OnYy", "diffSide": "RIGHT", "path": "core/src/test/java/org/acegisecurity/util/FieldUtilsTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxODoyMzo0OFrOICjCUA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxODoyMzo0OFrOICjCUA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTU0MjA5Ng==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            class FieldUtilsTest {\n          \n          \n            \n            @SuppressWarnings(\"deprecation\")\n          \n          \n            \n            public class FieldUtilsTest {", "url": "https://github.com/jenkinsci/jenkins/pull/5105#discussion_r539542096", "createdAt": "2020-12-09T18:23:48Z", "author": {"login": "jglick"}, "path": "core/src/test/java/org/acegisecurity/util/FieldUtilsTest.java", "diffHunk": "@@ -0,0 +1,59 @@\n+package org.acegisecurity.util;\n+\n+import org.junit.jupiter.api.Test;\n+import org.jvnet.hudson.test.Issue;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertThrows;\n+\n+class FieldUtilsTest {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a0a1739f95bbfa41a098c563fe9895b24ca07634"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5MzU3MDE5OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/org/acegisecurity/util/FieldUtils.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQxOTowNDozOFrOIDY0cQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQxOTowNDozOFrOIDY0cQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDQyMzI4MQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        // acgegi would silently fail to write to final fields\n          \n          \n            \n                        // acegi would silently fail to write to final fields", "url": "https://github.com/jenkinsci/jenkins/pull/5105#discussion_r540423281", "createdAt": "2020-12-10T19:04:38Z", "author": {"login": "oleg-nenashev"}, "path": "core/src/main/java/org/acegisecurity/util/FieldUtils.java", "diffHunk": "@@ -40,8 +42,14 @@ public static Object getProtectedFieldValue(String protectedField, Object object\n \n     public static void setProtectedFieldValue(String protectedField, Object object, Object newValue) {\n         try {\n-            org.apache.commons.lang.reflect.FieldUtils.writeField(object, protectedField, newValue, true);\n-        } catch (IllegalAccessException x) {\n+            // acgegi would silently fail to write to final fields", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d729fa790dbc95e3a1cc97ffca18cb7774301840"}, "originalPosition": 15}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 143, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}