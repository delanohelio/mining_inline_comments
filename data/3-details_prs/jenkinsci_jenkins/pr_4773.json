{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI4NTk2NTk2", "number": 4773, "title": "JENKINS-62572: Extend Downloadable API slightly", "bodyText": "See JENKINS-62572.\nThis mainly adds:\n\na static Downloadable.idFor(Class) method, which returns the ID to\nuse for a given class\n\nexisting code using a class now uses this method to do the mapping\nto an ID value\n\n\nan overload of the static Downloadable.get() method taking a Class\n\napplies idFor() and forwards to the existing String-based get()\n\n\n\nIt also adds a bit more JavaDoc to existing methods, and adds a few\n@nonnull annotations.\nNo testcases added; the existing tests already exercise the code changes.\nProposed changelog entries\n\nJENKINS-62572: Extend the DownloadService.Downloadable API slightly.\n\nProposed upgrade guidelines\nN/A\nSubmitter checklist\n\n (If applicable) Jira issue is well described\n Changelog entries and upgrade guidelines are appropriate for the audience affected by the change (users or developer, depending on the change). Examples\n\nFill-in the Proposed changelog entries section only if there are breaking changes or other changes which may require extra steps from users during the upgrade\n\n\n Appropriate autotests or explanation to why this change has no tests\n For dependency updates: links to external changelogs and, if possible, full diffs\n\nDesired reviewers\nMaintainer checklist\nBefore the changes are marked as ready-for-merge:\n\n There are at least 2 approvals for the pull request and no outstanding requests for change\n Conversations in the pull request are over OR it is explicit that a reviewer does not block the change\n Changelog entries in the PR title and/or Proposed changelog entries are correct\n Proper changelog labels are set so that the changelog can be generated automatically\n If the change needs additional upgrade steps from users, upgrade-guide-needed label is set and there is a Proposed upgrade guidelines section in the PR title. (example)\n If it would make sense to backport the change to LTS, a Jira issue must exist, be a Bug or Improvement, and be labeled as lts-candidate to be considered (see query).", "createdAt": "2020-06-05T17:15:12Z", "url": "https://github.com/jenkinsci/jenkins/pull/4773", "merged": true, "mergeCommit": {"oid": "a1b5ec15326bc7ff72f080d8c4b962bad7ca5dfe"}, "closed": true, "closedAt": "2020-07-06T06:52:53Z", "author": {"login": "Zastai"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcoVsjBgH2gAyNDI4NTk2NTk2OjU2NWM5MWQyMTk3MGY1MTgyMmVmMGMxZGUxOGIxMjAyMTcyNDYyNzU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcuq87vAFqTQzNzMwODY5NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "565c91d21970f51822ef0c1de18b120217246275", "author": {"user": {"login": "Zastai", "name": "Tim Van Holder"}}, "url": "https://github.com/jenkinsci/jenkins/commit/565c91d21970f51822ef0c1de18b120217246275", "committedDate": "2020-06-05T16:59:43Z", "message": "JENKINS-62572: Extend Downloadable API slightly\n\nThis mainly adds:\n- a static Downloadable.idFor(Class) method, which returns the ID to\n  use for a given class\n  - existing code using a class now uses this method to do the mapping\n    to an ID value\n- an overload of the static Downloadable.get() method taking a Class\n  - applies idFor() and forwards to the existing String-based get()\n\nIt also adds a bit more JavaDoc to existing methods, and adds a few\n@NonNull annotations."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "712a9c4ee100b213c48f54658f1ed788dfb5c79b", "author": {"user": {"login": "Zastai", "name": "Tim Van Holder"}}, "url": "https://github.com/jenkinsci/jenkins/commit/712a9c4ee100b213c48f54658f1ed788dfb5c79b", "committedDate": "2020-06-06T20:41:14Z", "message": "Use TODO, not FIXME, for @since."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM0MTk1NDYw", "url": "https://github.com/jenkinsci/jenkins/pull/4773#pullrequestreview-434195460", "createdAt": "2020-06-19T16:11:41Z", "commit": {"oid": "712a9c4ee100b213c48f54658f1ed788dfb5c79b"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQxNjoxMTo0MVrOGmaNJg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQxNjoxMjo0MlrOGmaO5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjkyODQyMg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                     */\n          \n          \n            \n                     */\n          \n          \n            \n                     @CheckForNull", "url": "https://github.com/jenkinsci/jenkins/pull/4773#discussion_r442928422", "createdAt": "2020-06-19T16:11:41Z", "author": {"login": "oleg-nenashev"}, "path": "core/src/main/java/hudson/model/DownloadService.java", "diffHunk": "@@ -410,8 +450,21 @@ public JSONObject reduce(List<JSONObject> jsonList) {\n             return ExtensionList.lookup(Downloadable.class);\n         }\n \n+        /**\n+         * Returns the {@link Downloadable} that has an ID associated with the specified class.\n+         *\n+         * @param clazz The class to use to determine the downloadable's ID.\n+         *\n+         * @since TODO\n+         */\n+        public static Downloadable get(@NonNull Class<?> clazz) {\n+            return Downloadable.get(Downloadable.idFor(clazz));\n+        }\n+\n         /**\n          * Returns the {@link Downloadable} that has the given ID.\n+         *\n+         * @param id The ID to look for.\n          */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "712a9c4ee100b213c48f54658f1ed788dfb5c79b"}, "originalPosition": 123}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjkyODg3MA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    public static Downloadable get(@NonNull Class<?> clazz) {\n          \n          \n            \n                    @CheckForNull\n          \n          \n            \n                    public static Downloadable get(@NonNull Class<?> clazz) {", "url": "https://github.com/jenkinsci/jenkins/pull/4773#discussion_r442928870", "createdAt": "2020-06-19T16:12:42Z", "author": {"login": "oleg-nenashev"}, "path": "core/src/main/java/hudson/model/DownloadService.java", "diffHunk": "@@ -410,8 +450,21 @@ public JSONObject reduce(List<JSONObject> jsonList) {\n             return ExtensionList.lookup(Downloadable.class);\n         }\n \n+        /**\n+         * Returns the {@link Downloadable} that has an ID associated with the specified class.\n+         *\n+         * @param clazz The class to use to determine the downloadable's ID.\n+         *\n+         * @since TODO\n+         */\n+        public static Downloadable get(@NonNull Class<?> clazz) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "712a9c4ee100b213c48f54658f1ed788dfb5c79b"}, "originalPosition": 115}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "88fe0c733ca7113e2976c04adb664dcac4d049f6", "author": {"user": {"login": "Zastai", "name": "Tim Van Holder"}}, "url": "https://github.com/jenkinsci/jenkins/commit/88fe0c733ca7113e2976c04adb664dcac4d049f6", "committedDate": "2020-06-19T18:25:36Z", "message": "Add nullability annotations."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "84c94c5ff5433ef91abd521e9125367ea5436c43", "author": {"user": {"login": "Zastai", "name": "Tim Van Holder"}}, "url": "https://github.com/jenkinsci/jenkins/commit/84c94c5ff5433ef91abd521e9125367ea5436c43", "committedDate": "2020-06-19T18:27:16Z", "message": "Merge branch 'master' into JENKINS-62572"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM2ODM2NDQx", "url": "https://github.com/jenkinsci/jenkins/pull/4773#pullrequestreview-436836441", "createdAt": "2020-06-24T16:58:28Z", "commit": {"oid": "84c94c5ff5433ef91abd521e9125367ea5436c43"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM2OTYyNTM1", "url": "https://github.com/jenkinsci/jenkins/pull/4773#pullrequestreview-436962535", "createdAt": "2020-06-24T19:58:32Z", "commit": {"oid": "84c94c5ff5433ef91abd521e9125367ea5436c43"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxOTo1ODozMlrOGohBPA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxOTo1ODozMlrOGohBPA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTEzNzIxMg==", "bodyText": "This seems to lack an explanation of the ways this can go wrong. I don't think ID associated with the specified class to someone unfamiliar with internals will make sense without more context.\nAlso e.g. {@see #idFor(Class)} could help.", "url": "https://github.com/jenkinsci/jenkins/pull/4773#discussion_r445137212", "createdAt": "2020-06-24T19:58:32Z", "author": {"login": "daniel-beck"}, "path": "core/src/main/java/hudson/model/DownloadService.java", "diffHunk": "@@ -406,13 +449,29 @@ public JSONObject reduce(List<JSONObject> jsonList) {\n         /**\n          * Returns all the registered {@link Downloadable}s.\n          */\n+        @NonNull\n         public static ExtensionList<Downloadable> all() {\n             return ExtensionList.lookup(Downloadable.class);\n         }\n \n+        /**\n+         * Returns the {@link Downloadable} that has an ID associated with the specified class.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "84c94c5ff5433ef91abd521e9125367ea5436c43"}, "originalPosition": 117}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a9d65652a543c265390b8d842c52ceda40360802", "author": {"user": {"login": "Zastai", "name": "Tim Van Holder"}}, "url": "https://github.com/jenkinsci/jenkins/commit/a9d65652a543c265390b8d842c52ceda40360802", "committedDate": "2020-06-24T21:42:28Z", "message": "Improve JavaDoc.\n\nNow the methods (constructors + get()) that generate an ID based on a\nclass, explicitly state that they use idFor() for that."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM3MzA4NTUw", "url": "https://github.com/jenkinsci/jenkins/pull/4773#pullrequestreview-437308550", "createdAt": "2020-06-25T09:08:59Z", "commit": {"oid": "a9d65652a543c265390b8d842c52ceda40360802"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM3MzA4Njk0", "url": "https://github.com/jenkinsci/jenkins/pull/4773#pullrequestreview-437308694", "createdAt": "2020-06-25T09:09:11Z", "commit": {"oid": "a9d65652a543c265390b8d842c52ceda40360802"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2331, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}