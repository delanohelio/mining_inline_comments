{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ5Nzg2NzYw", "number": 4848, "title": "[JEP-227] Replace Acegi Security with Spring Security & upgrade Spring Framework", "bodyText": "JEP-227\nProposed changelog entries\n\nJenkins now uses Spring Security rather than its predecessor, Acegi Security. Other bundled Spring libraries are also updated.\n\nProposed upgrade guidelines\nhttps://www.jenkins.io/blog/2020/11/10/spring-xstream/\nSee the compatibility table.\nDesired reviewers\n@jenkinsci/core\nMaintainer checklist\nBefore the changes are marked as ready-for-merge:\n\n There are at least 2 approvals for the pull request and no outstanding requests for change\n Conversations in the pull request are over OR it is explicit that a reviewer does not block the change\n Changelog entries in the PR title and/or Proposed changelog entries are correct\n Proper changelog labels are set so that the changelog can be generated automatically\n If the change needs additional upgrade steps from users, upgrade-guide-needed label is set and there is a Proposed upgrade guidelines section in the PR title. (example)\n If it would make sense to backport the change to LTS, a Jira issue must exist, be a Bug or Improvement, and be labeled as lts-candidate to be considered (see query).", "createdAt": "2020-07-15T23:03:29Z", "url": "https://github.com/jenkinsci/jenkins/pull/4848", "merged": true, "mergeCommit": {"oid": "a9ca5ef3d4c97937636bf3c585f4232514279b14"}, "closed": true, "closedAt": "2020-11-06T18:30:26Z", "author": {"login": "jglick"}, "timelineItems": {"totalCount": 185, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc5r7wOgH2gAyNDQ5Nzg2NzYwOmQwYTEyNWExNjkwMmMzM2U5MzA5MjE4NGUzYzRiMWUxZDY5MTk0MTA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABd05gLbAFqTU3OTI2Mzk4Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "d0a125a16902c33e93092184e3c4b1e1d6919410", "author": {"user": {"login": "jglick", "name": "Jesse Glick"}}, "url": "https://github.com/jenkinsci/jenkins/commit/d0a125a16902c33e93092184e3c4b1e1d6919410", "committedDate": "2020-07-29T14:30:57Z", "message": "NPE from User.get"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "697e5553f84bf5ae137ef2a42978060bdcdd6705", "author": {"user": {"login": "jglick", "name": "Jesse Glick"}}, "url": "https://github.com/jenkinsci/jenkins/commit/697e5553f84bf5ae137ef2a42978060bdcdd6705", "committedDate": "2020-07-29T15:48:53Z", "message": "Need to implement setDetails in former subtypes of AbstractAuthenticationToken"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ffdf0397b89e2de8539471b187ae52c6b03bd100", "author": {"user": {"login": "jglick", "name": "Jesse Glick"}}, "url": "https://github.com/jenkinsci/jenkins/commit/ffdf0397b89e2de8539471b187ae52c6b03bd100", "committedDate": "2020-07-29T15:49:35Z", "message": "Custom subtypes of UserDetails must be round-tripped"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a175d17519873fbf4b88f863e83eaf6b1e15b853", "author": {"user": {"login": "jglick", "name": "Jesse Glick"}}, "url": "https://github.com/jenkinsci/jenkins/commit/a175d17519873fbf4b88f863e83eaf6b1e15b853", "committedDate": "2020-07-29T16:27:01Z", "message": "Need to translate UserDetails values for Authentication.principal"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a73186bec3297d4fa9c96a54b6d3c1bb28f6a5bd", "author": {"user": {"login": "jglick", "name": "Jesse Glick"}}, "url": "https://github.com/jenkinsci/jenkins/commit/a73186bec3297d4fa9c96a54b6d3c1bb28f6a5bd", "committedDate": "2020-07-31T20:34:48Z", "message": "Align User.serialVersionUID with the Acegi Security version"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8711c7bd069d23a8400d175ff1320e3a0154c5d3", "author": {"user": {"login": "jglick", "name": "Jesse Glick"}}, "url": "https://github.com/jenkinsci/jenkins/commit/8711c7bd069d23a8400d175ff1320e3a0154c5d3", "committedDate": "2020-07-31T21:30:40Z", "message": "Deprecated stub for WebAuthenticationDetails"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "28ddf31ab104065cdbbd5121aa1c456c40612ae1", "author": {"user": {"login": "jglick", "name": "Jesse Glick"}}, "url": "https://github.com/jenkinsci/jenkins/commit/28ddf31ab104065cdbbd5121aa1c456c40612ae1", "committedDate": "2020-07-31T21:41:03Z", "message": "Merge branch 'master' of github.com:jenkinsci/jenkins into spring-5303"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d5452423bf78387457f50d7bb5ee43fdf6f24d24", "author": {"user": {"login": "jglick", "name": "Jesse Glick"}}, "url": "https://github.com/jenkinsci/jenkins/commit/d5452423bf78387457f50d7bb5ee43fdf6f24d24", "committedDate": "2020-07-31T22:17:09Z", "message": "Added AuthenticationProvider & AbstractUserDetailsAuthenticationProvider"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2f3a61e847b1b4231833fd16d82434a6b76b5e6a", "author": {"user": {"login": "jglick", "name": "Jesse Glick"}}, "url": "https://github.com/jenkinsci/jenkins/commit/2f3a61e847b1b4231833fd16d82434a6b76b5e6a", "committedDate": "2020-07-31T22:29:31Z", "message": "Adding FieldUtils, used by tests in a few plugins"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f77173c4959e7db82541826fe34225310f8b613d", "author": {"user": {"login": "jglick", "name": "Jesse Glick"}}, "url": "https://github.com/jenkinsci/jenkins/commit/f77173c4959e7db82541826fe34225310f8b613d", "committedDate": "2020-08-03T17:30:15Z", "message": "Binary compatibility for PrincipalSid and GrantedAuthoritySid constructors"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1abe5c628e8363ce2bb94632a7e436b2f91218bf", "author": {"user": {"login": "jglick", "name": "Jesse Glick"}}, "url": "https://github.com/jenkinsci/jenkins/commit/1abe5c628e8363ce2bb94632a7e436b2f91218bf", "committedDate": "2020-08-03T17:30:20Z", "message": "Merge branch 'master' of github.com:jenkinsci/jenkins into spring-5303"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6851e326b279aa5e8061b126d7109af6c2181cad", "author": {"user": {"login": "jglick", "name": "Jesse Glick"}}, "url": "https://github.com/jenkinsci/jenkins/commit/6851e326b279aa5e8061b126d7109af6c2181cad", "committedDate": "2020-08-03T19:27:55Z", "message": "Restoring some methods in AuthenticationException, called from AbstractAuthenticationManager in LDAPAuthenticationManager"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4731952f9c4654365b77ab2dce3c47852fe30f87", "author": {"user": {"login": "jglick", "name": "Jesse Glick"}}, "url": "https://github.com/jenkinsci/jenkins/commit/4731952f9c4654365b77ab2dce3c47852fe30f87", "committedDate": "2020-08-03T22:51:06Z", "message": "Restoring serial form compatibility for GrantedAuthorityImpl"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e90cfa4cda26470e147b4958e8314ea10ef0afa1", "author": {"user": {"login": "jglick", "name": "Jesse Glick"}}, "url": "https://github.com/jenkinsci/jenkins/commit/e90cfa4cda26470e147b4958e8314ea10ef0afa1", "committedDate": "2020-08-03T22:51:11Z", "message": "Merge branch 'master' of github.com:jenkinsci/jenkins into spring-5303"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "50a470fe03a385b2248dbaca490c960f0db32b0b", "author": {"user": {"login": "jglick", "name": "Jesse Glick"}}, "url": "https://github.com/jenkinsci/jenkins/commit/50a470fe03a385b2248dbaca490c960f0db32b0b", "committedDate": "2020-08-04T13:24:25Z", "message": "Restored SecurityContextImpl"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1ebb6a58aefea4089487af3d6beac69faac429a6", "author": {"user": {"login": "jglick", "name": "Jesse Glick"}}, "url": "https://github.com/jenkinsci/jenkins/commit/1ebb6a58aefea4089487af3d6beac69faac429a6", "committedDate": "2020-08-04T13:24:29Z", "message": "Merge branch 'master' of github.com:jenkinsci/jenkins into spring-5303"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a67b0284a5530faec4ca54f522946c6e0830b100", "author": {"user": {"login": "jglick", "name": "Jesse Glick"}}, "url": "https://github.com/jenkinsci/jenkins/commit/a67b0284a5530faec4ca54f522946c6e0830b100", "committedDate": "2020-08-05T22:03:24Z", "message": "To avoid Java serialization issues, HudsonPrivateSecurityRealm.Details no longer implements UserDetails"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d94651ed2ca78b6d72d1ae062437b22565a442c9", "author": {"user": {"login": "jglick", "name": "Jesse Glick"}}, "url": "https://github.com/jenkinsci/jenkins/commit/d94651ed2ca78b6d72d1ae062437b22565a442c9", "committedDate": "2020-08-05T23:39:48Z", "message": "Update detached ldap to compatible version from https://github.com/jenkinsci/ldap-plugin/pull/48"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8f71d9142ecb08f05e72872603ea46dd55262c53", "author": {"user": {"login": "jglick", "name": "Jesse Glick"}}, "url": "https://github.com/jenkinsci/jenkins/commit/8f71d9142ecb08f05e72872603ea46dd55262c53", "committedDate": "2020-08-06T20:24:04Z", "message": "AccessDeniedException2Test \u2192 AccessDeniedException3Test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7a063db6e0dc738f990e581063fc8676e92d42a8", "author": {"user": {"login": "jglick", "name": "Jesse Glick"}}, "url": "https://github.com/jenkinsci/jenkins/commit/7a063db6e0dc738f990e581063fc8676e92d42a8", "committedDate": "2020-08-06T21:23:07Z", "message": "Ensure ExceptionTranslationFilter still works if a plugin throws AccessDeniedException2"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1e41d5aa7cc446332faf82c9c47364928752c5b3", "author": {"user": {"login": "jglick", "name": "Jesse Glick"}}, "url": "https://github.com/jenkinsci/jenkins/commit/1e41d5aa7cc446332faf82c9c47364928752c5b3", "committedDate": "2020-08-06T21:44:37Z", "message": "Binary compatibility for BasicHeaderAuthenticator"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cc029a3e09fba20907f535c32e5a820606d6454c", "author": {"user": {"login": "jglick", "name": "Jesse Glick"}}, "url": "https://github.com/jenkinsci/jenkins/commit/cc029a3e09fba20907f535c32e5a820606d6454c", "committedDate": "2020-08-07T11:57:44Z", "message": "Merge branch 'master' of github.com:jenkinsci/jenkins into spring-5303"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7b87b217b526a5100c57f212ac505aab5e70e9ea", "author": {"user": {"login": "jglick", "name": "Jesse Glick"}}, "url": "https://github.com/jenkinsci/jenkins/commit/7b87b217b526a5100c57f212ac505aab5e70e9ea", "committedDate": "2020-08-21T12:58:42Z", "message": "Merge branch 'master' of github.com:jenkinsci/jenkins into spring-5303"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b380b7832f4fc1fd40766c089e1268ece0c73ac2", "author": {"user": {"login": "jglick", "name": "Jesse Glick"}}, "url": "https://github.com/jenkinsci/jenkins/commit/b380b7832f4fc1fd40766c089e1268ece0c73ac2", "committedDate": "2020-08-21T20:10:58Z", "message": "Restored AuthenticationServiceException"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "64f820e47d1a53982121b111d566760cb0ad4104", "author": {"user": {"login": "jglick", "name": "Jesse Glick"}}, "url": "https://github.com/jenkinsci/jenkins/commit/64f820e47d1a53982121b111d566760cb0ad4104", "committedDate": "2020-08-21T20:13:27Z", "message": "Binary compatibility for HudsonPrivateSecurityRealm.Details.getAuthorities"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b7ed6353cf83f6c8909fce9a5e4d3cdf2d8ec050", "author": {"user": {"login": "jglick", "name": "Jesse Glick"}}, "url": "https://github.com/jenkinsci/jenkins/commit/b7ed6353cf83f6c8909fce9a5e4d3cdf2d8ec050", "committedDate": "2020-08-21T20:20:03Z", "message": "Restored User.setAuthorities"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5711c491d4301d72ee90252622479d71d55574ed", "author": {"user": {"login": "jglick", "name": "Jesse Glick"}}, "url": "https://github.com/jenkinsci/jenkins/commit/5711c491d4301d72ee90252622479d71d55574ed", "committedDate": "2020-08-21T20:25:50Z", "message": "To be useful from ActiveDirectoryUserDetail, overridable setAuthorities needs to be called from the ctor (yes this is an antipattern)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7befcfdd773a0eccf7b6930f110ff7331410b0cf", "author": {"user": {"login": "timja", "name": "Tim Jacomb"}}, "url": "https://github.com/jenkinsci/jenkins/commit/7befcfdd773a0eccf7b6930f110ff7331410b0cf", "committedDate": "2020-08-24T06:35:51Z", "message": "INFRA-266 Adjust test for plugins over https"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "80bcc26e39943c7beb793ca7a08f33678ef88c32", "author": {"user": {"login": "jglick", "name": "Jesse Glick"}}, "url": "https://github.com/jenkinsci/jenkins/commit/80bcc26e39943c7beb793ca7a08f33678ef88c32", "committedDate": "2020-08-24T12:52:05Z", "message": "Merge branch 'master' of github.com:jenkinsci/jenkins into spring-5303"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a8785495294467d033625fdddbacad1b55d7a4d5", "author": {"user": {"login": "jglick", "name": "Jesse Glick"}}, "url": "https://github.com/jenkinsci/jenkins/commit/a8785495294467d033625fdddbacad1b55d7a4d5", "committedDate": "2020-08-24T12:53:22Z", "message": "Merge branch 'UpdateCenter2Test.install' into spring-5303"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "48459727d5bec54d254c40c98fce1d8cd61398a9", "author": {"user": {"login": "jglick", "name": "Jesse Glick"}}, "url": "https://github.com/jenkinsci/jenkins/commit/48459727d5bec54d254c40c98fce1d8cd61398a9", "committedDate": "2020-08-24T12:53:54Z", "message": "Merge branch 'fix-test' of github.com:timja/jenkins into spring-5303"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e2b6ff930d708c1a53b748c1a597a4e7d03dcfa1", "author": {"user": {"login": "jglick", "name": "Jesse Glick"}}, "url": "https://github.com/jenkinsci/jenkins/commit/e2b6ff930d708c1a53b748c1a597a4e7d03dcfa1", "committedDate": "2020-08-24T13:20:31Z", "message": "Round-tripping SecurityRealm.AUTHENTICATED_AUTHORITY as object identity: https://github.com/jenkinsci/saml-plugin/blob/351a0210a31c2368b5630c91316afe8bee3b0f5f/src/main/java/org/jenkinsci/plugins/saml/SamlUserDetailsService.java#L62"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1a90114a3b37574afbdb97f815a207924c4d7e26", "author": {"user": {"login": "jglick", "name": "Jesse Glick"}}, "url": "https://github.com/jenkinsci/jenkins/commit/1a90114a3b37574afbdb97f815a207924c4d7e26", "committedDate": "2020-08-27T20:03:04Z", "message": "Merge branch 'master' of github.com:jenkinsci/jenkins into spring-5303"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "929dcd38bcc88ff45b4ae999da0babbce42bfecb", "author": {"user": {"login": "jglick", "name": "Jesse Glick"}}, "url": "https://github.com/jenkinsci/jenkins/commit/929dcd38bcc88ff45b4ae999da0babbce42bfecb", "committedDate": "2020-08-27T20:15:14Z", "message": "Catching and translating AuthenticationException & AcegiSecurityException more broadly.\nShould improve compatibility for code like: https://github.com/jenkinsci/matrix-auth-plugin/blob/9616b3877395aa1e8b0b403601a968fa7a461193/src/main/java/org/jenkinsci/plugins/matrixauth/AuthorizationContainerDescriptor.java#L139-L167"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5f119f5e01789910003989d34e4fd846c1e462a4", "author": {"user": {"login": "jglick", "name": "Jesse Glick"}}, "url": "https://github.com/jenkinsci/jenkins/commit/5f119f5e01789910003989d34e4fd846c1e462a4", "committedDate": "2020-08-28T13:30:20Z", "message": "https://github.com/spring-projects/spring-security/releases/tag/5.3.4.RELEASE"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2f6380ca7fd52d0e01239c1070f2975573c13cbc", "author": {"user": {"login": "jglick", "name": "Jesse Glick"}}, "url": "https://github.com/jenkinsci/jenkins/commit/2f6380ca7fd52d0e01239c1070f2975573c13cbc", "committedDate": "2020-08-28T21:49:20Z", "message": "Use JUnit 5"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fe269a9e0f37696fe3564251a3234792273953f0", "author": {"user": {"login": "jglick", "name": "Jesse Glick"}}, "url": "https://github.com/jenkinsci/jenkins/commit/fe269a9e0f37696fe3564251a3234792273953f0", "committedDate": "2020-08-28T21:53:45Z", "message": "While UsernameNotFoundException extends BadCredentialsException in Acegi Security, in Spring Security it directly extends AuthenticationException"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5d87079ab0bb6bd92419700c141689f44406f6c3", "author": {"user": {"login": "jglick", "name": "Jesse Glick"}}, "url": "https://github.com/jenkinsci/jenkins/commit/5d87079ab0bb6bd92419700c141689f44406f6c3", "committedDate": "2020-08-28T22:08:48Z", "message": "Documenting that Run.fromExternalizableId can throw AccessDeniedException"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4eaf8831d3e72f558405c6e14785d22459ee546f", "author": {"user": {"login": "jglick", "name": "Jesse Glick"}}, "url": "https://github.com/jenkinsci/jenkins/commit/4eaf8831d3e72f558405c6e14785d22459ee546f", "committedDate": "2020-08-31T14:34:23Z", "message": "Merge branch 'master' of github.com:jenkinsci/jenkins into spring-5303"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc5NzU4NzE2", "url": "https://github.com/jenkinsci/jenkins/pull/4848#pullrequestreview-479758716", "createdAt": "2020-09-01T13:47:55Z", "commit": {"oid": "4eaf8831d3e72f558405c6e14785d22459ee546f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxMzo0Nzo1NVrOHK3G6Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxMzo0Nzo1NVrOHK3G6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTE1MDY5Nw==", "bodyText": "does this even need to be exposed (could be said that it is just a poilluting methid in the previous version) and the only legitimate use case is in close", "url": "https://github.com/jenkinsci/jenkins/pull/4848#discussion_r481150697", "createdAt": "2020-09-01T13:47:55Z", "author": {"login": "jtnord"}, "path": "core/src/main/java/hudson/security/ACLContext.java", "diffHunk": "@@ -52,12 +52,21 @@\n     /**\n      * Accessor for the previous context.\n      * @return the previous context.\n+     * @since TODO\n      */\n     @NonNull\n-    public SecurityContext getPreviousContext() {\n+    public SecurityContext getPreviousContext2() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4eaf8831d3e72f558405c6e14785d22459ee546f"}, "originalPosition": 21}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc5ODY1NDMx", "url": "https://github.com/jenkinsci/jenkins/pull/4848#pullrequestreview-479865431", "createdAt": "2020-09-01T15:31:11Z", "commit": {"oid": "4eaf8831d3e72f558405c6e14785d22459ee546f"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxNTozMToxMVrOHK8JpA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxNTozOTozM1rOHK8fBg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTIzMzMxNg==", "bodyText": "would it be possible to @Restrict(NoExternalUse.class) this (so that forces plugins to upgrade).\nperhaps that is a general question that should be asked higher up?", "url": "https://github.com/jenkinsci/jenkins/pull/4848#discussion_r481233316", "createdAt": "2020-09-01T15:31:11Z", "author": {"login": "jtnord"}, "path": "core/src/main/java/org/acegisecurity/BadCredentialsException.java", "diffHunk": "@@ -0,0 +1,60 @@\n+/*\n+ * The MIT License\n+ *\n+ * Copyright 2020 CloudBees, Inc.\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included in\n+ * all copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+ * THE SOFTWARE.\n+ */\n+\n+package org.acegisecurity;\n+\n+import org.acegisecurity.userdetails.UsernameNotFoundException;\n+\n+/**\n+ * @deprecated use {@link org.springframework.security.authentication.BadCredentialsException}\n+ */\n+@Deprecated", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4eaf8831d3e72f558405c6e14785d22459ee546f"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTIzNDMzNw==", "bodyText": "deprecated?  https://docs.spring.io/spring-security/site/docs/current/api/org/springframework/security/acls/domain/GrantedAuthoritySid.html", "url": "https://github.com/jenkinsci/jenkins/pull/4848#discussion_r481234337", "createdAt": "2020-09-01T15:32:41Z", "author": {"login": "jtnord"}, "path": "core/src/main/java/org/acegisecurity/acls/sid/GrantedAuthoritySid.java", "diffHunk": "@@ -0,0 +1,72 @@\n+/*\n+ * The MIT License\n+ *\n+ * Copyright 2020 CloudBees, Inc.\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included in\n+ * all copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+ * THE SOFTWARE.\n+ */\n+\n+package org.acegisecurity.acls.sid;\n+\n+import java.util.Objects;\n+import org.springframework.security.core.GrantedAuthority;\n+\n+public class GrantedAuthoritySid implements Sid {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4eaf8831d3e72f558405c6e14785d22459ee546f"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTIzNzE5Ng==", "bodyText": "I was wondering why this does not extend org.springframework.security.acls.models.Sid", "url": "https://github.com/jenkinsci/jenkins/pull/4848#discussion_r481237196", "createdAt": "2020-09-01T15:37:04Z", "author": {"login": "jtnord"}, "path": "core/src/main/java/org/acegisecurity/acls/sid/Sid.java", "diffHunk": "@@ -0,0 +1,36 @@\n+/*\n+ * The MIT License\n+ *\n+ * Copyright 2020 CloudBees, Inc.\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included in\n+ * all copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+ * THE SOFTWARE.\n+ */\n+\n+package org.acegisecurity.acls.sid;\n+\n+// TODO perhaps delegate to the org.springframework.security.acls package", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4eaf8831d3e72f558405c6e14785d22459ee546f"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTIzODIzOA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            public abstract class AbstractAuthenticationToken implements Authentication {\n          \n          \n            \n            @Deprecated\n          \n          \n            \n            public abstract class AbstractAuthenticationToken implements Authentication {", "url": "https://github.com/jenkinsci/jenkins/pull/4848#discussion_r481238238", "createdAt": "2020-09-01T15:38:41Z", "author": {"login": "jtnord"}, "path": "core/src/main/java/org/acegisecurity/providers/AbstractAuthenticationToken.java", "diffHunk": "@@ -0,0 +1,100 @@\n+/*\n+ * The MIT License\n+ *\n+ * Copyright 2020 CloudBees, Inc.\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included in\n+ * all copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+ * THE SOFTWARE.\n+ */\n+\n+package org.acegisecurity.providers;\n+\n+import java.util.Arrays;\n+import java.util.Objects;\n+import org.acegisecurity.Authentication;\n+import org.acegisecurity.GrantedAuthority;\n+import org.acegisecurity.userdetails.UserDetails;\n+\n+/**\n+ * @deprecated use {@link org.springframework.security.authentication.AbstractAuthenticationToken}\n+ */\n+public abstract class AbstractAuthenticationToken implements Authentication {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4eaf8831d3e72f558405c6e14785d22459ee546f"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTIzODc5MA==", "bodyText": "should be in addition not removing (based on my superb up to date legal skilz)\nor github is lying that this is a rename", "url": "https://github.com/jenkinsci/jenkins/pull/4848#discussion_r481238790", "createdAt": "2020-09-01T15:39:33Z", "author": {"login": "jtnord"}, "path": "core/src/main/java/org/acegisecurity/providers/AuthenticationProvider.java", "diffHunk": "@@ -1,7 +1,7 @@\n /*\n  * The MIT License\n  *\n- * Copyright (c) 2004-2010, Oracle Corporation\n+ * Copyright 2020 CloudBees, Inc.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4eaf8831d3e72f558405c6e14785d22459ee546f"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "17a7fcb7d50c2d459999857017a516fcaefc49a9", "author": {"user": {"login": "jglick", "name": "Jesse Glick"}}, "url": "https://github.com/jenkinsci/jenkins/commit/17a7fcb7d50c2d459999857017a516fcaefc49a9", "committedDate": "2020-09-01T15:49:53Z", "message": "AbstractAuthenticationToken should be @Deprecated\n\nCo-authored-by: James Nord <jtnord@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b7d7d890c10bc0d0175532a916015767382ada14", "author": {"user": {"login": "jglick", "name": "Jesse Glick"}}, "url": "https://github.com/jenkinsci/jenkins/commit/b7d7d890c10bc0d0175532a916015767382ada14", "committedDate": "2020-09-01T15:51:46Z", "message": "Merge branch 'master' of github.com:jenkinsci/jenkins into spring-5303"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fd744d2885967f1eb91e1f96166a195c838dc9aa", "author": {"user": {"login": "jglick", "name": "Jesse Glick"}}, "url": "https://github.com/jenkinsci/jenkins/commit/fd744d2885967f1eb91e1f96166a195c838dc9aa", "committedDate": "2020-09-02T19:58:12Z", "message": "Apparently the ~2h of functional tests do not include the corner case that you mistyped your password"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7fa8a12c2fded5c9f14a0aac65a2d89a2496940e", "author": {"user": {"login": "jglick", "name": "Jesse Glick"}}, "url": "https://github.com/jenkinsci/jenkins/commit/7fa8a12c2fded5c9f14a0aac65a2d89a2496940e", "committedDate": "2020-09-02T23:00:41Z", "message": "Reverting unintentional Javadoc change"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2be214610581d57ab9d79a72e7d3b93537df1396", "author": {"user": {"login": "jglick", "name": "Jesse Glick"}}, "url": "https://github.com/jenkinsci/jenkins/commit/2be214610581d57ab9d79a72e7d3b93537df1396", "committedDate": "2020-09-14T19:07:03Z", "message": "Merge branch 'master' of github.com:jenkinsci/jenkins into spring-5303"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "657338cf6acaef08fd83f7af942973e5f829cde0", "author": {"user": {"login": "jglick", "name": "Jesse Glick"}}, "url": "https://github.com/jenkinsci/jenkins/commit/657338cf6acaef08fd83f7af942973e5f829cde0", "committedDate": "2020-09-14T19:21:34Z", "message": "Round-trip org.acegisecurity.Authentication, making LdapMultiEmbedded2Test.login pass in PCT"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4bb45a702b8d933e57dcba8707dd51bd41e3697e", "author": {"user": {"login": "jglick", "name": "Jesse Glick"}}, "url": "https://github.com/jenkinsci/jenkins/commit/4bb45a702b8d933e57dcba8707dd51bd41e3697e", "committedDate": "2020-09-14T19:43:18Z", "message": "Round-trip DataAccessException, for PCT in LdapMultiEmbeddedTest"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "862e4e51dd0518bb6d3d07afbf16cf96b6ecfc6d", "author": {"user": {"login": "jglick", "name": "Jesse Glick"}}, "url": "https://github.com/jenkinsci/jenkins/commit/862e4e51dd0518bb6d3d07afbf16cf96b6ecfc6d", "committedDate": "2020-09-16T12:40:42Z", "message": "Merge branch 'master' of github.com:jenkinsci/jenkins into spring-5303"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2bf618557330d8bf9b16378cec4c8d5c713d9133", "author": {"user": {"login": "jglick", "name": "Jesse Glick"}}, "url": "https://github.com/jenkinsci/jenkins/commit/2bf618557330d8bf9b16378cec4c8d5c713d9133", "committedDate": "2020-09-16T12:42:18Z", "message": "Bumping detached copy of ldap, for now to the release of https://github.com/jenkinsci/ldap-plugin/pull/48"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5b60ed0693685aa18ac64841c5d0fa87dca60ab2", "author": {"user": {"login": "jglick", "name": "Jesse Glick"}}, "url": "https://github.com/jenkinsci/jenkins/commit/5b60ed0693685aa18ac64841c5d0fa87dca60ab2", "committedDate": "2020-09-17T17:29:59Z", "message": "Merge branch 'master' of github.com:jenkinsci/jenkins into spring-5303"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c020f8a3a7dd2108106d7fcbc7f81b8b6ff66a37", "author": {"user": {"login": "jglick", "name": "Jesse Glick"}}, "url": "https://github.com/jenkinsci/jenkins/commit/c020f8a3a7dd2108106d7fcbc7f81b8b6ff66a37", "committedDate": "2020-09-18T18:03:05Z", "message": "org.acegisecurity.ui.remember \u2192 org.acegisecurity.ui.rememberme"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ba608c3c0b3671c139aff1b979e78a57c7859237", "author": {"user": {"login": "jglick", "name": "Jesse Glick"}}, "url": "https://github.com/jenkinsci/jenkins/commit/ba608c3c0b3671c139aff1b979e78a57c7859237", "committedDate": "2020-09-18T18:07:17Z", "message": "TokenBasedRememberMeServices2 is not intended as an API"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dc589f12226ac7649d3714cbf9d9254863fe0545", "author": {"user": {"login": "jglick", "name": "Jesse Glick"}}, "url": "https://github.com/jenkinsci/jenkins/commit/dc589f12226ac7649d3714cbf9d9254863fe0545", "committedDate": "2020-09-18T18:26:14Z", "message": "UserDetailsSpringImpl can be marked deprecated to avoid warnings about references"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1039b2bd5d028609662c7a925cceb017ca8e8151", "author": {"user": {"login": "jglick", "name": "Jesse Glick"}}, "url": "https://github.com/jenkinsci/jenkins/commit/1039b2bd5d028609662c7a925cceb017ca8e8151", "committedDate": "2020-09-18T18:28:33Z", "message": "Round-trip RememberMeServices subtypes, expected by crowd2"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "419e44e9f0f9ae80dacf2d7c4840b7f9b5cc9ccb", "author": {"user": {"login": "jglick", "name": "Jesse Glick"}}, "url": "https://github.com/jenkinsci/jenkins/commit/419e44e9f0f9ae80dacf2d7c4840b7f9b5cc9ccb", "committedDate": "2020-09-18T19:01:43Z", "message": "TokenBasedRememberMeServices placeholder for CrowdServletFilter"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "950666e37d7fe45110cc40e74806a485ecaaaef0", "author": {"user": {"login": "jglick", "name": "Jesse Glick"}}, "url": "https://github.com/jenkinsci/jenkins/commit/950666e37d7fe45110cc40e74806a485ecaaaef0", "committedDate": "2020-09-18T19:15:20Z", "message": "crowd2 uses AccountExpiredException, CredentialsExpiredException, & InsufficientAuthenticationException"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "14f20741579f22de7dd0e258394484f11610d498", "author": {"user": {"login": "jglick", "name": "Jesse Glick"}}, "url": "https://github.com/jenkinsci/jenkins/commit/14f20741579f22de7dd0e258394484f11610d498", "committedDate": "2020-09-21T16:59:48Z", "message": "Merge branch 'master' of github.com:jenkinsci/jenkins into spring-5303"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "df3ca87e7688cae5d1223dedd15316a619004d6d", "author": {"user": {"login": "jglick", "name": "Jesse Glick"}}, "url": "https://github.com/jenkinsci/jenkins/commit/df3ca87e7688cae5d1223dedd15316a619004d6d", "committedDate": "2020-09-21T17:02:48Z", "message": "https://github.com/spring-projects/spring-security/releases/tag/5.4.0"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e69a339d6a66c74a717ab8209e47286af0b4ef11", "author": {"user": {"login": "jglick", "name": "Jesse Glick"}}, "url": "https://github.com/jenkinsci/jenkins/commit/e69a339d6a66c74a717ab8209e47286af0b4ef11", "committedDate": "2020-09-28T16:19:53Z", "message": "Merge branch 'master' of github.com:jenkinsci/jenkins into spring-5303"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b6d5a6ee78c6bff991c6a527ca97d39f1b68d9ba", "author": {"user": {"login": "jglick", "name": "Jesse Glick"}}, "url": "https://github.com/jenkinsci/jenkins/commit/b6d5a6ee78c6bff991c6a527ca97d39f1b68d9ba", "committedDate": "2020-09-28T17:01:09Z", "message": "Handle calls to super.getPostLogOutUrl without StackOverflowError"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4bed0db2fafe3129f03b04cff567e46b5e969de6", "author": {"user": {"login": "jglick", "name": "Jesse Glick"}}, "url": "https://github.com/jenkinsci/jenkins/commit/4bed0db2fafe3129f03b04cff567e46b5e969de6", "committedDate": "2020-09-29T21:44:51Z", "message": "Merge branch 'master' of github.com:jenkinsci/jenkins into spring-5303"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6548efe6eb2f3f00da727909582df753c9c66e32", "author": {"user": {"login": "jglick", "name": "Jesse Glick"}}, "url": "https://github.com/jenkinsci/jenkins/commit/6548efe6eb2f3f00da727909582df753c9c66e32", "committedDate": "2020-09-29T21:54:14Z", "message": "Compatibility for ProviderNotFoundException"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "eb4e22d3c59610dd4843732e684d213a4362ccdd", "author": {"user": {"login": "jglick", "name": "Jesse Glick"}}, "url": "https://github.com/jenkinsci/jenkins/commit/eb4e22d3c59610dd4843732e684d213a4362ccdd", "committedDate": "2020-10-06T15:14:59Z", "message": "Merge branch 'master' of github.com:jenkinsci/jenkins into spring-5303"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "df7c2e982c0b1704a8b8633c0223ae35114948f2", "author": {"user": {"login": "jglick", "name": "Jesse Glick"}}, "url": "https://github.com/jenkinsci/jenkins/commit/df7c2e982c0b1704a8b8633c0223ae35114948f2", "committedDate": "2020-10-06T15:29:36Z", "message": "Binary compatibility for ImpersonatingUserDetailsService, used by at least https://github.com/apefactory/cloudfoundry-uaa-oauth"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "83e4fe9ba1bb19e2ff70213ed49347a6806420e5", "author": {"user": {"login": "jglick", "name": "Jesse Glick"}}, "url": "https://github.com/jenkinsci/jenkins/commit/83e4fe9ba1bb19e2ff70213ed49347a6806420e5", "committedDate": "2020-10-06T16:48:36Z", "message": "Restoring SecurityRealm.createCliAuthenticator to minimize disruption"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "da3d17b85f80c47cd227ba4ab169508e19271c41", "author": {"user": {"login": "jglick", "name": "Jesse Glick"}}, "url": "https://github.com/jenkinsci/jenkins/commit/da3d17b85f80c47cd227ba4ab169508e19271c41", "committedDate": "2020-10-06T19:01:52Z", "message": "Restricted a lot of APIs which should not be used in plugins.\nGathered this list by looking at incompatible changes in japicmp.\nMost are in fact unused; collabnet plugin uses many, but seems to be a blind copy-paste from core.\nExceptionTranslationFilter now merely extended the Spring version, so may as well delete."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7ff3ff57c6f7342c90d76a652f6cd7962ca7d872", "author": {"user": {"login": "jglick", "name": "Jesse Glick"}}, "url": "https://github.com/jenkinsci/jenkins/commit/7ff3ff57c6f7342c90d76a652f6cd7962ca7d872", "committedDate": "2020-10-06T21:59:19Z", "message": "Suppress some doclint as in https://github.com/jenkinsci/plugin-pom/pull/356"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7646dfd127bfe3132b5b33b55dd5306a2b600902", "author": {"user": {"login": "jglick", "name": "Jesse Glick"}}, "url": "https://github.com/jenkinsci/jenkins/commit/7646dfd127bfe3132b5b33b55dd5306a2b600902", "committedDate": "2020-10-06T22:01:37Z", "message": "Broken Javadoc reference after da3d17b85f80c47cd227ba4ab169508e19271c41"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d2ae6cadd44613af8d4f65650efe13baace2c36b", "author": {"user": {"login": "jglick", "name": "Jesse Glick"}}, "url": "https://github.com/jenkinsci/jenkins/commit/d2ae6cadd44613af8d4f65650efe13baace2c36b", "committedDate": "2020-10-14T14:03:27Z", "message": "Merge branch 'master' of github.com:jenkinsci/jenkins into spring-5303"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3e3792d61ff6142700e61c6516b138e39d9087b9", "author": {"user": {"login": "jglick", "name": "Jesse Glick"}}, "url": "https://github.com/jenkinsci/jenkins/commit/3e3792d61ff6142700e61c6516b138e39d9087b9", "committedDate": "2020-10-19T20:08:32Z", "message": "Merge branch 'master' of https://github.com/jenkinsci/jenkins into spring-5303"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3ce4ca341c7a447e7852d5af1650f58dfdb7e58d", "author": {"user": {"login": "jglick", "name": "Jesse Glick"}}, "url": "https://github.com/jenkinsci/jenkins/commit/3ce4ca341c7a447e7852d5af1650f58dfdb7e58d", "committedDate": "2020-10-19T20:11:20Z", "message": "https://github.com/spring-projects/spring-security/releases/tag/5.4.1"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "899773eb2383ce4971451d78a6b0504adc242c94", "author": {"user": {"login": "jglick", "name": "Jesse Glick"}}, "url": "https://github.com/jenkinsci/jenkins/commit/899773eb2383ce4971451d78a6b0504adc242c94", "committedDate": "2020-10-20T14:55:58Z", "message": "Merge branch 'master' of https://github.com/jenkinsci/jenkins into spring-5303"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "757e1a7eb5db21fc19aa6345e82f9499faa25665", "author": {"user": {"login": "jglick", "name": "Jesse Glick"}}, "url": "https://github.com/jenkinsci/jenkins/commit/757e1a7eb5db21fc19aa6345e82f9499faa25665", "committedDate": "2020-10-20T15:21:49Z", "message": "DisabledException & LockedException referenced from https://github.com/jenkinsci/cas-plugin/blob/d17aa8583af17dfdb8e069c41f986f2d844a719c/src/main/java/org/jenkinsci/plugins/cas/spring/security/AcegiAuthenticationManager.java#L53-L56"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ffe273a43a61c29e3dcb5340c4971cb4a63b10c7", "author": {"user": {"login": "jglick", "name": "Jesse Glick"}}, "url": "https://github.com/jenkinsci/jenkins/commit/ffe273a43a61c29e3dcb5340c4971cb4a63b10c7", "committedDate": "2020-10-20T20:59:22Z", "message": "HttpSessionContextIntegrationFilter2 is used by cas and collabnet plugins.\nUnrestricting it will not allow versions built on Acegi Security to work, since its signature is changing,\nbut will at least allow newer versions rewritten to Spring Security to retain this functionality.\nIdeally there would be some more opaque mechanism to make more pieces of SecurityRealm.createFilter reusable\n(this one is not in commonFilters shared with LegacySecurityRealm)."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE1MTAwODI3", "url": "https://github.com/jenkinsci/jenkins/pull/4848#pullrequestreview-515100827", "createdAt": "2020-10-22T20:39:10Z", "commit": {"oid": "ffe273a43a61c29e3dcb5340c4971cb4a63b10c7"}, "state": "COMMENTED", "comments": {"totalCount": 15, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQyMDozOToxMFrOHmy8fg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQyMToyMTozNVrOHm0UNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDQ0MjYyMg==", "bodyText": "jenkinsci/lib-access-modifier#28 would be useful here and in a few other places.", "url": "https://github.com/jenkinsci/jenkins/pull/4848#discussion_r510442622", "createdAt": "2020-10-22T20:39:10Z", "author": {"login": "jglick"}, "path": "core/src/main/java/hudson/security/AbstractPasswordBasedSecurityRealm.java", "diffHunk": "@@ -87,15 +112,65 @@ private UserDetails doAuthenticate(String username, String password) throws Auth\n      * a query like this, just always throw {@link UsernameNotFoundException}.\n      */\n     @Override\n-    public abstract UserDetails loadUserByUsername(String username) throws UsernameNotFoundException, DataAccessException;\n+    public UserDetails loadUserByUsername2(String username) throws UsernameNotFoundException {\n+        if (Util.isOverridden(AbstractPasswordBasedSecurityRealm.class, getClass(), \"loadUserByUsername\", String.class)) {\n+            try {\n+                return loadUserByUsername(username).toSpring();\n+            } catch (org.acegisecurity.AcegiSecurityException x) {\n+                throw x.toSpring();\n+            } catch (org.springframework.dao.DataAccessException x) {\n+                throw x.toSpring();\n+            }\n+        } else {\n+            throw new AbstractMethodError(\"Implement loadUserByUsername2\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ffe273a43a61c29e3dcb5340c4971cb4a63b10c7"}, "originalPosition": 133}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDQ0NDU5Mw==", "bodyText": "Not sure what to do with this. Could deprecate fireFailedToLogIn, though some security realms might be able to support it. Could introduce an overload with no name, though that seems pretty useless. Not sure if anyone even listens to this event to begin with.", "url": "https://github.com/jenkinsci/jenkins/pull/4848#discussion_r510444593", "createdAt": "2020-10-22T20:43:05Z", "author": {"login": "jglick"}, "path": "core/src/main/java/hudson/security/AuthenticationProcessingFilter2.java", "diffHunk": "@@ -100,26 +116,25 @@ protected void onSuccessfulAuthentication(HttpServletRequest request, HttpServle\n             newSession.setAttribute(UserSeedProperty.USER_SESSION_SEED, sessionSeed);\n         }\n \n-        // as the request comes from Acegi redirect, that's not a Stapler one\n+        // as the request comes from Spring Security redirect, that's not a Stapler one\n         // thus it's not possible to retrieve it in the SecurityListener in that case\n         // for that reason we need to keep the above code that apply quite the same logic as UserSeedSecurityListener\n         SecurityListener.fireLoggedIn(authResult.getName());\n     }\n \n     /**\n      * Leave the information about login failure.\n-     *\n-     * <p>\n-     * Otherwise it seems like Acegi doesn't really leave the detail of the failure anywhere.\n      */\n     @Override\n-    protected void onUnsuccessfulAuthentication(HttpServletRequest request, HttpServletResponse response, AuthenticationException failed) throws IOException {\n-        super.onUnsuccessfulAuthentication(request, response, failed);\n+    protected void unsuccessfulAuthentication(HttpServletRequest request, HttpServletResponse response, AuthenticationException failed) throws IOException, ServletException {\n+        super.unsuccessfulAuthentication(request, response, failed);\n         LOGGER.log(Level.FINE, \"Login attempt failed\", failed);\n+        /* TODO this information appears to have been deliberately removed from Spring Security:\n         Authentication auth = failed.getAuthentication();\n         if (auth != null) {\n             SecurityListener.fireFailedToLogIn(auth.getName());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ffe273a43a61c29e3dcb5340c4971cb4a63b10c7"}, "originalPosition": 119}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDQ0NTcxNg==", "bodyText": "Was helpful during development, and seems harmless to leave in.", "url": "https://github.com/jenkinsci/jenkins/pull/4848#discussion_r510445716", "createdAt": "2020-10-22T20:45:13Z", "author": {"login": "jglick"}, "path": "core/src/main/java/hudson/security/ChainedServletFilter.java", "diffHunk": "@@ -70,24 +73,41 @@ public void init(FilterConfig filterConfig) throws ServletException {\n             f.init(filterConfig);\n     }\n \n+    private static final Pattern UNINTERESTING_URIS = Pattern.compile(\"/(images|jsbundles|css|scripts|adjuncts)/|/favicon[.]ico|/ajax\");\n+    @Override\n     public void doFilter(ServletRequest request, ServletResponse response, final FilterChain chain) throws IOException, ServletException {\n-        LOGGER.entering(ChainedServletFilter.class.getName(), \"doFilter\");\n+        String uri = request instanceof HttpServletRequest ? ((HttpServletRequest) request).getRequestURI() : \"?\";\n+        Level level = UNINTERESTING_URIS.matcher(uri).find() ? Level.FINER : Level.FINE;\n+        LOGGER.log(level, () -> \"starting filter on \" + uri);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ffe273a43a61c29e3dcb5340c4971cb4a63b10c7"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDQ0NTkwMQ==", "bodyText": "Was helpful during development, and seems harmless to leave in.", "url": "https://github.com/jenkinsci/jenkins/pull/4848#discussion_r510445901", "createdAt": "2020-10-22T20:45:35Z", "author": {"login": "jglick"}, "path": "core/src/main/java/hudson/security/ChainedServletFilter.java", "diffHunk": "@@ -70,24 +73,41 @@ public void init(FilterConfig filterConfig) throws ServletException {\n             f.init(filterConfig);\n     }\n \n+    private static final Pattern UNINTERESTING_URIS = Pattern.compile(\"/(images|jsbundles|css|scripts|adjuncts)/|/favicon[.]ico|/ajax\");\n+    @Override\n     public void doFilter(ServletRequest request, ServletResponse response, final FilterChain chain) throws IOException, ServletException {\n-        LOGGER.entering(ChainedServletFilter.class.getName(), \"doFilter\");\n+        String uri = request instanceof HttpServletRequest ? ((HttpServletRequest) request).getRequestURI() : \"?\";\n+        Level level = UNINTERESTING_URIS.matcher(uri).find() ? Level.FINER : Level.FINE;\n+        LOGGER.log(level, () -> \"starting filter on \" + uri);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ffe273a43a61c29e3dcb5340c4971cb4a63b10c7"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDQ0Njc3NA==", "bodyText": "Whatever it was all this did, it does not appear to have had any test coverage, and may well be obsolete given Spring Security implementation details.", "url": "https://github.com/jenkinsci/jenkins/pull/4848#discussion_r510446774", "createdAt": "2020-10-22T20:47:13Z", "author": {"login": "jglick"}, "path": "core/src/main/java/hudson/security/AuthenticationProcessingFilter2.java", "diffHunk": "@@ -23,33 +23,46 @@\n  */\n package hudson.security;\n \n-import java.util.Properties;\n-import java.util.logging.Logger;\n-import java.util.logging.Level;\n+import hudson.model.User;\n import java.io.IOException;\n-\n+import java.util.logging.Level;\n+import java.util.logging.Logger;\n+import javax.servlet.FilterChain;\n+import javax.servlet.ServletException;\n import javax.servlet.http.HttpServletRequest;\n import javax.servlet.http.HttpServletResponse;\n import javax.servlet.http.HttpSession;\n-\n-import hudson.Util;\n-import hudson.model.User;\n import jenkins.security.SecurityListener;\n import jenkins.security.seed.UserSeedProperty;\n-import org.acegisecurity.Authentication;\n-import org.acegisecurity.AuthenticationException;\n-import org.acegisecurity.ui.webapp.AuthenticationProcessingFilter;\n+import org.kohsuke.accmod.Restricted;\n+import org.kohsuke.accmod.restrictions.NoExternalUse;\n+import org.springframework.security.core.Authentication;\n+import org.springframework.security.core.AuthenticationException;\n+import org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter;\n+import org.springframework.security.web.util.matcher.AntPathRequestMatcher;\n \n /**\n- * {@link AuthenticationProcessingFilter} with a change for Jenkins so that\n+ * Login filter with a change for Jenkins so that\n  * we can pick up the hidden \"from\" form field defined in {@code login.jelly}\n  * to send the user back to where he came from, after a successful authentication.\n  * \n  * @author Kohsuke Kawaguchi\n  */\n-public class AuthenticationProcessingFilter2 extends AuthenticationProcessingFilter {\n+@Restricted(NoExternalUse.class)\n+public final class AuthenticationProcessingFilter2 extends UsernamePasswordAuthenticationFilter {\n+\n+    public AuthenticationProcessingFilter2(String authenticationGatewayUrl) {\n+        setRequiresAuthenticationRequestMatcher(new AntPathRequestMatcher(\"/\" + authenticationGatewayUrl, \"POST\"));\n+        // Jenkins/login.jelly & SetupWizard/authenticate-security-token.jelly\n+        setUsernameParameter(\"j_username\");\n+        setPasswordParameter(\"j_password\");\n+    }\n+\n+    /* TODO none of this compiles against Spring Security; rewrite (try InteractiveAuthenticationSuccessEvent & SimpleUrlAuthenticationFailureHandler):", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ffe273a43a61c29e3dcb5340c4971cb4a63b10c7"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDQ0Nzc2MQ==", "bodyText": "See deprecation Javadoc for InvalidatableUserDetails.", "url": "https://github.com/jenkinsci/jenkins/pull/4848#discussion_r510447761", "createdAt": "2020-10-22T20:49:01Z", "author": {"login": "jglick"}, "path": "core/src/main/java/hudson/security/HttpSessionContextIntegrationFilter2.java", "diffHunk": "@@ -67,18 +62,6 @@ public void doFilter(ServletRequest req, ServletResponse res, FilterChain chain)\n         super.doFilter(req, res, chain);\n     }\n \n-    private boolean isAuthInvalidated(Authentication authentication) {\n-        if (authentication.getPrincipal() instanceof InvalidatableUserDetails) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ffe273a43a61c29e3dcb5340c4971cb4a63b10c7"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDQ1MDY1MQ==", "bodyText": "Was used with BeanBuilder.", "url": "https://github.com/jenkinsci/jenkins/pull/4848#discussion_r510450651", "createdAt": "2020-10-22T20:54:12Z", "author": {"login": "jglick"}, "path": "core/src/main/java/hudson/security/SecurityRealm.java", "diffHunk": "@@ -455,26 +536,6 @@ protected final boolean validateCaptcha(String text) {\n         return true;\n     }\n \n-    /**\n-     * Picks up the instance of the given type from the spring context.\n-     * If there are multiple beans of the same type or if there are none,\n-     * this method treats that as an {@link IllegalArgumentException}.\n-     *\n-     * This method is intended to be used to pick up a Acegi object from\n-     * spring once the bean definition file is parsed.\n-     */\n-    public static <T> T findBean(Class<T> type, ApplicationContext context) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ffe273a43a61c29e3dcb5340c4971cb4a63b10c7"}, "originalPosition": 321}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDQ1MTIzNw==", "bodyText": "If this did something, I am not sure what, and it is not covered by tests.", "url": "https://github.com/jenkinsci/jenkins/pull/4848#discussion_r510451237", "createdAt": "2020-10-22T20:55:14Z", "author": {"login": "jglick"}, "path": "core/src/main/java/hudson/security/SecurityRealm.java", "diffHunk": "@@ -509,14 +570,46 @@ public synchronized SecurityComponents getSecurityComponents() {\n     public Filter createFilter(FilterConfig filterConfig) {\n         LOGGER.entering(SecurityRealm.class.getName(), \"createFilter\");\n         \n-        Binding binding = new Binding();\n         SecurityComponents sc = getSecurityComponents();\n-        binding.setVariable(\"securityComponents\", sc);\n-        binding.setVariable(\"securityRealm\",this);\n-        BeanBuilder builder = new BeanBuilder();\n-        builder.parse(filterConfig.getServletContext().getResourceAsStream(\"/WEB-INF/security/SecurityFilters.groovy\"),binding);\n-        WebApplicationContext context = builder.createApplicationContext();\n-        return (Filter) context.getBean(\"filter\");\n+        List<Filter> filters = new ArrayList<>();\n+        {\n+            HttpSessionSecurityContextRepository httpSessionSecurityContextRepository = new HttpSessionSecurityContextRepository();\n+            httpSessionSecurityContextRepository.setAllowSessionCreation(false);\n+            filters.add(new HttpSessionContextIntegrationFilter2(httpSessionSecurityContextRepository));\n+        }\n+        { // if any \"Authorization: Basic xxx:yyy\" is sent this is the filter that processes it\n+            BasicHeaderProcessor bhp = new BasicHeaderProcessor();\n+            // if basic authentication fails (which only happens incorrect basic auth credential is sent),\n+            // respond with 401 with basic auth request, instead of redirecting the user to the login page,\n+            // since users of basic auth tends to be a program and won't see the redirection to the form\n+            // page as a failure\n+            BasicAuthenticationEntryPoint basicAuthenticationEntryPoint = new BasicAuthenticationEntryPoint();\n+            basicAuthenticationEntryPoint.setRealmName(\"Jenkins\");\n+            bhp.setAuthenticationEntryPoint(basicAuthenticationEntryPoint);\n+            bhp.setRememberMeServices(sc.rememberMe2);\n+            filters.add(bhp);\n+        }\n+        {\n+            AuthenticationProcessingFilter2 apf = new AuthenticationProcessingFilter2(getAuthenticationGatewayUrl());\n+            apf.setAuthenticationManager(sc.manager2);\n+            apf.setRememberMeServices(sc.rememberMe2);\n+            apf.setAuthenticationFailureHandler(new SimpleUrlAuthenticationFailureHandler(\"/loginError\"));\n+            // TODO apf.defaultTargetUrl = \"/\" try SavedRequestAwareAuthenticationSuccessHandler", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ffe273a43a61c29e3dcb5340c4971cb4a63b10c7"}, "originalPosition": 380}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDQ1MjEwOQ==", "bodyText": "Spring Security changed a number of things that in Acegi Security were setters into constructor arguments plus final fields.", "url": "https://github.com/jenkinsci/jenkins/pull/4848#discussion_r510452109", "createdAt": "2020-10-22T20:56:52Z", "author": {"login": "jglick"}, "path": "core/src/main/java/hudson/security/SecurityRealm.java", "diffHunk": "@@ -633,49 +726,96 @@ public SecurityRealm newInstance(StaplerRequest req, JSONObject formData) throws\n      * @see SecurityRealm#createSecurityComponents() \n      */\n     public static final class SecurityComponents {\n-        public final AuthenticationManager manager;\n-        public final UserDetailsService userDetails;\n-        public final RememberMeServices rememberMe;\n+        /**\n+         * @since TODO\n+         */\n+        public final AuthenticationManager manager2;\n+        /**\n+         * @deprecated use {@link #manager2}\n+         */\n+        @Deprecated\n+        public final org.acegisecurity.AuthenticationManager manager;\n+        /**\n+         * @since TODO\n+         */\n+        public final UserDetailsService userDetails2;\n+        /**\n+         * @deprecated use {@link #userDetails2}\n+         */\n+        @Deprecated\n+        public final org.acegisecurity.userdetails.UserDetailsService userDetails;\n+        /**\n+         * @since TODO\n+         */\n+        public final RememberMeServices rememberMe2;\n+        /**\n+         * @deprecated use {@link #rememberMe2}\n+         */\n+        @Deprecated\n+        public final org.acegisecurity.ui.rememberme.RememberMeServices rememberMe;\n \n         public SecurityComponents() {\n             // we use AuthenticationManagerProxy here just as an implementation that fails all the time,\n             // not as a proxy. No one is supposed to use this as a proxy.\n             this(new AuthenticationManagerProxy());\n         }\n \n+        /**\n+         * @since TODO\n+         */\n         public SecurityComponents(AuthenticationManager manager) {\n             // we use UserDetailsServiceProxy here just as an implementation that fails all the time,\n             // not as a proxy. No one is supposed to use this as a proxy.\n             this(manager,new UserDetailsServiceProxy());\n         }\n \n+        /**\n+         * @deprecated use {@link #SecurityComponents(AuthenticationManager)}\n+         */\n+        @Deprecated\n+        public SecurityComponents(org.acegisecurity.AuthenticationManager manager) {\n+            this(manager.toSpring());\n+        }\n+\n+        /**\n+         * @since TODO\n+         */\n         public SecurityComponents(AuthenticationManager manager, UserDetailsService userDetails) {\n             this(manager,userDetails,createRememberMeService(userDetails));\n         }\n \n+        /**\n+         * @deprecated use {@link #SecurityComponents(AuthenticationManager, UserDetailsService)}\n+         */\n+        @Deprecated\n+        public SecurityComponents(org.acegisecurity.AuthenticationManager manager, org.acegisecurity.userdetails.UserDetailsService userDetails) {\n+            this(manager.toSpring(), userDetails.toSpring());\n+        }\n+\n+        /**\n+         * @since TODO\n+         */\n         public SecurityComponents(AuthenticationManager manager, UserDetailsService userDetails, RememberMeServices rememberMe) {\n             assert manager!=null && userDetails!=null && rememberMe!=null;\n-            this.manager = manager;\n-            this.userDetails = userDetails;\n-            this.rememberMe = rememberMe;\n+            this.manager2 = manager;\n+            this.userDetails2 = userDetails;\n+            this.rememberMe2 = rememberMe;\n+            this.manager = org.acegisecurity.AuthenticationManager.fromSpring(manager);\n+            this.userDetails = org.acegisecurity.userdetails.UserDetailsService.fromSpring(userDetails);\n+            this.rememberMe = org.acegisecurity.ui.rememberme.RememberMeServices.fromSpring(rememberMe);\n+        }\n+\n+        /**\n+         * @deprecated use {@link #SecurityComponents(AuthenticationManager, UserDetailsService, RememberMeServices)}\n+         */\n+        @Deprecated\n+        public SecurityComponents(org.acegisecurity.AuthenticationManager manager, org.acegisecurity.userdetails.UserDetailsService userDetails, org.acegisecurity.ui.rememberme.RememberMeServices rememberMe) {\n+            this(manager.toSpring(), userDetails.toSpring(), rememberMe.toSpring());\n         }\n \n-        @SuppressWarnings(\"deprecation\")\n         private static RememberMeServices createRememberMeService(UserDetailsService uds) {\n             // create our default TokenBasedRememberMeServices, which depends on the availability of the secret key\n-            TokenBasedRememberMeServices2 rms = new TokenBasedRememberMeServices2();\n-            rms.setUserDetailsService(uds);\n-            /*\n-                TokenBasedRememberMeServices needs to be used in conjunction with RememberMeAuthenticationProvider,\n-                and both needs to use the same key (this is a reflection of a poor design in AcegiSecurity, if you ask me)\n-                and various security plugins have its own groovy script that configures them.\n-\n-                So if we change this, it creates a painful situation for those plugins by forcing them to choose\n-                to work with earlier version of Jenkins or newer version of Jenkins, and not both.\n-\n-                So we keep this here.\n-             */\n-            rms.setKey(Jenkins.get().getSecretKey());\n+            TokenBasedRememberMeServices2 rms = new TokenBasedRememberMeServices2(uds);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ffe273a43a61c29e3dcb5340c4971cb4a63b10c7"}, "originalPosition": 530}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDQ1NDkwOA==", "bodyText": "No particular reason to switch to the Spring Security version of this package, which would require pulling in the spring-security-acl module as well as disruption to existing AuthorizationStrategys: so long as you stick to the String-based constructors, there is no conflict with usage of other Spring Security types.", "url": "https://github.com/jenkinsci/jenkins/pull/4848#discussion_r510454908", "createdAt": "2020-10-22T21:02:06Z", "author": {"login": "jglick"}, "path": "core/src/main/java/hudson/security/SidACL.java", "diffHunk": "@@ -23,16 +23,15 @@\n  */\n package hudson.security;\n \n-import org.acegisecurity.Authentication;\n-import org.acegisecurity.GrantedAuthority;\n-import org.acegisecurity.acls.sid.PrincipalSid;\n-import org.acegisecurity.acls.sid.GrantedAuthoritySid;\n-import org.acegisecurity.acls.sid.Sid;\n-\n import edu.umd.cs.findbugs.annotations.NonNull;\n-import java.util.logging.Logger;\n import static java.util.logging.Level.FINE;\n import static java.util.logging.Level.FINER;\n+import java.util.logging.Logger;\n+import org.acegisecurity.acls.sid.GrantedAuthoritySid;\n+import org.acegisecurity.acls.sid.PrincipalSid;\n+import org.acegisecurity.acls.sid.Sid;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ffe273a43a61c29e3dcb5340c4971cb4a63b10c7"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDQ2MjY2Nw==", "bodyText": "Only striving to retain compatibility for plugins referring to this constant, not the rest of the class.", "url": "https://github.com/jenkinsci/jenkins/pull/4848#discussion_r510462667", "createdAt": "2020-10-22T21:16:47Z", "author": {"login": "jglick"}, "path": "core/src/main/java/org/acegisecurity/ui/rememberme/TokenBasedRememberMeServices.java", "diffHunk": "@@ -0,0 +1,39 @@\n+/*\n+ * The MIT License\n+ *\n+ * Copyright 2020 CloudBees, Inc.\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included in\n+ * all copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+ * THE SOFTWARE.\n+ */\n+\n+package org.acegisecurity.ui.rememberme;\n+\n+import org.springframework.security.web.authentication.rememberme.AbstractRememberMeServices;\n+\n+/**\n+ * @deprecated use {@link org.springframework.security.web.authentication.rememberme.TokenBasedRememberMeServices}\n+ */\n+@Deprecated\n+public class TokenBasedRememberMeServices {\n+\n+    public static final String ACEGI_SECURITY_HASHED_REMEMBER_ME_COOKIE_KEY = AbstractRememberMeServices.SPRING_SECURITY_REMEMBER_ME_COOKIE_KEY;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ffe273a43a61c29e3dcb5340c4971cb4a63b10c7"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDQ2MzE2Mg==", "bodyText": "Weak typing here.", "url": "https://github.com/jenkinsci/jenkins/pull/4848#discussion_r510463162", "createdAt": "2020-10-22T21:17:36Z", "author": {"login": "jglick"}, "path": "core/src/main/java/org/acegisecurity/userdetails/UserDetails.java", "diffHunk": "@@ -0,0 +1,109 @@\n+/*\n+ * The MIT License\n+ *\n+ * Copyright 2020 CloudBees, Inc.\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included in\n+ * all copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+ * THE SOFTWARE.\n+ */\n+\n+package org.acegisecurity.userdetails;\n+\n+import edu.umd.cs.findbugs.annotations.CheckForNull;\n+import edu.umd.cs.findbugs.annotations.NonNull;\n+import edu.umd.cs.findbugs.annotations.Nullable;\n+import java.io.Serializable;\n+import org.acegisecurity.GrantedAuthority;\n+\n+/**\n+ * @deprecated use {@link org.springframework.security.core.userdetails.UserDetails} instead\n+ */\n+@Deprecated\n+public interface UserDetails extends Serializable {\n+\n+    GrantedAuthority[] getAuthorities();\n+\n+    String getPassword();\n+\n+    String getUsername();\n+\n+    boolean isAccountNonExpired();\n+\n+    boolean isAccountNonLocked();\n+\n+    boolean isCredentialsNonExpired();\n+\n+    boolean isEnabled();\n+\n+    default @NonNull org.springframework.security.core.userdetails.UserDetails toSpring() {\n+        return new UserDetailsSpringImpl(this);\n+    }\n+\n+    static @NonNull UserDetails fromSpring(@NonNull org.springframework.security.core.userdetails.UserDetails ud) {\n+        if (ud instanceof UserDetailsSpringImpl) {\n+            return ((UserDetailsSpringImpl) ud).delegate;\n+        }\n+        return new UserDetails() {\n+            @Override\n+            public GrantedAuthority[] getAuthorities() {\n+                return GrantedAuthority.fromSpring(ud.getAuthorities());\n+            }\n+            @Override\n+            public String getPassword() {\n+                return ud.getPassword();\n+            }\n+            @Override\n+            public String getUsername() {\n+                return ud.getUsername();\n+            }\n+            @Override\n+            public boolean isAccountNonExpired() {\n+                return ud.isAccountNonExpired();\n+            }\n+            @Override\n+            public boolean isAccountNonLocked() {\n+                return ud.isAccountNonLocked();\n+            }\n+            @Override\n+            public boolean isCredentialsNonExpired() {\n+                return ud.isCredentialsNonExpired();\n+            }\n+            @Override\n+            public boolean isEnabled() {\n+                return ud.isEnabled();\n+            }\n+        };\n+    }\n+\n+    static @Nullable Object toSpringPrincipal(@CheckForNull Object acegiPrincipal) {\n+        if (acegiPrincipal instanceof UserDetails) {\n+            return ((UserDetails) acegiPrincipal).toSpring();\n+        } else {\n+            return acegiPrincipal;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ffe273a43a61c29e3dcb5340c4971cb4a63b10c7"}, "originalPosition": 97}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDQ2MzQ2Nw==", "bodyText": "Just retained the methods I actually saw being used in test code.", "url": "https://github.com/jenkinsci/jenkins/pull/4848#discussion_r510463467", "createdAt": "2020-10-22T21:18:16Z", "author": {"login": "jglick"}, "path": "core/src/main/java/org/acegisecurity/util/FieldUtils.java", "diffHunk": "@@ -0,0 +1,53 @@\n+/*\n+ * The MIT License\n+ *\n+ * Copyright 2020 CloudBees, Inc.\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included in\n+ * all copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+ * THE SOFTWARE.\n+ */\n+\n+package org.acegisecurity.util;\n+\n+/**\n+ * @deprecated use {@link org.apache.commons.lang.reflect.FieldUtils}\n+ */\n+@Deprecated\n+public final class FieldUtils {\n+\n+    public static Object getProtectedFieldValue(String protectedField, Object object) {\n+        try {\n+            return org.apache.commons.lang.reflect.FieldUtils.readField(object, protectedField, true);\n+        } catch (IllegalAccessException x) {\n+            throw new RuntimeException(x);\n+        }\n+    }\n+\n+    public static void setProtectedFieldValue(String protectedField, Object object, Object newValue) {\n+        try {\n+            org.apache.commons.lang.reflect.FieldUtils.writeField(object, protectedField, newValue, true);\n+        } catch (IllegalAccessException x) {\n+            throw new RuntimeException(x);\n+        }\n+    }\n+\n+    // TODO other methods as needed", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ffe273a43a61c29e3dcb5340c4971cb4a63b10c7"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDQ2NDA0OQ==", "bodyText": "These should all actually be compatible (see unit tests), but would rather people use equals.", "url": "https://github.com/jenkinsci/jenkins/pull/4848#discussion_r510464049", "createdAt": "2020-10-22T21:19:24Z", "author": {"login": "jglick"}, "path": "core/src/main/resources/META-INF/upgrade/Authentication.hint", "diffHunk": "@@ -0,0 +1,4 @@\n+$a == hudson.security.ACL.SYSTEM :: $a instanceof org.acegisecurity.Authentication => hudson.security.ACL.SYSTEM.equals($a);;\n+$a == jenkins.model.Jenkins.ANONYMOUS :: $a instanceof org.acegisecurity.Authentication => jenkins.model.Jenkins.ANONYMOUS.equals($a);;\n+$a == hudson.security.ACL.SYSTEM2 :: $a instanceof org.springframework.security.core.Authentication => hudson.security.ACL.SYSTEM2.equals($a);;\n+$a == jenkins.model.Jenkins.ANONYMOUS2 :: $a instanceof org.springframework.security.core.Authentication => jenkins.model.Jenkins.ANONYMOUS2.equals($a);;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ffe273a43a61c29e3dcb5340c4971cb4a63b10c7"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDQ2NTA3OA==", "bodyText": "Was using the super-old password hashes.", "url": "https://github.com/jenkinsci/jenkins/pull/4848#discussion_r510465078", "createdAt": "2020-10-22T21:21:35Z", "author": {"login": "jglick"}, "path": "test/src/test/java/hudson/model/JobTest.java", "diffHunk": "@@ -205,12 +207,16 @@ public String getDisplayName() {\n         }\n     }\n \n-    @LocalData", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ffe273a43a61c29e3dcb5340c4971cb4a63b10c7"}, "originalPosition": 20}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE1NTU0MTA3", "url": "https://github.com/jenkinsci/jenkins/pull/4848#pullrequestreview-515554107", "createdAt": "2020-10-23T10:49:04Z", "commit": {"oid": "ffe273a43a61c29e3dcb5340c4971cb4a63b10c7"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a8295086430452b72e4d61ee885cd536d973b7ee", "author": {"user": {"login": "jglick", "name": "Jesse Glick"}}, "url": "https://github.com/jenkinsci/jenkins/commit/a8295086430452b72e4d61ee885cd536d973b7ee", "committedDate": "2020-10-26T12:43:28Z", "message": "Merge branch 'master' of https://github.com/jenkinsci/jenkins into spring-5303"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIwMzU5NDIy", "url": "https://github.com/jenkinsci/jenkins/pull/4848#pullrequestreview-520359422", "createdAt": "2020-10-30T03:46:35Z", "commit": {"oid": "a8295086430452b72e4d61ee885cd536d973b7ee"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIxMDQ3MTQ0", "url": "https://github.com/jenkinsci/jenkins/pull/4848#pullrequestreview-521047144", "createdAt": "2020-10-30T21:30:27Z", "commit": {"oid": "a8295086430452b72e4d61ee885cd536d973b7ee"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f04114c0f813501da9a072b984a6cf2f2f0a2180", "author": {"user": {"login": "timja", "name": "Tim Jacomb"}}, "url": "https://github.com/jenkinsci/jenkins/commit/f04114c0f813501da9a072b984a6cf2f2f0a2180", "committedDate": "2020-11-01T09:21:06Z", "message": "Merge branch 'master' into spring-5303"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIzNTI0MTc2", "url": "https://github.com/jenkinsci/jenkins/pull/4848#pullrequestreview-523524176", "createdAt": "2020-11-04T16:23:18Z", "commit": {"oid": "f04114c0f813501da9a072b984a6cf2f2f0a2180"}, "state": "APPROVED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxNjoyMzoxOFrOHtftZg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxNjozMjowMVrOHtgGcA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzQ2NzQ5NA==", "bodyText": "I'd kind of like to get more data exposed in audit-log-plugin, though that doesn't appear to listen for this event yet. It is listening for login and logout events, though, so it would make sense to support.", "url": "https://github.com/jenkinsci/jenkins/pull/4848#discussion_r517467494", "createdAt": "2020-11-04T16:23:18Z", "author": {"login": "jvz"}, "path": "core/src/main/java/hudson/security/AuthenticationProcessingFilter2.java", "diffHunk": "@@ -100,26 +116,25 @@ protected void onSuccessfulAuthentication(HttpServletRequest request, HttpServle\n             newSession.setAttribute(UserSeedProperty.USER_SESSION_SEED, sessionSeed);\n         }\n \n-        // as the request comes from Acegi redirect, that's not a Stapler one\n+        // as the request comes from Spring Security redirect, that's not a Stapler one\n         // thus it's not possible to retrieve it in the SecurityListener in that case\n         // for that reason we need to keep the above code that apply quite the same logic as UserSeedSecurityListener\n         SecurityListener.fireLoggedIn(authResult.getName());\n     }\n \n     /**\n      * Leave the information about login failure.\n-     *\n-     * <p>\n-     * Otherwise it seems like Acegi doesn't really leave the detail of the failure anywhere.\n      */\n     @Override\n-    protected void onUnsuccessfulAuthentication(HttpServletRequest request, HttpServletResponse response, AuthenticationException failed) throws IOException {\n-        super.onUnsuccessfulAuthentication(request, response, failed);\n+    protected void unsuccessfulAuthentication(HttpServletRequest request, HttpServletResponse response, AuthenticationException failed) throws IOException, ServletException {\n+        super.unsuccessfulAuthentication(request, response, failed);\n         LOGGER.log(Level.FINE, \"Login attempt failed\", failed);\n+        /* TODO this information appears to have been deliberately removed from Spring Security:\n         Authentication auth = failed.getAuthentication();\n         if (auth != null) {\n             SecurityListener.fireFailedToLogIn(auth.getName());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDQ0NDU5Mw=="}, "originalCommit": {"oid": "ffe273a43a61c29e3dcb5340c4971cb4a63b10c7"}, "originalPosition": 119}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzQ3MTI4Mw==", "bodyText": "I think so. BouncyCastle provides BCrypt, too, so it's not like a separate library was needed in the first place.", "url": "https://github.com/jenkinsci/jenkins/pull/4848#discussion_r517471283", "createdAt": "2020-11-04T16:28:18Z", "author": {"login": "jvz"}, "path": "core/src/main/java/hudson/security/HudsonPrivateSecurityRealm.java", "diffHunk": "@@ -804,56 +860,7 @@ public Category getCategory() {\n         }\n     }\n \n-    /**\n-     * {@link PasswordEncoder} based on SHA-256 and random salt generation.\n-     *\n-     * <p>\n-     * The salt is prepended to the hashed password and returned. So the encoded password is of the form\n-     * {@code SALT ':' hash(PASSWORD,SALT)}.\n-     *\n-     * <p>\n-     * This abbreviates the need to store the salt separately, which in turn allows us to hide the salt handling\n-     * in this little class. The rest of the Acegi thinks that we are not using salt.\n-     */\n-    /*package*/ static final PasswordEncoder CLASSIC = new PasswordEncoder() {\n-        private final PasswordEncoder passwordEncoder = new ShaPasswordEncoder(256);\n-\n-        public String encodePassword(String rawPass, Object obj) throws DataAccessException {\n-            return hash(rawPass);\n-        }\n-\n-        public boolean isPasswordValid(String encPass, String rawPass, Object obj) throws DataAccessException {\n-            // pull out the sale from the encoded password\n-            int i = encPass.indexOf(':');\n-            if(i<0) return false;\n-            String salt = encPass.substring(0,i);\n-            return encPass.substring(i+1).equals(passwordEncoder.encodePassword(rawPass,salt));\n-        }\n-\n-        /**\n-         * Creates a hashed password by generating a random salt.\n-         */\n-        private String hash(String password) {\n-            String salt = generateSalt();\n-            return salt+':'+passwordEncoder.encodePassword(password,salt);\n-        }\n-\n-        /**\n-         * Generates random salt.\n-         */\n-        private String generateSalt() {\n-            StringBuilder buf = new StringBuilder();\n-            SecureRandom sr = new SecureRandom();\n-            for( int i=0; i<6; i++ ) {// log2(52^6)=34.20... so, this is about 32bit strong.\n-                boolean upper = sr.nextBoolean();\n-                char ch = (char)(sr.nextInt(26) + 'a');\n-                if(upper)   ch=Character.toUpperCase(ch);\n-                buf.append(ch);\n-            }\n-            return buf.toString();\n-        }\n-    };\n-\n+    // TODO can we instead use BCryptPasswordEncoder from Spring Security, which has its own copy of BCrypt so we could drop the special library?", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f04114c0f813501da9a072b984a6cf2f2f0a2180"}, "originalPosition": 277}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzQ3MzkwNA==", "bodyText": "Should spring-security-acl be blocked as a dependency then?", "url": "https://github.com/jenkinsci/jenkins/pull/4848#discussion_r517473904", "createdAt": "2020-11-04T16:32:01Z", "author": {"login": "jvz"}, "path": "core/src/main/java/hudson/security/SidACL.java", "diffHunk": "@@ -23,16 +23,15 @@\n  */\n package hudson.security;\n \n-import org.acegisecurity.Authentication;\n-import org.acegisecurity.GrantedAuthority;\n-import org.acegisecurity.acls.sid.PrincipalSid;\n-import org.acegisecurity.acls.sid.GrantedAuthoritySid;\n-import org.acegisecurity.acls.sid.Sid;\n-\n import edu.umd.cs.findbugs.annotations.NonNull;\n-import java.util.logging.Logger;\n import static java.util.logging.Level.FINE;\n import static java.util.logging.Level.FINER;\n+import java.util.logging.Logger;\n+import org.acegisecurity.acls.sid.GrantedAuthoritySid;\n+import org.acegisecurity.acls.sid.PrincipalSid;\n+import org.acegisecurity.acls.sid.Sid;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDQ1NDkwOA=="}, "originalCommit": {"oid": "ffe273a43a61c29e3dcb5340c4971cb4a63b10c7"}, "originalPosition": 17}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI1MzAwNDIx", "url": "https://github.com/jenkinsci/jenkins/pull/4848#pullrequestreview-525300421", "createdAt": "2020-11-06T16:19:23Z", "commit": {"oid": "f04114c0f813501da9a072b984a6cf2f2f0a2180"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQxNjoxOToyM1rOHu0iMA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQxNjoyNzozMVrOHu01kA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODg1NzI2NA==", "bodyText": "Do we want to merge this in?", "url": "https://github.com/jenkinsci/jenkins/pull/4848#discussion_r518857264", "createdAt": "2020-11-06T16:19:23Z", "author": {"login": "daniel-beck"}, "path": "Jenkinsfile", "diffHunk": "@@ -69,6 +69,7 @@ for(j = 0; j < jdks.size(); j++) {\n                                              allowEmptyArchive: true, // in case we forgot to reincrementalify\n                                              fingerprint: true\n                         }\n+                        publishHTML([allowMissing: true, alwaysLinkToLastBuild: false, includes: 'japicmp.html', keepAll: false, reportDir: 'core/target/japicmp', reportFiles: 'japicmp.html', reportName: 'API compatibility', reportTitles: 'japicmp report'])", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f04114c0f813501da9a072b984a6cf2f2f0a2180"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODg2MjIyNA==", "bodyText": "Similarly doesn't look like something we want to merge in.", "url": "https://github.com/jenkinsci/jenkins/pull/4848#discussion_r518862224", "createdAt": "2020-11-06T16:27:31Z", "author": {"login": "daniel-beck"}, "path": "core/pom.xml", "diffHunk": "@@ -867,5 +847,41 @@ THE SOFTWARE.\n         <maven.test.redirectTestOutputToFile>true</maven.test.redirectTestOutputToFile>\n       </properties>\n     </profile>\n+    <profile>\n+      <id>japicmp</id>\n+      <build>\n+        <plugins>\n+          <plugin>\n+            <groupId>com.github.siom79.japicmp</groupId>\n+            <artifactId>japicmp-maven-plugin</artifactId>\n+            <version>0.14.4-20200728.214757-1</version> <!-- TODO https://github.com/siom79/japicmp/pull/266 -->", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f04114c0f813501da9a072b984a6cf2f2f0a2180"}, "originalPosition": 54}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ4NDY4MzYw", "url": "https://github.com/jenkinsci/jenkins/pull/4848#pullrequestreview-548468360", "createdAt": "2020-12-09T18:19:46Z", "commit": {"oid": "f04114c0f813501da9a072b984a6cf2f2f0a2180"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxODoxOTo0N1rOICi3pQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxODoxOTo0N1rOICi3pQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTUzOTM2NQ==", "bodyText": "see #5105", "url": "https://github.com/jenkinsci/jenkins/pull/4848#discussion_r539539365", "createdAt": "2020-12-09T18:19:47Z", "author": {"login": "jglick"}, "path": "core/src/main/java/org/acegisecurity/util/FieldUtils.java", "diffHunk": "@@ -0,0 +1,53 @@\n+/*\n+ * The MIT License\n+ *\n+ * Copyright 2020 CloudBees, Inc.\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included in\n+ * all copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+ * THE SOFTWARE.\n+ */\n+\n+package org.acegisecurity.util;\n+\n+/**\n+ * @deprecated use {@link org.apache.commons.lang.reflect.FieldUtils}\n+ */\n+@Deprecated\n+public final class FieldUtils {\n+\n+    public static Object getProtectedFieldValue(String protectedField, Object object) {\n+        try {\n+            return org.apache.commons.lang.reflect.FieldUtils.readField(object, protectedField, true);\n+        } catch (IllegalAccessException x) {\n+            throw new RuntimeException(x);\n+        }\n+    }\n+\n+    public static void setProtectedFieldValue(String protectedField, Object object, Object newValue) {\n+        try {\n+            org.apache.commons.lang.reflect.FieldUtils.writeField(object, protectedField, newValue, true);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f04114c0f813501da9a072b984a6cf2f2f0a2180"}, "originalPosition": 43}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTc5MjYzOTg2", "url": "https://github.com/jenkinsci/jenkins/pull/4848#pullrequestreview-579263986", "createdAt": "2021-01-29T13:41:02Z", "commit": {"oid": "f04114c0f813501da9a072b984a6cf2f2f0a2180"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yOVQxMzo0MTowMlrOIckfeg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yOVQxMzo0MTowMlrOIckfeg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NjgyODkyMg==", "bodyText": "noting regression https://issues.jenkins-ci.org/browse/JENKINS-64746 addressed in #5216", "url": "https://github.com/jenkinsci/jenkins/pull/4848#discussion_r566828922", "createdAt": "2021-01-29T13:41:02Z", "author": {"login": "jtnord"}, "path": "core/src/main/java/hudson/model/UpdateCenter.java", "diffHunk": "@@ -67,7 +67,6 @@\n import jenkins.util.io.OnMaster;\n import net.sf.json.JSONObject;\n \n-import org.acegisecurity.Authentication;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f04114c0f813501da9a072b984a6cf2f2f0a2180"}, "originalPosition": 4}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2caf0750292c8fadcee87372d419510250acdc35", "author": {"user": {"login": "jglick", "name": "Jesse Glick"}}, "url": "https://github.com/jenkinsci/jenkins/commit/2caf0750292c8fadcee87372d419510250acdc35", "committedDate": "2020-07-15T22:59:12Z", "message": "Replacing Acegi Security with Spring Security"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "82522cf52dee8289340bbf1a8cc65073ce9ed724", "author": {"user": {"login": "jglick", "name": "Jesse Glick"}}, "url": "https://github.com/jenkinsci/jenkins/commit/82522cf52dee8289340bbf1a8cc65073ce9ed724", "committedDate": "2020-07-17T18:39:14Z", "message": "more"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUxMDY4NjMz", "url": "https://github.com/jenkinsci/jenkins/pull/4848#pullrequestreview-451068633", "createdAt": "2020-07-18T16:46:33Z", "commit": {"oid": "82522cf52dee8289340bbf1a8cc65073ce9ed724"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "62eba9c10485ad85b3a6ee1cab414177e4b792fd", "author": {"user": {"login": "jglick", "name": "Jesse Glick"}}, "url": "https://github.com/jenkinsci/jenkins/commit/62eba9c10485ad85b3a6ee1cab414177e4b792fd", "committedDate": "2020-07-19T14:22:35Z", "message": "Change of approach: completely deprecating org.acegisecurity types"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0c02c446d84584945f26bf5526428ec64e368071", "author": {"user": {"login": "jglick", "name": "Jesse Glick"}}, "url": "https://github.com/jenkinsci/jenkins/commit/0c02c446d84584945f26bf5526428ec64e368071", "committedDate": "2020-07-19T14:43:56Z", "message": "More conversion"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d898b35357805d87ad2115e851f1cd7d52272816", "author": {"user": {"login": "jglick", "name": "Jesse Glick"}}, "url": "https://github.com/jenkinsci/jenkins/commit/d898b35357805d87ad2115e851f1cd7d52272816", "committedDate": "2020-07-20T20:14:53Z", "message": "Merge branch 'master' of github.com:jenkinsci/jenkins into spring-5303"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f5730525c5f0e24c2c28dec489ad3d6f9af40df3", "author": {"user": {"login": "jglick", "name": "Jesse Glick"}}, "url": "https://github.com/jenkinsci/jenkins/commit/f5730525c5f0e24c2c28dec489ad3d6f9af40df3", "committedDate": "2020-07-20T20:57:52Z", "message": "More"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "07412a9a15dc10b56390c151f85f93b2ec137032", "author": {"user": {"login": "jglick", "name": "Jesse Glick"}}, "url": "https://github.com/jenkinsci/jenkins/commit/07412a9a15dc10b56390c151f85f93b2ec137032", "committedDate": "2020-07-20T22:54:13Z", "message": "Progress"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0613a19a7968c4f6174f7a22ca12b518cda469b2", "author": {"user": {"login": "jglick", "name": "Jesse Glick"}}, "url": "https://github.com/jenkinsci/jenkins/commit/0613a19a7968c4f6174f7a22ca12b518cda469b2", "committedDate": "2020-07-21T00:59:24Z", "message": "Merge branch 'master' of github.com:jenkinsci/jenkins into spring-5303"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6af8f1c5a19fa38b30cb90689bc4a4458dfeb551", "author": {"user": {"login": "jglick", "name": "Jesse Glick"}}, "url": "https://github.com/jenkinsci/jenkins/commit/6af8f1c5a19fa38b30cb90689bc4a4458dfeb551", "committedDate": "2020-07-21T02:06:47Z", "message": "Seems that everything except uses of BeanBuilder now compiles"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "91110579cc2c57b2d1192e6b144932d9a1345785", "author": {"user": {"login": "jglick", "name": "Jesse Glick"}}, "url": "https://github.com/jenkinsci/jenkins/commit/91110579cc2c57b2d1192e6b144932d9a1345785", "committedDate": "2020-07-21T02:49:25Z", "message": "Rewrite BeanBuilder configuration of security to plain old Java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6601d98e3d9d031c4a4d72987e1db8c245d5fe59", "author": {"user": {"login": "jglick", "name": "Jesse Glick"}}, "url": "https://github.com/jenkinsci/jenkins/commit/6601d98e3d9d031c4a4d72987e1db8c245d5fe59", "committedDate": "2020-07-21T02:55:39Z", "message": "core module now at least compiles"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b85c0d9ba38d761935b68730bb5da8fb1eb61c3d", "author": {"user": {"login": "jglick", "name": "Jesse Glick"}}, "url": "https://github.com/jenkinsci/jenkins/commit/b85c0d9ba38d761935b68730bb5da8fb1eb61c3d", "committedDate": "2020-07-21T03:10:54Z", "message": "Starting to make tests compilable; will require changes to jenkins-test-harness"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cfd98319f38ea8f9e2560351a068a1e5905b8208", "author": {"user": {"login": "jglick", "name": "Jesse Glick"}}, "url": "https://github.com/jenkinsci/jenkins/commit/cfd98319f38ea8f9e2560351a068a1e5905b8208", "committedDate": "2020-07-21T11:14:51Z", "message": "Tweaking AuthenticationProcessingFilter2"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUyMzU3NDAy", "url": "https://github.com/jenkinsci/jenkins/pull/4848#pullrequestreview-452357402", "createdAt": "2020-07-21T11:17:54Z", "commit": {"oid": "cfd98319f38ea8f9e2560351a068a1e5905b8208"}, "state": "COMMENTED", "comments": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxMToxNzo1NFrOG0zYfQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxMTo0NzoyNVrOG00RWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODAyMDk4OQ==", "bodyText": "There is no replacement for AcegiSecurityException. AFAIK the purpose of this class is to nicely handle 403s, so this should be good enough.", "url": "https://github.com/jenkinsci/jenkins/pull/4848#discussion_r458020989", "createdAt": "2020-07-21T11:17:54Z", "author": {"login": "jglick"}, "path": "core/src/main/java/hudson/ExpressionFactory2.java", "diffHunk": "@@ -72,7 +72,7 @@ public Object evaluate(JellyContext context) {\n                 CURRENT_CONTEXT.set(context);\n                 JexlContext jexlContext = new JellyJexlContext( context );\n                 return expression.evaluate(jexlContext);\n-            } catch (AcegiSecurityException e) {\n+            } catch (AccessDeniedException2 e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cfd98319f38ea8f9e2560351a068a1e5905b8208"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODAyMTA3NQ==", "bodyText": "Just a signature change in Spring.", "url": "https://github.com/jenkinsci/jenkins/pull/4848#discussion_r458021075", "createdAt": "2020-07-21T11:18:05Z", "author": {"login": "jglick"}, "path": "core/src/main/java/hudson/ExtensionFinder.java", "diffHunk": "@@ -578,7 +578,7 @@ public Object get() {\n                 // so that we invoke them before derived class one. This isn't specified in JSR-250 but implemented\n                 // this way in Spring and what most developers would expect to happen.\n \n-                final Set<Class> interfaces = ClassUtils.getAllInterfacesAsSet(instance);\n+                final Set<Class<?>> interfaces = ClassUtils.getAllInterfacesAsSet(instance);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cfd98319f38ea8f9e2560351a068a1e5905b8208"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODAyMjY3Mg==", "bodyText": "Just translating the Groovy into equivalent Java.", "url": "https://github.com/jenkinsci/jenkins/pull/4848#discussion_r458022672", "createdAt": "2020-07-21T11:21:17Z", "author": {"login": "jglick"}, "path": "core/src/main/java/hudson/security/AbstractPasswordBasedSecurityRealm.java", "diffHunk": "@@ -31,14 +30,17 @@\n public abstract class AbstractPasswordBasedSecurityRealm extends SecurityRealm implements UserDetailsService {\n     @Override\n     public SecurityComponents createSecurityComponents() {\n-        Binding binding = new Binding();\n-        binding.setVariable(\"authenticator\", new Authenticator());\n-\n-        BeanBuilder builder = new BeanBuilder();\n-        builder.parse(Jenkins.get().servletContext.getResourceAsStream(\"/WEB-INF/security/AbstractPasswordBasedSecurityRealm.groovy\"),binding);\n-        WebApplicationContext context = builder.createApplicationContext();\n+        // this does all the hard work.\n+        Authenticator authenticator = new Authenticator();\n+        // these providers apply everywhere\n+        RememberMeAuthenticationProvider rmap = new RememberMeAuthenticationProvider(Jenkins.get().getSecretKey());\n+        // this doesn't mean we allow anonymous access.\n+        // we just authenticate anonymous users as such,\n+        // so that later authorization can reject them if so configured\n+        AnonymousAuthenticationProvider aap = new AnonymousAuthenticationProvider(\"anonymous\");\n+        AuthenticationManager authenticationManager = new ProviderManager(authenticator, rmap, aap);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cfd98319f38ea8f9e2560351a068a1e5905b8208"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODAyMzEwOQ==", "bodyText": "Deriving from the Acegi Security version in hopes of offering some compatibility, but untested.", "url": "https://github.com/jenkinsci/jenkins/pull/4848#discussion_r458023109", "createdAt": "2020-07-21T11:22:14Z", "author": {"login": "jglick"}, "path": "core/src/main/java/hudson/security/AccessDeniedException2.java", "diffHunk": "@@ -1,50 +1,75 @@\n package hudson.security;\n \n-import org.acegisecurity.AccessDeniedException;\n-import org.acegisecurity.Authentication;\n-import org.acegisecurity.GrantedAuthority;\n-\n import javax.servlet.http.HttpServletResponse;\n import java.io.PrintWriter;\n import jenkins.util.SystemProperties;\n+import org.springframework.security.core.Authentication;\n+import org.springframework.security.core.GrantedAuthority;\n \n /**\n- * {@link AccessDeniedException} with more information.\n+ * {@link org.acegisecurity.AccessDeniedException} with more information.\n  * @author Kohsuke Kawaguchi\n  */\n-public class AccessDeniedException2 extends AccessDeniedException {\n+public class AccessDeniedException2 extends org.acegisecurity.AccessDeniedException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cfd98319f38ea8f9e2560351a068a1e5905b8208"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODAyNDQzMw==", "bodyText": "InvalidatableUserDetails was deprecated, so deleting this filter and hoping it was in fact unnecessary.", "url": "https://github.com/jenkinsci/jenkins/pull/4848#discussion_r458024433", "createdAt": "2020-07-21T11:24:52Z", "author": {"login": "jglick"}, "path": "core/src/main/java/hudson/security/HttpSessionContextIntegrationFilter2.java", "diffHunk": "@@ -1,121 +0,0 @@\n-/*\n- * The MIT License\n- * \n- * Copyright (c) 2004-2009, Sun Microsystems, Inc., Kohsuke Kawaguchi\n- * \n- * Permission is hereby granted, free of charge, to any person obtaining a copy\n- * of this software and associated documentation files (the \"Software\"), to deal\n- * in the Software without restriction, including without limitation the rights\n- * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n- * copies of the Software, and to permit persons to whom the Software is\n- * furnished to do so, subject to the following conditions:\n- * \n- * The above copyright notice and this permission notice shall be included in\n- * all copies or substantial portions of the Software.\n- * \n- * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n- * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n- * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n- * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n- * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n- * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n- * THE SOFTWARE.\n- */\n-package hudson.security;\n-\n-import hudson.model.User;\n-import jenkins.security.NonSerializableSecurityContext;\n-import jenkins.security.seed.UserSeedProperty;\n-import org.acegisecurity.context.HttpSessionContextIntegrationFilter;\n-import org.acegisecurity.context.SecurityContext;\n-import org.acegisecurity.Authentication;\n-import org.acegisecurity.providers.anonymous.AnonymousAuthenticationToken;\n-\n-import javax.servlet.ServletException;\n-import javax.servlet.ServletRequest;\n-import javax.servlet.ServletResponse;\n-import javax.servlet.FilterChain;\n-import javax.servlet.http.HttpServletRequest;\n-import javax.servlet.http.HttpSession;\n-import java.io.IOException;\n-\n-/**\n- * Erases the {@link SecurityContext} persisted in {@link HttpSession}\n- * if {@link InvalidatableUserDetails#isInvalid()} returns true.\n- *\n- * @see InvalidatableUserDetails", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cfd98319f38ea8f9e2560351a068a1e5905b8208"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODAyNzg1Ng==", "bodyText": "Did not see an easy way to translate this to Spring Security. There is a StandardPasswordEncoder and a MessageDigestPasswordEncoder but these are deprecated and considered insecure. Since this password format was last stored eight years ago, it does not seem worth saving.", "url": "https://github.com/jenkinsci/jenkins/pull/4848#discussion_r458027856", "createdAt": "2020-07-21T11:31:33Z", "author": {"login": "jglick"}, "path": "core/src/main/java/hudson/security/HudsonPrivateSecurityRealm.java", "diffHunk": "@@ -804,56 +797,7 @@ public Category getCategory() {\n         }\n     }\n \n-    /**\n-     * {@link PasswordEncoder} based on SHA-256 and random salt generation.\n-     *\n-     * <p>\n-     * The salt is prepended to the hashed password and returned. So the encoded password is of the form\n-     * {@code SALT ':' hash(PASSWORD,SALT)}.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cfd98319f38ea8f9e2560351a068a1e5905b8208"}, "originalPosition": 131}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODAyOTg3NQ==", "bodyText": "Seems to be obsolete: https://github.com/spring-projects/spring-security/blob/56928f61f0f0dbba8dc5c7c6a99746abc39f8230/web/src/main/java/org/springframework/security/web/authentication/rememberme/AbstractRememberMeServices.java#L422-L429", "url": "https://github.com/jenkinsci/jenkins/pull/4848#discussion_r458029875", "createdAt": "2020-07-21T11:35:54Z", "author": {"login": "jglick"}, "path": "core/src/main/java/hudson/security/TokenBasedRememberMeServices2.java", "diffHunk": "@@ -303,39 +307,7 @@ private String findRememberMeCookieValue(HttpServletRequest request, HttpServlet\n             return null;\n         }\n     }\n-\n-    @Override\n-    protected Cookie makeValidCookie(String tokenValueBase64, HttpServletRequest request, long maxAge) {\n-        Cookie cookie = super.makeValidCookie(tokenValueBase64, request, maxAge);\n-        secureCookie(cookie, request);\n-        return cookie;\n-    }\n-\n-    @Override \n-    protected Cookie makeCancelCookie(HttpServletRequest request) {\n-        Cookie cookie = super.makeCancelCookie(request);\n-        secureCookie(cookie, request);\n-        return cookie;\n-    }\n-    \n-    /**\n-     * Force always the http-only flag and depending on the request, put also the secure flag.\n-     */\n-    private void secureCookie(Cookie cookie, HttpServletRequest request){\n-        // if we can mark the cookie HTTP only, do so to protect this cookie even in case of XSS vulnerability.\n-        if (SET_HTTP_ONLY!=null) {\n-            try {\n-                SET_HTTP_ONLY.invoke(cookie,true);\n-            } catch (IllegalAccessException | InvocationTargetException e) {\n-                // ignore\n-            }\n-        }\n-\n-        // if the user is running Jenkins over HTTPS, we also want to prevent the cookie from leaking in HTTP.\n-        // whether the login is done over HTTPS or not would be a good enough approximation of whether Jenkins runs in\n-        // HTTPS or not, so use that.\n-        cookie.setSecure(request.isSecure());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cfd98319f38ea8f9e2560351a068a1e5905b8208"}, "originalPosition": 194}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODAzMTI0NQ==", "bodyText": "Deleting this whole package; now constructing security objects directly in Java code. This means dropping support for the dubious feature of overriding Jenkins\u2019 security architecture by replacing a file in the WAR; you would now have to use supported configuration settings only.", "url": "https://github.com/jenkinsci/jenkins/pull/4848#discussion_r458031245", "createdAt": "2020-07-21T11:38:45Z", "author": {"login": "jglick"}, "path": "core/src/main/java/hudson/util/spring/BeanBuilder.java", "diffHunk": "@@ -1,652 +0,0 @@\n-/*\n- * Copyright 2004-2005 the original author or authors.\n- *\n- * Licensed under the Apache License, Version 2.0 (the \"License\");\n- * you may not use this file except in compliance with the License.\n- * You may obtain a copy of the License at\n- *\n- *      http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-package hudson.util.spring;\n-\n-import groovy.lang.Binding;\n-import groovy.lang.Closure;\n-import groovy.lang.GString;\n-import groovy.lang.GroovyObject;\n-import groovy.lang.GroovyObjectSupport;\n-import groovy.lang.GroovyShell;\n-import groovy.lang.MetaClass;\n-import groovy.lang.MissingMethodException;\n-import org.apache.commons.lang.ArrayUtils;\n-import org.codehaus.groovy.control.CompilerConfiguration;\n-import org.codehaus.groovy.runtime.DefaultGroovyMethods;\n-import org.codehaus.groovy.runtime.InvokerHelper;\n-import org.springframework.beans.factory.config.BeanDefinition;\n-import org.springframework.beans.factory.config.RuntimeBeanReference;\n-import org.springframework.beans.factory.support.ManagedList;\n-import org.springframework.beans.factory.support.ManagedMap;\n-import org.springframework.context.ApplicationContext;\n-import org.springframework.context.support.StaticApplicationContext;\n-import org.springframework.core.io.Resource;\n-import org.springframework.core.io.support.PathMatchingResourcePatternResolver;\n-import org.springframework.web.context.WebApplicationContext;\n-\n-import java.io.IOException;\n-import java.io.InputStream;\n-import java.io.InputStreamReader;\n-import java.util.Arrays;\n-import java.util.HashMap;\n-import java.util.List;\n-import java.util.ListIterator;\n-import java.util.Map;\n-import java.util.Map.Entry;\n-\n-/**\n- * <p>Runtime bean configuration wrapper. Like a Groovy builder, but more of a DSL for\n- * Spring configuration. Allows syntax like:</p>\n- *\n- * <pre>\n- * import org.hibernate.SessionFactory\n- * import org.apache.commons.dbcp.BasicDataSource\n- *\n- * BeanBuilder builder = new BeanBuilder()\n- * builder.beans {\n- *   dataSource(BasicDataSource) {                  // \u2190 invokeMethod\n- *      driverClassName = \"org.hsqldb.jdbcDriver\"\n- *      url = \"jdbc:hsqldb:mem:grailsDB\"\n- *      username = \"sa\"                            // \u2190 setProperty\n- *      password = \"\"\n- *      settings = [mynew:\"setting\"]\n- *  }\n- *  sessionFactory(SessionFactory) {\n- *  \t   dataSource = dataSource                 // \u2190 getProperty for retrieving refs\n- *  }\n- *  myService(MyService) {\n- *      nestedBean = { AnotherBean bean-&gt;          // \u2190 setProperty with closure for nested bean\n- *      \t\tdataSource = dataSource\n- *      }\n- *  }\n- * }\n- * </pre>\n- * <p>\n- *   You can also use the Spring IO API to load resources containing beans defined as a Groovy\n- *   script using either the constructors or the loadBeans(Resource[] resources) method\n- * </p>\n- *\n- * @author Graeme Rocher\n- * @since 0.4\n- *\n- */\n-public class BeanBuilder extends GroovyObjectSupport {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cfd98319f38ea8f9e2560351a068a1e5905b8208"}, "originalPosition": 86}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODAzMjUwMQ==", "bodyText": "Git trying to be too clever. Deleting long-deprecated typo NotSerilizableSecurityContext (not used by plugins); and adding a fa\u00e7ade for AccessDeniedException.", "url": "https://github.com/jenkinsci/jenkins/pull/4848#discussion_r458032501", "createdAt": "2020-07-21T11:41:28Z", "author": {"login": "jglick"}, "path": "core/src/main/java/org/acegisecurity/AccessDeniedException.java", "diffHunk": "@@ -22,21 +22,22 @@\n  * THE SOFTWARE.\n  */\n \n-package hudson.security;\n+package org.acegisecurity;\n \n-import jenkins.security.NonSerializableSecurityContext;\n-import org.acegisecurity.Authentication;\n+import hudson.security.AccessDeniedException2;\n \n /**\n- * @deprecated use {@link NonSerializableSecurityContext} instead\n+ * @deprecated use {@link AccessDeniedException2}\n  */\n @Deprecated\n-public class NotSerilizableSecurityContext extends NonSerializableSecurityContext {\n+public class AccessDeniedException extends org.springframework.security.access.AccessDeniedException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cfd98319f38ea8f9e2560351a068a1e5905b8208"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODAzMzAxNA==", "bodyText": "Might wind up deleting this, not sure if it could even potentially still be used by plugins.", "url": "https://github.com/jenkinsci/jenkins/pull/4848#discussion_r458033014", "createdAt": "2020-07-21T11:42:31Z", "author": {"login": "jglick"}, "path": "core/src/main/java/org/acegisecurity/AuthenticationManager.java", "diffHunk": "@@ -0,0 +1,35 @@\n+/*\n+ * The MIT License\n+ *\n+ * Copyright 2020 CloudBees, Inc.\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included in\n+ * all copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+ * THE SOFTWARE.\n+ */\n+\n+package org.acegisecurity;\n+\n+/**\n+ * @deprecated TODO replacement\n+ */\n+@Deprecated\n+public interface AuthenticationManager {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cfd98319f38ea8f9e2560351a068a1e5905b8208"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODAzMzQ2Mw==", "bodyText": "Reimplementing these from scratch. Only used from SidAcl.", "url": "https://github.com/jenkinsci/jenkins/pull/4848#discussion_r458033463", "createdAt": "2020-07-21T11:43:21Z", "author": {"login": "jglick"}, "path": "core/src/main/java/org/acegisecurity/acls/sid/PrincipalSid.java", "diffHunk": "@@ -0,0 +1,63 @@\n+/*\n+ * The MIT License\n+ *\n+ * Copyright 2020 CloudBees, Inc.\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included in\n+ * all copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+ * THE SOFTWARE.\n+ */\n+\n+package org.acegisecurity.acls.sid;\n+\n+import java.util.Objects;\n+import org.springframework.security.core.Authentication;\n+import org.springframework.security.core.userdetails.UserDetails;\n+\n+public class PrincipalSid implements Sid {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cfd98319f38ea8f9e2560351a068a1e5905b8208"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODAzNDA4MA==", "bodyText": "Seems to have been unused, and I do not want to depend on Spring Security modules for LDAP here; belongs in the ldap plugin only.", "url": "https://github.com/jenkinsci/jenkins/pull/4848#discussion_r458034080", "createdAt": "2020-07-21T11:44:34Z", "author": {"login": "jglick"}, "path": "core/src/main/java/org/acegisecurity/providers/ldap/authenticator/BindAuthenticator2.java", "diffHunk": "@@ -1,62 +0,0 @@\n-/*\n- * The MIT License\n- * \n- * Copyright (c) 2004-2009, Sun Microsystems, Inc., Kohsuke Kawaguchi\n- * \n- * Permission is hereby granted, free of charge, to any person obtaining a copy\n- * of this software and associated documentation files (the \"Software\"), to deal\n- * in the Software without restriction, including without limitation the rights\n- * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n- * copies of the Software, and to permit persons to whom the Software is\n- * furnished to do so, subject to the following conditions:\n- * \n- * The above copyright notice and this permission notice shall be included in\n- * all copies or substantial portions of the Software.\n- * \n- * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n- * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n- * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n- * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n- * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n- * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n- * THE SOFTWARE.\n- */\n-package org.acegisecurity.providers.ldap.authenticator;\n-\n-import org.acegisecurity.ldap.InitialDirContextFactory;\n-import org.acegisecurity.userdetails.ldap.LdapUserDetails;\n-\n-import java.util.logging.Logger;\n-import java.util.logging.Level;\n-\n-/**\n- * {@link BindAuthenticator} with improved diagnostics.\n- * \n- * @author Kohsuke Kawaguchi\n- */\n-public class BindAuthenticator2 extends BindAuthenticator {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cfd98319f38ea8f9e2560351a068a1e5905b8208"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODAzNDMyMQ==", "bodyText": "Might just get deleted, TBD.", "url": "https://github.com/jenkinsci/jenkins/pull/4848#discussion_r458034321", "createdAt": "2020-07-21T11:44:58Z", "author": {"login": "jglick"}, "path": "core/src/main/java/org/acegisecurity/userdetails/UserDetailsService.java", "diffHunk": "@@ -0,0 +1,31 @@\n+/*\n+ * The MIT License\n+ *\n+ * Copyright 2020 CloudBees, Inc.\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included in\n+ * all copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+ * THE SOFTWARE.\n+ */\n+\n+package org.acegisecurity.userdetails;\n+\n+/**\n+ * @deprecated TODO replacement\n+ */\n+@Deprecated\n+public interface UserDetailsService extends org.springframework.security.core.userdetails.UserDetailsService {}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cfd98319f38ea8f9e2560351a068a1e5905b8208"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODAzNTU0Nw==", "bodyText": "Overaggressive rename detection. Deleted AbstractPasswordBasedSecurityRealm.groovy, created AuthenticationException.java fa\u00e7ade.", "url": "https://github.com/jenkinsci/jenkins/pull/4848#discussion_r458035547", "createdAt": "2020-07-21T11:47:25Z", "author": {"login": "jglick"}, "path": "core/src/main/java/org/acegisecurity/AuthenticationException.java", "diffHunk": "@@ -21,29 +21,21 @@\n  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n  * THE SOFTWARE.\n  */\n-/*\n-    Configure Hudson's own user database as the authentication realm.\n-*/\n-import org.acegisecurity.providers.ProviderManager\n-import org.acegisecurity.providers.anonymous.AnonymousAuthenticationProvider\n-import org.acegisecurity.providers.rememberme.RememberMeAuthenticationProvider\n-import jenkins.model.Jenkins\n \n-authenticationManager(ProviderManager) {\n-    providers = [\n-        // this does all the hard work.\n-        // injected by the parsing code\n-        authenticator,\n+package org.acegisecurity;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cfd98319f38ea8f9e2560351a068a1e5905b8208"}, "originalPosition": 26}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "085f525a1431b007a625d305a63624ded7aeb9bf", "author": {"user": {"login": "jglick", "name": "Jesse Glick"}}, "url": "https://github.com/jenkinsci/jenkins/commit/085f525a1431b007a625d305a63624ded7aeb9bf", "committedDate": "2020-07-21T11:48:13Z", "message": "Comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "26060aa91ee43a5422a017f9a4d6d1339bb5cba6", "author": {"user": {"login": "jglick", "name": "Jesse Glick"}}, "url": "https://github.com/jenkinsci/jenkins/commit/26060aa91ee43a5422a017f9a4d6d1339bb5cba6", "committedDate": "2020-07-21T11:51:08Z", "message": "Merge branch 'master' of github.com:jenkinsci/jenkins into spring-5303"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c6f0e12012dc9b3dfd81eb7cdc7c8f07b0e703aa", "author": {"user": {"login": "jglick", "name": "Jesse Glick"}}, "url": "https://github.com/jenkinsci/jenkins/commit/c6f0e12012dc9b3dfd81eb7cdc7c8f07b0e703aa", "committedDate": "2020-07-21T15:03:06Z", "message": "Merge branch 'support-log-formatter' into spring-5303"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c3f9efd5e2c79adbeeebe474b2ab034fc69c37f1", "author": {"user": {"login": "jglick", "name": "Jesse Glick"}}, "url": "https://github.com/jenkinsci/jenkins/commit/c3f9efd5e2c79adbeeebe474b2ab034fc69c37f1", "committedDate": "2020-07-21T15:25:28Z", "message": "Better logging for ChainedServletFilter"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a8a661e8fa3bee524fe6e9f016eee84c21d711e6", "author": {"user": {"login": "jglick", "name": "Jesse Glick"}}, "url": "https://github.com/jenkinsci/jenkins/commit/a8a661e8fa3bee524fe6e9f016eee84c21d711e6", "committedDate": "2020-07-21T15:36:51Z", "message": "Can now log in; crumbs are broken though"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "76b0885af1b65f3c6bf7c9f6dce386039db1bc1b", "author": {"user": {"login": "jglick", "name": "Jesse Glick"}}, "url": "https://github.com/jenkinsci/jenkins/commit/76b0885af1b65f3c6bf7c9f6dce386039db1bc1b", "committedDate": "2020-07-21T16:03:17Z", "message": "Searched more extensively for references to Acegi Security"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "12598a7e4a2ab44a932825db59447f7c26fe31ba", "author": {"user": {"login": "jglick", "name": "Jesse Glick"}}, "url": "https://github.com/jenkinsci/jenkins/commit/12598a7e4a2ab44a932825db59447f7c26fe31ba", "committedDate": "2020-07-21T19:27:09Z", "message": "HttpSessionContextIntegrationFilter2 was critical after all; just took me a while to find that HttpSessionContextIntegrationFilter is now SecurityContextPersistenceFilter"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a985a501bcc381d20f7972abaea2672235cf15c4", "author": {"user": {"login": "jglick", "name": "Jesse Glick"}}, "url": "https://github.com/jenkinsci/jenkins/commit/a985a501bcc381d20f7972abaea2672235cf15c4", "committedDate": "2020-07-21T19:27:24Z", "message": "Comment"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4201baa4be828cdcc3bfbbc1c068ef29b6d8549c", "author": {"user": {"login": "jglick", "name": "Jesse Glick"}}, "url": "https://github.com/jenkinsci/jenkins/commit/4201baa4be828cdcc3bfbbc1c068ef29b6d8549c", "committedDate": "2020-07-21T19:47:47Z", "message": "Fixing UserSeedProperty so that login works at last"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a36f41007e82c5b6a16a8e7c33284079e47fabad", "author": {"user": {"login": "jglick", "name": "Jesse Glick"}}, "url": "https://github.com/jenkinsci/jenkins/commit/a36f41007e82c5b6a16a8e7c33284079e47fabad", "committedDate": "2020-07-21T20:14:19Z", "message": "Binary compatibility for QueueItemAuthenticator"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ae31edd5a9d6c24d17665f4391ef4f7a4f84ada9", "author": {"user": {"login": "jglick", "name": "Jesse Glick"}}, "url": "https://github.com/jenkinsci/jenkins/commit/ae31edd5a9d6c24d17665f4391ef4f7a4f84ada9", "committedDate": "2020-07-21T20:19:06Z", "message": "Fixing up QueueItemAuthenticator Javadoc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "64341787683cde9f3e069057d6f185f715d77fa7", "author": {"user": {"login": "jglick", "name": "Jesse Glick"}}, "url": "https://github.com/jenkinsci/jenkins/commit/64341787683cde9f3e069057d6f185f715d77fa7", "committedDate": "2020-07-21T20:37:03Z", "message": "Binary compatibility for SecurityRealm.AUTHENTICATED_AUTHORITY"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "da40e4adfb7cff67a834a3bc7c0e84fe0819e48b", "author": {"user": {"login": "jglick", "name": "Jesse Glick"}}, "url": "https://github.com/jenkinsci/jenkins/commit/da40e4adfb7cff67a834a3bc7c0e84fe0819e48b", "committedDate": "2020-07-21T21:26:15Z", "message": "Binary compatibility for key methods of SecurityRealm and AbstractPasswordBasedSecurityRealm"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1ed7887281196f186d63bdaafaef4b17909b9405", "author": {"user": {"login": "jglick", "name": "Jesse Glick"}}, "url": "https://github.com/jenkinsci/jenkins/commit/1ed7887281196f186d63bdaafaef4b17909b9405", "committedDate": "2020-07-22T13:07:24Z", "message": "Even trying to compile at this stage is a waste of CI resources"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3f163d8c99ddab2b371d82f1a8af5412894c2d34", "author": {"user": {"login": "jglick", "name": "Jesse Glick"}}, "url": "https://github.com/jenkinsci/jenkins/commit/3f163d8c99ddab2b371d82f1a8af5412894c2d34", "committedDate": "2020-07-22T16:26:57Z", "message": "Merge branch 'master' of github.com:jenkinsci/jenkins into spring-5303"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "abb439d0ae972c79c037be2466d056758f9dba8a", "author": {"user": {"login": "jglick", "name": "Jesse Glick"}}, "url": "https://github.com/jenkinsci/jenkins/commit/abb439d0ae972c79c037be2466d056758f9dba8a", "committedDate": "2020-07-22T20:10:39Z", "message": "Binary compatibility for User.impersonate and Jenkins.ANONYMOUS"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "100ca911e549eba9bbd52dcaa8c257300ea962aa", "author": {"user": {"login": "jglick", "name": "Jesse Glick"}}, "url": "https://github.com/jenkinsci/jenkins/commit/100ca911e549eba9bbd52dcaa8c257300ea962aa", "committedDate": "2020-07-22T20:38:49Z", "message": "Binary compatibility for ACL.{SYSTEM,impersonate,as}"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "58364c23526b5fdf2c87ad950e63dd3d26749e8c", "author": {"user": {"login": "jglick", "name": "Jesse Glick"}}, "url": "https://github.com/jenkinsci/jenkins/commit/58364c23526b5fdf2c87ad950e63dd3d26749e8c", "committedDate": "2020-07-22T20:42:46Z", "message": "Tests compile"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "29e1b959ad57b20b69e22d50a97dcc8596a2b1ed", "author": {"user": {"login": "jglick", "name": "Jesse Glick"}}, "url": "https://github.com/jenkinsci/jenkins/commit/29e1b959ad57b20b69e22d50a97dcc8596a2b1ed", "committedDate": "2020-07-22T21:25:27Z", "message": "Giving up on subtyping relationships even for exceptions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0ad56da5d3f8adc2886bbb80f550421d1bed576c", "author": {"user": {"login": "jglick", "name": "Jesse Glick"}}, "url": "https://github.com/jenkinsci/jenkins/commit/0ad56da5d3f8adc2886bbb80f550421d1bed576c", "committedDate": "2020-07-22T21:32:46Z", "message": "Implementing SecurityContext.to/fromSpring allows some functional tests to pass"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a4475c4044788e6b2383b6f559785924f82ab8e7", "author": {"user": {"login": "jglick", "name": "Jesse Glick"}}, "url": "https://github.com/jenkinsci/jenkins/commit/a4475c4044788e6b2383b6f559785924f82ab8e7", "committedDate": "2020-07-22T21:35:16Z", "message": "Do not want spring-jcl as it clashes with the commons-logging we bundle"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6dad321f809b3c303b96788483b502a5c95c9668", "author": {"user": {"login": "jglick", "name": "Jesse Glick"}}, "url": "https://github.com/jenkinsci/jenkins/commit/6dad321f809b3c303b96788483b502a5c95c9668", "committedDate": "2020-07-22T22:57:32Z", "message": "Some progress on tests using Authentication"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "62e73df29a17b0afe2aff9ad897b98efa50f143d", "author": {"user": {"login": "jglick", "name": "Jesse Glick"}}, "url": "https://github.com/jenkinsci/jenkins/commit/62e73df29a17b0afe2aff9ad897b98efa50f143d", "committedDate": "2020-07-22T23:06:23Z", "message": "org.acegisecurity.userdetails.User must be defined for JenkinsRule.DummySecurityRealm to work"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "998d6732027393a3dbf869bd5acb841cacd1b9da", "author": {"user": {"login": "jglick", "name": "Jesse Glick"}}, "url": "https://github.com/jenkinsci/jenkins/commit/998d6732027393a3dbf869bd5acb841cacd1b9da", "committedDate": "2020-07-22T23:08:58Z", "message": "Some tests are passing; may as well start trying CI"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUzNzQ2MTI5", "url": "https://github.com/jenkinsci/jenkins/pull/4848#pullrequestreview-453746129", "createdAt": "2020-07-22T23:12:04Z", "commit": {"oid": "998d6732027393a3dbf869bd5acb841cacd1b9da"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQyMzoxMjowNFrOG13WUQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQyMzoxMjowNFrOG13WUQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTEzNDU0NQ==", "bodyText": "There is no replacement for AcegiSecurityException. AFAIK the purpose of this class is to nicely handle 403s, so this should be good enough.", "url": "https://github.com/jenkinsci/jenkins/pull/4848#discussion_r459134545", "createdAt": "2020-07-22T23:12:04Z", "author": {"login": "jglick"}, "path": "core/src/main/java/hudson/ExpressionFactory2.java", "diffHunk": "@@ -72,7 +72,7 @@ public Object evaluate(JellyContext context) {\n                 CURRENT_CONTEXT.set(context);\n                 JexlContext jexlContext = new JellyJexlContext( context );\n                 return expression.evaluate(jexlContext);\n-            } catch (AcegiSecurityException e) {\n+            } catch (AccessDeniedException e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "998d6732027393a3dbf869bd5acb841cacd1b9da"}, "originalPosition": 20}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU0MDQ0OTYy", "url": "https://github.com/jenkinsci/jenkins/pull/4848#pullrequestreview-454044962", "createdAt": "2020-07-23T11:32:41Z", "commit": {"oid": "998d6732027393a3dbf869bd5acb841cacd1b9da"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxMTozMjo0MVrOG2GkLQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxMTo1MTowN1rOG2HFSQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTM4Mzg1Mw==", "bodyText": "IIRC this class is no longer maintained / outdated as it's preferable for plugins to implement commands directly.", "url": "https://github.com/jenkinsci/jenkins/pull/4848#discussion_r459383853", "createdAt": "2020-07-23T11:32:41Z", "author": {"login": "Wadeck"}, "path": "core/src/main/java/hudson/cli/declarative/CLIRegisterer.java", "diffHunk": "@@ -202,6 +200,7 @@ public int main(List<String> args, Locale locale, InputStream stdin, PrintStream\n \n                             CmdLineParser parser = bindMethod(binders);\n                             try {\n+                                // TODO this could probably use ACL.as; why is it calling SecurityContext.setAuthentication rather than SecurityContextHolder.setContext?", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "998d6732027393a3dbf869bd5acb841cacd1b9da"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTM4Nzg1OQ==", "bodyText": "IIRC setHttpOnly reflection was due to previous Tomcat version, with the current one supported by Jenkins, it's no longer necessary as we are using Servlet 3.0+.", "url": "https://github.com/jenkinsci/jenkins/pull/4848#discussion_r459387859", "createdAt": "2020-07-23T11:41:27Z", "author": {"login": "Wadeck"}, "path": "core/src/main/java/hudson/security/TokenBasedRememberMeServices2.java", "diffHunk": "@@ -303,39 +307,7 @@ private String findRememberMeCookieValue(HttpServletRequest request, HttpServlet\n             return null;\n         }\n     }\n-\n-    @Override\n-    protected Cookie makeValidCookie(String tokenValueBase64, HttpServletRequest request, long maxAge) {\n-        Cookie cookie = super.makeValidCookie(tokenValueBase64, request, maxAge);\n-        secureCookie(cookie, request);\n-        return cookie;\n-    }\n-\n-    @Override \n-    protected Cookie makeCancelCookie(HttpServletRequest request) {\n-        Cookie cookie = super.makeCancelCookie(request);\n-        secureCookie(cookie, request);\n-        return cookie;\n-    }\n-    \n-    /**\n-     * Force always the http-only flag and depending on the request, put also the secure flag.\n-     */\n-    private void secureCookie(Cookie cookie, HttpServletRequest request){\n-        // if we can mark the cookie HTTP only, do so to protect this cookie even in case of XSS vulnerability.\n-        if (SET_HTTP_ONLY!=null) {\n-            try {\n-                SET_HTTP_ONLY.invoke(cookie,true);\n-            } catch (IllegalAccessException | InvocationTargetException e) {\n-                // ignore\n-            }\n-        }\n-\n-        // if the user is running Jenkins over HTTPS, we also want to prevent the cookie from leaking in HTTP.\n-        // whether the login is done over HTTPS or not would be a good enough approximation of whether Jenkins runs in\n-        // HTTPS or not, so use that.\n-        cookie.setSecure(request.isSecure());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODAyOTg3NQ=="}, "originalCommit": {"oid": "cfd98319f38ea8f9e2560351a068a1e5905b8208"}, "originalPosition": 194}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTM5MjMyOQ==", "bodyText": "I don't understand your question about the signature. You have the variable just above, derived from the expiryTime and username.\nIt was verified by our current version in TokenBasedRememberMeServices2.java#L256-L266 but in recent version of Spring Security, they have corrected the flaw with the equality and so it's verified (correctly) in TokenBasedRememberMeServices.java#L95.", "url": "https://github.com/jenkinsci/jenkins/pull/4848#discussion_r459392329", "createdAt": "2020-07-23T11:51:07Z", "author": {"login": "Wadeck"}, "path": "core/src/main/java/hudson/security/TokenBasedRememberMeServices2.java", "diffHunk": "@@ -142,23 +140,29 @@ public void loginSuccess(HttpServletRequest request, HttpServletResponse respons\n \t\t}\n \n \t\tAssert.notNull(successfulAuthentication.getPrincipal());\n-\t\tAssert.notNull(successfulAuthentication.getCredentials());\n \t\tAssert.isInstanceOf(UserDetails.class, successfulAuthentication.getPrincipal());\n \n-\t\tlong expiryTime = System.currentTimeMillis() + TimeUnit.SECONDS.toMillis(tokenValiditySeconds);\n+\t\tlong expiryTime = System.currentTimeMillis() + TimeUnit.SECONDS.toMillis(getTokenValiditySeconds());\n \t\tString username = ((UserDetails) successfulAuthentication.getPrincipal()).getUsername();\n \n-\t\tString signatureValue = makeTokenSignature(expiryTime, (UserDetails)successfulAuthentication.getPrincipal());\n+\t\tString signatureValue = makeTokenSignature(expiryTime, username, ((UserDetails) successfulAuthentication.getPrincipal()).getPassword());\n \t\tString tokenValue = username + \":\" + expiryTime + \":\" + signatureValue;\n \t\tString tokenValueBase64 = Base64.getEncoder().encodeToString(tokenValue.getBytes());\n-\t\tresponse.addCookie(makeValidCookie(tokenValueBase64, request, tokenValiditySeconds));\n+\t\tint tokenLifetime = calculateLoginLifetime(request, successfulAuthentication);\n+        /* TODO unclear what the Spring Security equivalent to this is:\n+\t\tresponse.addCookie(makeValidCookie(tokenValueBase64, request, getTokenValiditySeconds()));\n+        // something like this, but where is the token signature?", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "998d6732027393a3dbf869bd5acb841cacd1b9da"}, "originalPosition": 121}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "aa73f2014ed4ce06bb8472c80a19fffebc1df812", "author": {"user": {"login": "jglick", "name": "Jesse Glick"}}, "url": "https://github.com/jenkinsci/jenkins/commit/aa73f2014ed4ce06bb8472c80a19fffebc1df812", "committedDate": "2020-07-23T13:52:16Z", "message": "@Wadeck helped me with TokenBasedRememberMeServices2"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d052fb80bbce47ec1bbf52b371b61358d853f889", "author": {"user": {"login": "jglick", "name": "Jesse Glick"}}, "url": "https://github.com/jenkinsci/jenkins/commit/d052fb80bbce47ec1bbf52b371b61358d853f889", "committedDate": "2020-07-23T14:02:09Z", "message": "TokenBasedRememberMeServices2Test.rememberMeAutoLoginFailure was asserting some debug message removed in Spring Security"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1f14f3c6d5d2de54929cfbe60db436d1888f1d31", "author": {"user": {"login": "jglick", "name": "Jesse Glick"}}, "url": "https://github.com/jenkinsci/jenkins/commit/1f14f3c6d5d2de54929cfbe60db436d1888f1d31", "committedDate": "2020-07-23T14:31:21Z", "message": "Tracked down why WebClient.withBasicApiToken was not working in tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "044c42c7e4b7f493ba944e111324b6b64e06b4b5", "author": {"user": {"login": "jglick", "name": "Jesse Glick"}}, "url": "https://github.com/jenkinsci/jenkins/commit/044c42c7e4b7f493ba944e111324b6b64e06b4b5", "committedDate": "2020-07-23T15:38:57Z", "message": "Binary compatibility for CLICommand.{getTransportAuthentication,setTransportAuth}"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0609eafc80f6d5302cc03d762d1a868a8b6bc934", "author": {"user": {"login": "jglick", "name": "Jesse Glick"}}, "url": "https://github.com/jenkinsci/jenkins/commit/0609eafc80f6d5302cc03d762d1a868a8b6bc934", "committedDate": "2020-07-23T15:42:03Z", "message": "ClassFilterImplSanityTest"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5354321bdab43dc8c8b37e30424409c6a2704201", "author": {"user": {"login": "jglick", "name": "Jesse Glick"}}, "url": "https://github.com/jenkinsci/jenkins/commit/5354321bdab43dc8c8b37e30424409c6a2704201", "committedDate": "2020-07-23T17:30:10Z", "message": "Rewrote Authentication.to/fromSpring, fixing two tests in QueueTest"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "091d0cac37056f063fc030254ea1395fd73f57a0", "author": {"user": {"login": "jglick", "name": "Jesse Glick"}}, "url": "https://github.com/jenkinsci/jenkins/commit/091d0cac37056f063fc030254ea1395fd73f57a0", "committedDate": "2020-07-23T17:36:17Z", "message": "Binary compatibility for Jenkins.getAuthentication"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "11ec923d2a5fd53f431393e9039a1c3c3a86a361", "author": {"user": {"login": "jglick", "name": "Jesse Glick"}}, "url": "https://github.com/jenkinsci/jenkins/commit/11ec923d2a5fd53f431393e9039a1c3c3a86a361", "committedDate": "2020-07-23T17:39:30Z", "message": "Some more sanity checks around ACL.isAnonymous"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4bdec8341b0d75ff80c980eea70a590df70d6dc7", "author": {"user": {"login": "jglick", "name": "Jesse Glick"}}, "url": "https://github.com/jenkinsci/jenkins/commit/4bdec8341b0d75ff80c980eea70a590df70d6dc7", "committedDate": "2020-07-23T18:06:24Z", "message": "Binary compatibility for remaining ACL methods"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d8e6bea179b1de568ec516d0caab32ac7a0c21d9", "author": {"user": {"login": "jglick", "name": "Jesse Glick"}}, "url": "https://github.com/jenkinsci/jenkins/commit/d8e6bea179b1de568ec516d0caab32ac7a0c21d9", "committedDate": "2020-07-23T18:17:19Z", "message": "Special round-trip handling for ACL.SYSTEM for compatibility"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "84cb57b2f38b11d2e7ab3dd51865fd695e1da0e6", "author": {"user": {"login": "jglick", "name": "Jesse Glick"}}, "url": "https://github.com/jenkinsci/jenkins/commit/84cb57b2f38b11d2e7ab3dd51865fd695e1da0e6", "committedDate": "2020-07-23T20:00:07Z", "message": "Merge branch 'master' of github.com:jenkinsci/jenkins into spring-5303"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cdf2e4611cf5753b8e5bd23573381f2a37808642", "author": {"user": {"login": "jglick", "name": "Jesse Glick"}}, "url": "https://github.com/jenkinsci/jenkins/commit/cdf2e4611cf5753b8e5bd23573381f2a37808642", "committedDate": "2020-07-23T21:29:44Z", "message": "JobTest.readPermission failed because its @LocalData used a pre-jBCrypt password hash"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c95b4761ebad82570f68d70b82740d170e221ba4", "author": {"user": {"login": "jglick", "name": "Jesse Glick"}}, "url": "https://github.com/jenkinsci/jenkins/commit/c95b4761ebad82570f68d70b82740d170e221ba4", "committedDate": "2020-07-23T21:54:29Z", "message": "Binary compatibility for User.getUserDetailsForImpersonation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3910ebf3df32118506ee8c9a4532d8739370b58b", "author": {"user": {"login": "jglick", "name": "Jesse Glick"}}, "url": "https://github.com/jenkinsci/jenkins/commit/3910ebf3df32118506ee8c9a4532d8739370b58b", "committedDate": "2020-07-23T22:02:54Z", "message": "Binary compatibility for SecurityListener"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8a5bdf20ada28bdc55158d8d29e090a2504b91dd", "author": {"user": {"login": "jglick", "name": "Jesse Glick"}}, "url": "https://github.com/jenkinsci/jenkins/commit/8a5bdf20ada28bdc55158d8d29e090a2504b91dd", "committedDate": "2020-07-23T22:22:21Z", "message": "ExtendedReadPermissionTest failed because its @LocalData used a pre-jBCrypt password hash"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7ca54e4b1257a5211d2d43e4c04b77b10826d6c6", "author": {"user": {"login": "jglick", "name": "Jesse Glick"}}, "url": "https://github.com/jenkinsci/jenkins/commit/7ca54e4b1257a5211d2d43e4c04b77b10826d6c6", "committedDate": "2020-07-23T22:28:59Z", "message": "NPE in QueueItemAuthenticator"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "091bc2317ce35fa0c8080f06139c351aecfcfc8c", "author": {"user": {"login": "jglick", "name": "Jesse Glick"}}, "url": "https://github.com/jenkinsci/jenkins/commit/091bc2317ce35fa0c8080f06139c351aecfcfc8c", "committedDate": "2020-07-23T22:32:57Z", "message": "LastGrantedAuthoritiesPropertyTest was reliant on the sort order of authorities"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "43e8d297cb96f72ceaaf476672919fbdb7539c17", "author": {"user": {"login": "jglick", "name": "Jesse Glick"}}, "url": "https://github.com/jenkinsci/jenkins/commit/43e8d297cb96f72ceaaf476672919fbdb7539c17", "committedDate": "2020-07-23T22:34:57Z", "message": "StopBuildsCommandTest"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2aec3cb908a89c33e6ac5c1050e82e504db81c21", "author": {"user": {"login": "jglick", "name": "Jesse Glick"}}, "url": "https://github.com/jenkinsci/jenkins/commit/2aec3cb908a89c33e6ac5c1050e82e504db81c21", "committedDate": "2020-07-23T22:46:18Z", "message": "Javadoc updates in TokenBasedRememberMeServices2"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4c7b6b3652dbb8f26eda1b027d564d2cfa81413a", "author": {"user": {"login": "jglick", "name": "Jesse Glick"}}, "url": "https://github.com/jenkinsci/jenkins/commit/4c7b6b3652dbb8f26eda1b027d564d2cfa81413a", "committedDate": "2020-07-23T23:09:20Z", "message": "Accidentally removed code which added sessionSeed"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3a2d8570f3200a61bda4fd994b3676d5da711919", "author": {"user": {"login": "jglick", "name": "Jesse Glick"}}, "url": "https://github.com/jenkinsci/jenkins/commit/3a2d8570f3200a61bda4fd994b3676d5da711919", "committedDate": "2020-07-23T23:09:55Z", "message": "makeTokenSignature can be called when a User is not yet in memory; need to force creation (authentication was already successful at this point)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "736bca448921411a76f574bbc76515da526cc730", "author": {"user": {"login": "jglick", "name": "Jesse Glick"}}, "url": "https://github.com/jenkinsci/jenkins/commit/736bca448921411a76f574bbc76515da526cc730", "committedDate": "2020-07-23T23:22:29Z", "message": "Also accidentally deleted some code necessary to handle disableRememberMe (SECURITY-996)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "990233849f205bb7c30aeb9f33e57218335e0a10", "author": {"user": {"login": "jglick", "name": "Jesse Glick"}}, "url": "https://github.com/jenkinsci/jenkins/commit/990233849f205bb7c30aeb9f33e57218335e0a10", "committedDate": "2020-07-23T23:23:24Z", "message": "Merge branch 'master' of github.com:jenkinsci/jenkins into spring-5303"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "061e10642e412b96906d7adce11af0857ffdf991", "author": {"user": {"login": "jglick", "name": "Jesse Glick"}}, "url": "https://github.com/jenkinsci/jenkins/commit/061e10642e412b96906d7adce11af0857ffdf991", "committedDate": "2020-07-24T11:26:43Z", "message": "Rename refactoring missed a couple of overrides"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "06d4b16f30f789add4da2fff50448b37d8991c67", "author": {"user": {"login": "jglick", "name": "Jesse Glick"}}, "url": "https://github.com/jenkinsci/jenkins/commit/06d4b16f30f789add4da2fff50448b37d8991c67", "committedDate": "2020-07-24T11:29:18Z", "message": "Merge branch 'master' of github.com:jenkinsci/jenkins into spring-5303"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5adba3eb57657361afec80199b427685cba1703f", "author": {"user": {"login": "jglick", "name": "Jesse Glick"}}, "url": "https://github.com/jenkinsci/jenkins/commit/5adba3eb57657361afec80199b427685cba1703f", "committedDate": "2020-07-24T13:52:15Z", "message": "Binary compatibility for AccessControlled.hasPermission"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a5d60e41d15d93b47f351fa41737df93cfe0e436", "author": {"user": {"login": "jglick", "name": "Jesse Glick"}}, "url": "https://github.com/jenkinsci/jenkins/commit/a5d60e41d15d93b47f351fa41737df93cfe0e436", "committedDate": "2020-07-24T13:58:25Z", "message": "Added back DataAccessResourceFailureException & DataRetrievalFailureException"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7fdb8db1103ae1bbfe3f7d5fed00484edda048b1", "author": {"user": {"login": "jglick", "name": "Jesse Glick"}}, "url": "https://github.com/jenkinsci/jenkins/commit/7fdb8db1103ae1bbfe3f7d5fed00484edda048b1", "committedDate": "2020-07-24T14:14:15Z", "message": "Binary compatibility for Queue.Item.authenticate and affiliated methods"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "54c65edd3acf0c845a83d0a11b305e729186bd47", "author": {"user": {"login": "jglick", "name": "Jesse Glick"}}, "url": "https://github.com/jenkinsci/jenkins/commit/54c65edd3acf0c845a83d0a11b305e729186bd47", "committedDate": "2020-07-24T14:55:18Z", "message": "RememberMeServicesProxy is apparently unused by plugins, do not need to care about compatibility"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3094ae57734aef598c6f4401627153f4ea086869", "author": {"user": {"login": "jglick", "name": "Jesse Glick"}}, "url": "https://github.com/jenkinsci/jenkins/commit/3094ae57734aef598c6f4401627153f4ea086869", "committedDate": "2020-07-24T15:17:31Z", "message": "Javadoc fixes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "30b0079f79f91e5271ccac1d019101e8f9faee3a", "author": {"user": {"login": "jglick", "name": "Jesse Glick"}}, "url": "https://github.com/jenkinsci/jenkins/commit/30b0079f79f91e5271ccac1d019101e8f9faee3a", "committedDate": "2020-07-24T15:18:46Z", "message": "Merge branch 'master' of github.com:jenkinsci/jenkins into spring-5303"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b1fcbc699bdf2c8c34a1938eadb9f278d1c98636", "author": {"user": {"login": "jglick", "name": "Jesse Glick"}}, "url": "https://github.com/jenkinsci/jenkins/commit/b1fcbc699bdf2c8c34a1938eadb9f278d1c98636", "committedDate": "2020-07-24T15:21:20Z", "message": "Compilation error in test"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU0OTgwOTgx", "url": "https://github.com/jenkinsci/jenkins/pull/4848#pullrequestreview-454980981", "createdAt": "2020-07-24T15:27:25Z", "commit": {"oid": "b1fcbc699bdf2c8c34a1938eadb9f278d1c98636"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxNToyNzoyNVrOG2zzhQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxNToyNzoyNVrOG2zzhQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDEyNTA2MQ==", "bodyText": "Code wasn't changed accordingly?", "url": "https://github.com/jenkinsci/jenkins/pull/4848#discussion_r460125061", "createdAt": "2020-07-24T15:27:25Z", "author": {"login": "daniel-beck"}, "path": "core/src/main/java/hudson/security/AccessControlled.java", "diffHunk": "@@ -58,7 +58,7 @@ default void checkAnyPermission(@NonNull Permission... permission) throws Access\n     }\n \n     /**\n-     * Convenient short-cut for {@code getACL().hasPermission(permission)}\n+     * Convenient short-cut for {@code getACL().hasPermission2(permission)}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b1fcbc699bdf2c8c34a1938eadb9f278d1c98636"}, "originalPosition": 16}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6d9622834bd0ebd5a53e605234579b9614e63be6", "author": {"user": {"login": "jglick", "name": "Jesse Glick"}}, "url": "https://github.com/jenkinsci/jenkins/commit/6d9622834bd0ebd5a53e605234579b9614e63be6", "committedDate": "2020-07-24T15:43:04Z", "message": "Incorrect code sample"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f3e6c04f46962b4150d614d836b0c43f9cd0a802", "author": {"user": {"login": "jglick", "name": "Jesse Glick"}}, "url": "https://github.com/jenkinsci/jenkins/commit/f3e6c04f46962b4150d614d836b0c43f9cd0a802", "committedDate": "2020-07-28T12:11:26Z", "message": "Merge branch 'master' of github.com:jenkinsci/jenkins into spring-5303"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f69be2ca1dffb94ed6e3bcc52009f53cc08a8d2a", "author": {"user": {"login": "jglick", "name": "Jesse Glick"}}, "url": "https://github.com/jenkinsci/jenkins/commit/f69be2ca1dffb94ed6e3bcc52009f53cc08a8d2a", "committedDate": "2020-07-28T12:19:23Z", "message": "SecurityRealm.createFilter more legible with blocks"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ecf3acc6d8a938852803928bbf9f2ec5c8e0813d", "author": {"user": {"login": "jglick", "name": "Jesse Glick"}}, "url": "https://github.com/jenkinsci/jenkins/commit/ecf3acc6d8a938852803928bbf9f2ec5c8e0813d", "committedDate": "2020-07-28T15:27:47Z", "message": "Minor cleanups in TokenBasedRememberMeServices2"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c3827334e5a4746a6cdc8b5ec17c721f3f61c719", "author": {"user": {"login": "jglick", "name": "Jesse Glick"}}, "url": "https://github.com/jenkinsci/jenkins/commit/c3827334e5a4746a6cdc8b5ec17c721f3f61c719", "committedDate": "2020-07-28T16:16:21Z", "message": "toSpring/fromSpring pattern for selected exception types"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4d7f00d0a3bfc097cdc4a76fa24b60a3a40346b5", "author": {"user": {"login": "jglick", "name": "Jesse Glick"}}, "url": "https://github.com/jenkinsci/jenkins/commit/4d7f00d0a3bfc097cdc4a76fa24b60a3a40346b5", "committedDate": "2020-07-28T17:00:58Z", "message": "Apparently org.acegisecurity.Authentication.getAuthorities() could return null"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "abf82513c16a51adae3221fca68611e2dfb1da19", "author": {"user": {"login": "jglick", "name": "Jesse Glick"}}, "url": "https://github.com/jenkinsci/jenkins/commit/abf82513c16a51adae3221fca68611e2dfb1da19", "committedDate": "2020-07-28T17:07:41Z", "message": "NPE from SecurityContext"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7c5ce69fd314d3c89c20de5745153c73a57b909f", "author": {"user": {"login": "jglick", "name": "Jesse Glick"}}, "url": "https://github.com/jenkinsci/jenkins/commit/7c5ce69fd314d3c89c20de5745153c73a57b909f", "committedDate": "2020-07-28T17:16:45Z", "message": "Added back AbstractAuthenticationToken (supertype e.g. of GithubAuthenticationToken)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0ae2aaabeed1d78e713ee2a81db90a4787d53862", "author": {"user": {"login": "jglick", "name": "Jesse Glick"}}, "url": "https://github.com/jenkinsci/jenkins/commit/0ae2aaabeed1d78e713ee2a81db90a4787d53862", "committedDate": "2020-07-28T17:18:21Z", "message": "Binary compatibility for SecurityComponents"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bd53bea1c3692c1bad0033d274417f18d244e044", "author": {"user": {"login": "jglick", "name": "Jesse Glick"}}, "url": "https://github.com/jenkinsci/jenkins/commit/bd53bea1c3692c1bad0033d274417f18d244e044", "committedDate": "2020-07-28T17:18:25Z", "message": "Merge branch 'master' of github.com:jenkinsci/jenkins into spring-5303"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "034ecff3d513502f3640273a5474fed8d2520f64", "author": {"user": {"login": "jglick", "name": "Jesse Glick"}}, "url": "https://github.com/jenkinsci/jenkins/commit/034ecff3d513502f3640273a5474fed8d2520f64", "committedDate": "2020-07-28T17:20:16Z", "message": "Test compilation error"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b11f3e4bdb87d7643a4123a425e6929f0bf2f396", "author": {"user": {"login": "jglick", "name": "Jesse Glick"}}, "url": "https://github.com/jenkinsci/jenkins/commit/b11f3e4bdb87d7643a4123a425e6929f0bf2f396", "committedDate": "2020-07-28T21:49:57Z", "message": "Run japicmp"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU3MDYwMDU3", "url": "https://github.com/jenkinsci/jenkins/pull/4848#pullrequestreview-457060057", "createdAt": "2020-07-28T22:01:39Z", "commit": {"oid": "b11f3e4bdb87d7643a4123a425e6929f0bf2f396"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQyMjowMTozOVrOG4g7hA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQyMjowMTozOVrOG4g7hA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTkxMjk2NA==", "bodyText": "siom79/japicmp#266", "url": "https://github.com/jenkinsci/jenkins/pull/4848#discussion_r461912964", "createdAt": "2020-07-28T22:01:39Z", "author": {"login": "jglick"}, "path": "core/pom.xml", "diffHunk": "@@ -867,5 +847,41 @@ THE SOFTWARE.\n         <maven.test.redirectTestOutputToFile>true</maven.test.redirectTestOutputToFile>\n       </properties>\n     </profile>\n+    <profile>\n+      <id>japicmp</id>\n+      <build>\n+        <plugins>\n+          <plugin>\n+            <groupId>com.github.siom79.japicmp</groupId>\n+            <artifactId>japicmp-maven-plugin</artifactId>\n+            <version>0.14.4-20200728.214757-1</version> <!-- TODO https://github.com/siom79/japicmp/pull/266 -->", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b11f3e4bdb87d7643a4123a425e6929f0bf2f396"}, "originalPosition": 54}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f32ed4f22ee98ae63d7d8c3a606d9a7093d4d137", "author": {"user": {"login": "jglick", "name": "Jesse Glick"}}, "url": "https://github.com/jenkinsci/jenkins/commit/f32ed4f22ee98ae63d7d8c3a606d9a7093d4d137", "committedDate": "2020-07-28T22:14:42Z", "message": "Binary compatibility for Items.all and .allItems"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "232194d956c0d648d8a2c9f3127525ab0b157a3a", "author": {"user": {"login": "jglick", "name": "Jesse Glick"}}, "url": "https://github.com/jenkinsci/jenkins/commit/232194d956c0d648d8a2c9f3127525ab0b157a3a", "committedDate": "2020-07-28T22:17:09Z", "message": "Binary compatibility for User.get"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "530455c2d29ecd0f155e51b2ff8e3aed3de7e1e2", "author": {"user": {"login": "jglick", "name": "Jesse Glick"}}, "url": "https://github.com/jenkinsci/jenkins/commit/530455c2d29ecd0f155e51b2ff8e3aed3de7e1e2", "committedDate": "2020-07-28T22:23:09Z", "message": "Binary compatibility for ACL.isAnonymous"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "545e347bf34c72b01dd9cf58e76474f2a81ca1d6", "author": {"user": {"login": "jglick", "name": "Jesse Glick"}}, "url": "https://github.com/jenkinsci/jenkins/commit/545e347bf34c72b01dd9cf58e76474f2a81ca1d6", "committedDate": "2020-07-28T22:24:52Z", "message": "Binary compatibility for ACLContext.getPreviousContext"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e27ec10f258d6c855d6d3cb31827f025cbc59961", "author": {"user": {"login": "jglick", "name": "Jesse Glick"}}, "url": "https://github.com/jenkinsci/jenkins/commit/e27ec10f258d6c855d6d3cb31827f025cbc59961", "committedDate": "2020-07-28T22:37:22Z", "message": "Adding @Restricted(NoExternalUse.class) to a couple of classes which never seem to have been used from plugins"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0a326509c32a68ee3f4656b74136ae6b626e2045", "author": {"user": {"login": "jglick", "name": "Jesse Glick"}}, "url": "https://github.com/jenkinsci/jenkins/commit/0a326509c32a68ee3f4656b74136ae6b626e2045", "committedDate": "2020-07-28T22:39:38Z", "message": "Binary compatibility for SecurityRealm.getPostLogOutUrl"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c9662fb0d8e319e1efb9cc74c995d780384abdd5", "author": {"user": {"login": "jglick", "name": "Jesse Glick"}}, "url": "https://github.com/jenkinsci/jenkins/commit/c9662fb0d8e319e1efb9cc74c995d780384abdd5", "committedDate": "2020-07-28T22:44:23Z", "message": "ImpersonatingUserDetailsService does not seem to have ever been used from plugins"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "19cb4adfa0f42b1f92c2a340230a3496eb41cffb", "author": {"user": {"login": "jglick", "name": "Jesse Glick"}}, "url": "https://github.com/jenkinsci/jenkins/commit/19cb4adfa0f42b1f92c2a340230a3496eb41cffb", "committedDate": "2020-07-28T22:46:55Z", "message": "Binary compatibility for ImpersonatingExecutorService and ImpersonatingScheduledExecutorService constructors"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f49afdf1d7a6a2e270dc13d033283963b6bc8378", "author": {"user": {"login": "jglick", "name": "Jesse Glick"}}, "url": "https://github.com/jenkinsci/jenkins/commit/f49afdf1d7a6a2e270dc13d033283963b6bc8378", "committedDate": "2020-07-28T22:52:32Z", "message": "Binary compatibility for LastGrantedAuthoritiesProperty.getAuthorities"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU3MDYzMTg5", "url": "https://github.com/jenkinsci/jenkins/pull/4848#pullrequestreview-457063189", "createdAt": "2020-07-28T22:08:00Z", "commit": {"oid": "b11f3e4bdb87d7643a4123a425e6929f0bf2f396"}, "state": "COMMENTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQyMjowODowMFrOG4hOaA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQyMjozNDoxOFrOG4iDxA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTkxNzgwMA==", "bodyText": "Deliberately deleted without replacement.", "url": "https://github.com/jenkinsci/jenkins/pull/4848#discussion_r461917800", "createdAt": "2020-07-28T22:08:00Z", "author": {"login": "jglick"}, "path": "core/src/main/java/hudson/cli/CLICommand.java", "diffHunk": "@@ -316,28 +316,6 @@ public Channel checkChannel() throws AbortException {\n         throw new AbortException(\"This command is requesting the -remoting mode which is no longer supported. See https://jenkins.io/redirect/cli-command-requires-channel\");\n     }\n \n-    /**\n-     * Determines if the user authentication is attempted through CLI before running this command.\n-     *\n-     * <p>\n-     * If your command doesn't require any authentication whatsoever, and if you don't even want to let the user\n-     * authenticate, then override this method to always return false &mdash; doing so will result in all the commands\n-     * running as anonymous user credential.\n-     *\n-     * <p>\n-     * Note that even if this method returns true, the user can still skip aut \n-     *\n-     * @param auth\n-     *      Always non-null.\n-     *      If the underlying transport had already performed authentication, this object is something other than\n-     *      {@link jenkins.model.Jenkins#ANONYMOUS}.\n-     * @deprecated Unused.\n-     */\n-    @Deprecated\n-    protected boolean shouldPerformAuthentication(Authentication auth) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b11f3e4bdb87d7643a4123a425e6929f0bf2f396"}, "originalPosition": 119}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTkyNTcxNg==", "bodyText": "Because implements UserDetailsService was removed from the signature.", "url": "https://github.com/jenkinsci/jenkins/pull/4848#discussion_r461925716", "createdAt": "2020-07-28T22:19:08Z", "author": {"login": "jglick"}, "path": "core/src/main/java/hudson/security/AbstractPasswordBasedSecurityRealm.java", "diffHunk": "@@ -28,18 +27,21 @@\n  * @author Kohsuke Kawaguchi\n  * @since 1.317\n  */\n-public abstract class AbstractPasswordBasedSecurityRealm extends SecurityRealm implements UserDetailsService {\n+public abstract class AbstractPasswordBasedSecurityRealm extends SecurityRealm {\n     @Override\n     public SecurityComponents createSecurityComponents() {\n-        Binding binding = new Binding();\n-        binding.setVariable(\"authenticator\", new Authenticator());\n-\n-        BeanBuilder builder = new BeanBuilder();\n-        builder.parse(Jenkins.get().servletContext.getResourceAsStream(\"/WEB-INF/security/AbstractPasswordBasedSecurityRealm.groovy\"),binding);\n-        WebApplicationContext context = builder.createApplicationContext();\n+        // this does all the hard work.\n+        Authenticator authenticator = new Authenticator();\n+        // these providers apply everywhere\n+        RememberMeAuthenticationProvider rmap = new RememberMeAuthenticationProvider(Jenkins.get().getSecretKey());\n+        // this doesn't mean we allow anonymous access.\n+        // we just authenticate2 anonymous users as such,\n+        // so that later authorization can reject them if so configured\n+        AnonymousAuthenticationProvider aap = new AnonymousAuthenticationProvider(\"anonymous\");\n+        AuthenticationManager authenticationManager = new ProviderManager(authenticator, rmap, aap);\n         return new SecurityComponents(\n-                findBean(AuthenticationManager.class, context),\n-                new ImpersonatingUserDetailsService(this));\n+                authenticationManager,\n+                new ImpersonatingUserDetailsService(this::loadUserByUsername2));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b11f3e4bdb87d7643a4123a425e6929f0bf2f396"}, "originalPosition": 64}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTkyODcxMA==", "bodyText": "CliAuthenticator is deleted without replacement. Git\u2019s rename detection is being too aggressive here.", "url": "https://github.com/jenkinsci/jenkins/pull/4848#discussion_r461928710", "createdAt": "2020-07-28T22:26:53Z", "author": {"login": "jglick"}, "path": "core/src/main/java/org/acegisecurity/AccessDeniedException.java", "diffHunk": "@@ -21,17 +21,21 @@\n  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n  * THE SOFTWARE.\n  */\n-package hudson.security;\n \n-import org.acegisecurity.Authentication;\n-import org.acegisecurity.AuthenticationException;\n-\n-import java.io.IOException;\n+package org.acegisecurity;\n \n /**\n- * @deprecated No longer used.\n+ * @deprecated use {@link org.springframework.security.access.AccessDeniedException}\n  */\n @Deprecated\n-public abstract class CliAuthenticator {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b11f3e4bdb87d7643a4123a425e6929f0bf2f396"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTkyOTQ4Nw==", "bodyText": "Long obsolete I think.", "url": "https://github.com/jenkinsci/jenkins/pull/4848#discussion_r461929487", "createdAt": "2020-07-28T22:29:05Z", "author": {"login": "jglick"}, "path": "core/src/main/java/hudson/security/DeferredCreationLdapAuthoritiesPopulator.java", "diffHunk": "@@ -1,155 +0,0 @@\n-/*\n- * The MIT License\n- * \n- * Copyright (c) 2004-2009, Sun Microsystems, Inc., Kohsuke Kawaguchi\n- * \n- * Permission is hereby granted, free of charge, to any person obtaining a copy\n- * of this software and associated documentation files (the \"Software\"), to deal\n- * in the Software without restriction, including without limitation the rights\n- * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n- * copies of the Software, and to permit persons to whom the Software is\n- * furnished to do so, subject to the following conditions:\n- * \n- * The above copyright notice and this permission notice shall be included in\n- * all copies or substantial portions of the Software.\n- * \n- * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n- * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n- * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n- * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n- * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n- * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n- * THE SOFTWARE.\n- */\n-package hudson.security;\n-\n-import org.acegisecurity.GrantedAuthority;\n-import org.acegisecurity.ldap.InitialDirContextFactory;\n-import org.acegisecurity.ldap.LdapDataAccessException;\n-import org.acegisecurity.providers.ldap.LdapAuthoritiesPopulator;\n-import org.acegisecurity.providers.ldap.populator.DefaultLdapAuthoritiesPopulator;\n-import org.acegisecurity.userdetails.ldap.LdapUserDetails;\n-import hudson.security.SecurityRealm.SecurityComponents;\n-\n-/**\n- * Implementation of {@link LdapAuthoritiesPopulator} that defers creation of a\n- * {@link DefaultLdapAuthoritiesPopulator} until one is needed. This is done to\n- * ensure that the groupSearchBase property can be set.\n- * \n- * @author justinedelson\n- * @deprecated as of 1.280\n- *      {@link SecurityComponents} are now created after {@link SecurityRealm} is created, so\n- *      the initialization order issue that this code was trying to address no longer exists.\n- */\n-@Deprecated\n-public class DeferredCreationLdapAuthoritiesPopulator implements LdapAuthoritiesPopulator {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b11f3e4bdb87d7643a4123a425e6929f0bf2f396"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTkzMTE3Mg==", "bodyText": "Deleted without replacement.", "url": "https://github.com/jenkinsci/jenkins/pull/4848#discussion_r461931172", "createdAt": "2020-07-28T22:33:35Z", "author": {"login": "jglick"}, "path": "core/src/main/java/hudson/security/InvalidatableUserDetails.java", "diffHunk": "@@ -1,60 +0,0 @@\n-/*\n- * The MIT License\n- * \n- * Copyright (c) 2004-2009, Sun Microsystems, Inc., Kohsuke Kawaguchi\n- * \n- * Permission is hereby granted, free of charge, to any person obtaining a copy\n- * of this software and associated documentation files (the \"Software\"), to deal\n- * in the Software without restriction, including without limitation the rights\n- * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n- * copies of the Software, and to permit persons to whom the Software is\n- * furnished to do so, subject to the following conditions:\n- * \n- * The above copyright notice and this permission notice shall be included in\n- * all copies or substantial portions of the Software.\n- * \n- * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n- * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n- * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n- * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n- * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n- * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n- * THE SOFTWARE.\n- */\n-package hudson.security;\n-\n-import org.acegisecurity.Authentication;\n-import org.acegisecurity.context.SecurityContext;\n-import org.acegisecurity.userdetails.UserDetails;\n-\n-import javax.servlet.http.HttpSession;\n-import jenkins.security.NonSerializableSecurityContext;\n-\n-/**\n- * {@link UserDetails} that can mark {@link Authentication} invalid.\n- *\n- * <p>\n- * Tomcat persists sessions by using Java serialization (and\n- * that includes the security token created by Acegi, which includes this object)\n- * and when that happens, the next time the server comes back\n- * it will try to deserialize {@link SecurityContext} that Acegi\n- * puts into {@link HttpSession} (which transitively includes {@link UserDetails}\n- * that can be implemented by Hudson.\n- *\n- * <p>\n- * Such {@link UserDetails} implementation can override the {@link #isInvalid()}\n- * method and return false, so that such {@link SecurityContext} will be\n- * dropped before the rest of Acegi sees it.\n- *\n- * <p>\n- * See JENKINS-1482\n- * \n- * @author Kohsuke Kawaguchi\n- * @deprecated\n- *      Starting 1.285, Hudson stops persisting {@link Authentication} altogether\n- *      (see {@link NonSerializableSecurityContext}), so there's no need to use this mechanism.\n- */\n-@Deprecated\n-public interface InvalidatableUserDetails extends UserDetails {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b11f3e4bdb87d7643a4123a425e6929f0bf2f396"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTkzMTQ2MA==", "bodyText": "NotSerilizableSecurityContext long obsolete and deleted. Beware rename detection here.", "url": "https://github.com/jenkinsci/jenkins/pull/4848#discussion_r461931460", "createdAt": "2020-07-28T22:34:18Z", "author": {"login": "jglick"}, "path": "core/src/main/java/org/acegisecurity/AcegiSecurityException.java", "diffHunk": "@@ -22,21 +22,22 @@\n  * THE SOFTWARE.\n  */\n \n-package hudson.security;\n+package org.acegisecurity;\n \n-import jenkins.security.NonSerializableSecurityContext;\n-import org.acegisecurity.Authentication;\n+import org.springframework.core.NestedRuntimeException;\n \n /**\n- * @deprecated use {@link NonSerializableSecurityContext} instead\n+ * @deprecated use {@link RuntimeException}\n  */\n @Deprecated\n-public class NotSerilizableSecurityContext extends NonSerializableSecurityContext {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b11f3e4bdb87d7643a4123a425e6929f0bf2f396"}, "originalPosition": 25}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "09feb27b4ee0ce2a91793512752118f21936603a", "author": {"user": {"login": "jglick", "name": "Jesse Glick"}}, "url": "https://github.com/jenkinsci/jenkins/commit/09feb27b4ee0ce2a91793512752118f21936603a", "committedDate": "2020-07-29T00:49:18Z", "message": "Wrong access modifier for AbstractPasswordBasedSecurityRealm.authenticate"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b7f1accceaece0b2247e358f59022f6bfe82c745", "author": {"user": {"login": "jglick", "name": "Jesse Glick"}}, "url": "https://github.com/jenkinsci/jenkins/commit/b7f1accceaece0b2247e358f59022f6bfe82c745", "committedDate": "2020-07-29T00:51:46Z", "message": "SecurityRealm.findBean was only used in conjunction with BeanBuilder"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "340e0f9c3afa82cef2888616dcdc4c2a1c68db1f", "author": {"user": {"login": "jglick", "name": "Jesse Glick"}}, "url": "https://github.com/jenkinsci/jenkins/commit/340e0f9c3afa82cef2888616dcdc4c2a1c68db1f", "committedDate": "2020-07-29T00:53:20Z", "message": "Javadoc error"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2149, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}