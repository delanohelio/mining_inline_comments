{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcwMjA4MDQ2", "number": 4469, "title": "Add preauth filtering overload of getAllItems(), getItems() and allItems()", "bodyText": "Signed-off-by: Raihaan Shouhell raihaan.shouhell@autodesk.com\nAdding a new API that filters items based on a predicate so we don't have to check permissions unnecessarily.\nI'd love to introduce a getItems() with a predicate to have allItems also get this performance benefit but I don't see an elegant way of introducing that method to the existing ItemGroup interface\nOn method is obviously just doing getItems then filtering that as a default which has no speed-up. Which is ok but doesn't really encourage devs to implement the interface.\nEDIT: I tried implementing it for allItems as well\n\nProposed changelog entries\n\nEntry 1: Developer, Introduce filtering overload to getAllItems(), allItems() and getItems()\n...\n\n\nProposed upgrade guidelines\nN/A\nSubmitter checklist\n\n JIRA issue is well described\n Changelog entries and upgrade guidelines are appropriate for the audience affected by the change (users or developer, depending on the change). Examples\n\nFill-in the Proposed changelog entries section only if there are breaking changes or other changes which may require extra steps from users during the upgrade\n\n\n Appropriate autotests or explanation to why this change has no tests\n For dependency updates: links to external changelogs and, if possible, full diffs\n\n\nDesired reviewers\n@mention\n\nMaintainer checklist\nBefore the changes are marked as ready-for-merge:\n\n There are at least 2 approvals for the pull request and no outstanding requests for change\n Conversations in the pull request are over OR it is explicit that a reviewer does not block the change\n Changelog entries in the PR title and/or Proposed changelog entries are correct\n Proper changelog labels are set so that the changelog can be generated automatically\n If the change needs additional upgrade steps from users, upgrade-guide-needed label is set and there is a Proposed upgrade guidelines section in the PR title. (example)\n If it would make sense to backport the change to LTS, a JIRA issue should exist and be labeled as lts-candidate", "createdAt": "2020-02-03T09:19:59Z", "url": "https://github.com/jenkinsci/jenkins/pull/4469", "merged": true, "mergeCommit": {"oid": "9c4dac702e1feac4ebb983f98d5d83bf3308da79"}, "closed": true, "closedAt": "2020-02-13T08:40:36Z", "author": {"login": "res0nance"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcApVqVgH2gAyMzcwMjA4MDQ2OjA1MjI3YmNmNGIzNDdiMGU4ODlmZjI2N2I2YWY5YWIxNGU3ZGM3NzM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcDk9RpAFqTM1NzM5MTYyNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "05227bcf4b347b0e889ff267b6af9ab14e7dc773", "author": {"user": {"login": "res0nance", "name": "Raihaan Shouhell"}}, "url": "https://github.com/jenkinsci/jenkins/commit/05227bcf4b347b0e889ff267b6af9ab14e7dc773", "committedDate": "2020-02-03T09:15:51Z", "message": "Add preauth filtering overload of getAllItems()\n\nSigned-off-by: Raihaan Shouhell <raihaan.shouhell@autodesk.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8c560b87bbfad86c81e86f25742402c557e3f68b", "author": {"user": {"login": "res0nance", "name": "Raihaan Shouhell"}}, "url": "https://github.com/jenkinsci/jenkins/commit/8c560b87bbfad86c81e86f25742402c557e3f68b", "committedDate": "2020-02-04T09:39:24Z", "message": "Add allItems filtering"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU0MzExNDY3", "url": "https://github.com/jenkinsci/jenkins/pull/4469#pullrequestreview-354311467", "createdAt": "2020-02-06T09:40:02Z", "commit": {"oid": "8c560b87bbfad86c81e86f25742402c557e3f68b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU0MzA5OTg4", "url": "https://github.com/jenkinsci/jenkins/pull/4469#pullrequestreview-354309988", "createdAt": "2020-02-06T09:37:45Z", "commit": {"oid": "8c560b87bbfad86c81e86f25742402c557e3f68b"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQwOTozNzo0NVrOFmUm6A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQwOTo0MDoyNVrOFmUsMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTcyNzg0OA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    return allItems(authentication, root, type, t->true);\n          \n          \n            \n                    return allItems(authentication, root, type, t -> true);", "url": "https://github.com/jenkinsci/jenkins/pull/4469#discussion_r375727848", "createdAt": "2020-02-06T09:37:45Z", "author": {"login": "varyvol"}, "path": "core/src/main/java/hudson/model/Items.java", "diffHunk": "@@ -449,7 +486,26 @@ public static XmlFile getConfigFile(Item item) {\n      * @since 2.37\n      */\n     public static <T extends Item> Iterable<T> allItems(Authentication authentication, ItemGroup root, Class<T> type) {\n-        return new AllItemsIterable<>(root, authentication, type);\n+        return allItems(authentication, root, type, t->true);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c560b87bbfad86c81e86f25742402c557e3f68b"}, "originalPosition": 87}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTcyODQ2MA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    return getItems(t->true);\n          \n          \n            \n                    return getItems(t -> true);", "url": "https://github.com/jenkinsci/jenkins/pull/4469#discussion_r375728460", "createdAt": "2020-02-06T09:38:54Z", "author": {"login": "varyvol"}, "path": "core/src/main/java/jenkins/model/Jenkins.java", "diffHunk": "@@ -1775,12 +1776,21 @@ public String getFullDisplayName() {\n      */\n     @Exported(name=\"jobs\")\n     public List<TopLevelItem> getItems() {\n+        return getItems(t->true);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c560b87bbfad86c81e86f25742402c557e3f68b"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTcyODU4NQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * Gets just the immediate children of {@link Jenkins} based on supplied predicate.\n          \n          \n            \n                 * Gets just the immediate child of {@link Jenkins} based on supplied predicate.", "url": "https://github.com/jenkinsci/jenkins/pull/4469#discussion_r375728585", "createdAt": "2020-02-06T09:39:09Z", "author": {"login": "varyvol"}, "path": "core/src/main/java/jenkins/model/Jenkins.java", "diffHunk": "@@ -1775,12 +1776,21 @@ public String getFullDisplayName() {\n      */\n     @Exported(name=\"jobs\")\n     public List<TopLevelItem> getItems() {\n+        return getItems(t->true);\n+    }\n+\n+    /**\n+     * Gets just the immediate children of {@link Jenkins} based on supplied predicate.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c560b87bbfad86c81e86f25742402c557e3f68b"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTcyOTIwMw==", "bodyText": "Not important at all, but maybe using stream + predicate?", "url": "https://github.com/jenkinsci/jenkins/pull/4469#discussion_r375729203", "createdAt": "2020-02-06T09:40:25Z", "author": {"login": "varyvol"}, "path": "core/src/main/java/hudson/model/ItemGroup.java", "diffHunk": "@@ -55,6 +57,21 @@\n      */\n     Collection<T> getItems();\n \n+    /**\n+     * Gets all the items in this collection in a read-only view\n+     * that matches supplied Predicate\n+     * @since TODO\n+     */\n+     default Collection<T> getItems(Predicate<T> pred) {\n+         List<T> filteredItems = new ArrayList<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c560b87bbfad86c81e86f25742402c557e3f68b"}, "originalPosition": 22}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "215e3c6cd2a51629c4cca38e0350326d3a2f306b", "author": {"user": {"login": "res0nance", "name": "Raihaan Shouhell"}}, "url": "https://github.com/jenkinsci/jenkins/commit/215e3c6cd2a51629c4cca38e0350326d3a2f306b", "committedDate": "2020-02-06T10:24:57Z", "message": "Apply suggestions from code review\n\nCo-Authored-By: Evaristo Guti\u00e9rrez <egutierrez@cloudbees.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c7592c2ae1ec661a965a0341b6551283391c93f2", "author": {"user": {"login": "res0nance", "name": "Raihaan Shouhell"}}, "url": "https://github.com/jenkinsci/jenkins/commit/c7592c2ae1ec661a965a0341b6551283391c93f2", "committedDate": "2020-02-06T10:31:04Z", "message": "Use streams"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU0NDAyNDg0", "url": "https://github.com/jenkinsci/jenkins/pull/4469#pullrequestreview-354402484", "createdAt": "2020-02-06T12:10:27Z", "commit": {"oid": "c7592c2ae1ec661a965a0341b6551283391c93f2"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU1MTY2NDQ5", "url": "https://github.com/jenkinsci/jenkins/pull/4469#pullrequestreview-355166449", "createdAt": "2020-02-07T13:48:57Z", "commit": {"oid": "c7592c2ae1ec661a965a0341b6551283391c93f2"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QxMzo0ODo1N1rOFm9iPg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QxMzo0ODo1N1rOFm9iPg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjM5ODM5OA==", "bodyText": "Would it make sense to create a default Stream<T> getItemsStream() method so that ItemGroup implementations can supply more efficient stream implementations which would not require creating a full list first. Will be important if we ever do job lazy loading and so on", "url": "https://github.com/jenkinsci/jenkins/pull/4469#discussion_r376398398", "createdAt": "2020-02-07T13:48:57Z", "author": {"login": "oleg-nenashev"}, "path": "core/src/main/java/hudson/model/ItemGroup.java", "diffHunk": "@@ -55,6 +58,17 @@\n      */\n     Collection<T> getItems();\n \n+    /**\n+     * Gets all the items in this collection in a read-only view\n+     * that matches supplied Predicate\n+     * @since TODO\n+     */\n+     default Collection<T> getItems(Predicate<T> pred) {\n+         return getItems().stream()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c7592c2ae1ec661a965a0341b6551283391c93f2"}, "originalPosition": 23}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6b8071e0cc101d899f21bac9f1d70df042cd9594", "author": {"user": {"login": "res0nance", "name": "Raihaan Shouhell"}}, "url": "https://github.com/jenkinsci/jenkins/commit/6b8071e0cc101d899f21bac9f1d70df042cd9594", "committedDate": "2020-02-11T04:22:54Z", "message": "Add stream functions\n\nSigned-off-by: Raihaan Shouhell <raihaan.shouhell@autodesk.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5f6c228a197def1b1e66b34be1b59ba49ef7b12f", "author": {"user": {"login": "res0nance", "name": "Raihaan Shouhell"}}, "url": "https://github.com/jenkinsci/jenkins/commit/5f6c228a197def1b1e66b34be1b59ba49ef7b12f", "committedDate": "2020-02-11T04:24:07Z", "message": "Missed simplification"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU2NDQ4NDgx", "url": "https://github.com/jenkinsci/jenkins/pull/4469#pullrequestreview-356448481", "createdAt": "2020-02-11T07:16:40Z", "commit": {"oid": "5f6c228a197def1b1e66b34be1b59ba49ef7b12f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU2NDQ5NTMz", "url": "https://github.com/jenkinsci/jenkins/pull/4469#pullrequestreview-356449533", "createdAt": "2020-02-11T07:20:24Z", "commit": {"oid": "5f6c228a197def1b1e66b34be1b59ba49ef7b12f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU3MzkxNjI2", "url": "https://github.com/jenkinsci/jenkins/pull/4469#pullrequestreview-357391626", "createdAt": "2020-02-12T11:51:22Z", "commit": {"oid": "5f6c228a197def1b1e66b34be1b59ba49ef7b12f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1489, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}