{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc5MTY4MTQ1", "number": 4522, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQwODo1MDo1NVrODi_KyQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQwODo1MTo1MlrODi_L4g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4MDEzMTI5OnYy", "diffSide": "RIGHT", "path": "war/src/main/webapp/scripts/hudson-behavior.js", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQwODo1MDo1NVrOFuioTQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQwOToyODozMlrOFukAuA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDM0NjE4OQ==", "bodyText": "In general, I'm very wary of resize listeners, as they can have devastating effects on performance. Have you explored other options?\nIf a resize listener is the way to go, I'd say we need to throttle it. One option could be using window.requestAnimationFrame. That would sort of ensure we can keep 60fps. It's present on all  the supported browsers, and we could just not set this listener on <IE9, as it's not essential.\nWe can also set the listeners just on desktop screens. We can use window.matchMedia for that (https://developer.mozilla.org/en-US/docs/Web/API/MediaQueryList/addListener).", "url": "https://github.com/jenkinsci/jenkins/pull/4522#discussion_r384346189", "createdAt": "2020-02-26T08:50:55Z", "author": {"login": "fqueiruga"}, "path": "war/src/main/webapp/scripts/hudson-behavior.js", "diffHunk": "@@ -2408,25 +2407,24 @@ function createSearchBox(searchURL) {\n         }\n \n         copyFontStyle(box,sizer);\n-        copyFontStyle(box,minW);\n     });\n \n     // update positions and sizes of the components relevant to search\n     function updatePos() {\n-        function max(a,b) { if(a>b) return a; else return b; }\n-\n         sizer.innerHTML = box.value.escapeHTML();\n-        var w = max(sizer.offsetWidth,minW.offsetWidth);\n+        var w = sizer.offsetWidth;\n         box.style.width =\n-        comp.style.width = \n-        comp.firstChild.style.width = (w+60)+\"px\";\n+        comp.style.width =\n+        comp.firstChild.style.minWidth = (w+60)+\"px\";\n \n         var pos = YAHOO.util.Dom.getXY(box);\n         pos[1] += YAHOO.util.Dom.get(box).offsetHeight + 2;\n         YAHOO.util.Dom.setXY(comp, pos);\n     }\n \n     updatePos();\n+    // on small screens offsetWith is 0, update when screen gets bigger\n+    window.addEventListener(\"resize\", updatePos);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "294d011dec0763ef60c26e86cb8aca5a294066bc"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDM2ODgyNA==", "bodyText": "I just tried this and I think we can skip the listener altogether if we remove the first invocation of updatePos(). Wonder if that can have any consequence. Having min-width already seems to do the trick.", "url": "https://github.com/jenkinsci/jenkins/pull/4522#discussion_r384368824", "createdAt": "2020-02-26T09:28:32Z", "author": {"login": "fqueiruga"}, "path": "war/src/main/webapp/scripts/hudson-behavior.js", "diffHunk": "@@ -2408,25 +2407,24 @@ function createSearchBox(searchURL) {\n         }\n \n         copyFontStyle(box,sizer);\n-        copyFontStyle(box,minW);\n     });\n \n     // update positions and sizes of the components relevant to search\n     function updatePos() {\n-        function max(a,b) { if(a>b) return a; else return b; }\n-\n         sizer.innerHTML = box.value.escapeHTML();\n-        var w = max(sizer.offsetWidth,minW.offsetWidth);\n+        var w = sizer.offsetWidth;\n         box.style.width =\n-        comp.style.width = \n-        comp.firstChild.style.width = (w+60)+\"px\";\n+        comp.style.width =\n+        comp.firstChild.style.minWidth = (w+60)+\"px\";\n \n         var pos = YAHOO.util.Dom.getXY(box);\n         pos[1] += YAHOO.util.Dom.get(box).offsetHeight + 2;\n         YAHOO.util.Dom.setXY(comp, pos);\n     }\n \n     updatePos();\n+    // on small screens offsetWith is 0, update when screen gets bigger\n+    window.addEventListener(\"resize\", updatePos);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDM0NjE4OQ=="}, "originalCommit": {"oid": "294d011dec0763ef60c26e86cb8aca5a294066bc"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4MDEzNDEwOnYy", "diffSide": "RIGHT", "path": "war/src/main/webapp/scripts/hudson-behavior.js", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQwODo1MTo1MlrOFuiqKg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxNjoyODoyMVrOFvYEew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDM0NjY2Ng==", "bodyText": "I'd suggest we only run the contents of the updatePos function only when the window width changes. We should avoid running this function on vertical resizes.", "url": "https://github.com/jenkinsci/jenkins/pull/4522#discussion_r384346666", "createdAt": "2020-02-26T08:51:52Z", "author": {"login": "fqueiruga"}, "path": "war/src/main/webapp/scripts/hudson-behavior.js", "diffHunk": "@@ -2408,25 +2407,24 @@ function createSearchBox(searchURL) {\n         }\n \n         copyFontStyle(box,sizer);\n-        copyFontStyle(box,minW);\n     });\n \n     // update positions and sizes of the components relevant to search\n     function updatePos() {\n-        function max(a,b) { if(a>b) return a; else return b; }\n-\n         sizer.innerHTML = box.value.escapeHTML();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "294d011dec0763ef60c26e86cb8aca5a294066bc"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTIyMTc1NQ==", "bodyText": "Disregard the above comment, that would only be the case if it runs on the window resize event, not on keyup", "url": "https://github.com/jenkinsci/jenkins/pull/4522#discussion_r385221755", "createdAt": "2020-02-27T16:28:21Z", "author": {"login": "fqueiruga"}, "path": "war/src/main/webapp/scripts/hudson-behavior.js", "diffHunk": "@@ -2408,25 +2407,24 @@ function createSearchBox(searchURL) {\n         }\n \n         copyFontStyle(box,sizer);\n-        copyFontStyle(box,minW);\n     });\n \n     // update positions and sizes of the components relevant to search\n     function updatePos() {\n-        function max(a,b) { if(a>b) return a; else return b; }\n-\n         sizer.innerHTML = box.value.escapeHTML();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDM0NjY2Ng=="}, "originalCommit": {"oid": "294d011dec0763ef60c26e86cb8aca5a294066bc"}, "originalPosition": 19}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 831, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}