{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc3MjAwNTUw", "number": 4509, "title": "Always set a crumb issuer", "bodyText": "Twitter driven development: https://twitter.com/danielbeck/status/1214346538618621964\nMake sure that the crumb issuer is always set.\nNew UI\nThe default\n\n\n\nA custom crumb issuer\n\n\n\nWith escape hatch set\n\n\n\nA note on not removing the UI\nConfiguration UI for some options in Jenkins are not shown when there's only one option. I decided against this approach here for two reasons:\n\nEven with the default crumb issuer, there's still the proxy compatibility setting.\nThe configuration disappearing altogether might worry experienced and security-conscious Jenkins administrators.\n\nOn proxy compatibility\nI decided to use the same approach to proxy compatibility as is currently used in the setup wizard, i.e. require a system property to enable greater compatibility out of the box.\nIn some cases (CSRF protection disabled, load balancer or otherwise unusually configured reverse proxy in front of Jenkins), this may result in a problem requiring a minor system property dance, bypassing the proxy for a moment to reconfigure, or patching config.xml to restore UI functionality in Jenkins.\nI think these cases are rare enough so this shouldn't be a huge problem; an argument can be made to slightly lower protection for greater compatibility: Since https://jenkins.io/security/advisory/2019-07-17/#SECURITY-626, we make the the session ID part of the crumb, so requiring an IP address match on top of that isn't that important.\nEscape hatch\nWhile there's an escape hatch in hudson.security.csrf.GlobalCrumbIssuerConfiguration.DISABLE_CSRF_PROTECTION, I wouldn't advertise it much.\nHow it works:\n\nIf the system property is set on Jenkins startup, Jenkins will set or unset the crumb issuer according to the value set.\nWhile Jenkins is running, the config UI can be locked/unlocked by setting the field of the same name as the system property to true/false. This will not immediately change the configured crumb issuer; a global security config form submission is needed for that.\n\nProposed changelog entries\n\nRemove the ability to have CSRF protection disabled. Instances upgrading from older versions of Jenkins will have CSRF protection enabled and the default issuer set if they currently have it disabled.\n\nProposed upgrade guidelines\nJenkins will automatically enable CSRF protection with the default crumb issuer if it was disabled before. The ability to not have CSRF protection enabled has been deprecated and removed from the UI. Set the system property hudson.security.csrf.GlobalCrumbIssuerConfiguration.DISABLE_CSRF_PROTECTION to true on startup to disable CSRF protection as well as the configuration UI for it.\nSubmitter checklist\n\n JIRA issue is well described\n Changelog entries and upgrade guidelines are appropriate for the audience affected by the change (users or developer, depending on the change). Examples\n\nFill-in the Proposed changelog entries section only if there are breaking changes or other changes which may require extra steps from users during the upgrade\n\n\n Appropriate autotests or explanation to why this change has no tests\n[n/a] For dependency updates: links to external changelogs and, if possible, full diffs\n\n\nDesired reviewers\n@mention\n\nMaintainer checklist\nBefore the changes are marked as ready-for-merge:\n\n There are at least 2 approvals for the pull request and no outstanding requests for change\n Conversations in the pull request are over OR it is explicit that a reviewer does not block the change\n Changelog entries in the PR title and/or Proposed changelog entries are correct\n Proper changelog labels are set so that the changelog can be generated automatically\n If the change needs additional upgrade steps from users, upgrade-guide-needed label is set and there is a Proposed upgrade guidelines section in the PR title. (example)\n If it would make sense to backport the change to LTS, a JIRA issue should exist and be labeled as lts-candidate", "createdAt": "2020-02-19T14:26:27Z", "url": "https://github.com/jenkinsci/jenkins/pull/4509", "merged": true, "mergeCommit": {"oid": "824718bce08a09d66243fff2b61e777c14524152"}, "closed": true, "closedAt": "2020-02-21T10:31:29Z", "author": {"login": "daniel-beck"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcF3ACBgH2gAyMzc3MjAwNTUwOjEwN2M4NTc1YTQyNjc4NGJlMDdlOWYyOTE3MGRhNGMzODVhMTdlNTk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcGdM8ogFqTM2MjUzNTQ0Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "107c8575a426784be07e9f29170da4c385a17e59", "author": {"user": {"login": "daniel-beck", "name": "Daniel Beck"}}, "url": "https://github.com/jenkinsci/jenkins/commit/107c8575a426784be07e9f29170da4c385a17e59", "committedDate": "2020-02-19T14:00:31Z", "message": "Always set a crumb issuer"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYxMTYyNjc3", "url": "https://github.com/jenkinsci/jenkins/pull/4509#pullrequestreview-361162677", "createdAt": "2020-02-19T14:38:05Z", "commit": {"oid": "107c8575a426784be07e9f29170da4c385a17e59"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYxMTY3NDIz", "url": "https://github.com/jenkinsci/jenkins/pull/4509#pullrequestreview-361167423", "createdAt": "2020-02-19T14:43:24Z", "commit": {"oid": "107c8575a426784be07e9f29170da4c385a17e59"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxNDo0MzoyNFrOFrq2UA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxNDo0NTowMVrOFrq6jA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTMzNTEyMA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        // set the default crumb issuer\n          \n      \n    \n    \n  \n\nAdds nothing to what you would understand from reading the code.", "url": "https://github.com/jenkinsci/jenkins/pull/4509#discussion_r381335120", "createdAt": "2020-02-19T14:43:24Z", "author": {"login": "jglick"}, "path": "core/src/main/java/hudson/security/csrf/GlobalCrumbIssuerConfiguration.java", "diffHunk": "@@ -49,14 +52,31 @@\n     public boolean configure(StaplerRequest req, JSONObject json) throws FormException {\n         // for compatibility reasons, the actual value is stored in Jenkins\n         Jenkins j = Jenkins.get();\n-        if (json.has(\"csrf\")) {\n-            JSONObject csrf = json.getJSONObject(\"csrf\");\n-            j.setCrumbIssuer(CrumbIssuer.all().newInstanceFromRadioList(csrf, \"issuer\"));\n+\n+        if (json.has(\"crumbIssuer\")) {\n+            j.setCrumbIssuer(req.bindJSON(CrumbIssuer.class, json.getJSONObject(\"crumbIssuer\")));\n         } else {\n-            j.setCrumbIssuer(null);\n+            // set the default crumb issuer", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "107c8575a426784be07e9f29170da4c385a17e59"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTMzNjIwNA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    return new DefaultCrumbIssuer(SystemProperties.getBoolean(Jenkins.class.getName() + \".crumbIssuerProxyCompatibility\",false));\n          \n          \n            \n                    return new DefaultCrumbIssuer(SystemProperties.getBoolean(Jenkins.class.getName() + \".crumbIssuerProxyCompatibility\", false));", "url": "https://github.com/jenkinsci/jenkins/pull/4509#discussion_r381336204", "createdAt": "2020-02-19T14:45:01Z", "author": {"login": "jglick"}, "path": "core/src/main/java/hudson/security/csrf/GlobalCrumbIssuerConfiguration.java", "diffHunk": "@@ -49,14 +52,31 @@\n     public boolean configure(StaplerRequest req, JSONObject json) throws FormException {\n         // for compatibility reasons, the actual value is stored in Jenkins\n         Jenkins j = Jenkins.get();\n-        if (json.has(\"csrf\")) {\n-            JSONObject csrf = json.getJSONObject(\"csrf\");\n-            j.setCrumbIssuer(CrumbIssuer.all().newInstanceFromRadioList(csrf, \"issuer\"));\n+\n+        if (json.has(\"crumbIssuer\")) {\n+            j.setCrumbIssuer(req.bindJSON(CrumbIssuer.class, json.getJSONObject(\"crumbIssuer\")));\n         } else {\n-            j.setCrumbIssuer(null);\n+            // set the default crumb issuer\n+            j.setCrumbIssuer(createDefaultCrumbIssuer());\n         }\n \n         return true;\n     }\n+\n+    @Restricted(NoExternalUse.class) // Jelly\n+    public CrumbIssuer getCrumbIssuer() {\n+        return Jenkins.get().getCrumbIssuer();\n+    }\n+\n+    @Restricted(NoExternalUse.class)\n+    public static CrumbIssuer createDefaultCrumbIssuer() {\n+        if (DISABLE_CSRF_PROTECTION) {\n+            return null;\n+        }\n+        return new DefaultCrumbIssuer(SystemProperties.getBoolean(Jenkins.class.getName() + \".crumbIssuerProxyCompatibility\",false));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "107c8575a426784be07e9f29170da4c385a17e59"}, "originalPosition": 41}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3bc83e350390b438cb20d2a79d65fd4e956edb84", "author": {"user": {"login": "daniel-beck", "name": "Daniel Beck"}}, "url": "https://github.com/jenkinsci/jenkins/commit/3bc83e350390b438cb20d2a79d65fd4e956edb84", "committedDate": "2020-02-19T14:50:10Z", "message": "Apply suggestions from code review\n\nCo-Authored-By: Jesse Glick <jglick@cloudbees.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYxMzYzNjkw", "url": "https://github.com/jenkinsci/jenkins/pull/4509#pullrequestreview-361363690", "createdAt": "2020-02-19T19:13:49Z", "commit": {"oid": "3bc83e350390b438cb20d2a79d65fd4e956edb84"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYxNjAzNDY3", "url": "https://github.com/jenkinsci/jenkins/pull/4509#pullrequestreview-361603467", "createdAt": "2020-02-20T02:54:02Z", "commit": {"oid": "3bc83e350390b438cb20d2a79d65fd4e956edb84"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYxNzY0MTI1", "url": "https://github.com/jenkinsci/jenkins/pull/4509#pullrequestreview-361764125", "createdAt": "2020-02-20T09:51:59Z", "commit": {"oid": "3bc83e350390b438cb20d2a79d65fd4e956edb84"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYxNzY0Mjk1", "url": "https://github.com/jenkinsci/jenkins/pull/4509#pullrequestreview-361764295", "createdAt": "2020-02-20T09:52:14Z", "commit": {"oid": "3bc83e350390b438cb20d2a79d65fd4e956edb84"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYyNTM1NDQy", "url": "https://github.com/jenkinsci/jenkins/pull/4509#pullrequestreview-362535442", "createdAt": "2020-02-21T10:31:01Z", "commit": {"oid": "3bc83e350390b438cb20d2a79d65fd4e956edb84"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1585, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}