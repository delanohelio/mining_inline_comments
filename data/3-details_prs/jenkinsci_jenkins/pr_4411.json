{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzU4NjU1NzQ3", "number": 4411, "title": "[JENKINS-60577] - Prevent the RSS feed in Computer page from returning an error 404", "bodyText": "See JENKINS-60577.\nAccessing the RSS feed for latest builds from the Computer page returns a 404 error. Whilst in User and View class the method doRssLatest exists, in Computer this method is missing.\nI've also made a small code refactor to avoid further duplication.\nProposed changelog entries\n\nJENKINS-60577, Prevent the RSS feed in Computer page from returning an error 404\n\n\nSubmitter checklist\n\n JIRA issue is well described\n Changelog entry appropriate for the audience affected by the change (users or developer, depending on the change). Examples\n* Use the Internal:  prefix if the change has no user-visible impact (API, test frameworks, etc.)\n Appropriate autotests or explanation to why this change has no tests\n For dependency updates: links to external changelogs and, if possible, full diffs\n\n\nDesired reviewers\n@jenkinsci/core-pr-reviewers", "createdAt": "2020-01-02T13:17:20Z", "url": "https://github.com/jenkinsci/jenkins/pull/4411", "merged": true, "mergeCommit": {"oid": "3ade716f416ad13904b212c8164c9d4f3e2f2e7d"}, "closed": true, "closedAt": "2020-01-15T06:54:52Z", "author": {"login": "fcojfernandez"}, "timelineItems": {"totalCount": 16, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb2ZehKAH2gAyMzU4NjU1NzQ3OjIwMjFhYjU5YjIyOWRhYzAzNzJhZWJiYTU5OTZlOGMwOTA4ZDhiNDY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb6OQeQAFqTM0MjQyMzEzOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "2021ab59b229dac0372aebba5996e8c0908d8b46", "author": {"user": {"login": "fcojfernandez", "name": "Francisco Javier Fernandez"}}, "url": "https://github.com/jenkinsci/jenkins/commit/2021ab59b229dac0372aebba5996e8c0908d8b46", "committedDate": "2020-01-02T13:07:48Z", "message": "[JENKINS-60577] Rss Latest Builds for Computer"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzM3ODM5MDY3", "url": "https://github.com/jenkinsci/jenkins/pull/4411#pullrequestreview-337839067", "createdAt": "2020-01-02T20:17:51Z", "commit": {"oid": "2021ab59b229dac0372aebba5996e8c0908d8b46"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wMlQyMDoxNzo1MlrOFZ0QQA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wMlQyMDoxNzo1MlrOFZ0QQA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjYxNDg0OA==", "bodyText": "I feel like it would be a huge change, but would It make more sense to make RSS an interface, and have a function that returns getBuilds().failureOnly().newBuilds() ?", "url": "https://github.com/jenkinsci/jenkins/pull/4411#discussion_r362614848", "createdAt": "2020-01-02T20:17:52Z", "author": {"login": "halkeye"}, "path": "core/src/main/java/hudson/model/Job.java", "diffHunk": "@@ -1566,18 +1566,12 @@ protected void checkRename(String newName) throws Failure {\n \n     public void doRssAll(StaplerRequest req, StaplerResponse rsp)\n             throws IOException, ServletException {\n-        rss(req, rsp, \" all builds\", getBuilds());\n+        RSS.rss(req, rsp, getDisplayName() + \" all builds\", getUrl(), getBuilds().newBuilds());\n     }\n \n     public void doRssFailed(StaplerRequest req, StaplerResponse rsp)\n             throws IOException, ServletException {\n-        rss(req, rsp, \" failed builds\", getBuilds().failureOnly());\n-    }\n-\n-    private void rss(StaplerRequest req, StaplerResponse rsp, String suffix,\n-            RunList runs) throws IOException, ServletException {\n-        RSS.forwardToRss(getDisplayName() + suffix, getUrl(), runs.newBuilds(),\n-                Run.FEED_ADAPTER, req, rsp);\n+        RSS.rss(req, rsp, getDisplayName() + \" failed builds\", getUrl(), getBuilds().failureOnly().newBuilds());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2021ab59b229dac0372aebba5996e8c0908d8b46"}, "originalPosition": 17}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzM3ODM5NDk2", "url": "https://github.com/jenkinsci/jenkins/pull/4411#pullrequestreview-337839496", "createdAt": "2020-01-02T20:18:54Z", "commit": {"oid": "2021ab59b229dac0372aebba5996e8c0908d8b46"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzM3OTM1Mzgy", "url": "https://github.com/jenkinsci/jenkins/pull/4411#pullrequestreview-337935382", "createdAt": "2020-01-03T02:49:02Z", "commit": {"oid": "2021ab59b229dac0372aebba5996e8c0908d8b46"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzM4MzA0OTM2", "url": "https://github.com/jenkinsci/jenkins/pull/4411#pullrequestreview-338304936", "createdAt": "2020-01-03T22:41:44Z", "commit": {"oid": "2021ab59b229dac0372aebba5996e8c0908d8b46"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wM1QyMjo0MTo0NVrOFaK2bg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wM1QyMjo0MzozM1rOFaK3yQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mjk4NTA3MA==", "bodyText": "Nice 2 have. Add Javadoc to newly introduced methods", "url": "https://github.com/jenkinsci/jenkins/pull/4411#discussion_r362985070", "createdAt": "2020-01-03T22:41:45Z", "author": {"login": "oleg-nenashev"}, "path": "core/src/main/java/hudson/model/RSS.java", "diffHunk": "@@ -90,4 +91,14 @@ public static void doTrackback( Object it, StaplerRequest req, StaplerResponse r\n \n         req.getView(Jenkins.get(),\"/hudson/\"+flavor+\".jelly\").forward(req,rsp);\n     }\n+\n+    public static void rss(StaplerRequest req, StaplerResponse rsp, String title, String url, RunList runList) throws IOException, ServletException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2021ab59b229dac0372aebba5996e8c0908d8b46"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mjk4NTQxNw==", "bodyText": "Should the limitation to AbstractBuild be documented somewhere?", "url": "https://github.com/jenkinsci/jenkins/pull/4411#discussion_r362985417", "createdAt": "2020-01-03T22:43:33Z", "author": {"login": "oleg-nenashev"}, "path": "core/src/main/java/hudson/model/Computer.java", "diffHunk": "@@ -1369,15 +1369,22 @@ public String call() throws IOException {\n //\n //\n     public void doRssAll( StaplerRequest req, StaplerResponse rsp ) throws IOException, ServletException {\n-        rss(req, rsp, \" all builds\", getBuilds());\n+        RSS.rss(req, rsp, getDisplayName() + \" all builds\", getUrl(), getBuilds());\n     }\n \n     public void doRssFailed(StaplerRequest req, StaplerResponse rsp ) throws IOException, ServletException {\n-        rss(req, rsp, \" failed builds\", getBuilds().failureOnly());\n+        RSS.rss(req, rsp, getDisplayName() + \" failed builds\", getUrl(), getBuilds().failureOnly());\n     }\n-    private void rss(StaplerRequest req, StaplerResponse rsp, String suffix, RunList runs) throws IOException, ServletException {\n-        RSS.forwardToRss(getDisplayName() + suffix, getUrl(),\n-                runs.newBuilds(), Run.FEED_ADAPTER, req, rsp);\n+\n+    public void doRssLatest( StaplerRequest req, StaplerResponse rsp ) throws IOException, ServletException {\n+        final List<Run> lastBuilds = new ArrayList<>();\n+        for (AbstractProject<?, ?> p : Jenkins.get().allItems(AbstractProject.class)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2021ab59b229dac0372aebba5996e8c0908d8b46"}, "originalPosition": 18}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9b7dd89a7a8ea1d880733d58f99b744bcb8877dd", "author": {"user": {"login": "fcojfernandez", "name": "Francisco Javier Fernandez"}}, "url": "https://github.com/jenkinsci/jenkins/commit/9b7dd89a7a8ea1d880733d58f99b744bcb8877dd", "committedDate": "2020-01-07T08:32:31Z", "message": "[JENKINS-60577] Missing javadoc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5a2c62e5c72320ba8ba9fd9aff4f514e0e385249", "author": {"user": {"login": "fcojfernandez", "name": "Francisco Javier Fernandez"}}, "url": "https://github.com/jenkinsci/jenkins/commit/5a2c62e5c72320ba8ba9fd9aff4f514e0e385249", "committedDate": "2020-01-07T08:33:36Z", "message": "[JENKINS-60577] Add builds from the computer"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQwNDc1NjUx", "url": "https://github.com/jenkinsci/jenkins/pull/4411#pullrequestreview-340475651", "createdAt": "2020-01-09T12:08:22Z", "commit": {"oid": "5a2c62e5c72320ba8ba9fd9aff4f514e0e385249"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQxMjowODoyMlrOFbz0jQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQxMjowOTowM1rOFbz1jA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDcwNDkwOQ==", "bodyText": "This comment should say the last build for each project I think?", "url": "https://github.com/jenkinsci/jenkins/pull/4411#discussion_r364704909", "createdAt": "2020-01-09T12:08:22Z", "author": {"login": "varyvol"}, "path": "core/src/main/java/hudson/model/Computer.java", "diffHunk": "@@ -1369,15 +1369,29 @@ public String call() throws IOException {\n //\n //\n     public void doRssAll( StaplerRequest req, StaplerResponse rsp ) throws IOException, ServletException {\n-        rss(req, rsp, \" all builds\", getBuilds());\n+        RSS.rss(req, rsp, getDisplayName() + \" all builds\", getUrl(), getBuilds());\n     }\n \n     public void doRssFailed(StaplerRequest req, StaplerResponse rsp ) throws IOException, ServletException {\n-        rss(req, rsp, \" failed builds\", getBuilds().failureOnly());\n+        RSS.rss(req, rsp, getDisplayName() + \" failed builds\", getUrl(), getBuilds().failureOnly());\n     }\n-    private void rss(StaplerRequest req, StaplerResponse rsp, String suffix, RunList runs) throws IOException, ServletException {\n-        RSS.forwardToRss(getDisplayName() + suffix, getUrl(),\n-                runs.newBuilds(), Run.FEED_ADAPTER, req, rsp);\n+\n+    /**\n+     * Retrieve the RSS feed for the last build executed in this computer", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5a2c62e5c72320ba8ba9fd9aff4f514e0e385249"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDcwNTE2NA==", "bodyText": "Would performance be a concern here? Given we are asking for all the items and looping through them?", "url": "https://github.com/jenkinsci/jenkins/pull/4411#discussion_r364705164", "createdAt": "2020-01-09T12:09:03Z", "author": {"login": "varyvol"}, "path": "core/src/main/java/hudson/model/Computer.java", "diffHunk": "@@ -1369,15 +1369,22 @@ public String call() throws IOException {\n //\n //\n     public void doRssAll( StaplerRequest req, StaplerResponse rsp ) throws IOException, ServletException {\n-        rss(req, rsp, \" all builds\", getBuilds());\n+        RSS.rss(req, rsp, getDisplayName() + \" all builds\", getUrl(), getBuilds());\n     }\n \n     public void doRssFailed(StaplerRequest req, StaplerResponse rsp ) throws IOException, ServletException {\n-        rss(req, rsp, \" failed builds\", getBuilds().failureOnly());\n+        RSS.rss(req, rsp, getDisplayName() + \" failed builds\", getUrl(), getBuilds().failureOnly());\n     }\n-    private void rss(StaplerRequest req, StaplerResponse rsp, String suffix, RunList runs) throws IOException, ServletException {\n-        RSS.forwardToRss(getDisplayName() + suffix, getUrl(),\n-                runs.newBuilds(), Run.FEED_ADAPTER, req, rsp);\n+\n+    public void doRssLatest( StaplerRequest req, StaplerResponse rsp ) throws IOException, ServletException {\n+        final List<Run> lastBuilds = new ArrayList<>();\n+        for (AbstractProject<?, ?> p : Jenkins.get().allItems(AbstractProject.class)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mjk4NTQxNw=="}, "originalCommit": {"oid": "2021ab59b229dac0372aebba5996e8c0908d8b46"}, "originalPosition": 18}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8d40f459debe5de919573686d1a13d8581cd3418", "author": {"user": {"login": "fcojfernandez", "name": "Francisco Javier Fernandez"}}, "url": "https://github.com/jenkinsci/jenkins/commit/8d40f459debe5de919573686d1a13d8581cd3418", "committedDate": "2020-01-09T12:22:03Z", "message": "Update core/src/main/java/hudson/model/Computer.java"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQwNTc0NDg4", "url": "https://github.com/jenkinsci/jenkins/pull/4411#pullrequestreview-340574488", "createdAt": "2020-01-09T14:51:14Z", "commit": {"oid": "8d40f459debe5de919573686d1a13d8581cd3418"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQxMDI1ODY1", "url": "https://github.com/jenkinsci/jenkins/pull/4411#pullrequestreview-341025865", "createdAt": "2020-01-10T08:58:24Z", "commit": {"oid": "8d40f459debe5de919573686d1a13d8581cd3418"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQwODo1ODoyNVrOFcNvyg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQwOTowMDozN1rOFcNy8g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTEyOTY3NA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * Retrieve the RSS feed for the last build for each project executed in this computer\n          \n          \n            \n                 * Retrieve the RSS feed for the last build for each project executed in this computer\n          \n          \n            \n                 * @since TODO", "url": "https://github.com/jenkinsci/jenkins/pull/4411#discussion_r365129674", "createdAt": "2020-01-10T08:58:25Z", "author": {"login": "oleg-nenashev"}, "path": "core/src/main/java/hudson/model/Computer.java", "diffHunk": "@@ -1369,15 +1369,29 @@ public String call() throws IOException {\n //\n //\n     public void doRssAll( StaplerRequest req, StaplerResponse rsp ) throws IOException, ServletException {\n-        rss(req, rsp, \" all builds\", getBuilds());\n+        RSS.rss(req, rsp, getDisplayName() + \" all builds\", getUrl(), getBuilds());\n     }\n \n     public void doRssFailed(StaplerRequest req, StaplerResponse rsp ) throws IOException, ServletException {\n-        rss(req, rsp, \" failed builds\", getBuilds().failureOnly());\n+        RSS.rss(req, rsp, getDisplayName() + \" failed builds\", getUrl(), getBuilds().failureOnly());\n     }\n-    private void rss(StaplerRequest req, StaplerResponse rsp, String suffix, RunList runs) throws IOException, ServletException {\n-        RSS.forwardToRss(getDisplayName() + suffix, getUrl(),\n-                runs.newBuilds(), Run.FEED_ADAPTER, req, rsp);\n+\n+    /**\n+     * Retrieve the RSS feed for the last build for each project executed in this computer", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8d40f459debe5de919573686d1a13d8581cd3418"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTEyOTc5OA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 *      Entries to be listed in the RSS feed.\n          \n          \n            \n                 *      Entries to be listed in the RSS feed.\n          \n          \n            \n                 * @since TODO", "url": "https://github.com/jenkinsci/jenkins/pull/4411#discussion_r365129798", "createdAt": "2020-01-10T08:58:46Z", "author": {"login": "oleg-nenashev"}, "path": "core/src/main/java/hudson/model/RSS.java", "diffHunk": "@@ -90,4 +91,35 @@ public static void doTrackback( Object it, StaplerRequest req, StaplerResponse r\n \n         req.getView(Jenkins.get(),\"/hudson/\"+flavor+\".jelly\").forward(req,rsp);\n     }\n+\n+    /**\n+     * Sends the RSS feed to the client using a default feed adapter.\n+     *\n+     * @param title\n+     *      Title of the feed.\n+     * @param url\n+     *      URL of the model object that owns this feed. Relative to the context root.\n+     * @param runList\n+     *      Entries to be listed in the RSS feed.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8d40f459debe5de919573686d1a13d8581cd3418"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTEyOTk3OQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 *      Controls how to render entries to RSS.\n          \n          \n            \n                 *      Controls how to render entries to RSS.\n          \n          \n            \n                 * @since TODO", "url": "https://github.com/jenkinsci/jenkins/pull/4411#discussion_r365129979", "createdAt": "2020-01-10T08:59:14Z", "author": {"login": "oleg-nenashev"}, "path": "core/src/main/java/hudson/model/RSS.java", "diffHunk": "@@ -90,4 +91,35 @@ public static void doTrackback( Object it, StaplerRequest req, StaplerResponse r\n \n         req.getView(Jenkins.get(),\"/hudson/\"+flavor+\".jelly\").forward(req,rsp);\n     }\n+\n+    /**\n+     * Sends the RSS feed to the client using a default feed adapter.\n+     *\n+     * @param title\n+     *      Title of the feed.\n+     * @param url\n+     *      URL of the model object that owns this feed. Relative to the context root.\n+     * @param runList\n+     *      Entries to be listed in the RSS feed.\n+     */\n+    public static void rss(StaplerRequest req, StaplerResponse rsp, String title, String url, RunList runList) throws IOException, ServletException {\n+        rss(req, rsp, title, url, runList, null);\n+    }\n+\n+    /**\n+     * Sends the RSS feed to the client using a specific feed adapter.\n+     *\n+     * @param title\n+     *      Title of the feed.\n+     * @param url\n+     *      URL of the model object that owns this feed. Relative to the context root.\n+     * @param runList\n+     *      Entries to be listed in the RSS feed.\n+     * @param feedAdapter\n+     *      Controls how to render entries to RSS.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8d40f459debe5de919573686d1a13d8581cd3418"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTEzMDQ4Mg==", "bodyText": "Should it be marked as @Restricted(DoNotlUse.class). AFAIK it is only for Stapler. And yes, I know that the historical methods are not annotated. So it is not blocking", "url": "https://github.com/jenkinsci/jenkins/pull/4411#discussion_r365130482", "createdAt": "2020-01-10T09:00:37Z", "author": {"login": "oleg-nenashev"}, "path": "core/src/main/java/hudson/model/Computer.java", "diffHunk": "@@ -1369,15 +1369,29 @@ public String call() throws IOException {\n //\n //\n     public void doRssAll( StaplerRequest req, StaplerResponse rsp ) throws IOException, ServletException {\n-        rss(req, rsp, \" all builds\", getBuilds());\n+        RSS.rss(req, rsp, getDisplayName() + \" all builds\", getUrl(), getBuilds());\n     }\n \n     public void doRssFailed(StaplerRequest req, StaplerResponse rsp ) throws IOException, ServletException {\n-        rss(req, rsp, \" failed builds\", getBuilds().failureOnly());\n+        RSS.rss(req, rsp, getDisplayName() + \" failed builds\", getUrl(), getBuilds().failureOnly());\n     }\n-    private void rss(StaplerRequest req, StaplerResponse rsp, String suffix, RunList runs) throws IOException, ServletException {\n-        RSS.forwardToRss(getDisplayName() + suffix, getUrl(),\n-                runs.newBuilds(), Run.FEED_ADAPTER, req, rsp);\n+\n+    /**\n+     * Retrieve the RSS feed for the last build for each project executed in this computer\n+     */\n+    public void doRssLatest( StaplerRequest req, StaplerResponse rsp ) throws IOException, ServletException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8d40f459debe5de919573686d1a13d8581cd3418"}, "originalPosition": 19}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e0edecd5d0049d7940d887598616a71c68442ea9", "author": {"user": {"login": "fcojfernandez", "name": "Francisco Javier Fernandez"}}, "url": "https://github.com/jenkinsci/jenkins/commit/e0edecd5d0049d7940d887598616a71c68442ea9", "committedDate": "2020-01-13T11:15:12Z", "message": "Apply suggestions from code review\n\nCo-Authored-By: Oleg Nenashev <o.v.nenashev@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3fdfa0a1ef381d300d1f0090a35ba7a9cfb5a5e9", "author": {"user": {"login": "fcojfernandez", "name": "Francisco Javier Fernandez"}}, "url": "https://github.com/jenkinsci/jenkins/commit/3fdfa0a1ef381d300d1f0090a35ba7a9cfb5a5e9", "committedDate": "2020-01-13T11:45:35Z", "message": "[JENKINS-60577] Document limitation to AbstractProject"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQxNzg5OTY2", "url": "https://github.com/jenkinsci/jenkins/pull/4411#pullrequestreview-341789966", "createdAt": "2020-01-13T11:48:12Z", "commit": {"oid": "3fdfa0a1ef381d300d1f0090a35ba7a9cfb5a5e9"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e9d95ac8f9c6c13d5cb6e39d274e0e2a065e8fad", "author": {"user": {"login": "fcojfernandez", "name": "Francisco Javier Fernandez"}}, "url": "https://github.com/jenkinsci/jenkins/commit/e9d95ac8f9c6c13d5cb6e39d274e0e2a065e8fad", "committedDate": "2020-01-13T12:36:16Z", "message": "[JENKINS-60577] Restrict the RSS methods in Computer"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQyNDIzMTM5", "url": "https://github.com/jenkinsci/jenkins/pull/4411#pullrequestreview-342423139", "createdAt": "2020-01-14T10:19:12Z", "commit": {"oid": "e9d95ac8f9c6c13d5cb6e39d274e0e2a065e8fad"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1673, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}