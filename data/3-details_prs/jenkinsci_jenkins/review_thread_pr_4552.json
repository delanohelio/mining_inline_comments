{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg1MTM0Njgy", "number": 4552, "reviewThreads": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wN1QxMToyMDo1M1rODmAouA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwODo0MzowMFrODrHJ5w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxMTgyOTA0OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/hudson/model/AbstractCIBase.java", "isResolved": false, "comments": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wN1QxMToyMDo1M1rOFzNywg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxMTozOTo0NVrOF7XKeg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTI0NzY4Mg==", "bodyText": "https://github.com/search?q=org%3Ajenkinsci+getDisabledAdministrativeMonitors&type=Code", "url": "https://github.com/jenkinsci/jenkins/pull/4552#discussion_r389247682", "createdAt": "2020-03-07T11:20:53Z", "author": {"login": "timja"}, "path": "core/src/main/java/hudson/model/AbstractCIBase.java", "diffHunk": "@@ -93,13 +93,26 @@ protected void killComputer(Computer c) {\n     * Package-protected, but accessed API\n     * ============================================================================================================== */\n \n-    /*package*/ final CopyOnWriteArraySet<String> disabledAdministrativeMonitors = new CopyOnWriteArraySet<>();\n+    private Set<String> disabledAdministrativeMonitors = new HashSet<>();\n \n-    @Restricted(NoExternalUse.class)\n-    public CopyOnWriteArraySet<String> getDisabledAdministrativeMonitors(){\n+    /**\n+     * Get the disabled administrative monitors\n+     *\n+     * @since TODO\n+     */\n+    public Set<String> getDisabledAdministrativeMonitors(){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87adc908830d60326857d8f25be6dd6b67688d76"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTUxNDkzOA==", "bodyText": "So what's buggy about the CopyOnWriteArraySet?", "url": "https://github.com/jenkinsci/jenkins/pull/4552#discussion_r391514938", "createdAt": "2020-03-12T10:05:40Z", "author": {"login": "rsandell"}, "path": "core/src/main/java/hudson/model/AbstractCIBase.java", "diffHunk": "@@ -93,13 +93,26 @@ protected void killComputer(Computer c) {\n     * Package-protected, but accessed API\n     * ============================================================================================================== */\n \n-    /*package*/ final CopyOnWriteArraySet<String> disabledAdministrativeMonitors = new CopyOnWriteArraySet<>();\n+    private Set<String> disabledAdministrativeMonitors = new HashSet<>();\n \n-    @Restricted(NoExternalUse.class)\n-    public CopyOnWriteArraySet<String> getDisabledAdministrativeMonitors(){\n+    /**\n+     * Get the disabled administrative monitors\n+     *\n+     * @since TODO\n+     */\n+    public Set<String> getDisabledAdministrativeMonitors(){", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTI0NzY4Mg=="}, "originalCommit": {"oid": "87adc908830d60326857d8f25be6dd6b67688d76"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTUyODcxNA==", "bodyText": "https://github.com/search?q=org%3Ajenkinsci+getDisabledAdministrativeMonitors&type=Code\n\nAs expected, given it was @Restricted.", "url": "https://github.com/jenkinsci/jenkins/pull/4552#discussion_r391528714", "createdAt": "2020-03-12T10:30:48Z", "author": {"login": "daniel-beck"}, "path": "core/src/main/java/hudson/model/AbstractCIBase.java", "diffHunk": "@@ -93,13 +93,26 @@ protected void killComputer(Computer c) {\n     * Package-protected, but accessed API\n     * ============================================================================================================== */\n \n-    /*package*/ final CopyOnWriteArraySet<String> disabledAdministrativeMonitors = new CopyOnWriteArraySet<>();\n+    private Set<String> disabledAdministrativeMonitors = new HashSet<>();\n \n-    @Restricted(NoExternalUse.class)\n-    public CopyOnWriteArraySet<String> getDisabledAdministrativeMonitors(){\n+    /**\n+     * Get the disabled administrative monitors\n+     *\n+     * @since TODO\n+     */\n+    public Set<String> getDisabledAdministrativeMonitors(){", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTI0NzY4Mg=="}, "originalCommit": {"oid": "87adc908830d60326857d8f25be6dd6b67688d76"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjYwMDc0Mg==", "bodyText": "So what's buggy about the CopyOnWriteArraySet?\n\nJCasC doesn't support it", "url": "https://github.com/jenkinsci/jenkins/pull/4552#discussion_r392600742", "createdAt": "2020-03-14T16:30:44Z", "author": {"login": "timja"}, "path": "core/src/main/java/hudson/model/AbstractCIBase.java", "diffHunk": "@@ -93,13 +93,26 @@ protected void killComputer(Computer c) {\n     * Package-protected, but accessed API\n     * ============================================================================================================== */\n \n-    /*package*/ final CopyOnWriteArraySet<String> disabledAdministrativeMonitors = new CopyOnWriteArraySet<>();\n+    private Set<String> disabledAdministrativeMonitors = new HashSet<>();\n \n-    @Restricted(NoExternalUse.class)\n-    public CopyOnWriteArraySet<String> getDisabledAdministrativeMonitors(){\n+    /**\n+     * Get the disabled administrative monitors\n+     *\n+     * @since TODO\n+     */\n+    public Set<String> getDisabledAdministrativeMonitors(){", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTI0NzY4Mg=="}, "originalCommit": {"oid": "87adc908830d60326857d8f25be6dd6b67688d76"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzIyMzQ0Mg==", "bodyText": "to avoid sharing the same data structure w/ the UI, why not just do something like this?\n  synchronized(this.disabledAdministrativeMonitors) { return new HashSet<String>(this.disabledAdministrativeMonitors); };\n\n... then any client of this class doesn't need to worry about concurrency concerns in the internal data structure; those concerns remain .. internal to this implementation", "url": "https://github.com/jenkinsci/jenkins/pull/4552#discussion_r397223442", "createdAt": "2020-03-24T15:03:49Z", "author": {"login": "jdef"}, "path": "core/src/main/java/hudson/model/AbstractCIBase.java", "diffHunk": "@@ -93,13 +93,26 @@ protected void killComputer(Computer c) {\n     * Package-protected, but accessed API\n     * ============================================================================================================== */\n \n-    /*package*/ final CopyOnWriteArraySet<String> disabledAdministrativeMonitors = new CopyOnWriteArraySet<>();\n+    private Set<String> disabledAdministrativeMonitors = new HashSet<>();\n \n-    @Restricted(NoExternalUse.class)\n-    public CopyOnWriteArraySet<String> getDisabledAdministrativeMonitors(){\n+    /**\n+     * Get the disabled administrative monitors\n+     *\n+     * @since TODO\n+     */\n+    public Set<String> getDisabledAdministrativeMonitors(){", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTI0NzY4Mg=="}, "originalCommit": {"oid": "87adc908830d60326857d8f25be6dd6b67688d76"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzIzMTI5MA==", "bodyText": "because the returned set is modified by appending to it, it could be made immutable and then only modified via the setter instead possibly, if that would be better?", "url": "https://github.com/jenkinsci/jenkins/pull/4552#discussion_r397231290", "createdAt": "2020-03-24T15:14:05Z", "author": {"login": "timja"}, "path": "core/src/main/java/hudson/model/AbstractCIBase.java", "diffHunk": "@@ -93,13 +93,26 @@ protected void killComputer(Computer c) {\n     * Package-protected, but accessed API\n     * ============================================================================================================== */\n \n-    /*package*/ final CopyOnWriteArraySet<String> disabledAdministrativeMonitors = new CopyOnWriteArraySet<>();\n+    private Set<String> disabledAdministrativeMonitors = new HashSet<>();\n \n-    @Restricted(NoExternalUse.class)\n-    public CopyOnWriteArraySet<String> getDisabledAdministrativeMonitors(){\n+    /**\n+     * Get the disabled administrative monitors\n+     *\n+     * @since TODO\n+     */\n+    public Set<String> getDisabledAdministrativeMonitors(){", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTI0NzY4Mg=="}, "originalCommit": {"oid": "87adc908830d60326857d8f25be6dd6b67688d76"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzI5MjI2Ng==", "bodyText": "could wrap w/ immutability. but what are you trying to guard against, really? is the intent that clients should fail fast when they try to make a modification that will never go anywhere? if so, then immutable is fine. otherwise, the i think the approach that i suggested already prevents the client from making accidental changes to an internal data structure", "url": "https://github.com/jenkinsci/jenkins/pull/4552#discussion_r397292266", "createdAt": "2020-03-24T16:30:39Z", "author": {"login": "jdef"}, "path": "core/src/main/java/hudson/model/AbstractCIBase.java", "diffHunk": "@@ -93,13 +93,26 @@ protected void killComputer(Computer c) {\n     * Package-protected, but accessed API\n     * ============================================================================================================== */\n \n-    /*package*/ final CopyOnWriteArraySet<String> disabledAdministrativeMonitors = new CopyOnWriteArraySet<>();\n+    private Set<String> disabledAdministrativeMonitors = new HashSet<>();\n \n-    @Restricted(NoExternalUse.class)\n-    public CopyOnWriteArraySet<String> getDisabledAdministrativeMonitors(){\n+    /**\n+     * Get the disabled administrative monitors\n+     *\n+     * @since TODO\n+     */\n+    public Set<String> getDisabledAdministrativeMonitors(){", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTI0NzY4Mg=="}, "originalCommit": {"oid": "87adc908830d60326857d8f25be6dd6b67688d76"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzI5NTMxMQ==", "bodyText": "It's to prevent concurrent modification exceptions. If you modify a non-threadsafe collection while iterating, it throws an exception.", "url": "https://github.com/jenkinsci/jenkins/pull/4552#discussion_r397295311", "createdAt": "2020-03-24T16:34:45Z", "author": {"login": "jvz"}, "path": "core/src/main/java/hudson/model/AbstractCIBase.java", "diffHunk": "@@ -93,13 +93,26 @@ protected void killComputer(Computer c) {\n     * Package-protected, but accessed API\n     * ============================================================================================================== */\n \n-    /*package*/ final CopyOnWriteArraySet<String> disabledAdministrativeMonitors = new CopyOnWriteArraySet<>();\n+    private Set<String> disabledAdministrativeMonitors = new HashSet<>();\n \n-    @Restricted(NoExternalUse.class)\n-    public CopyOnWriteArraySet<String> getDisabledAdministrativeMonitors(){\n+    /**\n+     * Get the disabled administrative monitors\n+     *\n+     * @since TODO\n+     */\n+    public Set<String> getDisabledAdministrativeMonitors(){", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTI0NzY4Mg=="}, "originalCommit": {"oid": "87adc908830d60326857d8f25be6dd6b67688d76"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzM4ODM4Mg==", "bodyText": "The issue is that clients modify this set, so returning a copy prevents them updating it", "url": "https://github.com/jenkinsci/jenkins/pull/4552#discussion_r397388382", "createdAt": "2020-03-24T18:54:25Z", "author": {"login": "timja"}, "path": "core/src/main/java/hudson/model/AbstractCIBase.java", "diffHunk": "@@ -93,13 +93,26 @@ protected void killComputer(Computer c) {\n     * Package-protected, but accessed API\n     * ============================================================================================================== */\n \n-    /*package*/ final CopyOnWriteArraySet<String> disabledAdministrativeMonitors = new CopyOnWriteArraySet<>();\n+    private Set<String> disabledAdministrativeMonitors = new HashSet<>();\n \n-    @Restricted(NoExternalUse.class)\n-    public CopyOnWriteArraySet<String> getDisabledAdministrativeMonitors(){\n+    /**\n+     * Get the disabled administrative monitors\n+     *\n+     * @since TODO\n+     */\n+    public Set<String> getDisabledAdministrativeMonitors(){", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTI0NzY4Mg=="}, "originalCommit": {"oid": "87adc908830d60326857d8f25be6dd6b67688d76"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzM5MjA2Ng==", "bodyText": "ouch. any reason that clients can't be modified to invoke the setter instead of relying on directly mutating the internal state of this object? the current situation sounds like a pretty leaky design", "url": "https://github.com/jenkinsci/jenkins/pull/4552#discussion_r397392066", "createdAt": "2020-03-24T19:00:38Z", "author": {"login": "jdef"}, "path": "core/src/main/java/hudson/model/AbstractCIBase.java", "diffHunk": "@@ -93,13 +93,26 @@ protected void killComputer(Computer c) {\n     * Package-protected, but accessed API\n     * ============================================================================================================== */\n \n-    /*package*/ final CopyOnWriteArraySet<String> disabledAdministrativeMonitors = new CopyOnWriteArraySet<>();\n+    private Set<String> disabledAdministrativeMonitors = new HashSet<>();\n \n-    @Restricted(NoExternalUse.class)\n-    public CopyOnWriteArraySet<String> getDisabledAdministrativeMonitors(){\n+    /**\n+     * Get the disabled administrative monitors\n+     *\n+     * @since TODO\n+     */\n+    public Set<String> getDisabledAdministrativeMonitors(){", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTI0NzY4Mg=="}, "originalCommit": {"oid": "87adc908830d60326857d8f25be6dd6b67688d76"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzM5NDQyMg==", "bodyText": "I suggested modifying it a couple of comments up, will take a look", "url": "https://github.com/jenkinsci/jenkins/pull/4552#discussion_r397394422", "createdAt": "2020-03-24T19:04:53Z", "author": {"login": "timja"}, "path": "core/src/main/java/hudson/model/AbstractCIBase.java", "diffHunk": "@@ -93,13 +93,26 @@ protected void killComputer(Computer c) {\n     * Package-protected, but accessed API\n     * ============================================================================================================== */\n \n-    /*package*/ final CopyOnWriteArraySet<String> disabledAdministrativeMonitors = new CopyOnWriteArraySet<>();\n+    private Set<String> disabledAdministrativeMonitors = new HashSet<>();\n \n-    @Restricted(NoExternalUse.class)\n-    public CopyOnWriteArraySet<String> getDisabledAdministrativeMonitors(){\n+    /**\n+     * Get the disabled administrative monitors\n+     *\n+     * @since TODO\n+     */\n+    public Set<String> getDisabledAdministrativeMonitors(){", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTI0NzY4Mg=="}, "originalCommit": {"oid": "87adc908830d60326857d8f25be6dd6b67688d76"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzc0NDA2OA==", "bodyText": "have changed, PTAL", "url": "https://github.com/jenkinsci/jenkins/pull/4552#discussion_r397744068", "createdAt": "2020-03-25T10:19:15Z", "author": {"login": "timja"}, "path": "core/src/main/java/hudson/model/AbstractCIBase.java", "diffHunk": "@@ -93,13 +93,26 @@ protected void killComputer(Computer c) {\n     * Package-protected, but accessed API\n     * ============================================================================================================== */\n \n-    /*package*/ final CopyOnWriteArraySet<String> disabledAdministrativeMonitors = new CopyOnWriteArraySet<>();\n+    private Set<String> disabledAdministrativeMonitors = new HashSet<>();\n \n-    @Restricted(NoExternalUse.class)\n-    public CopyOnWriteArraySet<String> getDisabledAdministrativeMonitors(){\n+    /**\n+     * Get the disabled administrative monitors\n+     *\n+     * @since TODO\n+     */\n+    public Set<String> getDisabledAdministrativeMonitors(){", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTI0NzY4Mg=="}, "originalCommit": {"oid": "87adc908830d60326857d8f25be6dd6b67688d76"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzc4OTgxOA==", "bodyText": "suggest wrapping this return ... statement w/ synchronized(disabledAdministrativeMonitors) {} as suggested above, since the new HashSet<>(..) operation will iterate over the collection passed to it", "url": "https://github.com/jenkinsci/jenkins/pull/4552#discussion_r397789818", "createdAt": "2020-03-25T11:39:45Z", "author": {"login": "jdef"}, "path": "core/src/main/java/hudson/model/AbstractCIBase.java", "diffHunk": "@@ -93,13 +93,26 @@ protected void killComputer(Computer c) {\n     * Package-protected, but accessed API\n     * ============================================================================================================== */\n \n-    /*package*/ final CopyOnWriteArraySet<String> disabledAdministrativeMonitors = new CopyOnWriteArraySet<>();\n+    private Set<String> disabledAdministrativeMonitors = new HashSet<>();\n \n-    @Restricted(NoExternalUse.class)\n-    public CopyOnWriteArraySet<String> getDisabledAdministrativeMonitors(){\n+    /**\n+     * Get the disabled administrative monitors\n+     *\n+     * @since TODO\n+     */\n+    public Set<String> getDisabledAdministrativeMonitors(){", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTI0NzY4Mg=="}, "originalCommit": {"oid": "87adc908830d60326857d8f25be6dd6b67688d76"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxMTk0Mzg4OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/hudson/model/AbstractCIBase.java", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wN1QxNToyNzozNVrOFzOq1A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOFQxNDowNTowMlrOFzVaIg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTI2MjAzNg==", "bodyText": "Probably should be cloned here instead of taking a reference to an external object", "url": "https://github.com/jenkinsci/jenkins/pull/4552#discussion_r389262036", "createdAt": "2020-03-07T15:27:35Z", "author": {"login": "res0nance"}, "path": "core/src/main/java/hudson/model/AbstractCIBase.java", "diffHunk": "@@ -93,13 +93,26 @@ protected void killComputer(Computer c) {\n     * Package-protected, but accessed API\n     * ============================================================================================================== */\n \n-    /*package*/ final CopyOnWriteArraySet<String> disabledAdministrativeMonitors = new CopyOnWriteArraySet<>();\n+    private Set<String> disabledAdministrativeMonitors = new HashSet<>();\n \n-    @Restricted(NoExternalUse.class)\n-    public CopyOnWriteArraySet<String> getDisabledAdministrativeMonitors(){\n+    /**\n+     * Get the disabled administrative monitors\n+     *\n+     * @since TODO\n+     */\n+    public Set<String> getDisabledAdministrativeMonitors(){\n     \treturn disabledAdministrativeMonitors;\n     }\n-    \n+\n+    /**\n+     * Set the disabled administrative monitors\n+     *\n+     * @since TODO\n+     */\n+    public void setDisabledAdministrativeMonitors(Set<String> disabledAdministrativeMonitors){\n+        this.disabledAdministrativeMonitors = disabledAdministrativeMonitors;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87adc908830d60326857d8f25be6dd6b67688d76"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTMxODU5Nw==", "bodyText": "Why\u2019s that? It\u2019s just a setter", "url": "https://github.com/jenkinsci/jenkins/pull/4552#discussion_r389318597", "createdAt": "2020-03-07T23:01:25Z", "author": {"login": "timja"}, "path": "core/src/main/java/hudson/model/AbstractCIBase.java", "diffHunk": "@@ -93,13 +93,26 @@ protected void killComputer(Computer c) {\n     * Package-protected, but accessed API\n     * ============================================================================================================== */\n \n-    /*package*/ final CopyOnWriteArraySet<String> disabledAdministrativeMonitors = new CopyOnWriteArraySet<>();\n+    private Set<String> disabledAdministrativeMonitors = new HashSet<>();\n \n-    @Restricted(NoExternalUse.class)\n-    public CopyOnWriteArraySet<String> getDisabledAdministrativeMonitors(){\n+    /**\n+     * Get the disabled administrative monitors\n+     *\n+     * @since TODO\n+     */\n+    public Set<String> getDisabledAdministrativeMonitors(){\n     \treturn disabledAdministrativeMonitors;\n     }\n-    \n+\n+    /**\n+     * Set the disabled administrative monitors\n+     *\n+     * @since TODO\n+     */\n+    public void setDisabledAdministrativeMonitors(Set<String> disabledAdministrativeMonitors){\n+        this.disabledAdministrativeMonitors = disabledAdministrativeMonitors;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTI2MjAzNg=="}, "originalCommit": {"oid": "87adc908830d60326857d8f25be6dd6b67688d76"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTMxODg3MQ==", "bodyText": "both stapler and jcasc will handle creating a clone that should be safe for Jenkins core to use.", "url": "https://github.com/jenkinsci/jenkins/pull/4552#discussion_r389318871", "createdAt": "2020-03-07T23:06:40Z", "author": {"login": "jetersen"}, "path": "core/src/main/java/hudson/model/AbstractCIBase.java", "diffHunk": "@@ -93,13 +93,26 @@ protected void killComputer(Computer c) {\n     * Package-protected, but accessed API\n     * ============================================================================================================== */\n \n-    /*package*/ final CopyOnWriteArraySet<String> disabledAdministrativeMonitors = new CopyOnWriteArraySet<>();\n+    private Set<String> disabledAdministrativeMonitors = new HashSet<>();\n \n-    @Restricted(NoExternalUse.class)\n-    public CopyOnWriteArraySet<String> getDisabledAdministrativeMonitors(){\n+    /**\n+     * Get the disabled administrative monitors\n+     *\n+     * @since TODO\n+     */\n+    public Set<String> getDisabledAdministrativeMonitors(){\n     \treturn disabledAdministrativeMonitors;\n     }\n-    \n+\n+    /**\n+     * Set the disabled administrative monitors\n+     *\n+     * @since TODO\n+     */\n+    public void setDisabledAdministrativeMonitors(Set<String> disabledAdministrativeMonitors){\n+        this.disabledAdministrativeMonitors = disabledAdministrativeMonitors;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTI2MjAzNg=="}, "originalCommit": {"oid": "87adc908830d60326857d8f25be6dd6b67688d76"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTM3MjI5Ng==", "bodyText": "Spotbugs normally warns against taking a reference to an outside object", "url": "https://github.com/jenkinsci/jenkins/pull/4552#discussion_r389372296", "createdAt": "2020-03-08T14:03:07Z", "author": {"login": "res0nance"}, "path": "core/src/main/java/hudson/model/AbstractCIBase.java", "diffHunk": "@@ -93,13 +93,26 @@ protected void killComputer(Computer c) {\n     * Package-protected, but accessed API\n     * ============================================================================================================== */\n \n-    /*package*/ final CopyOnWriteArraySet<String> disabledAdministrativeMonitors = new CopyOnWriteArraySet<>();\n+    private Set<String> disabledAdministrativeMonitors = new HashSet<>();\n \n-    @Restricted(NoExternalUse.class)\n-    public CopyOnWriteArraySet<String> getDisabledAdministrativeMonitors(){\n+    /**\n+     * Get the disabled administrative monitors\n+     *\n+     * @since TODO\n+     */\n+    public Set<String> getDisabledAdministrativeMonitors(){\n     \treturn disabledAdministrativeMonitors;\n     }\n-    \n+\n+    /**\n+     * Set the disabled administrative monitors\n+     *\n+     * @since TODO\n+     */\n+    public void setDisabledAdministrativeMonitors(Set<String> disabledAdministrativeMonitors){\n+        this.disabledAdministrativeMonitors = disabledAdministrativeMonitors;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTI2MjAzNg=="}, "originalCommit": {"oid": "87adc908830d60326857d8f25be6dd6b67688d76"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTM3MjQ1MA==", "bodyText": "not on collections or simple object types.\nSpotbugs would complain on date objects.", "url": "https://github.com/jenkinsci/jenkins/pull/4552#discussion_r389372450", "createdAt": "2020-03-08T14:05:02Z", "author": {"login": "jetersen"}, "path": "core/src/main/java/hudson/model/AbstractCIBase.java", "diffHunk": "@@ -93,13 +93,26 @@ protected void killComputer(Computer c) {\n     * Package-protected, but accessed API\n     * ============================================================================================================== */\n \n-    /*package*/ final CopyOnWriteArraySet<String> disabledAdministrativeMonitors = new CopyOnWriteArraySet<>();\n+    private Set<String> disabledAdministrativeMonitors = new HashSet<>();\n \n-    @Restricted(NoExternalUse.class)\n-    public CopyOnWriteArraySet<String> getDisabledAdministrativeMonitors(){\n+    /**\n+     * Get the disabled administrative monitors\n+     *\n+     * @since TODO\n+     */\n+    public Set<String> getDisabledAdministrativeMonitors(){\n     \treturn disabledAdministrativeMonitors;\n     }\n-    \n+\n+    /**\n+     * Set the disabled administrative monitors\n+     *\n+     * @since TODO\n+     */\n+    public void setDisabledAdministrativeMonitors(Set<String> disabledAdministrativeMonitors){\n+        this.disabledAdministrativeMonitors = disabledAdministrativeMonitors;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTI2MjAzNg=="}, "originalCommit": {"oid": "87adc908830d60326857d8f25be6dd6b67688d76"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxMTk0NTEyOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/hudson/model/AbstractCIBase.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wN1QxNTozMDoxOVrOFzOrdA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxMDoyOToyOVrOF1Y-gQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTI2MjE5Ng==", "bodyText": "There is a gigantic comment above that you might want to consider removing", "url": "https://github.com/jenkinsci/jenkins/pull/4552#discussion_r389262196", "createdAt": "2020-03-07T15:30:19Z", "author": {"login": "res0nance"}, "path": "core/src/main/java/hudson/model/AbstractCIBase.java", "diffHunk": "@@ -93,13 +93,26 @@ protected void killComputer(Computer c) {\n     * Package-protected, but accessed API\n     * ============================================================================================================== */\n \n-    /*package*/ final CopyOnWriteArraySet<String> disabledAdministrativeMonitors = new CopyOnWriteArraySet<>();\n+    private Set<String> disabledAdministrativeMonitors = new HashSet<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87adc908830d60326857d8f25be6dd6b67688d76"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTUyODA2NQ==", "bodyText": "It was probably already obsolete after #3873", "url": "https://github.com/jenkinsci/jenkins/pull/4552#discussion_r391528065", "createdAt": "2020-03-12T10:29:29Z", "author": {"login": "daniel-beck"}, "path": "core/src/main/java/hudson/model/AbstractCIBase.java", "diffHunk": "@@ -93,13 +93,26 @@ protected void killComputer(Computer c) {\n     * Package-protected, but accessed API\n     * ============================================================================================================== */\n \n-    /*package*/ final CopyOnWriteArraySet<String> disabledAdministrativeMonitors = new CopyOnWriteArraySet<>();\n+    private Set<String> disabledAdministrativeMonitors = new HashSet<>();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTI2MjE5Ng=="}, "originalCommit": {"oid": "87adc908830d60326857d8f25be6dd6b67688d76"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyNjQyMzIxOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/hudson/model/AbstractCIBase.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxMDowNDo0NVrOF1YJJg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxMDowNDo0NVrOF1YJJg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTUxNDQwNg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public void setDisabledAdministrativeMonitors(Set<String> disabledAdministrativeMonitors){\n          \n          \n            \n                public void setDisabledAdministrativeMonitors(Set<String> disabledAdministrativeMonitors) {", "url": "https://github.com/jenkinsci/jenkins/pull/4552#discussion_r391514406", "createdAt": "2020-03-12T10:04:45Z", "author": {"login": "alecharp"}, "path": "core/src/main/java/hudson/model/AbstractCIBase.java", "diffHunk": "@@ -93,13 +93,26 @@ protected void killComputer(Computer c) {\n     * Package-protected, but accessed API\n     * ============================================================================================================== */\n \n-    /*package*/ final CopyOnWriteArraySet<String> disabledAdministrativeMonitors = new CopyOnWriteArraySet<>();\n+    private Set<String> disabledAdministrativeMonitors = new HashSet<>();\n \n-    @Restricted(NoExternalUse.class)\n-    public CopyOnWriteArraySet<String> getDisabledAdministrativeMonitors(){\n+    /**\n+     * Get the disabled administrative monitors\n+     *\n+     * @since TODO\n+     */\n+    public Set<String> getDisabledAdministrativeMonitors(){\n     \treturn disabledAdministrativeMonitors;\n     }\n-    \n+\n+    /**\n+     * Set the disabled administrative monitors\n+     *\n+     * @since TODO\n+     */\n+    public void setDisabledAdministrativeMonitors(Set<String> disabledAdministrativeMonitors){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87adc908830d60326857d8f25be6dd6b67688d76"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzMzgzOTY4OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/hudson/model/AbstractCIBase.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNVQxMToyNTo0MVrOF2eVEw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQxODo1MzoxN1rOF6-nxQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjY2NDMzOQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public void setDisabledAdministrativeMonitors(Set<String> disabledAdministrativeMonitors) {\n          \n          \n            \n                public synchronized void setDisabledAdministrativeMonitors(Set<String> disabledAdministrativeMonitors) {", "url": "https://github.com/jenkinsci/jenkins/pull/4552#discussion_r392664339", "createdAt": "2020-03-15T11:25:41Z", "author": {"login": "timja"}, "path": "core/src/main/java/hudson/model/AbstractCIBase.java", "diffHunk": "@@ -89,17 +89,26 @@ protected void killComputer(Computer c) {\n         c.kill();\n     }\n \n-    /* =================================================================================================================\n-    * Package-protected, but accessed API\n-    * ============================================================================================================== */\n-\n-    /*package*/ final CopyOnWriteArraySet<String> disabledAdministrativeMonitors = new CopyOnWriteArraySet<>();\n+    private Set<String> disabledAdministrativeMonitors = new CopyOnWriteArraySet<>();\n \n-    @Restricted(NoExternalUse.class)\n-    public CopyOnWriteArraySet<String> getDisabledAdministrativeMonitors(){\n+    /**\n+     * Get the disabled administrative monitors\n+     *\n+     * @since TODO\n+     */\n+    public Set<String> getDisabledAdministrativeMonitors(){\n     \treturn disabledAdministrativeMonitors;\n     }\n-    \n+\n+    /**\n+     * Set the disabled administrative monitors\n+     *\n+     * @since TODO\n+     */\n+    public void setDisabledAdministrativeMonitors(Set<String> disabledAdministrativeMonitors) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1a3f01025f53e3cf78d53b508531deb70757fb62"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzIyNjQzNw==", "bodyText": "why the instance-level lock suggestion, vs. what's been implemented here. seems like overkill", "url": "https://github.com/jenkinsci/jenkins/pull/4552#discussion_r397226437", "createdAt": "2020-03-24T15:07:39Z", "author": {"login": "jdef"}, "path": "core/src/main/java/hudson/model/AbstractCIBase.java", "diffHunk": "@@ -89,17 +89,26 @@ protected void killComputer(Computer c) {\n         c.kill();\n     }\n \n-    /* =================================================================================================================\n-    * Package-protected, but accessed API\n-    * ============================================================================================================== */\n-\n-    /*package*/ final CopyOnWriteArraySet<String> disabledAdministrativeMonitors = new CopyOnWriteArraySet<>();\n+    private Set<String> disabledAdministrativeMonitors = new CopyOnWriteArraySet<>();\n \n-    @Restricted(NoExternalUse.class)\n-    public CopyOnWriteArraySet<String> getDisabledAdministrativeMonitors(){\n+    /**\n+     * Get the disabled administrative monitors\n+     *\n+     * @since TODO\n+     */\n+    public Set<String> getDisabledAdministrativeMonitors(){\n     \treturn disabledAdministrativeMonitors;\n     }\n-    \n+\n+    /**\n+     * Set the disabled administrative monitors\n+     *\n+     * @since TODO\n+     */\n+    public void setDisabledAdministrativeMonitors(Set<String> disabledAdministrativeMonitors) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjY2NDMzOQ=="}, "originalCommit": {"oid": "1a3f01025f53e3cf78d53b508531deb70757fb62"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzM4NzcxNw==", "bodyText": "This is outdated", "url": "https://github.com/jenkinsci/jenkins/pull/4552#discussion_r397387717", "createdAt": "2020-03-24T18:53:17Z", "author": {"login": "timja"}, "path": "core/src/main/java/hudson/model/AbstractCIBase.java", "diffHunk": "@@ -89,17 +89,26 @@ protected void killComputer(Computer c) {\n         c.kill();\n     }\n \n-    /* =================================================================================================================\n-    * Package-protected, but accessed API\n-    * ============================================================================================================== */\n-\n-    /*package*/ final CopyOnWriteArraySet<String> disabledAdministrativeMonitors = new CopyOnWriteArraySet<>();\n+    private Set<String> disabledAdministrativeMonitors = new CopyOnWriteArraySet<>();\n \n-    @Restricted(NoExternalUse.class)\n-    public CopyOnWriteArraySet<String> getDisabledAdministrativeMonitors(){\n+    /**\n+     * Get the disabled administrative monitors\n+     *\n+     * @since TODO\n+     */\n+    public Set<String> getDisabledAdministrativeMonitors(){\n     \treturn disabledAdministrativeMonitors;\n     }\n-    \n+\n+    /**\n+     * Set the disabled administrative monitors\n+     *\n+     * @since TODO\n+     */\n+    public void setDisabledAdministrativeMonitors(Set<String> disabledAdministrativeMonitors) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjY2NDMzOQ=="}, "originalCommit": {"oid": "1a3f01025f53e3cf78d53b508531deb70757fb62"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzMzg0MDUyOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/hudson/model/AbstractCIBase.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNVQxMToyNjo1MlrOF2eVdg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNVQxMToyNjo1MlrOF2eVdg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjY2NDQzOA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private Set<String> disabledAdministrativeMonitors = new CopyOnWriteArraySet<>();\n          \n          \n            \n                private volatile Set<String> disabledAdministrativeMonitors = new CopyOnWriteArraySet<>();", "url": "https://github.com/jenkinsci/jenkins/pull/4552#discussion_r392664438", "createdAt": "2020-03-15T11:26:52Z", "author": {"login": "timja"}, "path": "core/src/main/java/hudson/model/AbstractCIBase.java", "diffHunk": "@@ -89,17 +89,26 @@ protected void killComputer(Computer c) {\n         c.kill();\n     }\n \n-    /* =================================================================================================================\n-    * Package-protected, but accessed API\n-    * ============================================================================================================== */\n-\n-    /*package*/ final CopyOnWriteArraySet<String> disabledAdministrativeMonitors = new CopyOnWriteArraySet<>();\n+    private Set<String> disabledAdministrativeMonitors = new CopyOnWriteArraySet<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1a3f01025f53e3cf78d53b508531deb70757fb62"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzNzA4NzQzOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/hudson/model/AbstractCIBase.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxNjo1NDo1OVrOF29K6g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxNzowMToxNFrOF29h1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzE2OTY0Mg==", "bodyText": "My mistake; this will likely still need to be either CopyOnWriteArraySet or use Collections.synchronizedSet() around this. Otherwise, a caller that iterates on the result of getDisabledAdministrativeMonitors() may get a ConcurrentModificationException when another thread calls disable() which modifies the set.\nAlternatively, you can update getDisabledAdministrativeMonitors to wrap the set in a new HashSet to copy the set and prevent the issue entirely.", "url": "https://github.com/jenkinsci/jenkins/pull/4552#discussion_r393169642", "createdAt": "2020-03-16T16:54:59Z", "author": {"login": "jvz"}, "path": "core/src/main/java/hudson/model/AbstractCIBase.java", "diffHunk": "@@ -89,17 +89,26 @@ protected void killComputer(Computer c) {\n         c.kill();\n     }\n \n-    /* =================================================================================================================\n-    * Package-protected, but accessed API\n-    * ============================================================================================================== */\n-\n-    /*package*/ final CopyOnWriteArraySet<String> disabledAdministrativeMonitors = new CopyOnWriteArraySet<>();\n+    private volatile Set<String> disabledAdministrativeMonitors = new HashSet<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "34ba209f2c219c5a44c845d6cb80e0151ad7e8b0"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzE3NTUwOA==", "bodyText": "Alternatively, you can update getDisabledAdministrativeMonitors to wrap the set in a new HashSet to copy the set and prevent the issue entirely.\n\nThat doesn't work as the set is modified through the getter, by calling add on it.", "url": "https://github.com/jenkinsci/jenkins/pull/4552#discussion_r393175508", "createdAt": "2020-03-16T17:01:14Z", "author": {"login": "timja"}, "path": "core/src/main/java/hudson/model/AbstractCIBase.java", "diffHunk": "@@ -89,17 +89,26 @@ protected void killComputer(Computer c) {\n         c.kill();\n     }\n \n-    /* =================================================================================================================\n-    * Package-protected, but accessed API\n-    * ============================================================================================================== */\n-\n-    /*package*/ final CopyOnWriteArraySet<String> disabledAdministrativeMonitors = new CopyOnWriteArraySet<>();\n+    private volatile Set<String> disabledAdministrativeMonitors = new HashSet<>();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzE2OTY0Mg=="}, "originalCommit": {"oid": "34ba209f2c219c5a44c845d6cb80e0151ad7e8b0"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzNzUzMTE1OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/hudson/model/AbstractCIBase.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxODo0OTozMVrOF3BkJg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxODo0OTozMVrOF3BkJg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzI0MTYzOA==", "bodyText": "This can just return the object. The synchronization will happen either implicitly through calls to the Set methods or when we synchronize on the object explicitly in the setter.", "url": "https://github.com/jenkinsci/jenkins/pull/4552#discussion_r393241638", "createdAt": "2020-03-16T18:49:31Z", "author": {"login": "jvz"}, "path": "core/src/main/java/hudson/model/AbstractCIBase.java", "diffHunk": "@@ -89,17 +89,31 @@ protected void killComputer(Computer c) {\n         c.kill();\n     }\n \n-    /* =================================================================================================================\n-    * Package-protected, but accessed API\n-    * ============================================================================================================== */\n+    private final Set<String> disabledAdministrativeMonitors = Collections.synchronizedSet(new HashSet<>());\n \n-    /*package*/ final CopyOnWriteArraySet<String> disabledAdministrativeMonitors = new CopyOnWriteArraySet<>();\n+    /**\n+     * Get the disabled administrative monitors\n+     *\n+     * @since TODO\n+     */\n+    public Set<String> getDisabledAdministrativeMonitors(){\n+        synchronized (disabledAdministrativeMonitors) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5301e58ee5c8ecfa1abc4be0c46f2d277233d3df"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzNzYwMzcwOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/hudson/model/AbstractCIBase.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxOTowOTowN1rOF3CSVg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxOToxOToyNFrOF3Cl-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzI1MzQ2Mg==", "bodyText": "Is it really needed to have synchronized method as well as inside the method?", "url": "https://github.com/jenkinsci/jenkins/pull/4552#discussion_r393253462", "createdAt": "2020-03-16T19:09:07Z", "author": {"login": "jetersen"}, "path": "core/src/main/java/hudson/model/AbstractCIBase.java", "diffHunk": "@@ -89,17 +89,29 @@ protected void killComputer(Computer c) {\n         c.kill();\n     }\n \n-    /* =================================================================================================================\n-    * Package-protected, but accessed API\n-    * ============================================================================================================== */\n+    private final Set<String> disabledAdministrativeMonitors = Collections.synchronizedSet(new HashSet<>());\n \n-    /*package*/ final CopyOnWriteArraySet<String> disabledAdministrativeMonitors = new CopyOnWriteArraySet<>();\n+    /**\n+     * Get the disabled administrative monitors\n+     *\n+     * @since TODO\n+     */\n+    public Set<String> getDisabledAdministrativeMonitors(){\n+        return disabledAdministrativeMonitors;\n+    }\n \n-    @Restricted(NoExternalUse.class)\n-    public CopyOnWriteArraySet<String> getDisabledAdministrativeMonitors(){\n-    \treturn disabledAdministrativeMonitors;\n+    /**\n+     * Set the disabled administrative monitors\n+     *\n+     * @since TODO\n+     */\n+    public synchronized void setDisabledAdministrativeMonitors(Set<String> disabledAdministrativeMonitors) {\n+        synchronized (this.disabledAdministrativeMonitors) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "880d83473df0ad36e3d56e5a7f31fe5e134ce692"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzI1ODQ5MA==", "bodyText": "Looks like I missed that. The method doesn't need to be synchronized any more (and furthermore, the synchronized on the method is using a different lock than the one we're interested in).", "url": "https://github.com/jenkinsci/jenkins/pull/4552#discussion_r393258490", "createdAt": "2020-03-16T19:19:24Z", "author": {"login": "jvz"}, "path": "core/src/main/java/hudson/model/AbstractCIBase.java", "diffHunk": "@@ -89,17 +89,29 @@ protected void killComputer(Computer c) {\n         c.kill();\n     }\n \n-    /* =================================================================================================================\n-    * Package-protected, but accessed API\n-    * ============================================================================================================== */\n+    private final Set<String> disabledAdministrativeMonitors = Collections.synchronizedSet(new HashSet<>());\n \n-    /*package*/ final CopyOnWriteArraySet<String> disabledAdministrativeMonitors = new CopyOnWriteArraySet<>();\n+    /**\n+     * Get the disabled administrative monitors\n+     *\n+     * @since TODO\n+     */\n+    public Set<String> getDisabledAdministrativeMonitors(){\n+        return disabledAdministrativeMonitors;\n+    }\n \n-    @Restricted(NoExternalUse.class)\n-    public CopyOnWriteArraySet<String> getDisabledAdministrativeMonitors(){\n-    \treturn disabledAdministrativeMonitors;\n+    /**\n+     * Set the disabled administrative monitors\n+     *\n+     * @since TODO\n+     */\n+    public synchronized void setDisabledAdministrativeMonitors(Set<String> disabledAdministrativeMonitors) {\n+        synchronized (this.disabledAdministrativeMonitors) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzI1MzQ2Mg=="}, "originalCommit": {"oid": "880d83473df0ad36e3d56e5a7f31fe5e134ce692"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzODM5MDEwOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/hudson/model/AbstractCIBase.java", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QwMDoxNzo0MlrOF3J_Bg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxOTowMDo0MFrOF3qBGg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzM3OTU5MA==", "bodyText": "The docs of synchronizedSet says (I've never used this before)\nReturns a synchronized (thread-safe) set backed by the specified set. In order to guarantee serial access, it is critical that all access to the backing set is accomplished through the returned set.\n\nIt is imperative that the user manually synchronize on the returned set when iterating over it:\n\n  Set s = Collections.synchronizedSet(new HashSet());\n      ...\n  synchronized (s) {\n      Iterator i = s.iterator(); // Must be in the synchronized block\n      while (i.hasNext())\n          foo(i.next());\n  }\n \n\nFailure to follow this advice may result in non-deterministic behavior. \n\nI'm not sure what it means by Failure to follow this advice may result in non-deterministic behavior. in here", "url": "https://github.com/jenkinsci/jenkins/pull/4552#discussion_r393379590", "createdAt": "2020-03-17T00:17:42Z", "author": {"login": "res0nance"}, "path": "core/src/main/java/hudson/model/AbstractCIBase.java", "diffHunk": "@@ -89,17 +89,29 @@ protected void killComputer(Computer c) {\n         c.kill();\n     }\n \n-    /* =================================================================================================================\n-    * Package-protected, but accessed API\n-    * ============================================================================================================== */\n+    private final Set<String> disabledAdministrativeMonitors = Collections.synchronizedSet(new HashSet<>());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fc046440df3dbb71345af204829762c54e72c4cf"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzQ4NzkwOQ==", "bodyText": "There's no direct iteration of this field,\nthere's 4 usages of it,\n\nenable / disable, calls add /remove\nisEnabled, calls contains\nthe UI, which iterates over it, not sure if there's much we can do there,\njcasc, it will use the setter to update it which will clear the set and use what jcasc sets.", "url": "https://github.com/jenkinsci/jenkins/pull/4552#discussion_r393487909", "createdAt": "2020-03-17T07:33:44Z", "author": {"login": "timja"}, "path": "core/src/main/java/hudson/model/AbstractCIBase.java", "diffHunk": "@@ -89,17 +89,29 @@ protected void killComputer(Computer c) {\n         c.kill();\n     }\n \n-    /* =================================================================================================================\n-    * Package-protected, but accessed API\n-    * ============================================================================================================== */\n+    private final Set<String> disabledAdministrativeMonitors = Collections.synchronizedSet(new HashSet<>());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzM3OTU5MA=="}, "originalCommit": {"oid": "fc046440df3dbb71345af204829762c54e72c4cf"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzUwMjMwOA==", "bodyText": "My worry is what is the worst that could happen? Will it throw an exception or will it just show old data?\nIf its the latter then I think its alright but the documentation doesn't seem perfectly clear", "url": "https://github.com/jenkinsci/jenkins/pull/4552#discussion_r393502308", "createdAt": "2020-03-17T08:08:41Z", "author": {"login": "res0nance"}, "path": "core/src/main/java/hudson/model/AbstractCIBase.java", "diffHunk": "@@ -89,17 +89,29 @@ protected void killComputer(Computer c) {\n         c.kill();\n     }\n \n-    /* =================================================================================================================\n-    * Package-protected, but accessed API\n-    * ============================================================================================================== */\n+    private final Set<String> disabledAdministrativeMonitors = Collections.synchronizedSet(new HashSet<>());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzM3OTU5MA=="}, "originalCommit": {"oid": "fc046440df3dbb71345af204829762c54e72c4cf"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzY0NDgxNA==", "bodyText": "#3687 (comment) was the (un)funnest one I've seen. Way up there in my hall of shame \u2639\ufe0f", "url": "https://github.com/jenkinsci/jenkins/pull/4552#discussion_r393644814", "createdAt": "2020-03-17T12:32:49Z", "author": {"login": "daniel-beck"}, "path": "core/src/main/java/hudson/model/AbstractCIBase.java", "diffHunk": "@@ -89,17 +89,29 @@ protected void killComputer(Computer c) {\n         c.kill();\n     }\n \n-    /* =================================================================================================================\n-    * Package-protected, but accessed API\n-    * ============================================================================================================== */\n+    private final Set<String> disabledAdministrativeMonitors = Collections.synchronizedSet(new HashSet<>());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzM3OTU5MA=="}, "originalCommit": {"oid": "fc046440df3dbb71345af204829762c54e72c4cf"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzkwNDQxMA==", "bodyText": "That's only relevant because iterating over a collection is technically n operations, not 1. You need to synchronize for the duration of the logical operation, not n separate synchronizations for n items in the collection. This is all about fencing the allowed execution timeline based on \"happens-before\" rules in Java.\nSo, in a sense, no, peppering synchronized and volatile everywhere isn't good enough to solve every concurrency issue! \ud83d\ude05", "url": "https://github.com/jenkinsci/jenkins/pull/4552#discussion_r393904410", "createdAt": "2020-03-17T19:00:40Z", "author": {"login": "jvz"}, "path": "core/src/main/java/hudson/model/AbstractCIBase.java", "diffHunk": "@@ -89,17 +89,29 @@ protected void killComputer(Computer c) {\n         c.kill();\n     }\n \n-    /* =================================================================================================================\n-    * Package-protected, but accessed API\n-    * ============================================================================================================== */\n+    private final Set<String> disabledAdministrativeMonitors = Collections.synchronizedSet(new HashSet<>());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzM3OTU5MA=="}, "originalCommit": {"oid": "fc046440df3dbb71345af204829762c54e72c4cf"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2NTMyNTgzOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/hudson/model/AdministrativeMonitor.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwODo0MzowMFrOF7Q01g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwODo0NTo1MVrOF7Q7Ug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzY4NTk3NA==", "bodyText": "This seems dangerous, you should check if value is in the set before trying to add or remove it.", "url": "https://github.com/jenkinsci/jenkins/pull/4552#discussion_r397685974", "createdAt": "2020-03-25T08:43:00Z", "author": {"login": "jetersen"}, "path": "core/src/main/java/hudson/model/AdministrativeMonitor.java", "diffHunk": "@@ -118,8 +118,12 @@ public final String getSearchUrl() {\n     public void disable(boolean value) throws IOException {\n         AbstractCIBase jenkins = Jenkins.get();\n         Set<String> set = jenkins.getDisabledAdministrativeMonitors();\n-        if(value)   set.add(id);\n-        else        set.remove(id);\n+        if (value) {\n+            set.add(id);\n+        } else {\n+            set.remove(id);\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "51e1883436a839a22360bf78dc84f3f8d03f6899"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzY4NzYzNA==", "bodyText": "Never mind, hashset is safe to remove or add:\nhttp://hg.openjdk.java.net/jdk8/jdk8/jdk/file/687fd7c7986d/src/share/classes/java/util/HashSet.java", "url": "https://github.com/jenkinsci/jenkins/pull/4552#discussion_r397687634", "createdAt": "2020-03-25T08:45:51Z", "author": {"login": "jetersen"}, "path": "core/src/main/java/hudson/model/AdministrativeMonitor.java", "diffHunk": "@@ -118,8 +118,12 @@ public final String getSearchUrl() {\n     public void disable(boolean value) throws IOException {\n         AbstractCIBase jenkins = Jenkins.get();\n         Set<String> set = jenkins.getDisabledAdministrativeMonitors();\n-        if(value)   set.add(id);\n-        else        set.remove(id);\n+        if (value) {\n+            set.add(id);\n+        } else {\n+            set.remove(id);\n+        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzY4NTk3NA=="}, "originalCommit": {"oid": "51e1883436a839a22360bf78dc84f3f8d03f6899"}, "originalPosition": 10}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 599, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}