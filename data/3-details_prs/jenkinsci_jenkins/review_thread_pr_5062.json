{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIzNDEyMjg0", "number": 5062, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQyMjowMTo0MlrOE6yQNg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQyMjowMzozOVrOE6ySZQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwMDc2MjE0OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/jenkins/model/Jenkins.java", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQyMjowMTo0MlrOH2EFLQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxMjo1NDoxMFrOH3Oi6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjQ1MjAxMw==", "bodyText": "Why are we backporting a cosmetic change that touches security-sensitive code? This feels like an unnecessary risk.", "url": "https://github.com/jenkinsci/jenkins/pull/5062#discussion_r526452013", "createdAt": "2020-11-18T22:01:42Z", "author": {"login": "jglick"}, "path": "core/src/main/java/jenkins/model/Jenkins.java", "diffHunk": "@@ -4820,14 +4820,18 @@ public boolean isSubjectToMandatoryReadPermissionCheck(String restOfPath) {\n         }\n \n         // TODO SlaveComputer.doSlaveAgentJnlp; there should be an annotation to request unprotected access\n-        if (restOfPath.matches(\"/computer/[^/]+/slave-agent[.]jnlp\")\n+        if ((isAgentJnlpPath(restOfPath, \"jenkins\") || (isAgentJnlpPath(restOfPath, \"slave\")))\n             && \"true\".equals(Stapler.getCurrentRequest().getParameter(\"encrypt\"))) {\n             return false;\n         }\n \n         return true;\n     }\n \n+    private boolean isAgentJnlpPath(String restOfPath, String prefix) {\n+        return restOfPath.matches(\"/computer/[^/]+/\" + prefix+ \"-agent[.]jnlp\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3a3b5077694d690be676668b17f2ef35fb96e17e"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjY0NTY1Nw==", "bodyText": "Well, It is that risk vs. terminology fix postponed by 12 weeks. The change seems safe to me. Any other thoughts?", "url": "https://github.com/jenkinsci/jenkins/pull/5062#discussion_r526645657", "createdAt": "2020-11-19T07:29:45Z", "author": {"login": "olivergondza"}, "path": "core/src/main/java/jenkins/model/Jenkins.java", "diffHunk": "@@ -4820,14 +4820,18 @@ public boolean isSubjectToMandatoryReadPermissionCheck(String restOfPath) {\n         }\n \n         // TODO SlaveComputer.doSlaveAgentJnlp; there should be an annotation to request unprotected access\n-        if (restOfPath.matches(\"/computer/[^/]+/slave-agent[.]jnlp\")\n+        if ((isAgentJnlpPath(restOfPath, \"jenkins\") || (isAgentJnlpPath(restOfPath, \"slave\")))\n             && \"true\".equals(Stapler.getCurrentRequest().getParameter(\"encrypt\"))) {\n             return false;\n         }\n \n         return true;\n     }\n \n+    private boolean isAgentJnlpPath(String restOfPath, String prefix) {\n+        return restOfPath.matches(\"/computer/[^/]+/\" + prefix+ \"-agent[.]jnlp\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjQ1MjAxMw=="}, "originalCommit": {"oid": "3a3b5077694d690be676668b17f2ef35fb96e17e"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjY2NjczNw==", "bodyText": "seems fine to me to backport", "url": "https://github.com/jenkinsci/jenkins/pull/5062#discussion_r526666737", "createdAt": "2020-11-19T08:13:43Z", "author": {"login": "timja"}, "path": "core/src/main/java/jenkins/model/Jenkins.java", "diffHunk": "@@ -4820,14 +4820,18 @@ public boolean isSubjectToMandatoryReadPermissionCheck(String restOfPath) {\n         }\n \n         // TODO SlaveComputer.doSlaveAgentJnlp; there should be an annotation to request unprotected access\n-        if (restOfPath.matches(\"/computer/[^/]+/slave-agent[.]jnlp\")\n+        if ((isAgentJnlpPath(restOfPath, \"jenkins\") || (isAgentJnlpPath(restOfPath, \"slave\")))\n             && \"true\".equals(Stapler.getCurrentRequest().getParameter(\"encrypt\"))) {\n             return false;\n         }\n \n         return true;\n     }\n \n+    private boolean isAgentJnlpPath(String restOfPath, String prefix) {\n+        return restOfPath.matches(\"/computer/[^/]+/\" + prefix+ \"-agent[.]jnlp\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjQ1MjAxMw=="}, "originalCommit": {"oid": "3a3b5077694d690be676668b17f2ef35fb96e17e"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzY1MDg2Mg==", "bodyText": "Not a great backport for the same reasons I listed in #5010 (review)", "url": "https://github.com/jenkinsci/jenkins/pull/5062#discussion_r527650862", "createdAt": "2020-11-20T12:11:19Z", "author": {"login": "daniel-beck"}, "path": "core/src/main/java/jenkins/model/Jenkins.java", "diffHunk": "@@ -4820,14 +4820,18 @@ public boolean isSubjectToMandatoryReadPermissionCheck(String restOfPath) {\n         }\n \n         // TODO SlaveComputer.doSlaveAgentJnlp; there should be an annotation to request unprotected access\n-        if (restOfPath.matches(\"/computer/[^/]+/slave-agent[.]jnlp\")\n+        if ((isAgentJnlpPath(restOfPath, \"jenkins\") || (isAgentJnlpPath(restOfPath, \"slave\")))\n             && \"true\".equals(Stapler.getCurrentRequest().getParameter(\"encrypt\"))) {\n             return false;\n         }\n \n         return true;\n     }\n \n+    private boolean isAgentJnlpPath(String restOfPath, String prefix) {\n+        return restOfPath.matches(\"/computer/[^/]+/\" + prefix+ \"-agent[.]jnlp\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjQ1MjAxMw=="}, "originalCommit": {"oid": "3a3b5077694d690be676668b17f2ef35fb96e17e"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzY3MjA0MQ==", "bodyText": "terminology fix postponed by 12 weeks\n\nI think a terminology fix can wait.", "url": "https://github.com/jenkinsci/jenkins/pull/5062#discussion_r527672041", "createdAt": "2020-11-20T12:54:10Z", "author": {"login": "jglick"}, "path": "core/src/main/java/jenkins/model/Jenkins.java", "diffHunk": "@@ -4820,14 +4820,18 @@ public boolean isSubjectToMandatoryReadPermissionCheck(String restOfPath) {\n         }\n \n         // TODO SlaveComputer.doSlaveAgentJnlp; there should be an annotation to request unprotected access\n-        if (restOfPath.matches(\"/computer/[^/]+/slave-agent[.]jnlp\")\n+        if ((isAgentJnlpPath(restOfPath, \"jenkins\") || (isAgentJnlpPath(restOfPath, \"slave\")))\n             && \"true\".equals(Stapler.getCurrentRequest().getParameter(\"encrypt\"))) {\n             return false;\n         }\n \n         return true;\n     }\n \n+    private boolean isAgentJnlpPath(String restOfPath, String prefix) {\n+        return restOfPath.matches(\"/computer/[^/]+/\" + prefix+ \"-agent[.]jnlp\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjQ1MjAxMw=="}, "originalCommit": {"oid": "3a3b5077694d690be676668b17f2ef35fb96e17e"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwMDc2NzczOnYy", "diffSide": "RIGHT", "path": "war/pom.xml", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQyMjowMzozOVrOH2EItA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxMjo1NDo1M1rOH3OkgA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjQ1MjkxNg==", "bodyText": "Why are we backporting this upgrade? Does this solve any user-visible bug?", "url": "https://github.com/jenkinsci/jenkins/pull/5062#discussion_r526452916", "createdAt": "2020-11-18T22:03:39Z", "author": {"login": "jglick"}, "path": "war/pom.xml", "diffHunk": "@@ -103,7 +103,7 @@ THE SOFTWARE.\n       -->\n       <groupId>org.jenkins-ci</groupId>\n       <artifactId>winstone</artifactId>\n-      <version>5.11.1</version>\n+      <version>5.12</version>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3a3b5077694d690be676668b17f2ef35fb96e17e"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjY3NDQ5MQ==", "bodyText": "Good point, it does not. Though it gets rid of the downgraded Jetty inside that we have used to avoid a now fixed regression.\n(Winsone 5.10 and 5.11.1 both contain Jetty 9.4.30.v20200611, while 5.12 have 9.4.33.v20201020.)", "url": "https://github.com/jenkinsci/jenkins/pull/5062#discussion_r526674491", "createdAt": "2020-11-19T08:27:14Z", "author": {"login": "olivergondza"}, "path": "war/pom.xml", "diffHunk": "@@ -103,7 +103,7 @@ THE SOFTWARE.\n       -->\n       <groupId>org.jenkins-ci</groupId>\n       <artifactId>winstone</artifactId>\n-      <version>5.11.1</version>\n+      <version>5.12</version>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjQ1MjkxNg=="}, "originalCommit": {"oid": "3a3b5077694d690be676668b17f2ef35fb96e17e"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzYzNjE1MA==", "bodyText": "To justify the Jetty upgrade, please see GHSA-g3wg-6mcf-8jj6 . \"Local Temp Directory Hijacking Vulnerability\" for temporary directories on some of the operating systems. We have done investigation in the Security team, and so far we do not see a use-case where Jenkins would be affected. At the same time, it would make sense to upgrade. Jetty was updated in 2.264, and I do not see any regressions which would be caused by this upgrade.\nCC @daniel-beck @Wadeck @olamy", "url": "https://github.com/jenkinsci/jenkins/pull/5062#discussion_r527636150", "createdAt": "2020-11-20T11:41:58Z", "author": {"login": "oleg-nenashev"}, "path": "war/pom.xml", "diffHunk": "@@ -103,7 +103,7 @@ THE SOFTWARE.\n       -->\n       <groupId>org.jenkins-ci</groupId>\n       <artifactId>winstone</artifactId>\n-      <version>5.11.1</version>\n+      <version>5.12</version>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjQ1MjkxNg=="}, "originalCommit": {"oid": "3a3b5077694d690be676668b17f2ef35fb96e17e"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzY1MTQyNA==", "bodyText": "I think this is a reasonable backport. We missed the weekly by 1 release, nothing has come up since, and otherwise we'll be bombarded with security scan output for the next 3 months.", "url": "https://github.com/jenkinsci/jenkins/pull/5062#discussion_r527651424", "createdAt": "2020-11-20T12:12:29Z", "author": {"login": "daniel-beck"}, "path": "war/pom.xml", "diffHunk": "@@ -103,7 +103,7 @@ THE SOFTWARE.\n       -->\n       <groupId>org.jenkins-ci</groupId>\n       <artifactId>winstone</artifactId>\n-      <version>5.11.1</version>\n+      <version>5.12</version>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjQ1MjkxNg=="}, "originalCommit": {"oid": "3a3b5077694d690be676668b17f2ef35fb96e17e"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzY3MjQ0OA==", "bodyText": "OK, I was missing this context but agree now.", "url": "https://github.com/jenkinsci/jenkins/pull/5062#discussion_r527672448", "createdAt": "2020-11-20T12:54:53Z", "author": {"login": "jglick"}, "path": "war/pom.xml", "diffHunk": "@@ -103,7 +103,7 @@ THE SOFTWARE.\n       -->\n       <groupId>org.jenkins-ci</groupId>\n       <artifactId>winstone</artifactId>\n-      <version>5.11.1</version>\n+      <version>5.12</version>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjQ1MjkxNg=="}, "originalCommit": {"oid": "3a3b5077694d690be676668b17f2ef35fb96e17e"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 101, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}