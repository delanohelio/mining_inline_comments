{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQxNTc1OTAy", "number": 4825, "title": "[JENKINS-62757] Introduce fingerprint migration in External Storage API", "bodyText": "See JENKINS-62757.\nSee JEP-226.\n\nProposed changelog entries\n\nDeveloper: Migration of fingerprints from local file based storage to configured external storage is introduced.\n\n\nProposed upgrade guidelines\nN/A\nSubmitter checklist\n\n (If applicable) Jira issue is well described\n Changelog entries and upgrade guidelines are appropriate for the audience affected by the change (users or developer, depending on the change). Examples\n\nFill-in the Proposed changelog entries section only if there are breaking changes or other changes which may require extra steps from users during the upgrade\n\n\n Appropriate autotests or explanation to why this change has no tests\n For dependency updates: links to external changelogs and, if possible, full diffs\n\n\nDesired reviewers\n@mention\n\nMaintainer checklist\nBefore the changes are marked as ready-for-merge:\n\n There are at least 2 approvals for the pull request and no outstanding requests for change\n Conversations in the pull request are over OR it is explicit that a reviewer does not block the change\n Changelog entries in the PR title and/or Proposed changelog entries are correct\n Proper changelog labels are set so that the changelog can be generated automatically\n If the change needs additional upgrade steps from users, upgrade-guide-needed label is set and there is a Proposed upgrade guidelines section in the PR title. (example)\n If it would make sense to backport the change to LTS, a Jira issue must exist, be a Bug or Improvement, and be labeled as lts-candidate to be considered (see query).", "createdAt": "2020-06-29T18:23:05Z", "url": "https://github.com/jenkinsci/jenkins/pull/4825", "merged": true, "mergeCommit": {"oid": "885c05cb437e53b20b12def1314fafee9b994828"}, "closed": true, "closedAt": "2020-08-01T07:34:45Z", "author": {"login": "stellargo"}, "timelineItems": {"totalCount": 25, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcwFOy8AH2gAyNDQxNTc1OTAyOmIyYjFiMjdkMzdjYTJmODc2MWY4NWE0MjQ5MmQ4NDBkMjU3MGU5OWQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc57WgkgFqTQ1ODE5MTM1NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "b2b1b27d37ca2f8761f85a42492d840d2570e99d", "author": {"user": {"login": "stellargo", "name": null}}, "url": "https://github.com/jenkinsci/jenkins/commit/b2b1b27d37ca2f8761f85a42492d840d2570e99d", "committedDate": "2020-06-29T18:20:08Z", "message": "Introduce migration"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c81dfb3904529dee26e2f11c1ca284d58ad1e682", "author": {"user": {"login": "stellargo", "name": null}}, "url": "https://github.com/jenkinsci/jenkins/commit/c81dfb3904529dee26e2f11c1ca284d58ad1e682", "committedDate": "2020-07-01T03:13:14Z", "message": "Introduce migration tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6080a6ea4beee3ca8a1fbbb61f601126ea5b463e", "author": {"user": {"login": "stellargo", "name": null}}, "url": "https://github.com/jenkinsci/jenkins/commit/6080a6ea4beee3ca8a1fbbb61f601126ea5b463e", "committedDate": "2020-07-01T03:14:02Z", "message": "Merge remote-tracking branch 'upstream/master' into migration"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ3MzYzOTcz", "url": "https://github.com/jenkinsci/jenkins/pull/4825#pullrequestreview-447363973", "createdAt": "2020-07-13T15:33:54Z", "commit": {"oid": "6080a6ea4beee3ca8a1fbbb61f601126ea5b463e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxNTozMzo1NFrOGwt-qQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxNTozMzo1NFrOGwt-qQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzczODE1Mw==", "bodyText": "Shouldn't this be private? I'm curious why not have a mock for this object.", "url": "https://github.com/jenkinsci/jenkins/pull/4825#discussion_r453738153", "createdAt": "2020-07-13T15:33:54Z", "author": {"login": "afalko"}, "path": "test/src/test/java/jenkins/fingerprints/FingerprintStorageTest.java", "diffHunk": "@@ -0,0 +1,142 @@\n+/*\n+ * The MIT License\n+ *\n+ * Copyright (c) 2020, Jenkins project contributors\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included in\n+ * all copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+ * THE SOFTWARE.\n+ */\n+package jenkins.fingerprints;\n+\n+import hudson.ExtensionList;\n+import hudson.Util;\n+import hudson.model.Fingerprint;\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.jvnet.hudson.test.JenkinsRule;\n+\n+import java.io.IOException;\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.hamcrest.Matchers.equalTo;\n+import static org.hamcrest.Matchers.nullValue;\n+import static org.hamcrest.core.Is.is;\n+import static org.hamcrest.core.IsNot.not;\n+\n+public class FingerprintStorageTest {\n+\n+    @Rule\n+    public JenkinsRule jenkinsRule = new JenkinsRule();\n+\n+    @Test\n+    public void testLoadingAndSavingLocalStorageFingerprintWithExternalStorage() throws IOException {\n+        String id = Util.getDigestOf(\"testLoadingAndSavingLocalStorageFingerprintWithExternalStorage\");\n+        Fingerprint fingerprintSaved = new Fingerprint(null, \"foo.jar\", Util.fromHexString(id));\n+        Fingerprint fingerprintLoaded = Fingerprint.load(id);\n+        assertThat(fingerprintLoaded, is(not(nullValue())));\n+        assertThat(fingerprintSaved.toString(), is(equalTo(fingerprintLoaded.toString())));\n+\n+        // After external storage is configured, check if local storage fingerprint is still accessible.\n+        configureExternalStorage();\n+        fingerprintLoaded = Fingerprint.load(id);\n+        assertThat(fingerprintLoaded, is(not(nullValue())));\n+        assertThat(fingerprintSaved.toString(), is(equalTo(fingerprintLoaded.toString())));\n+\n+        // After loading the fingerprint, ensure it was moved to external storage.\n+        fingerprintLoaded = ExtensionList.lookup(FingerprintStorage.class).get(TestExternalFingerprintStorage.class).load(id);\n+        assertThat(fingerprintLoaded, is(not(nullValue())));\n+        assertThat(fingerprintSaved.toString(), is(equalTo(fingerprintLoaded.toString())));\n+\n+        // Ensure that the loaded fingerprint was deleted from local storage after being loaded.\n+        fingerprintLoaded = ExtensionList.lookup(FingerprintStorage.class).get(FileFingerprintStorage.class).load(id);\n+        assertThat(fingerprintLoaded, is(nullValue()));\n+    }\n+\n+    @Test\n+    public void testLoadingAndSavingFingerprintWithExternalStorage() throws IOException {\n+        configureExternalStorage();\n+        String id = Util.getDigestOf(\"testLoadingAndSavingFingerprintWithExternalStorage\");\n+        Fingerprint fingerprintSaved = new Fingerprint(null, \"bar.jar\", Util.fromHexString(id));\n+        Fingerprint fingerprintLoaded = ExtensionList.lookup(FingerprintStorage.class).get(TestExternalFingerprintStorage.class).load(id);\n+        assertThat(fingerprintLoaded, is(not(nullValue())));\n+        assertThat(fingerprintSaved.toString(), is(equalTo(fingerprintLoaded.toString())));\n+    }\n+\n+    @Test\n+    public void testDeletingLocalStorageFingerprintWithExternalStorageBeforeMigration() throws IOException {\n+        String id = Util.getDigestOf(\"testLoadingAndSavingLocalStorageFingerprintWithExternalStorage\");\n+        new Fingerprint(null, \"foo.jar\", Util.fromHexString(id));\n+        configureExternalStorage();\n+        Fingerprint.delete(id);\n+        Fingerprint fingerprintLoaded = ExtensionList.lookup(FingerprintStorage.class).get(FileFingerprintStorage.class).load(id);\n+        assertThat(fingerprintLoaded, is(nullValue()));\n+    }\n+\n+    @Test\n+    public void testDeletingLocalStorageFingerprintWithExternalStorageAfterMigration() throws IOException {\n+        String id = Util.getDigestOf(\"testLoadingAndSavingLocalStorageFingerprintWithExternalStorage\");\n+        new Fingerprint(null, \"foo.jar\", Util.fromHexString(id));\n+        configureExternalStorage();\n+        Fingerprint.load(id);\n+        Fingerprint.delete(id);\n+        Fingerprint fingerprintLoaded = ExtensionList.lookup(FingerprintStorage.class).get(TestExternalFingerprintStorage.class).load(id);\n+        assertThat(fingerprintLoaded, is(nullValue()));\n+    }\n+\n+    @Test\n+    public void testDeletingFingerprintWithExternalStorage() throws IOException {\n+        configureExternalStorage();\n+        String id = Util.getDigestOf(\"testLoadingAndSavingLocalStorageFingerprintWithExternalStorage\");\n+        configureExternalStorage();\n+        new Fingerprint(null, \"foo.jar\", Util.fromHexString(id));\n+        Fingerprint.delete(id);\n+        Fingerprint fingerprintLoaded = Fingerprint.load(id);\n+        assertThat(fingerprintLoaded, is(nullValue()));\n+    }\n+\n+    private void configureExternalStorage() {\n+        ExtensionList.lookup(FingerprintStorage.class).add(0, new TestExternalFingerprintStorage());\n+    }\n+\n+    public static class TestExternalFingerprintStorage extends FingerprintStorage {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6080a6ea4beee3ca8a1fbbb61f601126ea5b463e"}, "originalPosition": 118}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ3MzY2MDEw", "url": "https://github.com/jenkinsci/jenkins/pull/4825#pullrequestreview-447366010", "createdAt": "2020-07-13T15:36:14Z", "commit": {"oid": "6080a6ea4beee3ca8a1fbbb61f601126ea5b463e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxNTozNjoxNFrOGwuFOA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxNTozNjoxNFrOGwuFOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzczOTgzMg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * In case an external storage is configured on top of a file system based storage, first external storage is\n          \n          \n            \n                 * In case an external storage is configured on top of a file system based storage: \n          \n          \n            \n            \n          \n          \n            \n                 1) External storage is...\n          \n          \n            \n                 2) If not found and fingerprint is present...\n          \n      \n    \n    \n  \n\nThis description is difficult to read, see above suggestion on how to refactor it (basically don't have one long run-on sentence here :))", "url": "https://github.com/jenkinsci/jenkins/pull/4825#discussion_r453739832", "createdAt": "2020-07-13T15:36:14Z", "author": {"login": "afalko"}, "path": "core/src/main/java/hudson/model/Fingerprint.java", "diffHunk": "@@ -1316,6 +1316,10 @@ public Api getApi() {\n      * Loads a {@link Fingerprint} from the Storage with the given unique id.\n      * @return Loaded {@link Fingerprint}. {@code null} if the config file does not exist or\n      * malformed.\n+     *\n+     * In case an external storage is configured on top of a file system based storage, first external storage is", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6080a6ea4beee3ca8a1fbbb61f601126ea5b463e"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ3MzY3MzUy", "url": "https://github.com/jenkinsci/jenkins/pull/4825#pullrequestreview-447367352", "createdAt": "2020-07-13T15:37:15Z", "commit": {"oid": "6080a6ea4beee3ca8a1fbbb61f601126ea5b463e"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2d60c60938aae11b752878c6ead1016d489e260c", "author": {"user": {"login": "stellargo", "name": null}}, "url": "https://github.com/jenkinsci/jenkins/commit/2d60c60938aae11b752878c6ead1016d489e260c", "committedDate": "2020-07-13T17:47:09Z", "message": "Improve docstring"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6bceec85d3976ab6d0d82179fca72d7d4afdb3db", "author": {"user": {"login": "stellargo", "name": null}}, "url": "https://github.com/jenkinsci/jenkins/commit/6bceec85d3976ab6d0d82179fca72d7d4afdb3db", "committedDate": "2020-07-21T01:40:12Z", "message": "Merge remote-tracking branch 'upstream/master' into migration"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "37482c80a1eda5c08486c681e4a0921b3c835aab", "author": {"user": {"login": "stellargo", "name": null}}, "url": "https://github.com/jenkinsci/jenkins/commit/37482c80a1eda5c08486c681e4a0921b3c835aab", "committedDate": "2020-07-21T04:31:20Z", "message": "Resolve merge conflicts"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bf6089752af196a3f93d4c22cac6a7a61d4d1c58", "author": {"user": {"login": "stellargo", "name": null}}, "url": "https://github.com/jenkinsci/jenkins/commit/bf6089752af196a3f93d4c22cac6a7a61d4d1c58", "committedDate": "2020-07-21T04:49:14Z", "message": "Refactor code due to merge"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU0MjI2NTg4", "url": "https://github.com/jenkinsci/jenkins/pull/4825#pullrequestreview-454226588", "createdAt": "2020-07-23T15:02:17Z", "commit": {"oid": "bf6089752af196a3f93d4c22cac6a7a61d4d1c58"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e7a4e30d15dd0297bb7f2bb8f6860931d48b6063", "author": {"user": {"login": "stellargo", "name": null}}, "url": "https://github.com/jenkinsci/jenkins/commit/e7a4e30d15dd0297bb7f2bb8f6860931d48b6063", "committedDate": "2020-07-23T17:52:56Z", "message": "Merge remote-tracking branch 'upstream/master' into migration"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU0NDUzNTUz", "url": "https://github.com/jenkinsci/jenkins/pull/4825#pullrequestreview-454453553", "createdAt": "2020-07-23T20:00:56Z", "commit": {"oid": "e7a4e30d15dd0297bb7f2bb8f6860931d48b6063"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QyMDowMDo1NlrOG2ZjhA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QyMDowMjowMlrOG2ZluA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTY5NDk4MA==", "bodyText": "Would be better to cache the storage implementations as local variables (current storage and then the Filesystem one). Apart from performance benefits, it reduces the chance of the logic exploding in unlikely case when the Storage gets reconfigured in the middle of the load() operation. Multi-threading \ud83e\udd37", "url": "https://github.com/jenkinsci/jenkins/pull/4825#discussion_r459694980", "createdAt": "2020-07-23T20:00:56Z", "author": {"login": "oleg-nenashev"}, "path": "core/src/main/java/hudson/model/Fingerprint.java", "diffHunk": "@@ -1324,7 +1328,17 @@ public Api getApi() {\n         }\n \n         Fingerprint loaded = FingerprintStorage.get().load(id);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e7a4e30d15dd0297bb7f2bb8f6860931d48b6063"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTY5NTU0NA==", "bodyText": "Same as above", "url": "https://github.com/jenkinsci/jenkins/pull/4825#discussion_r459695544", "createdAt": "2020-07-23T20:02:02Z", "author": {"login": "oleg-nenashev"}, "path": "core/src/main/java/hudson/model/Fingerprint.java", "diffHunk": "@@ -1357,12 +1371,17 @@ public Api getApi() {\n     }\n \n     /**\n-     * Deletes the {@link Fingerprint} in the Storage with the given unique id.\n+     * Deletes the {@link Fingerprint} in the configured storage with the given unique id.\n      *\n      * @since TODO\n      */\n     public static void delete(@NonNull String id) throws IOException {\n         FingerprintStorage.get().delete(id);\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e7a4e30d15dd0297bb7f2bb8f6860931d48b6063"}, "originalPosition": 41}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "38dbfa81e9862b3ef93b521f0f6c4f1d4cbc6dd3", "author": {"user": {"login": "stellargo", "name": null}}, "url": "https://github.com/jenkinsci/jenkins/commit/38dbfa81e9862b3ef93b521f0f6c4f1d4cbc6dd3", "committedDate": "2020-07-24T03:50:49Z", "message": "Cache storages"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6565ef747078648567091789b429b820bde0ce7d", "author": {"user": {"login": "stellargo", "name": null}}, "url": "https://github.com/jenkinsci/jenkins/commit/6565ef747078648567091789b429b820bde0ce7d", "committedDate": "2020-07-24T03:51:09Z", "message": "Merge remote-tracking branch 'upstream/master' into migration"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU1NTMwNDM3", "url": "https://github.com/jenkinsci/jenkins/pull/4825#pullrequestreview-455530437", "createdAt": "2020-07-27T07:24:51Z", "commit": {"oid": "6565ef747078648567091789b429b820bde0ce7d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e1cc4c91cf32382fdae027523fba4acad243b269", "author": {"user": {"login": "stellargo", "name": null}}, "url": "https://github.com/jenkinsci/jenkins/commit/e1cc4c91cf32382fdae027523fba4acad243b269", "committedDate": "2020-07-27T07:30:10Z", "message": "Merge remote-tracking branch 'upstream/master' into migration"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a724fa3da2ed7a21e2fa2df4ae9e66016f319e47", "author": {"user": {"login": "stellargo", "name": null}}, "url": "https://github.com/jenkinsci/jenkins/commit/a724fa3da2ed7a21e2fa2df4ae9e66016f319e47", "committedDate": "2020-07-27T13:45:42Z", "message": "Fix for undeleted in memory fingerprints"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e1a70243ee8f56ec90b28139fb7c14e4aac0d4ee", "author": {"user": {"login": "stellargo", "name": null}}, "url": "https://github.com/jenkinsci/jenkins/commit/e1a70243ee8f56ec90b28139fb7c14e4aac0d4ee", "committedDate": "2020-07-27T14:00:09Z", "message": "Add testMigrationDeletesFingerprintsInMemoryFromFileStorage test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f0fdca2b4ecf3c293010712b0e497a005722f7da", "author": {"user": {"login": "stellargo", "name": null}}, "url": "https://github.com/jenkinsci/jenkins/commit/f0fdca2b4ecf3c293010712b0e497a005722f7da", "committedDate": "2020-07-27T16:39:39Z", "message": "Remove enabled check"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1ad67c33749895994d242c80a9410a554618b8a8", "author": {"user": {"login": "stellargo", "name": null}}, "url": "https://github.com/jenkinsci/jenkins/commit/1ad67c33749895994d242c80a9410a554618b8a8", "committedDate": "2020-07-27T16:42:34Z", "message": "Update comment"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "314f7bae9a1ae7dae4e3d840f640d33c319d1227", "author": {"user": {"login": "stellargo", "name": null}}, "url": "https://github.com/jenkinsci/jenkins/commit/314f7bae9a1ae7dae4e3d840f640d33c319d1227", "committedDate": "2020-07-27T16:53:54Z", "message": "Update comment"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a2293db3130f5e1dc38fcb9d71f5f3b34fc21743", "author": {"user": {"login": "stellargo", "name": null}}, "url": "https://github.com/jenkinsci/jenkins/commit/a2293db3130f5e1dc38fcb9d71f5f3b34fc21743", "committedDate": "2020-07-28T20:09:23Z", "message": "MIN->DAY"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5b1e8ee17969a72dcc206b6f21f80dfb065a37ef", "author": {"user": {"login": "stellargo", "name": null}}, "url": "https://github.com/jenkinsci/jenkins/commit/5b1e8ee17969a72dcc206b6f21f80dfb065a37ef", "committedDate": "2020-07-28T20:10:50Z", "message": "Merge remote-tracking branch 'upstream/master' into migration"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU4MTkxMzU1", "url": "https://github.com/jenkinsci/jenkins/pull/4825#pullrequestreview-458191355", "createdAt": "2020-07-30T08:28:45Z", "commit": {"oid": "5b1e8ee17969a72dcc206b6f21f80dfb065a37ef"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2094, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}