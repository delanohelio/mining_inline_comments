{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDUyNDMzNDkx", "number": 4851, "title": "Tests: Refactoring of various things", "bodyText": "fixed deprecation warnings,\nsimplified JUnit assertions and\nremoved obsolete throws Exception statements\nAdded some missing @NonNull\nUse of StandardCharsets\n\nProposed changelog entries\n\nN/A\n\n\nProposed upgrade guidelines\nN/A\nSubmitter checklist\n\n (If applicable) Jira issue is well described\n Changelog entries and upgrade guidelines are appropriate for the audience affected by the change (users or developer, depending on the change). Examples\n\nFill-in the Proposed changelog entries section only if there are breaking changes or other changes which may require extra steps from users during the upgrade\n\n\n Appropriate autotests or explanation to why this change has no tests\n For dependency updates: links to external changelogs and, if possible, full diffs\n\n\nDesired reviewers\n@mention\n\nMaintainer checklist\nBefore the changes are marked as ready-for-merge:\n\n There are at least 2 approvals for the pull request and no outstanding requests for change\n Conversations in the pull request are over OR it is explicit that a reviewer does not block the change\n Changelog entries in the PR title and/or Proposed changelog entries are correct\n Proper changelog labels are set so that the changelog can be generated automatically\n If the change needs additional upgrade steps from users, upgrade-guide-needed label is set and there is a Proposed upgrade guidelines section in the PR title. (example)\n If it would make sense to backport the change to LTS, a Jira issue must exist, be a Bug or Improvement, and be labeled as lts-candidate to be considered (see query).", "createdAt": "2020-07-19T08:35:58Z", "url": "https://github.com/jenkinsci/jenkins/pull/4851", "merged": true, "mergeCommit": {"oid": "eb636e252161d8952b9536214dd8a0ec439a3ad7"}, "closed": true, "closedAt": "2020-07-21T03:16:07Z", "author": {"login": "StefanSpieker"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc2Y0yFAH2gAyNDUyNDMzNDkxOmZkNDAyMjk0ZTU0NzYzZGI5NzVmOTNiMmJlYjNiZTU3OTM1Njk1MDc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc2wI4OAFqTQ1MTUyOTY0MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "fd402294e54763db975f93b2beb3be5793569507", "author": {"user": {"login": "StefanSpieker", "name": "Stefan Spieker"}}, "url": "https://github.com/jenkinsci/jenkins/commit/fd402294e54763db975f93b2beb3be5793569507", "committedDate": "2020-07-19T08:33:22Z", "message": "fixed deprecation warnings, simplified JUnit assertions and removed obsolete throws Exception statements"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUxMTE3NTMx", "url": "https://github.com/jenkinsci/jenkins/pull/4851#pullrequestreview-451117531", "createdAt": "2020-07-19T10:10:11Z", "commit": {"oid": "fd402294e54763db975f93b2beb3be5793569507"}, "state": "COMMENTED", "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xOVQxMDoxMDoxMVrOGzuTGA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xOVQxMDoyNzoyOFrOGzuZ2w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njg4OTExMg==", "bodyText": "There are some * imports that can also be refactored, and isEmptyString() matcher can probably be not imported.", "url": "https://github.com/jenkinsci/jenkins/pull/4851#discussion_r456889112", "createdAt": "2020-07-19T10:10:11Z", "author": {"login": "stellargo"}, "path": "test/src/test/java/hudson/LauncherTest.java", "diffHunk": "@@ -271,10 +273,10 @@ private void assertMultipleStdioCalls(String message, Node node, boolean emitStd\n         assertEquals(message, 0, ps.join());\n         if (outputIn2) {\n             assertThat(message, baos2.toString(), containsString(\"hello\"));\n-            assertThat(message, baos1.toString(), isEmptyString());\n+            assertThat(message, baos1.toString(), is(emptyString()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fd402294e54763db975f93b2beb3be5793569507"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njg4OTY2Nw==", "bodyText": "What would be the motivation behind this?", "url": "https://github.com/jenkinsci/jenkins/pull/4851#discussion_r456889667", "createdAt": "2020-07-19T10:16:03Z", "author": {"login": "stellargo"}, "path": "test/src/test/java/hudson/model/AbstractItemSecurityTest.java", "diffHunk": "@@ -80,7 +82,7 @@ public void testUpdateByXmlDoesNotFail() throws Exception {\n                 \"</project>\";\n \n         FreeStyleProject project = jenkinsRule.createFreeStyleProject(\"security-167\");\n-        project.updateByXml((StreamSource) new StreamSource(new StringReader(xml)));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fd402294e54763db975f93b2beb3be5793569507"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njg4OTc3NQ==", "bodyText": "What would be the motivation behind this?", "url": "https://github.com/jenkinsci/jenkins/pull/4851#discussion_r456889775", "createdAt": "2020-07-19T10:16:54Z", "author": {"login": "stellargo"}, "path": "test/src/test/java/hudson/model/AbstractItemSecurityTest.java", "diffHunk": "@@ -59,7 +61,7 @@ public void testUpdateByXmlDoesNotProcessForeignResources() throws Exception {\n         FreeStyleProject project = jenkinsRule.createFreeStyleProject(\"security-167\");\n         project.setDescription(\"Wibble\");\n         try {\n-            project.updateByXml(new StreamSource(new StringReader(xml)));\n+            project.updateByXml((Source)new StreamSource(new StringReader(xml)));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fd402294e54763db975f93b2beb3be5793569507"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njg5MDE3NA==", "bodyText": "Why not remove this entirely? Also in the other edited files, and move completely to hamcrest.", "url": "https://github.com/jenkinsci/jenkins/pull/4851#discussion_r456890174", "createdAt": "2020-07-19T10:21:01Z", "author": {"login": "stellargo"}, "path": "test/src/test/java/hudson/model/DirectoryBrowserSupportTest.java", "diffHunk": "@@ -60,6 +62,7 @@\n import static org.junit.Assert.assertEquals;\n import static org.junit.Assert.assertFalse;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fd402294e54763db975f93b2beb3be5793569507"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njg5MDQ2NQ==", "bodyText": "What would be the motivation behind this?", "url": "https://github.com/jenkinsci/jenkins/pull/4851#discussion_r456890465", "createdAt": "2020-07-19T10:23:43Z", "author": {"login": "stellargo"}, "path": "test/src/test/java/hudson/model/ItemsTest.java", "diffHunk": "@@ -242,7 +242,7 @@ private void cannotOverwrite(String target) throws Exception {\n                         .withRedirectEnabled(false)\n                         .withThrowExceptionOnFailingStatusCode(false);\n                 WebResponse webResponse = wc.getPage(new WebRequest(new URL(wc.getContextPath() + \"createItem?name=\" + target + \"&mode=hudson.model.FreeStyleProject\"), HttpMethod.POST)).getWebResponse();\n-                if (webResponse.getStatusCode() != HttpStatus.SC_MOVED_TEMPORARILY) {\n+                if (webResponse.getStatusCode() != HttpURLConnection.HTTP_MOVED_TEMP) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fd402294e54763db975f93b2beb3be5793569507"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njg5MDc1NA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    assertTrue(booleanParameterInput.isChecked());\n          \n          \n            \n                    assertThat(booleanParameterInput.isChecked(), is(true));\n          \n      \n    \n    \n  \n\nYou can move this to hamcrest too like previous files.", "url": "https://github.com/jenkinsci/jenkins/pull/4851#discussion_r456890754", "createdAt": "2020-07-19T10:26:26Z", "author": {"login": "stellargo"}, "path": "test/src/test/java/hudson/model/ParametersTest.java", "diffHunk": "@@ -75,7 +76,7 @@ public void parameterTypes() throws Exception {\n         Object o = DomNodeUtil.selectSingleNode(element, \".//input[@name='value']\");\n         System.out.println(o);\n         HtmlCheckBoxInput booleanParameterInput = (HtmlCheckBoxInput) o;\n-        assertEquals(true, booleanParameterInput.isChecked());\n+        assertTrue(booleanParameterInput.isChecked());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fd402294e54763db975f93b2beb3be5793569507"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njg5MDc5Mg==", "bodyText": "Here too hamcrest maybe?", "url": "https://github.com/jenkinsci/jenkins/pull/4851#discussion_r456890792", "createdAt": "2020-07-19T10:26:51Z", "author": {"login": "stellargo"}, "path": "test/src/test/java/hudson/security/HudsonPrivateSecurityRealmTest.java", "diffHunk": "@@ -294,7 +294,7 @@ public void selfRegistrationTriggerLoggedIn() throws Exception {\n \n         createAccountByAdmin(\"alice\");\n         // no new event in such case\n-        assertEquals(true, spySecurityListener.loggedInUsernames.isEmpty());\n+        assertTrue(spySecurityListener.loggedInUsernames.isEmpty());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fd402294e54763db975f93b2beb3be5793569507"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njg5MDg0Mw==", "bodyText": "Here also use hamcrest?", "url": "https://github.com/jenkinsci/jenkins/pull/4851#discussion_r456890843", "createdAt": "2020-07-19T10:27:28Z", "author": {"login": "stellargo"}, "path": "test/src/test/java/hudson/tasks/FingerprinterTest.java", "diffHunk": "@@ -259,8 +259,8 @@ public boolean perform(AbstractBuild<?, ?> build, Launcher launcher, BuildListen\n         Collection<Fingerprint> fingerprints = action.getFingerprints().values();\n         for (Fingerprint f: fingerprints) {\n             assertTrue(f.getOriginal().is(upstream));\n-            assertTrue(f.getOriginal().getName().equals(renamedProject1));\n-            assertFalse(f.getOriginal().getName().equals(oldUpstreamName));\n+            assertEquals(f.getOriginal().getName(), renamedProject1);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fd402294e54763db975f93b2beb3be5793569507"}, "originalPosition": 6}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7878cd727755c19193295ed62c97678f276fffd6", "author": {"user": {"login": "StefanSpieker", "name": "Stefan Spieker"}}, "url": "https://github.com/jenkinsci/jenkins/commit/7878cd727755c19193295ed62c97678f276fffd6", "committedDate": "2020-07-19T19:17:08Z", "message": "removed star imports"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUxMjk4MjA2", "url": "https://github.com/jenkinsci/jenkins/pull/4851#pullrequestreview-451298206", "createdAt": "2020-07-20T05:06:19Z", "commit": {"oid": "7878cd727755c19193295ed62c97678f276fffd6"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUxMzY2MDk2", "url": "https://github.com/jenkinsci/jenkins/pull/4851#pullrequestreview-451366096", "createdAt": "2020-07-20T07:41:23Z", "commit": {"oid": "7878cd727755c19193295ed62c97678f276fffd6"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUxNTI5NjQw", "url": "https://github.com/jenkinsci/jenkins/pull/4851#pullrequestreview-451529640", "createdAt": "2020-07-20T11:43:08Z", "commit": {"oid": "7878cd727755c19193295ed62c97678f276fffd6"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2162, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}