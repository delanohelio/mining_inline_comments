{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcwMjA4MDQ2", "number": 4469, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQwOTozNzo0NVrODdngrA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QxMzo0ODo1N1rODeBrDA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyMzgyNjM2OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/hudson/model/Items.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQwOTozNzo0NVrOFmUm6A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQwOTozNzo0NVrOFmUm6A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTcyNzg0OA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    return allItems(authentication, root, type, t->true);\n          \n          \n            \n                    return allItems(authentication, root, type, t -> true);", "url": "https://github.com/jenkinsci/jenkins/pull/4469#discussion_r375727848", "createdAt": "2020-02-06T09:37:45Z", "author": {"login": "varyvol"}, "path": "core/src/main/java/hudson/model/Items.java", "diffHunk": "@@ -449,7 +486,26 @@ public static XmlFile getConfigFile(Item item) {\n      * @since 2.37\n      */\n     public static <T extends Item> Iterable<T> allItems(Authentication authentication, ItemGroup root, Class<T> type) {\n-        return new AllItemsIterable<>(root, authentication, type);\n+        return allItems(authentication, root, type, t->true);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c560b87bbfad86c81e86f25742402c557e3f68b"}, "originalPosition": 87}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyMzgzMDI5OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/jenkins/model/Jenkins.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQwOTozODo1NFrOFmUpTA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQwOTozODo1NFrOFmUpTA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTcyODQ2MA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    return getItems(t->true);\n          \n          \n            \n                    return getItems(t -> true);", "url": "https://github.com/jenkinsci/jenkins/pull/4469#discussion_r375728460", "createdAt": "2020-02-06T09:38:54Z", "author": {"login": "varyvol"}, "path": "core/src/main/java/jenkins/model/Jenkins.java", "diffHunk": "@@ -1775,12 +1776,21 @@ public String getFullDisplayName() {\n      */\n     @Exported(name=\"jobs\")\n     public List<TopLevelItem> getItems() {\n+        return getItems(t->true);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c560b87bbfad86c81e86f25742402c557e3f68b"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyMzgzMTA2OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/jenkins/model/Jenkins.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQwOTozOTowOVrOFmUpyQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQxMjoxMDoyMVrOFmY7lQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTcyODU4NQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * Gets just the immediate children of {@link Jenkins} based on supplied predicate.\n          \n          \n            \n                 * Gets just the immediate child of {@link Jenkins} based on supplied predicate.", "url": "https://github.com/jenkinsci/jenkins/pull/4469#discussion_r375728585", "createdAt": "2020-02-06T09:39:09Z", "author": {"login": "varyvol"}, "path": "core/src/main/java/jenkins/model/Jenkins.java", "diffHunk": "@@ -1775,12 +1776,21 @@ public String getFullDisplayName() {\n      */\n     @Exported(name=\"jobs\")\n     public List<TopLevelItem> getItems() {\n+        return getItems(t->true);\n+    }\n+\n+    /**\n+     * Gets just the immediate children of {@link Jenkins} based on supplied predicate.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c560b87bbfad86c81e86f25742402c557e3f68b"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTc1MjEzOA==", "bodyText": "Since its a list of items it should be children instead of child", "url": "https://github.com/jenkinsci/jenkins/pull/4469#discussion_r375752138", "createdAt": "2020-02-06T10:24:47Z", "author": {"login": "res0nance"}, "path": "core/src/main/java/jenkins/model/Jenkins.java", "diffHunk": "@@ -1775,12 +1776,21 @@ public String getFullDisplayName() {\n      */\n     @Exported(name=\"jobs\")\n     public List<TopLevelItem> getItems() {\n+        return getItems(t->true);\n+    }\n+\n+    /**\n+     * Gets just the immediate children of {@link Jenkins} based on supplied predicate.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTcyODU4NQ=="}, "originalCommit": {"oid": "8c560b87bbfad86c81e86f25742402c557e3f68b"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTc5ODY3Nw==", "bodyText": "Ah, right!", "url": "https://github.com/jenkinsci/jenkins/pull/4469#discussion_r375798677", "createdAt": "2020-02-06T12:10:21Z", "author": {"login": "varyvol"}, "path": "core/src/main/java/jenkins/model/Jenkins.java", "diffHunk": "@@ -1775,12 +1776,21 @@ public String getFullDisplayName() {\n      */\n     @Exported(name=\"jobs\")\n     public List<TopLevelItem> getItems() {\n+        return getItems(t->true);\n+    }\n+\n+    /**\n+     * Gets just the immediate children of {@link Jenkins} based on supplied predicate.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTcyODU4NQ=="}, "originalCommit": {"oid": "8c560b87bbfad86c81e86f25742402c557e3f68b"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyMzgzNTI3OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/hudson/model/ItemGroup.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQwOTo0MDoyNVrOFmUsMw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQwNDoyNDo0NFrOFn9Mog==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTcyOTIwMw==", "bodyText": "Not important at all, but maybe using stream + predicate?", "url": "https://github.com/jenkinsci/jenkins/pull/4469#discussion_r375729203", "createdAt": "2020-02-06T09:40:25Z", "author": {"login": "varyvol"}, "path": "core/src/main/java/hudson/model/ItemGroup.java", "diffHunk": "@@ -55,6 +57,21 @@\n      */\n     Collection<T> getItems();\n \n+    /**\n+     * Gets all the items in this collection in a read-only view\n+     * that matches supplied Predicate\n+     * @since TODO\n+     */\n+     default Collection<T> getItems(Predicate<T> pred) {\n+         List<T> filteredItems = new ArrayList<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c560b87bbfad86c81e86f25742402c557e3f68b"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzQ0MTQ0Mg==", "bodyText": "Implemented", "url": "https://github.com/jenkinsci/jenkins/pull/4469#discussion_r377441442", "createdAt": "2020-02-11T04:24:44Z", "author": {"login": "res0nance"}, "path": "core/src/main/java/hudson/model/ItemGroup.java", "diffHunk": "@@ -55,6 +57,21 @@\n      */\n     Collection<T> getItems();\n \n+    /**\n+     * Gets all the items in this collection in a read-only view\n+     * that matches supplied Predicate\n+     * @since TODO\n+     */\n+     default Collection<T> getItems(Predicate<T> pred) {\n+         List<T> filteredItems = new ArrayList<>();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTcyOTIwMw=="}, "originalCommit": {"oid": "8c560b87bbfad86c81e86f25742402c557e3f68b"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyODExMjc2OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/hudson/model/ItemGroup.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QxMzo0ODo1N1rOFm9iPg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQwNDoyNzowOVrOFn9OLw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjM5ODM5OA==", "bodyText": "Would it make sense to create a default Stream<T> getItemsStream() method so that ItemGroup implementations can supply more efficient stream implementations which would not require creating a full list first. Will be important if we ever do job lazy loading and so on", "url": "https://github.com/jenkinsci/jenkins/pull/4469#discussion_r376398398", "createdAt": "2020-02-07T13:48:57Z", "author": {"login": "oleg-nenashev"}, "path": "core/src/main/java/hudson/model/ItemGroup.java", "diffHunk": "@@ -55,6 +58,17 @@\n      */\n     Collection<T> getItems();\n \n+    /**\n+     * Gets all the items in this collection in a read-only view\n+     * that matches supplied Predicate\n+     * @since TODO\n+     */\n+     default Collection<T> getItems(Predicate<T> pred) {\n+         return getItems().stream()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c7592c2ae1ec661a965a0341b6551283391c93f2"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjY4ODk3MA==", "bodyText": "It probably would be 2 functions\ndefault Stream<T> getItemsStream()\nand\ndefault Stream<T> getItemsStream(Predicate<T> pred)\nSo it still does preauth filtering since once ItemGroup is responsible for security checks. Unless we want to offload that to the caller", "url": "https://github.com/jenkinsci/jenkins/pull/4469#discussion_r376688970", "createdAt": "2020-02-08T05:25:20Z", "author": {"login": "res0nance"}, "path": "core/src/main/java/hudson/model/ItemGroup.java", "diffHunk": "@@ -55,6 +58,17 @@\n      */\n     Collection<T> getItems();\n \n+    /**\n+     * Gets all the items in this collection in a read-only view\n+     * that matches supplied Predicate\n+     * @since TODO\n+     */\n+     default Collection<T> getItems(Predicate<T> pred) {\n+         return getItems().stream()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjM5ODM5OA=="}, "originalCommit": {"oid": "c7592c2ae1ec661a965a0341b6551283391c93f2"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzQ0MTgzOQ==", "bodyText": "Added stream methods.", "url": "https://github.com/jenkinsci/jenkins/pull/4469#discussion_r377441839", "createdAt": "2020-02-11T04:27:09Z", "author": {"login": "res0nance"}, "path": "core/src/main/java/hudson/model/ItemGroup.java", "diffHunk": "@@ -55,6 +58,17 @@\n      */\n     Collection<T> getItems();\n \n+    /**\n+     * Gets all the items in this collection in a read-only view\n+     * that matches supplied Predicate\n+     * @since TODO\n+     */\n+     default Collection<T> getItems(Predicate<T> pred) {\n+         return getItems().stream()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjM5ODM5OA=="}, "originalCommit": {"oid": "c7592c2ae1ec661a965a0341b6551283391c93f2"}, "originalPosition": 23}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 743, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}