{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA3NTA2NDAz", "number": 4684, "title": "JENKINS-61956 ItemGroupMixin#createProject() does not call Jenkins#checkGoodName()", "bodyText": "https://issues.jenkins-ci.org/browse/JENKINS-61956", "createdAt": "2020-04-22T19:48:53Z", "url": "https://github.com/jenkinsci/jenkins/pull/4684", "merged": true, "mergeCommit": {"oid": "c091890537b6b40ccb20d1e1d597c0d451d4ba74"}, "closed": true, "closedAt": "2020-05-14T17:36:37Z", "author": {"login": "calvinpark"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcaZYi6gFqTM5ODkxNjc4NA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcd0NfUgFqTQwNDY3MjUzNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk4OTE2Nzg0", "url": "https://github.com/jenkinsci/jenkins/pull/4684#pullrequestreview-398916784", "createdAt": "2020-04-23T09:22:33Z", "commit": {"oid": "f6dddefc2d1cf005afa7dbc0a55750670da2f1cb"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk5NjIwMzEy", "url": "https://github.com/jenkinsci/jenkins/pull/4684#pullrequestreview-399620312", "createdAt": "2020-04-24T03:45:31Z", "commit": {"oid": "058027b2bfbb1cd5285c406dcb7d810eee91cc6b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "058027b2bfbb1cd5285c406dcb7d810eee91cc6b", "author": {"user": {"login": "calvinpark", "name": "Calvin Park"}}, "url": "https://github.com/jenkinsci/jenkins/commit/058027b2bfbb1cd5285c406dcb7d810eee91cc6b", "committedDate": "2020-04-24T03:07:08Z", "message": "Add tests"}, "afterCommit": {"oid": "1321c9e0467d494a293f621f3d2eee9169f24d8f", "author": {"user": {"login": "calvinpark", "name": "Calvin Park"}}, "url": "https://github.com/jenkinsci/jenkins/commit/1321c9e0467d494a293f621f3d2eee9169f24d8f", "committedDate": "2020-04-24T20:42:49Z", "message": "Retry CI"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA0NTY4MjU3", "url": "https://github.com/jenkinsci/jenkins/pull/4684#pullrequestreview-404568257", "createdAt": "2020-05-02T23:32:09Z", "commit": {"oid": "1321c9e0467d494a293f621f3d2eee9169f24d8f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMlQyMzozMjowOVrOGPnCKA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMlQyMzozMjowOVrOGPnCKA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTAyMTM1Mg==", "bodyText": "JUnit assertThrows is now available (JUnit 4.13) to make these types of assertion checks cleaner.\nLearned something new here, that the Failure class is a Jenkins exception class.", "url": "https://github.com/jenkinsci/jenkins/pull/4684#discussion_r419021352", "createdAt": "2020-05-02T23:32:09Z", "author": {"login": "MarkEWaite"}, "path": "test/src/test/java/hudson/model/ItemGroupMixInTest.java", "diffHunk": "@@ -207,4 +208,62 @@ public boolean isApplicable(Class jobType) {\n         assertThat(Items.getConfigFile(foo).asString(), containsString(\"<description/>\"));\n     }\n \n+  @Issue(\"JENKINS-61956\")\n+  @Test\n+  public void copy_checkGoodName() throws Failure, IOException {\n+    final String goodName = \"calvin-jenkins\";\n+    final String badName = \"calvin@jenkins\";\n+\n+    Project goodProject = r.jenkins.createProject(FreeStyleProject.class, goodName);\n+\n+    try {\n+      r.jenkins.copy(goodProject, badName);\n+      fail(\"@ is an unsafe character therefore copying to a project named \" + badName + \" should have failed\");\n+    } catch (Failure x) {\n+      assertEquals(x.getMessage(), Messages.Hudson_UnsafeChar(\"@\"));\n+    }\n+  }\n+\n+  @Issue(\"JENKINS-61956\")\n+  @Test\n+  public void createProject_checkGoodName() throws Failure, IOException {\n+    final String badName = \"calvin@jenkins\";\n+\n+    try {\n+      r.jenkins.createProject(MockFolder.class, badName);\n+      fail(\"@ is an unsafe character therefore creating a folder named \" + badName + \" should have failed\");\n+    } catch (Failure x) {\n+      assertEquals(x.getMessage(), Messages.Hudson_UnsafeChar(\"@\"));\n+    }\n+  }\n+\n+  @Issue(\"JENKINS-61956\")\n+  @Test\n+  public void createProjectFromXML_checkGoodName() throws Failure, IOException {\n+    final String badName = \"calvin@jenkins\";\n+\n+    final String xml = \"<?xml version='1.0' encoding='UTF-8'?>\\n\" +\n+            \"<!DOCTYPE project[\\n\" +\n+            \"  <!ENTITY foo SYSTEM \\\"file:///\\\">\\n\" +\n+            \"]>\\n\" +\n+            \"<project>\\n\" +\n+            \"  <actions/>\\n\" +\n+            \"  <description>&foo;</description>\\n\" +\n+            \"  <keepDependencies>false</keepDependencies>\\n\" +\n+            \"  <properties/>\\n\" +\n+            \"  <scm class=\\\"hudson.scm.NullSCM\\\"/>\\n\" +\n+            \"  <canRoam>true</canRoam>\\n\" +\n+            \"  <triggers/>\\n\" +\n+            \"  <builders/>\\n\" +\n+            \"  <publishers/>\\n\" +\n+            \"  <buildWrappers/>\\n\" +\n+            \"</project>\";\n+\n+    try {\n+      r.jenkins.createProjectFromXML(badName, new ByteArrayInputStream(xml.getBytes()));\n+      fail(\"@ is an unsafe character therefore creating a project named \" + badName + \" should have failed\");\n+    } catch (Failure x) {\n+      assertEquals(x.getMessage(), Messages.Hudson_UnsafeChar(\"@\"));\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1321c9e0467d494a293f621f3d2eee9169f24d8f"}, "originalPosition": 68}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f176292eb4a41c007a97b86ff767ccb36707c1e6", "author": {"user": {"login": "calvinpark", "name": "Calvin Park"}}, "url": "https://github.com/jenkinsci/jenkins/commit/f176292eb4a41c007a97b86ff767ccb36707c1e6", "committedDate": "2020-05-03T21:30:55Z", "message": "JENKINS-61956 ItemGroupMixing#createProject() does not call Jenkins#checkGoodName"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0d69820eeee68467a43b15883b8858cf5068f929", "author": {"user": {"login": "calvinpark", "name": "Calvin Park"}}, "url": "https://github.com/jenkinsci/jenkins/commit/0d69820eeee68467a43b15883b8858cf5068f929", "committedDate": "2020-05-03T21:30:55Z", "message": "@ is an unsafe character therefore do not use in a project name"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "59d7ea11eaee94f498bdc1a4fd81a9a62dde0287", "author": {"user": {"login": "calvinpark", "name": "Calvin Park"}}, "url": "https://github.com/jenkinsci/jenkins/commit/59d7ea11eaee94f498bdc1a4fd81a9a62dde0287", "committedDate": "2020-05-03T21:30:55Z", "message": "Add tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "273ad34072d4f8f19d969043e524f486faa98599", "author": {"user": {"login": "calvinpark", "name": "Calvin Park"}}, "url": "https://github.com/jenkinsci/jenkins/commit/273ad34072d4f8f19d969043e524f486faa98599", "committedDate": "2020-05-03T21:30:55Z", "message": "Use assertThrows()"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1321c9e0467d494a293f621f3d2eee9169f24d8f", "author": {"user": {"login": "calvinpark", "name": "Calvin Park"}}, "url": "https://github.com/jenkinsci/jenkins/commit/1321c9e0467d494a293f621f3d2eee9169f24d8f", "committedDate": "2020-04-24T20:42:49Z", "message": "Retry CI"}, "afterCommit": {"oid": "273ad34072d4f8f19d969043e524f486faa98599", "author": {"user": {"login": "calvinpark", "name": "Calvin Park"}}, "url": "https://github.com/jenkinsci/jenkins/commit/273ad34072d4f8f19d969043e524f486faa98599", "committedDate": "2020-05-03T21:30:55Z", "message": "Use assertThrows()"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA0NjcyNTM3", "url": "https://github.com/jenkinsci/jenkins/pull/4684#pullrequestreview-404672537", "createdAt": "2020-05-04T00:19:41Z", "commit": {"oid": "273ad34072d4f8f19d969043e524f486faa98599"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1110, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}