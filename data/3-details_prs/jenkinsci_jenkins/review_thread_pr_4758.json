{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI1NDQ0MDkx", "number": 4758, "reviewThreads": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxNzowMjoxMFrOEBcRfQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxMzozNDo0NlrOELsAeg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5OTQ3MjYxOnYy", "diffSide": "RIGHT", "path": "test/src/test/java/hudson/console/HyperlinkNoteTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxNzowMjoxMFrOGdSj6g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxNzowMjoxMFrOGdSj6g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzM2NTk5NA==", "bodyText": "Please don't make this change.  The org.junit.Assert.assertThat is deprecated in JUnit 4.13 and was recently removed from all uses in Jenkins core.  This is adding a deprecated method that was already configured to use the preferred new method.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            import static org.junit.Assert.assertThat;\n          \n          \n            \n            import static org.hamcrest.MatcherAssert.assertThat;", "url": "https://github.com/jenkinsci/jenkins/pull/4758#discussion_r433365994", "createdAt": "2020-06-01T17:02:10Z", "author": {"login": "MarkEWaite"}, "path": "test/src/test/java/hudson/console/HyperlinkNoteTest.java", "diffHunk": "@@ -35,9 +39,13 @@\n import org.jvnet.hudson.test.Issue;\n import org.jvnet.hudson.test.JenkinsRule;\n \n+import com.gargoylesoftware.htmlunit.ElementNotFoundException;\n+import com.gargoylesoftware.htmlunit.html.HtmlAnchor;\n+import com.gargoylesoftware.htmlunit.html.HtmlPage;\n+\n import static org.hamcrest.Matchers.allOf;\n import static org.hamcrest.Matchers.containsString;\n-import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.junit.Assert.assertThat;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4e0e9c9e7ed772cf1887f56d2e856cf957655324"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5OTQ4MTczOnYy", "diffSide": "RIGHT", "path": "test/src/test/java/hudson/console/HyperlinkNoteTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxNzowNDo1NVrOGdSpmA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxNzowNDo1NVrOGdSpmA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzM2NzQ0OA==", "bodyText": "Please use consistent indentation when adding new code.  The changing indentation within this single method makes the pull request more difficult to read.\nMost integrated development environments (Netbeans, IntelliJ, Visual Studio Code) provide automatic formatting that can be applied to subsections (like this new block of code).\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    r.waitUntilNoActivity();\n          \n          \n            \n                r.waitUntilNoActivity();", "url": "https://github.com/jenkinsci/jenkins/pull/4758#discussion_r433367448", "createdAt": "2020-06-01T17:04:55Z", "author": {"login": "MarkEWaite"}, "path": "test/src/test/java/hudson/console/HyperlinkNoteTest.java", "diffHunk": "@@ -72,6 +80,28 @@ public void textWithNewlinesModelHyperlinkNote() throws Exception {\n                 containsString(new ModelHyperlinkNote(\"\", 0).extraAttributes()),\n                 containsString(\">\" + noteTextSanitized + \"</a>\")));\n     }\n+    \n+    @Test\n+    public void textWithSingleQuote() throws Exception {\n+    \tFreeStyleProject upstream = r.createFreeStyleProject(\"upstream\");\n+    \tr.createFreeStyleProject(\"d0wnstr3'am\");\n+    \tupstream.getPublishersList().add(new BuildTrigger(\"d0wnstr3'am\", Result.SUCCESS));\n+    \tFreeStyleBuild b = r.buildAndAssertSuccess(upstream);\n+        r.waitUntilNoActivity();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4e0e9c9e7ed772cf1887f56d2e856cf957655324"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5OTQ4NDY3OnYy", "diffSide": "RIGHT", "path": "test/src/test/java/hudson/console/HyperlinkNoteTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxNzowNTo1NlrOGdSriw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxNzowNTo1NlrOGdSriw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzM2Nzk0Nw==", "bodyText": "Debugging println statements are better expressed as assertions of an expectation or can be removed if their debugging purpose has been completed.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    System.out.println(\"Before:\\n\"+rsp.getWebResponse().getContentAsString()+\"\\n\\n\");", "url": "https://github.com/jenkinsci/jenkins/pull/4758#discussion_r433367947", "createdAt": "2020-06-01T17:05:56Z", "author": {"login": "MarkEWaite"}, "path": "test/src/test/java/hudson/console/HyperlinkNoteTest.java", "diffHunk": "@@ -72,6 +80,28 @@ public void textWithNewlinesModelHyperlinkNote() throws Exception {\n                 containsString(new ModelHyperlinkNote(\"\", 0).extraAttributes()),\n                 containsString(\">\" + noteTextSanitized + \"</a>\")));\n     }\n+    \n+    @Test\n+    public void textWithSingleQuote() throws Exception {\n+    \tFreeStyleProject upstream = r.createFreeStyleProject(\"upstream\");\n+    \tr.createFreeStyleProject(\"d0wnstr3'am\");\n+    \tupstream.getPublishersList().add(new BuildTrigger(\"d0wnstr3'am\", Result.SUCCESS));\n+    \tFreeStyleBuild b = r.buildAndAssertSuccess(upstream);\n+        r.waitUntilNoActivity();\n+        HtmlPage rsp = r.createWebClient().goTo(b.getUrl()+\"console\");\n+        System.out.println(\"Before:\\n\"+rsp.getWebResponse().getContentAsString()+\"\\n\\n\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4e0e9c9e7ed772cf1887f56d2e856cf957655324"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5OTQ5Mzk3OnYy", "diffSide": "RIGHT", "path": "test/src/test/java/hudson/console/HyperlinkNoteTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxNzowOTowMlrOGdSxlQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxNzowOTowMlrOGdSxlQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzM2OTQ5Mw==", "bodyText": "Catching exceptions inside test code is often a sign that the test conditions are not clear.\nI believe that you expect this to always succeed.  When it fails, you want the failure message to provide enough information so that the failure can be diagnosed.  Since it is failing in CI, that likely indicates that you should add more assertions to check for additional cases.", "url": "https://github.com/jenkinsci/jenkins/pull/4758#discussion_r433369493", "createdAt": "2020-06-01T17:09:02Z", "author": {"login": "MarkEWaite"}, "path": "test/src/test/java/hudson/console/HyperlinkNoteTest.java", "diffHunk": "@@ -72,6 +80,28 @@ public void textWithNewlinesModelHyperlinkNote() throws Exception {\n                 containsString(new ModelHyperlinkNote(\"\", 0).extraAttributes()),\n                 containsString(\">\" + noteTextSanitized + \"</a>\")));\n     }\n+    \n+    @Test\n+    public void textWithSingleQuote() throws Exception {\n+    \tFreeStyleProject upstream = r.createFreeStyleProject(\"upstream\");\n+    \tr.createFreeStyleProject(\"d0wnstr3'am\");\n+    \tupstream.getPublishersList().add(new BuildTrigger(\"d0wnstr3'am\", Result.SUCCESS));\n+    \tFreeStyleBuild b = r.buildAndAssertSuccess(upstream);\n+        r.waitUntilNoActivity();\n+        HtmlPage rsp = r.createWebClient().goTo(b.getUrl()+\"console\");\n+        System.out.println(\"Before:\\n\"+rsp.getWebResponse().getContentAsString()+\"\\n\\n\");\n+        //This would fail if job name has `'`\n+        try {\n+        \tassertThat(String.valueOf(rsp.getAnchorByText(\"d0wnstr3'am\").click().getWebResponse().getStatusCode()), containsString(\"200\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4e0e9c9e7ed772cf1887f56d2e856cf957655324"}, "originalPosition": 43}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5OTQ5OTI4OnYy", "diffSide": "RIGHT", "path": "test/src/test/java/hudson/console/HyperlinkNoteTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxNzoxMDo1MFrOGdS1KQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxNzoxMDo1MFrOGdS1KQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzM3MDQwOQ==", "bodyText": "You could assert that the list of anchors returned by rsp.getAnchors() contains specific items, knowing that when the assertion fails, Hamcrest will print the contents of the list for diagnosis.", "url": "https://github.com/jenkinsci/jenkins/pull/4758#discussion_r433370409", "createdAt": "2020-06-01T17:10:50Z", "author": {"login": "MarkEWaite"}, "path": "test/src/test/java/hudson/console/HyperlinkNoteTest.java", "diffHunk": "@@ -72,6 +80,28 @@ public void textWithNewlinesModelHyperlinkNote() throws Exception {\n                 containsString(new ModelHyperlinkNote(\"\", 0).extraAttributes()),\n                 containsString(\">\" + noteTextSanitized + \"</a>\")));\n     }\n+    \n+    @Test\n+    public void textWithSingleQuote() throws Exception {\n+    \tFreeStyleProject upstream = r.createFreeStyleProject(\"upstream\");\n+    \tr.createFreeStyleProject(\"d0wnstr3'am\");\n+    \tupstream.getPublishersList().add(new BuildTrigger(\"d0wnstr3'am\", Result.SUCCESS));\n+    \tFreeStyleBuild b = r.buildAndAssertSuccess(upstream);\n+        r.waitUntilNoActivity();\n+        HtmlPage rsp = r.createWebClient().goTo(b.getUrl()+\"console\");\n+        System.out.println(\"Before:\\n\"+rsp.getWebResponse().getContentAsString()+\"\\n\\n\");\n+        //This would fail if job name has `'`\n+        try {\n+        \tassertThat(String.valueOf(rsp.getAnchorByText(\"d0wnstr3'am\").click().getWebResponse().getStatusCode()), containsString(\"200\"));\n+        } catch(Exception enfe) {\n+        \tString str = \"str->\\n\";\n+\t\t\tstr += rsp.getWebResponse().getContentAsString()+\"\\n\\n\";\n+        \tfor(HtmlAnchor ha: rsp.getAnchors()) {\n+        \t\tstr += \"getNameAttribute: \" + ha.getNameAttribute() + \" getTextContent: \" + ha.getTextContent() + \"\\n\";\n+        \t}\n+        \tthrow new Exception(str);\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4e0e9c9e7ed772cf1887f56d2e856cf957655324"}, "originalPosition": 51}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxMDQxODI5OnYy", "diffSide": "RIGHT", "path": "test/src/test/java/hudson/console/HyperlinkNoteTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQwOTo0NTo0MlrOGe-GyQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxMToxNjozMFrOGfBHbA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTEyODAwOQ==", "bodyText": "So you want to verify the link to the downstream job exists and that by clicking it, you are able to launch it?", "url": "https://github.com/jenkinsci/jenkins/pull/4758#discussion_r435128009", "createdAt": "2020-06-04T09:45:42Z", "author": {"login": "varyvol"}, "path": "test/src/test/java/hudson/console/HyperlinkNoteTest.java", "diffHunk": "@@ -72,7 +78,20 @@ public void textWithNewlinesModelHyperlinkNote() throws Exception {\n                 containsString(new ModelHyperlinkNote(\"\", 0).extraAttributes()),\n                 containsString(\">\" + noteTextSanitized + \"</a>\")));\n     }\n+    \n+    \n+    @Test\n+    public void textWithSingleQuote() throws Exception {\n+        FreeStyleProject upstream = r.createFreeStyleProject(\"upstream\");\n+        r.createFreeStyleProject(\"d0wnstr3'am\");\n+        upstream.getPublishersList().add(new BuildTrigger(\"d0wnstr3'am\", Result.SUCCESS));\n+        FreeStyleBuild b = r.buildAndAssertSuccess(upstream);\n+        r.waitUntilNoActivity();\n+        HtmlPage rsp = r.createWebClient().goTo(b.getUrl()+\"console\");\n+        assertThat(String.valueOf(rsp.getAnchorByText(\"d0wnstr3'am\").click().getWebResponse().getStatusCode()), containsString(\"200\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c649a46525301d5a0863b7ec1f25bd7a8c470c77"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTE3NzMyNA==", "bodyText": "So you want to verify the link to the downstream job exists and that by clicking it, you are able to launch it?\n\nRight! and thats working fine on my system. But it seems that no downstream build is being triggered here.", "url": "https://github.com/jenkinsci/jenkins/pull/4758#discussion_r435177324", "createdAt": "2020-06-04T11:16:30Z", "author": {"login": "Absh-Day"}, "path": "test/src/test/java/hudson/console/HyperlinkNoteTest.java", "diffHunk": "@@ -72,7 +78,20 @@ public void textWithNewlinesModelHyperlinkNote() throws Exception {\n                 containsString(new ModelHyperlinkNote(\"\", 0).extraAttributes()),\n                 containsString(\">\" + noteTextSanitized + \"</a>\")));\n     }\n+    \n+    \n+    @Test\n+    public void textWithSingleQuote() throws Exception {\n+        FreeStyleProject upstream = r.createFreeStyleProject(\"upstream\");\n+        r.createFreeStyleProject(\"d0wnstr3'am\");\n+        upstream.getPublishersList().add(new BuildTrigger(\"d0wnstr3'am\", Result.SUCCESS));\n+        FreeStyleBuild b = r.buildAndAssertSuccess(upstream);\n+        r.waitUntilNoActivity();\n+        HtmlPage rsp = r.createWebClient().goTo(b.getUrl()+\"console\");\n+        assertThat(String.valueOf(rsp.getAnchorByText(\"d0wnstr3'am\").click().getWebResponse().getStatusCode()), containsString(\"200\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTEyODAwOQ=="}, "originalCommit": {"oid": "c649a46525301d5a0863b7ec1f25bd7a8c470c77"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxMDQyMjM4OnYy", "diffSide": "RIGHT", "path": "test/src/test/java/hudson/console/HyperlinkNoteTest.java", "isResolved": true, "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQwOTo0Njo0MlrOGe-JTA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxODowMDo0NlrOGsYDaQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTEyODY1Mg==", "bodyText": "Also the test is failing because it's not able to look for the link. Maybe you need to use here the escaped text?", "url": "https://github.com/jenkinsci/jenkins/pull/4758#discussion_r435128652", "createdAt": "2020-06-04T09:46:42Z", "author": {"login": "varyvol"}, "path": "test/src/test/java/hudson/console/HyperlinkNoteTest.java", "diffHunk": "@@ -72,7 +78,20 @@ public void textWithNewlinesModelHyperlinkNote() throws Exception {\n                 containsString(new ModelHyperlinkNote(\"\", 0).extraAttributes()),\n                 containsString(\">\" + noteTextSanitized + \"</a>\")));\n     }\n+    \n+    \n+    @Test\n+    public void textWithSingleQuote() throws Exception {\n+        FreeStyleProject upstream = r.createFreeStyleProject(\"upstream\");\n+        r.createFreeStyleProject(\"d0wnstr3'am\");\n+        upstream.getPublishersList().add(new BuildTrigger(\"d0wnstr3'am\", Result.SUCCESS));\n+        FreeStyleBuild b = r.buildAndAssertSuccess(upstream);\n+        r.waitUntilNoActivity();\n+        HtmlPage rsp = r.createWebClient().goTo(b.getUrl()+\"console\");\n+        assertThat(String.valueOf(rsp.getAnchorByText(\"d0wnstr3'am\").click().getWebResponse().getStatusCode()), containsString(\"200\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c649a46525301d5a0863b7ec1f25bd7a8c470c77"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTE3OTEzMQ==", "bodyText": "Also the test is failing because it's not able to look for the link. Maybe you need to use here the escaped text?\n\nWhen I tried printing all anchors(getAnchors), there was no downstream project anchor here, but it did exist on my system.\nJust to show please see the Error section here:\nhttps://ci.jenkins.io/blue/organizations/jenkins/Core%2Fjenkins/detail/PR-4758/3/tests/", "url": "https://github.com/jenkinsci/jenkins/pull/4758#discussion_r435179131", "createdAt": "2020-06-04T11:20:09Z", "author": {"login": "Absh-Day"}, "path": "test/src/test/java/hudson/console/HyperlinkNoteTest.java", "diffHunk": "@@ -72,7 +78,20 @@ public void textWithNewlinesModelHyperlinkNote() throws Exception {\n                 containsString(new ModelHyperlinkNote(\"\", 0).extraAttributes()),\n                 containsString(\">\" + noteTextSanitized + \"</a>\")));\n     }\n+    \n+    \n+    @Test\n+    public void textWithSingleQuote() throws Exception {\n+        FreeStyleProject upstream = r.createFreeStyleProject(\"upstream\");\n+        r.createFreeStyleProject(\"d0wnstr3'am\");\n+        upstream.getPublishersList().add(new BuildTrigger(\"d0wnstr3'am\", Result.SUCCESS));\n+        FreeStyleBuild b = r.buildAndAssertSuccess(upstream);\n+        r.waitUntilNoActivity();\n+        HtmlPage rsp = r.createWebClient().goTo(b.getUrl()+\"console\");\n+        assertThat(String.valueOf(rsp.getAnchorByText(\"d0wnstr3'am\").click().getWebResponse().getStatusCode()), containsString(\"200\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTEyODY1Mg=="}, "originalCommit": {"oid": "c649a46525301d5a0863b7ec1f25bd7a8c470c77"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTI5MjIxNQ==", "bodyText": "I'm not sure about why it works on your systme. Are you sure you commited and pushed all your changes?\nAbout the test itself, it's quite confusing to be honest. I believe you should split the sentence into two:\n\nCheck the button exists.\nClick and check the downstream job has been executed.", "url": "https://github.com/jenkinsci/jenkins/pull/4758#discussion_r435292215", "createdAt": "2020-06-04T14:15:37Z", "author": {"login": "varyvol"}, "path": "test/src/test/java/hudson/console/HyperlinkNoteTest.java", "diffHunk": "@@ -72,7 +78,20 @@ public void textWithNewlinesModelHyperlinkNote() throws Exception {\n                 containsString(new ModelHyperlinkNote(\"\", 0).extraAttributes()),\n                 containsString(\">\" + noteTextSanitized + \"</a>\")));\n     }\n+    \n+    \n+    @Test\n+    public void textWithSingleQuote() throws Exception {\n+        FreeStyleProject upstream = r.createFreeStyleProject(\"upstream\");\n+        r.createFreeStyleProject(\"d0wnstr3'am\");\n+        upstream.getPublishersList().add(new BuildTrigger(\"d0wnstr3'am\", Result.SUCCESS));\n+        FreeStyleBuild b = r.buildAndAssertSuccess(upstream);\n+        r.waitUntilNoActivity();\n+        HtmlPage rsp = r.createWebClient().goTo(b.getUrl()+\"console\");\n+        assertThat(String.valueOf(rsp.getAnchorByText(\"d0wnstr3'am\").click().getWebResponse().getStatusCode()), containsString(\"200\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTEyODY1Mg=="}, "originalCommit": {"oid": "c649a46525301d5a0863b7ec1f25bd7a8c470c77"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTMxMzIzNg==", "bodyText": "I'm not sure about why it works on your systme. Are you sure you commited and pushed all your changes?\nAbout the test itself, it's quite confusing to be honest. I believe you should split the sentence into two:\n\nCheck the button exists.\nClick and check the downstream job has been executed.\n\n\nSure thing. I will update it with more clarity.", "url": "https://github.com/jenkinsci/jenkins/pull/4758#discussion_r435313236", "createdAt": "2020-06-04T14:42:40Z", "author": {"login": "Absh-Day"}, "path": "test/src/test/java/hudson/console/HyperlinkNoteTest.java", "diffHunk": "@@ -72,7 +78,20 @@ public void textWithNewlinesModelHyperlinkNote() throws Exception {\n                 containsString(new ModelHyperlinkNote(\"\", 0).extraAttributes()),\n                 containsString(\">\" + noteTextSanitized + \"</a>\")));\n     }\n+    \n+    \n+    @Test\n+    public void textWithSingleQuote() throws Exception {\n+        FreeStyleProject upstream = r.createFreeStyleProject(\"upstream\");\n+        r.createFreeStyleProject(\"d0wnstr3'am\");\n+        upstream.getPublishersList().add(new BuildTrigger(\"d0wnstr3'am\", Result.SUCCESS));\n+        FreeStyleBuild b = r.buildAndAssertSuccess(upstream);\n+        r.waitUntilNoActivity();\n+        HtmlPage rsp = r.createWebClient().goTo(b.getUrl()+\"console\");\n+        assertThat(String.valueOf(rsp.getAnchorByText(\"d0wnstr3'am\").click().getWebResponse().getStatusCode()), containsString(\"200\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTEyODY1Mg=="}, "originalCommit": {"oid": "c649a46525301d5a0863b7ec1f25bd7a8c470c77"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTQyMzUzMA==", "bodyText": "@Absh-Day did you have some time to update this?", "url": "https://github.com/jenkinsci/jenkins/pull/4758#discussion_r445423530", "createdAt": "2020-06-25T09:20:36Z", "author": {"login": "varyvol"}, "path": "test/src/test/java/hudson/console/HyperlinkNoteTest.java", "diffHunk": "@@ -72,7 +78,20 @@ public void textWithNewlinesModelHyperlinkNote() throws Exception {\n                 containsString(new ModelHyperlinkNote(\"\", 0).extraAttributes()),\n                 containsString(\">\" + noteTextSanitized + \"</a>\")));\n     }\n+    \n+    \n+    @Test\n+    public void textWithSingleQuote() throws Exception {\n+        FreeStyleProject upstream = r.createFreeStyleProject(\"upstream\");\n+        r.createFreeStyleProject(\"d0wnstr3'am\");\n+        upstream.getPublishersList().add(new BuildTrigger(\"d0wnstr3'am\", Result.SUCCESS));\n+        FreeStyleBuild b = r.buildAndAssertSuccess(upstream);\n+        r.waitUntilNoActivity();\n+        HtmlPage rsp = r.createWebClient().goTo(b.getUrl()+\"console\");\n+        assertThat(String.valueOf(rsp.getAnchorByText(\"d0wnstr3'am\").click().getWebResponse().getStatusCode()), containsString(\"200\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTEyODY1Mg=="}, "originalCommit": {"oid": "c649a46525301d5a0863b7ec1f25bd7a8c470c77"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjY3NTYxMQ==", "bodyText": "@Absh-Day did you have some time to update this?\n\nI have modified the test, I am trying finding the console output of the parent build and want to see if it triggered downstream build by checking the existence of text \"Triggering a new build of\".\nOn my system \"rsp.querySelector(\".console-output\").asText()\" prints:\n\"\nLegacy code started this job.  No cause information is available\nRunning as SYSTEM\nBuilding in workspace C:\\Users\\abhinavkumar.singh\\Desktop\\Useful\\jenkins\\test\\target\\j h8731051363356794503\\wxorkspace\\upstream\nTriggering a new build of d0wnstr3'am\nFinished: SUCCESS\"", "url": "https://github.com/jenkinsci/jenkins/pull/4758#discussion_r446675611", "createdAt": "2020-06-28T17:20:53Z", "author": {"login": "Absh-Day"}, "path": "test/src/test/java/hudson/console/HyperlinkNoteTest.java", "diffHunk": "@@ -72,7 +78,20 @@ public void textWithNewlinesModelHyperlinkNote() throws Exception {\n                 containsString(new ModelHyperlinkNote(\"\", 0).extraAttributes()),\n                 containsString(\">\" + noteTextSanitized + \"</a>\")));\n     }\n+    \n+    \n+    @Test\n+    public void textWithSingleQuote() throws Exception {\n+        FreeStyleProject upstream = r.createFreeStyleProject(\"upstream\");\n+        r.createFreeStyleProject(\"d0wnstr3'am\");\n+        upstream.getPublishersList().add(new BuildTrigger(\"d0wnstr3'am\", Result.SUCCESS));\n+        FreeStyleBuild b = r.buildAndAssertSuccess(upstream);\n+        r.waitUntilNoActivity();\n+        HtmlPage rsp = r.createWebClient().goTo(b.getUrl()+\"console\");\n+        assertThat(String.valueOf(rsp.getAnchorByText(\"d0wnstr3'am\").click().getWebResponse().getStatusCode()), containsString(\"200\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTEyODY1Mg=="}, "originalCommit": {"oid": "c649a46525301d5a0863b7ec1f25bd7a8c470c77"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTE4NDYxNw==", "bodyText": "@varyvol adding r.jenkins.rebuildDependencyGraph(); worked.", "url": "https://github.com/jenkinsci/jenkins/pull/4758#discussion_r449184617", "createdAt": "2020-07-02T18:00:46Z", "author": {"login": "Absh-Day"}, "path": "test/src/test/java/hudson/console/HyperlinkNoteTest.java", "diffHunk": "@@ -72,7 +78,20 @@ public void textWithNewlinesModelHyperlinkNote() throws Exception {\n                 containsString(new ModelHyperlinkNote(\"\", 0).extraAttributes()),\n                 containsString(\">\" + noteTextSanitized + \"</a>\")));\n     }\n+    \n+    \n+    @Test\n+    public void textWithSingleQuote() throws Exception {\n+        FreeStyleProject upstream = r.createFreeStyleProject(\"upstream\");\n+        r.createFreeStyleProject(\"d0wnstr3'am\");\n+        upstream.getPublishersList().add(new BuildTrigger(\"d0wnstr3'am\", Result.SUCCESS));\n+        FreeStyleBuild b = r.buildAndAssertSuccess(upstream);\n+        r.waitUntilNoActivity();\n+        HtmlPage rsp = r.createWebClient().goTo(b.getUrl()+\"console\");\n+        assertThat(String.valueOf(rsp.getAnchorByText(\"d0wnstr3'am\").click().getWebResponse().getStatusCode()), containsString(\"200\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTEyODY1Mg=="}, "originalCommit": {"oid": "c649a46525301d5a0863b7ec1f25bd7a8c470c77"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwNjg4NDU0OnYy", "diffSide": "RIGHT", "path": "test/src/test/java/hudson/console/HyperlinkNoteTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxMzoyODoyOFrOGtXQWQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxMzoyODoyOFrOGtXQWQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDIyMDEyMQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\tassertThat(String.valueOf(rsp.getAnchorByText(\"d0wnstr3'am\").click().getWebResponse().getStatusCode()), containsString(\"200\"));\n          \n          \n            \n                    assertThat(String.valueOf(rsp.getAnchorByText(\"d0wnstr3'am\").click().getWebResponse().getStatusCode()), containsString(\"200\"));", "url": "https://github.com/jenkinsci/jenkins/pull/4758#discussion_r450220121", "createdAt": "2020-07-06T13:28:28Z", "author": {"login": "jglick"}, "path": "test/src/test/java/hudson/console/HyperlinkNoteTest.java", "diffHunk": "@@ -72,7 +78,22 @@ public void textWithNewlinesModelHyperlinkNote() throws Exception {\n                 containsString(new ModelHyperlinkNote(\"\", 0).extraAttributes()),\n                 containsString(\">\" + noteTextSanitized + \"</a>\")));\n     }\n+    \n+    \n+    @Test\n+    public void textWithSingleQuote() throws Exception {\n+        FreeStyleProject upstream = r.createFreeStyleProject(\"upstream\");\n+        r.createFreeStyleProject(\"d0wnstr3'am\");\n+        upstream.getPublishersList().add(new BuildTrigger(\"d0wnstr3'am\", Result.SUCCESS));\n+        r.jenkins.rebuildDependencyGraph();\n+        FreeStyleBuild b = r.buildAndAssertSuccess(upstream);\n+        r.waitUntilNoActivity();\n+        HtmlPage rsp = r.createWebClient().goTo(b.getUrl()+\"console\");\n+        assertThat(rsp.querySelector(\".console-output\").asText(), containsString(\"Triggering a new build of\"));\n+\t\tassertThat(String.valueOf(rsp.getAnchorByText(\"d0wnstr3'am\").click().getWebResponse().getStatusCode()), containsString(\"200\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e31fdc3483e51b8f8a952d668ca66e747e28bef1"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwNjkwODEwOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/hudson/console/HyperlinkNote.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxMzozNDo0NlrOGtXfWg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxMzozNDo0NlrOGtXfWg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDIyMzk2Mg==", "bodyText": "Note that this code is using ' where most generated markup uses \", though it should not make any difference (Util.escape will escape both if they happen to be present in the URL).", "url": "https://github.com/jenkinsci/jenkins/pull/4758#discussion_r450223962", "createdAt": "2020-07-06T13:34:46Z", "author": {"login": "jglick"}, "path": "core/src/main/java/hudson/console/HyperlinkNote.java", "diffHunk": "@@ -69,7 +70,7 @@ public ConsoleAnnotator annotate(Object context, MarkupText text, int charPos) {\n                 url = Jenkins.get().getRootUrl()+url.substring(1);\n             }\n         }\n-        text.addMarkup(charPos, charPos + length, \"<a href='\" + url + \"'\"+extraAttributes()+\">\", \"</a>\");\n+        text.addMarkup(charPos, charPos + length, \"<a href='\" + Util.escape(url) + \"'\"+extraAttributes()+\">\", \"</a>\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e31fdc3483e51b8f8a952d668ca66e747e28bef1"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 419, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}