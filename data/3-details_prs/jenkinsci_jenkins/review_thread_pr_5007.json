{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA0ODU5MTg3", "number": 5007, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQxNDoxMzo1MFrOEuiV9Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQxNDo0NzozNVrOEujebQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE3MjMyNjI5OnYy", "diffSide": "RIGHT", "path": "test/src/test/java/hudson/model/labels/LabelAtomTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQxNDoxMzo1MFrOHjAmMw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQxNDoxMzo1MFrOHjAmMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjQ3MTk4Nw==", "bodyText": "Failures may be clearer with\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    assertThat(l3.getNodes().isEmpty(), is(true));\n          \n          \n            \n                    assertThat(l3.getNodes(), is(empty()));", "url": "https://github.com/jenkinsci/jenkins/pull/5007#discussion_r506471987", "createdAt": "2020-10-16T14:13:50Z", "author": {"login": "MarkEWaite"}, "path": "test/src/test/java/hudson/model/labels/LabelAtomTest.java", "diffHunk": "@@ -20,5 +26,57 @@ public void selfLabel() throws Exception {\n         assertThat(self.isSelfLabel(), is(true));\n         Label label = new LabelAtom(\"label\");\n         assertThat(label.isSelfLabel(), is(false));\n+        Label selfJenkins = j.jenkins.getLabel(\"node\");\n+        assertThat(selfJenkins.isSelfLabel(), is(true));\n+    }\n+\n+    @Test\n+    public void getNodes() throws Exception {\n+        Node n1 = j.createSlave(\"n1\", \"label\", null);\n+        Node n2 = j.createSlave(\"n2\", \"label label2\", null);\n+        Node n3 = j.createSlave(\"n3\", \"label2\", null);\n+        Label l = j.jenkins.getLabel(\"label\");\n+        Label l2 = j.jenkins.getLabel(\"label2\");\n+        Label l3 = j.jenkins.getLabel(\"label3\");\n+        assertThat(l.getNodes().size(), is(2));\n+        assertThat(l.getNodes(), containsInAnyOrder(n1,n2));\n+        assertThat(l2.getNodes().size(), is(2));\n+        assertThat(l2.getNodes(), containsInAnyOrder(n3,n2));\n+        assertThat(l3.getNodes().isEmpty(), is(true));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c5ee796a4a9f99ab5cace83ff32ab70259e9bd9"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE3MjMyODc3OnYy", "diffSide": "RIGHT", "path": "test/src/test/java/hudson/model/labels/LabelAtomTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQxNDoxNDoxOVrOHjAnxg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQxNDoxNDoxOVrOHjAnxg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjQ3MjM5MA==", "bodyText": "Failures may be clearer to the reader with\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    assertThat(l2.getClouds().isEmpty(), is(true));\n          \n          \n            \n                    assertThat(l2.getClouds(), is(empty()));", "url": "https://github.com/jenkinsci/jenkins/pull/5007#discussion_r506472390", "createdAt": "2020-10-16T14:14:19Z", "author": {"login": "MarkEWaite"}, "path": "test/src/test/java/hudson/model/labels/LabelAtomTest.java", "diffHunk": "@@ -20,5 +26,57 @@ public void selfLabel() throws Exception {\n         assertThat(self.isSelfLabel(), is(true));\n         Label label = new LabelAtom(\"label\");\n         assertThat(label.isSelfLabel(), is(false));\n+        Label selfJenkins = j.jenkins.getLabel(\"node\");\n+        assertThat(selfJenkins.isSelfLabel(), is(true));\n+    }\n+\n+    @Test\n+    public void getNodes() throws Exception {\n+        Node n1 = j.createSlave(\"n1\", \"label\", null);\n+        Node n2 = j.createSlave(\"n2\", \"label label2\", null);\n+        Node n3 = j.createSlave(\"n3\", \"label2\", null);\n+        Label l = j.jenkins.getLabel(\"label\");\n+        Label l2 = j.jenkins.getLabel(\"label2\");\n+        Label l3 = j.jenkins.getLabel(\"label3\");\n+        assertThat(l.getNodes().size(), is(2));\n+        assertThat(l.getNodes(), containsInAnyOrder(n1,n2));\n+        assertThat(l2.getNodes().size(), is(2));\n+        assertThat(l2.getNodes(), containsInAnyOrder(n3,n2));\n+        assertThat(l3.getNodes().isEmpty(), is(true));\n+    }\n+\n+    @Test\n+    public void getClouds() {\n+        Cloud test = new TestCloud(\"test\", \"label\");\n+        j.jenkins.clouds.add(test);\n+        Label l = new LabelAtom(\"label\");\n+        Label l2 = new LabelAtom(\"label2\");\n+        assertThat(l.getClouds().size(), is(1));\n+        assertThat(l.getClouds(), containsInAnyOrder(test));\n+        assertThat(l2.getClouds().isEmpty(), is(true));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c5ee796a4a9f99ab5cace83ff32ab70259e9bd9"}, "originalPosition": 49}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE3MjUxMTgxOnYy", "diffSide": "RIGHT", "path": "test/src/test/java/hudson/model/labels/LabelAtomTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQxNDo0NzozNVrOHjChHg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQxNDo0NzozNVrOHjChHg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjUwMzQ1NA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            import static org.hamcrest.Matchers.is;\n          \n          \n            \n            import static org.hamcrest.Matchers.is;\n          \n          \n            \n            import static org.hamcrest.Matchers.empty;", "url": "https://github.com/jenkinsci/jenkins/pull/5007#discussion_r506503454", "createdAt": "2020-10-16T14:47:35Z", "author": {"login": "res0nance"}, "path": "test/src/test/java/hudson/model/labels/LabelAtomTest.java", "diffHunk": "@@ -1,11 +1,17 @@\n package hudson.model.labels;\n \n import hudson.model.Label;\n+import hudson.model.Node;\n+import hudson.slaves.Cloud;\n import org.junit.Rule;\n import org.junit.Test;\n import org.jvnet.hudson.test.JenkinsRule;\n \n+import java.util.ArrayList;\n+import java.util.List;\n+\n import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.hamcrest.Matchers.containsInAnyOrder;\n import static org.hamcrest.Matchers.is;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c5ee796a4a9f99ab5cace83ff32ab70259e9bd9"}, "originalPosition": 15}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 244, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}