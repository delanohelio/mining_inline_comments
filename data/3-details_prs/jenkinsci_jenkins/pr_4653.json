{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAzMzQwMTkw", "number": 4653, "title": "[JENKINS-61711] Fix validateExecutable to allow Git plugin global config correctly report git executable in PATH", "bodyText": "JENKINS-61711\nbugfix: A fix in DOSToUnixPathHelper to allow the user to define git implementations which are then used as tools.\nProposed changelog entries:\n\nFix input field hints for tools that search the PATH for their executable (like the git plugin) (regression in 2.205 and 2.222.1)\n\nIssue introduced in 4cd3e33 as part of a refactoring effort.\nSubmitter checklist\n\n JIRA issue is well described\n Changelog entries and upgrade guidelines are appropriate for the audience affected by the change (users or developer, depending on the change). Examples\n\nFill-in the Proposed changelog entries section only if there are breaking changes or other changes which may require extra steps from users during the upgrade\n\n\n Appropriate autotests or explanation to why this change has no tests\n For dependency updates: links to external changelogs and, if possible, full diffs\n\nDesired reviewers\n@MarkEWaite\nMaintainer checklist\nBefore the changes are marked as ready-for-merge:\n\n There are at least 2 approvals for the pull request and no outstanding requests for change\n Conversations in the pull request are over OR it is explicit that a reviewer does not block the change\n Changelog entries in the PR title and/or Proposed changelog entries are correct\n Proper changelog labels are set so that the changelog can be generated automatically\n If the change needs additional upgrade steps from users, upgrade-guide-needed label is set and there is a Proposed upgrade guidelines section in the PR title. (example)\n If it would make sense to backport the change to LTS, a JIRA issue should exist and be labeled as lts-candidate (backport not needed, issue is cosmetic)", "createdAt": "2020-04-14T18:17:42Z", "url": "https://github.com/jenkinsci/jenkins/pull/4653", "merged": true, "mergeCommit": {"oid": "be1e2bea7e647146920b1f6649687a6b1cca94ed"}, "closed": true, "closedAt": "2020-04-16T07:35:42Z", "author": {"login": "rishabhBudhouliya"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcXmjbnAH2gAyNDAzMzQwMTkwOjg4MDE0YmM2ZjBlMjY3MjkzZjYzNTI1ZDJmM2NlMjJkYTI5OWU0YTM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcYHp2tgFqTM5NDM2OTgyOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "88014bc6f0e267293f63525d2f3ce22da299e4a3", "author": {"user": {"login": "rishabhBudhouliya", "name": "Rishabh Budhouliya"}}, "url": "https://github.com/jenkinsci/jenkins/commit/88014bc6f0e267293f63525d2f3ce22da299e4a3", "committedDate": "2020-04-14T17:01:26Z", "message": "Fix git not in path for Git plugin global config\nGit Client Plugin global configuration allows addition of git implementations using GitTool\nThe field Path was not able to identify git executable. The fix involves changing prefix with\nFile.seperator instead of File.pathSeperator. This allows Jenkins to find the git exec at the\nalready existing path."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "caddb62a85b66b5d1ab397e7bb26b75f949d9f13", "author": {"user": {"login": "rishabhBudhouliya", "name": "Rishabh Budhouliya"}}, "url": "https://github.com/jenkinsci/jenkins/commit/caddb62a85b66b5d1ab397e7bb26b75f949d9f13", "committedDate": "2020-04-14T17:31:55Z", "message": "Tests added to validate JENKINS-61711 fix"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkzMjM5MTQ4", "url": "https://github.com/jenkinsci/jenkins/pull/4653#pullrequestreview-393239148", "createdAt": "2020-04-14T19:41:46Z", "commit": {"oid": "caddb62a85b66b5d1ab397e7bb26b75f949d9f13"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxOTo0MTo0NlrOGFeGQQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxOTo0Mjo1N1rOGFeI0w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODM4OTE4NQ==", "bodyText": "I believe you will receive a more clear assertion failure message if you let Hamcrest compare the objects and assert use not to check they are not equal.  When actual.equals() is used, it hides information that Hamcrest can use to make the assertion failure message clearer.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    assertThat(actual.equals(FormValidation.error(failMessage)), is(false));\n          \n          \n            \n                    assertThat(actual, not(is(FormValidation.error(failMessage))));", "url": "https://github.com/jenkinsci/jenkins/pull/4653#discussion_r408389185", "createdAt": "2020-04-14T19:41:46Z", "author": {"login": "MarkEWaite"}, "path": "test/src/test/java/hudson/util/FormValidationTest.java", "diffHunk": "@@ -0,0 +1,33 @@\n+package hudson.util;\n+\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.jvnet.hudson.test.Issue;\n+import org.jvnet.hudson.test.JenkinsRule;\n+\n+import static org.hamcrest.Matchers.is;\n+import static org.hamcrest.MatcherAssert.assertThat;\n+\n+public class FormValidationTest {\n+\n+    @Rule\n+    public JenkinsRule j = new JenkinsRule();\n+\n+    @Issue(\"JENKINS-61711\")\n+    @Test\n+    public void testValidateExecutableWithFix() {\n+        // Global Tool Configuration is able to find git executable in system environment at PATH.\n+        FormValidation actual = FormValidation.validateExecutable(\"git\");\n+        assertThat(actual, is(FormValidation.ok()));\n+    }\n+\n+    @Issue(\"JENKINS-61711\")\n+    @Test\n+    public void testValidateExecutableWithoutFix() {\n+        // Without JENKINS-61711 fix, Git installations under Global Tool Configuration is not able to find git\n+        // executable at system PATH despite git exec existing at the path.\n+        FormValidation actual = FormValidation.validateExecutable(\"git\");\n+        String failMessage = \"There's no such executable git in PATH:\";\n+        assertThat(actual.equals(FormValidation.error(failMessage)), is(false));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "caddb62a85b66b5d1ab397e7bb26b75f949d9f13"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODM4OTg0Mw==", "bodyText": "Can you confirm that the test requires a JenkinsRule?  If this is not included, does test execution fail or generate null pointer exceptions?", "url": "https://github.com/jenkinsci/jenkins/pull/4653#discussion_r408389843", "createdAt": "2020-04-14T19:42:57Z", "author": {"login": "MarkEWaite"}, "path": "test/src/test/java/hudson/util/FormValidationTest.java", "diffHunk": "@@ -0,0 +1,33 @@\n+package hudson.util;\n+\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.jvnet.hudson.test.Issue;\n+import org.jvnet.hudson.test.JenkinsRule;\n+\n+import static org.hamcrest.Matchers.is;\n+import static org.hamcrest.MatcherAssert.assertThat;\n+\n+public class FormValidationTest {\n+\n+    @Rule\n+    public JenkinsRule j = new JenkinsRule();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "caddb62a85b66b5d1ab397e7bb26b75f949d9f13"}, "originalPosition": 14}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "32a70cd7512f32d8327eca120a07acbf14a6eb39", "author": {"user": {"login": "rishabhBudhouliya", "name": "Rishabh Budhouliya"}}, "url": "https://github.com/jenkinsci/jenkins/commit/32a70cd7512f32d8327eca120a07acbf14a6eb39", "committedDate": "2020-04-14T20:59:57Z", "message": "Improve hamcrest comparison in FormValidationTest\n\nCo-Authored-By: Mark Waite <mark.earl.waite@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "33054df3286ac711710adf294b2acec92ec81a3e", "author": {"user": {"login": "MarkEWaite", "name": "Mark Waite"}}, "url": "https://github.com/jenkinsci/jenkins/commit/33054df3286ac711710adf294b2acec92ec81a3e", "committedDate": "2020-04-14T22:02:26Z", "message": "Merge branch 'master' into JENKINS-61711"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6e60975f81aa30eeae71b87682111bfb3a31327c", "author": {"user": {"login": "MarkEWaite", "name": "Mark Waite"}}, "url": "https://github.com/jenkinsci/jenkins/commit/6e60975f81aa30eeae71b87682111bfb3a31327c", "committedDate": "2020-04-14T22:23:19Z", "message": "Import matchers for `not`"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkzMzk2NDA5", "url": "https://github.com/jenkinsci/jenkins/pull/4653#pullrequestreview-393396409", "createdAt": "2020-04-15T01:17:33Z", "commit": {"oid": "6e60975f81aa30eeae71b87682111bfb3a31327c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkzOTUxMTM1", "url": "https://github.com/jenkinsci/jenkins/pull/4653#pullrequestreview-393951135", "createdAt": "2020-04-15T16:43:14Z", "commit": {"oid": "6e60975f81aa30eeae71b87682111bfb3a31327c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk0MzY5ODI5", "url": "https://github.com/jenkinsci/jenkins/pull/4653#pullrequestreview-394369829", "createdAt": "2020-04-16T07:35:19Z", "commit": {"oid": "6e60975f81aa30eeae71b87682111bfb3a31327c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1059, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}