{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc3MjAwNTUw", "number": 4509, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxNDo0MzoyNFrODhGORQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxNDo0NTowMVrODhGQ7Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2MDMxNTU3OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/hudson/security/csrf/GlobalCrumbIssuerConfiguration.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxNDo0MzoyNFrOFrq2UA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxNDo0MzoyNFrOFrq2UA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTMzNTEyMA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        // set the default crumb issuer\n          \n      \n    \n    \n  \n\nAdds nothing to what you would understand from reading the code.", "url": "https://github.com/jenkinsci/jenkins/pull/4509#discussion_r381335120", "createdAt": "2020-02-19T14:43:24Z", "author": {"login": "jglick"}, "path": "core/src/main/java/hudson/security/csrf/GlobalCrumbIssuerConfiguration.java", "diffHunk": "@@ -49,14 +52,31 @@\n     public boolean configure(StaplerRequest req, JSONObject json) throws FormException {\n         // for compatibility reasons, the actual value is stored in Jenkins\n         Jenkins j = Jenkins.get();\n-        if (json.has(\"csrf\")) {\n-            JSONObject csrf = json.getJSONObject(\"csrf\");\n-            j.setCrumbIssuer(CrumbIssuer.all().newInstanceFromRadioList(csrf, \"issuer\"));\n+\n+        if (json.has(\"crumbIssuer\")) {\n+            j.setCrumbIssuer(req.bindJSON(CrumbIssuer.class, json.getJSONObject(\"crumbIssuer\")));\n         } else {\n-            j.setCrumbIssuer(null);\n+            // set the default crumb issuer", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "107c8575a426784be07e9f29170da4c385a17e59"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2MDMyMjM3OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/hudson/security/csrf/GlobalCrumbIssuerConfiguration.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxNDo0NTowMVrOFrq6jA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxNDo0NTowMVrOFrq6jA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTMzNjIwNA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    return new DefaultCrumbIssuer(SystemProperties.getBoolean(Jenkins.class.getName() + \".crumbIssuerProxyCompatibility\",false));\n          \n          \n            \n                    return new DefaultCrumbIssuer(SystemProperties.getBoolean(Jenkins.class.getName() + \".crumbIssuerProxyCompatibility\", false));", "url": "https://github.com/jenkinsci/jenkins/pull/4509#discussion_r381336204", "createdAt": "2020-02-19T14:45:01Z", "author": {"login": "jglick"}, "path": "core/src/main/java/hudson/security/csrf/GlobalCrumbIssuerConfiguration.java", "diffHunk": "@@ -49,14 +52,31 @@\n     public boolean configure(StaplerRequest req, JSONObject json) throws FormException {\n         // for compatibility reasons, the actual value is stored in Jenkins\n         Jenkins j = Jenkins.get();\n-        if (json.has(\"csrf\")) {\n-            JSONObject csrf = json.getJSONObject(\"csrf\");\n-            j.setCrumbIssuer(CrumbIssuer.all().newInstanceFromRadioList(csrf, \"issuer\"));\n+\n+        if (json.has(\"crumbIssuer\")) {\n+            j.setCrumbIssuer(req.bindJSON(CrumbIssuer.class, json.getJSONObject(\"crumbIssuer\")));\n         } else {\n-            j.setCrumbIssuer(null);\n+            // set the default crumb issuer\n+            j.setCrumbIssuer(createDefaultCrumbIssuer());\n         }\n \n         return true;\n     }\n+\n+    @Restricted(NoExternalUse.class) // Jelly\n+    public CrumbIssuer getCrumbIssuer() {\n+        return Jenkins.get().getCrumbIssuer();\n+    }\n+\n+    @Restricted(NoExternalUse.class)\n+    public static CrumbIssuer createDefaultCrumbIssuer() {\n+        if (DISABLE_CSRF_PROTECTION) {\n+            return null;\n+        }\n+        return new DefaultCrumbIssuer(SystemProperties.getBoolean(Jenkins.class.getName() + \".crumbIssuerProxyCompatibility\",false));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "107c8575a426784be07e9f29170da4c385a17e59"}, "originalPosition": 41}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 809, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}