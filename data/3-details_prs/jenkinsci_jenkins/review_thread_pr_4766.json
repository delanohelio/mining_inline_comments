{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI2MjQ4MDkw", "number": 4766, "reviewThreads": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQyMzo0NDoxNVrOEBjDXg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxMDo0OTowNlrOEMBfwA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwMDU4MzM0OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/jenkins/tasks/SimpleBuildStep.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQyMzo0NDoxNVrOGddg7Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQyMDo0OTo1MVrOGeDdsA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzU0NTQ1Mw==", "bodyText": "There are a couple of implementations inside core which should be adapted, though they would ignore the EnvVars argument.", "url": "https://github.com/jenkinsci/jenkins/pull/4766#discussion_r433545453", "createdAt": "2020-06-01T23:44:15Z", "author": {"login": "jglick"}, "path": "core/src/main/java/jenkins/tasks/SimpleBuildStep.java", "diffHunk": "@@ -80,9 +82,37 @@\n      * @param listener a place to send output\n      * @throws InterruptedException if the step is interrupted\n      * @throws IOException if something goes wrong; use {@link AbortException} for a polite error\n+     * @deprecated Use {@link #perform(Run, FilePath, EnvVars, Launcher, TaskListener) instead.}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fbc5f5d7a1c0b045400a8ab4749d0b852072ad65"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDE2MDcwMg==", "bodyText": "I was more thinking of adapting them to better follow the substitution guidelines for steps, i.e. not even apply substitution based on the initial environment. But I left that out because it didn't seem directly related to the ticket at hand.\nBut I'll add a commit that adapts them to the new API.", "url": "https://github.com/jenkinsci/jenkins/pull/4766#discussion_r434160702", "createdAt": "2020-06-02T20:36:58Z", "author": {"login": "Zastai"}, "path": "core/src/main/java/jenkins/tasks/SimpleBuildStep.java", "diffHunk": "@@ -80,9 +82,37 @@\n      * @param listener a place to send output\n      * @throws InterruptedException if the step is interrupted\n      * @throws IOException if something goes wrong; use {@link AbortException} for a polite error\n+     * @deprecated Use {@link #perform(Run, FilePath, EnvVars, Launcher, TaskListener) instead.}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzU0NTQ1Mw=="}, "originalCommit": {"oid": "fbc5f5d7a1c0b045400a8ab4749d0b852072ad65"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDE2NzIxNg==", "bodyText": "I was more thinking of adapting them to better follow the substitution guidelines for steps, i.e. not even apply substitution based on the initial environment.\n\nOh maybe you are thinking about \n  \n    \n      jenkins/core/src/main/java/hudson/tasks/ArtifactArchiver.java\n    \n    \n         Line 248\n      in\n      449c5ac\n    \n    \n    \n    \n\n        \n          \n           String artifacts = build.getEnvironment(listener).expand(this.artifacts); \n        \n    \n  \n\n & \n  \n    \n      jenkins/core/src/main/java/hudson/tasks/Fingerprinter.java\n    \n    \n        Lines 177 to 179\n      in\n      d30edab\n    \n    \n    \n    \n\n        \n          \n           EnvVars environment = build.getEnvironment(listener); \n        \n\n        \n          \n           if(targets.length()!=0) { \n        \n\n        \n          \n               String expandedTargets = environment.expand(targets); \n        \n    \n  \n\n and are correct that they would use the EnvVars argument\u2014but you can do so only if build instanceof AbstractBuild, which will skip expansion for WorkflowRun like we want. See JENKINS-35671.", "url": "https://github.com/jenkinsci/jenkins/pull/4766#discussion_r434167216", "createdAt": "2020-06-02T20:49:51Z", "author": {"login": "jglick"}, "path": "core/src/main/java/jenkins/tasks/SimpleBuildStep.java", "diffHunk": "@@ -80,9 +82,37 @@\n      * @param listener a place to send output\n      * @throws InterruptedException if the step is interrupted\n      * @throws IOException if something goes wrong; use {@link AbortException} for a polite error\n+     * @deprecated Use {@link #perform(Run, FilePath, EnvVars, Launcher, TaskListener) instead.}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzU0NTQ1Mw=="}, "originalCommit": {"oid": "fbc5f5d7a1c0b045400a8ab4749d0b852072ad65"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwMDU4NDQ1OnYy", "diffSide": "RIGHT", "path": "test/src/test/java/jenkins/tasks/SimpleBuildStepTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQyMzo0NTowNVrOGddhtg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQyMzo0NTowNVrOGddhtg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzU0NTY1NA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    @TestExtension(\"jenkins29144\")\n          \n          \n            \n                    @TestExtension\n          \n      \n    \n    \n  \n\nor\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    @TestExtension(\"jenkins29144\")\n          \n          \n            \n                    @TestExtension(\"builderReceivesEnvVars\")", "url": "https://github.com/jenkinsci/jenkins/pull/4766#discussion_r433545654", "createdAt": "2020-06-01T23:45:05Z", "author": {"login": "jglick"}, "path": "test/src/test/java/jenkins/tasks/SimpleBuildStepTest.java", "diffHunk": "@@ -0,0 +1,74 @@\n+package jenkins.tasks;\n+\n+import hudson.EnvVars;\n+import hudson.FilePath;\n+import hudson.Launcher;\n+import hudson.model.AbstractBuild;\n+import hudson.model.AbstractProject;\n+import hudson.model.Action;\n+import hudson.model.Build;\n+import hudson.model.BuildListener;\n+import hudson.model.FreeStyleBuild;\n+import hudson.model.FreeStyleProject;\n+import hudson.model.Label;\n+import hudson.model.ParametersAction;\n+import hudson.model.Project;\n+import hudson.model.Run;\n+import hudson.model.Slave;\n+import hudson.model.StringParameterValue;\n+import hudson.model.TaskListener;\n+import hudson.tasks.BuildStep;\n+import hudson.tasks.BuildStepDescriptor;\n+import hudson.tasks.Builder;\n+import java.io.IOException;\n+import javax.annotation.Nonnull;\n+import org.junit.Assert;\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.junit.rules.TemporaryFolder;\n+import org.jvnet.hudson.test.Issue;\n+import org.jvnet.hudson.test.JenkinsRule;\n+import org.jvnet.hudson.test.TestExtension;\n+\n+public class SimpleBuildStepTest {\n+\n+    private static class StepThatGetsEnvironmentContents extends Builder implements SimpleBuildStep {\n+\n+        @Override\n+        public void perform(@Nonnull Run<?, ?> run, @Nonnull FilePath workspace, @Nonnull EnvVars env, @Nonnull Launcher launcher, @Nonnull TaskListener listener) throws InterruptedException, IOException {\n+            // Check that the environment we get includes values from the slave\n+            Assert.assertEquals(\"JENKINS-29144\", env.get(\"TICKET\"));\n+            // FIXME: Should this test any other envvars? Or Parameters?\n+        }\n+\n+        @TestExtension(\"jenkins29144\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fbc5f5d7a1c0b045400a8ab4749d0b852072ad65"}, "originalPosition": 44}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwNDQ2MjE1OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/hudson/tasks/ArtifactArchiver.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQyMDo1NzowMVrOGeDscQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQyMDo1NzowMVrOGeDscQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDE3MDk5Mw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        if (build instanceof AbstractBuild) // no expansion in pipelines\n          \n          \n            \n                            artifacts = environment.expand(artifacts);\n          \n          \n            \n                        if (build instanceof AbstractBuild) { // no expansion in pipelines\n          \n          \n            \n                            artifacts = environment.expand(artifacts);\n          \n          \n            \n                        }", "url": "https://github.com/jenkinsci/jenkins/pull/4766#discussion_r434170993", "createdAt": "2020-06-02T20:57:01Z", "author": {"login": "jglick"}, "path": "core/src/main/java/hudson/tasks/ArtifactArchiver.java", "diffHunk": "@@ -245,7 +247,9 @@ public void perform(Run<?,?> build, FilePath ws, Launcher launcher, TaskListener\n \n         listener.getLogger().println(Messages.ArtifactArchiver_ARCHIVING_ARTIFACTS());\n         try {\n-            String artifacts = build.getEnvironment(listener).expand(this.artifacts);\n+            String artifacts = this.artifacts;\n+            if (build instanceof AbstractBuild) // no expansion in pipelines\n+                artifacts = environment.expand(artifacts);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d12c9cb7771e8a894c04b66bf81a94b60d2d67b"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwNDQ2MzY5OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/hudson/tasks/Fingerprinter.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQyMDo1NzozMlrOGeDtdA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQyMDo1NzozMlrOGeDtdA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDE3MTI1Mg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            if (build instanceof AbstractBuild) // no expansion for pipelines\n          \n          \n            \n                                expandedTargets = environment.expand(expandedTargets);\n          \n          \n            \n                            if (build instanceof AbstractBuild) { // no expansion for pipelines\n          \n          \n            \n                                expandedTargets = environment.expand(expandedTargets);\n          \n          \n            \n                            }", "url": "https://github.com/jenkinsci/jenkins/pull/4766#discussion_r434171252", "createdAt": "2020-06-02T20:57:32Z", "author": {"login": "jglick"}, "path": "core/src/main/java/hudson/tasks/Fingerprinter.java", "diffHunk": "@@ -168,15 +168,16 @@ public boolean getRecordBuildArtifacts() {\n     }\n \n     @Override\n-    public void perform(Run<?,?> build, FilePath workspace, Launcher launcher, TaskListener listener) throws InterruptedException {\n+    public void perform(Run<?,?> build, FilePath workspace, EnvVars environment, Launcher launcher, TaskListener listener) throws InterruptedException {\n         try {\n             listener.getLogger().println(Messages.Fingerprinter_Recording());\n \n             Map<String,String> record = new HashMap<>();\n             \n-            EnvVars environment = build.getEnvironment(listener);\n             if(targets.length()!=0) {\n-                String expandedTargets = environment.expand(targets);\n+                String expandedTargets = targets;\n+                if (build instanceof AbstractBuild) // no expansion for pipelines\n+                    expandedTargets = environment.expand(expandedTargets);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d12c9cb7771e8a894c04b66bf81a94b60d2d67b"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwNDQ4NTYzOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/jenkins/tasks/SimpleBuildStep.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQyMTowNTowMFrOGeD7iA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQyMTowNTowMFrOGeD7iA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDE3NDg1Ng==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (!Util.isOverridden(SimpleBuildStep.class, this.getClass(),\n          \n          \n            \n                            \"perform\", Run.class, FilePath.class, Launcher.class, TaskListener.class)) {\n          \n          \n            \n                        throw new AbstractMethodError();\n          \n          \n            \n                    }\n          \n          \n            \n                    this.perform(run, workspace, launcher, listener);\n          \n          \n            \n                    if (Util.isOverridden(SimpleBuildStep.class, this.getClass(),\n          \n          \n            \n                            \"perform\", Run.class, FilePath.class, Launcher.class, TaskListener.class)) {\n          \n          \n            \n                        this.perform(run, workspace, launcher, listener);\n          \n          \n            \n                    } else {\n          \n          \n            \n                        throw new AbstractMethodError();\n          \n          \n            \n                    }\n          \n      \n    \n    \n  \n\nmay be easier to follow", "url": "https://github.com/jenkinsci/jenkins/pull/4766#discussion_r434174856", "createdAt": "2020-06-02T21:05:00Z", "author": {"login": "jglick"}, "path": "core/src/main/java/jenkins/tasks/SimpleBuildStep.java", "diffHunk": "@@ -80,9 +82,37 @@\n      * @param listener a place to send output\n      * @throws InterruptedException if the step is interrupted\n      * @throws IOException if something goes wrong; use {@link AbortException} for a polite error\n+     * @deprecated Use {@link #perform(Run, FilePath, EnvVars, Launcher, TaskListener) instead.}\n      */\n-    void perform(@NonNull Run<?,?> run, @NonNull FilePath workspace, @NonNull Launcher launcher,\n-                 @NonNull TaskListener listener) throws InterruptedException, IOException;\n+    @Deprecated\n+    default void perform(@NonNull Run<?, ?> run, @NonNull FilePath workspace, @NonNull Launcher launcher,\n+                         @NonNull TaskListener listener) throws InterruptedException, IOException {\n+        // No additional environment available; just use that from the Run.\n+        this.perform(run, workspace, run.getEnvironment(listener), launcher, listener);\n+    }\n+\n+    /**\n+     * Run this step.\n+     * @param run a build this is running as a part of\n+     * @param workspace a workspace to use for any file operations\n+     * @param env environment variables applicable to this step\n+     * @param launcher a way to start processes\n+     * @param listener a place to send output\n+     * @throws InterruptedException if the step is interrupted\n+     * @throws IOException if something goes wrong; use {@link AbortException} for a polite error\n+     * @since 2.2xx\n+     */\n+    default void perform(@NonNull Run<?, ?> run, @NonNull FilePath workspace, @NonNull EnvVars env, @NonNull Launcher launcher,\n+                         @NonNull TaskListener listener) throws InterruptedException, IOException {\n+        // If this is called, this must be an implementer of the previous API, in which case we call that, discarding\n+        // the environment we were given.\n+        // But for that to work, that API method must have been implemented.\n+        if (!Util.isOverridden(SimpleBuildStep.class, this.getClass(),\n+                \"perform\", Run.class, FilePath.class, Launcher.class, TaskListener.class)) {\n+            throw new AbstractMethodError();\n+        }\n+        this.perform(run, workspace, launcher, listener);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d12c9cb7771e8a894c04b66bf81a94b60d2d67b"}, "originalPosition": 47}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwNDQ4ODc1OnYy", "diffSide": "RIGHT", "path": "test/src/test/java/jenkins/tasks/SimpleBuildStepTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQyMTowNjowNlrOGeD9jw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQyMTowNjowNlrOGeD9jw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDE3NTM3NQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        // FIXME: Should this test any other envvars? Or Parameters?\n          \n      \n    \n    \n  \n\nI suggested ParametersAction as a somewhat simpler test setup, but I do not suppose it really matters.", "url": "https://github.com/jenkinsci/jenkins/pull/4766#discussion_r434175375", "createdAt": "2020-06-02T21:06:06Z", "author": {"login": "jglick"}, "path": "test/src/test/java/jenkins/tasks/SimpleBuildStepTest.java", "diffHunk": "@@ -0,0 +1,74 @@\n+package jenkins.tasks;\n+\n+import hudson.EnvVars;\n+import hudson.FilePath;\n+import hudson.Launcher;\n+import hudson.model.AbstractBuild;\n+import hudson.model.AbstractProject;\n+import hudson.model.Action;\n+import hudson.model.Build;\n+import hudson.model.BuildListener;\n+import hudson.model.FreeStyleBuild;\n+import hudson.model.FreeStyleProject;\n+import hudson.model.Label;\n+import hudson.model.ParametersAction;\n+import hudson.model.Project;\n+import hudson.model.Run;\n+import hudson.model.Slave;\n+import hudson.model.StringParameterValue;\n+import hudson.model.TaskListener;\n+import hudson.tasks.BuildStep;\n+import hudson.tasks.BuildStepDescriptor;\n+import hudson.tasks.Builder;\n+import java.io.IOException;\n+import javax.annotation.Nonnull;\n+import org.junit.Assert;\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.junit.rules.TemporaryFolder;\n+import org.jvnet.hudson.test.Issue;\n+import org.jvnet.hudson.test.JenkinsRule;\n+import org.jvnet.hudson.test.TestExtension;\n+\n+public class SimpleBuildStepTest {\n+\n+    private static class StepThatGetsEnvironmentContents extends Builder implements SimpleBuildStep {\n+\n+        @Override\n+        public void perform(@Nonnull Run<?, ?> run, @Nonnull FilePath workspace, @Nonnull EnvVars env, @Nonnull Launcher launcher, @Nonnull TaskListener listener) throws InterruptedException, IOException {\n+            // Check that the environment we get includes values from the slave\n+            Assert.assertEquals(\"JENKINS-29144\", env.get(\"TICKET\"));\n+            // FIXME: Should this test any other envvars? Or Parameters?", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d12c9cb7771e8a894c04b66bf81a94b60d2d67b"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwNDQ4OTkzOnYy", "diffSide": "RIGHT", "path": "test/src/test/java/jenkins/tasks/SimpleBuildStepTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQyMTowNjozMlrOGeD-VA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQyMTowNjozMlrOGeD-VA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDE3NTU3Mg==", "bodyText": "unused I think\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                @Rule\n          \n          \n            \n                public TemporaryFolder tmp = new TemporaryFolder();", "url": "https://github.com/jenkinsci/jenkins/pull/4766#discussion_r434175572", "createdAt": "2020-06-02T21:06:32Z", "author": {"login": "jglick"}, "path": "test/src/test/java/jenkins/tasks/SimpleBuildStepTest.java", "diffHunk": "@@ -0,0 +1,74 @@\n+package jenkins.tasks;\n+\n+import hudson.EnvVars;\n+import hudson.FilePath;\n+import hudson.Launcher;\n+import hudson.model.AbstractBuild;\n+import hudson.model.AbstractProject;\n+import hudson.model.Action;\n+import hudson.model.Build;\n+import hudson.model.BuildListener;\n+import hudson.model.FreeStyleBuild;\n+import hudson.model.FreeStyleProject;\n+import hudson.model.Label;\n+import hudson.model.ParametersAction;\n+import hudson.model.Project;\n+import hudson.model.Run;\n+import hudson.model.Slave;\n+import hudson.model.StringParameterValue;\n+import hudson.model.TaskListener;\n+import hudson.tasks.BuildStep;\n+import hudson.tasks.BuildStepDescriptor;\n+import hudson.tasks.Builder;\n+import java.io.IOException;\n+import javax.annotation.Nonnull;\n+import org.junit.Assert;\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.junit.rules.TemporaryFolder;\n+import org.jvnet.hudson.test.Issue;\n+import org.jvnet.hudson.test.JenkinsRule;\n+import org.jvnet.hudson.test.TestExtension;\n+\n+public class SimpleBuildStepTest {\n+\n+    private static class StepThatGetsEnvironmentContents extends Builder implements SimpleBuildStep {\n+\n+        @Override\n+        public void perform(@Nonnull Run<?, ?> run, @Nonnull FilePath workspace, @Nonnull EnvVars env, @Nonnull Launcher launcher, @Nonnull TaskListener listener) throws InterruptedException, IOException {\n+            // Check that the environment we get includes values from the slave\n+            Assert.assertEquals(\"JENKINS-29144\", env.get(\"TICKET\"));\n+            // FIXME: Should this test any other envvars? Or Parameters?\n+        }\n+\n+        @TestExtension(\"builderReceivesEnvVars\")\n+        public static class DescriptorImpl extends BuildStepDescriptor<Builder> {\n+\n+            @Override\n+            public boolean isApplicable(Class<? extends AbstractProject> jobType) {\n+                return true;\n+            }\n+\n+        }\n+\n+    }\n+\n+    @Rule\n+    public TemporaryFolder tmp = new TemporaryFolder();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d12c9cb7771e8a894c04b66bf81a94b60d2d67b"}, "originalPosition": 57}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwNDQ5MDM3OnYy", "diffSide": "RIGHT", "path": "test/src/test/java/jenkins/tasks/SimpleBuildStepTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQyMTowNjo0M1rOGeD-sA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQyMTowNjo0M1rOGeD-sA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDE3NTY2NA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            import org.junit.rules.TemporaryFolder;\n          \n      \n    \n    \n  \n\nand fix imports generally", "url": "https://github.com/jenkinsci/jenkins/pull/4766#discussion_r434175664", "createdAt": "2020-06-02T21:06:43Z", "author": {"login": "jglick"}, "path": "test/src/test/java/jenkins/tasks/SimpleBuildStepTest.java", "diffHunk": "@@ -0,0 +1,74 @@\n+package jenkins.tasks;\n+\n+import hudson.EnvVars;\n+import hudson.FilePath;\n+import hudson.Launcher;\n+import hudson.model.AbstractBuild;\n+import hudson.model.AbstractProject;\n+import hudson.model.Action;\n+import hudson.model.Build;\n+import hudson.model.BuildListener;\n+import hudson.model.FreeStyleBuild;\n+import hudson.model.FreeStyleProject;\n+import hudson.model.Label;\n+import hudson.model.ParametersAction;\n+import hudson.model.Project;\n+import hudson.model.Run;\n+import hudson.model.Slave;\n+import hudson.model.StringParameterValue;\n+import hudson.model.TaskListener;\n+import hudson.tasks.BuildStep;\n+import hudson.tasks.BuildStepDescriptor;\n+import hudson.tasks.Builder;\n+import java.io.IOException;\n+import javax.annotation.Nonnull;\n+import org.junit.Assert;\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.junit.rules.TemporaryFolder;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d12c9cb7771e8a894c04b66bf81a94b60d2d67b"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwNzAzMjA2OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/jenkins/tasks/SimpleBuildStep.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxMzo1MToyNFrOGec0iA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxMzo1MToyNFrOGec0iA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDU4MjY2NA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * @since 2.2xx\n          \n          \n            \n                 * @since FIXME\n          \n      \n    \n    \n  \n\n(gets patched up by a core committer after merge)", "url": "https://github.com/jenkinsci/jenkins/pull/4766#discussion_r434582664", "createdAt": "2020-06-03T13:51:24Z", "author": {"login": "jglick"}, "path": "core/src/main/java/jenkins/tasks/SimpleBuildStep.java", "diffHunk": "@@ -80,9 +82,38 @@\n      * @param listener a place to send output\n      * @throws InterruptedException if the step is interrupted\n      * @throws IOException if something goes wrong; use {@link AbortException} for a polite error\n+     * @deprecated Use {@link #perform(Run, FilePath, EnvVars, Launcher, TaskListener) instead.}\n      */\n-    void perform(@NonNull Run<?,?> run, @NonNull FilePath workspace, @NonNull Launcher launcher,\n-                 @NonNull TaskListener listener) throws InterruptedException, IOException;\n+    @Deprecated\n+    default void perform(@NonNull Run<?, ?> run, @NonNull FilePath workspace, @NonNull Launcher launcher,\n+                         @NonNull TaskListener listener) throws InterruptedException, IOException {\n+        // No additional environment available; just use that from the Run.\n+        this.perform(run, workspace, run.getEnvironment(listener), launcher, listener);\n+    }\n+\n+    /**\n+     * Run this step.\n+     * @param run a build this is running as a part of\n+     * @param workspace a workspace to use for any file operations\n+     * @param env environment variables applicable to this step\n+     * @param launcher a way to start processes\n+     * @param listener a place to send output\n+     * @throws InterruptedException if the step is interrupted\n+     * @throws IOException if something goes wrong; use {@link AbortException} for a polite error\n+     * @since 2.2xx", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eda1a0ea5bc5eeb509903d8320d20d2d074b28e0"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwNzAzNjk0OnYy", "diffSide": "RIGHT", "path": "test/src/test/java/jenkins/tasks/SimpleBuildStepTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxMzo1MjoyNFrOGec3iw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxMzo1MjoyNFrOGec3iw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDU4MzQzNQ==", "bodyText": "BTW you can use TestBuilder to make things shorter (inner class) if you like.", "url": "https://github.com/jenkinsci/jenkins/pull/4766#discussion_r434583435", "createdAt": "2020-06-03T13:52:24Z", "author": {"login": "jglick"}, "path": "test/src/test/java/jenkins/tasks/SimpleBuildStepTest.java", "diffHunk": "@@ -0,0 +1,64 @@\n+package jenkins.tasks;\n+\n+import hudson.EnvVars;\n+import hudson.FilePath;\n+import hudson.Launcher;\n+import hudson.model.AbstractProject;\n+import hudson.model.FreeStyleProject;\n+import hudson.model.ParametersDefinitionProperty;\n+import hudson.model.Run;\n+import hudson.model.Slave;\n+import hudson.model.StringParameterDefinition;\n+import hudson.model.TaskListener;\n+import hudson.tasks.BuildStepDescriptor;\n+import hudson.tasks.Builder;\n+import java.io.IOException;\n+import javax.annotation.Nonnull;\n+import org.junit.Assert;\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.jvnet.hudson.test.Issue;\n+import org.jvnet.hudson.test.JenkinsRule;\n+import org.jvnet.hudson.test.TestExtension;\n+\n+public class SimpleBuildStepTest {\n+\n+    private static class StepThatGetsEnvironmentContents extends Builder implements SimpleBuildStep {\n+\n+        @Override\n+        public void perform(@Nonnull Run<?, ?> run, @Nonnull FilePath workspace, @Nonnull EnvVars env, @Nonnull Launcher launcher, @Nonnull TaskListener listener) throws InterruptedException, IOException {\n+            // Check that the environment we get includes values from the slave\n+            Assert.assertEquals(\"JENKINS-29144\", env.get(\"TICKET\"));\n+            // And that parameters appear too\n+            Assert.assertEquals(\"WORLD\", env.get(\"HELLO\"));\n+        }\n+\n+        @TestExtension(\"builderReceivesEnvVars\")\n+        public static class DescriptorImpl extends BuildStepDescriptor<Builder> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eda1a0ea5bc5eeb509903d8320d20d2d074b28e0"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxNzc5NTk2OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/jenkins/tasks/SimpleBuildStep.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNlQyMDozNzowNlrOGgFkkA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNlQyMDo0MjozNVrOGgFlwg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjI5ODg5Ng==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * @since FIXME\n          \n          \n            \n                 * @since TODO\n          \n      \n    \n    \n  \n\nper \n  \n    \n      jenkins/update-since-todo.sh\n    \n    \n         Line 13\n      in\n      2980940\n    \n    \n    \n    \n\n        \n          \n           for todo in $( git grep --line-number '@since TODO' | grep -v \"$me\" )", "url": "https://github.com/jenkinsci/jenkins/pull/4766#discussion_r436298896", "createdAt": "2020-06-06T20:37:06Z", "author": {"login": "daniel-beck"}, "path": "core/src/main/java/jenkins/tasks/SimpleBuildStep.java", "diffHunk": "@@ -100,7 +100,7 @@ default void perform(@NonNull Run<?, ?> run, @NonNull FilePath workspace, @NonNu\n      * @param listener a place to send output\n      * @throws InterruptedException if the step is interrupted\n      * @throws IOException if something goes wrong; use {@link AbortException} for a polite error\n-     * @since 2.2xx\n+     * @since FIXME", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6b2492d9c96ff5ca22a3e1132fa0ee47048d30fd"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjI5OTIwMg==", "bodyText": "Done. (Although it's annoying that GH turns @ since into a mention on the commit message.)", "url": "https://github.com/jenkinsci/jenkins/pull/4766#discussion_r436299202", "createdAt": "2020-06-06T20:42:35Z", "author": {"login": "Zastai"}, "path": "core/src/main/java/jenkins/tasks/SimpleBuildStep.java", "diffHunk": "@@ -100,7 +100,7 @@ default void perform(@NonNull Run<?, ?> run, @NonNull FilePath workspace, @NonNu\n      * @param listener a place to send output\n      * @throws InterruptedException if the step is interrupted\n      * @throws IOException if something goes wrong; use {@link AbortException} for a polite error\n-     * @since 2.2xx\n+     * @since FIXME", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjI5ODg5Ng=="}, "originalCommit": {"oid": "6b2492d9c96ff5ca22a3e1132fa0ee47048d30fd"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxMDQyODgwOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/jenkins/tasks/SimpleBuildStep.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxMDo0OTowNlrOGt5J6g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxNDowMjozMVrOGuACzA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDc3NTUzMA==", "bodyText": "@jglick @oleg-nenashev this requires perform method not to be final and breaks backward compatibility with uber/phabricator-jenkins-plugin#344", "url": "https://github.com/jenkinsci/jenkins/pull/4766#discussion_r450775530", "createdAt": "2020-07-07T10:49:06Z", "author": {"login": "KostyaSha"}, "path": "core/src/main/java/jenkins/tasks/SimpleBuildStep.java", "diffHunk": "@@ -80,9 +82,38 @@\n      * @param listener a place to send output\n      * @throws InterruptedException if the step is interrupted\n      * @throws IOException if something goes wrong; use {@link AbortException} for a polite error\n+     * @deprecated Use {@link #perform(Run, FilePath, EnvVars, Launcher, TaskListener) instead.}\n      */\n-    void perform(@NonNull Run<?,?> run, @NonNull FilePath workspace, @NonNull Launcher launcher,\n-                 @NonNull TaskListener listener) throws InterruptedException, IOException;\n+    @Deprecated\n+    default void perform(@NonNull Run<?, ?> run, @NonNull FilePath workspace, @NonNull Launcher launcher,\n+                         @NonNull TaskListener listener) throws InterruptedException, IOException {\n+        // No additional environment available; just use that from the Run.\n+        this.perform(run, workspace, run.getEnvironment(listener), launcher, listener);\n+    }\n+\n+    /**\n+     * Run this step.\n+     * @param run a build this is running as a part of\n+     * @param workspace a workspace to use for any file operations\n+     * @param env environment variables applicable to this step\n+     * @param launcher a way to start processes\n+     * @param listener a place to send output\n+     * @throws InterruptedException if the step is interrupted\n+     * @throws IOException if something goes wrong; use {@link AbortException} for a polite error\n+     * @since TODO\n+     */\n+    default void perform(@NonNull Run<?, ?> run, @NonNull FilePath workspace, @NonNull EnvVars env, @NonNull Launcher launcher,\n+                         @NonNull TaskListener listener) throws InterruptedException, IOException {\n+        // If this is called, this must be an implementer of the previous API, in which case we call that, discarding\n+        // the environment we were given.\n+        // But for that to work, that API method must have been implemented.\n+        if (Util.isOverridden(SimpleBuildStep.class, this.getClass(),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5a9c198e2a331a1a41684e58f1276a827a0048a2"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDg3Nzg2Mw==", "bodyText": "@Zastai certainly not intentional. JENKINS-62723", "url": "https://github.com/jenkinsci/jenkins/pull/4766#discussion_r450877863", "createdAt": "2020-07-07T13:48:26Z", "author": {"login": "jglick"}, "path": "core/src/main/java/jenkins/tasks/SimpleBuildStep.java", "diffHunk": "@@ -80,9 +82,38 @@\n      * @param listener a place to send output\n      * @throws InterruptedException if the step is interrupted\n      * @throws IOException if something goes wrong; use {@link AbortException} for a polite error\n+     * @deprecated Use {@link #perform(Run, FilePath, EnvVars, Launcher, TaskListener) instead.}\n      */\n-    void perform(@NonNull Run<?,?> run, @NonNull FilePath workspace, @NonNull Launcher launcher,\n-                 @NonNull TaskListener listener) throws InterruptedException, IOException;\n+    @Deprecated\n+    default void perform(@NonNull Run<?, ?> run, @NonNull FilePath workspace, @NonNull Launcher launcher,\n+                         @NonNull TaskListener listener) throws InterruptedException, IOException {\n+        // No additional environment available; just use that from the Run.\n+        this.perform(run, workspace, run.getEnvironment(listener), launcher, listener);\n+    }\n+\n+    /**\n+     * Run this step.\n+     * @param run a build this is running as a part of\n+     * @param workspace a workspace to use for any file operations\n+     * @param env environment variables applicable to this step\n+     * @param launcher a way to start processes\n+     * @param listener a place to send output\n+     * @throws InterruptedException if the step is interrupted\n+     * @throws IOException if something goes wrong; use {@link AbortException} for a polite error\n+     * @since TODO\n+     */\n+    default void perform(@NonNull Run<?, ?> run, @NonNull FilePath workspace, @NonNull EnvVars env, @NonNull Launcher launcher,\n+                         @NonNull TaskListener listener) throws InterruptedException, IOException {\n+        // If this is called, this must be an implementer of the previous API, in which case we call that, discarding\n+        // the environment we were given.\n+        // But for that to work, that API method must have been implemented.\n+        if (Util.isOverridden(SimpleBuildStep.class, this.getClass(),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDc3NTUzMA=="}, "originalCommit": {"oid": "5a9c198e2a331a1a41684e58f1276a827a0048a2"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDg4ODM5Ng==", "bodyText": "I suspect #1804 was incorrect.", "url": "https://github.com/jenkinsci/jenkins/pull/4766#discussion_r450888396", "createdAt": "2020-07-07T14:02:31Z", "author": {"login": "jglick"}, "path": "core/src/main/java/jenkins/tasks/SimpleBuildStep.java", "diffHunk": "@@ -80,9 +82,38 @@\n      * @param listener a place to send output\n      * @throws InterruptedException if the step is interrupted\n      * @throws IOException if something goes wrong; use {@link AbortException} for a polite error\n+     * @deprecated Use {@link #perform(Run, FilePath, EnvVars, Launcher, TaskListener) instead.}\n      */\n-    void perform(@NonNull Run<?,?> run, @NonNull FilePath workspace, @NonNull Launcher launcher,\n-                 @NonNull TaskListener listener) throws InterruptedException, IOException;\n+    @Deprecated\n+    default void perform(@NonNull Run<?, ?> run, @NonNull FilePath workspace, @NonNull Launcher launcher,\n+                         @NonNull TaskListener listener) throws InterruptedException, IOException {\n+        // No additional environment available; just use that from the Run.\n+        this.perform(run, workspace, run.getEnvironment(listener), launcher, listener);\n+    }\n+\n+    /**\n+     * Run this step.\n+     * @param run a build this is running as a part of\n+     * @param workspace a workspace to use for any file operations\n+     * @param env environment variables applicable to this step\n+     * @param launcher a way to start processes\n+     * @param listener a place to send output\n+     * @throws InterruptedException if the step is interrupted\n+     * @throws IOException if something goes wrong; use {@link AbortException} for a polite error\n+     * @since TODO\n+     */\n+    default void perform(@NonNull Run<?, ?> run, @NonNull FilePath workspace, @NonNull EnvVars env, @NonNull Launcher launcher,\n+                         @NonNull TaskListener listener) throws InterruptedException, IOException {\n+        // If this is called, this must be an implementer of the previous API, in which case we call that, discarding\n+        // the environment we were given.\n+        // But for that to work, that API method must have been implemented.\n+        if (Util.isOverridden(SimpleBuildStep.class, this.getClass(),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDc3NTUzMA=="}, "originalCommit": {"oid": "5a9c198e2a331a1a41684e58f1276a827a0048a2"}, "originalPosition": 43}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 429, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}