{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY5Mzc5NzUz", "number": 4466, "title": "[JENKINS-20052] Refactor ListView getItems", "bodyText": "Signed-off-by: Raihaan Shouhell raihaan.shouhell@autodesk.com\nSee JENKINS-20052.\nI discovered the above jira issue while poking around. This supersedes #4462.\nThis is in hopes to improve performance with https://github.com/jan-molak/jenkins-build-monitor-plugin.\nCurrent implementation is ugly but I'd like feedback on if this is the right approach\nProposed changelog entries\n\nEntry 1: Reduce number of calls to getItems() and iterations through the jobList in ListView\n...\n\n\nProposed upgrade guidelines\n\nList View's job status filter has been moved to be a Job View Filter. The order of this filter matters as its interaction with various other filters will affect what jobs are shown in the view. If you set the status filter to be the first filter(filtering only enabled jobs) and a later filter adds a disabled job. you will see the disabled job. If the status filter is last in the same scenario, you will not see the disabled job.\n\nSubmitter checklist\n\n JIRA issue is well described\n Changelog entries and upgrade guidelines are appropriate for the audience affected by the change (users or developer, depending on the change). Examples\n\nFill-in the Proposed changelog entries section only if there are breaking changes or other changes which may require extra steps from users during the upgrade\n\n\n Appropriate autotests or explanation to why this change has no tests\n For dependency updates: links to external changelogs and, if possible, full diffs\n\n\nDesired reviewers\n@jglick\n\nMaintainer checklist\nBefore the changes are marked as ready-for-merge:\n\n There are at least 2 approvals for the pull request and no outstanding requests for change\n Conversations in the pull request are over OR it is explicit that a reviewer does not block the change\n Changelog entries in the PR title and/or Proposed changelog entries are correct\n Proper changelog labels are set so that the changelog can be generated automatically\n If the change needs additional upgrade steps from users, upgrade-guide-needed label is set and there is a Proposed upgrade guidelines section in the PR title. (example)\n If it would make sense to backport the change to LTS, a JIRA issue should exist and be labeled as lts-candidate", "createdAt": "2020-01-31T02:25:17Z", "url": "https://github.com/jenkinsci/jenkins/pull/4466", "merged": true, "mergeCommit": {"oid": "3fd66ff22051a3309b8dc5130d8da0759ee27f48"}, "closed": true, "closedAt": "2020-05-29T14:38:39Z", "author": {"login": "res0nance"}, "timelineItems": {"totalCount": 22, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb_oyfzgFqTM1MTMwNjYwOQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdJDw6vAFqTQ4ODQ2MDg3MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUxMzA2NjA5", "url": "https://github.com/jenkinsci/jenkins/pull/4466#pullrequestreview-351306609", "createdAt": "2020-01-31T06:02:18Z", "commit": {"oid": "f27fd78edcaf4f99410c8705227afe30df669468"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQwNjowMjoxOFrOFkCFEQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQwNjowMzoyOFrOFkCFzQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzMyNzEyMQ==", "bodyText": "Probably should be refactored", "url": "https://github.com/jenkinsci/jenkins/pull/4466#discussion_r373327121", "createdAt": "2020-01-31T06:02:18Z", "author": {"login": "res0nance"}, "path": "core/src/main/java/hudson/model/ListView.java", "diffHunk": "@@ -211,28 +212,57 @@ public boolean hasJobFilterExtensions() {\n         }\n \n         ItemGroup<? extends TopLevelItem> parent = getOwner().getItemGroup();\n-        List<TopLevelItem> parentItems = new ArrayList<>(parent.getItems());\n-        includeItems(parent, parentItems, names);\n \n         Boolean statusFilter = this.statusFilter; // capture the value to isolate us from concurrent update\n-        Iterable<? extends TopLevelItem> candidates;\n+        List<TopLevelItem> allItems;\n         if (recurse) {\n-            candidates = parent.getAllItems(TopLevelItem.class);\n+            allItems = parent.getAllItems(TopLevelItem.class);\n+            for (TopLevelItem item : allItems) {\n+                String itemName = item.getRelativeNameFrom(parent);\n+                for (String name : names) {\n+                    if (itemName.equals(name)) {\n+                        if (statusFilter == null || !(item instanceof ParameterizedJobMixIn.ParameterizedJob) // TODO or better to call the more generic Job.isBuildable?\n+                                || ((ParameterizedJobMixIn.ParameterizedJob) item).isDisabled() ^ statusFilter)\n+                            items.add(item);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f27fd78edcaf4f99410c8705227afe30df669468"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzMyNzMwOQ==", "bodyText": "Assumed that expand is the same as parent.getAllItems() in this case", "url": "https://github.com/jenkinsci/jenkins/pull/4466#discussion_r373327309", "createdAt": "2020-01-31T06:03:28Z", "author": {"login": "res0nance"}, "path": "core/src/main/java/hudson/model/ListView.java", "diffHunk": "@@ -211,28 +212,57 @@ public boolean hasJobFilterExtensions() {\n         }\n \n         ItemGroup<? extends TopLevelItem> parent = getOwner().getItemGroup();\n-        List<TopLevelItem> parentItems = new ArrayList<>(parent.getItems());\n-        includeItems(parent, parentItems, names);\n \n         Boolean statusFilter = this.statusFilter; // capture the value to isolate us from concurrent update\n-        Iterable<? extends TopLevelItem> candidates;\n+        List<TopLevelItem> allItems;\n         if (recurse) {\n-            candidates = parent.getAllItems(TopLevelItem.class);\n+            allItems = parent.getAllItems(TopLevelItem.class);\n+            for (TopLevelItem item : allItems) {\n+                String itemName = item.getRelativeNameFrom(parent);\n+                for (String name : names) {\n+                    if (itemName.equals(name)) {\n+                        if (statusFilter == null || !(item instanceof ParameterizedJobMixIn.ParameterizedJob) // TODO or better to call the more generic Job.isBuildable?\n+                                || ((ParameterizedJobMixIn.ParameterizedJob) item).isDisabled() ^ statusFilter)\n+                            items.add(item);\n+                        continue;\n+                    }\n+                }\n+                if (includePattern != null) {\n+                    if (includePattern.matcher(itemName).matches()) {\n+                        if (statusFilter == null || !(item instanceof ParameterizedJobMixIn.ParameterizedJob) // TODO or better to call the more generic Job.isBuildable?\n+                                || ((ParameterizedJobMixIn.ParameterizedJob) item).isDisabled() ^ statusFilter)\n+                            items.add(item);\n+                    }\n+                }\n+            }\n         } else {\n-            candidates = parent.getItems();\n-        }\n-        for (TopLevelItem item : candidates) {\n-            if (!names.contains(item.getRelativeNameFrom(getOwner().getItemGroup()))) continue;\n-            // Add if no status filter or filter matches enabled/disabled status:\n-            if(statusFilter == null || !(item instanceof ParameterizedJobMixIn.ParameterizedJob) // TODO or better to call the more generic Job.isBuildable?\n-                              || ((ParameterizedJobMixIn.ParameterizedJob)item).isDisabled() ^ statusFilter)\n-                items.add(item);\n+            allItems = new ArrayList<>(parent.getItems());\n+            for (String name : names) {\n+                try {\n+                    TopLevelItem i = parent.getItem(name);\n+                    if (i != null) {\n+                        if(statusFilter == null || !(i instanceof ParameterizedJobMixIn.ParameterizedJob) // TODO or better to call the more generic Job.isBuildable?\n+                                || ((ParameterizedJobMixIn.ParameterizedJob)i).isDisabled() ^ statusFilter)\n+                            items.add(i);\n+                    }\n+                } catch (AccessDeniedException e) {\n+                    //Ignore\n+                }\n+            }\n+            if (includePattern != null) {\n+                for (TopLevelItem item : allItems) {\n+                    String itemName = item.getRelativeNameFrom(parent);\n+                    if (includePattern.matcher(itemName).matches()) {\n+                        if (statusFilter == null || !(item instanceof ParameterizedJobMixIn.ParameterizedJob) // TODO or better to call the more generic Job.isBuildable?\n+                                || ((ParameterizedJobMixIn.ParameterizedJob) item).isDisabled() ^ statusFilter)\n+                            items.add(item);\n+                    }\n+                }\n+            }\n         }\n \n         // check the filters\n         Iterable<ViewJobFilter> jobFilters = getJobFilters();\n-        List<TopLevelItem> allItems = new ArrayList<>(parentItems);\n-        if (recurse) allItems = expand(allItems, new ArrayList<>());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f27fd78edcaf4f99410c8705227afe30df669468"}, "originalPosition": 76}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cc45a014ecd9ecc86b078f42b836c827abe8957d", "author": {"user": {"login": "res0nance", "name": "Raihaan Shouhell"}}, "url": "https://github.com/jenkinsci/jenkins/commit/cc45a014ecd9ecc86b078f42b836c827abe8957d", "committedDate": "2020-02-10T09:13:03Z", "message": "Refactor ListView getItems\n\nSigned-off-by: Raihaan Shouhell <raihaan.shouhell@autodesk.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "29db74055708d6a7cdaed2680c6bc13a84a1c296", "author": {"user": {"login": "res0nance", "name": "Raihaan Shouhell"}}, "url": "https://github.com/jenkinsci/jenkins/commit/29db74055708d6a7cdaed2680c6bc13a84a1c296", "committedDate": "2020-02-10T09:13:03Z", "message": "Minor Refactor"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fbe70d2327c8dd6fd915a7c08eb59f8cbd4f6e21", "author": {"user": {"login": "res0nance", "name": "Raihaan Shouhell"}}, "url": "https://github.com/jenkinsci/jenkins/commit/fbe70d2327c8dd6fd915a7c08eb59f8cbd4f6e21", "committedDate": "2020-02-10T09:13:03Z", "message": "Optimization for specific case"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4163554cefe6ee4e289c895641949d9f1d6155b6", "author": {"user": {"login": "res0nance", "name": "Raihaan Shouhell"}}, "url": "https://github.com/jenkinsci/jenkins/commit/4163554cefe6ee4e289c895641949d9f1d6155b6", "committedDate": "2020-02-10T07:03:14Z", "message": "Optimization for specific case"}, "afterCommit": {"oid": "fbe70d2327c8dd6fd915a7c08eb59f8cbd4f6e21", "author": {"user": {"login": "res0nance", "name": "Raihaan Shouhell"}}, "url": "https://github.com/jenkinsci/jenkins/commit/fbe70d2327c8dd6fd915a7c08eb59f8cbd4f6e21", "committedDate": "2020-02-10T09:13:03Z", "message": "Optimization for specific case"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU1ODMyMTIw", "url": "https://github.com/jenkinsci/jenkins/pull/4466#pullrequestreview-355832120", "createdAt": "2020-02-10T10:33:59Z", "commit": {"oid": "fbe70d2327c8dd6fd915a7c08eb59f8cbd4f6e21"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYwNzIwMjgy", "url": "https://github.com/jenkinsci/jenkins/pull/4466#pullrequestreview-360720282", "createdAt": "2020-02-18T22:27:31Z", "commit": {"oid": "fbe70d2327c8dd6fd915a7c08eb59f8cbd4f6e21"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYyNjcxNTg3", "url": "https://github.com/jenkinsci/jenkins/pull/4466#pullrequestreview-362671587", "createdAt": "2020-02-21T14:36:03Z", "commit": {"oid": "fbe70d2327c8dd6fd915a7c08eb59f8cbd4f6e21"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQxNDozNjowM1rOFs46UA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQxNDo0ODo1MFrOFs5Wow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjYxNDA5Ng==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private static void checkAddItem(Boolean statusFilter, List<TopLevelItem> items, TopLevelItem item) {\n          \n          \n            \n                private static void addItemMatchingStatus(Boolean statusFilter, List<TopLevelItem> items, TopLevelItem item) {\n          \n      \n    \n    \n  \n\nPlus corresponding changes.", "url": "https://github.com/jenkinsci/jenkins/pull/4466#discussion_r382614096", "createdAt": "2020-02-21T14:36:03Z", "author": {"login": "daniel-beck"}, "path": "core/src/main/java/hudson/model/ListView.java", "diffHunk": "@@ -242,6 +264,13 @@ public boolean hasJobFilterExtensions() {\n         return items;\n     }\n \n+    // Used by getItems\n+    private static void checkAddItem(Boolean statusFilter, List<TopLevelItem> items, TopLevelItem item) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fbe70d2327c8dd6fd915a7c08eb59f8cbd4f6e21"}, "originalPosition": 78}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjYyMTM0Nw==", "bodyText": "I think it would help readability if this comment had 2 specific lines of matching code, rather than it explaining the if/else if structure with a repeated statement in block blocks.", "url": "https://github.com/jenkinsci/jenkins/pull/4466#discussion_r382621347", "createdAt": "2020-02-21T14:48:50Z", "author": {"login": "daniel-beck"}, "path": "core/src/main/java/hudson/model/ListView.java", "diffHunk": "@@ -211,28 +212,49 @@ public boolean hasJobFilterExtensions() {\n         }\n \n         ItemGroup<? extends TopLevelItem> parent = getOwner().getItemGroup();\n-        List<TopLevelItem> parentItems = new ArrayList<>(parent.getItems());\n-        includeItems(parent, parentItems, names);\n \n         Boolean statusFilter = this.statusFilter; // capture the value to isolate us from concurrent update\n-        Iterable<? extends TopLevelItem> candidates;\n+        Collection<ViewJobFilter> jobFilters = getJobFilters();\n+        List<TopLevelItem> allItems = null;\n         if (recurse) {\n-            candidates = parent.getAllItems(TopLevelItem.class);\n+            allItems = parent.getAllItems(TopLevelItem.class);\n+            for (TopLevelItem item : allItems) {\n+                String itemName = item.getRelativeNameFrom(parent);\n+                if (names.contains(itemName)) {\n+                    checkAddItem(statusFilter, items, item);\n+                }\n+                if (includePattern != null) {\n+                    if (includePattern.matcher(itemName).matches()) {\n+                        checkAddItem(statusFilter, items, item);\n+                    }\n+                }\n+            }\n         } else {\n-            candidates = parentItems;\n-        }\n-        for (TopLevelItem item : candidates) {\n-            if (!names.contains(item.getRelativeNameFrom(getOwner().getItemGroup()))) continue;\n-            // Add if no status filter or filter matches enabled/disabled status:\n-            if(statusFilter == null || !(item instanceof ParameterizedJobMixIn.ParameterizedJob) // TODO or better to call the more generic Job.isBuildable?\n-                              || ((ParameterizedJobMixIn.ParameterizedJob)item).isDisabled() ^ statusFilter)\n-                items.add(item);\n+            for (String name : names) {\n+                try {\n+                    TopLevelItem i = parent.getItem(name);\n+                    if (i != null) {\n+                        checkAddItem(statusFilter, items, i);\n+                    }\n+                } catch (AccessDeniedException e) {\n+                    //Ignore\n+                }\n+            }\n+            //Only call getItems if there is a pattern or we have Job Filters", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fbe70d2327c8dd6fd915a7c08eb59f8cbd4f6e21"}, "originalPosition": 52}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ccf128a2d0b743b46bc5792ae3691a32023e8f43", "author": {"user": {"login": "res0nance", "name": "Raihaan Shouhell"}}, "url": "https://github.com/jenkinsci/jenkins/commit/ccf128a2d0b743b46bc5792ae3691a32023e8f43", "committedDate": "2020-03-20T08:43:25Z", "message": "Migrate statusfilter to viewjobfilter"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c95ecac87b75b1737116da5f611536ea85707052", "author": {"user": {"login": "res0nance", "name": "Raihaan Shouhell"}}, "url": "https://github.com/jenkinsci/jenkins/commit/c95ecac87b75b1737116da5f611536ea85707052", "committedDate": "2020-03-20T08:45:43Z", "message": "Use unboxed boolean so we don't have to deal with null"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc4OTg5NjIw", "url": "https://github.com/jenkinsci/jenkins/pull/4466#pullrequestreview-378989620", "createdAt": "2020-03-22T10:13:36Z", "commit": {"oid": "c95ecac87b75b1737116da5f611536ea85707052"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMlQxMDoxMzozN1rOF5uj2w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMlQxMDoxMzozN1rOF5uj2w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjA3NTk5NQ==", "bodyText": "This should add the StatusFilter first into the list to minimize behavior changes through interactions between filters.", "url": "https://github.com/jenkinsci/jenkins/pull/4466#discussion_r396075995", "createdAt": "2020-03-22T10:13:37Z", "author": {"login": "daniel-beck"}, "path": "core/src/main/java/hudson/model/ListView.java", "diffHunk": "@@ -145,6 +147,9 @@ private Object readResolve() {\n         }\n         initColumns();\n         initJobFilters();\n+        if (statusFilter != null) {\n+            jobFilters.add(new StatusFilter(statusFilter));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c95ecac87b75b1737116da5f611536ea85707052"}, "originalPosition": 23}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dada74630c91764fa59aab6ed0683911df2d1fe4", "author": {"user": {"login": "res0nance", "name": "Raihaan Shouhell"}}, "url": "https://github.com/jenkinsci/jenkins/commit/dada74630c91764fa59aab6ed0683911df2d1fe4", "committedDate": "2020-03-23T03:43:48Z", "message": "UI Changes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "773e13143239fd41ac5ddbf31f0678a6e43089d2", "author": {"user": {"login": "res0nance", "name": "Raihaan Shouhell"}}, "url": "https://github.com/jenkinsci/jenkins/commit/773e13143239fd41ac5ddbf31f0678a6e43089d2", "committedDate": "2020-03-23T07:15:46Z", "message": "Merge branch 'master' of https://github.com/res0nance/jenkins into JENKINS-20052"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bc9c862f324eab7584ca95bfb7bde97351bc49ce", "author": {"user": {"login": "res0nance", "name": "Raihaan Shouhell"}}, "url": "https://github.com/jenkinsci/jenkins/commit/bc9c862f324eab7584ca95bfb7bde97351bc49ce", "committedDate": "2020-03-23T07:41:46Z", "message": "Add tests and use pre-auth filters"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7d4fda60e93d14372b0e5319b1b4b37dcd32e796", "author": {"user": {"login": "res0nance", "name": "Raihaan Shouhell"}}, "url": "https://github.com/jenkinsci/jenkins/commit/7d4fda60e93d14372b0e5319b1b4b37dcd32e796", "committedDate": "2020-03-23T08:45:32Z", "message": "Add test with a simple filter"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc5MjMyNjI0", "url": "https://github.com/jenkinsci/jenkins/pull/4466#pullrequestreview-379232624", "createdAt": "2020-03-23T08:56:38Z", "commit": {"oid": "7d4fda60e93d14372b0e5319b1b4b37dcd32e796"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "83c84635d08cf9f76519cabe9cb34a7eeebf9feb", "author": {"user": {"login": "res0nance", "name": "Raihaan Shouhell"}}, "url": "https://github.com/jenkinsci/jenkins/commit/83c84635d08cf9f76519cabe9cb34a7eeebf9feb", "committedDate": "2020-03-23T12:36:48Z", "message": "Remove old tests as the new tests should cover this"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e1e3e612e7b136d99256549c69afa411b7c16187", "author": {"user": {"login": "res0nance", "name": "Raihaan Shouhell"}}, "url": "https://github.com/jenkinsci/jenkins/commit/e1e3e612e7b136d99256549c69afa411b7c16187", "committedDate": "2020-04-07T07:47:08Z", "message": "Change annotation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5deb98819f0f585acb9998f56183f51fe74ebdeb", "author": {"user": {"login": "res0nance", "name": "Raihaan Shouhell"}}, "url": "https://github.com/jenkinsci/jenkins/commit/5deb98819f0f585acb9998f56183f51fe74ebdeb", "committedDate": "2020-05-13T01:01:22Z", "message": "Merge branch 'master' into JENKINS-20052"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "123f756f37eea8c988d4f5a48458dbb414a443d5", "author": {"user": {"login": "res0nance", "name": "Raihaan Shouhell"}}, "url": "https://github.com/jenkinsci/jenkins/commit/123f756f37eea8c988d4f5a48458dbb414a443d5", "committedDate": "2020-05-13T01:12:48Z", "message": "Only iterate if there are names or a regex pattern"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIwMDMwNDk4", "url": "https://github.com/jenkinsci/jenkins/pull/4466#pullrequestreview-420030498", "createdAt": "2020-05-28T11:51:09Z", "commit": {"oid": "123f756f37eea8c988d4f5a48458dbb414a443d5"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg4NDYwODcx", "url": "https://github.com/jenkinsci/jenkins/pull/4466#pullrequestreview-488460871", "createdAt": "2020-09-15T08:45:42Z", "commit": {"oid": "123f756f37eea8c988d4f5a48458dbb414a443d5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwODo0NTo0MlrOHR3U5g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwODo0NTo0MlrOHR3U5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODQ5NDMxMA==", "bodyText": "@TobiX identified this as the problem in JENKINS-62661: DescribableList does not implement #add(int,T).", "url": "https://github.com/jenkinsci/jenkins/pull/4466#discussion_r488494310", "createdAt": "2020-09-15T08:45:42Z", "author": {"login": "daniel-beck"}, "path": "core/src/main/java/hudson/model/ListView.java", "diffHunk": "@@ -145,6 +149,9 @@ private Object readResolve() {\n         }\n         initColumns();\n         initJobFilters();\n+        if (statusFilter != null) {\n+            jobFilters.add(0, new StatusFilter(statusFilter));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "123f756f37eea8c988d4f5a48458dbb414a443d5"}, "originalPosition": 33}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1482, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}