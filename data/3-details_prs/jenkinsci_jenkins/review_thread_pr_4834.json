{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ1OTEzMDMz", "number": 4834, "reviewThreads": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQyMjoyOToyOFrOEMrQWA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxNToxNDozNVrOEN3TBA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxNzI3MDY0OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/jenkins/fingerprints/GlobalFingerprintConfiguration.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQyMjoyOToyOFrOGu7W3g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQwNzowMDowMlrOGvsDZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTg2MDE5MA==", "bodyText": "This part does not seem right. IIRC usage of section does not lead to JSON groouping IIRC. Likely you would get null in this conversion", "url": "https://github.com/jenkinsci/jenkins/pull/4834#discussion_r451860190", "createdAt": "2020-07-08T22:29:28Z", "author": {"login": "oleg-nenashev"}, "path": "core/src/main/java/jenkins/fingerprints/GlobalFingerprintConfiguration.java", "diffHunk": "@@ -0,0 +1,68 @@\n+/*\n+ * The MIT License\n+ *\n+ * Copyright (c) 2020, Jenkins project contributors\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included in\n+ * all copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+ * THE SOFTWARE.\n+ */\n+package jenkins.fingerprints;\n+\n+import hudson.DescriptorExtensionList;\n+import hudson.Extension;\n+import hudson.ExtensionList;\n+import jenkins.model.GlobalConfiguration;\n+import net.sf.json.JSONObject;\n+import org.kohsuke.stapler.DataBoundSetter;\n+import org.kohsuke.stapler.StaplerRequest;\n+\n+@Extension\n+public class GlobalFingerprintConfiguration extends GlobalConfiguration {\n+\n+    private FingerprintStorage fingerprintStorage;\n+\n+    public GlobalFingerprintConfiguration() {\n+        load();\n+    }\n+\n+    public static GlobalFingerprintConfiguration get() {\n+        return GlobalConfiguration.all().getInstance(GlobalFingerprintConfiguration.class);\n+    }\n+\n+    public FingerprintStorage getFingerprintStorage() {\n+        return fingerprintStorage;\n+    }\n+\n+    @DataBoundSetter\n+    public void setFingerprintStorage(FingerprintStorage fingerprintStorage) {\n+        this.fingerprintStorage = fingerprintStorage;\n+    }\n+\n+    @Override\n+    public boolean configure(StaplerRequest req, JSONObject json) {\n+        json = json.getJSONObject(\"fingerprints\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "29cb97ba047efbc39bdab8e2cf664fdfe36541f5"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTk0Nzc5OA==", "bodyText": "That seems to be working fine", "url": "https://github.com/jenkinsci/jenkins/pull/4834#discussion_r451947798", "createdAt": "2020-07-09T03:49:28Z", "author": {"login": "stellargo"}, "path": "core/src/main/java/jenkins/fingerprints/GlobalFingerprintConfiguration.java", "diffHunk": "@@ -0,0 +1,68 @@\n+/*\n+ * The MIT License\n+ *\n+ * Copyright (c) 2020, Jenkins project contributors\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included in\n+ * all copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+ * THE SOFTWARE.\n+ */\n+package jenkins.fingerprints;\n+\n+import hudson.DescriptorExtensionList;\n+import hudson.Extension;\n+import hudson.ExtensionList;\n+import jenkins.model.GlobalConfiguration;\n+import net.sf.json.JSONObject;\n+import org.kohsuke.stapler.DataBoundSetter;\n+import org.kohsuke.stapler.StaplerRequest;\n+\n+@Extension\n+public class GlobalFingerprintConfiguration extends GlobalConfiguration {\n+\n+    private FingerprintStorage fingerprintStorage;\n+\n+    public GlobalFingerprintConfiguration() {\n+        load();\n+    }\n+\n+    public static GlobalFingerprintConfiguration get() {\n+        return GlobalConfiguration.all().getInstance(GlobalFingerprintConfiguration.class);\n+    }\n+\n+    public FingerprintStorage getFingerprintStorage() {\n+        return fingerprintStorage;\n+    }\n+\n+    @DataBoundSetter\n+    public void setFingerprintStorage(FingerprintStorage fingerprintStorage) {\n+        this.fingerprintStorage = fingerprintStorage;\n+    }\n+\n+    @Override\n+    public boolean configure(StaplerRequest req, JSONObject json) {\n+        json = json.getJSONObject(\"fingerprints\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTg2MDE5MA=="}, "originalCommit": {"oid": "29cb97ba047efbc39bdab8e2cf664fdfe36541f5"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjY1ODAyMA==", "bodyText": "Something's not right here if you have to do this, the configure method should only contain: https://www.jenkins.io/doc/developer/forms/structured-form-submission/#databinding", "url": "https://github.com/jenkinsci/jenkins/pull/4834#discussion_r452658020", "createdAt": "2020-07-10T07:00:02Z", "author": {"login": "timja"}, "path": "core/src/main/java/jenkins/fingerprints/GlobalFingerprintConfiguration.java", "diffHunk": "@@ -0,0 +1,68 @@\n+/*\n+ * The MIT License\n+ *\n+ * Copyright (c) 2020, Jenkins project contributors\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included in\n+ * all copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+ * THE SOFTWARE.\n+ */\n+package jenkins.fingerprints;\n+\n+import hudson.DescriptorExtensionList;\n+import hudson.Extension;\n+import hudson.ExtensionList;\n+import jenkins.model.GlobalConfiguration;\n+import net.sf.json.JSONObject;\n+import org.kohsuke.stapler.DataBoundSetter;\n+import org.kohsuke.stapler.StaplerRequest;\n+\n+@Extension\n+public class GlobalFingerprintConfiguration extends GlobalConfiguration {\n+\n+    private FingerprintStorage fingerprintStorage;\n+\n+    public GlobalFingerprintConfiguration() {\n+        load();\n+    }\n+\n+    public static GlobalFingerprintConfiguration get() {\n+        return GlobalConfiguration.all().getInstance(GlobalFingerprintConfiguration.class);\n+    }\n+\n+    public FingerprintStorage getFingerprintStorage() {\n+        return fingerprintStorage;\n+    }\n+\n+    @DataBoundSetter\n+    public void setFingerprintStorage(FingerprintStorage fingerprintStorage) {\n+        this.fingerprintStorage = fingerprintStorage;\n+    }\n+\n+    @Override\n+    public boolean configure(StaplerRequest req, JSONObject json) {\n+        json = json.getJSONObject(\"fingerprints\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTg2MDE5MA=="}, "originalCommit": {"oid": "29cb97ba047efbc39bdab8e2cf664fdfe36541f5"}, "originalPosition": 58}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxNzI3MzY3OnYy", "diffSide": "RIGHT", "path": "core/src/main/resources/jenkins/fingerprints/GlobalFingerprintConfiguration/config.jelly", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQyMjozMDozOFrOGu7Ymw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQyMjozMDozOFrOGu7Ymw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTg2MDYzNQ==", "bodyText": "Dropdown describable selector might be more convenient from the UI standpoint. No strong opinio", "url": "https://github.com/jenkinsci/jenkins/pull/4834#discussion_r451860635", "createdAt": "2020-07-08T22:30:38Z", "author": {"login": "oleg-nenashev"}, "path": "core/src/main/resources/jenkins/fingerprints/GlobalFingerprintConfiguration/config.jelly", "diffHunk": "@@ -0,0 +1,27 @@\n+<!--\n+The MIT License\n+Copyright (c) 2020, Jenkins project contributors\n+Permission is hereby granted, free of charge, to any person obtaining a copy\n+of this software and associated documentation files (the \"Software\"), to deal\n+in the Software without restriction, including without limitation the rights\n+to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+copies of the Software, and to permit persons to whom the Software is\n+furnished to do so, subject to the following conditions:\n+The above copyright notice and this permission notice shall be included in\n+all copies or substantial portions of the Software.\n+THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+THE SOFTWARE.\n+-->\n+<?jelly escape-by-default='true'?>\n+<j:jelly xmlns:j=\"jelly:core\" xmlns:f=\"/lib/form\">\n+    <f:section title=\"${%Fingerprints}\" name=\"fingerprints\">\n+        <f:entry title=\"Configure External Fingerprint Storage\">\n+            <f:hetero-radio descriptors=\"${descriptor.descriptors()}\" field=\"fingerprintStorage\"/>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "29cb97ba047efbc39bdab8e2cf664fdfe36541f5"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyMjM3MTAxOnYy", "diffSide": "RIGHT", "path": "core/src/main/resources/jenkins/fingerprints/GlobalFingerprintConfiguration/config.jelly", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQwNzowMDo0M1rOGvsEhQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQxMzo0NzozNFrOGv4CWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjY1ODMwOQ==", "bodyText": "I don't think you need name and it's probably why the json is getting nested\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                <f:section title=\"${%Fingerprints}\" name=\"fingerprints\">\n          \n          \n            \n                <f:section title=\"${%Fingerprints}\">", "url": "https://github.com/jenkinsci/jenkins/pull/4834#discussion_r452658309", "createdAt": "2020-07-10T07:00:43Z", "author": {"login": "timja"}, "path": "core/src/main/resources/jenkins/fingerprints/GlobalFingerprintConfiguration/config.jelly", "diffHunk": "@@ -0,0 +1,27 @@\n+<!--\n+The MIT License\n+Copyright (c) 2020, Jenkins project contributors\n+Permission is hereby granted, free of charge, to any person obtaining a copy\n+of this software and associated documentation files (the \"Software\"), to deal\n+in the Software without restriction, including without limitation the rights\n+to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+copies of the Software, and to permit persons to whom the Software is\n+furnished to do so, subject to the following conditions:\n+The above copyright notice and this permission notice shall be included in\n+all copies or substantial portions of the Software.\n+THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+THE SOFTWARE.\n+-->\n+<?jelly escape-by-default='true'?>\n+<j:jelly xmlns:j=\"jelly:core\" xmlns:f=\"/lib/form\">\n+    <f:section title=\"${%Fingerprints}\" name=\"fingerprints\">", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "adc4ab40009c775aac601d7c33ca20aa0dcb0a0c"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjg1NDM2Mw==", "bodyText": "Thanks @timja!", "url": "https://github.com/jenkinsci/jenkins/pull/4834#discussion_r452854363", "createdAt": "2020-07-10T13:47:34Z", "author": {"login": "stellargo"}, "path": "core/src/main/resources/jenkins/fingerprints/GlobalFingerprintConfiguration/config.jelly", "diffHunk": "@@ -0,0 +1,27 @@\n+<!--\n+The MIT License\n+Copyright (c) 2020, Jenkins project contributors\n+Permission is hereby granted, free of charge, to any person obtaining a copy\n+of this software and associated documentation files (the \"Software\"), to deal\n+in the Software without restriction, including without limitation the rights\n+to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+copies of the Software, and to permit persons to whom the Software is\n+furnished to do so, subject to the following conditions:\n+The above copyright notice and this permission notice shall be included in\n+all copies or substantial portions of the Software.\n+THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+THE SOFTWARE.\n+-->\n+<?jelly escape-by-default='true'?>\n+<j:jelly xmlns:j=\"jelly:core\" xmlns:f=\"/lib/form\">\n+    <f:section title=\"${%Fingerprints}\" name=\"fingerprints\">", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjY1ODMwOQ=="}, "originalCommit": {"oid": "adc4ab40009c775aac601d7c33ca20aa0dcb0a0c"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyMzc0NjE4OnYy", "diffSide": "RIGHT", "path": "core/src/main/resources/jenkins/fingerprints/GlobalFingerprintConfiguration/config.jelly", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQxNDoxODoxOVrOGv5KuA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQxNDoyNToxN1rOGv5boQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjg3Mjg4OA==", "bodyText": "should this be shown at all if there's only the built in fingerprint storage available?", "url": "https://github.com/jenkinsci/jenkins/pull/4834#discussion_r452872888", "createdAt": "2020-07-10T14:18:19Z", "author": {"login": "timja"}, "path": "core/src/main/resources/jenkins/fingerprints/GlobalFingerprintConfiguration/config.jelly", "diffHunk": "@@ -0,0 +1,27 @@\n+<!--\n+The MIT License\n+Copyright (c) 2020, Jenkins project contributors\n+Permission is hereby granted, free of charge, to any person obtaining a copy\n+of this software and associated documentation files (the \"Software\"), to deal\n+in the Software without restriction, including without limitation the rights\n+to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+copies of the Software, and to permit persons to whom the Software is\n+furnished to do so, subject to the following conditions:\n+The above copyright notice and this permission notice shall be included in\n+all copies or substantial portions of the Software.\n+THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+THE SOFTWARE.\n+-->\n+<?jelly escape-by-default='true'?>\n+<j:jelly xmlns:j=\"jelly:core\" xmlns:f=\"/lib/form\">\n+    <f:section title=\"${%Fingerprints}\">\n+        <f:entry>\n+            <f:dropdownDescriptorSelector field=\"fingerprintStorage\" title=\"Configure External Fingerprint Storage\"/>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b1158b47a2ab896c3ba3522902910b39ade8fb38"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjg3MzY0NQ==", "bodyText": "I had the same thing in mind, I think we should not", "url": "https://github.com/jenkinsci/jenkins/pull/4834#discussion_r452873645", "createdAt": "2020-07-10T14:19:32Z", "author": {"login": "stellargo"}, "path": "core/src/main/resources/jenkins/fingerprints/GlobalFingerprintConfiguration/config.jelly", "diffHunk": "@@ -0,0 +1,27 @@\n+<!--\n+The MIT License\n+Copyright (c) 2020, Jenkins project contributors\n+Permission is hereby granted, free of charge, to any person obtaining a copy\n+of this software and associated documentation files (the \"Software\"), to deal\n+in the Software without restriction, including without limitation the rights\n+to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+copies of the Software, and to permit persons to whom the Software is\n+furnished to do so, subject to the following conditions:\n+The above copyright notice and this permission notice shall be included in\n+all copies or substantial portions of the Software.\n+THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+THE SOFTWARE.\n+-->\n+<?jelly escape-by-default='true'?>\n+<j:jelly xmlns:j=\"jelly:core\" xmlns:f=\"/lib/form\">\n+    <f:section title=\"${%Fingerprints}\">\n+        <f:entry>\n+            <f:dropdownDescriptorSelector field=\"fingerprintStorage\" title=\"Configure External Fingerprint Storage\"/>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjg3Mjg4OA=="}, "originalCommit": {"oid": "b1158b47a2ab896c3ba3522902910b39ade8fb38"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjg3NzIxNw==", "bodyText": "it would be the best UX imo, no need to show data to the user that they can't do anything with", "url": "https://github.com/jenkinsci/jenkins/pull/4834#discussion_r452877217", "createdAt": "2020-07-10T14:25:17Z", "author": {"login": "timja"}, "path": "core/src/main/resources/jenkins/fingerprints/GlobalFingerprintConfiguration/config.jelly", "diffHunk": "@@ -0,0 +1,27 @@\n+<!--\n+The MIT License\n+Copyright (c) 2020, Jenkins project contributors\n+Permission is hereby granted, free of charge, to any person obtaining a copy\n+of this software and associated documentation files (the \"Software\"), to deal\n+in the Software without restriction, including without limitation the rights\n+to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+copies of the Software, and to permit persons to whom the Software is\n+furnished to do so, subject to the following conditions:\n+The above copyright notice and this permission notice shall be included in\n+all copies or substantial portions of the Software.\n+THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+THE SOFTWARE.\n+-->\n+<?jelly escape-by-default='true'?>\n+<j:jelly xmlns:j=\"jelly:core\" xmlns:f=\"/lib/form\">\n+    <f:section title=\"${%Fingerprints}\">\n+        <f:entry>\n+            <f:dropdownDescriptorSelector field=\"fingerprintStorage\" title=\"Configure External Fingerprint Storage\"/>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjg3Mjg4OA=="}, "originalCommit": {"oid": "b1158b47a2ab896c3ba3522902910b39ade8fb38"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNzIwNjc3OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/jenkins/fingerprints/FileFingerprintStorage.java", "isResolved": true, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQxODo1MzoxMlrOGwWVDw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxMzoyNzoxOFrOGx-Dkg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzM1MDY3MQ==", "bodyText": "Disabled Fingerprint storage impl is a great idea IMHO, but not sure it is a good default here", "url": "https://github.com/jenkinsci/jenkins/pull/4834#discussion_r453350671", "createdAt": "2020-07-12T18:53:12Z", "author": {"login": "oleg-nenashev"}, "path": "core/src/main/java/jenkins/fingerprints/FileFingerprintStorage.java", "diffHunk": "@@ -255,4 +261,14 @@ private static String serialize(Fingerprint.RangeSet src) {\n         return buf.toString();\n     }\n \n+    @Extension\n+    public static class DescriptorImpl extends FingerprintStorageDescriptor {\n+\n+        @Override\n+        public String getDisplayName() {\n+            return \"Disabled\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0ed391051584cf0e5eb06a7c8d02e662e9dd86b2"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzM5MDA1MA==", "bodyText": "What would you suggest? Local Disk Storage, File Fingerprint Storage seem like other few options.", "url": "https://github.com/jenkinsci/jenkins/pull/4834#discussion_r453390050", "createdAt": "2020-07-13T01:17:57Z", "author": {"login": "stellargo"}, "path": "core/src/main/java/jenkins/fingerprints/FileFingerprintStorage.java", "diffHunk": "@@ -255,4 +261,14 @@ private static String serialize(Fingerprint.RangeSet src) {\n         return buf.toString();\n     }\n \n+    @Extension\n+    public static class DescriptorImpl extends FingerprintStorageDescriptor {\n+\n+        @Override\n+        public String getDisplayName() {\n+            return \"Disabled\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzM1MDY3MQ=="}, "originalCommit": {"oid": "0ed391051584cf0e5eb06a7c8d02e662e9dd86b2"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzQyNzEzOQ==", "bodyText": "LocalFileStorage would be my vote", "url": "https://github.com/jenkinsci/jenkins/pull/4834#discussion_r453427139", "createdAt": "2020-07-13T04:22:24Z", "author": {"login": "afalko"}, "path": "core/src/main/java/jenkins/fingerprints/FileFingerprintStorage.java", "diffHunk": "@@ -255,4 +261,14 @@ private static String serialize(Fingerprint.RangeSet src) {\n         return buf.toString();\n     }\n \n+    @Extension\n+    public static class DescriptorImpl extends FingerprintStorageDescriptor {\n+\n+        @Override\n+        public String getDisplayName() {\n+            return \"Disabled\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzM1MDY3MQ=="}, "originalCommit": {"oid": "0ed391051584cf0e5eb06a7c8d02e662e9dd86b2"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzc4MDU0Nw==", "bodyText": "@oleg-nenashev would be great to hear your vote too :)", "url": "https://github.com/jenkinsci/jenkins/pull/4834#discussion_r453780547", "createdAt": "2020-07-13T16:36:05Z", "author": {"login": "stellargo"}, "path": "core/src/main/java/jenkins/fingerprints/FileFingerprintStorage.java", "diffHunk": "@@ -255,4 +261,14 @@ private static String serialize(Fingerprint.RangeSet src) {\n         return buf.toString();\n     }\n \n+    @Extension\n+    public static class DescriptorImpl extends FingerprintStorageDescriptor {\n+\n+        @Override\n+        public String getDisplayName() {\n+            return \"Disabled\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzM1MDY3MQ=="}, "originalCommit": {"oid": "0ed391051584cf0e5eb06a7c8d02e662e9dd86b2"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDUxNDQ5NQ==", "bodyText": "Local fingerprint storage?", "url": "https://github.com/jenkinsci/jenkins/pull/4834#discussion_r454514495", "createdAt": "2020-07-14T17:15:54Z", "author": {"login": "timja"}, "path": "core/src/main/java/jenkins/fingerprints/FileFingerprintStorage.java", "diffHunk": "@@ -255,4 +261,14 @@ private static String serialize(Fingerprint.RangeSet src) {\n         return buf.toString();\n     }\n \n+    @Extension\n+    public static class DescriptorImpl extends FingerprintStorageDescriptor {\n+\n+        @Override\n+        public String getDisplayName() {\n+            return \"Disabled\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzM1MDY3MQ=="}, "originalCommit": {"oid": "0ed391051584cf0e5eb06a7c8d02e662e9dd86b2"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTA1MDEzMA==", "bodyText": "I am changing it to Local Fingerprint Storage, mainly due to the face that it goes along with the plugin being called Redis Fingerprint Storage. But I am happy to change it if there are other strong opinions.", "url": "https://github.com/jenkinsci/jenkins/pull/4834#discussion_r455050130", "createdAt": "2020-07-15T13:27:18Z", "author": {"login": "stellargo"}, "path": "core/src/main/java/jenkins/fingerprints/FileFingerprintStorage.java", "diffHunk": "@@ -255,4 +261,14 @@ private static String serialize(Fingerprint.RangeSet src) {\n         return buf.toString();\n     }\n \n+    @Extension\n+    public static class DescriptorImpl extends FingerprintStorageDescriptor {\n+\n+        @Override\n+        public String getDisplayName() {\n+            return \"Disabled\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzM1MDY3MQ=="}, "originalCommit": {"oid": "0ed391051584cf0e5eb06a7c8d02e662e9dd86b2"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNzIwNzQ5OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/jenkins/fingerprints/FingerprintStorage.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQxODo1NDoxN1rOGwWVcQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxNDoyODoxOVrOGwrEWg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzM1MDc2OQ==", "bodyText": "I doubt this is needed for an abstract class. Am I missing something?", "url": "https://github.com/jenkinsci/jenkins/pull/4834#discussion_r453350769", "createdAt": "2020-07-12T18:54:17Z", "author": {"login": "oleg-nenashev"}, "path": "core/src/main/java/jenkins/fingerprints/FingerprintStorage.java", "diffHunk": "@@ -39,14 +41,14 @@\n  * @author Sumit Sarin\n  */\n @Restricted(Beta.class)\n-public abstract class FingerprintStorage implements ExtensionPoint {\n+@Symbol(\"storage\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0ed391051584cf0e5eb06a7c8d02e662e9dd86b2"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzM5MDE0MQ==", "bodyText": "jenkinsci/redis-fingerprint-storage-plugin#36 (comment)", "url": "https://github.com/jenkinsci/jenkins/pull/4834#discussion_r453390141", "createdAt": "2020-07-13T01:18:31Z", "author": {"login": "stellargo"}, "path": "core/src/main/java/jenkins/fingerprints/FingerprintStorage.java", "diffHunk": "@@ -39,14 +41,14 @@\n  * @author Sumit Sarin\n  */\n @Restricted(Beta.class)\n-public abstract class FingerprintStorage implements ExtensionPoint {\n+@Symbol(\"storage\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzM1MDc2OQ=="}, "originalCommit": {"oid": "0ed391051584cf0e5eb06a7c8d02e662e9dd86b2"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzY5MDQ1OA==", "bodyText": "Fixed :)", "url": "https://github.com/jenkinsci/jenkins/pull/4834#discussion_r453690458", "createdAt": "2020-07-13T14:28:19Z", "author": {"login": "stellargo"}, "path": "core/src/main/java/jenkins/fingerprints/FingerprintStorage.java", "diffHunk": "@@ -39,14 +41,14 @@\n  * @author Sumit Sarin\n  */\n @Restricted(Beta.class)\n-public abstract class FingerprintStorage implements ExtensionPoint {\n+@Symbol(\"storage\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzM1MDc2OQ=="}, "originalCommit": {"oid": "0ed391051584cf0e5eb06a7c8d02e662e9dd86b2"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNzIxNzYwOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/jenkins/fingerprints/GlobalFingerprintConfiguration.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQxOTowNjozMVrOGwWaQQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQxOTowNjozMVrOGwWaQQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzM1MjAwMQ==", "bodyText": "Better to use \"LOGGER\" for static final fields", "url": "https://github.com/jenkinsci/jenkins/pull/4834#discussion_r453352001", "createdAt": "2020-07-12T19:06:31Z", "author": {"login": "oleg-nenashev"}, "path": "core/src/main/java/jenkins/fingerprints/GlobalFingerprintConfiguration.java", "diffHunk": "@@ -0,0 +1,74 @@\n+/*\n+ * The MIT License\n+ *\n+ * Copyright (c) 2020, Jenkins project contributors\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included in\n+ * all copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+ * THE SOFTWARE.\n+ */\n+package jenkins.fingerprints;\n+\n+import hudson.DescriptorExtensionList;\n+import hudson.Extension;\n+import hudson.ExtensionList;\n+import jenkins.model.GlobalConfiguration;\n+import net.sf.json.JSONObject;\n+import org.jenkinsci.Symbol;\n+import org.kohsuke.stapler.DataBoundSetter;\n+import org.kohsuke.stapler.StaplerRequest;\n+\n+import java.util.logging.Logger;\n+\n+@Extension\n+@Symbol(\"fingerprints\")\n+public class GlobalFingerprintConfiguration extends GlobalConfiguration {\n+\n+    private FingerprintStorage fingerprintStorage = ExtensionList.lookupSingleton(FileFingerprintStorage.class);\n+    private static final Logger logger = Logger.getLogger(GlobalFingerprintConfiguration.class.getName());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0ed391051584cf0e5eb06a7c8d02e662e9dd86b2"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNzk2MTI2OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/jenkins/fingerprints/GlobalFingerprintConfiguration.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QwNjoxMjoxNFrOGwcpJQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QwNjoxMjoxNFrOGwcpJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzQ1NDExNw==", "bodyText": "This is the line you would need to change to be \u2018storage\u2019 not the symbol you added above", "url": "https://github.com/jenkinsci/jenkins/pull/4834#discussion_r453454117", "createdAt": "2020-07-13T06:12:14Z", "author": {"login": "timja"}, "path": "core/src/main/java/jenkins/fingerprints/GlobalFingerprintConfiguration.java", "diffHunk": "@@ -0,0 +1,74 @@\n+/*\n+ * The MIT License\n+ *\n+ * Copyright (c) 2020, Jenkins project contributors\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included in\n+ * all copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+ * THE SOFTWARE.\n+ */\n+package jenkins.fingerprints;\n+\n+import hudson.DescriptorExtensionList;\n+import hudson.Extension;\n+import hudson.ExtensionList;\n+import jenkins.model.GlobalConfiguration;\n+import net.sf.json.JSONObject;\n+import org.jenkinsci.Symbol;\n+import org.kohsuke.stapler.DataBoundSetter;\n+import org.kohsuke.stapler.StaplerRequest;\n+\n+import java.util.logging.Logger;\n+\n+@Extension\n+@Symbol(\"fingerprints\")\n+public class GlobalFingerprintConfiguration extends GlobalConfiguration {\n+\n+    private FingerprintStorage fingerprintStorage = ExtensionList.lookupSingleton(FileFingerprintStorage.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b0db94ecc44d625fd85990b1dcfe64dfb0bdc695"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyOTcyOTMyOnYy", "diffSide": "RIGHT", "path": "docs/enum.drawio", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxNToxNDozNVrOGwtIgQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxNTozNjozMlrOGwuGEQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzcyNDI4OQ==", "bodyText": "did you mean to commit this?", "url": "https://github.com/jenkinsci/jenkins/pull/4834#discussion_r453724289", "createdAt": "2020-07-13T15:14:35Z", "author": {"login": "timja"}, "path": "docs/enum.drawio", "diffHunk": "@@ -0,0 +1 @@\n+<mxfile host=\"Electron\" modified=\"2020-07-13T01:57:54.173Z\" agent=\"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_0) AppleWebKit/537.36 (KHTML, like Gecko) draw.io/12.5.3 Chrome/78.0.3904.130 Electron/7.1.9 Safari/537.36\" etag=\"IKy9O4FPg6oUdDHKV1zN\" version=\"12.5.3\" type=\"device\"><diagram id=\"8TkNz_Oakh8Z76JZyDV2\" name=\"Page-1\">3VnRcqM2FP0aP3oHkAH70XGSbTvdJrPpTDePMhKgroxcIa/t/fpekDAgSO2ksN7Ji0e6ki5wzkE6vkzQanP4KPE2/SQI5RPPIYcJup143mIWwG8ROJrAItSBRDKiQ04deGLfqQ66VXTHCM1NTIeUEFyxbTsYiSyjkWrFsJRi354WC05agS1OaOs2isBThDntTPuLEZXq6NxvzP6FsiStruw6ZmSDq8kmkKeYiH0jhO4maCWFULq1OawoL7Br43L/wujpxiTN1CULNsvF3f6B4MD558/HwzHahwmfmizfMN+ZB/5MCcvvWZZQuZUsU09KyAIj/QzqWAEDyYED6NzsU6bo0xZHxcgeVACxVG049Fxo4nyriYnZgcK93MSM85XgQpaJEMF0HkcQz5UUX2ljJIjmdB3DiLlJKhU9vPj07glT0CIVG6rkEaaYBQj5eonR4RQZWvY1q+7cxNImo1UQGyUlp9w12NAweL8Ce9TB/rcC+0eQ9yecAeZyPNCpS3wa9oG+CEKEg2FAXzg/G+azDub3jNP3L3fPuTr0fgf6j1ysMW+AvxJZzJKdxIqJbDwK4nlEo14K1nN/Blv7IBT487b6F1dnIOgw0MU4I8vi1IRexHGes6gNLT0w9QXajmk/F+0PvundHhpDt0fTIThPCxrKBPqKlFSn7kuwwl2JnYzoeUEpLBOqzp1xXZoaPPg9NFQxSTnI8Vv7dvuoMVd4FCDkWgWutQd6ocWufkyzqnl8W4m8mZXIsxJpHDqJSqWcHvvt4gmvIx5QhTx+qRIUnefmSL2o7P0skptdVXJBWykIvVVyriU5e2caWXLzsSQXjiC5AVXmzi6UGbqmzOwNafpmmdk28QfLbNGRWenDJ17AAbGbNdjwIClan6l+pPz1Mqwk5bQkpfe+/xBVJV/3FTvmgEJE/++ENfxOnQ9OGCz6xfKDtOqHrcu7TvBGrYZtrZ722jNarRNVE0Uc53QUPVe7dkPQfwgFrSUEl+V60ELBPzhvTpXIuoIG26vaEm575Uxk1DLWJoQ5S7LiPQC1wT9YdFOYaBZhvjQDG0YIf8nFS7HLSHlyD+TCrbPwtGk1dOehHuHZvA5mwt1uyWWVCpH37CrvhgTfs96asMvCrIcE2+IOR4LXIeFOF1ycXzOmGOD3HQB4t4TYFnEaXJuQbmGmLETqikCHiDzF26IZHTkDZOT5msBaQ/j7+hTA0dekBPZhpyALNXG7VhDHXn+tgATrwB+oUIZ8iw+3r1rQd0COVixwu/Way2xPDkegutAN1QbouTl2xg3VDui5MTK6G6o+P5x1Q1f99zez3bT9zl5qdXzb39uVi5FtudstVz1k0I9SnBUFWsjq7LYEq8LK/H2ucv5utm7kWR8yTsJpbhWLYSwNdOsPVJrY+isfuvsX</diagram></mxfile>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bc10ff80d301bbe1aff7427d9028b79e138586d7"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzc0MDA0OQ==", "bodyText": "woah no, my apologies.", "url": "https://github.com/jenkinsci/jenkins/pull/4834#discussion_r453740049", "createdAt": "2020-07-13T15:36:32Z", "author": {"login": "stellargo"}, "path": "docs/enum.drawio", "diffHunk": "@@ -0,0 +1 @@\n+<mxfile host=\"Electron\" modified=\"2020-07-13T01:57:54.173Z\" agent=\"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_0) AppleWebKit/537.36 (KHTML, like Gecko) draw.io/12.5.3 Chrome/78.0.3904.130 Electron/7.1.9 Safari/537.36\" etag=\"IKy9O4FPg6oUdDHKV1zN\" version=\"12.5.3\" type=\"device\"><diagram id=\"8TkNz_Oakh8Z76JZyDV2\" name=\"Page-1\">3VnRcqM2FP0aP3oHkAH70XGSbTvdJrPpTDePMhKgroxcIa/t/fpekDAgSO2ksN7Ji0e6ki5wzkE6vkzQanP4KPE2/SQI5RPPIYcJup143mIWwG8ROJrAItSBRDKiQ04deGLfqQ66VXTHCM1NTIeUEFyxbTsYiSyjkWrFsJRi354WC05agS1OaOs2isBThDntTPuLEZXq6NxvzP6FsiStruw6ZmSDq8kmkKeYiH0jhO4maCWFULq1OawoL7Br43L/wujpxiTN1CULNsvF3f6B4MD558/HwzHahwmfmizfMN+ZB/5MCcvvWZZQuZUsU09KyAIj/QzqWAEDyYED6NzsU6bo0xZHxcgeVACxVG049Fxo4nyriYnZgcK93MSM85XgQpaJEMF0HkcQz5UUX2ljJIjmdB3DiLlJKhU9vPj07glT0CIVG6rkEaaYBQj5eonR4RQZWvY1q+7cxNImo1UQGyUlp9w12NAweL8Ce9TB/rcC+0eQ9yecAeZyPNCpS3wa9oG+CEKEg2FAXzg/G+azDub3jNP3L3fPuTr0fgf6j1ysMW+AvxJZzJKdxIqJbDwK4nlEo14K1nN/Blv7IBT487b6F1dnIOgw0MU4I8vi1IRexHGes6gNLT0w9QXajmk/F+0PvundHhpDt0fTIThPCxrKBPqKlFSn7kuwwl2JnYzoeUEpLBOqzp1xXZoaPPg9NFQxSTnI8Vv7dvuoMVd4FCDkWgWutQd6ocWufkyzqnl8W4m8mZXIsxJpHDqJSqWcHvvt4gmvIx5QhTx+qRIUnefmSL2o7P0skptdVXJBWykIvVVyriU5e2caWXLzsSQXjiC5AVXmzi6UGbqmzOwNafpmmdk28QfLbNGRWenDJ17AAbGbNdjwIClan6l+pPz1Mqwk5bQkpfe+/xBVJV/3FTvmgEJE/++ENfxOnQ9OGCz6xfKDtOqHrcu7TvBGrYZtrZ722jNarRNVE0Uc53QUPVe7dkPQfwgFrSUEl+V60ELBPzhvTpXIuoIG26vaEm575Uxk1DLWJoQ5S7LiPQC1wT9YdFOYaBZhvjQDG0YIf8nFS7HLSHlyD+TCrbPwtGk1dOehHuHZvA5mwt1uyWWVCpH37CrvhgTfs96asMvCrIcE2+IOR4LXIeFOF1ycXzOmGOD3HQB4t4TYFnEaXJuQbmGmLETqikCHiDzF26IZHTkDZOT5msBaQ/j7+hTA0dekBPZhpyALNXG7VhDHXn+tgATrwB+oUIZ8iw+3r1rQd0COVixwu/Way2xPDkegutAN1QbouTl2xg3VDui5MTK6G6o+P5x1Q1f99zez3bT9zl5qdXzb39uVi5FtudstVz1k0I9SnBUFWsjq7LYEq8LK/H2ucv5utm7kWR8yTsJpbhWLYSwNdOsPVJrY+isfuvsX</diagram></mxfile>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzcyNDI4OQ=="}, "originalCommit": {"oid": "bc10ff80d301bbe1aff7427d9028b79e138586d7"}, "originalPosition": 1}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 279, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}