{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE1NzM1MTg3", "number": 4718, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMFQxNTozMzoyMFrOD6_jhg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQwODoxMzoyNlrOD7ijMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzMTg1Mjg2OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/hudson/util/RobustReflectionConverter.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMFQxNTozMzoyMFrOGTFLfg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxMDo0NTozOVrOGTW5Rg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjY2MDk5MA==", "bodyText": "is this worth logging somewhere even at fine?", "url": "https://github.com/jenkinsci/jenkins/pull/4718#discussion_r422660990", "createdAt": "2020-05-10T15:33:20Z", "author": {"login": "timja"}, "path": "core/src/main/java/hudson/util/RobustReflectionConverter.java", "diffHunk": "@@ -365,7 +365,15 @@ public Object doUnmarshal(final Object result, final HierarchicalStreamReader re\n \n         // Report any class/field errors in Saveable objects\n         if (context.get(\"ReadError\") != null && context.get(\"Saveable\") == result) {\n-            OldDataMonitor.report((Saveable)result, (ArrayList<Throwable>)context.get(\"ReadError\"));\n+            // Avoid any error in OldDataMonitor to be catastrophic. See JENKINS-62231 and JENKINS-59582\n+            // The root cause is the OldDataMonitor extension is not ready before a plugin triggers an error, for \n+            // example when trying to load a field that was created by a new version and you downgrade to the previous\n+            // one.\n+            try {\n+                OldDataMonitor.report((Saveable) result, (ArrayList<Throwable>) context.get(\"ReadError\"));\n+            } catch (Throwable ignored) {\n+                // it should be already reported", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f621e5b68b59219394e8b0fc1d56d46d557f0619"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjk1MTIzOA==", "bodyText": "done", "url": "https://github.com/jenkinsci/jenkins/pull/4718#discussion_r422951238", "createdAt": "2020-05-11T10:45:39Z", "author": {"login": "MRamonLeon"}, "path": "core/src/main/java/hudson/util/RobustReflectionConverter.java", "diffHunk": "@@ -365,7 +365,15 @@ public Object doUnmarshal(final Object result, final HierarchicalStreamReader re\n \n         // Report any class/field errors in Saveable objects\n         if (context.get(\"ReadError\") != null && context.get(\"Saveable\") == result) {\n-            OldDataMonitor.report((Saveable)result, (ArrayList<Throwable>)context.get(\"ReadError\"));\n+            // Avoid any error in OldDataMonitor to be catastrophic. See JENKINS-62231 and JENKINS-59582\n+            // The root cause is the OldDataMonitor extension is not ready before a plugin triggers an error, for \n+            // example when trying to load a field that was created by a new version and you downgrade to the previous\n+            // one.\n+            try {\n+                OldDataMonitor.report((Saveable) result, (ArrayList<Throwable>) context.get(\"ReadError\"));\n+            } catch (Throwable ignored) {\n+                // it should be already reported", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjY2MDk5MA=="}, "originalCommit": {"oid": "f621e5b68b59219394e8b0fc1d56d46d557f0619"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzNzU4NTI4OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/hudson/util/RobustReflectionConverter.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQwODoxMzowN1rOGT7JLQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQwODo1Njo0MlrOGT85Uw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzU0NTEzMw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            String additionalMessage = \". Be sure this code is executed after InitMilestone.EXTENSIONS_AUGMENTED stage, for example in Plugin#postInitialize instead of Plugin#start\";\n          \n          \n            \n                            String additionalMessage = \". Make sure this code is executed after InitMilestone.EXTENSIONS_AUGMENTED stage, for example in Plugin#postInitialize instead of Plugin#start\";", "url": "https://github.com/jenkinsci/jenkins/pull/4718#discussion_r423545133", "createdAt": "2020-05-12T08:13:07Z", "author": {"login": "varyvol"}, "path": "core/src/main/java/hudson/util/RobustReflectionConverter.java", "diffHunk": "@@ -365,7 +367,22 @@ public Object doUnmarshal(final Object result, final HierarchicalStreamReader re\n \n         // Report any class/field errors in Saveable objects\n         if (context.get(\"ReadError\") != null && context.get(\"Saveable\") == result) {\n-            OldDataMonitor.report((Saveable)result, (ArrayList<Throwable>)context.get(\"ReadError\"));\n+            // Avoid any error in OldDataMonitor to be catastrophic. See JENKINS-62231 and JENKINS-59582\n+            // The root cause is the OldDataMonitor extension is not ready before a plugin triggers an error, for \n+            // example when trying to load a field that was created by a new version and you downgrade to the previous\n+            // one.\n+            try {\n+                OldDataMonitor.report((Saveable) result, (ArrayList<Throwable>) context.get(\"ReadError\"));\n+            } catch (Throwable t) {\n+                // it should be already reported, but we report with INFO just in case\n+                StringBuilder message = new StringBuilder(\"There was a problem reporting unmarshalling field errors\");\n+                String additionalMessage = \". Be sure this code is executed after InitMilestone.EXTENSIONS_AUGMENTED stage, for example in Plugin#postInitialize instead of Plugin#start\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5d40c424f02fc511f5e9096ca9c16162c9fd862a"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzU3Mzg0Mw==", "bodyText": "Changed, thanks", "url": "https://github.com/jenkinsci/jenkins/pull/4718#discussion_r423573843", "createdAt": "2020-05-12T08:56:42Z", "author": {"login": "MRamonLeon"}, "path": "core/src/main/java/hudson/util/RobustReflectionConverter.java", "diffHunk": "@@ -365,7 +367,22 @@ public Object doUnmarshal(final Object result, final HierarchicalStreamReader re\n \n         // Report any class/field errors in Saveable objects\n         if (context.get(\"ReadError\") != null && context.get(\"Saveable\") == result) {\n-            OldDataMonitor.report((Saveable)result, (ArrayList<Throwable>)context.get(\"ReadError\"));\n+            // Avoid any error in OldDataMonitor to be catastrophic. See JENKINS-62231 and JENKINS-59582\n+            // The root cause is the OldDataMonitor extension is not ready before a plugin triggers an error, for \n+            // example when trying to load a field that was created by a new version and you downgrade to the previous\n+            // one.\n+            try {\n+                OldDataMonitor.report((Saveable) result, (ArrayList<Throwable>) context.get(\"ReadError\"));\n+            } catch (Throwable t) {\n+                // it should be already reported, but we report with INFO just in case\n+                StringBuilder message = new StringBuilder(\"There was a problem reporting unmarshalling field errors\");\n+                String additionalMessage = \". Be sure this code is executed after InitMilestone.EXTENSIONS_AUGMENTED stage, for example in Plugin#postInitialize instead of Plugin#start\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzU0NTEzMw=="}, "originalCommit": {"oid": "5d40c424f02fc511f5e9096ca9c16162c9fd862a"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzNzU4NjQyOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/hudson/util/RobustReflectionConverter.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQwODoxMzoyNlrOGT7J4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQwODo1NzowNlrOGT86QQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzU0NTMxMg==", "bodyText": "Better if you declare the variable inside the if clase, where you are actually using it?", "url": "https://github.com/jenkinsci/jenkins/pull/4718#discussion_r423545312", "createdAt": "2020-05-12T08:13:26Z", "author": {"login": "varyvol"}, "path": "core/src/main/java/hudson/util/RobustReflectionConverter.java", "diffHunk": "@@ -365,7 +367,22 @@ public Object doUnmarshal(final Object result, final HierarchicalStreamReader re\n \n         // Report any class/field errors in Saveable objects\n         if (context.get(\"ReadError\") != null && context.get(\"Saveable\") == result) {\n-            OldDataMonitor.report((Saveable)result, (ArrayList<Throwable>)context.get(\"ReadError\"));\n+            // Avoid any error in OldDataMonitor to be catastrophic. See JENKINS-62231 and JENKINS-59582\n+            // The root cause is the OldDataMonitor extension is not ready before a plugin triggers an error, for \n+            // example when trying to load a field that was created by a new version and you downgrade to the previous\n+            // one.\n+            try {\n+                OldDataMonitor.report((Saveable) result, (ArrayList<Throwable>) context.get(\"ReadError\"));\n+            } catch (Throwable t) {\n+                // it should be already reported, but we report with INFO just in case\n+                StringBuilder message = new StringBuilder(\"There was a problem reporting unmarshalling field errors\");\n+                String additionalMessage = \". Be sure this code is executed after InitMilestone.EXTENSIONS_AUGMENTED stage, for example in Plugin#postInitialize instead of Plugin#start\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5d40c424f02fc511f5e9096ca9c16162c9fd862a"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzU3NDA4MQ==", "bodyText": "done by removing the var and using the string directly", "url": "https://github.com/jenkinsci/jenkins/pull/4718#discussion_r423574081", "createdAt": "2020-05-12T08:57:06Z", "author": {"login": "MRamonLeon"}, "path": "core/src/main/java/hudson/util/RobustReflectionConverter.java", "diffHunk": "@@ -365,7 +367,22 @@ public Object doUnmarshal(final Object result, final HierarchicalStreamReader re\n \n         // Report any class/field errors in Saveable objects\n         if (context.get(\"ReadError\") != null && context.get(\"Saveable\") == result) {\n-            OldDataMonitor.report((Saveable)result, (ArrayList<Throwable>)context.get(\"ReadError\"));\n+            // Avoid any error in OldDataMonitor to be catastrophic. See JENKINS-62231 and JENKINS-59582\n+            // The root cause is the OldDataMonitor extension is not ready before a plugin triggers an error, for \n+            // example when trying to load a field that was created by a new version and you downgrade to the previous\n+            // one.\n+            try {\n+                OldDataMonitor.report((Saveable) result, (ArrayList<Throwable>) context.get(\"ReadError\"));\n+            } catch (Throwable t) {\n+                // it should be already reported, but we report with INFO just in case\n+                StringBuilder message = new StringBuilder(\"There was a problem reporting unmarshalling field errors\");\n+                String additionalMessage = \". Be sure this code is executed after InitMilestone.EXTENSIONS_AUGMENTED stage, for example in Plugin#postInitialize instead of Plugin#start\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzU0NTMxMg=="}, "originalCommit": {"oid": "5d40c424f02fc511f5e9096ca9c16162c9fd862a"}, "originalPosition": 23}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 550, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}