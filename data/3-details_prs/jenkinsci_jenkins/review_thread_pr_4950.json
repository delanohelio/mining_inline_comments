{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk0MTE3NDMy", "number": 4950, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQwNzoxODozMVrOEpWHxg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQwNzoxODozMVrOEpWHxg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzExNzg5NTEwOnYy", "diffSide": "RIGHT", "path": "test/src/test/java/jenkins/model/JenkinsManagePermissionTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQwNzoxODozMVrOHa9eAw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQxMTo0MzozM1rOHbqkaQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODAzMjEzMQ==", "bodyText": "Nit: Much easier with j.createDummySecurityRealm (all users with username=password exist) and MockAuthorizationStrategy which has a fluent API for granting permissions.", "url": "https://github.com/jenkinsci/jenkins/pull/4950#discussion_r498032131", "createdAt": "2020-10-01T07:18:31Z", "author": {"login": "daniel-beck"}, "path": "test/src/test/java/jenkins/model/JenkinsManagePermissionTest.java", "diffHunk": "@@ -226,4 +239,51 @@ public void describeMismatch(Object item, Description description) {\n \n     // End of HudsonTest\n     //-------\n+\n+    @Issue(\"JENKINS-63795\")\n+    @Test\n+    public void managePermissionShouldBeAllowedToRestart() throws IOException {\n+\n+        //GIVEN a Jenkins with 3 users : ADMINISTER, MANAGE and READ\n+        HudsonPrivateSecurityRealm realm = new HudsonPrivateSecurityRealm(false, false, null);\n+        User adminUser = realm.createAccount(\"Administer\", \"G0d\");\n+        User manageUser = realm.createAccount(\"Manager\", \"TheB00S\");\n+        User readUser = realm.createAccount(\"Reader\", \"BookW00rm\");\n+        j.jenkins.setSecurityRealm(realm);\n+\n+        ProjectMatrixAuthorizationStrategy authorizationStrategy = new ProjectMatrixAuthorizationStrategy();\n+        authorizationStrategy.add(Jenkins.ADMINISTER, adminUser.getId());\n+\n+        authorizationStrategy.add(Jenkins.MANAGE, manageUser.getId());\n+        authorizationStrategy.add(Jenkins.READ, manageUser.getId());\n+\n+        authorizationStrategy.add(Jenkins.READ, readUser.getId());\n+        j.jenkins.setAuthorizationStrategy(authorizationStrategy);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a98fe6a353e47842f1f05ed0dc088da94e8919ef"}, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODc3MTA0OQ==", "bodyText": "ok thanks :)", "url": "https://github.com/jenkinsci/jenkins/pull/4950#discussion_r498771049", "createdAt": "2020-10-02T11:43:33Z", "author": {"login": "aHenryJard"}, "path": "test/src/test/java/jenkins/model/JenkinsManagePermissionTest.java", "diffHunk": "@@ -226,4 +239,51 @@ public void describeMismatch(Object item, Description description) {\n \n     // End of HudsonTest\n     //-------\n+\n+    @Issue(\"JENKINS-63795\")\n+    @Test\n+    public void managePermissionShouldBeAllowedToRestart() throws IOException {\n+\n+        //GIVEN a Jenkins with 3 users : ADMINISTER, MANAGE and READ\n+        HudsonPrivateSecurityRealm realm = new HudsonPrivateSecurityRealm(false, false, null);\n+        User adminUser = realm.createAccount(\"Administer\", \"G0d\");\n+        User manageUser = realm.createAccount(\"Manager\", \"TheB00S\");\n+        User readUser = realm.createAccount(\"Reader\", \"BookW00rm\");\n+        j.jenkins.setSecurityRealm(realm);\n+\n+        ProjectMatrixAuthorizationStrategy authorizationStrategy = new ProjectMatrixAuthorizationStrategy();\n+        authorizationStrategy.add(Jenkins.ADMINISTER, adminUser.getId());\n+\n+        authorizationStrategy.add(Jenkins.MANAGE, manageUser.getId());\n+        authorizationStrategy.add(Jenkins.READ, manageUser.getId());\n+\n+        authorizationStrategy.add(Jenkins.READ, readUser.getId());\n+        j.jenkins.setAuthorizationStrategy(authorizationStrategy);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODAzMjEzMQ=="}, "originalCommit": {"oid": "a98fe6a353e47842f1f05ed0dc088da94e8919ef"}, "originalPosition": 63}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 195, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}