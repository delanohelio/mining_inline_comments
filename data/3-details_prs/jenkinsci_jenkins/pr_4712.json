{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEzNjEzOTI0", "number": 4712, "title": "[JENKINS-61920] Avoid MissingClassTelemetry populates the log", "bodyText": "See JENKINS-61920.\n\nProposed changelog entries\n\nInternal: Avoid populating logs with missing classes telemetry warnings\n\n\nProposed upgrade guidelines\nN/A\nSubmitter checklist\n\n (If applicable) Jira issue is well described\n Changelog entries and upgrade guidelines are appropriate for the audience affected by the change (users or developer, depending on the change). Examples\n\nFill-in the Proposed changelog entries section only if there are breaking changes or other changes which may require extra steps from users during the upgade\n\n\n Appropriate autotests or explanation to why this change has no tests\n[N/A] For dependency updates: links to external changelogs and, if possible, full diffs\n\n\nDesired reviewers\n@jenkinsci/core-pr-reviewers\n\nMaintainer checklist\nBefore the changes are marked as ready-for-merge:\n\n There are at least 2 approvals for the pull request and no outstanding requests for change\n Conversations in the pull request are over OR it is explicit that a reviewer does not block the change\n Changelog entries in the PR title and/or Proposed changelog entries are correct\n Proper changelog labels are set so that the changelog can be generated automatically\n If the change needs additional upgrade steps from users, upgrade-guide-needed label is set and there is a Proposed upgrade guidelines section in the PR title. (example)\n If it would make sense to backport the change to LTS, a Jira issue must exist, be a Bug or Improvement, and be labeled as lts-candidate to be considered (see query).", "createdAt": "2020-05-05T16:13:04Z", "url": "https://github.com/jenkinsci/jenkins/pull/4712", "merged": true, "mergeCommit": {"oid": "0a4159068b481661a2aa0dd682b183c414dacc07"}, "closed": true, "closedAt": "2020-05-14T17:25:56Z", "author": {"login": "MRamonLeon"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABceWZLCgH2gAyNDEzNjEzOTI0OmE0ZDU5ZjAzYjVjYmQwNzMwNDEwOTljMDVjODNiNWE2MWVjZmMyN2E=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcgNGfjgFqTQwOTA0OTUyNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "a4d59f03b5cbd073041099c05c83b5a61ecfc27a", "author": {"user": {"login": "MRamonLeon", "name": "Ramon Leon"}}, "url": "https://github.com/jenkinsci/jenkins/commit/a4d59f03b5cbd073041099c05c83b5a61ecfc27a", "committedDate": "2020-05-05T16:09:13Z", "message": "[JENKINS-61920] Avoid MissingClassTelemetry populates the log"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA1OTYwODc1", "url": "https://github.com/jenkinsci/jenkins/pull/4712#pullrequestreview-405960875", "createdAt": "2020-05-05T16:34:26Z", "commit": {"oid": "a4d59f03b5cbd073041099c05c83b5a61ecfc27a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA2Mzc3MDUx", "url": "https://github.com/jenkinsci/jenkins/pull/4712#pullrequestreview-406377051", "createdAt": "2020-05-06T07:53:21Z", "commit": {"oid": "a4d59f03b5cbd073041099c05c83b5a61ecfc27a"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQwNzo1MzoyMVrOGRHwaw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQwNzo1NDoyMVrOGRHywg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDYwNjA1OQ==", "bodyText": "Can be removed.", "url": "https://github.com/jenkinsci/jenkins/pull/4712#discussion_r420606059", "createdAt": "2020-05-06T07:53:21Z", "author": {"login": "varyvol"}, "path": "core/src/main/java/jenkins/telemetry/impl/java11/MissingClassEvents.java", "diffHunk": "@@ -98,6 +109,22 @@ public long put(String name, @NonNull Throwable t) {\n         return currentEvents;\n     }\n \n+    /**\n+     * Returns true if the class name was already registered previously, during the current execution of this Jenkins\n+     * instance.\n+     * @ param t the throwable to check", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a4d59f03b5cbd073041099c05c83b5a61ecfc27a"}, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDYwNjY1OA==", "bodyText": "Should it be added even if already there?", "url": "https://github.com/jenkinsci/jenkins/pull/4712#discussion_r420606658", "createdAt": "2020-05-06T07:54:21Z", "author": {"login": "varyvol"}, "path": "core/src/main/java/jenkins/telemetry/impl/java11/MissingClassTelemetry.java", "diffHunk": "@@ -239,13 +241,18 @@ public static void reportException(@NonNull String name, @NonNull Throwable e) {\n             // We call the methods in this order because if the missing class is not java related, we don't loop over the\n             // stack trace to look if it's not thrown from an ignored place avoiding an impact on performance.\n             if (isFromMovedPackage(name) && !calledFromIgnoredPlace(e)) {\n-                events.put(name, e);\n-                if (LOGGER.isLoggable(Level.WARNING))\n+                if (LOGGER.isLoggable(Level.WARNING) && !wasAlreadyReported(name)) {\n                     LOGGER.log(Level.WARNING, \"Added a missed class for missing class telemetry. Class: \" + name, e);\n+                }\n+                events.put(name, e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a4d59f03b5cbd073041099c05c83b5a61ecfc27a"}, "originalPosition": 20}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA2NTM3MTQz", "url": "https://github.com/jenkinsci/jenkins/pull/4712#pullrequestreview-406537143", "createdAt": "2020-05-06T11:52:38Z", "commit": {"oid": "a4d59f03b5cbd073041099c05c83b5a61ecfc27a"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQxMTo1MjozOFrOGRPZcQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQxMTo1NToxM1rOGRPe2A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDczMTI0OQ==", "bodyText": "Please avoid diff hunks unrelated to a fix.", "url": "https://github.com/jenkinsci/jenkins/pull/4712#discussion_r420731249", "createdAt": "2020-05-06T11:52:38Z", "author": {"login": "jglick"}, "path": "core/src/main/java/jenkins/telemetry/impl/java11/MissingClassEvents.java", "diffHunk": "@@ -25,8 +25,8 @@\n package jenkins.telemetry.impl.java11;\n \n import com.google.common.annotations.VisibleForTesting;\n-\n import edu.umd.cs.findbugs.annotations.NonNull;\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a4d59f03b5cbd073041099c05c83b5a61ecfc27a"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDczMTc5Mw==", "bodyText": "Best to document what the key represents.", "url": "https://github.com/jenkinsci/jenkins/pull/4712#discussion_r420731793", "createdAt": "2020-05-06T11:53:38Z", "author": {"login": "jglick"}, "path": "core/src/main/java/jenkins/telemetry/impl/java11/MissingClassEvents.java", "diffHunk": "@@ -42,10 +42,15 @@\n     /* package */ static /* final */ int MAX_EVENTS_PER_SEND = 100;\n \n     /**\n-     * List of events, one per stack trace.\n+     * List of events, one per stack trace, to send to Telemetry. Only the first {@code #MAX_EVENTS_PER_SEND} are sent.\n      */\n     private ConcurrentHashMap<List<StackTraceElement>, MissingClassEvent> events = new ConcurrentHashMap<>(MAX_EVENTS_PER_SEND);\n \n+    /**\n+     * List of all events registered on this execution, to avoid printing an event more than once in the log. This map\n+     * is not limited. On every Jenkins restart is cleaned because it's not persisted, so the CNFE is printed again.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a4d59f03b5cbd073041099c05c83b5a61ecfc27a"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDczMjYzMg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        {\"sun.reflect.generics.factory.CoreReflectionFactory\", \"makeNamedType\"} // JENKINS-61920\n          \n          \n            \n                        {\"sun.reflect.generics.factory.CoreReflectionFactory\", \"makeNamedType\"}, // JENKINS-61920\n          \n      \n    \n    \n  \n\nso you do not need to patch the previous line the next time you add an entry", "url": "https://github.com/jenkinsci/jenkins/pull/4712#discussion_r420732632", "createdAt": "2020-05-06T11:55:13Z", "author": {"login": "jglick"}, "path": "core/src/main/java/jenkins/telemetry/impl/java11/MissingClassTelemetry.java", "diffHunk": "@@ -107,7 +107,9 @@\n             {\"org.codehaus.groovy.control.ClassNodeResolver\", \"tryAsLoaderClassOrScript\"},\n             {\"org.kohsuke.stapler.RequestImpl$TypePair\", \"convertJSON\"},\n             {\"net.bull.javamelody.FilterContext\", \"isMojarraAvailable\"}, // JENKINS-60725\n-            {\"hudson.remoting.RemoteClassLoader$ClassLoaderProxy\", \"fetch3\"} // JENKINS-61521\n+            {\"hudson.remoting.RemoteClassLoader$ClassLoaderProxy\", \"fetch3\"}, // JENKINS-61521\n+            //Don't add \"java.base/\" before sun.reflect.generics.factory.CoreReflectionFactory\n+            {\"sun.reflect.generics.factory.CoreReflectionFactory\", \"makeNamedType\"} // JENKINS-61920", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a4d59f03b5cbd073041099c05c83b5a61ecfc27a"}, "originalPosition": 7}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "28480185f0abcb0f09227dae27c65f172566943d", "author": {"user": {"login": "MRamonLeon", "name": "Ramon Leon"}}, "url": "https://github.com/jenkinsci/jenkins/commit/28480185f0abcb0f09227dae27c65f172566943d", "committedDate": "2020-05-07T07:49:48Z", "message": "[JENKINS-61920] Minor changes, improve docs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "11cea45a629764d671101ccd96575cd856694569", "author": {"user": {"login": "MRamonLeon", "name": "Ramon Leon"}}, "url": "https://github.com/jenkinsci/jenkins/commit/11cea45a629764d671101ccd96575cd856694569", "committedDate": "2020-05-07T07:51:46Z", "message": "[JENKINS-61920] Keep imports as it was"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA3MjI5NDM3", "url": "https://github.com/jenkinsci/jenkins/pull/4712#pullrequestreview-407229437", "createdAt": "2020-05-07T07:52:40Z", "commit": {"oid": "11cea45a629764d671101ccd96575cd856694569"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA5MDQ5NTI2", "url": "https://github.com/jenkinsci/jenkins/pull/4712#pullrequestreview-409049526", "createdAt": "2020-05-11T10:27:31Z", "commit": {"oid": "11cea45a629764d671101ccd96575cd856694569"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1163, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}