{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM1MzYzNjAx", "number": 5105, "title": "[JENKINS-64390] make FieldUtils behave as it used to", "bodyText": "acegi FieldUtils used to silently fail when you tried to set a field that was both public and final\nWhilst it seems silly to do that (the code was obviously a no-op) I observed a breakage in a plugin (test code) that was doing exactly that.  seems like there is a possibility that some production code may exist that also was doing this that would now be broken, so make the code also silently fail for that case.\nSee JENKINS-64390.\n\nProposed changelog entries\n\nFieldUtils now silently fails to set public final fields again.\n\n\nProposed upgrade guidelines\nN/A\nSubmitter checklist\n\n (If applicable) Jira issue is well described\n Changelog entries and upgrade guidelines are appropriate for the audience affected by the change (users or developer, depending on the change). Examples\n\nFill-in the Proposed changelog entries section only if there are breaking changes or other changes which may require extra steps from users during the upgrade\n\n\n Appropriate autotests or explanation to why this change has no tests\n For dependency updates: links to external changelogs and, if possible, full diffs\n\n\nDesired reviewers\n@jglick\n\nMaintainer checklist\nBefore the changes are marked as ready-for-merge:\n\n There are at least 2 approvals for the pull request and no outstanding requests for change\n Conversations in the pull request are over OR it is explicit that a reviewer does not block the change\n Changelog entries in the PR title and/or Proposed changelog entries are correct\n Proper changelog labels are set so that the changelog can be generated automatically\n If the change needs additional upgrade steps from users, upgrade-guide-needed label is set and there is a Proposed upgrade guidelines section in the PR title. (example)\n If it would make sense to backport the change to LTS, a Jira issue must exist, be a Bug or Improvement, and be labeled as lts-candidate to be considered (see query).", "createdAt": "2020-12-09T18:05:29Z", "url": "https://github.com/jenkinsci/jenkins/pull/5105", "merged": true, "mergeCommit": {"oid": "f7884d3513c6e436baef432a486197a3bb4d846c"}, "closed": true, "closedAt": "2020-12-13T20:35:22Z", "author": {"login": "jtnord"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdkipVpAH2gAyNTM1MzYzNjAxOmEwYTE3MzlmOTViYmZhNDFhMDk4YzU2M2ZlOTg5NWIyNGNhMDc2MzQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdk4MzxgFqTU0OTUxMzkyNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "a0a1739f95bbfa41a098c563fe9895b24ca07634", "author": {"user": {"login": "jtnord", "name": "James Nord"}}, "url": "https://github.com/jenkinsci/jenkins/commit/a0a1739f95bbfa41a098c563fe9895b24ca07634", "committedDate": "2020-12-09T18:00:26Z", "message": "[JENKINS-64390] make FieldUtils behave as it used to"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ4NDU4MzE1", "url": "https://github.com/jenkinsci/jenkins/pull/5105#pullrequestreview-548458315", "createdAt": "2020-12-09T18:07:11Z", "commit": {"oid": "a0a1739f95bbfa41a098c563fe9895b24ca07634"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxODowNzoxMVrOICiXWg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxODowNzoxMVrOICiXWg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTUzMTA5OA==", "bodyText": "this behaved differently with the initial acegi-rewrite if it was public", "url": "https://github.com/jenkinsci/jenkins/pull/5105#discussion_r539531098", "createdAt": "2020-12-09T18:07:11Z", "author": {"login": "jtnord"}, "path": "core/src/test/java/org/acegisecurity/util/FieldUtilsTest.java", "diffHunk": "@@ -0,0 +1,59 @@\n+package org.acegisecurity.util;\n+\n+import org.junit.jupiter.api.Test;\n+import org.jvnet.hudson.test.Issue;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertThrows;\n+\n+class FieldUtilsTest {\n+\n+    @Issue(\"JENKINS-64390\")\n+    @Test\n+    public void setProtectedFieldValue_Should_fail_silently_to_set_public_final_fields_in_InnerClass() throws Exception {\n+        InnerClassWithPublicFinalField sut = new InnerClassWithPublicFinalField();\n+        FieldUtils.setProtectedFieldValue(\"myField\", sut, \"test\");\n+        assertEquals(sut.getMyField(), \"original\");\n+    }\n+\n+    @Test\n+    @Issue(\"JENKINS-64390\")\n+    public void setProtectedFieldValue_Should_fail_silently_to_set_public_final_fields_in_OuterClass() throws Exception {\n+        OuterClassWithPublicFinalField sut = new OuterClassWithPublicFinalField();\n+        FieldUtils.setProtectedFieldValue(\"myField\", sut, \"test\");\n+        assertEquals(sut.getMyField(), \"original\");\n+    }\n+\n+    @Test\n+    public void setProtectedFieldValue_Should_Succeed() throws Exception {\n+        InnerClassWithProtectedField sut = new InnerClassWithProtectedField();\n+        FieldUtils.setProtectedFieldValue(\"myProtectedField\", sut, \"test\");\n+        assertEquals(sut.getMyNonFinalField(), \"test\");\n+    }\n+\n+    @Test\n+    public void setNonExistingField_Should_Fail() throws Exception {\n+        InnerClassWithProtectedField sut = new InnerClassWithProtectedField();\n+        assertThrows(Exception.class, () -> FieldUtils.setProtectedFieldValue(\"bogus\", sut, \"whatever\"));\n+    }\n+\n+    class InnerClassWithPublicFinalField {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a0a1739f95bbfa41a098c563fe9895b24ca07634"}, "originalPosition": 40}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ4NDc0MDY2", "url": "https://github.com/jenkinsci/jenkins/pull/5105#pullrequestreview-548474066", "createdAt": "2020-12-09T18:23:48Z", "commit": {"oid": "a0a1739f95bbfa41a098c563fe9895b24ca07634"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxODoyMzo0OFrOICjCUA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxODoyMzo0OFrOICjCUA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTU0MjA5Ng==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            class FieldUtilsTest {\n          \n          \n            \n            @SuppressWarnings(\"deprecation\")\n          \n          \n            \n            public class FieldUtilsTest {", "url": "https://github.com/jenkinsci/jenkins/pull/5105#discussion_r539542096", "createdAt": "2020-12-09T18:23:48Z", "author": {"login": "jglick"}, "path": "core/src/test/java/org/acegisecurity/util/FieldUtilsTest.java", "diffHunk": "@@ -0,0 +1,59 @@\n+package org.acegisecurity.util;\n+\n+import org.junit.jupiter.api.Test;\n+import org.jvnet.hudson.test.Issue;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertThrows;\n+\n+class FieldUtilsTest {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a0a1739f95bbfa41a098c563fe9895b24ca07634"}, "originalPosition": 9}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d729fa790dbc95e3a1cc97ffca18cb7774301840", "author": {"user": {"login": "jtnord", "name": "James Nord"}}, "url": "https://github.com/jenkinsci/jenkins/commit/d729fa790dbc95e3a1cc97ffca18cb7774301840", "committedDate": "2020-12-09T19:09:08Z", "message": "Update core/src/test/java/org/acegisecurity/util/FieldUtilsTest.java\n\nCo-authored-by: Jesse Glick <jglick@cloudbees.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ4NjY2MTg4", "url": "https://github.com/jenkinsci/jenkins/pull/5105#pullrequestreview-548666188", "createdAt": "2020-12-09T22:27:23Z", "commit": {"oid": "d729fa790dbc95e3a1cc97ffca18cb7774301840"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ5NTEzOTI1", "url": "https://github.com/jenkinsci/jenkins/pull/5105#pullrequestreview-549513925", "createdAt": "2020-12-10T19:04:38Z", "commit": {"oid": "d729fa790dbc95e3a1cc97ffca18cb7774301840"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQxOTowNDozOFrOIDY0cQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQxOTowNDozOFrOIDY0cQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDQyMzI4MQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        // acgegi would silently fail to write to final fields\n          \n          \n            \n                        // acegi would silently fail to write to final fields", "url": "https://github.com/jenkinsci/jenkins/pull/5105#discussion_r540423281", "createdAt": "2020-12-10T19:04:38Z", "author": {"login": "oleg-nenashev"}, "path": "core/src/main/java/org/acegisecurity/util/FieldUtils.java", "diffHunk": "@@ -40,8 +42,14 @@ public static Object getProtectedFieldValue(String protectedField, Object object\n \n     public static void setProtectedFieldValue(String protectedField, Object object, Object newValue) {\n         try {\n-            org.apache.commons.lang.reflect.FieldUtils.writeField(object, protectedField, newValue, true);\n-        } catch (IllegalAccessException x) {\n+            // acgegi would silently fail to write to final fields", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d729fa790dbc95e3a1cc97ffca18cb7774301840"}, "originalPosition": 15}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1889, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}