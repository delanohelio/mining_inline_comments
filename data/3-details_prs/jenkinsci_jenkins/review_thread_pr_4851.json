{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDUyNDMzNDkx", "number": 4851, "reviewThreads": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xOVQxMDoxMDoxMVrOEP1wJw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xOVQxMDoyNzoyOFrOEP11dA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1MDQ0Nzc1OnYy", "diffSide": "RIGHT", "path": "test/src/test/java/hudson/LauncherTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xOVQxMDoxMDoxMVrOGzuTGA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xOVQxMDoxMDoxMVrOGzuTGA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njg4OTExMg==", "bodyText": "There are some * imports that can also be refactored, and isEmptyString() matcher can probably be not imported.", "url": "https://github.com/jenkinsci/jenkins/pull/4851#discussion_r456889112", "createdAt": "2020-07-19T10:10:11Z", "author": {"login": "stellargo"}, "path": "test/src/test/java/hudson/LauncherTest.java", "diffHunk": "@@ -271,10 +273,10 @@ private void assertMultipleStdioCalls(String message, Node node, boolean emitStd\n         assertEquals(message, 0, ps.join());\n         if (outputIn2) {\n             assertThat(message, baos2.toString(), containsString(\"hello\"));\n-            assertThat(message, baos1.toString(), isEmptyString());\n+            assertThat(message, baos1.toString(), is(emptyString()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fd402294e54763db975f93b2beb3be5793569507"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1MDQ1MjAxOnYy", "diffSide": "LEFT", "path": "test/src/test/java/hudson/model/AbstractItemSecurityTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xOVQxMDoxNjowM1rOGzuVQw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xOVQxOToxNDowMlrOGzxqbQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njg4OTY2Nw==", "bodyText": "What would be the motivation behind this?", "url": "https://github.com/jenkinsci/jenkins/pull/4851#discussion_r456889667", "createdAt": "2020-07-19T10:16:03Z", "author": {"login": "stellargo"}, "path": "test/src/test/java/hudson/model/AbstractItemSecurityTest.java", "diffHunk": "@@ -80,7 +82,7 @@ public void testUpdateByXmlDoesNotFail() throws Exception {\n                 \"</project>\";\n \n         FreeStyleProject project = jenkinsRule.createFreeStyleProject(\"security-167\");\n-        project.updateByXml((StreamSource) new StreamSource(new StringReader(xml)));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fd402294e54763db975f93b2beb3be5793569507"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njk0NDIzNw==", "bodyText": "see above.", "url": "https://github.com/jenkinsci/jenkins/pull/4851#discussion_r456944237", "createdAt": "2020-07-19T19:14:02Z", "author": {"login": "StefanSpieker"}, "path": "test/src/test/java/hudson/model/AbstractItemSecurityTest.java", "diffHunk": "@@ -80,7 +82,7 @@ public void testUpdateByXmlDoesNotFail() throws Exception {\n                 \"</project>\";\n \n         FreeStyleProject project = jenkinsRule.createFreeStyleProject(\"security-167\");\n-        project.updateByXml((StreamSource) new StreamSource(new StringReader(xml)));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njg4OTY2Nw=="}, "originalCommit": {"oid": "fd402294e54763db975f93b2beb3be5793569507"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1MDQ1Mjc3OnYy", "diffSide": "RIGHT", "path": "test/src/test/java/hudson/model/AbstractItemSecurityTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xOVQxMDoxNjo1NFrOGzuVrw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xOVQxOToxMzo0NFrOGzxqQw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njg4OTc3NQ==", "bodyText": "What would be the motivation behind this?", "url": "https://github.com/jenkinsci/jenkins/pull/4851#discussion_r456889775", "createdAt": "2020-07-19T10:16:54Z", "author": {"login": "stellargo"}, "path": "test/src/test/java/hudson/model/AbstractItemSecurityTest.java", "diffHunk": "@@ -59,7 +61,7 @@ public void testUpdateByXmlDoesNotProcessForeignResources() throws Exception {\n         FreeStyleProject project = jenkinsRule.createFreeStyleProject(\"security-167\");\n         project.setDescription(\"Wibble\");\n         try {\n-            project.updateByXml(new StreamSource(new StringReader(xml)));\n+            project.updateByXml((Source)new StreamSource(new StringReader(xml)));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fd402294e54763db975f93b2beb3be5793569507"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njk0NDE5NQ==", "bodyText": "public void updateByXml(StreamSource source) is deprecated, and the call within this deprecated method is updateByXml((Source)source);", "url": "https://github.com/jenkinsci/jenkins/pull/4851#discussion_r456944195", "createdAt": "2020-07-19T19:13:44Z", "author": {"login": "StefanSpieker"}, "path": "test/src/test/java/hudson/model/AbstractItemSecurityTest.java", "diffHunk": "@@ -59,7 +61,7 @@ public void testUpdateByXmlDoesNotProcessForeignResources() throws Exception {\n         FreeStyleProject project = jenkinsRule.createFreeStyleProject(\"security-167\");\n         project.setDescription(\"Wibble\");\n         try {\n-            project.updateByXml(new StreamSource(new StringReader(xml)));\n+            project.updateByXml((Source)new StreamSource(new StringReader(xml)));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njg4OTc3NQ=="}, "originalCommit": {"oid": "fd402294e54763db975f93b2beb3be5793569507"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1MDQ1NTg1OnYy", "diffSide": "RIGHT", "path": "test/src/test/java/hudson/model/DirectoryBrowserSupportTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xOVQxMDoyMTowMVrOGzuXPg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xOVQxMDoyMTowMVrOGzuXPg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njg5MDE3NA==", "bodyText": "Why not remove this entirely? Also in the other edited files, and move completely to hamcrest.", "url": "https://github.com/jenkinsci/jenkins/pull/4851#discussion_r456890174", "createdAt": "2020-07-19T10:21:01Z", "author": {"login": "stellargo"}, "path": "test/src/test/java/hudson/model/DirectoryBrowserSupportTest.java", "diffHunk": "@@ -60,6 +62,7 @@\n import static org.junit.Assert.assertEquals;\n import static org.junit.Assert.assertFalse;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fd402294e54763db975f93b2beb3be5793569507"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1MDQ1ODI3OnYy", "diffSide": "RIGHT", "path": "test/src/test/java/hudson/model/ItemsTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xOVQxMDoyMzo0M1rOGzuYYQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xOVQxOToxMDo0NVrOGzxpKw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njg5MDQ2NQ==", "bodyText": "What would be the motivation behind this?", "url": "https://github.com/jenkinsci/jenkins/pull/4851#discussion_r456890465", "createdAt": "2020-07-19T10:23:43Z", "author": {"login": "stellargo"}, "path": "test/src/test/java/hudson/model/ItemsTest.java", "diffHunk": "@@ -242,7 +242,7 @@ private void cannotOverwrite(String target) throws Exception {\n                         .withRedirectEnabled(false)\n                         .withThrowExceptionOnFailingStatusCode(false);\n                 WebResponse webResponse = wc.getPage(new WebRequest(new URL(wc.getContextPath() + \"createItem?name=\" + target + \"&mode=hudson.model.FreeStyleProject\"), HttpMethod.POST)).getWebResponse();\n-                if (webResponse.getStatusCode() != HttpStatus.SC_MOVED_TEMPORARILY) {\n+                if (webResponse.getStatusCode() != HttpURLConnection.HTTP_MOVED_TEMP) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fd402294e54763db975f93b2beb3be5793569507"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njk0MzkxNQ==", "bodyText": "HttpStatus is deprecated, so I chose the newer version from java.net", "url": "https://github.com/jenkinsci/jenkins/pull/4851#discussion_r456943915", "createdAt": "2020-07-19T19:10:45Z", "author": {"login": "StefanSpieker"}, "path": "test/src/test/java/hudson/model/ItemsTest.java", "diffHunk": "@@ -242,7 +242,7 @@ private void cannotOverwrite(String target) throws Exception {\n                         .withRedirectEnabled(false)\n                         .withThrowExceptionOnFailingStatusCode(false);\n                 WebResponse webResponse = wc.getPage(new WebRequest(new URL(wc.getContextPath() + \"createItem?name=\" + target + \"&mode=hudson.model.FreeStyleProject\"), HttpMethod.POST)).getWebResponse();\n-                if (webResponse.getStatusCode() != HttpStatus.SC_MOVED_TEMPORARILY) {\n+                if (webResponse.getStatusCode() != HttpURLConnection.HTTP_MOVED_TEMP) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njg5MDQ2NQ=="}, "originalCommit": {"oid": "fd402294e54763db975f93b2beb3be5793569507"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1MDQ2MDU1OnYy", "diffSide": "RIGHT", "path": "test/src/test/java/hudson/model/ParametersTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xOVQxMDoyNjoyNlrOGzuZgg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xOVQxOToxNToxOVrOGzxrFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njg5MDc1NA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    assertTrue(booleanParameterInput.isChecked());\n          \n          \n            \n                    assertThat(booleanParameterInput.isChecked(), is(true));\n          \n      \n    \n    \n  \n\nYou can move this to hamcrest too like previous files.", "url": "https://github.com/jenkinsci/jenkins/pull/4851#discussion_r456890754", "createdAt": "2020-07-19T10:26:26Z", "author": {"login": "stellargo"}, "path": "test/src/test/java/hudson/model/ParametersTest.java", "diffHunk": "@@ -75,7 +76,7 @@ public void parameterTypes() throws Exception {\n         Object o = DomNodeUtil.selectSingleNode(element, \".//input[@name='value']\");\n         System.out.println(o);\n         HtmlCheckBoxInput booleanParameterInput = (HtmlCheckBoxInput) o;\n-        assertEquals(true, booleanParameterInput.isChecked());\n+        assertTrue(booleanParameterInput.isChecked());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fd402294e54763db975f93b2beb3be5793569507"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njk0NDQwNw==", "bodyText": "I really like the simplicity of assertTrue", "url": "https://github.com/jenkinsci/jenkins/pull/4851#discussion_r456944407", "createdAt": "2020-07-19T19:15:19Z", "author": {"login": "StefanSpieker"}, "path": "test/src/test/java/hudson/model/ParametersTest.java", "diffHunk": "@@ -75,7 +76,7 @@ public void parameterTypes() throws Exception {\n         Object o = DomNodeUtil.selectSingleNode(element, \".//input[@name='value']\");\n         System.out.println(o);\n         HtmlCheckBoxInput booleanParameterInput = (HtmlCheckBoxInput) o;\n-        assertEquals(true, booleanParameterInput.isChecked());\n+        assertTrue(booleanParameterInput.isChecked());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njg5MDc1NA=="}, "originalCommit": {"oid": "fd402294e54763db975f93b2beb3be5793569507"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1MDQ2MDg4OnYy", "diffSide": "RIGHT", "path": "test/src/test/java/hudson/security/HudsonPrivateSecurityRealmTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xOVQxMDoyNjo1MVrOGzuZqA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xOVQxMDoyNjo1MVrOGzuZqA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njg5MDc5Mg==", "bodyText": "Here too hamcrest maybe?", "url": "https://github.com/jenkinsci/jenkins/pull/4851#discussion_r456890792", "createdAt": "2020-07-19T10:26:51Z", "author": {"login": "stellargo"}, "path": "test/src/test/java/hudson/security/HudsonPrivateSecurityRealmTest.java", "diffHunk": "@@ -294,7 +294,7 @@ public void selfRegistrationTriggerLoggedIn() throws Exception {\n \n         createAccountByAdmin(\"alice\");\n         // no new event in such case\n-        assertEquals(true, spySecurityListener.loggedInUsernames.isEmpty());\n+        assertTrue(spySecurityListener.loggedInUsernames.isEmpty());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fd402294e54763db975f93b2beb3be5793569507"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1MDQ2MTMyOnYy", "diffSide": "RIGHT", "path": "test/src/test/java/hudson/tasks/FingerprinterTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xOVQxMDoyNzoyOFrOGzuZ2w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xOVQxMDoyNzoyOFrOGzuZ2w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njg5MDg0Mw==", "bodyText": "Here also use hamcrest?", "url": "https://github.com/jenkinsci/jenkins/pull/4851#discussion_r456890843", "createdAt": "2020-07-19T10:27:28Z", "author": {"login": "stellargo"}, "path": "test/src/test/java/hudson/tasks/FingerprinterTest.java", "diffHunk": "@@ -259,8 +259,8 @@ public boolean perform(AbstractBuild<?, ?> build, Launcher launcher, BuildListen\n         Collection<Fingerprint> fingerprints = action.getFingerprints().values();\n         for (Fingerprint f: fingerprints) {\n             assertTrue(f.getOriginal().is(upstream));\n-            assertTrue(f.getOriginal().getName().equals(renamedProject1));\n-            assertFalse(f.getOriginal().getName().equals(oldUpstreamName));\n+            assertEquals(f.getOriginal().getName(), renamedProject1);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fd402294e54763db975f93b2beb3be5793569507"}, "originalPosition": 6}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 320, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}