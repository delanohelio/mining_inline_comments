{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg2MjI5MjYz", "number": 4933, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xM1QyMTowNTowNlrOEi6TnA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQxMzoxMTowOVrOEpzuBQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1MDQyMzMyOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/hudson/node_monitors/AbstractNodeMonitorDescriptor.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xM1QyMTowNTowNlrOHQ_W3g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQxNToyODowNVrOHXgeDQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzU3NzMxMA==", "bodyText": "Pretty sure this is wrong given what it does.", "url": "https://github.com/jenkinsci/jenkins/pull/4933#discussion_r487577310", "createdAt": "2020-09-13T21:05:06Z", "author": {"login": "daniel-beck"}, "path": "core/src/main/java/hudson/node_monitors/AbstractNodeMonitorDescriptor.java", "diffHunk": "@@ -227,7 +227,7 @@ protected boolean markOnline(Computer c) {\n      *      or the computer already marked offline.)\n      */\n     protected boolean markOffline(Computer c, OfflineCause oc) {\n-        if(isIgnored() || c.isTemporarilyOffline()) return false; // noop\n+        if(isIgnored() || c.isOffline()) return false; // noop", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cae5a55349f55f7bcef30454f78c1fa5ce7aec6d"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDQxMTI3Nw==", "bodyText": "Yes, you are right. It is a little confusing to mark something as deprecated to warn others not to use it.", "url": "https://github.com/jenkinsci/jenkins/pull/4933#discussion_r494411277", "createdAt": "2020-09-24T15:28:05Z", "author": {"login": "StefanSpieker"}, "path": "core/src/main/java/hudson/node_monitors/AbstractNodeMonitorDescriptor.java", "diffHunk": "@@ -227,7 +227,7 @@ protected boolean markOnline(Computer c) {\n      *      or the computer already marked offline.)\n      */\n     protected boolean markOffline(Computer c, OfflineCause oc) {\n-        if(isIgnored() || c.isTemporarilyOffline()) return false; // noop\n+        if(isIgnored() || c.isOffline()) return false; // noop", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzU3NzMxMA=="}, "originalCommit": {"oid": "cae5a55349f55f7bcef30454f78c1fa5ce7aec6d"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1MDQyNTQwOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/hudson/tasks/BuildStep.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xM1QyMTowNzozNlrOHQ_X1A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQxNToyODozMlrOHXgfdw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzU3NzU1Ng==", "bodyText": "Makes no sense in context.", "url": "https://github.com/jenkinsci/jenkins/pull/4933#discussion_r487577556", "createdAt": "2020-09-13T21:07:36Z", "author": {"login": "daniel-beck"}, "path": "core/src/main/java/hudson/tasks/BuildStep.java", "diffHunk": "@@ -95,7 +95,7 @@\n      * Runs the step over the given build and reports the progress to the listener.\n      *\n      * <p>\n-     * A plugin can contribute the action object to {@link Build#getActions()}\n+     * A plugin can contribute the action object to {@link Build#getAllActions()}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cae5a55349f55f7bcef30454f78c1fa5ce7aec6d"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDQxMTYzOQ==", "bodyText": "You are right. Thanks also. Reverted.", "url": "https://github.com/jenkinsci/jenkins/pull/4933#discussion_r494411639", "createdAt": "2020-09-24T15:28:32Z", "author": {"login": "StefanSpieker"}, "path": "core/src/main/java/hudson/tasks/BuildStep.java", "diffHunk": "@@ -95,7 +95,7 @@\n      * Runs the step over the given build and reports the progress to the listener.\n      *\n      * <p>\n-     * A plugin can contribute the action object to {@link Build#getActions()}\n+     * A plugin can contribute the action object to {@link Build#getAllActions()}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzU3NzU1Ng=="}, "originalCommit": {"oid": "cae5a55349f55f7bcef30454f78c1fa5ce7aec6d"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5Njg5NDM3OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/hudson/tasks/ArtifactArchiver.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQwNzozNjoyNVrOHX4ZoQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQwNzozNjoyNVrOHX4ZoQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDgwMzM2MQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                f.perform(build, ws, build.getEnvironment(listener), launcher, listener);\n          \n          \n            \n                                f.perform(build, ws, environment, launcher, listener);\n          \n      \n    \n    \n  \n\n(Unsure but seems more straightforward.)", "url": "https://github.com/jenkinsci/jenkins/pull/4933#discussion_r494803361", "createdAt": "2020-09-25T07:36:25Z", "author": {"login": "daniel-beck"}, "path": "core/src/main/java/hudson/tasks/ArtifactArchiver.java", "diffHunk": "@@ -260,7 +260,7 @@ public void perform(Run<?,?> build, FilePath ws, EnvVars environment, Launcher l\n                     f.setExcludes(excludes);\n                     f.setDefaultExcludes(defaultExcludes);\n                     f.setCaseSensitive(caseSensitive);\n-                    f.perform(build, ws, launcher, listener);\n+                    f.perform(build, ws, build.getEnvironment(listener), launcher, listener);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "db6d72e8735861e33c45e2034339c0216fc7d32c"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzExNDE4OTM2OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/hudson/tasks/ArtifactArchiver.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxMTo0NTozOVrOHaZobg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQyMDoxMjozMFrOHatndA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzQ0NDk3NA==", "bodyText": "This might slightly change the behavior. Missing argument will force environment variable recalculation in https://github.com/jenkinsci/jenkins/blob/master/core/src/main/java/jenkins/tasks/SimpleBuildStep.java#L91 . Instead of that, current code will use the environment passed in the beginning of the step. In the edge case build.pickArtifactManager().archive might perform some environment-contributing actions, which will no longer be considered after the change.", "url": "https://github.com/jenkinsci/jenkins/pull/4933#discussion_r497444974", "createdAt": "2020-09-30T11:45:39Z", "author": {"login": "oleg-nenashev"}, "path": "core/src/main/java/hudson/tasks/ArtifactArchiver.java", "diffHunk": "@@ -260,7 +260,7 @@ public void perform(Run<?,?> build, FilePath ws, EnvVars environment, Launcher l\n                     f.setExcludes(excludes);\n                     f.setDefaultExcludes(defaultExcludes);\n                     f.setCaseSensitive(caseSensitive);\n-                    f.perform(build, ws, launcher, listener);\n+                    f.perform(build, ws, environment, launcher, listener);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "06955fdc6cb5950a3d5bda6111a5a392c9c740bc"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzcxMjY2MA==", "bodyText": "@oleg-nenashev Yeah, I would agree. IIUC since ArtifactManager can be supplied by external storage plugins, it would be ideal to recalculate the environment.\nf.perform(build, ws, run.getEnvironment(listener), launcher, listener);", "url": "https://github.com/jenkinsci/jenkins/pull/4933#discussion_r497712660", "createdAt": "2020-09-30T18:22:20Z", "author": {"login": "stellargo"}, "path": "core/src/main/java/hudson/tasks/ArtifactArchiver.java", "diffHunk": "@@ -260,7 +260,7 @@ public void perform(Run<?,?> build, FilePath ws, EnvVars environment, Launcher l\n                     f.setExcludes(excludes);\n                     f.setDefaultExcludes(defaultExcludes);\n                     f.setCaseSensitive(caseSensitive);\n-                    f.perform(build, ws, launcher, listener);\n+                    f.perform(build, ws, environment, launcher, listener);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzQ0NDk3NA=="}, "originalCommit": {"oid": "06955fdc6cb5950a3d5bda6111a5a392c9c740bc"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Nzc3MjQwNA==", "bodyText": "No, do not do that! The currently proposed patch is correct.", "url": "https://github.com/jenkinsci/jenkins/pull/4933#discussion_r497772404", "createdAt": "2020-09-30T20:12:30Z", "author": {"login": "jglick"}, "path": "core/src/main/java/hudson/tasks/ArtifactArchiver.java", "diffHunk": "@@ -260,7 +260,7 @@ public void perform(Run<?,?> build, FilePath ws, EnvVars environment, Launcher l\n                     f.setExcludes(excludes);\n                     f.setDefaultExcludes(defaultExcludes);\n                     f.setCaseSensitive(caseSensitive);\n-                    f.perform(build, ws, launcher, listener);\n+                    f.perform(build, ws, environment, launcher, listener);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzQ0NDk3NA=="}, "originalCommit": {"oid": "06955fdc6cb5950a3d5bda6111a5a392c9c740bc"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzExNjIyNzk4OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/hudson/cli/BuildCommand.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQyMDoxMDo1NlrOHatkXQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQyMDoxMDo1NlrOHatkXQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Nzc3MTYxMw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        User user = User.get(startedBy, false, Collections.emptyMap());\n          \n          \n            \n                        User user = User.getById(startedBy, false);", "url": "https://github.com/jenkinsci/jenkins/pull/4933#discussion_r497771613", "createdAt": "2020-09-30T20:10:56Z", "author": {"login": "jglick"}, "path": "core/src/main/java/hudson/cli/BuildCommand.java", "diffHunk": "@@ -252,7 +253,7 @@ public CLICause(String startedBy){\n \n         @Override\n         public String getShortDescription() {\n-            User user = User.get(startedBy, false);\n+            User user = User.get(startedBy, false, Collections.emptyMap());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "06955fdc6cb5950a3d5bda6111a5a392c9c740bc"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyMjc0NDM3OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/jenkins/util/JSONSignatureValidator.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQxMzoxMTowOVrOHbtBWA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQwNzo1MTowOVrOHfy6vA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODgxMTIyNA==", "bodyText": "Fix imports?", "url": "https://github.com/jenkinsci/jenkins/pull/4933#discussion_r498811224", "createdAt": "2020-10-02T13:11:09Z", "author": {"login": "jglick"}, "path": "core/src/main/java/jenkins/util/JSONSignatureValidator.java", "diffHunk": "@@ -184,7 +184,7 @@ private FormValidation checkSpecificSignature(JSONObject json, JSONObject signat\n         //\n         // Jenkins should ignore \"digest\"/\"signature\" pair. Accepting it creates a vulnerability that allows\n         // the attacker to inject a fragment at the end of the json.\n-        json.writeCanonical(new OutputStreamWriter(new TeeOutputStream(dos,sos), Charsets.UTF_8)).close();\n+        json.writeCanonical(new OutputStreamWriter(new TeeOutputStream(dos,sos), StandardCharsets.UTF_8)).close();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0b8cd6ae3f3ce7edfe0a909fb8e9a0ccae471668"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzEwMjE0MA==", "bodyText": "Thanks, fixed them.", "url": "https://github.com/jenkinsci/jenkins/pull/4933#discussion_r503102140", "createdAt": "2020-10-12T07:51:09Z", "author": {"login": "StefanSpieker"}, "path": "core/src/main/java/jenkins/util/JSONSignatureValidator.java", "diffHunk": "@@ -184,7 +184,7 @@ private FormValidation checkSpecificSignature(JSONObject json, JSONObject signat\n         //\n         // Jenkins should ignore \"digest\"/\"signature\" pair. Accepting it creates a vulnerability that allows\n         // the attacker to inject a fragment at the end of the json.\n-        json.writeCanonical(new OutputStreamWriter(new TeeOutputStream(dos,sos), Charsets.UTF_8)).close();\n+        json.writeCanonical(new OutputStreamWriter(new TeeOutputStream(dos,sos), StandardCharsets.UTF_8)).close();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODgxMTIyNA=="}, "originalCommit": {"oid": "0b8cd6ae3f3ce7edfe0a909fb8e9a0ccae471668"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 177, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}