{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkxNTAyMzA3", "number": 4596, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQxODoxMzowNVrODp-Bmw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQwNzo1MDozNVrOD5Sm2A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1MzM0NDI3OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/jenkins/agents/WebSocketAgents.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQxODoxMzowNVrOF5ebFw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQxODoxMzowNVrOF5ebFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTgxMTYwNw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        } catch (IOException e) {\n          \n          \n            \n                            error(e);\n          \n          \n            \n                        } catch (InterruptedException e) {\n          \n          \n            \n                        } catch (IOException | InterruptedException e) {", "url": "https://github.com/jenkinsci/jenkins/pull/4596#discussion_r395811607", "createdAt": "2020-03-20T18:13:05Z", "author": {"login": "jglick"}, "path": "core/src/main/java/jenkins/agents/WebSocketAgents.java", "diffHunk": "@@ -128,18 +127,20 @@ protected void opened() {\n         @Override\n         protected void binary(byte[] payload, int offset, int len) {\n             LOGGER.finest(() -> \"reading block of length \" + len + \" from \" + agent);\n-            if (offset == 0 && len == payload.length) {\n-                receiver.handle(payload);\n-            } else {\n-                receiver.handle(Arrays.copyOfRange(payload, offset, offset + len));\n+            try {\n+                transport.receive(ByteBuffer.wrap(payload, offset, len));\n+            } catch (IOException e) {\n+                error(e);\n+            } catch (InterruptedException e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3b4b245151c4e44a278d705f13315cb7240d7411"}, "originalPosition": 50}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1MzM0NTMxOnYy", "diffSide": "LEFT", "path": "core/src/main/java/jenkins/agents/WebSocketAgents.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQxODoxMzoyNlrOF5eb1Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQxODoxMzoyNlrOF5eb1Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTgxMTc5Nw==", "bodyText": "Can we keep logging?", "url": "https://github.com/jenkinsci/jenkins/pull/4596#discussion_r395811797", "createdAt": "2020-03-20T18:13:26Z", "author": {"login": "jglick"}, "path": "core/src/main/java/jenkins/agents/WebSocketAgents.java", "diffHunk": "@@ -149,22 +150,12 @@ protected void error(Throwable cause) {\n             LOGGER.log(Level.WARNING, null, cause);\n         }\n \n-        class Transport extends AbstractByteArrayCommandTransport {\n+        class Transport extends AbstractByteBufferCommandTransport {\n \n             @Override\n-            public void setup(AbstractByteArrayCommandTransport.ByteArrayReceiver bar) {\n-                receiver = bar;\n-            }\n-\n-            @Override\n-            public void writeBlock(Channel chnl, byte[] bytes) throws IOException {\n-                LOGGER.finest(() -> \"writing block of length \" + bytes.length + \" to \" + agent);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3b4b245151c4e44a278d705f13315cb7240d7411"}, "originalPosition": 78}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1MzM0OTMxOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/jenkins/agents/WebSocketAgents.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQxODoxNDozOFrOF5eeYg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQxODoxNDozOFrOF5eeYg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTgxMjQ1MA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            sendBinary(header);\n          \n          \n            \n                            sendBinary(data);\n          \n          \n            \n                            sendBinary(header, false);\n          \n          \n            \n                            sendBinary(data, true);\n          \n      \n    \n    \n  \n\nif WebSocketSession is extended in the obvious way", "url": "https://github.com/jenkinsci/jenkins/pull/4596#discussion_r395812450", "createdAt": "2020-03-20T18:14:38Z", "author": {"login": "jglick"}, "path": "core/src/main/java/jenkins/agents/WebSocketAgents.java", "diffHunk": "@@ -149,22 +150,12 @@ protected void error(Throwable cause) {\n             LOGGER.log(Level.WARNING, null, cause);\n         }\n \n-        class Transport extends AbstractByteArrayCommandTransport {\n+        class Transport extends AbstractByteBufferCommandTransport {\n \n             @Override\n-            public void setup(AbstractByteArrayCommandTransport.ByteArrayReceiver bar) {\n-                receiver = bar;\n-            }\n-\n-            @Override\n-            public void writeBlock(Channel chnl, byte[] bytes) throws IOException {\n-                LOGGER.finest(() -> \"writing block of length \" + bytes.length + \" to \" + agent);\n-                try {\n-                    sendBinary(ByteBuffer.wrap(bytes)).get();\n-                } catch (Exception x) {\n-                    x.printStackTrace();\n-                    throw new IOException(x);\n-                }\n+            protected void write(ByteBuffer header, ByteBuffer data) throws IOException {\n+                sendBinary(header);\n+                sendBinary(data);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3b4b245151c4e44a278d705f13315cb7240d7411"}, "originalPosition": 87}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1MzM1NDY4OnYy", "diffSide": "RIGHT", "path": "test/src/test/java/jenkins/agents/WebSocketAgentsTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQxODoxNjoxM1rOF5ehqw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQxODoxNjoxM1rOF5ehqw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTgxMzI5MQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        p.getBuildersList().add(Functions.isWindows() ? new BatchFile(\"echo hello\") : new Shell(\"dd if=/dev/random of=file.txt count=1024 bs=200;cat file.txt\"));\n          \n          \n            \n                        p.getBuildersList().add(Functions.isWindows() ? new BatchFile(\"echo hello\") : new Shell(\"dd if=/dev/random count=1024 bs=200\"));", "url": "https://github.com/jenkinsci/jenkins/pull/4596#discussion_r395813291", "createdAt": "2020-03-20T18:16:13Z", "author": {"login": "jglick"}, "path": "test/src/test/java/jenkins/agents/WebSocketAgentsTest.java", "diffHunk": "@@ -99,9 +100,10 @@ public void smokes() throws Exception {\n             ).stdout(System.out).start());\n             r.waitOnline(s);\n             assertEquals(\"response\", s.getChannel().call(new DummyTask()));\n+            assertNotNull(s.getChannel().call(new FatTask()));\n             FreeStyleProject p = r.createFreeStyleProject();\n             p.setAssignedNode(s);\n-            p.getBuildersList().add(Functions.isWindows() ? new BatchFile(\"echo hello\") : new Shell(\"echo hello\"));\n+            p.getBuildersList().add(Functions.isWindows() ? new BatchFile(\"echo hello\") : new Shell(\"dd if=/dev/random of=file.txt count=1024 bs=200;cat file.txt\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3b4b245151c4e44a278d705f13315cb7240d7411"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1MzM1ODU2OnYy", "diffSide": "RIGHT", "path": "test/src/test/java/jenkins/agents/WebSocketAgentsTest.java", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQxODoxNzozMFrOF5ekHg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxNDoyMDo0OVrOF6HmUw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTgxMzkxOA==", "bodyText": "This should suffice to reproduce on its own (both directions), without the dd, right?", "url": "https://github.com/jenkinsci/jenkins/pull/4596#discussion_r395813918", "createdAt": "2020-03-20T18:17:30Z", "author": {"login": "jglick"}, "path": "test/src/test/java/jenkins/agents/WebSocketAgentsTest.java", "diffHunk": "@@ -122,4 +124,18 @@ public String call() {\n         }\n     }\n \n+    private static class FatTask extends SlaveToMasterCallable<String, RuntimeException> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3b4b245151c4e44a278d705f13315cb7240d7411"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjI4NTk2Mw==", "bodyText": "Yes, though it doesn't seem to exercize the same code path, as the dd was working even before I did any change.", "url": "https://github.com/jenkinsci/jenkins/pull/4596#discussion_r396285963", "createdAt": "2020-03-23T08:42:23Z", "author": {"login": "Vlatombe"}, "path": "test/src/test/java/jenkins/agents/WebSocketAgentsTest.java", "diffHunk": "@@ -122,4 +124,18 @@ public String call() {\n         }\n     }\n \n+    private static class FatTask extends SlaveToMasterCallable<String, RuntimeException> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTgxMzkxOA=="}, "originalCommit": {"oid": "3b4b245151c4e44a278d705f13315cb7240d7411"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjQxMTM0MA==", "bodyText": "Possibly due to line-oriented output? Try excluding newline characters using tr or whatever.", "url": "https://github.com/jenkinsci/jenkins/pull/4596#discussion_r396411340", "createdAt": "2020-03-23T12:23:49Z", "author": {"login": "jglick"}, "path": "test/src/test/java/jenkins/agents/WebSocketAgentsTest.java", "diffHunk": "@@ -122,4 +124,18 @@ public String call() {\n         }\n     }\n \n+    private static class FatTask extends SlaveToMasterCallable<String, RuntimeException> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTgxMzkxOA=="}, "originalCommit": {"oid": "3b4b245151c4e44a278d705f13315cb7240d7411"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjQ4MjkxNA==", "bodyText": "For freestyle, output seems to be buffered in 8k blocks, due to usage of \n  \n    \n      jenkins/core/src/main/java/hudson/util/StreamCopyThread.java\n    \n    \n         Line 58\n      in\n      a21f83f\n    \n    \n    \n    \n\n        \n          \n           byte[] buf = new byte[8192];", "url": "https://github.com/jenkinsci/jenkins/pull/4596#discussion_r396482914", "createdAt": "2020-03-23T14:16:25Z", "author": {"login": "Vlatombe"}, "path": "test/src/test/java/jenkins/agents/WebSocketAgentsTest.java", "diffHunk": "@@ -122,4 +124,18 @@ public String call() {\n         }\n     }\n \n+    private static class FatTask extends SlaveToMasterCallable<String, RuntimeException> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTgxMzkxOA=="}, "originalCommit": {"oid": "3b4b245151c4e44a278d705f13315cb7240d7411"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjQ4NjIyNw==", "bodyText": "Ah OK. So some remote operations involving lots of data would be affected, others would not, and there is no way to tell which other than reading the code or inserting debug traces.", "url": "https://github.com/jenkinsci/jenkins/pull/4596#discussion_r396486227", "createdAt": "2020-03-23T14:20:49Z", "author": {"login": "jglick"}, "path": "test/src/test/java/jenkins/agents/WebSocketAgentsTest.java", "diffHunk": "@@ -122,4 +124,18 @@ public String call() {\n         }\n     }\n \n+    private static class FatTask extends SlaveToMasterCallable<String, RuntimeException> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTgxMzkxOA=="}, "originalCommit": {"oid": "3b4b245151c4e44a278d705f13315cb7240d7411"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1Nzg2MzcyOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/jenkins/websocket/WebSocketSession.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxNDoyNDozOFrOF6Hxew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQwODo1ODoyNVrOF6md8g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjQ4OTA4Mw==", "bodyText": "Note that unlike the existing overload, this is blocking. Maybe OK in this context.", "url": "https://github.com/jenkinsci/jenkins/pull/4596#discussion_r396489083", "createdAt": "2020-03-23T14:24:38Z", "author": {"login": "jglick"}, "path": "core/src/main/java/jenkins/websocket/WebSocketSession.java", "diffHunk": "@@ -130,6 +131,15 @@ protected void text(String message) {\n         }\n     }\n \n+    @SuppressWarnings(\"unchecked\")\n+    protected final void sendBinary(ByteBuffer partialByte, boolean isLast) {\n+        try {\n+            remoteEndpoint.getClass().getMethod(\"sendPartialBytes\", ByteBuffer.class, boolean.class).invoke(remoteEndpoint, partialByte, isLast);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e57ed6368b0036275c5392b2bc8ffbbf4c3cd4f7"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njk5MTk4Ng==", "bodyText": "I didn't check behaviour of BatchMode.", "url": "https://github.com/jenkinsci/jenkins/pull/4596#discussion_r396991986", "createdAt": "2020-03-24T08:58:25Z", "author": {"login": "Vlatombe"}, "path": "core/src/main/java/jenkins/websocket/WebSocketSession.java", "diffHunk": "@@ -130,6 +131,15 @@ protected void text(String message) {\n         }\n     }\n \n+    @SuppressWarnings(\"unchecked\")\n+    protected final void sendBinary(ByteBuffer partialByte, boolean isLast) {\n+        try {\n+            remoteEndpoint.getClass().getMethod(\"sendPartialBytes\", ByteBuffer.class, boolean.class).invoke(remoteEndpoint, partialByte, isLast);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjQ4OTA4Mw=="}, "originalCommit": {"oid": "e57ed6368b0036275c5392b2bc8ffbbf4c3cd4f7"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxNDAwMjgwOnYy", "diffSide": "RIGHT", "path": "test/src/test/java/jenkins/agents/WebSocketAgentsTest.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQwNzo1MDozNVrOGQeIDw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxMjo0NTo1M1rOGQnqPQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTkyMzk4Mw==", "bodyText": "Probably safer to use /dev/urandom here if you're low on entropy?", "url": "https://github.com/jenkinsci/jenkins/pull/4596#discussion_r419923983", "createdAt": "2020-05-05T07:50:35Z", "author": {"login": "daniel-beck"}, "path": "test/src/test/java/jenkins/agents/WebSocketAgentsTest.java", "diffHunk": "@@ -99,9 +100,10 @@ public void smokes() throws Exception {\n             ).stdout(System.out).start());\n             r.waitOnline(s);\n             assertEquals(\"response\", s.getChannel().call(new DummyTask()));\n+            assertNotNull(s.getChannel().call(new FatTask()));\n             FreeStyleProject p = r.createFreeStyleProject();\n             p.setAssignedNode(s);\n-            p.getBuildersList().add(Functions.isWindows() ? new BatchFile(\"echo hello\") : new Shell(\"echo hello\"));\n+            p.getBuildersList().add(Functions.isWindows() ? new BatchFile(\"echo hello\") : new Shell(\"dd if=/dev/random count=1024 bs=200\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e57ed6368b0036275c5392b2bc8ffbbf4c3cd4f7"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDA0NTMxNw==", "bodyText": "This line has been reverted by #4605 anyway", "url": "https://github.com/jenkinsci/jenkins/pull/4596#discussion_r420045317", "createdAt": "2020-05-05T11:41:40Z", "author": {"login": "Vlatombe"}, "path": "test/src/test/java/jenkins/agents/WebSocketAgentsTest.java", "diffHunk": "@@ -99,9 +100,10 @@ public void smokes() throws Exception {\n             ).stdout(System.out).start());\n             r.waitOnline(s);\n             assertEquals(\"response\", s.getChannel().call(new DummyTask()));\n+            assertNotNull(s.getChannel().call(new FatTask()));\n             FreeStyleProject p = r.createFreeStyleProject();\n             p.setAssignedNode(s);\n-            p.getBuildersList().add(Functions.isWindows() ? new BatchFile(\"echo hello\") : new Shell(\"echo hello\"));\n+            p.getBuildersList().add(Functions.isWindows() ? new BatchFile(\"echo hello\") : new Shell(\"dd if=/dev/random count=1024 bs=200\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTkyMzk4Mw=="}, "originalCommit": {"oid": "e57ed6368b0036275c5392b2bc8ffbbf4c3cd4f7"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDA4MDE4OQ==", "bodyText": "\u21d2 #4710 (comment)", "url": "https://github.com/jenkinsci/jenkins/pull/4596#discussion_r420080189", "createdAt": "2020-05-05T12:45:53Z", "author": {"login": "jglick"}, "path": "test/src/test/java/jenkins/agents/WebSocketAgentsTest.java", "diffHunk": "@@ -99,9 +100,10 @@ public void smokes() throws Exception {\n             ).stdout(System.out).start());\n             r.waitOnline(s);\n             assertEquals(\"response\", s.getChannel().call(new DummyTask()));\n+            assertNotNull(s.getChannel().call(new FatTask()));\n             FreeStyleProject p = r.createFreeStyleProject();\n             p.setAssignedNode(s);\n-            p.getBuildersList().add(Functions.isWindows() ? new BatchFile(\"echo hello\") : new Shell(\"echo hello\"));\n+            p.getBuildersList().add(Functions.isWindows() ? new BatchFile(\"echo hello\") : new Shell(\"dd if=/dev/random count=1024 bs=200\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTkyMzk4Mw=="}, "originalCommit": {"oid": "e57ed6368b0036275c5392b2bc8ffbbf4c3cd4f7"}, "originalPosition": 16}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 658, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}