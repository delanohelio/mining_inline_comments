{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAyMTM0Mjg5", "number": 4641, "title": "Refactoring CLICommand.java", "bodyText": "This PR is for minor changes without a JIRA ticket.  The goal was to reduce duplicated code by adding a method.\nProposed changelog entries\nN/A\nProposed upgrade guidelines\nN/A\nSubmitter checklist\n\n JIRA issue is well described\n Changelog entries and upgrade guidelines are appropriate for the audience affected by the change (users or developer, depending on the change). Examples\n\nFill-in the Proposed changelog entries section only if there are breaking changes or other changes which may require extra steps from users during the upgrade\n\n\n Appropriate autotests or explanation to why this change has no tests\n\nThe refactoring done should not change the behaviour of existing code, so the tests should not need to be changed.\n\n\n For dependency updates: links to external changelogs and, if possible, full diffs\n\nDesired reviewers\nN/A\nMaintainer checklist\nBefore the changes are marked as ready-for-merge:\n\n There are at least 2 approvals for the pull request and no outstanding requests for change\n Conversations in the pull request are over OR it is explicit that a reviewer does not block the change\n Changelog entries in the PR title and/or Proposed changelog entries are correct\n Proper changelog labels are set so that the changelog can be generated automatically\n If the change needs additional upgrade steps from users, upgrade-guide-needed label is set and there is a Proposed upgrade guidelines section in the PR title. (example)\n If it would make sense to backport the change to LTS, a JIRA issue should exist and be labeled as lts-candidate", "createdAt": "2020-04-11T03:42:43Z", "url": "https://github.com/jenkinsci/jenkins/pull/4641", "merged": true, "mergeCommit": {"oid": "c78b8e34118185934a66cc0a38452b4fea370eea"}, "closed": true, "closedAt": "2020-04-21T14:50:45Z", "author": {"login": "helenSpry"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcWcbOtAH2gAyNDAyMTM0Mjg5OmNmMzgxYzFjZGY1NmFjMGU5MDlhNzY5OGI5YjMxZDIxYThiNmZkNDM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcY7gKyAFqTM5NTk0NjI2NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "cf381c1cdf56ac0e909a7698b9b31d21a8b6fd43", "author": {"user": null}, "url": "https://github.com/jenkinsci/jenkins/commit/cf381c1cdf56ac0e909a7698b9b31d21a8b6fd43", "committedDate": "2020-04-11T02:39:30Z", "message": "extracted duplicated code in method"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ca23f150250b0676a6af05c8e02aa3e13ab36d92", "author": {"user": null}, "url": "https://github.com/jenkinsci/jenkins/commit/ca23f150250b0676a6af05c8e02aa3e13ab36d92", "committedDate": "2020-04-11T02:59:09Z", "message": "removed unnecessary assignments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkxNzUwNDYx", "url": "https://github.com/jenkinsci/jenkins/pull/4641#pullrequestreview-391750461", "createdAt": "2020-04-11T09:14:04Z", "commit": {"oid": "ca23f150250b0676a6af05c8e02aa3e13ab36d92"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMVQwOToxNDowNFrOGELvVw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMVQwOToxNDowNFrOGELvVw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzAzOTgzMQ==", "bodyText": "Maybe in this case you could keep the errorMsg variable to avoid duplication. Also the code gets more readable with spaces around +.", "url": "https://github.com/jenkinsci/jenkins/pull/4641#discussion_r407039831", "createdAt": "2020-04-11T09:14:04Z", "author": {"login": "zbynek"}, "path": "core/src/main/java/hudson/cli/CLICommand.java", "diffHunk": "@@ -251,51 +251,31 @@ public int main(List<String> args, Locale locale, InputStream stdin, PrintStream\n                     new Object[] {getName(), args.size(), auth.getName(), res});\n             return res;\n         } catch (CmdLineException e) {\n-            LOGGER.log(Level.FINE, String.format(\"Failed call to CLI command %s, with %d arguments, as user %s.\",\n-                    getName(), args.size(), auth != null ? auth.getName() : \"<unknown>\"), e);\n-            stderr.println();\n-            stderr.println(\"ERROR: \" + e.getMessage());\n+            logAndPrintErrorWithDefaultValues(args, e);\n             printUsage(stderr, p);\n             return 2;\n         } catch (IllegalStateException e) {\n-            LOGGER.log(Level.FINE, String.format(\"Failed call to CLI command %s, with %d arguments, as user %s.\",\n-                    getName(), args.size(), auth != null ? auth.getName() : \"<unknown>\"), e);\n-            stderr.println();\n-            stderr.println(\"ERROR: \" + e.getMessage());\n+            logAndPrintErrorWithDefaultValues(args, e);\n             return 4;\n         } catch (IllegalArgumentException e) {\n-            LOGGER.log(Level.FINE, String.format(\"Failed call to CLI command %s, with %d arguments, as user %s.\",\n-                    getName(), args.size(), auth != null ? auth.getName() : \"<unknown>\"), e);\n-            stderr.println();\n-            stderr.println(\"ERROR: \" + e.getMessage());\n+            logAndPrintErrorWithDefaultValues(args, e);\n             return 3;\n         } catch (AbortException e) {\n-            LOGGER.log(Level.FINE, String.format(\"Failed call to CLI command %s, with %d arguments, as user %s.\",\n-                    getName(), args.size(), auth != null ? auth.getName() : \"<unknown>\"), e);\n-            // signals an error without stack trace\n-            stderr.println();\n-            stderr.println(\"ERROR: \" + e.getMessage());\n+            logAndPrintErrorWithDefaultValues(args, e);\n             return 5;\n         } catch (AccessDeniedException e) {\n-            LOGGER.log(Level.FINE, String.format(\"Failed call to CLI command %s, with %d arguments, as user %s.\",\n-                    getName(), args.size(), auth != null ? auth.getName() : \"<unknown>\"), e);\n-            stderr.println();\n-            stderr.println(\"ERROR: \" + e.getMessage());\n+            logAndPrintErrorWithDefaultValues(args, e);\n             return 6;\n         } catch (BadCredentialsException e) {\n             // to the caller, we can't reveal whether the user didn't exist or the password didn't match.\n             // do that to the server log instead\n             String id = UUID.randomUUID().toString();\n-            LOGGER.log(Level.INFO, \"CLI login attempt failed: \" + id, e);\n-            stderr.println();\n-            stderr.println(\"ERROR: Bad Credentials. Search the server log for \" + id + \" for more details.\");\n+            logAndPrintError(e, \"Bad Credentials. Search the server log for \" + id + \" for more details.\",\n+                    \"CLI login attempt failed: \" + id, Level.INFO);\n             return 7;\n         } catch (Throwable e) {\n-            final String errorMsg = String.format(\"Unexpected exception occurred while performing %s command.\",\n-                    getName());\n-            stderr.println();\n-            stderr.println(\"ERROR: \" + errorMsg);\n-            LOGGER.log(Level.WARNING, errorMsg, e);\n+            logAndPrintError(e, \"Unexpected exception occurred while performing \"+getName()+\" command.\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ca23f150250b0676a6af05c8e02aa3e13ab36d92"}, "originalPosition": 65}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkxNzUyMzA5", "url": "https://github.com/jenkinsci/jenkins/pull/4641#pullrequestreview-391752309", "createdAt": "2020-04-11T09:45:22Z", "commit": {"oid": "ca23f150250b0676a6af05c8e02aa3e13ab36d92"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMVQwOTo0NToyMlrOGEL6lQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMVQwOTo0NToyMlrOGEL6lQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzA0MjcwOQ==", "bodyText": "It's unclear what \"default values\" refers to.", "url": "https://github.com/jenkinsci/jenkins/pull/4641#discussion_r407042709", "createdAt": "2020-04-11T09:45:22Z", "author": {"login": "daniel-beck"}, "path": "core/src/main/java/hudson/cli/CLICommand.java", "diffHunk": "@@ -304,6 +284,20 @@ public int main(List<String> args, Locale locale, InputStream stdin, PrintStream\n         }\n     }\n \n+    private void logAndPrintErrorWithDefaultValues(List<String> args, Throwable e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ca23f150250b0676a6af05c8e02aa3e13ab36d92"}, "originalPosition": 74}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "87830174a77fe59afc526aa5cffb1b773d0999a0", "author": {"user": null}, "url": "https://github.com/jenkinsci/jenkins/commit/87830174a77fe59afc526aa5cffb1b773d0999a0", "committedDate": "2020-04-11T18:01:58Z", "message": "added back variable to reduce duplication and changed name of method"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkxODc1OTM1", "url": "https://github.com/jenkinsci/jenkins/pull/4641#pullrequestreview-391875935", "createdAt": "2020-04-12T16:52:39Z", "commit": {"oid": "87830174a77fe59afc526aa5cffb1b773d0999a0"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk1OTQ2MjY0", "url": "https://github.com/jenkinsci/jenkins/pull/4641#pullrequestreview-395946264", "createdAt": "2020-04-18T19:59:48Z", "commit": {"oid": "87830174a77fe59afc526aa5cffb1b773d0999a0"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1047, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}