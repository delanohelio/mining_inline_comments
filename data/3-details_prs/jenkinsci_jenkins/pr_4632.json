{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk5OTIzNDI2", "number": 4632, "title": "Ensure that encoded console annotations are stripped from system logger messages", "bodyText": "A minor annoyance: plugins which printed console annotations in some manners would dump Base64 gobbledygook into LogTaskListener, even though it claimed to suppress these.\nProposed changelog entries\n\nEnsure that encoded console annotations are stripped from system logger messages.\n\nMaintainer checklist\nBefore the changes are marked as ready-for-merge:\n\n There are at least 2 approvals for the pull request and no outstanding requests for change\n Conversations in the pull request are over OR it is explicit that a reviewer does not block the change\n Changelog entries in the PR title and/or Proposed changelog entries are correct\n Proper changelog labels are set so that the changelog can be generated automatically\n If the change needs additional upgrade steps from users, upgrade-guide-needed label is set and there is a Proposed upgrade guidelines section in the PR title. (example)\n If it would make sense to backport the change to LTS, a JIRA issue should exist and be labeled as lts-candidate", "createdAt": "2020-04-06T21:46:56Z", "url": "https://github.com/jenkinsci/jenkins/pull/4632", "merged": true, "mergeCommit": {"oid": "55aa46e66d2ab5c0cbea496ff98952957fb34191"}, "closed": true, "closedAt": "2020-04-11T11:08:12Z", "author": {"login": "jglick"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcVFz-JgH2gAyMzk5OTIzNDI2OmJmODU4YjdlNTUzNDEzMGU0NDEwMzkyNTQ3N2UzMTdmZWFhMDA4MDM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcWL_D1gFqTM5MTMwNzAwOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "bf858b7e5534130e44103925477e317feaa00803", "author": {"user": {"login": "jglick", "name": "Jesse Glick"}}, "url": "https://github.com/jenkinsci/jenkins/commit/bf858b7e5534130e44103925477e317feaa00803", "committedDate": "2020-04-06T21:44:47Z", "message": "Fixing console annotation masking in LogTaskListener"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg4NjQxNzcw", "url": "https://github.com/jenkinsci/jenkins/pull/4632#pullrequestreview-388641770", "createdAt": "2020-04-06T21:47:16Z", "commit": {"oid": "bf858b7e5534130e44103925477e317feaa00803"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQyMTo0NzoxNlrOGBrJAQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQyMTo0ODowNlrOGBrKZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDQwODU3Nw==", "bodyText": "Overridden, so already worked.", "url": "https://github.com/jenkinsci/jenkins/pull/4632#discussion_r404408577", "createdAt": "2020-04-06T21:47:16Z", "author": {"login": "jglick"}, "path": "test/src/test/java/hudson/util/LogTaskListenerTest.java", "diffHunk": "@@ -0,0 +1,57 @@\n+/*\n+ * The MIT License\n+ *\n+ * Copyright 2020 CloudBees, Inc.\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included in\n+ * all copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+ * THE SOFTWARE.\n+ */\n+package hudson.util;\n+\n+import hudson.console.HyperlinkNote;\n+import hudson.model.TaskListener;\n+import java.util.logging.Level;\n+import java.util.logging.Logger;\n+import org.junit.Test;\n+import static org.junit.Assert.*;\n+import org.junit.Rule;\n+import org.jvnet.hudson.test.JenkinsRule;\n+import org.jvnet.hudson.test.LoggerRule;\n+\n+public class LogTaskListenerTest {\n+\n+    @Rule\n+    public JenkinsRule r = new JenkinsRule();\n+\n+    @Rule\n+    public LoggerRule logging = new LoggerRule().record(\"LogTaskListenerTest\", Level.ALL).capture(100);\n+\n+    @Test\n+    public void annotations() throws Exception {\n+        TaskListener l = new LogTaskListener(Logger.getLogger(\"LogTaskListenerTest\"), Level.FINE);\n+        l.getLogger().println(\"plain line\");\n+        String url = \"http://nowhere.net/\";\n+        l.annotate(new HyperlinkNote(url, 0));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bf858b7e5534130e44103925477e317feaa00803"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDQwODYzNQ==", "bodyText": "Delegates to annotate, so already worked.", "url": "https://github.com/jenkinsci/jenkins/pull/4632#discussion_r404408635", "createdAt": "2020-04-06T21:47:25Z", "author": {"login": "jglick"}, "path": "test/src/test/java/hudson/util/LogTaskListenerTest.java", "diffHunk": "@@ -0,0 +1,57 @@\n+/*\n+ * The MIT License\n+ *\n+ * Copyright 2020 CloudBees, Inc.\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included in\n+ * all copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+ * THE SOFTWARE.\n+ */\n+package hudson.util;\n+\n+import hudson.console.HyperlinkNote;\n+import hudson.model.TaskListener;\n+import java.util.logging.Level;\n+import java.util.logging.Logger;\n+import org.junit.Test;\n+import static org.junit.Assert.*;\n+import org.junit.Rule;\n+import org.jvnet.hudson.test.JenkinsRule;\n+import org.jvnet.hudson.test.LoggerRule;\n+\n+public class LogTaskListenerTest {\n+\n+    @Rule\n+    public JenkinsRule r = new JenkinsRule();\n+\n+    @Rule\n+    public LoggerRule logging = new LoggerRule().record(\"LogTaskListenerTest\", Level.ALL).capture(100);\n+\n+    @Test\n+    public void annotations() throws Exception {\n+        TaskListener l = new LogTaskListener(Logger.getLogger(\"LogTaskListenerTest\"), Level.FINE);\n+        l.getLogger().println(\"plain line\");\n+        String url = \"http://nowhere.net/\";\n+        l.annotate(new HyperlinkNote(url, 0));\n+        l.getLogger().println(\"from annotate\");\n+        l.hyperlink(url, \"from hyperlink\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bf858b7e5534130e44103925477e317feaa00803"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDQwODcyNg==", "bodyText": "Bypassed the supposed fix.", "url": "https://github.com/jenkinsci/jenkins/pull/4632#discussion_r404408726", "createdAt": "2020-04-06T21:47:38Z", "author": {"login": "jglick"}, "path": "test/src/test/java/hudson/util/LogTaskListenerTest.java", "diffHunk": "@@ -0,0 +1,57 @@\n+/*\n+ * The MIT License\n+ *\n+ * Copyright 2020 CloudBees, Inc.\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included in\n+ * all copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+ * THE SOFTWARE.\n+ */\n+package hudson.util;\n+\n+import hudson.console.HyperlinkNote;\n+import hudson.model.TaskListener;\n+import java.util.logging.Level;\n+import java.util.logging.Logger;\n+import org.junit.Test;\n+import static org.junit.Assert.*;\n+import org.junit.Rule;\n+import org.jvnet.hudson.test.JenkinsRule;\n+import org.jvnet.hudson.test.LoggerRule;\n+\n+public class LogTaskListenerTest {\n+\n+    @Rule\n+    public JenkinsRule r = new JenkinsRule();\n+\n+    @Rule\n+    public LoggerRule logging = new LoggerRule().record(\"LogTaskListenerTest\", Level.ALL).capture(100);\n+\n+    @Test\n+    public void annotations() throws Exception {\n+        TaskListener l = new LogTaskListener(Logger.getLogger(\"LogTaskListenerTest\"), Level.FINE);\n+        l.getLogger().println(\"plain line\");\n+        String url = \"http://nowhere.net/\";\n+        l.annotate(new HyperlinkNote(url, 0));\n+        l.getLogger().println(\"from annotate\");\n+        l.hyperlink(url, \"from hyperlink\");\n+        l.getLogger().println();\n+        l.getLogger().println(HyperlinkNote.encodeTo(url, \"there\") + \" from encoded\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bf858b7e5534130e44103925477e317feaa00803"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDQwODkzNQ==", "bodyText": "Prior to fix, failed with\norg.junit.ComparisonFailure: expected:<...te, from hyperlink, []there from encoded]> but was:<...te, from hyperlink, [ha:////4MQbm/skxyBfes+iRowS5J8SNAG9lLJqegMyU8lLZregAAAAlB+LCAAAAAAAAP9b85aBtbiIQSajNKU4P08vOT+vOD8nVc+jsiC1KCczL9svvyTVzHb1RttJBUeZGJg8GdhyUvPSSzJ8GJhLi3JKGIR8shLLEvVzEvPS9YNLijLz0q0rihik0IxzhtAgwxgggJGJgaGiAMhgLWEQzigpKbDS18/LL89ILUrVy0st0QcAFd2f8JgAAAA=]there from encoded]>\n\tat org.junit.Assert.assertEquals(Assert.java:117)\n\tat org.junit.Assert.assertEquals(Assert.java:146)\n\tat hudson.util.LogTaskListenerTest.annotations(LogTaskListenerTest.java:54)", "url": "https://github.com/jenkinsci/jenkins/pull/4632#discussion_r404408935", "createdAt": "2020-04-06T21:48:06Z", "author": {"login": "jglick"}, "path": "test/src/test/java/hudson/util/LogTaskListenerTest.java", "diffHunk": "@@ -0,0 +1,57 @@\n+/*\n+ * The MIT License\n+ *\n+ * Copyright 2020 CloudBees, Inc.\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included in\n+ * all copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+ * THE SOFTWARE.\n+ */\n+package hudson.util;\n+\n+import hudson.console.HyperlinkNote;\n+import hudson.model.TaskListener;\n+import java.util.logging.Level;\n+import java.util.logging.Logger;\n+import org.junit.Test;\n+import static org.junit.Assert.*;\n+import org.junit.Rule;\n+import org.jvnet.hudson.test.JenkinsRule;\n+import org.jvnet.hudson.test.LoggerRule;\n+\n+public class LogTaskListenerTest {\n+\n+    @Rule\n+    public JenkinsRule r = new JenkinsRule();\n+\n+    @Rule\n+    public LoggerRule logging = new LoggerRule().record(\"LogTaskListenerTest\", Level.ALL).capture(100);\n+\n+    @Test\n+    public void annotations() throws Exception {\n+        TaskListener l = new LogTaskListener(Logger.getLogger(\"LogTaskListenerTest\"), Level.FINE);\n+        l.getLogger().println(\"plain line\");\n+        String url = \"http://nowhere.net/\";\n+        l.annotate(new HyperlinkNote(url, 0));\n+        l.getLogger().println(\"from annotate\");\n+        l.hyperlink(url, \"from hyperlink\");\n+        l.getLogger().println();\n+        l.getLogger().println(HyperlinkNote.encodeTo(url, \"there\") + \" from encoded\");\n+        assertEquals(\"[plain line, from annotate, from hyperlink, there from encoded]\", logging.getMessages().toString());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bf858b7e5534130e44103925477e317feaa00803"}, "originalPosition": 54}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg4NjQyMzU5", "url": "https://github.com/jenkinsci/jenkins/pull/4632#pullrequestreview-388642359", "createdAt": "2020-04-06T21:48:25Z", "commit": {"oid": "bf858b7e5534130e44103925477e317feaa00803"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQyMTo0ODoyNVrOGBrK3w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQyMTo0ODoyNVrOGBrK3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDQwOTA1NQ==", "bodyText": "Superfluous now.", "url": "https://github.com/jenkinsci/jenkins/pull/4632#discussion_r404409055", "createdAt": "2020-04-06T21:48:25Z", "author": {"login": "jglick"}, "path": "core/src/main/java/hudson/util/LogTaskListener.java", "diffHunk": "@@ -47,25 +47,20 @@\n     private final TaskListener delegate;\n \n     public LogTaskListener(Logger logger, Level level) {\n-        delegate = new StreamTaskListener(new LogOutputStream(logger, level, new Throwable().getStackTrace()[1]));\n+        delegate = new StreamTaskListener(new PlainTextConsoleOutputStream(new LogOutputStream(logger, level, new Throwable().getStackTrace()[1])));\n     }\n \n     @Override\n     public PrintStream getLogger() {\n         return delegate.getLogger();\n     }\n \n-    @Override\n-    @SuppressWarnings(\"rawtypes\")\n-    public void annotate(ConsoleNote ann) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bf858b7e5534130e44103925477e317feaa00803"}, "originalPosition": 24}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg4NzQ3ODE3", "url": "https://github.com/jenkinsci/jenkins/pull/4632#pullrequestreview-388747817", "createdAt": "2020-04-07T02:42:54Z", "commit": {"oid": "bf858b7e5534130e44103925477e317feaa00803"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg5NDQyNDM2", "url": "https://github.com/jenkinsci/jenkins/pull/4632#pullrequestreview-389442436", "createdAt": "2020-04-07T19:54:43Z", "commit": {"oid": "bf858b7e5534130e44103925477e317feaa00803"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkxMzA3MDA4", "url": "https://github.com/jenkinsci/jenkins/pull/4632#pullrequestreview-391307008", "createdAt": "2020-04-10T07:30:15Z", "commit": {"oid": "bf858b7e5534130e44103925477e317feaa00803"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1407, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}