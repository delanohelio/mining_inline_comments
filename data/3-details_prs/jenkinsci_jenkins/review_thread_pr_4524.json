{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc5NDI2NjU5", "number": 4524, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQxMzo0MToxNFrODitIMg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQxMzo0MToxNFrODitIMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3NzE3NTU0OnYy", "diffSide": "RIGHT", "path": "core/src/main/resources/hudson/security/GlobalSecurityConfiguration/index.groovy", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQxMzo0MToxNFrOFuGbBg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQyMjowNzowOFrOFuXAgA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzg4NDAzOA==", "bodyText": "Ideally this should be solved differently. Just have the plugins generate an element they want to check in JS, based on the variable being set?\nOr perhaps check for the existence of the f.submit/f.apply in the plugin?", "url": "https://github.com/jenkinsci/jenkins/pull/4524#discussion_r383884038", "createdAt": "2020-02-25T13:41:14Z", "author": {"login": "daniel-beck"}, "path": "core/src/main/resources/hudson/security/GlobalSecurityConfiguration/index.groovy", "diffHunk": "@@ -11,12 +11,16 @@ def f=namespace(lib.FormTagLib)\n def l=namespace(lib.LayoutTagLib)\n def st=namespace(\"jelly:stapler\")\n \n-l.layout(permission:app.ADMINISTER, title:my.displayName, cssclass:request.getParameter('decorate')) {\n+l.layout(permission:app.SYSTEM_READ, title:my.displayName, cssclass:request.getParameter('decorate')) {\n     l.main_panel {\n         h1 {\n             l.icon(class: 'icon-secure icon-xlg')\n             text(my.displayName)\n         }\n+        if (!h.hasPermission(app.ADMINISTER)) {\n+            set(\"readOnlyMode\", \"true\")\n+            input(id: \"readOnlyMode\", type: \"hidden\", name: \"readOnlyMode\", value: \"true\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "45e2b4bc05de1f9651a9e05a0eb9aa76f7a4dd5e"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzg4NjMyNQ==", "bodyText": "sure that would work too, I just thought of this first", "url": "https://github.com/jenkinsci/jenkins/pull/4524#discussion_r383886325", "createdAt": "2020-02-25T13:45:13Z", "author": {"login": "timja"}, "path": "core/src/main/resources/hudson/security/GlobalSecurityConfiguration/index.groovy", "diffHunk": "@@ -11,12 +11,16 @@ def f=namespace(lib.FormTagLib)\n def l=namespace(lib.LayoutTagLib)\n def st=namespace(\"jelly:stapler\")\n \n-l.layout(permission:app.ADMINISTER, title:my.displayName, cssclass:request.getParameter('decorate')) {\n+l.layout(permission:app.SYSTEM_READ, title:my.displayName, cssclass:request.getParameter('decorate')) {\n     l.main_panel {\n         h1 {\n             l.icon(class: 'icon-secure icon-xlg')\n             text(my.displayName)\n         }\n+        if (!h.hasPermission(app.ADMINISTER)) {\n+            set(\"readOnlyMode\", \"true\")\n+            input(id: \"readOnlyMode\", type: \"hidden\", name: \"readOnlyMode\", value: \"true\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzg4NDAzOA=="}, "originalCommit": {"oid": "45e2b4bc05de1f9651a9e05a0eb9aa76f7a4dd5e"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzg4NzkyMQ==", "bodyText": "Just seems like a hack. So far the readOnlyMode variable was sufficient for core, it would be nice if we kept that (until we can't anymore).", "url": "https://github.com/jenkinsci/jenkins/pull/4524#discussion_r383887921", "createdAt": "2020-02-25T13:48:07Z", "author": {"login": "daniel-beck"}, "path": "core/src/main/resources/hudson/security/GlobalSecurityConfiguration/index.groovy", "diffHunk": "@@ -11,12 +11,16 @@ def f=namespace(lib.FormTagLib)\n def l=namespace(lib.LayoutTagLib)\n def st=namespace(\"jelly:stapler\")\n \n-l.layout(permission:app.ADMINISTER, title:my.displayName, cssclass:request.getParameter('decorate')) {\n+l.layout(permission:app.SYSTEM_READ, title:my.displayName, cssclass:request.getParameter('decorate')) {\n     l.main_panel {\n         h1 {\n             l.icon(class: 'icon-secure icon-xlg')\n             text(my.displayName)\n         }\n+        if (!h.hasPermission(app.ADMINISTER)) {\n+            set(\"readOnlyMode\", \"true\")\n+            input(id: \"readOnlyMode\", type: \"hidden\", name: \"readOnlyMode\", value: \"true\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzg4NDAzOA=="}, "originalCommit": {"oid": "45e2b4bc05de1f9651a9e05a0eb9aa76f7a4dd5e"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDE1NTc3Ng==", "bodyText": "done", "url": "https://github.com/jenkinsci/jenkins/pull/4524#discussion_r384155776", "createdAt": "2020-02-25T22:07:08Z", "author": {"login": "timja"}, "path": "core/src/main/resources/hudson/security/GlobalSecurityConfiguration/index.groovy", "diffHunk": "@@ -11,12 +11,16 @@ def f=namespace(lib.FormTagLib)\n def l=namespace(lib.LayoutTagLib)\n def st=namespace(\"jelly:stapler\")\n \n-l.layout(permission:app.ADMINISTER, title:my.displayName, cssclass:request.getParameter('decorate')) {\n+l.layout(permission:app.SYSTEM_READ, title:my.displayName, cssclass:request.getParameter('decorate')) {\n     l.main_panel {\n         h1 {\n             l.icon(class: 'icon-secure icon-xlg')\n             text(my.displayName)\n         }\n+        if (!h.hasPermission(app.ADMINISTER)) {\n+            set(\"readOnlyMode\", \"true\")\n+            input(id: \"readOnlyMode\", type: \"hidden\", name: \"readOnlyMode\", value: \"true\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzg4NDAzOA=="}, "originalCommit": {"oid": "45e2b4bc05de1f9651a9e05a0eb9aa76f7a4dd5e"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 834, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}