{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc2OTIzNTYy", "number": 4922, "title": "Add `CloudState` to be passed to `Cloud#provision` and `Cloud#canProvision` methods.", "bodyText": "This gives more insight to the Cloud implementation to ongoing\nprovisioning operations and helps implement better control on the number\nof nodes provisioned when provisioning limits are defined.\n\nDownstream PR jenkinsci/kubernetes-plugin#835\n\n\n\nProposed changelog entries\n\nCloud implementations are given more context about ongoing planned nodes.\n\n\nProposed upgrade guidelines\nN/A\nSubmitter checklist\n\n (If applicable) Jira issue is well described\n Changelog entries and upgrade guidelines are appropriate for the audience affected by the change (users or developer, depending on the change). Examples\n\nFill-in the Proposed changelog entries section only if there are breaking changes or other changes which may require extra steps from users during the upgrade\n\n\n Appropriate autotests or explanation to why this change has no tests\n For dependency updates: links to external changelogs and, if possible, full diffs\n\n\nDesired reviewers\n@mention\n\nMaintainer checklist\nBefore the changes are marked as ready-for-merge:\n\n There are at least 2 approvals for the pull request and no outstanding requests for change\n Conversations in the pull request are over OR it is explicit that a reviewer does not block the change\n Changelog entries in the PR title and/or Proposed changelog entries are correct\n Proper changelog labels are set so that the changelog can be generated automatically\n If the change needs additional upgrade steps from users, upgrade-guide-needed label is set and there is a Proposed upgrade guidelines section in the PR title. (example)\n If it would make sense to backport the change to LTS, a Jira issue must exist, be a Bug or Improvement, and be labeled as lts-candidate to be considered (see query).", "createdAt": "2020-09-01T08:45:51Z", "url": "https://github.com/jenkinsci/jenkins/pull/4922", "merged": true, "mergeCommit": {"oid": "3992a30efb1abf697cae8e02f9e81dd04b92b135"}, "closed": true, "closedAt": "2020-09-25T20:34:06Z", "author": {"login": "Vlatombe"}, "timelineItems": {"totalCount": 21, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdEjWd6gH2gAyNDc2OTIzNTYyOjVhOTQ2YjkyMDBiZTY4YjkxNTExNWMyZmE5Y2I2ZjI5OTEyM2UyMTY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdLtAjWAFqTQ5NDY4ODYxMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "5a946b9200be68b915115c2fa9cb6f299123e216", "author": {"user": {"login": "Vlatombe", "name": "Vincent Latombe"}}, "url": "https://github.com/jenkinsci/jenkins/commit/5a946b9200be68b915115c2fa9cb6f299123e216", "committedDate": "2020-09-01T08:44:09Z", "message": "Add CloudState to be passed to Cloud#provision and Cloud#canProvision methods\n\nThis gives more insight to the Cloud implementation to ongoing\nprovisioning operations and helps implement better control on the number\nof nodes provisioned when provisioning limits are defined."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a9a3c0de91ea884a635f7c10e10cd7d99af9f97d", "author": {"user": {"login": "Vlatombe", "name": "Vincent Latombe"}}, "url": "https://github.com/jenkinsci/jenkins/commit/a9a3c0de91ea884a635f7c10e10cd7d99af9f97d", "committedDate": "2020-09-01T08:51:51Z", "message": "Better exception messages"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b97ba5ed8d379f3ce48a7c1088b688b5c47a6f43", "author": {"user": {"login": "Vlatombe", "name": "Vincent Latombe"}}, "url": "https://github.com/jenkinsci/jenkins/commit/b97ba5ed8d379f3ce48a7c1088b688b5c47a6f43", "committedDate": "2020-09-01T14:38:36Z", "message": "Merge remote-tracking branch 'origin/master' into cloud-plannednodes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgxMzY2MTI4", "url": "https://github.com/jenkinsci/jenkins/pull/4922#pullrequestreview-481366128", "createdAt": "2020-09-02T22:49:43Z", "commit": {"oid": "b97ba5ed8d379f3ce48a7c1088b688b5c47a6f43"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQyMjo0OTo0NFrOHMNjIQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQyMjo0OTo0NFrOHMNjIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjU2Njk0NQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * @since XXX\n          \n          \n            \n                 * @since TODO", "url": "https://github.com/jenkinsci/jenkins/pull/4922#discussion_r482566945", "createdAt": "2020-09-02T22:49:44Z", "author": {"login": "jglick"}, "path": "core/src/main/java/hudson/slaves/Cloud.java", "diffHunk": "@@ -194,4 +256,42 @@ public ACL getACL() {\n     public static final Permission PROVISION = new Permission(\n             Computer.PERMISSIONS, \"Provision\", Messages._Cloud_ProvisionPermission_Description(), Jenkins.ADMINISTER, PERMISSION_SCOPE\n     );\n+\n+    /**\n+     * Parameter object for {@link hudson.slaves.Cloud}.\n+     * @since XXX", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b97ba5ed8d379f3ce48a7c1088b688b5c47a6f43"}, "originalPosition": 99}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgxNzAxNDgz", "url": "https://github.com/jenkinsci/jenkins/pull/4922#pullrequestreview-481701483", "createdAt": "2020-09-03T10:21:29Z", "commit": {"oid": "b97ba5ed8d379f3ce48a7c1088b688b5c47a6f43"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxMDoyMTozMFrOHMgI2Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxMDoyMTozMFrOHMgI2Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mjg3MTUxMw==", "bodyText": "Curious as to why this has to be synchronized", "url": "https://github.com/jenkinsci/jenkins/pull/4922#discussion_r482871513", "createdAt": "2020-09-03T10:21:30Z", "author": {"login": "res0nance"}, "path": "core/src/main/java/hudson/slaves/Cloud.java", "diffHunk": "@@ -194,4 +256,42 @@ public ACL getACL() {\n     public static final Permission PROVISION = new Permission(\n             Computer.PERMISSIONS, \"Provision\", Messages._Cloud_ProvisionPermission_Description(), Jenkins.ADMINISTER, PERMISSION_SCOPE\n     );\n+\n+    /**\n+     * Parameter object for {@link hudson.slaves.Cloud}.\n+     * @since XXX\n+     */\n+    public static final class CloudState {\n+        /**\n+         * The label under consideration.\n+         */\n+        @CheckForNull\n+        private final Label label;\n+        /**\n+         * The additional planned capacity for this {@link #label} and provisioned by previous strategies during the\n+         * current updating of the {@link NodeProvisioner}.\n+         */\n+        private final int additionalPlannedCapacity;\n+\n+        public CloudState(@CheckForNull Label label, int additionalPlannedCapacity) {\n+            this.label = label;\n+            this.additionalPlannedCapacity = additionalPlannedCapacity;\n+        }\n+\n+        /**\n+         * The label under consideration.\n+         */\n+        @CheckForNull\n+        public Label getLabel() {\n+            return label;\n+        }\n+\n+        /**\n+         * The additional planned capacity for this {@link #getLabel()} and provisioned by previous strategies during\n+         * the current updating of the {@link NodeProvisioner}.\n+         */\n+        public synchronized int getAdditionalPlannedCapacity() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b97ba5ed8d379f3ce48a7c1088b688b5c47a6f43"}, "originalPosition": 130}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4bae9205d35464937a4ded42bd66dcc07796637a", "author": {"user": {"login": "Vlatombe", "name": "Vincent Latombe"}}, "url": "https://github.com/jenkinsci/jenkins/commit/4bae9205d35464937a4ded42bd66dcc07796637a", "committedDate": "2020-09-03T12:07:18Z", "message": "Update core/src/main/java/hudson/slaves/Cloud.java\n\nCo-authored-by: Jesse Glick <jglick@cloudbees.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgxNzczODM2", "url": "https://github.com/jenkinsci/jenkins/pull/4922#pullrequestreview-481773836", "createdAt": "2020-09-03T12:10:00Z", "commit": {"oid": "4bae9205d35464937a4ded42bd66dcc07796637a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxMjoxMDowMFrOHMjoMQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxMjoxMDowMFrOHMjoMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjkyODY4OQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    public synchronized int getAdditionalPlannedCapacity() {\n          \n          \n            \n                    public int getAdditionalPlannedCapacity() {", "url": "https://github.com/jenkinsci/jenkins/pull/4922#discussion_r482928689", "createdAt": "2020-09-03T12:10:00Z", "author": {"login": "Vlatombe"}, "path": "core/src/main/java/hudson/slaves/Cloud.java", "diffHunk": "@@ -194,4 +256,42 @@ public ACL getACL() {\n     public static final Permission PROVISION = new Permission(\n             Computer.PERMISSIONS, \"Provision\", Messages._Cloud_ProvisionPermission_Description(), Jenkins.ADMINISTER, PERMISSION_SCOPE\n     );\n+\n+    /**\n+     * Parameter object for {@link hudson.slaves.Cloud}.\n+     * @since TODO\n+     */\n+    public static final class CloudState {\n+        /**\n+         * The label under consideration.\n+         */\n+        @CheckForNull\n+        private final Label label;\n+        /**\n+         * The additional planned capacity for this {@link #label} and provisioned by previous strategies during the\n+         * current updating of the {@link NodeProvisioner}.\n+         */\n+        private final int additionalPlannedCapacity;\n+\n+        public CloudState(@CheckForNull Label label, int additionalPlannedCapacity) {\n+            this.label = label;\n+            this.additionalPlannedCapacity = additionalPlannedCapacity;\n+        }\n+\n+        /**\n+         * The label under consideration.\n+         */\n+        @CheckForNull\n+        public Label getLabel() {\n+            return label;\n+        }\n+\n+        /**\n+         * The additional planned capacity for this {@link #getLabel()} and provisioned by previous strategies during\n+         * the current updating of the {@link NodeProvisioner}.\n+         */\n+        public synchronized int getAdditionalPlannedCapacity() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4bae9205d35464937a4ded42bd66dcc07796637a"}, "originalPosition": 130}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bc608fe7e4fa427fcafee8420eacdf23b20c0f8c", "author": {"user": {"login": "Vlatombe", "name": "Vincent Latombe"}}, "url": "https://github.com/jenkinsci/jenkins/commit/bc608fe7e4fa427fcafee8420eacdf23b20c0f8c", "committedDate": "2020-09-03T12:10:05Z", "message": "Update core/src/main/java/hudson/slaves/Cloud.java"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgxNzg0ODU3", "url": "https://github.com/jenkinsci/jenkins/pull/4922#pullrequestreview-481784857", "createdAt": "2020-09-03T12:24:51Z", "commit": {"oid": "bc608fe7e4fa427fcafee8420eacdf23b20c0f8c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxMjoyNDo1MVrOHMkJDg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxMjoyNDo1MVrOHMkJDg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjkzNzEwMg==", "bodyText": "Found a problem with this aproach if there are several levels of subclassing. I wonder if there is already a utility covering this case in the Jenkins codebase...", "url": "https://github.com/jenkinsci/jenkins/pull/4922#discussion_r482937102", "createdAt": "2020-09-03T12:24:51Z", "author": {"login": "Vlatombe"}, "path": "core/src/main/java/hudson/slaves/Cloud.java", "diffHunk": "@@ -156,13 +158,73 @@ public ACL getACL() {\n      *      just needs to return {@link PlannedNode}s that each contain an object that implements {@link Future}.\n      *      When the {@link Future} has completed its work, {@link Future#get} will be called to obtain the\n      *      provisioned {@link Node} object.\n+     * @deprecated Use {@link #provision(CloudState, int)} instead.\n      */\n-    public abstract Collection<PlannedNode> provision(Label label, int excessWorkload);\n+    @Deprecated\n+    public Collection<PlannedNode> provision(Label label, int excessWorkload){\n+        try {\n+            // Check if the new method is implemented\n+            getClass().getDeclaredMethod(\"provision\", CloudState.class, int.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bc608fe7e4fa427fcafee8420eacdf23b20c0f8c"}, "originalPosition": 27}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "640ca7d87333edc3ebecc4f3636aa57e09636d5d", "author": {"user": {"login": "Vlatombe", "name": "Vincent Latombe"}}, "url": "https://github.com/jenkinsci/jenkins/commit/640ca7d87333edc3ebecc4f3636aa57e09636d5d", "committedDate": "2020-09-03T12:50:45Z", "message": "Replace the override logic with Util.isOverridden"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg1OTY3MTI0", "url": "https://github.com/jenkinsci/jenkins/pull/4922#pullrequestreview-485967124", "createdAt": "2020-09-10T14:00:49Z", "commit": {"oid": "640ca7d87333edc3ebecc4f3636aa57e09636d5d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg1OTc1Njgz", "url": "https://github.com/jenkinsci/jenkins/pull/4922#pullrequestreview-485975683", "createdAt": "2020-09-10T14:09:08Z", "commit": {"oid": "640ca7d87333edc3ebecc4f3636aa57e09636d5d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQxNDowOTowOFrOHP16qQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQxNDowOTowOFrOHP16qQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjM3NDA1Nw==", "bodyText": "You can create a private method to avoid duplicating this method, kinda callIfOverriden passing the code to call. WDYT?", "url": "https://github.com/jenkinsci/jenkins/pull/4922#discussion_r486374057", "createdAt": "2020-09-10T14:09:08Z", "author": {"login": "MRamonLeon"}, "path": "core/src/main/java/hudson/slaves/Cloud.java", "diffHunk": "@@ -156,13 +158,71 @@ public ACL getACL() {\n      *      just needs to return {@link PlannedNode}s that each contain an object that implements {@link Future}.\n      *      When the {@link Future} has completed its work, {@link Future#get} will be called to obtain the\n      *      provisioned {@link Node} object.\n+     * @deprecated Use {@link #provision(CloudState, int)} instead.\n      */\n-    public abstract Collection<PlannedNode> provision(Label label, int excessWorkload);\n+    @Deprecated\n+    public Collection<PlannedNode> provision(Label label, int excessWorkload) {\n+        String methodName = \"provision\";\n+        if (Util.isOverridden(Cloud.class, getClass(), methodName, CloudState.class, int.class)) {\n+            return provision(new CloudState(label, 0), excessWorkload);\n+        } else {\n+            throw new AbstractMethodError(\"you must override at least one of the \"\n+                    + Cloud.class.getSimpleName() + \".\" + methodName + \" methods\");\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "640ca7d87333edc3ebecc4f3636aa57e09636d5d"}, "originalPosition": 27}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "689258fee3e0bc0e6403326f0600703efad2813c", "author": {"user": {"login": "Vlatombe", "name": "Vincent Latombe"}}, "url": "https://github.com/jenkinsci/jenkins/commit/689258fee3e0bc0e6403326f0600703efad2813c", "committedDate": "2020-09-10T14:48:47Z", "message": "Refactor the logic to call only if overridden"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7569cf23619321ff975a0a4ade45be1da8f24018", "author": {"user": {"login": "Vlatombe", "name": "Vincent Latombe"}}, "url": "https://github.com/jenkinsci/jenkins/commit/7569cf23619321ff975a0a4ade45be1da8f24018", "committedDate": "2020-09-10T14:49:35Z", "message": "Add since"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0c7f5cf01f18ae634ed15fb273478c158e9a0e78", "author": {"user": {"login": "Vlatombe", "name": "Vincent Latombe"}}, "url": "https://github.com/jenkinsci/jenkins/commit/0c7f5cf01f18ae634ed15fb273478c158e9a0e78", "committedDate": "2020-09-10T15:00:34Z", "message": "Add some test for Util.ifOverridden"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c8501f9a5915d78928261b116d15e0711fa7af7f", "author": {"user": {"login": "Vlatombe", "name": "Vincent Latombe"}}, "url": "https://github.com/jenkinsci/jenkins/commit/c8501f9a5915d78928261b116d15e0711fa7af7f", "committedDate": "2020-09-11T08:08:50Z", "message": "Merge branch 'master' into cloud-plannednodes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg2NjM0NDc3", "url": "https://github.com/jenkinsci/jenkins/pull/4922#pullrequestreview-486634477", "createdAt": "2020-09-11T09:05:33Z", "commit": {"oid": "c8501f9a5915d78928261b116d15e0711fa7af7f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkwNDA4NzYx", "url": "https://github.com/jenkinsci/jenkins/pull/4922#pullrequestreview-490408761", "createdAt": "2020-09-17T09:26:57Z", "commit": {"oid": "c8501f9a5915d78928261b116d15e0711fa7af7f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkwNDA5MDUy", "url": "https://github.com/jenkinsci/jenkins/pull/4922#pullrequestreview-490409052", "createdAt": "2020-09-17T09:27:16Z", "commit": {"oid": "c8501f9a5915d78928261b116d15e0711fa7af7f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkwNDcxNzgz", "url": "https://github.com/jenkinsci/jenkins/pull/4922#pullrequestreview-490471783", "createdAt": "2020-09-17T10:53:04Z", "commit": {"oid": "c8501f9a5915d78928261b116d15e0711fa7af7f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk0Njg4NjEy", "url": "https://github.com/jenkinsci/jenkins/pull/4922#pullrequestreview-494688612", "createdAt": "2020-09-23T13:56:44Z", "commit": {"oid": "c8501f9a5915d78928261b116d15e0711fa7af7f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1924, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}