{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI1NDQ0MDkx", "number": 4758, "title": "[JENKINS-62949] - Escape special characters from href attrib", "bodyText": "See JENKINS-62949.\nCurrently the Jenkins allows single quotes(') in job names.\nSo if an upstream job triggers downstream jobs(having single quotes), (multijob, trigger another job or paramterized builds), console log rendering HyperLinkNote of jobs has correct text but href value redirects to incomplete job URL.", "createdAt": "2020-05-30T10:00:24Z", "url": "https://github.com/jenkinsci/jenkins/pull/4758", "merged": true, "mergeCommit": {"oid": "b20b760a2988c89f64c48b805c12b6e0c46ae541"}, "closed": true, "closedAt": "2020-07-08T17:03:28Z", "author": {"login": "Absh-Day"}, "timelineItems": {"totalCount": 17, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcmT0YggH2gAyNDI1NDQ0MDkxOjM1YjQ3YmUyMTQxNGRkMzU4N2ZmNGFjYjdlZGU0ZjhmMDlhZjE3ZGQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcyScQZgH2gAyNDI1NDQ0MDkxOmZlZjRhZTYwYzU4YWY5OGNjZjRlNzRmYzJkMzE5MjhmZmRiMjdiMTE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "35b47be21414dd3587ff4acb7ede4f8f09af17dd", "author": {"user": null}, "url": "https://github.com/jenkinsci/jenkins/commit/35b47be21414dd3587ff4acb7ede4f8f09af17dd", "committedDate": "2020-05-30T09:40:37Z", "message": "escape special characters from href attrib"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0cb502530323363c9cefc8e97ddfc196dd19db13", "author": {"user": null}, "url": "https://github.com/jenkinsci/jenkins/commit/0cb502530323363c9cefc8e97ddfc196dd19db13", "committedDate": "2020-05-31T15:33:04Z", "message": "escape special character | adding test case"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0876951bb2aba5487e7cc011a24d2e4a703334a5", "author": {"user": null}, "url": "https://github.com/jenkinsci/jenkins/commit/0876951bb2aba5487e7cc011a24d2e4a703334a5", "committedDate": "2020-06-01T03:04:38Z", "message": "escape special character | adding test case"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4a9c3edf3347dac08b99643b87f7c8b1699287de", "author": {"user": null}, "url": "https://github.com/jenkinsci/jenkins/commit/4a9c3edf3347dac08b99643b87f7c8b1699287de", "committedDate": "2020-06-01T09:51:58Z", "message": "escape special character | adding test case"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4e0e9c9e7ed772cf1887f56d2e856cf957655324", "author": {"user": null}, "url": "https://github.com/jenkinsci/jenkins/commit/4e0e9c9e7ed772cf1887f56d2e856cf957655324", "committedDate": "2020-06-01T16:29:07Z", "message": "escape special character | adding test case"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIyMDIwMjMy", "url": "https://github.com/jenkinsci/jenkins/pull/4758#pullrequestreview-422020232", "createdAt": "2020-06-01T17:02:10Z", "commit": {"oid": "4e0e9c9e7ed772cf1887f56d2e856cf957655324"}, "state": "DISMISSED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxNzowMjoxMFrOGdSj6g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxNzoxMDo1MFrOGdS1KQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzM2NTk5NA==", "bodyText": "Please don't make this change.  The org.junit.Assert.assertThat is deprecated in JUnit 4.13 and was recently removed from all uses in Jenkins core.  This is adding a deprecated method that was already configured to use the preferred new method.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            import static org.junit.Assert.assertThat;\n          \n          \n            \n            import static org.hamcrest.MatcherAssert.assertThat;", "url": "https://github.com/jenkinsci/jenkins/pull/4758#discussion_r433365994", "createdAt": "2020-06-01T17:02:10Z", "author": {"login": "MarkEWaite"}, "path": "test/src/test/java/hudson/console/HyperlinkNoteTest.java", "diffHunk": "@@ -35,9 +39,13 @@\n import org.jvnet.hudson.test.Issue;\n import org.jvnet.hudson.test.JenkinsRule;\n \n+import com.gargoylesoftware.htmlunit.ElementNotFoundException;\n+import com.gargoylesoftware.htmlunit.html.HtmlAnchor;\n+import com.gargoylesoftware.htmlunit.html.HtmlPage;\n+\n import static org.hamcrest.Matchers.allOf;\n import static org.hamcrest.Matchers.containsString;\n-import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.junit.Assert.assertThat;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4e0e9c9e7ed772cf1887f56d2e856cf957655324"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzM2NzQ0OA==", "bodyText": "Please use consistent indentation when adding new code.  The changing indentation within this single method makes the pull request more difficult to read.\nMost integrated development environments (Netbeans, IntelliJ, Visual Studio Code) provide automatic formatting that can be applied to subsections (like this new block of code).\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    r.waitUntilNoActivity();\n          \n          \n            \n                r.waitUntilNoActivity();", "url": "https://github.com/jenkinsci/jenkins/pull/4758#discussion_r433367448", "createdAt": "2020-06-01T17:04:55Z", "author": {"login": "MarkEWaite"}, "path": "test/src/test/java/hudson/console/HyperlinkNoteTest.java", "diffHunk": "@@ -72,6 +80,28 @@ public void textWithNewlinesModelHyperlinkNote() throws Exception {\n                 containsString(new ModelHyperlinkNote(\"\", 0).extraAttributes()),\n                 containsString(\">\" + noteTextSanitized + \"</a>\")));\n     }\n+    \n+    @Test\n+    public void textWithSingleQuote() throws Exception {\n+    \tFreeStyleProject upstream = r.createFreeStyleProject(\"upstream\");\n+    \tr.createFreeStyleProject(\"d0wnstr3'am\");\n+    \tupstream.getPublishersList().add(new BuildTrigger(\"d0wnstr3'am\", Result.SUCCESS));\n+    \tFreeStyleBuild b = r.buildAndAssertSuccess(upstream);\n+        r.waitUntilNoActivity();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4e0e9c9e7ed772cf1887f56d2e856cf957655324"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzM2Nzk0Nw==", "bodyText": "Debugging println statements are better expressed as assertions of an expectation or can be removed if their debugging purpose has been completed.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    System.out.println(\"Before:\\n\"+rsp.getWebResponse().getContentAsString()+\"\\n\\n\");", "url": "https://github.com/jenkinsci/jenkins/pull/4758#discussion_r433367947", "createdAt": "2020-06-01T17:05:56Z", "author": {"login": "MarkEWaite"}, "path": "test/src/test/java/hudson/console/HyperlinkNoteTest.java", "diffHunk": "@@ -72,6 +80,28 @@ public void textWithNewlinesModelHyperlinkNote() throws Exception {\n                 containsString(new ModelHyperlinkNote(\"\", 0).extraAttributes()),\n                 containsString(\">\" + noteTextSanitized + \"</a>\")));\n     }\n+    \n+    @Test\n+    public void textWithSingleQuote() throws Exception {\n+    \tFreeStyleProject upstream = r.createFreeStyleProject(\"upstream\");\n+    \tr.createFreeStyleProject(\"d0wnstr3'am\");\n+    \tupstream.getPublishersList().add(new BuildTrigger(\"d0wnstr3'am\", Result.SUCCESS));\n+    \tFreeStyleBuild b = r.buildAndAssertSuccess(upstream);\n+        r.waitUntilNoActivity();\n+        HtmlPage rsp = r.createWebClient().goTo(b.getUrl()+\"console\");\n+        System.out.println(\"Before:\\n\"+rsp.getWebResponse().getContentAsString()+\"\\n\\n\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4e0e9c9e7ed772cf1887f56d2e856cf957655324"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzM2OTQ5Mw==", "bodyText": "Catching exceptions inside test code is often a sign that the test conditions are not clear.\nI believe that you expect this to always succeed.  When it fails, you want the failure message to provide enough information so that the failure can be diagnosed.  Since it is failing in CI, that likely indicates that you should add more assertions to check for additional cases.", "url": "https://github.com/jenkinsci/jenkins/pull/4758#discussion_r433369493", "createdAt": "2020-06-01T17:09:02Z", "author": {"login": "MarkEWaite"}, "path": "test/src/test/java/hudson/console/HyperlinkNoteTest.java", "diffHunk": "@@ -72,6 +80,28 @@ public void textWithNewlinesModelHyperlinkNote() throws Exception {\n                 containsString(new ModelHyperlinkNote(\"\", 0).extraAttributes()),\n                 containsString(\">\" + noteTextSanitized + \"</a>\")));\n     }\n+    \n+    @Test\n+    public void textWithSingleQuote() throws Exception {\n+    \tFreeStyleProject upstream = r.createFreeStyleProject(\"upstream\");\n+    \tr.createFreeStyleProject(\"d0wnstr3'am\");\n+    \tupstream.getPublishersList().add(new BuildTrigger(\"d0wnstr3'am\", Result.SUCCESS));\n+    \tFreeStyleBuild b = r.buildAndAssertSuccess(upstream);\n+        r.waitUntilNoActivity();\n+        HtmlPage rsp = r.createWebClient().goTo(b.getUrl()+\"console\");\n+        System.out.println(\"Before:\\n\"+rsp.getWebResponse().getContentAsString()+\"\\n\\n\");\n+        //This would fail if job name has `'`\n+        try {\n+        \tassertThat(String.valueOf(rsp.getAnchorByText(\"d0wnstr3'am\").click().getWebResponse().getStatusCode()), containsString(\"200\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4e0e9c9e7ed772cf1887f56d2e856cf957655324"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzM3MDQwOQ==", "bodyText": "You could assert that the list of anchors returned by rsp.getAnchors() contains specific items, knowing that when the assertion fails, Hamcrest will print the contents of the list for diagnosis.", "url": "https://github.com/jenkinsci/jenkins/pull/4758#discussion_r433370409", "createdAt": "2020-06-01T17:10:50Z", "author": {"login": "MarkEWaite"}, "path": "test/src/test/java/hudson/console/HyperlinkNoteTest.java", "diffHunk": "@@ -72,6 +80,28 @@ public void textWithNewlinesModelHyperlinkNote() throws Exception {\n                 containsString(new ModelHyperlinkNote(\"\", 0).extraAttributes()),\n                 containsString(\">\" + noteTextSanitized + \"</a>\")));\n     }\n+    \n+    @Test\n+    public void textWithSingleQuote() throws Exception {\n+    \tFreeStyleProject upstream = r.createFreeStyleProject(\"upstream\");\n+    \tr.createFreeStyleProject(\"d0wnstr3'am\");\n+    \tupstream.getPublishersList().add(new BuildTrigger(\"d0wnstr3'am\", Result.SUCCESS));\n+    \tFreeStyleBuild b = r.buildAndAssertSuccess(upstream);\n+        r.waitUntilNoActivity();\n+        HtmlPage rsp = r.createWebClient().goTo(b.getUrl()+\"console\");\n+        System.out.println(\"Before:\\n\"+rsp.getWebResponse().getContentAsString()+\"\\n\\n\");\n+        //This would fail if job name has `'`\n+        try {\n+        \tassertThat(String.valueOf(rsp.getAnchorByText(\"d0wnstr3'am\").click().getWebResponse().getStatusCode()), containsString(\"200\"));\n+        } catch(Exception enfe) {\n+        \tString str = \"str->\\n\";\n+\t\t\tstr += rsp.getWebResponse().getContentAsString()+\"\\n\\n\";\n+        \tfor(HtmlAnchor ha: rsp.getAnchors()) {\n+        \t\tstr += \"getNameAttribute: \" + ha.getNameAttribute() + \" getTextContent: \" + ha.getTextContent() + \"\\n\";\n+        \t}\n+        \tthrow new Exception(str);\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4e0e9c9e7ed772cf1887f56d2e856cf957655324"}, "originalPosition": 51}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3d244a2f1649fbfcb4630efeeb855a40d6ed83a4", "author": {"user": null}, "url": "https://github.com/jenkinsci/jenkins/commit/3d244a2f1649fbfcb4630efeeb855a40d6ed83a4", "committedDate": "2020-06-02T09:05:43Z", "message": "escape special character | adding test case"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c649a46525301d5a0863b7ec1f25bd7a8c470c77", "author": {"user": null}, "url": "https://github.com/jenkinsci/jenkins/commit/c649a46525301d5a0863b7ec1f25bd7a8c470c77", "committedDate": "2020-06-02T09:07:20Z", "message": "escape special character | adding test case"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI0Mjc3NzM5", "url": "https://github.com/jenkinsci/jenkins/pull/4758#pullrequestreview-424277739", "createdAt": "2020-06-04T09:45:42Z", "commit": {"oid": "c649a46525301d5a0863b7ec1f25bd7a8c470c77"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQwOTo0NTo0MlrOGe-GyQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQwOTo0NTo0MlrOGe-GyQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTEyODAwOQ==", "bodyText": "So you want to verify the link to the downstream job exists and that by clicking it, you are able to launch it?", "url": "https://github.com/jenkinsci/jenkins/pull/4758#discussion_r435128009", "createdAt": "2020-06-04T09:45:42Z", "author": {"login": "varyvol"}, "path": "test/src/test/java/hudson/console/HyperlinkNoteTest.java", "diffHunk": "@@ -72,7 +78,20 @@ public void textWithNewlinesModelHyperlinkNote() throws Exception {\n                 containsString(new ModelHyperlinkNote(\"\", 0).extraAttributes()),\n                 containsString(\">\" + noteTextSanitized + \"</a>\")));\n     }\n+    \n+    \n+    @Test\n+    public void textWithSingleQuote() throws Exception {\n+        FreeStyleProject upstream = r.createFreeStyleProject(\"upstream\");\n+        r.createFreeStyleProject(\"d0wnstr3'am\");\n+        upstream.getPublishersList().add(new BuildTrigger(\"d0wnstr3'am\", Result.SUCCESS));\n+        FreeStyleBuild b = r.buildAndAssertSuccess(upstream);\n+        r.waitUntilNoActivity();\n+        HtmlPage rsp = r.createWebClient().goTo(b.getUrl()+\"console\");\n+        assertThat(String.valueOf(rsp.getAnchorByText(\"d0wnstr3'am\").click().getWebResponse().getStatusCode()), containsString(\"200\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c649a46525301d5a0863b7ec1f25bd7a8c470c77"}, "originalPosition": 35}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI0Mjc4NTY1", "url": "https://github.com/jenkinsci/jenkins/pull/4758#pullrequestreview-424278565", "createdAt": "2020-06-04T09:46:42Z", "commit": {"oid": "c649a46525301d5a0863b7ec1f25bd7a8c470c77"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQwOTo0Njo0MlrOGe-JTA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQwOTo0Njo0MlrOGe-JTA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTEyODY1Mg==", "bodyText": "Also the test is failing because it's not able to look for the link. Maybe you need to use here the escaped text?", "url": "https://github.com/jenkinsci/jenkins/pull/4758#discussion_r435128652", "createdAt": "2020-06-04T09:46:42Z", "author": {"login": "varyvol"}, "path": "test/src/test/java/hudson/console/HyperlinkNoteTest.java", "diffHunk": "@@ -72,7 +78,20 @@ public void textWithNewlinesModelHyperlinkNote() throws Exception {\n                 containsString(new ModelHyperlinkNote(\"\", 0).extraAttributes()),\n                 containsString(\">\" + noteTextSanitized + \"</a>\")));\n     }\n+    \n+    \n+    @Test\n+    public void textWithSingleQuote() throws Exception {\n+        FreeStyleProject upstream = r.createFreeStyleProject(\"upstream\");\n+        r.createFreeStyleProject(\"d0wnstr3'am\");\n+        upstream.getPublishersList().add(new BuildTrigger(\"d0wnstr3'am\", Result.SUCCESS));\n+        FreeStyleBuild b = r.buildAndAssertSuccess(upstream);\n+        r.waitUntilNoActivity();\n+        HtmlPage rsp = r.createWebClient().goTo(b.getUrl()+\"console\");\n+        assertThat(String.valueOf(rsp.getAnchorByText(\"d0wnstr3'am\").click().getWebResponse().getStatusCode()), containsString(\"200\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c649a46525301d5a0863b7ec1f25bd7a8c470c77"}, "originalPosition": 35}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4314ee48eff801c2024199e988c8a0d1d1bba528", "author": {"user": null}, "url": "https://github.com/jenkinsci/jenkins/commit/4314ee48eff801c2024199e988c8a0d1d1bba528", "committedDate": "2020-06-28T17:18:08Z", "message": "escape special character | adding test case"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "96f8e151a8caa64124698515286afbafd312e876", "author": {"user": null}, "url": "https://github.com/jenkinsci/jenkins/commit/96f8e151a8caa64124698515286afbafd312e876", "committedDate": "2020-07-02T15:30:12Z", "message": "escape special character | adding test case"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e31fdc3483e51b8f8a952d668ca66e747e28bef1", "author": {"user": null}, "url": "https://github.com/jenkinsci/jenkins/commit/e31fdc3483e51b8f8a952d668ca66e747e28bef1", "committedDate": "2020-07-03T03:40:39Z", "message": "escape special character | adding test case"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQzMDM4NDQ3", "url": "https://github.com/jenkinsci/jenkins/pull/4758#pullrequestreview-443038447", "createdAt": "2020-07-06T12:41:01Z", "commit": {"oid": "e31fdc3483e51b8f8a952d668ca66e747e28bef1"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQzMDQwNzUx", "url": "https://github.com/jenkinsci/jenkins/pull/4758#pullrequestreview-443040751", "createdAt": "2020-07-06T12:44:24Z", "commit": {"oid": "e31fdc3483e51b8f8a952d668ca66e747e28bef1"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQzMDc0NzMy", "url": "https://github.com/jenkinsci/jenkins/pull/4758#pullrequestreview-443074732", "createdAt": "2020-07-06T13:28:28Z", "commit": {"oid": "e31fdc3483e51b8f8a952d668ca66e747e28bef1"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxMzoyODoyOFrOGtXQWQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxMzozNDo0NlrOGtXfWg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDIyMDEyMQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\tassertThat(String.valueOf(rsp.getAnchorByText(\"d0wnstr3'am\").click().getWebResponse().getStatusCode()), containsString(\"200\"));\n          \n          \n            \n                    assertThat(String.valueOf(rsp.getAnchorByText(\"d0wnstr3'am\").click().getWebResponse().getStatusCode()), containsString(\"200\"));", "url": "https://github.com/jenkinsci/jenkins/pull/4758#discussion_r450220121", "createdAt": "2020-07-06T13:28:28Z", "author": {"login": "jglick"}, "path": "test/src/test/java/hudson/console/HyperlinkNoteTest.java", "diffHunk": "@@ -72,7 +78,22 @@ public void textWithNewlinesModelHyperlinkNote() throws Exception {\n                 containsString(new ModelHyperlinkNote(\"\", 0).extraAttributes()),\n                 containsString(\">\" + noteTextSanitized + \"</a>\")));\n     }\n+    \n+    \n+    @Test\n+    public void textWithSingleQuote() throws Exception {\n+        FreeStyleProject upstream = r.createFreeStyleProject(\"upstream\");\n+        r.createFreeStyleProject(\"d0wnstr3'am\");\n+        upstream.getPublishersList().add(new BuildTrigger(\"d0wnstr3'am\", Result.SUCCESS));\n+        r.jenkins.rebuildDependencyGraph();\n+        FreeStyleBuild b = r.buildAndAssertSuccess(upstream);\n+        r.waitUntilNoActivity();\n+        HtmlPage rsp = r.createWebClient().goTo(b.getUrl()+\"console\");\n+        assertThat(rsp.querySelector(\".console-output\").asText(), containsString(\"Triggering a new build of\"));\n+\t\tassertThat(String.valueOf(rsp.getAnchorByText(\"d0wnstr3'am\").click().getWebResponse().getStatusCode()), containsString(\"200\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e31fdc3483e51b8f8a952d668ca66e747e28bef1"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDIyMzk2Mg==", "bodyText": "Note that this code is using ' where most generated markup uses \", though it should not make any difference (Util.escape will escape both if they happen to be present in the URL).", "url": "https://github.com/jenkinsci/jenkins/pull/4758#discussion_r450223962", "createdAt": "2020-07-06T13:34:46Z", "author": {"login": "jglick"}, "path": "core/src/main/java/hudson/console/HyperlinkNote.java", "diffHunk": "@@ -69,7 +70,7 @@ public ConsoleAnnotator annotate(Object context, MarkupText text, int charPos) {\n                 url = Jenkins.get().getRootUrl()+url.substring(1);\n             }\n         }\n-        text.addMarkup(charPos, charPos + length, \"<a href='\" + url + \"'\"+extraAttributes()+\">\", \"</a>\");\n+        text.addMarkup(charPos, charPos + length, \"<a href='\" + Util.escape(url) + \"'\"+extraAttributes()+\">\", \"</a>\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e31fdc3483e51b8f8a952d668ca66e747e28bef1"}, "originalPosition": 13}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fef4ae60c58af98ccf4e74fc2d31928ffdb27b11", "author": {"user": {"login": "Absh-Day", "name": "Ab"}}, "url": "https://github.com/jenkinsci/jenkins/commit/fef4ae60c58af98ccf4e74fc2d31928ffdb27b11", "committedDate": "2020-07-06T14:51:27Z", "message": "Update test/src/test/java/hudson/console/HyperlinkNoteTest.java\n\nCo-authored-by: Jesse Glick <jglick@cloudbees.com>"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2315, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}