{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkwNDk1ODQy", "number": 4944, "reviewThreads": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQxOTo1MDoyM1rOEl0Ndg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yNlQwODozMzoyNlrOFS-l2A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4MDg4MTgyOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/hudson/tools/ToolInstallation.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQxOTo1MDoyM1rOHVgDmw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQyMDo0NzoyOFrOHVh2MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjMwNzM1NQ==", "bodyText": "This is a problem. DescribableList is not Serializable so removing transient will prevent this class from being serialized over Remoting. Yet keeping transient will prevent tool installations from saving their properties in XML. I have not found any way to get the effect of XStreamSerializable without patching PureJavaReflectionProvider.", "url": "https://github.com/jenkinsci/jenkins/pull/4944#discussion_r492307355", "createdAt": "2020-09-21T19:50:23Z", "author": {"login": "jglick"}, "path": "core/src/main/java/hudson/tools/ToolInstallation.java", "diffHunk": "@@ -82,8 +81,7 @@\n     /**\n      * {@link ToolProperty}s that are associated with this tool.\n      */\n-    @XStreamSerializable\n-    private transient /*almost final*/ DescribableList<ToolProperty<?>,ToolPropertyDescriptor> properties\n+    private /*almost final*/ DescribableList<ToolProperty<?>,ToolPropertyDescriptor> properties", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f5edc8ffd690e95335f6a750a3f76493d78d1020"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjMyMjE2MA==", "bodyText": "(I am not sure why ToolInstallation was ever made Serializable to begin with. The normal usage is to have it define some PATH entry on the controller side, which does not require the ToolInstallation itself to ever be sent to the agent.)", "url": "https://github.com/jenkinsci/jenkins/pull/4944#discussion_r492322160", "createdAt": "2020-09-21T20:19:03Z", "author": {"login": "jglick"}, "path": "core/src/main/java/hudson/tools/ToolInstallation.java", "diffHunk": "@@ -82,8 +81,7 @@\n     /**\n      * {@link ToolProperty}s that are associated with this tool.\n      */\n-    @XStreamSerializable\n-    private transient /*almost final*/ DescribableList<ToolProperty<?>,ToolPropertyDescriptor> properties\n+    private /*almost final*/ DescribableList<ToolProperty<?>,ToolPropertyDescriptor> properties", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjMwNzM1NQ=="}, "originalCommit": {"oid": "f5edc8ffd690e95335f6a750a3f76493d78d1020"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjMzNjY4OA==", "bodyText": "Also the current annotation was explicitly rejected upstream: x-stream/xstream#70 (comment)", "url": "https://github.com/jenkinsci/jenkins/pull/4944#discussion_r492336688", "createdAt": "2020-09-21T20:47:28Z", "author": {"login": "jglick"}, "path": "core/src/main/java/hudson/tools/ToolInstallation.java", "diffHunk": "@@ -82,8 +81,7 @@\n     /**\n      * {@link ToolProperty}s that are associated with this tool.\n      */\n-    @XStreamSerializable\n-    private transient /*almost final*/ DescribableList<ToolProperty<?>,ToolPropertyDescriptor> properties\n+    private /*almost final*/ DescribableList<ToolProperty<?>,ToolPropertyDescriptor> properties", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjMwNzM1NQ=="}, "originalCommit": {"oid": "f5edc8ffd690e95335f6a750a3f76493d78d1020"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwNjExNTY4OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/hudson/tools/ToolInstallation.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxOToxMDowMFrOHZL_rQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxOToyNTozN1rOHZMezA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjE3Mjk3Mw==", "bodyText": "Nice!", "url": "https://github.com/jenkinsci/jenkins/pull/4944#discussion_r496172973", "createdAt": "2020-09-28T19:10:00Z", "author": {"login": "daniel-beck"}, "path": "core/src/main/java/hudson/tools/ToolInstallation.java", "diffHunk": "@@ -210,13 +221,32 @@ protected String translateFor(Node node, TaskListener log) throws IOException, I\n      * Invoked by XStream when this object is read into memory.\n      */\n     protected Object readResolve() {\n-        if(properties==null)\n-            properties = new DescribableList<>(Saveable.NOOP);\n-        for (ToolProperty<?> p : properties)\n-            _setTool(p, this);\n+        if (properties != null) {\n+            for (ToolProperty<?> p : properties) {\n+                _setTool(p, this);\n+            }\n+        }\n         return this;\n     }\n \n+    protected Object writeReplace() throws Exception {\n+        if (Channel.current() == null) { // XStream", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cdc14144da8027d265676c94d34abda767f4d7cb"}, "originalPosition": 77}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjE4MDk0MA==", "bodyText": "Well, not nice, but seems to work well enough. I am trying to fix popular plugins to not need this hack.", "url": "https://github.com/jenkinsci/jenkins/pull/4944#discussion_r496180940", "createdAt": "2020-09-28T19:25:37Z", "author": {"login": "jglick"}, "path": "core/src/main/java/hudson/tools/ToolInstallation.java", "diffHunk": "@@ -210,13 +221,32 @@ protected String translateFor(Node node, TaskListener log) throws IOException, I\n      * Invoked by XStream when this object is read into memory.\n      */\n     protected Object readResolve() {\n-        if(properties==null)\n-            properties = new DescribableList<>(Saveable.NOOP);\n-        for (ToolProperty<?> p : properties)\n-            _setTool(p, this);\n+        if (properties != null) {\n+            for (ToolProperty<?> p : properties) {\n+                _setTool(p, this);\n+            }\n+        }\n         return this;\n     }\n \n+    protected Object writeReplace() throws Exception {\n+        if (Channel.current() == null) { // XStream", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjE3Mjk3Mw=="}, "originalCommit": {"oid": "cdc14144da8027d265676c94d34abda767f4d7cb"}, "originalPosition": 77}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4NTM5NjU1OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/hudson/util/XStream2.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxMzo0MDowN1rOHk9Hjg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxNzoxNjowMFrOHlIu4Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODUxMjE0Mg==", "bodyText": "May need to be adjusted for XStream 1.5.x: x-stream/xstream#207", "url": "https://github.com/jenkinsci/jenkins/pull/4944#discussion_r508512142", "createdAt": "2020-10-20T13:40:07Z", "author": {"login": "jglick"}, "path": "core/src/main/java/hudson/util/XStream2.java", "diffHunk": "@@ -257,8 +258,9 @@ private void init() {\n         registerConverter(new AssociatedConverterImpl(this), -10);\n \n         registerConverter(new BlacklistedTypesConverter(), PRIORITY_VERY_HIGH); // SECURITY-247 defense\n+        addPermission(AnyTypePermission.ANY); // covered by JEP-200, avoid securityWarningGiven", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7b0270106a946a32cca56d26b30f46fd69d24808"}, "originalPosition": 66}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODcwMDA0MQ==", "bodyText": "No. This is the same for XStream 1.4.x and 1.5.x. With this line you overwrite any default initialization and you are initializing the XStream Security Framework with a blacklist without any entries i.e. you allow anything. Your BlacklistedTypesConverter is now responsibly to cover any of the CVEs.", "url": "https://github.com/jenkinsci/jenkins/pull/4944#discussion_r508700041", "createdAt": "2020-10-20T17:12:10Z", "author": {"login": "joehni"}, "path": "core/src/main/java/hudson/util/XStream2.java", "diffHunk": "@@ -257,8 +258,9 @@ private void init() {\n         registerConverter(new AssociatedConverterImpl(this), -10);\n \n         registerConverter(new BlacklistedTypesConverter(), PRIORITY_VERY_HIGH); // SECURITY-247 defense\n+        addPermission(AnyTypePermission.ANY); // covered by JEP-200, avoid securityWarningGiven", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODUxMjE0Mg=="}, "originalCommit": {"oid": "7b0270106a946a32cca56d26b30f46fd69d24808"}, "originalPosition": 66}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODcwMjQzMw==", "bodyText": "In our case that is fine since we are actually using a whitelist, despite the name, so this line merely ensures that the current behavior is maintained and that XStream does not print a warning to stderr. https://jenkins.io/jep/200 FTR", "url": "https://github.com/jenkinsci/jenkins/pull/4944#discussion_r508702433", "createdAt": "2020-10-20T17:16:00Z", "author": {"login": "jglick"}, "path": "core/src/main/java/hudson/util/XStream2.java", "diffHunk": "@@ -257,8 +258,9 @@ private void init() {\n         registerConverter(new AssociatedConverterImpl(this), -10);\n \n         registerConverter(new BlacklistedTypesConverter(), PRIORITY_VERY_HIGH); // SECURITY-247 defense\n+        addPermission(AnyTypePermission.ANY); // covered by JEP-200, avoid securityWarningGiven", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODUxMjE0Mg=="}, "originalCommit": {"oid": "7b0270106a946a32cca56d26b30f46fd69d24808"}, "originalPosition": 66}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE5NzY1Nzg4OnYy", "diffSide": "RIGHT", "path": "bom/pom.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQyMTozMjowMlrOHm0oTg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQyMTozMjowMlrOHm0oTg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDQ3MDIyMg==", "bodyText": "If merged, we should also archive both https://github.com/jenkinsci/xstream and https://github.com/jenkinsci/xstream-fork.", "url": "https://github.com/jenkinsci/jenkins/pull/4944#discussion_r510470222", "createdAt": "2020-10-22T21:32:02Z", "author": {"login": "jglick"}, "path": "bom/pom.xml", "diffHunk": "@@ -326,9 +326,9 @@ THE SOFTWARE.\n \n       <!--XStream-->\n       <dependency>\n-        <groupId>org.jvnet.hudson</groupId>\n+        <groupId>com.thoughtworks.xstream</groupId>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e2a10f190f6ce6f9ece9a2c80dc0f8c94977d265"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE5NzY1OTM4OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/hudson/diagnosis/OldDataMonitor.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQyMTozMjoyOFrOHm0pJw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQyMTozMjoyOFrOHm0pJw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDQ3MDQzOQ==", "bodyText": "Very handy for diagnosing test failures related to XStream!", "url": "https://github.com/jenkinsci/jenkins/pull/4944#discussion_r510470439", "createdAt": "2020-10-22T21:32:28Z", "author": {"login": "jglick"}, "path": "core/src/main/java/hudson/diagnosis/OldDataMonitor.java", "diffHunk": "@@ -207,6 +208,9 @@ public static void report(Saveable obj, Collection<Throwable> errors) {\n             if (e instanceof ReportException) {\n                 report(obj, ((ReportException)e).version);\n             } else {\n+                if (Main.isUnitTest) {\n+                    LOGGER.log(Level.INFO, \"Trouble loading \" + obj, e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e2a10f190f6ce6f9ece9a2c80dc0f8c94977d265"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE5NzY2NTExOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/hudson/util/PersistedList.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQyMTozNDoxM1rOHm0sow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQyMTozNDoxM1rOHm0sow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDQ3MTMzMQ==", "bodyText": "Useful for PCT, until we can get most plugins moved onto new POMs.", "url": "https://github.com/jenkinsci/jenkins/pull/4944#discussion_r510471331", "createdAt": "2020-10-22T21:34:13Z", "author": {"login": "jglick"}, "path": "core/src/main/java/hudson/util/PersistedList.java", "diffHunk": "@@ -170,7 +178,30 @@ public void clear() {\n      * Called when a list is mutated.\n      */\n     protected void onModified() throws IOException {\n-        owner.save();\n+        try {\n+            owner.save();\n+        } catch (IOException x) {\n+            Optional<T> ignored = stream().filter(PersistedList::ignoreSerializationErrors).findAny();\n+            if (ignored.isPresent()) {\n+                LOGGER.log(Level.WARNING, \"Ignoring serialization errors in \" + ignored.get() + \"; update your parent POM to 4.8 or newer\", x);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e2a10f190f6ce6f9ece9a2c80dc0f8c94977d265"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE5NzY3MjYyOnYy", "diffSide": "RIGHT", "path": "core/src/test/java/hudson/util/XStream2Test.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQyMTozNjozMFrOHm0xDQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQyMTozNjozMFrOHm0xDQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDQ3MjQ2MQ==", "bodyText": "Just demonstrating what would happen with plugins that used annotations without a processAnnotations call.", "url": "https://github.com/jenkinsci/jenkins/pull/4944#discussion_r510472461", "createdAt": "2020-10-22T21:36:30Z", "author": {"login": "jglick"}, "path": "core/src/test/java/hudson/util/XStream2Test.java", "diffHunk": "@@ -530,9 +533,42 @@ public void setListDefaultNull(List<String> listDefaultNull) {\n     public void crashXstream() throws Exception {\n         try {\n             new XStream2().fromXML(\"<void/>\");\n-            fail(\"expected to throw ForbiddenClassException, but why are we still alive?\");\n-        } catch (ForbiddenClassException ex) {\n+            fail(\"expected to throw ConversionException, but why are we still alive?\");\n+        } catch (XStreamException ex) {\n             // pass\n         }\n     }\n+\n+    @Test\n+    public void annotations() throws Exception {\n+        assertEquals(\"not registered, so sorry\", \"<hudson.util.XStream2Test_-C1/>\", Jenkins.XSTREAM2.toXML(new C1()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e2a10f190f6ce6f9ece9a2c80dc0f8c94977d265"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE5NzY3Mzg1OnYy", "diffSide": "RIGHT", "path": "pom.xml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQyMTozNjo1MlrOHm0xyg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQyMTozNjo1MlrOHm0xyg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDQ3MjY1MA==", "bodyText": "@daniel-beck please release me!", "url": "https://github.com/jenkinsci/jenkins/pull/4944#discussion_r510472650", "createdAt": "2020-10-22T21:36:52Z", "author": {"login": "jglick"}, "path": "pom.xml", "diffHunk": "@@ -90,7 +90,7 @@ THE SOFTWARE.\n     <project.patchManagement.url>https://api.github.com</project.patchManagement.url>\n     <patch.tracker.serverId>jenkins-jira</patch.tracker.serverId>\n \n-    <matrix-auth.version>2.6.2</matrix-auth.version>\n+    <matrix-auth.version>2.6.4-rc330.062fa8d38aa3</matrix-auth.version> <!-- TODO https://github.com/jenkinsci/matrix-auth-plugin/pull/89 -->", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e2a10f190f6ce6f9ece9a2c80dc0f8c94977d265"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE5NzY3ODAxOnYy", "diffSide": "RIGHT", "path": "test/src/test/java/hudson/model/ProjectTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQyMTozODozM1rOHm00gQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQyMTozODozM1rOHm00gQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDQ3MzM0NQ==", "bodyText": "Needed for JTH upgrade, unrelated to XStream.", "url": "https://github.com/jenkinsci/jenkins/pull/4944#discussion_r510473345", "createdAt": "2020-10-22T21:38:33Z", "author": {"login": "jglick"}, "path": "test/src/test/java/hudson/model/ProjectTest.java", "diffHunk": "@@ -256,7 +256,7 @@ public void testGetScmCheckoutRetryCount() throws Exception{\n         HtmlForm form = j.createWebClient().goTo(p.getUrl() + \"/configure\").getFormByName(\"config\");\n         ((HtmlElement)form.getByXPath(\"//div[@class='advancedLink']//button\").get(0)).click();\n         // required due to the new default behavior of click\n-        form.getInputByName(\"hasCustomScmCheckoutRetryCount\").click(new Event(), true);\n+        form.getInputByName(\"hasCustomScmCheckoutRetryCount\").click(new Event(), false, false, false, true);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e2a10f190f6ce6f9ece9a2c80dc0f8c94977d265"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE5NzY3OTk5OnYy", "diffSide": "RIGHT", "path": "test/src/test/java/hudson/util/XStream2AnnotationTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQyMTozOToxNVrOHm01rw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQyMTozOToxNVrOHm01rw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDQ3MzY0Nw==", "bodyText": "More realistic demonstration of compatibility impact for plugins of turning off autodetection.", "url": "https://github.com/jenkinsci/jenkins/pull/4944#discussion_r510473647", "createdAt": "2020-10-22T21:39:15Z", "author": {"login": "jglick"}, "path": "test/src/test/java/hudson/util/XStream2AnnotationTest.java", "diffHunk": "@@ -0,0 +1,122 @@\n+/*\n+ * The MIT License\n+ *\n+ * Copyright 2020 CloudBees, Inc.\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included in\n+ * all copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+ * THE SOFTWARE.\n+ */\n+\n+package hudson.util;\n+\n+import com.thoughtworks.xstream.annotations.XStreamAlias;\n+import hudson.ExtensionList;\n+import java.io.IOException;\n+import java.nio.charset.StandardCharsets;\n+import jenkins.model.GlobalConfiguration;\n+import org.apache.commons.io.FileUtils;\n+import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.hamcrest.Matchers.is;\n+import org.junit.Test;\n+import org.junit.Rule;\n+import org.jvnet.hudson.test.JenkinsSessionRule;\n+import org.jvnet.hudson.test.TestExtension;\n+\n+public class XStream2AnnotationTest {\n+\n+    @Rule\n+    public JenkinsSessionRule rr = new JenkinsSessionRule();\n+\n+    @Test\n+    public void xStreamAlias() throws Throwable {\n+        rr.then(r -> {\n+            AnnotatedProcessed annotatedProcessed = AnnotatedProcessed.get();\n+            annotatedProcessed.x = 1;\n+            annotatedProcessed.save();\n+            assertThat(annotatedProcessed.xml(), is(\"<myconf-annotated-processed><x>1</x></myconf-annotated-processed>\"));\n+            AnnotatedUnprocessed annotatedUnprocessed = AnnotatedUnprocessed.get();\n+            annotatedUnprocessed.x = 2;\n+            annotatedUnprocessed.save();\n+            assertThat(annotatedUnprocessed.xml(), is(\"<hudson.util.XStream2AnnotationTest_-AnnotatedUnprocessed><x>2</x></hudson.util.XStream2AnnotationTest_-AnnotatedUnprocessed>\"));\n+            Programmatic programmatic = Programmatic.get();\n+            programmatic.x = 3;\n+            programmatic.save();\n+            assertThat(programmatic.xml(), is(\"<myconf-programmatic><x>3</x></myconf-programmatic>\"));\n+        });\n+        rr.then(r -> {\n+            assertThat(AnnotatedProcessed.get().x, is(1));\n+            assertThat(AnnotatedUnprocessed.get().x, is(2));\n+            assertThat(Programmatic.get().x, is(3));\n+            // Typical content saved by Jenkins session when annotation autodetection was still enabled:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e2a10f190f6ce6f9ece9a2c80dc0f8c94977d265"}, "originalPosition": 65}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI0MDE0MzkyOnYy", "diffSide": "RIGHT", "path": "pom.xml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QyMjoyOToyOFrOHtCwTQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QyMzowNzoyMFrOHtDqdg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjk5MzEwMQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                <matrix-auth.version>2.6.4-rc330.062fa8d38aa3</matrix-auth.version> <!-- TODO https://github.com/jenkinsci/matrix-auth-plugin/pull/89 -->\n          \n          \n            \n                <matrix-auth.version>2.6.4</matrix-auth.version>", "url": "https://github.com/jenkinsci/jenkins/pull/4944#discussion_r516993101", "createdAt": "2020-11-03T22:29:28Z", "author": {"login": "basil"}, "path": "pom.xml", "diffHunk": "@@ -90,7 +90,7 @@ THE SOFTWARE.\n     <project.patchManagement.url>https://api.github.com</project.patchManagement.url>\n     <patch.tracker.serverId>jenkins-jira</patch.tracker.serverId>\n \n-    <matrix-auth.version>2.6.2</matrix-auth.version>\n+    <matrix-auth.version>2.6.4-rc330.062fa8d38aa3</matrix-auth.version> <!-- TODO https://github.com/jenkinsci/matrix-auth-plugin/pull/89 -->", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "af44d41866631e25ccaebb69e8afc9b1cb47c679"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzAwNzk5MA==", "bodyText": "Oh right, forgot about that! Thanks.", "url": "https://github.com/jenkinsci/jenkins/pull/4944#discussion_r517007990", "createdAt": "2020-11-03T23:07:20Z", "author": {"login": "jglick"}, "path": "pom.xml", "diffHunk": "@@ -90,7 +90,7 @@ THE SOFTWARE.\n     <project.patchManagement.url>https://api.github.com</project.patchManagement.url>\n     <patch.tracker.serverId>jenkins-jira</patch.tracker.serverId>\n \n-    <matrix-auth.version>2.6.2</matrix-auth.version>\n+    <matrix-auth.version>2.6.4-rc330.062fa8d38aa3</matrix-auth.version> <!-- TODO https://github.com/jenkinsci/matrix-auth-plugin/pull/89 -->", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjk5MzEwMQ=="}, "originalCommit": {"oid": "af44d41866631e25ccaebb69e8afc9b1cb47c679"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzU1NDQ0MTg0OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/hudson/model/ListView.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yNlQwODozMzoyNlrOIaL9Ag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yNlQxNDo0MDoxOFrOIaaGUg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NDMyOTczMA==", "bodyText": "Does this imply that all plugins must make the same change?", "url": "https://github.com/jenkinsci/jenkins/pull/4944#discussion_r564329730", "createdAt": "2021-01-26T08:33:26Z", "author": {"login": "rsandell"}, "path": "core/src/main/java/hudson/model/ListView.java", "diffHunk": "@@ -132,7 +132,7 @@ public void setJobFilters(List<ViewJobFilter> jobFilters) throws IOException {\n         this.jobFilters.replaceBy(jobFilters);\n     }\n \n-    private Object readResolve() {\n+    protected Object readResolve() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "44a9b59b645b7c051ea35e80db530fa31ffb1638"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NDM0NDA4Nw==", "bodyText": "If the class is extended and the parent read resolve needs to be called", "url": "https://github.com/jenkinsci/jenkins/pull/4944#discussion_r564344087", "createdAt": "2021-01-26T08:56:25Z", "author": {"login": "timja"}, "path": "core/src/main/java/hudson/model/ListView.java", "diffHunk": "@@ -132,7 +132,7 @@ public void setJobFilters(List<ViewJobFilter> jobFilters) throws IOException {\n         this.jobFilters.replaceBy(jobFilters);\n     }\n \n-    private Object readResolve() {\n+    protected Object readResolve() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NDMyOTczMA=="}, "originalCommit": {"oid": "44a9b59b645b7c051ea35e80db530fa31ffb1638"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NDM2MzQ3MQ==", "bodyText": "https://github.com/jenkinsci/jep/tree/master/jep/228#inherited-private-serialization-methods explains this", "url": "https://github.com/jenkinsci/jenkins/pull/4944#discussion_r564363471", "createdAt": "2021-01-26T09:26:04Z", "author": {"login": "daniel-beck"}, "path": "core/src/main/java/hudson/model/ListView.java", "diffHunk": "@@ -132,7 +132,7 @@ public void setJobFilters(List<ViewJobFilter> jobFilters) throws IOException {\n         this.jobFilters.replaceBy(jobFilters);\n     }\n \n-    private Object readResolve() {\n+    protected Object readResolve() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NDMyOTczMA=="}, "originalCommit": {"oid": "44a9b59b645b7c051ea35e80db530fa31ffb1638"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NDU2MTQ5MA==", "bodyText": "I attempted to search for extant plugins using an incorrect private override, but I might have missed some of course.", "url": "https://github.com/jenkinsci/jenkins/pull/4944#discussion_r564561490", "createdAt": "2021-01-26T14:40:18Z", "author": {"login": "jglick"}, "path": "core/src/main/java/hudson/model/ListView.java", "diffHunk": "@@ -132,7 +132,7 @@ public void setJobFilters(List<ViewJobFilter> jobFilters) throws IOException {\n         this.jobFilters.replaceBy(jobFilters);\n     }\n \n-    private Object readResolve() {\n+    protected Object readResolve() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NDMyOTczMA=="}, "originalCommit": {"oid": "44a9b59b645b7c051ea35e80db530fa31ffb1638"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 190, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}