{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU2OTg5MzUx", "number": 4877, "title": "Update at-since Javadoc", "bodyText": "Proposed changelog entries\n(too minor)\n\nProposed upgrade guidelines\nN/A\nSubmitter checklist\n\n[n/a] (If applicable) Jira issue is well described\n[n/a] Changelog entries and upgrade guidelines are appropriate for the audience affected by the change (users or developer, depending on the change). Examples\n\nFill-in the Proposed changelog entries section only if there are breaking changes or other changes which may require extra steps from users during the upgrade\n\n\n[n/a] Appropriate autotests or explanation to why this change has no tests\n[n/a] For dependency updates: links to external changelogs and, if possible, full diffs\n\n\nDesired reviewers\n@mention\n\nMaintainer checklist\nBefore the changes are marked as ready-for-merge:\n\n There are at least 2 approvals for the pull request and no outstanding requests for change\n Conversations in the pull request are over OR it is explicit that a reviewer does not block the change\n Changelog entries in the PR title and/or Proposed changelog entries are correct\n Proper changelog labels are set so that the changelog can be generated automatically\n If the change needs additional upgrade steps from users, upgrade-guide-needed label is set and there is a Proposed upgrade guidelines section in the PR title. (example)\n If it would make sense to backport the change to LTS, a Jira issue must exist, be a Bug or Improvement, and be labeled as lts-candidate to be considered (see query).", "createdAt": "2020-07-27T08:12:40Z", "url": "https://github.com/jenkinsci/jenkins/pull/4877", "merged": true, "mergeCommit": {"oid": "c632f42f07f42dbdd4eb0bea13c8004c7f376833"}, "closed": true, "closedAt": "2020-08-01T07:33:49Z", "author": {"login": "daniel-beck"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc49RGuAH2gAyNDU2OTg5MzUxOjMwNGFkNjI0MjY5YTMyNDYzMTU4YjZlZDE3NzQwZTJmMzI1ZDlkNDQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc6GsYoAFqTQ1ODc3NjUzNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "304ad624269a32463158b6ed17740e2f325d9d44", "author": {"user": {"login": "daniel-beck", "name": "Daniel Beck"}}, "url": "https://github.com/jenkinsci/jenkins/commit/304ad624269a32463158b6ed17740e2f325d9d44", "committedDate": "2020-07-27T08:08:44Z", "message": "Update at-since Javadoc"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU1NTY1NTI1", "url": "https://github.com/jenkinsci/jenkins/pull/4877#pullrequestreview-455565525", "createdAt": "2020-07-27T08:12:55Z", "commit": {"oid": "304ad624269a32463158b6ed17740e2f325d9d44"}, "state": "COMMENTED", "comments": {"totalCount": 38, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QwODoxMjo1NVrOG3YDkA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QwODoyNzo0NVrOG3YkOg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDcxODk5Mg==", "bodyText": "#4824", "url": "https://github.com/jenkinsci/jenkins/pull/4877#discussion_r460718992", "createdAt": "2020-07-27T08:12:55Z", "author": {"login": "daniel-beck"}, "path": "core/src/main/java/hudson/FilePath.java", "diffHunk": "@@ -1262,7 +1262,7 @@ public Boolean invoke(File f, VirtualChannel channel) throws IOException, Interr\n     /**\n      * Deletes all suffixes recursively.\n      * @throws IOException if it exists but could not be successfully deleted\n-     * @since TODO\n+     * @since 2.244", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "304ad624269a32463158b6ed17740e2f325d9d44"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDcxOTE2Ng==", "bodyText": "#4824", "url": "https://github.com/jenkinsci/jenkins/pull/4877#discussion_r460719166", "createdAt": "2020-07-27T08:13:15Z", "author": {"login": "daniel-beck"}, "path": "core/src/main/java/hudson/slaves/WorkspaceList.java", "diffHunk": "@@ -312,7 +312,7 @@ public static FilePath tempDir(FilePath ws) {\n \n     /**\n      * The token that combines the project name and unique number to create unique workspace directory.\n-     * @since TODO\n+     * @since 2.244", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "304ad624269a32463158b6ed17740e2f325d9d44"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDcxOTY3MQ==", "bodyText": "#4531", "url": "https://github.com/jenkinsci/jenkins/pull/4877#discussion_r460719671", "createdAt": "2020-07-27T08:14:11Z", "author": {"login": "daniel-beck"}, "path": "core/src/main/java/hudson/Functions.java", "diffHunk": "@@ -1161,7 +1161,7 @@ public static String getFooterURL() {\n     /**\n      * Checks if the current security principal has one of the supplied permissions.\n      *\n-     * @since TODO\n+     * @since 2.238", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "304ad624269a32463158b6ed17740e2f325d9d44"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDcxOTY5OQ==", "bodyText": "#4531", "url": "https://github.com/jenkinsci/jenkins/pull/4877#discussion_r460719699", "createdAt": "2020-07-27T08:14:15Z", "author": {"login": "daniel-beck"}, "path": "core/src/main/java/hudson/Functions.java", "diffHunk": "@@ -1176,7 +1176,7 @@ public static boolean hasAnyPermission(AccessControlled ac, Permission[] permiss\n      * degrades gracefully if \"it\" is not an {@link AccessControlled} object.\n      * Otherwise it will perform no check and that problem is hard to notice.\n      *\n-     * @since TODO\n+     * @since 2.238", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "304ad624269a32463158b6ed17740e2f325d9d44"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDcxOTkxMA==", "bodyText": "#4683", "url": "https://github.com/jenkinsci/jenkins/pull/4877#discussion_r460719910", "createdAt": "2020-07-27T08:14:44Z", "author": {"login": "daniel-beck"}, "path": "core/src/main/java/hudson/Launcher.java", "diffHunk": "@@ -116,7 +116,7 @@ protected Launcher(@NonNull Launcher launcher) {\n      * @param run The run that requested the command interpretation, could be <code>null</code> if outside of a run context.\n      * @param builder The builder that asked to run this command\n      *\n-     * @since TODO\n+     * @since 2.246", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "304ad624269a32463158b6ed17740e2f325d9d44"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDcxOTk0Mg==", "bodyText": "#4683", "url": "https://github.com/jenkinsci/jenkins/pull/4877#discussion_r460719942", "createdAt": "2020-07-27T08:14:47Z", "author": {"login": "daniel-beck"}, "path": "core/src/main/java/hudson/Launcher.java", "diffHunk": "@@ -483,7 +483,7 @@ public ProcStarter writeStdin() {\n         /**\n          * Specify the build step that want to run the command to enable the environment filters\n          * @return {@code this}\n-         * @since TODO\n+         * @since 2.246", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "304ad624269a32463158b6ed17740e2f325d9d44"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDcxOTk3Mw==", "bodyText": "#4683", "url": "https://github.com/jenkinsci/jenkins/pull/4877#discussion_r460719973", "createdAt": "2020-07-27T08:14:51Z", "author": {"login": "daniel-beck"}, "path": "core/src/main/java/hudson/Launcher.java", "diffHunk": "@@ -493,7 +493,7 @@ public ProcStarter buildStep(EnvVarsFilterableBuilder envVarsFilterableBuilder){\n \n         /**\n          * @return if set, returns the build step that wants to run the command\n-         * @since TODO\n+         * @since 2.246", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "304ad624269a32463158b6ed17740e2f325d9d44"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDcyMDIzMQ==", "bodyText": "#4683", "url": "https://github.com/jenkinsci/jenkins/pull/4877#discussion_r460720231", "createdAt": "2020-07-27T08:15:16Z", "author": {"login": "daniel-beck"}, "path": "core/src/main/java/jenkins/tasks/filters/EnvVarsFilterGlobalRule.java", "diffHunk": "@@ -42,7 +42,7 @@\n  *\n  * The local rules are applied before the global ones.\n  *\n- * @since TODO\n+ * @since 2.246", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "304ad624269a32463158b6ed17740e2f325d9d44"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDcyMDI2MA==", "bodyText": "#4683", "url": "https://github.com/jenkinsci/jenkins/pull/4877#discussion_r460720260", "createdAt": "2020-07-27T08:15:19Z", "author": {"login": "daniel-beck"}, "path": "core/src/main/java/jenkins/tasks/filters/EnvVarsFilterLocalRule.java", "diffHunk": "@@ -37,7 +37,7 @@\n  *\n  * The local rules are applied before the global ones.\n  *\n- * @since TODO\n+ * @since 2.246", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "304ad624269a32463158b6ed17740e2f325d9d44"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDcyMDMxNQ==", "bodyText": "#4683", "url": "https://github.com/jenkinsci/jenkins/pull/4877#discussion_r460720315", "createdAt": "2020-07-27T08:15:24Z", "author": {"login": "daniel-beck"}, "path": "core/src/main/java/jenkins/tasks/filters/EnvVarsFilterLocalRuleDescriptor.java", "diffHunk": "@@ -38,7 +38,7 @@\n  * if the rule is applicable to a given builder and then applied every time. <p>\n  * For global rule it's the inverse, the rule itself determines when it's applicable.\n  *\n- * @since TODO\n+ * @since 2.246", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "304ad624269a32463158b6ed17740e2f325d9d44"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDcyMDM0OA==", "bodyText": "#4683", "url": "https://github.com/jenkinsci/jenkins/pull/4877#discussion_r460720348", "createdAt": "2020-07-27T08:15:27Z", "author": {"login": "daniel-beck"}, "path": "core/src/main/java/jenkins/tasks/filters/EnvVarsFilterRuleContext.java", "diffHunk": "@@ -32,7 +32,7 @@\n /**\n  * Information that is used for the environment filtering process.\n  *\n- * @since TODO\n+ * @since 2.246", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "304ad624269a32463158b6ed17740e2f325d9d44"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDcyMDM3OQ==", "bodyText": "#4683", "url": "https://github.com/jenkinsci/jenkins/pull/4877#discussion_r460720379", "createdAt": "2020-07-27T08:15:32Z", "author": {"login": "daniel-beck"}, "path": "core/src/main/java/jenkins/tasks/filters/EnvVarsFilterRuleWrapper.java", "diffHunk": "@@ -40,7 +40,7 @@\n /**\n  * Helper class that provide the list of rules (local + global) for a given builder.\n  *\n- * @since TODO\n+ * @since 2.246", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "304ad624269a32463158b6ed17740e2f325d9d44"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDcyMDQxOA==", "bodyText": "#4683", "url": "https://github.com/jenkinsci/jenkins/pull/4877#discussion_r460720418", "createdAt": "2020-07-27T08:15:36Z", "author": {"login": "daniel-beck"}, "path": "core/src/main/java/jenkins/tasks/filters/EnvVarsFilterableBuilder.java", "diffHunk": "@@ -33,7 +33,7 @@\n /**\n  * Builder step that wants to integrate local environment filter rules should implement this interface\n  *\n- * @since TODO\n+ * @since 2.246", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "304ad624269a32463158b6ed17740e2f325d9d44"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDcyMDQ2NA==", "bodyText": "#4683", "url": "https://github.com/jenkinsci/jenkins/pull/4877#discussion_r460720464", "createdAt": "2020-07-27T08:15:42Z", "author": {"login": "daniel-beck"}, "path": "core/src/main/java/jenkins/tasks/filters/impl/RetainVariablesLocalRule.java", "diffHunk": "@@ -53,7 +53,7 @@\n /**\n  * Local rule that removes all the non-retained variables for that step.\n  *\n- * @since TODO\n+ * @since 2.246", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "304ad624269a32463158b6ed17740e2f325d9d44"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDcyMDYxOA==", "bodyText": "#4683", "url": "https://github.com/jenkinsci/jenkins/pull/4877#discussion_r460720618", "createdAt": "2020-07-27T08:15:59Z", "author": {"login": "daniel-beck"}, "path": "core/src/main/java/hudson/tasks/BatchFile.java", "diffHunk": "@@ -59,7 +59,7 @@ public BatchFile(String command) {\n     /**\n      * Set local environment variable filter rules\n      * @param configuredLocalRules list of local environment filter rules\n-     * @since TODO\n+     * @since 2.246", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "304ad624269a32463158b6ed17740e2f325d9d44"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDcyMDY0Ng==", "bodyText": "#4683", "url": "https://github.com/jenkinsci/jenkins/pull/4877#discussion_r460720646", "createdAt": "2020-07-27T08:16:02Z", "author": {"login": "daniel-beck"}, "path": "core/src/main/java/hudson/tasks/Shell.java", "diffHunk": "@@ -71,7 +71,7 @@ public Shell(String command) {\n     /**\n      * Set local environment variable filter rules\n      * @param configuredLocalRules list of local environment filter rules\n-     * @since TODO\n+     * @since 2.246", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "304ad624269a32463158b6ed17740e2f325d9d44"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDcyMDc1Mg==", "bodyText": "#4683", "url": "https://github.com/jenkinsci/jenkins/pull/4877#discussion_r460720752", "createdAt": "2020-07-27T08:16:14Z", "author": {"login": "daniel-beck"}, "path": "core/src/main/java/jenkins/tasks/filters/EnvVarsFilterException.java", "diffHunk": "@@ -32,7 +32,7 @@\n /**\n  * Exception that occurs during the environment filtering process, with helper to track the source.\n  *\n- * @since TODO\n+ * @since 2.246", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "304ad624269a32463158b6ed17740e2f325d9d44"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDcyMDc5Mw==", "bodyText": "#4683", "url": "https://github.com/jenkinsci/jenkins/pull/4877#discussion_r460720793", "createdAt": "2020-07-27T08:16:19Z", "author": {"login": "daniel-beck"}, "path": "core/src/main/java/jenkins/tasks/filters/EnvVarsFilterGlobalConfiguration.java", "diffHunk": "@@ -43,7 +43,7 @@\n  * Configuration of the filter rules that are applied globally,\n  * after filtering which rule applies on which builder\n  *\n- * @since TODO\n+ * @since 2.246", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "304ad624269a32463158b6ed17740e2f325d9d44"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDcyMTg0MA==", "bodyText": "#4073", "url": "https://github.com/jenkinsci/jenkins/pull/4877#discussion_r460721840", "createdAt": "2020-07-27T08:18:12Z", "author": {"login": "daniel-beck"}, "path": "core/src/main/java/hudson/PluginManager.java", "diffHunk": "@@ -2242,7 +2242,7 @@ private PluginUpdateInfo(String pluginName, String message) {\n     /**\n      * {@link AdministrativeMonitor} that checks if there are any plugins that are deprecated.\n      *\n-     * @since TODO\n+     * @since 2.246", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "304ad624269a32463158b6ed17740e2f325d9d44"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDcyMTg3Mw==", "bodyText": "#4073", "url": "https://github.com/jenkinsci/jenkins/pull/4877#discussion_r460721873", "createdAt": "2020-07-27T08:18:16Z", "author": {"login": "daniel-beck"}, "path": "core/src/main/java/hudson/PluginWrapper.java", "diffHunk": "@@ -368,7 +368,7 @@ public boolean hasMandatoryDependencies() {\n      * Is this plugin deprecated?\n      *\n      * @return {@code true} if and only if an update site reports deprecations for this plugin.\n-     * @since TODO\n+     * @since 2.246", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "304ad624269a32463158b6ed17740e2f325d9d44"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDcyMTk2Mw==", "bodyText": "#4073", "url": "https://github.com/jenkinsci/jenkins/pull/4877#discussion_r460721963", "createdAt": "2020-07-27T08:18:24Z", "author": {"login": "daniel-beck"}, "path": "core/src/main/java/hudson/model/UpdateSite.java", "diffHunk": "@@ -562,7 +562,7 @@ private boolean isUpdatesFromHudsonLabs() {\n         /**\n          * Mapping of plugin IDs to deprecation notices\n          *\n-         * @since TODO\n+         * @since 2.246", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "304ad624269a32463158b6ed17740e2f325d9d44"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDcyMjAwNQ==", "bodyText": "#4073", "url": "https://github.com/jenkinsci/jenkins/pull/4877#discussion_r460722005", "createdAt": "2020-07-27T08:18:28Z", "author": {"login": "daniel-beck"}, "path": "core/src/main/java/hudson/model/UpdateSite.java", "diffHunk": "@@ -650,7 +650,7 @@ private boolean isUpdatesFromHudsonLabs() {\n         /**\n          * Returns the deprecations provided by the update site\n          * @return the deprecations provided by the update site\n-         * @since TODO\n+         * @since 2.246", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "304ad624269a32463158b6ed17740e2f325d9d44"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDcyMjA0Nw==", "bodyText": "#4073", "url": "https://github.com/jenkinsci/jenkins/pull/4877#discussion_r460722047", "createdAt": "2020-07-27T08:18:32Z", "author": {"login": "daniel-beck"}, "path": "core/src/main/java/hudson/model/UpdateSite.java", "diffHunk": "@@ -842,7 +842,7 @@ public boolean includes(VersionNumber number) {\n     /**\n      * Represents a deprecation of a certain component. Jenkins project policy determines exactly what it means.\n      *\n-     * @since TODO\n+     * @since 2.246", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "304ad624269a32463158b6ed17740e2f325d9d44"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDcyMjk5MA==", "bodyText": "#4774", "url": "https://github.com/jenkinsci/jenkins/pull/4877#discussion_r460722990", "createdAt": "2020-07-27T08:20:14Z", "author": {"login": "daniel-beck"}, "path": "core/src/main/java/hudson/model/labels/LabelExpression.java", "diffHunk": "@@ -270,7 +270,7 @@ public static FormValidation validate(@Nullable String expression) {\n      * @param item       The context item (like a job or a folder), if applicable; used for potential additional\n      *                   restrictions via {@link LabelValidator} instances.\n      * @return The validation result.\n-     * @since TODO\n+     * @since 2.243", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "304ad624269a32463158b6ed17740e2f325d9d44"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDcyMzAxMw==", "bodyText": "#4774", "url": "https://github.com/jenkinsci/jenkins/pull/4877#discussion_r460723013", "createdAt": "2020-07-27T08:20:16Z", "author": {"login": "daniel-beck"}, "path": "core/src/main/java/hudson/model/labels/LabelExpression.java", "diffHunk": "@@ -256,7 +256,7 @@ public static AutoCompletionCandidates autoComplete(@Nullable String label) {\n      *\n      * @param expression The expression to validate.\n      * @return The validation result.\n-     * @since TODO\n+     * @since 2.243", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "304ad624269a32463158b6ed17740e2f325d9d44"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDcyMzAzOA==", "bodyText": "#4774", "url": "https://github.com/jenkinsci/jenkins/pull/4877#discussion_r460723038", "createdAt": "2020-07-27T08:20:19Z", "author": {"login": "daniel-beck"}, "path": "core/src/main/java/hudson/model/labels/LabelExpression.java", "diffHunk": "@@ -234,7 +234,7 @@ public LabelOperatorPrecedence precedence() {\n      *\n      * @param label The (partial) label for which auto-completion is being requested.\n      * @return A set of auto-completion candidates.\n-     * @since TODO\n+     * @since 2.243", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "304ad624269a32463158b6ed17740e2f325d9d44"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDcyMzEwNQ==", "bodyText": "#4774", "url": "https://github.com/jenkinsci/jenkins/pull/4877#discussion_r460723105", "createdAt": "2020-07-27T08:20:27Z", "author": {"login": "daniel-beck"}, "path": "core/src/main/java/jenkins/model/labels/LabelValidator.java", "diffHunk": "@@ -10,7 +10,7 @@\n  * Plugins may want to contribute additional restrictions on the use of specific labels for specific context items.\n  * This extension point allows such restrictions.\n  *\n- * @since TODO\n+ * @since 2.243", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "304ad624269a32463158b6ed17740e2f325d9d44"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDcyMzI0NQ==", "bodyText": "#4774", "url": "https://github.com/jenkinsci/jenkins/pull/4877#discussion_r460723245", "createdAt": "2020-07-27T08:20:41Z", "author": {"login": "daniel-beck"}, "path": "core/src/main/java/hudson/model/AbstractProject.java", "diffHunk": "@@ -2080,7 +2080,7 @@ public void setCustomWorkspace(String customWorkspace) throws IOException {\n          * @param label The label that the job wants to restrict itself to.\n          * @return The validation result.\n          *\n-         * @since TODO\n+         * @since 2.243", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "304ad624269a32463158b6ed17740e2f325d9d44"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDcyMzg0OA==", "bodyText": "#4817", "url": "https://github.com/jenkinsci/jenkins/pull/4877#discussion_r460723848", "createdAt": "2020-07-27T08:21:49Z", "author": {"login": "daniel-beck"}, "path": "core/src/main/java/jenkins/fingerprints/FingerprintStorage.java", "diffHunk": "@@ -102,14 +102,14 @@ public static FingerprintStorage getFileFingerprintStorage() {\n      * For reference, see {@link FileFingerprintStorage#iterateAndCleanupFingerprints(TaskListener)}\n      * For cleaning up the fingerprint {@link #cleanFingerprint(Fingerprint, TaskListener)} may be used.\n      *\n-     * @since TODO\n+     * @since 2.246", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "304ad624269a32463158b6ed17740e2f325d9d44"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDcyNDQzNg==", "bodyText": "#4817", "url": "https://github.com/jenkinsci/jenkins/pull/4877#discussion_r460724436", "createdAt": "2020-07-27T08:22:51Z", "author": {"login": "daniel-beck"}, "path": "core/src/main/java/jenkins/fingerprints/FingerprintStorage.java", "diffHunk": "@@ -102,14 +102,14 @@ public static FingerprintStorage getFileFingerprintStorage() {\n      * For reference, see {@link FileFingerprintStorage#iterateAndCleanupFingerprints(TaskListener)}\n      * For cleaning up the fingerprint {@link #cleanFingerprint(Fingerprint, TaskListener)} may be used.\n      *\n-     * @since TODO\n+     * @since 2.246\n      */\n     public abstract void iterateAndCleanupFingerprints(TaskListener taskListener);\n \n     /**\n      * This method performs the cleanup of the given fingerprint.\n      *\n-     * @since TODO\n+     * @since 2.246", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "304ad624269a32463158b6ed17740e2f325d9d44"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDcyNDQ4MA==", "bodyText": "#4817", "url": "https://github.com/jenkinsci/jenkins/pull/4877#discussion_r460724480", "createdAt": "2020-07-27T08:22:55Z", "author": {"login": "daniel-beck"}, "path": "core/src/main/java/jenkins/fingerprints/FingerprintStorage.java", "diffHunk": "@@ -140,7 +140,7 @@ protected Fingerprint getFingerprint(Fingerprint fp) throws IOException {\n     }\n \n     /**\n-     * @since TODO\n+     * @since 2.246", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "304ad624269a32463158b6ed17740e2f325d9d44"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDcyNTQwMQ==", "bodyText": "#4766", "url": "https://github.com/jenkinsci/jenkins/pull/4877#discussion_r460725401", "createdAt": "2020-07-27T08:24:24Z", "author": {"login": "daniel-beck"}, "path": "core/src/main/java/jenkins/tasks/SimpleBuildStep.java", "diffHunk": "@@ -100,7 +100,7 @@ default void perform(@NonNull Run<?, ?> run, @NonNull FilePath workspace, @NonNu\n      * @param listener a place to send output\n      * @throws InterruptedException if the step is interrupted\n      * @throws IOException if something goes wrong; use {@link AbortException} for a polite error\n-     * @since TODO\n+     * @since 2.241", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "304ad624269a32463158b6ed17740e2f325d9d44"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDcyNTcxMQ==", "bodyText": "#4707", "url": "https://github.com/jenkinsci/jenkins/pull/4877#discussion_r460725711", "createdAt": "2020-07-27T08:24:56Z", "author": {"login": "daniel-beck"}, "path": "core/src/main/java/jenkins/util/SystemProperties.java", "diffHunk": "@@ -75,7 +75,7 @@\n  * <p>While it looks like it on first glance, this cannot be mapped to {@link EnvVars},\n  * because {@link EnvVars} is only for build variables, not Jenkins itself variables.\n  *\n- * @since TODO\n+ * @since 2.236", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "304ad624269a32463158b6ed17740e2f325d9d44"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDcyNjY3Mw==", "bodyText": "#4731", "url": "https://github.com/jenkinsci/jenkins/pull/4877#discussion_r460726673", "createdAt": "2020-07-27T08:26:38Z", "author": {"login": "daniel-beck"}, "path": "core/src/main/java/hudson/model/Fingerprint.java", "diffHunk": "@@ -1192,7 +1192,7 @@ public int size() {\n     /**\n      * Returns the persisted facets.\n      *\n-     * @since TODO\n+     * @since 2.242", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "304ad624269a32463158b6ed17740e2f325d9d44"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDcyNjcwNw==", "bodyText": "#4731", "url": "https://github.com/jenkinsci/jenkins/pull/4877#discussion_r460726707", "createdAt": "2020-07-27T08:26:41Z", "author": {"login": "daniel-beck"}, "path": "core/src/main/java/hudson/model/Fingerprint.java", "diffHunk": "@@ -1359,7 +1359,7 @@ public Api getApi() {\n     /**\n      * Deletes the {@link Fingerprint} in the Storage with the given unique id.\n      *\n-     * @since TODO\n+     * @since 2.242", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "304ad624269a32463158b6ed17740e2f325d9d44"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDcyNzE0NA==", "bodyText": "#4826", "url": "https://github.com/jenkinsci/jenkins/pull/4877#discussion_r460727144", "createdAt": "2020-07-27T08:27:20Z", "author": {"login": "daniel-beck"}, "path": "core/src/main/java/hudson/model/ParameterDefinition.java", "diffHunk": "@@ -227,7 +227,7 @@ public ParameterValue getDefaultParameterValue() {\n \n     /**\n      * Checks whether a given value is valid for this definition.\n-     * @since TODO\n+     * @since 2.244", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "304ad624269a32463158b6ed17740e2f325d9d44"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDcyNzMzMw==", "bodyText": "#4773", "url": "https://github.com/jenkinsci/jenkins/pull/4877#discussion_r460727333", "createdAt": "2020-07-27T08:27:42Z", "author": {"login": "daniel-beck"}, "path": "core/src/main/java/hudson/model/DownloadService.java", "diffHunk": "@@ -460,7 +460,7 @@ public JSONObject reduce(List<JSONObject> jsonList) {\n          *\n          * @param clazz The class to use to determine the downloadable's ID.\n          *\n-         * @since TODO\n+         * @since 2.244", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "304ad624269a32463158b6ed17740e2f325d9d44"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDcyNzM1NA==", "bodyText": "#4773", "url": "https://github.com/jenkinsci/jenkins/pull/4877#discussion_r460727354", "createdAt": "2020-07-27T08:27:45Z", "author": {"login": "daniel-beck"}, "path": "core/src/main/java/hudson/model/DownloadService.java", "diffHunk": "@@ -281,7 +281,7 @@ public String getId() {\n          * @param clazz The class to use to generate an ID.\n          * @return The ID generated based on the specified class.\n          *\n-         * @since TODO\n+         * @since 2.244", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "304ad624269a32463158b6ed17740e2f325d9d44"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU1NTc4NzI4", "url": "https://github.com/jenkinsci/jenkins/pull/4877#pullrequestreview-455578728", "createdAt": "2020-07-27T08:30:59Z", "commit": {"oid": "304ad624269a32463158b6ed17740e2f325d9d44"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU2NjYxNDY4", "url": "https://github.com/jenkinsci/jenkins/pull/4877#pullrequestreview-456661468", "createdAt": "2020-07-28T14:01:08Z", "commit": {"oid": "304ad624269a32463158b6ed17740e2f325d9d44"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxNDowMTowOVrOG4OB-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxNDowMTozOFrOG4ODUQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTYwMzMyMQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * @since 2.246\n          \n          \n            \n                 * @since 2.248", "url": "https://github.com/jenkinsci/jenkins/pull/4877#discussion_r461603321", "createdAt": "2020-07-28T14:01:09Z", "author": {"login": "stellargo"}, "path": "core/src/main/java/jenkins/fingerprints/FingerprintStorage.java", "diffHunk": "@@ -102,14 +102,14 @@ public static FingerprintStorage getFileFingerprintStorage() {\n      * For reference, see {@link FileFingerprintStorage#iterateAndCleanupFingerprints(TaskListener)}\n      * For cleaning up the fingerprint {@link #cleanFingerprint(Fingerprint, TaskListener)} may be used.\n      *\n-     * @since TODO\n+     * @since 2.246", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "304ad624269a32463158b6ed17740e2f325d9d44"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTYwMzUyMw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * @since 2.246\n          \n          \n            \n                 * @since 2.248", "url": "https://github.com/jenkinsci/jenkins/pull/4877#discussion_r461603523", "createdAt": "2020-07-28T14:01:25Z", "author": {"login": "stellargo"}, "path": "core/src/main/java/jenkins/fingerprints/FingerprintStorage.java", "diffHunk": "@@ -102,14 +102,14 @@ public static FingerprintStorage getFileFingerprintStorage() {\n      * For reference, see {@link FileFingerprintStorage#iterateAndCleanupFingerprints(TaskListener)}\n      * For cleaning up the fingerprint {@link #cleanFingerprint(Fingerprint, TaskListener)} may be used.\n      *\n-     * @since TODO\n+     * @since 2.246\n      */\n     public abstract void iterateAndCleanupFingerprints(TaskListener taskListener);\n \n     /**\n      * This method performs the cleanup of the given fingerprint.\n      *\n-     * @since TODO\n+     * @since 2.246", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "304ad624269a32463158b6ed17740e2f325d9d44"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTYwMzY2NQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * @since 2.246\n          \n          \n            \n                 * @since 2.248", "url": "https://github.com/jenkinsci/jenkins/pull/4877#discussion_r461603665", "createdAt": "2020-07-28T14:01:38Z", "author": {"login": "stellargo"}, "path": "core/src/main/java/jenkins/fingerprints/FingerprintStorage.java", "diffHunk": "@@ -140,7 +140,7 @@ protected Fingerprint getFingerprint(Fingerprint fp) throws IOException {\n     }\n \n     /**\n-     * @since TODO\n+     * @since 2.246", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "304ad624269a32463158b6ed17740e2f325d9d44"}, "originalPosition": 22}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU4MTg5OTg1", "url": "https://github.com/jenkinsci/jenkins/pull/4877#pullrequestreview-458189985", "createdAt": "2020-07-30T08:27:00Z", "commit": {"oid": "304ad624269a32463158b6ed17740e2f325d9d44"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU4Nzc2NTM1", "url": "https://github.com/jenkinsci/jenkins/pull/4877#pullrequestreview-458776535", "createdAt": "2020-07-30T21:41:36Z", "commit": {"oid": "304ad624269a32463158b6ed17740e2f325d9d44"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2189, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}