{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzU5NTg3OTMy", "number": 4419, "title": "[JENKINS-60641, JENKINS-60644] incorrectly converted AntClassLoader.loadResource to a Java 5 for-loop", "bodyText": "JENKINS-60644\nCorrects a mistake in #4254 which broke some plugins.\n\n fix confirmed via ATH\n fix confirmed here via JTH\n\nProposed changelog entries\n\nCorrects a critical regression in Jenkins 2.212 affecting at least the script-security and active-directory plugins.", "createdAt": "2020-01-06T15:22:35Z", "url": "https://github.com/jenkinsci/jenkins/pull/4419", "merged": true, "mergeCommit": {"oid": "6c7339afb467e7b0a1fe849721e791dd4f654cf4"}, "closed": true, "closedAt": "2020-01-06T18:52:46Z", "author": {"login": "jglick"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb3tweDAH2gAyMzU5NTg3OTMyOmYyMzA0NjJmMTUwYzQ3ZmJmM2NhZTY5OWQxZmE5ODM2MjZkZTNhZGY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb3u4gZgFqTMzODc1MTY0Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "f230462f150c47fbf3cae699d1fa983626de3adf", "author": {"user": {"login": "jglick", "name": "Jesse Glick"}}, "url": "https://github.com/jenkinsci/jenkins/commit/f230462f150c47fbf3cae699d1fa983626de3adf", "committedDate": "2020-01-06T15:19:26Z", "message": "#4254 incorrectly converted AntClassLoader.loadResource to a Java 5 for-loop."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzM4NzEwOTgy", "url": "https://github.com/jenkinsci/jenkins/pull/4419#pullrequestreview-338710982", "createdAt": "2020-01-06T15:33:15Z", "commit": {"oid": "f230462f150c47fbf3cae699d1fa983626de3adf"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzM4NzIxNzI4", "url": "https://github.com/jenkinsci/jenkins/pull/4419#pullrequestreview-338721728", "createdAt": "2020-01-06T15:50:12Z", "commit": {"oid": "f230462f150c47fbf3cae699d1fa983626de3adf"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0767caa849733d68c129399252ba771d0648318c", "author": {"user": {"login": "jglick", "name": "Jesse Glick"}}, "url": "https://github.com/jenkinsci/jenkins/commit/0767caa849733d68c129399252ba771d0648318c", "committedDate": "2020-01-06T16:00:55Z", "message": "Reproduced error in functional test with a small sample plugin.\nWithout fix, Jenkins startup fails:\njava.lang.NullPointerException\n\tat java.io.Reader.<init>(Reader.java:78)\n\tat java.io.InputStreamReader.<init>(InputStreamReader.java:113)\n\tat org.apache.commons.io.IOUtils.copy(IOUtils.java:2440)\n\tat org.apache.commons.io.IOUtils.toString(IOUtils.java:1084)\n\tat io.jenkins.plugins.loads_resource.Main.stuff(Main.java:36)"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzM4NzMwMzI5", "url": "https://github.com/jenkinsci/jenkins/pull/4419#pullrequestreview-338730329", "createdAt": "2020-01-06T16:03:40Z", "commit": {"oid": "0767caa849733d68c129399252ba771d0648318c"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNlQxNjowMzo0MVrOFahpFQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNlQxNjowMzo0MVrOFahpFQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzM1ODQ4NQ==", "bodyText": "This is probably the only case where PluginManager.getPlugin(\"loads-resource\") actually works in JTH :(", "url": "https://github.com/jenkinsci/jenkins/pull/4419#discussion_r363358485", "createdAt": "2020-01-06T16:03:41Z", "author": {"login": "oleg-nenashev"}, "path": "test/src/test/java/jenkins/util/AntClassLoaderTest.java", "diffHunk": "@@ -0,0 +1,47 @@\n+/*\n+ * The MIT License\n+ *\n+ * Copyright 2020 CloudBees, Inc.\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included in\n+ * all copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+ * THE SOFTWARE.\n+ */\n+package jenkins.util;\n+\n+import org.junit.ClassRule;\n+import org.junit.Test;\n+import static org.junit.Assert.*;\n+import org.junit.Rule;\n+import org.jvnet.hudson.test.BuildWatcher;\n+import org.jvnet.hudson.test.Issue;\n+import org.jvnet.hudson.test.JenkinsRule;\n+import org.jvnet.hudson.test.recipes.WithPlugin;\n+\n+public class AntClassLoaderTest {\n+\n+    @Rule\n+    public JenkinsRule r = new JenkinsRule();\n+\n+    @Issue(\"JENKINS-60644\")\n+    @WithPlugin(\"loads-resource.jpi\")\n+    @Test\n+    public void loadsResource() throws Exception {\n+        assertNotNull(r.jenkins.pluginManager.getPlugin(\"loads-resource\").classLoader.getResourceAsStream(\"io/jenkins/plugins/loads_resource/stuff\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0767caa849733d68c129399252ba771d0648318c"}, "originalPosition": 44}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzM4NzUxNjQ2", "url": "https://github.com/jenkinsci/jenkins/pull/4419#pullrequestreview-338751646", "createdAt": "2020-01-06T16:37:52Z", "commit": {"oid": "0767caa849733d68c129399252ba771d0648318c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNlQxNjozNzo1M1rOFaioNA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNlQxNjozNzo1M1rOFaioNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzM3NDY0NA==", "bodyText": "For those who like this sort of thing:\nreturn pathComponents.stream().map(pc -> getResourceStream(pc, name)).filter(Objects::nonNull).findFirst().orElse(null);", "url": "https://github.com/jenkinsci/jenkins/pull/4419#discussion_r363374644", "createdAt": "2020-01-06T16:37:53Z", "author": {"login": "jglick"}, "path": "core/src/main/java/jenkins/util/AntClassLoader.java", "diffHunk": "@@ -744,12 +744,13 @@ public InputStream getResourceAsStream(String name) {\n     private InputStream loadResource(String name) {\n         // we need to search the components of the path to see if we can\n         // find the class we want.\n-        InputStream stream = null;\n-\n         for (File pathComponent : pathComponents) {\n-            stream = getResourceStream(pathComponent, name);\n+            InputStream stream = getResourceStream(pathComponent, name);\n+            if (stream != null) {\n+                return stream;\n+            }\n         }\n-        return stream;\n+        return null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0767caa849733d68c129399252ba771d0648318c"}, "originalPosition": 14}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1692, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}