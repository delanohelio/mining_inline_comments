{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE1NzM1MTg3", "number": 4718, "title": "[JENKINS-62231] OldDataMonitor avoids Jenkins from loading a plugin", "bodyText": "See JENKINS-62231.\nThis PR is an easy fix, filed to raise a discussion. I don't know at this point if there is a better way.\nTested manually with the ec2-plugin. Downgrading from 1.50.2 to 1.49.1.\n\nProposed changelog entries\n\nEntry 1: Issue, Internal Avoid an error when reporting errors because of field unmarshalling to stop loading a plugin.\n\n\nProposed upgrade guidelines\nN/A\nSubmitter checklist\n\n (If applicable) Jira issue is well described\n Changelog entries and upgrade guidelines are appropriate for the audience affected by the change (users or developer, depending on the change). Examples\n\nFill-in the Proposed changelog entries section only if there are breaking changes or other changes which may require extra steps from users during the upgrade\n\n\n Appropriate autotests or explanation to why this change has no tests\n[N/A] For dependency updates: links to external changelogs and, if possible, full diffs\n\n\nDesired reviewers\n@oleg-nenashev @daniel-beck @res0nance\n\nMaintainer checklist\nBefore the changes are marked as ready-for-merge:\n\n There are at least 2 approvals for the pull request and no outstanding requests for change\n Conversations in the pull request are over OR it is explicit that a reviewer does not block the change\n Changelog entries in the PR title and/or Proposed changelog entries are correct\n Proper changelog labels are set so that the changelog can be generated automatically\n[N/A] If the change needs additional upgrade steps from users, upgrade-guide-needed label is set and there is a Proposed upgrade guidelines section in the PR title. (example)\n[N/A] If it would make sense to backport the change to LTS, a Jira issue must exist, be a Bug or Improvement, and be labeled as lts-candidate to be considered (see query).", "createdAt": "2020-05-10T15:14:00Z", "url": "https://github.com/jenkinsci/jenkins/pull/4718", "merged": true, "mergeCommit": {"oid": "86af885a41671d1b47e26ebe1a5804fcd4274d42"}, "closed": true, "closedAt": "2020-05-15T18:50:51Z", "author": {"login": "MRamonLeon"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcf8f9mgH2gAyNDE1NzM1MTg3OmY2MjFlNWI2OGI1OTIxOTM5NGU4YjBmYzFkNTZkNDZkNTU3ZjA2MTk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABchcf2lgH2gAyNDE1NzM1MTg3OmY5MTQxNzBlMzJhYWE2N2MxNzM0YTAwM2RjYmRjZjhlMjFlODBiMDM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "f621e5b68b59219394e8b0fc1d56d46d557f0619", "author": {"user": {"login": "MRamonLeon", "name": "Ramon Leon"}}, "url": "https://github.com/jenkinsci/jenkins/commit/f621e5b68b59219394e8b0fc1d56d46d557f0619", "committedDate": "2020-05-10T15:06:57Z", "message": "[JENKINS-62231] Avoid OldDataMonitor avoids Jenkins load a plugin"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA4NzU2MDI0", "url": "https://github.com/jenkinsci/jenkins/pull/4718#pullrequestreview-408756024", "createdAt": "2020-05-10T15:33:20Z", "commit": {"oid": "f621e5b68b59219394e8b0fc1d56d46d557f0619"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMFQxNTozMzoyMFrOGTFLfg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMFQxNTozMzoyMFrOGTFLfg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjY2MDk5MA==", "bodyText": "is this worth logging somewhere even at fine?", "url": "https://github.com/jenkinsci/jenkins/pull/4718#discussion_r422660990", "createdAt": "2020-05-10T15:33:20Z", "author": {"login": "timja"}, "path": "core/src/main/java/hudson/util/RobustReflectionConverter.java", "diffHunk": "@@ -365,7 +365,15 @@ public Object doUnmarshal(final Object result, final HierarchicalStreamReader re\n \n         // Report any class/field errors in Saveable objects\n         if (context.get(\"ReadError\") != null && context.get(\"Saveable\") == result) {\n-            OldDataMonitor.report((Saveable)result, (ArrayList<Throwable>)context.get(\"ReadError\"));\n+            // Avoid any error in OldDataMonitor to be catastrophic. See JENKINS-62231 and JENKINS-59582\n+            // The root cause is the OldDataMonitor extension is not ready before a plugin triggers an error, for \n+            // example when trying to load a field that was created by a new version and you downgrade to the previous\n+            // one.\n+            try {\n+                OldDataMonitor.report((Saveable) result, (ArrayList<Throwable>) context.get(\"ReadError\"));\n+            } catch (Throwable ignored) {\n+                // it should be already reported", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f621e5b68b59219394e8b0fc1d56d46d557f0619"}, "originalPosition": 12}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "943fbcd40c50ac0808f765fd064a2397584ebd7a", "author": {"user": {"login": "MRamonLeon", "name": "Ramon Leon"}}, "url": "https://github.com/jenkinsci/jenkins/commit/943fbcd40c50ac0808f765fd064a2397584ebd7a", "committedDate": "2020-05-11T10:43:02Z", "message": "[JENKINS-62231] Log a report problem with info"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA5MTc4MTUw", "url": "https://github.com/jenkinsci/jenkins/pull/4718#pullrequestreview-409178150", "createdAt": "2020-05-11T13:36:39Z", "commit": {"oid": "943fbcd40c50ac0808f765fd064a2397584ebd7a"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5d40c424f02fc511f5e9096ca9c16162c9fd862a", "author": {"user": {"login": "MRamonLeon", "name": "Ramon Leon"}}, "url": "https://github.com/jenkinsci/jenkins/commit/5d40c424f02fc511f5e9096ca9c16162c9fd862a", "committedDate": "2020-05-11T15:33:33Z", "message": "[JENKINS-61920] Add more information"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA5ODAxNjMz", "url": "https://github.com/jenkinsci/jenkins/pull/4718#pullrequestreview-409801633", "createdAt": "2020-05-12T08:13:07Z", "commit": {"oid": "5d40c424f02fc511f5e9096ca9c16162c9fd862a"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQwODoxMzowN1rOGT7JLQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQwODoxMzoyNlrOGT7J4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzU0NTEzMw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            String additionalMessage = \". Be sure this code is executed after InitMilestone.EXTENSIONS_AUGMENTED stage, for example in Plugin#postInitialize instead of Plugin#start\";\n          \n          \n            \n                            String additionalMessage = \". Make sure this code is executed after InitMilestone.EXTENSIONS_AUGMENTED stage, for example in Plugin#postInitialize instead of Plugin#start\";", "url": "https://github.com/jenkinsci/jenkins/pull/4718#discussion_r423545133", "createdAt": "2020-05-12T08:13:07Z", "author": {"login": "varyvol"}, "path": "core/src/main/java/hudson/util/RobustReflectionConverter.java", "diffHunk": "@@ -365,7 +367,22 @@ public Object doUnmarshal(final Object result, final HierarchicalStreamReader re\n \n         // Report any class/field errors in Saveable objects\n         if (context.get(\"ReadError\") != null && context.get(\"Saveable\") == result) {\n-            OldDataMonitor.report((Saveable)result, (ArrayList<Throwable>)context.get(\"ReadError\"));\n+            // Avoid any error in OldDataMonitor to be catastrophic. See JENKINS-62231 and JENKINS-59582\n+            // The root cause is the OldDataMonitor extension is not ready before a plugin triggers an error, for \n+            // example when trying to load a field that was created by a new version and you downgrade to the previous\n+            // one.\n+            try {\n+                OldDataMonitor.report((Saveable) result, (ArrayList<Throwable>) context.get(\"ReadError\"));\n+            } catch (Throwable t) {\n+                // it should be already reported, but we report with INFO just in case\n+                StringBuilder message = new StringBuilder(\"There was a problem reporting unmarshalling field errors\");\n+                String additionalMessage = \". Be sure this code is executed after InitMilestone.EXTENSIONS_AUGMENTED stage, for example in Plugin#postInitialize instead of Plugin#start\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5d40c424f02fc511f5e9096ca9c16162c9fd862a"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzU0NTMxMg==", "bodyText": "Better if you declare the variable inside the if clase, where you are actually using it?", "url": "https://github.com/jenkinsci/jenkins/pull/4718#discussion_r423545312", "createdAt": "2020-05-12T08:13:26Z", "author": {"login": "varyvol"}, "path": "core/src/main/java/hudson/util/RobustReflectionConverter.java", "diffHunk": "@@ -365,7 +367,22 @@ public Object doUnmarshal(final Object result, final HierarchicalStreamReader re\n \n         // Report any class/field errors in Saveable objects\n         if (context.get(\"ReadError\") != null && context.get(\"Saveable\") == result) {\n-            OldDataMonitor.report((Saveable)result, (ArrayList<Throwable>)context.get(\"ReadError\"));\n+            // Avoid any error in OldDataMonitor to be catastrophic. See JENKINS-62231 and JENKINS-59582\n+            // The root cause is the OldDataMonitor extension is not ready before a plugin triggers an error, for \n+            // example when trying to load a field that was created by a new version and you downgrade to the previous\n+            // one.\n+            try {\n+                OldDataMonitor.report((Saveable) result, (ArrayList<Throwable>) context.get(\"ReadError\"));\n+            } catch (Throwable t) {\n+                // it should be already reported, but we report with INFO just in case\n+                StringBuilder message = new StringBuilder(\"There was a problem reporting unmarshalling field errors\");\n+                String additionalMessage = \". Be sure this code is executed after InitMilestone.EXTENSIONS_AUGMENTED stage, for example in Plugin#postInitialize instead of Plugin#start\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5d40c424f02fc511f5e9096ca9c16162c9fd862a"}, "originalPosition": 23}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a69a9a24e9b369fa9b54c008f0a9ca4f5c956cef", "author": {"user": {"login": "MRamonLeon", "name": "Ramon Leon"}}, "url": "https://github.com/jenkinsci/jenkins/commit/a69a9a24e9b369fa9b54c008f0a9ca4f5c956cef", "committedDate": "2020-05-12T08:55:46Z", "message": "[JENKINS-62231] Optimize catch code"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA5ODU1Nzc5", "url": "https://github.com/jenkinsci/jenkins/pull/4718#pullrequestreview-409855779", "createdAt": "2020-05-12T09:19:22Z", "commit": {"oid": "a69a9a24e9b369fa9b54c008f0a9ca4f5c956cef"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f914170e32aaa67c1734a003dcbdcf8e21e80b03", "author": {"user": {"login": "MRamonLeon", "name": "Ramon Leon"}}, "url": "https://github.com/jenkinsci/jenkins/commit/f914170e32aaa67c1734a003dcbdcf8e21e80b03", "committedDate": "2020-05-15T06:57:43Z", "message": "[JENKINS-62231] Adjust level depending on the case"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1171, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}