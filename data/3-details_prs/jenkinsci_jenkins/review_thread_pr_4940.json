{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg5ODkyMzI0", "number": 4940, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMFQxNDoxOToyMVrOElbYtA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxMTozMzo1NVrOEo_Q9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3NjgxNDYwOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/hudson/console/ConsoleLogFilter.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMFQxNDoxOToyMVrOHU6vtA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMFQxNDoxOToyMVrOHU6vtA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTY5NjA1Mg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        // happens only if the subtype fails to override neither decorateLogger method\n          \n          \n            \n                        // happens only if the subtype fails to override either decorateLogger method", "url": "https://github.com/jenkinsci/jenkins/pull/4940#discussion_r491696052", "createdAt": "2020-09-20T14:19:21Z", "author": {"login": "daniel-beck"}, "path": "core/src/main/java/hudson/console/ConsoleLogFilter.java", "diffHunk": "@@ -69,7 +69,7 @@ public OutputStream decorateLogger(AbstractBuild build, OutputStream logger) thr\n             // happens only if the subtype fails to override neither decorateLogger method", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e93a1cee558897e23b31fe37d2d2c85617cd5a5a"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3NjgxNjA5OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/hudson/console/ConsoleLogFilter.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMFQxNDoyMTowMVrOHU6wZw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMFQyMTozMjo0MlrOHU9Pdg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTY5NjIzMQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                \"Update the plugin to use decorateLogger(Run,OutputStream) instead.\");\n          \n          \n            \n                                \"Update the plugin to call #decorateLogger(Run,OutputStream) instead.\");\n          \n      \n    \n    \n  \n\nIt was unclear to me what is meant here because I first thought it was referring to what was implemented (and that seemed to contradict the comment above). \"Call\" would be clearer.\nOTOH, why would you report the current class's name if you're interested in the caller of a public method? Something's weird here.", "url": "https://github.com/jenkinsci/jenkins/pull/4940#discussion_r491696231", "createdAt": "2020-09-20T14:21:01Z", "author": {"login": "daniel-beck"}, "path": "core/src/main/java/hudson/console/ConsoleLogFilter.java", "diffHunk": "@@ -69,7 +69,7 @@ public OutputStream decorateLogger(AbstractBuild build, OutputStream logger) thr\n             // happens only if the subtype fails to override neither decorateLogger method\n             throw new AssertionError(\"The plugin '\" + this.getClass().getName() + \"' still uses \" +\n                     \"deprecated decorateLogger(AbstractBuild,OutputStream) method. \" +\n-                    \"Update the plugin to use setUp(Run,OutputStream) instead.\");\n+                    \"Update the plugin to use decorateLogger(Run,OutputStream) instead.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e93a1cee558897e23b31fe37d2d2c85617cd5a5a"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTY5OTMxMA==", "bodyText": "Not sure I'd add the # because this isn't JavaDoc, but not against it either.\nAdding the class name would be OK, but it would be reported next to the message in the exception's stack trace too.\nAs for the rest of the wording, there are many similar pieces of code similar to this (hence the copy/paste error of the method name in the first place), so if that's getting changed, it should probably be changed across the board.", "url": "https://github.com/jenkinsci/jenkins/pull/4940#discussion_r491699310", "createdAt": "2020-09-20T14:56:25Z", "author": {"login": "Zastai"}, "path": "core/src/main/java/hudson/console/ConsoleLogFilter.java", "diffHunk": "@@ -69,7 +69,7 @@ public OutputStream decorateLogger(AbstractBuild build, OutputStream logger) thr\n             // happens only if the subtype fails to override neither decorateLogger method\n             throw new AssertionError(\"The plugin '\" + this.getClass().getName() + \"' still uses \" +\n                     \"deprecated decorateLogger(AbstractBuild,OutputStream) method. \" +\n-                    \"Update the plugin to use setUp(Run,OutputStream) instead.\");\n+                    \"Update the plugin to use decorateLogger(Run,OutputStream) instead.\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTY5NjIzMQ=="}, "originalCommit": {"oid": "e93a1cee558897e23b31fe37d2d2c85617cd5a5a"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTcwMDMzNg==", "bodyText": "Actually, that branch is reached when a ConsoleFilter overrides neither method, which is logically an AbstractMethodError().\nSo if anything, it should be \"implement\" or \"override\" instead of \"use\" or \"call\".\nOr just drop the AssertionError and throw AbstractMethodException instead, which is what SimpleBuildStep does.\nWhatever change is made should then also be made in BuildWrapper (looks like it's where this was copied from).", "url": "https://github.com/jenkinsci/jenkins/pull/4940#discussion_r491700336", "createdAt": "2020-09-20T15:07:30Z", "author": {"login": "Zastai"}, "path": "core/src/main/java/hudson/console/ConsoleLogFilter.java", "diffHunk": "@@ -69,7 +69,7 @@ public OutputStream decorateLogger(AbstractBuild build, OutputStream logger) thr\n             // happens only if the subtype fails to override neither decorateLogger method\n             throw new AssertionError(\"The plugin '\" + this.getClass().getName() + \"' still uses \" +\n                     \"deprecated decorateLogger(AbstractBuild,OutputStream) method. \" +\n-                    \"Update the plugin to use setUp(Run,OutputStream) instead.\");\n+                    \"Update the plugin to use decorateLogger(Run,OutputStream) instead.\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTY5NjIzMQ=="}, "originalCommit": {"oid": "e93a1cee558897e23b31fe37d2d2c85617cd5a5a"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTcwMzA2Ng==", "bodyText": "Actually, that branch is reached when a ConsoleFilter overrides neither method, which is logically an AbstractMethodError().\n\nRight, but then the message is just plain wrong and misleading: The mentioned method isn't overridden (\"used\") either.", "url": "https://github.com/jenkinsci/jenkins/pull/4940#discussion_r491703066", "createdAt": "2020-09-20T15:37:02Z", "author": {"login": "daniel-beck"}, "path": "core/src/main/java/hudson/console/ConsoleLogFilter.java", "diffHunk": "@@ -69,7 +69,7 @@ public OutputStream decorateLogger(AbstractBuild build, OutputStream logger) thr\n             // happens only if the subtype fails to override neither decorateLogger method\n             throw new AssertionError(\"The plugin '\" + this.getClass().getName() + \"' still uses \" +\n                     \"deprecated decorateLogger(AbstractBuild,OutputStream) method. \" +\n-                    \"Update the plugin to use setUp(Run,OutputStream) instead.\");\n+                    \"Update the plugin to use decorateLogger(Run,OutputStream) instead.\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTY5NjIzMQ=="}, "originalCommit": {"oid": "e93a1cee558897e23b31fe37d2d2c85617cd5a5a"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTczNjk1MA==", "bodyText": "I've changed both places to use AbstractMethodError with a better message.", "url": "https://github.com/jenkinsci/jenkins/pull/4940#discussion_r491736950", "createdAt": "2020-09-20T21:32:42Z", "author": {"login": "Zastai"}, "path": "core/src/main/java/hudson/console/ConsoleLogFilter.java", "diffHunk": "@@ -69,7 +69,7 @@ public OutputStream decorateLogger(AbstractBuild build, OutputStream logger) thr\n             // happens only if the subtype fails to override neither decorateLogger method\n             throw new AssertionError(\"The plugin '\" + this.getClass().getName() + \"' still uses \" +\n                     \"deprecated decorateLogger(AbstractBuild,OutputStream) method. \" +\n-                    \"Update the plugin to use setUp(Run,OutputStream) instead.\");\n+                    \"Update the plugin to use decorateLogger(Run,OutputStream) instead.\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTY5NjIzMQ=="}, "originalCommit": {"oid": "e93a1cee558897e23b31fe37d2d2c85617cd5a5a"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5Mzk5MTg2OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/hudson/console/ConsoleLogFilter.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQxNDoxNDoxMlrOHXc_2w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQxNDoyODo1MFrOHXdsxA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDM1NDM5NQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                \"either overload of the decorateLogger method.\");\n          \n          \n            \n                                \"either overload the decorateLogger method.\");", "url": "https://github.com/jenkinsci/jenkins/pull/4940#discussion_r494354395", "createdAt": "2020-09-24T14:14:12Z", "author": {"login": "MRamonLeon"}, "path": "core/src/main/java/hudson/console/ConsoleLogFilter.java", "diffHunk": "@@ -66,10 +66,9 @@ public OutputStream decorateLogger(AbstractBuild build, OutputStream logger) thr\n             // old client calling newer implementation. forward the call.\n             return decorateLogger((Run) build, logger);\n         } else {\n-            // happens only if the subtype fails to override neither decorateLogger method\n-            throw new AssertionError(\"The plugin '\" + this.getClass().getName() + \"' still uses \" +\n-                    \"deprecated decorateLogger(AbstractBuild,OutputStream) method. \" +\n-                    \"Update the plugin to use setUp(Run,OutputStream) instead.\");\n+            // happens only if the subtype fails to override either decorateLogger method\n+            throw new AbstractMethodError(\"Plugin class '\" + this.getClass().getName() + \"' does not override \" +\n+                    \"either overload of the decorateLogger method.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0f23e720aa81d4001234959e6ec6d8dc3f3ee955"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDM2NTg5Mg==", "bodyText": "Wrong, overload here is a noun.", "url": "https://github.com/jenkinsci/jenkins/pull/4940#discussion_r494365892", "createdAt": "2020-09-24T14:28:50Z", "author": {"login": "daniel-beck"}, "path": "core/src/main/java/hudson/console/ConsoleLogFilter.java", "diffHunk": "@@ -66,10 +66,9 @@ public OutputStream decorateLogger(AbstractBuild build, OutputStream logger) thr\n             // old client calling newer implementation. forward the call.\n             return decorateLogger((Run) build, logger);\n         } else {\n-            // happens only if the subtype fails to override neither decorateLogger method\n-            throw new AssertionError(\"The plugin '\" + this.getClass().getName() + \"' still uses \" +\n-                    \"deprecated decorateLogger(AbstractBuild,OutputStream) method. \" +\n-                    \"Update the plugin to use setUp(Run,OutputStream) instead.\");\n+            // happens only if the subtype fails to override either decorateLogger method\n+            throw new AbstractMethodError(\"Plugin class '\" + this.getClass().getName() + \"' does not override \" +\n+                    \"either overload of the decorateLogger method.\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDM1NDM5NQ=="}, "originalCommit": {"oid": "0f23e720aa81d4001234959e6ec6d8dc3f3ee955"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5Mzk5NjQ0OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/hudson/tasks/BuildWrapper.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQxNDoxNTowOVrOHXdCwA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQxNDoyODo1NVrOHXdtDg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDM1NTEzNg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                \"either overload of the setUp method.\");\n          \n          \n            \n                                \"either overload the setUp method.\");", "url": "https://github.com/jenkinsci/jenkins/pull/4940#discussion_r494355136", "createdAt": "2020-09-24T14:15:09Z", "author": {"login": "MRamonLeon"}, "path": "core/src/main/java/hudson/tasks/BuildWrapper.java", "diffHunk": "@@ -140,10 +140,9 @@ public boolean tearDown( Build build, BuildListener listener ) throws IOExceptio\n     public Environment setUp( AbstractBuild build, Launcher launcher, BuildListener listener ) throws IOException, InterruptedException {\n         if (build instanceof Build)\n             return setUp((Build)build,launcher,listener);\n-        else\n-            throw new AssertionError(\"The plugin '\" + this.getClass().getName() + \"' still uses \" +\n-                    \"deprecated setUp(Build,Launcher,BuildListener) method. \" +\n-                    \"Update the plugin to use setUp(AbstractBuild, Launcher, BuildListener) instead.\");\n+        else // neither overload was overridden\n+            throw new AbstractMethodError(\"Plugin class '\" + this.getClass().getName() + \"' does not override \" +\n+                    \"either overload of the setUp method.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0f23e720aa81d4001234959e6ec6d8dc3f3ee955"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDM2NTk2Ng==", "bodyText": "Wrong, overload here is a noun.", "url": "https://github.com/jenkinsci/jenkins/pull/4940#discussion_r494365966", "createdAt": "2020-09-24T14:28:55Z", "author": {"login": "daniel-beck"}, "path": "core/src/main/java/hudson/tasks/BuildWrapper.java", "diffHunk": "@@ -140,10 +140,9 @@ public boolean tearDown( Build build, BuildListener listener ) throws IOExceptio\n     public Environment setUp( AbstractBuild build, Launcher launcher, BuildListener listener ) throws IOException, InterruptedException {\n         if (build instanceof Build)\n             return setUp((Build)build,launcher,listener);\n-        else\n-            throw new AssertionError(\"The plugin '\" + this.getClass().getName() + \"' still uses \" +\n-                    \"deprecated setUp(Build,Launcher,BuildListener) method. \" +\n-                    \"Update the plugin to use setUp(AbstractBuild, Launcher, BuildListener) instead.\");\n+        else // neither overload was overridden\n+            throw new AbstractMethodError(\"Plugin class '\" + this.getClass().getName() + \"' does not override \" +\n+                    \"either overload of the setUp method.\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDM1NTEzNg=="}, "originalCommit": {"oid": "0f23e720aa81d4001234959e6ec6d8dc3f3ee955"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5Mzk5ODk0OnYy", "diffSide": "LEFT", "path": "core/src/main/java/hudson/tasks/BuildWrapper.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQxNDoxNTozOFrOHXdEQw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQxNDoyOTo0MlrOHXdviQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDM1NTUyMw==", "bodyText": "don't we want this information?", "url": "https://github.com/jenkinsci/jenkins/pull/4940#discussion_r494355523", "createdAt": "2020-09-24T14:15:38Z", "author": {"login": "MRamonLeon"}, "path": "core/src/main/java/hudson/tasks/BuildWrapper.java", "diffHunk": "@@ -140,10 +140,9 @@ public boolean tearDown( Build build, BuildListener listener ) throws IOExceptio\n     public Environment setUp( AbstractBuild build, Launcher launcher, BuildListener listener ) throws IOException, InterruptedException {\n         if (build instanceof Build)\n             return setUp((Build)build,launcher,listener);\n-        else\n-            throw new AssertionError(\"The plugin '\" + this.getClass().getName() + \"' still uses \" +\n-                    \"deprecated setUp(Build,Launcher,BuildListener) method. \" +\n-                    \"Update the plugin to use setUp(AbstractBuild, Launcher, BuildListener) instead.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0f23e720aa81d4001234959e6ec6d8dc3f3ee955"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDM2NjYwMQ==", "bodyText": "As above.", "url": "https://github.com/jenkinsci/jenkins/pull/4940#discussion_r494366601", "createdAt": "2020-09-24T14:29:42Z", "author": {"login": "daniel-beck"}, "path": "core/src/main/java/hudson/tasks/BuildWrapper.java", "diffHunk": "@@ -140,10 +140,9 @@ public boolean tearDown( Build build, BuildListener listener ) throws IOExceptio\n     public Environment setUp( AbstractBuild build, Launcher launcher, BuildListener listener ) throws IOException, InterruptedException {\n         if (build instanceof Build)\n             return setUp((Build)build,launcher,listener);\n-        else\n-            throw new AssertionError(\"The plugin '\" + this.getClass().getName() + \"' still uses \" +\n-                    \"deprecated setUp(Build,Launcher,BuildListener) method. \" +\n-                    \"Update the plugin to use setUp(AbstractBuild, Launcher, BuildListener) instead.\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDM1NTUyMw=="}, "originalCommit": {"oid": "0f23e720aa81d4001234959e6ec6d8dc3f3ee955"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5Mzk5OTM3OnYy", "diffSide": "LEFT", "path": "core/src/main/java/hudson/console/ConsoleLogFilter.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQxNDoxNTo0NFrOHXdEiw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQxNDoyOTozNlrOHXdvOg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDM1NTU5NQ==", "bodyText": "don't we want this information?", "url": "https://github.com/jenkinsci/jenkins/pull/4940#discussion_r494355595", "createdAt": "2020-09-24T14:15:44Z", "author": {"login": "MRamonLeon"}, "path": "core/src/main/java/hudson/console/ConsoleLogFilter.java", "diffHunk": "@@ -66,10 +66,9 @@ public OutputStream decorateLogger(AbstractBuild build, OutputStream logger) thr\n             // old client calling newer implementation. forward the call.\n             return decorateLogger((Run) build, logger);\n         } else {\n-            // happens only if the subtype fails to override neither decorateLogger method\n-            throw new AssertionError(\"The plugin '\" + this.getClass().getName() + \"' still uses \" +\n-                    \"deprecated decorateLogger(AbstractBuild,OutputStream) method. \" +\n-                    \"Update the plugin to use setUp(Run,OutputStream) instead.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0f23e720aa81d4001234959e6ec6d8dc3f3ee955"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDM2NjUyMg==", "bodyText": "It's wrong.", "url": "https://github.com/jenkinsci/jenkins/pull/4940#discussion_r494366522", "createdAt": "2020-09-24T14:29:36Z", "author": {"login": "daniel-beck"}, "path": "core/src/main/java/hudson/console/ConsoleLogFilter.java", "diffHunk": "@@ -66,10 +66,9 @@ public OutputStream decorateLogger(AbstractBuild build, OutputStream logger) thr\n             // old client calling newer implementation. forward the call.\n             return decorateLogger((Run) build, logger);\n         } else {\n-            // happens only if the subtype fails to override neither decorateLogger method\n-            throw new AssertionError(\"The plugin '\" + this.getClass().getName() + \"' still uses \" +\n-                    \"deprecated decorateLogger(AbstractBuild,OutputStream) method. \" +\n-                    \"Update the plugin to use setUp(Run,OutputStream) instead.\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDM1NTU5NQ=="}, "originalCommit": {"oid": "0f23e720aa81d4001234959e6ec6d8dc3f3ee955"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzExNDE1MDMwOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/hudson/tasks/BuildWrapper.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxMTozMzo1NVrOHaZQjA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxMjowNToyN1rOHaaSGw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzQzODg2MA==", "bodyText": "Add to Javadoc?", "url": "https://github.com/jenkinsci/jenkins/pull/4940#discussion_r497438860", "createdAt": "2020-09-30T11:33:55Z", "author": {"login": "oleg-nenashev"}, "path": "core/src/main/java/hudson/tasks/BuildWrapper.java", "diffHunk": "@@ -140,10 +140,9 @@ public boolean tearDown( Build build, BuildListener listener ) throws IOExceptio\n     public Environment setUp( AbstractBuild build, Launcher launcher, BuildListener listener ) throws IOException, InterruptedException {\n         if (build instanceof Build)\n             return setUp((Build)build,launcher,listener);\n-        else\n-            throw new AssertionError(\"The plugin '\" + this.getClass().getName() + \"' still uses \" +\n-                    \"deprecated setUp(Build,Launcher,BuildListener) method. \" +\n-                    \"Update the plugin to use setUp(AbstractBuild, Launcher, BuildListener) instead.\");\n+        else // neither overload was overridden\n+            throw new AbstractMethodError(\"Plugin class '\" + this.getClass().getName() + \"' does not override \" +", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0f23e720aa81d4001234959e6ec6d8dc3f3ee955"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzQ1NTY0Mw==", "bodyText": "Done.", "url": "https://github.com/jenkinsci/jenkins/pull/4940#discussion_r497455643", "createdAt": "2020-09-30T12:05:27Z", "author": {"login": "Zastai"}, "path": "core/src/main/java/hudson/tasks/BuildWrapper.java", "diffHunk": "@@ -140,10 +140,9 @@ public boolean tearDown( Build build, BuildListener listener ) throws IOExceptio\n     public Environment setUp( AbstractBuild build, Launcher launcher, BuildListener listener ) throws IOException, InterruptedException {\n         if (build instanceof Build)\n             return setUp((Build)build,launcher,listener);\n-        else\n-            throw new AssertionError(\"The plugin '\" + this.getClass().getName() + \"' still uses \" +\n-                    \"deprecated setUp(Build,Launcher,BuildListener) method. \" +\n-                    \"Update the plugin to use setUp(AbstractBuild, Launcher, BuildListener) instead.\");\n+        else // neither overload was overridden\n+            throw new AbstractMethodError(\"Plugin class '\" + this.getClass().getName() + \"' does not override \" +", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzQzODg2MA=="}, "originalCommit": {"oid": "0f23e720aa81d4001234959e6ec6d8dc3f3ee955"}, "originalPosition": 9}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 188, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}