{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYxNTMxNzg4", "number": 4425, "reviewThreads": {"totalCount": 17, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQxNjo0Mzo1M1rODXNZrA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQxNDo1NzoxNFrODZ3GwQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1NjYzNDA0OnYy", "diffSide": "RIGHT", "path": "war/package.json", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQxNjo0Mzo1M1rOFcZxEw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QxMjozMDo1OFrOFc1YiA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTMyNjYxMQ==", "bodyText": "Question: is Jenkins built on an environment where this cp command would fail?", "url": "https://github.com/jenkinsci/jenkins/pull/4425#discussion_r365326611", "createdAt": "2020-01-10T16:43:53Z", "author": {"login": "fqueiruga"}, "path": "war/package.json", "diffHunk": "@@ -9,18 +9,38 @@\n     \"url\": \"https://github.com/tfennelly\"\n   },\n   \"private\": true,\n+  \"scripts\": {\n+    \"copy-fonts\": \"cp -rp src/main/fonts/* src/main/webapp/css\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0956410f1a2d928ceffae733e482fca76a17d772"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTM5ODUzNQ==", "bodyText": "Yea. It's tested on windows.\nTheres a webpack copy plugin that works really well", "url": "https://github.com/jenkinsci/jenkins/pull/4425#discussion_r365398535", "createdAt": "2020-01-10T19:37:22Z", "author": {"login": "halkeye"}, "path": "war/package.json", "diffHunk": "@@ -9,18 +9,38 @@\n     \"url\": \"https://github.com/tfennelly\"\n   },\n   \"private\": true,\n+  \"scripts\": {\n+    \"copy-fonts\": \"cp -rp src/main/fonts/* src/main/webapp/css\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTMyNjYxMQ=="}, "originalCommit": {"oid": "0956410f1a2d928ceffae733e482fca76a17d772"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTc3OTA4MA==", "bodyText": "I have added the webpack copy plugin. Thanks!", "url": "https://github.com/jenkinsci/jenkins/pull/4425#discussion_r365779080", "createdAt": "2020-01-13T12:30:58Z", "author": {"login": "fqueiruga"}, "path": "war/package.json", "diffHunk": "@@ -9,18 +9,38 @@\n     \"url\": \"https://github.com/tfennelly\"\n   },\n   \"private\": true,\n+  \"scripts\": {\n+    \"copy-fonts\": \"cp -rp src/main/fonts/* src/main/webapp/css\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTMyNjYxMQ=="}, "originalCommit": {"oid": "0956410f1a2d928ceffae733e482fca76a17d772"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1OTY4OTgzOnYy", "diffSide": "RIGHT", "path": "war/src/main/js/handlebars-helpers/id.js", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QxMjoxNToxNVrOFc1AxA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQxNDoyNDo0N1rOFf7yQg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTc3Mjk5Ng==", "bodyText": "Does it matter that potentially multiple values share the same ID with this replacement scheme?", "url": "https://github.com/jenkinsci/jenkins/pull/4425#discussion_r365772996", "createdAt": "2020-01-13T12:15:15Z", "author": {"login": "daniel-beck"}, "path": "war/src/main/js/handlebars-helpers/id.js", "diffHunk": "@@ -0,0 +1,3 @@\n+export default function id(str) {\n+\treturn (''+str).replace(/\\W+/g, '_');", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0956410f1a2d928ceffae733e482fca76a17d772"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTc3ODc1OA==", "bodyText": "TBH I don't know. I limited the scope of this PR to just maintain current behaviour. I extracted the function as it is.", "url": "https://github.com/jenkinsci/jenkins/pull/4425#discussion_r365778758", "createdAt": "2020-01-13T12:30:07Z", "author": {"login": "fqueiruga"}, "path": "war/src/main/js/handlebars-helpers/id.js", "diffHunk": "@@ -0,0 +1,3 @@\n+export default function id(str) {\n+\treturn (''+str).replace(/\\W+/g, '_');", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTc3Mjk5Ng=="}, "originalCommit": {"oid": "0956410f1a2d928ceffae733e482fca76a17d772"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTAyOTY5OA==", "bodyText": "I'm resolving this one, feel free to reopen it if you disagree!", "url": "https://github.com/jenkinsci/jenkins/pull/4425#discussion_r369029698", "createdAt": "2020-01-21T14:24:47Z", "author": {"login": "fqueiruga"}, "path": "war/src/main/js/handlebars-helpers/id.js", "diffHunk": "@@ -0,0 +1,3 @@\n+export default function id(str) {\n+\treturn (''+str).replace(/\\W+/g, '_');", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTc3Mjk5Ng=="}, "originalCommit": {"oid": "0956410f1a2d928ceffae733e482fca76a17d772"}, "originalPosition": 2}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1OTczMjY4OnYy", "diffSide": "RIGHT", "path": "war/.jshintrc.json", "isResolved": true, "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QxMjozMTo1OFrOFc1aCQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQxNTo1MjozNFrOFf_GTA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTc3OTQ2NQ==", "bodyText": "While we are piling on wishlist items, can you switch to eslint because... well i have actually no solid reasons, i just like it a lot better and it has way more configuration options. https://github.com/jenkins-infra/plugin-site/blob/master/.eslintrc.js as an example", "url": "https://github.com/jenkinsci/jenkins/pull/4425#discussion_r365779465", "createdAt": "2020-01-13T12:31:58Z", "author": {"login": "halkeye"}, "path": "war/.jshintrc.json", "diffHunk": "@@ -0,0 +1,11 @@\n+{", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "296d38b3501bbcc987657105cf5f06306ea13ab0"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTgyMTQyMA==", "bodyText": "I'd also suggest going for eslint. My concern would be that there would suddenly be 100s of new lint warnings. From what I see I would also need to disable all styling rules.\nDo you think there would be any problem in this regard?", "url": "https://github.com/jenkinsci/jenkins/pull/4425#discussion_r365821420", "createdAt": "2020-01-13T14:07:18Z", "author": {"login": "fqueiruga"}, "path": "war/.jshintrc.json", "diffHunk": "@@ -0,0 +1,11 @@\n+{", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTc3OTQ2NQ=="}, "originalCommit": {"oid": "296d38b3501bbcc987657105cf5f06306ea13ab0"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTkzMDIwOQ==", "bodyText": "Just set everything to warn to start. When fix the warnings in a future pr", "url": "https://github.com/jenkinsci/jenkins/pull/4425#discussion_r365930209", "createdAt": "2020-01-13T17:28:38Z", "author": {"login": "halkeye"}, "path": "war/.jshintrc.json", "diffHunk": "@@ -0,0 +1,11 @@\n+{", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTc3OTQ2NQ=="}, "originalCommit": {"oid": "296d38b3501bbcc987657105cf5f06306ea13ab0"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzkxMTk4NQ==", "bodyText": "@halkeye is there any eslint preset you recommend that can be good fit this project. I have only used the react-app one for the past year or so (which I think it's quite good).", "url": "https://github.com/jenkinsci/jenkins/pull/4425#discussion_r367911985", "createdAt": "2020-01-17T12:28:03Z", "author": {"login": "fqueiruga"}, "path": "war/.jshintrc.json", "diffHunk": "@@ -0,0 +1,11 @@\n+{", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTc3OTQ2NQ=="}, "originalCommit": {"oid": "296d38b3501bbcc987657105cf5f06306ea13ab0"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODAzNjA5NQ==", "bodyText": "I don't have strong opinions about it. But if you run eslint --init you can infer all the rules based on the current codebase, so would allow things to be linted without making changes", "url": "https://github.com/jenkinsci/jenkins/pull/4425#discussion_r368036095", "createdAt": "2020-01-17T16:53:02Z", "author": {"login": "halkeye"}, "path": "war/.jshintrc.json", "diffHunk": "@@ -0,0 +1,11 @@\n+{", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTc3OTQ2NQ=="}, "originalCommit": {"oid": "296d38b3501bbcc987657105cf5f06306ea13ab0"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTA4MDk2OA==", "bodyText": "or like activating sonar on legacy code: limit the number of rules you activate, do the fixes, then activate new rules and so on.", "url": "https://github.com/jenkinsci/jenkins/pull/4425#discussion_r369080968", "createdAt": "2020-01-21T15:47:51Z", "author": {"login": "alecharp"}, "path": "war/.jshintrc.json", "diffHunk": "@@ -0,0 +1,11 @@\n+{", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTc3OTQ2NQ=="}, "originalCommit": {"oid": "296d38b3501bbcc987657105cf5f06306ea13ab0"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTA4Mzk4MA==", "bodyText": "I have enabled eslint and stylelint with default configs", "url": "https://github.com/jenkinsci/jenkins/pull/4425#discussion_r369083980", "createdAt": "2020-01-21T15:52:34Z", "author": {"login": "fqueiruga"}, "path": "war/.jshintrc.json", "diffHunk": "@@ -0,0 +1,11 @@\n+{", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTc3OTQ2NQ=="}, "originalCommit": {"oid": "296d38b3501bbcc987657105cf5f06306ea13ab0"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1OTczNDE1OnYy", "diffSide": "RIGHT", "path": "war/.babelrc", "isResolved": true, "comments": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QxMjozMjozNVrOFc1a4g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQxNTowMzozNlrOFgfX2w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTc3OTY4Mg==", "bodyText": "if your going to use env (which is +1 from me) make sure you have browserlist defined, i'm pretty sure core needs to support at least ie11", "url": "https://github.com/jenkinsci/jenkins/pull/4425#discussion_r365779682", "createdAt": "2020-01-13T12:32:35Z", "author": {"login": "halkeye"}, "path": "war/.babelrc", "diffHunk": "@@ -0,0 +1,3 @@\n+{\n+  \"presets\": [\"@babel/preset-env\"],", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "296d38b3501bbcc987657105cf5f06306ea13ab0"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTgyMTk0Nw==", "bodyText": "Will do! Do you think I should make the move to env more visible? I was thinking that it could deserve it's own changelog entry.", "url": "https://github.com/jenkinsci/jenkins/pull/4425#discussion_r365821947", "createdAt": "2020-01-13T14:08:24Z", "author": {"login": "fqueiruga"}, "path": "war/.babelrc", "diffHunk": "@@ -0,0 +1,3 @@\n+{\n+  \"presets\": [\"@babel/preset-env\"],", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTc3OTY4Mg=="}, "originalCommit": {"oid": "296d38b3501bbcc987657105cf5f06306ea13ab0"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTkzMjcwMQ==", "bodyText": "I kinda want to say delay using babel for a future pr,\nScratch that.\nhttps://jenkins.io/doc/administration/requirements/web-browsers/ needs to be followed. After that your probably fine. So if your browser list matches up then probably no real concern.\nIt could potentially break JavaScript for older browsers, but since we don't say we support them, and people using ie10 are unlikely to upgrade Jenkins, I think your fine, but a note certainly wouldn't hurt\nCc @oleg-negashev who updated the list last", "url": "https://github.com/jenkinsci/jenkins/pull/4425#discussion_r365932701", "createdAt": "2020-01-13T17:33:53Z", "author": {"login": "halkeye"}, "path": "war/.babelrc", "diffHunk": "@@ -0,0 +1,3 @@\n+{\n+  \"presets\": [\"@babel/preset-env\"],", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTc3OTY4Mg=="}, "originalCommit": {"oid": "296d38b3501bbcc987657105cf5f06306ea13ab0"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjMxNTU2MA==", "bodyText": "+1 for following the policy or noting a breaking change if needed", "url": "https://github.com/jenkinsci/jenkins/pull/4425#discussion_r366315560", "createdAt": "2020-01-14T12:40:43Z", "author": {"login": "oleg-nenashev"}, "path": "war/.babelrc", "diffHunk": "@@ -0,0 +1,3 @@\n+{\n+  \"presets\": [\"@babel/preset-env\"],", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTc3OTY4Mg=="}, "originalCommit": {"oid": "296d38b3501bbcc987657105cf5f06306ea13ab0"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzkxNjI1Nw==", "bodyText": "I'll write an explanation about the change to babel. Is there any place other than the JIRA ticket and changelog entry where I would need to write about it (or where can I consult the policy).\nFWIW, I have tested on a IE VM and it seems to work on IE10, but I agree a disclaimer can be good just in case.", "url": "https://github.com/jenkinsci/jenkins/pull/4425#discussion_r367916257", "createdAt": "2020-01-17T12:40:19Z", "author": {"login": "fqueiruga"}, "path": "war/.babelrc", "diffHunk": "@@ -0,0 +1,3 @@\n+{\n+  \"presets\": [\"@babel/preset-env\"],", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTc3OTY4Mg=="}, "originalCommit": {"oid": "296d38b3501bbcc987657105cf5f06306ea13ab0"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzkzMjY0NQ==", "bodyText": "possibly here:\nhttps://jenkins.io/doc/developer/building/\nor somewhere near here:\nhttps://jenkins.io/doc/developer/views/\nBut I can't see any existing docs", "url": "https://github.com/jenkinsci/jenkins/pull/4425#discussion_r367932645", "createdAt": "2020-01-17T13:24:10Z", "author": {"login": "timja"}, "path": "war/.babelrc", "diffHunk": "@@ -0,0 +1,3 @@\n+{\n+  \"presets\": [\"@babel/preset-env\"],", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTc3OTY4Mg=="}, "originalCommit": {"oid": "296d38b3501bbcc987657105cf5f06306ea13ab0"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTA0MjkyMQ==", "bodyText": "Some plugins include frontend dev instructions on the package README (https://github.com/jenkinsci/pipeline-stage-view-plugin/tree/master/ui).\nI guess this is not the way that's done on Jenkins core. Are doc pages on jenkins.io preferred?\nIf this is this the case, I suppose I'd need to create a PR on https://github.com/jenkins-infra/jenkins.io right?", "url": "https://github.com/jenkinsci/jenkins/pull/4425#discussion_r369042921", "createdAt": "2020-01-21T14:46:27Z", "author": {"login": "fqueiruga"}, "path": "war/.babelrc", "diffHunk": "@@ -0,0 +1,3 @@\n+{\n+  \"presets\": [\"@babel/preset-env\"],", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTc3OTY4Mg=="}, "originalCommit": {"oid": "296d38b3501bbcc987657105cf5f06306ea13ab0"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTA0NTAyMA==", "bodyText": "jenkins.io would be preferred for docs that affect multiple plugins, developer experience, and guides on how to do things.\nif it's very specific to core, it could just be documented in this repo\nand yes a PR to that repo if going to jenkins.io", "url": "https://github.com/jenkinsci/jenkins/pull/4425#discussion_r369045020", "createdAt": "2020-01-21T14:49:59Z", "author": {"login": "timja"}, "path": "war/.babelrc", "diffHunk": "@@ -0,0 +1,3 @@\n+{\n+  \"presets\": [\"@babel/preset-env\"],", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTc3OTY4Mg=="}, "originalCommit": {"oid": "296d38b3501bbcc987657105cf5f06306ea13ab0"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTE0MDkyNw==", "bodyText": "I have updated the CONTRIBUTING.md with instructions specific to frontend work: b58ea61", "url": "https://github.com/jenkinsci/jenkins/pull/4425#discussion_r369140927", "createdAt": "2020-01-21T17:30:16Z", "author": {"login": "fqueiruga"}, "path": "war/.babelrc", "diffHunk": "@@ -0,0 +1,3 @@\n+{\n+  \"presets\": [\"@babel/preset-env\"],", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTc3OTY4Mg=="}, "originalCommit": {"oid": "296d38b3501bbcc987657105cf5f06306ea13ab0"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTYxMjc2Mw==", "bodyText": "Resolving this one, I'll send a PR to the jenkins.io repo if more docs are needed.", "url": "https://github.com/jenkinsci/jenkins/pull/4425#discussion_r369612763", "createdAt": "2020-01-22T15:03:36Z", "author": {"login": "fqueiruga"}, "path": "war/.babelrc", "diffHunk": "@@ -0,0 +1,3 @@\n+{\n+  \"presets\": [\"@babel/preset-env\"],", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTc3OTY4Mg=="}, "originalCommit": {"oid": "296d38b3501bbcc987657105cf5f06306ea13ab0"}, "originalPosition": 2}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI2NzAwNjkxOnYy", "diffSide": "RIGHT", "path": "war/.jshintrc.json", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQxNDo0ODozMFrOFd6wkw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QxMjo0Mjo0NVrOFe34bg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjkxNTczMQ==", "bodyText": "I guess it can probably be found easily in the documentation, but maybe a comment explaining what each option means would be helpful. This is a quite big project and not everybody could be knowledgeable about this.", "url": "https://github.com/jenkinsci/jenkins/pull/4425#discussion_r366915731", "createdAt": "2020-01-15T14:48:30Z", "author": {"login": "varyvol"}, "path": "war/.jshintrc.json", "diffHunk": "@@ -0,0 +1,11 @@\n+{\n+  \"curly\": true,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "965dbafd6376f62588f2bae871193863069254b1"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjkzNjc2MQ==", "bodyText": "this is a json file, is it possible to add comments?", "url": "https://github.com/jenkinsci/jenkins/pull/4425#discussion_r366936761", "createdAt": "2020-01-15T15:24:38Z", "author": {"login": "timja"}, "path": "war/.jshintrc.json", "diffHunk": "@@ -0,0 +1,11 @@\n+{\n+  \"curly\": true,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjkxNTczMQ=="}, "originalCommit": {"oid": "965dbafd6376f62588f2bae871193863069254b1"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzkxNzE2Ng==", "bodyText": "You cannot leave comments in these files.\nThis config file belongs to jshint, it's the default one. I'll remove it as I'll try to replace jshint with eslint. On eslint, I'm partial too looking for a standard config, so that developers don't need to worry about the reasoning for each specific rule.", "url": "https://github.com/jenkinsci/jenkins/pull/4425#discussion_r367917166", "createdAt": "2020-01-17T12:42:45Z", "author": {"login": "fqueiruga"}, "path": "war/.jshintrc.json", "diffHunk": "@@ -0,0 +1,11 @@\n+{\n+  \"curly\": true,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjkxNTczMQ=="}, "originalCommit": {"oid": "965dbafd6376f62588f2bae871193863069254b1"}, "originalPosition": 2}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI2NzAyMDcxOnYy", "diffSide": "RIGHT", "path": "war/src/main/js/handlebars-helpers/ifneq.js", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQxNDo1MjoxMVrOFd65Gw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQxNTo1MzowOVrOFf_HzQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjkxNzkxNQ==", "bodyText": "Why are these functions necessary?", "url": "https://github.com/jenkinsci/jenkins/pull/4425#discussion_r366917915", "createdAt": "2020-01-15T14:52:11Z", "author": {"login": "varyvol"}, "path": "war/src/main/js/handlebars-helpers/ifneq.js", "diffHunk": "@@ -0,0 +1,5 @@\n+export default function ifneq(o1, o2, options) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "965dbafd6376f62588f2bae871193863069254b1"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjkyMDg2Mg==", "bodyText": "I mean: they were in a another file before. But do you think there could be places where they are used from outside?", "url": "https://github.com/jenkinsci/jenkins/pull/4425#discussion_r366920862", "createdAt": "2020-01-15T14:57:24Z", "author": {"login": "varyvol"}, "path": "war/src/main/js/handlebars-helpers/ifneq.js", "diffHunk": "@@ -0,0 +1,5 @@\n+export default function ifneq(o1, o2, options) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjkxNzkxNQ=="}, "originalCommit": {"oid": "965dbafd6376f62588f2bae871193863069254b1"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzkxODczNw==", "bodyText": "Handlebars templates are compiled and processed by webpack. In order to do this, Handlebars needs to know which helpers are available at compile time. That's why I extracted as many helpers as possible to this dir. Note that they can still be\nEvery helper that is registered at runtime must be listed on the webpack.config.js file. Only a small set of helpers are still registered this way, and the reason for that is that they break when extracted (due to their use of closure scope).", "url": "https://github.com/jenkinsci/jenkins/pull/4425#discussion_r367918737", "createdAt": "2020-01-17T12:47:21Z", "author": {"login": "fqueiruga"}, "path": "war/src/main/js/handlebars-helpers/ifneq.js", "diffHunk": "@@ -0,0 +1,5 @@\n+export default function ifneq(o1, o2, options) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjkxNzkxNQ=="}, "originalCommit": {"oid": "965dbafd6376f62588f2bae871193863069254b1"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTA4NDM2NQ==", "bodyText": "Resolving this one. Feel free to unresolve it if you think further discussion is needed.", "url": "https://github.com/jenkinsci/jenkins/pull/4425#discussion_r369084365", "createdAt": "2020-01-21T15:53:09Z", "author": {"login": "fqueiruga"}, "path": "war/src/main/js/handlebars-helpers/ifneq.js", "diffHunk": "@@ -0,0 +1,5 @@\n+export default function ifneq(o1, o2, options) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjkxNzkxNQ=="}, "originalCommit": {"oid": "965dbafd6376f62588f2bae871193863069254b1"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI2NzAzMDI0OnYy", "diffSide": "RIGHT", "path": "war/src/test/js/widgets/config/mocks.js", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQxNDo1NDo0M1rOFd6-5Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QxNDo0OTo1M1rOFe7TAA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjkxOTM5Nw==", "bodyText": "Is this comment still valid?", "url": "https://github.com/jenkinsci/jenkins/pull/4425#discussion_r366919397", "createdAt": "2020-01-15T14:54:43Z", "author": {"login": "varyvol"}, "path": "war/src/test/js/widgets/config/mocks.js", "diffHunk": "@@ -1,17 +1,18 @@\n+// TODO: remove or do something about this when reenabling the unit tests", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "965dbafd6376f62588f2bae871193863069254b1"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzk3MzEyMA==", "bodyText": "Not anymore :D good catch, I'll remove it", "url": "https://github.com/jenkinsci/jenkins/pull/4425#discussion_r367973120", "createdAt": "2020-01-17T14:49:53Z", "author": {"login": "fqueiruga"}, "path": "war/src/test/js/widgets/config/mocks.js", "diffHunk": "@@ -1,17 +1,18 @@\n+// TODO: remove or do something about this when reenabling the unit tests", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjkxOTM5Nw=="}, "originalCommit": {"oid": "965dbafd6376f62588f2bae871193863069254b1"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI2NzAzNjY3OnYy", "diffSide": "RIGHT", "path": "war/yarn.lock", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQxNDo1Njo0OFrOFd7DLQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQwODo1NTo0NFrOFfXD3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjkyMDQ5Mw==", "bodyText": "Is this file necessary? It seems like something automatically generated?", "url": "https://github.com/jenkinsci/jenkins/pull/4425#discussion_r366920493", "createdAt": "2020-01-15T14:56:48Z", "author": {"login": "varyvol"}, "path": "war/yarn.lock", "diffHunk": "@@ -2,31 +2,904 @@\n # yarn lockfile v1\n \n \n+\"@babel/cli@^7.7.4\":", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "965dbafd6376f62588f2bae871193863069254b1"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzkxOTE2NQ==", "bodyText": "This file is autogenerated, so I guess yarn considers it as a needed dependency.", "url": "https://github.com/jenkinsci/jenkins/pull/4425#discussion_r367919165", "createdAt": "2020-01-17T12:48:33Z", "author": {"login": "fqueiruga"}, "path": "war/yarn.lock", "diffHunk": "@@ -2,31 +2,904 @@\n # yarn lockfile v1\n \n \n+\"@babel/cli@^7.7.4\":", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjkyMDQ5Mw=="}, "originalCommit": {"oid": "965dbafd6376f62588f2bae871193863069254b1"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzkyNjE1Mw==", "bodyText": "It\u2019s a lock file for repeatable builds and should be checked in", "url": "https://github.com/jenkinsci/jenkins/pull/4425#discussion_r367926153", "createdAt": "2020-01-17T13:07:31Z", "author": {"login": "timja"}, "path": "war/yarn.lock", "diffHunk": "@@ -2,31 +2,904 @@\n # yarn lockfile v1\n \n \n+\"@babel/cli@^7.7.4\":", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjkyMDQ5Mw=="}, "originalCommit": {"oid": "965dbafd6376f62588f2bae871193863069254b1"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODQyNzk5Nw==", "bodyText": "I'm not sure of understanding. It's autogenerated but it needs to be checked in?", "url": "https://github.com/jenkinsci/jenkins/pull/4425#discussion_r368427997", "createdAt": "2020-01-20T08:55:44Z", "author": {"login": "varyvol"}, "path": "war/yarn.lock", "diffHunk": "@@ -2,31 +2,904 @@\n # yarn lockfile v1\n \n \n+\"@babel/cli@^7.7.4\":", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjkyMDQ5Mw=="}, "originalCommit": {"oid": "965dbafd6376f62588f2bae871193863069254b1"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3NzUzMzQ4OnYy", "diffSide": "RIGHT", "path": "core/src/main/resources/lib/layout/html.jelly", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQxMzowMTowOVrOFfdndg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQxNzowNToxOVrOFgBzXA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODUzNTQxNA==", "bodyText": "Maybe make clear that this file is generated during the build.", "url": "https://github.com/jenkinsci/jenkins/pull/4425#discussion_r368535414", "createdAt": "2020-01-20T13:01:09Z", "author": {"login": "uhafner"}, "path": "core/src/main/resources/lib/layout/html.jelly", "diffHunk": "@@ -161,6 +161,8 @@ THE SOFTWARE.\n       <script src=\"${resURL}/scripts/msie.js\" type=\"text/javascript\"/>\n     </j:if>\n \n+    <!-- Load vendor scripts common to all JS modules -->", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9c1ed1958cb51b34751b0cd46930cf14e3974dfb"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTAzMDU0OQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                <!-- Load vendor scripts common to all JS modules -->\n          \n          \n            \n                <!-- Load bundled vendor scripts common to all JS modules -->", "url": "https://github.com/jenkinsci/jenkins/pull/4425#discussion_r369030549", "createdAt": "2020-01-21T14:26:08Z", "author": {"login": "alecharp"}, "path": "core/src/main/resources/lib/layout/html.jelly", "diffHunk": "@@ -161,6 +161,8 @@ THE SOFTWARE.\n       <script src=\"${resURL}/scripts/msie.js\" type=\"text/javascript\"/>\n     </j:if>\n \n+    <!-- Load vendor scripts common to all JS modules -->", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODUzNTQxNA=="}, "originalCommit": {"oid": "9c1ed1958cb51b34751b0cd46930cf14e3974dfb"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTEyODI4NA==", "bodyText": "I have updated the comment on 99832f1 .\nMarking it as resolved. Feel free to unresolve it if you'd like further change!", "url": "https://github.com/jenkinsci/jenkins/pull/4425#discussion_r369128284", "createdAt": "2020-01-21T17:05:19Z", "author": {"login": "fqueiruga"}, "path": "core/src/main/resources/lib/layout/html.jelly", "diffHunk": "@@ -161,6 +161,8 @@ THE SOFTWARE.\n       <script src=\"${resURL}/scripts/msie.js\" type=\"text/javascript\"/>\n     </j:if>\n \n+    <!-- Load vendor scripts common to all JS modules -->", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODUzNTQxNA=="}, "originalCommit": {"oid": "9c1ed1958cb51b34751b0cd46930cf14e3974dfb"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3NzU4MDcxOnYy", "diffSide": "LEFT", "path": "war/src/main/js/add-item.js", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQxMzoxOTowNlrOFfeD_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQxMDoxOToxM1rOFgW99g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODU0MjcxOQ==", "bodyText": "Do plugins that depend on jquery-detached need updates as well?", "url": "https://github.com/jenkinsci/jenkins/pull/4425#discussion_r368542719", "createdAt": "2020-01-20T13:19:06Z", "author": {"login": "uhafner"}, "path": "war/src/main/js/add-item.js", "diffHunk": "@@ -1,5 +1,4 @@\n-// Initialize all modules by requiring them. Also makes sure they get bundled (see gulpfile.js).\n-var $ = require('jquery-detached').getJQuery();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9c1ed1958cb51b34751b0cd46930cf14e3974dfb"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTA4NTcwNQ==", "bodyText": "They don't. The code still works for plugins that use js-builder, js-modules and jquery-detached. With this update, Jenkins core just bundles its own dependencies on the vendors.js file. Plugins using the older system still work as expected.\nFWIW, I have manually verified that the pipeline stageview and warnings-ng plugins still work.", "url": "https://github.com/jenkinsci/jenkins/pull/4425#discussion_r369085705", "createdAt": "2020-01-21T15:55:06Z", "author": {"login": "fqueiruga"}, "path": "war/src/main/js/add-item.js", "diffHunk": "@@ -1,5 +1,4 @@\n-// Initialize all modules by requiring them. Also makes sure they get bundled (see gulpfile.js).\n-var $ = require('jquery-detached').getJQuery();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODU0MjcxOQ=="}, "originalCommit": {"oid": "9c1ed1958cb51b34751b0cd46930cf14e3974dfb"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTIyNDUyMQ==", "bodyText": "Yes, I also checked that my plugin is still working \ud83c\udf89.", "url": "https://github.com/jenkinsci/jenkins/pull/4425#discussion_r369224521", "createdAt": "2020-01-21T20:24:42Z", "author": {"login": "uhafner"}, "path": "war/src/main/js/add-item.js", "diffHunk": "@@ -1,5 +1,4 @@\n-// Initialize all modules by requiring them. Also makes sure they get bundled (see gulpfile.js).\n-var $ = require('jquery-detached').getJQuery();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODU0MjcxOQ=="}, "originalCommit": {"oid": "9c1ed1958cb51b34751b0cd46930cf14e3974dfb"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTQ3NTA2Mg==", "bodyText": "Closing this one then!", "url": "https://github.com/jenkinsci/jenkins/pull/4425#discussion_r369475062", "createdAt": "2020-01-22T10:19:13Z", "author": {"login": "fqueiruga"}, "path": "war/src/main/js/add-item.js", "diffHunk": "@@ -1,5 +1,4 @@\n-// Initialize all modules by requiring them. Also makes sure they get bundled (see gulpfile.js).\n-var $ = require('jquery-detached').getJQuery();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODU0MjcxOQ=="}, "originalCommit": {"oid": "9c1ed1958cb51b34751b0cd46930cf14e3974dfb"}, "originalPosition": 2}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4MDc2NDQ0OnYy", "diffSide": "RIGHT", "path": "core/src/main/resources/lib/layout/layout.jelly", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQxNDoyODowOFrOFf754w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQxMDoyMTozOFrOFgXCrg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTAzMTY1MQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                <!-- Load vendor scripts common to all JS modules -->\n          \n          \n            \n                <!-- Load bundled vendor scripts common to all JS modules -->", "url": "https://github.com/jenkinsci/jenkins/pull/4425#discussion_r369031651", "createdAt": "2020-01-21T14:28:08Z", "author": {"login": "alecharp"}, "path": "core/src/main/resources/lib/layout/layout.jelly", "diffHunk": "@@ -173,6 +173,8 @@ THE SOFTWARE.\n       <script src=\"${resURL}/scripts/msie.js\" type=\"text/javascript\"/>\n     </j:if>\n \n+    <!-- Load vendor scripts common to all JS modules -->", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9c1ed1958cb51b34751b0cd46930cf14e3974dfb"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTQ3NjI3MA==", "bodyText": "I have added this clarification as per Ulli's feedback 99832f1", "url": "https://github.com/jenkinsci/jenkins/pull/4425#discussion_r369476270", "createdAt": "2020-01-22T10:21:38Z", "author": {"login": "fqueiruga"}, "path": "core/src/main/resources/lib/layout/layout.jelly", "diffHunk": "@@ -173,6 +173,8 @@ THE SOFTWARE.\n       <script src=\"${resURL}/scripts/msie.js\" type=\"text/javascript\"/>\n     </j:if>\n \n+    <!-- Load vendor scripts common to all JS modules -->", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTAzMTY1MQ=="}, "originalCommit": {"oid": "9c1ed1958cb51b34751b0cd46930cf14e3974dfb"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4MTE0NzA3OnYy", "diffSide": "RIGHT", "path": "war/pom.xml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQxNjowNToxMlrOFf_l0Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQxMDoyMDo0M1rOFgXAyg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTA5MjA0OQ==", "bodyText": "Based on nodejs.org, 12.14.1 is the current recommended version.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                <node.version>12.14.0</node.version>\n          \n          \n            \n                <node.version>12.14.1</node.version>", "url": "https://github.com/jenkinsci/jenkins/pull/4425#discussion_r369092049", "createdAt": "2020-01-21T16:05:12Z", "author": {"login": "alecharp"}, "path": "war/pom.xml", "diffHunk": "@@ -41,8 +41,8 @@ THE SOFTWARE.\n     <JENKINS_HOME>${basedir}/work</JENKINS_HOME>\n     <contextPath>/jenkins</contextPath><!-- context path during test -->\n     <port>8080</port><!-- HTTP listener port -->\n-    <node.version>6.10.2</node.version>\n-    <yarn.version>0.24.5</yarn.version>\n+    <node.version>12.14.0</node.version>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1887edbd449f039ee8a6c08a72ee0240ff01b39a"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTQ3NTc4Ng==", "bodyText": "Done", "url": "https://github.com/jenkinsci/jenkins/pull/4425#discussion_r369475786", "createdAt": "2020-01-22T10:20:43Z", "author": {"login": "fqueiruga"}, "path": "war/pom.xml", "diffHunk": "@@ -41,8 +41,8 @@ THE SOFTWARE.\n     <JENKINS_HOME>${basedir}/work</JENKINS_HOME>\n     <contextPath>/jenkins</contextPath><!-- context path during test -->\n     <port>8080</port><!-- HTTP listener port -->\n-    <node.version>6.10.2</node.version>\n-    <yarn.version>0.24.5</yarn.version>\n+    <node.version>12.14.0</node.version>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTA5MjA0OQ=="}, "originalCommit": {"oid": "1887edbd449f039ee8a6c08a72ee0240ff01b39a"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4MTE4MDUyOnYy", "diffSide": "RIGHT", "path": "war/.eslintrc.js", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQxNjoxNDoxOFrOFf_7DQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQxNjoxNDoxOFrOFf_7DQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTA5NzQ4NQ==", "bodyText": "this is good. We can have a round of fixing issues / warning then add a new rules, etc. I would suggest to look at having the same syntax for function definition. We have a mix of var foo = function() {} and function foo() {}. We can also tend to have the same declaration style for exports.", "url": "https://github.com/jenkinsci/jenkins/pull/4425#discussion_r369097485", "createdAt": "2020-01-21T16:14:18Z", "author": {"login": "alecharp"}, "path": "war/.eslintrc.js", "diffHunk": "@@ -0,0 +1,35 @@\n+module.exports = {\n+    env: {\n+        browser: true,\n+        es6: true\n+    },\n+    // Uses eslint default ruleset\n+    extends: \"eslint:recommended\",\n+    plugins: [\n+        // Keeps the default level to warn to avoid breaking the current\n+        // CI build environment\n+        \"only-warn\"\n+    ],\n+    parserOptions: {\n+        ecmaVersion: 2018,\n+        sourceType: \"module\"\n+    },\n+    rules: {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1887edbd449f039ee8a6c08a72ee0240ff01b39a"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4MTE5MjkxOnYy", "diffSide": "RIGHT", "path": "war/src/main/js/pluginSetupWizardGui.js", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQxNjoxNzozNFrOFgACtA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQxNTowNDoxMFrOFgfZLw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTA5OTQ0NA==", "bodyText": "couldn't we have use\nexport default { createPluginSetupWizard };\n\nand have the same result?", "url": "https://github.com/jenkinsci/jenkins/pull/4425#discussion_r369099444", "createdAt": "2020-01-21T16:17:34Z", "author": {"login": "alecharp"}, "path": "war/src/main/js/pluginSetupWizardGui.js", "diffHunk": "@@ -1266,5 +1266,7 @@ var createPluginSetupWizard = function(appendTarget) {\n \t}));\n };\n \n+var exports = {};\n // export wizard creation method\n exports.init = createPluginSetupWizard;\n+export default exports;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1887edbd449f039ee8a6c08a72ee0240ff01b39a"}, "originalPosition": 114}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTQ3NzE2MA==", "bodyText": "I guess I can change it to\nexport default { init: createPluginSetupWizard };", "url": "https://github.com/jenkinsci/jenkins/pull/4425#discussion_r369477160", "createdAt": "2020-01-22T10:23:29Z", "author": {"login": "fqueiruga"}, "path": "war/src/main/js/pluginSetupWizardGui.js", "diffHunk": "@@ -1266,5 +1266,7 @@ var createPluginSetupWizard = function(appendTarget) {\n \t}));\n };\n \n+var exports = {};\n // export wizard creation method\n exports.init = createPluginSetupWizard;\n+export default exports;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTA5OTQ0NA=="}, "originalCommit": {"oid": "1887edbd449f039ee8a6c08a72ee0240ff01b39a"}, "originalPosition": 114}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTU2MzAwMQ==", "bodyText": "yes correct. But it's good as it is. We will in the future I guess revisit some of the JS / UI code.", "url": "https://github.com/jenkinsci/jenkins/pull/4425#discussion_r369563001", "createdAt": "2020-01-22T13:39:03Z", "author": {"login": "alecharp"}, "path": "war/src/main/js/pluginSetupWizardGui.js", "diffHunk": "@@ -1266,5 +1266,7 @@ var createPluginSetupWizard = function(appendTarget) {\n \t}));\n };\n \n+var exports = {};\n // export wizard creation method\n exports.init = createPluginSetupWizard;\n+export default exports;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTA5OTQ0NA=="}, "originalCommit": {"oid": "1887edbd449f039ee8a6c08a72ee0240ff01b39a"}, "originalPosition": 114}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTYxMzEwMw==", "bodyText": "Done!", "url": "https://github.com/jenkinsci/jenkins/pull/4425#discussion_r369613103", "createdAt": "2020-01-22T15:04:10Z", "author": {"login": "fqueiruga"}, "path": "war/src/main/js/pluginSetupWizardGui.js", "diffHunk": "@@ -1266,5 +1266,7 @@ var createPluginSetupWizard = function(appendTarget) {\n \t}));\n };\n \n+var exports = {};\n // export wizard creation method\n exports.init = createPluginSetupWizard;\n+export default exports;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTA5OTQ0NA=="}, "originalCommit": {"oid": "1887edbd449f039ee8a6c08a72ee0240ff01b39a"}, "originalPosition": 114}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4MTY1MzE2OnYy", "diffSide": "RIGHT", "path": "CONTRIBUTING.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQxODozNjo1NlrOFgEiUw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQxODozNjo1NlrOFgEiUw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTE3MzA3NQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change", "url": "https://github.com/jenkinsci/jenkins/pull/4425#discussion_r369173075", "createdAt": "2020-01-21T18:36:56Z", "author": {"login": "alecharp"}, "path": "CONTRIBUTING.md", "diffHunk": "@@ -49,6 +51,21 @@ mvn -pl war jetty:run\n \n (Beware that `maven-plugin` builds will not work in this mode due to class loading conflicts.)\n \n+### Building frontend assets\n+\n+To work on the `war` module frontend assets two processes are needed at the same time:\n+\n+On one terminal, start a development server that will not process frontend assets:\n+```sh\n+mvn -pl war jetty:run -Dskip.yarn\n+```\n+\n+On another terminal, move to the war folder and start a [webpack](https://webpack.js.org/) dev server:\n+```sh\n+cd war; yarn start\n+```\n+\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b58ea61223a16868a263ce06f0c76dbc2d7686c0"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4MjU4NDUxOnYy", "diffSide": "RIGHT", "path": "war/src/main/js/api/securityConfig.js", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQwMDo0NzoxM1rOFgNjTg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQxNTowMjo0M1rOFgfVjw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTMyMDc4Mg==", "bodyText": "for consistency can you move the two requires up to import at the top?", "url": "https://github.com/jenkinsci/jenkins/pull/4425#discussion_r369320782", "createdAt": "2020-01-22T00:47:13Z", "author": {"login": "halkeye"}, "path": "war/src/main/js/api/securityConfig.js", "diffHunk": "@@ -1,13 +1,12 @@\n /**\n  * Provides a wrapper to interact with the security configuration\n  */\n-\n-var jenkins = require('../util/jenkins');\n+import jenkins from '../util/jenkins';", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b58ea61223a16868a263ce06f0c76dbc2d7686c0"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTYxMjE3NQ==", "bodyText": "I have done it in this commit: 6cccb69\nWhat do you think of the result?", "url": "https://github.com/jenkinsci/jenkins/pull/4425#discussion_r369612175", "createdAt": "2020-01-22T15:02:43Z", "author": {"login": "fqueiruga"}, "path": "war/src/main/js/api/securityConfig.js", "diffHunk": "@@ -1,13 +1,12 @@\n /**\n  * Provides a wrapper to interact with the security configuration\n  */\n-\n-var jenkins = require('../util/jenkins');\n+import jenkins from '../util/jenkins';", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTMyMDc4Mg=="}, "originalCommit": {"oid": "b58ea61223a16868a263ce06f0c76dbc2d7686c0"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4NDQzODQxOnYy", "diffSide": "RIGHT", "path": "war/src/test/js/widgets/config/tabbar.spec.js", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQxNDo1NzoxNFrOFgfIGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQxNTowMToxNFrOFgfR7A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTYwODcyOQ==", "bodyText": "did you mean not deterministic?\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                // This test may be deterministic, as it breaks if jest.resetModules is called on afterEach\n          \n          \n            \n                // This test may not be deterministic, as it breaks if jest.resetModules is called on afterEach", "url": "https://github.com/jenkinsci/jenkins/pull/4425#discussion_r369608729", "createdAt": "2020-01-22T14:57:14Z", "author": {"login": "timja"}, "path": "war/src/test/js/widgets/config/tabbar.spec.js", "diffHunk": "@@ -1,31 +1,79 @@\n-var jsTest = require(\"jenkins-js-test\");\n-\n-require('./mocks');\n+import fs from 'fs';\n+import path from 'path';\n+import $ from 'jquery';\n+import jsTest from '@jenkins-cd/js-test';\n+import { mockBehaviorShim } from './mocks';\n+\n+const htmlConfigTabbedContent = fs.readFileSync(\n+    path.resolve(__dirname, './freestyle-config-tabbed.html'),\n+    'utf8'\n+);\n+\n+function getConfigTabbar() {\n+    // eslint-disable-next-line no-undef\n+    return require('../../../../main/js/config-tabbar');\n+}\n+\n+function getConfigTabbarWidget() {\n+    // eslint-disable-next-line no-undef\n+    return require('../../../../main/js/widgets/config/tabbar');\n+}\n \n describe(\"tabbar-spec tests\", function () {\n+    // Need to mock the utils/page module because we will hijack the scroll events\n+    const mockPageUtils = jest.requireActual('../../../../main/js/util/page');\n+\n+    beforeEach(() => {\n+        mockBehaviorShim();\n+\n+        jest.mock('../../../../main/js/util/page', () => ({\n+            __esModule: true,\n+            ...mockPageUtils,\n+            default: {\n+                ...mockPageUtils.default,\n+                fireBottomStickerAdjustEvent: jest.fn(),\n+            }\n+        }));\n+    });\n+\n+    afterEach(() => {\n+        jest.resetAllMocks()\n+    });\n+\n+    afterAll(() => {\n+        // Should call resetModules on afterAll because the test \"test section activation\"\n+        // will break if resetModules is called on afterEach.\n+        jest.resetModules();\n+    });\n \n     it(\"- test section count\", function (done) {\n         jsTest.onPage(function() {\n-            var tabbars = jsTest.requireSrcModule('config-tabbar.js');\n-            var firstTableMetadata = tabbars.tabs[0];\n+            document.documentElement.innerHTML = htmlConfigTabbedContent;\n \n-            var jQD = require('jquery-detached');\n-            var $ = jQD.getJQuery();\n+            var tabbars = getConfigTabbar();\n+            var firstTableMetadata = tabbars.tabs[0];\n \n-            expect($('.section-header-row', firstTableMetadata.configTable).size()).toBe(4);\n+            expect(firstTableMetadata.configTable.find('.section-header-row').length).toBe(4);\n             expect(firstTableMetadata.sectionCount()).toBe(4);\n             expect($('.tabBar .tab').size()).toBe(4);\n \n-            expect(firstTableMetadata.sectionIds().toString())\n-                .toBe('config_general,config__advanced_project_options,config__build_triggers,config__build');\n+            expect(firstTableMetadata.sectionIds()).toEqual([\n+                'config_general',\n+                'config__advanced_project_options',\n+                'config__build_triggers',\n+                'config__build'\n+            ])\n \n             done();\n-        }, 'widgets/config/freestyle-config-tabbed.html');\n+        }, htmlConfigTabbedContent);\n     });\n \n+    // This test may be deterministic, as it breaks if jest.resetModules is called on afterEach", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b1dd0d294d77f2711112e68ada3a153f7e8fe415"}, "originalPosition": 82}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTYxMTI0NA==", "bodyText": "Yeah, exactly", "url": "https://github.com/jenkinsci/jenkins/pull/4425#discussion_r369611244", "createdAt": "2020-01-22T15:01:14Z", "author": {"login": "fqueiruga"}, "path": "war/src/test/js/widgets/config/tabbar.spec.js", "diffHunk": "@@ -1,31 +1,79 @@\n-var jsTest = require(\"jenkins-js-test\");\n-\n-require('./mocks');\n+import fs from 'fs';\n+import path from 'path';\n+import $ from 'jquery';\n+import jsTest from '@jenkins-cd/js-test';\n+import { mockBehaviorShim } from './mocks';\n+\n+const htmlConfigTabbedContent = fs.readFileSync(\n+    path.resolve(__dirname, './freestyle-config-tabbed.html'),\n+    'utf8'\n+);\n+\n+function getConfigTabbar() {\n+    // eslint-disable-next-line no-undef\n+    return require('../../../../main/js/config-tabbar');\n+}\n+\n+function getConfigTabbarWidget() {\n+    // eslint-disable-next-line no-undef\n+    return require('../../../../main/js/widgets/config/tabbar');\n+}\n \n describe(\"tabbar-spec tests\", function () {\n+    // Need to mock the utils/page module because we will hijack the scroll events\n+    const mockPageUtils = jest.requireActual('../../../../main/js/util/page');\n+\n+    beforeEach(() => {\n+        mockBehaviorShim();\n+\n+        jest.mock('../../../../main/js/util/page', () => ({\n+            __esModule: true,\n+            ...mockPageUtils,\n+            default: {\n+                ...mockPageUtils.default,\n+                fireBottomStickerAdjustEvent: jest.fn(),\n+            }\n+        }));\n+    });\n+\n+    afterEach(() => {\n+        jest.resetAllMocks()\n+    });\n+\n+    afterAll(() => {\n+        // Should call resetModules on afterAll because the test \"test section activation\"\n+        // will break if resetModules is called on afterEach.\n+        jest.resetModules();\n+    });\n \n     it(\"- test section count\", function (done) {\n         jsTest.onPage(function() {\n-            var tabbars = jsTest.requireSrcModule('config-tabbar.js');\n-            var firstTableMetadata = tabbars.tabs[0];\n+            document.documentElement.innerHTML = htmlConfigTabbedContent;\n \n-            var jQD = require('jquery-detached');\n-            var $ = jQD.getJQuery();\n+            var tabbars = getConfigTabbar();\n+            var firstTableMetadata = tabbars.tabs[0];\n \n-            expect($('.section-header-row', firstTableMetadata.configTable).size()).toBe(4);\n+            expect(firstTableMetadata.configTable.find('.section-header-row').length).toBe(4);\n             expect(firstTableMetadata.sectionCount()).toBe(4);\n             expect($('.tabBar .tab').size()).toBe(4);\n \n-            expect(firstTableMetadata.sectionIds().toString())\n-                .toBe('config_general,config__advanced_project_options,config__build_triggers,config__build');\n+            expect(firstTableMetadata.sectionIds()).toEqual([\n+                'config_general',\n+                'config__advanced_project_options',\n+                'config__build_triggers',\n+                'config__build'\n+            ])\n \n             done();\n-        }, 'widgets/config/freestyle-config-tabbed.html');\n+        }, htmlConfigTabbedContent);\n     });\n \n+    // This test may be deterministic, as it breaks if jest.resetModules is called on afterEach", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTYwODcyOQ=="}, "originalCommit": {"oid": "b1dd0d294d77f2711112e68ada3a153f7e8fe415"}, "originalPosition": 82}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 899, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}