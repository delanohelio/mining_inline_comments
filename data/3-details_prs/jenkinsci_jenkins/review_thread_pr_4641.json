{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAyMTM0Mjg5", "number": 4641, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMVQwOToxNDowNFrODw7eBg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMVQwOTo0NToyMlrODw7nPw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyNjMyNTgyOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/hudson/cli/CLICommand.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMVQwOToxNDowNFrOGELvVw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMVQxODowMjozM1rOGEO9vg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzAzOTgzMQ==", "bodyText": "Maybe in this case you could keep the errorMsg variable to avoid duplication. Also the code gets more readable with spaces around +.", "url": "https://github.com/jenkinsci/jenkins/pull/4641#discussion_r407039831", "createdAt": "2020-04-11T09:14:04Z", "author": {"login": "zbynek"}, "path": "core/src/main/java/hudson/cli/CLICommand.java", "diffHunk": "@@ -251,51 +251,31 @@ public int main(List<String> args, Locale locale, InputStream stdin, PrintStream\n                     new Object[] {getName(), args.size(), auth.getName(), res});\n             return res;\n         } catch (CmdLineException e) {\n-            LOGGER.log(Level.FINE, String.format(\"Failed call to CLI command %s, with %d arguments, as user %s.\",\n-                    getName(), args.size(), auth != null ? auth.getName() : \"<unknown>\"), e);\n-            stderr.println();\n-            stderr.println(\"ERROR: \" + e.getMessage());\n+            logAndPrintErrorWithDefaultValues(args, e);\n             printUsage(stderr, p);\n             return 2;\n         } catch (IllegalStateException e) {\n-            LOGGER.log(Level.FINE, String.format(\"Failed call to CLI command %s, with %d arguments, as user %s.\",\n-                    getName(), args.size(), auth != null ? auth.getName() : \"<unknown>\"), e);\n-            stderr.println();\n-            stderr.println(\"ERROR: \" + e.getMessage());\n+            logAndPrintErrorWithDefaultValues(args, e);\n             return 4;\n         } catch (IllegalArgumentException e) {\n-            LOGGER.log(Level.FINE, String.format(\"Failed call to CLI command %s, with %d arguments, as user %s.\",\n-                    getName(), args.size(), auth != null ? auth.getName() : \"<unknown>\"), e);\n-            stderr.println();\n-            stderr.println(\"ERROR: \" + e.getMessage());\n+            logAndPrintErrorWithDefaultValues(args, e);\n             return 3;\n         } catch (AbortException e) {\n-            LOGGER.log(Level.FINE, String.format(\"Failed call to CLI command %s, with %d arguments, as user %s.\",\n-                    getName(), args.size(), auth != null ? auth.getName() : \"<unknown>\"), e);\n-            // signals an error without stack trace\n-            stderr.println();\n-            stderr.println(\"ERROR: \" + e.getMessage());\n+            logAndPrintErrorWithDefaultValues(args, e);\n             return 5;\n         } catch (AccessDeniedException e) {\n-            LOGGER.log(Level.FINE, String.format(\"Failed call to CLI command %s, with %d arguments, as user %s.\",\n-                    getName(), args.size(), auth != null ? auth.getName() : \"<unknown>\"), e);\n-            stderr.println();\n-            stderr.println(\"ERROR: \" + e.getMessage());\n+            logAndPrintErrorWithDefaultValues(args, e);\n             return 6;\n         } catch (BadCredentialsException e) {\n             // to the caller, we can't reveal whether the user didn't exist or the password didn't match.\n             // do that to the server log instead\n             String id = UUID.randomUUID().toString();\n-            LOGGER.log(Level.INFO, \"CLI login attempt failed: \" + id, e);\n-            stderr.println();\n-            stderr.println(\"ERROR: Bad Credentials. Search the server log for \" + id + \" for more details.\");\n+            logAndPrintError(e, \"Bad Credentials. Search the server log for \" + id + \" for more details.\",\n+                    \"CLI login attempt failed: \" + id, Level.INFO);\n             return 7;\n         } catch (Throwable e) {\n-            final String errorMsg = String.format(\"Unexpected exception occurred while performing %s command.\",\n-                    getName());\n-            stderr.println();\n-            stderr.println(\"ERROR: \" + errorMsg);\n-            LOGGER.log(Level.WARNING, errorMsg, e);\n+            logAndPrintError(e, \"Unexpected exception occurred while performing \"+getName()+\" command.\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ca23f150250b0676a6af05c8e02aa3e13ab36d92"}, "originalPosition": 65}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzA5MjY3MA==", "bodyText": "Thanks for the feedback!", "url": "https://github.com/jenkinsci/jenkins/pull/4641#discussion_r407092670", "createdAt": "2020-04-11T18:02:33Z", "author": {"login": "helenSpry"}, "path": "core/src/main/java/hudson/cli/CLICommand.java", "diffHunk": "@@ -251,51 +251,31 @@ public int main(List<String> args, Locale locale, InputStream stdin, PrintStream\n                     new Object[] {getName(), args.size(), auth.getName(), res});\n             return res;\n         } catch (CmdLineException e) {\n-            LOGGER.log(Level.FINE, String.format(\"Failed call to CLI command %s, with %d arguments, as user %s.\",\n-                    getName(), args.size(), auth != null ? auth.getName() : \"<unknown>\"), e);\n-            stderr.println();\n-            stderr.println(\"ERROR: \" + e.getMessage());\n+            logAndPrintErrorWithDefaultValues(args, e);\n             printUsage(stderr, p);\n             return 2;\n         } catch (IllegalStateException e) {\n-            LOGGER.log(Level.FINE, String.format(\"Failed call to CLI command %s, with %d arguments, as user %s.\",\n-                    getName(), args.size(), auth != null ? auth.getName() : \"<unknown>\"), e);\n-            stderr.println();\n-            stderr.println(\"ERROR: \" + e.getMessage());\n+            logAndPrintErrorWithDefaultValues(args, e);\n             return 4;\n         } catch (IllegalArgumentException e) {\n-            LOGGER.log(Level.FINE, String.format(\"Failed call to CLI command %s, with %d arguments, as user %s.\",\n-                    getName(), args.size(), auth != null ? auth.getName() : \"<unknown>\"), e);\n-            stderr.println();\n-            stderr.println(\"ERROR: \" + e.getMessage());\n+            logAndPrintErrorWithDefaultValues(args, e);\n             return 3;\n         } catch (AbortException e) {\n-            LOGGER.log(Level.FINE, String.format(\"Failed call to CLI command %s, with %d arguments, as user %s.\",\n-                    getName(), args.size(), auth != null ? auth.getName() : \"<unknown>\"), e);\n-            // signals an error without stack trace\n-            stderr.println();\n-            stderr.println(\"ERROR: \" + e.getMessage());\n+            logAndPrintErrorWithDefaultValues(args, e);\n             return 5;\n         } catch (AccessDeniedException e) {\n-            LOGGER.log(Level.FINE, String.format(\"Failed call to CLI command %s, with %d arguments, as user %s.\",\n-                    getName(), args.size(), auth != null ? auth.getName() : \"<unknown>\"), e);\n-            stderr.println();\n-            stderr.println(\"ERROR: \" + e.getMessage());\n+            logAndPrintErrorWithDefaultValues(args, e);\n             return 6;\n         } catch (BadCredentialsException e) {\n             // to the caller, we can't reveal whether the user didn't exist or the password didn't match.\n             // do that to the server log instead\n             String id = UUID.randomUUID().toString();\n-            LOGGER.log(Level.INFO, \"CLI login attempt failed: \" + id, e);\n-            stderr.println();\n-            stderr.println(\"ERROR: Bad Credentials. Search the server log for \" + id + \" for more details.\");\n+            logAndPrintError(e, \"Bad Credentials. Search the server log for \" + id + \" for more details.\",\n+                    \"CLI login attempt failed: \" + id, Level.INFO);\n             return 7;\n         } catch (Throwable e) {\n-            final String errorMsg = String.format(\"Unexpected exception occurred while performing %s command.\",\n-                    getName());\n-            stderr.println();\n-            stderr.println(\"ERROR: \" + errorMsg);\n-            LOGGER.log(Level.WARNING, errorMsg, e);\n+            logAndPrintError(e, \"Unexpected exception occurred while performing \"+getName()+\" command.\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzAzOTgzMQ=="}, "originalCommit": {"oid": "ca23f150250b0676a6af05c8e02aa3e13ab36d92"}, "originalPosition": 65}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyNjM0OTQzOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/hudson/cli/CLICommand.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMVQwOTo0NToyMlrOGEL6lQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMVQxODowMzoyMVrOGEO-HA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzA0MjcwOQ==", "bodyText": "It's unclear what \"default values\" refers to.", "url": "https://github.com/jenkinsci/jenkins/pull/4641#discussion_r407042709", "createdAt": "2020-04-11T09:45:22Z", "author": {"login": "daniel-beck"}, "path": "core/src/main/java/hudson/cli/CLICommand.java", "diffHunk": "@@ -304,6 +284,20 @@ public int main(List<String> args, Locale locale, InputStream stdin, PrintStream\n         }\n     }\n \n+    private void logAndPrintErrorWithDefaultValues(List<String> args, Throwable e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ca23f150250b0676a6af05c8e02aa3e13ab36d92"}, "originalPosition": 74}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzA5Mjc2NA==", "bodyText": "Thanks for the feedback! I'll change the name to something more specific.", "url": "https://github.com/jenkinsci/jenkins/pull/4641#discussion_r407092764", "createdAt": "2020-04-11T18:03:21Z", "author": {"login": "helenSpry"}, "path": "core/src/main/java/hudson/cli/CLICommand.java", "diffHunk": "@@ -304,6 +284,20 @@ public int main(List<String> args, Locale locale, InputStream stdin, PrintStream\n         }\n     }\n \n+    private void logAndPrintErrorWithDefaultValues(List<String> args, Throwable e) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzA0MjcwOQ=="}, "originalCommit": {"oid": "ca23f150250b0676a6af05c8e02aa3e13ab36d92"}, "originalPosition": 74}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 458, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}