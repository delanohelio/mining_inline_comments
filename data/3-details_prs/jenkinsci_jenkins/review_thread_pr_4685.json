{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA4MjA4Njgz", "number": 4685, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QyMTozMjowNVrOD1fEiA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQyMDoyOToxNFrOD4Mfow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3NDEwMTg0OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/hudson/diagnosis/TooManyJobsButNoView.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QyMTozMjowNVrOGK9Aeg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQyMDozMjozNFrOGO5SGQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDEzODQ5MA==", "bodyText": "Unsure about that one, since SYSTEM_READ doesn't grant access to view jobs, and getItemMap bypasses regular Read permission checks. So you'll be told there's stuff there but cannot see it, which seems weird.", "url": "https://github.com/jenkinsci/jenkins/pull/4685#discussion_r414138490", "createdAt": "2020-04-23T21:32:05Z", "author": {"login": "daniel-beck"}, "path": "core/src/main/java/hudson/diagnosis/TooManyJobsButNoView.java", "diffHunk": "@@ -67,5 +69,10 @@ public void doAct(StaplerRequest req, StaplerResponse rsp) throws IOException {\n         }\n     }\n \n+    @Override\n+    public Permission getRequiredPermission() {\n+        return Jenkins.SYSTEM_READ;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "49981562e70b623ec37d40fc8640124ee3b997cc"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDMyNjA4OQ==", "bodyText": "I took the assumption that it\u2019s highly unlikely that you wouldn\u2019t be able to see jobs and it\u2019s more of a quirk of the permissions system that it doesn\u2019t automatically grant you read access,\nI did hide the new view link as in read only systems it\u2019s more likely views are added through a different process than directly in the UI", "url": "https://github.com/jenkinsci/jenkins/pull/4685#discussion_r414326089", "createdAt": "2020-04-24T06:26:27Z", "author": {"login": "timja"}, "path": "core/src/main/java/hudson/diagnosis/TooManyJobsButNoView.java", "diffHunk": "@@ -67,5 +69,10 @@ public void doAct(StaplerRequest req, StaplerResponse rsp) throws IOException {\n         }\n     }\n \n+    @Override\n+    public Permission getRequiredPermission() {\n+        return Jenkins.SYSTEM_READ;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDEzODQ5MA=="}, "originalCommit": {"oid": "49981562e70b623ec37d40fc8640124ee3b997cc"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzgxNTYzNQ==", "bodyText": "Would make more sense if you accessed items (and views) through a method performing permission checks. That way, the result in the common case is identical, and in the unusual case you do not expect it's consistent with what the current user us seeing.\nThis should do it, without losing the performance benefit for admins:\n        Jenkins j = Jenkins.get();\n        if (j.hasPermission(Jenkins.ADMINISTER)) {\n            return j.getViews().size()==1 && j.getItemMap().size()> THRESHOLD;\n        }\n        // SystemRead\n        return j.getViews().size() == 1 && j.getItems().size() > THRESHOLD;\n\nThis + a quick amendment to TooManyJobsButNoViewTest and this is ready to go \ud83d\udc4d", "url": "https://github.com/jenkinsci/jenkins/pull/4685#discussion_r417815635", "createdAt": "2020-04-30T07:40:05Z", "author": {"login": "daniel-beck"}, "path": "core/src/main/java/hudson/diagnosis/TooManyJobsButNoView.java", "diffHunk": "@@ -67,5 +69,10 @@ public void doAct(StaplerRequest req, StaplerResponse rsp) throws IOException {\n         }\n     }\n \n+    @Override\n+    public Permission getRequiredPermission() {\n+        return Jenkins.SYSTEM_READ;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDEzODQ5MA=="}, "originalCommit": {"oid": "49981562e70b623ec37d40fc8640124ee3b997cc"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODI3MTc2OQ==", "bodyText": "I took the assumption that it\u2019s highly unlikely that you wouldn\u2019t be able to see jobs and it\u2019s more of a quirk of the permissions system that it doesn\u2019t automatically grant you read access,\n\nGood enough from my point of view\n\nWould make more sense if you accessed items (and views) through a method performing permission checks.\n\nCould be a good improvement I would be happy to see Lazy loading for jobs eventually, and the implementation would require a change after that. But it would be the least of the problems we would have", "url": "https://github.com/jenkinsci/jenkins/pull/4685#discussion_r418271769", "createdAt": "2020-04-30T20:32:34Z", "author": {"login": "oleg-nenashev"}, "path": "core/src/main/java/hudson/diagnosis/TooManyJobsButNoView.java", "diffHunk": "@@ -67,5 +69,10 @@ public void doAct(StaplerRequest req, StaplerResponse rsp) throws IOException {\n         }\n     }\n \n+    @Override\n+    public Permission getRequiredPermission() {\n+        return Jenkins.SYSTEM_READ;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDEzODQ5MA=="}, "originalCommit": {"oid": "49981562e70b623ec37d40fc8640124ee3b997cc"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3NDExMTYxOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/jenkins/security/UpdateSiteWarningsMonitor.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QyMTozNDo1MlrOGK9GBw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QyMTozNDo1MlrOGK9GBw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDEzOTkxMQ==", "bodyText": "While doForward doesn't do anything, it's a small step to something that does, so perhaps just add an unnecessary check?", "url": "https://github.com/jenkinsci/jenkins/pull/4685#discussion_r414139911", "createdAt": "2020-04-23T21:34:52Z", "author": {"login": "daniel-beck"}, "path": "core/src/main/java/jenkins/security/UpdateSiteWarningsMonitor.java", "diffHunk": "@@ -162,6 +163,11 @@ public boolean hasApplicableHiddenWarnings() {\n         return getActiveWarnings().size() < configuration.getApplicableWarnings().size();\n     }\n \n+    @Override\n+    public Permission getRequiredPermission() {\n+        return Jenkins.SYSTEM_READ;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "49981562e70b623ec37d40fc8640124ee3b997cc"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5OTk1ODMzOnYy", "diffSide": "RIGHT", "path": "test/src/test/java/hudson/diagnosis/TooManyJobsButNoViewTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQwODo0OTozOFrOGOf1-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQwODo1MTo0NlrOGOf7Kg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzg1NDk2OA==", "bodyText": "Potential i18n problem? I'd be happy with confirming the element exists.", "url": "https://github.com/jenkinsci/jenkins/pull/4685#discussion_r417854968", "createdAt": "2020-04-30T08:49:38Z", "author": {"login": "daniel-beck"}, "path": "test/src/test/java/hudson/diagnosis/TooManyJobsButNoViewTest.java", "diffHunk": "@@ -67,4 +80,57 @@ private void verifyNoForm() throws IOException, SAXException {\n \n         verifyNoForm();\n     }\n+    \n+    @Test\n+    public void systemReadNoViewAccessVerifyNoForm() throws Exception {\n+        final String READONLY = \"readonly\";\n+\n+        r.jenkins.setSecurityRealm(r.createDummySecurityRealm());\n+        r.jenkins.setAuthorizationStrategy(new MockAuthorizationStrategy()\n+                .grant(Jenkins.READ).everywhere().to(READONLY)\n+                .grant(Jenkins.SYSTEM_READ).everywhere().to(READONLY)\n+        );\n+\n+        for (int i = 0; i <= TooManyJobsButNoView.THRESHOLD; i++)\n+            r.createFreeStyleProject();\n+\n+        JenkinsRule.WebClient wc = r.createWebClient();\n+        wc.login(READONLY);\n+\n+        verifyNoMonitor(wc);\n+    }\n+\n+    private void verifyNoMonitor(JenkinsRule.WebClient wc) throws IOException, SAXException {\n+        HtmlPage p = wc.goTo(\"manage\");\n+        DomElement adminMonitorDiv = p.getElementById(\"tooManyJobsButNoView\");\n+        assertThat(adminMonitorDiv, is(nullValue()));\n+    }\n+    \n+    @Test\n+    public void systemReadVerifyForm() throws Exception {\n+        final String READONLY = \"readonly\";\n+\n+        r.jenkins.setSecurityRealm(r.createDummySecurityRealm());\n+        r.jenkins.setAuthorizationStrategy(new MockAuthorizationStrategy()\n+                .grant(Jenkins.READ).everywhere().to(READONLY)\n+                .grant(Jenkins.SYSTEM_READ).everywhere().to(READONLY)\n+                .grant(Item.READ).everywhere().to(READONLY)\n+                .grant(View.READ).everywhere().to(READONLY)\n+        );\n+\n+        for (int i = 0; i <= TooManyJobsButNoView.THRESHOLD; i++)\n+            r.createFreeStyleProject();\n+\n+        JenkinsRule.WebClient wc = r.createWebClient();\n+        wc.login(READONLY);\n+\n+        verifyMonitor(wc);\n+    }\n+\n+    private void verifyMonitor(JenkinsRule.WebClient wc) throws IOException, SAXException {\n+        HtmlPage p = wc.goTo(\"manage\");\n+        DomElement adminMonitorDiv = p.getElementById(\"tooManyJobsButNoView\");\n+        assertThat(adminMonitorDiv.getTextContent(), containsString(\"There appears to be a large number of jobs\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e2d5b08023ca31413e06d48fe742a4ee2bd455fb"}, "originalPosition": 86}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzg1NjI5OA==", "bodyText": "sure, was just an extra check for safety, I'll simplify", "url": "https://github.com/jenkinsci/jenkins/pull/4685#discussion_r417856298", "createdAt": "2020-04-30T08:51:46Z", "author": {"login": "timja"}, "path": "test/src/test/java/hudson/diagnosis/TooManyJobsButNoViewTest.java", "diffHunk": "@@ -67,4 +80,57 @@ private void verifyNoForm() throws IOException, SAXException {\n \n         verifyNoForm();\n     }\n+    \n+    @Test\n+    public void systemReadNoViewAccessVerifyNoForm() throws Exception {\n+        final String READONLY = \"readonly\";\n+\n+        r.jenkins.setSecurityRealm(r.createDummySecurityRealm());\n+        r.jenkins.setAuthorizationStrategy(new MockAuthorizationStrategy()\n+                .grant(Jenkins.READ).everywhere().to(READONLY)\n+                .grant(Jenkins.SYSTEM_READ).everywhere().to(READONLY)\n+        );\n+\n+        for (int i = 0; i <= TooManyJobsButNoView.THRESHOLD; i++)\n+            r.createFreeStyleProject();\n+\n+        JenkinsRule.WebClient wc = r.createWebClient();\n+        wc.login(READONLY);\n+\n+        verifyNoMonitor(wc);\n+    }\n+\n+    private void verifyNoMonitor(JenkinsRule.WebClient wc) throws IOException, SAXException {\n+        HtmlPage p = wc.goTo(\"manage\");\n+        DomElement adminMonitorDiv = p.getElementById(\"tooManyJobsButNoView\");\n+        assertThat(adminMonitorDiv, is(nullValue()));\n+    }\n+    \n+    @Test\n+    public void systemReadVerifyForm() throws Exception {\n+        final String READONLY = \"readonly\";\n+\n+        r.jenkins.setSecurityRealm(r.createDummySecurityRealm());\n+        r.jenkins.setAuthorizationStrategy(new MockAuthorizationStrategy()\n+                .grant(Jenkins.READ).everywhere().to(READONLY)\n+                .grant(Jenkins.SYSTEM_READ).everywhere().to(READONLY)\n+                .grant(Item.READ).everywhere().to(READONLY)\n+                .grant(View.READ).everywhere().to(READONLY)\n+        );\n+\n+        for (int i = 0; i <= TooManyJobsButNoView.THRESHOLD; i++)\n+            r.createFreeStyleProject();\n+\n+        JenkinsRule.WebClient wc = r.createWebClient();\n+        wc.login(READONLY);\n+\n+        verifyMonitor(wc);\n+    }\n+\n+    private void verifyMonitor(JenkinsRule.WebClient wc) throws IOException, SAXException {\n+        HtmlPage p = wc.goTo(\"manage\");\n+        DomElement adminMonitorDiv = p.getElementById(\"tooManyJobsButNoView\");\n+        assertThat(adminMonitorDiv.getTextContent(), containsString(\"There appears to be a large number of jobs\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzg1NDk2OA=="}, "originalCommit": {"oid": "e2d5b08023ca31413e06d48fe742a4ee2bd455fb"}, "originalPosition": 86}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwMDAyNTMwOnYy", "diffSide": "RIGHT", "path": "core/src/main/resources/hudson/diagnosis/ReverseProxySetupMonitor/message.jelly", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQwOTowNzo1NlrOGOggsA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQwOToxMzoxMlrOGOgs6w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzg2NTkwNA==", "bodyText": "Why does this one allow to submit the yes? SYSTEM_READ does have access to view the information the button is redirecting to?", "url": "https://github.com/jenkinsci/jenkins/pull/4685#discussion_r417865904", "createdAt": "2020-04-30T09:07:56Z", "author": {"login": "varyvol"}, "path": "core/src/main/resources/hudson/diagnosis/ReverseProxySetupMonitor/message.jelly", "diffHunk": "@@ -22,12 +22,14 @@ OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n THE SOFTWARE.\n -->\n <?jelly escape-by-default='true'?>\n-<j:jelly xmlns:j=\"jelly:core\" xmlns:st=\"jelly:stapler\" xmlns:f=\"/lib/form\">\n+<j:jelly xmlns:j=\"jelly:core\" xmlns:st=\"jelly:stapler\" xmlns:f=\"/lib/form\" xmlns:l=\"/lib/layout\">\n   <div id=\"redirect-error\" class=\"alert alert-danger reverse-proxy__hidden\"\n        data-url=\"${rootURL}/${it.url}/test\" data-context=\"${rootURL}\">\n     <form method=\"post\" action=\"${rootURL}/${it.url}/act\" name=\"${it.id}\">\n       <f:submit name=\"yes\" value=\"${%More Info}\"/>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c17a27a4439b9ed251bb5e630569ef8d130dfeb7"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzg2NzQwOA==", "bodyText": "I don't see any problem if a non-admin user can see the More Info button. It's not configuring anything if IIRC", "url": "https://github.com/jenkinsci/jenkins/pull/4685#discussion_r417867408", "createdAt": "2020-04-30T09:10:22Z", "author": {"login": "fcojfernandez"}, "path": "core/src/main/resources/hudson/diagnosis/ReverseProxySetupMonitor/message.jelly", "diffHunk": "@@ -22,12 +22,14 @@ OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n THE SOFTWARE.\n -->\n <?jelly escape-by-default='true'?>\n-<j:jelly xmlns:j=\"jelly:core\" xmlns:st=\"jelly:stapler\" xmlns:f=\"/lib/form\">\n+<j:jelly xmlns:j=\"jelly:core\" xmlns:st=\"jelly:stapler\" xmlns:f=\"/lib/form\" xmlns:l=\"/lib/layout\">\n   <div id=\"redirect-error\" class=\"alert alert-danger reverse-proxy__hidden\"\n        data-url=\"${rootURL}/${it.url}/test\" data-context=\"${rootURL}\">\n     <form method=\"post\" action=\"${rootURL}/${it.url}/act\" name=\"${it.id}\">\n       <f:submit name=\"yes\" value=\"${%More Info}\"/>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzg2NTkwNA=="}, "originalCommit": {"oid": "c17a27a4439b9ed251bb5e630569ef8d130dfeb7"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzg2OTAzNQ==", "bodyText": "it's a server side redirect to a jenkins.io redirect, https://github.com/timja/jenkins/blob/system-read-more-admin-monitors/core/src/main/java/hudson/diagnosis/ReverseProxySetupMonitor.java#L118-L126", "url": "https://github.com/jenkinsci/jenkins/pull/4685#discussion_r417869035", "createdAt": "2020-04-30T09:13:12Z", "author": {"login": "timja"}, "path": "core/src/main/resources/hudson/diagnosis/ReverseProxySetupMonitor/message.jelly", "diffHunk": "@@ -22,12 +22,14 @@ OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n THE SOFTWARE.\n -->\n <?jelly escape-by-default='true'?>\n-<j:jelly xmlns:j=\"jelly:core\" xmlns:st=\"jelly:stapler\" xmlns:f=\"/lib/form\">\n+<j:jelly xmlns:j=\"jelly:core\" xmlns:st=\"jelly:stapler\" xmlns:f=\"/lib/form\" xmlns:l=\"/lib/layout\">\n   <div id=\"redirect-error\" class=\"alert alert-danger reverse-proxy__hidden\"\n        data-url=\"${rootURL}/${it.url}/test\" data-context=\"${rootURL}\">\n     <form method=\"post\" action=\"${rootURL}/${it.url}/act\" name=\"${it.id}\">\n       <f:submit name=\"yes\" value=\"${%More Info}\"/>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzg2NTkwNA=="}, "originalCommit": {"oid": "c17a27a4439b9ed251bb5e630569ef8d130dfeb7"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwMjUxNTU1OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/hudson/diagnosis/TooManyJobsButNoView.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQyMDoyOToxNFrOGO5LDw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQyMDoyOToxNFrOGO5LDw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODI2OTk2Nw==", "bodyText": "or \"Manage\" soon, I suspect", "url": "https://github.com/jenkinsci/jenkins/pull/4685#discussion_r418269967", "createdAt": "2020-04-30T20:29:14Z", "author": {"login": "oleg-nenashev"}, "path": "core/src/main/java/hudson/diagnosis/TooManyJobsButNoView.java", "diffHunk": "@@ -50,15 +51,20 @@ public String getDisplayName() {\n     }\n \n     public boolean isActivated() {\n-        Jenkins h = Jenkins.get();\n-        return h.getViews().size()==1 && h.getItemMap().size()> THRESHOLD;\n+        Jenkins j = Jenkins.get();\n+        if (j.hasPermission(Jenkins.ADMINISTER)) {\n+            return j.getViews().size() == 1 && j.getItemMap().size() > THRESHOLD;\n+        }\n+        // SystemRead", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c17a27a4439b9ed251bb5e630569ef8d130dfeb7"}, "originalPosition": 18}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 507, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}