{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkxNTAyMzA3", "number": 4596, "title": "[JENKINS-61409] Websockets: Use AbstractByteBufferCommandTransport to transport messages", "bodyText": "Downstream of jenkinsci/remoting#373\n\nSee JENKINS-61409.\n\nProposed changelog entries\n\nFix websocket connections crash if message size is greater than 64Kb (Requires a matching agent.jar with remoting 4.3 or later)\n\n\nProposed upgrade guidelines\nN/A\nSubmitter checklist\n\n JIRA issue is well described\n Changelog entries and upgrade guidelines are appropriate for the audience affected by the change (users or developer, depending on the change). Examples\n\nFill-in the Proposed changelog entries section only if there are breaking changes or other changes which may require extra steps from users during the upgrade\n\n\n Appropriate autotests or explanation to why this change has no tests\n For dependency updates: links to external changelogs and, if possible, full diffs\n\n\nDesired reviewers\n@mention\n\nMaintainer checklist\nBefore the changes are marked as ready-for-merge:\n\n There are at least 2 approvals for the pull request and no outstanding requests for change\n Conversations in the pull request are over OR it is explicit that a reviewer does not block the change\n Changelog entries in the PR title and/or Proposed changelog entries are correct\n Proper changelog labels are set so that the changelog can be generated automatically\n If the change needs additional upgrade steps from users, upgrade-guide-needed label is set and there is a Proposed upgrade guidelines section in the PR title. (example)\n If it would make sense to backport the change to LTS, a JIRA issue should exist and be labeled as lts-candidate", "createdAt": "2020-03-20T12:19:14Z", "url": "https://github.com/jenkinsci/jenkins/pull/4596", "merged": true, "mergeCommit": {"oid": "41fc5e8622d2c1e43ffa9c7f48fdbcfbe492c19c"}, "closed": true, "closedAt": "2020-03-25T20:38:42Z", "author": {"login": "Vlatombe"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcPfgSOAH2gAyMzkxNTAyMzA3OjRlMzBiN2Y4YjMyNGMwYjViNTQ2NzkwYWFiYTZjY2YyZDFiZTQ5ZWE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcePQqPgFqTQwNTU2MTk1MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "4e30b7f8b324c0b5b546790aaba6ccf2d1be49ea", "author": {"user": {"login": "Vlatombe", "name": "Vincent Latombe"}}, "url": "https://github.com/jenkinsci/jenkins/commit/4e30b7f8b324c0b5b546790aaba6ccf2d1be49ea", "committedDate": "2020-03-20T12:17:16Z", "message": "[JENKINS-61409] Websockets: Use AbstractByteBufferCommandTransport to transport messages"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3b4b245151c4e44a278d705f13315cb7240d7411", "author": {"user": {"login": "Vlatombe", "name": "Vincent Latombe"}}, "url": "https://github.com/jenkinsci/jenkins/commit/3b4b245151c4e44a278d705f13315cb7240d7411", "committedDate": "2020-03-20T13:19:58Z", "message": "Depend on timestamped snapshot since incrementals is broken"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc4NzEwNDQz", "url": "https://github.com/jenkinsci/jenkins/pull/4596#pullrequestreview-378710443", "createdAt": "2020-03-20T18:13:04Z", "commit": {"oid": "3b4b245151c4e44a278d705f13315cb7240d7411"}, "state": "APPROVED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQxODoxMzowNVrOF5ebFw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQxODoxNzozMFrOF5ekHg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTgxMTYwNw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        } catch (IOException e) {\n          \n          \n            \n                            error(e);\n          \n          \n            \n                        } catch (InterruptedException e) {\n          \n          \n            \n                        } catch (IOException | InterruptedException e) {", "url": "https://github.com/jenkinsci/jenkins/pull/4596#discussion_r395811607", "createdAt": "2020-03-20T18:13:05Z", "author": {"login": "jglick"}, "path": "core/src/main/java/jenkins/agents/WebSocketAgents.java", "diffHunk": "@@ -128,18 +127,20 @@ protected void opened() {\n         @Override\n         protected void binary(byte[] payload, int offset, int len) {\n             LOGGER.finest(() -> \"reading block of length \" + len + \" from \" + agent);\n-            if (offset == 0 && len == payload.length) {\n-                receiver.handle(payload);\n-            } else {\n-                receiver.handle(Arrays.copyOfRange(payload, offset, offset + len));\n+            try {\n+                transport.receive(ByteBuffer.wrap(payload, offset, len));\n+            } catch (IOException e) {\n+                error(e);\n+            } catch (InterruptedException e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3b4b245151c4e44a278d705f13315cb7240d7411"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTgxMTc5Nw==", "bodyText": "Can we keep logging?", "url": "https://github.com/jenkinsci/jenkins/pull/4596#discussion_r395811797", "createdAt": "2020-03-20T18:13:26Z", "author": {"login": "jglick"}, "path": "core/src/main/java/jenkins/agents/WebSocketAgents.java", "diffHunk": "@@ -149,22 +150,12 @@ protected void error(Throwable cause) {\n             LOGGER.log(Level.WARNING, null, cause);\n         }\n \n-        class Transport extends AbstractByteArrayCommandTransport {\n+        class Transport extends AbstractByteBufferCommandTransport {\n \n             @Override\n-            public void setup(AbstractByteArrayCommandTransport.ByteArrayReceiver bar) {\n-                receiver = bar;\n-            }\n-\n-            @Override\n-            public void writeBlock(Channel chnl, byte[] bytes) throws IOException {\n-                LOGGER.finest(() -> \"writing block of length \" + bytes.length + \" to \" + agent);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3b4b245151c4e44a278d705f13315cb7240d7411"}, "originalPosition": 78}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTgxMjQ1MA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            sendBinary(header);\n          \n          \n            \n                            sendBinary(data);\n          \n          \n            \n                            sendBinary(header, false);\n          \n          \n            \n                            sendBinary(data, true);\n          \n      \n    \n    \n  \n\nif WebSocketSession is extended in the obvious way", "url": "https://github.com/jenkinsci/jenkins/pull/4596#discussion_r395812450", "createdAt": "2020-03-20T18:14:38Z", "author": {"login": "jglick"}, "path": "core/src/main/java/jenkins/agents/WebSocketAgents.java", "diffHunk": "@@ -149,22 +150,12 @@ protected void error(Throwable cause) {\n             LOGGER.log(Level.WARNING, null, cause);\n         }\n \n-        class Transport extends AbstractByteArrayCommandTransport {\n+        class Transport extends AbstractByteBufferCommandTransport {\n \n             @Override\n-            public void setup(AbstractByteArrayCommandTransport.ByteArrayReceiver bar) {\n-                receiver = bar;\n-            }\n-\n-            @Override\n-            public void writeBlock(Channel chnl, byte[] bytes) throws IOException {\n-                LOGGER.finest(() -> \"writing block of length \" + bytes.length + \" to \" + agent);\n-                try {\n-                    sendBinary(ByteBuffer.wrap(bytes)).get();\n-                } catch (Exception x) {\n-                    x.printStackTrace();\n-                    throw new IOException(x);\n-                }\n+            protected void write(ByteBuffer header, ByteBuffer data) throws IOException {\n+                sendBinary(header);\n+                sendBinary(data);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3b4b245151c4e44a278d705f13315cb7240d7411"}, "originalPosition": 87}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTgxMzI5MQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        p.getBuildersList().add(Functions.isWindows() ? new BatchFile(\"echo hello\") : new Shell(\"dd if=/dev/random of=file.txt count=1024 bs=200;cat file.txt\"));\n          \n          \n            \n                        p.getBuildersList().add(Functions.isWindows() ? new BatchFile(\"echo hello\") : new Shell(\"dd if=/dev/random count=1024 bs=200\"));", "url": "https://github.com/jenkinsci/jenkins/pull/4596#discussion_r395813291", "createdAt": "2020-03-20T18:16:13Z", "author": {"login": "jglick"}, "path": "test/src/test/java/jenkins/agents/WebSocketAgentsTest.java", "diffHunk": "@@ -99,9 +100,10 @@ public void smokes() throws Exception {\n             ).stdout(System.out).start());\n             r.waitOnline(s);\n             assertEquals(\"response\", s.getChannel().call(new DummyTask()));\n+            assertNotNull(s.getChannel().call(new FatTask()));\n             FreeStyleProject p = r.createFreeStyleProject();\n             p.setAssignedNode(s);\n-            p.getBuildersList().add(Functions.isWindows() ? new BatchFile(\"echo hello\") : new Shell(\"echo hello\"));\n+            p.getBuildersList().add(Functions.isWindows() ? new BatchFile(\"echo hello\") : new Shell(\"dd if=/dev/random of=file.txt count=1024 bs=200;cat file.txt\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3b4b245151c4e44a278d705f13315cb7240d7411"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTgxMzkxOA==", "bodyText": "This should suffice to reproduce on its own (both directions), without the dd, right?", "url": "https://github.com/jenkinsci/jenkins/pull/4596#discussion_r395813918", "createdAt": "2020-03-20T18:17:30Z", "author": {"login": "jglick"}, "path": "test/src/test/java/jenkins/agents/WebSocketAgentsTest.java", "diffHunk": "@@ -122,4 +124,18 @@ public String call() {\n         }\n     }\n \n+    private static class FatTask extends SlaveToMasterCallable<String, RuntimeException> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3b4b245151c4e44a278d705f13315cb7240d7411"}, "originalPosition": 24}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc4NzUzNzgw", "url": "https://github.com/jenkinsci/jenkins/pull/4596#pullrequestreview-378753780", "createdAt": "2020-03-20T19:21:13Z", "commit": {"oid": "3b4b245151c4e44a278d705f13315cb7240d7411"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a7f17f2be87b5d5851f128ca24fb4b897f968313", "author": {"user": {"login": "Vlatombe", "name": "Vincent Latombe"}}, "url": "https://github.com/jenkinsci/jenkins/commit/a7f17f2be87b5d5851f128ca24fb4b897f968313", "committedDate": "2020-03-23T08:36:03Z", "message": "Fix reviews"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5ba8c8a9e591a02d73506062a45a521e9badea2f", "author": {"user": {"login": "Vlatombe", "name": "Vincent Latombe"}}, "url": "https://github.com/jenkinsci/jenkins/commit/5ba8c8a9e591a02d73506062a45a521e9badea2f", "committedDate": "2020-03-23T08:36:12Z", "message": "Update snapshot dep"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e57ed6368b0036275c5392b2bc8ffbbf4c3cd4f7", "author": {"user": {"login": "Vlatombe", "name": "Vincent Latombe"}}, "url": "https://github.com/jenkinsci/jenkins/commit/e57ed6368b0036275c5392b2bc8ffbbf4c3cd4f7", "committedDate": "2020-03-23T08:41:36Z", "message": "Print directly"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc5NDc4MjM1", "url": "https://github.com/jenkinsci/jenkins/pull/4596#pullrequestreview-379478235", "createdAt": "2020-03-23T14:24:38Z", "commit": {"oid": "e57ed6368b0036275c5392b2bc8ffbbf4c3cd4f7"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxNDoyNDozOFrOF6Hxew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxNDoyNDozOFrOF6Hxew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjQ4OTA4Mw==", "bodyText": "Note that unlike the existing overload, this is blocking. Maybe OK in this context.", "url": "https://github.com/jenkinsci/jenkins/pull/4596#discussion_r396489083", "createdAt": "2020-03-23T14:24:38Z", "author": {"login": "jglick"}, "path": "core/src/main/java/jenkins/websocket/WebSocketSession.java", "diffHunk": "@@ -130,6 +131,15 @@ protected void text(String message) {\n         }\n     }\n \n+    @SuppressWarnings(\"unchecked\")\n+    protected final void sendBinary(ByteBuffer partialByte, boolean isLast) {\n+        try {\n+            remoteEndpoint.getClass().getMethod(\"sendPartialBytes\", ByteBuffer.class, boolean.class).invoke(remoteEndpoint, partialByte, isLast);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e57ed6368b0036275c5392b2bc8ffbbf4c3cd4f7"}, "originalPosition": 15}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA1NTYxOTUx", "url": "https://github.com/jenkinsci/jenkins/pull/4596#pullrequestreview-405561951", "createdAt": "2020-05-05T07:50:34Z", "commit": {"oid": "e57ed6368b0036275c5392b2bc8ffbbf4c3cd4f7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQwNzo1MDozNVrOGQeIDw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQwNzo1MDozNVrOGQeIDw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTkyMzk4Mw==", "bodyText": "Probably safer to use /dev/urandom here if you're low on entropy?", "url": "https://github.com/jenkinsci/jenkins/pull/4596#discussion_r419923983", "createdAt": "2020-05-05T07:50:35Z", "author": {"login": "daniel-beck"}, "path": "test/src/test/java/jenkins/agents/WebSocketAgentsTest.java", "diffHunk": "@@ -99,9 +100,10 @@ public void smokes() throws Exception {\n             ).stdout(System.out).start());\n             r.waitOnline(s);\n             assertEquals(\"response\", s.getChannel().call(new DummyTask()));\n+            assertNotNull(s.getChannel().call(new FatTask()));\n             FreeStyleProject p = r.createFreeStyleProject();\n             p.setAssignedNode(s);\n-            p.getBuildersList().add(Functions.isWindows() ? new BatchFile(\"echo hello\") : new Shell(\"echo hello\"));\n+            p.getBuildersList().add(Functions.isWindows() ? new BatchFile(\"echo hello\") : new Shell(\"dd if=/dev/random count=1024 bs=200\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e57ed6368b0036275c5392b2bc8ffbbf4c3cd4f7"}, "originalPosition": 16}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1342, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}