{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk0Mjc2NzIw", "number": 4603, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxOToyMzoxM1rODsMxYw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxOToyMzoxM1rODsMxYw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3NjczMTg3OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/jenkins/security/ConfidentialStore.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxOToyMzoxM1rOF8-_LA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxOTozNTozM1rOF8_Xww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTQ5MDg2MA==", "bodyText": "Being a public API, this would sort of break it, though I have no idea if anyone besides me has even tried extending this class besides the default one.", "url": "https://github.com/jenkinsci/jenkins/pull/4603#discussion_r399490860", "createdAt": "2020-03-27T19:23:13Z", "author": {"login": "jvz"}, "path": "core/src/main/java/jenkins/security/ConfidentialStore.java", "diffHunk": "@@ -51,6 +55,9 @@\n      */\n     protected abstract @CheckForNull byte[] load(ConfidentialKey key) throws IOException;\n \n+    // TODO consider promoting to public, and offering a default implementation of randomBytes (via the usual Util.isOverridden binary compat trick)\n+    abstract SecureRandom secureRandom();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dfc5bb9c06d163ee999dc3f15ba2d712e551bc8e"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTQ5NTMzMg==", "bodyText": "this would sort of break it\n\nNot if you used the usual Util.isOverridden trick. Both methods concrete, one unconditionally delegates to the other, vice-versa conditionally, else throw AbstractMethodError or supply a default implementation.", "url": "https://github.com/jenkinsci/jenkins/pull/4603#discussion_r399495332", "createdAt": "2020-03-27T19:31:53Z", "author": {"login": "jglick"}, "path": "core/src/main/java/jenkins/security/ConfidentialStore.java", "diffHunk": "@@ -51,6 +55,9 @@\n      */\n     protected abstract @CheckForNull byte[] load(ConfidentialKey key) throws IOException;\n \n+    // TODO consider promoting to public, and offering a default implementation of randomBytes (via the usual Util.isOverridden binary compat trick)\n+    abstract SecureRandom secureRandom();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTQ5MDg2MA=="}, "originalCommit": {"oid": "dfc5bb9c06d163ee999dc3f15ba2d712e551bc8e"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTQ5NzE1NQ==", "bodyText": "Oh, that's a new trick to me.", "url": "https://github.com/jenkinsci/jenkins/pull/4603#discussion_r399497155", "createdAt": "2020-03-27T19:35:33Z", "author": {"login": "jvz"}, "path": "core/src/main/java/jenkins/security/ConfidentialStore.java", "diffHunk": "@@ -51,6 +55,9 @@\n      */\n     protected abstract @CheckForNull byte[] load(ConfidentialKey key) throws IOException;\n \n+    // TODO consider promoting to public, and offering a default implementation of randomBytes (via the usual Util.isOverridden binary compat trick)\n+    abstract SecureRandom secureRandom();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTQ5MDg2MA=="}, "originalCommit": {"oid": "dfc5bb9c06d163ee999dc3f15ba2d712e551bc8e"}, "originalPosition": 20}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 671, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}