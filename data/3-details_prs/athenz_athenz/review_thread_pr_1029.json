{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ0ODEzNjY1", "number": 1029, "reviewThreads": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxNDozMjozM1rOELtlbA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QwMDowMjowOVrOEPWOEA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwNzE2NjUyOnYy", "diffSide": "RIGHT", "path": "docs/zms_client.md", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxNDozMjozM1rOGtZ4xA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxNDozMjozM1rOGtZ4xA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDI2MzIzNg==", "bodyText": "Links didn't work for Parameters and examples as the id wasn't recognized. Solved it by using HTML headers (h3 is equivalent to ###)", "url": "https://github.com/AthenZ/athenz/pull/1029#discussion_r450263236", "createdAt": "2020-07-06T14:32:33Z", "author": {"login": "OferLevi85"}, "path": "docs/zms_client.md", "diffHunk": "@@ -220,7 +223,7 @@ following zms-cli command:\n \n     $ zms-cli -d <domain> add-group-role <role> <member> [<member> ...]\n \n-### Parameters\n+<h3 id=\"parameters-1\">Parameters</h3>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "101dff5f96b9288c4b2b154ab6c4e14bd4ac3c63"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwNzE2ODk5OnYy", "diffSide": "RIGHT", "path": "docs/data_model.md", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxNDozMzowN1rOGtZ6Uw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxNDozMzowN1rOGtZ6Uw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDI2MzYzNQ==", "bodyText": "Saw we removed references to Bouncer a couple of months ago so I removed it from here too", "url": "https://github.com/AthenZ/athenz/pull/1029#discussion_r450263635", "createdAt": "2020-07-06T14:33:07Z", "author": {"login": "OferLevi85"}, "path": "docs/data_model.md", "diffHunk": "@@ -58,7 +58,7 @@ decentralized authorization, and how to set up role-based authorization.\n * Policy - a set of assertions that govern usage of resources\n * Assertion - a quadruple of &lt;effect, role, action, resource&gt;\n * Principal - an authenticated user or service that assumes one or more roles\n-* User - a user identity that is authenticate by a particular authority like Bouncer\n+* User - a user identity that is authenticate by a particular authority", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "101dff5f96b9288c4b2b154ab6c4e14bd4ac3c63"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwNzE3OTU0OnYy", "diffSide": "RIGHT", "path": "docs/zms_svctoken.md", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxNDozNToxNVrOGtaAhw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxNDozNToxNVrOGtaAhw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDI2NTIyMw==", "bodyText": "Noticed that all the utilities are part of the same package in bintray - athenz-utils.\nI copied the \"Getting Software\" and \"Preqreuisites\" parts from the ZMS Util guide to all relevant docs.", "url": "https://github.com/AthenZ/athenz/pull/1029#discussion_r450265223", "createdAt": "2020-07-06T14:35:15Z", "author": {"login": "OferLevi85"}, "path": "docs/zms_svctoken.md", "diffHunk": "@@ -0,0 +1,60 @@\n+* [Overview](#overview)\n+* [Getting Software](#getting-software)\n+* [Prerequisites](#prerequisites)\n+* [Usage](#usage)\n+\n+\n+## Overview\n+----------\n+\n+ZMS Service Token Client utility generates service tokens\n+based on given private key and service details.\n+\n+## Getting Software\n+-------------------\n+\n+Download latest ZMS Service Token Client utility binary release from Bintray - click\n+on the `Files` tab, choose the latest version directory and then\n+download the `athenz-utils-<latest-version>-bin.tar.gz` file::\n+\n+[ ![Download](https://api.bintray.com/packages/yahoo/maven/athenz-utils/images/download.svg) ](https://bintray.com/yahoo/maven/athenz-utils/_latestVersion)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "101dff5f96b9288c4b2b154ab6c4e14bd4ac3c63"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0NTI0OTA3OnYy", "diffSide": "RIGHT", "path": "docs/zts_accesstoken.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQyMzo0NzowNVrOGzAiGg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQyMzo0NzowNVrOGzAiGg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjEzOTI5MA==", "bodyText": "remove this line.", "url": "https://github.com/AthenZ/athenz/pull/1029#discussion_r456139290", "createdAt": "2020-07-16T23:47:05Z", "author": {"login": "havetisyan"}, "path": "docs/zts_accesstoken.md", "diffHunk": "@@ -0,0 +1,62 @@\n+* [Overview](#overview)\n+* [Getting Software](#getting-software)\n+* [Prerequisites](#prerequisites)\n+* [Usage](#usage)\n+\n+## Overview\n+----------\n+\n+ZTS OAuth2 Access Token Client application in Go to request an access token from\n+ZTS Server for the given identity to access a role in a provider domain.\n+\n+## Getting Software\n+-------------------\n+\n+Download latest ZTS OAuth2 Access Token Client binary release from Bintray - click\n+on the `Files` tab, choose the latest version directory and then\n+download the `athenz-utils-<latest-version>-bin.tar.gz` file::\n+\n+[ ![Download](https://api.bintray.com/packages/yahoo/maven/athenz-utils/images/download.svg) ](https://bintray.com/yahoo/maven/athenz-utils/_latestVersion)\n+\n+```shell\n+$ tar xvfz athenz-utils-X.Y-bin.tar.gz\n+```\n+\n+## Prerequisites\n+----------------\n+\n+Before you can use the ZMS client utility, you need to have\n+asked the Athenz administrators to create your top level domain.\n+\n+## Usage\n+--------\n+\n+An access token from ZTS service can be fetched using either Service Identity x.509 certificates\n+or service ntokens.\n+\n+The optional `expire-time` argument specifies how long the access\n+token should be valid for. The value must be specified in minutes. The\n+default if no value is specified is 120 minutes.\n+\n+The optional `roles` argument requests an access token for the given roles\n+only (comma separated) as opposed to all the roles the service identity has\n+access to in the requested domain.\n+\n+The optional `service` argument requests an id token for the given service.\n+The full `domain.service` value will be set as the audience for the id token.\n+\n+### Using Athenz Identity X.509 Certificates\n+\n+```\n+$ zts-accesstoken -domain <domain> [-roles <roles>] [-service <service>] -svc-key-file <private-key-file> -svc-cert-file <service-cert-file> -zts <ZTS url> [-expire-time <expire-time-in-mins>]\n+```\n+\n+### Using NToken from a given file\n+\n+```\n+$ zts-accesstoken -domain <domain> [-roles <roles>] [-service <service>] -ntoken-file <ntoken-file> -hdr Athenz-Principal-Auth -zts <ZTS url> [-expire-time <expire-time-in-mins>]\n+```\n+\n+Only on-prem ZTS instance supports service ntokens and the `hdr` argument must be set ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "101dff5f96b9288c4b2b154ab6c4e14bd4ac3c63"}, "originalPosition": 60}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0NTI0OTY1OnYy", "diffSide": "RIGHT", "path": "docs/data_model.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQyMzo0NzoyOFrOGzAigg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQyMzo0NzoyOFrOGzAigg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjEzOTM5NA==", "bodyText": "authenticate should be authenticated", "url": "https://github.com/AthenZ/athenz/pull/1029#discussion_r456139394", "createdAt": "2020-07-16T23:47:28Z", "author": {"login": "havetisyan"}, "path": "docs/data_model.md", "diffHunk": "@@ -58,7 +58,7 @@ decentralized authorization, and how to set up role-based authorization.\n * Policy - a set of assertions that govern usage of resources\n * Assertion - a quadruple of &lt;effect, role, action, resource&gt;\n * Principal - an authenticated user or service that assumes one or more roles\n-* User - a user identity that is authenticate by a particular authority like Bouncer\n+* User - a user identity that is authenticate by a particular authority", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "101dff5f96b9288c4b2b154ab6c4e14bd4ac3c63"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0NTI1MjAxOnYy", "diffSide": "RIGHT", "path": "docs/zms_svctoken.md", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQyMzo0ODo0N1rOGzAj8A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQyMzo0ODo0N1rOGzAj8A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjEzOTc2MA==", "bodyText": "ZMS Client utility -> ZMS Service Token utility", "url": "https://github.com/AthenZ/athenz/pull/1029#discussion_r456139760", "createdAt": "2020-07-16T23:48:47Z", "author": {"login": "havetisyan"}, "path": "docs/zms_svctoken.md", "diffHunk": "@@ -0,0 +1,60 @@\n+* [Overview](#overview)\n+* [Getting Software](#getting-software)\n+* [Prerequisites](#prerequisites)\n+* [Usage](#usage)\n+\n+\n+## Overview\n+----------\n+\n+ZMS Service Token Client utility generates service tokens\n+based on given private key and service details.\n+\n+## Getting Software\n+-------------------\n+\n+Download latest ZMS Service Token Client utility binary release from Bintray - click\n+on the `Files` tab, choose the latest version directory and then\n+download the `athenz-utils-<latest-version>-bin.tar.gz` file::\n+\n+[ ![Download](https://api.bintray.com/packages/yahoo/maven/athenz-utils/images/download.svg) ](https://bintray.com/yahoo/maven/athenz-utils/_latestVersion)\n+\n+```shell\n+$ tar xvfz athenz-utils-X.Y-bin.tar.gz\n+```\n+\n+## Prerequisites\n+----------------\n+\n+Before you can use the ZMS client utility, you need to have", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "101dff5f96b9288c4b2b154ab6c4e14bd4ac3c63"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0NTI1Mjc5OnYy", "diffSide": "RIGHT", "path": "docs/zts_accesstoken.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQyMzo0OTowNlrOGzAkaw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQyMzo0OTowNlrOGzAkaw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjEzOTg4Mw==", "bodyText": "ZMS Client -> ZTS AccessToken", "url": "https://github.com/AthenZ/athenz/pull/1029#discussion_r456139883", "createdAt": "2020-07-16T23:49:06Z", "author": {"login": "havetisyan"}, "path": "docs/zts_accesstoken.md", "diffHunk": "@@ -0,0 +1,62 @@\n+* [Overview](#overview)\n+* [Getting Software](#getting-software)\n+* [Prerequisites](#prerequisites)\n+* [Usage](#usage)\n+\n+## Overview\n+----------\n+\n+ZTS OAuth2 Access Token Client application in Go to request an access token from\n+ZTS Server for the given identity to access a role in a provider domain.\n+\n+## Getting Software\n+-------------------\n+\n+Download latest ZTS OAuth2 Access Token Client binary release from Bintray - click\n+on the `Files` tab, choose the latest version directory and then\n+download the `athenz-utils-<latest-version>-bin.tar.gz` file::\n+\n+[ ![Download](https://api.bintray.com/packages/yahoo/maven/athenz-utils/images/download.svg) ](https://bintray.com/yahoo/maven/athenz-utils/_latestVersion)\n+\n+```shell\n+$ tar xvfz athenz-utils-X.Y-bin.tar.gz\n+```\n+\n+## Prerequisites\n+----------------\n+\n+Before you can use the ZMS client utility, you need to have", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "101dff5f96b9288c4b2b154ab6c4e14bd4ac3c63"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0NTI1MzM4OnYy", "diffSide": "RIGHT", "path": "docs/zts_rolecert.md", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQyMzo0OToyNVrOGzAkzA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQyMzo0OToyNVrOGzAkzA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjEzOTk4MA==", "bodyText": "ZMS Client -> ZTS RoleCertificate", "url": "https://github.com/AthenZ/athenz/pull/1029#discussion_r456139980", "createdAt": "2020-07-16T23:49:25Z", "author": {"login": "havetisyan"}, "path": "docs/zts_rolecert.md", "diffHunk": "@@ -0,0 +1,45 @@\n+* [Overview](#overview)\n+* [Getting Software](#getting-software)\n+* [Prerequisites](#prerequisites)\n+* [Usage](#usage)\n+\n+## Overview\n+----------\n+\n+ZTS Role Certificate Client utility uses Athenz Service\n+Identity certificate to request a X509 Certificate for the requested\n+role from ZTS Server. Once ZTS validates the service identity certificate,\n+it will issue a new 30-day X509 Certificate for the role. Unlike access tokens,\n+role certificates are issued for a given role only.\n+\n+## Getting Software\n+-------------------\n+\n+Download latest ZTS Role Certificate Client utility binary release from Bintray - click\n+on the `Files` tab, choose the latest version directory and then\n+download the `athenz-utils-<latest-version>-bin.tar.gz` file::\n+\n+[ ![Download](https://api.bintray.com/packages/yahoo/maven/athenz-utils/images/download.svg) ](https://bintray.com/yahoo/maven/athenz-utils/_latestVersion)\n+\n+```shell\n+$ tar xvfz athenz-utils-X.Y-bin.tar.gz\n+```\n+\n+## Prerequisites\n+----------------\n+\n+Before you can use the ZMS client utility, you need to have", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "101dff5f96b9288c4b2b154ab6c4e14bd4ac3c63"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0NTI3NzcyOnYy", "diffSide": "RIGHT", "path": "docs/zts_roletoken.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QwMDowMDoyM1rOGzAyHQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QwMDowMDoyM1rOGzAyHQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjE0MzM4OQ==", "bodyText": "ZMS Client -> ZTS RoleToken", "url": "https://github.com/AthenZ/athenz/pull/1029#discussion_r456143389", "createdAt": "2020-07-17T00:00:23Z", "author": {"login": "havetisyan"}, "path": "docs/zts_roletoken.md", "diffHunk": "@@ -0,0 +1,71 @@\n+* [Overview](#overview)\n+* [Getting Software](#getting-software)\n+* [Prerequisites](#prerequisites)\n+* [Usage](#usage)\n+\n+## Overview\n+----------\n+\n+ZTS Role Token Client utility requests a role token from\n+ZTS Server for the given identity to process a request against a provider domain.\n+\n+## Getting Software\n+-------------------\n+\n+Download latest ZTS Role Token Client utility binary release from Bintray - click\n+on the `Files` tab, choose the latest version directory and then\n+download the `athenz-utils-<latest-version>-bin.tar.gz` file::\n+\n+[ ![Download](https://api.bintray.com/packages/yahoo/maven/athenz-utils/images/download.svg) ](https://bintray.com/yahoo/maven/athenz-utils/_latestVersion)\n+\n+```shell\n+$ tar xvfz athenz-utils-X.Y-bin.tar.gz\n+```\n+\n+## Prerequisites\n+----------------\n+\n+Before you can use the ZMS client utility, you need to have", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "101dff5f96b9288c4b2b154ab6c4e14bd4ac3c63"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0NTI3OTA2OnYy", "diffSide": "RIGHT", "path": "docs/zts_roletoken.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QwMDowMDo1MVrOGzAyzw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QwMDowMDo1MVrOGzAyzw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjE0MzU2Nw==", "bodyText": "remove line reference to on-prem ZTS", "url": "https://github.com/AthenZ/athenz/pull/1029#discussion_r456143567", "createdAt": "2020-07-17T00:00:51Z", "author": {"login": "havetisyan"}, "path": "docs/zts_roletoken.md", "diffHunk": "@@ -0,0 +1,71 @@\n+* [Overview](#overview)\n+* [Getting Software](#getting-software)\n+* [Prerequisites](#prerequisites)\n+* [Usage](#usage)\n+\n+## Overview\n+----------\n+\n+ZTS Role Token Client utility requests a role token from\n+ZTS Server for the given identity to process a request against a provider domain.\n+\n+## Getting Software\n+-------------------\n+\n+Download latest ZTS Role Token Client utility binary release from Bintray - click\n+on the `Files` tab, choose the latest version directory and then\n+download the `athenz-utils-<latest-version>-bin.tar.gz` file::\n+\n+[ ![Download](https://api.bintray.com/packages/yahoo/maven/athenz-utils/images/download.svg) ](https://bintray.com/yahoo/maven/athenz-utils/_latestVersion)\n+\n+```shell\n+$ tar xvfz athenz-utils-X.Y-bin.tar.gz\n+```\n+\n+## Prerequisites\n+----------------\n+\n+Before you can use the ZMS client utility, you need to have\n+asked the Athenz administrators to create your top level domain.\n+\n+## Usage\n+--------\n+\n+A role token from ZTS service can be fetched using either Service Identity x.509 certificates\n+or service ntokens.\n+\n+The optional `expire-time` argument specifies how long the role\n+token should be valid for. The value must be specified in minutes. The\n+default if no value is specified is 120 minutes.\n+\n+The optional `role` argument requests a role token for the given role\n+only as opposed to all the roles the service identity has access to\n+in the requested domain.\n+\n+The role token returned must be cached and re-used by the client before\n+it expires.\n+\n+### Using Athenz Identity X.509 Certificates\n+\n+```\n+$ zts-roletoken -domain <domain> [-role <role>] -svc-key-file <private-key-file> -svc-cert-file <service-cert-file> -zts https://zts-server.athenzcompany.com:4443/zts/v1 [-expire-time <expire-time-in-mins>]\n+```\n+\n+### Using NToken from command line\n+\n+```\n+$ zts-roletoken -domain <domain> [-role <role>] -ntoken <ntoken> -hdr Athenz-Principal-Auth -zts https://zts-server.athenzcompany.com:4443/zts/v1 [-expire-time <expire-time-in-mins>]\n+```\n+\n+Only on-prem ZTS instance supports service ntokens and the `hdr` argument must be set ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "101dff5f96b9288c4b2b154ab6c4e14bd4ac3c63"}, "originalPosition": 60}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0NTI3OTQ0OnYy", "diffSide": "RIGHT", "path": "docs/zts_roletoken.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QwMDowMTowOVrOGzAzGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QwMDowMTowOVrOGzAzGw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjE0MzY0Mw==", "bodyText": "remove this line referencing on-prem ZTS", "url": "https://github.com/AthenZ/athenz/pull/1029#discussion_r456143643", "createdAt": "2020-07-17T00:01:09Z", "author": {"login": "havetisyan"}, "path": "docs/zts_roletoken.md", "diffHunk": "@@ -0,0 +1,71 @@\n+* [Overview](#overview)\n+* [Getting Software](#getting-software)\n+* [Prerequisites](#prerequisites)\n+* [Usage](#usage)\n+\n+## Overview\n+----------\n+\n+ZTS Role Token Client utility requests a role token from\n+ZTS Server for the given identity to process a request against a provider domain.\n+\n+## Getting Software\n+-------------------\n+\n+Download latest ZTS Role Token Client utility binary release from Bintray - click\n+on the `Files` tab, choose the latest version directory and then\n+download the `athenz-utils-<latest-version>-bin.tar.gz` file::\n+\n+[ ![Download](https://api.bintray.com/packages/yahoo/maven/athenz-utils/images/download.svg) ](https://bintray.com/yahoo/maven/athenz-utils/_latestVersion)\n+\n+```shell\n+$ tar xvfz athenz-utils-X.Y-bin.tar.gz\n+```\n+\n+## Prerequisites\n+----------------\n+\n+Before you can use the ZMS client utility, you need to have\n+asked the Athenz administrators to create your top level domain.\n+\n+## Usage\n+--------\n+\n+A role token from ZTS service can be fetched using either Service Identity x.509 certificates\n+or service ntokens.\n+\n+The optional `expire-time` argument specifies how long the role\n+token should be valid for. The value must be specified in minutes. The\n+default if no value is specified is 120 minutes.\n+\n+The optional `role` argument requests a role token for the given role\n+only as opposed to all the roles the service identity has access to\n+in the requested domain.\n+\n+The role token returned must be cached and re-used by the client before\n+it expires.\n+\n+### Using Athenz Identity X.509 Certificates\n+\n+```\n+$ zts-roletoken -domain <domain> [-role <role>] -svc-key-file <private-key-file> -svc-cert-file <service-cert-file> -zts https://zts-server.athenzcompany.com:4443/zts/v1 [-expire-time <expire-time-in-mins>]\n+```\n+\n+### Using NToken from command line\n+\n+```\n+$ zts-roletoken -domain <domain> [-role <role>] -ntoken <ntoken> -hdr Athenz-Principal-Auth -zts https://zts-server.athenzcompany.com:4443/zts/v1 [-expire-time <expire-time-in-mins>]\n+```\n+\n+Only on-prem ZTS instance supports service ntokens and the `hdr` argument must be set \n+to `Athenz-Principal-Auth`.\n+The service identity ntoken can be obtained by using the [zms-svctoken](zms_svctoken.md) utility.\n+\n+### Using NToken from a given file\n+\n+```\n+$ zts-roletoken -domain <domain> [-role <role>] -ntoken-file <ntoken-file> -hdr Athenz-Principal-Auth -zts https://zts-server.athenzcompany.com:4443/zts/v1 [-expire-time <expire-time-in-mins>]\n+```\n+Only on-prem ZTS instance supports service ntokens and the `hdr` argument must be set ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "101dff5f96b9288c4b2b154ab6c4e14bd4ac3c63"}, "originalPosition": 69}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0NTI4MDMwOnYy", "diffSide": "RIGHT", "path": "docs/zts_svccert.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QwMDowMTozNVrOGzAzjA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QwMDowMTozNVrOGzAzjA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjE0Mzc1Ng==", "bodyText": "remove the last section \"in on-prem ZTS environment only\"", "url": "https://github.com/AthenZ/athenz/pull/1029#discussion_r456143756", "createdAt": "2020-07-17T00:01:35Z", "author": {"login": "havetisyan"}, "path": "docs/zts_svccert.md", "diffHunk": "@@ -0,0 +1,56 @@\n+* [Overview](#overview)\n+* [Getting Software](#getting-software)\n+* [Prerequisites](#prerequisites)\n+* [Usage](#usage)\n+\n+## Overview\n+----------\n+\n+ZTS TLS Certificate utility provides a service identity x.509 certificate\n+based on registered service's ntoken in on-prem ZTS environment only.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "101dff5f96b9288c4b2b154ab6c4e14bd4ac3c63"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0NTI4MTQ0OnYy", "diffSide": "RIGHT", "path": "docs/zts_svccert.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QwMDowMjowOVrOGzA0MQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QwMDowMjowOVrOGzA0MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjE0MzkyMQ==", "bodyText": "ZMS client -> ZTS ServiceCertificate", "url": "https://github.com/AthenZ/athenz/pull/1029#discussion_r456143921", "createdAt": "2020-07-17T00:02:09Z", "author": {"login": "havetisyan"}, "path": "docs/zts_svccert.md", "diffHunk": "@@ -0,0 +1,56 @@\n+* [Overview](#overview)\n+* [Getting Software](#getting-software)\n+* [Prerequisites](#prerequisites)\n+* [Usage](#usage)\n+\n+## Overview\n+----------\n+\n+ZTS TLS Certificate utility provides a service identity x.509 certificate\n+based on registered service's ntoken in on-prem ZTS environment only.\n+\n+## Getting Software\n+-------------------\n+\n+Download latest ZTS TLS Certificate utility binary release from Bintray - click\n+on the `Files` tab, choose the latest version directory and then\n+download the `athenz-utils-<latest-version>-bin.tar.gz` file::\n+\n+[ ![Download](https://api.bintray.com/packages/yahoo/maven/athenz-utils/images/download.svg) ](https://bintray.com/yahoo/maven/athenz-utils/_latestVersion)\n+\n+```shell\n+$ tar xvfz athenz-utils-X.Y-bin.tar.gz\n+```\n+\n+## Prerequisites\n+----------------\n+\n+Before you can use the ZMS client utility, you need to have", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "101dff5f96b9288c4b2b154ab6c4e14bd4ac3c63"}, "originalPosition": 28}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1691, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}