{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI4MTkxMzUw", "number": 1001, "title": "Auto Apply template.", "bodyText": "This Feature lets you set the template metadata field called Autoupdate to \"true\" and when there is a template version bump, the changes will be automatically applied to the template.\n\nI confirm that this contribution is made under the terms of the license found in the root directory of this repository's source tree and that I have the authority necessary to make this contribution on behalf of its copyright owner.", "createdAt": "2020-06-05T02:56:27Z", "url": "https://github.com/AthenZ/athenz/pull/1001", "merged": true, "mergeCommit": {"oid": "5975e5ddef2a95ae63683a8b1711554a2cb70875"}, "closed": true, "closedAt": "2020-06-10T20:05:36Z", "author": {"login": "jothi-prasad"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcoJi3igH2gAyNDI4MTkxMzUwOjQ5NmRlODgxYWFjNzM1ZGJiYzRmNGNjM2NhNGZkM2U0Y2E2ZjEyMWQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcp_WQDAFqTQyODM4Nzk4OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "496de881aac735dbbc4f4cc3ca4fd3e4ca6f121d", "author": {"user": null}, "url": "https://github.com/AthenZ/athenz/commit/496de881aac735dbbc4f4cc3ca4fd3e4ca6f121d", "committedDate": "2020-06-05T02:50:17Z", "message": "autoupdate templates"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI1NjE3MDAy", "url": "https://github.com/AthenZ/athenz/pull/1001#pullrequestreview-425617002", "createdAt": "2020-06-05T20:49:25Z", "commit": {"oid": "97b74f27dbcaf3519fc46a832c872c5bd056c82e"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQyMDo0OToyNVrOGf882w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQyMTowNjozNVrOGf9XXA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjE1NzY1OQ==", "bodyText": "ZMS server does not know about anything about its Storage system so not sure why this method is in ZMSUtils class. Any such functionality must only exist within their respective storage plugin classes - in this case in the JDBC ones.", "url": "https://github.com/AthenZ/athenz/pull/1001#discussion_r436157659", "createdAt": "2020-06-05T20:49:25Z", "author": {"login": "havetisyan"}, "path": "servers/zms/src/main/java/com/yahoo/athenz/zms/utils/ZMSUtils.java", "diffHunk": "@@ -411,4 +412,17 @@ public static boolean isUserAuthorityFilterValid(Authority userAuthority, final\n             return true;\n         }\n     }\n+\n+    // To avoid firing multiple queries against DB, this function will generate 1 consolidated query for all domains->templates combination", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "97b74f27dbcaf3519fc46a832c872c5bd056c82e"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjE1ODU5OA==", "bodyText": "we should not use an empty audit ref. Let's define a string that identifies that the server is the one making change.", "url": "https://github.com/AthenZ/athenz/pull/1001#discussion_r436158598", "createdAt": "2020-06-05T20:51:48Z", "author": {"login": "havetisyan"}, "path": "servers/zms/src/main/java/com/yahoo/athenz/zms/DBService.java", "diffHunk": "@@ -4695,6 +4695,25 @@ void processUserAuthorityRestrictions() {\n         }\n     }\n \n+    Map<String, List<String>> getDomainNamesFromTemplate(Map<String, Integer> templateDetails) {\n+\n+        final String caller = \"getDomainNamesFromTemplate\";\n+        final String auditRef = \"\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "97b74f27dbcaf3519fc46a832c872c5bd056c82e"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjE1OTQ5MQ==", "bodyText": "we should use .isEmpty method", "url": "https://github.com/AthenZ/athenz/pull/1001#discussion_r436159491", "createdAt": "2020-06-05T20:54:01Z", "author": {"login": "havetisyan"}, "path": "servers/zms/src/main/java/com/yahoo/athenz/zms/ZMSImpl.java", "diffHunk": "@@ -890,6 +896,31 @@ void loadSolutionTemplates() {\n             LOG.error(\"Generating empty solution template list...\");\n             serverSolutionTemplates = new SolutionTemplates();\n             serverSolutionTemplates.setTemplates(new HashMap<>());\n+        } else {\n+            eligibleTemplatesForAutoUpdate = new HashMap<>();\n+            for (String templateName : serverSolutionTemplates.getTemplates().keySet()) {\n+                Template template = serverSolutionTemplates.get(templateName);\n+                if (template.getMetadata().getAutoUpdate()\n+                        && template.getMetadata().getKeywordsToReplace() == \"\") {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "97b74f27dbcaf3519fc46a832c872c5bd056c82e"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjE2MDg2OQ==", "bodyText": "we should not block zms server from starting and apply all templates. this should be done in a background thread that does its job and exits", "url": "https://github.com/AthenZ/athenz/pull/1001#discussion_r436160869", "createdAt": "2020-06-05T20:57:17Z", "author": {"login": "havetisyan"}, "path": "servers/zms/src/main/java/com/yahoo/athenz/zms/ZMSImpl.java", "diffHunk": "@@ -496,8 +497,13 @@ public ZMSImpl() {\n         // Initialize Notification Manager\n \n         setNotificationManager();\n+\n+        //autoupdate templates\n+\n+        autoApplyTemplates();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "97b74f27dbcaf3519fc46a832c872c5bd056c82e"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjE2MTY1Ng==", "bodyText": "why is this is class field? it should be something local within the auto apply template method since we only need this once to process templates and never use again.", "url": "https://github.com/AthenZ/athenz/pull/1001#discussion_r436161656", "createdAt": "2020-06-05T20:59:17Z", "author": {"login": "havetisyan"}, "path": "servers/zms/src/main/java/com/yahoo/athenz/zms/ZMSImpl.java", "diffHunk": "@@ -144,6 +144,7 @@\n     protected int domainNameMaxLen;\n     protected AuthorizedServices serverAuthorizedServices = null;\n     protected SolutionTemplates serverSolutionTemplates = null;\n+    protected Map<String, Integer> eligibleTemplatesForAutoUpdate = null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "97b74f27dbcaf3519fc46a832c872c5bd056c82e"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjE2MjI4OA==", "bodyText": "the name of the method does not reflect what the method is doing. looks like we're actually doing the auto update there and not just getting domain names from the template", "url": "https://github.com/AthenZ/athenz/pull/1001#discussion_r436162288", "createdAt": "2020-06-05T21:00:58Z", "author": {"login": "havetisyan"}, "path": "servers/zms/src/main/java/com/yahoo/athenz/zms/DBService.java", "diffHunk": "@@ -4695,6 +4695,25 @@ void processUserAuthorityRestrictions() {\n         }\n     }\n \n+    Map<String, List<String>> getDomainNamesFromTemplate(Map<String, Integer> templateDetails) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "97b74f27dbcaf3519fc46a832c872c5bd056c82e"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjE2MzY5OQ==", "bodyText": "no need for this put since we're modifying the existing list", "url": "https://github.com/AthenZ/athenz/pull/1001#discussion_r436163699", "createdAt": "2020-06-05T21:04:41Z", "author": {"login": "havetisyan"}, "path": "servers/zms/src/main/java/com/yahoo/athenz/zms/store/file/FileConnection.java", "diffHunk": "@@ -473,6 +473,44 @@ public boolean deleteDomainTemplate(String domainName, String templateName, Stri\n         return list;\n     }\n \n+    @Override\n+    public Map<String, List<String>> getDomainFromTemplateName(Map<String, Integer> templateNameAndLatestVersion) {\n+\n+        //Input - templateNameAndLatestVersion (templateName|latestVersion) from template Meta Data\n+        //Output - for a given domain if domainstruct.templateMeta list has the template name and if the currentVersion is <= latestVersion..\n+        //...return map of domain-> List of templatenames\n+\n+        Map<String, List<String>> domainNameTemplateListMap = new HashMap<>();\n+        List<String> domainNames = listDomains(null, 0);\n+        for (String domainName : domainNames) {\n+            DomainStruct domainStruct = getDomainStruct(domainName);\n+            if (domainStruct == null) {\n+                throw ZMSUtils.error(ResourceException.NOT_FOUND, \"domain not found\", \"updateDomainTemplate\");\n+            }\n+            ArrayList<TemplateMetaData> templateMetaList = domainStruct.getTemplateMeta();\n+\n+            if (templateMetaList != null) {\n+                for (TemplateMetaData meta : templateMetaList) {\n+                    for (String templateName : templateNameAndLatestVersion.keySet()) {\n+                        if (meta.getTemplateName().equals(templateName) && meta.getCurrentVersion() < templateNameAndLatestVersion.get(templateName)) {\n+                            if (domainNameTemplateListMap.get(domainName) != null) {\n+                                List<String> tempTemplateList = domainNameTemplateListMap.get(domainName);\n+                                tempTemplateList.add(meta.getTemplateName());\n+                                domainNameTemplateListMap.put(domainName, tempTemplateList);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "97b74f27dbcaf3519fc46a832c872c5bd056c82e"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjE2NDQ0NA==", "bodyText": "instead of calling rs.getString multiple times in the if block we should just get those two values and assign to local variables and then do the checks with those values which makes the code more readable.", "url": "https://github.com/AthenZ/athenz/pull/1001#discussion_r436164444", "createdAt": "2020-06-05T21:06:35Z", "author": {"login": "havetisyan"}, "path": "servers/zms/src/main/java/com/yahoo/athenz/zms/store/jdbc/JDBCConnection.java", "diffHunk": "@@ -870,7 +870,33 @@ public boolean deleteDomainTemplate(String domainName, String templateName, Stri\n         Collections.sort(templates);\n         return templates;\n     }\n-    \n+\n+    @Override\n+    public Map<String, List<String>> getDomainFromTemplateName(Map<String, Integer> templateNameAndLatestVersion) {\n+        final String caller = \"getDomainsFromTemplate\";\n+        Map<String, List<String>> domainNameTemplateListMap = new HashMap<>();\n+\n+        try (PreparedStatement ps = con.prepareStatement(ZMSUtils.generateDomainTemplateVersionQuery(templateNameAndLatestVersion))) {\n+            try (ResultSet rs = executeQuery(ps, caller)) {\n+                while (rs.next()) {\n+                    if (domainNameTemplateListMap.get(rs.getString(ZMSConsts.DB_COLUMN_NAME)) != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "97b74f27dbcaf3519fc46a832c872c5bd056c82e"}, "originalPosition": 14}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8f846cdc56cdf65ce10a9dd157795d2a50eda075", "author": {"user": null}, "url": "https://github.com/AthenZ/athenz/commit/8f846cdc56cdf65ce10a9dd157795d2a50eda075", "committedDate": "2020-06-06T04:41:02Z", "message": "fixing review comments"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "97b74f27dbcaf3519fc46a832c872c5bd056c82e", "author": {"user": null}, "url": "https://github.com/AthenZ/athenz/commit/97b74f27dbcaf3519fc46a832c872c5bd056c82e", "committedDate": "2020-06-05T03:16:22Z", "message": "fixing merge conflicts"}, "afterCommit": {"oid": "8f846cdc56cdf65ce10a9dd157795d2a50eda075", "author": {"user": null}, "url": "https://github.com/AthenZ/athenz/commit/8f846cdc56cdf65ce10a9dd157795d2a50eda075", "committedDate": "2020-06-06T04:41:02Z", "message": "fixing review comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI2Nzk4NTI0", "url": "https://github.com/AthenZ/athenz/pull/1001#pullrequestreview-426798524", "createdAt": "2020-06-09T05:28:51Z", "commit": {"oid": "8f846cdc56cdf65ce10a9dd157795d2a50eda075"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQwNToyODo1MVrOGg5Qyw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQwNjoxOToxNlrOGg6RTw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzE0NTgwMw==", "bodyText": "see my comments below. we don't need to maintain this as a class field.", "url": "https://github.com/AthenZ/athenz/pull/1001#discussion_r437145803", "createdAt": "2020-06-09T05:28:51Z", "author": {"login": "havetisyan"}, "path": "servers/zms/src/main/java/com/yahoo/athenz/zms/ZMSImpl.java", "diffHunk": "@@ -144,6 +144,7 @@\n     protected int domainNameMaxLen;\n     protected AuthorizedServices serverAuthorizedServices = null;\n     protected SolutionTemplates serverSolutionTemplates = null;\n+    protected Map<String, Integer> eligibleTemplatesForAutoUpdate = null;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjE2MTY1Ng=="}, "originalCommit": {"oid": "97b74f27dbcaf3519fc46a832c872c5bd056c82e"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzE0NjExOQ==", "bodyText": "let's move this lines at the beginning of the autoApplyTemplates function. the eligibleTemplatesForAutoUpdate will be set as a local variable which is calculated and then passed on to the AutoApplyTemplate constructor", "url": "https://github.com/AthenZ/athenz/pull/1001#discussion_r437146119", "createdAt": "2020-06-09T05:29:58Z", "author": {"login": "havetisyan"}, "path": "servers/zms/src/main/java/com/yahoo/athenz/zms/ZMSImpl.java", "diffHunk": "@@ -890,6 +894,24 @@ void loadSolutionTemplates() {\n             LOG.error(\"Generating empty solution template list...\");\n             serverSolutionTemplates = new SolutionTemplates();\n             serverSolutionTemplates.setTemplates(new HashMap<>());\n+        } else {\n+            eligibleTemplatesForAutoUpdate = new HashMap<>();\n+            for (String templateName : serverSolutionTemplates.getTemplates().keySet()) {\n+                Template template = serverSolutionTemplates.get(templateName);\n+                if (template.getMetadata().getAutoUpdate()\n+                        && template.getMetadata().getKeywordsToReplace().isEmpty()) {\n+                    eligibleTemplatesForAutoUpdate.put(templateName, template.getMetadata().getLatestVersion());\n+                }\n+            }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f846cdc56cdf65ce10a9dd157795d2a50eda075"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzE0NzI3MQ==", "bodyText": "the put was not removed - it's not necessary.", "url": "https://github.com/AthenZ/athenz/pull/1001#discussion_r437147271", "createdAt": "2020-06-09T05:33:53Z", "author": {"login": "havetisyan"}, "path": "servers/zms/src/main/java/com/yahoo/athenz/zms/store/file/FileConnection.java", "diffHunk": "@@ -473,6 +473,44 @@ public boolean deleteDomainTemplate(String domainName, String templateName, Stri\n         return list;\n     }\n \n+    @Override\n+    public Map<String, List<String>> getDomainFromTemplateName(Map<String, Integer> templateNameAndLatestVersion) {\n+\n+        //Input - templateNameAndLatestVersion (templateName|latestVersion) from template Meta Data\n+        //Output - for a given domain if domainstruct.templateMeta list has the template name and if the currentVersion is <= latestVersion..\n+        //...return map of domain-> List of templatenames\n+\n+        Map<String, List<String>> domainNameTemplateListMap = new HashMap<>();\n+        List<String> domainNames = listDomains(null, 0);\n+        for (String domainName : domainNames) {\n+            DomainStruct domainStruct = getDomainStruct(domainName);\n+            if (domainStruct == null) {\n+                throw ZMSUtils.error(ResourceException.NOT_FOUND, \"domain not found\", \"updateDomainTemplate\");\n+            }\n+            ArrayList<TemplateMetaData> templateMetaList = domainStruct.getTemplateMeta();\n+\n+            if (templateMetaList != null) {\n+                for (TemplateMetaData meta : templateMetaList) {\n+                    for (String templateName : templateNameAndLatestVersion.keySet()) {\n+                        if (meta.getTemplateName().equals(templateName) && meta.getCurrentVersion() < templateNameAndLatestVersion.get(templateName)) {\n+                            if (domainNameTemplateListMap.get(domainName) != null) {\n+                                List<String> tempTemplateList = domainNameTemplateListMap.get(domainName);\n+                                tempTemplateList.add(meta.getTemplateName());\n+                                domainNameTemplateListMap.put(domainName, tempTemplateList);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjE2MzY5OQ=="}, "originalCommit": {"oid": "97b74f27dbcaf3519fc46a832c872c5bd056c82e"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzE1NzY1Mg==", "bodyText": "this doesn't need to be public and doesn't look we have any unit tests for this method.", "url": "https://github.com/AthenZ/athenz/pull/1001#discussion_r437157652", "createdAt": "2020-06-09T06:06:18Z", "author": {"login": "havetisyan"}, "path": "servers/zms/src/main/java/com/yahoo/athenz/zms/store/jdbc/JDBCConnection.java", "diffHunk": "@@ -4130,6 +4157,19 @@ private boolean updateRoleMemberNotificationTimestamp(String server, long timest\n         return roles;\n     }\n \n+    // To avoid firing multiple queries against DB, this function will generate 1 consolidated query for all domains->templates combination\n+    public String generateDomainTemplateVersionQuery(Map<String, Integer> templateNameAndLatestVersion) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f846cdc56cdf65ce10a9dd157795d2a50eda075"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzE1ODAxNw==", "bodyText": "why not just call multiple appends instead of adding the strings first and then calling append?", "url": "https://github.com/AthenZ/athenz/pull/1001#discussion_r437158017", "createdAt": "2020-06-09T06:07:18Z", "author": {"login": "havetisyan"}, "path": "servers/zms/src/main/java/com/yahoo/athenz/zms/store/jdbc/JDBCConnection.java", "diffHunk": "@@ -4130,6 +4157,19 @@ private boolean updateRoleMemberNotificationTimestamp(String server, long timest\n         return roles;\n     }\n \n+    // To avoid firing multiple queries against DB, this function will generate 1 consolidated query for all domains->templates combination\n+    public String generateDomainTemplateVersionQuery(Map<String, Integer> templateNameAndLatestVersion) {\n+        StringBuilder query = new StringBuilder(\"SELECT domain.name, domain_template.template FROM domain_template \" +\n+                \"JOIN domain ON domain_template.domain_id=domain.domain_id WHERE \");\n+\n+        for (String templateName : templateNameAndLatestVersion.keySet()) {\n+            query.append(\"(domain_template.template = '\" + templateName + \"' and current_version < \" + templateNameAndLatestVersion.get(templateName) + \") OR \");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f846cdc56cdf65ce10a9dd157795d2a50eda075"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzE1ODk4MA==", "bodyText": "not sure what the comment at the end about domain id is referring to", "url": "https://github.com/AthenZ/athenz/pull/1001#discussion_r437158980", "createdAt": "2020-06-09T06:10:08Z", "author": {"login": "havetisyan"}, "path": "servers/zms/src/test/java/com/yahoo/athenz/zms/store/jdbc/JDBCConnectionTest.java", "diffHunk": "@@ -9358,4 +9358,37 @@ public void testListRolesWithUserAuthorityRestrictionsException() throws Excepti\n         }\n         jdbcConn.close();\n     }\n+\n+    @Test\n+    public void testGetDomainFromTemplateName() throws Exception {\n+        Map<String, Integer> templateDetails = new HashMap<>();\n+        templateDetails.put(\"aws\", 1);\n+        templateDetails.put(\"aws_bastion\", 2);\n+        String domainName = \"testdom\";\n+        String templateName1 = \"testtemplate\";\n+        String templateName2 = \"testtemplate2\";\n+\n+        JDBCConnection jdbcConn = new JDBCConnection(mockConn, true);\n+\n+        Mockito.when(mockResultSet.getString(\"name\"))\n+                .thenReturn(domainName); // domain name\n+        Mockito.when(mockResultSet.getString(\"template\"))\n+                .thenReturn(templateName1); // template name\n+        Mockito.when(mockResultSet.getString(\"name\"))\n+                .thenReturn(domainName);\n+        Mockito.when(mockResultSet.getString(\"template\"))\n+                .thenReturn(templateName2);\n+\n+        Mockito.when(mockResultSet.next())\n+                .thenReturn(true).thenReturn(true).thenReturn(false); // this one is for domain id", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f846cdc56cdf65ce10a9dd157795d2a50eda075"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzE2MjMxOQ==", "bodyText": "this call should be protected such that if any exception is thrown, we don't stop the process but rather just swallow it and let it continue with the rest of domains.", "url": "https://github.com/AthenZ/athenz/pull/1001#discussion_r437162319", "createdAt": "2020-06-09T06:19:16Z", "author": {"login": "havetisyan"}, "path": "servers/zms/src/main/java/com/yahoo/athenz/zms/DBService.java", "diffHunk": "@@ -4695,6 +4695,24 @@ void processUserAuthorityRestrictions() {\n         }\n     }\n \n+    Map<String, List<String>> applyTemplatesForListOfDomains(Map<String, Integer> templateDetails) {\n+        final String caller = \"applyTemplatesForListOfDomains\";\n+        final String auditRef = \"AutoApplyTemplate\";\n+        Map<String, List<String>> domainTemplateListMap;\n+        DomainTemplate domainTemplate = new DomainTemplate();\n+        try (ObjectStoreConnection con = store.getConnection(true, false)) {\n+             domainTemplateListMap = con.getDomainFromTemplateName(templateDetails);\n+        }\n+\n+        for (String domainName : domainTemplateListMap.keySet()) {\n+            domainTemplate.setTemplateNames(domainTemplateListMap.get(domainName));\n+            //Passing null context since it is an internal call during app start up\n+            //executePutDomainTemplate can bulk apply templates given a domain hence sending domainName and templatelist\n+            this.executePutDomainTemplate(null, domainName, domainTemplate, auditRef, caller);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f846cdc56cdf65ce10a9dd157795d2a50eda075"}, "originalPosition": 17}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c8e5355740a7439c1f278eb98394a0550e3d95be", "author": {"user": null}, "url": "https://github.com/AthenZ/athenz/commit/c8e5355740a7439c1f278eb98394a0550e3d95be", "committedDate": "2020-06-10T00:16:31Z", "message": "fixing review comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI4Mzg3OTg4", "url": "https://github.com/AthenZ/athenz/pull/1001#pullrequestreview-428387988", "createdAt": "2020-06-10T20:05:18Z", "commit": {"oid": "c8e5355740a7439c1f278eb98394a0550e3d95be"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2962, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}