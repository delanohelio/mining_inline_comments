{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMzNDAxNDY2", "number": 1005, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxNjoyNDowM1rOEFHmFg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxNjozMjowMFrOEG07-w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczODAyNzc0OnYy", "diffSide": "RIGHT", "path": "servers/zms/src/main/java/com/yahoo/athenz/zms/DBService.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxNjoyNDowM1rOGjKL7g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxODowOTowN1rOGknRDA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTUyMDIzOA==", "bodyText": "The change itself is not sufficient since it's possible that the user has made some changes already and thus we don't want to lose any of those changes. So I want to make our logic a little more smarter.\nWhen applying the template and updating the role, we should read the original values and only override those that have been specified in the template. (let's have a unit test for this case as well).", "url": "https://github.com/AthenZ/athenz/pull/1005#discussion_r439520238", "createdAt": "2020-06-12T16:24:03Z", "author": {"login": "havetisyan"}, "path": "servers/zms/src/main/java/com/yahoo/athenz/zms/DBService.java", "diffHunk": "@@ -2820,7 +2820,20 @@ Role updateTemplateRole(Role role, String domainName, List<TemplateParam> params\n         }\n         Role templateRole = new Role()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "51f1524526d1e369b94cdf1c923affb4feb24fb3"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTA0NTI2MA==", "bodyText": "Done. Added logic to merge existing rolemeta from DB with new rolemeta values form template.\nadded a unit test to test this scenario too.", "url": "https://github.com/AthenZ/athenz/pull/1005#discussion_r441045260", "createdAt": "2020-06-16T18:09:07Z", "author": {"login": "jothi-prasad"}, "path": "servers/zms/src/main/java/com/yahoo/athenz/zms/DBService.java", "diffHunk": "@@ -2820,7 +2820,20 @@ Role updateTemplateRole(Role role, String domainName, List<TemplateParam> params\n         }\n         Role templateRole = new Role()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTUyMDIzOA=="}, "originalCommit": {"oid": "51f1524526d1e369b94cdf1c923affb4feb24fb3"}, "originalPosition": 2}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczODAzMDY5OnYy", "diffSide": "RIGHT", "path": "servers/zms/src/test/java/com/yahoo/athenz/zms/DBServiceTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxNjoyNDo1NlrOGjKNyQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxODowOTozM1rOGknSFQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTUyMDcxMw==", "bodyText": "in our test, we should verify that all attributes have been set that are defined in the template to make sure all attributes are correctly processed.", "url": "https://github.com/AthenZ/athenz/pull/1005#discussion_r439520713", "createdAt": "2020-06-12T16:24:56Z", "author": {"login": "havetisyan"}, "path": "servers/zms/src/test/java/com/yahoo/athenz/zms/DBServiceTest.java", "diffHunk": "@@ -7012,4 +7012,72 @@ public void testAutoApplySolutionTemplate() {\n \n         zms.deleteTopLevelDomain(mockDomRsrcCtx, domainName, auditRef);\n     }\n+\n+    @Test\n+    public void testApplySolutionTemplateWithRoleMetaData() {\n+\n+        String domainName = \"solutiontemplate-rolemeta\";\n+        String caller = \"testApplySolutionTemplateWithRoleMetaData\";\n+        TopLevelDomain dom1 = createTopLevelDomainObject(domainName,\n+                \"Test Domain1\", \"testOrg\", adminUser);\n+        zms.postTopLevelDomain(mockDomRsrcCtx, auditRef, dom1);\n+\n+        // apply the template\n+\n+        List<String> templates = new ArrayList<>();\n+        templates.add(\"templateWithRoleMeta\");\n+        DomainTemplate domainTemplate = new DomainTemplate().setTemplateNames(templates);\n+        zms.dbService.executePutDomainTemplate(mockDomRsrcCtx, domainName, domainTemplate, auditRef, caller);\n+\n+        DomainTemplateList domainTemplateList = zms.dbService.listDomainTemplates(domainName);\n+        assertEquals(1, domainTemplateList.getTemplateNames().size());\n+\n+        // verify that our role collection includes the expected roles\n+\n+        List<String> names = zms.dbService.listRoles(domainName);\n+        assertEquals(2, names.size());\n+        assertTrue(names.contains(\"admin\"));\n+        assertTrue(names.contains(\"vip_admin\"));\n+\n+        Role role = zms.dbService.getRole(domainName, \"vip_admin\", false, false, false);\n+        assertEquals(domainName + \":role.vip_admin\", role.getName());\n+        assertNull(role.getTrust());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "51f1524526d1e369b94cdf1c923affb4feb24fb3"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTA0NTUyNQ==", "bodyText": "Done", "url": "https://github.com/AthenZ/athenz/pull/1005#discussion_r441045525", "createdAt": "2020-06-16T18:09:33Z", "author": {"login": "jothi-prasad"}, "path": "servers/zms/src/test/java/com/yahoo/athenz/zms/DBServiceTest.java", "diffHunk": "@@ -7012,4 +7012,72 @@ public void testAutoApplySolutionTemplate() {\n \n         zms.deleteTopLevelDomain(mockDomRsrcCtx, domainName, auditRef);\n     }\n+\n+    @Test\n+    public void testApplySolutionTemplateWithRoleMetaData() {\n+\n+        String domainName = \"solutiontemplate-rolemeta\";\n+        String caller = \"testApplySolutionTemplateWithRoleMetaData\";\n+        TopLevelDomain dom1 = createTopLevelDomainObject(domainName,\n+                \"Test Domain1\", \"testOrg\", adminUser);\n+        zms.postTopLevelDomain(mockDomRsrcCtx, auditRef, dom1);\n+\n+        // apply the template\n+\n+        List<String> templates = new ArrayList<>();\n+        templates.add(\"templateWithRoleMeta\");\n+        DomainTemplate domainTemplate = new DomainTemplate().setTemplateNames(templates);\n+        zms.dbService.executePutDomainTemplate(mockDomRsrcCtx, domainName, domainTemplate, auditRef, caller);\n+\n+        DomainTemplateList domainTemplateList = zms.dbService.listDomainTemplates(domainName);\n+        assertEquals(1, domainTemplateList.getTemplateNames().size());\n+\n+        // verify that our role collection includes the expected roles\n+\n+        List<String> names = zms.dbService.listRoles(domainName);\n+        assertEquals(2, names.size());\n+        assertTrue(names.contains(\"admin\"));\n+        assertTrue(names.contains(\"vip_admin\"));\n+\n+        Role role = zms.dbService.getRole(domainName, \"vip_admin\", false, false, false);\n+        assertEquals(domainName + \":role.vip_admin\", role.getName());\n+        assertNull(role.getTrust());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTUyMDcxMw=="}, "originalCommit": {"oid": "51f1524526d1e369b94cdf1c923affb4feb24fb3"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1NTk0MjM1OnYy", "diffSide": "RIGHT", "path": "servers/zms/src/main/java/com/yahoo/athenz/zms/DBService.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxNjozMjowMFrOGl3O9Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQyMzo0OToxOFrOGmDsgQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjM1NTQ0NQ==", "bodyText": "we cannot change the behavior of the processRole - that method is used in lots of places.\nthis call must be done only in the method where templates are being handled.", "url": "https://github.com/AthenZ/athenz/pull/1005#discussion_r442355445", "createdAt": "2020-06-18T16:32:00Z", "author": {"login": "havetisyan"}, "path": "servers/zms/src/main/java/com/yahoo/athenz/zms/DBService.java", "diffHunk": "@@ -509,6 +509,7 @@ boolean processRole(ObjectStoreConnection con, Role originalRole, String domainN\n         } else {\n             // carrying over auditEnabled from original role\n             role.setAuditEnabled(originalRole.getAuditEnabled());\n+            mergeOriginalRoleAndMetaRoleAttributes(originalRole, role);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a326b8e43d2f47a1023c5145537a07309219b6af"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjU1OTYxNw==", "bodyText": "Done.", "url": "https://github.com/AthenZ/athenz/pull/1005#discussion_r442559617", "createdAt": "2020-06-18T23:49:18Z", "author": {"login": "jothi-prasad"}, "path": "servers/zms/src/main/java/com/yahoo/athenz/zms/DBService.java", "diffHunk": "@@ -509,6 +509,7 @@ boolean processRole(ObjectStoreConnection con, Role originalRole, String domainN\n         } else {\n             // carrying over auditEnabled from original role\n             role.setAuditEnabled(originalRole.getAuditEnabled());\n+            mergeOriginalRoleAndMetaRoleAttributes(originalRole, role);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjM1NTQ0NQ=="}, "originalCommit": {"oid": "a326b8e43d2f47a1023c5145537a07309219b6af"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1669, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}