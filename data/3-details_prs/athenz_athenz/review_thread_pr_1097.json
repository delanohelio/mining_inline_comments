{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc0OTkzNTQz", "number": 1097, "reviewThreads": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMFQwODowNzoxMFrOEeCz9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMFQxMToxMTowOFrOEeDu0g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5OTM4ODA0OnYy", "diffSide": "RIGHT", "path": "servers/zms/src/main/java/com/yahoo/athenz/zms/DBService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMFQwODowNzoxMFrOHJg2uQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMFQwODowNzoxMFrOHJg2uQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTczNzUyOQ==", "bodyText": "Please change the comment from  \"by default we're only going to handle audit enabled roles\" to \"by default we're only going to handle audit enabled roles and groups\"", "url": "https://github.com/AthenZ/athenz/pull/1097#discussion_r479737529", "createdAt": "2020-08-30T08:07:10Z", "author": {"login": "OferLevi85"}, "path": "servers/zms/src/main/java/com/yahoo/athenz/zms/DBService.java", "diffHunk": "@@ -125,14 +126,17 @@ void setAuditRefObjectBits() {\n         // the value is a comma separated list of supported objects:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0e4332925ee6c42f8e87e64908526d663f05b152"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5OTQzMzMyOnYy", "diffSide": "RIGHT", "path": "servers/zms/src/main/java/com/yahoo/athenz/zms/DBService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMFQwOTowMToyMVrOHJhMTA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMFQwOTowMToyMVrOHJhMTA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTc0MzA1Mg==", "bodyText": "// retrieve our original group", "url": "https://github.com/AthenZ/athenz/pull/1097#discussion_r479743052", "createdAt": "2020-08-30T09:01:21Z", "author": {"login": "OferLevi85"}, "path": "servers/zms/src/main/java/com/yahoo/athenz/zms/DBService.java", "diffHunk": "@@ -934,6 +1026,63 @@ void executePutRole(ResourceContext ctx, String domainName, String roleName, Rol\n         }\n     }\n \n+    void executePutGroup(ResourceContext ctx, final String domainName, final String groupName, Group group, final String auditRef) {\n+\n+        // our exception handling code does the check for retry count\n+        // and throws the exception it had received when the retry\n+        // count reaches 0\n+\n+        for (int retryCount = defaultRetryCount; ; retryCount--) {\n+\n+            try (ObjectStoreConnection con = store.getConnection(false, true)) {\n+\n+                String principal = getPrincipalName(ctx);\n+\n+                // first verify that auditing requirements are met\n+\n+                checkDomainAuditEnabled(con, domainName, auditRef, ctx.getApiName(), principal, AUDIT_TYPE_GROUP);\n+\n+                // check that quota is not exceeded\n+\n+                quotaCheck.checkGroupQuota(con, domainName, group, ctx.getApiName());\n+\n+                // retrieve our original role", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0e4332925ee6c42f8e87e64908526d663f05b152"}, "originalPosition": 197}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5OTQzNTc3OnYy", "diffSide": "RIGHT", "path": "servers/zms/src/main/java/com/yahoo/athenz/zms/DBService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMFQwOTowMzo1OVrOHJhNgA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMFQwOTowMzo1OVrOHJhNgA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTc0MzM2MA==", "bodyText": "// update our group and domain time-stamps, and invalidate local cache entry", "url": "https://github.com/AthenZ/athenz/pull/1097#discussion_r479743360", "createdAt": "2020-08-30T09:03:59Z", "author": {"login": "OferLevi85"}, "path": "servers/zms/src/main/java/com/yahoo/athenz/zms/DBService.java", "diffHunk": "@@ -1348,6 +1560,98 @@ void executeDeletePendingMembership(ResourceContext ctx, String domainName, Stri\n         }\n     }\n \n+    void executeDeleteGroupMembership(ResourceContext ctx, final String domainName, final String groupName,\n+                                      final String normalizedMember, final String auditRef) {\n+\n+        // our exception handling code does the check for retry count\n+        // and throws the exception it had received when the retry\n+        // count reaches 0\n+\n+        for (int retryCount = defaultRetryCount; ; retryCount--) {\n+\n+            try (ObjectStoreConnection con = store.getConnection(true, true)) {\n+\n+                String principal = getPrincipalName(ctx);\n+\n+                // first verify that auditing requirements are met\n+\n+                checkDomainAuditEnabled(con, domainName, auditRef, ctx.getApiName(), principal, AUDIT_TYPE_GROUP);\n+\n+                // process our delete group member operation\n+\n+                if (!con.deleteGroupMember(domainName, groupName, normalizedMember, principal, auditRef)) {\n+                    con.rollbackChanges();\n+                    throw ZMSUtils.notFoundError(\"unable to delete group member: \" +\n+                            normalizedMember + \" from group: \" + groupName, ctx.getApiName());\n+                }\n+\n+                // update our group and domain time-stamps, and invalidate local cache entry\n+\n+                con.updateGroupModTimestamp(domainName, groupName);\n+                con.updateDomainModTimestamp(domainName);\n+                cacheStore.invalidate(domainName);\n+\n+                // audit log the request\n+\n+                auditLogRequest(ctx, domainName, auditRef, ctx.getApiName(), ZMSConsts.HTTP_DELETE,\n+                        groupName, \"{\\\"member\\\": \\\"\" + normalizedMember + \"\\\"}\");\n+\n+                return;\n+\n+            } catch (ResourceException ex) {\n+                if (!shouldRetryOperation(ex, retryCount)) {\n+                    throw ex;\n+                }\n+            }\n+        }\n+    }\n+\n+    void executeDeletePendingGroupMembership(ResourceContext ctx, final String domainName, final String groupName,\n+                                             final String normalizedMember, final String auditRef) {\n+\n+        // our exception handling code does the check for retry count\n+        // and throws the exception it had received when the retry\n+        // count reaches 0\n+\n+        for (int retryCount = defaultRetryCount; ; retryCount--) {\n+\n+            try (ObjectStoreConnection con = store.getConnection(true, true)) {\n+\n+                String principal = getPrincipalName(ctx);\n+\n+                // first verify that auditing requirements are met\n+\n+                checkDomainAuditEnabled(con, domainName, auditRef, ctx.getApiName(), principal, AUDIT_TYPE_GROUP);\n+\n+                // process our delete pending group member operation\n+\n+                if (!con.deletePendingGroupMember(domainName, groupName, normalizedMember, principal, auditRef)) {\n+                    con.rollbackChanges();\n+                    throw ZMSUtils.notFoundError(\"unable to delete pending group member: \" +\n+                            normalizedMember + \" from group: \" + groupName, ctx.getApiName());\n+                }\n+\n+                // update our role and domain time-stamps, and invalidate local cache entry", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0e4332925ee6c42f8e87e64908526d663f05b152"}, "originalPosition": 393}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5OTQ0NTgzOnYy", "diffSide": "RIGHT", "path": "servers/zms/src/main/java/com/yahoo/athenz/zms/DBService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMFQwOToxNTo1MlrOHJhSWg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMFQwOToxNTo1MlrOHJhSWg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTc0NDYwMg==", "bodyText": "Please add unit test for this method (similar to updateServiceIdentitySystemMetaFields which has unit tests)\nI think that it will be preferable to make the caller an input argument.\nThis method is called only from executePutGroupSystemMeta so the \"caller\" is correct but if someone will reuse this method then he can accidentally leave this value as-is. This is also true for updateServiceIdentitySystemMetaFields", "url": "https://github.com/AthenZ/athenz/pull/1097#discussion_r479744602", "createdAt": "2020-08-30T09:15:52Z", "author": {"login": "OferLevi85"}, "path": "servers/zms/src/main/java/com/yahoo/athenz/zms/DBService.java", "diffHunk": "@@ -2624,36 +3017,46 @@ void updateSystemMetaFields(Domain domain, final String attribute, boolean delet\n         }\n     }\n \n-    void updateRoleSystemMetaFields(Role role, final String attribute, boolean deleteAllowed, RoleSystemMeta meta) {\n+    void updateRoleSystemMetaFields(Role role, final String attribute, RoleSystemMeta meta) {\n \n         final String caller = \"putrolesystemmeta\";\n \n         // system attributes we'll only set if they're available\n         // in the given object\n \n-        switch (attribute) {\n-            case ZMSConsts.SYSTEM_META_AUDIT_ENABLED:\n-                role.setAuditEnabled(meta.getAuditEnabled());\n-                break;\n-            default:\n-                throw ZMSUtils.requestError(\"unknown role system meta attribute: \" + attribute, caller);\n+        if (ZMSConsts.SYSTEM_META_AUDIT_ENABLED.equals(attribute)) {\n+            role.setAuditEnabled(meta.getAuditEnabled());\n+        } else {\n+            throw ZMSUtils.requestError(\"unknown role system meta attribute: \" + attribute, caller);\n+        }\n+    }\n+\n+    void updateGroupSystemMetaFields(Group group, final String attribute, GroupSystemMeta meta) {\n+\n+        final String caller = \"putgroupsystemmeta\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0e4332925ee6c42f8e87e64908526d663f05b152"}, "originalPosition": 632}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5OTQ1NDY5OnYy", "diffSide": "RIGHT", "path": "servers/zms/src/main/java/com/yahoo/athenz/zms/DBService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMFQwOToyNzowM1rOHJhWpw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMFQwOToyNzowM1rOHJhWpw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTc0NTcwMw==", "bodyText": "// copy of our group", "url": "https://github.com/AthenZ/athenz/pull/1097#discussion_r479745703", "createdAt": "2020-08-30T09:27:03Z", "author": {"login": "OferLevi85"}, "path": "servers/zms/src/main/java/com/yahoo/athenz/zms/DBService.java", "diffHunk": "@@ -4206,6 +4722,96 @@ public void executePutRoleMeta(ResourceContext ctx, String domainName, String ro\n         }\n     }\n \n+    void updateGroupMetaFields(Group group, GroupMeta meta) {\n+\n+        // these two fields have default values so after validation\n+        // we'll never have nulls\n+\n+        group.setSelfServe(meta.getSelfServe());\n+        group.setReviewEnabled(meta.getReviewEnabled());\n+\n+        if (meta.getNotifyRoles() != null) {\n+            group.setNotifyRoles(meta.getNotifyRoles());\n+        }\n+        if (meta.getUserAuthorityFilter() != null) {\n+            group.setUserAuthorityFilter(meta.getUserAuthorityFilter());\n+        }\n+        if (meta.getUserAuthorityExpiration() != null) {\n+            group.setUserAuthorityExpiration(meta.getUserAuthorityExpiration());\n+        }\n+    }\n+\n+    public void executePutGroupMeta(ResourceContext ctx, final String domainName, final String groupName,\n+                                    GroupMeta meta, final String auditRef) {\n+\n+        // our exception handling code does the check for retry count\n+        // and throws the exception it had received when the retry\n+        // count reaches 0\n+\n+        for (int retryCount = defaultRetryCount; ; retryCount--) {\n+\n+            try (ObjectStoreConnection con = store.getConnection(false, true)) {\n+\n+                Group originalGroup = getGroup(con, domainName, groupName, false, false);\n+                if (originalGroup == null) {\n+                    con.rollbackChanges();\n+                    throw ZMSUtils.notFoundError(\"Unknown group: \" + groupName, ctx.getApiName());\n+                }\n+\n+                checkObjectAuditEnabled(con, originalGroup.getAuditEnabled(), originalGroup.getName(),\n+                        auditRef, ctx.getApiName(), getPrincipalName(ctx));\n+\n+                // now process the request. first we're going to make a\n+                // copy of our role", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0e4332925ee6c42f8e87e64908526d663f05b152"}, "originalPosition": 892}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5OTQ1NTMwOnYy", "diffSide": "RIGHT", "path": "servers/zms/src/main/java/com/yahoo/athenz/zms/DBService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMFQwOToyODoxMVrOHJhXAQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMFQwOToyODoxMVrOHJhXAQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTc0NTc5Mw==", "bodyText": "if the role member => if the group member\n... members in the role => members in the group", "url": "https://github.com/AthenZ/athenz/pull/1097#discussion_r479745793", "createdAt": "2020-08-30T09:28:11Z", "author": {"login": "OferLevi85"}, "path": "servers/zms/src/main/java/com/yahoo/athenz/zms/DBService.java", "diffHunk": "@@ -4206,6 +4722,96 @@ public void executePutRoleMeta(ResourceContext ctx, String domainName, String ro\n         }\n     }\n \n+    void updateGroupMetaFields(Group group, GroupMeta meta) {\n+\n+        // these two fields have default values so after validation\n+        // we'll never have nulls\n+\n+        group.setSelfServe(meta.getSelfServe());\n+        group.setReviewEnabled(meta.getReviewEnabled());\n+\n+        if (meta.getNotifyRoles() != null) {\n+            group.setNotifyRoles(meta.getNotifyRoles());\n+        }\n+        if (meta.getUserAuthorityFilter() != null) {\n+            group.setUserAuthorityFilter(meta.getUserAuthorityFilter());\n+        }\n+        if (meta.getUserAuthorityExpiration() != null) {\n+            group.setUserAuthorityExpiration(meta.getUserAuthorityExpiration());\n+        }\n+    }\n+\n+    public void executePutGroupMeta(ResourceContext ctx, final String domainName, final String groupName,\n+                                    GroupMeta meta, final String auditRef) {\n+\n+        // our exception handling code does the check for retry count\n+        // and throws the exception it had received when the retry\n+        // count reaches 0\n+\n+        for (int retryCount = defaultRetryCount; ; retryCount--) {\n+\n+            try (ObjectStoreConnection con = store.getConnection(false, true)) {\n+\n+                Group originalGroup = getGroup(con, domainName, groupName, false, false);\n+                if (originalGroup == null) {\n+                    con.rollbackChanges();\n+                    throw ZMSUtils.notFoundError(\"Unknown group: \" + groupName, ctx.getApiName());\n+                }\n+\n+                checkObjectAuditEnabled(con, originalGroup.getAuditEnabled(), originalGroup.getName(),\n+                        auditRef, ctx.getApiName(), getPrincipalName(ctx));\n+\n+                // now process the request. first we're going to make a\n+                // copy of our role\n+\n+                Group updatedGroup = new Group()\n+                        .setName(originalGroup.getName())\n+                        .setAuditEnabled(originalGroup.getAuditEnabled())\n+                        .setSelfServe(originalGroup.getSelfServe())\n+                        .setReviewEnabled(originalGroup.getReviewEnabled())\n+                        .setNotifyRoles(originalGroup.getNotifyRoles())\n+                        .setUserAuthorityFilter(originalGroup.getUserAuthorityFilter())\n+                        .setUserAuthorityExpiration(originalGroup.getUserAuthorityExpiration());\n+\n+                // then we're going to apply the updated fields\n+                // from the given object\n+\n+                updateGroupMetaFields(updatedGroup, meta);\n+\n+                con.updateGroup(domainName, updatedGroup);\n+                saveChanges(con, domainName);\n+\n+                // audit log the request\n+\n+                StringBuilder auditDetails = new StringBuilder(ZMSConsts.STRING_BLDR_SIZE_DEFAULT);\n+                auditLogGroupMeta(auditDetails, updatedGroup, groupName);\n+\n+                auditLogRequest(ctx, domainName, auditRef, ctx.getApiName(), ZMSConsts.HTTP_PUT,\n+                        domainName, auditDetails.toString());\n+\n+                // if the role member expiry date or review date has changed then we're going", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0e4332925ee6c42f8e87e64908526d663f05b152"}, "originalPosition": 919}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5OTQ4OTE3OnYy", "diffSide": "RIGHT", "path": "servers/zms/src/main/java/com/yahoo/athenz/zms/DBService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMFQxMDowOTo0MVrOHJhnOg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMFQxMDowOTo0MVrOHJhnOg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTc0OTk0Ng==", "bodyText": "insert the role => insert the group", "url": "https://github.com/AthenZ/athenz/pull/1097#discussion_r479749946", "createdAt": "2020-08-30T10:09:41Z", "author": {"login": "OferLevi85"}, "path": "servers/zms/src/main/java/com/yahoo/athenz/zms/DBService.java", "diffHunk": "@@ -570,6 +570,61 @@ boolean processRole(ObjectStoreConnection con, Role originalRole, String domainN\n         return true;\n     }\n \n+    boolean processGroup(ObjectStoreConnection con, Group originalGroup, final String domainName,\n+                        final String groupName, Group group, final String admin, final String auditRef,\n+                        StringBuilder auditDetails) {\n+\n+        // check to see if we need to insert the role or update it", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0e4332925ee6c42f8e87e64908526d663f05b152"}, "originalPosition": 58}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5OTUyNTI2OnYy", "diffSide": "RIGHT", "path": "servers/zms/src/main/java/com/yahoo/athenz/zms/DBService.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMFQxMDo1NTozOVrOHJh4iA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQwMTo1MjowMlrOHJnu3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTc1NDM3Ng==", "bodyText": "I might be missing something but shouldn't this be reversed?\nif (defaultValue == Boolean.TRUE) {\nreturn value == Boolean.FALSE ? \"false\" : \"true\"; // in any other case that isn't false (null or true) - set to true\n} else {\nreturn value == Boolean.TRUE ? \"true\" : \"false\"; // in any other case that isn't true - set to false\n}\nIn any case, it's best to a unit-test just to confirm it works properly", "url": "https://github.com/AthenZ/athenz/pull/1097#discussion_r479754376", "createdAt": "2020-08-30T10:55:39Z", "author": {"login": "OferLevi85"}, "path": "servers/zms/src/main/java/com/yahoo/athenz/zms/DBService.java", "diffHunk": "@@ -3779,6 +4182,38 @@ boolean auditLogRoleMember(StringBuilder auditDetails, RoleMember roleMember, bo\n         return firstEntry;\n     }\n \n+    void auditLogGroupMembers(StringBuilder auditDetails, String label,\n+                             Collection<GroupMember> values) {\n+        auditDetails.append(\", \\\"\").append(label).append(\"\\\": [\");\n+        boolean firstEntry = true;\n+        for (GroupMember value : values) {\n+            firstEntry = auditLogGroupMember(auditDetails, value, firstEntry);\n+        }\n+        auditDetails.append(']');\n+    }\n+\n+    boolean auditLogGroupMember(StringBuilder auditDetails, GroupMember groupMember, boolean firstEntry) {\n+        firstEntry = auditLogSeparator(auditDetails, firstEntry);\n+        auditDetails.append(\"{\\\"member\\\": \\\"\").append(groupMember.getMemberName()).append('\"');\n+        if (groupMember.getExpiration() != null) {\n+            auditDetails.append(\", \\\"expiration\\\": \\\"\").append(groupMember.getExpiration().toString()).append('\"');\n+        }\n+        auditDetails.append(\", \\\"approved\\\": \");\n+        auditDetails.append(auditLogBooleanDefault(groupMember.getApproved(), Boolean.FALSE));\n+        auditDetails.append(\", \\\"system-disabled\\\": \");\n+        auditDetails.append(groupMember.getSystemDisabled() == null ? 0 : groupMember.getSystemDisabled());\n+        auditDetails.append(\"}\");\n+        return firstEntry;\n+    }\n+\n+    String auditLogBooleanDefault(Boolean value, Boolean defaultValue) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0e4332925ee6c42f8e87e64908526d663f05b152"}, "originalPosition": 694}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTg1MDIwNw==", "bodyText": "the logic is correct but I renamed the defaultValue to checkValue to be more clear the usage. the unit test has more explanation", "url": "https://github.com/AthenZ/athenz/pull/1097#discussion_r479850207", "createdAt": "2020-08-31T01:52:02Z", "author": {"login": "havetisyan"}, "path": "servers/zms/src/main/java/com/yahoo/athenz/zms/DBService.java", "diffHunk": "@@ -3779,6 +4182,38 @@ boolean auditLogRoleMember(StringBuilder auditDetails, RoleMember roleMember, bo\n         return firstEntry;\n     }\n \n+    void auditLogGroupMembers(StringBuilder auditDetails, String label,\n+                             Collection<GroupMember> values) {\n+        auditDetails.append(\", \\\"\").append(label).append(\"\\\": [\");\n+        boolean firstEntry = true;\n+        for (GroupMember value : values) {\n+            firstEntry = auditLogGroupMember(auditDetails, value, firstEntry);\n+        }\n+        auditDetails.append(']');\n+    }\n+\n+    boolean auditLogGroupMember(StringBuilder auditDetails, GroupMember groupMember, boolean firstEntry) {\n+        firstEntry = auditLogSeparator(auditDetails, firstEntry);\n+        auditDetails.append(\"{\\\"member\\\": \\\"\").append(groupMember.getMemberName()).append('\"');\n+        if (groupMember.getExpiration() != null) {\n+            auditDetails.append(\", \\\"expiration\\\": \\\"\").append(groupMember.getExpiration().toString()).append('\"');\n+        }\n+        auditDetails.append(\", \\\"approved\\\": \");\n+        auditDetails.append(auditLogBooleanDefault(groupMember.getApproved(), Boolean.FALSE));\n+        auditDetails.append(\", \\\"system-disabled\\\": \");\n+        auditDetails.append(groupMember.getSystemDisabled() == null ? 0 : groupMember.getSystemDisabled());\n+        auditDetails.append(\"}\");\n+        return firstEntry;\n+    }\n+\n+    String auditLogBooleanDefault(Boolean value, Boolean defaultValue) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTc1NDM3Ng=="}, "originalCommit": {"oid": "0e4332925ee6c42f8e87e64908526d663f05b152"}, "originalPosition": 694}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5OTUzMjM0OnYy", "diffSide": "RIGHT", "path": "servers/zms/src/main/java/com/yahoo/athenz/zms/DBService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMFQxMTowNDoyOVrOHJh75w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMFQxMTowNDoyOVrOHJh75w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTc1NTIzOQ==", "bodyText": "our role members => our group members\nour role and domain => our group and domain", "url": "https://github.com/AthenZ/athenz/pull/1097#discussion_r479755239", "createdAt": "2020-08-30T11:04:29Z", "author": {"login": "OferLevi85"}, "path": "servers/zms/src/main/java/com/yahoo/athenz/zms/DBService.java", "diffHunk": "@@ -4531,6 +5314,41 @@ void updateRoleMembersSystemDisabledState(ResourceContext ctx, ObjectStoreConnec\n         }\n     }\n \n+    void updateGroupMembersSystemDisabledState(ResourceContext ctx, ObjectStoreConnection con, final String domainName,\n+                                               final String groupName, Group originalGroup, Group updatedGroup, final String auditRef) {\n+\n+        // if no group members, then there is nothing to do\n+\n+        final List<GroupMember> groupMembers = originalGroup.getGroupMembers();\n+        if (groupMembers == null || groupMembers.isEmpty()) {\n+            return;\n+        }\n+\n+        // check if the authority filter has changed otherwise we have\n+        // nothing to do\n+\n+        if (!isUserAuthorityFilterChanged(originalGroup.getUserAuthorityFilter(), updatedGroup.getUserAuthorityFilter())) {\n+            return;\n+        }\n+\n+        final String principal = getPrincipalName(ctx);\n+\n+        // process our role members and if there were any changes processed then update", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0e4332925ee6c42f8e87e64908526d663f05b152"}, "originalPosition": 1245}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5OTUzNDM3OnYy", "diffSide": "RIGHT", "path": "servers/zms/src/main/java/com/yahoo/athenz/zms/DBService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMFQxMTowNjo1MlrOHJh86A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMFQxMTowNjo1MlrOHJh86A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTc1NTQ5Ng==", "bodyText": "update our group and domain", "url": "https://github.com/AthenZ/athenz/pull/1097#discussion_r479755496", "createdAt": "2020-08-30T11:06:52Z", "author": {"login": "OferLevi85"}, "path": "servers/zms/src/main/java/com/yahoo/athenz/zms/DBService.java", "diffHunk": "@@ -4531,6 +5314,41 @@ void updateRoleMembersSystemDisabledState(ResourceContext ctx, ObjectStoreConnec\n         }\n     }\n \n+    void updateGroupMembersSystemDisabledState(ResourceContext ctx, ObjectStoreConnection con, final String domainName,\n+                                               final String groupName, Group originalGroup, Group updatedGroup, final String auditRef) {\n+\n+        // if no group members, then there is nothing to do\n+\n+        final List<GroupMember> groupMembers = originalGroup.getGroupMembers();\n+        if (groupMembers == null || groupMembers.isEmpty()) {\n+            return;\n+        }\n+\n+        // check if the authority filter has changed otherwise we have\n+        // nothing to do\n+\n+        if (!isUserAuthorityFilterChanged(originalGroup.getUserAuthorityFilter(), updatedGroup.getUserAuthorityFilter())) {\n+            return;\n+        }\n+\n+        final String principal = getPrincipalName(ctx);\n+\n+        // process our role members and if there were any changes processed then update\n+        // our role and domain time-stamps, and invalidate local cache entry\n+\n+        List<GroupMember> groupMembersWithUpdatedDisabledState = getGroupMembersWithUpdatedDisabledState(groupMembers,\n+                updatedGroup.getUserAuthorityFilter(), getDomainUserAuthorityFilter(con, domainName));\n+        if (updateGroupMemberDisabledState(ctx, con, groupMembersWithUpdatedDisabledState, domainName,\n+                groupName, principal, auditRef, ctx.getApiName())) {\n+\n+            // update our role and domain time-stamps, and invalidate local cache entry", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0e4332925ee6c42f8e87e64908526d663f05b152"}, "originalPosition": 1253}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5OTUzODc0OnYy", "diffSide": "RIGHT", "path": "servers/zms/src/main/java/com/yahoo/athenz/zms/DBService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMFQxMToxMTowOFrOHJh-8w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMFQxMToxMTowOFrOHJh-8w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTc1NjAxOQ==", "bodyText": "role => group", "url": "https://github.com/AthenZ/athenz/pull/1097#discussion_r479756019", "createdAt": "2020-08-30T11:11:08Z", "author": {"login": "OferLevi85"}, "path": "servers/zms/src/main/java/com/yahoo/athenz/zms/DBService.java", "diffHunk": "@@ -5001,6 +6047,42 @@ void processUserAuthorityRestrictions() {\n         }\n     }\n \n+    void processGroupUserAuthorityRestrictions() {\n+\n+        // if we don't have a user authority defined then there\n+        // is no work to be done\n+\n+        if (zmsConfig.getUserAuthority() == null) {\n+            return;\n+        }\n+\n+        // first we need to get all the groups that have the authority\n+        // filter or date expiry attributes set\n+\n+        List<PrincipalGroup> groups;\n+        try (ObjectStoreConnection con = store.getConnection(true, false)) {\n+            groups = con.listGroupsWithUserAuthorityRestrictions();\n+        }\n+\n+        if (groups == null) {\n+            return;\n+        }\n+\n+        // for each role catch any exception and ignore since we", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0e4332925ee6c42f8e87e64908526d663f05b152"}, "originalPosition": 1664}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1592, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}