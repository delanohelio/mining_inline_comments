{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMxOTMwODI4", "number": 1003, "title": "Enabled Email Notifications for ZTS with DynamoDB", "bodyText": "I confirm that this contribution is made under the terms of the license found in the root directory of this repository's source tree and that I have the authority necessary to make this contribution on behalf of its copyright owner.", "createdAt": "2020-06-09T16:38:59Z", "url": "https://github.com/AthenZ/athenz/pull/1003", "merged": true, "mergeCommit": {"oid": "40e998f7ef7625010d57b20ee73bbd1259249afb"}, "closed": true, "closedAt": "2020-06-16T01:57:09Z", "author": {"login": "OferLevi85"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcpn0KZgFqTQyNzM0ODM0Mg==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcrrYEbAFqTQzMTEwNzIxMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI3MzQ4MzQy", "url": "https://github.com/AthenZ/athenz/pull/1003#pullrequestreview-427348342", "createdAt": "2020-06-09T16:40:15Z", "commit": {"oid": "4158ef4bad47fcc08683f66358c5e8a894e07025"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxNjo0MDoxNVrOGhTK2g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxNjo0MDoxNVrOGhTK2g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzU3MDI2Ng==", "bodyText": "Note that I've changed this check to only verify hostname If hostnameResolver is used.", "url": "https://github.com/AthenZ/athenz/pull/1003#discussion_r437570266", "createdAt": "2020-06-09T16:40:15Z", "author": {"login": "OferLevi85"}, "path": "servers/zts/src/main/java/com/yahoo/athenz/zts/notification/CertFailedRefreshNotificationTask.java", "diffHunk": "@@ -132,7 +132,7 @@ public CertFailedRefreshNotificationTask(InstanceCertManager instanceCertManager\n \n     private List<X509CertRecord> getRecordsWithValidHosts(List<X509CertRecord> unrefreshedCerts) {\n         return unrefreshedCerts.stream()\n-                    .filter(record -> hostnameResolver.isValidHostname(record.getHostName()))\n+                    .filter(record -> hostnameResolver == null || hostnameResolver.isValidHostname(record.getHostName()))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4158ef4bad47fcc08683f66358c5e8a894e07025"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI3MzQ5MzUw", "url": "https://github.com/AthenZ/athenz/pull/1003#pullrequestreview-427349350", "createdAt": "2020-06-09T16:41:37Z", "commit": {"oid": "4158ef4bad47fcc08683f66358c5e8a894e07025"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxNjo0MTozOFrOGhTN2Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxNjo0MTozOFrOGhTN2Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzU3MTAzMw==", "bodyText": "Note that we need to create a new index in prod and any other environment before pushing these changes", "url": "https://github.com/AthenZ/athenz/pull/1003#discussion_r437571033", "createdAt": "2020-06-09T16:41:38Z", "author": {"login": "OferLevi85"}, "path": "servers/zts/src/main/java/com/yahoo/athenz/zts/cert/impl/DynamoDBCertRecordStoreConnection.java", "diffHunk": "@@ -54,17 +59,25 @@\n     private static final String KEY_EXPIRY_TIME = \"expiryTime\";\n     private static final String KEY_HOSTNAME = \"hostName\";\n     private static final String KEY_TTL = \"ttl\";\n+    public static final String INDEX_CURRENT_DATE = \"currentDate-index\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4158ef4bad47fcc08683f66358c5e8a894e07025"}, "originalPosition": 46}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI3MzUxNjY5", "url": "https://github.com/AthenZ/athenz/pull/1003#pullrequestreview-427351669", "createdAt": "2020-06-09T16:44:35Z", "commit": {"oid": "4158ef4bad47fcc08683f66358c5e8a894e07025"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxNjo0NDozNVrOGhTUmg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxNjo0NDozNVrOGhTUmg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzU3Mjc2Mg==", "bodyText": "Regarding the scan, please note the following:\n\nCouldn't avoid the scan when getting the updated records as I must use consistent reading. Indexes only support eventual consistency so there's a good chance we'll miss records if we use it.\nWe will need to enable Scan in DynamoDB for the IAM role in prod and any other environments in order for scanning to work.", "url": "https://github.com/AthenZ/athenz/pull/1003#discussion_r437572762", "createdAt": "2020-06-09T16:44:35Z", "author": {"login": "OferLevi85"}, "path": "servers/zts/src/main/java/com/yahoo/athenz/zts/cert/impl/DynamoDBCertRecordStoreConnection.java", "diffHunk": "@@ -213,17 +231,92 @@ public int deleteExpiredX509CertRecords(int expiryTimeMins) {\n     public boolean updateUnrefreshedCertificatesNotificationTimestamp(String lastNotifiedServer,\n                                                                       long lastNotifiedTime,\n                                                                       String provider) {\n-        // Currently unimplemented for AWS\n-        return false;\n+        try {\n+            List<Item> items = getUnrefreshedCertsRecords(lastNotifiedTime, provider);\n+            updateLastNotified(lastNotifiedServer, lastNotifiedTime, items);\n+        } catch (Exception ex) {\n+            LOGGER.error(\"DynamoDB updateUnrefreshedCertificatesNotificationTimestamp Error: {}/{}\", ex.getClass(), ex.getMessage());\n+            return false;\n+        }\n+\n+        return true;\n     }\n \n     @Override\n     public List<X509CertRecord> getNotifyUnrefreshedCertificates(String lastNotifiedServer, long lastNotifiedTime) {\n-        // Currently unimplemented for AWS\n-        return new ArrayList<>();\n+\n+        Map<String, AttributeValue> expressionAttributeValues = new HashMap<>();\n+        expressionAttributeValues.put(\":lastNotifiedServerVal\", new AttributeValue().withS(lastNotifiedServer));\n+        expressionAttributeValues.put(\":lastNotifiedTimeVal\", new AttributeValue().withN(Long.toString(lastNotifiedTime)));\n+\n+        // Get all records that that should receive notifications.\n+        ScanRequest scanRequest = new ScanRequest()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4158ef4bad47fcc08683f66358c5e8a894e07025"}, "originalPosition": 167}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4158ef4bad47fcc08683f66358c5e8a894e07025", "author": {"user": {"login": "OferLevi85", "name": "Ofer Levi"}}, "url": "https://github.com/AthenZ/athenz/commit/4158ef4bad47fcc08683f66358c5e8a894e07025", "committedDate": "2020-06-09T16:37:54Z", "message": "Enabled Email Notifications for ZTS with DynamoDB"}, "afterCommit": {"oid": "ba2d1ff0e82f86f2bfd29777db1ad07a2d425844", "author": {"user": {"login": "OferLevi85", "name": "Ofer Levi"}}, "url": "https://github.com/AthenZ/athenz/commit/ba2d1ff0e82f86f2bfd29777db1ad07a2d425844", "committedDate": "2020-06-09T20:27:12Z", "message": "Enabled Email Notifications for ZTS with DynamoDB"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI3NTE3OTcw", "url": "https://github.com/AthenZ/athenz/pull/1003#pullrequestreview-427517970", "createdAt": "2020-06-09T20:31:48Z", "commit": {"oid": "ba2d1ff0e82f86f2bfd29777db1ad07a2d425844"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQyMDozMTo0OFrOGhbGFQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQyMDozMTo0OFrOGhbGFQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzcwMDExNw==", "bodyText": "Everytime we update the currentTime column (hold epoch in long format), we should also update the new currentDate column (ISO date in the format YYYY-MM-DD).", "url": "https://github.com/AthenZ/athenz/pull/1003#discussion_r437700117", "createdAt": "2020-06-09T20:31:48Z", "author": {"login": "OferLevi85"}, "path": "servers/zts/src/main/java/com/yahoo/athenz/zts/cert/impl/DynamoDBCertRecordStoreConnection.java", "diffHunk": "@@ -139,10 +156,10 @@ public boolean updateX509CertRecord(X509CertRecord certRecord) {\n                             new AttributeUpdate(KEY_CURRENT_SERIAL).put(certRecord.getCurrentSerial()),\n                             new AttributeUpdate(KEY_CURRENT_IP).put(certRecord.getCurrentIP()),\n                             new AttributeUpdate(KEY_CURRENT_TIME).put(getLongFromDate(certRecord.getCurrentTime())),\n+                            new AttributeUpdate(KEY_CURRENT_DATE).put(dynamoDBUtils.getIso8601FromDate(certRecord.getCurrentTime())),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba2d1ff0e82f86f2bfd29777db1ad07a2d425844"}, "originalPosition": 124}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI4Mzk0OTE2", "url": "https://github.com/AthenZ/athenz/pull/1003#pullrequestreview-428394916", "createdAt": "2020-06-10T20:15:48Z", "commit": {"oid": "ba2d1ff0e82f86f2bfd29777db1ad07a2d425844"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQyMDoxNTo0OFrOGiExbA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQyMDoxNTo0OFrOGiExbA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODM4Mjk1Ng==", "bodyText": "what was the reason for removing client cert flag?", "url": "https://github.com/AthenZ/athenz/pull/1003#discussion_r438382956", "createdAt": "2020-06-10T20:15:48Z", "author": {"login": "havetisyan"}, "path": "servers/zts/src/main/java/com/yahoo/athenz/zts/cert/impl/DynamoDBCertRecordStoreConnection.java", "diffHunk": "@@ -139,10 +156,10 @@ public boolean updateX509CertRecord(X509CertRecord certRecord) {\n                             new AttributeUpdate(KEY_CURRENT_SERIAL).put(certRecord.getCurrentSerial()),\n                             new AttributeUpdate(KEY_CURRENT_IP).put(certRecord.getCurrentIP()),\n                             new AttributeUpdate(KEY_CURRENT_TIME).put(getLongFromDate(certRecord.getCurrentTime())),\n+                            new AttributeUpdate(KEY_CURRENT_DATE).put(dynamoDBUtils.getIso8601FromDate(certRecord.getCurrentTime())),\n                             new AttributeUpdate(KEY_PREV_SERIAL).put(certRecord.getPrevSerial()),\n                             new AttributeUpdate(KEY_PREV_IP).put(certRecord.getPrevIP()),\n                             new AttributeUpdate(KEY_PREV_TIME).put(getLongFromDate(certRecord.getPrevTime())),\n-                            new AttributeUpdate(KEY_CLIENT_CERT).put(certRecord.getClientCert()),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba2d1ff0e82f86f2bfd29777db1ad07a2d425844"}, "originalPosition": 128}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ba2d1ff0e82f86f2bfd29777db1ad07a2d425844", "author": {"user": {"login": "OferLevi85", "name": "Ofer Levi"}}, "url": "https://github.com/AthenZ/athenz/commit/ba2d1ff0e82f86f2bfd29777db1ad07a2d425844", "committedDate": "2020-06-09T20:27:12Z", "message": "Enabled Email Notifications for ZTS with DynamoDB"}, "afterCommit": {"oid": "28e7213bbaa8dbe23208b4e49f2fd130740e80c7", "author": {"user": {"login": "OferLevi85", "name": "Ofer Levi"}}, "url": "https://github.com/AthenZ/athenz/commit/28e7213bbaa8dbe23208b4e49f2fd130740e80c7", "committedDate": "2020-06-11T11:52:18Z", "message": "Enabled Email Notifications for ZTS with DynamoDB"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI5NTEzMDcw", "url": "https://github.com/AthenZ/athenz/pull/1003#pullrequestreview-429513070", "createdAt": "2020-06-12T07:15:04Z", "commit": {"oid": "28e7213bbaa8dbe23208b4e49f2fd130740e80c7"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQwNzoxNTowNFrOGi5lmg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQwNzozMjozNlrOGi6CYA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTI0ODI4Mg==", "bodyText": "by default we were list certs that were not refreshed for more than 3 days (the default value in jdbc)\nlet's update the return description since we're returning List now.", "url": "https://github.com/AthenZ/athenz/pull/1003#discussion_r439248282", "createdAt": "2020-06-12T07:15:04Z", "author": {"login": "havetisyan"}, "path": "libs/java/server_common/src/main/java/com/yahoo/athenz/common/server/cert/CertRecordStoreConnection.java", "diffHunk": "@@ -73,21 +73,13 @@\n     int deleteExpiredX509CertRecords(int expiryTimeMins);\n \n     /**\n-     * Update lastNotifiedServer and lastNotifiedTime for certificate that failed to refresh for more than one day.\n+     * List all certificates that failed to refresh for more than one day.\n      * @param lastNotifiedServer\n      * @param lastNotifiedTime\n      * @param provider\n      * @return True if at least one certificate record was updated (needs notification to be sent)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "28e7213bbaa8dbe23208b4e49f2fd130740e80c7"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTI1Mjc4OA==", "bodyText": "what are we creating a new instance of DynamoDBUtils and passing here? Why can't DynamoDBCertRecordStoreConnection just maintain it's own instance of the class since it only has a couple of public methods? Any reason why those methods can't be static and then no need to create any instances?", "url": "https://github.com/AthenZ/athenz/pull/1003#discussion_r439252788", "createdAt": "2020-06-12T07:25:59Z", "author": {"login": "havetisyan"}, "path": "servers/zts/src/main/java/com/yahoo/athenz/zts/cert/impl/DynamoDBCertRecordStore.java", "diffHunk": "@@ -32,18 +33,18 @@\n     private static final Logger LOGGER = LoggerFactory.getLogger(DynamoDBCertRecordStore.class);\n     private static final Logger CERTLOGGER = LoggerFactory.getLogger(\"X509CertLogger\");\n \n-    private DynamoDB dynamoDB;\n     private String tableName;\n+    private DynamoDB dynamoDB;\n \n     public DynamoDBCertRecordStore(AmazonDynamoDB client, final String tableName) {\n-        dynamoDB = new DynamoDB(client);\n+        this.dynamoDB = new DynamoDB(client);\n         this.tableName = tableName;\n     }\n \n     @Override\n     public CertRecordStoreConnection getConnection() {\n         try {\n-            return new DynamoDBCertRecordStoreConnection(dynamoDB, tableName);\n+            return new DynamoDBCertRecordStoreConnection(dynamoDB, tableName, new DynamoDBUtils());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "28e7213bbaa8dbe23208b4e49f2fd130740e80c7"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTI1Mzg5Mg==", "bodyText": "In the conf/zts.properties for the athenz.zts.cert_dynamodb_table_name setting I have small section what type of table we need to create. can you also update that section to include the requirement for this index as well.", "url": "https://github.com/AthenZ/athenz/pull/1003#discussion_r439253892", "createdAt": "2020-06-12T07:28:27Z", "author": {"login": "havetisyan"}, "path": "servers/zts/src/main/java/com/yahoo/athenz/zts/cert/impl/DynamoDBCertRecordStoreConnection.java", "diffHunk": "@@ -54,17 +59,25 @@\n     private static final String KEY_EXPIRY_TIME = \"expiryTime\";\n     private static final String KEY_HOSTNAME = \"hostName\";\n     private static final String KEY_TTL = \"ttl\";\n+    public static final String INDEX_CURRENT_DATE = \"currentDate-index\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzU3MTAzMw=="}, "originalCommit": {"oid": "4158ef4bad47fcc08683f66358c5e8a894e07025"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTI1NTY0OA==", "bodyText": "Yes, we should update it and fix jdbc as well. The logic is that once you get a client cert, you can't request a service cert. However, the provider may decide that it wants ZTS to issue a client cert only for a request in which case we honor the downgrade option.", "url": "https://github.com/AthenZ/athenz/pull/1003#discussion_r439255648", "createdAt": "2020-06-12T07:32:36Z", "author": {"login": "havetisyan"}, "path": "servers/zts/src/main/java/com/yahoo/athenz/zts/cert/impl/DynamoDBCertRecordStoreConnection.java", "diffHunk": "@@ -139,10 +156,10 @@ public boolean updateX509CertRecord(X509CertRecord certRecord) {\n                             new AttributeUpdate(KEY_CURRENT_SERIAL).put(certRecord.getCurrentSerial()),\n                             new AttributeUpdate(KEY_CURRENT_IP).put(certRecord.getCurrentIP()),\n                             new AttributeUpdate(KEY_CURRENT_TIME).put(getLongFromDate(certRecord.getCurrentTime())),\n+                            new AttributeUpdate(KEY_CURRENT_DATE).put(dynamoDBUtils.getIso8601FromDate(certRecord.getCurrentTime())),\n                             new AttributeUpdate(KEY_PREV_SERIAL).put(certRecord.getPrevSerial()),\n                             new AttributeUpdate(KEY_PREV_IP).put(certRecord.getPrevIP()),\n                             new AttributeUpdate(KEY_PREV_TIME).put(getLongFromDate(certRecord.getPrevTime())),\n-                            new AttributeUpdate(KEY_CLIENT_CERT).put(certRecord.getClientCert()),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODM4Mjk1Ng=="}, "originalCommit": {"oid": "ba2d1ff0e82f86f2bfd29777db1ad07a2d425844"}, "originalPosition": 128}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "28e7213bbaa8dbe23208b4e49f2fd130740e80c7", "author": {"user": {"login": "OferLevi85", "name": "Ofer Levi"}}, "url": "https://github.com/AthenZ/athenz/commit/28e7213bbaa8dbe23208b4e49f2fd130740e80c7", "committedDate": "2020-06-11T11:52:18Z", "message": "Enabled Email Notifications for ZTS with DynamoDB"}, "afterCommit": {"oid": "2a1348c10952f648479dd830bb31482e03386011", "author": {"user": {"login": "OferLevi85", "name": "Ofer Levi"}}, "url": "https://github.com/AthenZ/athenz/commit/2a1348c10952f648479dd830bb31482e03386011", "committedDate": "2020-06-15T09:53:32Z", "message": "Fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a5b81da321bb013ea0b975a06dbb8b654b023bc6", "author": {"user": {"login": "OferLevi85", "name": "Ofer Levi"}}, "url": "https://github.com/AthenZ/athenz/commit/a5b81da321bb013ea0b975a06dbb8b654b023bc6", "committedDate": "2020-06-15T10:23:09Z", "message": "Enabled Email Notifications for ZTS with DynamoDB"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2a1348c10952f648479dd830bb31482e03386011", "author": {"user": {"login": "OferLevi85", "name": "Ofer Levi"}}, "url": "https://github.com/AthenZ/athenz/commit/2a1348c10952f648479dd830bb31482e03386011", "committedDate": "2020-06-15T09:53:32Z", "message": "Fix"}, "afterCommit": {"oid": "a5b81da321bb013ea0b975a06dbb8b654b023bc6", "author": {"user": {"login": "OferLevi85", "name": "Ofer Levi"}}, "url": "https://github.com/AthenZ/athenz/commit/a5b81da321bb013ea0b975a06dbb8b654b023bc6", "committedDate": "2020-06-15T10:23:09Z", "message": "Enabled Email Notifications for ZTS with DynamoDB"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMxMTA3MjEw", "url": "https://github.com/AthenZ/athenz/pull/1003#pullrequestreview-431107210", "createdAt": "2020-06-16T01:57:02Z", "commit": {"oid": "a5b81da321bb013ea0b975a06dbb8b654b023bc6"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2967, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}