{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTEwOTI3ODQ0", "number": 1163, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QyMDowOTowNlrOEyiLmQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxNzoxNzoyNVrOE0eXDQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxNDI0MjgxOnYy", "diffSide": "RIGHT", "path": "servers/zts/src/main/java/com/yahoo/athenz/zts/ZTSConsts.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QyMDowOTowNlrOHpO7BA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QyMDowOTowNlrOHpO7BA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjk5ODE0OA==", "bodyText": "Need to create the index in DynamoDB before pushing these changes", "url": "https://github.com/AthenZ/athenz/pull/1163#discussion_r512998148", "createdAt": "2020-10-27T20:09:06Z", "author": {"login": "OferLevi85"}, "path": "servers/zts/src/main/java/com/yahoo/athenz/zts/ZTSConsts.java", "diffHunk": "@@ -102,6 +102,8 @@\n     public static final String ZTS_PROP_CERT_DYNAMODB_TABLE_NAME                = \"athenz.zts.cert_dynamodb_table_name\";\n     public static final String ZTS_PROP_CERT_DYNAMODB_ITEM_TTL_HOURS            = \"athenz.zts.cert_dynamodb_item_ttl_hours\";\n     public static final String ZTS_PROP_CERT_DYNAMODB_INDEX_CURRENT_TIME_NAME   = \"athenz.zts.cert_dynamodb_index_current_time_name\";\n+    public static final String ZTS_PROP_CERT_DYNAMODB_INDEX_HOST_NAME           = \"athenz.zts.cert_dynamodb_index_host_name\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c370e3840ee9063ff8b5e94163f8076b3330cf53"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxNDI1MDExOnYy", "diffSide": "RIGHT", "path": "servers/zts/src/main/java/com/yahoo/athenz/zts/cert/impl/DynamoDBCertRecordStoreConnection.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QyMDoxMTowMlrOHpO_aA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QyMDoxMTowMlrOHpO_aA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjk5OTI3Mg==", "bodyText": "For every record:\n\nGet all records with the same hostName / provider / service (uuid can be different)\nCheck which one is the most up to date (biggest currentTime).\nCheck if it is the same record we evaluate now. If it is we will send a notification if not we'll skip it.", "url": "https://github.com/AthenZ/athenz/pull/1163#discussion_r512999272", "createdAt": "2020-10-27T20:11:02Z", "author": {"login": "OferLevi85"}, "path": "servers/zts/src/main/java/com/yahoo/athenz/zts/cert/impl/DynamoDBCertRecordStoreConnection.java", "diffHunk": "@@ -310,23 +315,50 @@ private boolean isRecordUpdatedWithNotificationTimeAndServer(String lastNotified\n         List<String> unrefreshedCertDates = DynamoDBUtils.getISODatesByRange(unrefreshedCertsRangeBegin, unrefreshedCertsRangeEnd);\n \n         for (String unrefreshedCertDate : unrefreshedCertDates) {\n-            items.addAll(getUnrefreshedCertRecordsByDate(provider, index, yesterday, unrefreshedCertDate));\n+            items.addAll(getUnrefreshedCertRecordsByDate(provider, yesterday, unrefreshedCertDate));\n         }\n \n+        // Filter outdated records from before re-bootstrapping (another record exist with a new uuid)\n+        items = items.stream()\n+                .filter(item -> (mostUpdatedHostRecord(item)))\n+                .collect(Collectors.toList());\n+\n         return items;\n     }\n \n-    private List<Item> getUnrefreshedCertRecordsByDate(String provider, Index index, long yesterday, String unrefreshedCertDate) {\n+    private boolean mostUpdatedHostRecord(Item recordToCheck) {\n+        try {\n+            // Query all records with the same hostName as recordToCheck\n+            QuerySpec spec = new QuerySpec()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c370e3840ee9063ff8b5e94163f8076b3330cf53"}, "originalPosition": 47}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzNDU4ODI5OnYy", "diffSide": "RIGHT", "path": "libs/java/server_common/src/main/java/com/yahoo/athenz/common/server/cert/CertRecordStoreConnection.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxNzoxNzoyNVrOHsOF-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxNzoxNzoyNVrOHsOF-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjEzMDI5OA==", "bodyText": "I mentioned the default grace period is 2 weeks as this will be the case after the \"grace period\" PR will be merged", "url": "https://github.com/AthenZ/athenz/pull/1163#discussion_r516130298", "createdAt": "2020-11-02T17:17:25Z", "author": {"login": "OferLevi85"}, "path": "libs/java/server_common/src/main/java/com/yahoo/athenz/common/server/cert/CertRecordStoreConnection.java", "diffHunk": "@@ -73,8 +73,16 @@\n     int deleteExpiredX509CertRecords(int expiryTimeMins);\n \n     /**\n-     * List all certificates that failed to refresh for more than three days.\n-     * @param lastNotifiedServer\n+     * Return all certificate records that failed to refresh after updating them with the current notification time and server.\n+     * Implementers of this interface should note the following:\n+     * 1. The records should be filtered according to the following criteria:\n+     *      - The certificates should have a grace period in which no notifications will be sent. The default grace period is 2 weeks", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "efe9781e7598a5100305be8b8756f00d394c10eb"}, "originalPosition": 9}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1627, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}