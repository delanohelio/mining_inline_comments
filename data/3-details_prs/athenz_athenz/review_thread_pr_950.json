{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA5Mjg2Njgx", "number": 950, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxNjoxNDoyM1rOD2xWxA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxOToxNTozM1rOD22o4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU4NzU4MzQwOnYy", "diffSide": "RIGHT", "path": "servers/zms/src/main/java/com/yahoo/athenz/zms/store/jdbc/JDBCConnection.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxNjoxNDoyM1rOGMrrag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxNjoxNDoyM1rOGMrrag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTk1MTcyMg==", "bodyText": "this becomes a wasted operation if the command itself does not the calendar instance. please retain the original behavior where the calendar is obtained only when its needed.", "url": "https://github.com/AthenZ/athenz/pull/950#discussion_r415951722", "createdAt": "2020-04-27T16:14:23Z", "author": {"login": "havetisyan"}, "path": "servers/zms/src/main/java/com/yahoo/athenz/zms/store/jdbc/JDBCConnection.java", "diffHunk": "@@ -648,6 +649,8 @@ public boolean deleteDomain(String domainName) {\n     PreparedStatement prepareDomainScanStatement(String prefix, long modifiedSince)\n             throws SQLException {\n         \n+        Calendar cal = getCalendarInstance();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "78988c88bc957ee190dc8402cd1d9c889cf3d631"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU4NzU4Nzc1OnYy", "diffSide": "RIGHT", "path": "servers/zms/src/main/java/com/yahoo/athenz/zms/store/jdbc/JDBCConnection.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxNjoxNToxNFrOGMruAA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxNjoxNToxNFrOGMruAA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTk1MjM4NA==", "bodyText": "we should not fetch the property and parse it every time. this should be a static member of the class  so we only do it once and never again.", "url": "https://github.com/AthenZ/athenz/pull/950#discussion_r415952384", "createdAt": "2020-04-27T16:15:14Z", "author": {"login": "havetisyan"}, "path": "servers/zms/src/main/java/com/yahoo/athenz/zms/store/jdbc/JDBCConnection.java", "diffHunk": "@@ -666,13 +668,27 @@ PreparedStatement prepareDomainScanStatement(String prefix, long modifiedSince)\n             }\n         } else if (modifiedSince != 0) {\n             ps = con.prepareStatement(SQL_LIST_DOMAIN_MODIFIED);\n-            Calendar cal = Calendar.getInstance(TimeZone.getTimeZone(\"GMT\"));\n             ps.setTimestamp(1, new java.sql.Timestamp(modifiedSince), cal);\n         } else {\n             ps = con.prepareStatement(SQL_LIST_DOMAIN);\n         }\n         return ps;\n     }\n+\n+    Calendar getCalendarInstance() {\n+\n+        Boolean useLocalTimeZone = Boolean.parseBoolean(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "78988c88bc957ee190dc8402cd1d9c889cf3d631"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU4ODQ0Nzg4OnYy", "diffSide": "RIGHT", "path": "servers/zms/src/main/java/com/yahoo/athenz/zms/store/jdbc/JDBCConnection.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxOToxNToxNFrOGMzjSw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxOToxNToxNFrOGMzjSw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjA4MDcxNQ==", "bodyText": "let's move this code how it was before. as I mentioned in my earlier comment we don't need a calendar object if we're just doing a list domain operation.", "url": "https://github.com/AthenZ/athenz/pull/950#discussion_r416080715", "createdAt": "2020-04-27T19:15:14Z", "author": {"login": "havetisyan"}, "path": "servers/zms/src/main/java/com/yahoo/athenz/zms/store/jdbc/JDBCConnection.java", "diffHunk": "@@ -647,7 +650,9 @@ public boolean deleteDomain(String domainName) {\n \n     PreparedStatement prepareDomainScanStatement(String prefix, long modifiedSince)\n             throws SQLException {\n-        \n+\n+        Calendar cal = Calendar.getInstance(TimeZone.getTimeZone(MYSQL_SERVER_TIMEZONE));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a2db8f8407c21e706048594e827d2f2ddeaa6d4"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU4ODQ0ODk2OnYy", "diffSide": "RIGHT", "path": "servers/zms/conf/zms.properties", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxOToxNTozM1rOGMzkBA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxOToxNTozM1rOGMzkBA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjA4MDkwMA==", "bodyText": "please update this setting to reflect the new name.", "url": "https://github.com/AthenZ/athenz/pull/950#discussion_r416080900", "createdAt": "2020-04-27T19:15:33Z", "author": {"login": "havetisyan"}, "path": "servers/zms/conf/zms.properties", "diffHunk": "@@ -415,3 +415,7 @@ athenz.zms.read_only_mode=false\n # needs to contact most likely a server (e.g. mysql instance)\n # running in a different region.\n #athenz.zms.master_copy_for_signed_domains=false\n+\n+# Boolean value specifying whether using the server's timezone or GMT\n+# at retriving modified domains from DB\n+#athenz.zms.use_local_timezone_in_domain_scan=false", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a2db8f8407c21e706048594e827d2f2ddeaa6d4"}, "originalPosition": 7}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1770, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}