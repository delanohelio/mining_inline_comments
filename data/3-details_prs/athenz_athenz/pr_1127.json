{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk2OTQyMTAx", "number": 1127, "title": "Athenz Role UI Redesign to improve usability", "bodyText": "I confirm that this contribution is made under the terms of the license found in the root directory of this repository's source tree and that I have the authority necessary to make this contribution on behalf of its copyright owner.", "createdAt": "2020-10-02T14:25:57Z", "url": "https://github.com/AthenZ/athenz/pull/1127", "merged": true, "mergeCommit": {"oid": "2c3748e28796f0d1245c48ad1b6f762314714a19"}, "closed": true, "closedAt": "2020-10-22T23:38:21Z", "author": {"login": "MartinTrojans"}, "timelineItems": {"totalCount": 28, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdSjKg5AH2gAyNDk2OTQyMTAxOmIyMzNlN2Y5ZDQ2ZmY4MmY0NGRkOTYxNTIyMzY4MWZjMDNiZDUwMjE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdVJK_sAFqTUxNTE0NTc3OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "b233e7f9d46ff82f44dd9615223681fc03bd5021", "author": {"user": null}, "url": "https://github.com/AthenZ/athenz/commit/b233e7f9d46ff82f44dd9615223681fc03bd5021", "committedDate": "2020-10-14T20:26:02Z", "message": "Athenz Role UI Redesign to improve usability"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ebf58a0639fdf21754e56e290e8cdb98f34c696d", "author": {"user": {"login": "MartinTrojans", "name": "Martin"}}, "url": "https://github.com/AthenZ/athenz/commit/ebf58a0639fdf21754e56e290e8cdb98f34c696d", "committedDate": "2020-10-14T21:32:25Z", "message": "Merge pull request #1 from yahoo/master\n\nUpdate to remote master"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3f969a0d0c29fdd79690f9e3ded6b67ac7a14f0f", "author": {"user": null}, "url": "https://github.com/AthenZ/athenz/commit/3f969a0d0c29fdd79690f9e3ded6b67ac7a14f0f", "committedDate": "2020-10-14T21:33:11Z", "message": "Merge branch 'master' of github.com:MartinTrojans/athenz into ATHENS-5503\nmerge"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7383b94e6eac77caa0a90cb3270d3ceced7d87cc", "author": {"user": null}, "url": "https://github.com/AthenZ/athenz/commit/7383b94e6eac77caa0a90cb3270d3ceced7d87cc", "committedDate": "2020-10-14T21:37:48Z", "message": "merge master branch"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "37f57baa9435c9201f3f4466c215b351cd6b2d4a", "author": {"user": null}, "url": "https://github.com/AthenZ/athenz/commit/37f57baa9435c9201f3f4466c215b351cd6b2d4a", "committedDate": "2020-10-14T21:40:22Z", "message": "update"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d9c2780decbf7c20878f41b3063c40047207cdb7", "author": {"user": null}, "url": "https://github.com/AthenZ/athenz/commit/d9c2780decbf7c20878f41b3063c40047207cdb7", "committedDate": "2020-10-15T18:30:08Z", "message": "update"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "884a2a11cf37766d7c3fd6ee2074cc49bc29a10f", "author": {"user": null}, "url": "https://github.com/AthenZ/athenz/commit/884a2a11cf37766d7c3fd6ee2074cc49bc29a10f", "committedDate": "2020-10-15T19:12:17Z", "message": "add width for sub rows"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6a2a8eaf0d3e094c2c410f596ea87ffcdee690eb", "author": {"user": null}, "url": "https://github.com/AthenZ/athenz/commit/6a2a8eaf0d3e094c2c410f596ea87ffcdee690eb", "committedDate": "2020-10-15T19:58:03Z", "message": "Fix border for role policy page"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3766ec763cc3478316825b027636dfdf74208fe3", "author": {"user": null}, "url": "https://github.com/AthenZ/athenz/commit/3766ec763cc3478316825b027636dfdf74208fe3", "committedDate": "2020-10-15T20:10:44Z", "message": "Fix updatemodal submit button"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA5ODY0MTU0", "url": "https://github.com/AthenZ/athenz/pull/1127#pullrequestreview-509864154", "createdAt": "2020-10-15T22:56:52Z", "commit": {"oid": "3766ec763cc3478316825b027636dfdf74208fe3"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 20, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQyMjo1Njo1MlrOHieSPQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQyMzoyNjoxMlrOHie4mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTkwOTgyMQ==", "bodyText": "we should not allow deleting policy on the Policy Rules page for Roles", "url": "https://github.com/AthenZ/athenz/pull/1127#discussion_r505909821", "createdAt": "2020-10-15T22:56:52Z", "author": {"login": "pratikgote"}, "path": "ui/src/components/domain-policy/DomainPolicyList.js", "diffHunk": "@@ -0,0 +1,276 @@\n+/*\n+ * Copyright 2020 Verizon Media\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+import React from 'react';\n+import styled from '@emotion/styled';\n+import { colors } from '../denali/styles';\n+import Button from '../denali/Button';\n+import AddPolicy from '../policy/AddPolicy';\n+import AddPolicyToRole from '../policy/AddPolicyToRole';\n+import PolicyRow from './DomainPolicyRow';\n+import Alert from '../denali/Alert';\n+import DeleteModal from '../modal/DeleteModal';\n+import NameUtils from '../utils/NameUtils';\n+import { MODAL_TIME_OUT } from '../constants/constants';\n+import RequestUtils from '../utils/RequestUtils';\n+\n+const PolicySectionDiv = styled.div`\n+    margin: 20px;\n+`;\n+\n+const AddContainerDiv = styled.div`\n+    padding-bottom: 20px;\n+    display: flex;\n+    justify-content: space-between;\n+    align-items: center;\n+    flex-flow: row nowrap;\n+    float: right;\n+`;\n+\n+const StyledAnchor = styled.a`\n+    color: #3570f4;\n+    text-decoration: none;\n+    cursor: pointer;\n+`;\n+\n+const PolicyTable = styled.table`\n+    width: 100%;\n+    border-spacing: 0;\n+    display: table;\n+    border-collapse: separate;\n+    border-color: grey;\n+`;\n+\n+const TableHeadStyled = styled.th`\n+    text-align: ${(props) => props.align};\n+    border-bottom: 2px solid #d5d5d5;\n+    color: #9a9a9a;\n+    font-weight: 600;\n+    font-size: 0.8rem;\n+    padding-bottom: 5px;\n+    vertical-align: top;\n+    text-transform: uppercase;\n+    padding: 5px 0 5px 15px;\n+    word-break: break-all;\n+`;\n+\n+export default class DomainPolicyList extends React.Component {\n+    constructor(props) {\n+        super(props);\n+        this.api = props.api;\n+        this.onSubmitDeletePolicy = this.onSubmitDeletePolicy.bind(this);\n+        this.onCancelDeletePolicy = this.onCancelDeletePolicy.bind(this);\n+        this.toggleAddPolicy = this.toggleAddPolicy.bind(this);\n+        this.reloadPolicies = this.reloadPolicies.bind(this);\n+        this.closeModal = this.closeModal.bind(this);\n+        this.state = {\n+            list: props.policies || [],\n+            showAddPolicy: false,\n+        };\n+    }\n+\n+    onSubmitDeletePolicy() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3766ec763cc3478316825b027636dfdf74208fe3"}, "originalPosition": 84}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTkwOTk0NA==", "bodyText": "RolePolicyRuleList?", "url": "https://github.com/AthenZ/athenz/pull/1127#discussion_r505909944", "createdAt": "2020-10-15T22:57:11Z", "author": {"login": "pratikgote"}, "path": "ui/src/components/domain-policy/DomainPolicyList.js", "diffHunk": "@@ -0,0 +1,276 @@\n+/*\n+ * Copyright 2020 Verizon Media\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+import React from 'react';\n+import styled from '@emotion/styled';\n+import { colors } from '../denali/styles';\n+import Button from '../denali/Button';\n+import AddPolicy from '../policy/AddPolicy';\n+import AddPolicyToRole from '../policy/AddPolicyToRole';\n+import PolicyRow from './DomainPolicyRow';\n+import Alert from '../denali/Alert';\n+import DeleteModal from '../modal/DeleteModal';\n+import NameUtils from '../utils/NameUtils';\n+import { MODAL_TIME_OUT } from '../constants/constants';\n+import RequestUtils from '../utils/RequestUtils';\n+\n+const PolicySectionDiv = styled.div`\n+    margin: 20px;\n+`;\n+\n+const AddContainerDiv = styled.div`\n+    padding-bottom: 20px;\n+    display: flex;\n+    justify-content: space-between;\n+    align-items: center;\n+    flex-flow: row nowrap;\n+    float: right;\n+`;\n+\n+const StyledAnchor = styled.a`\n+    color: #3570f4;\n+    text-decoration: none;\n+    cursor: pointer;\n+`;\n+\n+const PolicyTable = styled.table`\n+    width: 100%;\n+    border-spacing: 0;\n+    display: table;\n+    border-collapse: separate;\n+    border-color: grey;\n+`;\n+\n+const TableHeadStyled = styled.th`\n+    text-align: ${(props) => props.align};\n+    border-bottom: 2px solid #d5d5d5;\n+    color: #9a9a9a;\n+    font-weight: 600;\n+    font-size: 0.8rem;\n+    padding-bottom: 5px;\n+    vertical-align: top;\n+    text-transform: uppercase;\n+    padding: 5px 0 5px 15px;\n+    word-break: break-all;\n+`;\n+\n+export default class DomainPolicyList extends React.Component {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3766ec763cc3478316825b027636dfdf74208fe3"}, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTkxMDMwMw==", "bodyText": "lets use === instead of ==", "url": "https://github.com/AthenZ/athenz/pull/1127#discussion_r505910303", "createdAt": "2020-10-15T22:58:14Z", "author": {"login": "pratikgote"}, "path": "ui/src/components/domain-policy/DomainPolicyList.js", "diffHunk": "@@ -0,0 +1,276 @@\n+/*\n+ * Copyright 2020 Verizon Media\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+import React from 'react';\n+import styled from '@emotion/styled';\n+import { colors } from '../denali/styles';\n+import Button from '../denali/Button';\n+import AddPolicy from '../policy/AddPolicy';\n+import AddPolicyToRole from '../policy/AddPolicyToRole';\n+import PolicyRow from './DomainPolicyRow';\n+import Alert from '../denali/Alert';\n+import DeleteModal from '../modal/DeleteModal';\n+import NameUtils from '../utils/NameUtils';\n+import { MODAL_TIME_OUT } from '../constants/constants';\n+import RequestUtils from '../utils/RequestUtils';\n+\n+const PolicySectionDiv = styled.div`\n+    margin: 20px;\n+`;\n+\n+const AddContainerDiv = styled.div`\n+    padding-bottom: 20px;\n+    display: flex;\n+    justify-content: space-between;\n+    align-items: center;\n+    flex-flow: row nowrap;\n+    float: right;\n+`;\n+\n+const StyledAnchor = styled.a`\n+    color: #3570f4;\n+    text-decoration: none;\n+    cursor: pointer;\n+`;\n+\n+const PolicyTable = styled.table`\n+    width: 100%;\n+    border-spacing: 0;\n+    display: table;\n+    border-collapse: separate;\n+    border-color: grey;\n+`;\n+\n+const TableHeadStyled = styled.th`\n+    text-align: ${(props) => props.align};\n+    border-bottom: 2px solid #d5d5d5;\n+    color: #9a9a9a;\n+    font-weight: 600;\n+    font-size: 0.8rem;\n+    padding-bottom: 5px;\n+    vertical-align: top;\n+    text-transform: uppercase;\n+    padding: 5px 0 5px 15px;\n+    word-break: break-all;\n+`;\n+\n+export default class DomainPolicyList extends React.Component {\n+    constructor(props) {\n+        super(props);\n+        this.api = props.api;\n+        this.onSubmitDeletePolicy = this.onSubmitDeletePolicy.bind(this);\n+        this.onCancelDeletePolicy = this.onCancelDeletePolicy.bind(this);\n+        this.toggleAddPolicy = this.toggleAddPolicy.bind(this);\n+        this.reloadPolicies = this.reloadPolicies.bind(this);\n+        this.closeModal = this.closeModal.bind(this);\n+        this.state = {\n+            list: props.policies || [],\n+            showAddPolicy: false,\n+        };\n+    }\n+\n+    onSubmitDeletePolicy() {\n+        this.api\n+            .deletePolicy(\n+                this.props.domain,\n+                this.state.deletePolicyName,\n+                this.props._csrf\n+            )\n+            .then(() => {\n+                this.reloadPolicies(\n+                    `Successfully deleted policy ${this.state.deletePolicyName}`\n+                );\n+            })\n+            .catch((err) => {\n+                this.setState({\n+                    errorMessage: RequestUtils.xhrErrorCheckHelper(err),\n+                });\n+            });\n+    }\n+\n+    onCancelDeletePolicy() {\n+        this.setState({\n+            showDelete: false,\n+            deletePolicyName: null,\n+        });\n+    }\n+\n+    onClickDeletePolicy(policyName) {\n+        this.setState({\n+            showDelete: true,\n+            deletePolicyName: policyName,\n+            errorMessage: null,\n+        });\n+    }\n+\n+    reloadPolicies(successMessage) {\n+        let role = this.props.role;\n+\n+        this.api\n+            .getPolicies(this.props.domain, true)\n+            .then((data) => {\n+                let filteredPolicies = data;\n+                if (role) {\n+                    filteredPolicies = data.filter((policy) => {\n+                        let included = false;\n+                        policy.assertions.forEach((element) => {\n+                            if (\n+                                NameUtils.getShortName(\n+                                    ':role.',\n+                                    element.role\n+                                ) == role", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3766ec763cc3478316825b027636dfdf74208fe3"}, "originalPosition": 133}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTkxMTk0NQ==", "bodyText": "let's keep the file and class name as the same", "url": "https://github.com/AthenZ/athenz/pull/1127#discussion_r505911945", "createdAt": "2020-10-15T23:02:59Z", "author": {"login": "pratikgote"}, "path": "ui/src/components/domain-policy/DomainPolicyRow.js", "diffHunk": "@@ -0,0 +1,126 @@\n+/*\n+ * Copyright 2020 Verizon Media\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+import React from 'react';\n+import Icon from '../denali/icons/Icon';\n+import { colors } from '../denali/styles';\n+import styled from '@emotion/styled';\n+import DomainPolicyRuleTable from './DomainPolicyRuleTable';\n+import DateUtils from '../utils/DateUtils';\n+import RequestUtils from '../utils/RequestUtils';\n+\n+const TdStyled = styled.td`\n+    background-color: ${(props) => props.color};\n+    text-align: ${(props) => props.align};\n+    padding: 5px 0 5px 15px;\n+    vertical-align: middle;\n+    word-break: break-all;\n+`;\n+\n+const TrStyled = styled.tr`\n+    background-color: ${(props) => props.color};\n+`;\n+\n+export default class PolicyRow extends React.Component {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3766ec763cc3478316825b027636dfdf74208fe3"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTkxMjAyMQ==", "bodyText": "RolePolicyRuleRow?", "url": "https://github.com/AthenZ/athenz/pull/1127#discussion_r505912021", "createdAt": "2020-10-15T23:03:16Z", "author": {"login": "pratikgote"}, "path": "ui/src/components/domain-policy/DomainPolicyRow.js", "diffHunk": "@@ -0,0 +1,126 @@\n+/*\n+ * Copyright 2020 Verizon Media\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+import React from 'react';\n+import Icon from '../denali/icons/Icon';\n+import { colors } from '../denali/styles';\n+import styled from '@emotion/styled';\n+import DomainPolicyRuleTable from './DomainPolicyRuleTable';\n+import DateUtils from '../utils/DateUtils';\n+import RequestUtils from '../utils/RequestUtils';\n+\n+const TdStyled = styled.td`\n+    background-color: ${(props) => props.color};\n+    text-align: ${(props) => props.align};\n+    padding: 5px 0 5px 15px;\n+    vertical-align: middle;\n+    word-break: break-all;\n+`;\n+\n+const TrStyled = styled.tr`\n+    background-color: ${(props) => props.color};\n+`;\n+\n+export default class PolicyRow extends React.Component {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3766ec763cc3478316825b027636dfdf74208fe3"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTkxMjM4Nw==", "bodyText": "let's keep the file and class name as the same", "url": "https://github.com/AthenZ/athenz/pull/1127#discussion_r505912387", "createdAt": "2020-10-15T23:04:21Z", "author": {"login": "pratikgote"}, "path": "ui/src/components/domain-policy/DomainPolicyRuleTable.js", "diffHunk": "@@ -0,0 +1,316 @@\n+/*\n+ * Copyright 2020 Verizon Media\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+import React from 'react';\n+import styled from '@emotion/styled';\n+import Icon from '../denali/icons/Icon';\n+import { colors } from '../denali/styles';\n+import AddAssertion from '../policy/AddAssertion';\n+import Alert from '../denali/Alert';\n+import DeleteModal from '../modal/DeleteModal';\n+import { MODAL_TIME_OUT } from '../constants/constants';\n+import RequestUtils from '../utils/RequestUtils';\n+\n+const StyleTable = styled.table`\n+    width: 100%;\n+    border-spacing: 0;\n+    display: table;\n+    border-collapse: separate;\n+`;\n+\n+const StyleTd = styled.td`\n+    padding: 30px 20px;\n+    background-color: ${(props) => props.color};\n+`;\n+\n+const RuleHeadStyled = styled.th`\n+    border-bottom: 2px solid #d5d5d5;\n+    color: #9a9a9a;\n+    font-weight: 600;\n+    font-size: 0.7rem;\n+    padding-bottom: 5px;\n+    vertical-align: top;\n+    text-transform: uppercase;\n+    padding: 5px 0 5px 15px;\n+    text-align: left;\n+    background-color: white;\n+`;\n+\n+const IconHeadStyled = styled.th`\n+    border-bottom: 2px solid #d5d5d5;\n+    color: #9a9a9a;\n+    font-weight: 600;\n+    font-size: 0.8rem;\n+    padding-bottom: 5px;\n+    vertical-align: top;\n+    text-transform: uppercase;\n+    width: 120px;\n+    text-align: center;\n+    background-color: white;\n+`;\n+\n+const TableHeadStyled = styled.th`\n+    text-align: ${(props) => props.align};\n+    border-bottom: 2px solid #d5d5d5;\n+    color: ${(props) => props.color};\n+    font-weight: ${(props) => props.weight};\n+    font-size: ${(props) => props.size};\n+    padding-bottom: 2px;\n+    vertical-align: top;\n+    padding: 10px 10px 0px 15px;\n+    word-break: break-all;\n+`;\n+\n+const TableDiv = styled.div`\n+    margin: 15px 0 0 0;\n+`;\n+\n+const TDStyled = styled.td`\n+    background-color: ${(props) => props.color};\n+    text-align: ${(props) => props.align};\n+    padding: 5px 0 5px 15px;\n+    vertical-align: middle;\n+    word-break: break-all;\n+`;\n+\n+const StyledAnchor = styled.a`\n+    color: #3570f4;\n+    text-decoration: none;\n+    cursor: pointer;\n+`;\n+\n+export default class PolicyRuleTable extends React.Component {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3766ec763cc3478316825b027636dfdf74208fe3"}, "originalPosition": 94}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTkxMjQ5Nw==", "bodyText": "RolePolicyRuleTable?", "url": "https://github.com/AthenZ/athenz/pull/1127#discussion_r505912497", "createdAt": "2020-10-15T23:04:38Z", "author": {"login": "pratikgote"}, "path": "ui/src/components/domain-policy/DomainPolicyRuleTable.js", "diffHunk": "@@ -0,0 +1,316 @@\n+/*\n+ * Copyright 2020 Verizon Media\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+import React from 'react';\n+import styled from '@emotion/styled';\n+import Icon from '../denali/icons/Icon';\n+import { colors } from '../denali/styles';\n+import AddAssertion from '../policy/AddAssertion';\n+import Alert from '../denali/Alert';\n+import DeleteModal from '../modal/DeleteModal';\n+import { MODAL_TIME_OUT } from '../constants/constants';\n+import RequestUtils from '../utils/RequestUtils';\n+\n+const StyleTable = styled.table`\n+    width: 100%;\n+    border-spacing: 0;\n+    display: table;\n+    border-collapse: separate;\n+`;\n+\n+const StyleTd = styled.td`\n+    padding: 30px 20px;\n+    background-color: ${(props) => props.color};\n+`;\n+\n+const RuleHeadStyled = styled.th`\n+    border-bottom: 2px solid #d5d5d5;\n+    color: #9a9a9a;\n+    font-weight: 600;\n+    font-size: 0.7rem;\n+    padding-bottom: 5px;\n+    vertical-align: top;\n+    text-transform: uppercase;\n+    padding: 5px 0 5px 15px;\n+    text-align: left;\n+    background-color: white;\n+`;\n+\n+const IconHeadStyled = styled.th`\n+    border-bottom: 2px solid #d5d5d5;\n+    color: #9a9a9a;\n+    font-weight: 600;\n+    font-size: 0.8rem;\n+    padding-bottom: 5px;\n+    vertical-align: top;\n+    text-transform: uppercase;\n+    width: 120px;\n+    text-align: center;\n+    background-color: white;\n+`;\n+\n+const TableHeadStyled = styled.th`\n+    text-align: ${(props) => props.align};\n+    border-bottom: 2px solid #d5d5d5;\n+    color: ${(props) => props.color};\n+    font-weight: ${(props) => props.weight};\n+    font-size: ${(props) => props.size};\n+    padding-bottom: 2px;\n+    vertical-align: top;\n+    padding: 10px 10px 0px 15px;\n+    word-break: break-all;\n+`;\n+\n+const TableDiv = styled.div`\n+    margin: 15px 0 0 0;\n+`;\n+\n+const TDStyled = styled.td`\n+    background-color: ${(props) => props.color};\n+    text-align: ${(props) => props.align};\n+    padding: 5px 0 5px 15px;\n+    vertical-align: middle;\n+    word-break: break-all;\n+`;\n+\n+const StyledAnchor = styled.a`\n+    color: #3570f4;\n+    text-decoration: none;\n+    cursor: pointer;\n+`;\n+\n+export default class PolicyRuleTable extends React.Component {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3766ec763cc3478316825b027636dfdf74208fe3"}, "originalPosition": 94}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTkxMzEzNw==", "bodyText": "Policy Rules?", "url": "https://github.com/AthenZ/athenz/pull/1127#discussion_r505913137", "createdAt": "2020-10-15T23:06:31Z", "author": {"login": "pratikgote"}, "path": "ui/src/components/header/RoleTabs.js", "diffHunk": "@@ -0,0 +1,139 @@\n+/*\n+ * Copyright 2020 Verizon Media\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+import React from 'react';\n+import TabGroup from '../denali/TabGroup';\n+import { Router } from '../../routes';\n+\n+export default class RoleTabs extends React.Component {\n+    constructor(props) {\n+        super(props);\n+        this.tabClicked = this.tabClicked.bind(this);\n+    }\n+    TABS = [\n+        {\n+            label: 'Members',\n+            name: 'members',\n+        },\n+        {\n+            label: 'Review',\n+            name: 'review',\n+        },\n+        {\n+            label: 'Policies',", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3766ec763cc3478316825b027636dfdf74208fe3"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTkxMzUzMw==", "bodyText": "let's not change the policy route at the domain level, lets keep it as is", "url": "https://github.com/AthenZ/athenz/pull/1127#discussion_r505913533", "createdAt": "2020-10-15T23:07:43Z", "author": {"login": "pratikgote"}, "path": "ui/src/components/header/Tabs.js", "diffHunk": "@@ -76,7 +76,7 @@ export default class Tabs extends React.Component {\n                 this.props.api\n                     .getStatus()\n                     .then(function() {\n-                        Router.pushRoute('policy', { domain });\n+                        Router.pushRoute('domain-policy', { domain });", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3766ec763cc3478316825b027636dfdf74208fe3"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTkxMzc1OQ==", "bodyText": "replace ` with '", "url": "https://github.com/AthenZ/athenz/pull/1127#discussion_r505913759", "createdAt": "2020-10-15T23:08:25Z", "author": {"login": "pratikgote"}, "path": "ui/src/components/history/RoleHistoryList.js", "diffHunk": "@@ -0,0 +1,359 @@\n+/*\n+ * Copyright 2020 Verizon Media\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+import React from 'react';\n+import styled from '@emotion/styled';\n+import { colors } from '../denali/styles';\n+import Button from '../denali/Button';\n+import InputDropdown from '../denali/InputDropdown';\n+import FlatPicker from '../flatpicker/FlatPicker';\n+import NameUtils from '../utils/NameUtils';\n+import Alert from '../denali/Alert';\n+import Menu from '../denali/Menu/Menu';\n+import { MODAL_TIME_OUT } from '../constants/constants';\n+import DateUtils from '../utils/DateUtils';\n+const HistorySectionDiv = styled.div`\n+    margin: 20px;\n+`;\n+\n+const HistoryTable = styled.table`\n+    width: 100%;\n+    border-spacing: 0;\n+    display: table;\n+    border-collapse: separate;\n+    border-color: grey;\n+    table-layout: fixed;\n+    padding-top: 20px;\n+`;\n+\n+const TableHeadStyled = styled.th`\n+    text-align: ${(props) => props.align};\n+    border-bottom: 2px solid #d5d5d5;\n+    color: #9a9a9a;\n+    font-weight: 600;\n+    font-size: 0.8rem;\n+    padding-bottom: 5px;\n+    vertical-align: top;\n+    text-transform: uppercase;\n+    padding: 5px 0 5px 15px;\n+    word-break: break-all;\n+`;\n+\n+const TDStyled = styled.td`\n+    background-color: ${(props) => props.color};\n+    text-align: ${(props) => props.align};\n+    padding: 5px 0 5px 15px;\n+    vertical-align: middle;\n+    word-break: break-all;\n+`;\n+\n+const HistoryFilterDiv = styled.div`\n+    display: grid;\n+    grid-template-columns: 55% 15% 15% 15%;\n+    grid-gap: 10px;\n+`;\n+\n+const HistoryFilterTitleDiv = styled.div`\n+    font-weight: bold;\n+`;\n+\n+const FlatPickrInputDiv = styled.div`\n+    & > div input {\n+        position: relative;\n+        font: 300 14px HelveticaNeue-Reg, Helvetica, Arial, sans-serif;\n+        background-color: rgba(53, 112, 244, 0.05);\n+        box-shadow: none;\n+        color: rgb(48, 48, 48);\n+        height: 16px;\n+        min-width: 50px;\n+        text-align: left;\n+        border-width: 2px;\n+        border-style: solid;\n+        border-color: transparent;\n+        border-image: initial;\n+        border-radius: 2px;\n+        flex: 1 0 auto;\n+        margin: 0px;\n+        margin-top: 5px;\n+        outline: none;\n+        padding: 0.6em 12px;\n+        transition: background-color 0.2s ease-in-out 0s,\n+            color 0.2s ease-in-out 0s, border 0.2s ease-in-out 0s;\n+        width: 80%;\n+    }\n+`;\n+\n+const MenuDiv = styled.div`\n+    padding: 5px 10px;\n+    background-color: black;\n+    color: white;\n+    font-size: 12px;\n+`;\n+\n+export default class RoleHistoryList extends React.Component {\n+    constructor(props) {\n+        super(props);\n+        this.api = props.api;\n+        this.state = {\n+            list: props.historyrows || [],\n+            role: props.role,\n+            startDate: this.getDefaultStartDate(props.startDate),\n+            endDate: props.endDate ? new Date(props.endDate) : new Date(),\n+            showSuccess: false,\n+        };\n+        this.exportToCSV = this.exportToCSV.bind(this);\n+        this.submitHistoryFilter = this.submitHistoryFilter.bind(this);\n+        this.closeModal = this.closeModal.bind(this);\n+        this.dateUtils = new DateUtils();\n+    }\n+\n+    closeModal() {\n+        this.setState({ showSuccess: null });\n+    }\n+\n+    exportToCSV() {\n+        let result = '';\n+        const columnDelimiter = ',',\n+            lineDelimiter = '\\n';\n+        result += 'ACTION,EXECUTED BY,MODIFIED DATE,DETAILS,AUDIT REFERENCE';\n+        result += lineDelimiter;\n+\n+        this.state.list.forEach((item) => {\n+            result +=\n+                item.action +\n+                columnDelimiter +\n+                item.who +\n+                columnDelimiter +\n+                item.when +\n+                columnDelimiter +\n+                item.details +\n+                columnDelimiter +\n+                item.why;\n+            result += lineDelimiter;\n+        });\n+\n+        // Download CSV file\n+        this.downloadCSV(result, this.props.domain + '-audit-history.csv');\n+    }\n+\n+    downloadCSV(csv, filename) {\n+        let csvFile;\n+        let downloadLink;\n+        // CSV file\n+        csvFile = new Blob([csv], { type: 'text/csv' });\n+        // Download link\n+        downloadLink = document.createElement('a');\n+        // File name\n+        downloadLink.download = filename;\n+        // Create a link to the file\n+        downloadLink.href = window.URL.createObjectURL(csvFile);\n+        // Hide download link\n+        downloadLink.style.display = 'none';\n+\n+        // Add the link to DOM\n+        document.body.appendChild(downloadLink);\n+\n+        // Click download link\n+        downloadLink.click();\n+    }\n+\n+    getDefaultStartDate(startDate) {\n+        let date = startDate ? new Date(startDate) : new Date();\n+        date.setMonth(date.getMonth() - 3);\n+        return date;\n+    }\n+\n+    getMinDate() {\n+        let date = new Date();\n+        date.setMonth(date.getMonth() - 15);\n+        return date;\n+    }\n+\n+    submitHistoryFilter() {\n+        if (\n+            this.dateUtils.uxDatetimeToRDLTimestamp(this.state.endDate) <\n+            this.dateUtils.uxDatetimeToRDLTimestamp(this.state.startDate)\n+        ) {\n+            let successMsg = `End Date should not be lesser than Start Date`;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3766ec763cc3478316825b027636dfdf74208fe3"}, "originalPosition": 189}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTkxNDQ0NA==", "bodyText": "can we add trim check too this.state.memberName.trim() === '' ?", "url": "https://github.com/AthenZ/athenz/pull/1127#discussion_r505914444", "createdAt": "2020-10-15T23:10:20Z", "author": {"login": "pratikgote"}, "path": "ui/src/components/member/AddMember.js", "diffHunk": "@@ -0,0 +1,237 @@\n+/*\n+ * Copyright 2020 Verizon Media\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+import React from 'react';\n+import AddModal from '../modal/AddModal';\n+import FlatPicker from '../flatpicker/FlatPicker';\n+import { colors } from '../denali/styles';\n+import Input from '../denali/Input';\n+import InputLabel from '../denali/InputLabel';\n+import styled from '@emotion/styled';\n+import Checkbox from '../denali/CheckBox';\n+import DateUtils from '../utils/DateUtils';\n+import NameUtils from '../utils/NameUtils';\n+import RequestUtils from '../utils/RequestUtils';\n+\n+const SectionsDiv = styled.div`\n+    width: 800px;\n+    text-align: left;\n+    background-color: ${colors.white};\n+`;\n+\n+const SectionDiv = styled.div`\n+    align-items: flex-start;\n+    display: flex;\n+    flex-flow: row nowrap;\n+    padding: 10px 30px;\n+`;\n+\n+const ContentDiv = styled.div`\n+    flex: 1 1;\n+    display: flex;\n+    flex-flow: row wrap;\n+`;\n+\n+const StyledInputLabel = styled(InputLabel)`\n+    flex: 0 0 150px;\n+    font-weight: 600;\n+    line-height: 36px;\n+`;\n+\n+const StyledInput = styled(Input)`\n+    max-width: 500px;\n+    margin-right: 10px;\n+    width: 300px;\n+`;\n+\n+const FlatPickrInputDiv = styled.div`\n+    margin-right: 10px;\n+    max-width: 500px;\n+    width: 260px;\n+    & > div input {\n+        position: relative;\n+        font: 300 14px HelveticaNeue-Reg, Helvetica, Arial, sans-serif;\n+        background-color: rgba(53, 112, 244, 0.05);\n+        box-shadow: none;\n+        color: rgb(48, 48, 48);\n+        height: 16px;\n+        min-width: 50px;\n+        text-align: left;\n+        border-width: 2px;\n+        border-style: solid;\n+        border-color: transparent;\n+        border-image: initial;\n+        border-radius: 2px;\n+        flex: 1 0 auto;\n+        margin: 0;\n+        margin-right: 10px;\n+        outline: none;\n+        padding: 0.6em 12px;\n+        transition: background-color 0.2s ease-in-out 0s,\n+            color 0.2s ease-in-out 0s, border 0.2s ease-in-out 0s;\n+        width: 80%;\n+    }\n+`;\n+\n+const StyledRoleContainer = styled.div`\n+    width: 100%;\n+`;\n+\n+const StyledRole = styled.div`\n+    background-color: rgba(53, 112, 244, 0.06);\n+    padding: 10px;\n+    width: calc(100% - 10px);\n+`;\n+\n+const StyledJustification = styled(Input)`\n+    width: 300px;\n+    margin-top: 5px;\n+`;\n+\n+export default class AddMember extends React.Component {\n+    constructor(props) {\n+        super(props);\n+        this.api = this.props.api;\n+        this.onSubmit = this.onSubmit.bind(this);\n+        this.state = {\n+            showModal: !!this.props.showAddMember,\n+        };\n+        this.dateUtils = new DateUtils();\n+    }\n+\n+    onSubmit() {\n+        if (!this.state.memberName || this.state.memberName === '') {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3766ec763cc3478316825b027636dfdf74208fe3"}, "originalPosition": 115}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTkxNDgxMA==", "bodyText": "the placeholder should also include unix., :group.", "url": "https://github.com/AthenZ/athenz/pull/1127#discussion_r505914810", "createdAt": "2020-10-15T23:11:22Z", "author": {"login": "pratikgote"}, "path": "ui/src/components/member/AddMember.js", "diffHunk": "@@ -0,0 +1,237 @@\n+/*\n+ * Copyright 2020 Verizon Media\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+import React from 'react';\n+import AddModal from '../modal/AddModal';\n+import FlatPicker from '../flatpicker/FlatPicker';\n+import { colors } from '../denali/styles';\n+import Input from '../denali/Input';\n+import InputLabel from '../denali/InputLabel';\n+import styled from '@emotion/styled';\n+import Checkbox from '../denali/CheckBox';\n+import DateUtils from '../utils/DateUtils';\n+import NameUtils from '../utils/NameUtils';\n+import RequestUtils from '../utils/RequestUtils';\n+\n+const SectionsDiv = styled.div`\n+    width: 800px;\n+    text-align: left;\n+    background-color: ${colors.white};\n+`;\n+\n+const SectionDiv = styled.div`\n+    align-items: flex-start;\n+    display: flex;\n+    flex-flow: row nowrap;\n+    padding: 10px 30px;\n+`;\n+\n+const ContentDiv = styled.div`\n+    flex: 1 1;\n+    display: flex;\n+    flex-flow: row wrap;\n+`;\n+\n+const StyledInputLabel = styled(InputLabel)`\n+    flex: 0 0 150px;\n+    font-weight: 600;\n+    line-height: 36px;\n+`;\n+\n+const StyledInput = styled(Input)`\n+    max-width: 500px;\n+    margin-right: 10px;\n+    width: 300px;\n+`;\n+\n+const FlatPickrInputDiv = styled.div`\n+    margin-right: 10px;\n+    max-width: 500px;\n+    width: 260px;\n+    & > div input {\n+        position: relative;\n+        font: 300 14px HelveticaNeue-Reg, Helvetica, Arial, sans-serif;\n+        background-color: rgba(53, 112, 244, 0.05);\n+        box-shadow: none;\n+        color: rgb(48, 48, 48);\n+        height: 16px;\n+        min-width: 50px;\n+        text-align: left;\n+        border-width: 2px;\n+        border-style: solid;\n+        border-color: transparent;\n+        border-image: initial;\n+        border-radius: 2px;\n+        flex: 1 0 auto;\n+        margin: 0;\n+        margin-right: 10px;\n+        outline: none;\n+        padding: 0.6em 12px;\n+        transition: background-color 0.2s ease-in-out 0s,\n+            color 0.2s ease-in-out 0s, border 0.2s ease-in-out 0s;\n+        width: 80%;\n+    }\n+`;\n+\n+const StyledRoleContainer = styled.div`\n+    width: 100%;\n+`;\n+\n+const StyledRole = styled.div`\n+    background-color: rgba(53, 112, 244, 0.06);\n+    padding: 10px;\n+    width: calc(100% - 10px);\n+`;\n+\n+const StyledJustification = styled(Input)`\n+    width: 300px;\n+    margin-top: 5px;\n+`;\n+\n+export default class AddMember extends React.Component {\n+    constructor(props) {\n+        super(props);\n+        this.api = this.props.api;\n+        this.onSubmit = this.onSubmit.bind(this);\n+        this.state = {\n+            showModal: !!this.props.showAddMember,\n+        };\n+        this.dateUtils = new DateUtils();\n+    }\n+\n+    onSubmit() {\n+        if (!this.state.memberName || this.state.memberName === '') {\n+            this.setState({\n+                errorMessage: 'Member name is required.',\n+            });\n+            return;\n+        }\n+\n+        if (\n+            this.props.justificationRequired &&\n+            (this.state.justification === undefined ||\n+                this.state.justification.trim() === '')\n+        ) {\n+            this.setState({\n+                errorMessage: 'Justification is required to add a member.',\n+            });\n+            return;\n+        }\n+\n+        let member = {\n+            memberName: this.state.memberName,\n+            expiration:\n+                this.state.memberExpiry && this.state.memberExpiry.length > 0\n+                    ? this.dateUtils.uxDatetimeToRDLTimestamp(\n+                          this.state.memberExpiry\n+                      )\n+                    : '',\n+            reviewReminder:\n+                this.state.memberReviewReminder &&\n+                this.state.memberReviewReminder.length > 0\n+                    ? this.dateUtils.uxDatetimeToRDLTimestamp(\n+                          this.state.memberReviewReminder\n+                      )\n+                    : '',\n+        };\n+        // send api call and then reload existing members component\n+        this.api\n+            .addMember(\n+                this.props.domain,\n+                this.props.role,\n+                this.state.memberName,\n+                member,\n+                this.state.justification\n+                    ? this.state.justification\n+                    : 'added using Athenz UI',\n+                this.props._csrf\n+            )\n+            .then(() => {\n+                this.setState({\n+                    showModal: false,\n+                    justification: '',\n+                });\n+                this.props.onSubmit(\n+                    `Successfully added ${this.state.memberName} to role: ${this.props.role}`\n+                );\n+            })\n+            .catch((err) => {\n+                this.setState({\n+                    errorMessage: RequestUtils.xhrErrorCheckHelper(err),\n+                });\n+            });\n+    }\n+\n+    inputChanged(key, evt) {\n+        this.setState({ [key]: evt.target.value });\n+    }\n+\n+    render() {\n+        let sections = (\n+            <SectionsDiv autoComplete={'off'} data-testid='add-member-form'>\n+                <SectionDiv>\n+                    <StyledInputLabel htmlFor='member-name'>\n+                        Member\n+                    </StyledInputLabel>\n+                    <ContentDiv>\n+                        <StyledInput\n+                            id='member-name'\n+                            name='member-name'\n+                            value={this.state.memberName}\n+                            onChange={this.inputChanged.bind(\n+                                this,\n+                                'memberName'\n+                            )}\n+                            placeholder='user.<shortid> or <domain>.<service>'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3766ec763cc3478316825b027636dfdf74208fe3"}, "originalPosition": 197}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTkxNTM4OQ==", "bodyText": "this.setState({\n        expanded: !this.state.expanded,\n    })", "url": "https://github.com/AthenZ/athenz/pull/1127#discussion_r505915389", "createdAt": "2020-10-15T23:13:15Z", "author": {"login": "pratikgote"}, "path": "ui/src/components/member/MemberTable.js", "diffHunk": "@@ -0,0 +1,214 @@\n+/*\n+ * Copyright 2020 Verizon Media\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+import React from 'react';\n+import styled from '@emotion/styled';\n+import { colors } from '../denali/styles';\n+import MemberRow from './MemberRow';\n+import Icon from '../denali/icons/Icon';\n+\n+const StyleTable = styled.table`\n+    width: 100%;\n+    border-spacing: 0;\n+    display: table;\n+    border-collapse: separate;\n+    border-color: grey;\n+    box-sizing: border-box;\n+    margin-top: 5px;\n+    box-shadow: 0 1px 4px #d9d9d9;\n+    border: 1px solid #fff;\n+    -webkit-border-image: none;\n+    border-image: none;\n+    -webkit-border-image: initial;\n+    border-image: initial;\n+    height: 50px;\n+`;\n+\n+const StyleDiv = styled.table`\n+    width: 100%;\n+    border-spacing: 0;\n+    display: table;\n+    border-collapse: separate;\n+    border-color: grey;\n+    box-sizing: border-box;\n+    margin-top: 5px;\n+    box-shadow: 0 1px 4px #d9d9d9;\n+    border: 1px solid #fff;\n+    -webkit-border-image: none;\n+    border-image: none;\n+    -webkit-border-image: initial;\n+    border-image: initial;\n+    height: 50px;\n+`;\n+\n+const TableHeadStyled = styled.th`\n+    text-align: ${(props) => props.align};\n+    border-bottom: 2px solid #d5d5d5;\n+    color: #9a9a9a;\n+    font-weight: 600;\n+    font-size: 0.8rem;\n+    padding-bottom: 5px;\n+    vertical-align: top;\n+    text-transform: uppercase;\n+    padding: 5px 0 5px 15px;\n+    word-break: break-all;\n+`;\n+\n+const TableHeadStyledRoleName = styled.th`\n+    text-align: ${(props) => props.align};\n+    border-bottom: 2px solid #d5d5d5;\n+    color: #9a9a9a;\n+    font-weight: 600;\n+    font-size: 0.8rem;\n+    padding-bottom: 5px;\n+    vertical-align: top;\n+    text-transform: uppercase;\n+    padding: 5px 0 5px 35px;\n+    word-break: break-all;\n+`;\n+\n+const TableCaptionStyled = styled.caption`\n+    height: 25px;\n+    margin-left: 10px;\n+    margin-top: 10px;\n+    text-align: left;\n+    padding: 5px 0 5px 15px;\n+    vertical-align: middle;\n+    word-break: break-all;\n+    display: block;\n+`;\n+\n+const LeftMarginSpan = styled.span`\n+    margin-right: 10px;\n+    verticalAlign\uff1abottom\uff1b\n+`;\n+\n+export default class MemberTable extends React.Component {\n+    constructor(props) {\n+        super(props);\n+        this.api = props.api;\n+\n+        this.state = {\n+            expanded: false,\n+        };\n+    }\n+\n+    expandMembers() {\n+        let expanded = this.state.expanded;\n+        this.setState({\n+            expanded: !expanded,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3766ec763cc3478316825b027636dfdf74208fe3"}, "originalPosition": 111}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTkxNjA3Ng==", "bodyText": "let's keep the name of the class the same as the file", "url": "https://github.com/AthenZ/athenz/pull/1127#discussion_r505916076", "createdAt": "2020-10-15T23:15:06Z", "author": {"login": "pratikgote"}, "path": "ui/src/components/policy/AddPolicyToRole.js", "diffHunk": "@@ -0,0 +1,100 @@\n+/*\n+ * Copyright 2020 Verizon Media\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+import React from 'react';\n+import AddModal from '../modal/AddModal';\n+import AddRuleForRoleForm from './AddRuleForRoleForm';\n+import RequestUtils from '../utils/RequestUtils';\n+\n+export default class AddPolicy extends React.Component {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3766ec763cc3478316825b027636dfdf74208fe3"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTkxNjMxOQ==", "bodyText": "let's keep the name of the file the same as the class name", "url": "https://github.com/AthenZ/athenz/pull/1127#discussion_r505916319", "createdAt": "2020-10-15T23:15:48Z", "author": {"login": "pratikgote"}, "path": "ui/src/components/policy/AddRuleForRoleForm.js", "diffHunk": "@@ -0,0 +1,197 @@\n+/*\n+ * Copyright 2020 Verizon Media\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+import React from 'react';\n+import styled from '@emotion/styled';\n+import InputLabel from '../denali/InputLabel';\n+import Input from '../denali/Input';\n+import InputDropdown from '../denali/InputDropdown';\n+import RadioButtonGroup from '../denali/RadioButtonGroup';\n+import { colors } from '../denali/styles';\n+import RequestUtils from '../utils/RequestUtils';\n+import Color from '../denali/Color';\n+\n+const SectionsDiv = styled.div`\n+    width: 100%;\n+    text-align: left;\n+    background-color: ${colors.white};\n+`;\n+\n+const SectionDiv = styled.div`\n+    align-items: flex-start;\n+    display: flex;\n+    flex-flow: row nowrap;\n+    padding: 10px 30px;\n+`;\n+\n+const ContentDiv = styled.div`\n+    flex: 1 1;\n+    margin-right: 10px;\n+`;\n+\n+const StyledInputLabel = styled(InputLabel)`\n+    flex: 0 0 100px;\n+    margin-right: 2%;\n+`;\n+\n+const StyledInput = styled(Input)`\n+    width: 500px;\n+`;\n+\n+const StyledRadioButtonGroup = styled(RadioButtonGroup)`\n+    margin-top: 8px;\n+`;\n+\n+const StyledInputDropDown = styled(InputDropdown)`\n+    width: 500px;\n+`;\n+\n+const ErrorDiv = styled.div`\n+    margin-left: 155px;\n+`;\n+\n+export default class AddRuleForm extends React.Component {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3766ec763cc3478316825b027636dfdf74208fe3"}, "originalPosition": 65}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTkxNjc1OA==", "bodyText": "code duplication DomainPolicyList:126", "url": "https://github.com/AthenZ/athenz/pull/1127#discussion_r505916758", "createdAt": "2020-10-15T23:17:11Z", "author": {"login": "pratikgote"}, "path": "ui/src/components/policy/PolicyList.js", "diffHunk": "@@ -109,11 +116,31 @@ export default class PolicyList extends React.Component {\n     }\n \n     reloadPolicies(successMessage) {\n+        let role = this.props.role;\n+\n         this.api\n-            .getPolicies(this.props.domain)\n+            .getPolicies(this.props.domain, true)\n             .then((data) => {\n+                let filteredPolicies = data;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3766ec763cc3478316825b027636dfdf74208fe3"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTkxNjkyMA==", "bodyText": "remove commented code", "url": "https://github.com/AthenZ/athenz/pull/1127#discussion_r505916920", "createdAt": "2020-10-15T23:17:41Z", "author": {"login": "pratikgote"}, "path": "ui/src/components/policy/PolicyRow.js", "diffHunk": "@@ -68,55 +90,66 @@ export default class PolicyRow extends React.Component {\n     render() {\n         let rows = [];\n         let left = 'left';\n-        let center = 'center';\n-        rows.push(\n-            <tr key={this.state.name} data-testid='policy-row'>\n-                <TdStyled color={this.props.color} align={left}>\n-                    {this.state.name}\n-                </TdStyled>\n-                <TdStyled color={this.props.color} align={left}>\n-                    {this.localDate.getLocalDate(\n-                        this.props.modified,\n-                        'UTC',\n-                        'UTC'\n-                    )}\n-                </TdStyled>\n-                <TdStyled color={this.props.color} align={center}>\n-                    <Icon\n-                        icon={'list-check'}\n-                        onClick={this.toggleAssertions}\n-                        color={colors.icons}\n-                        isLink\n-                        size={'1.25em'}\n-                        verticalAlign={'text-bottom'}\n-                    />\n-                </TdStyled>\n-                <TdStyled color={this.props.color} align={center}>\n-                    <Icon\n-                        icon={'trash'}\n-                        onClick={this.props.onClickDeletePolicy}\n-                        color={colors.icons}\n-                        isLink\n-                        size={'1.25em'}\n-                        verticalAlign={'text-bottom'}\n-                    />\n-                </TdStyled>\n-            </tr>\n-        );\n+        const arrowup = 'arrowhead-up-circle-solid';\n+        const arrowdown = 'arrowhead-down-circle';\n+\n         if (this.state.assertions) {\n             rows.push(\n-                <TrStyled\n-                    color={this.props.color}\n-                    key={this.state.name + '-info'}\n-                >\n-                    <PolicyRuleTable\n-                        color={this.props.color}\n-                        assertions={this.state.assertions}\n-                        name={this.state.name}\n-                        api={this.api}\n-                        domain={this.props.domain}\n-                        _csrf={this.props._csrf}\n-                    />\n+                <TrStyled key={this.state.name} data-testid='policy-row'>\n+                    <TdStyled align={left}>\n+                        <StyledDiv>\n+                            <LeftMarginSpan>\n+                                <Icon\n+                                    icon={\n+                                        this.state.assertions\n+                                            ? arrowup\n+                                            : arrowdown\n+                                    }\n+                                    onClick={this.toggleAssertions}\n+                                    color={colors.icons}\n+                                    isLink\n+                                    size={'1.25em'}\n+                                    verticalAlign={'text-bottom'}\n+                                />\n+                            </LeftMarginSpan>\n+                            {this.state.name}\n+                        </StyledDiv>\n+                        <StyledDiv>\n+                            <PolicyRuleTable\n+                                assertions={this.state.assertions}\n+                                name={this.state.name}\n+                                api={this.api}\n+                                domain={this.props.domain}\n+                                role={this.props.role}\n+                                _csrf={this.props._csrf}\n+                            />\n+                        </StyledDiv>\n+                    </TdStyled>\n+                </TrStyled>\n+            );\n+            // rows.push(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3766ec763cc3478316825b027636dfdf74208fe3"}, "originalPosition": 119}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTkxODY1OA==", "bodyText": "let's move the below function variables to the constructor, as on every re-render these will be created again causing the unnecessary function creations", "url": "https://github.com/AthenZ/athenz/pull/1127#discussion_r505918658", "createdAt": "2020-10-15T23:23:03Z", "author": {"login": "pratikgote"}, "path": "ui/src/components/role/RoleSectionRow.js", "diffHunk": "@@ -0,0 +1,386 @@\n+/*\n+ * Copyright 2020 Verizon Media\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+import React from 'react';\n+import Icon from '../denali/icons/Icon';\n+import { colors } from '../denali/styles';\n+import NameUtils from '../utils/NameUtils';\n+import styled from '@emotion/styled';\n+import { Router } from '../../routes.js';\n+import DeleteModal from '../modal/DeleteModal';\n+import Menu from '../denali/Menu/Menu';\n+import DateUtils from '../utils/DateUtils';\n+import RequestUtils from '../utils/RequestUtils';\n+\n+const TDName = styled.td`\n+    background-color: ${(props) => props.color};\n+    text-align: ${(props) => props.align};\n+    padding: 5px 0 5px 0;\n+    vertical-align: middle;\n+    word-break: break-all;\n+    width: 29%;\n+`;\n+\n+const TDModified = styled.td`\n+    background-color: ${(props) => props.color};\n+    text-align: ${(props) => props.align};\n+    padding: 5px 0 5px 0;\n+    vertical-align: middle;\n+    word-break: break-all;\n+    width: 17%;\n+`;\n+\n+const TDReview = styled.td`\n+    background-color: ${(props) => props.color};\n+    text-align: ${(props) => props.align};\n+    padding: 5px 0 5px 0;\n+    vertical-align: middle;\n+    word-break: break-all;\n+    width: 12%;\n+`;\n+\n+const TDIcon = styled.td`\n+    background-color: ${(props) => props.color};\n+    text-align: ${(props) => props.align};\n+    padding: 5px 0 5px 0;\n+    vertical-align: middle;\n+    word-break: break-all;\n+    width: 9%;\n+`;\n+\n+const TDDelete = styled.td`\n+    background-color: ${(props) => props.color};\n+    text-align: ${(props) => props.align};\n+    padding: 5px 0 5px 0;\n+    vertical-align: middle;\n+    word-break: break-all;\n+    width: 6%;\n+`;\n+\n+const TrStyled = styled.tr`\n+    background-color: ${(props) => props.color};\n+`;\n+\n+const MenuDiv = styled.div`\n+    padding: 5px 10px;\n+    background-color: black;\n+    color: white;\n+    font-size: 12px;\n+`;\n+\n+const LeftSpan = styled.span`\n+    padding-left: 20px;\n+`;\n+\n+export default class RoleSectionRow extends React.Component {\n+    constructor(props) {\n+        super(props);\n+        this.api = this.props.api;\n+        this.onSubmitDelete = this.onSubmitDelete.bind(this);\n+        this.onClickDeleteCancel = this.onClickDeleteCancel.bind(this);\n+        this.saveJustification = this.saveJustification.bind(this);\n+        this.state = {\n+            name: NameUtils.getShortName(':role.', this.props.details.name),\n+            showDelete: false,\n+        };\n+        this.localDate = new DateUtils();\n+    }\n+\n+    saveJustification(val) {\n+        this.setState({ deleteJustification: val });\n+    }\n+\n+    onClickDelete(name) {\n+        this.setState({\n+            showDelete: true,\n+            deleteName: name,\n+        });\n+    }\n+\n+    onClickFunction(route, domain, role) {\n+        Router.pushRoute(route, { domain: domain, role: role });\n+    }\n+\n+    onSubmitDelete(domain) {\n+        let roleName = this.state.deleteName;\n+        if (\n+            this.props.justificationRequired &&\n+            (this.state.deleteJustification === undefined ||\n+                this.state.deleteJustification.trim() === '')\n+        ) {\n+            this.setState({\n+                errorMessage: 'Justification is required to delete a role',\n+            });\n+            return;\n+        }\n+\n+        this.api\n+            .deleteRole(\n+                domain,\n+                roleName,\n+                this.state.deleteJustification\n+                    ? this.state.deleteJustification\n+                    : 'deleted using Athenz UI',\n+                this.props._csrf\n+            )\n+            .then(() => {\n+                this.setState({\n+                    showDelete: false,\n+                    deleteName: null,\n+                    deleteJustification: null,\n+                    errorMessage: null,\n+                });\n+                this.props.onUpdateSuccess(\n+                    `Successfully deleted role ${roleName}`\n+                );\n+            })\n+            .catch((err) => {\n+                this.setState({\n+                    errorMessage: RequestUtils.xhrErrorCheckHelper(err),\n+                });\n+            });\n+    }\n+\n+    onClickDeleteCancel() {\n+        this.setState({\n+            showDelete: false,\n+            deleteName: '',\n+        });\n+    }\n+\n+    render() {\n+        let rows = [];\n+        let left = 'left';\n+        let center = 'center';\n+        let role = this.props.details;\n+        let color = this.props.color;\n+        let idx = this.props.idx;\n+\n+        let clickMembers = this.onClickFunction.bind(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3766ec763cc3478316825b027636dfdf74208fe3"}, "originalPosition": 171}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTkxODk4NA==", "bodyText": "can we convert this to a functional component since this component doesn't maintain its own state?", "url": "https://github.com/AthenZ/athenz/pull/1127#discussion_r505918984", "createdAt": "2020-10-15T23:24:09Z", "author": {"login": "pratikgote"}, "path": "ui/src/components/role/RoleSectionTable.js", "diffHunk": "@@ -0,0 +1,42 @@\n+/*\n+ * Copyright 2020 Verizon Media\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+import React from 'react';\n+import styled from '@emotion/styled';\n+\n+const StyleTableSub = styled.table`\n+    width: 100%;\n+    border-spacing: 0;\n+    display: table;\n+    border-collapse: separate;\n+    border-color: grey;\n+`;\n+\n+const TdStyled = styled.td`\n+    colspan: '1';\n+`;\n+\n+export default class RoleSectionTable extends React.Component {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3766ec763cc3478316825b027636dfdf74208fe3"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTkxOTY0Mg==", "bodyText": "let's make these dynamic parameters", "url": "https://github.com/AthenZ/athenz/pull/1127#discussion_r505919642", "createdAt": "2020-10-15T23:26:12Z", "author": {"login": "pratikgote"}, "path": "ui/src/components/role/RoleTable.js", "diffHunk": "@@ -51,34 +57,184 @@ const TableHeadStyledRoleName = styled.th`\n     word-break: break-all;\n `;\n \n+const LeftMarginSpan = styled.span`\n+    margin-right: 10px;\n+    verticalAlign\uff1abottom\uff1b\n+`;\n+\n+const TDStyled = styled.td`\n+    background-color: ${(props) => props.color};\n+    text-align: ${(props) => props.align};\n+    padding: 5px 0 5px 15px;\n+    vertical-align: middle;\n+    word-break: break-all;\n+`;\n+\n+const TrStyled = styled.tr`\n+    box-sizing: border-box;\n+    margin-top: 5px;\n+    box-shadow: 0 1px 4px #d9d9d9;\n+    border: 1px solid #fff;\n+    -webkit-border-image: none;\n+    border-image: none;\n+    -webkit-border-image: initial;\n+    border-image: initial;\n+    height: 50px;\n+`;\n+\n export default class RoleTable extends React.Component {\n     constructor(props) {\n         super(props);\n         this.api = props.api;\n+\n+        let awsRows = props.roles.filter((item) =>\n+            item.name.startsWith(props.domain + AWS_ROLE_PREFIX)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3766ec763cc3478316825b027636dfdf74208fe3"}, "originalPosition": 60}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEyMTgwNjgy", "url": "https://github.com/AthenZ/athenz/pull/1127#pullrequestreview-512180682", "createdAt": "2020-10-19T21:42:10Z", "commit": {"oid": "3766ec763cc3478316825b027636dfdf74208fe3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQyMTo0MjoxMFrOHkit-w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQyMTo0MjoxMFrOHkit-w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODA3OTYxMQ==", "bodyText": "we should add pattern over here to show only numbers can be entered", "url": "https://github.com/AthenZ/athenz/pull/1127#discussion_r508079611", "createdAt": "2020-10-19T21:42:10Z", "author": {"login": "chandrasekhar1996"}, "path": "ui/src/components/settings/SettingRow.js", "diffHunk": "@@ -0,0 +1,168 @@\n+/*\n+ * Copyright 2020 Verizon Media\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+import React from 'react';\n+import styled from '@emotion/styled';\n+import Switch from '../denali/Switch';\n+import Input from '../denali/Input';\n+import RadioButtonGroup from '../denali/RadioButtonGroup';\n+\n+const TDStyled = styled.td`\n+    background-color: ${(props) => props.color};\n+    text-align: ${(props) => props.align};\n+    padding: 5px 0 5px 15px;\n+    vertical-align: middle;\n+    word-break: break-all;\n+`;\n+\n+const TrStyled = styled.tr`\n+    box-sizing: border-box;\n+    margin-top: 10px;\n+    box-shadow: 0 1px 4px #d9d9d9;\n+    border: 1px solid #fff;\n+    -webkit-border-image: none;\n+    border-image: none;\n+    -webkit-border-image: initial;\n+    border-image: initial;\n+    height: 50px;\n+`;\n+\n+const StyledDiv = styled.div`\n+    display: flex;\n+`;\n+\n+const SettingInput = styled(Input)`\n+    margin-top: 5px;\n+`;\n+\n+const SettingRadioButtonGroup = styled(RadioButtonGroup)`\n+    margin-top: 8px;\n+`;\n+\n+export default class SettingRow extends React.Component {\n+    constructor(props) {\n+        super(props);\n+        this.onTimeChange = this.onTimeChange.bind(this);\n+        this.toggleSwitchButton = this.toggleSwitchButton.bind(this);\n+        this.onRadioChange = this.onRadioChange.bind(this);\n+        this.saveJustification = this.saveJustification.bind(this);\n+        this.api = props.api;\n+\n+        this.state = {\n+            value: props.value,\n+        };\n+    }\n+\n+    saveJustification(val) {\n+        this.setState({ deleteJustification: val });\n+    }\n+\n+    toggleSwitchButton() {\n+        let prevValue = this.state.value;\n+        this.props.onValueChange(this.props.name, !prevValue);\n+        this.setState({\n+            value: !prevValue,\n+        });\n+    }\n+\n+    onTimeChange(evt) {\n+        this.props.onValueChange(this.props.name, evt.target.value);\n+        this.setState({\n+            value: evt.target.value,\n+        });\n+    }\n+\n+    onRadioChange(event) {\n+        if (event.target.value) {\n+            this.props.onValueChange(this.props.name, event.target.value);\n+            this.setState({\n+                value: event.target.value,\n+            });\n+        }\n+    }\n+\n+    getSettingButton() {\n+        const algOptions = [\n+            { value: 'ECDSA', label: 'ECDSA' },\n+            { value: 'RSA', label: 'RSA' },\n+        ];\n+\n+        switch (this.props.type) {\n+            case 'switch':\n+                return (\n+                    <Switch\n+                        name={'setting' + this.props.name}\n+                        value={this.state.value}\n+                        checked={this.state.value}\n+                        onChange={this.toggleSwitchButton}\n+                    />\n+                );\n+            case 'input':\n+                return (\n+                    <StyledDiv>\n+                        <SettingInput", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3766ec763cc3478316825b027636dfdf74208fe3"}, "originalPosition": 115}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEyMTg0ODc2", "url": "https://github.com/AthenZ/athenz/pull/1127#pullrequestreview-512184876", "createdAt": "2020-10-19T21:49:55Z", "commit": {"oid": "3766ec763cc3478316825b027636dfdf74208fe3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQyMTo0OTo1NVrOHki7tw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQyMTo0OTo1NVrOHki7tw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODA4MzEyNw==", "bodyText": "missing import statement for alert", "url": "https://github.com/AthenZ/athenz/pull/1127#discussion_r508083127", "createdAt": "2020-10-19T21:49:55Z", "author": {"login": "chandrasekhar1996"}, "path": "ui/src/components/review/ReviewRow.js", "diffHunk": "@@ -0,0 +1,281 @@\n+/*\n+ * Copyright 2020 Verizon Media\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+import React from 'react';\n+import RadioButton from '../denali/RadioButton';\n+import styled from '@emotion/styled';\n+import UpdateModal from '../modal/UpdateModal';\n+import DateUtils from '../utils/DateUtils';\n+import RequestUtils from '../utils/RequestUtils';\n+\n+const TDStyled = styled.td`\n+    background-color: ${(props) => props.color};\n+    text-align: ${(props) => props.align};\n+    padding: 5px 0 5px 15px;\n+    vertical-align: middle;\n+    word-break: break-all;\n+`;\n+\n+const TrStyled = styled.tr`\n+    box-sizing: border-box;\n+    margin-top: 10px;\n+    box-shadow: 0 1px 4px #d9d9d9;\n+    border: 1px solid #fff;\n+    -webkit-border-image: none;\n+    border-image: none;\n+    -webkit-border-image: initial;\n+    border-image: initial;\n+    height: 50px;\n+`;\n+\n+const MenuDiv = styled.div`\n+    padding: 5px 10px;\n+    background-color: black;\n+    color: white;\n+    font-size: 12px;\n+`;\n+\n+const LeftSpan = styled.span`\n+    padding-left: 20px;\n+`;\n+\n+export default class ReviewRow extends React.Component {\n+    constructor(props) {\n+        super(props);\n+        this.api = this.props.api;\n+        this.onSubmitApprove = this.onSubmitApprove.bind(this);\n+        this.onReviewSubmit = this.onReviewSubmit.bind(this);\n+        this.onClickApproveCancel = this.onClickApproveCancel.bind(this);\n+        this.onClickDenyCancel = this.onClickDenyCancel.bind(this);\n+        this.onApprove = this.onApprove.bind(this);\n+        this.onDeny = this.onDeny.bind(this);\n+        this.state = {\n+            name: this.props.details.memberName,\n+            showApprove: false,\n+            showDeny: false,\n+        };\n+        this.localDate = new DateUtils();\n+    }\n+\n+    onReviewSubmit(message) {\n+        this.setState({ reviewMembers: false });\n+        if (message) {\n+            this.props.onUpdateSuccess(message);\n+        }\n+    }\n+\n+    saveJustification(val) {\n+        this.setState({ deleteJustification: val });\n+    }\n+\n+    onApprove() {\n+        this.setState({\n+            showApprove: true,\n+        });\n+    }\n+\n+    onDeny() {\n+        this.setState({\n+            showDeny: true,\n+        });\n+    }\n+\n+    onSubmitApprove() {\n+        if (\n+            this.props.justificationRequired &&\n+            (this.state.deleteJustification === undefined ||\n+                this.state.deleteJustification.trim() === '')\n+        ) {\n+            this.setState({\n+                errorMessage: 'Justification is required to update a role',\n+            });\n+            return;\n+        }\n+\n+        let membership = {\n+            memberName: this.state.name,\n+            approve: true,\n+            //TODO: add expiration time in table, is this needed in the table?\n+            expiration: '',\n+        };\n+\n+        this.api\n+            .processPending(\n+                this.props.domain,\n+                this.props.role,\n+                this.state.name,\n+                'Approve pending members in Athenz UI',\n+                membership,\n+                this.props._csrf\n+            )\n+            .then(() => {\n+                this.setState({\n+                    showSuccess: true,\n+                    showApprove: false,\n+                });\n+\n+                this.props.onUpdateSuccess();\n+            })\n+            .catch((err) => {\n+                this.setState({\n+                    errorMessage: RequestUtils.xhrErrorCheckHelper(err),\n+                });\n+            });\n+    }\n+\n+    onSubmitDeny() {\n+        if (\n+            this.props.justificationRequired &&\n+            (this.state.deleteJustification === undefined ||\n+                this.state.deleteJustification.trim() === '')\n+        ) {\n+            this.setState({\n+                errorMessage: 'Justification is required to update a role',\n+            });\n+            return;\n+        }\n+\n+        this.api\n+            .deletePendingMember(\n+                this.props.domain,\n+                this.props.role,\n+                this.state.name,\n+                'Deny pending members in Athenz UI',\n+                this.props._csrf\n+            )\n+            .then(() => {\n+                this.setState({\n+                    showSuccess: true,\n+                    showDeny: false,\n+                });\n+\n+                this.props.onUpdateSuccess();\n+            })\n+            .catch((err) => {\n+                this.setState({\n+                    errorMessage: RequestUtils.xhrErrorCheckHelper(err),\n+                });\n+            });\n+    }\n+\n+    onClickApproveCancel() {\n+        this.setState({\n+            showApprove: false,\n+            errorMessage: '',\n+        });\n+    }\n+\n+    onClickDenyCancel() {\n+        this.setState({\n+            showDeny: false,\n+            errorMessage: '',\n+        });\n+    }\n+\n+    render() {\n+        let left = 'left';\n+        let center = 'center';\n+        let member = this.props.details;\n+        let color = this.props.color;\n+        let idx = this.props.idx;\n+\n+        let submitApprove = this.onSubmitApprove.bind(this, true);\n+        let submitDeny = this.onSubmitApprove.bind(this, false);\n+        let clickApproveCancel = this.onClickApproveCancel.bind(this);\n+        let clickDenyCancel = this.onClickDenyCancel.bind(this);\n+\n+        return (\n+            <TrStyled key={this.state.name} data-testid='member-row'>\n+                <TDStyled color={color} align={left}>\n+                    {member.memberName}\n+                </TDStyled>\n+                <TDStyled color={color} align={left}>\n+                    {member.memberFullName}\n+                </TDStyled>\n+                <TDStyled color={color} align={left}>\n+                    {member.reviewReminder\n+                        ? this.localDate.getLocalDate(\n+                              member.reviewReminder,\n+                              'UTC',\n+                              'UTC'\n+                          )\n+                        : 'N/A'}\n+                </TDStyled>\n+                <TDStyled color={color} align={left}>\n+                    {member.reviewLastNotifiedTime\n+                        ? this.localDate.getLocalDate(\n+                              member.reviewLastNotifiedTime,\n+                              'UTC',\n+                              'UTC'\n+                          )\n+                        : 'N/A'}\n+                </TDStyled>\n+                <TDStyled color={color} align={center}>\n+                    <RadioButton\n+                        name={this.props.role + this.props.idx}\n+                        value='approve'\n+                        checked={false}\n+                        onChange={this.onApprove}\n+                    />\n+                </TDStyled>\n+                <TDStyled color={color} align={center}>\n+                    <RadioButton\n+                        name={this.props.role + this.props.idx}\n+                        value='deny'\n+                        checked={false}\n+                        onChange={this.onDeny}\n+                    />\n+                </TDStyled>\n+                {this.state.showApprove ? (\n+                    <UpdateModal\n+                        name={this.state.name}\n+                        isOpen={this.state.showApprove}\n+                        cancel={clickApproveCancel}\n+                        submit={submitApprove}\n+                        key={this.state.name + '-approve'}\n+                        showJustification={this.props.justificationRequired}\n+                        message={'Are you sure you want to approve the Member '}\n+                        onJustification={this.saveJustification}\n+                        errorMessage={this.state.errorMessage}\n+                    />\n+                ) : null}\n+                {this.state.showDeny ? (\n+                    <UpdateModal\n+                        name={this.state.name}\n+                        isOpen={this.state.showDeny}\n+                        cancel={clickDenyCancel}\n+                        submit={submitDeny}\n+                        key={this.state.name + '-deny'}\n+                        showJustification={this.props.justificationRequired}\n+                        message={\n+                            'Are you sure you want to deny the approval for Member '\n+                        }\n+                        onJustification={this.saveJustification}\n+                        errorMessage={this.state.errorMessage}\n+                    />\n+                ) : null}\n+                {this.state.showSuccess ? (\n+                    <Alert", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3766ec763cc3478316825b027636dfdf74208fe3"}, "originalPosition": 270}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "278408dcde3336666771cc48614e17012163d28b", "author": {"user": null}, "url": "https://github.com/AthenZ/athenz/commit/278408dcde3336666771cc48614e17012163d28b", "committedDate": "2020-10-20T18:29:09Z", "message": "Update"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "05a1b1827a8686ad637882872145be3054fd2d65", "author": {"user": null}, "url": "https://github.com/AthenZ/athenz/commit/05a1b1827a8686ad637882872145be3054fd2d65", "committedDate": "2020-10-20T19:20:32Z", "message": "Update"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e9cc96bdbc3e582f849deaf53774b38ca80d4853", "author": {"user": null}, "url": "https://github.com/AthenZ/athenz/commit/e9cc96bdbc3e582f849deaf53774b38ca80d4853", "committedDate": "2020-10-21T00:20:56Z", "message": "update"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "77b2f14a3a841231dc146d08656ae9e71222abb2", "author": {"user": {"login": "MartinTrojans", "name": "Martin"}}, "url": "https://github.com/AthenZ/athenz/commit/77b2f14a3a841231dc146d08656ae9e71222abb2", "committedDate": "2020-10-21T13:28:39Z", "message": "Merge pull request #2 from yahoo/master\n\nMerge from remote master"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "319681c324ec4956de79c0427f854e6fe2d65dcc", "author": {"user": null}, "url": "https://github.com/AthenZ/athenz/commit/319681c324ec4956de79c0427f854e6fe2d65dcc", "committedDate": "2020-10-21T13:30:32Z", "message": "Merge branch 'master' of github.com:MartinTrojans/athenz into ATHENS-5503"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9c1c18b837d6aeee4a024ba7af05d4fa87368c90", "author": {"user": null}, "url": "https://github.com/AthenZ/athenz/commit/9c1c18b837d6aeee4a024ba7af05d4fa87368c90", "committedDate": "2020-10-21T13:37:23Z", "message": "Fix review/setting/users pages and merge from master"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6806dabb58937e25498f110a24120753f07852a9", "author": {"user": null}, "url": "https://github.com/AthenZ/athenz/commit/6806dabb58937e25498f110a24120753f07852a9", "committedDate": "2020-10-21T20:06:55Z", "message": "update"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1799a711127c7d760a4e822825c23bcb0194305d", "author": {"user": null}, "url": "https://github.com/AthenZ/athenz/commit/1799a711127c7d760a4e822825c23bcb0194305d", "committedDate": "2020-10-22T02:49:35Z", "message": "update"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE0MzcwMDY3", "url": "https://github.com/AthenZ/athenz/pull/1127#pullrequestreview-514370067", "createdAt": "2020-10-22T05:29:22Z", "commit": {"oid": "1799a711127c7d760a4e822825c23bcb0194305d"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQwNToyOToyMlrOHmRIdg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQwNToyOTo0MVrOHmRI1g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTg4ODYzMA==", "bodyText": "why did we remove this change?", "url": "https://github.com/AthenZ/athenz/pull/1127#discussion_r509888630", "createdAt": "2020-10-22T05:29:22Z", "author": {"login": "pratikgote"}, "path": "ui/src/components/domain/ManageDomains.js", "diffHunk": "@@ -122,14 +114,6 @@ export default class ManageDomains extends React.Component {\n \n     onSubmitDelete() {\n         let domainName = this.state.deleteName;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1799a711127c7d760a4e822825c23bcb0194305d"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTg4ODcyNg==", "bodyText": "why did we remove this change?", "url": "https://github.com/AthenZ/athenz/pull/1127#discussion_r509888726", "createdAt": "2020-10-22T05:29:41Z", "author": {"login": "pratikgote"}, "path": "ui/src/components/flatpicker/FlatPicker.js", "diffHunk": "@@ -53,9 +53,6 @@ export default class FlatPicker extends React.Component {\n \n     onChange(selectedDates, dateStr, instance) {\n         this.onChangeDate = dateStr;\n-        if (dateStr === '') {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1799a711127c7d760a4e822825c23bcb0194305d"}, "originalPosition": 4}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3e7a7deb880f5e764016fdef6df81e517577d732", "author": {"user": null}, "url": "https://github.com/AthenZ/athenz/commit/3e7a7deb880f5e764016fdef6df81e517577d732", "committedDate": "2020-10-22T17:57:54Z", "message": "revert managedomains and flatpicker changes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE1MDE0MTMw", "url": "https://github.com/AthenZ/athenz/pull/1127#pullrequestreview-515014130", "createdAt": "2020-10-22T18:37:57Z", "commit": {"oid": "3e7a7deb880f5e764016fdef6df81e517577d732"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQxODozNzo1N1rOHmu66g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQxODozNzo1N1rOHmu66g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDM3NjY4Mg==", "bodyText": "any reason to remove this?", "url": "https://github.com/AthenZ/athenz/pull/1127#discussion_r510376682", "createdAt": "2020-10-22T18:37:57Z", "author": {"login": "pratikgote"}, "path": "ui/src/components/modal/DeleteModal.js", "diffHunk": "@@ -77,21 +77,6 @@ export default class DeleteModal extends React.Component {\n                         />\n                     </MessageDiv>\n                 )}\n-                {this.props.showDomainInput && (", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3e7a7deb880f5e764016fdef6df81e517577d732"}, "originalPosition": 22}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1d299c427bc627f4ae80679f3722b041e40724be", "author": {"user": null}, "url": "https://github.com/AthenZ/athenz/commit/1d299c427bc627f4ae80679f3722b041e40724be", "committedDate": "2020-10-22T19:18:47Z", "message": "revert delete modal change"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE1MDQ4MjAx", "url": "https://github.com/AthenZ/athenz/pull/1127#pullrequestreview-515048201", "createdAt": "2020-10-22T19:23:46Z", "commit": {"oid": "1d299c427bc627f4ae80679f3722b041e40724be"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6dff65ebbf9876bc473d9739a5449c0325dd7ec3", "author": {"user": null}, "url": "https://github.com/AthenZ/athenz/commit/6dff65ebbf9876bc473d9739a5449c0325dd7ec3", "committedDate": "2020-10-22T19:52:22Z", "message": "Fix role policy api"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "30ee42feb9877dc1837fa3c6de01254fd0812e8a", "author": {"user": null}, "url": "https://github.com/AthenZ/athenz/commit/30ee42feb9877dc1837fa3c6de01254fd0812e8a", "committedDate": "2020-10-22T21:22:32Z", "message": "Fix role history tooltip"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE1MTQ1Nzc5", "url": "https://github.com/AthenZ/athenz/pull/1127#pullrequestreview-515145779", "createdAt": "2020-10-22T21:50:48Z", "commit": {"oid": "30ee42feb9877dc1837fa3c6de01254fd0812e8a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2910, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}