{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQ0OTY2Njg5", "number": 1223, "title": "Group support UI", "bodyText": "I confirm that this contribution is made under the terms of the license found in the root directory of this repository's source tree and that I have the authority necessary to make this contribution on behalf of its copyright owner.", "createdAt": "2020-12-23T18:09:05Z", "url": "https://github.com/AthenZ/athenz/pull/1223", "merged": true, "mergeCommit": {"oid": "6446fb633474257a931d34bd7aa143e5d84a806b"}, "closed": true, "closedAt": "2021-01-04T21:02:29Z", "author": {"login": "chandrasekhar1996"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdrTKH9AH2gAyNTQ0OTY2Njg5OjE5MTQzN2M3ZThlMDk3OWQxYTZhMGM2YjBlYmRjNjFkNmRiZWI4MDg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABds8jbLAFqTU2MTMzMDYxMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "191437c7e8e0979d1a6a0c6b0ebdc61d6dbeb808", "author": {"user": null}, "url": "https://github.com/AthenZ/athenz/commit/191437c7e8e0979d1a6a0c6b0ebdc61d6dbeb808", "committedDate": "2020-12-30T17:55:14Z", "message": "initial commit\n\nupdate client api\n\ninit commit 3\n\ncorrect snapshots and tests\n\nPR changes\n\nadd group review\n\nfix lint\n\nupdate snapshot\n\nupdate tests\n\nupdate tests\n\nupdate snapshots\n\nadd cache provider to pages\n\nimport cacheprovider"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9c4793fe1995bdb540be28d75509643c34bb57b6", "author": {"user": null}, "url": "https://github.com/AthenZ/athenz/commit/9c4793fe1995bdb540be28d75509643c34bb57b6", "committedDate": "2020-12-24T01:35:58Z", "message": "fix lint"}, "afterCommit": {"oid": "191437c7e8e0979d1a6a0c6b0ebdc61d6dbeb808", "author": {"user": null}, "url": "https://github.com/AthenZ/athenz/commit/191437c7e8e0979d1a6a0c6b0ebdc61d6dbeb808", "committedDate": "2020-12-30T17:55:14Z", "message": "initial commit\n\nupdate client api\n\ninit commit 3\n\ncorrect snapshots and tests\n\nPR changes\n\nadd group review\n\nfix lint\n\nupdate snapshot\n\nupdate tests\n\nupdate tests\n\nupdate snapshots\n\nadd cache provider to pages\n\nimport cacheprovider"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "81b2168f01e97280ac432ed2252208a70ead1f72", "author": {"user": null}, "url": "https://github.com/AthenZ/athenz/commit/81b2168f01e97280ac432ed2252208a70ead1f72", "committedDate": "2020-12-30T18:11:45Z", "message": "fix lint"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3cda93059b02296d598d85b1a78ca96c95270f91", "author": {"user": null}, "url": "https://github.com/AthenZ/athenz/commit/3cda93059b02296d598d85b1a78ca96c95270f91", "committedDate": "2020-12-30T19:22:11Z", "message": "update snapshots"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYxMjk4NDAw", "url": "https://github.com/AthenZ/athenz/pull/1223#pullrequestreview-561298400", "createdAt": "2021-01-04T19:51:08Z", "commit": {"oid": "3cda93059b02296d598d85b1a78ca96c95270f91"}, "state": "APPROVED", "comments": {"totalCount": 15, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNFQxOTo1MTowOVrOIN-3Aw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNFQyMDowNTozMlrOIN_SuA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTUzMjI5MQ==", "bodyText": "can we move this code to NameUtils?", "url": "https://github.com/AthenZ/athenz/pull/1223#discussion_r551532291", "createdAt": "2021-01-04T19:51:09Z", "author": {"login": "pratikgote"}, "path": "ui/src/components/group/AddGroup.js", "diffHunk": "@@ -0,0 +1,322 @@\n+/*\n+ * Copyright 2020 Verizon Media\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+import React from 'react';\n+import Button from '../denali/Button';\n+import Input from '../denali/Input';\n+import InputLabel from '../denali/InputLabel';\n+import Member from '../member/Member';\n+import styled from '@emotion/styled';\n+import { colors } from '../denali/styles';\n+import AddModal from '../modal/AddModal';\n+import DateUtils from '../utils/DateUtils';\n+import RequestUtils from '../utils/RequestUtils';\n+\n+const SectionDiv = styled.div`\n+    align-items: flex-start;\n+    display: flex;\n+    flex-flow: row nowrap;\n+    padding: 10px 10px;\n+`;\n+\n+const StyledInputLabel = styled(InputLabel)`\n+    float: left;\n+    font-size: 14px;\n+    font-weight: 700;\n+    padding-top: 12px;\n+    width: 17%;\n+`;\n+\n+const StyledInput = styled(Input)`\n+    width: 500px;\n+`;\n+\n+const StyledInputUser = styled(Input)`\n+    margin-top: 5px;\n+`;\n+\n+const ContentDiv = styled.div`\n+    flex: 1 1;\n+    margin-right: 10px;\n+`;\n+\n+const AddMemberDiv = styled.div`\n+    display: flex;\n+`;\n+\n+const StyledIncludedMembersDiv = styled.div`\n+    width: 65%;\n+`;\n+\n+const SectionsDiv = styled.div`\n+    width: 780px;\n+    text-align: left;\n+    background-color: ${colors.white};\n+`;\n+\n+const ButtonDiv = styled.div`\n+    margin-left: 10px;\n+`;\n+\n+const StyledButton = styled(Button)`\n+    width: 125px;\n+`;\n+\n+export default class AddGroup extends React.Component {\n+    constructor(props) {\n+        super(props);\n+        this.api = props.api;\n+        this.addMember = this.addMember.bind(this);\n+        this.onSubmit = this.onSubmit.bind(this);\n+        this.dateUtils = new DateUtils();\n+        this.state = {\n+            saving: 'nope',\n+            name: '',\n+            newMemberName: '',\n+            members: [],\n+            justification: '',\n+        };\n+    }\n+\n+    inputChanged(key, evt) {\n+        let value = '';\n+        if (evt.target) {\n+            value = evt.target.value;\n+        } else {\n+            value = evt ? evt : '';\n+        }\n+        this.setState({ [key]: value });\n+    }\n+\n+    getJustification() {\n+        if (this.props.justificationRequired) {\n+            return (\n+                <SectionDiv>\n+                    <StyledInputLabel>Justification</StyledInputLabel>\n+                    <ContentDiv>\n+                        <StyledInput\n+                            id='justification'\n+                            name='justification'\n+                            value={this.state.justification}\n+                            onChange={this.inputChanged.bind(\n+                                this,\n+                                'justification'\n+                            )}\n+                            autoComplete={'off'}\n+                            placeholder='Enter justification here'\n+                        />\n+                    </ContentDiv>\n+                </SectionDiv>\n+            );\n+        }\n+    }\n+\n+    addMember() {\n+        let name = this.state.newMemberName;\n+        let members = this.state.members;\n+\n+        if (!name) {\n+            return;\n+        }\n+        let names = (name || '')", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3cda93059b02296d598d85b1a78ca96c95270f91"}, "originalPosition": 133}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTUzMjc0MA==", "bodyText": "can we move this code to NameUtils?", "url": "https://github.com/AthenZ/athenz/pull/1223#discussion_r551532740", "createdAt": "2021-01-04T19:52:02Z", "author": {"login": "pratikgote"}, "path": "ui/src/components/group/AddGroup.js", "diffHunk": "@@ -0,0 +1,322 @@\n+/*\n+ * Copyright 2020 Verizon Media\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+import React from 'react';\n+import Button from '../denali/Button';\n+import Input from '../denali/Input';\n+import InputLabel from '../denali/InputLabel';\n+import Member from '../member/Member';\n+import styled from '@emotion/styled';\n+import { colors } from '../denali/styles';\n+import AddModal from '../modal/AddModal';\n+import DateUtils from '../utils/DateUtils';\n+import RequestUtils from '../utils/RequestUtils';\n+\n+const SectionDiv = styled.div`\n+    align-items: flex-start;\n+    display: flex;\n+    flex-flow: row nowrap;\n+    padding: 10px 10px;\n+`;\n+\n+const StyledInputLabel = styled(InputLabel)`\n+    float: left;\n+    font-size: 14px;\n+    font-weight: 700;\n+    padding-top: 12px;\n+    width: 17%;\n+`;\n+\n+const StyledInput = styled(Input)`\n+    width: 500px;\n+`;\n+\n+const StyledInputUser = styled(Input)`\n+    margin-top: 5px;\n+`;\n+\n+const ContentDiv = styled.div`\n+    flex: 1 1;\n+    margin-right: 10px;\n+`;\n+\n+const AddMemberDiv = styled.div`\n+    display: flex;\n+`;\n+\n+const StyledIncludedMembersDiv = styled.div`\n+    width: 65%;\n+`;\n+\n+const SectionsDiv = styled.div`\n+    width: 780px;\n+    text-align: left;\n+    background-color: ${colors.white};\n+`;\n+\n+const ButtonDiv = styled.div`\n+    margin-left: 10px;\n+`;\n+\n+const StyledButton = styled(Button)`\n+    width: 125px;\n+`;\n+\n+export default class AddGroup extends React.Component {\n+    constructor(props) {\n+        super(props);\n+        this.api = props.api;\n+        this.addMember = this.addMember.bind(this);\n+        this.onSubmit = this.onSubmit.bind(this);\n+        this.dateUtils = new DateUtils();\n+        this.state = {\n+            saving: 'nope',\n+            name: '',\n+            newMemberName: '',\n+            members: [],\n+            justification: '',\n+        };\n+    }\n+\n+    inputChanged(key, evt) {\n+        let value = '';\n+        if (evt.target) {\n+            value = evt.target.value;\n+        } else {\n+            value = evt ? evt : '';\n+        }\n+        this.setState({ [key]: value });\n+    }\n+\n+    getJustification() {\n+        if (this.props.justificationRequired) {\n+            return (\n+                <SectionDiv>\n+                    <StyledInputLabel>Justification</StyledInputLabel>\n+                    <ContentDiv>\n+                        <StyledInput\n+                            id='justification'\n+                            name='justification'\n+                            value={this.state.justification}\n+                            onChange={this.inputChanged.bind(\n+                                this,\n+                                'justification'\n+                            )}\n+                            autoComplete={'off'}\n+                            placeholder='Enter justification here'\n+                        />\n+                    </ContentDiv>\n+                </SectionDiv>\n+            );\n+        }\n+    }\n+\n+    addMember() {\n+        let name = this.state.newMemberName;\n+        let members = this.state.members;\n+\n+        if (!name) {\n+            return;\n+        }\n+        let names = (name || '')\n+            .replace(/[\\r\\n\\s]+/g, ',')\n+            .split(',')\n+            .map((n) => n.trim())\n+            .filter((n) => n);\n+\n+        for (let i = 0; i < names.length; i++) {\n+            members.push({\n+                memberName: names[i],\n+            });\n+        }\n+\n+        this.setState({\n+            members,\n+            newMemberName: '',\n+        });\n+    }\n+\n+    deleteMember(idx) {\n+        let members = this.state.members;\n+        // this if is done to avoid [null] condition\n+        if (members.length === 1) {\n+            members = null;\n+        } else {\n+            delete members[idx];\n+        }\n+        this.setState({ members });\n+    }\n+\n+    onSubmit() {\n+        let groupName = this.state.name;\n+        if (!groupName || groupName === '') {\n+            this.setState({\n+                errorMessage: 'Group name is required.',\n+            });\n+            return;\n+        }\n+\n+        let group = { name: groupName };\n+        group.groupMembers =\n+            this.state.members.filter((member) => {\n+                return member != null || member != undefined;\n+            }) || [];\n+        if (this.state.newMemberName && this.state.newMemberName !== '') {\n+            let names = (this.state.newMemberName || '')", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3cda93059b02296d598d85b1a78ca96c95270f91"}, "originalPosition": 177}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTUzMzUwMA==", "bodyText": "this can be changed to\nnames.forEach((name) => {\ngroup.groupMembers.push({\nmemberName: name,\n});});", "url": "https://github.com/AthenZ/athenz/pull/1223#discussion_r551533500", "createdAt": "2021-01-04T19:53:39Z", "author": {"login": "pratikgote"}, "path": "ui/src/components/group/AddGroup.js", "diffHunk": "@@ -0,0 +1,322 @@\n+/*\n+ * Copyright 2020 Verizon Media\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+import React from 'react';\n+import Button from '../denali/Button';\n+import Input from '../denali/Input';\n+import InputLabel from '../denali/InputLabel';\n+import Member from '../member/Member';\n+import styled from '@emotion/styled';\n+import { colors } from '../denali/styles';\n+import AddModal from '../modal/AddModal';\n+import DateUtils from '../utils/DateUtils';\n+import RequestUtils from '../utils/RequestUtils';\n+\n+const SectionDiv = styled.div`\n+    align-items: flex-start;\n+    display: flex;\n+    flex-flow: row nowrap;\n+    padding: 10px 10px;\n+`;\n+\n+const StyledInputLabel = styled(InputLabel)`\n+    float: left;\n+    font-size: 14px;\n+    font-weight: 700;\n+    padding-top: 12px;\n+    width: 17%;\n+`;\n+\n+const StyledInput = styled(Input)`\n+    width: 500px;\n+`;\n+\n+const StyledInputUser = styled(Input)`\n+    margin-top: 5px;\n+`;\n+\n+const ContentDiv = styled.div`\n+    flex: 1 1;\n+    margin-right: 10px;\n+`;\n+\n+const AddMemberDiv = styled.div`\n+    display: flex;\n+`;\n+\n+const StyledIncludedMembersDiv = styled.div`\n+    width: 65%;\n+`;\n+\n+const SectionsDiv = styled.div`\n+    width: 780px;\n+    text-align: left;\n+    background-color: ${colors.white};\n+`;\n+\n+const ButtonDiv = styled.div`\n+    margin-left: 10px;\n+`;\n+\n+const StyledButton = styled(Button)`\n+    width: 125px;\n+`;\n+\n+export default class AddGroup extends React.Component {\n+    constructor(props) {\n+        super(props);\n+        this.api = props.api;\n+        this.addMember = this.addMember.bind(this);\n+        this.onSubmit = this.onSubmit.bind(this);\n+        this.dateUtils = new DateUtils();\n+        this.state = {\n+            saving: 'nope',\n+            name: '',\n+            newMemberName: '',\n+            members: [],\n+            justification: '',\n+        };\n+    }\n+\n+    inputChanged(key, evt) {\n+        let value = '';\n+        if (evt.target) {\n+            value = evt.target.value;\n+        } else {\n+            value = evt ? evt : '';\n+        }\n+        this.setState({ [key]: value });\n+    }\n+\n+    getJustification() {\n+        if (this.props.justificationRequired) {\n+            return (\n+                <SectionDiv>\n+                    <StyledInputLabel>Justification</StyledInputLabel>\n+                    <ContentDiv>\n+                        <StyledInput\n+                            id='justification'\n+                            name='justification'\n+                            value={this.state.justification}\n+                            onChange={this.inputChanged.bind(\n+                                this,\n+                                'justification'\n+                            )}\n+                            autoComplete={'off'}\n+                            placeholder='Enter justification here'\n+                        />\n+                    </ContentDiv>\n+                </SectionDiv>\n+            );\n+        }\n+    }\n+\n+    addMember() {\n+        let name = this.state.newMemberName;\n+        let members = this.state.members;\n+\n+        if (!name) {\n+            return;\n+        }\n+        let names = (name || '')\n+            .replace(/[\\r\\n\\s]+/g, ',')\n+            .split(',')\n+            .map((n) => n.trim())\n+            .filter((n) => n);\n+\n+        for (let i = 0; i < names.length; i++) {\n+            members.push({\n+                memberName: names[i],\n+            });\n+        }\n+\n+        this.setState({\n+            members,\n+            newMemberName: '',\n+        });\n+    }\n+\n+    deleteMember(idx) {\n+        let members = this.state.members;\n+        // this if is done to avoid [null] condition\n+        if (members.length === 1) {\n+            members = null;\n+        } else {\n+            delete members[idx];\n+        }\n+        this.setState({ members });\n+    }\n+\n+    onSubmit() {\n+        let groupName = this.state.name;\n+        if (!groupName || groupName === '') {\n+            this.setState({\n+                errorMessage: 'Group name is required.',\n+            });\n+            return;\n+        }\n+\n+        let group = { name: groupName };\n+        group.groupMembers =\n+            this.state.members.filter((member) => {\n+                return member != null || member != undefined;\n+            }) || [];\n+        if (this.state.newMemberName && this.state.newMemberName !== '') {\n+            let names = (this.state.newMemberName || '')\n+                .replace(/[\\r\\n\\s]+/g, ',')\n+                .split(',')\n+                .map((n) => n.trim())\n+                .filter((n) => n);\n+\n+            for (let i = 0; i < names.length; i++) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3cda93059b02296d598d85b1a78ca96c95270f91"}, "originalPosition": 183}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTUzNDAyOA==", "bodyText": "let's move the bind functions to the constructor", "url": "https://github.com/AthenZ/athenz/pull/1223#discussion_r551534028", "createdAt": "2021-01-04T19:54:39Z", "author": {"login": "pratikgote"}, "path": "ui/src/components/group/AddGroup.js", "diffHunk": "@@ -0,0 +1,322 @@\n+/*\n+ * Copyright 2020 Verizon Media\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+import React from 'react';\n+import Button from '../denali/Button';\n+import Input from '../denali/Input';\n+import InputLabel from '../denali/InputLabel';\n+import Member from '../member/Member';\n+import styled from '@emotion/styled';\n+import { colors } from '../denali/styles';\n+import AddModal from '../modal/AddModal';\n+import DateUtils from '../utils/DateUtils';\n+import RequestUtils from '../utils/RequestUtils';\n+\n+const SectionDiv = styled.div`\n+    align-items: flex-start;\n+    display: flex;\n+    flex-flow: row nowrap;\n+    padding: 10px 10px;\n+`;\n+\n+const StyledInputLabel = styled(InputLabel)`\n+    float: left;\n+    font-size: 14px;\n+    font-weight: 700;\n+    padding-top: 12px;\n+    width: 17%;\n+`;\n+\n+const StyledInput = styled(Input)`\n+    width: 500px;\n+`;\n+\n+const StyledInputUser = styled(Input)`\n+    margin-top: 5px;\n+`;\n+\n+const ContentDiv = styled.div`\n+    flex: 1 1;\n+    margin-right: 10px;\n+`;\n+\n+const AddMemberDiv = styled.div`\n+    display: flex;\n+`;\n+\n+const StyledIncludedMembersDiv = styled.div`\n+    width: 65%;\n+`;\n+\n+const SectionsDiv = styled.div`\n+    width: 780px;\n+    text-align: left;\n+    background-color: ${colors.white};\n+`;\n+\n+const ButtonDiv = styled.div`\n+    margin-left: 10px;\n+`;\n+\n+const StyledButton = styled(Button)`\n+    width: 125px;\n+`;\n+\n+export default class AddGroup extends React.Component {\n+    constructor(props) {\n+        super(props);\n+        this.api = props.api;\n+        this.addMember = this.addMember.bind(this);\n+        this.onSubmit = this.onSubmit.bind(this);\n+        this.dateUtils = new DateUtils();\n+        this.state = {\n+            saving: 'nope',\n+            name: '',\n+            newMemberName: '',\n+            members: [],\n+            justification: '',\n+        };\n+    }\n+\n+    inputChanged(key, evt) {\n+        let value = '';\n+        if (evt.target) {\n+            value = evt.target.value;\n+        } else {\n+            value = evt ? evt : '';\n+        }\n+        this.setState({ [key]: value });\n+    }\n+\n+    getJustification() {\n+        if (this.props.justificationRequired) {\n+            return (\n+                <SectionDiv>\n+                    <StyledInputLabel>Justification</StyledInputLabel>\n+                    <ContentDiv>\n+                        <StyledInput\n+                            id='justification'\n+                            name='justification'\n+                            value={this.state.justification}\n+                            onChange={this.inputChanged.bind(\n+                                this,\n+                                'justification'\n+                            )}\n+                            autoComplete={'off'}\n+                            placeholder='Enter justification here'\n+                        />\n+                    </ContentDiv>\n+                </SectionDiv>\n+            );\n+        }\n+    }\n+\n+    addMember() {\n+        let name = this.state.newMemberName;\n+        let members = this.state.members;\n+\n+        if (!name) {\n+            return;\n+        }\n+        let names = (name || '')\n+            .replace(/[\\r\\n\\s]+/g, ',')\n+            .split(',')\n+            .map((n) => n.trim())\n+            .filter((n) => n);\n+\n+        for (let i = 0; i < names.length; i++) {\n+            members.push({\n+                memberName: names[i],\n+            });\n+        }\n+\n+        this.setState({\n+            members,\n+            newMemberName: '',\n+        });\n+    }\n+\n+    deleteMember(idx) {\n+        let members = this.state.members;\n+        // this if is done to avoid [null] condition\n+        if (members.length === 1) {\n+            members = null;\n+        } else {\n+            delete members[idx];\n+        }\n+        this.setState({ members });\n+    }\n+\n+    onSubmit() {\n+        let groupName = this.state.name;\n+        if (!groupName || groupName === '') {\n+            this.setState({\n+                errorMessage: 'Group name is required.',\n+            });\n+            return;\n+        }\n+\n+        let group = { name: groupName };\n+        group.groupMembers =\n+            this.state.members.filter((member) => {\n+                return member != null || member != undefined;\n+            }) || [];\n+        if (this.state.newMemberName && this.state.newMemberName !== '') {\n+            let names = (this.state.newMemberName || '')\n+                .replace(/[\\r\\n\\s]+/g, ',')\n+                .split(',')\n+                .map((n) => n.trim())\n+                .filter((n) => n);\n+\n+            for (let i = 0; i < names.length; i++) {\n+                group.groupMembers.push({\n+                    memberName: names[i],\n+                });\n+            }\n+        }\n+\n+        if (\n+            this.props.justificationRequired &&\n+            (this.state.justification === undefined ||\n+                this.state.justification.trim() === '')\n+        ) {\n+            this.setState({\n+                errorMessage: 'Justification is required to add a group.',\n+            });\n+            return;\n+        }\n+\n+        this.api\n+            .getGroups(this.props.domain)\n+            .then((groups) => {\n+                if (groups.includes(groupName)) {\n+                    this.setState({\n+                        errorMessage: 'Group already exists.',\n+                    });\n+                    return;\n+                }\n+                let auditRef = this.state.justification\n+                    ? this.state.justification\n+                    : ''; // no UX for this\n+                this.api\n+                    .addGroup(\n+                        this.props.domain,\n+                        groupName,\n+                        group,\n+                        auditRef,\n+                        this.props._csrf\n+                    )\n+                    .then(() => {\n+                        this.props.onSubmit(\n+                            `Successfully created group ${groupName}`\n+                        );\n+                    })\n+                    .catch((err) => {\n+                        let message = '';\n+                        if (err.statusCode === 0) {\n+                            message = 'Okta expired. Please refresh the page';\n+                        } else {\n+                            message = `Status: ${err.statusCode}. Message: ${err.body.message}`;\n+                        }\n+                        this.setState({\n+                            errorMessage: message,\n+                        });\n+                    });\n+            })\n+            .catch((err) => {\n+                this.setState({\n+                    errorMessage: RequestUtils.xhrErrorCheckHelper(err),\n+                });\n+            });\n+    }\n+\n+    render() {\n+        let memberNameChanged = this.inputChanged.bind(this, 'newMemberName');", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3cda93059b02296d598d85b1a78ca96c95270f91"}, "originalPosition": 246}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTUzNDI0Mw==", "bodyText": "let's move the bind functions to the constructor", "url": "https://github.com/AthenZ/athenz/pull/1223#discussion_r551534243", "createdAt": "2021-01-04T19:55:04Z", "author": {"login": "pratikgote"}, "path": "ui/src/components/group/AddGroup.js", "diffHunk": "@@ -0,0 +1,322 @@\n+/*\n+ * Copyright 2020 Verizon Media\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+import React from 'react';\n+import Button from '../denali/Button';\n+import Input from '../denali/Input';\n+import InputLabel from '../denali/InputLabel';\n+import Member from '../member/Member';\n+import styled from '@emotion/styled';\n+import { colors } from '../denali/styles';\n+import AddModal from '../modal/AddModal';\n+import DateUtils from '../utils/DateUtils';\n+import RequestUtils from '../utils/RequestUtils';\n+\n+const SectionDiv = styled.div`\n+    align-items: flex-start;\n+    display: flex;\n+    flex-flow: row nowrap;\n+    padding: 10px 10px;\n+`;\n+\n+const StyledInputLabel = styled(InputLabel)`\n+    float: left;\n+    font-size: 14px;\n+    font-weight: 700;\n+    padding-top: 12px;\n+    width: 17%;\n+`;\n+\n+const StyledInput = styled(Input)`\n+    width: 500px;\n+`;\n+\n+const StyledInputUser = styled(Input)`\n+    margin-top: 5px;\n+`;\n+\n+const ContentDiv = styled.div`\n+    flex: 1 1;\n+    margin-right: 10px;\n+`;\n+\n+const AddMemberDiv = styled.div`\n+    display: flex;\n+`;\n+\n+const StyledIncludedMembersDiv = styled.div`\n+    width: 65%;\n+`;\n+\n+const SectionsDiv = styled.div`\n+    width: 780px;\n+    text-align: left;\n+    background-color: ${colors.white};\n+`;\n+\n+const ButtonDiv = styled.div`\n+    margin-left: 10px;\n+`;\n+\n+const StyledButton = styled(Button)`\n+    width: 125px;\n+`;\n+\n+export default class AddGroup extends React.Component {\n+    constructor(props) {\n+        super(props);\n+        this.api = props.api;\n+        this.addMember = this.addMember.bind(this);\n+        this.onSubmit = this.onSubmit.bind(this);\n+        this.dateUtils = new DateUtils();\n+        this.state = {\n+            saving: 'nope',\n+            name: '',\n+            newMemberName: '',\n+            members: [],\n+            justification: '',\n+        };\n+    }\n+\n+    inputChanged(key, evt) {\n+        let value = '';\n+        if (evt.target) {\n+            value = evt.target.value;\n+        } else {\n+            value = evt ? evt : '';\n+        }\n+        this.setState({ [key]: value });\n+    }\n+\n+    getJustification() {\n+        if (this.props.justificationRequired) {\n+            return (\n+                <SectionDiv>\n+                    <StyledInputLabel>Justification</StyledInputLabel>\n+                    <ContentDiv>\n+                        <StyledInput\n+                            id='justification'\n+                            name='justification'\n+                            value={this.state.justification}\n+                            onChange={this.inputChanged.bind(\n+                                this,\n+                                'justification'\n+                            )}\n+                            autoComplete={'off'}\n+                            placeholder='Enter justification here'\n+                        />\n+                    </ContentDiv>\n+                </SectionDiv>\n+            );\n+        }\n+    }\n+\n+    addMember() {\n+        let name = this.state.newMemberName;\n+        let members = this.state.members;\n+\n+        if (!name) {\n+            return;\n+        }\n+        let names = (name || '')\n+            .replace(/[\\r\\n\\s]+/g, ',')\n+            .split(',')\n+            .map((n) => n.trim())\n+            .filter((n) => n);\n+\n+        for (let i = 0; i < names.length; i++) {\n+            members.push({\n+                memberName: names[i],\n+            });\n+        }\n+\n+        this.setState({\n+            members,\n+            newMemberName: '',\n+        });\n+    }\n+\n+    deleteMember(idx) {\n+        let members = this.state.members;\n+        // this if is done to avoid [null] condition\n+        if (members.length === 1) {\n+            members = null;\n+        } else {\n+            delete members[idx];\n+        }\n+        this.setState({ members });\n+    }\n+\n+    onSubmit() {\n+        let groupName = this.state.name;\n+        if (!groupName || groupName === '') {\n+            this.setState({\n+                errorMessage: 'Group name is required.',\n+            });\n+            return;\n+        }\n+\n+        let group = { name: groupName };\n+        group.groupMembers =\n+            this.state.members.filter((member) => {\n+                return member != null || member != undefined;\n+            }) || [];\n+        if (this.state.newMemberName && this.state.newMemberName !== '') {\n+            let names = (this.state.newMemberName || '')\n+                .replace(/[\\r\\n\\s]+/g, ',')\n+                .split(',')\n+                .map((n) => n.trim())\n+                .filter((n) => n);\n+\n+            for (let i = 0; i < names.length; i++) {\n+                group.groupMembers.push({\n+                    memberName: names[i],\n+                });\n+            }\n+        }\n+\n+        if (\n+            this.props.justificationRequired &&\n+            (this.state.justification === undefined ||\n+                this.state.justification.trim() === '')\n+        ) {\n+            this.setState({\n+                errorMessage: 'Justification is required to add a group.',\n+            });\n+            return;\n+        }\n+\n+        this.api\n+            .getGroups(this.props.domain)\n+            .then((groups) => {\n+                if (groups.includes(groupName)) {\n+                    this.setState({\n+                        errorMessage: 'Group already exists.',\n+                    });\n+                    return;\n+                }\n+                let auditRef = this.state.justification\n+                    ? this.state.justification\n+                    : ''; // no UX for this\n+                this.api\n+                    .addGroup(\n+                        this.props.domain,\n+                        groupName,\n+                        group,\n+                        auditRef,\n+                        this.props._csrf\n+                    )\n+                    .then(() => {\n+                        this.props.onSubmit(\n+                            `Successfully created group ${groupName}`\n+                        );\n+                    })\n+                    .catch((err) => {\n+                        let message = '';\n+                        if (err.statusCode === 0) {\n+                            message = 'Okta expired. Please refresh the page';\n+                        } else {\n+                            message = `Status: ${err.statusCode}. Message: ${err.body.message}`;\n+                        }\n+                        this.setState({\n+                            errorMessage: message,\n+                        });\n+                    });\n+            })\n+            .catch((err) => {\n+                this.setState({\n+                    errorMessage: RequestUtils.xhrErrorCheckHelper(err),\n+                });\n+            });\n+    }\n+\n+    render() {\n+        let memberNameChanged = this.inputChanged.bind(this, 'newMemberName');\n+\n+        let nameChanged = this.inputChanged.bind(this, 'name');", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3cda93059b02296d598d85b1a78ca96c95270f91"}, "originalPosition": 248}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTUzNTYyOQ==", "bodyText": "let's use colors from consts file", "url": "https://github.com/AthenZ/athenz/pull/1223#discussion_r551535629", "createdAt": "2021-01-04T19:57:49Z", "author": {"login": "pratikgote"}, "path": "ui/src/components/group/GroupReviewTable.js", "diffHunk": "@@ -0,0 +1,308 @@\n+/*\n+ * Copyright 2020 Verizon Media\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+import React from 'react';\n+import styled from '@emotion/styled';\n+import ReviewRow from '../review/ReviewRow';\n+import Button from '../denali/Button';\n+import Color from '../denali/Color';\n+import InputLabel from '../denali/InputLabel';\n+import Input from '../denali/Input';\n+import RequestUtils from '../utils/RequestUtils';\n+\n+const TitleDiv = styled.div`\n+    font-size: 16px;\n+    font-weight: 600;\n+`;\n+\n+const ReviewMembersContainerDiv = styled.div`\n+    margin: 0;\n+`;\n+\n+const ReviewMembersSectionDiv = styled.div`\n+    margin: 20px;\n+`;\n+\n+const ReviewMembersTable = styled.table`\n+    width: 100%;\n+    border-spacing: 0 15px;\n+    display: table;\n+    border-collapse: separate;\n+    border-color: grey;\n+    table-layout: fixed;\n+`;\n+\n+const TableHeadStyled = styled.th`\n+    text-align: ${(props) => props.align};\n+    border-bottom: 2px solid #d5d5d5;\n+    color: #9a9a9a;\n+    font-weight: 600;\n+    font-size: 0.8rem;\n+    padding-bottom: 5px;\n+    vertical-align: top;\n+    text-transform: uppercase;\n+    padding: 5px 0 5px 15px;\n+    word-break: break-all;\n+`;\n+\n+const SubmitDiv = styled.div`\n+    margin-top: 10px;\n+`;\n+\n+const SubmitTextSpan = styled.span`\n+    color: #9a9a9a;\n+`;\n+\n+const ContentDiv = styled.div`\n+    flex: 1 1;\n+    margin-right: 10px;\n+`;\n+\n+const StyledJustification = styled(Input)`\n+    width: 300px;\n+    margin-top: 5px;\n+`;\n+\n+export default class GroupReviewTable extends React.Component {\n+    constructor(props) {\n+        super(props);\n+        this.api = this.props.api;\n+        this.submitReview = this.submitReview.bind(this);\n+        this.onUpdate = this.onUpdate.bind(this);\n+        this.state = {\n+            groupObj: props.groupDetails,\n+            list: props.members || [],\n+            submittedReview: false,\n+            deletedMembers: new Set(),\n+        };\n+    }\n+\n+    loadGroup() {\n+        this.props.api\n+            .getGroup(this.props.domain, this.props.group)\n+            .then((group) => {\n+                let members =\n+                    group.groupMembers &&\n+                    group.groupMembers.map((m) => m.memberName);\n+                this.setState({\n+                    groupObj: group,\n+                    list: group.groupMembers || [],\n+                    deletedMembers: new Set(),\n+                    submittedReview: false,\n+                });\n+            })\n+            .catch((err) => {\n+                this.setState({\n+                    errorMessage: RequestUtils.xhrErrorCheckHelper(err),\n+                });\n+            });\n+    }\n+\n+    inputChanged(key, evt) {\n+        this.setState({ [key]: evt.target.value });\n+    }\n+\n+    submitReview() {\n+        if (\n+            this.state.groupObj.groupMembers &&\n+            this.state.groupObj.groupMembers.length > 0\n+        ) {\n+            if (\n+                this.state.justification === undefined ||\n+                this.state.justification.trim() === ''\n+            ) {\n+                this.setState({\n+                    errorMessage:\n+                        'Justification is required to submit the review.',\n+                });\n+                return;\n+            }\n+\n+            //construct role object from state\n+            let group = {\n+                name: this.props.group,\n+            };\n+            group.groupMembers = this.state.groupObj.groupMembers;\n+            group.groupMembers.forEach((m) => {\n+                if (this.state.deletedMembers.has(m.memberName)) {\n+                    m.active = false;\n+                }\n+                m.expiration = null;\n+                delete m.memberFullName; // memberFullName is not a valid property on the server\n+            });\n+            group.groupMembers = group.groupMembers.filter((m) => {\n+                if (this.state.deletedMembers.has(m.memberName)) {\n+                    return m;\n+                }\n+            });\n+            this.props.api\n+                .reviewGroup(\n+                    this.props.domain,\n+                    this.props.group,\n+                    group,\n+                    this.state.justification,\n+                    this.props._csrf\n+                )\n+                .then(() => {\n+                    this.setState({\n+                        submittedReview: true,\n+                        errorMessage: null,\n+                    });\n+                    this.props.onUpdateSuccess(\n+                        `Successfully submitted the review for group ${this.props.group}`\n+                    );\n+                    this.loadGroup();\n+                })\n+                .catch((err) => {\n+                    this.setState({\n+                        errorMessage: RequestUtils.xhrErrorCheckHelper(err),\n+                    });\n+                });\n+        } else {\n+            this.props.onUpdateSuccess('There is nothing to review.');\n+        }\n+    }\n+\n+    onUpdate(key, value) {\n+        switch (key) {\n+            case 'delete':\n+                this.state.deletedMembers.add(value);\n+                break;\n+            case 'no-action':\n+                this.state.deletedMembers.delete(value);\n+                break;\n+        }\n+    }\n+\n+    render() {\n+        const left = 'left';\n+        let center = 'center';\n+        const rows =\n+            this.state.list && this.state.list.length > 0\n+                ? this.state.list\n+                      .sort((a, b) => {\n+                          return a.memberName.localeCompare(b.memberName);\n+                      })\n+                      .map((item, i) => {\n+                          let color = 'white';\n+                          return (\n+                              <ReviewRow\n+                                  category={'group'}\n+                                  key={'group-review-' + i}\n+                                  idx={'group-review-' + i}\n+                                  details={item}\n+                                  collection={this.props.group}\n+                                  color={color}\n+                                  onUpdate={this.onUpdate}\n+                                  submittedReview={this.state.submittedReview}\n+                              />\n+                          );\n+                      })\n+                : [];\n+\n+        if (this.state.showTrustError) {\n+            return (\n+                <ReviewMembersContainerDiv>\n+                    <ContentDiv>\n+                        {this.state.errorMessage && (\n+                            <Color name={'red600'}>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3cda93059b02296d598d85b1a78ca96c95270f91"}, "originalPosition": 220}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTUzNjIzOQ==", "bodyText": "this.state.rows.forEach((name)=> {\n})", "url": "https://github.com/AthenZ/athenz/pull/1223#discussion_r551536239", "createdAt": "2021-01-04T19:59:01Z", "author": {"login": "pratikgote"}, "path": "ui/src/components/group/GroupRoleTable.js", "diffHunk": "@@ -0,0 +1,143 @@\n+/*\n+ * Copyright 2020 Verizon Media\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+import React from 'react';\n+import styled from '@emotion/styled';\n+import RoleGroup from '../role/RoleGroup';\n+\n+const StyleTable = styled.table`\n+    width: 100%;\n+    border-spacing: 0 15px;\n+    display: table;\n+    border-collapse: separate;\n+    border-color: grey;\n+`;\n+\n+const TableHeadStyled = styled.th`\n+    text-align: ${(props) => props.align};\n+    border-bottom: 2px solid #d5d5d5;\n+    color: #9a9a9a;\n+    font-weight: 600;\n+    font-size: 0.8rem;\n+    padding-bottom: 5px;\n+    vertical-align: top;\n+    text-transform: uppercase;\n+    padding: 5px 0 5px 15px;\n+    word-break: break-all;\n+`;\n+\n+const TableHeadStyledRoleName = styled.th`\n+    text-align: ${(props) => props.align};\n+    border-bottom: 2px solid #d5d5d5;\n+    color: #9a9a9a;\n+    font-weight: 600;\n+    font-size: 0.8rem;\n+    padding-bottom: 5px;\n+    vertical-align: top;\n+    text-transform: uppercase;\n+    padding: 5px 0 5px 35px;\n+    word-break: break-all;\n+`;\n+\n+export default class GroupRoleTable extends React.Component {\n+    constructor(props) {\n+        super(props);\n+        this.api = props.api;\n+        let subRows = [];\n+\n+        if (props.prefixes) {\n+            props.prefixes.forEach((prefix) => {\n+                let rows = props.roles.filter(\n+                    (item) => item.domainName == prefix\n+                );\n+                subRows[prefix] = rows;\n+            });\n+        }\n+\n+        this.state = {\n+            roles: props.roles || [],\n+            rows: subRows,\n+        };\n+    }\n+\n+    componentDidUpdate = (prevProps) => {\n+        if (prevProps.domain !== this.props.domain) {\n+            this.setState({\n+                rows: {},\n+            });\n+        } else if (prevProps.roles !== this.props.roles) {\n+            let subRows = [];\n+            if (this.props.prefixes) {\n+                this.props.prefixes.forEach((prefix) => {\n+                    let rows = this.props.roles.filter(\n+                        (item) => item.domainName == prefix\n+                    );\n+                    subRows[prefix] = rows;\n+                });\n+            }\n+\n+            this.setState({\n+                roles: this.props.roles || [],\n+                rows: subRows,\n+            });\n+        }\n+    };\n+\n+    render() {\n+        const center = 'center';\n+        const left = 'left';\n+        const { domain } = this.props;\n+        let rows = [];\n+\n+        if (this.state.roles && this.state.roles.length > 0) {\n+            if (this.state.rows) {\n+                for (let name in this.state.rows) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3cda93059b02296d598d85b1a78ca96c95270f91"}, "originalPosition": 106}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTUzNjc1NA==", "bodyText": "let's extract this to a function and call it wherever it is needed", "url": "https://github.com/AthenZ/athenz/pull/1223#discussion_r551536754", "createdAt": "2021-01-04T20:00:03Z", "author": {"login": "pratikgote"}, "path": "ui/src/components/header/GroupTabs.js", "diffHunk": "@@ -0,0 +1,139 @@\n+/*\n+ * Copyright 2020 Verizon Media\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+import React from 'react';\n+import TabGroup from '../denali/TabGroup';\n+import { Router } from '../../routes';\n+\n+export default class GroupTabs extends React.Component {\n+    constructor(props) {\n+        super(props);\n+        this.tabClicked = this.tabClicked.bind(this);\n+    }\n+    TABS = [\n+        {\n+            label: 'Members',\n+            name: 'members',\n+        },\n+        {\n+            label: 'Review',\n+            name: 'review',\n+        },\n+        {\n+            label: 'Roles',\n+            name: 'roles',\n+        },\n+        {\n+            label: 'Settings',\n+            name: 'settings',\n+        },\n+        {\n+            label: 'History',\n+            name: 'history',\n+        },\n+    ];\n+\n+    tabClicked(tab) {\n+        const { domain, group } = this.props;\n+        switch (tab.name) {\n+            case 'members':\n+                this.props.api\n+                    .getStatus()\n+                    .then(function () {\n+                        Router.pushRoute('group-members', {\n+                            domain: domain,\n+                            group: group,\n+                        });\n+                    })\n+                    .catch((err) => {\n+                        if (err.statusCode === 0) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3cda93059b02296d598d85b1a78ca96c95270f91"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTUzNzAxNw==", "bodyText": "let's extract this to a function with an argument and call it wherever it is needed", "url": "https://github.com/AthenZ/athenz/pull/1223#discussion_r551537017", "createdAt": "2021-01-04T20:00:34Z", "author": {"login": "pratikgote"}, "path": "ui/src/components/header/GroupTabs.js", "diffHunk": "@@ -0,0 +1,139 @@\n+/*\n+ * Copyright 2020 Verizon Media\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+import React from 'react';\n+import TabGroup from '../denali/TabGroup';\n+import { Router } from '../../routes';\n+\n+export default class GroupTabs extends React.Component {\n+    constructor(props) {\n+        super(props);\n+        this.tabClicked = this.tabClicked.bind(this);\n+    }\n+    TABS = [\n+        {\n+            label: 'Members',\n+            name: 'members',\n+        },\n+        {\n+            label: 'Review',\n+            name: 'review',\n+        },\n+        {\n+            label: 'Roles',\n+            name: 'roles',\n+        },\n+        {\n+            label: 'Settings',\n+            name: 'settings',\n+        },\n+        {\n+            label: 'History',\n+            name: 'history',\n+        },\n+    ];\n+\n+    tabClicked(tab) {\n+        const { domain, group } = this.props;\n+        switch (tab.name) {\n+            case 'members':\n+                this.props.api\n+                    .getStatus()\n+                    .then(function () {\n+                        Router.pushRoute('group-members', {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3cda93059b02296d598d85b1a78ca96c95270f91"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTUzODM5MA==", "bodyText": "since this is a new code, let's move all of this to the back end and let the page make just one call to the back end to fetch all the group related data in a single call", "url": "https://github.com/AthenZ/athenz/pull/1223#discussion_r551538390", "createdAt": "2021-01-04T20:03:40Z", "author": {"login": "pratikgote"}, "path": "ui/src/pages/group.js", "diffHunk": "@@ -0,0 +1,191 @@\n+/*\n+ * Copyright 2020 Verizon Media\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+import React from 'react';\n+import Header from '../components/header/Header';\n+import UserDomains from '../components/domain/UserDomains';\n+import API from '../api';\n+import styled from '@emotion/styled';\n+import Head from 'next/head';\n+// there is an issue with next-link and next-css if the css is not present then it doesnt load so adding this\n+import 'flatpickr/dist/themes/light.css';\n+import DomainDetails from '../components/header/DomainDetails';\n+import RequestUtils from '../components/utils/RequestUtils';\n+import Tabs from '../components/header/Tabs';\n+import Error from './_error';\n+import GroupList from '../components/group/GroupList';\n+import createCache from '@emotion/cache';\n+import { CacheProvider } from '@emotion/react';\n+\n+const AppContainerDiv = styled.div`\n+    align-items: stretch;\n+    flex-flow: row nowrap;\n+    height: 100%;\n+    display: flex;\n+    justify-content: flex-start;\n+`;\n+\n+const MainContentDiv = styled.div`\n+    flex: 1 1 calc(100vh - 60px);\n+    overflow: hidden;\n+    font: 300 14px HelveticaNeue-Reg, Helvetica, Arial, sans-serif;\n+`;\n+\n+const GroupsContainerDiv = styled.div`\n+    align-items: stretch;\n+    flex: 1 1;\n+    height: calc(100vh - 60px);\n+    overflow: auto;\n+    display: flex;\n+    flex-direction: column;\n+`;\n+\n+const GroupsContentDiv = styled.div``;\n+\n+const PageHeaderDiv = styled.div`\n+    background: linear-gradient(to top, #f2f2f2, #fff);\n+    padding: 20px 30px 0;\n+`;\n+\n+const TitleDiv = styled.div`\n+    font: 600 20px HelveticaNeue-Reg, Helvetica, Arial, sans-serif;\n+    margin-bottom: 10px;\n+`;\n+\n+export default class GroupPage extends React.Component {\n+    static async getInitialProps(props) {\n+        let api = API(props.req);\n+        let reload = false;\n+        let notFound = false;\n+        let error = undefined;\n+        const domains = await Promise.all([", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3cda93059b02296d598d85b1a78ca96c95270f91"}, "originalPosition": 73}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTUzODgzMg==", "bodyText": "since this is a new code, let's move all of this to the back end and let the page make just one call to the back end to fetch all the group related data in a single call", "url": "https://github.com/AthenZ/athenz/pull/1223#discussion_r551538832", "createdAt": "2021-01-04T20:04:24Z", "author": {"login": "pratikgote"}, "path": "ui/src/pages/group-settings.js", "diffHunk": "@@ -0,0 +1,191 @@\n+/*\n+ * Copyright 2020 Verizon Media\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+import React from 'react';\n+import Header from '../components/header/Header';\n+import UserDomains from '../components/domain/UserDomains';\n+import API from '../api';\n+import styled from '@emotion/styled';\n+import Head from 'next/head';\n+// there is an issue with next-link and next-css if the css is not present then it doesnt load so adding this\n+import 'flatpickr/dist/themes/light.css';\n+import CollectionDetails from '../components/header/CollectionDetails';\n+import SettingList from '../components/settings/SettingList';\n+import RequestUtils from '../components/utils/RequestUtils';\n+import NameHeader from '../components/header/NameHeader';\n+import Error from './_error';\n+import GroupTabs from '../components/header/GroupTabs';\n+import createCache from '@emotion/cache';\n+import { CacheProvider } from '@emotion/react';\n+\n+const AppContainerDiv = styled.div`\n+    align-items: stretch;\n+    flex-flow: row nowrap;\n+    height: 100%;\n+    display: flex;\n+    justify-content: flex-start;\n+`;\n+\n+const MainContentDiv = styled.div`\n+    flex: 1 1 calc(100vh - 60px);\n+    overflow: hidden;\n+    font: 300 14px HelveticaNeue-Reg, Helvetica, Arial, sans-serif;\n+`;\n+\n+const RolesContainerDiv = styled.div`\n+    align-items: stretch;\n+    flex: 1 1;\n+    height: calc(100vh - 60px);\n+    overflow: auto;\n+    display: flex;\n+    flex-direction: column;\n+`;\n+\n+const RolesContentDiv = styled.div``;\n+\n+const PageHeaderDiv = styled.div`\n+    background: linear-gradient(to top, #f2f2f2, #fff);\n+    padding: 20px 30px 0;\n+`;\n+\n+export default class GroupSettings extends React.Component {\n+    static async getInitialProps(props) {\n+        let api = API(props.req);\n+        let reload = false;\n+        let notFound = false;\n+        let error = undefined;\n+        const groups = await Promise.all([", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3cda93059b02296d598d85b1a78ca96c95270f91"}, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTUzOTAxOQ==", "bodyText": "since this is a new code, let's move all of this to the back end and let the page make just one call to the back end to fetch all the group related data in a single call", "url": "https://github.com/AthenZ/athenz/pull/1223#discussion_r551539019", "createdAt": "2021-01-04T20:04:47Z", "author": {"login": "pratikgote"}, "path": "ui/src/pages/group-roles.js", "diffHunk": "@@ -0,0 +1,255 @@\n+// getDomainRoleMember\n+/*\n+ * Copyright 2020 Verizon Media\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+import React from 'react';\n+import Header from '../components/header/Header';\n+import UserDomains from '../components/domain/UserDomains';\n+import API from '../api';\n+import styled from '@emotion/styled';\n+import Head from 'next/head';\n+// there is an issue with next-link and next-css if the css is not present then it doesnt load so adding this\n+import 'flatpickr/dist/themes/light.css';\n+import CollectionDetails from '../components/header/CollectionDetails';\n+import RequestUtils from '../components/utils/RequestUtils';\n+import NameHeader from '../components/header/NameHeader';\n+import Error from './_error';\n+import GroupTabs from '../components/header/GroupTabs';\n+import GroupRoleTable from '../components/group/GroupRoleTable';\n+import SearchInput from '../components/denali/SearchInput';\n+import createCache from '@emotion/cache';\n+import { CacheProvider } from '@emotion/react';\n+\n+const AppContainerDiv = styled.div`\n+    align-items: stretch;\n+    flex-flow: row nowrap;\n+    height: 100%;\n+    display: flex;\n+    justify-content: flex-start;\n+`;\n+\n+const StyledSearchInputDiv = styled.div`\n+    width: 50%;\n+    margin-top: 20px;\n+    margin-left: 30px;\n+`;\n+\n+const MainContentDiv = styled.div`\n+    flex: 1 1 calc(100vh - 60px);\n+    overflow: hidden;\n+    font: 300 14px HelveticaNeue-Reg, Helvetica, Arial, sans-serif;\n+`;\n+\n+const RolesContainerDiv = styled.div`\n+    align-items: stretch;\n+    flex: 1 1;\n+    height: calc(100vh - 60px);\n+    overflow: auto;\n+    display: flex;\n+    flex-direction: column;\n+`;\n+const ContainerDiv = styled.div`\n+    padding-bottom: 20px;\n+    display: flex;\n+    justify-content: space-between;\n+    align-items: center;\n+    flex-flow: row nowrap;\n+`;\n+\n+const TableDiv = styled.div`\n+    width: 95%;\n+    justify-content: space-between;\n+    padding-left: 2%;\n+`;\n+const RolesContentDiv = styled.div``;\n+\n+const PageHeaderDiv = styled.div`\n+    background: linear-gradient(to top, #f2f2f2, #fff);\n+    padding: 20px 30px 0;\n+`;\n+\n+export default class GroupRolesPage extends React.Component {\n+    static async getInitialProps(props) {\n+        let api = API(props.req);\n+        let reload = false;\n+        let notFound = false;\n+        let error = undefined;\n+        const details = await Promise.all([", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3cda93059b02296d598d85b1a78ca96c95270f91"}, "originalPosition": 89}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTUzOTE0Mw==", "bodyText": "since this is a new code, let's move all of this to the back end and let the page make just one call to the back end to fetch all the group related data in a single call", "url": "https://github.com/AthenZ/athenz/pull/1223#discussion_r551539143", "createdAt": "2021-01-04T20:05:03Z", "author": {"login": "pratikgote"}, "path": "ui/src/pages/group-review.js", "diffHunk": "@@ -0,0 +1,195 @@\n+/*\n+ * Copyright 2020 Verizon Media\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+import React from 'react';\n+import Header from '../components/header/Header';\n+import UserDomains from '../components/domain/UserDomains';\n+import API from '../api';\n+import styled from '@emotion/styled';\n+import Head from 'next/head';\n+// there is an issue with next-link and next-css if the css is not present then it doesnt load so adding this\n+import 'flatpickr/dist/themes/light.css';\n+import CollectionDetails from '../components/header/CollectionDetails';\n+import ReviewList from '../components/review/ReviewList';\n+import RequestUtils from '../components/utils/RequestUtils';\n+import GroupTabs from '../components/header/GroupTabs';\n+import NameHeader from '../components/header/NameHeader';\n+import Error from './_error';\n+import { MODAL_TIME_OUT } from '../components/constants/constants';\n+import createCache from '@emotion/cache';\n+import { CacheProvider } from '@emotion/react';\n+\n+const AppContainerDiv = styled.div`\n+    align-items: stretch;\n+    flex-flow: row nowrap;\n+    height: 100%;\n+    display: flex;\n+    justify-content: flex-start;\n+`;\n+\n+const MainContentDiv = styled.div`\n+    flex: 1 1 calc(100vh - 60px);\n+    overflow: hidden;\n+    font: 300 14px HelveticaNeue-Reg, Helvetica, Arial, sans-serif;\n+`;\n+\n+const GroupsContainerDiv = styled.div`\n+    align-items: stretch;\n+    flex: 1 1;\n+    height: calc(100vh - 60px);\n+    overflow: auto;\n+    display: flex;\n+    flex-direction: column;\n+`;\n+\n+const GroupsContentDiv = styled.div``;\n+\n+const PageHeaderDiv = styled.div`\n+    background: linear-gradient(to top, #f2f2f2, #fff);\n+    padding: 20px 30px 0;\n+`;\n+\n+export default class GroupReviewPage extends React.Component {\n+    static async getInitialProps(props) {\n+        let api = API(props.req);\n+        let reload = false;\n+        let notFound = false;\n+        let error = undefined;\n+        const groups = await Promise.all([", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3cda93059b02296d598d85b1a78ca96c95270f91"}, "originalPosition": 70}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTUzOTI1NA==", "bodyText": "since this is a new code, let's move all of this to the back end and let the page make just one call to the back end to fetch all the group related data in a single call", "url": "https://github.com/AthenZ/athenz/pull/1223#discussion_r551539254", "createdAt": "2021-01-04T20:05:16Z", "author": {"login": "pratikgote"}, "path": "ui/src/pages/group-members.js", "diffHunk": "@@ -0,0 +1,194 @@\n+/*\n+ * Copyright 2020 Verizon Media\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+import React from 'react';\n+import Header from '../components/header/Header';\n+import UserDomains from '../components/domain/UserDomains';\n+import API from '../api';\n+import styled from '@emotion/styled';\n+import Head from 'next/head';\n+// there is an issue with next-link and next-css if the css is not present then it doesnt load so adding this\n+import 'flatpickr/dist/themes/light.css';\n+import CollectionDetails from '../components/header/CollectionDetails';\n+import MemberList from '../components/member/MemberList';\n+import RequestUtils from '../components/utils/RequestUtils';\n+import NameHeader from '../components/header/NameHeader';\n+import Error from './_error';\n+import GroupTabs from '../components/header/GroupTabs';\n+import createCache from '@emotion/cache';\n+import { CacheProvider } from '@emotion/react';\n+\n+const AppContainerDiv = styled.div`\n+    align-items: stretch;\n+    flex-flow: row nowrap;\n+    height: 100%;\n+    display: flex;\n+    justify-content: flex-start;\n+`;\n+\n+const MainContentDiv = styled.div`\n+    flex: 1 1 calc(100vh - 60px);\n+    overflow: hidden;\n+    font: 300 14px HelveticaNeue-Reg, Helvetica, Arial, sans-serif;\n+`;\n+\n+const GroupsContainerDiv = styled.div`\n+    align-items: stretch;\n+    flex: 1 1;\n+    height: calc(100vh - 60px);\n+    overflow: auto;\n+    display: flex;\n+    flex-direction: column;\n+`;\n+\n+const GroupsContentDiv = styled.div``;\n+\n+const PageHeaderDiv = styled.div`\n+    background: linear-gradient(to top, #f2f2f2, #fff);\n+    padding: 20px 30px 0;\n+`;\n+\n+export default class GroupMemberPage extends React.Component {\n+    static async getInitialProps(props) {\n+        let api = API(props.req);\n+        let reload = false;\n+        let notFound = false;\n+        let error = undefined;\n+        const groups = await Promise.all([", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3cda93059b02296d598d85b1a78ca96c95270f91"}, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTUzOTM4NA==", "bodyText": "since this is a new code, let's move all of this to the back end and let the page make just one call to the back end to fetch all the group related data in a single call", "url": "https://github.com/AthenZ/athenz/pull/1223#discussion_r551539384", "createdAt": "2021-01-04T20:05:32Z", "author": {"login": "pratikgote"}, "path": "ui/src/pages/group-history.js", "diffHunk": "@@ -0,0 +1,189 @@\n+/*\n+ * Copyright 2020 Verizon Media\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+import React from 'react';\n+import Header from '../components/header/Header';\n+import UserDomains from '../components/domain/UserDomains';\n+import API from '../api';\n+import styled from '@emotion/styled';\n+import Head from 'next/head';\n+// there is an issue with next-link and next-css if the css is not present then it doesnt load so adding this\n+import 'flatpickr/dist/themes/light.css';\n+import CollectionDetails from '../components/header/CollectionDetails';\n+import CollectionHistoryList from '../components/history/CollectionHistoryList';\n+import NameHeader from '../components/header/NameHeader';\n+import RequestUtils from '../components/utils/RequestUtils';\n+import Error from './_error';\n+import GroupTabs from '../components/header/GroupTabs';\n+import createCache from '@emotion/cache';\n+import { CacheProvider } from '@emotion/react';\n+\n+const AppContainerDiv = styled.div`\n+    align-items: stretch;\n+    flex-flow: row nowrap;\n+    height: 100%;\n+    display: flex;\n+    justify-content: flex-start;\n+`;\n+\n+const MainContentDiv = styled.div`\n+    flex: 1 1 calc(100vh - 60px);\n+    overflow: hidden;\n+    font: 300 14px HelveticaNeue-Reg, Helvetica, Arial, sans-serif;\n+`;\n+\n+const GroupsContainerDiv = styled.div`\n+    align-items: stretch;\n+    flex: 1 1;\n+    height: calc(100vh - 60px);\n+    overflow: auto;\n+    display: flex;\n+    flex-direction: column;\n+`;\n+\n+const GroupsContentDiv = styled.div``;\n+\n+const PageHeaderDiv = styled.div`\n+    background: linear-gradient(to top, #f2f2f2, #fff);\n+    padding: 20px 30px 0;\n+`;\n+\n+export default class GroupHistoryPage extends React.Component {\n+    static async getInitialProps(props) {\n+        let api = API(props.req);\n+        let reload = false;\n+        let notFound = false;\n+        let error = undefined;\n+        const historyData = await Promise.all([", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3cda93059b02296d598d85b1a78ca96c95270f91"}, "originalPosition": 69}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0735343354d2391884a5b93dec4d4059320fa9fa", "author": {"user": null}, "url": "https://github.com/AthenZ/athenz/commit/0735343354d2391884a5b93dec4d4059320fa9fa", "committedDate": "2021-01-04T20:41:47Z", "message": "update zms json"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYxMzMwNjEy", "url": "https://github.com/AthenZ/athenz/pull/1223#pullrequestreview-561330612", "createdAt": "2021-01-04T20:42:54Z", "commit": {"oid": "0735343354d2391884a5b93dec4d4059320fa9fa"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2885, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}