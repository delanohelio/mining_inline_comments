{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk1MzYyNTEx", "number": 924, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxNzo1MDo1NlrODsyUeA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxNzo1MTozN1rODsyVcQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4Mjg4Mzc2OnYy", "diffSide": "RIGHT", "path": "servers/zms/src/main/java/com/yahoo/athenz/zms/DBService.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxNzo1MDo1N1rOF91Vqg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxOToxNTo1NlrOF94cAQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDM4MTM1NA==", "bodyText": "should this be autoCommit=false?", "url": "https://github.com/AthenZ/athenz/pull/924#discussion_r400381354", "createdAt": "2020-03-30T17:50:57Z", "author": {"login": "abvaidya"}, "path": "servers/zms/src/main/java/com/yahoo/athenz/zms/DBService.java", "diffHunk": "@@ -1230,7 +1230,54 @@ void executeDeleteMembership(ResourceContext ctx, String domainName, String role\n             }\n         }\n     }\n-    \n+\n+    void executeDeletePendingMembership(ResourceContext ctx, String domainName, String roleName,\n+                String normalizedMember, String auditRef, String caller) {\n+\n+        // our exception handling code does the check for retry count\n+        // and throws the exception it had received when the retry\n+        // count reaches 0\n+\n+        for (int retryCount = defaultRetryCount; ; retryCount--) {\n+\n+            try (ObjectStoreConnection con = store.getConnection(true, true)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e670b4f9e99981e5769a71f52dc6519b73c850ef"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDQzMjEyOQ==", "bodyText": "For single operations, we have auto commit enabled.", "url": "https://github.com/AthenZ/athenz/pull/924#discussion_r400432129", "createdAt": "2020-03-30T19:15:56Z", "author": {"login": "havetisyan"}, "path": "servers/zms/src/main/java/com/yahoo/athenz/zms/DBService.java", "diffHunk": "@@ -1230,7 +1230,54 @@ void executeDeleteMembership(ResourceContext ctx, String domainName, String role\n             }\n         }\n     }\n-    \n+\n+    void executeDeletePendingMembership(ResourceContext ctx, String domainName, String roleName,\n+                String normalizedMember, String auditRef, String caller) {\n+\n+        // our exception handling code does the check for retry count\n+        // and throws the exception it had received when the retry\n+        // count reaches 0\n+\n+        for (int retryCount = defaultRetryCount; ; retryCount--) {\n+\n+            try (ObjectStoreConnection con = store.getConnection(true, true)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDM4MTM1NA=="}, "originalCommit": {"oid": "e670b4f9e99981e5769a71f52dc6519b73c850ef"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4Mjg4NjI1OnYy", "diffSide": "RIGHT", "path": "servers/zms/src/main/java/com/yahoo/athenz/zms/ZMSImpl.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxNzo1MTozN1rOF91XUQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxOToxNjowOFrOF94ccQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDM4MTc3Nw==", "bodyText": "should this be deletependingmembership_timing?", "url": "https://github.com/AthenZ/athenz/pull/924#discussion_r400381777", "createdAt": "2020-03-30T17:51:37Z", "author": {"login": "abvaidya"}, "path": "servers/zms/src/main/java/com/yahoo/athenz/zms/ZMSImpl.java", "diffHunk": "@@ -3282,6 +3282,56 @@ void sendMembershipApprovalNotification(final String domain, final String org, f\n         notificationManager.sendNotifications(notifications);\n     }\n \n+    public void deletePendingMembership(ResourceContext ctx, String domainName, String roleName,\n+            String memberName, String auditRef) {\n+\n+        final String caller = \"deletependingmembership\";\n+        metric.increment(ZMSConsts.HTTP_DELETE);\n+        logPrincipal(ctx);\n+\n+        if (readOnlyMode) {\n+            throw ZMSUtils.requestError(SERVER_READ_ONLY_MESSAGE, caller);\n+        }\n+\n+        validateRequest(ctx.request(), caller);\n+\n+        validate(domainName, TYPE_DOMAIN_NAME, caller);\n+        validate(roleName, TYPE_ENTITY_NAME, caller);\n+        validate(memberName, TYPE_MEMBER_NAME, caller);\n+\n+        // for consistent handling of all requests, we're going to convert\n+        // all incoming object values into lower case (e.g. domain, role,\n+        // policy, service, etc name)\n+\n+        domainName = domainName.toLowerCase();\n+        roleName = roleName.toLowerCase();\n+        memberName = normalizeDomainAliasUser(memberName.toLowerCase());\n+\n+        final String principalDomain = getPrincipalDomain(ctx);\n+        metric.increment(ZMSConsts.HTTP_REQUEST, domainName, principalDomain);\n+        metric.increment(caller, domainName, principalDomain);\n+        Object timerMetric = metric.startTiming(\"deletemembership_timing\", domainName, principalDomain);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e670b4f9e99981e5769a71f52dc6519b73c850ef"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDQzMjI0MQ==", "bodyText": "fixed.", "url": "https://github.com/AthenZ/athenz/pull/924#discussion_r400432241", "createdAt": "2020-03-30T19:16:08Z", "author": {"login": "havetisyan"}, "path": "servers/zms/src/main/java/com/yahoo/athenz/zms/ZMSImpl.java", "diffHunk": "@@ -3282,6 +3282,56 @@ void sendMembershipApprovalNotification(final String domain, final String org, f\n         notificationManager.sendNotifications(notifications);\n     }\n \n+    public void deletePendingMembership(ResourceContext ctx, String domainName, String roleName,\n+            String memberName, String auditRef) {\n+\n+        final String caller = \"deletependingmembership\";\n+        metric.increment(ZMSConsts.HTTP_DELETE);\n+        logPrincipal(ctx);\n+\n+        if (readOnlyMode) {\n+            throw ZMSUtils.requestError(SERVER_READ_ONLY_MESSAGE, caller);\n+        }\n+\n+        validateRequest(ctx.request(), caller);\n+\n+        validate(domainName, TYPE_DOMAIN_NAME, caller);\n+        validate(roleName, TYPE_ENTITY_NAME, caller);\n+        validate(memberName, TYPE_MEMBER_NAME, caller);\n+\n+        // for consistent handling of all requests, we're going to convert\n+        // all incoming object values into lower case (e.g. domain, role,\n+        // policy, service, etc name)\n+\n+        domainName = domainName.toLowerCase();\n+        roleName = roleName.toLowerCase();\n+        memberName = normalizeDomainAliasUser(memberName.toLowerCase());\n+\n+        final String principalDomain = getPrincipalDomain(ctx);\n+        metric.increment(ZMSConsts.HTTP_REQUEST, domainName, principalDomain);\n+        metric.increment(caller, domainName, principalDomain);\n+        Object timerMetric = metric.startTiming(\"deletemembership_timing\", domainName, principalDomain);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDM4MTc3Nw=="}, "originalCommit": {"oid": "e670b4f9e99981e5769a71f52dc6519b73c850ef"}, "originalPosition": 32}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1751, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}