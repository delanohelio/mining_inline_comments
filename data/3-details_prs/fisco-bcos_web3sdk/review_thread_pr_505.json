{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc1MTgxODMz", "number": 505, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQwMjozMjo1MFrODfw0KQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOFQwODowNTozM1rODmFAKg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0NjMyMjMzOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/fisco/bcos/web3j/codegen/SolidityFunctionWrapperGenerator.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQwMjozMjo1MFrOFpqA9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQwMjozMjo1MFrOFpqA9A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTIyNDMwOA==", "bodyText": "[PMD] Found non-transient, non-static member. Please mark as transient or provide accessors. (see on Sider)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nBeanMembersShouldSerialize\nError Prone\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.21.0/pmd_rules_java_errorprone.html#beanmembersshouldserialize", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/505#discussion_r379224308", "createdAt": "2020-02-14T02:32:50Z", "author": {"login": "sider"}, "path": "src/main/java/org/fisco/bcos/web3j/codegen/SolidityFunctionWrapperGenerator.java", "diffHunk": "@@ -138,6 +140,14 @@ public static void main(String[] args) {\n                 required = false)\n         private File binFile;\n \n+        @Option(\n+                names = {\"-s\", \"--smBinFile\"},\n+                description =\n+                        \"sm bin file with contract compiled code \"\n+                                + \"in order to generate deploy methods.\",\n+                required = false)\n+        private File smBinFile;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "20b6b5fd4afdb8cdcc50e3a5b19edef1c41f8c97"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxMjU0NDM1OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/fisco/bcos/web3j/crypto/EncryptType.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOFQwODowNTozMFrOFzTxfQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOFQwODowNTozMFrOFzTxfQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTM0NTY2MQ==", "bodyText": "[PMD] Potential violation of Law of Demeter (object not created locally) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.21.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can mark this issue as closed if you should not tackle it. (see our document about issues)", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/505#discussion_r389345661", "createdAt": "2020-03-08T08:05:30Z", "author": {"login": "sider"}, "path": "src/main/java/org/fisco/bcos/web3j/crypto/EncryptType.java", "diffHunk": "@@ -25,11 +35,33 @@ public EncryptType(int encryptType) {\n         Hash.setHashInterface(hashInterface);\n     }\n \n+    public static void checkAccountPrivateKey(ECParameterSpec ecParameterSpec, int encryptType) {\n+        try {\n+            String name = ((ECNamedCurveSpec) ecParameterSpec).getName();\n+            boolean privateKeyMatch =\n+                    ((EncryptType.ECDSA_TYPE != EncryptType.encryptType) && name.contains(\"sm2\"))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "99d14052aee389d94cbbe7ec84664b67ecdf9d06"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxMjU0NDM4OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/fisco/bcos/web3j/crypto/EncryptType.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOFQwODowNTozMVrOFzTxgA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOFQwODowNTozMVrOFzTxgA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTM0NTY2NA==", "bodyText": "[PMD] Potential violation of Law of Demeter (object not created locally) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.21.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can mark this issue as closed if you should not tackle it. (see our document about issues)", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/505#discussion_r389345664", "createdAt": "2020-03-08T08:05:31Z", "author": {"login": "sider"}, "path": "src/main/java/org/fisco/bcos/web3j/crypto/EncryptType.java", "diffHunk": "@@ -25,11 +35,33 @@ public EncryptType(int encryptType) {\n         Hash.setHashInterface(hashInterface);\n     }\n \n+    public static void checkAccountPrivateKey(ECParameterSpec ecParameterSpec, int encryptType) {\n+        try {\n+            String name = ((ECNamedCurveSpec) ecParameterSpec).getName();\n+            boolean privateKeyMatch =\n+                    ((EncryptType.ECDSA_TYPE != EncryptType.encryptType) && name.contains(\"sm2\"))\n+                            || ((EncryptType.ECDSA_TYPE == EncryptType.encryptType)\n+                                    && name.contains(\"secp256k1\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "99d14052aee389d94cbbe7ec84664b67ecdf9d06"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxMjU0NDM5OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/fisco/bcos/web3j/crypto/EncryptType.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOFQwODowNTozMlrOFzTxgg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOFQwODowNTozMlrOFzTxgg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTM0NTY2Ng==", "bodyText": "[PMD] Potential violation of Law of Demeter (method chain calls) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.21.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can mark this issue as closed if you should not tackle it. (see our document about issues)", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/505#discussion_r389345666", "createdAt": "2020-03-08T08:05:32Z", "author": {"login": "sider"}, "path": "src/main/java/org/fisco/bcos/web3j/crypto/EncryptType.java", "diffHunk": "@@ -25,11 +35,33 @@ public EncryptType(int encryptType) {\n         Hash.setHashInterface(hashInterface);\n     }\n \n+    public static void checkAccountPrivateKey(ECParameterSpec ecParameterSpec, int encryptType) {\n+        try {\n+            String name = ((ECNamedCurveSpec) ecParameterSpec).getName();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "99d14052aee389d94cbbe7ec84664b67ecdf9d06"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxMjU0NDQyOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/fisco/bcos/web3j/crypto/EncryptType.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOFQwODowNTozM1rOFzTxhQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOFQwODowNTozM1rOFzTxhQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTM0NTY2OQ==", "bodyText": "[PMD] Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nAvoidCatchingGenericException\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.21.0/pmd_rules_java_design.html#avoidcatchinggenericexception\n\nYou can mark this issue as closed if you should not tackle it. (see our document about issues)", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/505#discussion_r389345669", "createdAt": "2020-03-08T08:05:33Z", "author": {"login": "sider"}, "path": "src/main/java/org/fisco/bcos/web3j/crypto/EncryptType.java", "diffHunk": "@@ -25,11 +35,33 @@ public EncryptType(int encryptType) {\n         Hash.setHashInterface(hashInterface);\n     }\n \n+    public static void checkAccountPrivateKey(ECParameterSpec ecParameterSpec, int encryptType) {\n+        try {\n+            String name = ((ECNamedCurveSpec) ecParameterSpec).getName();\n+            boolean privateKeyMatch =\n+                    ((EncryptType.ECDSA_TYPE != EncryptType.encryptType) && name.contains(\"sm2\"))\n+                            || ((EncryptType.ECDSA_TYPE == EncryptType.encryptType)\n+                                    && name.contains(\"secp256k1\"));\n+\n+            // logger.trace(\" name: {}, encrypt: {}\", name, encryptType);\n+\n+            if (!privateKeyMatch) {\n+                throw new IllegalArgumentException(\n+                        \" Not matched private key type, type name: \"\n+                                + name\n+                                + \", encryptType: \"\n+                                + EncryptType.encryptType);\n+            }\n+        } catch (Exception e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "99d14052aee389d94cbbe7ec84664b67ecdf9d06"}, "originalPosition": 48}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 744, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}