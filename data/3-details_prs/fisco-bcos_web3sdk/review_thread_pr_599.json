{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMxNjQwMzM3", "number": 599, "reviewThreads": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQwODo1Njo0MVrOEDxpWg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxNjoyMTo1N1rOED9hEg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyMzk0NTg2OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/fisco/bcos/web3j/crypto/gm/KeyInfo.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQwODo1Njo0MVrOGg_afw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQwODo1Njo0MVrOGg_afw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzI0NjU5MQ==", "bodyText": "[PMD Java] The class 'Account' is suspected to be a Data Class (WOC=0.000%, NOPA=0, NOAM=6, WMC=6) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nDataClass\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.23.0/pmd_rules_java_design.html#dataclass\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/599#discussion_r437246591", "createdAt": "2020-06-09T08:56:41Z", "author": {"login": "sider"}, "path": "src/main/java/org/fisco/bcos/web3j/crypto/gm/KeyInfo.java", "diffHunk": "@@ -23,6 +23,36 @@\n \n     KeyInfo() {}\n \n+    private static class Account {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5bd2b490598900566b25b5e2b797416bf61608ca"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyMzk0NTg5OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/fisco/bcos/web3j/crypto/gm/KeyInfo.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQwODo1Njo0MVrOGg_ahA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQwODo1Njo0MVrOGg_ahA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzI0NjU5Ng==", "bodyText": "[PMD Java] It is somewhat confusing to have a field name matching the declaring class name (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nAvoidFieldNameMatchingTypeName\nError Prone\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.23.0/pmd_rules_java_errorprone.html#avoidfieldnamematchingtypename\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/599#discussion_r437246596", "createdAt": "2020-06-09T08:56:41Z", "author": {"login": "sider"}, "path": "src/main/java/org/fisco/bcos/web3j/crypto/gm/KeyInfo.java", "diffHunk": "@@ -23,6 +23,36 @@\n \n     KeyInfo() {}\n \n+    private static class Account {\n+        private String privateKey;\n+        private String publicKey;\n+        private String account;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5bd2b490598900566b25b5e2b797416bf61608ca"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyMzk0NTkyOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/fisco/bcos/web3j/crypto/gm/KeyInfo.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQwODo1Njo0MVrOGg_ahw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQwODo1Njo0MVrOGg_ahw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzI0NjU5OQ==", "bodyText": "[PMD Java] Potential violation of Law of Demeter (method chain calls) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.23.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/599#discussion_r437246599", "createdAt": "2020-06-09T08:56:41Z", "author": {"login": "sider"}, "path": "src/main/java/org/fisco/bcos/web3j/crypto/gm/KeyInfo.java", "diffHunk": "@@ -104,18 +134,13 @@ public int loadKeyInfo(String keyFile) {\n         System.out.println(\"\");\n         System.out.println(\"===key info:\" + keyInfoJsonStr);\n         try {\n-            JSONObject keyInfoJsonObj = JSONObject.parseObject(keyInfoJsonStr);\n-            if (keyInfoJsonObj == null) {\n-                System.out.println(\"load json str from key info failed\");\n-                logger.error(\"load json str from key info failed\");\n-                return RetCode.parseJsonFailed;\n-            }\n-            if (keyInfoJsonObj.containsKey(privJsonKey))\n-                privateKey = keyInfoJsonObj.getString(privJsonKey);\n-            if (keyInfoJsonObj.containsKey(pubJsonKey))\n-                publicKey = keyInfoJsonObj.getString(pubJsonKey);\n-            if (keyInfoJsonObj.containsKey(accountJsonKey))\n-                account = keyInfoJsonObj.getString(accountJsonKey);\n+            Account key =\n+                    ObjectMapperFactory.getObjectMapper().readValue(keyInfoJsonStr, Account.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5bd2b490598900566b25b5e2b797416bf61608ca"}, "originalPosition": 63}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyMzk0NTk0OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/fisco/bcos/web3j/crypto/gm/KeyInfo.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQwODo1Njo0MVrOGg_aig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQwODo1Njo0MVrOGg_aig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzI0NjYwMg==", "bodyText": "[PMD Java] Potential violation of Law of Demeter (method chain calls) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.23.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/599#discussion_r437246602", "createdAt": "2020-06-09T08:56:41Z", "author": {"login": "sider"}, "path": "src/main/java/org/fisco/bcos/web3j/crypto/gm/KeyInfo.java", "diffHunk": "@@ -159,13 +184,12 @@ private static int writeFile(String keyFile, String content) {\n     @Override\n     public int storeKeyInfo(String keyFile) {\n         try {\n-            // Map<String, String> keyMap = new HashMap<String, String>();\n-            JSONObject keyMapJson = new JSONObject();\n-            keyMapJson.put(privJsonKey, privateKey);\n-            keyMapJson.put(pubJsonKey, publicKey);\n-            keyMapJson.put(accountJsonKey, account);\n+            Account key = new Account();\n+            key.setPrivateKey(getPrivateKey());\n+            key.setPublicKey(getPublicKey());\n+            key.setAccount(getAccount());\n \n-            String keyJsonInfo = keyMapJson.toString();\n+            String keyJsonInfo = ObjectMapperFactory.getObjectMapper().writeValueAsString(key);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5bd2b490598900566b25b5e2b797416bf61608ca"}, "originalPosition": 87}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyMzk0NTk4OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/fisco/bcos/web3j/tx/txdecode/ContractAbiUtil.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQwODo1Njo0MlrOGg_ajg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQwODo1Njo0MlrOGg_ajg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzI0NjYwNg==", "bodyText": "[PMD Java] The String literal \" invalid json, abi: {}, e: {} \" appears 4 times in this file; the first occurrence is on line 83 (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nAvoidDuplicateLiterals\nError Prone\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.23.0/pmd_rules_java_errorprone.html#avoidduplicateliterals\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/599#discussion_r437246606", "createdAt": "2020-06-09T08:56:42Z", "author": {"login": "sider"}, "path": "src/main/java/org/fisco/bcos/web3j/tx/txdecode/ContractAbiUtil.java", "diffHunk": "@@ -38,31 +44,45 @@\n      * @return\n      */\n     public static AbiDefinition getConstructorAbiDefinition(String contractAbi) {\n-        JSONArray abiArr = JSONArray.parseArray(contractAbi);\n-        AbiDefinition result = null;\n-        for (Object object : abiArr) {\n-            AbiDefinition abiDefinition = JSON.parseObject(object.toString(), AbiDefinition.class);\n-            if (TYPE_CONSTRUCTOR.equals(abiDefinition.getType())) {\n-                result = abiDefinition;\n-                break;\n+        try {\n+            ObjectMapper objectMapper = ObjectMapperFactory.getObjectMapper();\n+            AbiDefinition[] abiDefinitions =\n+                    objectMapper.readValue(contractAbi, AbiDefinition[].class);\n+\n+            for (AbiDefinition abiDefinition : abiDefinitions) {\n+                if (TYPE_CONSTRUCTOR.equals(abiDefinition.getType())) {\n+                    return abiDefinition;\n+                }\n             }\n+        } catch (JsonProcessingException e) {\n+            logger.warn(\" invalid  json, abi: {}, e: {} \", contractAbi, e);\n+        } catch (IOException e) {\n+            logger.warn(\" invalid  json, abi: {}, e: {} \", contractAbi, e);\n         }\n-        return result;\n+        return null;\n     }\n \n     /**\n      * @param contractAbi\n      * @return\n      */\n     public static List<AbiDefinition> getFuncAbiDefinition(String contractAbi) {\n-        JSONArray abiArr = JSONArray.parseArray(contractAbi);\n         List<AbiDefinition> result = new ArrayList<>();\n-        for (Object object : abiArr) {\n-            AbiDefinition abiDefinition = JSON.parseObject(object.toString(), AbiDefinition.class);\n-            if (TYPE_FUNCTION.equals(abiDefinition.getType())\n-                    || TYPE_CONSTRUCTOR.equals(abiDefinition.getType())) {\n-                result.add(abiDefinition);\n+        try {\n+            ObjectMapper objectMapper = ObjectMapperFactory.getObjectMapper();\n+            AbiDefinition[] abiDefinitions =\n+                    objectMapper.readValue(contractAbi, AbiDefinition[].class);\n+\n+            for (AbiDefinition abiDefinition : abiDefinitions) {\n+                if (TYPE_FUNCTION.equals(abiDefinition.getType())\n+                        || TYPE_CONSTRUCTOR.equals(abiDefinition.getType())) {\n+                    result.add(abiDefinition);\n+                }\n             }\n+        } catch (JsonProcessingException e) {\n+            logger.warn(\" invalid json, abi: {}, e: {} \", contractAbi, e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5bd2b490598900566b25b5e2b797416bf61608ca"}, "originalPosition": 84}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNTg5MDY1OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/fisco/bcos/web3j/tx/txdecode/ContractAbiUtil.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxNjoyMTo1N1rOGhSdmA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxNjoyMTo1N1rOGhSdmA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzU1ODY4MA==", "bodyText": "[PMD Java] Avoid unused imports such as 'com.fasterxml.jackson.core.JsonProcessingException' (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nUnusedImports\nBest Practices\n4\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.23.0/pmd_rules_java_bestpractices.html#unusedimports\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/599#discussion_r437558680", "createdAt": "2020-06-09T16:21:57Z", "author": {"login": "sider"}, "path": "src/main/java/org/fisco/bcos/web3j/tx/txdecode/ContractAbiUtil.java", "diffHunk": "@@ -14,21 +14,27 @@\n \n package org.fisco.bcos.web3j.tx.txdecode;\n \n-import com.alibaba.fastjson.JSON;\n-import com.alibaba.fastjson.JSONArray;\n+import com.fasterxml.jackson.core.JsonProcessingException;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d3274f88ced2513bea70c4432db45f6451d0c5ab"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNTg5MDY3OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/fisco/bcos/web3j/tx/txdecode/ContractAbiUtil.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxNjoyMTo1N1rOGhSdmg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxNjoyMTo1N1rOGhSdmg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzU1ODY4Mg==", "bodyText": "[PMD Java] Avoid unused imports such as 'java.io.IOException' (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nUnusedImports\nBest Practices\n4\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.23.0/pmd_rules_java_bestpractices.html#unusedimports\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/599#discussion_r437558682", "createdAt": "2020-06-09T16:21:57Z", "author": {"login": "sider"}, "path": "src/main/java/org/fisco/bcos/web3j/tx/txdecode/ContractAbiUtil.java", "diffHunk": "@@ -14,21 +14,27 @@\n \n package org.fisco.bcos.web3j.tx.txdecode;\n \n-import com.alibaba.fastjson.JSON;\n-import com.alibaba.fastjson.JSONArray;\n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import java.io.IOException;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d3274f88ced2513bea70c4432db45f6451d0c5ab"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNTg5MDcwOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/fisco/bcos/web3j/tx/txdecode/ContractAbiUtil.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxNjoyMTo1N1rOGhSdnQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxNjoyMTo1N1rOGhSdnQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzU1ODY4NQ==", "bodyText": "[PMD Java] Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nAvoidCatchingGenericException\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.23.0/pmd_rules_java_design.html#avoidcatchinggenericexception\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/599#discussion_r437558685", "createdAt": "2020-06-09T16:21:57Z", "author": {"login": "sider"}, "path": "src/main/java/org/fisco/bcos/web3j/tx/txdecode/ContractAbiUtil.java", "diffHunk": "@@ -38,49 +44,68 @@\n      * @return\n      */\n     public static AbiDefinition getConstructorAbiDefinition(String contractAbi) {\n-        JSONArray abiArr = JSONArray.parseArray(contractAbi);\n-        AbiDefinition result = null;\n-        for (Object object : abiArr) {\n-            AbiDefinition abiDefinition = JSON.parseObject(object.toString(), AbiDefinition.class);\n-            if (TYPE_CONSTRUCTOR.equals(abiDefinition.getType())) {\n-                result = abiDefinition;\n-                break;\n+        try {\n+            ObjectMapper objectMapper = ObjectMapperFactory.getObjectMapper();\n+            AbiDefinition[] abiDefinitions =\n+                    objectMapper.readValue(contractAbi, AbiDefinition[].class);\n+\n+            for (AbiDefinition abiDefinition : abiDefinitions) {\n+                if (TYPE_CONSTRUCTOR.equals(abiDefinition.getType())) {\n+                    return abiDefinition;\n+                }\n             }\n+        } catch (Exception e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d3274f88ced2513bea70c4432db45f6451d0c5ab"}, "originalPosition": 51}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNTg5MDcyOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/fisco/bcos/web3j/tx/txdecode/ContractAbiUtil.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxNjoyMTo1N1rOGhSdnw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxNjoyMTo1N1rOGhSdnw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzU1ODY4Nw==", "bodyText": "[PMD Java] Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nAvoidCatchingGenericException\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.23.0/pmd_rules_java_design.html#avoidcatchinggenericexception\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/599#discussion_r437558687", "createdAt": "2020-06-09T16:21:57Z", "author": {"login": "sider"}, "path": "src/main/java/org/fisco/bcos/web3j/tx/txdecode/ContractAbiUtil.java", "diffHunk": "@@ -38,49 +44,68 @@\n      * @return\n      */\n     public static AbiDefinition getConstructorAbiDefinition(String contractAbi) {\n-        JSONArray abiArr = JSONArray.parseArray(contractAbi);\n-        AbiDefinition result = null;\n-        for (Object object : abiArr) {\n-            AbiDefinition abiDefinition = JSON.parseObject(object.toString(), AbiDefinition.class);\n-            if (TYPE_CONSTRUCTOR.equals(abiDefinition.getType())) {\n-                result = abiDefinition;\n-                break;\n+        try {\n+            ObjectMapper objectMapper = ObjectMapperFactory.getObjectMapper();\n+            AbiDefinition[] abiDefinitions =\n+                    objectMapper.readValue(contractAbi, AbiDefinition[].class);\n+\n+            for (AbiDefinition abiDefinition : abiDefinitions) {\n+                if (TYPE_CONSTRUCTOR.equals(abiDefinition.getType())) {\n+                    return abiDefinition;\n+                }\n             }\n+        } catch (Exception e) {\n+            logger.warn(\" invalid  json, abi: {}, e: \", contractAbi, e);\n         }\n-        return result;\n+        return null;\n     }\n \n     /**\n      * @param contractAbi\n      * @return\n      */\n     public static List<AbiDefinition> getFuncAbiDefinition(String contractAbi) {\n-        JSONArray abiArr = JSONArray.parseArray(contractAbi);\n         List<AbiDefinition> result = new ArrayList<>();\n-        for (Object object : abiArr) {\n-            AbiDefinition abiDefinition = JSON.parseObject(object.toString(), AbiDefinition.class);\n-            if (TYPE_FUNCTION.equals(abiDefinition.getType())\n-                    || TYPE_CONSTRUCTOR.equals(abiDefinition.getType())) {\n-                result.add(abiDefinition);\n+        try {\n+            ObjectMapper objectMapper = ObjectMapperFactory.getObjectMapper();\n+            AbiDefinition[] abiDefinitions =\n+                    objectMapper.readValue(contractAbi, AbiDefinition[].class);\n+\n+            for (AbiDefinition abiDefinition : abiDefinitions) {\n+                if (TYPE_FUNCTION.equals(abiDefinition.getType())\n+                        || TYPE_CONSTRUCTOR.equals(abiDefinition.getType())) {\n+                    result.add(abiDefinition);\n+                }\n             }\n+\n+            return result;\n+        } catch (Exception e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d3274f88ced2513bea70c4432db45f6451d0c5ab"}, "originalPosition": 83}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNTg5MDc0OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/fisco/bcos/web3j/tx/txdecode/ContractAbiUtil.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxNjoyMTo1OFrOGhSdog==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxNjoyMTo1OFrOGhSdog==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzU1ODY5MA==", "bodyText": "[PMD Java] Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nAvoidCatchingGenericException\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.23.0/pmd_rules_java_design.html#avoidcatchinggenericexception\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/599#discussion_r437558690", "createdAt": "2020-06-09T16:21:58Z", "author": {"login": "sider"}, "path": "src/main/java/org/fisco/bcos/web3j/tx/txdecode/ContractAbiUtil.java", "diffHunk": "@@ -38,49 +44,68 @@\n      * @return\n      */\n     public static AbiDefinition getConstructorAbiDefinition(String contractAbi) {\n-        JSONArray abiArr = JSONArray.parseArray(contractAbi);\n-        AbiDefinition result = null;\n-        for (Object object : abiArr) {\n-            AbiDefinition abiDefinition = JSON.parseObject(object.toString(), AbiDefinition.class);\n-            if (TYPE_CONSTRUCTOR.equals(abiDefinition.getType())) {\n-                result = abiDefinition;\n-                break;\n+        try {\n+            ObjectMapper objectMapper = ObjectMapperFactory.getObjectMapper();\n+            AbiDefinition[] abiDefinitions =\n+                    objectMapper.readValue(contractAbi, AbiDefinition[].class);\n+\n+            for (AbiDefinition abiDefinition : abiDefinitions) {\n+                if (TYPE_CONSTRUCTOR.equals(abiDefinition.getType())) {\n+                    return abiDefinition;\n+                }\n             }\n+        } catch (Exception e) {\n+            logger.warn(\" invalid  json, abi: {}, e: \", contractAbi, e);\n         }\n-        return result;\n+        return null;\n     }\n \n     /**\n      * @param contractAbi\n      * @return\n      */\n     public static List<AbiDefinition> getFuncAbiDefinition(String contractAbi) {\n-        JSONArray abiArr = JSONArray.parseArray(contractAbi);\n         List<AbiDefinition> result = new ArrayList<>();\n-        for (Object object : abiArr) {\n-            AbiDefinition abiDefinition = JSON.parseObject(object.toString(), AbiDefinition.class);\n-            if (TYPE_FUNCTION.equals(abiDefinition.getType())\n-                    || TYPE_CONSTRUCTOR.equals(abiDefinition.getType())) {\n-                result.add(abiDefinition);\n+        try {\n+            ObjectMapper objectMapper = ObjectMapperFactory.getObjectMapper();\n+            AbiDefinition[] abiDefinitions =\n+                    objectMapper.readValue(contractAbi, AbiDefinition[].class);\n+\n+            for (AbiDefinition abiDefinition : abiDefinitions) {\n+                if (TYPE_FUNCTION.equals(abiDefinition.getType())\n+                        || TYPE_CONSTRUCTOR.equals(abiDefinition.getType())) {\n+                    result.add(abiDefinition);\n+                }\n             }\n+\n+            return result;\n+        } catch (Exception e) {\n+            logger.warn(\" invalid json, abi: {}, e: \", contractAbi, e);\n+            return new ArrayList<>();\n         }\n-        return result;\n     }\n \n     /**\n      * @param contractAbi\n      * @return\n      */\n     public static List<AbiDefinition> getEventAbiDefinitions(String contractAbi) {\n-        JSONArray abiArr = JSONArray.parseArray(contractAbi);\n         List<AbiDefinition> result = new ArrayList<>();\n-        for (Object object : abiArr) {\n-            AbiDefinition abiDefinition = JSON.parseObject(object.toString(), AbiDefinition.class);\n-            if (TYPE_EVENT.equals(abiDefinition.getType())) {\n-                result.add(abiDefinition);\n+        try {\n+            ObjectMapper objectMapper = ObjectMapperFactory.getObjectMapper();\n+            AbiDefinition[] abiDefinitions =\n+                    objectMapper.readValue(contractAbi, AbiDefinition[].class);\n+\n+            for (AbiDefinition abiDefinition : abiDefinitions) {\n+                if (TYPE_EVENT.equals(abiDefinition.getType())) {\n+                    result.add(abiDefinition);\n+                }\n             }\n+            return result;\n+        } catch (Exception e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d3274f88ced2513bea70c4432db45f6451d0c5ab"}, "originalPosition": 112}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 696, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}