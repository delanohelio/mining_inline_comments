{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY4NDE3ODAy", "number": 697, "title": "Release 2.4.3 openssl", "bodyText": "", "createdAt": "2020-08-16T08:49:29Z", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/697", "merged": true, "mergeCommit": {"oid": "51718322a28066a0975b8a5d8cd5eaaa4d110569"}, "closed": true, "closedAt": "2020-08-16T09:03:46Z", "author": {"login": "ywy2090"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc-1GQFgH2gAyNDY4NDE3ODAyOjRiMjAwZjJkN2RmYzA5NDllNWNiZWRiNmUzYTY3ODBiNDI5YjQ5Mzc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc_Z2dGgFqTQ2ODA0NjIzNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "4b200f2d7dfc0949e5cbedb6e3a6780b429b4937", "author": {"user": {"login": "ywy2090", "name": null}}, "url": "https://github.com/FISCO-BCOS/web3sdk/commit/4b200f2d7dfc0949e5cbedb6e3a6780b429b4937", "committedDate": "2020-08-14T14:01:11Z", "message": "update getBlockTransactionReceipts and getBlockTransactionReceiptsByHash inteface"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "af01e2de2468e1089a680cccdc2960c1e1b8e7ce", "author": {"user": {"login": "ywy2090", "name": null}}, "url": "https://github.com/FISCO-BCOS/web3sdk/commit/af01e2de2468e1089a680cccdc2960c1e1b8e7ce", "committedDate": "2020-08-16T07:58:30Z", "message": "ssl engine to OPENSSL"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY4MDQ2MjM0", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/697#pullrequestreview-468046234", "createdAt": "2020-08-16T08:50:24Z", "commit": {"oid": "af01e2de2468e1089a680cccdc2960c1e1b8e7ce"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNlQwODo1MDoyNFrOHBQxsg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNlQwODo1MDoyNVrOHBQxtg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTA4NTQ5MA==", "bodyText": "[PMD Java] Found 'DU'-anomaly for variable 'buf' (lines '39'-'47'). (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nDataflowAnomalyAnalysis\nError Prone\n5\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_errorprone.html#dataflowanomalyanalysis\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/697#discussion_r471085490", "createdAt": "2020-08-16T08:50:24Z", "author": {"login": "sider"}, "path": "src/main/java/org/fisco/bcos/web3j/protocol/core/methods/response/BlockTransactionReceipts.java", "diffHunk": "@@ -1,14 +1,75 @@\n package org.fisco.bcos.web3j.protocol.core.methods.response;\n \n+import java.io.ByteArrayOutputStream;\n+import java.io.IOException;\n+import java.util.Base64;\n import java.util.List;\n-\n+import java.util.zip.DataFormatException;\n+import java.util.zip.Deflater;\n+import java.util.zip.Inflater;\n+import org.fisco.bcos.web3j.crypto.gm.sm2.util.Arrays;\n+import org.fisco.bcos.web3j.protocol.ObjectMapperFactory;\n import org.fisco.bcos.web3j.protocol.core.Response;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public class BlockTransactionReceipts extends Response<String> {\n+\n+    private static Logger logger = LoggerFactory.getLogger(BlockTransactionReceipts.class);\n+\n+    public byte[] compress(String data) {\n+\n+        Deflater compress = new Deflater();\n+\n+        compress.setInput(data.getBytes());\n+\n+        byte[] compressedData = new byte[data.length()];\n+        compress.finish();\n+\n+        int compressLength = compress.deflate(compressedData, 0, compressedData.length);\n+        return Arrays.copyOfRange(compressedData, 0, compressLength);\n+    }\n+\n+    public byte[] uncompress(byte[] compressedData) throws IOException, DataFormatException {\n \n-public class BlockTransactionReceipts\n-        extends Response<BlockTransactionReceipts.BlockTransactionReceiptsInfo> {\n+        Inflater decompressor = new Inflater();\n+        decompressor.setInput(compressedData);\n+\n+        try (ByteArrayOutputStream bos = new ByteArrayOutputStream(compressedData.length)) {\n+            byte[] buf = new byte[1024];", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "af01e2de2468e1089a680cccdc2960c1e1b8e7ce"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTA4NTQ5MQ==", "bodyText": "[PMD Java] Potential violation of Law of Demeter (method chain calls) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/697#discussion_r471085491", "createdAt": "2020-08-16T08:50:24Z", "author": {"login": "sider"}, "path": "src/main/java/org/fisco/bcos/web3j/protocol/core/methods/response/BlockTransactionReceipts.java", "diffHunk": "@@ -1,14 +1,75 @@\n package org.fisco.bcos.web3j.protocol.core.methods.response;\n \n+import java.io.ByteArrayOutputStream;\n+import java.io.IOException;\n+import java.util.Base64;\n import java.util.List;\n-\n+import java.util.zip.DataFormatException;\n+import java.util.zip.Deflater;\n+import java.util.zip.Inflater;\n+import org.fisco.bcos.web3j.crypto.gm.sm2.util.Arrays;\n+import org.fisco.bcos.web3j.protocol.ObjectMapperFactory;\n import org.fisco.bcos.web3j.protocol.core.Response;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public class BlockTransactionReceipts extends Response<String> {\n+\n+    private static Logger logger = LoggerFactory.getLogger(BlockTransactionReceipts.class);\n+\n+    public byte[] compress(String data) {\n+\n+        Deflater compress = new Deflater();\n+\n+        compress.setInput(data.getBytes());\n+\n+        byte[] compressedData = new byte[data.length()];\n+        compress.finish();\n+\n+        int compressLength = compress.deflate(compressedData, 0, compressedData.length);\n+        return Arrays.copyOfRange(compressedData, 0, compressLength);\n+    }\n+\n+    public byte[] uncompress(byte[] compressedData) throws IOException, DataFormatException {\n \n-public class BlockTransactionReceipts\n-        extends Response<BlockTransactionReceipts.BlockTransactionReceiptsInfo> {\n+        Inflater decompressor = new Inflater();\n+        decompressor.setInput(compressedData);\n+\n+        try (ByteArrayOutputStream bos = new ByteArrayOutputStream(compressedData.length)) {\n+            byte[] buf = new byte[1024];\n+            while (!decompressor.finished()) {\n+                int count = decompressor.inflate(buf);\n+                bos.write(buf, 0, count);\n+            }\n+\n+            return bos.toByteArray();\n+        }\n+    }\n+\n+    public BlockTransactionReceiptsInfo getBlockTransactionReceipts()\n+            throws IOException, DataFormatException {\n+\n+        String base64Data = getResult();\n+        /** Base64 encoding data */\n+        byte[] zipData = Base64.getDecoder().decode(base64Data);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "af01e2de2468e1089a680cccdc2960c1e1b8e7ce"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTA4NTQ5Mg==", "bodyText": "[PMD Java] Potential violation of Law of Demeter (method chain calls) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/697#discussion_r471085492", "createdAt": "2020-08-16T08:50:25Z", "author": {"login": "sider"}, "path": "src/main/java/org/fisco/bcos/web3j/protocol/core/methods/response/BlockTransactionReceipts.java", "diffHunk": "@@ -1,14 +1,75 @@\n package org.fisco.bcos.web3j.protocol.core.methods.response;\n \n+import java.io.ByteArrayOutputStream;\n+import java.io.IOException;\n+import java.util.Base64;\n import java.util.List;\n-\n+import java.util.zip.DataFormatException;\n+import java.util.zip.Deflater;\n+import java.util.zip.Inflater;\n+import org.fisco.bcos.web3j.crypto.gm.sm2.util.Arrays;\n+import org.fisco.bcos.web3j.protocol.ObjectMapperFactory;\n import org.fisco.bcos.web3j.protocol.core.Response;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public class BlockTransactionReceipts extends Response<String> {\n+\n+    private static Logger logger = LoggerFactory.getLogger(BlockTransactionReceipts.class);\n+\n+    public byte[] compress(String data) {\n+\n+        Deflater compress = new Deflater();\n+\n+        compress.setInput(data.getBytes());\n+\n+        byte[] compressedData = new byte[data.length()];\n+        compress.finish();\n+\n+        int compressLength = compress.deflate(compressedData, 0, compressedData.length);\n+        return Arrays.copyOfRange(compressedData, 0, compressLength);\n+    }\n+\n+    public byte[] uncompress(byte[] compressedData) throws IOException, DataFormatException {\n \n-public class BlockTransactionReceipts\n-        extends Response<BlockTransactionReceipts.BlockTransactionReceiptsInfo> {\n+        Inflater decompressor = new Inflater();\n+        decompressor.setInput(compressedData);\n+\n+        try (ByteArrayOutputStream bos = new ByteArrayOutputStream(compressedData.length)) {\n+            byte[] buf = new byte[1024];\n+            while (!decompressor.finished()) {\n+                int count = decompressor.inflate(buf);\n+                bos.write(buf, 0, count);\n+            }\n+\n+            return bos.toByteArray();\n+        }\n+    }\n+\n+    public BlockTransactionReceiptsInfo getBlockTransactionReceipts()\n+            throws IOException, DataFormatException {\n+\n+        String base64Data = getResult();\n+        /** Base64 encoding data */\n+        byte[] zipData = Base64.getDecoder().decode(base64Data);\n+\n+        /** zip compression data */\n+        byte[] jsonData = uncompress(zipData);\n+\n+        BlockTransactionReceiptsInfo blockTransactionReceiptsInfo =\n+                ObjectMapperFactory.getObjectMapper()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "af01e2de2468e1089a680cccdc2960c1e1b8e7ce"}, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTA4NTQ5Mw==", "bodyText": "[PMD Java] System.out.println is used (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nSystemPrintln\nBest Practices\n2\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_bestpractices.html#systemprintln\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/697#discussion_r471085493", "createdAt": "2020-08-16T08:50:25Z", "author": {"login": "sider"}, "path": "src/test/java/org/fisco/bcos/channel/test/rpc/BlockTxReceipts.java", "diffHunk": "@@ -148,7 +151,7 @@ public static void main(String[] args) {\n                     }\n             }\n \n-            System.out.println(\" ## Result: \" + blockTransactionReceipts.getResult().toString());\n+            System.out.println(\" ## Result: \" + blockTransactionReceipts.getBlockTransactionReceipts());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "af01e2de2468e1089a680cccdc2960c1e1b8e7ce"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTA4NTQ5NA==", "bodyText": "[PMD Java] Potential violation of Law of Demeter (object not created locally) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/697#discussion_r471085494", "createdAt": "2020-08-16T08:50:25Z", "author": {"login": "sider"}, "path": "src/test/java/org/fisco/bcos/channel/test/rpc/BlockTxReceipts.java", "diffHunk": "@@ -148,7 +151,7 @@ public static void main(String[] args) {\n                     }\n             }\n \n-            System.out.println(\" ## Result: \" + blockTransactionReceipts.getResult().toString());\n+            System.out.println(\" ## Result: \" + blockTransactionReceipts.getBlockTransactionReceipts());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "af01e2de2468e1089a680cccdc2960c1e1b8e7ce"}, "originalPosition": 51}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1828, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}