{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMyMTUwMDMx", "number": 602, "reviewThreads": {"totalCount": 30, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQwMTo0MToyOVrOEEHI4g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQwMTo0MTozNVrOEEHJDg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNzQ2NzIyOnYy", "diffSide": "RIGHT", "path": "src/test/java/org/fisco/bcos/web3j/crypto/ECKeyPairTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQwMTo0MToyOVrOGhh-kA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQwMTo0MToyOVrOGhh-kA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzgxMjg4MA==", "bodyText": "[Misspell] \"encrpyt\" is a misspelling of \"encrypt\" (view)\n\n\n\n\nRule\nCorrect\nIncorrect\n\n\n\n\nencrypt\nencrypt\nencrpyt\n\n\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/602#discussion_r437812880", "createdAt": "2020-06-10T01:41:29Z", "author": {"login": "sider"}, "path": "src/test/java/org/fisco/bcos/web3j/crypto/ECKeyPairTest.java", "diffHunk": "@@ -0,0 +1,154 @@\n+package org.fisco.bcos.web3j.crypto;\n+\n+import static org.junit.Assert.assertEquals;\n+\n+import org.fisco.bcos.channel.client.P12Manager;\n+import org.fisco.bcos.web3j.crypto.gm.GenCredential;\n+import org.fisco.bcos.web3j.crypto.tool.ECCDecrypt;\n+import org.fisco.bcos.web3j.crypto.tool.ECCEncrypt;\n+import org.junit.Test;\n+import org.springframework.context.ApplicationContext;\n+import org.springframework.context.support.ClassPathXmlApplicationContext;\n+\n+public class ECKeyPairTest {\n+\n+    @Test\n+    public void encryptECKeyPairTest() throws Exception {\n+        ECKeyPair ecKeyPair = Keys.createEcKeyPair();\n+\n+        ECCEncrypt encrypt = new ECCEncrypt(ecKeyPair.getPublicKey());\n+        ECCDecrypt decrypt = new ECCDecrypt(ecKeyPair.getPrivateKey());\n+\n+        String message = \"ecc encrypt test\";\n+        byte[] encryptData = encrypt.encrypt(message.getBytes(\"utf-8\"));\n+        byte[] decryptData = decrypt.decrypt(encryptData);\n+\n+        String decrpptMessage = new String(decryptData, \"utf-8\");\n+        assertEquals(message, decrpptMessage);\n+    }\n+\n+    @Test\n+    public void encryptECKeyPairTestEmptyString() throws Exception {\n+        Credentials credentials = GenCredential.create();\n+        ECKeyPair ecKeyPair = credentials.getEcKeyPair();\n+\n+        ECCEncrypt encrypt = new ECCEncrypt(ecKeyPair.getPublicKey());\n+        ECCDecrypt decrypt = new ECCDecrypt(ecKeyPair.getPrivateKey());\n+\n+        String message = \"\";\n+        byte[] encryptData = encrypt.encrypt(message.getBytes(\"utf-8\"));\n+        byte[] decryptData = decrypt.decrypt(encryptData);\n+\n+        assertEquals(message, new String(decryptData, \"utf-8\"));\n+    }\n+\n+    @Test\n+    public void encryptECKeyPairTestWithPem() throws Exception {\n+        ApplicationContext context =\n+                new ClassPathXmlApplicationContext(\n+                        \"classpath:applicationContext-keystore-sample.xml\");\n+        // test p12\n+        P12Manager p12 = context.getBean(P12Manager.class);\n+\n+        ECKeyPair ecKeyPair = p12.getECKeyPair();\n+\n+        ECCEncrypt encrypt = new ECCEncrypt(ecKeyPair.getPublicKey());\n+        ECCDecrypt decrypt = new ECCDecrypt(ecKeyPair.getPrivateKey());\n+\n+        String message = \"\";\n+        byte[] encryptData = encrypt.encrypt(message.getBytes(\"utf-8\"));\n+        byte[] decryptData = decrypt.decrypt(encryptData);\n+\n+        assertEquals(message, new String(decryptData, \"utf-8\"));\n+    }\n+\n+    @Test\n+    public void verifyECKeyPairTest() throws Exception {\n+        ECKeyPair ecKeyPair = Keys.createEcKeyPair();\n+        String message = \"verify test\";\n+        ECDSASignature signature = ecKeyPair.sign(message.getBytes());\n+        boolean verify = ecKeyPair.verify(message.getBytes(), signature);\n+\n+        assertEquals(verify, true);\n+    }\n+\n+    @Test\n+    public void verifyECKeyPairTestEmptyString() throws Exception {\n+        ECKeyPair ecKeyPair = Keys.createEcKeyPair();\n+        String message = \"\";\n+        ECDSASignature signature = ecKeyPair.sign(message.getBytes());\n+        boolean verify = ecKeyPair.verify(message.getBytes(), signature);\n+\n+        assertEquals(verify, true);\n+    }\n+\n+    @Test\n+    public void verifyECKeyPairTestWithPem() throws Exception {\n+        ApplicationContext context =\n+                new ClassPathXmlApplicationContext(\n+                        \"classpath:applicationContext-keystore-sample.xml\");\n+        // test p12\n+        P12Manager p12 = context.getBean(P12Manager.class);\n+\n+        ECKeyPair ecKeyPair = p12.getECKeyPair();\n+\n+        String message = \"ecc encrpyt test\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a0cebbebdf0506870d568797e3904bc207862a47"}, "originalPosition": 95}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNzQ2NzI1OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/fisco/bcos/web3j/crypto/ECKeyPair.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQwMTo0MToyOVrOGhh-kg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQwMTo0MToyOVrOGhh-kg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzgxMjg4Mg==", "bodyText": "[PMD Java] Avoid unused private fields such as 'logger'. (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nUnusedPrivateField\nBest Practices\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.23.0/pmd_rules_java_bestpractices.html#unusedprivatefield\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/602#discussion_r437812882", "createdAt": "2020-06-10T01:41:29Z", "author": {"login": "sider"}, "path": "src/main/java/org/fisco/bcos/web3j/crypto/ECKeyPair.java", "diffHunk": "@@ -3,16 +3,23 @@\n import java.math.BigInteger;\n import java.security.KeyPair;\n import java.util.Arrays;\n+import java.util.Objects;\n import org.bouncycastle.crypto.digests.SHA256Digest;\n import org.bouncycastle.crypto.params.ECPrivateKeyParameters;\n+import org.bouncycastle.crypto.params.ECPublicKeyParameters;\n import org.bouncycastle.crypto.signers.ECDSASigner;\n import org.bouncycastle.crypto.signers.HMacDSAKCalculator;\n import org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPrivateKey;\n import org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPublicKey;\n import org.fisco.bcos.web3j.utils.Numeric;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n \n /** Elliptic Curve SECP-256k1 generated key pair. */\n public class ECKeyPair {\n+\n+    private static final Logger logger = LoggerFactory.getLogger(ECKeyPair.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a0cebbebdf0506870d568797e3904bc207862a47"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNzQ2NzI3OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/fisco/bcos/web3j/crypto/tool/ECCDecrypt.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQwMTo0MTozMFrOGhh-lA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQwMTo0MTozMFrOGhh-lA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzgxMjg4NA==", "bodyText": "[PMD Java] Found non-transient, non-static member. Please mark as transient or provide accessors. (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nBeanMembersShouldSerialize\nError Prone\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.23.0/pmd_rules_java_errorprone.html#beanmembersshouldserialize\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/602#discussion_r437812884", "createdAt": "2020-06-10T01:41:30Z", "author": {"login": "sider"}, "path": "src/main/java/org/fisco/bcos/web3j/crypto/tool/ECCDecrypt.java", "diffHunk": "@@ -0,0 +1,73 @@\n+package org.fisco.bcos.web3j.crypto.tool;\n+\n+import java.math.BigInteger;\n+import java.security.InvalidAlgorithmParameterException;\n+import java.security.InvalidKeyException;\n+import java.security.NoSuchAlgorithmException;\n+import java.security.NoSuchProviderException;\n+import java.security.spec.ECPrivateKeySpec;\n+import javax.crypto.BadPaddingException;\n+import javax.crypto.Cipher;\n+import javax.crypto.IllegalBlockSizeException;\n+import javax.crypto.NoSuchPaddingException;\n+import org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPrivateKey;\n+import org.bouncycastle.jce.provider.BouncyCastleProvider;\n+\n+/** ECC decrypt utils */\n+public class ECCDecrypt {\n+\n+    private final BigInteger priKey;\n+    private final BCECPrivateKey bCECPrivateKey;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a0cebbebdf0506870d568797e3904bc207862a47"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNzQ2NzI4OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/fisco/bcos/web3j/crypto/tool/ECCDecrypt.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQwMTo0MTozMFrOGhh-mQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQwMTo0MTozMFrOGhh-mQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzgxMjg4OQ==", "bodyText": "[PMD Java] Potential violation of Law of Demeter (object not created locally) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.23.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/602#discussion_r437812889", "createdAt": "2020-06-10T01:41:30Z", "author": {"login": "sider"}, "path": "src/main/java/org/fisco/bcos/web3j/crypto/tool/ECCDecrypt.java", "diffHunk": "@@ -0,0 +1,73 @@\n+package org.fisco.bcos.web3j.crypto.tool;\n+\n+import java.math.BigInteger;\n+import java.security.InvalidAlgorithmParameterException;\n+import java.security.InvalidKeyException;\n+import java.security.NoSuchAlgorithmException;\n+import java.security.NoSuchProviderException;\n+import java.security.spec.ECPrivateKeySpec;\n+import javax.crypto.BadPaddingException;\n+import javax.crypto.Cipher;\n+import javax.crypto.IllegalBlockSizeException;\n+import javax.crypto.NoSuchPaddingException;\n+import org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPrivateKey;\n+import org.bouncycastle.jce.provider.BouncyCastleProvider;\n+\n+/** ECC decrypt utils */\n+public class ECCDecrypt {\n+\n+    private final BigInteger priKey;\n+    private final BCECPrivateKey bCECPrivateKey;\n+\n+    public ECCDecrypt(BigInteger privateKey) {\n+        this.priKey = privateKey;\n+        this.bCECPrivateKey = createBCECPrivateKey(privateKey);\n+    }\n+\n+    public BigInteger getPriKey() {\n+        return priKey;\n+    }\n+\n+    public BCECPrivateKey getbCECPrivateKey() {\n+        return bCECPrivateKey;\n+    }\n+\n+    /**\n+     * create BCECPrivateKey from privateKey\n+     *\n+     * @param privateKey\n+     * @return\n+     */\n+    private BCECPrivateKey createBCECPrivateKey(BigInteger privateKey) {\n+        // Handle secret key\n+        ECPrivateKeySpec secretKeySpec =\n+                new ECPrivateKeySpec(privateKey, ECCParams.ecNamedCurveSpec);\n+        BCECPrivateKey bcecPrivateKey =\n+                new BCECPrivateKey(\"ECDSA\", secretKeySpec, BouncyCastleProvider.CONFIGURATION);\n+        return bcecPrivateKey;\n+    }\n+\n+    /**\n+     * Decrypt the data which encryt by ECC\n+     *\n+     * @param data\n+     * @return\n+     * @throws NoSuchPaddingException\n+     * @throws NoSuchAlgorithmException\n+     * @throws NoSuchProviderException\n+     * @throws InvalidAlgorithmParameterException\n+     * @throws InvalidKeyException\n+     * @throws BadPaddingException\n+     * @throws IllegalBlockSizeException\n+     */\n+    public byte[] decrypt(byte[] data)\n+            throws NoSuchPaddingException, NoSuchAlgorithmException, NoSuchProviderException,\n+                    InvalidAlgorithmParameterException, InvalidKeyException, BadPaddingException,\n+                    IllegalBlockSizeException {\n+\n+        Cipher cipher = Cipher.getInstance(\"ECIES\", \"BC\");\n+        cipher.init(Cipher.DECRYPT_MODE, getbCECPrivateKey(), ECCParams.IES_PARAMS);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a0cebbebdf0506870d568797e3904bc207862a47"}, "originalPosition": 69}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNzQ2NzMwOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/fisco/bcos/web3j/crypto/tool/ECCDecrypt.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQwMTo0MTozMFrOGhh-mw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQwMTo0MTozMFrOGhh-mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzgxMjg5MQ==", "bodyText": "[PMD Java] Potential violation of Law of Demeter (object not created locally) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.23.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/602#discussion_r437812891", "createdAt": "2020-06-10T01:41:30Z", "author": {"login": "sider"}, "path": "src/main/java/org/fisco/bcos/web3j/crypto/tool/ECCDecrypt.java", "diffHunk": "@@ -0,0 +1,73 @@\n+package org.fisco.bcos.web3j.crypto.tool;\n+\n+import java.math.BigInteger;\n+import java.security.InvalidAlgorithmParameterException;\n+import java.security.InvalidKeyException;\n+import java.security.NoSuchAlgorithmException;\n+import java.security.NoSuchProviderException;\n+import java.security.spec.ECPrivateKeySpec;\n+import javax.crypto.BadPaddingException;\n+import javax.crypto.Cipher;\n+import javax.crypto.IllegalBlockSizeException;\n+import javax.crypto.NoSuchPaddingException;\n+import org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPrivateKey;\n+import org.bouncycastle.jce.provider.BouncyCastleProvider;\n+\n+/** ECC decrypt utils */\n+public class ECCDecrypt {\n+\n+    private final BigInteger priKey;\n+    private final BCECPrivateKey bCECPrivateKey;\n+\n+    public ECCDecrypt(BigInteger privateKey) {\n+        this.priKey = privateKey;\n+        this.bCECPrivateKey = createBCECPrivateKey(privateKey);\n+    }\n+\n+    public BigInteger getPriKey() {\n+        return priKey;\n+    }\n+\n+    public BCECPrivateKey getbCECPrivateKey() {\n+        return bCECPrivateKey;\n+    }\n+\n+    /**\n+     * create BCECPrivateKey from privateKey\n+     *\n+     * @param privateKey\n+     * @return\n+     */\n+    private BCECPrivateKey createBCECPrivateKey(BigInteger privateKey) {\n+        // Handle secret key\n+        ECPrivateKeySpec secretKeySpec =\n+                new ECPrivateKeySpec(privateKey, ECCParams.ecNamedCurveSpec);\n+        BCECPrivateKey bcecPrivateKey =\n+                new BCECPrivateKey(\"ECDSA\", secretKeySpec, BouncyCastleProvider.CONFIGURATION);\n+        return bcecPrivateKey;\n+    }\n+\n+    /**\n+     * Decrypt the data which encryt by ECC\n+     *\n+     * @param data\n+     * @return\n+     * @throws NoSuchPaddingException\n+     * @throws NoSuchAlgorithmException\n+     * @throws NoSuchProviderException\n+     * @throws InvalidAlgorithmParameterException\n+     * @throws InvalidKeyException\n+     * @throws BadPaddingException\n+     * @throws IllegalBlockSizeException\n+     */\n+    public byte[] decrypt(byte[] data)\n+            throws NoSuchPaddingException, NoSuchAlgorithmException, NoSuchProviderException,\n+                    InvalidAlgorithmParameterException, InvalidKeyException, BadPaddingException,\n+                    IllegalBlockSizeException {\n+\n+        Cipher cipher = Cipher.getInstance(\"ECIES\", \"BC\");\n+        cipher.init(Cipher.DECRYPT_MODE, getbCECPrivateKey(), ECCParams.IES_PARAMS);\n+\n+        return cipher.doFinal(data);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a0cebbebdf0506870d568797e3904bc207862a47"}, "originalPosition": 71}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNzQ2NzMxOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/fisco/bcos/web3j/crypto/tool/ECCEncrypt.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQwMTo0MTozMFrOGhh-nQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQwMTo0MTozMFrOGhh-nQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzgxMjg5Mw==", "bodyText": "[PMD Java] Found non-transient, non-static member. Please mark as transient or provide accessors. (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nBeanMembersShouldSerialize\nError Prone\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.23.0/pmd_rules_java_errorprone.html#beanmembersshouldserialize\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/602#discussion_r437812893", "createdAt": "2020-06-10T01:41:30Z", "author": {"login": "sider"}, "path": "src/main/java/org/fisco/bcos/web3j/crypto/tool/ECCEncrypt.java", "diffHunk": "@@ -0,0 +1,101 @@\n+package org.fisco.bcos.web3j.crypto.tool;\n+\n+import java.math.BigInteger;\n+import java.security.InvalidAlgorithmParameterException;\n+import java.security.InvalidKeyException;\n+import java.security.NoSuchAlgorithmException;\n+import java.security.NoSuchProviderException;\n+import javax.crypto.BadPaddingException;\n+import javax.crypto.Cipher;\n+import javax.crypto.IllegalBlockSizeException;\n+import javax.crypto.NoSuchPaddingException;\n+import org.bouncycastle.crypto.params.ECDomainParameters;\n+import org.bouncycastle.crypto.params.ECPublicKeyParameters;\n+import org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPublicKey;\n+import org.bouncycastle.jce.provider.BouncyCastleProvider;\n+import org.bouncycastle.math.ec.custom.sec.SecP256K1Curve;\n+import org.bouncycastle.math.ec.custom.sec.SecP256K1Point;\n+import org.fisco.bcos.web3j.crypto.Keys;\n+import org.fisco.bcos.web3j.utils.Numeric;\n+\n+/** ECC encrpt utils */\n+public class ECCEncrypt {\n+\n+    private final BigInteger pubKey;\n+    private final BCECPublicKey bCECPublicKey;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a0cebbebdf0506870d568797e3904bc207862a47"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNzQ2NzM0OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/fisco/bcos/web3j/crypto/tool/ECCEncrypt.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQwMTo0MTozMVrOGhh-nw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQwMTo0MTozMVrOGhh-nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzgxMjg5NQ==", "bodyText": "[PMD Java] Potential violation of Law of Demeter (object not created locally) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.23.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/602#discussion_r437812895", "createdAt": "2020-06-10T01:41:31Z", "author": {"login": "sider"}, "path": "src/main/java/org/fisco/bcos/web3j/crypto/tool/ECCEncrypt.java", "diffHunk": "@@ -0,0 +1,101 @@\n+package org.fisco.bcos.web3j.crypto.tool;\n+\n+import java.math.BigInteger;\n+import java.security.InvalidAlgorithmParameterException;\n+import java.security.InvalidKeyException;\n+import java.security.NoSuchAlgorithmException;\n+import java.security.NoSuchProviderException;\n+import javax.crypto.BadPaddingException;\n+import javax.crypto.Cipher;\n+import javax.crypto.IllegalBlockSizeException;\n+import javax.crypto.NoSuchPaddingException;\n+import org.bouncycastle.crypto.params.ECDomainParameters;\n+import org.bouncycastle.crypto.params.ECPublicKeyParameters;\n+import org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPublicKey;\n+import org.bouncycastle.jce.provider.BouncyCastleProvider;\n+import org.bouncycastle.math.ec.custom.sec.SecP256K1Curve;\n+import org.bouncycastle.math.ec.custom.sec.SecP256K1Point;\n+import org.fisco.bcos.web3j.crypto.Keys;\n+import org.fisco.bcos.web3j.utils.Numeric;\n+\n+/** ECC encrpt utils */\n+public class ECCEncrypt {\n+\n+    private final BigInteger pubKey;\n+    private final BCECPublicKey bCECPublicKey;\n+\n+    public ECCEncrypt(BigInteger pubKey) {\n+        this.pubKey = pubKey;\n+        this.bCECPublicKey = createBCECPublicKey(pubKey);\n+    }\n+\n+    public BigInteger getPubKey() {\n+        return pubKey;\n+    }\n+\n+    public BCECPublicKey getbCECPublicKey() {\n+        return bCECPublicKey;\n+    }\n+\n+    /**\n+     * create BCECPublicKey from publicKey and privateKey\n+     *\n+     * @param publicKey\n+     * @return\n+     */\n+    private BCECPublicKey createBCECPublicKey(BigInteger publicKey) {\n+        // Handle public key.\n+        String publicKeyValue =\n+                Numeric.toHexStringNoPrefixZeroPadded(publicKey, Keys.PUBLIC_KEY_LENGTH_IN_HEX);\n+        String prePublicKeyStr = publicKeyValue.substring(0, 64);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a0cebbebdf0506870d568797e3904bc207862a47"}, "originalPosition": 50}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNzQ2NzM2OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/fisco/bcos/web3j/crypto/tool/ECCEncrypt.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQwMTo0MTozMVrOGhh-oQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQwMTo0MTozMVrOGhh-oQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzgxMjg5Nw==", "bodyText": "[PMD Java] Potential violation of Law of Demeter (object not created locally) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.23.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/602#discussion_r437812897", "createdAt": "2020-06-10T01:41:31Z", "author": {"login": "sider"}, "path": "src/main/java/org/fisco/bcos/web3j/crypto/tool/ECCEncrypt.java", "diffHunk": "@@ -0,0 +1,101 @@\n+package org.fisco.bcos.web3j.crypto.tool;\n+\n+import java.math.BigInteger;\n+import java.security.InvalidAlgorithmParameterException;\n+import java.security.InvalidKeyException;\n+import java.security.NoSuchAlgorithmException;\n+import java.security.NoSuchProviderException;\n+import javax.crypto.BadPaddingException;\n+import javax.crypto.Cipher;\n+import javax.crypto.IllegalBlockSizeException;\n+import javax.crypto.NoSuchPaddingException;\n+import org.bouncycastle.crypto.params.ECDomainParameters;\n+import org.bouncycastle.crypto.params.ECPublicKeyParameters;\n+import org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPublicKey;\n+import org.bouncycastle.jce.provider.BouncyCastleProvider;\n+import org.bouncycastle.math.ec.custom.sec.SecP256K1Curve;\n+import org.bouncycastle.math.ec.custom.sec.SecP256K1Point;\n+import org.fisco.bcos.web3j.crypto.Keys;\n+import org.fisco.bcos.web3j.utils.Numeric;\n+\n+/** ECC encrpt utils */\n+public class ECCEncrypt {\n+\n+    private final BigInteger pubKey;\n+    private final BCECPublicKey bCECPublicKey;\n+\n+    public ECCEncrypt(BigInteger pubKey) {\n+        this.pubKey = pubKey;\n+        this.bCECPublicKey = createBCECPublicKey(pubKey);\n+    }\n+\n+    public BigInteger getPubKey() {\n+        return pubKey;\n+    }\n+\n+    public BCECPublicKey getbCECPublicKey() {\n+        return bCECPublicKey;\n+    }\n+\n+    /**\n+     * create BCECPublicKey from publicKey and privateKey\n+     *\n+     * @param publicKey\n+     * @return\n+     */\n+    private BCECPublicKey createBCECPublicKey(BigInteger publicKey) {\n+        // Handle public key.\n+        String publicKeyValue =\n+                Numeric.toHexStringNoPrefixZeroPadded(publicKey, Keys.PUBLIC_KEY_LENGTH_IN_HEX);\n+        String prePublicKeyStr = publicKeyValue.substring(0, 64);\n+        String postPublicKeyStr = publicKeyValue.substring(64);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a0cebbebdf0506870d568797e3904bc207862a47"}, "originalPosition": 51}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNzQ2NzM3OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/fisco/bcos/web3j/crypto/tool/ECCEncrypt.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQwMTo0MTozMVrOGhh-ow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQwMTo0MTozMVrOGhh-ow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzgxMjg5OQ==", "bodyText": "[PMD Java] Potential violation of Law of Demeter (object not created locally) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.23.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/602#discussion_r437812899", "createdAt": "2020-06-10T01:41:31Z", "author": {"login": "sider"}, "path": "src/main/java/org/fisco/bcos/web3j/crypto/tool/ECCEncrypt.java", "diffHunk": "@@ -0,0 +1,101 @@\n+package org.fisco.bcos.web3j.crypto.tool;\n+\n+import java.math.BigInteger;\n+import java.security.InvalidAlgorithmParameterException;\n+import java.security.InvalidKeyException;\n+import java.security.NoSuchAlgorithmException;\n+import java.security.NoSuchProviderException;\n+import javax.crypto.BadPaddingException;\n+import javax.crypto.Cipher;\n+import javax.crypto.IllegalBlockSizeException;\n+import javax.crypto.NoSuchPaddingException;\n+import org.bouncycastle.crypto.params.ECDomainParameters;\n+import org.bouncycastle.crypto.params.ECPublicKeyParameters;\n+import org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPublicKey;\n+import org.bouncycastle.jce.provider.BouncyCastleProvider;\n+import org.bouncycastle.math.ec.custom.sec.SecP256K1Curve;\n+import org.bouncycastle.math.ec.custom.sec.SecP256K1Point;\n+import org.fisco.bcos.web3j.crypto.Keys;\n+import org.fisco.bcos.web3j.utils.Numeric;\n+\n+/** ECC encrpt utils */\n+public class ECCEncrypt {\n+\n+    private final BigInteger pubKey;\n+    private final BCECPublicKey bCECPublicKey;\n+\n+    public ECCEncrypt(BigInteger pubKey) {\n+        this.pubKey = pubKey;\n+        this.bCECPublicKey = createBCECPublicKey(pubKey);\n+    }\n+\n+    public BigInteger getPubKey() {\n+        return pubKey;\n+    }\n+\n+    public BCECPublicKey getbCECPublicKey() {\n+        return bCECPublicKey;\n+    }\n+\n+    /**\n+     * create BCECPublicKey from publicKey and privateKey\n+     *\n+     * @param publicKey\n+     * @return\n+     */\n+    private BCECPublicKey createBCECPublicKey(BigInteger publicKey) {\n+        // Handle public key.\n+        String publicKeyValue =\n+                Numeric.toHexStringNoPrefixZeroPadded(publicKey, Keys.PUBLIC_KEY_LENGTH_IN_HEX);\n+        String prePublicKeyStr = publicKeyValue.substring(0, 64);\n+        String postPublicKeyStr = publicKeyValue.substring(64);\n+        SecP256K1Curve secP256K1Curve = new SecP256K1Curve();\n+        SecP256K1Point secP256K1Point =\n+                (SecP256K1Point)\n+                        secP256K1Curve.createPoint(\n+                                new BigInteger(prePublicKeyStr, 16),\n+                                new BigInteger(postPublicKeyStr, 16));\n+        SecP256K1Point secP256K1PointG =\n+                (SecP256K1Point)\n+                        secP256K1Curve.createPoint(ECCParams.POINTG_PRE, ECCParams.POINTG_POST);\n+\n+        ECDomainParameters domainParameters =\n+                new ECDomainParameters(secP256K1Curve, secP256K1PointG, ECCParams.FACTOR_N);\n+        ECPublicKeyParameters publicKeyParameters =\n+                new ECPublicKeyParameters(secP256K1Point, domainParameters);\n+\n+        BCECPublicKey bcecPublicKey =\n+                new BCECPublicKey(\n+                        \"ECDSA\",\n+                        publicKeyParameters,\n+                        ECCParams.ecNamedCurveSpec,\n+                        BouncyCastleProvider.CONFIGURATION);\n+\n+        return bcecPublicKey;\n+    }\n+\n+    /**\n+     * Encrypt the data with ECC algorithm\n+     *\n+     * @param data\n+     * @return\n+     * @throws NoSuchPaddingException\n+     * @throws NoSuchAlgorithmException\n+     * @throws NoSuchProviderException\n+     * @throws BadPaddingException\n+     * @throws IllegalBlockSizeException\n+     * @throws InvalidAlgorithmParameterException\n+     * @throws InvalidKeyException\n+     */\n+    public byte[] encrypt(byte[] data)\n+            throws NoSuchPaddingException, NoSuchAlgorithmException, NoSuchProviderException,\n+                    BadPaddingException, IllegalBlockSizeException,\n+                    InvalidAlgorithmParameterException, InvalidKeyException {\n+\n+        // Encrypt data.\n+        Cipher cipher = Cipher.getInstance(\" ECIES\", \"BC\");\n+        cipher.init(Cipher.ENCRYPT_MODE, getbCECPublicKey(), ECCParams.IES_PARAMS);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a0cebbebdf0506870d568797e3904bc207862a47"}, "originalPosition": 97}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNzQ2NzM4OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/fisco/bcos/web3j/crypto/tool/ECCEncrypt.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQwMTo0MTozMVrOGhh-pA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQwMTo0MTozMVrOGhh-pA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzgxMjkwMA==", "bodyText": "[PMD Java] Potential violation of Law of Demeter (object not created locally) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.23.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/602#discussion_r437812900", "createdAt": "2020-06-10T01:41:31Z", "author": {"login": "sider"}, "path": "src/main/java/org/fisco/bcos/web3j/crypto/tool/ECCEncrypt.java", "diffHunk": "@@ -0,0 +1,101 @@\n+package org.fisco.bcos.web3j.crypto.tool;\n+\n+import java.math.BigInteger;\n+import java.security.InvalidAlgorithmParameterException;\n+import java.security.InvalidKeyException;\n+import java.security.NoSuchAlgorithmException;\n+import java.security.NoSuchProviderException;\n+import javax.crypto.BadPaddingException;\n+import javax.crypto.Cipher;\n+import javax.crypto.IllegalBlockSizeException;\n+import javax.crypto.NoSuchPaddingException;\n+import org.bouncycastle.crypto.params.ECDomainParameters;\n+import org.bouncycastle.crypto.params.ECPublicKeyParameters;\n+import org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPublicKey;\n+import org.bouncycastle.jce.provider.BouncyCastleProvider;\n+import org.bouncycastle.math.ec.custom.sec.SecP256K1Curve;\n+import org.bouncycastle.math.ec.custom.sec.SecP256K1Point;\n+import org.fisco.bcos.web3j.crypto.Keys;\n+import org.fisco.bcos.web3j.utils.Numeric;\n+\n+/** ECC encrpt utils */\n+public class ECCEncrypt {\n+\n+    private final BigInteger pubKey;\n+    private final BCECPublicKey bCECPublicKey;\n+\n+    public ECCEncrypt(BigInteger pubKey) {\n+        this.pubKey = pubKey;\n+        this.bCECPublicKey = createBCECPublicKey(pubKey);\n+    }\n+\n+    public BigInteger getPubKey() {\n+        return pubKey;\n+    }\n+\n+    public BCECPublicKey getbCECPublicKey() {\n+        return bCECPublicKey;\n+    }\n+\n+    /**\n+     * create BCECPublicKey from publicKey and privateKey\n+     *\n+     * @param publicKey\n+     * @return\n+     */\n+    private BCECPublicKey createBCECPublicKey(BigInteger publicKey) {\n+        // Handle public key.\n+        String publicKeyValue =\n+                Numeric.toHexStringNoPrefixZeroPadded(publicKey, Keys.PUBLIC_KEY_LENGTH_IN_HEX);\n+        String prePublicKeyStr = publicKeyValue.substring(0, 64);\n+        String postPublicKeyStr = publicKeyValue.substring(64);\n+        SecP256K1Curve secP256K1Curve = new SecP256K1Curve();\n+        SecP256K1Point secP256K1Point =\n+                (SecP256K1Point)\n+                        secP256K1Curve.createPoint(\n+                                new BigInteger(prePublicKeyStr, 16),\n+                                new BigInteger(postPublicKeyStr, 16));\n+        SecP256K1Point secP256K1PointG =\n+                (SecP256K1Point)\n+                        secP256K1Curve.createPoint(ECCParams.POINTG_PRE, ECCParams.POINTG_POST);\n+\n+        ECDomainParameters domainParameters =\n+                new ECDomainParameters(secP256K1Curve, secP256K1PointG, ECCParams.FACTOR_N);\n+        ECPublicKeyParameters publicKeyParameters =\n+                new ECPublicKeyParameters(secP256K1Point, domainParameters);\n+\n+        BCECPublicKey bcecPublicKey =\n+                new BCECPublicKey(\n+                        \"ECDSA\",\n+                        publicKeyParameters,\n+                        ECCParams.ecNamedCurveSpec,\n+                        BouncyCastleProvider.CONFIGURATION);\n+\n+        return bcecPublicKey;\n+    }\n+\n+    /**\n+     * Encrypt the data with ECC algorithm\n+     *\n+     * @param data\n+     * @return\n+     * @throws NoSuchPaddingException\n+     * @throws NoSuchAlgorithmException\n+     * @throws NoSuchProviderException\n+     * @throws BadPaddingException\n+     * @throws IllegalBlockSizeException\n+     * @throws InvalidAlgorithmParameterException\n+     * @throws InvalidKeyException\n+     */\n+    public byte[] encrypt(byte[] data)\n+            throws NoSuchPaddingException, NoSuchAlgorithmException, NoSuchProviderException,\n+                    BadPaddingException, IllegalBlockSizeException,\n+                    InvalidAlgorithmParameterException, InvalidKeyException {\n+\n+        // Encrypt data.\n+        Cipher cipher = Cipher.getInstance(\" ECIES\", \"BC\");\n+        cipher.init(Cipher.ENCRYPT_MODE, getbCECPublicKey(), ECCParams.IES_PARAMS);\n+\n+        return cipher.doFinal(data);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a0cebbebdf0506870d568797e3904bc207862a47"}, "originalPosition": 99}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNzQ2NzM5OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/fisco/bcos/web3j/crypto/tool/ECCParams.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQwMTo0MTozMVrOGhh-pQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQwMTo0MTozMVrOGhh-pQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzgxMjkwMQ==", "bodyText": "[PMD Java] Dont create instances of already existing BigInteger and BigDecimal (ZERO, ONE, TEN) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nBigIntegerInstantiation\nPerformance\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.23.0/pmd_rules_java_performance.html#bigintegerinstantiation\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/602#discussion_r437812901", "createdAt": "2020-06-10T01:41:31Z", "author": {"login": "sider"}, "path": "src/main/java/org/fisco/bcos/web3j/crypto/tool/ECCParams.java", "diffHunk": "@@ -0,0 +1,28 @@\n+package org.fisco.bcos.web3j.crypto.tool;\n+\n+import java.math.BigInteger;\n+import java.security.spec.ECFieldFp;\n+import java.security.spec.ECPoint;\n+import java.security.spec.EllipticCurve;\n+import org.bouncycastle.jce.spec.ECNamedCurveSpec;\n+import org.bouncycastle.jce.spec.IESParameterSpec;\n+\n+public final class ECCParams {\n+\n+    // ECDSA secp256k1 algorithm constants\n+    public static final BigInteger POINTG_PRE =\n+            new BigInteger(\"79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798\", 16);\n+    public static final BigInteger POINTG_POST =\n+            new BigInteger(\"483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8\", 16);\n+    public static final BigInteger FACTOR_N =\n+            new BigInteger(\"fffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141\", 16);\n+    public static final BigInteger FIELD_P =\n+            new BigInteger(\"fffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f\", 16);\n+    public static final EllipticCurve ellipticCurve =\n+            new EllipticCurve(new ECFieldFp(FIELD_P), new BigInteger(\"0\"), new BigInteger(\"7\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a0cebbebdf0506870d568797e3904bc207862a47"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNzQ2NzQxOnYy", "diffSide": "RIGHT", "path": "src/test/java/org/fisco/bcos/web3j/crypto/ECKeyPairTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQwMTo0MTozMlrOGhh-pw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQwMTo0MTozMlrOGhh-pw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzgxMjkwMw==", "bodyText": "[PMD Java] A method/constructor should not explicitly throw java.lang.Exception (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nSignatureDeclareThrowsException\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.23.0/pmd_rules_java_design.html#signaturedeclarethrowsexception\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/602#discussion_r437812903", "createdAt": "2020-06-10T01:41:32Z", "author": {"login": "sider"}, "path": "src/test/java/org/fisco/bcos/web3j/crypto/ECKeyPairTest.java", "diffHunk": "@@ -0,0 +1,154 @@\n+package org.fisco.bcos.web3j.crypto;\n+\n+import static org.junit.Assert.assertEquals;\n+\n+import org.fisco.bcos.channel.client.P12Manager;\n+import org.fisco.bcos.web3j.crypto.gm.GenCredential;\n+import org.fisco.bcos.web3j.crypto.tool.ECCDecrypt;\n+import org.fisco.bcos.web3j.crypto.tool.ECCEncrypt;\n+import org.junit.Test;\n+import org.springframework.context.ApplicationContext;\n+import org.springframework.context.support.ClassPathXmlApplicationContext;\n+\n+public class ECKeyPairTest {\n+\n+    @Test\n+    public void encryptECKeyPairTest() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a0cebbebdf0506870d568797e3904bc207862a47"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNzQ2NzQ0OnYy", "diffSide": "RIGHT", "path": "src/test/java/org/fisco/bcos/web3j/crypto/ECKeyPairTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQwMTo0MTozMlrOGhh-qg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQwMTo0MTozMlrOGhh-qg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzgxMjkwNg==", "bodyText": "[PMD Java] Potential violation of Law of Demeter (object not created locally) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.23.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/602#discussion_r437812906", "createdAt": "2020-06-10T01:41:32Z", "author": {"login": "sider"}, "path": "src/test/java/org/fisco/bcos/web3j/crypto/ECKeyPairTest.java", "diffHunk": "@@ -0,0 +1,154 @@\n+package org.fisco.bcos.web3j.crypto;\n+\n+import static org.junit.Assert.assertEquals;\n+\n+import org.fisco.bcos.channel.client.P12Manager;\n+import org.fisco.bcos.web3j.crypto.gm.GenCredential;\n+import org.fisco.bcos.web3j.crypto.tool.ECCDecrypt;\n+import org.fisco.bcos.web3j.crypto.tool.ECCEncrypt;\n+import org.junit.Test;\n+import org.springframework.context.ApplicationContext;\n+import org.springframework.context.support.ClassPathXmlApplicationContext;\n+\n+public class ECKeyPairTest {\n+\n+    @Test\n+    public void encryptECKeyPairTest() throws Exception {\n+        ECKeyPair ecKeyPair = Keys.createEcKeyPair();\n+\n+        ECCEncrypt encrypt = new ECCEncrypt(ecKeyPair.getPublicKey());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a0cebbebdf0506870d568797e3904bc207862a47"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNzQ2NzQ1OnYy", "diffSide": "RIGHT", "path": "src/test/java/org/fisco/bcos/web3j/crypto/ECKeyPairTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQwMTo0MTozMlrOGhh-qw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQwMTo0MTozMlrOGhh-qw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzgxMjkwNw==", "bodyText": "[PMD Java] Potential violation of Law of Demeter (object not created locally) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.23.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/602#discussion_r437812907", "createdAt": "2020-06-10T01:41:32Z", "author": {"login": "sider"}, "path": "src/test/java/org/fisco/bcos/web3j/crypto/ECKeyPairTest.java", "diffHunk": "@@ -0,0 +1,154 @@\n+package org.fisco.bcos.web3j.crypto;\n+\n+import static org.junit.Assert.assertEquals;\n+\n+import org.fisco.bcos.channel.client.P12Manager;\n+import org.fisco.bcos.web3j.crypto.gm.GenCredential;\n+import org.fisco.bcos.web3j.crypto.tool.ECCDecrypt;\n+import org.fisco.bcos.web3j.crypto.tool.ECCEncrypt;\n+import org.junit.Test;\n+import org.springframework.context.ApplicationContext;\n+import org.springframework.context.support.ClassPathXmlApplicationContext;\n+\n+public class ECKeyPairTest {\n+\n+    @Test\n+    public void encryptECKeyPairTest() throws Exception {\n+        ECKeyPair ecKeyPair = Keys.createEcKeyPair();\n+\n+        ECCEncrypt encrypt = new ECCEncrypt(ecKeyPair.getPublicKey());\n+        ECCDecrypt decrypt = new ECCDecrypt(ecKeyPair.getPrivateKey());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a0cebbebdf0506870d568797e3904bc207862a47"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNzQ2NzQ2OnYy", "diffSide": "RIGHT", "path": "src/test/java/org/fisco/bcos/web3j/crypto/ECKeyPairTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQwMTo0MTozMlrOGhh-rA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQwMTo0MTozMlrOGhh-rA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzgxMjkwOA==", "bodyText": "[PMD Java] Potential violation of Law of Demeter (object not created locally) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.23.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/602#discussion_r437812908", "createdAt": "2020-06-10T01:41:32Z", "author": {"login": "sider"}, "path": "src/test/java/org/fisco/bcos/web3j/crypto/ECKeyPairTest.java", "diffHunk": "@@ -0,0 +1,154 @@\n+package org.fisco.bcos.web3j.crypto;\n+\n+import static org.junit.Assert.assertEquals;\n+\n+import org.fisco.bcos.channel.client.P12Manager;\n+import org.fisco.bcos.web3j.crypto.gm.GenCredential;\n+import org.fisco.bcos.web3j.crypto.tool.ECCDecrypt;\n+import org.fisco.bcos.web3j.crypto.tool.ECCEncrypt;\n+import org.junit.Test;\n+import org.springframework.context.ApplicationContext;\n+import org.springframework.context.support.ClassPathXmlApplicationContext;\n+\n+public class ECKeyPairTest {\n+\n+    @Test\n+    public void encryptECKeyPairTest() throws Exception {\n+        ECKeyPair ecKeyPair = Keys.createEcKeyPair();\n+\n+        ECCEncrypt encrypt = new ECCEncrypt(ecKeyPair.getPublicKey());\n+        ECCDecrypt decrypt = new ECCDecrypt(ecKeyPair.getPrivateKey());\n+\n+        String message = \"ecc encrypt test\";\n+        byte[] encryptData = encrypt.encrypt(message.getBytes(\"utf-8\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a0cebbebdf0506870d568797e3904bc207862a47"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNzQ2NzQ3OnYy", "diffSide": "RIGHT", "path": "src/test/java/org/fisco/bcos/web3j/crypto/ECKeyPairTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQwMTo0MTozMlrOGhh-rQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQwMTo0MTozMlrOGhh-rQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzgxMjkwOQ==", "bodyText": "[PMD Java] The String literal \"utf-8\" appears 6 times in this file; the first occurrence is on line 23 (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nAvoidDuplicateLiterals\nError Prone\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.23.0/pmd_rules_java_errorprone.html#avoidduplicateliterals\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/602#discussion_r437812909", "createdAt": "2020-06-10T01:41:32Z", "author": {"login": "sider"}, "path": "src/test/java/org/fisco/bcos/web3j/crypto/ECKeyPairTest.java", "diffHunk": "@@ -0,0 +1,154 @@\n+package org.fisco.bcos.web3j.crypto;\n+\n+import static org.junit.Assert.assertEquals;\n+\n+import org.fisco.bcos.channel.client.P12Manager;\n+import org.fisco.bcos.web3j.crypto.gm.GenCredential;\n+import org.fisco.bcos.web3j.crypto.tool.ECCDecrypt;\n+import org.fisco.bcos.web3j.crypto.tool.ECCEncrypt;\n+import org.junit.Test;\n+import org.springframework.context.ApplicationContext;\n+import org.springframework.context.support.ClassPathXmlApplicationContext;\n+\n+public class ECKeyPairTest {\n+\n+    @Test\n+    public void encryptECKeyPairTest() throws Exception {\n+        ECKeyPair ecKeyPair = Keys.createEcKeyPair();\n+\n+        ECCEncrypt encrypt = new ECCEncrypt(ecKeyPair.getPublicKey());\n+        ECCDecrypt decrypt = new ECCDecrypt(ecKeyPair.getPrivateKey());\n+\n+        String message = \"ecc encrypt test\";\n+        byte[] encryptData = encrypt.encrypt(message.getBytes(\"utf-8\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a0cebbebdf0506870d568797e3904bc207862a47"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNzQ2NzQ5OnYy", "diffSide": "RIGHT", "path": "src/test/java/org/fisco/bcos/web3j/crypto/ECKeyPairTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQwMTo0MTozMlrOGhh-rw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQwMTo0MTozMlrOGhh-rw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzgxMjkxMQ==", "bodyText": "[PMD Java] JUnit assertions should include a message (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nJUnitAssertionsShouldIncludeMessage\nBest Practices\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.23.0/pmd_rules_java_bestpractices.html#junitassertionsshouldincludemessage\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/602#discussion_r437812911", "createdAt": "2020-06-10T01:41:32Z", "author": {"login": "sider"}, "path": "src/test/java/org/fisco/bcos/web3j/crypto/ECKeyPairTest.java", "diffHunk": "@@ -0,0 +1,154 @@\n+package org.fisco.bcos.web3j.crypto;\n+\n+import static org.junit.Assert.assertEquals;\n+\n+import org.fisco.bcos.channel.client.P12Manager;\n+import org.fisco.bcos.web3j.crypto.gm.GenCredential;\n+import org.fisco.bcos.web3j.crypto.tool.ECCDecrypt;\n+import org.fisco.bcos.web3j.crypto.tool.ECCEncrypt;\n+import org.junit.Test;\n+import org.springframework.context.ApplicationContext;\n+import org.springframework.context.support.ClassPathXmlApplicationContext;\n+\n+public class ECKeyPairTest {\n+\n+    @Test\n+    public void encryptECKeyPairTest() throws Exception {\n+        ECKeyPair ecKeyPair = Keys.createEcKeyPair();\n+\n+        ECCEncrypt encrypt = new ECCEncrypt(ecKeyPair.getPublicKey());\n+        ECCDecrypt decrypt = new ECCDecrypt(ecKeyPair.getPrivateKey());\n+\n+        String message = \"ecc encrypt test\";\n+        byte[] encryptData = encrypt.encrypt(message.getBytes(\"utf-8\"));\n+        byte[] decryptData = decrypt.decrypt(encryptData);\n+\n+        String decrpptMessage = new String(decryptData, \"utf-8\");\n+        assertEquals(message, decrpptMessage);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a0cebbebdf0506870d568797e3904bc207862a47"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNzQ2NzUwOnYy", "diffSide": "RIGHT", "path": "src/test/java/org/fisco/bcos/web3j/crypto/ECKeyPairTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQwMTo0MTozM1rOGhh-sA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQwMTo0MTozM1rOGhh-sA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzgxMjkxMg==", "bodyText": "[PMD Java] A method/constructor should not explicitly throw java.lang.Exception (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nSignatureDeclareThrowsException\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.23.0/pmd_rules_java_design.html#signaturedeclarethrowsexception\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/602#discussion_r437812912", "createdAt": "2020-06-10T01:41:33Z", "author": {"login": "sider"}, "path": "src/test/java/org/fisco/bcos/web3j/crypto/ECKeyPairTest.java", "diffHunk": "@@ -0,0 +1,154 @@\n+package org.fisco.bcos.web3j.crypto;\n+\n+import static org.junit.Assert.assertEquals;\n+\n+import org.fisco.bcos.channel.client.P12Manager;\n+import org.fisco.bcos.web3j.crypto.gm.GenCredential;\n+import org.fisco.bcos.web3j.crypto.tool.ECCDecrypt;\n+import org.fisco.bcos.web3j.crypto.tool.ECCEncrypt;\n+import org.junit.Test;\n+import org.springframework.context.ApplicationContext;\n+import org.springframework.context.support.ClassPathXmlApplicationContext;\n+\n+public class ECKeyPairTest {\n+\n+    @Test\n+    public void encryptECKeyPairTest() throws Exception {\n+        ECKeyPair ecKeyPair = Keys.createEcKeyPair();\n+\n+        ECCEncrypt encrypt = new ECCEncrypt(ecKeyPair.getPublicKey());\n+        ECCDecrypt decrypt = new ECCDecrypt(ecKeyPair.getPrivateKey());\n+\n+        String message = \"ecc encrypt test\";\n+        byte[] encryptData = encrypt.encrypt(message.getBytes(\"utf-8\"));\n+        byte[] decryptData = decrypt.decrypt(encryptData);\n+\n+        String decrpptMessage = new String(decryptData, \"utf-8\");\n+        assertEquals(message, decrpptMessage);\n+    }\n+\n+    @Test\n+    public void encryptECKeyPairTestEmptyString() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a0cebbebdf0506870d568797e3904bc207862a47"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNzQ2NzUyOnYy", "diffSide": "RIGHT", "path": "src/test/java/org/fisco/bcos/web3j/crypto/ECKeyPairTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQwMTo0MTozM1rOGhh-sw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQwMTo0MTozM1rOGhh-sw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzgxMjkxNQ==", "bodyText": "[PMD Java] Potential violation of Law of Demeter (object not created locally) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.23.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/602#discussion_r437812915", "createdAt": "2020-06-10T01:41:33Z", "author": {"login": "sider"}, "path": "src/test/java/org/fisco/bcos/web3j/crypto/ECKeyPairTest.java", "diffHunk": "@@ -0,0 +1,154 @@\n+package org.fisco.bcos.web3j.crypto;\n+\n+import static org.junit.Assert.assertEquals;\n+\n+import org.fisco.bcos.channel.client.P12Manager;\n+import org.fisco.bcos.web3j.crypto.gm.GenCredential;\n+import org.fisco.bcos.web3j.crypto.tool.ECCDecrypt;\n+import org.fisco.bcos.web3j.crypto.tool.ECCEncrypt;\n+import org.junit.Test;\n+import org.springframework.context.ApplicationContext;\n+import org.springframework.context.support.ClassPathXmlApplicationContext;\n+\n+public class ECKeyPairTest {\n+\n+    @Test\n+    public void encryptECKeyPairTest() throws Exception {\n+        ECKeyPair ecKeyPair = Keys.createEcKeyPair();\n+\n+        ECCEncrypt encrypt = new ECCEncrypt(ecKeyPair.getPublicKey());\n+        ECCDecrypt decrypt = new ECCDecrypt(ecKeyPair.getPrivateKey());\n+\n+        String message = \"ecc encrypt test\";\n+        byte[] encryptData = encrypt.encrypt(message.getBytes(\"utf-8\"));\n+        byte[] decryptData = decrypt.decrypt(encryptData);\n+\n+        String decrpptMessage = new String(decryptData, \"utf-8\");\n+        assertEquals(message, decrpptMessage);\n+    }\n+\n+    @Test\n+    public void encryptECKeyPairTestEmptyString() throws Exception {\n+        Credentials credentials = GenCredential.create();\n+        ECKeyPair ecKeyPair = credentials.getEcKeyPair();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a0cebbebdf0506870d568797e3904bc207862a47"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNzQ2NzUzOnYy", "diffSide": "RIGHT", "path": "src/test/java/org/fisco/bcos/web3j/crypto/ECKeyPairTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQwMTo0MTozM1rOGhh-tA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQwMTo0MTozM1rOGhh-tA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzgxMjkxNg==", "bodyText": "[PMD Java] Potential violation of Law of Demeter (object not created locally) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.23.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/602#discussion_r437812916", "createdAt": "2020-06-10T01:41:33Z", "author": {"login": "sider"}, "path": "src/test/java/org/fisco/bcos/web3j/crypto/ECKeyPairTest.java", "diffHunk": "@@ -0,0 +1,154 @@\n+package org.fisco.bcos.web3j.crypto;\n+\n+import static org.junit.Assert.assertEquals;\n+\n+import org.fisco.bcos.channel.client.P12Manager;\n+import org.fisco.bcos.web3j.crypto.gm.GenCredential;\n+import org.fisco.bcos.web3j.crypto.tool.ECCDecrypt;\n+import org.fisco.bcos.web3j.crypto.tool.ECCEncrypt;\n+import org.junit.Test;\n+import org.springframework.context.ApplicationContext;\n+import org.springframework.context.support.ClassPathXmlApplicationContext;\n+\n+public class ECKeyPairTest {\n+\n+    @Test\n+    public void encryptECKeyPairTest() throws Exception {\n+        ECKeyPair ecKeyPair = Keys.createEcKeyPair();\n+\n+        ECCEncrypt encrypt = new ECCEncrypt(ecKeyPair.getPublicKey());\n+        ECCDecrypt decrypt = new ECCDecrypt(ecKeyPair.getPrivateKey());\n+\n+        String message = \"ecc encrypt test\";\n+        byte[] encryptData = encrypt.encrypt(message.getBytes(\"utf-8\"));\n+        byte[] decryptData = decrypt.decrypt(encryptData);\n+\n+        String decrpptMessage = new String(decryptData, \"utf-8\");\n+        assertEquals(message, decrpptMessage);\n+    }\n+\n+    @Test\n+    public void encryptECKeyPairTestEmptyString() throws Exception {\n+        Credentials credentials = GenCredential.create();\n+        ECKeyPair ecKeyPair = credentials.getEcKeyPair();\n+\n+        ECCEncrypt encrypt = new ECCEncrypt(ecKeyPair.getPublicKey());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a0cebbebdf0506870d568797e3904bc207862a47"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNzQ2NzU0OnYy", "diffSide": "RIGHT", "path": "src/test/java/org/fisco/bcos/web3j/crypto/ECKeyPairTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQwMTo0MTozM1rOGhh-tg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQwMTo0MTozM1rOGhh-tg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzgxMjkxOA==", "bodyText": "[PMD Java] Potential violation of Law of Demeter (object not created locally) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.23.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/602#discussion_r437812918", "createdAt": "2020-06-10T01:41:33Z", "author": {"login": "sider"}, "path": "src/test/java/org/fisco/bcos/web3j/crypto/ECKeyPairTest.java", "diffHunk": "@@ -0,0 +1,154 @@\n+package org.fisco.bcos.web3j.crypto;\n+\n+import static org.junit.Assert.assertEquals;\n+\n+import org.fisco.bcos.channel.client.P12Manager;\n+import org.fisco.bcos.web3j.crypto.gm.GenCredential;\n+import org.fisco.bcos.web3j.crypto.tool.ECCDecrypt;\n+import org.fisco.bcos.web3j.crypto.tool.ECCEncrypt;\n+import org.junit.Test;\n+import org.springframework.context.ApplicationContext;\n+import org.springframework.context.support.ClassPathXmlApplicationContext;\n+\n+public class ECKeyPairTest {\n+\n+    @Test\n+    public void encryptECKeyPairTest() throws Exception {\n+        ECKeyPair ecKeyPair = Keys.createEcKeyPair();\n+\n+        ECCEncrypt encrypt = new ECCEncrypt(ecKeyPair.getPublicKey());\n+        ECCDecrypt decrypt = new ECCDecrypt(ecKeyPair.getPrivateKey());\n+\n+        String message = \"ecc encrypt test\";\n+        byte[] encryptData = encrypt.encrypt(message.getBytes(\"utf-8\"));\n+        byte[] decryptData = decrypt.decrypt(encryptData);\n+\n+        String decrpptMessage = new String(decryptData, \"utf-8\");\n+        assertEquals(message, decrpptMessage);\n+    }\n+\n+    @Test\n+    public void encryptECKeyPairTestEmptyString() throws Exception {\n+        Credentials credentials = GenCredential.create();\n+        ECKeyPair ecKeyPair = credentials.getEcKeyPair();\n+\n+        ECCEncrypt encrypt = new ECCEncrypt(ecKeyPair.getPublicKey());\n+        ECCDecrypt decrypt = new ECCDecrypt(ecKeyPair.getPrivateKey());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a0cebbebdf0506870d568797e3904bc207862a47"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNzQ2NzU1OnYy", "diffSide": "RIGHT", "path": "src/test/java/org/fisco/bcos/web3j/crypto/ECKeyPairTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQwMTo0MTozM1rOGhh-tw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQwMTo0MTozM1rOGhh-tw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzgxMjkxOQ==", "bodyText": "[PMD Java] Potential violation of Law of Demeter (object not created locally) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.23.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/602#discussion_r437812919", "createdAt": "2020-06-10T01:41:33Z", "author": {"login": "sider"}, "path": "src/test/java/org/fisco/bcos/web3j/crypto/ECKeyPairTest.java", "diffHunk": "@@ -0,0 +1,154 @@\n+package org.fisco.bcos.web3j.crypto;\n+\n+import static org.junit.Assert.assertEquals;\n+\n+import org.fisco.bcos.channel.client.P12Manager;\n+import org.fisco.bcos.web3j.crypto.gm.GenCredential;\n+import org.fisco.bcos.web3j.crypto.tool.ECCDecrypt;\n+import org.fisco.bcos.web3j.crypto.tool.ECCEncrypt;\n+import org.junit.Test;\n+import org.springframework.context.ApplicationContext;\n+import org.springframework.context.support.ClassPathXmlApplicationContext;\n+\n+public class ECKeyPairTest {\n+\n+    @Test\n+    public void encryptECKeyPairTest() throws Exception {\n+        ECKeyPair ecKeyPair = Keys.createEcKeyPair();\n+\n+        ECCEncrypt encrypt = new ECCEncrypt(ecKeyPair.getPublicKey());\n+        ECCDecrypt decrypt = new ECCDecrypt(ecKeyPair.getPrivateKey());\n+\n+        String message = \"ecc encrypt test\";\n+        byte[] encryptData = encrypt.encrypt(message.getBytes(\"utf-8\"));\n+        byte[] decryptData = decrypt.decrypt(encryptData);\n+\n+        String decrpptMessage = new String(decryptData, \"utf-8\");\n+        assertEquals(message, decrpptMessage);\n+    }\n+\n+    @Test\n+    public void encryptECKeyPairTestEmptyString() throws Exception {\n+        Credentials credentials = GenCredential.create();\n+        ECKeyPair ecKeyPair = credentials.getEcKeyPair();\n+\n+        ECCEncrypt encrypt = new ECCEncrypt(ecKeyPair.getPublicKey());\n+        ECCDecrypt decrypt = new ECCDecrypt(ecKeyPair.getPrivateKey());\n+\n+        String message = \"\";\n+        byte[] encryptData = encrypt.encrypt(message.getBytes(\"utf-8\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a0cebbebdf0506870d568797e3904bc207862a47"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNzQ2NzU2OnYy", "diffSide": "RIGHT", "path": "src/test/java/org/fisco/bcos/web3j/crypto/ECKeyPairTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQwMTo0MTozM1rOGhh-uA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQwMTo0MTozM1rOGhh-uA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzgxMjkyMA==", "bodyText": "[PMD Java] JUnit assertions should include a message (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nJUnitAssertionsShouldIncludeMessage\nBest Practices\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.23.0/pmd_rules_java_bestpractices.html#junitassertionsshouldincludemessage\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/602#discussion_r437812920", "createdAt": "2020-06-10T01:41:33Z", "author": {"login": "sider"}, "path": "src/test/java/org/fisco/bcos/web3j/crypto/ECKeyPairTest.java", "diffHunk": "@@ -0,0 +1,154 @@\n+package org.fisco.bcos.web3j.crypto;\n+\n+import static org.junit.Assert.assertEquals;\n+\n+import org.fisco.bcos.channel.client.P12Manager;\n+import org.fisco.bcos.web3j.crypto.gm.GenCredential;\n+import org.fisco.bcos.web3j.crypto.tool.ECCDecrypt;\n+import org.fisco.bcos.web3j.crypto.tool.ECCEncrypt;\n+import org.junit.Test;\n+import org.springframework.context.ApplicationContext;\n+import org.springframework.context.support.ClassPathXmlApplicationContext;\n+\n+public class ECKeyPairTest {\n+\n+    @Test\n+    public void encryptECKeyPairTest() throws Exception {\n+        ECKeyPair ecKeyPair = Keys.createEcKeyPair();\n+\n+        ECCEncrypt encrypt = new ECCEncrypt(ecKeyPair.getPublicKey());\n+        ECCDecrypt decrypt = new ECCDecrypt(ecKeyPair.getPrivateKey());\n+\n+        String message = \"ecc encrypt test\";\n+        byte[] encryptData = encrypt.encrypt(message.getBytes(\"utf-8\"));\n+        byte[] decryptData = decrypt.decrypt(encryptData);\n+\n+        String decrpptMessage = new String(decryptData, \"utf-8\");\n+        assertEquals(message, decrpptMessage);\n+    }\n+\n+    @Test\n+    public void encryptECKeyPairTestEmptyString() throws Exception {\n+        Credentials credentials = GenCredential.create();\n+        ECKeyPair ecKeyPair = credentials.getEcKeyPair();\n+\n+        ECCEncrypt encrypt = new ECCEncrypt(ecKeyPair.getPublicKey());\n+        ECCDecrypt decrypt = new ECCDecrypt(ecKeyPair.getPrivateKey());\n+\n+        String message = \"\";\n+        byte[] encryptData = encrypt.encrypt(message.getBytes(\"utf-8\"));\n+        byte[] decryptData = decrypt.decrypt(encryptData);\n+\n+        assertEquals(message, new String(decryptData, \"utf-8\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a0cebbebdf0506870d568797e3904bc207862a47"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNzQ2NzU4OnYy", "diffSide": "RIGHT", "path": "src/test/java/org/fisco/bcos/web3j/crypto/ECKeyPairTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQwMTo0MTozNFrOGhh-ug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQwMTo0MTozNFrOGhh-ug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzgxMjkyMg==", "bodyText": "[PMD Java] A method/constructor should not explicitly throw java.lang.Exception (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nSignatureDeclareThrowsException\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.23.0/pmd_rules_java_design.html#signaturedeclarethrowsexception\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/602#discussion_r437812922", "createdAt": "2020-06-10T01:41:34Z", "author": {"login": "sider"}, "path": "src/test/java/org/fisco/bcos/web3j/crypto/ECKeyPairTest.java", "diffHunk": "@@ -0,0 +1,154 @@\n+package org.fisco.bcos.web3j.crypto;\n+\n+import static org.junit.Assert.assertEquals;\n+\n+import org.fisco.bcos.channel.client.P12Manager;\n+import org.fisco.bcos.web3j.crypto.gm.GenCredential;\n+import org.fisco.bcos.web3j.crypto.tool.ECCDecrypt;\n+import org.fisco.bcos.web3j.crypto.tool.ECCEncrypt;\n+import org.junit.Test;\n+import org.springframework.context.ApplicationContext;\n+import org.springframework.context.support.ClassPathXmlApplicationContext;\n+\n+public class ECKeyPairTest {\n+\n+    @Test\n+    public void encryptECKeyPairTest() throws Exception {\n+        ECKeyPair ecKeyPair = Keys.createEcKeyPair();\n+\n+        ECCEncrypt encrypt = new ECCEncrypt(ecKeyPair.getPublicKey());\n+        ECCDecrypt decrypt = new ECCDecrypt(ecKeyPair.getPrivateKey());\n+\n+        String message = \"ecc encrypt test\";\n+        byte[] encryptData = encrypt.encrypt(message.getBytes(\"utf-8\"));\n+        byte[] decryptData = decrypt.decrypt(encryptData);\n+\n+        String decrpptMessage = new String(decryptData, \"utf-8\");\n+        assertEquals(message, decrpptMessage);\n+    }\n+\n+    @Test\n+    public void encryptECKeyPairTestEmptyString() throws Exception {\n+        Credentials credentials = GenCredential.create();\n+        ECKeyPair ecKeyPair = credentials.getEcKeyPair();\n+\n+        ECCEncrypt encrypt = new ECCEncrypt(ecKeyPair.getPublicKey());\n+        ECCDecrypt decrypt = new ECCDecrypt(ecKeyPair.getPrivateKey());\n+\n+        String message = \"\";\n+        byte[] encryptData = encrypt.encrypt(message.getBytes(\"utf-8\"));\n+        byte[] decryptData = decrypt.decrypt(encryptData);\n+\n+        assertEquals(message, new String(decryptData, \"utf-8\"));\n+    }\n+\n+    @Test\n+    public void encryptECKeyPairTestWithPem() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a0cebbebdf0506870d568797e3904bc207862a47"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNzQ2NzU5OnYy", "diffSide": "RIGHT", "path": "src/test/java/org/fisco/bcos/web3j/crypto/ECKeyPairTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQwMTo0MTozNFrOGhh-vA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQwMTo0MTozNFrOGhh-vA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzgxMjkyNA==", "bodyText": "[PMD Java] Potential violation of Law of Demeter (object not created locally) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.23.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/602#discussion_r437812924", "createdAt": "2020-06-10T01:41:34Z", "author": {"login": "sider"}, "path": "src/test/java/org/fisco/bcos/web3j/crypto/ECKeyPairTest.java", "diffHunk": "@@ -0,0 +1,154 @@\n+package org.fisco.bcos.web3j.crypto;\n+\n+import static org.junit.Assert.assertEquals;\n+\n+import org.fisco.bcos.channel.client.P12Manager;\n+import org.fisco.bcos.web3j.crypto.gm.GenCredential;\n+import org.fisco.bcos.web3j.crypto.tool.ECCDecrypt;\n+import org.fisco.bcos.web3j.crypto.tool.ECCEncrypt;\n+import org.junit.Test;\n+import org.springframework.context.ApplicationContext;\n+import org.springframework.context.support.ClassPathXmlApplicationContext;\n+\n+public class ECKeyPairTest {\n+\n+    @Test\n+    public void encryptECKeyPairTest() throws Exception {\n+        ECKeyPair ecKeyPair = Keys.createEcKeyPair();\n+\n+        ECCEncrypt encrypt = new ECCEncrypt(ecKeyPair.getPublicKey());\n+        ECCDecrypt decrypt = new ECCDecrypt(ecKeyPair.getPrivateKey());\n+\n+        String message = \"ecc encrypt test\";\n+        byte[] encryptData = encrypt.encrypt(message.getBytes(\"utf-8\"));\n+        byte[] decryptData = decrypt.decrypt(encryptData);\n+\n+        String decrpptMessage = new String(decryptData, \"utf-8\");\n+        assertEquals(message, decrpptMessage);\n+    }\n+\n+    @Test\n+    public void encryptECKeyPairTestEmptyString() throws Exception {\n+        Credentials credentials = GenCredential.create();\n+        ECKeyPair ecKeyPair = credentials.getEcKeyPair();\n+\n+        ECCEncrypt encrypt = new ECCEncrypt(ecKeyPair.getPublicKey());\n+        ECCDecrypt decrypt = new ECCDecrypt(ecKeyPair.getPrivateKey());\n+\n+        String message = \"\";\n+        byte[] encryptData = encrypt.encrypt(message.getBytes(\"utf-8\"));\n+        byte[] decryptData = decrypt.decrypt(encryptData);\n+\n+        assertEquals(message, new String(decryptData, \"utf-8\"));\n+    }\n+\n+    @Test\n+    public void encryptECKeyPairTestWithPem() throws Exception {\n+        ApplicationContext context =\n+                new ClassPathXmlApplicationContext(\n+                        \"classpath:applicationContext-keystore-sample.xml\");\n+        // test p12\n+        P12Manager p12 = context.getBean(P12Manager.class);\n+\n+        ECKeyPair ecKeyPair = p12.getECKeyPair();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a0cebbebdf0506870d568797e3904bc207862a47"}, "originalPosition": 53}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNzQ2NzYwOnYy", "diffSide": "RIGHT", "path": "src/test/java/org/fisco/bcos/web3j/crypto/ECKeyPairTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQwMTo0MTozNFrOGhh-vQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQwMTo0MTozNFrOGhh-vQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzgxMjkyNQ==", "bodyText": "[PMD Java] Potential violation of Law of Demeter (object not created locally) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.23.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/602#discussion_r437812925", "createdAt": "2020-06-10T01:41:34Z", "author": {"login": "sider"}, "path": "src/test/java/org/fisco/bcos/web3j/crypto/ECKeyPairTest.java", "diffHunk": "@@ -0,0 +1,154 @@\n+package org.fisco.bcos.web3j.crypto;\n+\n+import static org.junit.Assert.assertEquals;\n+\n+import org.fisco.bcos.channel.client.P12Manager;\n+import org.fisco.bcos.web3j.crypto.gm.GenCredential;\n+import org.fisco.bcos.web3j.crypto.tool.ECCDecrypt;\n+import org.fisco.bcos.web3j.crypto.tool.ECCEncrypt;\n+import org.junit.Test;\n+import org.springframework.context.ApplicationContext;\n+import org.springframework.context.support.ClassPathXmlApplicationContext;\n+\n+public class ECKeyPairTest {\n+\n+    @Test\n+    public void encryptECKeyPairTest() throws Exception {\n+        ECKeyPair ecKeyPair = Keys.createEcKeyPair();\n+\n+        ECCEncrypt encrypt = new ECCEncrypt(ecKeyPair.getPublicKey());\n+        ECCDecrypt decrypt = new ECCDecrypt(ecKeyPair.getPrivateKey());\n+\n+        String message = \"ecc encrypt test\";\n+        byte[] encryptData = encrypt.encrypt(message.getBytes(\"utf-8\"));\n+        byte[] decryptData = decrypt.decrypt(encryptData);\n+\n+        String decrpptMessage = new String(decryptData, \"utf-8\");\n+        assertEquals(message, decrpptMessage);\n+    }\n+\n+    @Test\n+    public void encryptECKeyPairTestEmptyString() throws Exception {\n+        Credentials credentials = GenCredential.create();\n+        ECKeyPair ecKeyPair = credentials.getEcKeyPair();\n+\n+        ECCEncrypt encrypt = new ECCEncrypt(ecKeyPair.getPublicKey());\n+        ECCDecrypt decrypt = new ECCDecrypt(ecKeyPair.getPrivateKey());\n+\n+        String message = \"\";\n+        byte[] encryptData = encrypt.encrypt(message.getBytes(\"utf-8\"));\n+        byte[] decryptData = decrypt.decrypt(encryptData);\n+\n+        assertEquals(message, new String(decryptData, \"utf-8\"));\n+    }\n+\n+    @Test\n+    public void encryptECKeyPairTestWithPem() throws Exception {\n+        ApplicationContext context =\n+                new ClassPathXmlApplicationContext(\n+                        \"classpath:applicationContext-keystore-sample.xml\");\n+        // test p12\n+        P12Manager p12 = context.getBean(P12Manager.class);\n+\n+        ECKeyPair ecKeyPair = p12.getECKeyPair();\n+\n+        ECCEncrypt encrypt = new ECCEncrypt(ecKeyPair.getPublicKey());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a0cebbebdf0506870d568797e3904bc207862a47"}, "originalPosition": 55}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNzQ2NzYxOnYy", "diffSide": "RIGHT", "path": "src/test/java/org/fisco/bcos/web3j/crypto/ECKeyPairTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQwMTo0MTozNFrOGhh-vg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQwMTo0MTozNFrOGhh-vg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzgxMjkyNg==", "bodyText": "[PMD Java] Potential violation of Law of Demeter (object not created locally) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.23.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/602#discussion_r437812926", "createdAt": "2020-06-10T01:41:34Z", "author": {"login": "sider"}, "path": "src/test/java/org/fisco/bcos/web3j/crypto/ECKeyPairTest.java", "diffHunk": "@@ -0,0 +1,154 @@\n+package org.fisco.bcos.web3j.crypto;\n+\n+import static org.junit.Assert.assertEquals;\n+\n+import org.fisco.bcos.channel.client.P12Manager;\n+import org.fisco.bcos.web3j.crypto.gm.GenCredential;\n+import org.fisco.bcos.web3j.crypto.tool.ECCDecrypt;\n+import org.fisco.bcos.web3j.crypto.tool.ECCEncrypt;\n+import org.junit.Test;\n+import org.springframework.context.ApplicationContext;\n+import org.springframework.context.support.ClassPathXmlApplicationContext;\n+\n+public class ECKeyPairTest {\n+\n+    @Test\n+    public void encryptECKeyPairTest() throws Exception {\n+        ECKeyPair ecKeyPair = Keys.createEcKeyPair();\n+\n+        ECCEncrypt encrypt = new ECCEncrypt(ecKeyPair.getPublicKey());\n+        ECCDecrypt decrypt = new ECCDecrypt(ecKeyPair.getPrivateKey());\n+\n+        String message = \"ecc encrypt test\";\n+        byte[] encryptData = encrypt.encrypt(message.getBytes(\"utf-8\"));\n+        byte[] decryptData = decrypt.decrypt(encryptData);\n+\n+        String decrpptMessage = new String(decryptData, \"utf-8\");\n+        assertEquals(message, decrpptMessage);\n+    }\n+\n+    @Test\n+    public void encryptECKeyPairTestEmptyString() throws Exception {\n+        Credentials credentials = GenCredential.create();\n+        ECKeyPair ecKeyPair = credentials.getEcKeyPair();\n+\n+        ECCEncrypt encrypt = new ECCEncrypt(ecKeyPair.getPublicKey());\n+        ECCDecrypt decrypt = new ECCDecrypt(ecKeyPair.getPrivateKey());\n+\n+        String message = \"\";\n+        byte[] encryptData = encrypt.encrypt(message.getBytes(\"utf-8\"));\n+        byte[] decryptData = decrypt.decrypt(encryptData);\n+\n+        assertEquals(message, new String(decryptData, \"utf-8\"));\n+    }\n+\n+    @Test\n+    public void encryptECKeyPairTestWithPem() throws Exception {\n+        ApplicationContext context =\n+                new ClassPathXmlApplicationContext(\n+                        \"classpath:applicationContext-keystore-sample.xml\");\n+        // test p12\n+        P12Manager p12 = context.getBean(P12Manager.class);\n+\n+        ECKeyPair ecKeyPair = p12.getECKeyPair();\n+\n+        ECCEncrypt encrypt = new ECCEncrypt(ecKeyPair.getPublicKey());\n+        ECCDecrypt decrypt = new ECCDecrypt(ecKeyPair.getPrivateKey());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a0cebbebdf0506870d568797e3904bc207862a47"}, "originalPosition": 56}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNzQ2NzYyOnYy", "diffSide": "RIGHT", "path": "src/test/java/org/fisco/bcos/web3j/crypto/ECKeyPairTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQwMTo0MTozNFrOGhh-wA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQwMTo0MTozNFrOGhh-wA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzgxMjkyOA==", "bodyText": "[PMD Java] Potential violation of Law of Demeter (object not created locally) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.23.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/602#discussion_r437812928", "createdAt": "2020-06-10T01:41:34Z", "author": {"login": "sider"}, "path": "src/test/java/org/fisco/bcos/web3j/crypto/ECKeyPairTest.java", "diffHunk": "@@ -0,0 +1,154 @@\n+package org.fisco.bcos.web3j.crypto;\n+\n+import static org.junit.Assert.assertEquals;\n+\n+import org.fisco.bcos.channel.client.P12Manager;\n+import org.fisco.bcos.web3j.crypto.gm.GenCredential;\n+import org.fisco.bcos.web3j.crypto.tool.ECCDecrypt;\n+import org.fisco.bcos.web3j.crypto.tool.ECCEncrypt;\n+import org.junit.Test;\n+import org.springframework.context.ApplicationContext;\n+import org.springframework.context.support.ClassPathXmlApplicationContext;\n+\n+public class ECKeyPairTest {\n+\n+    @Test\n+    public void encryptECKeyPairTest() throws Exception {\n+        ECKeyPair ecKeyPair = Keys.createEcKeyPair();\n+\n+        ECCEncrypt encrypt = new ECCEncrypt(ecKeyPair.getPublicKey());\n+        ECCDecrypt decrypt = new ECCDecrypt(ecKeyPair.getPrivateKey());\n+\n+        String message = \"ecc encrypt test\";\n+        byte[] encryptData = encrypt.encrypt(message.getBytes(\"utf-8\"));\n+        byte[] decryptData = decrypt.decrypt(encryptData);\n+\n+        String decrpptMessage = new String(decryptData, \"utf-8\");\n+        assertEquals(message, decrpptMessage);\n+    }\n+\n+    @Test\n+    public void encryptECKeyPairTestEmptyString() throws Exception {\n+        Credentials credentials = GenCredential.create();\n+        ECKeyPair ecKeyPair = credentials.getEcKeyPair();\n+\n+        ECCEncrypt encrypt = new ECCEncrypt(ecKeyPair.getPublicKey());\n+        ECCDecrypt decrypt = new ECCDecrypt(ecKeyPair.getPrivateKey());\n+\n+        String message = \"\";\n+        byte[] encryptData = encrypt.encrypt(message.getBytes(\"utf-8\"));\n+        byte[] decryptData = decrypt.decrypt(encryptData);\n+\n+        assertEquals(message, new String(decryptData, \"utf-8\"));\n+    }\n+\n+    @Test\n+    public void encryptECKeyPairTestWithPem() throws Exception {\n+        ApplicationContext context =\n+                new ClassPathXmlApplicationContext(\n+                        \"classpath:applicationContext-keystore-sample.xml\");\n+        // test p12\n+        P12Manager p12 = context.getBean(P12Manager.class);\n+\n+        ECKeyPair ecKeyPair = p12.getECKeyPair();\n+\n+        ECCEncrypt encrypt = new ECCEncrypt(ecKeyPair.getPublicKey());\n+        ECCDecrypt decrypt = new ECCDecrypt(ecKeyPair.getPrivateKey());\n+\n+        String message = \"\";\n+        byte[] encryptData = encrypt.encrypt(message.getBytes(\"utf-8\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a0cebbebdf0506870d568797e3904bc207862a47"}, "originalPosition": 59}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNzQ2NzY0OnYy", "diffSide": "RIGHT", "path": "src/test/java/org/fisco/bcos/web3j/crypto/ECKeyPairTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQwMTo0MTozNVrOGhh-wQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQwMTo0MTozNVrOGhh-wQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzgxMjkyOQ==", "bodyText": "[PMD Java] JUnit assertions should include a message (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nJUnitAssertionsShouldIncludeMessage\nBest Practices\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.23.0/pmd_rules_java_bestpractices.html#junitassertionsshouldincludemessage\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/602#discussion_r437812929", "createdAt": "2020-06-10T01:41:35Z", "author": {"login": "sider"}, "path": "src/test/java/org/fisco/bcos/web3j/crypto/ECKeyPairTest.java", "diffHunk": "@@ -0,0 +1,154 @@\n+package org.fisco.bcos.web3j.crypto;\n+\n+import static org.junit.Assert.assertEquals;\n+\n+import org.fisco.bcos.channel.client.P12Manager;\n+import org.fisco.bcos.web3j.crypto.gm.GenCredential;\n+import org.fisco.bcos.web3j.crypto.tool.ECCDecrypt;\n+import org.fisco.bcos.web3j.crypto.tool.ECCEncrypt;\n+import org.junit.Test;\n+import org.springframework.context.ApplicationContext;\n+import org.springframework.context.support.ClassPathXmlApplicationContext;\n+\n+public class ECKeyPairTest {\n+\n+    @Test\n+    public void encryptECKeyPairTest() throws Exception {\n+        ECKeyPair ecKeyPair = Keys.createEcKeyPair();\n+\n+        ECCEncrypt encrypt = new ECCEncrypt(ecKeyPair.getPublicKey());\n+        ECCDecrypt decrypt = new ECCDecrypt(ecKeyPair.getPrivateKey());\n+\n+        String message = \"ecc encrypt test\";\n+        byte[] encryptData = encrypt.encrypt(message.getBytes(\"utf-8\"));\n+        byte[] decryptData = decrypt.decrypt(encryptData);\n+\n+        String decrpptMessage = new String(decryptData, \"utf-8\");\n+        assertEquals(message, decrpptMessage);\n+    }\n+\n+    @Test\n+    public void encryptECKeyPairTestEmptyString() throws Exception {\n+        Credentials credentials = GenCredential.create();\n+        ECKeyPair ecKeyPair = credentials.getEcKeyPair();\n+\n+        ECCEncrypt encrypt = new ECCEncrypt(ecKeyPair.getPublicKey());\n+        ECCDecrypt decrypt = new ECCDecrypt(ecKeyPair.getPrivateKey());\n+\n+        String message = \"\";\n+        byte[] encryptData = encrypt.encrypt(message.getBytes(\"utf-8\"));\n+        byte[] decryptData = decrypt.decrypt(encryptData);\n+\n+        assertEquals(message, new String(decryptData, \"utf-8\"));\n+    }\n+\n+    @Test\n+    public void encryptECKeyPairTestWithPem() throws Exception {\n+        ApplicationContext context =\n+                new ClassPathXmlApplicationContext(\n+                        \"classpath:applicationContext-keystore-sample.xml\");\n+        // test p12\n+        P12Manager p12 = context.getBean(P12Manager.class);\n+\n+        ECKeyPair ecKeyPair = p12.getECKeyPair();\n+\n+        ECCEncrypt encrypt = new ECCEncrypt(ecKeyPair.getPublicKey());\n+        ECCDecrypt decrypt = new ECCDecrypt(ecKeyPair.getPrivateKey());\n+\n+        String message = \"\";\n+        byte[] encryptData = encrypt.encrypt(message.getBytes(\"utf-8\"));\n+        byte[] decryptData = decrypt.decrypt(encryptData);\n+\n+        assertEquals(message, new String(decryptData, \"utf-8\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a0cebbebdf0506870d568797e3904bc207862a47"}, "originalPosition": 62}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNzQ2NzY2OnYy", "diffSide": "RIGHT", "path": "src/test/java/org/fisco/bcos/web3j/crypto/ECKeyPairTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQwMTo0MTozNVrOGhh-xA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQwMTo0MTozNVrOGhh-xA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzgxMjkzMg==", "bodyText": "[PMD Java] A method/constructor should not explicitly throw java.lang.Exception (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nSignatureDeclareThrowsException\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.23.0/pmd_rules_java_design.html#signaturedeclarethrowsexception\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/602#discussion_r437812932", "createdAt": "2020-06-10T01:41:35Z", "author": {"login": "sider"}, "path": "src/test/java/org/fisco/bcos/web3j/crypto/ECKeyPairTest.java", "diffHunk": "@@ -0,0 +1,154 @@\n+package org.fisco.bcos.web3j.crypto;\n+\n+import static org.junit.Assert.assertEquals;\n+\n+import org.fisco.bcos.channel.client.P12Manager;\n+import org.fisco.bcos.web3j.crypto.gm.GenCredential;\n+import org.fisco.bcos.web3j.crypto.tool.ECCDecrypt;\n+import org.fisco.bcos.web3j.crypto.tool.ECCEncrypt;\n+import org.junit.Test;\n+import org.springframework.context.ApplicationContext;\n+import org.springframework.context.support.ClassPathXmlApplicationContext;\n+\n+public class ECKeyPairTest {\n+\n+    @Test\n+    public void encryptECKeyPairTest() throws Exception {\n+        ECKeyPair ecKeyPair = Keys.createEcKeyPair();\n+\n+        ECCEncrypt encrypt = new ECCEncrypt(ecKeyPair.getPublicKey());\n+        ECCDecrypt decrypt = new ECCDecrypt(ecKeyPair.getPrivateKey());\n+\n+        String message = \"ecc encrypt test\";\n+        byte[] encryptData = encrypt.encrypt(message.getBytes(\"utf-8\"));\n+        byte[] decryptData = decrypt.decrypt(encryptData);\n+\n+        String decrpptMessage = new String(decryptData, \"utf-8\");\n+        assertEquals(message, decrpptMessage);\n+    }\n+\n+    @Test\n+    public void encryptECKeyPairTestEmptyString() throws Exception {\n+        Credentials credentials = GenCredential.create();\n+        ECKeyPair ecKeyPair = credentials.getEcKeyPair();\n+\n+        ECCEncrypt encrypt = new ECCEncrypt(ecKeyPair.getPublicKey());\n+        ECCDecrypt decrypt = new ECCDecrypt(ecKeyPair.getPrivateKey());\n+\n+        String message = \"\";\n+        byte[] encryptData = encrypt.encrypt(message.getBytes(\"utf-8\"));\n+        byte[] decryptData = decrypt.decrypt(encryptData);\n+\n+        assertEquals(message, new String(decryptData, \"utf-8\"));\n+    }\n+\n+    @Test\n+    public void encryptECKeyPairTestWithPem() throws Exception {\n+        ApplicationContext context =\n+                new ClassPathXmlApplicationContext(\n+                        \"classpath:applicationContext-keystore-sample.xml\");\n+        // test p12\n+        P12Manager p12 = context.getBean(P12Manager.class);\n+\n+        ECKeyPair ecKeyPair = p12.getECKeyPair();\n+\n+        ECCEncrypt encrypt = new ECCEncrypt(ecKeyPair.getPublicKey());\n+        ECCDecrypt decrypt = new ECCDecrypt(ecKeyPair.getPrivateKey());\n+\n+        String message = \"\";\n+        byte[] encryptData = encrypt.encrypt(message.getBytes(\"utf-8\"));\n+        byte[] decryptData = decrypt.decrypt(encryptData);\n+\n+        assertEquals(message, new String(decryptData, \"utf-8\"));\n+    }\n+\n+    @Test\n+    public void verifyECKeyPairTest() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a0cebbebdf0506870d568797e3904bc207862a47"}, "originalPosition": 66}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 703, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}