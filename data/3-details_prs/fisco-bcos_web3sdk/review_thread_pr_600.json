{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMxNzM3Mzgy", "number": 600, "reviewThreads": {"totalCount": 30, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxMTo1NDo0MlrOED1mEQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxMTo1NDo0N1rOED1mSw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNDU5MjgxOnYy", "diffSide": "RIGHT", "path": "src/test/java/org/fisco/bcos/channel/client/TransactionResourceTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxMTo1NDo0MlrOGhFuIQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxMTo1NDo0MlrOGhFuIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzM0OTkyMQ==", "bodyText": "[Misspell] \"paramters\" is a misspelling of \"parameters\" (view)\n\n\n\n\nRule\nCorrect\nIncorrect\n\n\n\n\nparameters\nparameters\nparamters\n\n\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/600#discussion_r437349921", "createdAt": "2020-06-09T11:54:42Z", "author": {"login": "sider"}, "path": "src/test/java/org/fisco/bcos/channel/client/TransactionResourceTest.java", "diffHunk": "@@ -0,0 +1,149 @@\n+package org.fisco.bcos.channel.client;\n+\n+import java.math.BigInteger;\n+import java.util.List;\n+import org.apache.commons.lang3.tuple.ImmutablePair;\n+import org.fisco.bcos.web3j.crypto.Credentials;\n+import org.fisco.bcos.web3j.crypto.ECKeyPair;\n+import org.fisco.bcos.web3j.crypto.Keys;\n+import org.fisco.bcos.web3j.protocol.Web3j;\n+import org.fisco.bcos.web3j.protocol.channel.ChannelEthereumService;\n+import org.fisco.bcos.web3j.protocol.core.DefaultBlockParameter;\n+import org.fisco.bcos.web3j.protocol.core.methods.response.BcosBlock;\n+import org.fisco.bcos.web3j.protocol.core.methods.response.BcosTransaction;\n+import org.fisco.bcos.web3j.protocol.core.methods.response.MerkleProofUnit;\n+import org.fisco.bcos.web3j.protocol.core.methods.response.TransactionReceiptWithProof;\n+import org.fisco.bcos.web3j.protocol.core.methods.response.TransactionWithProof;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.context.ApplicationContext;\n+import org.springframework.context.support.ClassPathXmlApplicationContext;\n+\n+public class TransactionResourceTest {\n+    static Logger logger = LoggerFactory.getLogger(TransactionResourceTest.class);\n+    public static Web3j web3j;\n+\n+    public static ECKeyPair keyPair;\n+    public static Credentials credentials;\n+\n+    public static void main(String[] args) throws Exception {\n+\n+        // init the Service\n+        ApplicationContext context =\n+                new ClassPathXmlApplicationContext(\"classpath:applicationContext.xml\");\n+        Service service = context.getBean(Service.class);\n+        service.setGroupId(Integer.parseInt(args[0]));\n+        service.run(); // run the daemon service\n+        // init the client keys\n+        keyPair = Keys.createEcKeyPair();\n+        credentials = Credentials.create(keyPair);\n+\n+        logger.info(\"-----> start TransactionResourceTest !\");\n+        ChannelEthereumService channelEthereumService = new ChannelEthereumService();\n+        channelEthereumService.setChannelService(service);\n+        try {\n+            web3j = Web3j.build(channelEthereumService, Integer.parseInt(args[0]));\n+        } catch (Exception e) {\n+            System.out.println(\"Please provide groupID in the first paramters\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ab99cd3bbd8904e5316c8c58e13e385b0aba8d32"}, "originalPosition": 47}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNDU5MjgyOnYy", "diffSide": "RIGHT", "path": "src/integration-test/java/org/fisco/bcos/TestBase.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxMTo1NDo0M1rOGhFuJA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxMTo1NDo0M1rOGhFuJA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzM0OTkyNA==", "bodyText": "[PMD Java] Avoid using redundant field initializer for 'credentials' (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nRedundantFieldInitializer\nPerformance\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.23.0/pmd_rules_java_performance.html#redundantfieldinitializer\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/600#discussion_r437349924", "createdAt": "2020-06-09T11:54:43Z", "author": {"login": "sider"}, "path": "src/integration-test/java/org/fisco/bcos/TestBase.java", "diffHunk": "@@ -15,8 +17,7 @@\n \n public class TestBase {\n   public static ApplicationContext context = null;\n-  public static Credentials credentials =\n-      Credentials.create(\"d0fee0a4e3c545a9394965042f8f891b6e5482c212a7428ec175d6aed121353a\");\n+  public static Credentials credentials = null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ab99cd3bbd8904e5316c8c58e13e385b0aba8d32"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNDU5MjgzOnYy", "diffSide": "RIGHT", "path": "src/integration-test/java/org/fisco/bcos/TestBase.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxMTo1NDo0M1rOGhFuJg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxMTo1NDo0M1rOGhFuJg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzM0OTkyNg==", "bodyText": "[PMD Java] System.out.println is used (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nSystemPrintln\nBest Practices\n2\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.23.0/pmd_rules_java_bestpractices.html#systemprintln\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/600#discussion_r437349926", "createdAt": "2020-06-09T11:54:43Z", "author": {"login": "sider"}, "path": "src/integration-test/java/org/fisco/bcos/TestBase.java", "diffHunk": "@@ -36,10 +37,11 @@ public static void setUpBeforeClass() throws Exception {\n     ChannelEthereumService channelEthereumService = new ChannelEthereumService();\n     channelEthereumService.setChannelService(service);\n \n+    System.out.println(\"EncryptType =>  \" + EncryptType.getEncryptType());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ab99cd3bbd8904e5316c8c58e13e385b0aba8d32"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNDU5Mjg0OnYy", "diffSide": "RIGHT", "path": "src/integration-test/java/org/fisco/bcos/contract/Ok.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxMTo1NDo0M1rOGhFuJw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxMTo1NDo0M1rOGhFuJw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzM0OTkyNw==", "bodyText": "[PMD Java] Potential violation of Law of Demeter (method chain calls) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.23.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/600#discussion_r437349927", "createdAt": "2020-06-09T11:54:43Z", "author": {"login": "sider"}, "path": "src/integration-test/java/org/fisco/bcos/contract/Ok.java", "diffHunk": "@@ -1,217 +1,188 @@\n package org.fisco.bcos.contract;\n \n-import io.reactivex.Flowable;\n import java.math.BigInteger;\n import java.util.ArrayList;\n import java.util.Arrays;\n import java.util.Collections;\n import java.util.List;\n import org.fisco.bcos.channel.client.TransactionSucCallback;\n+import org.fisco.bcos.channel.event.filter.EventLogPushWithDecodeCallback;\n import org.fisco.bcos.web3j.abi.EventEncoder;\n+import org.fisco.bcos.web3j.abi.FunctionReturnDecoder;\n import org.fisco.bcos.web3j.abi.TypeReference;\n import org.fisco.bcos.web3j.abi.datatypes.Event;\n import org.fisco.bcos.web3j.abi.datatypes.Function;\n import org.fisco.bcos.web3j.abi.datatypes.Type;\n import org.fisco.bcos.web3j.abi.datatypes.generated.Uint256;\n import org.fisco.bcos.web3j.crypto.Credentials;\n+import org.fisco.bcos.web3j.crypto.EncryptType;\n import org.fisco.bcos.web3j.protocol.Web3j;\n-import org.fisco.bcos.web3j.protocol.core.DefaultBlockParameter;\n import org.fisco.bcos.web3j.protocol.core.RemoteCall;\n-import org.fisco.bcos.web3j.protocol.core.methods.request.BcosFilter;\n import org.fisco.bcos.web3j.protocol.core.methods.response.Log;\n import org.fisco.bcos.web3j.protocol.core.methods.response.TransactionReceipt;\n+import org.fisco.bcos.web3j.tuples.generated.Tuple1;\n import org.fisco.bcos.web3j.tx.Contract;\n import org.fisco.bcos.web3j.tx.TransactionManager;\n import org.fisco.bcos.web3j.tx.gas.ContractGasProvider;\n+import org.fisco.bcos.web3j.tx.txdecode.TransactionDecoder;\n \n /**\n- * Auto generated code.\n- *\n+ * <p>Auto generated code.\n  * <p><strong>Do not modify!</strong>\n- *\n  * <p>Please use the <a href=\"https://docs.web3j.io/command_line.html\">web3j command line tools</a>,\n- * or the org.fisco.bcos.web3j.codegen.SolidityFunctionWrapperGenerator in the <a\n- * href=\"https://github.com/web3j/web3j/tree/master/codegen\">codegen module</a> to update.\n+ * or the org.fisco.bcos.web3j.codegen.SolidityFunctionWrapperGenerator in the \n+ * <a href=\"https://github.com/web3j/web3j/tree/master/codegen\">codegen module</a> to update.\n  *\n  * <p>Generated with web3j version none.\n  */\n+@SuppressWarnings(\"unchecked\")\n public class Ok extends Contract {\n-  private static final String BINARY =\n-      \"608060405234801561001057600080fd5b5060016000800160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506402540be40060006001018190555060028060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060006002600101819055506103bf806100c26000396000f30060806040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806366c99139146100515780636d4ce63c1461007e575b600080fd5b34801561005d57600080fd5b5061007c600480360381019080803590602001909291905050506100a9565b005b34801561008a57600080fd5b506100936102e1565b6040518082815260200191505060405180910390f35b8060006001015410806100c757506002600101548160026001015401105b156100d1576102de565b8060006001015403600060010181905550806002600101600082825401925050819055507fc77b710b83d1dc3f3fafeccd08a6c469beb873b2f0975b50d1698e46b3ee5b4c816040518082815260200191505060405180910390a160046080604051908101604052806040805190810160405280600881526020017f323031373034313300000000000000000000000000000000000000000000000081525081526020016000800160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600260000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152509080600181540180825580915050906001820390600052602060002090600402016000909192909190915060008201518160000190805190602001906102419291906102ee565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600301555050505b50565b6000600260010154905090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061032f57805160ff191683800117855561035d565b8280016001018555821561035d579182015b8281111561035c578251825591602001919060010190610341565b5b50905061036a919061036e565b5090565b61039091905b8082111561038c576000816000905550600101610374565b5090565b905600a165627a7a72305820fb983c66bee66788f407721b23b10a8aae3dc9ef8f1b09e08ec6a6c0b0ec70100029\";\n-\n-  public static final String FUNC_TRANS = \"trans\";\n-\n-  public static final String FUNC_GET = \"get\";\n-\n-  public static final Event TRANSEVENT_EVENT =\n-      new Event(\"TransEvent\", Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));;\n-\n-  @Deprecated\n-  protected Ok(\n-      String contractAddress,\n-      Web3j web3j,\n-      Credentials credentials,\n-      BigInteger gasPrice,\n-      BigInteger gasLimit) {\n-    super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);\n-  }\n-\n-  protected Ok(\n-      String contractAddress,\n-      Web3j web3j,\n-      Credentials credentials,\n-      ContractGasProvider contractGasProvider) {\n-    super(BINARY, contractAddress, web3j, credentials, contractGasProvider);\n-  }\n-\n-  @Deprecated\n-  protected Ok(\n-      String contractAddress,\n-      Web3j web3j,\n-      TransactionManager transactionManager,\n-      BigInteger gasPrice,\n-      BigInteger gasLimit) {\n-    super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);\n-  }\n-\n-  protected Ok(\n-      String contractAddress,\n-      Web3j web3j,\n-      TransactionManager transactionManager,\n-      ContractGasProvider contractGasProvider) {\n-    super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);\n-  }\n-\n-  public RemoteCall<TransactionReceipt> trans(BigInteger num) {\n-    final Function function =\n-        new Function(\n-            FUNC_TRANS,\n-            Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(num)),\n-            Collections.<TypeReference<?>>emptyList());\n-    return executeRemoteCallTransaction(function);\n-  }\n-\n-  public void trans(BigInteger num, TransactionSucCallback callback) {\n-    final Function function =\n-        new Function(\n-            FUNC_TRANS,\n-            Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(num)),\n-            Collections.<TypeReference<?>>emptyList());\n-    asyncExecuteTransaction(function, callback);\n-  }\n-\n-  public RemoteCall<BigInteger> get() {\n-    final Function function =\n-        new Function(\n-            FUNC_GET,\n-            Arrays.<Type>asList(),\n+    public static String BINARY = \"608060405234801561001057600080fd5b5060016000800160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506402540be40060006001018190555060028060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060006002600101819055506103bf806100c26000396000f30060806040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806366c99139146100515780636d4ce63c1461007e575b600080fd5b34801561005d57600080fd5b5061007c600480360381019080803590602001909291905050506100a9565b005b34801561008a57600080fd5b506100936102e1565b6040518082815260200191505060405180910390f35b8060006001015410806100c757506002600101548160026001015401105b156100d1576102de565b8060006001015403600060010181905550806002600101600082825401925050819055507fc77b710b83d1dc3f3fafeccd08a6c469beb873b2f0975b50d1698e46b3ee5b4c816040518082815260200191505060405180910390a160046080604051908101604052806040805190810160405280600881526020017f323031373034313300000000000000000000000000000000000000000000000081525081526020016000800160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600260000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152509080600181540180825580915050906001820390600052602060002090600402016000909192909190915060008201518160000190805190602001906102419291906102ee565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600301555050505b50565b6000600260010154905090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061032f57805160ff191683800117855561035d565b8280016001018555821561035d579182015b8281111561035c578251825591602001919060010190610341565b5b50905061036a919061036e565b5090565b61039091905b8082111561038c576000816000905550600101610374565b5090565b905600a165627a7a723058203c6488d9a80e837aab52f5c5ef1d0b37b671ca2891fd1d92711d3d3ef884b6400029\";\n+\n+    public static final String ABI = \"[{\\\"constant\\\":false,\\\"inputs\\\":[{\\\"name\\\":\\\"num\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"name\\\":\\\"trans\\\",\\\"outputs\\\":[],\\\"payable\\\":false,\\\"stateMutability\\\":\\\"nonpayable\\\",\\\"type\\\":\\\"function\\\"},{\\\"constant\\\":true,\\\"inputs\\\":[],\\\"name\\\":\\\"get\\\",\\\"outputs\\\":[{\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"payable\\\":false,\\\"stateMutability\\\":\\\"view\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[],\\\"payable\\\":false,\\\"stateMutability\\\":\\\"nonpayable\\\",\\\"type\\\":\\\"constructor\\\"},{\\\"anonymous\\\":false,\\\"inputs\\\":[{\\\"indexed\\\":false,\\\"name\\\":\\\"num\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"name\\\":\\\"TransEvent\\\",\\\"type\\\":\\\"event\\\"}]\";\n+\n+    public static final TransactionDecoder transactionDecoder = new TransactionDecoder(ABI, BINARY);\n+\n+    public static String SM_BINARY = \"608060405234801561001057600080fd5b5060016000800160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506402540be40060006001018190555060028060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060006002600101819055506103bf806100c26000396000f30060806040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063299f7f9d146100515780638fff0fc41461007c575b600080fd5b34801561005d57600080fd5b506100666100a9565b6040518082815260200191505060405180910390f35b34801561008857600080fd5b506100a7600480360381019080803590602001909291905050506100b6565b005b6000600260010154905090565b8060006001015410806100d457506002600101548160026001015401105b156100de576102eb565b8060006001015403600060010181905550806002600101600082825401925050819055507fc345610041c3c141ff9e0fbc73b34bf13842fd02e0c3cfe6541eedd6adef4b2c816040518082815260200191505060405180910390a160046080604051908101604052806040805190810160405280600881526020017f323031373034313300000000000000000000000000000000000000000000000081525081526020016000800160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600260000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018381525090806001815401808255809150509060018203906000526020600020906004020160009091929091909150600082015181600001908051906020019061024e9291906102ee565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600301555050505b50565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061032f57805160ff191683800117855561035d565b8280016001018555821561035d579182015b8281111561035c578251825591602001919060010190610341565b5b50905061036a919061036e565b5090565b61039091905b8082111561038c576000816000905550600101610374565b5090565b905600a165627a7a723058205957e1c3edeb7d8d9ba7f64d56205c70972f2b91f880af98000f404fd22af37b0029\";\n+\n+    public static final String FUNC_TRANS = \"trans\";\n+\n+    public static final String FUNC_GET = \"get\";\n+\n+    public static final Event TRANSEVENT_EVENT = new Event(\"TransEvent\", \n             Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));\n-    return executeRemoteCallSingleValueReturn(function, BigInteger.class);\n-  }\n-\n-  public List<TransEventEventResponse> getTransEventEvents(TransactionReceipt transactionReceipt) {\n-    List<Contract.EventValuesWithLog> valueList =\n-        extractEventParametersWithLog(TRANSEVENT_EVENT, transactionReceipt);\n-    ArrayList<TransEventEventResponse> responses =\n-        new ArrayList<TransEventEventResponse>(valueList.size());\n-    for (Contract.EventValuesWithLog eventValues : valueList) {\n-      TransEventEventResponse typedResponse = new TransEventEventResponse();\n-      typedResponse.log = eventValues.getLog();\n-      typedResponse.num = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();\n-      responses.add(typedResponse);\n-    }\n-    return responses;\n-  }\n-\n-  public Flowable<TransEventEventResponse> transEventEventFlowable(BcosFilter filter) {\n-    return web3j\n-        .logFlowable(filter)\n-        .map(\n-            new io.reactivex.functions.Function<Log, TransEventEventResponse>() {\n-              @Override\n-              public TransEventEventResponse apply(Log log) {\n-                Contract.EventValuesWithLog eventValues =\n-                    extractEventParametersWithLog(TRANSEVENT_EVENT, log);\n-                TransEventEventResponse typedResponse = new TransEventEventResponse();\n-                typedResponse.log = log;\n-                typedResponse.num =\n-                    (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();\n-                return typedResponse;\n-              }\n-            });\n-  }\n-\n-  public Flowable<TransEventEventResponse> transEventEventFlowable(\n-      DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {\n-    BcosFilter filter = new BcosFilter(startBlock, endBlock, getContractAddress());\n-    filter.addSingleTopic(EventEncoder.encode(TRANSEVENT_EVENT));\n-    return transEventEventFlowable(filter);\n-  }\n-\n-  @Deprecated\n-  public static Ok load(\n-      String contractAddress,\n-      Web3j web3j,\n-      Credentials credentials,\n-      BigInteger gasPrice,\n-      BigInteger gasLimit) {\n-    return new Ok(contractAddress, web3j, credentials, gasPrice, gasLimit);\n-  }\n-\n-  @Deprecated\n-  public static Ok load(\n-      String contractAddress,\n-      Web3j web3j,\n-      TransactionManager transactionManager,\n-      BigInteger gasPrice,\n-      BigInteger gasLimit) {\n-    return new Ok(contractAddress, web3j, transactionManager, gasPrice, gasLimit);\n-  }\n-\n-  public static Ok load(\n-      String contractAddress,\n-      Web3j web3j,\n-      Credentials credentials,\n-      ContractGasProvider contractGasProvider) {\n-    return new Ok(contractAddress, web3j, credentials, contractGasProvider);\n-  }\n-\n-  public static Ok load(\n-      String contractAddress,\n-      Web3j web3j,\n-      TransactionManager transactionManager,\n-      ContractGasProvider contractGasProvider) {\n-    return new Ok(contractAddress, web3j, transactionManager, contractGasProvider);\n-  }\n-\n-  public static RemoteCall<Ok> deploy(\n-      Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {\n-    return deployRemoteCall(Ok.class, web3j, credentials, contractGasProvider, BINARY, \"\");\n-  }\n-\n-  public static RemoteCall<Ok> deploy(\n-      Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {\n-    return deployRemoteCall(Ok.class, web3j, transactionManager, contractGasProvider, BINARY, \"\");\n-  }\n-\n-  @Deprecated\n-  public static RemoteCall<Ok> deploy(\n-      Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {\n-    return deployRemoteCall(Ok.class, web3j, credentials, gasPrice, gasLimit, BINARY, \"\");\n-  }\n-\n-  @Deprecated\n-  public static RemoteCall<Ok> deploy(\n-      Web3j web3j,\n-      TransactionManager transactionManager,\n-      BigInteger gasPrice,\n-      BigInteger gasLimit) {\n-    return deployRemoteCall(Ok.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, \"\");\n-  }\n-\n-  public static class TransEventEventResponse {\n-    public Log log;\n-\n-    public BigInteger num;\n-  }\n+    ;\n+\n+    @Deprecated\n+    protected Ok(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {\n+        super(getBinary(), contractAddress, web3j, credentials, gasPrice, gasLimit);\n+    }\n+\n+    protected Ok(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {\n+        super(getBinary(), contractAddress, web3j, credentials, contractGasProvider);\n+    }\n+\n+    @Deprecated\n+    protected Ok(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {\n+        super(getBinary(), contractAddress, web3j, transactionManager, gasPrice, gasLimit);\n+    }\n+\n+    protected Ok(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {\n+        super(getBinary(), contractAddress, web3j, transactionManager, contractGasProvider);\n+    }\n+\n+    public static String getBinary() {\n+        return (EncryptType.encryptType == EncryptType.ECDSA_TYPE ? BINARY : SM_BINARY);\n+    }\n+\n+    public static TransactionDecoder getTransactionDecoder() {\n+        return transactionDecoder;\n+    }\n+\n+    public RemoteCall<TransactionReceipt> trans(BigInteger num) {\n+        final Function function = new Function(\n+                FUNC_TRANS, \n+                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(num)), \n+                Collections.<TypeReference<?>>emptyList());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ab99cd3bbd8904e5316c8c58e13e385b0aba8d32"}, "originalPosition": 271}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNDU5Mjg2OnYy", "diffSide": "RIGHT", "path": "src/integration-test/java/org/fisco/bcos/contract/Ok.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxMTo1NDo0M1rOGhFuKg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxMTo1NDo0M1rOGhFuKg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzM0OTkzMA==", "bodyText": "[PMD Java] Potential violation of Law of Demeter (method chain calls) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.23.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/600#discussion_r437349930", "createdAt": "2020-06-09T11:54:43Z", "author": {"login": "sider"}, "path": "src/integration-test/java/org/fisco/bcos/contract/Ok.java", "diffHunk": "@@ -1,217 +1,188 @@\n package org.fisco.bcos.contract;\n \n-import io.reactivex.Flowable;\n import java.math.BigInteger;\n import java.util.ArrayList;\n import java.util.Arrays;\n import java.util.Collections;\n import java.util.List;\n import org.fisco.bcos.channel.client.TransactionSucCallback;\n+import org.fisco.bcos.channel.event.filter.EventLogPushWithDecodeCallback;\n import org.fisco.bcos.web3j.abi.EventEncoder;\n+import org.fisco.bcos.web3j.abi.FunctionReturnDecoder;\n import org.fisco.bcos.web3j.abi.TypeReference;\n import org.fisco.bcos.web3j.abi.datatypes.Event;\n import org.fisco.bcos.web3j.abi.datatypes.Function;\n import org.fisco.bcos.web3j.abi.datatypes.Type;\n import org.fisco.bcos.web3j.abi.datatypes.generated.Uint256;\n import org.fisco.bcos.web3j.crypto.Credentials;\n+import org.fisco.bcos.web3j.crypto.EncryptType;\n import org.fisco.bcos.web3j.protocol.Web3j;\n-import org.fisco.bcos.web3j.protocol.core.DefaultBlockParameter;\n import org.fisco.bcos.web3j.protocol.core.RemoteCall;\n-import org.fisco.bcos.web3j.protocol.core.methods.request.BcosFilter;\n import org.fisco.bcos.web3j.protocol.core.methods.response.Log;\n import org.fisco.bcos.web3j.protocol.core.methods.response.TransactionReceipt;\n+import org.fisco.bcos.web3j.tuples.generated.Tuple1;\n import org.fisco.bcos.web3j.tx.Contract;\n import org.fisco.bcos.web3j.tx.TransactionManager;\n import org.fisco.bcos.web3j.tx.gas.ContractGasProvider;\n+import org.fisco.bcos.web3j.tx.txdecode.TransactionDecoder;\n \n /**\n- * Auto generated code.\n- *\n+ * <p>Auto generated code.\n  * <p><strong>Do not modify!</strong>\n- *\n  * <p>Please use the <a href=\"https://docs.web3j.io/command_line.html\">web3j command line tools</a>,\n- * or the org.fisco.bcos.web3j.codegen.SolidityFunctionWrapperGenerator in the <a\n- * href=\"https://github.com/web3j/web3j/tree/master/codegen\">codegen module</a> to update.\n+ * or the org.fisco.bcos.web3j.codegen.SolidityFunctionWrapperGenerator in the \n+ * <a href=\"https://github.com/web3j/web3j/tree/master/codegen\">codegen module</a> to update.\n  *\n  * <p>Generated with web3j version none.\n  */\n+@SuppressWarnings(\"unchecked\")\n public class Ok extends Contract {\n-  private static final String BINARY =\n-      \"608060405234801561001057600080fd5b5060016000800160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506402540be40060006001018190555060028060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060006002600101819055506103bf806100c26000396000f30060806040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806366c99139146100515780636d4ce63c1461007e575b600080fd5b34801561005d57600080fd5b5061007c600480360381019080803590602001909291905050506100a9565b005b34801561008a57600080fd5b506100936102e1565b6040518082815260200191505060405180910390f35b8060006001015410806100c757506002600101548160026001015401105b156100d1576102de565b8060006001015403600060010181905550806002600101600082825401925050819055507fc77b710b83d1dc3f3fafeccd08a6c469beb873b2f0975b50d1698e46b3ee5b4c816040518082815260200191505060405180910390a160046080604051908101604052806040805190810160405280600881526020017f323031373034313300000000000000000000000000000000000000000000000081525081526020016000800160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600260000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152509080600181540180825580915050906001820390600052602060002090600402016000909192909190915060008201518160000190805190602001906102419291906102ee565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600301555050505b50565b6000600260010154905090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061032f57805160ff191683800117855561035d565b8280016001018555821561035d579182015b8281111561035c578251825591602001919060010190610341565b5b50905061036a919061036e565b5090565b61039091905b8082111561038c576000816000905550600101610374565b5090565b905600a165627a7a72305820fb983c66bee66788f407721b23b10a8aae3dc9ef8f1b09e08ec6a6c0b0ec70100029\";\n-\n-  public static final String FUNC_TRANS = \"trans\";\n-\n-  public static final String FUNC_GET = \"get\";\n-\n-  public static final Event TRANSEVENT_EVENT =\n-      new Event(\"TransEvent\", Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));;\n-\n-  @Deprecated\n-  protected Ok(\n-      String contractAddress,\n-      Web3j web3j,\n-      Credentials credentials,\n-      BigInteger gasPrice,\n-      BigInteger gasLimit) {\n-    super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);\n-  }\n-\n-  protected Ok(\n-      String contractAddress,\n-      Web3j web3j,\n-      Credentials credentials,\n-      ContractGasProvider contractGasProvider) {\n-    super(BINARY, contractAddress, web3j, credentials, contractGasProvider);\n-  }\n-\n-  @Deprecated\n-  protected Ok(\n-      String contractAddress,\n-      Web3j web3j,\n-      TransactionManager transactionManager,\n-      BigInteger gasPrice,\n-      BigInteger gasLimit) {\n-    super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);\n-  }\n-\n-  protected Ok(\n-      String contractAddress,\n-      Web3j web3j,\n-      TransactionManager transactionManager,\n-      ContractGasProvider contractGasProvider) {\n-    super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);\n-  }\n-\n-  public RemoteCall<TransactionReceipt> trans(BigInteger num) {\n-    final Function function =\n-        new Function(\n-            FUNC_TRANS,\n-            Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(num)),\n-            Collections.<TypeReference<?>>emptyList());\n-    return executeRemoteCallTransaction(function);\n-  }\n-\n-  public void trans(BigInteger num, TransactionSucCallback callback) {\n-    final Function function =\n-        new Function(\n-            FUNC_TRANS,\n-            Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(num)),\n-            Collections.<TypeReference<?>>emptyList());\n-    asyncExecuteTransaction(function, callback);\n-  }\n-\n-  public RemoteCall<BigInteger> get() {\n-    final Function function =\n-        new Function(\n-            FUNC_GET,\n-            Arrays.<Type>asList(),\n+    public static String BINARY = \"608060405234801561001057600080fd5b5060016000800160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506402540be40060006001018190555060028060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060006002600101819055506103bf806100c26000396000f30060806040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806366c99139146100515780636d4ce63c1461007e575b600080fd5b34801561005d57600080fd5b5061007c600480360381019080803590602001909291905050506100a9565b005b34801561008a57600080fd5b506100936102e1565b6040518082815260200191505060405180910390f35b8060006001015410806100c757506002600101548160026001015401105b156100d1576102de565b8060006001015403600060010181905550806002600101600082825401925050819055507fc77b710b83d1dc3f3fafeccd08a6c469beb873b2f0975b50d1698e46b3ee5b4c816040518082815260200191505060405180910390a160046080604051908101604052806040805190810160405280600881526020017f323031373034313300000000000000000000000000000000000000000000000081525081526020016000800160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600260000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152509080600181540180825580915050906001820390600052602060002090600402016000909192909190915060008201518160000190805190602001906102419291906102ee565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600301555050505b50565b6000600260010154905090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061032f57805160ff191683800117855561035d565b8280016001018555821561035d579182015b8281111561035c578251825591602001919060010190610341565b5b50905061036a919061036e565b5090565b61039091905b8082111561038c576000816000905550600101610374565b5090565b905600a165627a7a723058203c6488d9a80e837aab52f5c5ef1d0b37b671ca2891fd1d92711d3d3ef884b6400029\";\n+\n+    public static final String ABI = \"[{\\\"constant\\\":false,\\\"inputs\\\":[{\\\"name\\\":\\\"num\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"name\\\":\\\"trans\\\",\\\"outputs\\\":[],\\\"payable\\\":false,\\\"stateMutability\\\":\\\"nonpayable\\\",\\\"type\\\":\\\"function\\\"},{\\\"constant\\\":true,\\\"inputs\\\":[],\\\"name\\\":\\\"get\\\",\\\"outputs\\\":[{\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"payable\\\":false,\\\"stateMutability\\\":\\\"view\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[],\\\"payable\\\":false,\\\"stateMutability\\\":\\\"nonpayable\\\",\\\"type\\\":\\\"constructor\\\"},{\\\"anonymous\\\":false,\\\"inputs\\\":[{\\\"indexed\\\":false,\\\"name\\\":\\\"num\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"name\\\":\\\"TransEvent\\\",\\\"type\\\":\\\"event\\\"}]\";\n+\n+    public static final TransactionDecoder transactionDecoder = new TransactionDecoder(ABI, BINARY);\n+\n+    public static String SM_BINARY = \"608060405234801561001057600080fd5b5060016000800160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506402540be40060006001018190555060028060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060006002600101819055506103bf806100c26000396000f30060806040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063299f7f9d146100515780638fff0fc41461007c575b600080fd5b34801561005d57600080fd5b506100666100a9565b6040518082815260200191505060405180910390f35b34801561008857600080fd5b506100a7600480360381019080803590602001909291905050506100b6565b005b6000600260010154905090565b8060006001015410806100d457506002600101548160026001015401105b156100de576102eb565b8060006001015403600060010181905550806002600101600082825401925050819055507fc345610041c3c141ff9e0fbc73b34bf13842fd02e0c3cfe6541eedd6adef4b2c816040518082815260200191505060405180910390a160046080604051908101604052806040805190810160405280600881526020017f323031373034313300000000000000000000000000000000000000000000000081525081526020016000800160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600260000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018381525090806001815401808255809150509060018203906000526020600020906004020160009091929091909150600082015181600001908051906020019061024e9291906102ee565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600301555050505b50565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061032f57805160ff191683800117855561035d565b8280016001018555821561035d579182015b8281111561035c578251825591602001919060010190610341565b5b50905061036a919061036e565b5090565b61039091905b8082111561038c576000816000905550600101610374565b5090565b905600a165627a7a723058205957e1c3edeb7d8d9ba7f64d56205c70972f2b91f880af98000f404fd22af37b0029\";\n+\n+    public static final String FUNC_TRANS = \"trans\";\n+\n+    public static final String FUNC_GET = \"get\";\n+\n+    public static final Event TRANSEVENT_EVENT = new Event(\"TransEvent\", \n             Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));\n-    return executeRemoteCallSingleValueReturn(function, BigInteger.class);\n-  }\n-\n-  public List<TransEventEventResponse> getTransEventEvents(TransactionReceipt transactionReceipt) {\n-    List<Contract.EventValuesWithLog> valueList =\n-        extractEventParametersWithLog(TRANSEVENT_EVENT, transactionReceipt);\n-    ArrayList<TransEventEventResponse> responses =\n-        new ArrayList<TransEventEventResponse>(valueList.size());\n-    for (Contract.EventValuesWithLog eventValues : valueList) {\n-      TransEventEventResponse typedResponse = new TransEventEventResponse();\n-      typedResponse.log = eventValues.getLog();\n-      typedResponse.num = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();\n-      responses.add(typedResponse);\n-    }\n-    return responses;\n-  }\n-\n-  public Flowable<TransEventEventResponse> transEventEventFlowable(BcosFilter filter) {\n-    return web3j\n-        .logFlowable(filter)\n-        .map(\n-            new io.reactivex.functions.Function<Log, TransEventEventResponse>() {\n-              @Override\n-              public TransEventEventResponse apply(Log log) {\n-                Contract.EventValuesWithLog eventValues =\n-                    extractEventParametersWithLog(TRANSEVENT_EVENT, log);\n-                TransEventEventResponse typedResponse = new TransEventEventResponse();\n-                typedResponse.log = log;\n-                typedResponse.num =\n-                    (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();\n-                return typedResponse;\n-              }\n-            });\n-  }\n-\n-  public Flowable<TransEventEventResponse> transEventEventFlowable(\n-      DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {\n-    BcosFilter filter = new BcosFilter(startBlock, endBlock, getContractAddress());\n-    filter.addSingleTopic(EventEncoder.encode(TRANSEVENT_EVENT));\n-    return transEventEventFlowable(filter);\n-  }\n-\n-  @Deprecated\n-  public static Ok load(\n-      String contractAddress,\n-      Web3j web3j,\n-      Credentials credentials,\n-      BigInteger gasPrice,\n-      BigInteger gasLimit) {\n-    return new Ok(contractAddress, web3j, credentials, gasPrice, gasLimit);\n-  }\n-\n-  @Deprecated\n-  public static Ok load(\n-      String contractAddress,\n-      Web3j web3j,\n-      TransactionManager transactionManager,\n-      BigInteger gasPrice,\n-      BigInteger gasLimit) {\n-    return new Ok(contractAddress, web3j, transactionManager, gasPrice, gasLimit);\n-  }\n-\n-  public static Ok load(\n-      String contractAddress,\n-      Web3j web3j,\n-      Credentials credentials,\n-      ContractGasProvider contractGasProvider) {\n-    return new Ok(contractAddress, web3j, credentials, contractGasProvider);\n-  }\n-\n-  public static Ok load(\n-      String contractAddress,\n-      Web3j web3j,\n-      TransactionManager transactionManager,\n-      ContractGasProvider contractGasProvider) {\n-    return new Ok(contractAddress, web3j, transactionManager, contractGasProvider);\n-  }\n-\n-  public static RemoteCall<Ok> deploy(\n-      Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {\n-    return deployRemoteCall(Ok.class, web3j, credentials, contractGasProvider, BINARY, \"\");\n-  }\n-\n-  public static RemoteCall<Ok> deploy(\n-      Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {\n-    return deployRemoteCall(Ok.class, web3j, transactionManager, contractGasProvider, BINARY, \"\");\n-  }\n-\n-  @Deprecated\n-  public static RemoteCall<Ok> deploy(\n-      Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {\n-    return deployRemoteCall(Ok.class, web3j, credentials, gasPrice, gasLimit, BINARY, \"\");\n-  }\n-\n-  @Deprecated\n-  public static RemoteCall<Ok> deploy(\n-      Web3j web3j,\n-      TransactionManager transactionManager,\n-      BigInteger gasPrice,\n-      BigInteger gasLimit) {\n-    return deployRemoteCall(Ok.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, \"\");\n-  }\n-\n-  public static class TransEventEventResponse {\n-    public Log log;\n-\n-    public BigInteger num;\n-  }\n+    ;\n+\n+    @Deprecated\n+    protected Ok(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {\n+        super(getBinary(), contractAddress, web3j, credentials, gasPrice, gasLimit);\n+    }\n+\n+    protected Ok(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {\n+        super(getBinary(), contractAddress, web3j, credentials, contractGasProvider);\n+    }\n+\n+    @Deprecated\n+    protected Ok(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {\n+        super(getBinary(), contractAddress, web3j, transactionManager, gasPrice, gasLimit);\n+    }\n+\n+    protected Ok(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {\n+        super(getBinary(), contractAddress, web3j, transactionManager, contractGasProvider);\n+    }\n+\n+    public static String getBinary() {\n+        return (EncryptType.encryptType == EncryptType.ECDSA_TYPE ? BINARY : SM_BINARY);\n+    }\n+\n+    public static TransactionDecoder getTransactionDecoder() {\n+        return transactionDecoder;\n+    }\n+\n+    public RemoteCall<TransactionReceipt> trans(BigInteger num) {\n+        final Function function = new Function(\n+                FUNC_TRANS, \n+                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(num)), \n+                Collections.<TypeReference<?>>emptyList());\n+        return executeRemoteCallTransaction(function);\n+    }\n+\n+    public void trans(BigInteger num, TransactionSucCallback callback) {\n+        final Function function = new Function(\n+                FUNC_TRANS, \n+                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(num)), \n+                Collections.<TypeReference<?>>emptyList());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ab99cd3bbd8904e5316c8c58e13e385b0aba8d32"}, "originalPosition": 279}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNDU5Mjg4OnYy", "diffSide": "RIGHT", "path": "src/integration-test/java/org/fisco/bcos/contract/Ok.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxMTo1NDo0M1rOGhFuLQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxMTo1NDo0M1rOGhFuLQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzM0OTkzMw==", "bodyText": "[PMD Java] Potential violation of Law of Demeter (method chain calls) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.23.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/600#discussion_r437349933", "createdAt": "2020-06-09T11:54:43Z", "author": {"login": "sider"}, "path": "src/integration-test/java/org/fisco/bcos/contract/Ok.java", "diffHunk": "@@ -1,217 +1,188 @@\n package org.fisco.bcos.contract;\n \n-import io.reactivex.Flowable;\n import java.math.BigInteger;\n import java.util.ArrayList;\n import java.util.Arrays;\n import java.util.Collections;\n import java.util.List;\n import org.fisco.bcos.channel.client.TransactionSucCallback;\n+import org.fisco.bcos.channel.event.filter.EventLogPushWithDecodeCallback;\n import org.fisco.bcos.web3j.abi.EventEncoder;\n+import org.fisco.bcos.web3j.abi.FunctionReturnDecoder;\n import org.fisco.bcos.web3j.abi.TypeReference;\n import org.fisco.bcos.web3j.abi.datatypes.Event;\n import org.fisco.bcos.web3j.abi.datatypes.Function;\n import org.fisco.bcos.web3j.abi.datatypes.Type;\n import org.fisco.bcos.web3j.abi.datatypes.generated.Uint256;\n import org.fisco.bcos.web3j.crypto.Credentials;\n+import org.fisco.bcos.web3j.crypto.EncryptType;\n import org.fisco.bcos.web3j.protocol.Web3j;\n-import org.fisco.bcos.web3j.protocol.core.DefaultBlockParameter;\n import org.fisco.bcos.web3j.protocol.core.RemoteCall;\n-import org.fisco.bcos.web3j.protocol.core.methods.request.BcosFilter;\n import org.fisco.bcos.web3j.protocol.core.methods.response.Log;\n import org.fisco.bcos.web3j.protocol.core.methods.response.TransactionReceipt;\n+import org.fisco.bcos.web3j.tuples.generated.Tuple1;\n import org.fisco.bcos.web3j.tx.Contract;\n import org.fisco.bcos.web3j.tx.TransactionManager;\n import org.fisco.bcos.web3j.tx.gas.ContractGasProvider;\n+import org.fisco.bcos.web3j.tx.txdecode.TransactionDecoder;\n \n /**\n- * Auto generated code.\n- *\n+ * <p>Auto generated code.\n  * <p><strong>Do not modify!</strong>\n- *\n  * <p>Please use the <a href=\"https://docs.web3j.io/command_line.html\">web3j command line tools</a>,\n- * or the org.fisco.bcos.web3j.codegen.SolidityFunctionWrapperGenerator in the <a\n- * href=\"https://github.com/web3j/web3j/tree/master/codegen\">codegen module</a> to update.\n+ * or the org.fisco.bcos.web3j.codegen.SolidityFunctionWrapperGenerator in the \n+ * <a href=\"https://github.com/web3j/web3j/tree/master/codegen\">codegen module</a> to update.\n  *\n  * <p>Generated with web3j version none.\n  */\n+@SuppressWarnings(\"unchecked\")\n public class Ok extends Contract {\n-  private static final String BINARY =\n-      \"608060405234801561001057600080fd5b5060016000800160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506402540be40060006001018190555060028060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060006002600101819055506103bf806100c26000396000f30060806040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806366c99139146100515780636d4ce63c1461007e575b600080fd5b34801561005d57600080fd5b5061007c600480360381019080803590602001909291905050506100a9565b005b34801561008a57600080fd5b506100936102e1565b6040518082815260200191505060405180910390f35b8060006001015410806100c757506002600101548160026001015401105b156100d1576102de565b8060006001015403600060010181905550806002600101600082825401925050819055507fc77b710b83d1dc3f3fafeccd08a6c469beb873b2f0975b50d1698e46b3ee5b4c816040518082815260200191505060405180910390a160046080604051908101604052806040805190810160405280600881526020017f323031373034313300000000000000000000000000000000000000000000000081525081526020016000800160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600260000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152509080600181540180825580915050906001820390600052602060002090600402016000909192909190915060008201518160000190805190602001906102419291906102ee565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600301555050505b50565b6000600260010154905090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061032f57805160ff191683800117855561035d565b8280016001018555821561035d579182015b8281111561035c578251825591602001919060010190610341565b5b50905061036a919061036e565b5090565b61039091905b8082111561038c576000816000905550600101610374565b5090565b905600a165627a7a72305820fb983c66bee66788f407721b23b10a8aae3dc9ef8f1b09e08ec6a6c0b0ec70100029\";\n-\n-  public static final String FUNC_TRANS = \"trans\";\n-\n-  public static final String FUNC_GET = \"get\";\n-\n-  public static final Event TRANSEVENT_EVENT =\n-      new Event(\"TransEvent\", Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));;\n-\n-  @Deprecated\n-  protected Ok(\n-      String contractAddress,\n-      Web3j web3j,\n-      Credentials credentials,\n-      BigInteger gasPrice,\n-      BigInteger gasLimit) {\n-    super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);\n-  }\n-\n-  protected Ok(\n-      String contractAddress,\n-      Web3j web3j,\n-      Credentials credentials,\n-      ContractGasProvider contractGasProvider) {\n-    super(BINARY, contractAddress, web3j, credentials, contractGasProvider);\n-  }\n-\n-  @Deprecated\n-  protected Ok(\n-      String contractAddress,\n-      Web3j web3j,\n-      TransactionManager transactionManager,\n-      BigInteger gasPrice,\n-      BigInteger gasLimit) {\n-    super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);\n-  }\n-\n-  protected Ok(\n-      String contractAddress,\n-      Web3j web3j,\n-      TransactionManager transactionManager,\n-      ContractGasProvider contractGasProvider) {\n-    super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);\n-  }\n-\n-  public RemoteCall<TransactionReceipt> trans(BigInteger num) {\n-    final Function function =\n-        new Function(\n-            FUNC_TRANS,\n-            Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(num)),\n-            Collections.<TypeReference<?>>emptyList());\n-    return executeRemoteCallTransaction(function);\n-  }\n-\n-  public void trans(BigInteger num, TransactionSucCallback callback) {\n-    final Function function =\n-        new Function(\n-            FUNC_TRANS,\n-            Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(num)),\n-            Collections.<TypeReference<?>>emptyList());\n-    asyncExecuteTransaction(function, callback);\n-  }\n-\n-  public RemoteCall<BigInteger> get() {\n-    final Function function =\n-        new Function(\n-            FUNC_GET,\n-            Arrays.<Type>asList(),\n+    public static String BINARY = \"608060405234801561001057600080fd5b5060016000800160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506402540be40060006001018190555060028060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060006002600101819055506103bf806100c26000396000f30060806040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806366c99139146100515780636d4ce63c1461007e575b600080fd5b34801561005d57600080fd5b5061007c600480360381019080803590602001909291905050506100a9565b005b34801561008a57600080fd5b506100936102e1565b6040518082815260200191505060405180910390f35b8060006001015410806100c757506002600101548160026001015401105b156100d1576102de565b8060006001015403600060010181905550806002600101600082825401925050819055507fc77b710b83d1dc3f3fafeccd08a6c469beb873b2f0975b50d1698e46b3ee5b4c816040518082815260200191505060405180910390a160046080604051908101604052806040805190810160405280600881526020017f323031373034313300000000000000000000000000000000000000000000000081525081526020016000800160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600260000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152509080600181540180825580915050906001820390600052602060002090600402016000909192909190915060008201518160000190805190602001906102419291906102ee565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600301555050505b50565b6000600260010154905090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061032f57805160ff191683800117855561035d565b8280016001018555821561035d579182015b8281111561035c578251825591602001919060010190610341565b5b50905061036a919061036e565b5090565b61039091905b8082111561038c576000816000905550600101610374565b5090565b905600a165627a7a723058203c6488d9a80e837aab52f5c5ef1d0b37b671ca2891fd1d92711d3d3ef884b6400029\";\n+\n+    public static final String ABI = \"[{\\\"constant\\\":false,\\\"inputs\\\":[{\\\"name\\\":\\\"num\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"name\\\":\\\"trans\\\",\\\"outputs\\\":[],\\\"payable\\\":false,\\\"stateMutability\\\":\\\"nonpayable\\\",\\\"type\\\":\\\"function\\\"},{\\\"constant\\\":true,\\\"inputs\\\":[],\\\"name\\\":\\\"get\\\",\\\"outputs\\\":[{\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"payable\\\":false,\\\"stateMutability\\\":\\\"view\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[],\\\"payable\\\":false,\\\"stateMutability\\\":\\\"nonpayable\\\",\\\"type\\\":\\\"constructor\\\"},{\\\"anonymous\\\":false,\\\"inputs\\\":[{\\\"indexed\\\":false,\\\"name\\\":\\\"num\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"name\\\":\\\"TransEvent\\\",\\\"type\\\":\\\"event\\\"}]\";\n+\n+    public static final TransactionDecoder transactionDecoder = new TransactionDecoder(ABI, BINARY);\n+\n+    public static String SM_BINARY = \"608060405234801561001057600080fd5b5060016000800160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506402540be40060006001018190555060028060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060006002600101819055506103bf806100c26000396000f30060806040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063299f7f9d146100515780638fff0fc41461007c575b600080fd5b34801561005d57600080fd5b506100666100a9565b6040518082815260200191505060405180910390f35b34801561008857600080fd5b506100a7600480360381019080803590602001909291905050506100b6565b005b6000600260010154905090565b8060006001015410806100d457506002600101548160026001015401105b156100de576102eb565b8060006001015403600060010181905550806002600101600082825401925050819055507fc345610041c3c141ff9e0fbc73b34bf13842fd02e0c3cfe6541eedd6adef4b2c816040518082815260200191505060405180910390a160046080604051908101604052806040805190810160405280600881526020017f323031373034313300000000000000000000000000000000000000000000000081525081526020016000800160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600260000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018381525090806001815401808255809150509060018203906000526020600020906004020160009091929091909150600082015181600001908051906020019061024e9291906102ee565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600301555050505b50565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061032f57805160ff191683800117855561035d565b8280016001018555821561035d579182015b8281111561035c578251825591602001919060010190610341565b5b50905061036a919061036e565b5090565b61039091905b8082111561038c576000816000905550600101610374565b5090565b905600a165627a7a723058205957e1c3edeb7d8d9ba7f64d56205c70972f2b91f880af98000f404fd22af37b0029\";\n+\n+    public static final String FUNC_TRANS = \"trans\";\n+\n+    public static final String FUNC_GET = \"get\";\n+\n+    public static final Event TRANSEVENT_EVENT = new Event(\"TransEvent\", \n             Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));\n-    return executeRemoteCallSingleValueReturn(function, BigInteger.class);\n-  }\n-\n-  public List<TransEventEventResponse> getTransEventEvents(TransactionReceipt transactionReceipt) {\n-    List<Contract.EventValuesWithLog> valueList =\n-        extractEventParametersWithLog(TRANSEVENT_EVENT, transactionReceipt);\n-    ArrayList<TransEventEventResponse> responses =\n-        new ArrayList<TransEventEventResponse>(valueList.size());\n-    for (Contract.EventValuesWithLog eventValues : valueList) {\n-      TransEventEventResponse typedResponse = new TransEventEventResponse();\n-      typedResponse.log = eventValues.getLog();\n-      typedResponse.num = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();\n-      responses.add(typedResponse);\n-    }\n-    return responses;\n-  }\n-\n-  public Flowable<TransEventEventResponse> transEventEventFlowable(BcosFilter filter) {\n-    return web3j\n-        .logFlowable(filter)\n-        .map(\n-            new io.reactivex.functions.Function<Log, TransEventEventResponse>() {\n-              @Override\n-              public TransEventEventResponse apply(Log log) {\n-                Contract.EventValuesWithLog eventValues =\n-                    extractEventParametersWithLog(TRANSEVENT_EVENT, log);\n-                TransEventEventResponse typedResponse = new TransEventEventResponse();\n-                typedResponse.log = log;\n-                typedResponse.num =\n-                    (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();\n-                return typedResponse;\n-              }\n-            });\n-  }\n-\n-  public Flowable<TransEventEventResponse> transEventEventFlowable(\n-      DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {\n-    BcosFilter filter = new BcosFilter(startBlock, endBlock, getContractAddress());\n-    filter.addSingleTopic(EventEncoder.encode(TRANSEVENT_EVENT));\n-    return transEventEventFlowable(filter);\n-  }\n-\n-  @Deprecated\n-  public static Ok load(\n-      String contractAddress,\n-      Web3j web3j,\n-      Credentials credentials,\n-      BigInteger gasPrice,\n-      BigInteger gasLimit) {\n-    return new Ok(contractAddress, web3j, credentials, gasPrice, gasLimit);\n-  }\n-\n-  @Deprecated\n-  public static Ok load(\n-      String contractAddress,\n-      Web3j web3j,\n-      TransactionManager transactionManager,\n-      BigInteger gasPrice,\n-      BigInteger gasLimit) {\n-    return new Ok(contractAddress, web3j, transactionManager, gasPrice, gasLimit);\n-  }\n-\n-  public static Ok load(\n-      String contractAddress,\n-      Web3j web3j,\n-      Credentials credentials,\n-      ContractGasProvider contractGasProvider) {\n-    return new Ok(contractAddress, web3j, credentials, contractGasProvider);\n-  }\n-\n-  public static Ok load(\n-      String contractAddress,\n-      Web3j web3j,\n-      TransactionManager transactionManager,\n-      ContractGasProvider contractGasProvider) {\n-    return new Ok(contractAddress, web3j, transactionManager, contractGasProvider);\n-  }\n-\n-  public static RemoteCall<Ok> deploy(\n-      Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {\n-    return deployRemoteCall(Ok.class, web3j, credentials, contractGasProvider, BINARY, \"\");\n-  }\n-\n-  public static RemoteCall<Ok> deploy(\n-      Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {\n-    return deployRemoteCall(Ok.class, web3j, transactionManager, contractGasProvider, BINARY, \"\");\n-  }\n-\n-  @Deprecated\n-  public static RemoteCall<Ok> deploy(\n-      Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {\n-    return deployRemoteCall(Ok.class, web3j, credentials, gasPrice, gasLimit, BINARY, \"\");\n-  }\n-\n-  @Deprecated\n-  public static RemoteCall<Ok> deploy(\n-      Web3j web3j,\n-      TransactionManager transactionManager,\n-      BigInteger gasPrice,\n-      BigInteger gasLimit) {\n-    return deployRemoteCall(Ok.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, \"\");\n-  }\n-\n-  public static class TransEventEventResponse {\n-    public Log log;\n-\n-    public BigInteger num;\n-  }\n+    ;\n+\n+    @Deprecated\n+    protected Ok(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {\n+        super(getBinary(), contractAddress, web3j, credentials, gasPrice, gasLimit);\n+    }\n+\n+    protected Ok(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {\n+        super(getBinary(), contractAddress, web3j, credentials, contractGasProvider);\n+    }\n+\n+    @Deprecated\n+    protected Ok(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {\n+        super(getBinary(), contractAddress, web3j, transactionManager, gasPrice, gasLimit);\n+    }\n+\n+    protected Ok(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {\n+        super(getBinary(), contractAddress, web3j, transactionManager, contractGasProvider);\n+    }\n+\n+    public static String getBinary() {\n+        return (EncryptType.encryptType == EncryptType.ECDSA_TYPE ? BINARY : SM_BINARY);\n+    }\n+\n+    public static TransactionDecoder getTransactionDecoder() {\n+        return transactionDecoder;\n+    }\n+\n+    public RemoteCall<TransactionReceipt> trans(BigInteger num) {\n+        final Function function = new Function(\n+                FUNC_TRANS, \n+                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(num)), \n+                Collections.<TypeReference<?>>emptyList());\n+        return executeRemoteCallTransaction(function);\n+    }\n+\n+    public void trans(BigInteger num, TransactionSucCallback callback) {\n+        final Function function = new Function(\n+                FUNC_TRANS, \n+                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(num)), \n+                Collections.<TypeReference<?>>emptyList());\n+        asyncExecuteTransaction(function, callback);\n+    }\n+\n+    public String transSeq(BigInteger num) {\n+        final Function function = new Function(\n+                FUNC_TRANS, \n+                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(num)), \n+                Collections.<TypeReference<?>>emptyList());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ab99cd3bbd8904e5316c8c58e13e385b0aba8d32"}, "originalPosition": 287}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNDU5Mjg5OnYy", "diffSide": "RIGHT", "path": "src/integration-test/java/org/fisco/bcos/contract/Ok.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxMTo1NDo0NFrOGhFuLg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxMTo1NDo0NFrOGhFuLg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzM0OTkzNA==", "bodyText": "[PMD Java] Potential violation of Law of Demeter (method chain calls) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.23.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/600#discussion_r437349934", "createdAt": "2020-06-09T11:54:44Z", "author": {"login": "sider"}, "path": "src/integration-test/java/org/fisco/bcos/contract/Ok.java", "diffHunk": "@@ -1,217 +1,188 @@\n package org.fisco.bcos.contract;\n \n-import io.reactivex.Flowable;\n import java.math.BigInteger;\n import java.util.ArrayList;\n import java.util.Arrays;\n import java.util.Collections;\n import java.util.List;\n import org.fisco.bcos.channel.client.TransactionSucCallback;\n+import org.fisco.bcos.channel.event.filter.EventLogPushWithDecodeCallback;\n import org.fisco.bcos.web3j.abi.EventEncoder;\n+import org.fisco.bcos.web3j.abi.FunctionReturnDecoder;\n import org.fisco.bcos.web3j.abi.TypeReference;\n import org.fisco.bcos.web3j.abi.datatypes.Event;\n import org.fisco.bcos.web3j.abi.datatypes.Function;\n import org.fisco.bcos.web3j.abi.datatypes.Type;\n import org.fisco.bcos.web3j.abi.datatypes.generated.Uint256;\n import org.fisco.bcos.web3j.crypto.Credentials;\n+import org.fisco.bcos.web3j.crypto.EncryptType;\n import org.fisco.bcos.web3j.protocol.Web3j;\n-import org.fisco.bcos.web3j.protocol.core.DefaultBlockParameter;\n import org.fisco.bcos.web3j.protocol.core.RemoteCall;\n-import org.fisco.bcos.web3j.protocol.core.methods.request.BcosFilter;\n import org.fisco.bcos.web3j.protocol.core.methods.response.Log;\n import org.fisco.bcos.web3j.protocol.core.methods.response.TransactionReceipt;\n+import org.fisco.bcos.web3j.tuples.generated.Tuple1;\n import org.fisco.bcos.web3j.tx.Contract;\n import org.fisco.bcos.web3j.tx.TransactionManager;\n import org.fisco.bcos.web3j.tx.gas.ContractGasProvider;\n+import org.fisco.bcos.web3j.tx.txdecode.TransactionDecoder;\n \n /**\n- * Auto generated code.\n- *\n+ * <p>Auto generated code.\n  * <p><strong>Do not modify!</strong>\n- *\n  * <p>Please use the <a href=\"https://docs.web3j.io/command_line.html\">web3j command line tools</a>,\n- * or the org.fisco.bcos.web3j.codegen.SolidityFunctionWrapperGenerator in the <a\n- * href=\"https://github.com/web3j/web3j/tree/master/codegen\">codegen module</a> to update.\n+ * or the org.fisco.bcos.web3j.codegen.SolidityFunctionWrapperGenerator in the \n+ * <a href=\"https://github.com/web3j/web3j/tree/master/codegen\">codegen module</a> to update.\n  *\n  * <p>Generated with web3j version none.\n  */\n+@SuppressWarnings(\"unchecked\")\n public class Ok extends Contract {\n-  private static final String BINARY =\n-      \"608060405234801561001057600080fd5b5060016000800160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506402540be40060006001018190555060028060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060006002600101819055506103bf806100c26000396000f30060806040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806366c99139146100515780636d4ce63c1461007e575b600080fd5b34801561005d57600080fd5b5061007c600480360381019080803590602001909291905050506100a9565b005b34801561008a57600080fd5b506100936102e1565b6040518082815260200191505060405180910390f35b8060006001015410806100c757506002600101548160026001015401105b156100d1576102de565b8060006001015403600060010181905550806002600101600082825401925050819055507fc77b710b83d1dc3f3fafeccd08a6c469beb873b2f0975b50d1698e46b3ee5b4c816040518082815260200191505060405180910390a160046080604051908101604052806040805190810160405280600881526020017f323031373034313300000000000000000000000000000000000000000000000081525081526020016000800160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600260000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152509080600181540180825580915050906001820390600052602060002090600402016000909192909190915060008201518160000190805190602001906102419291906102ee565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600301555050505b50565b6000600260010154905090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061032f57805160ff191683800117855561035d565b8280016001018555821561035d579182015b8281111561035c578251825591602001919060010190610341565b5b50905061036a919061036e565b5090565b61039091905b8082111561038c576000816000905550600101610374565b5090565b905600a165627a7a72305820fb983c66bee66788f407721b23b10a8aae3dc9ef8f1b09e08ec6a6c0b0ec70100029\";\n-\n-  public static final String FUNC_TRANS = \"trans\";\n-\n-  public static final String FUNC_GET = \"get\";\n-\n-  public static final Event TRANSEVENT_EVENT =\n-      new Event(\"TransEvent\", Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));;\n-\n-  @Deprecated\n-  protected Ok(\n-      String contractAddress,\n-      Web3j web3j,\n-      Credentials credentials,\n-      BigInteger gasPrice,\n-      BigInteger gasLimit) {\n-    super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);\n-  }\n-\n-  protected Ok(\n-      String contractAddress,\n-      Web3j web3j,\n-      Credentials credentials,\n-      ContractGasProvider contractGasProvider) {\n-    super(BINARY, contractAddress, web3j, credentials, contractGasProvider);\n-  }\n-\n-  @Deprecated\n-  protected Ok(\n-      String contractAddress,\n-      Web3j web3j,\n-      TransactionManager transactionManager,\n-      BigInteger gasPrice,\n-      BigInteger gasLimit) {\n-    super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);\n-  }\n-\n-  protected Ok(\n-      String contractAddress,\n-      Web3j web3j,\n-      TransactionManager transactionManager,\n-      ContractGasProvider contractGasProvider) {\n-    super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);\n-  }\n-\n-  public RemoteCall<TransactionReceipt> trans(BigInteger num) {\n-    final Function function =\n-        new Function(\n-            FUNC_TRANS,\n-            Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(num)),\n-            Collections.<TypeReference<?>>emptyList());\n-    return executeRemoteCallTransaction(function);\n-  }\n-\n-  public void trans(BigInteger num, TransactionSucCallback callback) {\n-    final Function function =\n-        new Function(\n-            FUNC_TRANS,\n-            Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(num)),\n-            Collections.<TypeReference<?>>emptyList());\n-    asyncExecuteTransaction(function, callback);\n-  }\n-\n-  public RemoteCall<BigInteger> get() {\n-    final Function function =\n-        new Function(\n-            FUNC_GET,\n-            Arrays.<Type>asList(),\n+    public static String BINARY = \"608060405234801561001057600080fd5b5060016000800160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506402540be40060006001018190555060028060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060006002600101819055506103bf806100c26000396000f30060806040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806366c99139146100515780636d4ce63c1461007e575b600080fd5b34801561005d57600080fd5b5061007c600480360381019080803590602001909291905050506100a9565b005b34801561008a57600080fd5b506100936102e1565b6040518082815260200191505060405180910390f35b8060006001015410806100c757506002600101548160026001015401105b156100d1576102de565b8060006001015403600060010181905550806002600101600082825401925050819055507fc77b710b83d1dc3f3fafeccd08a6c469beb873b2f0975b50d1698e46b3ee5b4c816040518082815260200191505060405180910390a160046080604051908101604052806040805190810160405280600881526020017f323031373034313300000000000000000000000000000000000000000000000081525081526020016000800160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600260000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152509080600181540180825580915050906001820390600052602060002090600402016000909192909190915060008201518160000190805190602001906102419291906102ee565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600301555050505b50565b6000600260010154905090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061032f57805160ff191683800117855561035d565b8280016001018555821561035d579182015b8281111561035c578251825591602001919060010190610341565b5b50905061036a919061036e565b5090565b61039091905b8082111561038c576000816000905550600101610374565b5090565b905600a165627a7a723058203c6488d9a80e837aab52f5c5ef1d0b37b671ca2891fd1d92711d3d3ef884b6400029\";\n+\n+    public static final String ABI = \"[{\\\"constant\\\":false,\\\"inputs\\\":[{\\\"name\\\":\\\"num\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"name\\\":\\\"trans\\\",\\\"outputs\\\":[],\\\"payable\\\":false,\\\"stateMutability\\\":\\\"nonpayable\\\",\\\"type\\\":\\\"function\\\"},{\\\"constant\\\":true,\\\"inputs\\\":[],\\\"name\\\":\\\"get\\\",\\\"outputs\\\":[{\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"payable\\\":false,\\\"stateMutability\\\":\\\"view\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[],\\\"payable\\\":false,\\\"stateMutability\\\":\\\"nonpayable\\\",\\\"type\\\":\\\"constructor\\\"},{\\\"anonymous\\\":false,\\\"inputs\\\":[{\\\"indexed\\\":false,\\\"name\\\":\\\"num\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"name\\\":\\\"TransEvent\\\",\\\"type\\\":\\\"event\\\"}]\";\n+\n+    public static final TransactionDecoder transactionDecoder = new TransactionDecoder(ABI, BINARY);\n+\n+    public static String SM_BINARY = \"608060405234801561001057600080fd5b5060016000800160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506402540be40060006001018190555060028060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060006002600101819055506103bf806100c26000396000f30060806040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063299f7f9d146100515780638fff0fc41461007c575b600080fd5b34801561005d57600080fd5b506100666100a9565b6040518082815260200191505060405180910390f35b34801561008857600080fd5b506100a7600480360381019080803590602001909291905050506100b6565b005b6000600260010154905090565b8060006001015410806100d457506002600101548160026001015401105b156100de576102eb565b8060006001015403600060010181905550806002600101600082825401925050819055507fc345610041c3c141ff9e0fbc73b34bf13842fd02e0c3cfe6541eedd6adef4b2c816040518082815260200191505060405180910390a160046080604051908101604052806040805190810160405280600881526020017f323031373034313300000000000000000000000000000000000000000000000081525081526020016000800160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600260000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018381525090806001815401808255809150509060018203906000526020600020906004020160009091929091909150600082015181600001908051906020019061024e9291906102ee565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600301555050505b50565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061032f57805160ff191683800117855561035d565b8280016001018555821561035d579182015b8281111561035c578251825591602001919060010190610341565b5b50905061036a919061036e565b5090565b61039091905b8082111561038c576000816000905550600101610374565b5090565b905600a165627a7a723058205957e1c3edeb7d8d9ba7f64d56205c70972f2b91f880af98000f404fd22af37b0029\";\n+\n+    public static final String FUNC_TRANS = \"trans\";\n+\n+    public static final String FUNC_GET = \"get\";\n+\n+    public static final Event TRANSEVENT_EVENT = new Event(\"TransEvent\", \n             Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));\n-    return executeRemoteCallSingleValueReturn(function, BigInteger.class);\n-  }\n-\n-  public List<TransEventEventResponse> getTransEventEvents(TransactionReceipt transactionReceipt) {\n-    List<Contract.EventValuesWithLog> valueList =\n-        extractEventParametersWithLog(TRANSEVENT_EVENT, transactionReceipt);\n-    ArrayList<TransEventEventResponse> responses =\n-        new ArrayList<TransEventEventResponse>(valueList.size());\n-    for (Contract.EventValuesWithLog eventValues : valueList) {\n-      TransEventEventResponse typedResponse = new TransEventEventResponse();\n-      typedResponse.log = eventValues.getLog();\n-      typedResponse.num = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();\n-      responses.add(typedResponse);\n-    }\n-    return responses;\n-  }\n-\n-  public Flowable<TransEventEventResponse> transEventEventFlowable(BcosFilter filter) {\n-    return web3j\n-        .logFlowable(filter)\n-        .map(\n-            new io.reactivex.functions.Function<Log, TransEventEventResponse>() {\n-              @Override\n-              public TransEventEventResponse apply(Log log) {\n-                Contract.EventValuesWithLog eventValues =\n-                    extractEventParametersWithLog(TRANSEVENT_EVENT, log);\n-                TransEventEventResponse typedResponse = new TransEventEventResponse();\n-                typedResponse.log = log;\n-                typedResponse.num =\n-                    (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();\n-                return typedResponse;\n-              }\n-            });\n-  }\n-\n-  public Flowable<TransEventEventResponse> transEventEventFlowable(\n-      DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {\n-    BcosFilter filter = new BcosFilter(startBlock, endBlock, getContractAddress());\n-    filter.addSingleTopic(EventEncoder.encode(TRANSEVENT_EVENT));\n-    return transEventEventFlowable(filter);\n-  }\n-\n-  @Deprecated\n-  public static Ok load(\n-      String contractAddress,\n-      Web3j web3j,\n-      Credentials credentials,\n-      BigInteger gasPrice,\n-      BigInteger gasLimit) {\n-    return new Ok(contractAddress, web3j, credentials, gasPrice, gasLimit);\n-  }\n-\n-  @Deprecated\n-  public static Ok load(\n-      String contractAddress,\n-      Web3j web3j,\n-      TransactionManager transactionManager,\n-      BigInteger gasPrice,\n-      BigInteger gasLimit) {\n-    return new Ok(contractAddress, web3j, transactionManager, gasPrice, gasLimit);\n-  }\n-\n-  public static Ok load(\n-      String contractAddress,\n-      Web3j web3j,\n-      Credentials credentials,\n-      ContractGasProvider contractGasProvider) {\n-    return new Ok(contractAddress, web3j, credentials, contractGasProvider);\n-  }\n-\n-  public static Ok load(\n-      String contractAddress,\n-      Web3j web3j,\n-      TransactionManager transactionManager,\n-      ContractGasProvider contractGasProvider) {\n-    return new Ok(contractAddress, web3j, transactionManager, contractGasProvider);\n-  }\n-\n-  public static RemoteCall<Ok> deploy(\n-      Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {\n-    return deployRemoteCall(Ok.class, web3j, credentials, contractGasProvider, BINARY, \"\");\n-  }\n-\n-  public static RemoteCall<Ok> deploy(\n-      Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {\n-    return deployRemoteCall(Ok.class, web3j, transactionManager, contractGasProvider, BINARY, \"\");\n-  }\n-\n-  @Deprecated\n-  public static RemoteCall<Ok> deploy(\n-      Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {\n-    return deployRemoteCall(Ok.class, web3j, credentials, gasPrice, gasLimit, BINARY, \"\");\n-  }\n-\n-  @Deprecated\n-  public static RemoteCall<Ok> deploy(\n-      Web3j web3j,\n-      TransactionManager transactionManager,\n-      BigInteger gasPrice,\n-      BigInteger gasLimit) {\n-    return deployRemoteCall(Ok.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, \"\");\n-  }\n-\n-  public static class TransEventEventResponse {\n-    public Log log;\n-\n-    public BigInteger num;\n-  }\n+    ;\n+\n+    @Deprecated\n+    protected Ok(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {\n+        super(getBinary(), contractAddress, web3j, credentials, gasPrice, gasLimit);\n+    }\n+\n+    protected Ok(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {\n+        super(getBinary(), contractAddress, web3j, credentials, contractGasProvider);\n+    }\n+\n+    @Deprecated\n+    protected Ok(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {\n+        super(getBinary(), contractAddress, web3j, transactionManager, gasPrice, gasLimit);\n+    }\n+\n+    protected Ok(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {\n+        super(getBinary(), contractAddress, web3j, transactionManager, contractGasProvider);\n+    }\n+\n+    public static String getBinary() {\n+        return (EncryptType.encryptType == EncryptType.ECDSA_TYPE ? BINARY : SM_BINARY);\n+    }\n+\n+    public static TransactionDecoder getTransactionDecoder() {\n+        return transactionDecoder;\n+    }\n+\n+    public RemoteCall<TransactionReceipt> trans(BigInteger num) {\n+        final Function function = new Function(\n+                FUNC_TRANS, \n+                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(num)), \n+                Collections.<TypeReference<?>>emptyList());\n+        return executeRemoteCallTransaction(function);\n+    }\n+\n+    public void trans(BigInteger num, TransactionSucCallback callback) {\n+        final Function function = new Function(\n+                FUNC_TRANS, \n+                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(num)), \n+                Collections.<TypeReference<?>>emptyList());\n+        asyncExecuteTransaction(function, callback);\n+    }\n+\n+    public String transSeq(BigInteger num) {\n+        final Function function = new Function(\n+                FUNC_TRANS, \n+                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(num)), \n+                Collections.<TypeReference<?>>emptyList());\n+        return createTransactionSeq(function);\n+    }\n+\n+    public Tuple1<BigInteger> getTransInput(TransactionReceipt transactionReceipt) {\n+        String data = transactionReceipt.getInput().substring(10);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ab99cd3bbd8904e5316c8c58e13e385b0aba8d32"}, "originalPosition": 292}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNDU5MjkxOnYy", "diffSide": "RIGHT", "path": "src/integration-test/java/org/fisco/bcos/contract/Ok.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxMTo1NDo0NFrOGhFuMA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxMTo1NDo0NFrOGhFuMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzM0OTkzNg==", "bodyText": "[PMD Java] Potential violation of Law of Demeter (method chain calls) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.23.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/600#discussion_r437349936", "createdAt": "2020-06-09T11:54:44Z", "author": {"login": "sider"}, "path": "src/integration-test/java/org/fisco/bcos/contract/Ok.java", "diffHunk": "@@ -1,217 +1,188 @@\n package org.fisco.bcos.contract;\n \n-import io.reactivex.Flowable;\n import java.math.BigInteger;\n import java.util.ArrayList;\n import java.util.Arrays;\n import java.util.Collections;\n import java.util.List;\n import org.fisco.bcos.channel.client.TransactionSucCallback;\n+import org.fisco.bcos.channel.event.filter.EventLogPushWithDecodeCallback;\n import org.fisco.bcos.web3j.abi.EventEncoder;\n+import org.fisco.bcos.web3j.abi.FunctionReturnDecoder;\n import org.fisco.bcos.web3j.abi.TypeReference;\n import org.fisco.bcos.web3j.abi.datatypes.Event;\n import org.fisco.bcos.web3j.abi.datatypes.Function;\n import org.fisco.bcos.web3j.abi.datatypes.Type;\n import org.fisco.bcos.web3j.abi.datatypes.generated.Uint256;\n import org.fisco.bcos.web3j.crypto.Credentials;\n+import org.fisco.bcos.web3j.crypto.EncryptType;\n import org.fisco.bcos.web3j.protocol.Web3j;\n-import org.fisco.bcos.web3j.protocol.core.DefaultBlockParameter;\n import org.fisco.bcos.web3j.protocol.core.RemoteCall;\n-import org.fisco.bcos.web3j.protocol.core.methods.request.BcosFilter;\n import org.fisco.bcos.web3j.protocol.core.methods.response.Log;\n import org.fisco.bcos.web3j.protocol.core.methods.response.TransactionReceipt;\n+import org.fisco.bcos.web3j.tuples.generated.Tuple1;\n import org.fisco.bcos.web3j.tx.Contract;\n import org.fisco.bcos.web3j.tx.TransactionManager;\n import org.fisco.bcos.web3j.tx.gas.ContractGasProvider;\n+import org.fisco.bcos.web3j.tx.txdecode.TransactionDecoder;\n \n /**\n- * Auto generated code.\n- *\n+ * <p>Auto generated code.\n  * <p><strong>Do not modify!</strong>\n- *\n  * <p>Please use the <a href=\"https://docs.web3j.io/command_line.html\">web3j command line tools</a>,\n- * or the org.fisco.bcos.web3j.codegen.SolidityFunctionWrapperGenerator in the <a\n- * href=\"https://github.com/web3j/web3j/tree/master/codegen\">codegen module</a> to update.\n+ * or the org.fisco.bcos.web3j.codegen.SolidityFunctionWrapperGenerator in the \n+ * <a href=\"https://github.com/web3j/web3j/tree/master/codegen\">codegen module</a> to update.\n  *\n  * <p>Generated with web3j version none.\n  */\n+@SuppressWarnings(\"unchecked\")\n public class Ok extends Contract {\n-  private static final String BINARY =\n-      \"608060405234801561001057600080fd5b5060016000800160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506402540be40060006001018190555060028060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060006002600101819055506103bf806100c26000396000f30060806040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806366c99139146100515780636d4ce63c1461007e575b600080fd5b34801561005d57600080fd5b5061007c600480360381019080803590602001909291905050506100a9565b005b34801561008a57600080fd5b506100936102e1565b6040518082815260200191505060405180910390f35b8060006001015410806100c757506002600101548160026001015401105b156100d1576102de565b8060006001015403600060010181905550806002600101600082825401925050819055507fc77b710b83d1dc3f3fafeccd08a6c469beb873b2f0975b50d1698e46b3ee5b4c816040518082815260200191505060405180910390a160046080604051908101604052806040805190810160405280600881526020017f323031373034313300000000000000000000000000000000000000000000000081525081526020016000800160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600260000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152509080600181540180825580915050906001820390600052602060002090600402016000909192909190915060008201518160000190805190602001906102419291906102ee565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600301555050505b50565b6000600260010154905090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061032f57805160ff191683800117855561035d565b8280016001018555821561035d579182015b8281111561035c578251825591602001919060010190610341565b5b50905061036a919061036e565b5090565b61039091905b8082111561038c576000816000905550600101610374565b5090565b905600a165627a7a72305820fb983c66bee66788f407721b23b10a8aae3dc9ef8f1b09e08ec6a6c0b0ec70100029\";\n-\n-  public static final String FUNC_TRANS = \"trans\";\n-\n-  public static final String FUNC_GET = \"get\";\n-\n-  public static final Event TRANSEVENT_EVENT =\n-      new Event(\"TransEvent\", Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));;\n-\n-  @Deprecated\n-  protected Ok(\n-      String contractAddress,\n-      Web3j web3j,\n-      Credentials credentials,\n-      BigInteger gasPrice,\n-      BigInteger gasLimit) {\n-    super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);\n-  }\n-\n-  protected Ok(\n-      String contractAddress,\n-      Web3j web3j,\n-      Credentials credentials,\n-      ContractGasProvider contractGasProvider) {\n-    super(BINARY, contractAddress, web3j, credentials, contractGasProvider);\n-  }\n-\n-  @Deprecated\n-  protected Ok(\n-      String contractAddress,\n-      Web3j web3j,\n-      TransactionManager transactionManager,\n-      BigInteger gasPrice,\n-      BigInteger gasLimit) {\n-    super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);\n-  }\n-\n-  protected Ok(\n-      String contractAddress,\n-      Web3j web3j,\n-      TransactionManager transactionManager,\n-      ContractGasProvider contractGasProvider) {\n-    super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);\n-  }\n-\n-  public RemoteCall<TransactionReceipt> trans(BigInteger num) {\n-    final Function function =\n-        new Function(\n-            FUNC_TRANS,\n-            Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(num)),\n-            Collections.<TypeReference<?>>emptyList());\n-    return executeRemoteCallTransaction(function);\n-  }\n-\n-  public void trans(BigInteger num, TransactionSucCallback callback) {\n-    final Function function =\n-        new Function(\n-            FUNC_TRANS,\n-            Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(num)),\n-            Collections.<TypeReference<?>>emptyList());\n-    asyncExecuteTransaction(function, callback);\n-  }\n-\n-  public RemoteCall<BigInteger> get() {\n-    final Function function =\n-        new Function(\n-            FUNC_GET,\n-            Arrays.<Type>asList(),\n+    public static String BINARY = \"608060405234801561001057600080fd5b5060016000800160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506402540be40060006001018190555060028060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060006002600101819055506103bf806100c26000396000f30060806040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806366c99139146100515780636d4ce63c1461007e575b600080fd5b34801561005d57600080fd5b5061007c600480360381019080803590602001909291905050506100a9565b005b34801561008a57600080fd5b506100936102e1565b6040518082815260200191505060405180910390f35b8060006001015410806100c757506002600101548160026001015401105b156100d1576102de565b8060006001015403600060010181905550806002600101600082825401925050819055507fc77b710b83d1dc3f3fafeccd08a6c469beb873b2f0975b50d1698e46b3ee5b4c816040518082815260200191505060405180910390a160046080604051908101604052806040805190810160405280600881526020017f323031373034313300000000000000000000000000000000000000000000000081525081526020016000800160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600260000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152509080600181540180825580915050906001820390600052602060002090600402016000909192909190915060008201518160000190805190602001906102419291906102ee565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600301555050505b50565b6000600260010154905090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061032f57805160ff191683800117855561035d565b8280016001018555821561035d579182015b8281111561035c578251825591602001919060010190610341565b5b50905061036a919061036e565b5090565b61039091905b8082111561038c576000816000905550600101610374565b5090565b905600a165627a7a723058203c6488d9a80e837aab52f5c5ef1d0b37b671ca2891fd1d92711d3d3ef884b6400029\";\n+\n+    public static final String ABI = \"[{\\\"constant\\\":false,\\\"inputs\\\":[{\\\"name\\\":\\\"num\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"name\\\":\\\"trans\\\",\\\"outputs\\\":[],\\\"payable\\\":false,\\\"stateMutability\\\":\\\"nonpayable\\\",\\\"type\\\":\\\"function\\\"},{\\\"constant\\\":true,\\\"inputs\\\":[],\\\"name\\\":\\\"get\\\",\\\"outputs\\\":[{\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"payable\\\":false,\\\"stateMutability\\\":\\\"view\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[],\\\"payable\\\":false,\\\"stateMutability\\\":\\\"nonpayable\\\",\\\"type\\\":\\\"constructor\\\"},{\\\"anonymous\\\":false,\\\"inputs\\\":[{\\\"indexed\\\":false,\\\"name\\\":\\\"num\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"name\\\":\\\"TransEvent\\\",\\\"type\\\":\\\"event\\\"}]\";\n+\n+    public static final TransactionDecoder transactionDecoder = new TransactionDecoder(ABI, BINARY);\n+\n+    public static String SM_BINARY = \"608060405234801561001057600080fd5b5060016000800160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506402540be40060006001018190555060028060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060006002600101819055506103bf806100c26000396000f30060806040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063299f7f9d146100515780638fff0fc41461007c575b600080fd5b34801561005d57600080fd5b506100666100a9565b6040518082815260200191505060405180910390f35b34801561008857600080fd5b506100a7600480360381019080803590602001909291905050506100b6565b005b6000600260010154905090565b8060006001015410806100d457506002600101548160026001015401105b156100de576102eb565b8060006001015403600060010181905550806002600101600082825401925050819055507fc345610041c3c141ff9e0fbc73b34bf13842fd02e0c3cfe6541eedd6adef4b2c816040518082815260200191505060405180910390a160046080604051908101604052806040805190810160405280600881526020017f323031373034313300000000000000000000000000000000000000000000000081525081526020016000800160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600260000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018381525090806001815401808255809150509060018203906000526020600020906004020160009091929091909150600082015181600001908051906020019061024e9291906102ee565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600301555050505b50565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061032f57805160ff191683800117855561035d565b8280016001018555821561035d579182015b8281111561035c578251825591602001919060010190610341565b5b50905061036a919061036e565b5090565b61039091905b8082111561038c576000816000905550600101610374565b5090565b905600a165627a7a723058205957e1c3edeb7d8d9ba7f64d56205c70972f2b91f880af98000f404fd22af37b0029\";\n+\n+    public static final String FUNC_TRANS = \"trans\";\n+\n+    public static final String FUNC_GET = \"get\";\n+\n+    public static final Event TRANSEVENT_EVENT = new Event(\"TransEvent\", \n             Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));\n-    return executeRemoteCallSingleValueReturn(function, BigInteger.class);\n-  }\n-\n-  public List<TransEventEventResponse> getTransEventEvents(TransactionReceipt transactionReceipt) {\n-    List<Contract.EventValuesWithLog> valueList =\n-        extractEventParametersWithLog(TRANSEVENT_EVENT, transactionReceipt);\n-    ArrayList<TransEventEventResponse> responses =\n-        new ArrayList<TransEventEventResponse>(valueList.size());\n-    for (Contract.EventValuesWithLog eventValues : valueList) {\n-      TransEventEventResponse typedResponse = new TransEventEventResponse();\n-      typedResponse.log = eventValues.getLog();\n-      typedResponse.num = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();\n-      responses.add(typedResponse);\n-    }\n-    return responses;\n-  }\n-\n-  public Flowable<TransEventEventResponse> transEventEventFlowable(BcosFilter filter) {\n-    return web3j\n-        .logFlowable(filter)\n-        .map(\n-            new io.reactivex.functions.Function<Log, TransEventEventResponse>() {\n-              @Override\n-              public TransEventEventResponse apply(Log log) {\n-                Contract.EventValuesWithLog eventValues =\n-                    extractEventParametersWithLog(TRANSEVENT_EVENT, log);\n-                TransEventEventResponse typedResponse = new TransEventEventResponse();\n-                typedResponse.log = log;\n-                typedResponse.num =\n-                    (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();\n-                return typedResponse;\n-              }\n-            });\n-  }\n-\n-  public Flowable<TransEventEventResponse> transEventEventFlowable(\n-      DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {\n-    BcosFilter filter = new BcosFilter(startBlock, endBlock, getContractAddress());\n-    filter.addSingleTopic(EventEncoder.encode(TRANSEVENT_EVENT));\n-    return transEventEventFlowable(filter);\n-  }\n-\n-  @Deprecated\n-  public static Ok load(\n-      String contractAddress,\n-      Web3j web3j,\n-      Credentials credentials,\n-      BigInteger gasPrice,\n-      BigInteger gasLimit) {\n-    return new Ok(contractAddress, web3j, credentials, gasPrice, gasLimit);\n-  }\n-\n-  @Deprecated\n-  public static Ok load(\n-      String contractAddress,\n-      Web3j web3j,\n-      TransactionManager transactionManager,\n-      BigInteger gasPrice,\n-      BigInteger gasLimit) {\n-    return new Ok(contractAddress, web3j, transactionManager, gasPrice, gasLimit);\n-  }\n-\n-  public static Ok load(\n-      String contractAddress,\n-      Web3j web3j,\n-      Credentials credentials,\n-      ContractGasProvider contractGasProvider) {\n-    return new Ok(contractAddress, web3j, credentials, contractGasProvider);\n-  }\n-\n-  public static Ok load(\n-      String contractAddress,\n-      Web3j web3j,\n-      TransactionManager transactionManager,\n-      ContractGasProvider contractGasProvider) {\n-    return new Ok(contractAddress, web3j, transactionManager, contractGasProvider);\n-  }\n-\n-  public static RemoteCall<Ok> deploy(\n-      Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {\n-    return deployRemoteCall(Ok.class, web3j, credentials, contractGasProvider, BINARY, \"\");\n-  }\n-\n-  public static RemoteCall<Ok> deploy(\n-      Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {\n-    return deployRemoteCall(Ok.class, web3j, transactionManager, contractGasProvider, BINARY, \"\");\n-  }\n-\n-  @Deprecated\n-  public static RemoteCall<Ok> deploy(\n-      Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {\n-    return deployRemoteCall(Ok.class, web3j, credentials, gasPrice, gasLimit, BINARY, \"\");\n-  }\n-\n-  @Deprecated\n-  public static RemoteCall<Ok> deploy(\n-      Web3j web3j,\n-      TransactionManager transactionManager,\n-      BigInteger gasPrice,\n-      BigInteger gasLimit) {\n-    return deployRemoteCall(Ok.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, \"\");\n-  }\n-\n-  public static class TransEventEventResponse {\n-    public Log log;\n-\n-    public BigInteger num;\n-  }\n+    ;\n+\n+    @Deprecated\n+    protected Ok(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {\n+        super(getBinary(), contractAddress, web3j, credentials, gasPrice, gasLimit);\n+    }\n+\n+    protected Ok(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {\n+        super(getBinary(), contractAddress, web3j, credentials, contractGasProvider);\n+    }\n+\n+    @Deprecated\n+    protected Ok(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {\n+        super(getBinary(), contractAddress, web3j, transactionManager, gasPrice, gasLimit);\n+    }\n+\n+    protected Ok(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {\n+        super(getBinary(), contractAddress, web3j, transactionManager, contractGasProvider);\n+    }\n+\n+    public static String getBinary() {\n+        return (EncryptType.encryptType == EncryptType.ECDSA_TYPE ? BINARY : SM_BINARY);\n+    }\n+\n+    public static TransactionDecoder getTransactionDecoder() {\n+        return transactionDecoder;\n+    }\n+\n+    public RemoteCall<TransactionReceipt> trans(BigInteger num) {\n+        final Function function = new Function(\n+                FUNC_TRANS, \n+                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(num)), \n+                Collections.<TypeReference<?>>emptyList());\n+        return executeRemoteCallTransaction(function);\n+    }\n+\n+    public void trans(BigInteger num, TransactionSucCallback callback) {\n+        final Function function = new Function(\n+                FUNC_TRANS, \n+                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(num)), \n+                Collections.<TypeReference<?>>emptyList());\n+        asyncExecuteTransaction(function, callback);\n+    }\n+\n+    public String transSeq(BigInteger num) {\n+        final Function function = new Function(\n+                FUNC_TRANS, \n+                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(num)), \n+                Collections.<TypeReference<?>>emptyList());\n+        return createTransactionSeq(function);\n+    }\n+\n+    public Tuple1<BigInteger> getTransInput(TransactionReceipt transactionReceipt) {\n+        String data = transactionReceipt.getInput().substring(10);\n+        final Function function = new Function(FUNC_TRANS, \n+                Arrays.<Type>asList(), ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ab99cd3bbd8904e5316c8c58e13e385b0aba8d32"}, "originalPosition": 294}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNDU5MjkyOnYy", "diffSide": "RIGHT", "path": "src/integration-test/java/org/fisco/bcos/contract/Ok.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxMTo1NDo0NFrOGhFuMQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxMTo1NDo0NFrOGhFuMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzM0OTkzNw==", "bodyText": "[PMD Java] An empty statement (semicolon) not part of a loop (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nEmptyStatementNotInLoop\nError Prone\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.23.0/pmd_rules_java_errorprone.html#emptystatementnotinloop\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/600#discussion_r437349937", "createdAt": "2020-06-09T11:54:44Z", "author": {"login": "sider"}, "path": "src/integration-test/java/org/fisco/bcos/contract/Ok.java", "diffHunk": "@@ -1,217 +1,188 @@\n package org.fisco.bcos.contract;\n \n-import io.reactivex.Flowable;\n import java.math.BigInteger;\n import java.util.ArrayList;\n import java.util.Arrays;\n import java.util.Collections;\n import java.util.List;\n import org.fisco.bcos.channel.client.TransactionSucCallback;\n+import org.fisco.bcos.channel.event.filter.EventLogPushWithDecodeCallback;\n import org.fisco.bcos.web3j.abi.EventEncoder;\n+import org.fisco.bcos.web3j.abi.FunctionReturnDecoder;\n import org.fisco.bcos.web3j.abi.TypeReference;\n import org.fisco.bcos.web3j.abi.datatypes.Event;\n import org.fisco.bcos.web3j.abi.datatypes.Function;\n import org.fisco.bcos.web3j.abi.datatypes.Type;\n import org.fisco.bcos.web3j.abi.datatypes.generated.Uint256;\n import org.fisco.bcos.web3j.crypto.Credentials;\n+import org.fisco.bcos.web3j.crypto.EncryptType;\n import org.fisco.bcos.web3j.protocol.Web3j;\n-import org.fisco.bcos.web3j.protocol.core.DefaultBlockParameter;\n import org.fisco.bcos.web3j.protocol.core.RemoteCall;\n-import org.fisco.bcos.web3j.protocol.core.methods.request.BcosFilter;\n import org.fisco.bcos.web3j.protocol.core.methods.response.Log;\n import org.fisco.bcos.web3j.protocol.core.methods.response.TransactionReceipt;\n+import org.fisco.bcos.web3j.tuples.generated.Tuple1;\n import org.fisco.bcos.web3j.tx.Contract;\n import org.fisco.bcos.web3j.tx.TransactionManager;\n import org.fisco.bcos.web3j.tx.gas.ContractGasProvider;\n+import org.fisco.bcos.web3j.tx.txdecode.TransactionDecoder;\n \n /**\n- * Auto generated code.\n- *\n+ * <p>Auto generated code.\n  * <p><strong>Do not modify!</strong>\n- *\n  * <p>Please use the <a href=\"https://docs.web3j.io/command_line.html\">web3j command line tools</a>,\n- * or the org.fisco.bcos.web3j.codegen.SolidityFunctionWrapperGenerator in the <a\n- * href=\"https://github.com/web3j/web3j/tree/master/codegen\">codegen module</a> to update.\n+ * or the org.fisco.bcos.web3j.codegen.SolidityFunctionWrapperGenerator in the \n+ * <a href=\"https://github.com/web3j/web3j/tree/master/codegen\">codegen module</a> to update.\n  *\n  * <p>Generated with web3j version none.\n  */\n+@SuppressWarnings(\"unchecked\")\n public class Ok extends Contract {\n-  private static final String BINARY =\n-      \"608060405234801561001057600080fd5b5060016000800160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506402540be40060006001018190555060028060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060006002600101819055506103bf806100c26000396000f30060806040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806366c99139146100515780636d4ce63c1461007e575b600080fd5b34801561005d57600080fd5b5061007c600480360381019080803590602001909291905050506100a9565b005b34801561008a57600080fd5b506100936102e1565b6040518082815260200191505060405180910390f35b8060006001015410806100c757506002600101548160026001015401105b156100d1576102de565b8060006001015403600060010181905550806002600101600082825401925050819055507fc77b710b83d1dc3f3fafeccd08a6c469beb873b2f0975b50d1698e46b3ee5b4c816040518082815260200191505060405180910390a160046080604051908101604052806040805190810160405280600881526020017f323031373034313300000000000000000000000000000000000000000000000081525081526020016000800160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600260000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152509080600181540180825580915050906001820390600052602060002090600402016000909192909190915060008201518160000190805190602001906102419291906102ee565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600301555050505b50565b6000600260010154905090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061032f57805160ff191683800117855561035d565b8280016001018555821561035d579182015b8281111561035c578251825591602001919060010190610341565b5b50905061036a919061036e565b5090565b61039091905b8082111561038c576000816000905550600101610374565b5090565b905600a165627a7a72305820fb983c66bee66788f407721b23b10a8aae3dc9ef8f1b09e08ec6a6c0b0ec70100029\";\n-\n-  public static final String FUNC_TRANS = \"trans\";\n-\n-  public static final String FUNC_GET = \"get\";\n-\n-  public static final Event TRANSEVENT_EVENT =\n-      new Event(\"TransEvent\", Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));;\n-\n-  @Deprecated\n-  protected Ok(\n-      String contractAddress,\n-      Web3j web3j,\n-      Credentials credentials,\n-      BigInteger gasPrice,\n-      BigInteger gasLimit) {\n-    super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);\n-  }\n-\n-  protected Ok(\n-      String contractAddress,\n-      Web3j web3j,\n-      Credentials credentials,\n-      ContractGasProvider contractGasProvider) {\n-    super(BINARY, contractAddress, web3j, credentials, contractGasProvider);\n-  }\n-\n-  @Deprecated\n-  protected Ok(\n-      String contractAddress,\n-      Web3j web3j,\n-      TransactionManager transactionManager,\n-      BigInteger gasPrice,\n-      BigInteger gasLimit) {\n-    super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);\n-  }\n-\n-  protected Ok(\n-      String contractAddress,\n-      Web3j web3j,\n-      TransactionManager transactionManager,\n-      ContractGasProvider contractGasProvider) {\n-    super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);\n-  }\n-\n-  public RemoteCall<TransactionReceipt> trans(BigInteger num) {\n-    final Function function =\n-        new Function(\n-            FUNC_TRANS,\n-            Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(num)),\n-            Collections.<TypeReference<?>>emptyList());\n-    return executeRemoteCallTransaction(function);\n-  }\n-\n-  public void trans(BigInteger num, TransactionSucCallback callback) {\n-    final Function function =\n-        new Function(\n-            FUNC_TRANS,\n-            Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(num)),\n-            Collections.<TypeReference<?>>emptyList());\n-    asyncExecuteTransaction(function, callback);\n-  }\n-\n-  public RemoteCall<BigInteger> get() {\n-    final Function function =\n-        new Function(\n-            FUNC_GET,\n-            Arrays.<Type>asList(),\n+    public static String BINARY = \"608060405234801561001057600080fd5b5060016000800160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506402540be40060006001018190555060028060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060006002600101819055506103bf806100c26000396000f30060806040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806366c99139146100515780636d4ce63c1461007e575b600080fd5b34801561005d57600080fd5b5061007c600480360381019080803590602001909291905050506100a9565b005b34801561008a57600080fd5b506100936102e1565b6040518082815260200191505060405180910390f35b8060006001015410806100c757506002600101548160026001015401105b156100d1576102de565b8060006001015403600060010181905550806002600101600082825401925050819055507fc77b710b83d1dc3f3fafeccd08a6c469beb873b2f0975b50d1698e46b3ee5b4c816040518082815260200191505060405180910390a160046080604051908101604052806040805190810160405280600881526020017f323031373034313300000000000000000000000000000000000000000000000081525081526020016000800160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600260000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152509080600181540180825580915050906001820390600052602060002090600402016000909192909190915060008201518160000190805190602001906102419291906102ee565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600301555050505b50565b6000600260010154905090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061032f57805160ff191683800117855561035d565b8280016001018555821561035d579182015b8281111561035c578251825591602001919060010190610341565b5b50905061036a919061036e565b5090565b61039091905b8082111561038c576000816000905550600101610374565b5090565b905600a165627a7a723058203c6488d9a80e837aab52f5c5ef1d0b37b671ca2891fd1d92711d3d3ef884b6400029\";\n+\n+    public static final String ABI = \"[{\\\"constant\\\":false,\\\"inputs\\\":[{\\\"name\\\":\\\"num\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"name\\\":\\\"trans\\\",\\\"outputs\\\":[],\\\"payable\\\":false,\\\"stateMutability\\\":\\\"nonpayable\\\",\\\"type\\\":\\\"function\\\"},{\\\"constant\\\":true,\\\"inputs\\\":[],\\\"name\\\":\\\"get\\\",\\\"outputs\\\":[{\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"payable\\\":false,\\\"stateMutability\\\":\\\"view\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[],\\\"payable\\\":false,\\\"stateMutability\\\":\\\"nonpayable\\\",\\\"type\\\":\\\"constructor\\\"},{\\\"anonymous\\\":false,\\\"inputs\\\":[{\\\"indexed\\\":false,\\\"name\\\":\\\"num\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"name\\\":\\\"TransEvent\\\",\\\"type\\\":\\\"event\\\"}]\";\n+\n+    public static final TransactionDecoder transactionDecoder = new TransactionDecoder(ABI, BINARY);\n+\n+    public static String SM_BINARY = \"608060405234801561001057600080fd5b5060016000800160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506402540be40060006001018190555060028060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060006002600101819055506103bf806100c26000396000f30060806040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063299f7f9d146100515780638fff0fc41461007c575b600080fd5b34801561005d57600080fd5b506100666100a9565b6040518082815260200191505060405180910390f35b34801561008857600080fd5b506100a7600480360381019080803590602001909291905050506100b6565b005b6000600260010154905090565b8060006001015410806100d457506002600101548160026001015401105b156100de576102eb565b8060006001015403600060010181905550806002600101600082825401925050819055507fc345610041c3c141ff9e0fbc73b34bf13842fd02e0c3cfe6541eedd6adef4b2c816040518082815260200191505060405180910390a160046080604051908101604052806040805190810160405280600881526020017f323031373034313300000000000000000000000000000000000000000000000081525081526020016000800160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600260000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018381525090806001815401808255809150509060018203906000526020600020906004020160009091929091909150600082015181600001908051906020019061024e9291906102ee565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600301555050505b50565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061032f57805160ff191683800117855561035d565b8280016001018555821561035d579182015b8281111561035c578251825591602001919060010190610341565b5b50905061036a919061036e565b5090565b61039091905b8082111561038c576000816000905550600101610374565b5090565b905600a165627a7a723058205957e1c3edeb7d8d9ba7f64d56205c70972f2b91f880af98000f404fd22af37b0029\";\n+\n+    public static final String FUNC_TRANS = \"trans\";\n+\n+    public static final String FUNC_GET = \"get\";\n+\n+    public static final Event TRANSEVENT_EVENT = new Event(\"TransEvent\", \n             Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));\n-    return executeRemoteCallSingleValueReturn(function, BigInteger.class);\n-  }\n-\n-  public List<TransEventEventResponse> getTransEventEvents(TransactionReceipt transactionReceipt) {\n-    List<Contract.EventValuesWithLog> valueList =\n-        extractEventParametersWithLog(TRANSEVENT_EVENT, transactionReceipt);\n-    ArrayList<TransEventEventResponse> responses =\n-        new ArrayList<TransEventEventResponse>(valueList.size());\n-    for (Contract.EventValuesWithLog eventValues : valueList) {\n-      TransEventEventResponse typedResponse = new TransEventEventResponse();\n-      typedResponse.log = eventValues.getLog();\n-      typedResponse.num = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();\n-      responses.add(typedResponse);\n-    }\n-    return responses;\n-  }\n-\n-  public Flowable<TransEventEventResponse> transEventEventFlowable(BcosFilter filter) {\n-    return web3j\n-        .logFlowable(filter)\n-        .map(\n-            new io.reactivex.functions.Function<Log, TransEventEventResponse>() {\n-              @Override\n-              public TransEventEventResponse apply(Log log) {\n-                Contract.EventValuesWithLog eventValues =\n-                    extractEventParametersWithLog(TRANSEVENT_EVENT, log);\n-                TransEventEventResponse typedResponse = new TransEventEventResponse();\n-                typedResponse.log = log;\n-                typedResponse.num =\n-                    (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();\n-                return typedResponse;\n-              }\n-            });\n-  }\n-\n-  public Flowable<TransEventEventResponse> transEventEventFlowable(\n-      DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {\n-    BcosFilter filter = new BcosFilter(startBlock, endBlock, getContractAddress());\n-    filter.addSingleTopic(EventEncoder.encode(TRANSEVENT_EVENT));\n-    return transEventEventFlowable(filter);\n-  }\n-\n-  @Deprecated\n-  public static Ok load(\n-      String contractAddress,\n-      Web3j web3j,\n-      Credentials credentials,\n-      BigInteger gasPrice,\n-      BigInteger gasLimit) {\n-    return new Ok(contractAddress, web3j, credentials, gasPrice, gasLimit);\n-  }\n-\n-  @Deprecated\n-  public static Ok load(\n-      String contractAddress,\n-      Web3j web3j,\n-      TransactionManager transactionManager,\n-      BigInteger gasPrice,\n-      BigInteger gasLimit) {\n-    return new Ok(contractAddress, web3j, transactionManager, gasPrice, gasLimit);\n-  }\n-\n-  public static Ok load(\n-      String contractAddress,\n-      Web3j web3j,\n-      Credentials credentials,\n-      ContractGasProvider contractGasProvider) {\n-    return new Ok(contractAddress, web3j, credentials, contractGasProvider);\n-  }\n-\n-  public static Ok load(\n-      String contractAddress,\n-      Web3j web3j,\n-      TransactionManager transactionManager,\n-      ContractGasProvider contractGasProvider) {\n-    return new Ok(contractAddress, web3j, transactionManager, contractGasProvider);\n-  }\n-\n-  public static RemoteCall<Ok> deploy(\n-      Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {\n-    return deployRemoteCall(Ok.class, web3j, credentials, contractGasProvider, BINARY, \"\");\n-  }\n-\n-  public static RemoteCall<Ok> deploy(\n-      Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {\n-    return deployRemoteCall(Ok.class, web3j, transactionManager, contractGasProvider, BINARY, \"\");\n-  }\n-\n-  @Deprecated\n-  public static RemoteCall<Ok> deploy(\n-      Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {\n-    return deployRemoteCall(Ok.class, web3j, credentials, gasPrice, gasLimit, BINARY, \"\");\n-  }\n-\n-  @Deprecated\n-  public static RemoteCall<Ok> deploy(\n-      Web3j web3j,\n-      TransactionManager transactionManager,\n-      BigInteger gasPrice,\n-      BigInteger gasLimit) {\n-    return deployRemoteCall(Ok.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, \"\");\n-  }\n-\n-  public static class TransEventEventResponse {\n-    public Log log;\n-\n-    public BigInteger num;\n-  }\n+    ;\n+\n+    @Deprecated\n+    protected Ok(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {\n+        super(getBinary(), contractAddress, web3j, credentials, gasPrice, gasLimit);\n+    }\n+\n+    protected Ok(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {\n+        super(getBinary(), contractAddress, web3j, credentials, contractGasProvider);\n+    }\n+\n+    @Deprecated\n+    protected Ok(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {\n+        super(getBinary(), contractAddress, web3j, transactionManager, gasPrice, gasLimit);\n+    }\n+\n+    protected Ok(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {\n+        super(getBinary(), contractAddress, web3j, transactionManager, contractGasProvider);\n+    }\n+\n+    public static String getBinary() {\n+        return (EncryptType.encryptType == EncryptType.ECDSA_TYPE ? BINARY : SM_BINARY);\n+    }\n+\n+    public static TransactionDecoder getTransactionDecoder() {\n+        return transactionDecoder;\n+    }\n+\n+    public RemoteCall<TransactionReceipt> trans(BigInteger num) {\n+        final Function function = new Function(\n+                FUNC_TRANS, \n+                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(num)), \n+                Collections.<TypeReference<?>>emptyList());\n+        return executeRemoteCallTransaction(function);\n+    }\n+\n+    public void trans(BigInteger num, TransactionSucCallback callback) {\n+        final Function function = new Function(\n+                FUNC_TRANS, \n+                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(num)), \n+                Collections.<TypeReference<?>>emptyList());\n+        asyncExecuteTransaction(function, callback);\n+    }\n+\n+    public String transSeq(BigInteger num) {\n+        final Function function = new Function(\n+                FUNC_TRANS, \n+                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(num)), \n+                Collections.<TypeReference<?>>emptyList());\n+        return createTransactionSeq(function);\n+    }\n+\n+    public Tuple1<BigInteger> getTransInput(TransactionReceipt transactionReceipt) {\n+        String data = transactionReceipt.getInput().substring(10);\n+        final Function function = new Function(FUNC_TRANS, \n+                Arrays.<Type>asList(), \n+                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));\n+        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ab99cd3bbd8904e5316c8c58e13e385b0aba8d32"}, "originalPosition": 296}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNDU5MjkzOnYy", "diffSide": "RIGHT", "path": "src/integration-test/java/org/fisco/bcos/contract/Ok.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxMTo1NDo0NFrOGhFuMg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxMTo1NDo0NFrOGhFuMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzM0OTkzOA==", "bodyText": "[PMD Java] Potential violation of Law of Demeter (method chain calls) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.23.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/600#discussion_r437349938", "createdAt": "2020-06-09T11:54:44Z", "author": {"login": "sider"}, "path": "src/integration-test/java/org/fisco/bcos/contract/Ok.java", "diffHunk": "@@ -1,217 +1,188 @@\n package org.fisco.bcos.contract;\n \n-import io.reactivex.Flowable;\n import java.math.BigInteger;\n import java.util.ArrayList;\n import java.util.Arrays;\n import java.util.Collections;\n import java.util.List;\n import org.fisco.bcos.channel.client.TransactionSucCallback;\n+import org.fisco.bcos.channel.event.filter.EventLogPushWithDecodeCallback;\n import org.fisco.bcos.web3j.abi.EventEncoder;\n+import org.fisco.bcos.web3j.abi.FunctionReturnDecoder;\n import org.fisco.bcos.web3j.abi.TypeReference;\n import org.fisco.bcos.web3j.abi.datatypes.Event;\n import org.fisco.bcos.web3j.abi.datatypes.Function;\n import org.fisco.bcos.web3j.abi.datatypes.Type;\n import org.fisco.bcos.web3j.abi.datatypes.generated.Uint256;\n import org.fisco.bcos.web3j.crypto.Credentials;\n+import org.fisco.bcos.web3j.crypto.EncryptType;\n import org.fisco.bcos.web3j.protocol.Web3j;\n-import org.fisco.bcos.web3j.protocol.core.DefaultBlockParameter;\n import org.fisco.bcos.web3j.protocol.core.RemoteCall;\n-import org.fisco.bcos.web3j.protocol.core.methods.request.BcosFilter;\n import org.fisco.bcos.web3j.protocol.core.methods.response.Log;\n import org.fisco.bcos.web3j.protocol.core.methods.response.TransactionReceipt;\n+import org.fisco.bcos.web3j.tuples.generated.Tuple1;\n import org.fisco.bcos.web3j.tx.Contract;\n import org.fisco.bcos.web3j.tx.TransactionManager;\n import org.fisco.bcos.web3j.tx.gas.ContractGasProvider;\n+import org.fisco.bcos.web3j.tx.txdecode.TransactionDecoder;\n \n /**\n- * Auto generated code.\n- *\n+ * <p>Auto generated code.\n  * <p><strong>Do not modify!</strong>\n- *\n  * <p>Please use the <a href=\"https://docs.web3j.io/command_line.html\">web3j command line tools</a>,\n- * or the org.fisco.bcos.web3j.codegen.SolidityFunctionWrapperGenerator in the <a\n- * href=\"https://github.com/web3j/web3j/tree/master/codegen\">codegen module</a> to update.\n+ * or the org.fisco.bcos.web3j.codegen.SolidityFunctionWrapperGenerator in the \n+ * <a href=\"https://github.com/web3j/web3j/tree/master/codegen\">codegen module</a> to update.\n  *\n  * <p>Generated with web3j version none.\n  */\n+@SuppressWarnings(\"unchecked\")\n public class Ok extends Contract {\n-  private static final String BINARY =\n-      \"608060405234801561001057600080fd5b5060016000800160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506402540be40060006001018190555060028060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060006002600101819055506103bf806100c26000396000f30060806040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806366c99139146100515780636d4ce63c1461007e575b600080fd5b34801561005d57600080fd5b5061007c600480360381019080803590602001909291905050506100a9565b005b34801561008a57600080fd5b506100936102e1565b6040518082815260200191505060405180910390f35b8060006001015410806100c757506002600101548160026001015401105b156100d1576102de565b8060006001015403600060010181905550806002600101600082825401925050819055507fc77b710b83d1dc3f3fafeccd08a6c469beb873b2f0975b50d1698e46b3ee5b4c816040518082815260200191505060405180910390a160046080604051908101604052806040805190810160405280600881526020017f323031373034313300000000000000000000000000000000000000000000000081525081526020016000800160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600260000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152509080600181540180825580915050906001820390600052602060002090600402016000909192909190915060008201518160000190805190602001906102419291906102ee565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600301555050505b50565b6000600260010154905090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061032f57805160ff191683800117855561035d565b8280016001018555821561035d579182015b8281111561035c578251825591602001919060010190610341565b5b50905061036a919061036e565b5090565b61039091905b8082111561038c576000816000905550600101610374565b5090565b905600a165627a7a72305820fb983c66bee66788f407721b23b10a8aae3dc9ef8f1b09e08ec6a6c0b0ec70100029\";\n-\n-  public static final String FUNC_TRANS = \"trans\";\n-\n-  public static final String FUNC_GET = \"get\";\n-\n-  public static final Event TRANSEVENT_EVENT =\n-      new Event(\"TransEvent\", Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));;\n-\n-  @Deprecated\n-  protected Ok(\n-      String contractAddress,\n-      Web3j web3j,\n-      Credentials credentials,\n-      BigInteger gasPrice,\n-      BigInteger gasLimit) {\n-    super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);\n-  }\n-\n-  protected Ok(\n-      String contractAddress,\n-      Web3j web3j,\n-      Credentials credentials,\n-      ContractGasProvider contractGasProvider) {\n-    super(BINARY, contractAddress, web3j, credentials, contractGasProvider);\n-  }\n-\n-  @Deprecated\n-  protected Ok(\n-      String contractAddress,\n-      Web3j web3j,\n-      TransactionManager transactionManager,\n-      BigInteger gasPrice,\n-      BigInteger gasLimit) {\n-    super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);\n-  }\n-\n-  protected Ok(\n-      String contractAddress,\n-      Web3j web3j,\n-      TransactionManager transactionManager,\n-      ContractGasProvider contractGasProvider) {\n-    super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);\n-  }\n-\n-  public RemoteCall<TransactionReceipt> trans(BigInteger num) {\n-    final Function function =\n-        new Function(\n-            FUNC_TRANS,\n-            Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(num)),\n-            Collections.<TypeReference<?>>emptyList());\n-    return executeRemoteCallTransaction(function);\n-  }\n-\n-  public void trans(BigInteger num, TransactionSucCallback callback) {\n-    final Function function =\n-        new Function(\n-            FUNC_TRANS,\n-            Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(num)),\n-            Collections.<TypeReference<?>>emptyList());\n-    asyncExecuteTransaction(function, callback);\n-  }\n-\n-  public RemoteCall<BigInteger> get() {\n-    final Function function =\n-        new Function(\n-            FUNC_GET,\n-            Arrays.<Type>asList(),\n+    public static String BINARY = \"608060405234801561001057600080fd5b5060016000800160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506402540be40060006001018190555060028060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060006002600101819055506103bf806100c26000396000f30060806040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806366c99139146100515780636d4ce63c1461007e575b600080fd5b34801561005d57600080fd5b5061007c600480360381019080803590602001909291905050506100a9565b005b34801561008a57600080fd5b506100936102e1565b6040518082815260200191505060405180910390f35b8060006001015410806100c757506002600101548160026001015401105b156100d1576102de565b8060006001015403600060010181905550806002600101600082825401925050819055507fc77b710b83d1dc3f3fafeccd08a6c469beb873b2f0975b50d1698e46b3ee5b4c816040518082815260200191505060405180910390a160046080604051908101604052806040805190810160405280600881526020017f323031373034313300000000000000000000000000000000000000000000000081525081526020016000800160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600260000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152509080600181540180825580915050906001820390600052602060002090600402016000909192909190915060008201518160000190805190602001906102419291906102ee565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600301555050505b50565b6000600260010154905090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061032f57805160ff191683800117855561035d565b8280016001018555821561035d579182015b8281111561035c578251825591602001919060010190610341565b5b50905061036a919061036e565b5090565b61039091905b8082111561038c576000816000905550600101610374565b5090565b905600a165627a7a723058203c6488d9a80e837aab52f5c5ef1d0b37b671ca2891fd1d92711d3d3ef884b6400029\";\n+\n+    public static final String ABI = \"[{\\\"constant\\\":false,\\\"inputs\\\":[{\\\"name\\\":\\\"num\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"name\\\":\\\"trans\\\",\\\"outputs\\\":[],\\\"payable\\\":false,\\\"stateMutability\\\":\\\"nonpayable\\\",\\\"type\\\":\\\"function\\\"},{\\\"constant\\\":true,\\\"inputs\\\":[],\\\"name\\\":\\\"get\\\",\\\"outputs\\\":[{\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"payable\\\":false,\\\"stateMutability\\\":\\\"view\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[],\\\"payable\\\":false,\\\"stateMutability\\\":\\\"nonpayable\\\",\\\"type\\\":\\\"constructor\\\"},{\\\"anonymous\\\":false,\\\"inputs\\\":[{\\\"indexed\\\":false,\\\"name\\\":\\\"num\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"name\\\":\\\"TransEvent\\\",\\\"type\\\":\\\"event\\\"}]\";\n+\n+    public static final TransactionDecoder transactionDecoder = new TransactionDecoder(ABI, BINARY);\n+\n+    public static String SM_BINARY = \"608060405234801561001057600080fd5b5060016000800160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506402540be40060006001018190555060028060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060006002600101819055506103bf806100c26000396000f30060806040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063299f7f9d146100515780638fff0fc41461007c575b600080fd5b34801561005d57600080fd5b506100666100a9565b6040518082815260200191505060405180910390f35b34801561008857600080fd5b506100a7600480360381019080803590602001909291905050506100b6565b005b6000600260010154905090565b8060006001015410806100d457506002600101548160026001015401105b156100de576102eb565b8060006001015403600060010181905550806002600101600082825401925050819055507fc345610041c3c141ff9e0fbc73b34bf13842fd02e0c3cfe6541eedd6adef4b2c816040518082815260200191505060405180910390a160046080604051908101604052806040805190810160405280600881526020017f323031373034313300000000000000000000000000000000000000000000000081525081526020016000800160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600260000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018381525090806001815401808255809150509060018203906000526020600020906004020160009091929091909150600082015181600001908051906020019061024e9291906102ee565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600301555050505b50565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061032f57805160ff191683800117855561035d565b8280016001018555821561035d579182015b8281111561035c578251825591602001919060010190610341565b5b50905061036a919061036e565b5090565b61039091905b8082111561038c576000816000905550600101610374565b5090565b905600a165627a7a723058205957e1c3edeb7d8d9ba7f64d56205c70972f2b91f880af98000f404fd22af37b0029\";\n+\n+    public static final String FUNC_TRANS = \"trans\";\n+\n+    public static final String FUNC_GET = \"get\";\n+\n+    public static final Event TRANSEVENT_EVENT = new Event(\"TransEvent\", \n             Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));\n-    return executeRemoteCallSingleValueReturn(function, BigInteger.class);\n-  }\n-\n-  public List<TransEventEventResponse> getTransEventEvents(TransactionReceipt transactionReceipt) {\n-    List<Contract.EventValuesWithLog> valueList =\n-        extractEventParametersWithLog(TRANSEVENT_EVENT, transactionReceipt);\n-    ArrayList<TransEventEventResponse> responses =\n-        new ArrayList<TransEventEventResponse>(valueList.size());\n-    for (Contract.EventValuesWithLog eventValues : valueList) {\n-      TransEventEventResponse typedResponse = new TransEventEventResponse();\n-      typedResponse.log = eventValues.getLog();\n-      typedResponse.num = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();\n-      responses.add(typedResponse);\n-    }\n-    return responses;\n-  }\n-\n-  public Flowable<TransEventEventResponse> transEventEventFlowable(BcosFilter filter) {\n-    return web3j\n-        .logFlowable(filter)\n-        .map(\n-            new io.reactivex.functions.Function<Log, TransEventEventResponse>() {\n-              @Override\n-              public TransEventEventResponse apply(Log log) {\n-                Contract.EventValuesWithLog eventValues =\n-                    extractEventParametersWithLog(TRANSEVENT_EVENT, log);\n-                TransEventEventResponse typedResponse = new TransEventEventResponse();\n-                typedResponse.log = log;\n-                typedResponse.num =\n-                    (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();\n-                return typedResponse;\n-              }\n-            });\n-  }\n-\n-  public Flowable<TransEventEventResponse> transEventEventFlowable(\n-      DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {\n-    BcosFilter filter = new BcosFilter(startBlock, endBlock, getContractAddress());\n-    filter.addSingleTopic(EventEncoder.encode(TRANSEVENT_EVENT));\n-    return transEventEventFlowable(filter);\n-  }\n-\n-  @Deprecated\n-  public static Ok load(\n-      String contractAddress,\n-      Web3j web3j,\n-      Credentials credentials,\n-      BigInteger gasPrice,\n-      BigInteger gasLimit) {\n-    return new Ok(contractAddress, web3j, credentials, gasPrice, gasLimit);\n-  }\n-\n-  @Deprecated\n-  public static Ok load(\n-      String contractAddress,\n-      Web3j web3j,\n-      TransactionManager transactionManager,\n-      BigInteger gasPrice,\n-      BigInteger gasLimit) {\n-    return new Ok(contractAddress, web3j, transactionManager, gasPrice, gasLimit);\n-  }\n-\n-  public static Ok load(\n-      String contractAddress,\n-      Web3j web3j,\n-      Credentials credentials,\n-      ContractGasProvider contractGasProvider) {\n-    return new Ok(contractAddress, web3j, credentials, contractGasProvider);\n-  }\n-\n-  public static Ok load(\n-      String contractAddress,\n-      Web3j web3j,\n-      TransactionManager transactionManager,\n-      ContractGasProvider contractGasProvider) {\n-    return new Ok(contractAddress, web3j, transactionManager, contractGasProvider);\n-  }\n-\n-  public static RemoteCall<Ok> deploy(\n-      Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {\n-    return deployRemoteCall(Ok.class, web3j, credentials, contractGasProvider, BINARY, \"\");\n-  }\n-\n-  public static RemoteCall<Ok> deploy(\n-      Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {\n-    return deployRemoteCall(Ok.class, web3j, transactionManager, contractGasProvider, BINARY, \"\");\n-  }\n-\n-  @Deprecated\n-  public static RemoteCall<Ok> deploy(\n-      Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {\n-    return deployRemoteCall(Ok.class, web3j, credentials, gasPrice, gasLimit, BINARY, \"\");\n-  }\n-\n-  @Deprecated\n-  public static RemoteCall<Ok> deploy(\n-      Web3j web3j,\n-      TransactionManager transactionManager,\n-      BigInteger gasPrice,\n-      BigInteger gasLimit) {\n-    return deployRemoteCall(Ok.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, \"\");\n-  }\n-\n-  public static class TransEventEventResponse {\n-    public Log log;\n-\n-    public BigInteger num;\n-  }\n+    ;\n+\n+    @Deprecated\n+    protected Ok(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {\n+        super(getBinary(), contractAddress, web3j, credentials, gasPrice, gasLimit);\n+    }\n+\n+    protected Ok(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {\n+        super(getBinary(), contractAddress, web3j, credentials, contractGasProvider);\n+    }\n+\n+    @Deprecated\n+    protected Ok(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {\n+        super(getBinary(), contractAddress, web3j, transactionManager, gasPrice, gasLimit);\n+    }\n+\n+    protected Ok(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {\n+        super(getBinary(), contractAddress, web3j, transactionManager, contractGasProvider);\n+    }\n+\n+    public static String getBinary() {\n+        return (EncryptType.encryptType == EncryptType.ECDSA_TYPE ? BINARY : SM_BINARY);\n+    }\n+\n+    public static TransactionDecoder getTransactionDecoder() {\n+        return transactionDecoder;\n+    }\n+\n+    public RemoteCall<TransactionReceipt> trans(BigInteger num) {\n+        final Function function = new Function(\n+                FUNC_TRANS, \n+                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(num)), \n+                Collections.<TypeReference<?>>emptyList());\n+        return executeRemoteCallTransaction(function);\n+    }\n+\n+    public void trans(BigInteger num, TransactionSucCallback callback) {\n+        final Function function = new Function(\n+                FUNC_TRANS, \n+                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(num)), \n+                Collections.<TypeReference<?>>emptyList());\n+        asyncExecuteTransaction(function, callback);\n+    }\n+\n+    public String transSeq(BigInteger num) {\n+        final Function function = new Function(\n+                FUNC_TRANS, \n+                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(num)), \n+                Collections.<TypeReference<?>>emptyList());\n+        return createTransactionSeq(function);\n+    }\n+\n+    public Tuple1<BigInteger> getTransInput(TransactionReceipt transactionReceipt) {\n+        String data = transactionReceipt.getInput().substring(10);\n+        final Function function = new Function(FUNC_TRANS, \n+                Arrays.<Type>asList(), \n+                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));\n+        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());;\n+        return new Tuple1<BigInteger>(\n+\n+                (BigInteger) results.get(0).getValue()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ab99cd3bbd8904e5316c8c58e13e385b0aba8d32"}, "originalPosition": 299}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNDU5Mjk0OnYy", "diffSide": "RIGHT", "path": "src/integration-test/java/org/fisco/bcos/contract/Ok.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxMTo1NDo0NFrOGhFuMw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxMTo1NDo0NFrOGhFuMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzM0OTkzOQ==", "bodyText": "[PMD Java] Potential violation of Law of Demeter (object not created locally) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.23.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/600#discussion_r437349939", "createdAt": "2020-06-09T11:54:44Z", "author": {"login": "sider"}, "path": "src/integration-test/java/org/fisco/bcos/contract/Ok.java", "diffHunk": "@@ -1,217 +1,188 @@\n package org.fisco.bcos.contract;\n \n-import io.reactivex.Flowable;\n import java.math.BigInteger;\n import java.util.ArrayList;\n import java.util.Arrays;\n import java.util.Collections;\n import java.util.List;\n import org.fisco.bcos.channel.client.TransactionSucCallback;\n+import org.fisco.bcos.channel.event.filter.EventLogPushWithDecodeCallback;\n import org.fisco.bcos.web3j.abi.EventEncoder;\n+import org.fisco.bcos.web3j.abi.FunctionReturnDecoder;\n import org.fisco.bcos.web3j.abi.TypeReference;\n import org.fisco.bcos.web3j.abi.datatypes.Event;\n import org.fisco.bcos.web3j.abi.datatypes.Function;\n import org.fisco.bcos.web3j.abi.datatypes.Type;\n import org.fisco.bcos.web3j.abi.datatypes.generated.Uint256;\n import org.fisco.bcos.web3j.crypto.Credentials;\n+import org.fisco.bcos.web3j.crypto.EncryptType;\n import org.fisco.bcos.web3j.protocol.Web3j;\n-import org.fisco.bcos.web3j.protocol.core.DefaultBlockParameter;\n import org.fisco.bcos.web3j.protocol.core.RemoteCall;\n-import org.fisco.bcos.web3j.protocol.core.methods.request.BcosFilter;\n import org.fisco.bcos.web3j.protocol.core.methods.response.Log;\n import org.fisco.bcos.web3j.protocol.core.methods.response.TransactionReceipt;\n+import org.fisco.bcos.web3j.tuples.generated.Tuple1;\n import org.fisco.bcos.web3j.tx.Contract;\n import org.fisco.bcos.web3j.tx.TransactionManager;\n import org.fisco.bcos.web3j.tx.gas.ContractGasProvider;\n+import org.fisco.bcos.web3j.tx.txdecode.TransactionDecoder;\n \n /**\n- * Auto generated code.\n- *\n+ * <p>Auto generated code.\n  * <p><strong>Do not modify!</strong>\n- *\n  * <p>Please use the <a href=\"https://docs.web3j.io/command_line.html\">web3j command line tools</a>,\n- * or the org.fisco.bcos.web3j.codegen.SolidityFunctionWrapperGenerator in the <a\n- * href=\"https://github.com/web3j/web3j/tree/master/codegen\">codegen module</a> to update.\n+ * or the org.fisco.bcos.web3j.codegen.SolidityFunctionWrapperGenerator in the \n+ * <a href=\"https://github.com/web3j/web3j/tree/master/codegen\">codegen module</a> to update.\n  *\n  * <p>Generated with web3j version none.\n  */\n+@SuppressWarnings(\"unchecked\")\n public class Ok extends Contract {\n-  private static final String BINARY =\n-      \"608060405234801561001057600080fd5b5060016000800160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506402540be40060006001018190555060028060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060006002600101819055506103bf806100c26000396000f30060806040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806366c99139146100515780636d4ce63c1461007e575b600080fd5b34801561005d57600080fd5b5061007c600480360381019080803590602001909291905050506100a9565b005b34801561008a57600080fd5b506100936102e1565b6040518082815260200191505060405180910390f35b8060006001015410806100c757506002600101548160026001015401105b156100d1576102de565b8060006001015403600060010181905550806002600101600082825401925050819055507fc77b710b83d1dc3f3fafeccd08a6c469beb873b2f0975b50d1698e46b3ee5b4c816040518082815260200191505060405180910390a160046080604051908101604052806040805190810160405280600881526020017f323031373034313300000000000000000000000000000000000000000000000081525081526020016000800160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600260000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152509080600181540180825580915050906001820390600052602060002090600402016000909192909190915060008201518160000190805190602001906102419291906102ee565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600301555050505b50565b6000600260010154905090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061032f57805160ff191683800117855561035d565b8280016001018555821561035d579182015b8281111561035c578251825591602001919060010190610341565b5b50905061036a919061036e565b5090565b61039091905b8082111561038c576000816000905550600101610374565b5090565b905600a165627a7a72305820fb983c66bee66788f407721b23b10a8aae3dc9ef8f1b09e08ec6a6c0b0ec70100029\";\n-\n-  public static final String FUNC_TRANS = \"trans\";\n-\n-  public static final String FUNC_GET = \"get\";\n-\n-  public static final Event TRANSEVENT_EVENT =\n-      new Event(\"TransEvent\", Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));;\n-\n-  @Deprecated\n-  protected Ok(\n-      String contractAddress,\n-      Web3j web3j,\n-      Credentials credentials,\n-      BigInteger gasPrice,\n-      BigInteger gasLimit) {\n-    super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);\n-  }\n-\n-  protected Ok(\n-      String contractAddress,\n-      Web3j web3j,\n-      Credentials credentials,\n-      ContractGasProvider contractGasProvider) {\n-    super(BINARY, contractAddress, web3j, credentials, contractGasProvider);\n-  }\n-\n-  @Deprecated\n-  protected Ok(\n-      String contractAddress,\n-      Web3j web3j,\n-      TransactionManager transactionManager,\n-      BigInteger gasPrice,\n-      BigInteger gasLimit) {\n-    super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);\n-  }\n-\n-  protected Ok(\n-      String contractAddress,\n-      Web3j web3j,\n-      TransactionManager transactionManager,\n-      ContractGasProvider contractGasProvider) {\n-    super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);\n-  }\n-\n-  public RemoteCall<TransactionReceipt> trans(BigInteger num) {\n-    final Function function =\n-        new Function(\n-            FUNC_TRANS,\n-            Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(num)),\n-            Collections.<TypeReference<?>>emptyList());\n-    return executeRemoteCallTransaction(function);\n-  }\n-\n-  public void trans(BigInteger num, TransactionSucCallback callback) {\n-    final Function function =\n-        new Function(\n-            FUNC_TRANS,\n-            Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(num)),\n-            Collections.<TypeReference<?>>emptyList());\n-    asyncExecuteTransaction(function, callback);\n-  }\n-\n-  public RemoteCall<BigInteger> get() {\n-    final Function function =\n-        new Function(\n-            FUNC_GET,\n-            Arrays.<Type>asList(),\n+    public static String BINARY = \"608060405234801561001057600080fd5b5060016000800160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506402540be40060006001018190555060028060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060006002600101819055506103bf806100c26000396000f30060806040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806366c99139146100515780636d4ce63c1461007e575b600080fd5b34801561005d57600080fd5b5061007c600480360381019080803590602001909291905050506100a9565b005b34801561008a57600080fd5b506100936102e1565b6040518082815260200191505060405180910390f35b8060006001015410806100c757506002600101548160026001015401105b156100d1576102de565b8060006001015403600060010181905550806002600101600082825401925050819055507fc77b710b83d1dc3f3fafeccd08a6c469beb873b2f0975b50d1698e46b3ee5b4c816040518082815260200191505060405180910390a160046080604051908101604052806040805190810160405280600881526020017f323031373034313300000000000000000000000000000000000000000000000081525081526020016000800160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600260000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152509080600181540180825580915050906001820390600052602060002090600402016000909192909190915060008201518160000190805190602001906102419291906102ee565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600301555050505b50565b6000600260010154905090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061032f57805160ff191683800117855561035d565b8280016001018555821561035d579182015b8281111561035c578251825591602001919060010190610341565b5b50905061036a919061036e565b5090565b61039091905b8082111561038c576000816000905550600101610374565b5090565b905600a165627a7a723058203c6488d9a80e837aab52f5c5ef1d0b37b671ca2891fd1d92711d3d3ef884b6400029\";\n+\n+    public static final String ABI = \"[{\\\"constant\\\":false,\\\"inputs\\\":[{\\\"name\\\":\\\"num\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"name\\\":\\\"trans\\\",\\\"outputs\\\":[],\\\"payable\\\":false,\\\"stateMutability\\\":\\\"nonpayable\\\",\\\"type\\\":\\\"function\\\"},{\\\"constant\\\":true,\\\"inputs\\\":[],\\\"name\\\":\\\"get\\\",\\\"outputs\\\":[{\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"payable\\\":false,\\\"stateMutability\\\":\\\"view\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[],\\\"payable\\\":false,\\\"stateMutability\\\":\\\"nonpayable\\\",\\\"type\\\":\\\"constructor\\\"},{\\\"anonymous\\\":false,\\\"inputs\\\":[{\\\"indexed\\\":false,\\\"name\\\":\\\"num\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"name\\\":\\\"TransEvent\\\",\\\"type\\\":\\\"event\\\"}]\";\n+\n+    public static final TransactionDecoder transactionDecoder = new TransactionDecoder(ABI, BINARY);\n+\n+    public static String SM_BINARY = \"608060405234801561001057600080fd5b5060016000800160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506402540be40060006001018190555060028060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060006002600101819055506103bf806100c26000396000f30060806040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063299f7f9d146100515780638fff0fc41461007c575b600080fd5b34801561005d57600080fd5b506100666100a9565b6040518082815260200191505060405180910390f35b34801561008857600080fd5b506100a7600480360381019080803590602001909291905050506100b6565b005b6000600260010154905090565b8060006001015410806100d457506002600101548160026001015401105b156100de576102eb565b8060006001015403600060010181905550806002600101600082825401925050819055507fc345610041c3c141ff9e0fbc73b34bf13842fd02e0c3cfe6541eedd6adef4b2c816040518082815260200191505060405180910390a160046080604051908101604052806040805190810160405280600881526020017f323031373034313300000000000000000000000000000000000000000000000081525081526020016000800160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600260000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018381525090806001815401808255809150509060018203906000526020600020906004020160009091929091909150600082015181600001908051906020019061024e9291906102ee565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600301555050505b50565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061032f57805160ff191683800117855561035d565b8280016001018555821561035d579182015b8281111561035c578251825591602001919060010190610341565b5b50905061036a919061036e565b5090565b61039091905b8082111561038c576000816000905550600101610374565b5090565b905600a165627a7a723058205957e1c3edeb7d8d9ba7f64d56205c70972f2b91f880af98000f404fd22af37b0029\";\n+\n+    public static final String FUNC_TRANS = \"trans\";\n+\n+    public static final String FUNC_GET = \"get\";\n+\n+    public static final Event TRANSEVENT_EVENT = new Event(\"TransEvent\", \n             Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));\n-    return executeRemoteCallSingleValueReturn(function, BigInteger.class);\n-  }\n-\n-  public List<TransEventEventResponse> getTransEventEvents(TransactionReceipt transactionReceipt) {\n-    List<Contract.EventValuesWithLog> valueList =\n-        extractEventParametersWithLog(TRANSEVENT_EVENT, transactionReceipt);\n-    ArrayList<TransEventEventResponse> responses =\n-        new ArrayList<TransEventEventResponse>(valueList.size());\n-    for (Contract.EventValuesWithLog eventValues : valueList) {\n-      TransEventEventResponse typedResponse = new TransEventEventResponse();\n-      typedResponse.log = eventValues.getLog();\n-      typedResponse.num = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();\n-      responses.add(typedResponse);\n-    }\n-    return responses;\n-  }\n-\n-  public Flowable<TransEventEventResponse> transEventEventFlowable(BcosFilter filter) {\n-    return web3j\n-        .logFlowable(filter)\n-        .map(\n-            new io.reactivex.functions.Function<Log, TransEventEventResponse>() {\n-              @Override\n-              public TransEventEventResponse apply(Log log) {\n-                Contract.EventValuesWithLog eventValues =\n-                    extractEventParametersWithLog(TRANSEVENT_EVENT, log);\n-                TransEventEventResponse typedResponse = new TransEventEventResponse();\n-                typedResponse.log = log;\n-                typedResponse.num =\n-                    (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();\n-                return typedResponse;\n-              }\n-            });\n-  }\n-\n-  public Flowable<TransEventEventResponse> transEventEventFlowable(\n-      DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {\n-    BcosFilter filter = new BcosFilter(startBlock, endBlock, getContractAddress());\n-    filter.addSingleTopic(EventEncoder.encode(TRANSEVENT_EVENT));\n-    return transEventEventFlowable(filter);\n-  }\n-\n-  @Deprecated\n-  public static Ok load(\n-      String contractAddress,\n-      Web3j web3j,\n-      Credentials credentials,\n-      BigInteger gasPrice,\n-      BigInteger gasLimit) {\n-    return new Ok(contractAddress, web3j, credentials, gasPrice, gasLimit);\n-  }\n-\n-  @Deprecated\n-  public static Ok load(\n-      String contractAddress,\n-      Web3j web3j,\n-      TransactionManager transactionManager,\n-      BigInteger gasPrice,\n-      BigInteger gasLimit) {\n-    return new Ok(contractAddress, web3j, transactionManager, gasPrice, gasLimit);\n-  }\n-\n-  public static Ok load(\n-      String contractAddress,\n-      Web3j web3j,\n-      Credentials credentials,\n-      ContractGasProvider contractGasProvider) {\n-    return new Ok(contractAddress, web3j, credentials, contractGasProvider);\n-  }\n-\n-  public static Ok load(\n-      String contractAddress,\n-      Web3j web3j,\n-      TransactionManager transactionManager,\n-      ContractGasProvider contractGasProvider) {\n-    return new Ok(contractAddress, web3j, transactionManager, contractGasProvider);\n-  }\n-\n-  public static RemoteCall<Ok> deploy(\n-      Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {\n-    return deployRemoteCall(Ok.class, web3j, credentials, contractGasProvider, BINARY, \"\");\n-  }\n-\n-  public static RemoteCall<Ok> deploy(\n-      Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {\n-    return deployRemoteCall(Ok.class, web3j, transactionManager, contractGasProvider, BINARY, \"\");\n-  }\n-\n-  @Deprecated\n-  public static RemoteCall<Ok> deploy(\n-      Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {\n-    return deployRemoteCall(Ok.class, web3j, credentials, gasPrice, gasLimit, BINARY, \"\");\n-  }\n-\n-  @Deprecated\n-  public static RemoteCall<Ok> deploy(\n-      Web3j web3j,\n-      TransactionManager transactionManager,\n-      BigInteger gasPrice,\n-      BigInteger gasLimit) {\n-    return deployRemoteCall(Ok.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, \"\");\n-  }\n-\n-  public static class TransEventEventResponse {\n-    public Log log;\n-\n-    public BigInteger num;\n-  }\n+    ;\n+\n+    @Deprecated\n+    protected Ok(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {\n+        super(getBinary(), contractAddress, web3j, credentials, gasPrice, gasLimit);\n+    }\n+\n+    protected Ok(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {\n+        super(getBinary(), contractAddress, web3j, credentials, contractGasProvider);\n+    }\n+\n+    @Deprecated\n+    protected Ok(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {\n+        super(getBinary(), contractAddress, web3j, transactionManager, gasPrice, gasLimit);\n+    }\n+\n+    protected Ok(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {\n+        super(getBinary(), contractAddress, web3j, transactionManager, contractGasProvider);\n+    }\n+\n+    public static String getBinary() {\n+        return (EncryptType.encryptType == EncryptType.ECDSA_TYPE ? BINARY : SM_BINARY);\n+    }\n+\n+    public static TransactionDecoder getTransactionDecoder() {\n+        return transactionDecoder;\n+    }\n+\n+    public RemoteCall<TransactionReceipt> trans(BigInteger num) {\n+        final Function function = new Function(\n+                FUNC_TRANS, \n+                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(num)), \n+                Collections.<TypeReference<?>>emptyList());\n+        return executeRemoteCallTransaction(function);\n+    }\n+\n+    public void trans(BigInteger num, TransactionSucCallback callback) {\n+        final Function function = new Function(\n+                FUNC_TRANS, \n+                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(num)), \n+                Collections.<TypeReference<?>>emptyList());\n+        asyncExecuteTransaction(function, callback);\n+    }\n+\n+    public String transSeq(BigInteger num) {\n+        final Function function = new Function(\n+                FUNC_TRANS, \n+                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(num)), \n+                Collections.<TypeReference<?>>emptyList());\n+        return createTransactionSeq(function);\n+    }\n+\n+    public Tuple1<BigInteger> getTransInput(TransactionReceipt transactionReceipt) {\n+        String data = transactionReceipt.getInput().substring(10);\n+        final Function function = new Function(FUNC_TRANS, \n+                Arrays.<Type>asList(), \n+                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));\n+        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());;\n+        return new Tuple1<BigInteger>(\n+\n+                (BigInteger) results.get(0).getValue()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ab99cd3bbd8904e5316c8c58e13e385b0aba8d32"}, "originalPosition": 299}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNDU5Mjk1OnYy", "diffSide": "RIGHT", "path": "src/integration-test/java/org/fisco/bcos/contract/Ok.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxMTo1NDo0NFrOGhFuNQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxMTo1NDo0NFrOGhFuNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzM0OTk0MQ==", "bodyText": "[PMD Java] Potential violation of Law of Demeter (method chain calls) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.23.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/600#discussion_r437349941", "createdAt": "2020-06-09T11:54:44Z", "author": {"login": "sider"}, "path": "src/integration-test/java/org/fisco/bcos/contract/Ok.java", "diffHunk": "@@ -1,217 +1,188 @@\n package org.fisco.bcos.contract;\n \n-import io.reactivex.Flowable;\n import java.math.BigInteger;\n import java.util.ArrayList;\n import java.util.Arrays;\n import java.util.Collections;\n import java.util.List;\n import org.fisco.bcos.channel.client.TransactionSucCallback;\n+import org.fisco.bcos.channel.event.filter.EventLogPushWithDecodeCallback;\n import org.fisco.bcos.web3j.abi.EventEncoder;\n+import org.fisco.bcos.web3j.abi.FunctionReturnDecoder;\n import org.fisco.bcos.web3j.abi.TypeReference;\n import org.fisco.bcos.web3j.abi.datatypes.Event;\n import org.fisco.bcos.web3j.abi.datatypes.Function;\n import org.fisco.bcos.web3j.abi.datatypes.Type;\n import org.fisco.bcos.web3j.abi.datatypes.generated.Uint256;\n import org.fisco.bcos.web3j.crypto.Credentials;\n+import org.fisco.bcos.web3j.crypto.EncryptType;\n import org.fisco.bcos.web3j.protocol.Web3j;\n-import org.fisco.bcos.web3j.protocol.core.DefaultBlockParameter;\n import org.fisco.bcos.web3j.protocol.core.RemoteCall;\n-import org.fisco.bcos.web3j.protocol.core.methods.request.BcosFilter;\n import org.fisco.bcos.web3j.protocol.core.methods.response.Log;\n import org.fisco.bcos.web3j.protocol.core.methods.response.TransactionReceipt;\n+import org.fisco.bcos.web3j.tuples.generated.Tuple1;\n import org.fisco.bcos.web3j.tx.Contract;\n import org.fisco.bcos.web3j.tx.TransactionManager;\n import org.fisco.bcos.web3j.tx.gas.ContractGasProvider;\n+import org.fisco.bcos.web3j.tx.txdecode.TransactionDecoder;\n \n /**\n- * Auto generated code.\n- *\n+ * <p>Auto generated code.\n  * <p><strong>Do not modify!</strong>\n- *\n  * <p>Please use the <a href=\"https://docs.web3j.io/command_line.html\">web3j command line tools</a>,\n- * or the org.fisco.bcos.web3j.codegen.SolidityFunctionWrapperGenerator in the <a\n- * href=\"https://github.com/web3j/web3j/tree/master/codegen\">codegen module</a> to update.\n+ * or the org.fisco.bcos.web3j.codegen.SolidityFunctionWrapperGenerator in the \n+ * <a href=\"https://github.com/web3j/web3j/tree/master/codegen\">codegen module</a> to update.\n  *\n  * <p>Generated with web3j version none.\n  */\n+@SuppressWarnings(\"unchecked\")\n public class Ok extends Contract {\n-  private static final String BINARY =\n-      \"608060405234801561001057600080fd5b5060016000800160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506402540be40060006001018190555060028060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060006002600101819055506103bf806100c26000396000f30060806040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806366c99139146100515780636d4ce63c1461007e575b600080fd5b34801561005d57600080fd5b5061007c600480360381019080803590602001909291905050506100a9565b005b34801561008a57600080fd5b506100936102e1565b6040518082815260200191505060405180910390f35b8060006001015410806100c757506002600101548160026001015401105b156100d1576102de565b8060006001015403600060010181905550806002600101600082825401925050819055507fc77b710b83d1dc3f3fafeccd08a6c469beb873b2f0975b50d1698e46b3ee5b4c816040518082815260200191505060405180910390a160046080604051908101604052806040805190810160405280600881526020017f323031373034313300000000000000000000000000000000000000000000000081525081526020016000800160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600260000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152509080600181540180825580915050906001820390600052602060002090600402016000909192909190915060008201518160000190805190602001906102419291906102ee565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600301555050505b50565b6000600260010154905090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061032f57805160ff191683800117855561035d565b8280016001018555821561035d579182015b8281111561035c578251825591602001919060010190610341565b5b50905061036a919061036e565b5090565b61039091905b8082111561038c576000816000905550600101610374565b5090565b905600a165627a7a72305820fb983c66bee66788f407721b23b10a8aae3dc9ef8f1b09e08ec6a6c0b0ec70100029\";\n-\n-  public static final String FUNC_TRANS = \"trans\";\n-\n-  public static final String FUNC_GET = \"get\";\n-\n-  public static final Event TRANSEVENT_EVENT =\n-      new Event(\"TransEvent\", Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));;\n-\n-  @Deprecated\n-  protected Ok(\n-      String contractAddress,\n-      Web3j web3j,\n-      Credentials credentials,\n-      BigInteger gasPrice,\n-      BigInteger gasLimit) {\n-    super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);\n-  }\n-\n-  protected Ok(\n-      String contractAddress,\n-      Web3j web3j,\n-      Credentials credentials,\n-      ContractGasProvider contractGasProvider) {\n-    super(BINARY, contractAddress, web3j, credentials, contractGasProvider);\n-  }\n-\n-  @Deprecated\n-  protected Ok(\n-      String contractAddress,\n-      Web3j web3j,\n-      TransactionManager transactionManager,\n-      BigInteger gasPrice,\n-      BigInteger gasLimit) {\n-    super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);\n-  }\n-\n-  protected Ok(\n-      String contractAddress,\n-      Web3j web3j,\n-      TransactionManager transactionManager,\n-      ContractGasProvider contractGasProvider) {\n-    super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);\n-  }\n-\n-  public RemoteCall<TransactionReceipt> trans(BigInteger num) {\n-    final Function function =\n-        new Function(\n-            FUNC_TRANS,\n-            Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(num)),\n-            Collections.<TypeReference<?>>emptyList());\n-    return executeRemoteCallTransaction(function);\n-  }\n-\n-  public void trans(BigInteger num, TransactionSucCallback callback) {\n-    final Function function =\n-        new Function(\n-            FUNC_TRANS,\n-            Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(num)),\n-            Collections.<TypeReference<?>>emptyList());\n-    asyncExecuteTransaction(function, callback);\n-  }\n-\n-  public RemoteCall<BigInteger> get() {\n-    final Function function =\n-        new Function(\n-            FUNC_GET,\n-            Arrays.<Type>asList(),\n+    public static String BINARY = \"608060405234801561001057600080fd5b5060016000800160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506402540be40060006001018190555060028060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060006002600101819055506103bf806100c26000396000f30060806040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806366c99139146100515780636d4ce63c1461007e575b600080fd5b34801561005d57600080fd5b5061007c600480360381019080803590602001909291905050506100a9565b005b34801561008a57600080fd5b506100936102e1565b6040518082815260200191505060405180910390f35b8060006001015410806100c757506002600101548160026001015401105b156100d1576102de565b8060006001015403600060010181905550806002600101600082825401925050819055507fc77b710b83d1dc3f3fafeccd08a6c469beb873b2f0975b50d1698e46b3ee5b4c816040518082815260200191505060405180910390a160046080604051908101604052806040805190810160405280600881526020017f323031373034313300000000000000000000000000000000000000000000000081525081526020016000800160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600260000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152509080600181540180825580915050906001820390600052602060002090600402016000909192909190915060008201518160000190805190602001906102419291906102ee565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600301555050505b50565b6000600260010154905090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061032f57805160ff191683800117855561035d565b8280016001018555821561035d579182015b8281111561035c578251825591602001919060010190610341565b5b50905061036a919061036e565b5090565b61039091905b8082111561038c576000816000905550600101610374565b5090565b905600a165627a7a723058203c6488d9a80e837aab52f5c5ef1d0b37b671ca2891fd1d92711d3d3ef884b6400029\";\n+\n+    public static final String ABI = \"[{\\\"constant\\\":false,\\\"inputs\\\":[{\\\"name\\\":\\\"num\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"name\\\":\\\"trans\\\",\\\"outputs\\\":[],\\\"payable\\\":false,\\\"stateMutability\\\":\\\"nonpayable\\\",\\\"type\\\":\\\"function\\\"},{\\\"constant\\\":true,\\\"inputs\\\":[],\\\"name\\\":\\\"get\\\",\\\"outputs\\\":[{\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"payable\\\":false,\\\"stateMutability\\\":\\\"view\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[],\\\"payable\\\":false,\\\"stateMutability\\\":\\\"nonpayable\\\",\\\"type\\\":\\\"constructor\\\"},{\\\"anonymous\\\":false,\\\"inputs\\\":[{\\\"indexed\\\":false,\\\"name\\\":\\\"num\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"name\\\":\\\"TransEvent\\\",\\\"type\\\":\\\"event\\\"}]\";\n+\n+    public static final TransactionDecoder transactionDecoder = new TransactionDecoder(ABI, BINARY);\n+\n+    public static String SM_BINARY = \"608060405234801561001057600080fd5b5060016000800160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506402540be40060006001018190555060028060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060006002600101819055506103bf806100c26000396000f30060806040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063299f7f9d146100515780638fff0fc41461007c575b600080fd5b34801561005d57600080fd5b506100666100a9565b6040518082815260200191505060405180910390f35b34801561008857600080fd5b506100a7600480360381019080803590602001909291905050506100b6565b005b6000600260010154905090565b8060006001015410806100d457506002600101548160026001015401105b156100de576102eb565b8060006001015403600060010181905550806002600101600082825401925050819055507fc345610041c3c141ff9e0fbc73b34bf13842fd02e0c3cfe6541eedd6adef4b2c816040518082815260200191505060405180910390a160046080604051908101604052806040805190810160405280600881526020017f323031373034313300000000000000000000000000000000000000000000000081525081526020016000800160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600260000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018381525090806001815401808255809150509060018203906000526020600020906004020160009091929091909150600082015181600001908051906020019061024e9291906102ee565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600301555050505b50565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061032f57805160ff191683800117855561035d565b8280016001018555821561035d579182015b8281111561035c578251825591602001919060010190610341565b5b50905061036a919061036e565b5090565b61039091905b8082111561038c576000816000905550600101610374565b5090565b905600a165627a7a723058205957e1c3edeb7d8d9ba7f64d56205c70972f2b91f880af98000f404fd22af37b0029\";\n+\n+    public static final String FUNC_TRANS = \"trans\";\n+\n+    public static final String FUNC_GET = \"get\";\n+\n+    public static final Event TRANSEVENT_EVENT = new Event(\"TransEvent\", \n             Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));\n-    return executeRemoteCallSingleValueReturn(function, BigInteger.class);\n-  }\n-\n-  public List<TransEventEventResponse> getTransEventEvents(TransactionReceipt transactionReceipt) {\n-    List<Contract.EventValuesWithLog> valueList =\n-        extractEventParametersWithLog(TRANSEVENT_EVENT, transactionReceipt);\n-    ArrayList<TransEventEventResponse> responses =\n-        new ArrayList<TransEventEventResponse>(valueList.size());\n-    for (Contract.EventValuesWithLog eventValues : valueList) {\n-      TransEventEventResponse typedResponse = new TransEventEventResponse();\n-      typedResponse.log = eventValues.getLog();\n-      typedResponse.num = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();\n-      responses.add(typedResponse);\n-    }\n-    return responses;\n-  }\n-\n-  public Flowable<TransEventEventResponse> transEventEventFlowable(BcosFilter filter) {\n-    return web3j\n-        .logFlowable(filter)\n-        .map(\n-            new io.reactivex.functions.Function<Log, TransEventEventResponse>() {\n-              @Override\n-              public TransEventEventResponse apply(Log log) {\n-                Contract.EventValuesWithLog eventValues =\n-                    extractEventParametersWithLog(TRANSEVENT_EVENT, log);\n-                TransEventEventResponse typedResponse = new TransEventEventResponse();\n-                typedResponse.log = log;\n-                typedResponse.num =\n-                    (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();\n-                return typedResponse;\n-              }\n-            });\n-  }\n-\n-  public Flowable<TransEventEventResponse> transEventEventFlowable(\n-      DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {\n-    BcosFilter filter = new BcosFilter(startBlock, endBlock, getContractAddress());\n-    filter.addSingleTopic(EventEncoder.encode(TRANSEVENT_EVENT));\n-    return transEventEventFlowable(filter);\n-  }\n-\n-  @Deprecated\n-  public static Ok load(\n-      String contractAddress,\n-      Web3j web3j,\n-      Credentials credentials,\n-      BigInteger gasPrice,\n-      BigInteger gasLimit) {\n-    return new Ok(contractAddress, web3j, credentials, gasPrice, gasLimit);\n-  }\n-\n-  @Deprecated\n-  public static Ok load(\n-      String contractAddress,\n-      Web3j web3j,\n-      TransactionManager transactionManager,\n-      BigInteger gasPrice,\n-      BigInteger gasLimit) {\n-    return new Ok(contractAddress, web3j, transactionManager, gasPrice, gasLimit);\n-  }\n-\n-  public static Ok load(\n-      String contractAddress,\n-      Web3j web3j,\n-      Credentials credentials,\n-      ContractGasProvider contractGasProvider) {\n-    return new Ok(contractAddress, web3j, credentials, contractGasProvider);\n-  }\n-\n-  public static Ok load(\n-      String contractAddress,\n-      Web3j web3j,\n-      TransactionManager transactionManager,\n-      ContractGasProvider contractGasProvider) {\n-    return new Ok(contractAddress, web3j, transactionManager, contractGasProvider);\n-  }\n-\n-  public static RemoteCall<Ok> deploy(\n-      Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {\n-    return deployRemoteCall(Ok.class, web3j, credentials, contractGasProvider, BINARY, \"\");\n-  }\n-\n-  public static RemoteCall<Ok> deploy(\n-      Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {\n-    return deployRemoteCall(Ok.class, web3j, transactionManager, contractGasProvider, BINARY, \"\");\n-  }\n-\n-  @Deprecated\n-  public static RemoteCall<Ok> deploy(\n-      Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {\n-    return deployRemoteCall(Ok.class, web3j, credentials, gasPrice, gasLimit, BINARY, \"\");\n-  }\n-\n-  @Deprecated\n-  public static RemoteCall<Ok> deploy(\n-      Web3j web3j,\n-      TransactionManager transactionManager,\n-      BigInteger gasPrice,\n-      BigInteger gasLimit) {\n-    return deployRemoteCall(Ok.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, \"\");\n-  }\n-\n-  public static class TransEventEventResponse {\n-    public Log log;\n-\n-    public BigInteger num;\n-  }\n+    ;\n+\n+    @Deprecated\n+    protected Ok(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {\n+        super(getBinary(), contractAddress, web3j, credentials, gasPrice, gasLimit);\n+    }\n+\n+    protected Ok(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {\n+        super(getBinary(), contractAddress, web3j, credentials, contractGasProvider);\n+    }\n+\n+    @Deprecated\n+    protected Ok(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {\n+        super(getBinary(), contractAddress, web3j, transactionManager, gasPrice, gasLimit);\n+    }\n+\n+    protected Ok(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {\n+        super(getBinary(), contractAddress, web3j, transactionManager, contractGasProvider);\n+    }\n+\n+    public static String getBinary() {\n+        return (EncryptType.encryptType == EncryptType.ECDSA_TYPE ? BINARY : SM_BINARY);\n+    }\n+\n+    public static TransactionDecoder getTransactionDecoder() {\n+        return transactionDecoder;\n+    }\n+\n+    public RemoteCall<TransactionReceipt> trans(BigInteger num) {\n+        final Function function = new Function(\n+                FUNC_TRANS, \n+                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(num)), \n+                Collections.<TypeReference<?>>emptyList());\n+        return executeRemoteCallTransaction(function);\n+    }\n+\n+    public void trans(BigInteger num, TransactionSucCallback callback) {\n+        final Function function = new Function(\n+                FUNC_TRANS, \n+                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(num)), \n+                Collections.<TypeReference<?>>emptyList());\n+        asyncExecuteTransaction(function, callback);\n+    }\n+\n+    public String transSeq(BigInteger num) {\n+        final Function function = new Function(\n+                FUNC_TRANS, \n+                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(num)), \n+                Collections.<TypeReference<?>>emptyList());\n+        return createTransactionSeq(function);\n+    }\n+\n+    public Tuple1<BigInteger> getTransInput(TransactionReceipt transactionReceipt) {\n+        String data = transactionReceipt.getInput().substring(10);\n+        final Function function = new Function(FUNC_TRANS, \n+                Arrays.<Type>asList(), \n+                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));\n+        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());;\n+        return new Tuple1<BigInteger>(\n+\n+                (BigInteger) results.get(0).getValue()\n+                );\n+    }\n+\n+    public RemoteCall<BigInteger> get() {\n+        final Function function = new Function(FUNC_GET, \n+                Arrays.<Type>asList(), ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ab99cd3bbd8904e5316c8c58e13e385b0aba8d32"}, "originalPosition": 305}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNDU5Mjk2OnYy", "diffSide": "RIGHT", "path": "src/integration-test/java/org/fisco/bcos/contract/Ok.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxMTo1NDo0NVrOGhFuNw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxMTo1NDo0NVrOGhFuNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzM0OTk0Mw==", "bodyText": "[PMD Java] Potential violation of Law of Demeter (object not created locally) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.23.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/600#discussion_r437349943", "createdAt": "2020-06-09T11:54:45Z", "author": {"login": "sider"}, "path": "src/integration-test/java/org/fisco/bcos/contract/Ok.java", "diffHunk": "@@ -1,217 +1,188 @@\n package org.fisco.bcos.contract;\n \n-import io.reactivex.Flowable;\n import java.math.BigInteger;\n import java.util.ArrayList;\n import java.util.Arrays;\n import java.util.Collections;\n import java.util.List;\n import org.fisco.bcos.channel.client.TransactionSucCallback;\n+import org.fisco.bcos.channel.event.filter.EventLogPushWithDecodeCallback;\n import org.fisco.bcos.web3j.abi.EventEncoder;\n+import org.fisco.bcos.web3j.abi.FunctionReturnDecoder;\n import org.fisco.bcos.web3j.abi.TypeReference;\n import org.fisco.bcos.web3j.abi.datatypes.Event;\n import org.fisco.bcos.web3j.abi.datatypes.Function;\n import org.fisco.bcos.web3j.abi.datatypes.Type;\n import org.fisco.bcos.web3j.abi.datatypes.generated.Uint256;\n import org.fisco.bcos.web3j.crypto.Credentials;\n+import org.fisco.bcos.web3j.crypto.EncryptType;\n import org.fisco.bcos.web3j.protocol.Web3j;\n-import org.fisco.bcos.web3j.protocol.core.DefaultBlockParameter;\n import org.fisco.bcos.web3j.protocol.core.RemoteCall;\n-import org.fisco.bcos.web3j.protocol.core.methods.request.BcosFilter;\n import org.fisco.bcos.web3j.protocol.core.methods.response.Log;\n import org.fisco.bcos.web3j.protocol.core.methods.response.TransactionReceipt;\n+import org.fisco.bcos.web3j.tuples.generated.Tuple1;\n import org.fisco.bcos.web3j.tx.Contract;\n import org.fisco.bcos.web3j.tx.TransactionManager;\n import org.fisco.bcos.web3j.tx.gas.ContractGasProvider;\n+import org.fisco.bcos.web3j.tx.txdecode.TransactionDecoder;\n \n /**\n- * Auto generated code.\n- *\n+ * <p>Auto generated code.\n  * <p><strong>Do not modify!</strong>\n- *\n  * <p>Please use the <a href=\"https://docs.web3j.io/command_line.html\">web3j command line tools</a>,\n- * or the org.fisco.bcos.web3j.codegen.SolidityFunctionWrapperGenerator in the <a\n- * href=\"https://github.com/web3j/web3j/tree/master/codegen\">codegen module</a> to update.\n+ * or the org.fisco.bcos.web3j.codegen.SolidityFunctionWrapperGenerator in the \n+ * <a href=\"https://github.com/web3j/web3j/tree/master/codegen\">codegen module</a> to update.\n  *\n  * <p>Generated with web3j version none.\n  */\n+@SuppressWarnings(\"unchecked\")\n public class Ok extends Contract {\n-  private static final String BINARY =\n-      \"608060405234801561001057600080fd5b5060016000800160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506402540be40060006001018190555060028060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060006002600101819055506103bf806100c26000396000f30060806040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806366c99139146100515780636d4ce63c1461007e575b600080fd5b34801561005d57600080fd5b5061007c600480360381019080803590602001909291905050506100a9565b005b34801561008a57600080fd5b506100936102e1565b6040518082815260200191505060405180910390f35b8060006001015410806100c757506002600101548160026001015401105b156100d1576102de565b8060006001015403600060010181905550806002600101600082825401925050819055507fc77b710b83d1dc3f3fafeccd08a6c469beb873b2f0975b50d1698e46b3ee5b4c816040518082815260200191505060405180910390a160046080604051908101604052806040805190810160405280600881526020017f323031373034313300000000000000000000000000000000000000000000000081525081526020016000800160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600260000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152509080600181540180825580915050906001820390600052602060002090600402016000909192909190915060008201518160000190805190602001906102419291906102ee565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600301555050505b50565b6000600260010154905090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061032f57805160ff191683800117855561035d565b8280016001018555821561035d579182015b8281111561035c578251825591602001919060010190610341565b5b50905061036a919061036e565b5090565b61039091905b8082111561038c576000816000905550600101610374565b5090565b905600a165627a7a72305820fb983c66bee66788f407721b23b10a8aae3dc9ef8f1b09e08ec6a6c0b0ec70100029\";\n-\n-  public static final String FUNC_TRANS = \"trans\";\n-\n-  public static final String FUNC_GET = \"get\";\n-\n-  public static final Event TRANSEVENT_EVENT =\n-      new Event(\"TransEvent\", Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));;\n-\n-  @Deprecated\n-  protected Ok(\n-      String contractAddress,\n-      Web3j web3j,\n-      Credentials credentials,\n-      BigInteger gasPrice,\n-      BigInteger gasLimit) {\n-    super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);\n-  }\n-\n-  protected Ok(\n-      String contractAddress,\n-      Web3j web3j,\n-      Credentials credentials,\n-      ContractGasProvider contractGasProvider) {\n-    super(BINARY, contractAddress, web3j, credentials, contractGasProvider);\n-  }\n-\n-  @Deprecated\n-  protected Ok(\n-      String contractAddress,\n-      Web3j web3j,\n-      TransactionManager transactionManager,\n-      BigInteger gasPrice,\n-      BigInteger gasLimit) {\n-    super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);\n-  }\n-\n-  protected Ok(\n-      String contractAddress,\n-      Web3j web3j,\n-      TransactionManager transactionManager,\n-      ContractGasProvider contractGasProvider) {\n-    super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);\n-  }\n-\n-  public RemoteCall<TransactionReceipt> trans(BigInteger num) {\n-    final Function function =\n-        new Function(\n-            FUNC_TRANS,\n-            Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(num)),\n-            Collections.<TypeReference<?>>emptyList());\n-    return executeRemoteCallTransaction(function);\n-  }\n-\n-  public void trans(BigInteger num, TransactionSucCallback callback) {\n-    final Function function =\n-        new Function(\n-            FUNC_TRANS,\n-            Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(num)),\n-            Collections.<TypeReference<?>>emptyList());\n-    asyncExecuteTransaction(function, callback);\n-  }\n-\n-  public RemoteCall<BigInteger> get() {\n-    final Function function =\n-        new Function(\n-            FUNC_GET,\n-            Arrays.<Type>asList(),\n+    public static String BINARY = \"608060405234801561001057600080fd5b5060016000800160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506402540be40060006001018190555060028060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060006002600101819055506103bf806100c26000396000f30060806040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806366c99139146100515780636d4ce63c1461007e575b600080fd5b34801561005d57600080fd5b5061007c600480360381019080803590602001909291905050506100a9565b005b34801561008a57600080fd5b506100936102e1565b6040518082815260200191505060405180910390f35b8060006001015410806100c757506002600101548160026001015401105b156100d1576102de565b8060006001015403600060010181905550806002600101600082825401925050819055507fc77b710b83d1dc3f3fafeccd08a6c469beb873b2f0975b50d1698e46b3ee5b4c816040518082815260200191505060405180910390a160046080604051908101604052806040805190810160405280600881526020017f323031373034313300000000000000000000000000000000000000000000000081525081526020016000800160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600260000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152509080600181540180825580915050906001820390600052602060002090600402016000909192909190915060008201518160000190805190602001906102419291906102ee565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600301555050505b50565b6000600260010154905090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061032f57805160ff191683800117855561035d565b8280016001018555821561035d579182015b8281111561035c578251825591602001919060010190610341565b5b50905061036a919061036e565b5090565b61039091905b8082111561038c576000816000905550600101610374565b5090565b905600a165627a7a723058203c6488d9a80e837aab52f5c5ef1d0b37b671ca2891fd1d92711d3d3ef884b6400029\";\n+\n+    public static final String ABI = \"[{\\\"constant\\\":false,\\\"inputs\\\":[{\\\"name\\\":\\\"num\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"name\\\":\\\"trans\\\",\\\"outputs\\\":[],\\\"payable\\\":false,\\\"stateMutability\\\":\\\"nonpayable\\\",\\\"type\\\":\\\"function\\\"},{\\\"constant\\\":true,\\\"inputs\\\":[],\\\"name\\\":\\\"get\\\",\\\"outputs\\\":[{\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"payable\\\":false,\\\"stateMutability\\\":\\\"view\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[],\\\"payable\\\":false,\\\"stateMutability\\\":\\\"nonpayable\\\",\\\"type\\\":\\\"constructor\\\"},{\\\"anonymous\\\":false,\\\"inputs\\\":[{\\\"indexed\\\":false,\\\"name\\\":\\\"num\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"name\\\":\\\"TransEvent\\\",\\\"type\\\":\\\"event\\\"}]\";\n+\n+    public static final TransactionDecoder transactionDecoder = new TransactionDecoder(ABI, BINARY);\n+\n+    public static String SM_BINARY = \"608060405234801561001057600080fd5b5060016000800160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506402540be40060006001018190555060028060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060006002600101819055506103bf806100c26000396000f30060806040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063299f7f9d146100515780638fff0fc41461007c575b600080fd5b34801561005d57600080fd5b506100666100a9565b6040518082815260200191505060405180910390f35b34801561008857600080fd5b506100a7600480360381019080803590602001909291905050506100b6565b005b6000600260010154905090565b8060006001015410806100d457506002600101548160026001015401105b156100de576102eb565b8060006001015403600060010181905550806002600101600082825401925050819055507fc345610041c3c141ff9e0fbc73b34bf13842fd02e0c3cfe6541eedd6adef4b2c816040518082815260200191505060405180910390a160046080604051908101604052806040805190810160405280600881526020017f323031373034313300000000000000000000000000000000000000000000000081525081526020016000800160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600260000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018381525090806001815401808255809150509060018203906000526020600020906004020160009091929091909150600082015181600001908051906020019061024e9291906102ee565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600301555050505b50565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061032f57805160ff191683800117855561035d565b8280016001018555821561035d579182015b8281111561035c578251825591602001919060010190610341565b5b50905061036a919061036e565b5090565b61039091905b8082111561038c576000816000905550600101610374565b5090565b905600a165627a7a723058205957e1c3edeb7d8d9ba7f64d56205c70972f2b91f880af98000f404fd22af37b0029\";\n+\n+    public static final String FUNC_TRANS = \"trans\";\n+\n+    public static final String FUNC_GET = \"get\";\n+\n+    public static final Event TRANSEVENT_EVENT = new Event(\"TransEvent\", \n             Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));\n-    return executeRemoteCallSingleValueReturn(function, BigInteger.class);\n-  }\n-\n-  public List<TransEventEventResponse> getTransEventEvents(TransactionReceipt transactionReceipt) {\n-    List<Contract.EventValuesWithLog> valueList =\n-        extractEventParametersWithLog(TRANSEVENT_EVENT, transactionReceipt);\n-    ArrayList<TransEventEventResponse> responses =\n-        new ArrayList<TransEventEventResponse>(valueList.size());\n-    for (Contract.EventValuesWithLog eventValues : valueList) {\n-      TransEventEventResponse typedResponse = new TransEventEventResponse();\n-      typedResponse.log = eventValues.getLog();\n-      typedResponse.num = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();\n-      responses.add(typedResponse);\n-    }\n-    return responses;\n-  }\n-\n-  public Flowable<TransEventEventResponse> transEventEventFlowable(BcosFilter filter) {\n-    return web3j\n-        .logFlowable(filter)\n-        .map(\n-            new io.reactivex.functions.Function<Log, TransEventEventResponse>() {\n-              @Override\n-              public TransEventEventResponse apply(Log log) {\n-                Contract.EventValuesWithLog eventValues =\n-                    extractEventParametersWithLog(TRANSEVENT_EVENT, log);\n-                TransEventEventResponse typedResponse = new TransEventEventResponse();\n-                typedResponse.log = log;\n-                typedResponse.num =\n-                    (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();\n-                return typedResponse;\n-              }\n-            });\n-  }\n-\n-  public Flowable<TransEventEventResponse> transEventEventFlowable(\n-      DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {\n-    BcosFilter filter = new BcosFilter(startBlock, endBlock, getContractAddress());\n-    filter.addSingleTopic(EventEncoder.encode(TRANSEVENT_EVENT));\n-    return transEventEventFlowable(filter);\n-  }\n-\n-  @Deprecated\n-  public static Ok load(\n-      String contractAddress,\n-      Web3j web3j,\n-      Credentials credentials,\n-      BigInteger gasPrice,\n-      BigInteger gasLimit) {\n-    return new Ok(contractAddress, web3j, credentials, gasPrice, gasLimit);\n-  }\n-\n-  @Deprecated\n-  public static Ok load(\n-      String contractAddress,\n-      Web3j web3j,\n-      TransactionManager transactionManager,\n-      BigInteger gasPrice,\n-      BigInteger gasLimit) {\n-    return new Ok(contractAddress, web3j, transactionManager, gasPrice, gasLimit);\n-  }\n-\n-  public static Ok load(\n-      String contractAddress,\n-      Web3j web3j,\n-      Credentials credentials,\n-      ContractGasProvider contractGasProvider) {\n-    return new Ok(contractAddress, web3j, credentials, contractGasProvider);\n-  }\n-\n-  public static Ok load(\n-      String contractAddress,\n-      Web3j web3j,\n-      TransactionManager transactionManager,\n-      ContractGasProvider contractGasProvider) {\n-    return new Ok(contractAddress, web3j, transactionManager, contractGasProvider);\n-  }\n-\n-  public static RemoteCall<Ok> deploy(\n-      Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {\n-    return deployRemoteCall(Ok.class, web3j, credentials, contractGasProvider, BINARY, \"\");\n-  }\n-\n-  public static RemoteCall<Ok> deploy(\n-      Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {\n-    return deployRemoteCall(Ok.class, web3j, transactionManager, contractGasProvider, BINARY, \"\");\n-  }\n-\n-  @Deprecated\n-  public static RemoteCall<Ok> deploy(\n-      Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {\n-    return deployRemoteCall(Ok.class, web3j, credentials, gasPrice, gasLimit, BINARY, \"\");\n-  }\n-\n-  @Deprecated\n-  public static RemoteCall<Ok> deploy(\n-      Web3j web3j,\n-      TransactionManager transactionManager,\n-      BigInteger gasPrice,\n-      BigInteger gasLimit) {\n-    return deployRemoteCall(Ok.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, \"\");\n-  }\n-\n-  public static class TransEventEventResponse {\n-    public Log log;\n-\n-    public BigInteger num;\n-  }\n+    ;\n+\n+    @Deprecated\n+    protected Ok(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {\n+        super(getBinary(), contractAddress, web3j, credentials, gasPrice, gasLimit);\n+    }\n+\n+    protected Ok(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {\n+        super(getBinary(), contractAddress, web3j, credentials, contractGasProvider);\n+    }\n+\n+    @Deprecated\n+    protected Ok(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {\n+        super(getBinary(), contractAddress, web3j, transactionManager, gasPrice, gasLimit);\n+    }\n+\n+    protected Ok(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {\n+        super(getBinary(), contractAddress, web3j, transactionManager, contractGasProvider);\n+    }\n+\n+    public static String getBinary() {\n+        return (EncryptType.encryptType == EncryptType.ECDSA_TYPE ? BINARY : SM_BINARY);\n+    }\n+\n+    public static TransactionDecoder getTransactionDecoder() {\n+        return transactionDecoder;\n+    }\n+\n+    public RemoteCall<TransactionReceipt> trans(BigInteger num) {\n+        final Function function = new Function(\n+                FUNC_TRANS, \n+                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(num)), \n+                Collections.<TypeReference<?>>emptyList());\n+        return executeRemoteCallTransaction(function);\n+    }\n+\n+    public void trans(BigInteger num, TransactionSucCallback callback) {\n+        final Function function = new Function(\n+                FUNC_TRANS, \n+                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(num)), \n+                Collections.<TypeReference<?>>emptyList());\n+        asyncExecuteTransaction(function, callback);\n+    }\n+\n+    public String transSeq(BigInteger num) {\n+        final Function function = new Function(\n+                FUNC_TRANS, \n+                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(num)), \n+                Collections.<TypeReference<?>>emptyList());\n+        return createTransactionSeq(function);\n+    }\n+\n+    public Tuple1<BigInteger> getTransInput(TransactionReceipt transactionReceipt) {\n+        String data = transactionReceipt.getInput().substring(10);\n+        final Function function = new Function(FUNC_TRANS, \n+                Arrays.<Type>asList(), \n+                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));\n+        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());;\n+        return new Tuple1<BigInteger>(\n+\n+                (BigInteger) results.get(0).getValue()\n+                );\n+    }\n+\n+    public RemoteCall<BigInteger> get() {\n+        final Function function = new Function(FUNC_GET, \n+                Arrays.<Type>asList(), \n+                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));\n+        return executeRemoteCallSingleValueReturn(function, BigInteger.class);\n+    }\n+\n+    public List<TransEventEventResponse> getTransEventEvents(TransactionReceipt transactionReceipt) {\n+        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(TRANSEVENT_EVENT, transactionReceipt);\n+        ArrayList<TransEventEventResponse> responses = new ArrayList<TransEventEventResponse>(valueList.size());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ab99cd3bbd8904e5316c8c58e13e385b0aba8d32"}, "originalPosition": 312}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNDU5Mjk5OnYy", "diffSide": "RIGHT", "path": "src/integration-test/java/org/fisco/bcos/contract/Ok.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxMTo1NDo0NVrOGhFuOg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxMTo1NDo0NVrOGhFuOg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzM0OTk0Ng==", "bodyText": "[PMD Java] Avoid instantiating new objects inside loops (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nAvoidInstantiatingObjectsInLoops\nPerformance\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.23.0/pmd_rules_java_performance.html#avoidinstantiatingobjectsinloops\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/600#discussion_r437349946", "createdAt": "2020-06-09T11:54:45Z", "author": {"login": "sider"}, "path": "src/integration-test/java/org/fisco/bcos/contract/Ok.java", "diffHunk": "@@ -1,217 +1,188 @@\n package org.fisco.bcos.contract;\n \n-import io.reactivex.Flowable;\n import java.math.BigInteger;\n import java.util.ArrayList;\n import java.util.Arrays;\n import java.util.Collections;\n import java.util.List;\n import org.fisco.bcos.channel.client.TransactionSucCallback;\n+import org.fisco.bcos.channel.event.filter.EventLogPushWithDecodeCallback;\n import org.fisco.bcos.web3j.abi.EventEncoder;\n+import org.fisco.bcos.web3j.abi.FunctionReturnDecoder;\n import org.fisco.bcos.web3j.abi.TypeReference;\n import org.fisco.bcos.web3j.abi.datatypes.Event;\n import org.fisco.bcos.web3j.abi.datatypes.Function;\n import org.fisco.bcos.web3j.abi.datatypes.Type;\n import org.fisco.bcos.web3j.abi.datatypes.generated.Uint256;\n import org.fisco.bcos.web3j.crypto.Credentials;\n+import org.fisco.bcos.web3j.crypto.EncryptType;\n import org.fisco.bcos.web3j.protocol.Web3j;\n-import org.fisco.bcos.web3j.protocol.core.DefaultBlockParameter;\n import org.fisco.bcos.web3j.protocol.core.RemoteCall;\n-import org.fisco.bcos.web3j.protocol.core.methods.request.BcosFilter;\n import org.fisco.bcos.web3j.protocol.core.methods.response.Log;\n import org.fisco.bcos.web3j.protocol.core.methods.response.TransactionReceipt;\n+import org.fisco.bcos.web3j.tuples.generated.Tuple1;\n import org.fisco.bcos.web3j.tx.Contract;\n import org.fisco.bcos.web3j.tx.TransactionManager;\n import org.fisco.bcos.web3j.tx.gas.ContractGasProvider;\n+import org.fisco.bcos.web3j.tx.txdecode.TransactionDecoder;\n \n /**\n- * Auto generated code.\n- *\n+ * <p>Auto generated code.\n  * <p><strong>Do not modify!</strong>\n- *\n  * <p>Please use the <a href=\"https://docs.web3j.io/command_line.html\">web3j command line tools</a>,\n- * or the org.fisco.bcos.web3j.codegen.SolidityFunctionWrapperGenerator in the <a\n- * href=\"https://github.com/web3j/web3j/tree/master/codegen\">codegen module</a> to update.\n+ * or the org.fisco.bcos.web3j.codegen.SolidityFunctionWrapperGenerator in the \n+ * <a href=\"https://github.com/web3j/web3j/tree/master/codegen\">codegen module</a> to update.\n  *\n  * <p>Generated with web3j version none.\n  */\n+@SuppressWarnings(\"unchecked\")\n public class Ok extends Contract {\n-  private static final String BINARY =\n-      \"608060405234801561001057600080fd5b5060016000800160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506402540be40060006001018190555060028060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060006002600101819055506103bf806100c26000396000f30060806040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806366c99139146100515780636d4ce63c1461007e575b600080fd5b34801561005d57600080fd5b5061007c600480360381019080803590602001909291905050506100a9565b005b34801561008a57600080fd5b506100936102e1565b6040518082815260200191505060405180910390f35b8060006001015410806100c757506002600101548160026001015401105b156100d1576102de565b8060006001015403600060010181905550806002600101600082825401925050819055507fc77b710b83d1dc3f3fafeccd08a6c469beb873b2f0975b50d1698e46b3ee5b4c816040518082815260200191505060405180910390a160046080604051908101604052806040805190810160405280600881526020017f323031373034313300000000000000000000000000000000000000000000000081525081526020016000800160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600260000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152509080600181540180825580915050906001820390600052602060002090600402016000909192909190915060008201518160000190805190602001906102419291906102ee565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600301555050505b50565b6000600260010154905090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061032f57805160ff191683800117855561035d565b8280016001018555821561035d579182015b8281111561035c578251825591602001919060010190610341565b5b50905061036a919061036e565b5090565b61039091905b8082111561038c576000816000905550600101610374565b5090565b905600a165627a7a72305820fb983c66bee66788f407721b23b10a8aae3dc9ef8f1b09e08ec6a6c0b0ec70100029\";\n-\n-  public static final String FUNC_TRANS = \"trans\";\n-\n-  public static final String FUNC_GET = \"get\";\n-\n-  public static final Event TRANSEVENT_EVENT =\n-      new Event(\"TransEvent\", Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));;\n-\n-  @Deprecated\n-  protected Ok(\n-      String contractAddress,\n-      Web3j web3j,\n-      Credentials credentials,\n-      BigInteger gasPrice,\n-      BigInteger gasLimit) {\n-    super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);\n-  }\n-\n-  protected Ok(\n-      String contractAddress,\n-      Web3j web3j,\n-      Credentials credentials,\n-      ContractGasProvider contractGasProvider) {\n-    super(BINARY, contractAddress, web3j, credentials, contractGasProvider);\n-  }\n-\n-  @Deprecated\n-  protected Ok(\n-      String contractAddress,\n-      Web3j web3j,\n-      TransactionManager transactionManager,\n-      BigInteger gasPrice,\n-      BigInteger gasLimit) {\n-    super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);\n-  }\n-\n-  protected Ok(\n-      String contractAddress,\n-      Web3j web3j,\n-      TransactionManager transactionManager,\n-      ContractGasProvider contractGasProvider) {\n-    super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);\n-  }\n-\n-  public RemoteCall<TransactionReceipt> trans(BigInteger num) {\n-    final Function function =\n-        new Function(\n-            FUNC_TRANS,\n-            Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(num)),\n-            Collections.<TypeReference<?>>emptyList());\n-    return executeRemoteCallTransaction(function);\n-  }\n-\n-  public void trans(BigInteger num, TransactionSucCallback callback) {\n-    final Function function =\n-        new Function(\n-            FUNC_TRANS,\n-            Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(num)),\n-            Collections.<TypeReference<?>>emptyList());\n-    asyncExecuteTransaction(function, callback);\n-  }\n-\n-  public RemoteCall<BigInteger> get() {\n-    final Function function =\n-        new Function(\n-            FUNC_GET,\n-            Arrays.<Type>asList(),\n+    public static String BINARY = \"608060405234801561001057600080fd5b5060016000800160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506402540be40060006001018190555060028060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060006002600101819055506103bf806100c26000396000f30060806040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806366c99139146100515780636d4ce63c1461007e575b600080fd5b34801561005d57600080fd5b5061007c600480360381019080803590602001909291905050506100a9565b005b34801561008a57600080fd5b506100936102e1565b6040518082815260200191505060405180910390f35b8060006001015410806100c757506002600101548160026001015401105b156100d1576102de565b8060006001015403600060010181905550806002600101600082825401925050819055507fc77b710b83d1dc3f3fafeccd08a6c469beb873b2f0975b50d1698e46b3ee5b4c816040518082815260200191505060405180910390a160046080604051908101604052806040805190810160405280600881526020017f323031373034313300000000000000000000000000000000000000000000000081525081526020016000800160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600260000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152509080600181540180825580915050906001820390600052602060002090600402016000909192909190915060008201518160000190805190602001906102419291906102ee565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600301555050505b50565b6000600260010154905090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061032f57805160ff191683800117855561035d565b8280016001018555821561035d579182015b8281111561035c578251825591602001919060010190610341565b5b50905061036a919061036e565b5090565b61039091905b8082111561038c576000816000905550600101610374565b5090565b905600a165627a7a723058203c6488d9a80e837aab52f5c5ef1d0b37b671ca2891fd1d92711d3d3ef884b6400029\";\n+\n+    public static final String ABI = \"[{\\\"constant\\\":false,\\\"inputs\\\":[{\\\"name\\\":\\\"num\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"name\\\":\\\"trans\\\",\\\"outputs\\\":[],\\\"payable\\\":false,\\\"stateMutability\\\":\\\"nonpayable\\\",\\\"type\\\":\\\"function\\\"},{\\\"constant\\\":true,\\\"inputs\\\":[],\\\"name\\\":\\\"get\\\",\\\"outputs\\\":[{\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"payable\\\":false,\\\"stateMutability\\\":\\\"view\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[],\\\"payable\\\":false,\\\"stateMutability\\\":\\\"nonpayable\\\",\\\"type\\\":\\\"constructor\\\"},{\\\"anonymous\\\":false,\\\"inputs\\\":[{\\\"indexed\\\":false,\\\"name\\\":\\\"num\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"name\\\":\\\"TransEvent\\\",\\\"type\\\":\\\"event\\\"}]\";\n+\n+    public static final TransactionDecoder transactionDecoder = new TransactionDecoder(ABI, BINARY);\n+\n+    public static String SM_BINARY = \"608060405234801561001057600080fd5b5060016000800160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506402540be40060006001018190555060028060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060006002600101819055506103bf806100c26000396000f30060806040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063299f7f9d146100515780638fff0fc41461007c575b600080fd5b34801561005d57600080fd5b506100666100a9565b6040518082815260200191505060405180910390f35b34801561008857600080fd5b506100a7600480360381019080803590602001909291905050506100b6565b005b6000600260010154905090565b8060006001015410806100d457506002600101548160026001015401105b156100de576102eb565b8060006001015403600060010181905550806002600101600082825401925050819055507fc345610041c3c141ff9e0fbc73b34bf13842fd02e0c3cfe6541eedd6adef4b2c816040518082815260200191505060405180910390a160046080604051908101604052806040805190810160405280600881526020017f323031373034313300000000000000000000000000000000000000000000000081525081526020016000800160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600260000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018381525090806001815401808255809150509060018203906000526020600020906004020160009091929091909150600082015181600001908051906020019061024e9291906102ee565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600301555050505b50565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061032f57805160ff191683800117855561035d565b8280016001018555821561035d579182015b8281111561035c578251825591602001919060010190610341565b5b50905061036a919061036e565b5090565b61039091905b8082111561038c576000816000905550600101610374565b5090565b905600a165627a7a723058205957e1c3edeb7d8d9ba7f64d56205c70972f2b91f880af98000f404fd22af37b0029\";\n+\n+    public static final String FUNC_TRANS = \"trans\";\n+\n+    public static final String FUNC_GET = \"get\";\n+\n+    public static final Event TRANSEVENT_EVENT = new Event(\"TransEvent\", \n             Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));\n-    return executeRemoteCallSingleValueReturn(function, BigInteger.class);\n-  }\n-\n-  public List<TransEventEventResponse> getTransEventEvents(TransactionReceipt transactionReceipt) {\n-    List<Contract.EventValuesWithLog> valueList =\n-        extractEventParametersWithLog(TRANSEVENT_EVENT, transactionReceipt);\n-    ArrayList<TransEventEventResponse> responses =\n-        new ArrayList<TransEventEventResponse>(valueList.size());\n-    for (Contract.EventValuesWithLog eventValues : valueList) {\n-      TransEventEventResponse typedResponse = new TransEventEventResponse();\n-      typedResponse.log = eventValues.getLog();\n-      typedResponse.num = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();\n-      responses.add(typedResponse);\n-    }\n-    return responses;\n-  }\n-\n-  public Flowable<TransEventEventResponse> transEventEventFlowable(BcosFilter filter) {\n-    return web3j\n-        .logFlowable(filter)\n-        .map(\n-            new io.reactivex.functions.Function<Log, TransEventEventResponse>() {\n-              @Override\n-              public TransEventEventResponse apply(Log log) {\n-                Contract.EventValuesWithLog eventValues =\n-                    extractEventParametersWithLog(TRANSEVENT_EVENT, log);\n-                TransEventEventResponse typedResponse = new TransEventEventResponse();\n-                typedResponse.log = log;\n-                typedResponse.num =\n-                    (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();\n-                return typedResponse;\n-              }\n-            });\n-  }\n-\n-  public Flowable<TransEventEventResponse> transEventEventFlowable(\n-      DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {\n-    BcosFilter filter = new BcosFilter(startBlock, endBlock, getContractAddress());\n-    filter.addSingleTopic(EventEncoder.encode(TRANSEVENT_EVENT));\n-    return transEventEventFlowable(filter);\n-  }\n-\n-  @Deprecated\n-  public static Ok load(\n-      String contractAddress,\n-      Web3j web3j,\n-      Credentials credentials,\n-      BigInteger gasPrice,\n-      BigInteger gasLimit) {\n-    return new Ok(contractAddress, web3j, credentials, gasPrice, gasLimit);\n-  }\n-\n-  @Deprecated\n-  public static Ok load(\n-      String contractAddress,\n-      Web3j web3j,\n-      TransactionManager transactionManager,\n-      BigInteger gasPrice,\n-      BigInteger gasLimit) {\n-    return new Ok(contractAddress, web3j, transactionManager, gasPrice, gasLimit);\n-  }\n-\n-  public static Ok load(\n-      String contractAddress,\n-      Web3j web3j,\n-      Credentials credentials,\n-      ContractGasProvider contractGasProvider) {\n-    return new Ok(contractAddress, web3j, credentials, contractGasProvider);\n-  }\n-\n-  public static Ok load(\n-      String contractAddress,\n-      Web3j web3j,\n-      TransactionManager transactionManager,\n-      ContractGasProvider contractGasProvider) {\n-    return new Ok(contractAddress, web3j, transactionManager, contractGasProvider);\n-  }\n-\n-  public static RemoteCall<Ok> deploy(\n-      Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {\n-    return deployRemoteCall(Ok.class, web3j, credentials, contractGasProvider, BINARY, \"\");\n-  }\n-\n-  public static RemoteCall<Ok> deploy(\n-      Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {\n-    return deployRemoteCall(Ok.class, web3j, transactionManager, contractGasProvider, BINARY, \"\");\n-  }\n-\n-  @Deprecated\n-  public static RemoteCall<Ok> deploy(\n-      Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {\n-    return deployRemoteCall(Ok.class, web3j, credentials, gasPrice, gasLimit, BINARY, \"\");\n-  }\n-\n-  @Deprecated\n-  public static RemoteCall<Ok> deploy(\n-      Web3j web3j,\n-      TransactionManager transactionManager,\n-      BigInteger gasPrice,\n-      BigInteger gasLimit) {\n-    return deployRemoteCall(Ok.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, \"\");\n-  }\n-\n-  public static class TransEventEventResponse {\n-    public Log log;\n-\n-    public BigInteger num;\n-  }\n+    ;\n+\n+    @Deprecated\n+    protected Ok(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {\n+        super(getBinary(), contractAddress, web3j, credentials, gasPrice, gasLimit);\n+    }\n+\n+    protected Ok(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {\n+        super(getBinary(), contractAddress, web3j, credentials, contractGasProvider);\n+    }\n+\n+    @Deprecated\n+    protected Ok(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {\n+        super(getBinary(), contractAddress, web3j, transactionManager, gasPrice, gasLimit);\n+    }\n+\n+    protected Ok(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {\n+        super(getBinary(), contractAddress, web3j, transactionManager, contractGasProvider);\n+    }\n+\n+    public static String getBinary() {\n+        return (EncryptType.encryptType == EncryptType.ECDSA_TYPE ? BINARY : SM_BINARY);\n+    }\n+\n+    public static TransactionDecoder getTransactionDecoder() {\n+        return transactionDecoder;\n+    }\n+\n+    public RemoteCall<TransactionReceipt> trans(BigInteger num) {\n+        final Function function = new Function(\n+                FUNC_TRANS, \n+                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(num)), \n+                Collections.<TypeReference<?>>emptyList());\n+        return executeRemoteCallTransaction(function);\n+    }\n+\n+    public void trans(BigInteger num, TransactionSucCallback callback) {\n+        final Function function = new Function(\n+                FUNC_TRANS, \n+                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(num)), \n+                Collections.<TypeReference<?>>emptyList());\n+        asyncExecuteTransaction(function, callback);\n+    }\n+\n+    public String transSeq(BigInteger num) {\n+        final Function function = new Function(\n+                FUNC_TRANS, \n+                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(num)), \n+                Collections.<TypeReference<?>>emptyList());\n+        return createTransactionSeq(function);\n+    }\n+\n+    public Tuple1<BigInteger> getTransInput(TransactionReceipt transactionReceipt) {\n+        String data = transactionReceipt.getInput().substring(10);\n+        final Function function = new Function(FUNC_TRANS, \n+                Arrays.<Type>asList(), \n+                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));\n+        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());;\n+        return new Tuple1<BigInteger>(\n+\n+                (BigInteger) results.get(0).getValue()\n+                );\n+    }\n+\n+    public RemoteCall<BigInteger> get() {\n+        final Function function = new Function(FUNC_GET, \n+                Arrays.<Type>asList(), \n+                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));\n+        return executeRemoteCallSingleValueReturn(function, BigInteger.class);\n+    }\n+\n+    public List<TransEventEventResponse> getTransEventEvents(TransactionReceipt transactionReceipt) {\n+        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(TRANSEVENT_EVENT, transactionReceipt);\n+        ArrayList<TransEventEventResponse> responses = new ArrayList<TransEventEventResponse>(valueList.size());\n+        for (Contract.EventValuesWithLog eventValues : valueList) {\n+            TransEventEventResponse typedResponse = new TransEventEventResponse();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ab99cd3bbd8904e5316c8c58e13e385b0aba8d32"}, "originalPosition": 314}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNDU5MzAwOnYy", "diffSide": "RIGHT", "path": "src/integration-test/java/org/fisco/bcos/contract/Ok.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxMTo1NDo0NVrOGhFuOw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxMTo1NDo0NVrOGhFuOw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzM0OTk0Nw==", "bodyText": "[PMD Java] Potential violation of Law of Demeter (method chain calls) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.23.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/600#discussion_r437349947", "createdAt": "2020-06-09T11:54:45Z", "author": {"login": "sider"}, "path": "src/integration-test/java/org/fisco/bcos/contract/Ok.java", "diffHunk": "@@ -1,217 +1,188 @@\n package org.fisco.bcos.contract;\n \n-import io.reactivex.Flowable;\n import java.math.BigInteger;\n import java.util.ArrayList;\n import java.util.Arrays;\n import java.util.Collections;\n import java.util.List;\n import org.fisco.bcos.channel.client.TransactionSucCallback;\n+import org.fisco.bcos.channel.event.filter.EventLogPushWithDecodeCallback;\n import org.fisco.bcos.web3j.abi.EventEncoder;\n+import org.fisco.bcos.web3j.abi.FunctionReturnDecoder;\n import org.fisco.bcos.web3j.abi.TypeReference;\n import org.fisco.bcos.web3j.abi.datatypes.Event;\n import org.fisco.bcos.web3j.abi.datatypes.Function;\n import org.fisco.bcos.web3j.abi.datatypes.Type;\n import org.fisco.bcos.web3j.abi.datatypes.generated.Uint256;\n import org.fisco.bcos.web3j.crypto.Credentials;\n+import org.fisco.bcos.web3j.crypto.EncryptType;\n import org.fisco.bcos.web3j.protocol.Web3j;\n-import org.fisco.bcos.web3j.protocol.core.DefaultBlockParameter;\n import org.fisco.bcos.web3j.protocol.core.RemoteCall;\n-import org.fisco.bcos.web3j.protocol.core.methods.request.BcosFilter;\n import org.fisco.bcos.web3j.protocol.core.methods.response.Log;\n import org.fisco.bcos.web3j.protocol.core.methods.response.TransactionReceipt;\n+import org.fisco.bcos.web3j.tuples.generated.Tuple1;\n import org.fisco.bcos.web3j.tx.Contract;\n import org.fisco.bcos.web3j.tx.TransactionManager;\n import org.fisco.bcos.web3j.tx.gas.ContractGasProvider;\n+import org.fisco.bcos.web3j.tx.txdecode.TransactionDecoder;\n \n /**\n- * Auto generated code.\n- *\n+ * <p>Auto generated code.\n  * <p><strong>Do not modify!</strong>\n- *\n  * <p>Please use the <a href=\"https://docs.web3j.io/command_line.html\">web3j command line tools</a>,\n- * or the org.fisco.bcos.web3j.codegen.SolidityFunctionWrapperGenerator in the <a\n- * href=\"https://github.com/web3j/web3j/tree/master/codegen\">codegen module</a> to update.\n+ * or the org.fisco.bcos.web3j.codegen.SolidityFunctionWrapperGenerator in the \n+ * <a href=\"https://github.com/web3j/web3j/tree/master/codegen\">codegen module</a> to update.\n  *\n  * <p>Generated with web3j version none.\n  */\n+@SuppressWarnings(\"unchecked\")\n public class Ok extends Contract {\n-  private static final String BINARY =\n-      \"608060405234801561001057600080fd5b5060016000800160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506402540be40060006001018190555060028060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060006002600101819055506103bf806100c26000396000f30060806040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806366c99139146100515780636d4ce63c1461007e575b600080fd5b34801561005d57600080fd5b5061007c600480360381019080803590602001909291905050506100a9565b005b34801561008a57600080fd5b506100936102e1565b6040518082815260200191505060405180910390f35b8060006001015410806100c757506002600101548160026001015401105b156100d1576102de565b8060006001015403600060010181905550806002600101600082825401925050819055507fc77b710b83d1dc3f3fafeccd08a6c469beb873b2f0975b50d1698e46b3ee5b4c816040518082815260200191505060405180910390a160046080604051908101604052806040805190810160405280600881526020017f323031373034313300000000000000000000000000000000000000000000000081525081526020016000800160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600260000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152509080600181540180825580915050906001820390600052602060002090600402016000909192909190915060008201518160000190805190602001906102419291906102ee565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600301555050505b50565b6000600260010154905090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061032f57805160ff191683800117855561035d565b8280016001018555821561035d579182015b8281111561035c578251825591602001919060010190610341565b5b50905061036a919061036e565b5090565b61039091905b8082111561038c576000816000905550600101610374565b5090565b905600a165627a7a72305820fb983c66bee66788f407721b23b10a8aae3dc9ef8f1b09e08ec6a6c0b0ec70100029\";\n-\n-  public static final String FUNC_TRANS = \"trans\";\n-\n-  public static final String FUNC_GET = \"get\";\n-\n-  public static final Event TRANSEVENT_EVENT =\n-      new Event(\"TransEvent\", Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));;\n-\n-  @Deprecated\n-  protected Ok(\n-      String contractAddress,\n-      Web3j web3j,\n-      Credentials credentials,\n-      BigInteger gasPrice,\n-      BigInteger gasLimit) {\n-    super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);\n-  }\n-\n-  protected Ok(\n-      String contractAddress,\n-      Web3j web3j,\n-      Credentials credentials,\n-      ContractGasProvider contractGasProvider) {\n-    super(BINARY, contractAddress, web3j, credentials, contractGasProvider);\n-  }\n-\n-  @Deprecated\n-  protected Ok(\n-      String contractAddress,\n-      Web3j web3j,\n-      TransactionManager transactionManager,\n-      BigInteger gasPrice,\n-      BigInteger gasLimit) {\n-    super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);\n-  }\n-\n-  protected Ok(\n-      String contractAddress,\n-      Web3j web3j,\n-      TransactionManager transactionManager,\n-      ContractGasProvider contractGasProvider) {\n-    super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);\n-  }\n-\n-  public RemoteCall<TransactionReceipt> trans(BigInteger num) {\n-    final Function function =\n-        new Function(\n-            FUNC_TRANS,\n-            Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(num)),\n-            Collections.<TypeReference<?>>emptyList());\n-    return executeRemoteCallTransaction(function);\n-  }\n-\n-  public void trans(BigInteger num, TransactionSucCallback callback) {\n-    final Function function =\n-        new Function(\n-            FUNC_TRANS,\n-            Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(num)),\n-            Collections.<TypeReference<?>>emptyList());\n-    asyncExecuteTransaction(function, callback);\n-  }\n-\n-  public RemoteCall<BigInteger> get() {\n-    final Function function =\n-        new Function(\n-            FUNC_GET,\n-            Arrays.<Type>asList(),\n+    public static String BINARY = \"608060405234801561001057600080fd5b5060016000800160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506402540be40060006001018190555060028060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060006002600101819055506103bf806100c26000396000f30060806040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806366c99139146100515780636d4ce63c1461007e575b600080fd5b34801561005d57600080fd5b5061007c600480360381019080803590602001909291905050506100a9565b005b34801561008a57600080fd5b506100936102e1565b6040518082815260200191505060405180910390f35b8060006001015410806100c757506002600101548160026001015401105b156100d1576102de565b8060006001015403600060010181905550806002600101600082825401925050819055507fc77b710b83d1dc3f3fafeccd08a6c469beb873b2f0975b50d1698e46b3ee5b4c816040518082815260200191505060405180910390a160046080604051908101604052806040805190810160405280600881526020017f323031373034313300000000000000000000000000000000000000000000000081525081526020016000800160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600260000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152509080600181540180825580915050906001820390600052602060002090600402016000909192909190915060008201518160000190805190602001906102419291906102ee565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600301555050505b50565b6000600260010154905090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061032f57805160ff191683800117855561035d565b8280016001018555821561035d579182015b8281111561035c578251825591602001919060010190610341565b5b50905061036a919061036e565b5090565b61039091905b8082111561038c576000816000905550600101610374565b5090565b905600a165627a7a723058203c6488d9a80e837aab52f5c5ef1d0b37b671ca2891fd1d92711d3d3ef884b6400029\";\n+\n+    public static final String ABI = \"[{\\\"constant\\\":false,\\\"inputs\\\":[{\\\"name\\\":\\\"num\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"name\\\":\\\"trans\\\",\\\"outputs\\\":[],\\\"payable\\\":false,\\\"stateMutability\\\":\\\"nonpayable\\\",\\\"type\\\":\\\"function\\\"},{\\\"constant\\\":true,\\\"inputs\\\":[],\\\"name\\\":\\\"get\\\",\\\"outputs\\\":[{\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"payable\\\":false,\\\"stateMutability\\\":\\\"view\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[],\\\"payable\\\":false,\\\"stateMutability\\\":\\\"nonpayable\\\",\\\"type\\\":\\\"constructor\\\"},{\\\"anonymous\\\":false,\\\"inputs\\\":[{\\\"indexed\\\":false,\\\"name\\\":\\\"num\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"name\\\":\\\"TransEvent\\\",\\\"type\\\":\\\"event\\\"}]\";\n+\n+    public static final TransactionDecoder transactionDecoder = new TransactionDecoder(ABI, BINARY);\n+\n+    public static String SM_BINARY = \"608060405234801561001057600080fd5b5060016000800160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506402540be40060006001018190555060028060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060006002600101819055506103bf806100c26000396000f30060806040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063299f7f9d146100515780638fff0fc41461007c575b600080fd5b34801561005d57600080fd5b506100666100a9565b6040518082815260200191505060405180910390f35b34801561008857600080fd5b506100a7600480360381019080803590602001909291905050506100b6565b005b6000600260010154905090565b8060006001015410806100d457506002600101548160026001015401105b156100de576102eb565b8060006001015403600060010181905550806002600101600082825401925050819055507fc345610041c3c141ff9e0fbc73b34bf13842fd02e0c3cfe6541eedd6adef4b2c816040518082815260200191505060405180910390a160046080604051908101604052806040805190810160405280600881526020017f323031373034313300000000000000000000000000000000000000000000000081525081526020016000800160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600260000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018381525090806001815401808255809150509060018203906000526020600020906004020160009091929091909150600082015181600001908051906020019061024e9291906102ee565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600301555050505b50565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061032f57805160ff191683800117855561035d565b8280016001018555821561035d579182015b8281111561035c578251825591602001919060010190610341565b5b50905061036a919061036e565b5090565b61039091905b8082111561038c576000816000905550600101610374565b5090565b905600a165627a7a723058205957e1c3edeb7d8d9ba7f64d56205c70972f2b91f880af98000f404fd22af37b0029\";\n+\n+    public static final String FUNC_TRANS = \"trans\";\n+\n+    public static final String FUNC_GET = \"get\";\n+\n+    public static final Event TRANSEVENT_EVENT = new Event(\"TransEvent\", \n             Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));\n-    return executeRemoteCallSingleValueReturn(function, BigInteger.class);\n-  }\n-\n-  public List<TransEventEventResponse> getTransEventEvents(TransactionReceipt transactionReceipt) {\n-    List<Contract.EventValuesWithLog> valueList =\n-        extractEventParametersWithLog(TRANSEVENT_EVENT, transactionReceipt);\n-    ArrayList<TransEventEventResponse> responses =\n-        new ArrayList<TransEventEventResponse>(valueList.size());\n-    for (Contract.EventValuesWithLog eventValues : valueList) {\n-      TransEventEventResponse typedResponse = new TransEventEventResponse();\n-      typedResponse.log = eventValues.getLog();\n-      typedResponse.num = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();\n-      responses.add(typedResponse);\n-    }\n-    return responses;\n-  }\n-\n-  public Flowable<TransEventEventResponse> transEventEventFlowable(BcosFilter filter) {\n-    return web3j\n-        .logFlowable(filter)\n-        .map(\n-            new io.reactivex.functions.Function<Log, TransEventEventResponse>() {\n-              @Override\n-              public TransEventEventResponse apply(Log log) {\n-                Contract.EventValuesWithLog eventValues =\n-                    extractEventParametersWithLog(TRANSEVENT_EVENT, log);\n-                TransEventEventResponse typedResponse = new TransEventEventResponse();\n-                typedResponse.log = log;\n-                typedResponse.num =\n-                    (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();\n-                return typedResponse;\n-              }\n-            });\n-  }\n-\n-  public Flowable<TransEventEventResponse> transEventEventFlowable(\n-      DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {\n-    BcosFilter filter = new BcosFilter(startBlock, endBlock, getContractAddress());\n-    filter.addSingleTopic(EventEncoder.encode(TRANSEVENT_EVENT));\n-    return transEventEventFlowable(filter);\n-  }\n-\n-  @Deprecated\n-  public static Ok load(\n-      String contractAddress,\n-      Web3j web3j,\n-      Credentials credentials,\n-      BigInteger gasPrice,\n-      BigInteger gasLimit) {\n-    return new Ok(contractAddress, web3j, credentials, gasPrice, gasLimit);\n-  }\n-\n-  @Deprecated\n-  public static Ok load(\n-      String contractAddress,\n-      Web3j web3j,\n-      TransactionManager transactionManager,\n-      BigInteger gasPrice,\n-      BigInteger gasLimit) {\n-    return new Ok(contractAddress, web3j, transactionManager, gasPrice, gasLimit);\n-  }\n-\n-  public static Ok load(\n-      String contractAddress,\n-      Web3j web3j,\n-      Credentials credentials,\n-      ContractGasProvider contractGasProvider) {\n-    return new Ok(contractAddress, web3j, credentials, contractGasProvider);\n-  }\n-\n-  public static Ok load(\n-      String contractAddress,\n-      Web3j web3j,\n-      TransactionManager transactionManager,\n-      ContractGasProvider contractGasProvider) {\n-    return new Ok(contractAddress, web3j, transactionManager, contractGasProvider);\n-  }\n-\n-  public static RemoteCall<Ok> deploy(\n-      Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {\n-    return deployRemoteCall(Ok.class, web3j, credentials, contractGasProvider, BINARY, \"\");\n-  }\n-\n-  public static RemoteCall<Ok> deploy(\n-      Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {\n-    return deployRemoteCall(Ok.class, web3j, transactionManager, contractGasProvider, BINARY, \"\");\n-  }\n-\n-  @Deprecated\n-  public static RemoteCall<Ok> deploy(\n-      Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {\n-    return deployRemoteCall(Ok.class, web3j, credentials, gasPrice, gasLimit, BINARY, \"\");\n-  }\n-\n-  @Deprecated\n-  public static RemoteCall<Ok> deploy(\n-      Web3j web3j,\n-      TransactionManager transactionManager,\n-      BigInteger gasPrice,\n-      BigInteger gasLimit) {\n-    return deployRemoteCall(Ok.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, \"\");\n-  }\n-\n-  public static class TransEventEventResponse {\n-    public Log log;\n-\n-    public BigInteger num;\n-  }\n+    ;\n+\n+    @Deprecated\n+    protected Ok(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {\n+        super(getBinary(), contractAddress, web3j, credentials, gasPrice, gasLimit);\n+    }\n+\n+    protected Ok(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {\n+        super(getBinary(), contractAddress, web3j, credentials, contractGasProvider);\n+    }\n+\n+    @Deprecated\n+    protected Ok(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {\n+        super(getBinary(), contractAddress, web3j, transactionManager, gasPrice, gasLimit);\n+    }\n+\n+    protected Ok(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {\n+        super(getBinary(), contractAddress, web3j, transactionManager, contractGasProvider);\n+    }\n+\n+    public static String getBinary() {\n+        return (EncryptType.encryptType == EncryptType.ECDSA_TYPE ? BINARY : SM_BINARY);\n+    }\n+\n+    public static TransactionDecoder getTransactionDecoder() {\n+        return transactionDecoder;\n+    }\n+\n+    public RemoteCall<TransactionReceipt> trans(BigInteger num) {\n+        final Function function = new Function(\n+                FUNC_TRANS, \n+                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(num)), \n+                Collections.<TypeReference<?>>emptyList());\n+        return executeRemoteCallTransaction(function);\n+    }\n+\n+    public void trans(BigInteger num, TransactionSucCallback callback) {\n+        final Function function = new Function(\n+                FUNC_TRANS, \n+                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(num)), \n+                Collections.<TypeReference<?>>emptyList());\n+        asyncExecuteTransaction(function, callback);\n+    }\n+\n+    public String transSeq(BigInteger num) {\n+        final Function function = new Function(\n+                FUNC_TRANS, \n+                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(num)), \n+                Collections.<TypeReference<?>>emptyList());\n+        return createTransactionSeq(function);\n+    }\n+\n+    public Tuple1<BigInteger> getTransInput(TransactionReceipt transactionReceipt) {\n+        String data = transactionReceipt.getInput().substring(10);\n+        final Function function = new Function(FUNC_TRANS, \n+                Arrays.<Type>asList(), \n+                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));\n+        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());;\n+        return new Tuple1<BigInteger>(\n+\n+                (BigInteger) results.get(0).getValue()\n+                );\n+    }\n+\n+    public RemoteCall<BigInteger> get() {\n+        final Function function = new Function(FUNC_GET, \n+                Arrays.<Type>asList(), \n+                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));\n+        return executeRemoteCallSingleValueReturn(function, BigInteger.class);\n+    }\n+\n+    public List<TransEventEventResponse> getTransEventEvents(TransactionReceipt transactionReceipt) {\n+        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(TRANSEVENT_EVENT, transactionReceipt);\n+        ArrayList<TransEventEventResponse> responses = new ArrayList<TransEventEventResponse>(valueList.size());\n+        for (Contract.EventValuesWithLog eventValues : valueList) {\n+            TransEventEventResponse typedResponse = new TransEventEventResponse();\n+            typedResponse.log = eventValues.getLog();\n+            typedResponse.num = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ab99cd3bbd8904e5316c8c58e13e385b0aba8d32"}, "originalPosition": 316}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNDU5MzAzOnYy", "diffSide": "RIGHT", "path": "src/integration-test/java/org/fisco/bcos/contract/Ok.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxMTo1NDo0NVrOGhFuPg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxMTo1NDo0NVrOGhFuPg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzM0OTk1MA==", "bodyText": "[PMD Java] Logger should be defined private static final and have the correct class (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nProperLogger\nError Prone\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.23.0/pmd_rules_java_errorprone.html#properlogger\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/600#discussion_r437349950", "createdAt": "2020-06-09T11:54:45Z", "author": {"login": "sider"}, "path": "src/integration-test/java/org/fisco/bcos/contract/Ok.java", "diffHunk": "@@ -1,217 +1,188 @@\n package org.fisco.bcos.contract;\n \n-import io.reactivex.Flowable;\n import java.math.BigInteger;\n import java.util.ArrayList;\n import java.util.Arrays;\n import java.util.Collections;\n import java.util.List;\n import org.fisco.bcos.channel.client.TransactionSucCallback;\n+import org.fisco.bcos.channel.event.filter.EventLogPushWithDecodeCallback;\n import org.fisco.bcos.web3j.abi.EventEncoder;\n+import org.fisco.bcos.web3j.abi.FunctionReturnDecoder;\n import org.fisco.bcos.web3j.abi.TypeReference;\n import org.fisco.bcos.web3j.abi.datatypes.Event;\n import org.fisco.bcos.web3j.abi.datatypes.Function;\n import org.fisco.bcos.web3j.abi.datatypes.Type;\n import org.fisco.bcos.web3j.abi.datatypes.generated.Uint256;\n import org.fisco.bcos.web3j.crypto.Credentials;\n+import org.fisco.bcos.web3j.crypto.EncryptType;\n import org.fisco.bcos.web3j.protocol.Web3j;\n-import org.fisco.bcos.web3j.protocol.core.DefaultBlockParameter;\n import org.fisco.bcos.web3j.protocol.core.RemoteCall;\n-import org.fisco.bcos.web3j.protocol.core.methods.request.BcosFilter;\n import org.fisco.bcos.web3j.protocol.core.methods.response.Log;\n import org.fisco.bcos.web3j.protocol.core.methods.response.TransactionReceipt;\n+import org.fisco.bcos.web3j.tuples.generated.Tuple1;\n import org.fisco.bcos.web3j.tx.Contract;\n import org.fisco.bcos.web3j.tx.TransactionManager;\n import org.fisco.bcos.web3j.tx.gas.ContractGasProvider;\n+import org.fisco.bcos.web3j.tx.txdecode.TransactionDecoder;\n \n /**\n- * Auto generated code.\n- *\n+ * <p>Auto generated code.\n  * <p><strong>Do not modify!</strong>\n- *\n  * <p>Please use the <a href=\"https://docs.web3j.io/command_line.html\">web3j command line tools</a>,\n- * or the org.fisco.bcos.web3j.codegen.SolidityFunctionWrapperGenerator in the <a\n- * href=\"https://github.com/web3j/web3j/tree/master/codegen\">codegen module</a> to update.\n+ * or the org.fisco.bcos.web3j.codegen.SolidityFunctionWrapperGenerator in the \n+ * <a href=\"https://github.com/web3j/web3j/tree/master/codegen\">codegen module</a> to update.\n  *\n  * <p>Generated with web3j version none.\n  */\n+@SuppressWarnings(\"unchecked\")\n public class Ok extends Contract {\n-  private static final String BINARY =\n-      \"608060405234801561001057600080fd5b5060016000800160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506402540be40060006001018190555060028060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060006002600101819055506103bf806100c26000396000f30060806040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806366c99139146100515780636d4ce63c1461007e575b600080fd5b34801561005d57600080fd5b5061007c600480360381019080803590602001909291905050506100a9565b005b34801561008a57600080fd5b506100936102e1565b6040518082815260200191505060405180910390f35b8060006001015410806100c757506002600101548160026001015401105b156100d1576102de565b8060006001015403600060010181905550806002600101600082825401925050819055507fc77b710b83d1dc3f3fafeccd08a6c469beb873b2f0975b50d1698e46b3ee5b4c816040518082815260200191505060405180910390a160046080604051908101604052806040805190810160405280600881526020017f323031373034313300000000000000000000000000000000000000000000000081525081526020016000800160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600260000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152509080600181540180825580915050906001820390600052602060002090600402016000909192909190915060008201518160000190805190602001906102419291906102ee565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600301555050505b50565b6000600260010154905090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061032f57805160ff191683800117855561035d565b8280016001018555821561035d579182015b8281111561035c578251825591602001919060010190610341565b5b50905061036a919061036e565b5090565b61039091905b8082111561038c576000816000905550600101610374565b5090565b905600a165627a7a72305820fb983c66bee66788f407721b23b10a8aae3dc9ef8f1b09e08ec6a6c0b0ec70100029\";\n-\n-  public static final String FUNC_TRANS = \"trans\";\n-\n-  public static final String FUNC_GET = \"get\";\n-\n-  public static final Event TRANSEVENT_EVENT =\n-      new Event(\"TransEvent\", Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));;\n-\n-  @Deprecated\n-  protected Ok(\n-      String contractAddress,\n-      Web3j web3j,\n-      Credentials credentials,\n-      BigInteger gasPrice,\n-      BigInteger gasLimit) {\n-    super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);\n-  }\n-\n-  protected Ok(\n-      String contractAddress,\n-      Web3j web3j,\n-      Credentials credentials,\n-      ContractGasProvider contractGasProvider) {\n-    super(BINARY, contractAddress, web3j, credentials, contractGasProvider);\n-  }\n-\n-  @Deprecated\n-  protected Ok(\n-      String contractAddress,\n-      Web3j web3j,\n-      TransactionManager transactionManager,\n-      BigInteger gasPrice,\n-      BigInteger gasLimit) {\n-    super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);\n-  }\n-\n-  protected Ok(\n-      String contractAddress,\n-      Web3j web3j,\n-      TransactionManager transactionManager,\n-      ContractGasProvider contractGasProvider) {\n-    super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);\n-  }\n-\n-  public RemoteCall<TransactionReceipt> trans(BigInteger num) {\n-    final Function function =\n-        new Function(\n-            FUNC_TRANS,\n-            Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(num)),\n-            Collections.<TypeReference<?>>emptyList());\n-    return executeRemoteCallTransaction(function);\n-  }\n-\n-  public void trans(BigInteger num, TransactionSucCallback callback) {\n-    final Function function =\n-        new Function(\n-            FUNC_TRANS,\n-            Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(num)),\n-            Collections.<TypeReference<?>>emptyList());\n-    asyncExecuteTransaction(function, callback);\n-  }\n-\n-  public RemoteCall<BigInteger> get() {\n-    final Function function =\n-        new Function(\n-            FUNC_GET,\n-            Arrays.<Type>asList(),\n+    public static String BINARY = \"608060405234801561001057600080fd5b5060016000800160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506402540be40060006001018190555060028060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060006002600101819055506103bf806100c26000396000f30060806040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806366c99139146100515780636d4ce63c1461007e575b600080fd5b34801561005d57600080fd5b5061007c600480360381019080803590602001909291905050506100a9565b005b34801561008a57600080fd5b506100936102e1565b6040518082815260200191505060405180910390f35b8060006001015410806100c757506002600101548160026001015401105b156100d1576102de565b8060006001015403600060010181905550806002600101600082825401925050819055507fc77b710b83d1dc3f3fafeccd08a6c469beb873b2f0975b50d1698e46b3ee5b4c816040518082815260200191505060405180910390a160046080604051908101604052806040805190810160405280600881526020017f323031373034313300000000000000000000000000000000000000000000000081525081526020016000800160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600260000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152509080600181540180825580915050906001820390600052602060002090600402016000909192909190915060008201518160000190805190602001906102419291906102ee565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600301555050505b50565b6000600260010154905090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061032f57805160ff191683800117855561035d565b8280016001018555821561035d579182015b8281111561035c578251825591602001919060010190610341565b5b50905061036a919061036e565b5090565b61039091905b8082111561038c576000816000905550600101610374565b5090565b905600a165627a7a723058203c6488d9a80e837aab52f5c5ef1d0b37b671ca2891fd1d92711d3d3ef884b6400029\";\n+\n+    public static final String ABI = \"[{\\\"constant\\\":false,\\\"inputs\\\":[{\\\"name\\\":\\\"num\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"name\\\":\\\"trans\\\",\\\"outputs\\\":[],\\\"payable\\\":false,\\\"stateMutability\\\":\\\"nonpayable\\\",\\\"type\\\":\\\"function\\\"},{\\\"constant\\\":true,\\\"inputs\\\":[],\\\"name\\\":\\\"get\\\",\\\"outputs\\\":[{\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"payable\\\":false,\\\"stateMutability\\\":\\\"view\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[],\\\"payable\\\":false,\\\"stateMutability\\\":\\\"nonpayable\\\",\\\"type\\\":\\\"constructor\\\"},{\\\"anonymous\\\":false,\\\"inputs\\\":[{\\\"indexed\\\":false,\\\"name\\\":\\\"num\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"name\\\":\\\"TransEvent\\\",\\\"type\\\":\\\"event\\\"}]\";\n+\n+    public static final TransactionDecoder transactionDecoder = new TransactionDecoder(ABI, BINARY);\n+\n+    public static String SM_BINARY = \"608060405234801561001057600080fd5b5060016000800160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506402540be40060006001018190555060028060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060006002600101819055506103bf806100c26000396000f30060806040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063299f7f9d146100515780638fff0fc41461007c575b600080fd5b34801561005d57600080fd5b506100666100a9565b6040518082815260200191505060405180910390f35b34801561008857600080fd5b506100a7600480360381019080803590602001909291905050506100b6565b005b6000600260010154905090565b8060006001015410806100d457506002600101548160026001015401105b156100de576102eb565b8060006001015403600060010181905550806002600101600082825401925050819055507fc345610041c3c141ff9e0fbc73b34bf13842fd02e0c3cfe6541eedd6adef4b2c816040518082815260200191505060405180910390a160046080604051908101604052806040805190810160405280600881526020017f323031373034313300000000000000000000000000000000000000000000000081525081526020016000800160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600260000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018381525090806001815401808255809150509060018203906000526020600020906004020160009091929091909150600082015181600001908051906020019061024e9291906102ee565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600301555050505b50565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061032f57805160ff191683800117855561035d565b8280016001018555821561035d579182015b8281111561035c578251825591602001919060010190610341565b5b50905061036a919061036e565b5090565b61039091905b8082111561038c576000816000905550600101610374565b5090565b905600a165627a7a723058205957e1c3edeb7d8d9ba7f64d56205c70972f2b91f880af98000f404fd22af37b0029\";\n+\n+    public static final String FUNC_TRANS = \"trans\";\n+\n+    public static final String FUNC_GET = \"get\";\n+\n+    public static final Event TRANSEVENT_EVENT = new Event(\"TransEvent\", \n             Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));\n-    return executeRemoteCallSingleValueReturn(function, BigInteger.class);\n-  }\n-\n-  public List<TransEventEventResponse> getTransEventEvents(TransactionReceipt transactionReceipt) {\n-    List<Contract.EventValuesWithLog> valueList =\n-        extractEventParametersWithLog(TRANSEVENT_EVENT, transactionReceipt);\n-    ArrayList<TransEventEventResponse> responses =\n-        new ArrayList<TransEventEventResponse>(valueList.size());\n-    for (Contract.EventValuesWithLog eventValues : valueList) {\n-      TransEventEventResponse typedResponse = new TransEventEventResponse();\n-      typedResponse.log = eventValues.getLog();\n-      typedResponse.num = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();\n-      responses.add(typedResponse);\n-    }\n-    return responses;\n-  }\n-\n-  public Flowable<TransEventEventResponse> transEventEventFlowable(BcosFilter filter) {\n-    return web3j\n-        .logFlowable(filter)\n-        .map(\n-            new io.reactivex.functions.Function<Log, TransEventEventResponse>() {\n-              @Override\n-              public TransEventEventResponse apply(Log log) {\n-                Contract.EventValuesWithLog eventValues =\n-                    extractEventParametersWithLog(TRANSEVENT_EVENT, log);\n-                TransEventEventResponse typedResponse = new TransEventEventResponse();\n-                typedResponse.log = log;\n-                typedResponse.num =\n-                    (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();\n-                return typedResponse;\n-              }\n-            });\n-  }\n-\n-  public Flowable<TransEventEventResponse> transEventEventFlowable(\n-      DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {\n-    BcosFilter filter = new BcosFilter(startBlock, endBlock, getContractAddress());\n-    filter.addSingleTopic(EventEncoder.encode(TRANSEVENT_EVENT));\n-    return transEventEventFlowable(filter);\n-  }\n-\n-  @Deprecated\n-  public static Ok load(\n-      String contractAddress,\n-      Web3j web3j,\n-      Credentials credentials,\n-      BigInteger gasPrice,\n-      BigInteger gasLimit) {\n-    return new Ok(contractAddress, web3j, credentials, gasPrice, gasLimit);\n-  }\n-\n-  @Deprecated\n-  public static Ok load(\n-      String contractAddress,\n-      Web3j web3j,\n-      TransactionManager transactionManager,\n-      BigInteger gasPrice,\n-      BigInteger gasLimit) {\n-    return new Ok(contractAddress, web3j, transactionManager, gasPrice, gasLimit);\n-  }\n-\n-  public static Ok load(\n-      String contractAddress,\n-      Web3j web3j,\n-      Credentials credentials,\n-      ContractGasProvider contractGasProvider) {\n-    return new Ok(contractAddress, web3j, credentials, contractGasProvider);\n-  }\n-\n-  public static Ok load(\n-      String contractAddress,\n-      Web3j web3j,\n-      TransactionManager transactionManager,\n-      ContractGasProvider contractGasProvider) {\n-    return new Ok(contractAddress, web3j, transactionManager, contractGasProvider);\n-  }\n-\n-  public static RemoteCall<Ok> deploy(\n-      Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {\n-    return deployRemoteCall(Ok.class, web3j, credentials, contractGasProvider, BINARY, \"\");\n-  }\n-\n-  public static RemoteCall<Ok> deploy(\n-      Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {\n-    return deployRemoteCall(Ok.class, web3j, transactionManager, contractGasProvider, BINARY, \"\");\n-  }\n-\n-  @Deprecated\n-  public static RemoteCall<Ok> deploy(\n-      Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {\n-    return deployRemoteCall(Ok.class, web3j, credentials, gasPrice, gasLimit, BINARY, \"\");\n-  }\n-\n-  @Deprecated\n-  public static RemoteCall<Ok> deploy(\n-      Web3j web3j,\n-      TransactionManager transactionManager,\n-      BigInteger gasPrice,\n-      BigInteger gasLimit) {\n-    return deployRemoteCall(Ok.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, \"\");\n-  }\n-\n-  public static class TransEventEventResponse {\n-    public Log log;\n-\n-    public BigInteger num;\n-  }\n+    ;\n+\n+    @Deprecated\n+    protected Ok(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {\n+        super(getBinary(), contractAddress, web3j, credentials, gasPrice, gasLimit);\n+    }\n+\n+    protected Ok(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {\n+        super(getBinary(), contractAddress, web3j, credentials, contractGasProvider);\n+    }\n+\n+    @Deprecated\n+    protected Ok(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {\n+        super(getBinary(), contractAddress, web3j, transactionManager, gasPrice, gasLimit);\n+    }\n+\n+    protected Ok(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {\n+        super(getBinary(), contractAddress, web3j, transactionManager, contractGasProvider);\n+    }\n+\n+    public static String getBinary() {\n+        return (EncryptType.encryptType == EncryptType.ECDSA_TYPE ? BINARY : SM_BINARY);\n+    }\n+\n+    public static TransactionDecoder getTransactionDecoder() {\n+        return transactionDecoder;\n+    }\n+\n+    public RemoteCall<TransactionReceipt> trans(BigInteger num) {\n+        final Function function = new Function(\n+                FUNC_TRANS, \n+                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(num)), \n+                Collections.<TypeReference<?>>emptyList());\n+        return executeRemoteCallTransaction(function);\n+    }\n+\n+    public void trans(BigInteger num, TransactionSucCallback callback) {\n+        final Function function = new Function(\n+                FUNC_TRANS, \n+                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(num)), \n+                Collections.<TypeReference<?>>emptyList());\n+        asyncExecuteTransaction(function, callback);\n+    }\n+\n+    public String transSeq(BigInteger num) {\n+        final Function function = new Function(\n+                FUNC_TRANS, \n+                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(num)), \n+                Collections.<TypeReference<?>>emptyList());\n+        return createTransactionSeq(function);\n+    }\n+\n+    public Tuple1<BigInteger> getTransInput(TransactionReceipt transactionReceipt) {\n+        String data = transactionReceipt.getInput().substring(10);\n+        final Function function = new Function(FUNC_TRANS, \n+                Arrays.<Type>asList(), \n+                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));\n+        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());;\n+        return new Tuple1<BigInteger>(\n+\n+                (BigInteger) results.get(0).getValue()\n+                );\n+    }\n+\n+    public RemoteCall<BigInteger> get() {\n+        final Function function = new Function(FUNC_GET, \n+                Arrays.<Type>asList(), \n+                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));\n+        return executeRemoteCallSingleValueReturn(function, BigInteger.class);\n+    }\n+\n+    public List<TransEventEventResponse> getTransEventEvents(TransactionReceipt transactionReceipt) {\n+        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(TRANSEVENT_EVENT, transactionReceipt);\n+        ArrayList<TransEventEventResponse> responses = new ArrayList<TransEventEventResponse>(valueList.size());\n+        for (Contract.EventValuesWithLog eventValues : valueList) {\n+            TransEventEventResponse typedResponse = new TransEventEventResponse();\n+            typedResponse.log = eventValues.getLog();\n+            typedResponse.num = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();\n+            responses.add(typedResponse);\n+        }\n+        return responses;\n+    }\n+\n+    public void registerTransEventEventLogFilter(String fromBlock, String toBlock, List<String> otherTopcs, EventLogPushWithDecodeCallback callback) {\n+        String topic0 = EventEncoder.encode(TRANSEVENT_EVENT);\n+        registerEventLogPushFilter(ABI,BINARY,topic0,fromBlock,toBlock,otherTopcs,callback);\n+    }\n+\n+    public void registerTransEventEventLogFilter(EventLogPushWithDecodeCallback callback) {\n+        String topic0 = EventEncoder.encode(TRANSEVENT_EVENT);\n+        registerEventLogPushFilter(ABI,BINARY,topic0,callback);\n+    }\n+\n+    @Deprecated\n+    public static Ok load(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {\n+        return new Ok(contractAddress, web3j, credentials, gasPrice, gasLimit);\n+    }\n+\n+    @Deprecated\n+    public static Ok load(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {\n+        return new Ok(contractAddress, web3j, transactionManager, gasPrice, gasLimit);\n+    }\n+\n+    public static Ok load(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {\n+        return new Ok(contractAddress, web3j, credentials, contractGasProvider);\n+    }\n+\n+    public static Ok load(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {\n+        return new Ok(contractAddress, web3j, transactionManager, contractGasProvider);\n+    }\n+\n+    public static RemoteCall<Ok> deploy(Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {\n+        return deployRemoteCall(Ok.class, web3j, credentials, contractGasProvider, getBinary(), \"\");\n+    }\n+\n+    public static RemoteCall<Ok> deploy(Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {\n+        return deployRemoteCall(Ok.class, web3j, transactionManager, contractGasProvider, getBinary(), \"\");\n+    }\n+\n+    @Deprecated\n+    public static RemoteCall<Ok> deploy(Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {\n+        return deployRemoteCall(Ok.class, web3j, credentials, gasPrice, gasLimit, getBinary(), \"\");\n+    }\n+\n+    @Deprecated\n+    public static RemoteCall<Ok> deploy(Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {\n+        return deployRemoteCall(Ok.class, web3j, transactionManager, gasPrice, gasLimit, getBinary(), \"\");\n+    }\n+\n+    public static class TransEventEventResponse {\n+        public Log log;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ab99cd3bbd8904e5316c8c58e13e385b0aba8d32"}, "originalPosition": 369}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNDU5MzA3OnYy", "diffSide": "RIGHT", "path": "src/integration-test/java/org/fisco/bcos/contract/Ok.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxMTo1NDo0NVrOGhFuQg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxMTo1NDo0NVrOGhFuQg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzM0OTk1NA==", "bodyText": "[PMD Java] Found non-transient, non-static member. Please mark as transient or provide accessors. (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nBeanMembersShouldSerialize\nError Prone\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.23.0/pmd_rules_java_errorprone.html#beanmembersshouldserialize\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/600#discussion_r437349954", "createdAt": "2020-06-09T11:54:45Z", "author": {"login": "sider"}, "path": "src/integration-test/java/org/fisco/bcos/contract/Ok.java", "diffHunk": "@@ -1,217 +1,188 @@\n package org.fisco.bcos.contract;\n \n-import io.reactivex.Flowable;\n import java.math.BigInteger;\n import java.util.ArrayList;\n import java.util.Arrays;\n import java.util.Collections;\n import java.util.List;\n import org.fisco.bcos.channel.client.TransactionSucCallback;\n+import org.fisco.bcos.channel.event.filter.EventLogPushWithDecodeCallback;\n import org.fisco.bcos.web3j.abi.EventEncoder;\n+import org.fisco.bcos.web3j.abi.FunctionReturnDecoder;\n import org.fisco.bcos.web3j.abi.TypeReference;\n import org.fisco.bcos.web3j.abi.datatypes.Event;\n import org.fisco.bcos.web3j.abi.datatypes.Function;\n import org.fisco.bcos.web3j.abi.datatypes.Type;\n import org.fisco.bcos.web3j.abi.datatypes.generated.Uint256;\n import org.fisco.bcos.web3j.crypto.Credentials;\n+import org.fisco.bcos.web3j.crypto.EncryptType;\n import org.fisco.bcos.web3j.protocol.Web3j;\n-import org.fisco.bcos.web3j.protocol.core.DefaultBlockParameter;\n import org.fisco.bcos.web3j.protocol.core.RemoteCall;\n-import org.fisco.bcos.web3j.protocol.core.methods.request.BcosFilter;\n import org.fisco.bcos.web3j.protocol.core.methods.response.Log;\n import org.fisco.bcos.web3j.protocol.core.methods.response.TransactionReceipt;\n+import org.fisco.bcos.web3j.tuples.generated.Tuple1;\n import org.fisco.bcos.web3j.tx.Contract;\n import org.fisco.bcos.web3j.tx.TransactionManager;\n import org.fisco.bcos.web3j.tx.gas.ContractGasProvider;\n+import org.fisco.bcos.web3j.tx.txdecode.TransactionDecoder;\n \n /**\n- * Auto generated code.\n- *\n+ * <p>Auto generated code.\n  * <p><strong>Do not modify!</strong>\n- *\n  * <p>Please use the <a href=\"https://docs.web3j.io/command_line.html\">web3j command line tools</a>,\n- * or the org.fisco.bcos.web3j.codegen.SolidityFunctionWrapperGenerator in the <a\n- * href=\"https://github.com/web3j/web3j/tree/master/codegen\">codegen module</a> to update.\n+ * or the org.fisco.bcos.web3j.codegen.SolidityFunctionWrapperGenerator in the \n+ * <a href=\"https://github.com/web3j/web3j/tree/master/codegen\">codegen module</a> to update.\n  *\n  * <p>Generated with web3j version none.\n  */\n+@SuppressWarnings(\"unchecked\")\n public class Ok extends Contract {\n-  private static final String BINARY =\n-      \"608060405234801561001057600080fd5b5060016000800160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506402540be40060006001018190555060028060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060006002600101819055506103bf806100c26000396000f30060806040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806366c99139146100515780636d4ce63c1461007e575b600080fd5b34801561005d57600080fd5b5061007c600480360381019080803590602001909291905050506100a9565b005b34801561008a57600080fd5b506100936102e1565b6040518082815260200191505060405180910390f35b8060006001015410806100c757506002600101548160026001015401105b156100d1576102de565b8060006001015403600060010181905550806002600101600082825401925050819055507fc77b710b83d1dc3f3fafeccd08a6c469beb873b2f0975b50d1698e46b3ee5b4c816040518082815260200191505060405180910390a160046080604051908101604052806040805190810160405280600881526020017f323031373034313300000000000000000000000000000000000000000000000081525081526020016000800160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600260000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152509080600181540180825580915050906001820390600052602060002090600402016000909192909190915060008201518160000190805190602001906102419291906102ee565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600301555050505b50565b6000600260010154905090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061032f57805160ff191683800117855561035d565b8280016001018555821561035d579182015b8281111561035c578251825591602001919060010190610341565b5b50905061036a919061036e565b5090565b61039091905b8082111561038c576000816000905550600101610374565b5090565b905600a165627a7a72305820fb983c66bee66788f407721b23b10a8aae3dc9ef8f1b09e08ec6a6c0b0ec70100029\";\n-\n-  public static final String FUNC_TRANS = \"trans\";\n-\n-  public static final String FUNC_GET = \"get\";\n-\n-  public static final Event TRANSEVENT_EVENT =\n-      new Event(\"TransEvent\", Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));;\n-\n-  @Deprecated\n-  protected Ok(\n-      String contractAddress,\n-      Web3j web3j,\n-      Credentials credentials,\n-      BigInteger gasPrice,\n-      BigInteger gasLimit) {\n-    super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);\n-  }\n-\n-  protected Ok(\n-      String contractAddress,\n-      Web3j web3j,\n-      Credentials credentials,\n-      ContractGasProvider contractGasProvider) {\n-    super(BINARY, contractAddress, web3j, credentials, contractGasProvider);\n-  }\n-\n-  @Deprecated\n-  protected Ok(\n-      String contractAddress,\n-      Web3j web3j,\n-      TransactionManager transactionManager,\n-      BigInteger gasPrice,\n-      BigInteger gasLimit) {\n-    super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);\n-  }\n-\n-  protected Ok(\n-      String contractAddress,\n-      Web3j web3j,\n-      TransactionManager transactionManager,\n-      ContractGasProvider contractGasProvider) {\n-    super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);\n-  }\n-\n-  public RemoteCall<TransactionReceipt> trans(BigInteger num) {\n-    final Function function =\n-        new Function(\n-            FUNC_TRANS,\n-            Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(num)),\n-            Collections.<TypeReference<?>>emptyList());\n-    return executeRemoteCallTransaction(function);\n-  }\n-\n-  public void trans(BigInteger num, TransactionSucCallback callback) {\n-    final Function function =\n-        new Function(\n-            FUNC_TRANS,\n-            Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(num)),\n-            Collections.<TypeReference<?>>emptyList());\n-    asyncExecuteTransaction(function, callback);\n-  }\n-\n-  public RemoteCall<BigInteger> get() {\n-    final Function function =\n-        new Function(\n-            FUNC_GET,\n-            Arrays.<Type>asList(),\n+    public static String BINARY = \"608060405234801561001057600080fd5b5060016000800160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506402540be40060006001018190555060028060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060006002600101819055506103bf806100c26000396000f30060806040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806366c99139146100515780636d4ce63c1461007e575b600080fd5b34801561005d57600080fd5b5061007c600480360381019080803590602001909291905050506100a9565b005b34801561008a57600080fd5b506100936102e1565b6040518082815260200191505060405180910390f35b8060006001015410806100c757506002600101548160026001015401105b156100d1576102de565b8060006001015403600060010181905550806002600101600082825401925050819055507fc77b710b83d1dc3f3fafeccd08a6c469beb873b2f0975b50d1698e46b3ee5b4c816040518082815260200191505060405180910390a160046080604051908101604052806040805190810160405280600881526020017f323031373034313300000000000000000000000000000000000000000000000081525081526020016000800160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600260000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152509080600181540180825580915050906001820390600052602060002090600402016000909192909190915060008201518160000190805190602001906102419291906102ee565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600301555050505b50565b6000600260010154905090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061032f57805160ff191683800117855561035d565b8280016001018555821561035d579182015b8281111561035c578251825591602001919060010190610341565b5b50905061036a919061036e565b5090565b61039091905b8082111561038c576000816000905550600101610374565b5090565b905600a165627a7a723058203c6488d9a80e837aab52f5c5ef1d0b37b671ca2891fd1d92711d3d3ef884b6400029\";\n+\n+    public static final String ABI = \"[{\\\"constant\\\":false,\\\"inputs\\\":[{\\\"name\\\":\\\"num\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"name\\\":\\\"trans\\\",\\\"outputs\\\":[],\\\"payable\\\":false,\\\"stateMutability\\\":\\\"nonpayable\\\",\\\"type\\\":\\\"function\\\"},{\\\"constant\\\":true,\\\"inputs\\\":[],\\\"name\\\":\\\"get\\\",\\\"outputs\\\":[{\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"payable\\\":false,\\\"stateMutability\\\":\\\"view\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[],\\\"payable\\\":false,\\\"stateMutability\\\":\\\"nonpayable\\\",\\\"type\\\":\\\"constructor\\\"},{\\\"anonymous\\\":false,\\\"inputs\\\":[{\\\"indexed\\\":false,\\\"name\\\":\\\"num\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"name\\\":\\\"TransEvent\\\",\\\"type\\\":\\\"event\\\"}]\";\n+\n+    public static final TransactionDecoder transactionDecoder = new TransactionDecoder(ABI, BINARY);\n+\n+    public static String SM_BINARY = \"608060405234801561001057600080fd5b5060016000800160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506402540be40060006001018190555060028060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060006002600101819055506103bf806100c26000396000f30060806040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063299f7f9d146100515780638fff0fc41461007c575b600080fd5b34801561005d57600080fd5b506100666100a9565b6040518082815260200191505060405180910390f35b34801561008857600080fd5b506100a7600480360381019080803590602001909291905050506100b6565b005b6000600260010154905090565b8060006001015410806100d457506002600101548160026001015401105b156100de576102eb565b8060006001015403600060010181905550806002600101600082825401925050819055507fc345610041c3c141ff9e0fbc73b34bf13842fd02e0c3cfe6541eedd6adef4b2c816040518082815260200191505060405180910390a160046080604051908101604052806040805190810160405280600881526020017f323031373034313300000000000000000000000000000000000000000000000081525081526020016000800160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600260000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018381525090806001815401808255809150509060018203906000526020600020906004020160009091929091909150600082015181600001908051906020019061024e9291906102ee565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600301555050505b50565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061032f57805160ff191683800117855561035d565b8280016001018555821561035d579182015b8281111561035c578251825591602001919060010190610341565b5b50905061036a919061036e565b5090565b61039091905b8082111561038c576000816000905550600101610374565b5090565b905600a165627a7a723058205957e1c3edeb7d8d9ba7f64d56205c70972f2b91f880af98000f404fd22af37b0029\";\n+\n+    public static final String FUNC_TRANS = \"trans\";\n+\n+    public static final String FUNC_GET = \"get\";\n+\n+    public static final Event TRANSEVENT_EVENT = new Event(\"TransEvent\", \n             Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));\n-    return executeRemoteCallSingleValueReturn(function, BigInteger.class);\n-  }\n-\n-  public List<TransEventEventResponse> getTransEventEvents(TransactionReceipt transactionReceipt) {\n-    List<Contract.EventValuesWithLog> valueList =\n-        extractEventParametersWithLog(TRANSEVENT_EVENT, transactionReceipt);\n-    ArrayList<TransEventEventResponse> responses =\n-        new ArrayList<TransEventEventResponse>(valueList.size());\n-    for (Contract.EventValuesWithLog eventValues : valueList) {\n-      TransEventEventResponse typedResponse = new TransEventEventResponse();\n-      typedResponse.log = eventValues.getLog();\n-      typedResponse.num = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();\n-      responses.add(typedResponse);\n-    }\n-    return responses;\n-  }\n-\n-  public Flowable<TransEventEventResponse> transEventEventFlowable(BcosFilter filter) {\n-    return web3j\n-        .logFlowable(filter)\n-        .map(\n-            new io.reactivex.functions.Function<Log, TransEventEventResponse>() {\n-              @Override\n-              public TransEventEventResponse apply(Log log) {\n-                Contract.EventValuesWithLog eventValues =\n-                    extractEventParametersWithLog(TRANSEVENT_EVENT, log);\n-                TransEventEventResponse typedResponse = new TransEventEventResponse();\n-                typedResponse.log = log;\n-                typedResponse.num =\n-                    (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();\n-                return typedResponse;\n-              }\n-            });\n-  }\n-\n-  public Flowable<TransEventEventResponse> transEventEventFlowable(\n-      DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {\n-    BcosFilter filter = new BcosFilter(startBlock, endBlock, getContractAddress());\n-    filter.addSingleTopic(EventEncoder.encode(TRANSEVENT_EVENT));\n-    return transEventEventFlowable(filter);\n-  }\n-\n-  @Deprecated\n-  public static Ok load(\n-      String contractAddress,\n-      Web3j web3j,\n-      Credentials credentials,\n-      BigInteger gasPrice,\n-      BigInteger gasLimit) {\n-    return new Ok(contractAddress, web3j, credentials, gasPrice, gasLimit);\n-  }\n-\n-  @Deprecated\n-  public static Ok load(\n-      String contractAddress,\n-      Web3j web3j,\n-      TransactionManager transactionManager,\n-      BigInteger gasPrice,\n-      BigInteger gasLimit) {\n-    return new Ok(contractAddress, web3j, transactionManager, gasPrice, gasLimit);\n-  }\n-\n-  public static Ok load(\n-      String contractAddress,\n-      Web3j web3j,\n-      Credentials credentials,\n-      ContractGasProvider contractGasProvider) {\n-    return new Ok(contractAddress, web3j, credentials, contractGasProvider);\n-  }\n-\n-  public static Ok load(\n-      String contractAddress,\n-      Web3j web3j,\n-      TransactionManager transactionManager,\n-      ContractGasProvider contractGasProvider) {\n-    return new Ok(contractAddress, web3j, transactionManager, contractGasProvider);\n-  }\n-\n-  public static RemoteCall<Ok> deploy(\n-      Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {\n-    return deployRemoteCall(Ok.class, web3j, credentials, contractGasProvider, BINARY, \"\");\n-  }\n-\n-  public static RemoteCall<Ok> deploy(\n-      Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {\n-    return deployRemoteCall(Ok.class, web3j, transactionManager, contractGasProvider, BINARY, \"\");\n-  }\n-\n-  @Deprecated\n-  public static RemoteCall<Ok> deploy(\n-      Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {\n-    return deployRemoteCall(Ok.class, web3j, credentials, gasPrice, gasLimit, BINARY, \"\");\n-  }\n-\n-  @Deprecated\n-  public static RemoteCall<Ok> deploy(\n-      Web3j web3j,\n-      TransactionManager transactionManager,\n-      BigInteger gasPrice,\n-      BigInteger gasLimit) {\n-    return deployRemoteCall(Ok.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, \"\");\n-  }\n-\n-  public static class TransEventEventResponse {\n-    public Log log;\n-\n-    public BigInteger num;\n-  }\n+    ;\n+\n+    @Deprecated\n+    protected Ok(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {\n+        super(getBinary(), contractAddress, web3j, credentials, gasPrice, gasLimit);\n+    }\n+\n+    protected Ok(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {\n+        super(getBinary(), contractAddress, web3j, credentials, contractGasProvider);\n+    }\n+\n+    @Deprecated\n+    protected Ok(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {\n+        super(getBinary(), contractAddress, web3j, transactionManager, gasPrice, gasLimit);\n+    }\n+\n+    protected Ok(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {\n+        super(getBinary(), contractAddress, web3j, transactionManager, contractGasProvider);\n+    }\n+\n+    public static String getBinary() {\n+        return (EncryptType.encryptType == EncryptType.ECDSA_TYPE ? BINARY : SM_BINARY);\n+    }\n+\n+    public static TransactionDecoder getTransactionDecoder() {\n+        return transactionDecoder;\n+    }\n+\n+    public RemoteCall<TransactionReceipt> trans(BigInteger num) {\n+        final Function function = new Function(\n+                FUNC_TRANS, \n+                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(num)), \n+                Collections.<TypeReference<?>>emptyList());\n+        return executeRemoteCallTransaction(function);\n+    }\n+\n+    public void trans(BigInteger num, TransactionSucCallback callback) {\n+        final Function function = new Function(\n+                FUNC_TRANS, \n+                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(num)), \n+                Collections.<TypeReference<?>>emptyList());\n+        asyncExecuteTransaction(function, callback);\n+    }\n+\n+    public String transSeq(BigInteger num) {\n+        final Function function = new Function(\n+                FUNC_TRANS, \n+                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(num)), \n+                Collections.<TypeReference<?>>emptyList());\n+        return createTransactionSeq(function);\n+    }\n+\n+    public Tuple1<BigInteger> getTransInput(TransactionReceipt transactionReceipt) {\n+        String data = transactionReceipt.getInput().substring(10);\n+        final Function function = new Function(FUNC_TRANS, \n+                Arrays.<Type>asList(), \n+                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));\n+        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());;\n+        return new Tuple1<BigInteger>(\n+\n+                (BigInteger) results.get(0).getValue()\n+                );\n+    }\n+\n+    public RemoteCall<BigInteger> get() {\n+        final Function function = new Function(FUNC_GET, \n+                Arrays.<Type>asList(), \n+                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));\n+        return executeRemoteCallSingleValueReturn(function, BigInteger.class);\n+    }\n+\n+    public List<TransEventEventResponse> getTransEventEvents(TransactionReceipt transactionReceipt) {\n+        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(TRANSEVENT_EVENT, transactionReceipt);\n+        ArrayList<TransEventEventResponse> responses = new ArrayList<TransEventEventResponse>(valueList.size());\n+        for (Contract.EventValuesWithLog eventValues : valueList) {\n+            TransEventEventResponse typedResponse = new TransEventEventResponse();\n+            typedResponse.log = eventValues.getLog();\n+            typedResponse.num = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();\n+            responses.add(typedResponse);\n+        }\n+        return responses;\n+    }\n+\n+    public void registerTransEventEventLogFilter(String fromBlock, String toBlock, List<String> otherTopcs, EventLogPushWithDecodeCallback callback) {\n+        String topic0 = EventEncoder.encode(TRANSEVENT_EVENT);\n+        registerEventLogPushFilter(ABI,BINARY,topic0,fromBlock,toBlock,otherTopcs,callback);\n+    }\n+\n+    public void registerTransEventEventLogFilter(EventLogPushWithDecodeCallback callback) {\n+        String topic0 = EventEncoder.encode(TRANSEVENT_EVENT);\n+        registerEventLogPushFilter(ABI,BINARY,topic0,callback);\n+    }\n+\n+    @Deprecated\n+    public static Ok load(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {\n+        return new Ok(contractAddress, web3j, credentials, gasPrice, gasLimit);\n+    }\n+\n+    @Deprecated\n+    public static Ok load(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {\n+        return new Ok(contractAddress, web3j, transactionManager, gasPrice, gasLimit);\n+    }\n+\n+    public static Ok load(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {\n+        return new Ok(contractAddress, web3j, credentials, contractGasProvider);\n+    }\n+\n+    public static Ok load(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {\n+        return new Ok(contractAddress, web3j, transactionManager, contractGasProvider);\n+    }\n+\n+    public static RemoteCall<Ok> deploy(Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {\n+        return deployRemoteCall(Ok.class, web3j, credentials, contractGasProvider, getBinary(), \"\");\n+    }\n+\n+    public static RemoteCall<Ok> deploy(Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {\n+        return deployRemoteCall(Ok.class, web3j, transactionManager, contractGasProvider, getBinary(), \"\");\n+    }\n+\n+    @Deprecated\n+    public static RemoteCall<Ok> deploy(Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {\n+        return deployRemoteCall(Ok.class, web3j, credentials, gasPrice, gasLimit, getBinary(), \"\");\n+    }\n+\n+    @Deprecated\n+    public static RemoteCall<Ok> deploy(Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {\n+        return deployRemoteCall(Ok.class, web3j, transactionManager, gasPrice, gasLimit, getBinary(), \"\");\n+    }\n+\n+    public static class TransEventEventResponse {\n+        public Log log;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ab99cd3bbd8904e5316c8c58e13e385b0aba8d32"}, "originalPosition": 369}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNDU5MzA5OnYy", "diffSide": "RIGHT", "path": "src/integration-test/java/org/fisco/bcos/contract/Ok.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxMTo1NDo0NVrOGhFuRA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxMTo1NDo0NVrOGhFuRA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzM0OTk1Ng==", "bodyText": "[PMD Java] Found non-transient, non-static member. Please mark as transient or provide accessors. (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nBeanMembersShouldSerialize\nError Prone\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.23.0/pmd_rules_java_errorprone.html#beanmembersshouldserialize\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/600#discussion_r437349956", "createdAt": "2020-06-09T11:54:45Z", "author": {"login": "sider"}, "path": "src/integration-test/java/org/fisco/bcos/contract/Ok.java", "diffHunk": "@@ -1,217 +1,188 @@\n package org.fisco.bcos.contract;\n \n-import io.reactivex.Flowable;\n import java.math.BigInteger;\n import java.util.ArrayList;\n import java.util.Arrays;\n import java.util.Collections;\n import java.util.List;\n import org.fisco.bcos.channel.client.TransactionSucCallback;\n+import org.fisco.bcos.channel.event.filter.EventLogPushWithDecodeCallback;\n import org.fisco.bcos.web3j.abi.EventEncoder;\n+import org.fisco.bcos.web3j.abi.FunctionReturnDecoder;\n import org.fisco.bcos.web3j.abi.TypeReference;\n import org.fisco.bcos.web3j.abi.datatypes.Event;\n import org.fisco.bcos.web3j.abi.datatypes.Function;\n import org.fisco.bcos.web3j.abi.datatypes.Type;\n import org.fisco.bcos.web3j.abi.datatypes.generated.Uint256;\n import org.fisco.bcos.web3j.crypto.Credentials;\n+import org.fisco.bcos.web3j.crypto.EncryptType;\n import org.fisco.bcos.web3j.protocol.Web3j;\n-import org.fisco.bcos.web3j.protocol.core.DefaultBlockParameter;\n import org.fisco.bcos.web3j.protocol.core.RemoteCall;\n-import org.fisco.bcos.web3j.protocol.core.methods.request.BcosFilter;\n import org.fisco.bcos.web3j.protocol.core.methods.response.Log;\n import org.fisco.bcos.web3j.protocol.core.methods.response.TransactionReceipt;\n+import org.fisco.bcos.web3j.tuples.generated.Tuple1;\n import org.fisco.bcos.web3j.tx.Contract;\n import org.fisco.bcos.web3j.tx.TransactionManager;\n import org.fisco.bcos.web3j.tx.gas.ContractGasProvider;\n+import org.fisco.bcos.web3j.tx.txdecode.TransactionDecoder;\n \n /**\n- * Auto generated code.\n- *\n+ * <p>Auto generated code.\n  * <p><strong>Do not modify!</strong>\n- *\n  * <p>Please use the <a href=\"https://docs.web3j.io/command_line.html\">web3j command line tools</a>,\n- * or the org.fisco.bcos.web3j.codegen.SolidityFunctionWrapperGenerator in the <a\n- * href=\"https://github.com/web3j/web3j/tree/master/codegen\">codegen module</a> to update.\n+ * or the org.fisco.bcos.web3j.codegen.SolidityFunctionWrapperGenerator in the \n+ * <a href=\"https://github.com/web3j/web3j/tree/master/codegen\">codegen module</a> to update.\n  *\n  * <p>Generated with web3j version none.\n  */\n+@SuppressWarnings(\"unchecked\")\n public class Ok extends Contract {\n-  private static final String BINARY =\n-      \"608060405234801561001057600080fd5b5060016000800160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506402540be40060006001018190555060028060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060006002600101819055506103bf806100c26000396000f30060806040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806366c99139146100515780636d4ce63c1461007e575b600080fd5b34801561005d57600080fd5b5061007c600480360381019080803590602001909291905050506100a9565b005b34801561008a57600080fd5b506100936102e1565b6040518082815260200191505060405180910390f35b8060006001015410806100c757506002600101548160026001015401105b156100d1576102de565b8060006001015403600060010181905550806002600101600082825401925050819055507fc77b710b83d1dc3f3fafeccd08a6c469beb873b2f0975b50d1698e46b3ee5b4c816040518082815260200191505060405180910390a160046080604051908101604052806040805190810160405280600881526020017f323031373034313300000000000000000000000000000000000000000000000081525081526020016000800160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600260000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152509080600181540180825580915050906001820390600052602060002090600402016000909192909190915060008201518160000190805190602001906102419291906102ee565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600301555050505b50565b6000600260010154905090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061032f57805160ff191683800117855561035d565b8280016001018555821561035d579182015b8281111561035c578251825591602001919060010190610341565b5b50905061036a919061036e565b5090565b61039091905b8082111561038c576000816000905550600101610374565b5090565b905600a165627a7a72305820fb983c66bee66788f407721b23b10a8aae3dc9ef8f1b09e08ec6a6c0b0ec70100029\";\n-\n-  public static final String FUNC_TRANS = \"trans\";\n-\n-  public static final String FUNC_GET = \"get\";\n-\n-  public static final Event TRANSEVENT_EVENT =\n-      new Event(\"TransEvent\", Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));;\n-\n-  @Deprecated\n-  protected Ok(\n-      String contractAddress,\n-      Web3j web3j,\n-      Credentials credentials,\n-      BigInteger gasPrice,\n-      BigInteger gasLimit) {\n-    super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);\n-  }\n-\n-  protected Ok(\n-      String contractAddress,\n-      Web3j web3j,\n-      Credentials credentials,\n-      ContractGasProvider contractGasProvider) {\n-    super(BINARY, contractAddress, web3j, credentials, contractGasProvider);\n-  }\n-\n-  @Deprecated\n-  protected Ok(\n-      String contractAddress,\n-      Web3j web3j,\n-      TransactionManager transactionManager,\n-      BigInteger gasPrice,\n-      BigInteger gasLimit) {\n-    super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);\n-  }\n-\n-  protected Ok(\n-      String contractAddress,\n-      Web3j web3j,\n-      TransactionManager transactionManager,\n-      ContractGasProvider contractGasProvider) {\n-    super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);\n-  }\n-\n-  public RemoteCall<TransactionReceipt> trans(BigInteger num) {\n-    final Function function =\n-        new Function(\n-            FUNC_TRANS,\n-            Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(num)),\n-            Collections.<TypeReference<?>>emptyList());\n-    return executeRemoteCallTransaction(function);\n-  }\n-\n-  public void trans(BigInteger num, TransactionSucCallback callback) {\n-    final Function function =\n-        new Function(\n-            FUNC_TRANS,\n-            Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(num)),\n-            Collections.<TypeReference<?>>emptyList());\n-    asyncExecuteTransaction(function, callback);\n-  }\n-\n-  public RemoteCall<BigInteger> get() {\n-    final Function function =\n-        new Function(\n-            FUNC_GET,\n-            Arrays.<Type>asList(),\n+    public static String BINARY = \"608060405234801561001057600080fd5b5060016000800160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506402540be40060006001018190555060028060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060006002600101819055506103bf806100c26000396000f30060806040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806366c99139146100515780636d4ce63c1461007e575b600080fd5b34801561005d57600080fd5b5061007c600480360381019080803590602001909291905050506100a9565b005b34801561008a57600080fd5b506100936102e1565b6040518082815260200191505060405180910390f35b8060006001015410806100c757506002600101548160026001015401105b156100d1576102de565b8060006001015403600060010181905550806002600101600082825401925050819055507fc77b710b83d1dc3f3fafeccd08a6c469beb873b2f0975b50d1698e46b3ee5b4c816040518082815260200191505060405180910390a160046080604051908101604052806040805190810160405280600881526020017f323031373034313300000000000000000000000000000000000000000000000081525081526020016000800160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600260000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152509080600181540180825580915050906001820390600052602060002090600402016000909192909190915060008201518160000190805190602001906102419291906102ee565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600301555050505b50565b6000600260010154905090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061032f57805160ff191683800117855561035d565b8280016001018555821561035d579182015b8281111561035c578251825591602001919060010190610341565b5b50905061036a919061036e565b5090565b61039091905b8082111561038c576000816000905550600101610374565b5090565b905600a165627a7a723058203c6488d9a80e837aab52f5c5ef1d0b37b671ca2891fd1d92711d3d3ef884b6400029\";\n+\n+    public static final String ABI = \"[{\\\"constant\\\":false,\\\"inputs\\\":[{\\\"name\\\":\\\"num\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"name\\\":\\\"trans\\\",\\\"outputs\\\":[],\\\"payable\\\":false,\\\"stateMutability\\\":\\\"nonpayable\\\",\\\"type\\\":\\\"function\\\"},{\\\"constant\\\":true,\\\"inputs\\\":[],\\\"name\\\":\\\"get\\\",\\\"outputs\\\":[{\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"payable\\\":false,\\\"stateMutability\\\":\\\"view\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[],\\\"payable\\\":false,\\\"stateMutability\\\":\\\"nonpayable\\\",\\\"type\\\":\\\"constructor\\\"},{\\\"anonymous\\\":false,\\\"inputs\\\":[{\\\"indexed\\\":false,\\\"name\\\":\\\"num\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"name\\\":\\\"TransEvent\\\",\\\"type\\\":\\\"event\\\"}]\";\n+\n+    public static final TransactionDecoder transactionDecoder = new TransactionDecoder(ABI, BINARY);\n+\n+    public static String SM_BINARY = \"608060405234801561001057600080fd5b5060016000800160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506402540be40060006001018190555060028060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060006002600101819055506103bf806100c26000396000f30060806040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063299f7f9d146100515780638fff0fc41461007c575b600080fd5b34801561005d57600080fd5b506100666100a9565b6040518082815260200191505060405180910390f35b34801561008857600080fd5b506100a7600480360381019080803590602001909291905050506100b6565b005b6000600260010154905090565b8060006001015410806100d457506002600101548160026001015401105b156100de576102eb565b8060006001015403600060010181905550806002600101600082825401925050819055507fc345610041c3c141ff9e0fbc73b34bf13842fd02e0c3cfe6541eedd6adef4b2c816040518082815260200191505060405180910390a160046080604051908101604052806040805190810160405280600881526020017f323031373034313300000000000000000000000000000000000000000000000081525081526020016000800160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600260000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018381525090806001815401808255809150509060018203906000526020600020906004020160009091929091909150600082015181600001908051906020019061024e9291906102ee565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600301555050505b50565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061032f57805160ff191683800117855561035d565b8280016001018555821561035d579182015b8281111561035c578251825591602001919060010190610341565b5b50905061036a919061036e565b5090565b61039091905b8082111561038c576000816000905550600101610374565b5090565b905600a165627a7a723058205957e1c3edeb7d8d9ba7f64d56205c70972f2b91f880af98000f404fd22af37b0029\";\n+\n+    public static final String FUNC_TRANS = \"trans\";\n+\n+    public static final String FUNC_GET = \"get\";\n+\n+    public static final Event TRANSEVENT_EVENT = new Event(\"TransEvent\", \n             Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));\n-    return executeRemoteCallSingleValueReturn(function, BigInteger.class);\n-  }\n-\n-  public List<TransEventEventResponse> getTransEventEvents(TransactionReceipt transactionReceipt) {\n-    List<Contract.EventValuesWithLog> valueList =\n-        extractEventParametersWithLog(TRANSEVENT_EVENT, transactionReceipt);\n-    ArrayList<TransEventEventResponse> responses =\n-        new ArrayList<TransEventEventResponse>(valueList.size());\n-    for (Contract.EventValuesWithLog eventValues : valueList) {\n-      TransEventEventResponse typedResponse = new TransEventEventResponse();\n-      typedResponse.log = eventValues.getLog();\n-      typedResponse.num = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();\n-      responses.add(typedResponse);\n-    }\n-    return responses;\n-  }\n-\n-  public Flowable<TransEventEventResponse> transEventEventFlowable(BcosFilter filter) {\n-    return web3j\n-        .logFlowable(filter)\n-        .map(\n-            new io.reactivex.functions.Function<Log, TransEventEventResponse>() {\n-              @Override\n-              public TransEventEventResponse apply(Log log) {\n-                Contract.EventValuesWithLog eventValues =\n-                    extractEventParametersWithLog(TRANSEVENT_EVENT, log);\n-                TransEventEventResponse typedResponse = new TransEventEventResponse();\n-                typedResponse.log = log;\n-                typedResponse.num =\n-                    (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();\n-                return typedResponse;\n-              }\n-            });\n-  }\n-\n-  public Flowable<TransEventEventResponse> transEventEventFlowable(\n-      DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {\n-    BcosFilter filter = new BcosFilter(startBlock, endBlock, getContractAddress());\n-    filter.addSingleTopic(EventEncoder.encode(TRANSEVENT_EVENT));\n-    return transEventEventFlowable(filter);\n-  }\n-\n-  @Deprecated\n-  public static Ok load(\n-      String contractAddress,\n-      Web3j web3j,\n-      Credentials credentials,\n-      BigInteger gasPrice,\n-      BigInteger gasLimit) {\n-    return new Ok(contractAddress, web3j, credentials, gasPrice, gasLimit);\n-  }\n-\n-  @Deprecated\n-  public static Ok load(\n-      String contractAddress,\n-      Web3j web3j,\n-      TransactionManager transactionManager,\n-      BigInteger gasPrice,\n-      BigInteger gasLimit) {\n-    return new Ok(contractAddress, web3j, transactionManager, gasPrice, gasLimit);\n-  }\n-\n-  public static Ok load(\n-      String contractAddress,\n-      Web3j web3j,\n-      Credentials credentials,\n-      ContractGasProvider contractGasProvider) {\n-    return new Ok(contractAddress, web3j, credentials, contractGasProvider);\n-  }\n-\n-  public static Ok load(\n-      String contractAddress,\n-      Web3j web3j,\n-      TransactionManager transactionManager,\n-      ContractGasProvider contractGasProvider) {\n-    return new Ok(contractAddress, web3j, transactionManager, contractGasProvider);\n-  }\n-\n-  public static RemoteCall<Ok> deploy(\n-      Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {\n-    return deployRemoteCall(Ok.class, web3j, credentials, contractGasProvider, BINARY, \"\");\n-  }\n-\n-  public static RemoteCall<Ok> deploy(\n-      Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {\n-    return deployRemoteCall(Ok.class, web3j, transactionManager, contractGasProvider, BINARY, \"\");\n-  }\n-\n-  @Deprecated\n-  public static RemoteCall<Ok> deploy(\n-      Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {\n-    return deployRemoteCall(Ok.class, web3j, credentials, gasPrice, gasLimit, BINARY, \"\");\n-  }\n-\n-  @Deprecated\n-  public static RemoteCall<Ok> deploy(\n-      Web3j web3j,\n-      TransactionManager transactionManager,\n-      BigInteger gasPrice,\n-      BigInteger gasLimit) {\n-    return deployRemoteCall(Ok.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, \"\");\n-  }\n-\n-  public static class TransEventEventResponse {\n-    public Log log;\n-\n-    public BigInteger num;\n-  }\n+    ;\n+\n+    @Deprecated\n+    protected Ok(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {\n+        super(getBinary(), contractAddress, web3j, credentials, gasPrice, gasLimit);\n+    }\n+\n+    protected Ok(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {\n+        super(getBinary(), contractAddress, web3j, credentials, contractGasProvider);\n+    }\n+\n+    @Deprecated\n+    protected Ok(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {\n+        super(getBinary(), contractAddress, web3j, transactionManager, gasPrice, gasLimit);\n+    }\n+\n+    protected Ok(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {\n+        super(getBinary(), contractAddress, web3j, transactionManager, contractGasProvider);\n+    }\n+\n+    public static String getBinary() {\n+        return (EncryptType.encryptType == EncryptType.ECDSA_TYPE ? BINARY : SM_BINARY);\n+    }\n+\n+    public static TransactionDecoder getTransactionDecoder() {\n+        return transactionDecoder;\n+    }\n+\n+    public RemoteCall<TransactionReceipt> trans(BigInteger num) {\n+        final Function function = new Function(\n+                FUNC_TRANS, \n+                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(num)), \n+                Collections.<TypeReference<?>>emptyList());\n+        return executeRemoteCallTransaction(function);\n+    }\n+\n+    public void trans(BigInteger num, TransactionSucCallback callback) {\n+        final Function function = new Function(\n+                FUNC_TRANS, \n+                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(num)), \n+                Collections.<TypeReference<?>>emptyList());\n+        asyncExecuteTransaction(function, callback);\n+    }\n+\n+    public String transSeq(BigInteger num) {\n+        final Function function = new Function(\n+                FUNC_TRANS, \n+                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(num)), \n+                Collections.<TypeReference<?>>emptyList());\n+        return createTransactionSeq(function);\n+    }\n+\n+    public Tuple1<BigInteger> getTransInput(TransactionReceipt transactionReceipt) {\n+        String data = transactionReceipt.getInput().substring(10);\n+        final Function function = new Function(FUNC_TRANS, \n+                Arrays.<Type>asList(), \n+                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));\n+        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());;\n+        return new Tuple1<BigInteger>(\n+\n+                (BigInteger) results.get(0).getValue()\n+                );\n+    }\n+\n+    public RemoteCall<BigInteger> get() {\n+        final Function function = new Function(FUNC_GET, \n+                Arrays.<Type>asList(), \n+                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));\n+        return executeRemoteCallSingleValueReturn(function, BigInteger.class);\n+    }\n+\n+    public List<TransEventEventResponse> getTransEventEvents(TransactionReceipt transactionReceipt) {\n+        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(TRANSEVENT_EVENT, transactionReceipt);\n+        ArrayList<TransEventEventResponse> responses = new ArrayList<TransEventEventResponse>(valueList.size());\n+        for (Contract.EventValuesWithLog eventValues : valueList) {\n+            TransEventEventResponse typedResponse = new TransEventEventResponse();\n+            typedResponse.log = eventValues.getLog();\n+            typedResponse.num = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();\n+            responses.add(typedResponse);\n+        }\n+        return responses;\n+    }\n+\n+    public void registerTransEventEventLogFilter(String fromBlock, String toBlock, List<String> otherTopcs, EventLogPushWithDecodeCallback callback) {\n+        String topic0 = EventEncoder.encode(TRANSEVENT_EVENT);\n+        registerEventLogPushFilter(ABI,BINARY,topic0,fromBlock,toBlock,otherTopcs,callback);\n+    }\n+\n+    public void registerTransEventEventLogFilter(EventLogPushWithDecodeCallback callback) {\n+        String topic0 = EventEncoder.encode(TRANSEVENT_EVENT);\n+        registerEventLogPushFilter(ABI,BINARY,topic0,callback);\n+    }\n+\n+    @Deprecated\n+    public static Ok load(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {\n+        return new Ok(contractAddress, web3j, credentials, gasPrice, gasLimit);\n+    }\n+\n+    @Deprecated\n+    public static Ok load(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {\n+        return new Ok(contractAddress, web3j, transactionManager, gasPrice, gasLimit);\n+    }\n+\n+    public static Ok load(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {\n+        return new Ok(contractAddress, web3j, credentials, contractGasProvider);\n+    }\n+\n+    public static Ok load(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {\n+        return new Ok(contractAddress, web3j, transactionManager, contractGasProvider);\n+    }\n+\n+    public static RemoteCall<Ok> deploy(Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {\n+        return deployRemoteCall(Ok.class, web3j, credentials, contractGasProvider, getBinary(), \"\");\n+    }\n+\n+    public static RemoteCall<Ok> deploy(Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {\n+        return deployRemoteCall(Ok.class, web3j, transactionManager, contractGasProvider, getBinary(), \"\");\n+    }\n+\n+    @Deprecated\n+    public static RemoteCall<Ok> deploy(Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {\n+        return deployRemoteCall(Ok.class, web3j, credentials, gasPrice, gasLimit, getBinary(), \"\");\n+    }\n+\n+    @Deprecated\n+    public static RemoteCall<Ok> deploy(Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {\n+        return deployRemoteCall(Ok.class, web3j, transactionManager, gasPrice, gasLimit, getBinary(), \"\");\n+    }\n+\n+    public static class TransEventEventResponse {\n+        public Log log;\n+\n+        public BigInteger num;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ab99cd3bbd8904e5316c8c58e13e385b0aba8d32"}, "originalPosition": 371}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNDU5MzExOnYy", "diffSide": "RIGHT", "path": "src/integration-test/java/org/fisco/bcos/precompile/CRUDServiceTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxMTo1NDo0NVrOGhFuRg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxMTo1NDo0NVrOGhFuRg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzM0OTk1OA==", "bodyText": "[PMD Java] Found non-transient, non-static member. Please mark as transient or provide accessors. (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nBeanMembersShouldSerialize\nError Prone\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.23.0/pmd_rules_java_errorprone.html#beanmembersshouldserialize\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/600#discussion_r437349958", "createdAt": "2020-06-09T11:54:45Z", "author": {"login": "sider"}, "path": "src/integration-test/java/org/fisco/bcos/precompile/CRUDServiceTest.java", "diffHunk": "@@ -16,7 +16,7 @@\n public class CRUDServiceTest extends TestBase {\n \n \n-\tprivate CRUDService crudSerivce = new CRUDService(web3j, credentials);\n+\tprivate CRUDService crudService = new CRUDService(web3j, credentials);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ab99cd3bbd8904e5316c8c58e13e385b0aba8d32"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNDU5MzEyOnYy", "diffSide": "RIGHT", "path": "src/integration-test/java/org/fisco/bcos/precompile/CRUDServiceTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxMTo1NDo0NlrOGhFuSA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxMTo1NDo0NlrOGhFuSA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzM0OTk2MA==", "bodyText": "[PMD Java] Private field 'crudService' could be made final; it is only initialized in the declaration or constructor. (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nImmutableField\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.23.0/pmd_rules_java_design.html#immutablefield\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/600#discussion_r437349960", "createdAt": "2020-06-09T11:54:46Z", "author": {"login": "sider"}, "path": "src/integration-test/java/org/fisco/bcos/precompile/CRUDServiceTest.java", "diffHunk": "@@ -16,7 +16,7 @@\n public class CRUDServiceTest extends TestBase {\n \n \n-\tprivate CRUDService crudSerivce = new CRUDService(web3j, credentials);\n+\tprivate CRUDService crudService = new CRUDService(web3j, credentials);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ab99cd3bbd8904e5316c8c58e13e385b0aba8d32"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNDU5MzE0OnYy", "diffSide": "RIGHT", "path": "src/integration-test/java/org/fisco/bcos/precompile/CnsServiceTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxMTo1NDo0NlrOGhFuSw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxMTo1NDo0NlrOGhFuSw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzM0OTk2Mw==", "bodyText": "[PMD Java] Found non-transient, non-static member. Please mark as transient or provide accessors. (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nBeanMembersShouldSerialize\nError Prone\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.23.0/pmd_rules_java_errorprone.html#beanmembersshouldserialize\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/600#discussion_r437349963", "createdAt": "2020-06-09T11:54:46Z", "author": {"login": "sider"}, "path": "src/integration-test/java/org/fisco/bcos/precompile/CnsServiceTest.java", "diffHunk": "@@ -6,15 +6,15 @@\n import java.security.SecureRandom;\n \n import org.fisco.bcos.TestBase;\n-import org.fisco.bcos.channel.test.contract.Ok;\n+import org.fisco.bcos.contract.Ok;\n import org.fisco.bcos.web3j.crypto.Credentials;\n+import org.fisco.bcos.web3j.crypto.gm.GenCredential;\n import org.fisco.bcos.web3j.precompile.cns.CnsService;\n import org.junit.Test;\n \n public class CnsServiceTest extends TestBase {\n \n-  public Credentials credentials =\n-      Credentials.create(\"b83261efa42895c38c6c2364ca878f43e77f3cddbc922bf57d0d48070f79feb6\");\n+  public Credentials credentials = GenCredential.create();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ab99cd3bbd8904e5316c8c58e13e385b0aba8d32"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNDU5MzE3OnYy", "diffSide": "RIGHT", "path": "src/integration-test/java/org/fisco/bcos/precompile/SystemConfigServiceTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxMTo1NDo0NlrOGhFuUA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxMTo1NDo0NlrOGhFuUA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzM0OTk2OA==", "bodyText": "[PMD Java] Found non-transient, non-static member. Please mark as transient or provide accessors. (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nBeanMembersShouldSerialize\nError Prone\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.23.0/pmd_rules_java_errorprone.html#beanmembersshouldserialize\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/600#discussion_r437349968", "createdAt": "2020-06-09T11:54:46Z", "author": {"login": "sider"}, "path": "src/integration-test/java/org/fisco/bcos/precompile/SystemConfigServiceTest.java", "diffHunk": "@@ -10,18 +10,18 @@\n public class SystemConfigServiceTest extends TestBase {\n \n \n-  private SystemConfigService systemConfigSerivce = new SystemConfigService(web3j, credentials);\n+  private SystemConfigService systemConfigService = new SystemConfigService(web3j, credentials);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ab99cd3bbd8904e5316c8c58e13e385b0aba8d32"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNDU5MzI0OnYy", "diffSide": "RIGHT", "path": "src/integration-test/java/org/fisco/bcos/precompile/SystemConfigServiceTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxMTo1NDo0NlrOGhFuWA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxMTo1NDo0NlrOGhFuWA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzM0OTk3Ng==", "bodyText": "[PMD Java] Private field 'systemConfigService' could be made final; it is only initialized in the declaration or constructor. (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nImmutableField\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.23.0/pmd_rules_java_design.html#immutablefield\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/600#discussion_r437349976", "createdAt": "2020-06-09T11:54:46Z", "author": {"login": "sider"}, "path": "src/integration-test/java/org/fisco/bcos/precompile/SystemConfigServiceTest.java", "diffHunk": "@@ -10,18 +10,18 @@\n public class SystemConfigServiceTest extends TestBase {\n \n \n-  private SystemConfigService systemConfigSerivce = new SystemConfigService(web3j, credentials);\n+  private SystemConfigService systemConfigService = new SystemConfigService(web3j, credentials);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ab99cd3bbd8904e5316c8c58e13e385b0aba8d32"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNDU5MzI2OnYy", "diffSide": "RIGHT", "path": "src/integration-test/java/org/fisco/bcos/precompile/SystemConfigServiceTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxMTo1NDo0NlrOGhFuWw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxMTo1NDo0NlrOGhFuWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzM0OTk3OQ==", "bodyText": "[PMD Java] Potential violation of Law of Demeter (static property access) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.23.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/600#discussion_r437349979", "createdAt": "2020-06-09T11:54:46Z", "author": {"login": "sider"}, "path": "src/integration-test/java/org/fisco/bcos/precompile/SystemConfigServiceTest.java", "diffHunk": "@@ -10,18 +10,18 @@\n public class SystemConfigServiceTest extends TestBase {\n \n \n-  private SystemConfigService systemConfigSerivce = new SystemConfigService(web3j, credentials);\n+  private SystemConfigService systemConfigService = new SystemConfigService(web3j, credentials);\n \n   @Test\n   public void setValueByKey() throws Exception {\n \n   \tString txCountLimit1 = \"5000\";\n-\tsystemConfigSerivce.setValueByKey(EnumKey.tx_count_limit.toString(), txCountLimit1);\n+\tsystemConfigService.setValueByKey(EnumKey.tx_count_limit.toString(), txCountLimit1);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ab99cd3bbd8904e5316c8c58e13e385b0aba8d32"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNDU5MzI4OnYy", "diffSide": "RIGHT", "path": "src/integration-test/java/org/fisco/bcos/precompile/SystemConfigServiceTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxMTo1NDo0N1rOGhFuXQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxMTo1NDo0N1rOGhFuXQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzM0OTk4MQ==", "bodyText": "[PMD Java] Potential violation of Law of Demeter (static property access) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.23.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/600#discussion_r437349981", "createdAt": "2020-06-09T11:54:47Z", "author": {"login": "sider"}, "path": "src/integration-test/java/org/fisco/bcos/precompile/SystemConfigServiceTest.java", "diffHunk": "@@ -10,18 +10,18 @@\n public class SystemConfigServiceTest extends TestBase {\n \n \n-  private SystemConfigService systemConfigSerivce = new SystemConfigService(web3j, credentials);\n+  private SystemConfigService systemConfigService = new SystemConfigService(web3j, credentials);\n \n   @Test\n   public void setValueByKey() throws Exception {\n \n   \tString txCountLimit1 = \"5000\";\n-\tsystemConfigSerivce.setValueByKey(EnumKey.tx_count_limit.toString(), txCountLimit1);\n+\tsystemConfigService.setValueByKey(EnumKey.tx_count_limit.toString(), txCountLimit1);\n   \tString txCountLimit2 = web3j.getSystemConfigByKey(EnumKey.tx_count_limit.toString()).send().getSystemConfigByKey();\n   \tassertEquals(txCountLimit1, txCountLimit2);\n   \t\n   \tString txGasLimit1 = \"50000000\";\n-  \tsystemConfigSerivce.setValueByKey(EnumKey.tx_gas_limit.toString(), txGasLimit1);\n+  \tsystemConfigService.setValueByKey(EnumKey.tx_gas_limit.toString(), txGasLimit1);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ab99cd3bbd8904e5316c8c58e13e385b0aba8d32"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNDU5MzMwOnYy", "diffSide": "RIGHT", "path": "src/integration-test/java/org/fisco/bcos/web3j/Web3jApITest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxMTo1NDo0N1rOGhFuXw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxMTo1NDo0N1rOGhFuXw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzM0OTk4Mw==", "bodyText": "[PMD Java] Potential violation of Law of Demeter (method chain calls) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.23.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/600#discussion_r437349983", "createdAt": "2020-06-09T11:54:47Z", "author": {"login": "sider"}, "path": "src/integration-test/java/org/fisco/bcos/web3j/Web3jApITest.java", "diffHunk": "@@ -34,12 +34,12 @@\n \n   @Test\n   public void getNodeVersion() throws IOException {\n-    NodeVersion nodeVersion = web3j.getNodeVersion().send();\n-    assertNotNull(nodeVersion.getNodeVersion().getBuildTime());\n-    assertNotNull(nodeVersion.getNodeVersion().getBuildType());\n-    assertNotNull(nodeVersion.getNodeVersion().getGitBranch());\n-    assertNotNull(nodeVersion.getNodeVersion().getGitCommit());\n-    assertNotNull(nodeVersion.getNodeVersion().getVersion());\n+      NodeVersion nodeVersion = web3j.getNodeVersion().send();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ab99cd3bbd8904e5316c8c58e13e385b0aba8d32"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNDU5MzMyOnYy", "diffSide": "RIGHT", "path": "src/integration-test/java/org/fisco/bcos/web3j/Web3jApITest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxMTo1NDo0N1rOGhFuYg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxMTo1NDo0N1rOGhFuYg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzM0OTk4Ng==", "bodyText": "[PMD Java] JUnit assertions should include a message (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nJUnitAssertionsShouldIncludeMessage\nBest Practices\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.23.0/pmd_rules_java_bestpractices.html#junitassertionsshouldincludemessage\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/600#discussion_r437349986", "createdAt": "2020-06-09T11:54:47Z", "author": {"login": "sider"}, "path": "src/integration-test/java/org/fisco/bcos/web3j/Web3jApITest.java", "diffHunk": "@@ -34,12 +34,12 @@\n \n   @Test\n   public void getNodeVersion() throws IOException {\n-    NodeVersion nodeVersion = web3j.getNodeVersion().send();\n-    assertNotNull(nodeVersion.getNodeVersion().getBuildTime());\n-    assertNotNull(nodeVersion.getNodeVersion().getBuildType());\n-    assertNotNull(nodeVersion.getNodeVersion().getGitBranch());\n-    assertNotNull(nodeVersion.getNodeVersion().getGitCommit());\n-    assertNotNull(nodeVersion.getNodeVersion().getVersion());\n+      NodeVersion nodeVersion = web3j.getNodeVersion().send();\n+      assertNotNull(nodeVersion.getNodeVersion().getBuildTime());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ab99cd3bbd8904e5316c8c58e13e385b0aba8d32"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNDU5MzM1OnYy", "diffSide": "RIGHT", "path": "src/integration-test/java/org/fisco/bcos/web3j/Web3jApITest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxMTo1NDo0N1rOGhFuZg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxMTo1NDo0N1rOGhFuZg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzM0OTk5MA==", "bodyText": "[PMD Java] Potential violation of Law of Demeter (method chain calls) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.23.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/600#discussion_r437349990", "createdAt": "2020-06-09T11:54:47Z", "author": {"login": "sider"}, "path": "src/integration-test/java/org/fisco/bcos/web3j/Web3jApITest.java", "diffHunk": "@@ -34,12 +34,12 @@\n \n   @Test\n   public void getNodeVersion() throws IOException {\n-    NodeVersion nodeVersion = web3j.getNodeVersion().send();\n-    assertNotNull(nodeVersion.getNodeVersion().getBuildTime());\n-    assertNotNull(nodeVersion.getNodeVersion().getBuildType());\n-    assertNotNull(nodeVersion.getNodeVersion().getGitBranch());\n-    assertNotNull(nodeVersion.getNodeVersion().getGitCommit());\n-    assertNotNull(nodeVersion.getNodeVersion().getVersion());\n+      NodeVersion nodeVersion = web3j.getNodeVersion().send();\n+      assertNotNull(nodeVersion.getNodeVersion().getBuildTime());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ab99cd3bbd8904e5316c8c58e13e385b0aba8d32"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNDU5MzM3OnYy", "diffSide": "RIGHT", "path": "src/integration-test/java/org/fisco/bcos/web3j/Web3jApITest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxMTo1NDo0N1rOGhFuaQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxMTo1NDo0N1rOGhFuaQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzM0OTk5Mw==", "bodyText": "[PMD Java] Potential violation of Law of Demeter (object not created locally) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.23.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/600#discussion_r437349993", "createdAt": "2020-06-09T11:54:47Z", "author": {"login": "sider"}, "path": "src/integration-test/java/org/fisco/bcos/web3j/Web3jApITest.java", "diffHunk": "@@ -34,12 +34,12 @@\n \n   @Test\n   public void getNodeVersion() throws IOException {\n-    NodeVersion nodeVersion = web3j.getNodeVersion().send();\n-    assertNotNull(nodeVersion.getNodeVersion().getBuildTime());\n-    assertNotNull(nodeVersion.getNodeVersion().getBuildType());\n-    assertNotNull(nodeVersion.getNodeVersion().getGitBranch());\n-    assertNotNull(nodeVersion.getNodeVersion().getGitCommit());\n-    assertNotNull(nodeVersion.getNodeVersion().getVersion());\n+      NodeVersion nodeVersion = web3j.getNodeVersion().send();\n+      assertNotNull(nodeVersion.getNodeVersion().getBuildTime());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ab99cd3bbd8904e5316c8c58e13e385b0aba8d32"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNDU5MzM5OnYy", "diffSide": "RIGHT", "path": "src/integration-test/java/org/fisco/bcos/web3j/Web3jApITest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxMTo1NDo0N1rOGhFubA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxMTo1NDo0N1rOGhFubA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzM0OTk5Ng==", "bodyText": "[PMD Java] JUnit assertions should include a message (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nJUnitAssertionsShouldIncludeMessage\nBest Practices\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.23.0/pmd_rules_java_bestpractices.html#junitassertionsshouldincludemessage\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/600#discussion_r437349996", "createdAt": "2020-06-09T11:54:47Z", "author": {"login": "sider"}, "path": "src/integration-test/java/org/fisco/bcos/web3j/Web3jApITest.java", "diffHunk": "@@ -34,12 +34,12 @@\n \n   @Test\n   public void getNodeVersion() throws IOException {\n-    NodeVersion nodeVersion = web3j.getNodeVersion().send();\n-    assertNotNull(nodeVersion.getNodeVersion().getBuildTime());\n-    assertNotNull(nodeVersion.getNodeVersion().getBuildType());\n-    assertNotNull(nodeVersion.getNodeVersion().getGitBranch());\n-    assertNotNull(nodeVersion.getNodeVersion().getGitCommit());\n-    assertNotNull(nodeVersion.getNodeVersion().getVersion());\n+      NodeVersion nodeVersion = web3j.getNodeVersion().send();\n+      assertNotNull(nodeVersion.getNodeVersion().getBuildTime());\n+      assertNotNull(nodeVersion.getNodeVersion().getBuildType());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ab99cd3bbd8904e5316c8c58e13e385b0aba8d32"}, "originalPosition": 12}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 700, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}