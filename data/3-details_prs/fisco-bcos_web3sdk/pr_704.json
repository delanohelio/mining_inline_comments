{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDczNjg1MjQ4", "number": 704, "title": "add getBlockLimit and Deprecated getBlockNumberCache", "bodyText": "", "createdAt": "2020-08-26T06:36:07Z", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/704", "merged": true, "mergeCommit": {"oid": "380aefa0aca8dbf7d192b798f4d4e90defce8907"}, "closed": true, "closedAt": "2020-08-27T02:34:06Z", "author": {"login": "ywy2090"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdCl6h1AH2gAyNDczNjg1MjQ4OjdmMjBjODg5ZWZlNGRkNzc3YmMzMGQ2NzMxZmY2YWIzZmE2OGZjNjQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdC2tjlgH2gAyNDczNjg1MjQ4OmZjMzM0Zjk5MDRhZmY4Mzk0ZjVkNWZmYThjYWIxM2I3NDY3N2NhOGQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "7f20c889efe4dd777bc30d6731ff6ab3fa68fc64", "author": {"user": {"login": "ywy2090", "name": null}}, "url": "https://github.com/FISCO-BCOS/web3sdk/commit/7f20c889efe4dd777bc30d6731ff6ab3fa68fc64", "committedDate": "2020-08-26T06:35:30Z", "message": "add getBlockLimit and Deprecated getBlockNumberCache"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc1MTkwMTk0", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/704#pullrequestreview-475190194", "createdAt": "2020-08-26T06:36:48Z", "commit": {"oid": "7f20c889efe4dd777bc30d6731ff6ab3fa68fc64"}, "state": "COMMENTED", "comments": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQwNjozNjo0OFrOHG905g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQwNjozNjo1MFrOHG90-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzA2NjQ3MA==", "bodyText": "[PMD Java] Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nAvoidCatchingGenericException\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_design.html#avoidcatchinggenericexception\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/704#discussion_r477066470", "createdAt": "2020-08-26T06:36:48Z", "author": {"login": "sider"}, "path": "src/main/java/org/fisco/bcos/web3j/protocol/core/JsonRpc2_0Web3j.java", "diffHunk": "@@ -132,6 +132,19 @@ public BigInteger getBlockNumberCache() {\n         return getLocalBlockNumber().add(new BigInteger(BlockLimit.blockLimit.toString()));\n     }\n \n+    @Override\n+    public BigInteger getBlockLimit() {\n+        if (getLocalBlockNumber().intValue() == 1) {\n+            try {\n+                BlockNumber blockNumber = getBlockNumber().sendAsync().get();\n+                setBlockNumber(blockNumber.getBlockNumber());\n+            } catch (Exception e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7f20c889efe4dd777bc30d6731ff6ab3fa68fc64"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzA2NjQ3Mg==", "bodyText": "[PMD Java] Avoid using Literals in Conditional Statements (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nAvoidLiteralsInIfCondition\nError Prone\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_errorprone.html#avoidliteralsinifcondition\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/704#discussion_r477066472", "createdAt": "2020-08-26T06:36:48Z", "author": {"login": "sider"}, "path": "src/main/java/org/fisco/bcos/web3j/protocol/core/JsonRpc2_0Web3j.java", "diffHunk": "@@ -132,6 +132,19 @@ public BigInteger getBlockNumberCache() {\n         return getLocalBlockNumber().add(new BigInteger(BlockLimit.blockLimit.toString()));\n     }\n \n+    @Override\n+    public BigInteger getBlockLimit() {\n+        if (getLocalBlockNumber().intValue() == 1) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7f20c889efe4dd777bc30d6731ff6ab3fa68fc64"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzA2NjQ3NA==", "bodyText": "[PMD Java] Dont create instances of already existing BigInteger and BigDecimal (ZERO, ONE, TEN) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nBigIntegerInstantiation\nPerformance\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_performance.html#bigintegerinstantiation\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/704#discussion_r477066474", "createdAt": "2020-08-26T06:36:49Z", "author": {"login": "sider"}, "path": "src/test/java/org/fisco/bcos/web3j/tx/ManagedTransactionTester.java", "diffHunk": "@@ -58,7 +58,7 @@ void prepareBlockNumberRequest() throws IOException {\n         Request<?, BlockNumber> ethBlockNumberRequest = mock(Request.class);\n         when(ethBlockNumberRequest.send()).thenReturn(ethBlockNumber);\n         when(web3j.getBlockNumber()).thenReturn((Request) ethBlockNumberRequest);\n-        when(web3j.getBlockNumberCache()).thenReturn(new BigInteger(\"1\"));\n+        when(web3j.getBlockLimit()).thenReturn(new BigInteger(\"1\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7f20c889efe4dd777bc30d6731ff6ab3fa68fc64"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzA2NjQ3OA==", "bodyText": "[PMD Java] Logger calls should be surrounded by log level guards. (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nGuardLogStatement\nBest Practices\n2\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_bestpractices.html#guardlogstatement\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/704#discussion_r477066478", "createdAt": "2020-08-26T06:36:49Z", "author": {"login": "sider"}, "path": "src/main/java/org/fisco/bcos/web3j/protocol/core/JsonRpc2_0Web3j.java", "diffHunk": "@@ -132,6 +132,19 @@ public BigInteger getBlockNumberCache() {\n         return getLocalBlockNumber().add(new BigInteger(BlockLimit.blockLimit.toString()));\n     }\n \n+    @Override\n+    public BigInteger getBlockLimit() {\n+        if (getLocalBlockNumber().intValue() == 1) {\n+            try {\n+                BlockNumber blockNumber = getBlockNumber().sendAsync().get();\n+                setBlockNumber(blockNumber.getBlockNumber());\n+            } catch (Exception e) {\n+                logger.error(\"Exception: \" + e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7f20c889efe4dd777bc30d6731ff6ab3fa68fc64"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzA2NjQ3OQ==", "bodyText": "[PMD Java] JUnit assertions should include a message (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nJUnitAssertionsShouldIncludeMessage\nBest Practices\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_bestpractices.html#junitassertionsshouldincludemessage\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/704#discussion_r477066479", "createdAt": "2020-08-26T06:36:49Z", "author": {"login": "sider"}, "path": "src/integration-test/java/org/fisco/bcos/web3j/Web3jApITest.java", "diffHunk": "@@ -56,6 +56,12 @@ public void getBlockNumberCache() throws IOException {\n     assertNotNull(blockNumberCache);\n   }\n \n+  @Test\n+  public void getBlockNumberLimit() throws IOException {\n+    BigInteger blockLimit = web3j.getBlockLimit();\n+    assertNotNull(blockLimit);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7f20c889efe4dd777bc30d6731ff6ab3fa68fc64"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzA2NjQ4MQ==", "bodyText": "[PMD Java] Potential violation of Law of Demeter (method chain calls) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/704#discussion_r477066481", "createdAt": "2020-08-26T06:36:49Z", "author": {"login": "sider"}, "path": "src/main/java/org/fisco/bcos/web3j/protocol/core/JsonRpc2_0Web3j.java", "diffHunk": "@@ -132,6 +132,19 @@ public BigInteger getBlockNumberCache() {\n         return getLocalBlockNumber().add(new BigInteger(BlockLimit.blockLimit.toString()));\n     }\n \n+    @Override\n+    public BigInteger getBlockLimit() {\n+        if (getLocalBlockNumber().intValue() == 1) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7f20c889efe4dd777bc30d6731ff6ab3fa68fc64"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzA2NjQ4NA==", "bodyText": "[PMD Java] Potential violation of Law of Demeter (method chain calls) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/704#discussion_r477066484", "createdAt": "2020-08-26T06:36:49Z", "author": {"login": "sider"}, "path": "src/main/java/org/fisco/bcos/web3j/protocol/core/JsonRpc2_0Web3j.java", "diffHunk": "@@ -132,6 +132,19 @@ public BigInteger getBlockNumberCache() {\n         return getLocalBlockNumber().add(new BigInteger(BlockLimit.blockLimit.toString()));\n     }\n \n+    @Override\n+    public BigInteger getBlockLimit() {\n+        if (getLocalBlockNumber().intValue() == 1) {\n+            try {\n+                BlockNumber blockNumber = getBlockNumber().sendAsync().get();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7f20c889efe4dd777bc30d6731ff6ab3fa68fc64"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzA2NjQ4NQ==", "bodyText": "[PMD Java] Potential violation of Law of Demeter (object not created locally) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/704#discussion_r477066485", "createdAt": "2020-08-26T06:36:50Z", "author": {"login": "sider"}, "path": "src/main/java/org/fisco/bcos/web3j/protocol/core/JsonRpc2_0Web3j.java", "diffHunk": "@@ -132,6 +132,19 @@ public BigInteger getBlockNumberCache() {\n         return getLocalBlockNumber().add(new BigInteger(BlockLimit.blockLimit.toString()));\n     }\n \n+    @Override\n+    public BigInteger getBlockLimit() {\n+        if (getLocalBlockNumber().intValue() == 1) {\n+            try {\n+                BlockNumber blockNumber = getBlockNumber().sendAsync().get();\n+                setBlockNumber(blockNumber.getBlockNumber());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7f20c889efe4dd777bc30d6731ff6ab3fa68fc64"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzA2NjQ4OQ==", "bodyText": "[PMD Java] Potential violation of Law of Demeter (static property access) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/704#discussion_r477066489", "createdAt": "2020-08-26T06:36:50Z", "author": {"login": "sider"}, "path": "src/main/java/org/fisco/bcos/web3j/protocol/core/JsonRpc2_0Web3j.java", "diffHunk": "@@ -132,6 +132,19 @@ public BigInteger getBlockNumberCache() {\n         return getLocalBlockNumber().add(new BigInteger(BlockLimit.blockLimit.toString()));\n     }\n \n+    @Override\n+    public BigInteger getBlockLimit() {\n+        if (getLocalBlockNumber().intValue() == 1) {\n+            try {\n+                BlockNumber blockNumber = getBlockNumber().sendAsync().get();\n+                setBlockNumber(blockNumber.getBlockNumber());\n+            } catch (Exception e) {\n+                logger.error(\"Exception: \" + e);\n+            }\n+        }\n+        return getLocalBlockNumber().add(new BigInteger(BlockLimit.blockLimit.toString()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7f20c889efe4dd777bc30d6731ff6ab3fa68fc64"}, "originalPosition": 14}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c425efbb0de6c0efddaa0f37db4228d2a7b75e58", "author": {"user": {"login": "ywy2090", "name": null}}, "url": "https://github.com/FISCO-BCOS/web3sdk/commit/c425efbb0de6c0efddaa0f37db4228d2a7b75e58", "committedDate": "2020-08-26T08:17:09Z", "message": "fix queryCNS when constructor Contract object"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc2MzMzMjU1", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/704#pullrequestreview-476333255", "createdAt": "2020-08-27T01:59:36Z", "commit": {"oid": "c425efbb0de6c0efddaa0f37db4228d2a7b75e58"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc2MzM1MDY5", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/704#pullrequestreview-476335069", "createdAt": "2020-08-27T02:05:25Z", "commit": {"oid": "c425efbb0de6c0efddaa0f37db4228d2a7b75e58"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fc334f9904aff8394f5d5ffa8cab13b74677ca8d", "author": {"user": {"login": "ywy2090", "name": null}}, "url": "https://github.com/FISCO-BCOS/web3sdk/commit/fc334f9904aff8394f5d5ffa8cab13b74677ca8d", "committedDate": "2020-08-27T02:09:43Z", "message": "fix integTest bug"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1839, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}