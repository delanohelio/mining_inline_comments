{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA4OTI1MzU0", "number": 576, "title": "add ChainGovernanceService", "bodyText": "", "createdAt": "2020-04-25T15:29:06Z", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/576", "merged": true, "mergeCommit": {"oid": "7231cf40d1773d50c95641e749920618cf2b6ee1"}, "closed": true, "closedAt": "2020-04-27T13:02:27Z", "author": {"login": "ywy2090"}, "timelineItems": {"totalCount": 21, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcbHpZDgH2gAyNDA4OTI1MzU0OjU4NTMzNjYzNmVjZTE0NTM3MzQ5MTE2NzFiZGEzMjQyNzk5ZmQyMGU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcbu4i7ABqjMyNzU2NDUyNDg=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "585336636ece1453734911671bda3242799fd20e", "author": {"user": {"login": "ywy2090", "name": null}}, "url": "https://github.com/FISCO-BCOS/web3sdk/commit/585336636ece1453734911671bda3242799fd20e", "committedDate": "2020-04-25T15:16:35Z", "message": "Remove useless code"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "148a54e4499c84e768ec933580dd74be33070906", "author": {"user": {"login": "ywy2090", "name": null}}, "url": "https://github.com/FISCO-BCOS/web3sdk/commit/148a54e4499c84e768ec933580dd74be33070906", "committedDate": "2020-04-25T15:16:43Z", "message": "add ChainGovernanceService"}, "afterCommit": {"oid": "559dfa0048bc28925e0d8d64f5ea56e13ce0ec9c", "author": {"user": {"login": "ywy2090", "name": null}}, "url": "https://github.com/FISCO-BCOS/web3sdk/commit/559dfa0048bc28925e0d8d64f5ea56e13ce0ec9c", "committedDate": "2020-04-25T15:54:46Z", "message": "add ChainGovernanceService"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "559dfa0048bc28925e0d8d64f5ea56e13ce0ec9c", "author": {"user": {"login": "ywy2090", "name": null}}, "url": "https://github.com/FISCO-BCOS/web3sdk/commit/559dfa0048bc28925e0d8d64f5ea56e13ce0ec9c", "committedDate": "2020-04-25T15:54:46Z", "message": "add ChainGovernanceService"}, "afterCommit": {"oid": "811541151510b785ff48e7e6f57938e3538dc51b", "author": {"user": {"login": "ywy2090", "name": null}}, "url": "https://github.com/FISCO-BCOS/web3sdk/commit/811541151510b785ff48e7e6f57938e3538dc51b", "committedDate": "2020-04-26T08:00:31Z", "message": "add ChainGovernanceService"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "811541151510b785ff48e7e6f57938e3538dc51b", "author": {"user": {"login": "ywy2090", "name": null}}, "url": "https://github.com/FISCO-BCOS/web3sdk/commit/811541151510b785ff48e7e6f57938e3538dc51b", "committedDate": "2020-04-26T08:00:31Z", "message": "add ChainGovernanceService"}, "afterCommit": {"oid": "f2d1755799310bbc36003adca01290d43121af7d", "author": {"user": {"login": "ywy2090", "name": null}}, "url": "https://github.com/FISCO-BCOS/web3sdk/commit/f2d1755799310bbc36003adca01290d43121af7d", "committedDate": "2020-04-26T08:50:57Z", "message": "add ChainGovernanceService"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f2d1755799310bbc36003adca01290d43121af7d", "author": {"user": {"login": "ywy2090", "name": null}}, "url": "https://github.com/FISCO-BCOS/web3sdk/commit/f2d1755799310bbc36003adca01290d43121af7d", "committedDate": "2020-04-26T08:50:57Z", "message": "add ChainGovernanceService"}, "afterCommit": {"oid": "da818383a9c47229058caebab097ef829ec9f367", "author": {"user": {"login": "ywy2090", "name": null}}, "url": "https://github.com/FISCO-BCOS/web3sdk/commit/da818383a9c47229058caebab097ef829ec9f367", "committedDate": "2020-04-26T12:15:57Z", "message": "add ChainGovernanceService"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "da818383a9c47229058caebab097ef829ec9f367", "author": {"user": {"login": "ywy2090", "name": null}}, "url": "https://github.com/FISCO-BCOS/web3sdk/commit/da818383a9c47229058caebab097ef829ec9f367", "committedDate": "2020-04-26T12:15:57Z", "message": "add ChainGovernanceService"}, "afterCommit": {"oid": "e139b312c57ab346ae1e0013e735ac6c64cf912f", "author": {"user": {"login": "ywy2090", "name": null}}, "url": "https://github.com/FISCO-BCOS/web3sdk/commit/e139b312c57ab346ae1e0013e735ac6c64cf912f", "committedDate": "2020-04-26T12:21:03Z", "message": "add ChainGovernanceService"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e139b312c57ab346ae1e0013e735ac6c64cf912f", "author": {"user": {"login": "ywy2090", "name": null}}, "url": "https://github.com/FISCO-BCOS/web3sdk/commit/e139b312c57ab346ae1e0013e735ac6c64cf912f", "committedDate": "2020-04-26T12:21:03Z", "message": "add ChainGovernanceService"}, "afterCommit": {"oid": "9b6da1557b5f6652ffdcd563665e4c11e0ffe94b", "author": {"user": {"login": "ywy2090", "name": null}}, "url": "https://github.com/FISCO-BCOS/web3sdk/commit/9b6da1557b5f6652ffdcd563665e4c11e0ffe94b", "committedDate": "2020-04-26T12:33:24Z", "message": "add ChainGovernanceService"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9b6da1557b5f6652ffdcd563665e4c11e0ffe94b", "author": {"user": {"login": "ywy2090", "name": null}}, "url": "https://github.com/FISCO-BCOS/web3sdk/commit/9b6da1557b5f6652ffdcd563665e4c11e0ffe94b", "committedDate": "2020-04-26T12:33:24Z", "message": "add ChainGovernanceService"}, "afterCommit": {"oid": "da499d25e573fa7dee66e73098bcbbb8e9c09c51", "author": {"user": {"login": "ywy2090", "name": null}}, "url": "https://github.com/FISCO-BCOS/web3sdk/commit/da499d25e573fa7dee66e73098bcbbb8e9c09c51", "committedDate": "2020-04-27T09:05:15Z", "message": "add ChainGovernanceService"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "57ff907b347a6ec465995a3d1ed9818b7389881e", "author": {"user": {"login": "ywy2090", "name": null}}, "url": "https://github.com/FISCO-BCOS/web3sdk/commit/57ff907b347a6ec465995a3d1ed9818b7389881e", "committedDate": "2020-04-27T09:38:04Z", "message": "remove unused params for call/getCode rpc interface"}, "afterCommit": {"oid": "4b07a3497266e1bd4470dda8862aa6162c1336e9", "author": {"user": {"login": "ywy2090", "name": null}}, "url": "https://github.com/FISCO-BCOS/web3sdk/commit/4b07a3497266e1bd4470dda8862aa6162c1336e9", "committedDate": "2020-04-27T12:00:45Z", "message": "remove unused params for call/getCode rpc interface"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8f96fa8afd8cf3bff65d0832bdd10259e138c995", "author": {"user": {"login": "ywy2090", "name": null}}, "url": "https://github.com/FISCO-BCOS/web3sdk/commit/8f96fa8afd8cf3bff65d0832bdd10259e138c995", "committedDate": "2020-04-27T12:06:37Z", "message": "add ChainGovernanceService"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4b07a3497266e1bd4470dda8862aa6162c1336e9", "author": {"user": {"login": "ywy2090", "name": null}}, "url": "https://github.com/FISCO-BCOS/web3sdk/commit/4b07a3497266e1bd4470dda8862aa6162c1336e9", "committedDate": "2020-04-27T12:00:45Z", "message": "remove unused params for call/getCode rpc interface"}, "afterCommit": {"oid": "1f2a115966f895bc2ed2f6289be96f6f480fec87", "author": {"user": {"login": "ywy2090", "name": null}}, "url": "https://github.com/FISCO-BCOS/web3sdk/commit/1f2a115966f895bc2ed2f6289be96f6f480fec87", "committedDate": "2020-04-27T12:06:37Z", "message": "remove unused params for call/getCode rpc interface"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAwODg3ODk2", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/576#pullrequestreview-400887896", "createdAt": "2020-04-27T12:07:59Z", "commit": {"oid": "1f2a115966f895bc2ed2f6289be96f6f480fec87"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxMjowNzo1OVrOGMfwwQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxMjowNzo1OVrOGMfwwQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTc1NjQ4MQ==", "bodyText": "[PMD] A method/constructor should not explicitly throw java.lang.Exception (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nSignatureDeclareThrowsException\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.21.0/pmd_rules_java_design.html#signaturedeclarethrowsexception\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/576#discussion_r415756481", "createdAt": "2020-04-27T12:07:59Z", "author": {"login": "sider"}, "path": "src/main/java/org/fisco/bcos/web3j/precompile/permission/ChainGovernanceService.java", "diffHunk": "@@ -0,0 +1,122 @@\n+package org.fisco.bcos.web3j.precompile.permission;\n+\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import java.math.BigInteger;\n+import java.util.List;\n+import org.fisco.bcos.web3j.crypto.Credentials;\n+import org.fisco.bcos.web3j.precompile.common.PrecompiledCommon;\n+import org.fisco.bcos.web3j.protocol.ObjectMapperFactory;\n+import org.fisco.bcos.web3j.protocol.Web3j;\n+import org.fisco.bcos.web3j.protocol.core.methods.response.TransactionReceipt;\n+import org.fisco.bcos.web3j.tuples.generated.Tuple2;\n+import org.fisco.bcos.web3j.tx.gas.ContractGasProvider;\n+import org.fisco.bcos.web3j.tx.gas.StaticGasProvider;\n+\n+public class ChainGovernanceService {\n+    private static BigInteger gasPrice = new BigInteger(\"30000000000\");\n+    private static BigInteger gasLimit = new BigInteger(\"30000000000\");\n+\n+    private static final String chainGovernanceAddress =\n+            \"0x0000000000000000000000000000000000001008\";\n+\n+    private ChainGovernance chainGovernance;\n+    private Web3j web3j;\n+\n+    public static String getChainGovernanceAddress() {\n+        return chainGovernanceAddress;\n+    }\n+\n+    public ChainGovernance getChainGovernance() {\n+        return chainGovernance;\n+    }\n+\n+    public void setChainGovernance(ChainGovernance chainGovernance) {\n+        this.chainGovernance = chainGovernance;\n+    }\n+\n+    public ChainGovernanceService(Web3j web3j, Credentials credentials) {\n+        ContractGasProvider contractGasProvider = new StaticGasProvider(gasPrice, gasLimit);\n+        chainGovernance =\n+                ChainGovernance.load(\n+                        chainGovernanceAddress, web3j, credentials, contractGasProvider);\n+        this.web3j = web3j;\n+    }\n+\n+    public List<PermissionInfo> listOperators() throws Exception {\n+        String operatorsInfo = chainGovernance.listOperators().send();\n+        ObjectMapper objectMapper = ObjectMapperFactory.getObjectMapper();\n+        return objectMapper.readValue(\n+                operatorsInfo,\n+                objectMapper\n+                        .getTypeFactory()\n+                        .constructCollectionType(List.class, PermissionInfo.class));\n+    }\n+\n+    public String updateCommitteeMemberWeight(String account, int weight) throws Exception {\n+        TransactionReceipt transactionReceipt =\n+                chainGovernance\n+                        .updateCommitteeMemberWeight(account, BigInteger.valueOf(weight))\n+                        .send();\n+        return PrecompiledCommon.handleTransactionReceipt(transactionReceipt, web3j);\n+    }\n+\n+    public BigInteger queryThreshold() throws Exception {\n+        return chainGovernance.queryThreshold().send();\n+    }\n+\n+    public Tuple2<Boolean, BigInteger> queryCommitteeMemberWeight(String account) throws Exception {\n+        return chainGovernance.queryCommitteeMemberWeight(account).send();\n+    }\n+\n+    public String grantCommitteeMember(String account) throws Exception {\n+        TransactionReceipt transactionReceipt =\n+                chainGovernance.grantCommitteeMember(account).send();\n+        return PrecompiledCommon.handleTransactionReceipt(transactionReceipt, web3j);\n+    }\n+\n+    public List<PermissionInfo> listCommitteeMembers() throws Exception {\n+        String committeeMembersInfo = chainGovernance.listCommitteeMembers().send();\n+        ObjectMapper objectMapper = ObjectMapperFactory.getObjectMapper();\n+        return objectMapper.readValue(\n+                committeeMembersInfo,\n+                objectMapper\n+                        .getTypeFactory()\n+                        .constructCollectionType(List.class, PermissionInfo.class));\n+    }\n+\n+    public String updateThreshold(int threshold) throws Exception {\n+        TransactionReceipt transactionReceipt =\n+                chainGovernance.updateThreshold(BigInteger.valueOf(threshold)).send();\n+        return PrecompiledCommon.handleTransactionReceipt(transactionReceipt, web3j);\n+    }\n+\n+    public String revokeCommitteeMember(String account) throws Exception {\n+        TransactionReceipt transactionReceipt =\n+                chainGovernance.revokeCommitteeMember(account).send();\n+        return PrecompiledCommon.handleTransactionReceipt(transactionReceipt, web3j);\n+    }\n+\n+    public String grantOperator(String account) throws Exception {\n+        TransactionReceipt transactionReceipt = chainGovernance.grantOperator(account).send();\n+        return PrecompiledCommon.handleTransactionReceipt(transactionReceipt, web3j);\n+    }\n+\n+    public String revokeOperator(String account) throws Exception {\n+        TransactionReceipt transactionReceipt = chainGovernance.revokeOperator(account).send();\n+        return PrecompiledCommon.handleTransactionReceipt(transactionReceipt, web3j);\n+    }\n+\n+    public String freezeAccount(String account) throws Exception {\n+        TransactionReceipt transactionReceipt = chainGovernance.freezeAccount(account).send();\n+        return PrecompiledCommon.handleTransactionReceipt(transactionReceipt, web3j);\n+    }\n+\n+    public String unfreezeAccount(String account) throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1f2a115966f895bc2ed2f6289be96f6f480fec87"}, "originalPosition": 114}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAwODg3OTE0", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/576#pullrequestreview-400887914", "createdAt": "2020-04-27T12:08:00Z", "commit": {"oid": "1f2a115966f895bc2ed2f6289be96f6f480fec87"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxMjowODowMFrOGMfwzA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxMjowODowMFrOGMfwzA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTc1NjQ5Mg==", "bodyText": "[PMD] Potential violation of Law of Demeter (method chain calls) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.21.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/576#discussion_r415756492", "createdAt": "2020-04-27T12:08:00Z", "author": {"login": "sider"}, "path": "src/main/java/org/fisco/bcos/web3j/precompile/permission/ChainGovernanceService.java", "diffHunk": "@@ -0,0 +1,122 @@\n+package org.fisco.bcos.web3j.precompile.permission;\n+\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import java.math.BigInteger;\n+import java.util.List;\n+import org.fisco.bcos.web3j.crypto.Credentials;\n+import org.fisco.bcos.web3j.precompile.common.PrecompiledCommon;\n+import org.fisco.bcos.web3j.protocol.ObjectMapperFactory;\n+import org.fisco.bcos.web3j.protocol.Web3j;\n+import org.fisco.bcos.web3j.protocol.core.methods.response.TransactionReceipt;\n+import org.fisco.bcos.web3j.tuples.generated.Tuple2;\n+import org.fisco.bcos.web3j.tx.gas.ContractGasProvider;\n+import org.fisco.bcos.web3j.tx.gas.StaticGasProvider;\n+\n+public class ChainGovernanceService {\n+    private static BigInteger gasPrice = new BigInteger(\"30000000000\");\n+    private static BigInteger gasLimit = new BigInteger(\"30000000000\");\n+\n+    private static final String chainGovernanceAddress =\n+            \"0x0000000000000000000000000000000000001008\";\n+\n+    private ChainGovernance chainGovernance;\n+    private Web3j web3j;\n+\n+    public static String getChainGovernanceAddress() {\n+        return chainGovernanceAddress;\n+    }\n+\n+    public ChainGovernance getChainGovernance() {\n+        return chainGovernance;\n+    }\n+\n+    public void setChainGovernance(ChainGovernance chainGovernance) {\n+        this.chainGovernance = chainGovernance;\n+    }\n+\n+    public ChainGovernanceService(Web3j web3j, Credentials credentials) {\n+        ContractGasProvider contractGasProvider = new StaticGasProvider(gasPrice, gasLimit);\n+        chainGovernance =\n+                ChainGovernance.load(\n+                        chainGovernanceAddress, web3j, credentials, contractGasProvider);\n+        this.web3j = web3j;\n+    }\n+\n+    public List<PermissionInfo> listOperators() throws Exception {\n+        String operatorsInfo = chainGovernance.listOperators().send();\n+        ObjectMapper objectMapper = ObjectMapperFactory.getObjectMapper();\n+        return objectMapper.readValue(\n+                operatorsInfo,\n+                objectMapper\n+                        .getTypeFactory()\n+                        .constructCollectionType(List.class, PermissionInfo.class));\n+    }\n+\n+    public String updateCommitteeMemberWeight(String account, int weight) throws Exception {\n+        TransactionReceipt transactionReceipt =\n+                chainGovernance\n+                        .updateCommitteeMemberWeight(account, BigInteger.valueOf(weight))\n+                        .send();\n+        return PrecompiledCommon.handleTransactionReceipt(transactionReceipt, web3j);\n+    }\n+\n+    public BigInteger queryThreshold() throws Exception {\n+        return chainGovernance.queryThreshold().send();\n+    }\n+\n+    public Tuple2<Boolean, BigInteger> queryCommitteeMemberWeight(String account) throws Exception {\n+        return chainGovernance.queryCommitteeMemberWeight(account).send();\n+    }\n+\n+    public String grantCommitteeMember(String account) throws Exception {\n+        TransactionReceipt transactionReceipt =\n+                chainGovernance.grantCommitteeMember(account).send();\n+        return PrecompiledCommon.handleTransactionReceipt(transactionReceipt, web3j);\n+    }\n+\n+    public List<PermissionInfo> listCommitteeMembers() throws Exception {\n+        String committeeMembersInfo = chainGovernance.listCommitteeMembers().send();\n+        ObjectMapper objectMapper = ObjectMapperFactory.getObjectMapper();\n+        return objectMapper.readValue(\n+                committeeMembersInfo,\n+                objectMapper\n+                        .getTypeFactory()\n+                        .constructCollectionType(List.class, PermissionInfo.class));\n+    }\n+\n+    public String updateThreshold(int threshold) throws Exception {\n+        TransactionReceipt transactionReceipt =\n+                chainGovernance.updateThreshold(BigInteger.valueOf(threshold)).send();\n+        return PrecompiledCommon.handleTransactionReceipt(transactionReceipt, web3j);\n+    }\n+\n+    public String revokeCommitteeMember(String account) throws Exception {\n+        TransactionReceipt transactionReceipt =\n+                chainGovernance.revokeCommitteeMember(account).send();\n+        return PrecompiledCommon.handleTransactionReceipt(transactionReceipt, web3j);\n+    }\n+\n+    public String grantOperator(String account) throws Exception {\n+        TransactionReceipt transactionReceipt = chainGovernance.grantOperator(account).send();\n+        return PrecompiledCommon.handleTransactionReceipt(transactionReceipt, web3j);\n+    }\n+\n+    public String revokeOperator(String account) throws Exception {\n+        TransactionReceipt transactionReceipt = chainGovernance.revokeOperator(account).send();\n+        return PrecompiledCommon.handleTransactionReceipt(transactionReceipt, web3j);\n+    }\n+\n+    public String freezeAccount(String account) throws Exception {\n+        TransactionReceipt transactionReceipt = chainGovernance.freezeAccount(account).send();\n+        return PrecompiledCommon.handleTransactionReceipt(transactionReceipt, web3j);\n+    }\n+\n+    public String unfreezeAccount(String account) throws Exception {\n+        TransactionReceipt transactionReceipt = chainGovernance.unfreezeAccount(account).send();\n+        return PrecompiledCommon.handleTransactionReceipt(transactionReceipt, web3j);\n+    }\n+\n+    public String getAccountStatus(String account) throws Exception {\n+        return chainGovernance.getAccountStatus(account).send();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1f2a115966f895bc2ed2f6289be96f6f480fec87"}, "originalPosition": 120}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAwODg3OTI1", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/576#pullrequestreview-400887925", "createdAt": "2020-04-27T12:08:01Z", "commit": {"oid": "1f2a115966f895bc2ed2f6289be96f6f480fec87"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxMjowODowMVrOGMfw3A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxMjowODowMVrOGMfw3A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTc1NjUwOA==", "bodyText": "[PMD] Potential violation of Law of Demeter (method chain calls) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.21.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/576#discussion_r415756508", "createdAt": "2020-04-27T12:08:01Z", "author": {"login": "sider"}, "path": "src/main/java/org/fisco/bcos/web3j/precompile/permission/ChainGovernanceService.java", "diffHunk": "@@ -0,0 +1,122 @@\n+package org.fisco.bcos.web3j.precompile.permission;\n+\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import java.math.BigInteger;\n+import java.util.List;\n+import org.fisco.bcos.web3j.crypto.Credentials;\n+import org.fisco.bcos.web3j.precompile.common.PrecompiledCommon;\n+import org.fisco.bcos.web3j.protocol.ObjectMapperFactory;\n+import org.fisco.bcos.web3j.protocol.Web3j;\n+import org.fisco.bcos.web3j.protocol.core.methods.response.TransactionReceipt;\n+import org.fisco.bcos.web3j.tuples.generated.Tuple2;\n+import org.fisco.bcos.web3j.tx.gas.ContractGasProvider;\n+import org.fisco.bcos.web3j.tx.gas.StaticGasProvider;\n+\n+public class ChainGovernanceService {\n+    private static BigInteger gasPrice = new BigInteger(\"30000000000\");\n+    private static BigInteger gasLimit = new BigInteger(\"30000000000\");\n+\n+    private static final String chainGovernanceAddress =\n+            \"0x0000000000000000000000000000000000001008\";\n+\n+    private ChainGovernance chainGovernance;\n+    private Web3j web3j;\n+\n+    public static String getChainGovernanceAddress() {\n+        return chainGovernanceAddress;\n+    }\n+\n+    public ChainGovernance getChainGovernance() {\n+        return chainGovernance;\n+    }\n+\n+    public void setChainGovernance(ChainGovernance chainGovernance) {\n+        this.chainGovernance = chainGovernance;\n+    }\n+\n+    public ChainGovernanceService(Web3j web3j, Credentials credentials) {\n+        ContractGasProvider contractGasProvider = new StaticGasProvider(gasPrice, gasLimit);\n+        chainGovernance =\n+                ChainGovernance.load(\n+                        chainGovernanceAddress, web3j, credentials, contractGasProvider);\n+        this.web3j = web3j;\n+    }\n+\n+    public List<PermissionInfo> listOperators() throws Exception {\n+        String operatorsInfo = chainGovernance.listOperators().send();\n+        ObjectMapper objectMapper = ObjectMapperFactory.getObjectMapper();\n+        return objectMapper.readValue(\n+                operatorsInfo,\n+                objectMapper\n+                        .getTypeFactory()\n+                        .constructCollectionType(List.class, PermissionInfo.class));\n+    }\n+\n+    public String updateCommitteeMemberWeight(String account, int weight) throws Exception {\n+        TransactionReceipt transactionReceipt =\n+                chainGovernance\n+                        .updateCommitteeMemberWeight(account, BigInteger.valueOf(weight))\n+                        .send();\n+        return PrecompiledCommon.handleTransactionReceipt(transactionReceipt, web3j);\n+    }\n+\n+    public BigInteger queryThreshold() throws Exception {\n+        return chainGovernance.queryThreshold().send();\n+    }\n+\n+    public Tuple2<Boolean, BigInteger> queryCommitteeMemberWeight(String account) throws Exception {\n+        return chainGovernance.queryCommitteeMemberWeight(account).send();\n+    }\n+\n+    public String grantCommitteeMember(String account) throws Exception {\n+        TransactionReceipt transactionReceipt =\n+                chainGovernance.grantCommitteeMember(account).send();\n+        return PrecompiledCommon.handleTransactionReceipt(transactionReceipt, web3j);\n+    }\n+\n+    public List<PermissionInfo> listCommitteeMembers() throws Exception {\n+        String committeeMembersInfo = chainGovernance.listCommitteeMembers().send();\n+        ObjectMapper objectMapper = ObjectMapperFactory.getObjectMapper();\n+        return objectMapper.readValue(\n+                committeeMembersInfo,\n+                objectMapper\n+                        .getTypeFactory()\n+                        .constructCollectionType(List.class, PermissionInfo.class));\n+    }\n+\n+    public String updateThreshold(int threshold) throws Exception {\n+        TransactionReceipt transactionReceipt =\n+                chainGovernance.updateThreshold(BigInteger.valueOf(threshold)).send();\n+        return PrecompiledCommon.handleTransactionReceipt(transactionReceipt, web3j);\n+    }\n+\n+    public String revokeCommitteeMember(String account) throws Exception {\n+        TransactionReceipt transactionReceipt =\n+                chainGovernance.revokeCommitteeMember(account).send();\n+        return PrecompiledCommon.handleTransactionReceipt(transactionReceipt, web3j);\n+    }\n+\n+    public String grantOperator(String account) throws Exception {\n+        TransactionReceipt transactionReceipt = chainGovernance.grantOperator(account).send();\n+        return PrecompiledCommon.handleTransactionReceipt(transactionReceipt, web3j);\n+    }\n+\n+    public String revokeOperator(String account) throws Exception {\n+        TransactionReceipt transactionReceipt = chainGovernance.revokeOperator(account).send();\n+        return PrecompiledCommon.handleTransactionReceipt(transactionReceipt, web3j);\n+    }\n+\n+    public String freezeAccount(String account) throws Exception {\n+        TransactionReceipt transactionReceipt = chainGovernance.freezeAccount(account).send();\n+        return PrecompiledCommon.handleTransactionReceipt(transactionReceipt, web3j);\n+    }\n+\n+    public String unfreezeAccount(String account) throws Exception {\n+        TransactionReceipt transactionReceipt = chainGovernance.unfreezeAccount(account).send();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1f2a115966f895bc2ed2f6289be96f6f480fec87"}, "originalPosition": 115}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAwODg3OTQw", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/576#pullrequestreview-400887940", "createdAt": "2020-04-27T12:08:02Z", "commit": {"oid": "1f2a115966f895bc2ed2f6289be96f6f480fec87"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxMjowODowMlrOGMfw5g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxMjowODowMlrOGMfw5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTc1NjUxOA==", "bodyText": "[PMD] A method/constructor should not explicitly throw java.lang.Exception (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nSignatureDeclareThrowsException\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.21.0/pmd_rules_java_design.html#signaturedeclarethrowsexception\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/576#discussion_r415756518", "createdAt": "2020-04-27T12:08:02Z", "author": {"login": "sider"}, "path": "src/main/java/org/fisco/bcos/web3j/precompile/permission/ChainGovernanceService.java", "diffHunk": "@@ -0,0 +1,122 @@\n+package org.fisco.bcos.web3j.precompile.permission;\n+\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import java.math.BigInteger;\n+import java.util.List;\n+import org.fisco.bcos.web3j.crypto.Credentials;\n+import org.fisco.bcos.web3j.precompile.common.PrecompiledCommon;\n+import org.fisco.bcos.web3j.protocol.ObjectMapperFactory;\n+import org.fisco.bcos.web3j.protocol.Web3j;\n+import org.fisco.bcos.web3j.protocol.core.methods.response.TransactionReceipt;\n+import org.fisco.bcos.web3j.tuples.generated.Tuple2;\n+import org.fisco.bcos.web3j.tx.gas.ContractGasProvider;\n+import org.fisco.bcos.web3j.tx.gas.StaticGasProvider;\n+\n+public class ChainGovernanceService {\n+    private static BigInteger gasPrice = new BigInteger(\"30000000000\");\n+    private static BigInteger gasLimit = new BigInteger(\"30000000000\");\n+\n+    private static final String chainGovernanceAddress =\n+            \"0x0000000000000000000000000000000000001008\";\n+\n+    private ChainGovernance chainGovernance;\n+    private Web3j web3j;\n+\n+    public static String getChainGovernanceAddress() {\n+        return chainGovernanceAddress;\n+    }\n+\n+    public ChainGovernance getChainGovernance() {\n+        return chainGovernance;\n+    }\n+\n+    public void setChainGovernance(ChainGovernance chainGovernance) {\n+        this.chainGovernance = chainGovernance;\n+    }\n+\n+    public ChainGovernanceService(Web3j web3j, Credentials credentials) {\n+        ContractGasProvider contractGasProvider = new StaticGasProvider(gasPrice, gasLimit);\n+        chainGovernance =\n+                ChainGovernance.load(\n+                        chainGovernanceAddress, web3j, credentials, contractGasProvider);\n+        this.web3j = web3j;\n+    }\n+\n+    public List<PermissionInfo> listOperators() throws Exception {\n+        String operatorsInfo = chainGovernance.listOperators().send();\n+        ObjectMapper objectMapper = ObjectMapperFactory.getObjectMapper();\n+        return objectMapper.readValue(\n+                operatorsInfo,\n+                objectMapper\n+                        .getTypeFactory()\n+                        .constructCollectionType(List.class, PermissionInfo.class));\n+    }\n+\n+    public String updateCommitteeMemberWeight(String account, int weight) throws Exception {\n+        TransactionReceipt transactionReceipt =\n+                chainGovernance\n+                        .updateCommitteeMemberWeight(account, BigInteger.valueOf(weight))\n+                        .send();\n+        return PrecompiledCommon.handleTransactionReceipt(transactionReceipt, web3j);\n+    }\n+\n+    public BigInteger queryThreshold() throws Exception {\n+        return chainGovernance.queryThreshold().send();\n+    }\n+\n+    public Tuple2<Boolean, BigInteger> queryCommitteeMemberWeight(String account) throws Exception {\n+        return chainGovernance.queryCommitteeMemberWeight(account).send();\n+    }\n+\n+    public String grantCommitteeMember(String account) throws Exception {\n+        TransactionReceipt transactionReceipt =\n+                chainGovernance.grantCommitteeMember(account).send();\n+        return PrecompiledCommon.handleTransactionReceipt(transactionReceipt, web3j);\n+    }\n+\n+    public List<PermissionInfo> listCommitteeMembers() throws Exception {\n+        String committeeMembersInfo = chainGovernance.listCommitteeMembers().send();\n+        ObjectMapper objectMapper = ObjectMapperFactory.getObjectMapper();\n+        return objectMapper.readValue(\n+                committeeMembersInfo,\n+                objectMapper\n+                        .getTypeFactory()\n+                        .constructCollectionType(List.class, PermissionInfo.class));\n+    }\n+\n+    public String updateThreshold(int threshold) throws Exception {\n+        TransactionReceipt transactionReceipt =\n+                chainGovernance.updateThreshold(BigInteger.valueOf(threshold)).send();\n+        return PrecompiledCommon.handleTransactionReceipt(transactionReceipt, web3j);\n+    }\n+\n+    public String revokeCommitteeMember(String account) throws Exception {\n+        TransactionReceipt transactionReceipt =\n+                chainGovernance.revokeCommitteeMember(account).send();\n+        return PrecompiledCommon.handleTransactionReceipt(transactionReceipt, web3j);\n+    }\n+\n+    public String grantOperator(String account) throws Exception {\n+        TransactionReceipt transactionReceipt = chainGovernance.grantOperator(account).send();\n+        return PrecompiledCommon.handleTransactionReceipt(transactionReceipt, web3j);\n+    }\n+\n+    public String revokeOperator(String account) throws Exception {\n+        TransactionReceipt transactionReceipt = chainGovernance.revokeOperator(account).send();\n+        return PrecompiledCommon.handleTransactionReceipt(transactionReceipt, web3j);\n+    }\n+\n+    public String freezeAccount(String account) throws Exception {\n+        TransactionReceipt transactionReceipt = chainGovernance.freezeAccount(account).send();\n+        return PrecompiledCommon.handleTransactionReceipt(transactionReceipt, web3j);\n+    }\n+\n+    public String unfreezeAccount(String account) throws Exception {\n+        TransactionReceipt transactionReceipt = chainGovernance.unfreezeAccount(account).send();\n+        return PrecompiledCommon.handleTransactionReceipt(transactionReceipt, web3j);\n+    }\n+\n+    public String getAccountStatus(String account) throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1f2a115966f895bc2ed2f6289be96f6f480fec87"}, "originalPosition": 119}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1f2a115966f895bc2ed2f6289be96f6f480fec87", "author": {"user": {"login": "ywy2090", "name": null}}, "url": "https://github.com/FISCO-BCOS/web3sdk/commit/1f2a115966f895bc2ed2f6289be96f6f480fec87", "committedDate": "2020-04-27T12:06:37Z", "message": "remove unused params for call/getCode rpc interface"}, "afterCommit": {"oid": "c365e7f2703ddeb73167d67159bd88039efa5e7b", "author": {"user": {"login": "ywy2090", "name": null}}, "url": "https://github.com/FISCO-BCOS/web3sdk/commit/c365e7f2703ddeb73167d67159bd88039efa5e7b", "committedDate": "2020-04-27T12:28:25Z", "message": "remove unused params for call/getCode rpc interface"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c365e7f2703ddeb73167d67159bd88039efa5e7b", "author": {"user": {"login": "ywy2090", "name": null}}, "url": "https://github.com/FISCO-BCOS/web3sdk/commit/c365e7f2703ddeb73167d67159bd88039efa5e7b", "committedDate": "2020-04-27T12:28:25Z", "message": "remove unused params for call/getCode rpc interface"}, "afterCommit": {"oid": "d8f3b6189db2aa9472eae89d8ae1540508174425", "author": {"user": {"login": "ywy2090", "name": null}}, "url": "https://github.com/FISCO-BCOS/web3sdk/commit/d8f3b6189db2aa9472eae89d8ae1540508174425", "committedDate": "2020-04-27T12:32:23Z", "message": "remove unused params for call/getCode rpc interface"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAwOTE1NTQ5", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/576#pullrequestreview-400915549", "createdAt": "2020-04-27T12:46:31Z", "commit": {"oid": "d8f3b6189db2aa9472eae89d8ae1540508174425"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAwOTE4MTY0", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/576#pullrequestreview-400918164", "createdAt": "2020-04-27T12:49:53Z", "commit": {"oid": "d8f3b6189db2aa9472eae89d8ae1540508174425"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a8350adb441bd664e190db88c8d8a3368507f2b5", "author": {"user": {"login": "ywy2090", "name": null}}, "url": "https://github.com/FISCO-BCOS/web3sdk/commit/a8350adb441bd664e190db88c8d8a3368507f2b5", "committedDate": "2020-04-27T12:59:12Z", "message": "remove unused params for call/getCode rpc interface"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d8f3b6189db2aa9472eae89d8ae1540508174425", "author": {"user": {"login": "ywy2090", "name": null}}, "url": "https://github.com/FISCO-BCOS/web3sdk/commit/d8f3b6189db2aa9472eae89d8ae1540508174425", "committedDate": "2020-04-27T12:32:23Z", "message": "remove unused params for call/getCode rpc interface"}, "afterCommit": {"oid": "a8350adb441bd664e190db88c8d8a3368507f2b5", "author": {"user": {"login": "ywy2090", "name": null}}, "url": "https://github.com/FISCO-BCOS/web3sdk/commit/a8350adb441bd664e190db88c8d8a3368507f2b5", "committedDate": "2020-04-27T12:59:12Z", "message": "remove unused params for call/getCode rpc interface"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1925, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}