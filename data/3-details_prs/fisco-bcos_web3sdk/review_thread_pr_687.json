{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY1MzgwNzg5", "number": 687, "reviewThreads": {"totalCount": 53, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwOToyMTozNVrOEWt4Dw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwOTozMDo0M1rOEWuEvQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyMjU1NzU5OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/fisco/bcos/channel/handler/ChannelConnections.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwOToyMTozNVrOG-HLDA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwOToyMTozNVrOG-HLDA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzc4MjQxMg==", "bodyText": "[PMD Java] Potential violation of Law of Demeter (method chain calls) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/687#discussion_r467782412", "createdAt": "2020-08-10T09:21:35Z", "author": {"login": "sider"}, "path": "src/main/java/org/fisco/bcos/channel/handler/ChannelConnections.java", "diffHunk": "@@ -244,6 +254,11 @@ public ChannelHandlerContext randomNetworkConnection(\n     }\n \n     public ChannelHandlerContext getNetworkConnectionByHost(String host, Integer port) {\n+        try {\n+            host = Inet6Address.getByName(host).getHostAddress();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "06b85f9ccc28e71a4ecb9275ea1ff7c0f6364705"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyMjU1NzYxOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/fisco/bcos/channel/handler/ChannelConnections.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwOToyMTozNlrOG-HLDg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwOToyMTozNlrOG-HLDg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzc4MjQxNA==", "bodyText": "[PMD Java] Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nAvoidCatchingGenericException\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_design.html#avoidcatchinggenericexception\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/687#discussion_r467782414", "createdAt": "2020-08-10T09:21:36Z", "author": {"login": "sider"}, "path": "src/main/java/org/fisco/bcos/channel/handler/ChannelConnections.java", "diffHunk": "@@ -244,6 +254,11 @@ public ChannelHandlerContext randomNetworkConnection(\n     }\n \n     public ChannelHandlerContext getNetworkConnectionByHost(String host, Integer port) {\n+        try {\n+            host = Inet6Address.getByName(host).getHostAddress();\n+        } catch (Exception e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "06b85f9ccc28e71a4ecb9275ea1ff7c0f6364705"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyMjU1NzYyOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/fisco/bcos/channel/handler/ChannelConnections.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwOToyMTozNlrOG-HLEA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwOToyMTozNlrOG-HLEA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzc4MjQxNg==", "bodyText": "[PMD Java] Logger calls should be surrounded by log level guards. (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nGuardLogStatement\nBest Practices\n2\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_bestpractices.html#guardlogstatement\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/687#discussion_r467782416", "createdAt": "2020-08-10T09:21:36Z", "author": {"login": "sider"}, "path": "src/main/java/org/fisco/bcos/channel/handler/ChannelConnections.java", "diffHunk": "@@ -244,6 +254,11 @@ public ChannelHandlerContext randomNetworkConnection(\n     }\n \n     public ChannelHandlerContext getNetworkConnectionByHost(String host, Integer port) {\n+        try {\n+            host = Inet6Address.getByName(host).getHostAddress();\n+        } catch (Exception e) {\n+            logger.error(\"invalid host string format, value: \" + host);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "06b85f9ccc28e71a4ecb9275ea1ff7c0f6364705"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyMjU1NzY1OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/fisco/bcos/channel/handler/ChannelConnections.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwOToyMTozNlrOG-HLEw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwOToyMTozNlrOG-HLEw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzc4MjQxOQ==", "bodyText": "[PMD Java] Potential violation of Law of Demeter (method chain calls) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/687#discussion_r467782419", "createdAt": "2020-08-10T09:21:36Z", "author": {"login": "sider"}, "path": "src/main/java/org/fisco/bcos/channel/handler/ChannelConnections.java", "diffHunk": "@@ -259,12 +274,22 @@ public ChannelHandlerContext getNetworkConnectionByHost(String host, Integer por\n      */\n     public ChannelHandlerContext setAndGetNetworkConnectionByHost(\n             String host, Integer port, ChannelHandlerContext ctx) {\n+        try {\n+            host = Inet6Address.getByName(host).getHostAddress();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "06b85f9ccc28e71a4ecb9275ea1ff7c0f6364705"}, "originalPosition": 44}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyMjU1NzY2OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/fisco/bcos/channel/handler/ChannelConnections.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwOToyMTozNlrOG-HLFg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwOToyMTozNlrOG-HLFg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzc4MjQyMg==", "bodyText": "[PMD Java] Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nAvoidCatchingGenericException\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_design.html#avoidcatchinggenericexception\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/687#discussion_r467782422", "createdAt": "2020-08-10T09:21:36Z", "author": {"login": "sider"}, "path": "src/main/java/org/fisco/bcos/channel/handler/ChannelConnections.java", "diffHunk": "@@ -259,12 +274,22 @@ public ChannelHandlerContext getNetworkConnectionByHost(String host, Integer por\n      */\n     public ChannelHandlerContext setAndGetNetworkConnectionByHost(\n             String host, Integer port, ChannelHandlerContext ctx) {\n+        try {\n+            host = Inet6Address.getByName(host).getHostAddress();\n+        } catch (Exception e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "06b85f9ccc28e71a4ecb9275ea1ff7c0f6364705"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyMjU1NzY5OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/fisco/bcos/channel/handler/ChannelConnections.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwOToyMTozN1rOG-HLGA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwOToyMTozN1rOG-HLGA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzc4MjQyNA==", "bodyText": "[PMD Java] Logger calls should be surrounded by log level guards. (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nGuardLogStatement\nBest Practices\n2\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_bestpractices.html#guardlogstatement\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/687#discussion_r467782424", "createdAt": "2020-08-10T09:21:37Z", "author": {"login": "sider"}, "path": "src/main/java/org/fisco/bcos/channel/handler/ChannelConnections.java", "diffHunk": "@@ -259,12 +274,22 @@ public ChannelHandlerContext getNetworkConnectionByHost(String host, Integer por\n      */\n     public ChannelHandlerContext setAndGetNetworkConnectionByHost(\n             String host, Integer port, ChannelHandlerContext ctx) {\n+        try {\n+            host = Inet6Address.getByName(host).getHostAddress();\n+        } catch (Exception e) {\n+            logger.error(\"invalid host string format, value: \" + host);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "06b85f9ccc28e71a4ecb9275ea1ff7c0f6364705"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyMjU1NzcwOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/fisco/bcos/channel/handler/ChannelConnections.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwOToyMTozN1rOG-HLGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwOToyMTozN1rOG-HLGQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzc4MjQyNQ==", "bodyText": "[PMD Java] Potential violation of Law of Demeter (method chain calls) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/687#discussion_r467782425", "createdAt": "2020-08-10T09:21:37Z", "author": {"login": "sider"}, "path": "src/main/java/org/fisco/bcos/channel/handler/ChannelConnections.java", "diffHunk": "@@ -259,12 +274,22 @@ public ChannelHandlerContext getNetworkConnectionByHost(String host, Integer por\n      */\n     public ChannelHandlerContext setAndGetNetworkConnectionByHost(\n             String host, Integer port, ChannelHandlerContext ctx) {\n+        try {\n+            host = Inet6Address.getByName(host).getHostAddress();\n+        } catch (Exception e) {\n+            logger.error(\"invalid host string format, value: \" + host);\n+        }\n         String endpoint = host + \":\" + port;\n         return networkConnections.put(endpoint, ctx);\n     }\n \n     public void removeNetworkConnectionByHost(\n             String host, Integer port, ChannelHandlerContext ctx) {\n+        try {\n+            host = Inet6Address.getByName(host).getHostAddress();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "06b85f9ccc28e71a4ecb9275ea1ff7c0f6364705"}, "originalPosition": 55}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyMjU1NzcyOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/fisco/bcos/channel/handler/ChannelConnections.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwOToyMTozN1rOG-HLHA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwOToyMTozN1rOG-HLHA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzc4MjQyOA==", "bodyText": "[PMD Java] Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nAvoidCatchingGenericException\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_design.html#avoidcatchinggenericexception\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/687#discussion_r467782428", "createdAt": "2020-08-10T09:21:37Z", "author": {"login": "sider"}, "path": "src/main/java/org/fisco/bcos/channel/handler/ChannelConnections.java", "diffHunk": "@@ -259,12 +274,22 @@ public ChannelHandlerContext getNetworkConnectionByHost(String host, Integer por\n      */\n     public ChannelHandlerContext setAndGetNetworkConnectionByHost(\n             String host, Integer port, ChannelHandlerContext ctx) {\n+        try {\n+            host = Inet6Address.getByName(host).getHostAddress();\n+        } catch (Exception e) {\n+            logger.error(\"invalid host string format, value: \" + host);\n+        }\n         String endpoint = host + \":\" + port;\n         return networkConnections.put(endpoint, ctx);\n     }\n \n     public void removeNetworkConnectionByHost(\n             String host, Integer port, ChannelHandlerContext ctx) {\n+        try {\n+            host = Inet6Address.getByName(host).getHostAddress();\n+        } catch (Exception e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "06b85f9ccc28e71a4ecb9275ea1ff7c0f6364705"}, "originalPosition": 56}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyMjU1Nzc0OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/fisco/bcos/channel/handler/ChannelConnections.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwOToyMTozN1rOG-HLHg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwOToyMTozN1rOG-HLHg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzc4MjQzMA==", "bodyText": "[PMD Java] Logger calls should be surrounded by log level guards. (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nGuardLogStatement\nBest Practices\n2\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_bestpractices.html#guardlogstatement\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/687#discussion_r467782430", "createdAt": "2020-08-10T09:21:37Z", "author": {"login": "sider"}, "path": "src/main/java/org/fisco/bcos/channel/handler/ChannelConnections.java", "diffHunk": "@@ -259,12 +274,22 @@ public ChannelHandlerContext getNetworkConnectionByHost(String host, Integer por\n      */\n     public ChannelHandlerContext setAndGetNetworkConnectionByHost(\n             String host, Integer port, ChannelHandlerContext ctx) {\n+        try {\n+            host = Inet6Address.getByName(host).getHostAddress();\n+        } catch (Exception e) {\n+            logger.error(\"invalid host string format, value: \" + host);\n+        }\n         String endpoint = host + \":\" + port;\n         return networkConnections.put(endpoint, ctx);\n     }\n \n     public void removeNetworkConnectionByHost(\n             String host, Integer port, ChannelHandlerContext ctx) {\n+        try {\n+            host = Inet6Address.getByName(host).getHostAddress();\n+        } catch (Exception e) {\n+            logger.error(\"invalid host string format, value: \" + host);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "06b85f9ccc28e71a4ecb9275ea1ff7c0f6364705"}, "originalPosition": 57}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyMjU1Nzc1OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/fisco/bcos/channel/handler/ChannelConnections.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwOToyMTozN1rOG-HLIQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwOToyMTozN1rOG-HLIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzc4MjQzMw==", "bodyText": "[PMD Java] Found 'DU'-anomaly for variable 'port' (lines '324'-'352'). (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nDataflowAnomalyAnalysis\nError Prone\n5\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_errorprone.html#dataflowanomalyanalysis\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/687#discussion_r467782433", "createdAt": "2020-08-10T09:21:37Z", "author": {"login": "sider"}, "path": "src/main/java/org/fisco/bcos/channel/handler/ChannelConnections.java", "diffHunk": "@@ -288,18 +313,24 @@ public void init() {\n         for (String connectionStr : connectionsStr) {\n             ConnectionInfo connection = new ConnectionInfo();\n \n-            String[] stringArray = connectionStr.split(\":\");\n-\n-            if (stringArray.length < 1) {\n+            int index = connectionStr.lastIndexOf(':');\n+            if (index == -1) {\n                 throw new IllegalArgumentException(\n-                        \" Invalid configuration, the value should in IP:Port format(eg: 127.0.0.1:1111), value: \"\n+                        \" Invalid configuration, the value should in IP:Port format(eg: 127.0.0.1:1111\u3001[::1]:1111), value: \"\n                                 + connectionStr);\n             }\n \n-            String IP = stringArray[0];\n-            String port = stringArray[1];\n+            String IP = connectionStr.substring(0, index);\n+            String port = connectionStr.substring(index + 1);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "06b85f9ccc28e71a4ecb9275ea1ff7c0f6364705"}, "originalPosition": 80}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyMjU1Nzc2OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/fisco/bcos/channel/handler/ChannelConnections.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwOToyMTozN1rOG-HLIg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwOToyMTozN1rOG-HLIg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzc4MjQzNA==", "bodyText": "[PMD Java] Potential violation of Law of Demeter (method chain calls) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/687#discussion_r467782434", "createdAt": "2020-08-10T09:21:37Z", "author": {"login": "sider"}, "path": "src/main/java/org/fisco/bcos/channel/handler/ChannelConnections.java", "diffHunk": "@@ -288,18 +313,24 @@ public void init() {\n         for (String connectionStr : connectionsStr) {\n             ConnectionInfo connection = new ConnectionInfo();\n \n-            String[] stringArray = connectionStr.split(\":\");\n-\n-            if (stringArray.length < 1) {\n+            int index = connectionStr.lastIndexOf(':');\n+            if (index == -1) {\n                 throw new IllegalArgumentException(\n-                        \" Invalid configuration, the value should in IP:Port format(eg: 127.0.0.1:1111), value: \"\n+                        \" Invalid configuration, the value should in IP:Port format(eg: 127.0.0.1:1111\u3001[::1]:1111), value: \"\n                                 + connectionStr);\n             }\n \n-            String IP = stringArray[0];\n-            String port = stringArray[1];\n+            String IP = connectionStr.substring(0, index);\n+            String port = connectionStr.substring(index + 1);\n \n-            if (!Host.validIP(IP)) {\n+            if (!(NetUtil.isValidIpV4Address(IP) || NetUtil.isValidIpV6Address(IP))) {\n+                throw new IllegalArgumentException(\n+                        \" Invalid configuration, invalid IP string format, value: \" + IP);\n+            }\n+\n+            try {\n+                IP = Inet6Address.getByName(IP).getHostAddress();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "06b85f9ccc28e71a4ecb9275ea1ff7c0f6364705"}, "originalPosition": 89}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyMjU1Nzc4OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/fisco/bcos/channel/handler/ChannelConnections.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwOToyMTozOFrOG-HLJQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwOToyMTozOFrOG-HLJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzc4MjQzNw==", "bodyText": "[PMD Java] Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nAvoidCatchingGenericException\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_design.html#avoidcatchinggenericexception\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/687#discussion_r467782437", "createdAt": "2020-08-10T09:21:38Z", "author": {"login": "sider"}, "path": "src/main/java/org/fisco/bcos/channel/handler/ChannelConnections.java", "diffHunk": "@@ -288,18 +313,24 @@ public void init() {\n         for (String connectionStr : connectionsStr) {\n             ConnectionInfo connection = new ConnectionInfo();\n \n-            String[] stringArray = connectionStr.split(\":\");\n-\n-            if (stringArray.length < 1) {\n+            int index = connectionStr.lastIndexOf(':');\n+            if (index == -1) {\n                 throw new IllegalArgumentException(\n-                        \" Invalid configuration, the value should in IP:Port format(eg: 127.0.0.1:1111), value: \"\n+                        \" Invalid configuration, the value should in IP:Port format(eg: 127.0.0.1:1111\u3001[::1]:1111), value: \"\n                                 + connectionStr);\n             }\n \n-            String IP = stringArray[0];\n-            String port = stringArray[1];\n+            String IP = connectionStr.substring(0, index);\n+            String port = connectionStr.substring(index + 1);\n \n-            if (!Host.validIP(IP)) {\n+            if (!(NetUtil.isValidIpV4Address(IP) || NetUtil.isValidIpV6Address(IP))) {\n+                throw new IllegalArgumentException(\n+                        \" Invalid configuration, invalid IP string format, value: \" + IP);\n+            }\n+\n+            try {\n+                IP = Inet6Address.getByName(IP).getHostAddress();\n+            } catch (Exception e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "06b85f9ccc28e71a4ecb9275ea1ff7c0f6364705"}, "originalPosition": 90}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyMjU1NzgxOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/fisco/bcos/channel/handler/ChannelConnections.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwOToyMTozOFrOG-HLKA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwOToyMTozOFrOG-HLKA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzc4MjQ0MA==", "bodyText": "[PMD Java] Potential violation of Law of Demeter (object not created locally) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/687#discussion_r467782440", "createdAt": "2020-08-10T09:21:38Z", "author": {"login": "sider"}, "path": "src/main/java/org/fisco/bcos/channel/handler/ChannelConnections.java", "diffHunk": "@@ -490,7 +527,29 @@ public SslContext initSMSslContext()\n                     getGmSslKey().getInputStream());\n         }\n \n-        logger.info(\" Has no SM Ssl certificate configuration \");\n+        PathMatchingResourcePatternResolver resolver = new PathMatchingResourcePatternResolver();\n+        Resource gmCaResource = resolver.getResource(GM_CA_CERT);\n+        Resource gmSslResource = resolver.getResource(GM_SSL_CERT);\n+        Resource gmSslKeyResource = resolver.getResource(GM_SSL_KEY);\n+        Resource gmEnSslResource = resolver.getResource(GM_EN_SSL_CERT);\n+        Resource gmEnSslKeyResource = resolver.getResource(GM_EN_SSL_KEY);\n+\n+        // The client's SM SSL default certificate exists\n+        if (gmCaResource.exists()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "06b85f9ccc28e71a4ecb9275ea1ff7c0f6364705"}, "originalPosition": 120}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyMjU1NzgzOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/fisco/bcos/channel/handler/ChannelConnections.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwOToyMTozOFrOG-HLKg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwOToyMTozOFrOG-HLKg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzc4MjQ0Mg==", "bodyText": "[PMD Java] Potential violation of Law of Demeter (object not created locally) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/687#discussion_r467782442", "createdAt": "2020-08-10T09:21:38Z", "author": {"login": "sider"}, "path": "src/main/java/org/fisco/bcos/channel/handler/ChannelConnections.java", "diffHunk": "@@ -490,7 +527,29 @@ public SslContext initSMSslContext()\n                     getGmSslKey().getInputStream());\n         }\n \n-        logger.info(\" Has no SM Ssl certificate configuration \");\n+        PathMatchingResourcePatternResolver resolver = new PathMatchingResourcePatternResolver();\n+        Resource gmCaResource = resolver.getResource(GM_CA_CERT);\n+        Resource gmSslResource = resolver.getResource(GM_SSL_CERT);\n+        Resource gmSslKeyResource = resolver.getResource(GM_SSL_KEY);\n+        Resource gmEnSslResource = resolver.getResource(GM_EN_SSL_CERT);\n+        Resource gmEnSslKeyResource = resolver.getResource(GM_EN_SSL_KEY);\n+\n+        // The client's SM SSL default certificate exists\n+        if (gmCaResource.exists()\n+                && gmSslResource.exists()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "06b85f9ccc28e71a4ecb9275ea1ff7c0f6364705"}, "originalPosition": 121}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyMjU1Nzg0OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/fisco/bcos/channel/handler/ChannelConnections.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwOToyMTozOFrOG-HLLA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwOToyMTozOFrOG-HLLA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzc4MjQ0NA==", "bodyText": "[PMD Java] Potential violation of Law of Demeter (object not created locally) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/687#discussion_r467782444", "createdAt": "2020-08-10T09:21:38Z", "author": {"login": "sider"}, "path": "src/main/java/org/fisco/bcos/channel/handler/ChannelConnections.java", "diffHunk": "@@ -490,7 +527,29 @@ public SslContext initSMSslContext()\n                     getGmSslKey().getInputStream());\n         }\n \n-        logger.info(\" Has no SM Ssl certificate configuration \");\n+        PathMatchingResourcePatternResolver resolver = new PathMatchingResourcePatternResolver();\n+        Resource gmCaResource = resolver.getResource(GM_CA_CERT);\n+        Resource gmSslResource = resolver.getResource(GM_SSL_CERT);\n+        Resource gmSslKeyResource = resolver.getResource(GM_SSL_KEY);\n+        Resource gmEnSslResource = resolver.getResource(GM_EN_SSL_CERT);\n+        Resource gmEnSslKeyResource = resolver.getResource(GM_EN_SSL_KEY);\n+\n+        // The client's SM SSL default certificate exists\n+        if (gmCaResource.exists()\n+                && gmSslResource.exists()\n+                && gmSslKeyResource.exists()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "06b85f9ccc28e71a4ecb9275ea1ff7c0f6364705"}, "originalPosition": 122}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyMjU1Nzg1OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/fisco/bcos/channel/handler/ChannelConnections.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwOToyMTozOFrOG-HLLg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwOToyMTozOFrOG-HLLg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzc4MjQ0Ng==", "bodyText": "[PMD Java] Potential violation of Law of Demeter (object not created locally) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/687#discussion_r467782446", "createdAt": "2020-08-10T09:21:38Z", "author": {"login": "sider"}, "path": "src/main/java/org/fisco/bcos/channel/handler/ChannelConnections.java", "diffHunk": "@@ -490,7 +527,29 @@ public SslContext initSMSslContext()\n                     getGmSslKey().getInputStream());\n         }\n \n-        logger.info(\" Has no SM Ssl certificate configuration \");\n+        PathMatchingResourcePatternResolver resolver = new PathMatchingResourcePatternResolver();\n+        Resource gmCaResource = resolver.getResource(GM_CA_CERT);\n+        Resource gmSslResource = resolver.getResource(GM_SSL_CERT);\n+        Resource gmSslKeyResource = resolver.getResource(GM_SSL_KEY);\n+        Resource gmEnSslResource = resolver.getResource(GM_EN_SSL_CERT);\n+        Resource gmEnSslKeyResource = resolver.getResource(GM_EN_SSL_KEY);\n+\n+        // The client's SM SSL default certificate exists\n+        if (gmCaResource.exists()\n+                && gmSslResource.exists()\n+                && gmSslKeyResource.exists()\n+                && gmEnSslKeyResource.exists()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "06b85f9ccc28e71a4ecb9275ea1ff7c0f6364705"}, "originalPosition": 123}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyMjU1Nzg3OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/fisco/bcos/channel/handler/ChannelConnections.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwOToyMTozOFrOG-HLLw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwOToyMTozOFrOG-HLLw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzc4MjQ0Nw==", "bodyText": "[PMD Java] Potential violation of Law of Demeter (object not created locally) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/687#discussion_r467782447", "createdAt": "2020-08-10T09:21:38Z", "author": {"login": "sider"}, "path": "src/main/java/org/fisco/bcos/channel/handler/ChannelConnections.java", "diffHunk": "@@ -490,7 +527,29 @@ public SslContext initSMSslContext()\n                     getGmSslKey().getInputStream());\n         }\n \n-        logger.info(\" Has no SM Ssl certificate configuration \");\n+        PathMatchingResourcePatternResolver resolver = new PathMatchingResourcePatternResolver();\n+        Resource gmCaResource = resolver.getResource(GM_CA_CERT);\n+        Resource gmSslResource = resolver.getResource(GM_SSL_CERT);\n+        Resource gmSslKeyResource = resolver.getResource(GM_SSL_KEY);\n+        Resource gmEnSslResource = resolver.getResource(GM_EN_SSL_CERT);\n+        Resource gmEnSslKeyResource = resolver.getResource(GM_EN_SSL_KEY);\n+\n+        // The client's SM SSL default certificate exists\n+        if (gmCaResource.exists()\n+                && gmSslResource.exists()\n+                && gmSslKeyResource.exists()\n+                && gmEnSslKeyResource.exists()\n+                && gmEnSslResource.exists()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "06b85f9ccc28e71a4ecb9275ea1ff7c0f6364705"}, "originalPosition": 124}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyMjU1Nzg5OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/fisco/bcos/channel/handler/ChannelConnections.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwOToyMTozOVrOG-HLMg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwOToyMTozOVrOG-HLMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzc4MjQ1MA==", "bodyText": "[PMD Java] Potential violation of Law of Demeter (object not created locally) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/687#discussion_r467782450", "createdAt": "2020-08-10T09:21:39Z", "author": {"login": "sider"}, "path": "src/main/java/org/fisco/bcos/channel/handler/ChannelConnections.java", "diffHunk": "@@ -510,9 +569,14 @@ private SslContext initSslContext() throws SSLException {\n \n             // check if ca.crt exist\n             if (Objects.isNull(caResource) || !caResource.exists()) {\n-                throw new RuntimeException(\n-                        (Objects.nonNull(caResource) ? \"ca.crt\" : caResource.getFilename())\n-                                + \" not exist \");\n+                Resource resource = resolver.getResource(CA_CERT);\n+                if (Objects.nonNull(resource) && resource.exists()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "06b85f9ccc28e71a4ecb9275ea1ff7c0f6364705"}, "originalPosition": 146}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyMjU1NzkxOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/fisco/bcos/channel/handler/ChannelConnections.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwOToyMTozOVrOG-HLMw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwOToyMTozOVrOG-HLMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzc4MjQ1MQ==", "bodyText": "[PMD Java] Found 'DU'-anomaly for variable 'caResource' (lines '574'-'630'). (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nDataflowAnomalyAnalysis\nError Prone\n5\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_errorprone.html#dataflowanomalyanalysis\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/687#discussion_r467782451", "createdAt": "2020-08-10T09:21:39Z", "author": {"login": "sider"}, "path": "src/main/java/org/fisco/bcos/channel/handler/ChannelConnections.java", "diffHunk": "@@ -510,9 +569,14 @@ private SslContext initSslContext() throws SSLException {\n \n             // check if ca.crt exist\n             if (Objects.isNull(caResource) || !caResource.exists()) {\n-                throw new RuntimeException(\n-                        (Objects.nonNull(caResource) ? \"ca.crt\" : caResource.getFilename())\n-                                + \" not exist \");\n+                Resource resource = resolver.getResource(CA_CERT);\n+                if (Objects.nonNull(resource) && resource.exists()) {\n+                    caResource = resource;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "06b85f9ccc28e71a4ecb9275ea1ff7c0f6364705"}, "originalPosition": 147}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyMjU1NzkzOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/fisco/bcos/channel/handler/ChannelConnections.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwOToyMTozOVrOG-HLNg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwOToyMTozOVrOG-HLNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzc4MjQ1NA==", "bodyText": "[PMD Java] Avoid throwing raw exception types. (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nAvoidThrowingRawExceptionTypes\nDesign\n1\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_design.html#avoidthrowingrawexceptiontypes\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/687#discussion_r467782454", "createdAt": "2020-08-10T09:21:39Z", "author": {"login": "sider"}, "path": "src/main/java/org/fisco/bcos/channel/handler/ChannelConnections.java", "diffHunk": "@@ -510,9 +569,14 @@ private SslContext initSslContext() throws SSLException {\n \n             // check if ca.crt exist\n             if (Objects.isNull(caResource) || !caResource.exists()) {\n-                throw new RuntimeException(\n-                        (Objects.nonNull(caResource) ? \"ca.crt\" : caResource.getFilename())\n-                                + \" not exist \");\n+                Resource resource = resolver.getResource(CA_CERT);\n+                if (Objects.nonNull(resource) && resource.exists()) {\n+                    caResource = resource;\n+                } else {\n+                    throw new RuntimeException(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "06b85f9ccc28e71a4ecb9275ea1ff7c0f6364705"}, "originalPosition": 149}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyMjU1Nzk0OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/fisco/bcos/channel/handler/ChannelConnections.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwOToyMTozOVrOG-HLNw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwOToyMTozOVrOG-HLNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzc4MjQ1NQ==", "bodyText": "[PMD Java] Potential violation of Law of Demeter (object not created locally) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/687#discussion_r467782455", "createdAt": "2020-08-10T09:21:39Z", "author": {"login": "sider"}, "path": "src/main/java/org/fisco/bcos/channel/handler/ChannelConnections.java", "diffHunk": "@@ -510,9 +569,14 @@ private SslContext initSslContext() throws SSLException {\n \n             // check if ca.crt exist\n             if (Objects.isNull(caResource) || !caResource.exists()) {\n-                throw new RuntimeException(\n-                        (Objects.nonNull(caResource) ? \"ca.crt\" : caResource.getFilename())\n-                                + \" not exist \");\n+                Resource resource = resolver.getResource(CA_CERT);\n+                if (Objects.nonNull(resource) && resource.exists()) {\n+                    caResource = resource;\n+                } else {\n+                    throw new RuntimeException(\n+                            (Objects.nonNull(caResource) ? \"ca.crt\" : caResource.getFilename())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "06b85f9ccc28e71a4ecb9275ea1ff7c0f6364705"}, "originalPosition": 150}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyMjU1Nzk1OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/fisco/bcos/channel/handler/ChannelConnections.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwOToyMTozOVrOG-HLOQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwOToyMTozOVrOG-HLOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzc4MjQ1Nw==", "bodyText": "[PMD Java] Found 'DD'-anomaly for variable 'peer' (lines '637'-'637'). (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nDataflowAnomalyAnalysis\nError Prone\n5\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_errorprone.html#dataflowanomalyanalysis\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/687#discussion_r467782457", "createdAt": "2020-08-10T09:21:39Z", "author": {"login": "sider"}, "path": "src/main/java/org/fisco/bcos/channel/handler/ChannelConnections.java", "diffHunk": "@@ -568,9 +633,9 @@ public void heartbeat() {\n \n         List<Tuple2<String, ChannelHandlerContext>> tuple2List = new ArrayList<>();\n \n-        for (ConnectionInfo connectionInfo : connections) {\n-            String peer = connectionInfo.getHost() + \":\" + connectionInfo.getPort();\n-            ChannelHandlerContext ctx = networkConnections.get(peer);\n+        for (Map.Entry<String, ChannelHandlerContext> entry : networkConnections.entrySet()) {\n+            String peer = entry.getKey();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "06b85f9ccc28e71a4ecb9275ea1ff7c0f6364705"}, "originalPosition": 174}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyMjU1Nzk3OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/fisco/bcos/channel/handler/ChannelConnections.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwOToyMTo0MFrOG-HLOw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwOToyMTo0MFrOG-HLOw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzc4MjQ1OQ==", "bodyText": "[PMD Java] Found 'DU'-anomaly for variable 'peer' (lines '637'-'650'). (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nDataflowAnomalyAnalysis\nError Prone\n5\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_errorprone.html#dataflowanomalyanalysis\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/687#discussion_r467782459", "createdAt": "2020-08-10T09:21:40Z", "author": {"login": "sider"}, "path": "src/main/java/org/fisco/bcos/channel/handler/ChannelConnections.java", "diffHunk": "@@ -568,9 +633,9 @@ public void heartbeat() {\n \n         List<Tuple2<String, ChannelHandlerContext>> tuple2List = new ArrayList<>();\n \n-        for (ConnectionInfo connectionInfo : connections) {\n-            String peer = connectionInfo.getHost() + \":\" + connectionInfo.getPort();\n-            ChannelHandlerContext ctx = networkConnections.get(peer);\n+        for (Map.Entry<String, ChannelHandlerContext> entry : networkConnections.entrySet()) {\n+            String peer = entry.getKey();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "06b85f9ccc28e71a4ecb9275ea1ff7c0f6364705"}, "originalPosition": 174}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyMjU1Nzk4OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/fisco/bcos/web3j/abi/TypeDecoder.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwOToyMTo0MFrOG-HLPA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwOToyMTo0MFrOG-HLPA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzc4MjQ2MA==", "bodyText": "[PMD Java] The method 'decode(String, int, Class)' has a cyclomatic complexity of 10. (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nCyclomaticComplexity\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_design.html#cyclomaticcomplexity\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/687#discussion_r467782460", "createdAt": "2020-08-10T09:21:40Z", "author": {"login": "sider"}, "path": "src/main/java/org/fisco/bcos/web3j/abi/TypeDecoder.java", "diffHunk": "@@ -36,7 +36,7 @@\n     static final int MAX_BYTE_LENGTH_FOR_HEX_STRING = Type.MAX_BYTE_LENGTH << 1;\n \n     @SuppressWarnings(\"unchecked\")\n-    static <T extends Type> T decode(String input, int offset, Class<T> type) {\n+    public static <T extends Type> T decode(String input, int offset, Class<T> type) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "06b85f9ccc28e71a4ecb9275ea1ff7c0f6364705"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyMjU1ODAxOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/fisco/bcos/web3j/abi/wrapper/ABICodecJsonWrapper.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwOToyMTo0MFrOG-HLPw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwOToyMTo0MFrOG-HLPw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzc4MjQ2Mw==", "bodyText": "[PMD Java] The class 'ABICodecJsonWrapper' has a total cyclomatic complexity of 80 (highest 35). (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nCyclomaticComplexity\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_design.html#cyclomaticcomplexity\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/687#discussion_r467782463", "createdAt": "2020-08-10T09:21:40Z", "author": {"login": "sider"}, "path": "src/main/java/org/fisco/bcos/web3j/abi/wrapper/ABICodecJsonWrapper.java", "diffHunk": "@@ -0,0 +1,497 @@\n+package org.fisco.bcos.web3j.abi.wrapper;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.databind.node.ArrayNode;\n+import com.fasterxml.jackson.databind.node.JsonNodeFactory;\n+import java.io.IOException;\n+import java.security.InvalidParameterException;\n+import java.util.ArrayList;\n+import java.util.Base64;\n+import java.util.Iterator;\n+import java.util.List;\n+import org.fisco.bcos.web3j.abi.datatypes.Address;\n+import org.fisco.bcos.web3j.abi.datatypes.Bool;\n+import org.fisco.bcos.web3j.abi.datatypes.Bytes;\n+import org.fisco.bcos.web3j.abi.datatypes.DynamicBytes;\n+import org.fisco.bcos.web3j.abi.datatypes.Utf8String;\n+import org.fisco.bcos.web3j.abi.datatypes.generated.Int256;\n+import org.fisco.bcos.web3j.abi.datatypes.generated.Uint256;\n+import org.fisco.bcos.web3j.abi.wrapper.ABIObject.ListType;\n+import org.fisco.bcos.web3j.protocol.ObjectMapperFactory;\n+import org.fisco.bcos.web3j.utils.Numeric;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public class ABICodecJsonWrapper {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "06b85f9ccc28e71a4ecb9275ea1ff7c0f6364705"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyMjU1ODAzOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/fisco/bcos/web3j/abi/wrapper/ABICodecJsonWrapper.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwOToyMTo0MFrOG-HLQQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwOToyMTo0MFrOG-HLQQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzc4MjQ2NQ==", "bodyText": "[PMD Java] Found non-transient, non-static member. Please mark as transient or provide accessors. (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nBeanMembersShouldSerialize\nError Prone\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_errorprone.html#beanmembersshouldserialize\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/687#discussion_r467782465", "createdAt": "2020-08-10T09:21:40Z", "author": {"login": "sider"}, "path": "src/main/java/org/fisco/bcos/web3j/abi/wrapper/ABICodecJsonWrapper.java", "diffHunk": "@@ -0,0 +1,497 @@\n+package org.fisco.bcos.web3j.abi.wrapper;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.databind.node.ArrayNode;\n+import com.fasterxml.jackson.databind.node.JsonNodeFactory;\n+import java.io.IOException;\n+import java.security.InvalidParameterException;\n+import java.util.ArrayList;\n+import java.util.Base64;\n+import java.util.Iterator;\n+import java.util.List;\n+import org.fisco.bcos.web3j.abi.datatypes.Address;\n+import org.fisco.bcos.web3j.abi.datatypes.Bool;\n+import org.fisco.bcos.web3j.abi.datatypes.Bytes;\n+import org.fisco.bcos.web3j.abi.datatypes.DynamicBytes;\n+import org.fisco.bcos.web3j.abi.datatypes.Utf8String;\n+import org.fisco.bcos.web3j.abi.datatypes.generated.Int256;\n+import org.fisco.bcos.web3j.abi.datatypes.generated.Uint256;\n+import org.fisco.bcos.web3j.abi.wrapper.ABIObject.ListType;\n+import org.fisco.bcos.web3j.protocol.ObjectMapperFactory;\n+import org.fisco.bcos.web3j.utils.Numeric;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public class ABICodecJsonWrapper {\n+\n+    private static final Logger logger = LoggerFactory.getLogger(ABICodecJsonWrapper.class);\n+\n+    private ObjectMapper objectMapper = ObjectMapperFactory.getObjectMapper();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "06b85f9ccc28e71a4ecb9275ea1ff7c0f6364705"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyMjU1ODA0OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/fisco/bcos/web3j/abi/wrapper/ABICodecJsonWrapper.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwOToyMTo0MFrOG-HLQw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwOToyMTo0MFrOG-HLQw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzc4MjQ2Nw==", "bodyText": "[PMD Java] Private field 'objectMapper' could be made final; it is only initialized in the declaration or constructor. (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nImmutableField\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_design.html#immutablefield\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/687#discussion_r467782467", "createdAt": "2020-08-10T09:21:40Z", "author": {"login": "sider"}, "path": "src/main/java/org/fisco/bcos/web3j/abi/wrapper/ABICodecJsonWrapper.java", "diffHunk": "@@ -0,0 +1,497 @@\n+package org.fisco.bcos.web3j.abi.wrapper;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.databind.node.ArrayNode;\n+import com.fasterxml.jackson.databind.node.JsonNodeFactory;\n+import java.io.IOException;\n+import java.security.InvalidParameterException;\n+import java.util.ArrayList;\n+import java.util.Base64;\n+import java.util.Iterator;\n+import java.util.List;\n+import org.fisco.bcos.web3j.abi.datatypes.Address;\n+import org.fisco.bcos.web3j.abi.datatypes.Bool;\n+import org.fisco.bcos.web3j.abi.datatypes.Bytes;\n+import org.fisco.bcos.web3j.abi.datatypes.DynamicBytes;\n+import org.fisco.bcos.web3j.abi.datatypes.Utf8String;\n+import org.fisco.bcos.web3j.abi.datatypes.generated.Int256;\n+import org.fisco.bcos.web3j.abi.datatypes.generated.Uint256;\n+import org.fisco.bcos.web3j.abi.wrapper.ABIObject.ListType;\n+import org.fisco.bcos.web3j.protocol.ObjectMapperFactory;\n+import org.fisco.bcos.web3j.utils.Numeric;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public class ABICodecJsonWrapper {\n+\n+    private static final Logger logger = LoggerFactory.getLogger(ABICodecJsonWrapper.class);\n+\n+    private ObjectMapper objectMapper = ObjectMapperFactory.getObjectMapper();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "06b85f9ccc28e71a4ecb9275ea1ff7c0f6364705"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyMjU1ODA4OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/fisco/bcos/web3j/abi/wrapper/ABICodecJsonWrapper.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwOToyMTo0MVrOG-HLRw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwOToyMTo0MVrOG-HLRw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzc4MjQ3MQ==", "bodyText": "[PMD Java] A method or constructor should not explicitly declare unchecked exceptions in its 'throws' clause (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nAvoidUncheckedExceptionsInSignatures\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_design.html#avoiduncheckedexceptionsinsignatures\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/687#discussion_r467782471", "createdAt": "2020-08-10T09:21:41Z", "author": {"login": "sider"}, "path": "src/main/java/org/fisco/bcos/web3j/abi/wrapper/ABICodecJsonWrapper.java", "diffHunk": "@@ -0,0 +1,497 @@\n+package org.fisco.bcos.web3j.abi.wrapper;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.databind.node.ArrayNode;\n+import com.fasterxml.jackson.databind.node.JsonNodeFactory;\n+import java.io.IOException;\n+import java.security.InvalidParameterException;\n+import java.util.ArrayList;\n+import java.util.Base64;\n+import java.util.Iterator;\n+import java.util.List;\n+import org.fisco.bcos.web3j.abi.datatypes.Address;\n+import org.fisco.bcos.web3j.abi.datatypes.Bool;\n+import org.fisco.bcos.web3j.abi.datatypes.Bytes;\n+import org.fisco.bcos.web3j.abi.datatypes.DynamicBytes;\n+import org.fisco.bcos.web3j.abi.datatypes.Utf8String;\n+import org.fisco.bcos.web3j.abi.datatypes.generated.Int256;\n+import org.fisco.bcos.web3j.abi.datatypes.generated.Uint256;\n+import org.fisco.bcos.web3j.abi.wrapper.ABIObject.ListType;\n+import org.fisco.bcos.web3j.protocol.ObjectMapperFactory;\n+import org.fisco.bcos.web3j.utils.Numeric;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public class ABICodecJsonWrapper {\n+\n+    private static final Logger logger = LoggerFactory.getLogger(ABICodecJsonWrapper.class);\n+\n+    private ObjectMapper objectMapper = ObjectMapperFactory.getObjectMapper();\n+\n+    private void errorReport(String path, String expected, String actual)\n+            throws InvalidParameterException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "06b85f9ccc28e71a4ecb9275ea1ff7c0f6364705"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyMjU1ODA5OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/fisco/bcos/web3j/abi/wrapper/ABICodecJsonWrapper.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwOToyMTo0MVrOG-HLSQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwOToyMTo0MVrOG-HLSQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzc4MjQ3Mw==", "bodyText": "[PMD Java] The method 'encodeNode(String, ABIObject, JsonNode)' has a cyclomatic complexity of 35. (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nCyclomaticComplexity\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_design.html#cyclomaticcomplexity\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/687#discussion_r467782473", "createdAt": "2020-08-10T09:21:41Z", "author": {"login": "sider"}, "path": "src/main/java/org/fisco/bcos/web3j/abi/wrapper/ABICodecJsonWrapper.java", "diffHunk": "@@ -0,0 +1,497 @@\n+package org.fisco.bcos.web3j.abi.wrapper;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.databind.node.ArrayNode;\n+import com.fasterxml.jackson.databind.node.JsonNodeFactory;\n+import java.io.IOException;\n+import java.security.InvalidParameterException;\n+import java.util.ArrayList;\n+import java.util.Base64;\n+import java.util.Iterator;\n+import java.util.List;\n+import org.fisco.bcos.web3j.abi.datatypes.Address;\n+import org.fisco.bcos.web3j.abi.datatypes.Bool;\n+import org.fisco.bcos.web3j.abi.datatypes.Bytes;\n+import org.fisco.bcos.web3j.abi.datatypes.DynamicBytes;\n+import org.fisco.bcos.web3j.abi.datatypes.Utf8String;\n+import org.fisco.bcos.web3j.abi.datatypes.generated.Int256;\n+import org.fisco.bcos.web3j.abi.datatypes.generated.Uint256;\n+import org.fisco.bcos.web3j.abi.wrapper.ABIObject.ListType;\n+import org.fisco.bcos.web3j.protocol.ObjectMapperFactory;\n+import org.fisco.bcos.web3j.utils.Numeric;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public class ABICodecJsonWrapper {\n+\n+    private static final Logger logger = LoggerFactory.getLogger(ABICodecJsonWrapper.class);\n+\n+    private ObjectMapper objectMapper = ObjectMapperFactory.getObjectMapper();\n+\n+    private void errorReport(String path, String expected, String actual)\n+            throws InvalidParameterException {\n+        String errorMessage =\n+                \"Arguments mismatch: \" + path + \", expected: \" + expected + \", actual: \" + actual;\n+        logger.error(errorMessage);\n+        throw new InvalidParameterException(errorMessage);\n+    }\n+\n+    private ABIObject encodeNode(String path, ABIObject template, JsonNode node) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "06b85f9ccc28e71a4ecb9275ea1ff7c0f6364705"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyMjU1ODEwOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/fisco/bcos/web3j/abi/wrapper/ABICodecJsonWrapper.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwOToyMTo0MVrOG-HLSg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwOToyMTo0MVrOG-HLSg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzc4MjQ3NA==", "bodyText": "[PMD Java] Avoid really long methods. (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nExcessiveMethodLength\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_design.html#excessivemethodlength\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/687#discussion_r467782474", "createdAt": "2020-08-10T09:21:41Z", "author": {"login": "sider"}, "path": "src/main/java/org/fisco/bcos/web3j/abi/wrapper/ABICodecJsonWrapper.java", "diffHunk": "@@ -0,0 +1,497 @@\n+package org.fisco.bcos.web3j.abi.wrapper;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.databind.node.ArrayNode;\n+import com.fasterxml.jackson.databind.node.JsonNodeFactory;\n+import java.io.IOException;\n+import java.security.InvalidParameterException;\n+import java.util.ArrayList;\n+import java.util.Base64;\n+import java.util.Iterator;\n+import java.util.List;\n+import org.fisco.bcos.web3j.abi.datatypes.Address;\n+import org.fisco.bcos.web3j.abi.datatypes.Bool;\n+import org.fisco.bcos.web3j.abi.datatypes.Bytes;\n+import org.fisco.bcos.web3j.abi.datatypes.DynamicBytes;\n+import org.fisco.bcos.web3j.abi.datatypes.Utf8String;\n+import org.fisco.bcos.web3j.abi.datatypes.generated.Int256;\n+import org.fisco.bcos.web3j.abi.datatypes.generated.Uint256;\n+import org.fisco.bcos.web3j.abi.wrapper.ABIObject.ListType;\n+import org.fisco.bcos.web3j.protocol.ObjectMapperFactory;\n+import org.fisco.bcos.web3j.utils.Numeric;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public class ABICodecJsonWrapper {\n+\n+    private static final Logger logger = LoggerFactory.getLogger(ABICodecJsonWrapper.class);\n+\n+    private ObjectMapper objectMapper = ObjectMapperFactory.getObjectMapper();\n+\n+    private void errorReport(String path, String expected, String actual)\n+            throws InvalidParameterException {\n+        String errorMessage =\n+                \"Arguments mismatch: \" + path + \", expected: \" + expected + \", actual: \" + actual;\n+        logger.error(errorMessage);\n+        throw new InvalidParameterException(errorMessage);\n+    }\n+\n+    private ABIObject encodeNode(String path, ABIObject template, JsonNode node) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "06b85f9ccc28e71a4ecb9275ea1ff7c0f6364705"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyMjU4OTU5OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/fisco/bcos/channel/handler/ChannelConnections.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwOTozMDozOVrOG-HdrA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwOTozMDozOVrOG-HdrA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzc4NzE4MA==", "bodyText": "[PMD Java] Potential violation of Law of Demeter (method chain calls) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/687#discussion_r467787180", "createdAt": "2020-08-10T09:30:39Z", "author": {"login": "sider"}, "path": "src/main/java/org/fisco/bcos/channel/handler/ChannelConnections.java", "diffHunk": "@@ -244,6 +260,11 @@ public ChannelHandlerContext randomNetworkConnection(\n     }\n \n     public ChannelHandlerContext getNetworkConnectionByHost(String host, Integer port) {\n+        try {\n+            host = Inet6Address.getByName(host).getHostAddress();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ca4399d3ff5b0e743785dbb50a2d9028a17a3bfb"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyMjU4OTYzOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/fisco/bcos/channel/handler/ChannelConnections.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwOTozMDozOVrOG-HdsA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwOTozMDozOVrOG-HdsA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzc4NzE4NA==", "bodyText": "[PMD Java] Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nAvoidCatchingGenericException\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_design.html#avoidcatchinggenericexception\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/687#discussion_r467787184", "createdAt": "2020-08-10T09:30:39Z", "author": {"login": "sider"}, "path": "src/main/java/org/fisco/bcos/channel/handler/ChannelConnections.java", "diffHunk": "@@ -244,6 +260,11 @@ public ChannelHandlerContext randomNetworkConnection(\n     }\n \n     public ChannelHandlerContext getNetworkConnectionByHost(String host, Integer port) {\n+        try {\n+            host = Inet6Address.getByName(host).getHostAddress();\n+        } catch (Exception e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ca4399d3ff5b0e743785dbb50a2d9028a17a3bfb"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyMjU4OTY1OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/fisco/bcos/channel/handler/ChannelConnections.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwOTozMDozOVrOG-HdtA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwOTozMDozOVrOG-HdtA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzc4NzE4OA==", "bodyText": "[PMD Java] Logger calls should be surrounded by log level guards. (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nGuardLogStatement\nBest Practices\n2\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_bestpractices.html#guardlogstatement\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/687#discussion_r467787188", "createdAt": "2020-08-10T09:30:39Z", "author": {"login": "sider"}, "path": "src/main/java/org/fisco/bcos/channel/handler/ChannelConnections.java", "diffHunk": "@@ -244,6 +260,11 @@ public ChannelHandlerContext randomNetworkConnection(\n     }\n \n     public ChannelHandlerContext getNetworkConnectionByHost(String host, Integer port) {\n+        try {\n+            host = Inet6Address.getByName(host).getHostAddress();\n+        } catch (Exception e) {\n+            logger.error(\"invalid host string format, value: \" + host);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ca4399d3ff5b0e743785dbb50a2d9028a17a3bfb"}, "originalPosition": 47}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyMjU4OTY3OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/fisco/bcos/channel/handler/ChannelConnections.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwOTozMDo0MFrOG-Hdtg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwOTozMDo0MFrOG-Hdtg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzc4NzE5MA==", "bodyText": "[PMD Java] Potential violation of Law of Demeter (method chain calls) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/687#discussion_r467787190", "createdAt": "2020-08-10T09:30:40Z", "author": {"login": "sider"}, "path": "src/main/java/org/fisco/bcos/channel/handler/ChannelConnections.java", "diffHunk": "@@ -259,12 +280,22 @@ public ChannelHandlerContext getNetworkConnectionByHost(String host, Integer por\n      */\n     public ChannelHandlerContext setAndGetNetworkConnectionByHost(\n             String host, Integer port, ChannelHandlerContext ctx) {\n+        try {\n+            host = Inet6Address.getByName(host).getHostAddress();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ca4399d3ff5b0e743785dbb50a2d9028a17a3bfb"}, "originalPosition": 57}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyMjU4OTY5OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/fisco/bcos/channel/handler/ChannelConnections.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwOTozMDo0MFrOG-HduQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwOTozMDo0MFrOG-HduQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzc4NzE5Mw==", "bodyText": "[PMD Java] Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nAvoidCatchingGenericException\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_design.html#avoidcatchinggenericexception\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/687#discussion_r467787193", "createdAt": "2020-08-10T09:30:40Z", "author": {"login": "sider"}, "path": "src/main/java/org/fisco/bcos/channel/handler/ChannelConnections.java", "diffHunk": "@@ -259,12 +280,22 @@ public ChannelHandlerContext getNetworkConnectionByHost(String host, Integer por\n      */\n     public ChannelHandlerContext setAndGetNetworkConnectionByHost(\n             String host, Integer port, ChannelHandlerContext ctx) {\n+        try {\n+            host = Inet6Address.getByName(host).getHostAddress();\n+        } catch (Exception e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ca4399d3ff5b0e743785dbb50a2d9028a17a3bfb"}, "originalPosition": 58}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyMjU4OTcxOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/fisco/bcos/channel/handler/ChannelConnections.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwOTozMDo0MFrOG-Hduw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwOTozMDo0MFrOG-Hduw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzc4NzE5NQ==", "bodyText": "[PMD Java] Logger calls should be surrounded by log level guards. (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nGuardLogStatement\nBest Practices\n2\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_bestpractices.html#guardlogstatement\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/687#discussion_r467787195", "createdAt": "2020-08-10T09:30:40Z", "author": {"login": "sider"}, "path": "src/main/java/org/fisco/bcos/channel/handler/ChannelConnections.java", "diffHunk": "@@ -259,12 +280,22 @@ public ChannelHandlerContext getNetworkConnectionByHost(String host, Integer por\n      */\n     public ChannelHandlerContext setAndGetNetworkConnectionByHost(\n             String host, Integer port, ChannelHandlerContext ctx) {\n+        try {\n+            host = Inet6Address.getByName(host).getHostAddress();\n+        } catch (Exception e) {\n+            logger.error(\"invalid host string format, value: \" + host);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ca4399d3ff5b0e743785dbb50a2d9028a17a3bfb"}, "originalPosition": 59}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyMjU4OTcyOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/fisco/bcos/channel/handler/ChannelConnections.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwOTozMDo0MFrOG-HdvA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwOTozMDo0MFrOG-HdvA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzc4NzE5Ng==", "bodyText": "[PMD Java] Potential violation of Law of Demeter (method chain calls) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/687#discussion_r467787196", "createdAt": "2020-08-10T09:30:40Z", "author": {"login": "sider"}, "path": "src/main/java/org/fisco/bcos/channel/handler/ChannelConnections.java", "diffHunk": "@@ -259,12 +280,22 @@ public ChannelHandlerContext getNetworkConnectionByHost(String host, Integer por\n      */\n     public ChannelHandlerContext setAndGetNetworkConnectionByHost(\n             String host, Integer port, ChannelHandlerContext ctx) {\n+        try {\n+            host = Inet6Address.getByName(host).getHostAddress();\n+        } catch (Exception e) {\n+            logger.error(\"invalid host string format, value: \" + host);\n+        }\n         String endpoint = host + \":\" + port;\n         return networkConnections.put(endpoint, ctx);\n     }\n \n     public void removeNetworkConnectionByHost(\n             String host, Integer port, ChannelHandlerContext ctx) {\n+        try {\n+            host = Inet6Address.getByName(host).getHostAddress();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ca4399d3ff5b0e743785dbb50a2d9028a17a3bfb"}, "originalPosition": 68}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyMjU4OTczOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/fisco/bcos/channel/handler/ChannelConnections.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwOTozMDo0MFrOG-Hdvg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwOTozMDo0MFrOG-Hdvg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzc4NzE5OA==", "bodyText": "[PMD Java] Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nAvoidCatchingGenericException\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_design.html#avoidcatchinggenericexception\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/687#discussion_r467787198", "createdAt": "2020-08-10T09:30:40Z", "author": {"login": "sider"}, "path": "src/main/java/org/fisco/bcos/channel/handler/ChannelConnections.java", "diffHunk": "@@ -259,12 +280,22 @@ public ChannelHandlerContext getNetworkConnectionByHost(String host, Integer por\n      */\n     public ChannelHandlerContext setAndGetNetworkConnectionByHost(\n             String host, Integer port, ChannelHandlerContext ctx) {\n+        try {\n+            host = Inet6Address.getByName(host).getHostAddress();\n+        } catch (Exception e) {\n+            logger.error(\"invalid host string format, value: \" + host);\n+        }\n         String endpoint = host + \":\" + port;\n         return networkConnections.put(endpoint, ctx);\n     }\n \n     public void removeNetworkConnectionByHost(\n             String host, Integer port, ChannelHandlerContext ctx) {\n+        try {\n+            host = Inet6Address.getByName(host).getHostAddress();\n+        } catch (Exception e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ca4399d3ff5b0e743785dbb50a2d9028a17a3bfb"}, "originalPosition": 69}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyMjU4OTc2OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/fisco/bcos/channel/handler/ChannelConnections.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwOTozMDo0MFrOG-Hdwg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwOTozMDo0MFrOG-Hdwg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzc4NzIwMg==", "bodyText": "[PMD Java] Logger calls should be surrounded by log level guards. (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nGuardLogStatement\nBest Practices\n2\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_bestpractices.html#guardlogstatement\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/687#discussion_r467787202", "createdAt": "2020-08-10T09:30:40Z", "author": {"login": "sider"}, "path": "src/main/java/org/fisco/bcos/channel/handler/ChannelConnections.java", "diffHunk": "@@ -259,12 +280,22 @@ public ChannelHandlerContext getNetworkConnectionByHost(String host, Integer por\n      */\n     public ChannelHandlerContext setAndGetNetworkConnectionByHost(\n             String host, Integer port, ChannelHandlerContext ctx) {\n+        try {\n+            host = Inet6Address.getByName(host).getHostAddress();\n+        } catch (Exception e) {\n+            logger.error(\"invalid host string format, value: \" + host);\n+        }\n         String endpoint = host + \":\" + port;\n         return networkConnections.put(endpoint, ctx);\n     }\n \n     public void removeNetworkConnectionByHost(\n             String host, Integer port, ChannelHandlerContext ctx) {\n+        try {\n+            host = Inet6Address.getByName(host).getHostAddress();\n+        } catch (Exception e) {\n+            logger.error(\"invalid host string format, value: \" + host);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ca4399d3ff5b0e743785dbb50a2d9028a17a3bfb"}, "originalPosition": 70}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyMjU4OTc4OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/fisco/bcos/channel/handler/ChannelConnections.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwOTozMDo0MVrOG-HdxA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwOTozMDo0MVrOG-HdxA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzc4NzIwNA==", "bodyText": "[PMD Java] Potential violation of Law of Demeter (method chain calls) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/687#discussion_r467787204", "createdAt": "2020-08-10T09:30:41Z", "author": {"login": "sider"}, "path": "src/main/java/org/fisco/bcos/channel/handler/ChannelConnections.java", "diffHunk": "@@ -288,18 +319,24 @@ public void init() {\n         for (String connectionStr : connectionsStr) {\n             ConnectionInfo connection = new ConnectionInfo();\n \n-            String[] stringArray = connectionStr.split(\":\");\n-\n-            if (stringArray.length < 1) {\n+            int index = connectionStr.lastIndexOf(':');\n+            if (index == -1) {\n                 throw new IllegalArgumentException(\n-                        \" Invalid configuration, the value should in IP:Port format(eg: 127.0.0.1:1111), value: \"\n+                        \" Invalid configuration, the value should in IP:Port format(eg: 127.0.0.1:1111\u3001[::1]:1111), value: \"\n                                 + connectionStr);\n             }\n \n-            String IP = stringArray[0];\n-            String port = stringArray[1];\n+            String IP = connectionStr.substring(0, index);\n+            String port = connectionStr.substring(index + 1);\n+\n+            if (!(NetUtil.isValidIpV4Address(IP) || NetUtil.isValidIpV6Address(IP))) {\n+                throw new IllegalArgumentException(\n+                        \" Invalid configuration, invalid IP string format, value: \" + IP);\n+            }\n \n-            if (!Host.validIP(IP)) {\n+            try {\n+                IP = Inet6Address.getByName(IP).getHostAddress();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ca4399d3ff5b0e743785dbb50a2d9028a17a3bfb"}, "originalPosition": 102}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyMjU4OTgxOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/fisco/bcos/channel/handler/ChannelConnections.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwOTozMDo0MVrOG-Hdxw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwOTozMDo0MVrOG-Hdxw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzc4NzIwNw==", "bodyText": "[PMD Java] Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nAvoidCatchingGenericException\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_design.html#avoidcatchinggenericexception\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/687#discussion_r467787207", "createdAt": "2020-08-10T09:30:41Z", "author": {"login": "sider"}, "path": "src/main/java/org/fisco/bcos/channel/handler/ChannelConnections.java", "diffHunk": "@@ -288,18 +319,24 @@ public void init() {\n         for (String connectionStr : connectionsStr) {\n             ConnectionInfo connection = new ConnectionInfo();\n \n-            String[] stringArray = connectionStr.split(\":\");\n-\n-            if (stringArray.length < 1) {\n+            int index = connectionStr.lastIndexOf(':');\n+            if (index == -1) {\n                 throw new IllegalArgumentException(\n-                        \" Invalid configuration, the value should in IP:Port format(eg: 127.0.0.1:1111), value: \"\n+                        \" Invalid configuration, the value should in IP:Port format(eg: 127.0.0.1:1111\u3001[::1]:1111), value: \"\n                                 + connectionStr);\n             }\n \n-            String IP = stringArray[0];\n-            String port = stringArray[1];\n+            String IP = connectionStr.substring(0, index);\n+            String port = connectionStr.substring(index + 1);\n+\n+            if (!(NetUtil.isValidIpV4Address(IP) || NetUtil.isValidIpV6Address(IP))) {\n+                throw new IllegalArgumentException(\n+                        \" Invalid configuration, invalid IP string format, value: \" + IP);\n+            }\n \n-            if (!Host.validIP(IP)) {\n+            try {\n+                IP = Inet6Address.getByName(IP).getHostAddress();\n+            } catch (Exception e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ca4399d3ff5b0e743785dbb50a2d9028a17a3bfb"}, "originalPosition": 103}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyMjU4OTgzOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/fisco/bcos/channel/handler/ChannelConnections.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwOTozMDo0MVrOG-HdyQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwOTozMDo0MVrOG-HdyQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzc4NzIwOQ==", "bodyText": "[PMD Java] Potential violation of Law of Demeter (object not created locally) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/687#discussion_r467787209", "createdAt": "2020-08-10T09:30:41Z", "author": {"login": "sider"}, "path": "src/main/java/org/fisco/bcos/channel/handler/ChannelConnections.java", "diffHunk": "@@ -490,7 +529,29 @@ public SslContext initSMSslContext()\n                     getGmSslKey().getInputStream());\n         }\n \n-        logger.info(\" Has no SM Ssl certificate configuration \");\n+        PathMatchingResourcePatternResolver resolver = new PathMatchingResourcePatternResolver();\n+        Resource gmCaResource = resolver.getResource(GM_CA_CERT);\n+        Resource gmSslResource = resolver.getResource(GM_SSL_CERT);\n+        Resource gmSslKeyResource = resolver.getResource(GM_SSL_KEY);\n+        Resource gmEnSslResource = resolver.getResource(GM_EN_SSL_CERT);\n+        Resource gmEnSslKeyResource = resolver.getResource(GM_EN_SSL_KEY);\n+\n+        // The client's SM SSL default certificate exists\n+        if (gmCaResource.exists()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ca4399d3ff5b0e743785dbb50a2d9028a17a3bfb"}, "originalPosition": 136}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyMjU4OTg0OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/fisco/bcos/channel/handler/ChannelConnections.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwOTozMDo0MVrOG-Hdyg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwOTozMDo0MVrOG-Hdyg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzc4NzIxMA==", "bodyText": "[PMD Java] Potential violation of Law of Demeter (object not created locally) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/687#discussion_r467787210", "createdAt": "2020-08-10T09:30:41Z", "author": {"login": "sider"}, "path": "src/main/java/org/fisco/bcos/channel/handler/ChannelConnections.java", "diffHunk": "@@ -490,7 +529,29 @@ public SslContext initSMSslContext()\n                     getGmSslKey().getInputStream());\n         }\n \n-        logger.info(\" Has no SM Ssl certificate configuration \");\n+        PathMatchingResourcePatternResolver resolver = new PathMatchingResourcePatternResolver();\n+        Resource gmCaResource = resolver.getResource(GM_CA_CERT);\n+        Resource gmSslResource = resolver.getResource(GM_SSL_CERT);\n+        Resource gmSslKeyResource = resolver.getResource(GM_SSL_KEY);\n+        Resource gmEnSslResource = resolver.getResource(GM_EN_SSL_CERT);\n+        Resource gmEnSslKeyResource = resolver.getResource(GM_EN_SSL_KEY);\n+\n+        // The client's SM SSL default certificate exists\n+        if (gmCaResource.exists()\n+                && gmSslResource.exists()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ca4399d3ff5b0e743785dbb50a2d9028a17a3bfb"}, "originalPosition": 137}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyMjU4OTg1OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/fisco/bcos/channel/handler/ChannelConnections.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwOTozMDo0MVrOG-Hdyw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwOTozMDo0MVrOG-Hdyw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzc4NzIxMQ==", "bodyText": "[PMD Java] Potential violation of Law of Demeter (object not created locally) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/687#discussion_r467787211", "createdAt": "2020-08-10T09:30:41Z", "author": {"login": "sider"}, "path": "src/main/java/org/fisco/bcos/channel/handler/ChannelConnections.java", "diffHunk": "@@ -490,7 +529,29 @@ public SslContext initSMSslContext()\n                     getGmSslKey().getInputStream());\n         }\n \n-        logger.info(\" Has no SM Ssl certificate configuration \");\n+        PathMatchingResourcePatternResolver resolver = new PathMatchingResourcePatternResolver();\n+        Resource gmCaResource = resolver.getResource(GM_CA_CERT);\n+        Resource gmSslResource = resolver.getResource(GM_SSL_CERT);\n+        Resource gmSslKeyResource = resolver.getResource(GM_SSL_KEY);\n+        Resource gmEnSslResource = resolver.getResource(GM_EN_SSL_CERT);\n+        Resource gmEnSslKeyResource = resolver.getResource(GM_EN_SSL_KEY);\n+\n+        // The client's SM SSL default certificate exists\n+        if (gmCaResource.exists()\n+                && gmSslResource.exists()\n+                && gmSslKeyResource.exists()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ca4399d3ff5b0e743785dbb50a2d9028a17a3bfb"}, "originalPosition": 138}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyMjU4OTg4OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/fisco/bcos/channel/handler/ChannelConnections.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwOTozMDo0MVrOG-Hdzg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwOTozMDo0MVrOG-Hdzg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzc4NzIxNA==", "bodyText": "[PMD Java] Potential violation of Law of Demeter (object not created locally) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/687#discussion_r467787214", "createdAt": "2020-08-10T09:30:41Z", "author": {"login": "sider"}, "path": "src/main/java/org/fisco/bcos/channel/handler/ChannelConnections.java", "diffHunk": "@@ -490,7 +529,29 @@ public SslContext initSMSslContext()\n                     getGmSslKey().getInputStream());\n         }\n \n-        logger.info(\" Has no SM Ssl certificate configuration \");\n+        PathMatchingResourcePatternResolver resolver = new PathMatchingResourcePatternResolver();\n+        Resource gmCaResource = resolver.getResource(GM_CA_CERT);\n+        Resource gmSslResource = resolver.getResource(GM_SSL_CERT);\n+        Resource gmSslKeyResource = resolver.getResource(GM_SSL_KEY);\n+        Resource gmEnSslResource = resolver.getResource(GM_EN_SSL_CERT);\n+        Resource gmEnSslKeyResource = resolver.getResource(GM_EN_SSL_KEY);\n+\n+        // The client's SM SSL default certificate exists\n+        if (gmCaResource.exists()\n+                && gmSslResource.exists()\n+                && gmSslKeyResource.exists()\n+                && gmEnSslKeyResource.exists()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ca4399d3ff5b0e743785dbb50a2d9028a17a3bfb"}, "originalPosition": 139}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyMjU4OTg5OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/fisco/bcos/channel/handler/ChannelConnections.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwOTozMDo0MVrOG-Hd0A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwOTozMDo0MVrOG-Hd0A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzc4NzIxNg==", "bodyText": "[PMD Java] Potential violation of Law of Demeter (object not created locally) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/687#discussion_r467787216", "createdAt": "2020-08-10T09:30:41Z", "author": {"login": "sider"}, "path": "src/main/java/org/fisco/bcos/channel/handler/ChannelConnections.java", "diffHunk": "@@ -490,7 +529,29 @@ public SslContext initSMSslContext()\n                     getGmSslKey().getInputStream());\n         }\n \n-        logger.info(\" Has no SM Ssl certificate configuration \");\n+        PathMatchingResourcePatternResolver resolver = new PathMatchingResourcePatternResolver();\n+        Resource gmCaResource = resolver.getResource(GM_CA_CERT);\n+        Resource gmSslResource = resolver.getResource(GM_SSL_CERT);\n+        Resource gmSslKeyResource = resolver.getResource(GM_SSL_KEY);\n+        Resource gmEnSslResource = resolver.getResource(GM_EN_SSL_CERT);\n+        Resource gmEnSslKeyResource = resolver.getResource(GM_EN_SSL_KEY);\n+\n+        // The client's SM SSL default certificate exists\n+        if (gmCaResource.exists()\n+                && gmSslResource.exists()\n+                && gmSslKeyResource.exists()\n+                && gmEnSslKeyResource.exists()\n+                && gmEnSslResource.exists()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ca4399d3ff5b0e743785dbb50a2d9028a17a3bfb"}, "originalPosition": 140}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyMjU4OTkwOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/fisco/bcos/channel/handler/ChannelConnections.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwOTozMDo0MlrOG-Hd1A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwOTozMDo0MlrOG-Hd1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzc4NzIyMA==", "bodyText": "[PMD Java] Potential violation of Law of Demeter (object not created locally) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/687#discussion_r467787220", "createdAt": "2020-08-10T09:30:42Z", "author": {"login": "sider"}, "path": "src/main/java/org/fisco/bcos/channel/handler/ChannelConnections.java", "diffHunk": "@@ -510,9 +571,14 @@ private SslContext initSslContext() throws SSLException {\n \n             // check if ca.crt exist\n             if (Objects.isNull(caResource) || !caResource.exists()) {\n-                throw new RuntimeException(\n-                        (Objects.nonNull(caResource) ? \"ca.crt\" : caResource.getFilename())\n-                                + \" not exist \");\n+                Resource resource = resolver.getResource(CA_CERT);\n+                if (Objects.nonNull(resource) && resource.exists()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ca4399d3ff5b0e743785dbb50a2d9028a17a3bfb"}, "originalPosition": 162}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyMjU4OTkyOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/fisco/bcos/channel/handler/ChannelConnections.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwOTozMDo0MlrOG-Hd1g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwOTozMDo0MlrOG-Hd1g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzc4NzIyMg==", "bodyText": "[PMD Java] Avoid throwing raw exception types. (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nAvoidThrowingRawExceptionTypes\nDesign\n1\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_design.html#avoidthrowingrawexceptiontypes\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/687#discussion_r467787222", "createdAt": "2020-08-10T09:30:42Z", "author": {"login": "sider"}, "path": "src/main/java/org/fisco/bcos/channel/handler/ChannelConnections.java", "diffHunk": "@@ -510,9 +571,14 @@ private SslContext initSslContext() throws SSLException {\n \n             // check if ca.crt exist\n             if (Objects.isNull(caResource) || !caResource.exists()) {\n-                throw new RuntimeException(\n-                        (Objects.nonNull(caResource) ? \"ca.crt\" : caResource.getFilename())\n-                                + \" not exist \");\n+                Resource resource = resolver.getResource(CA_CERT);\n+                if (Objects.nonNull(resource) && resource.exists()) {\n+                    caResource = resource;\n+                } else {\n+                    throw new RuntimeException(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ca4399d3ff5b0e743785dbb50a2d9028a17a3bfb"}, "originalPosition": 165}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyMjU4OTkzOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/fisco/bcos/channel/handler/ChannelConnections.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwOTozMDo0MlrOG-Hd2A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwOTozMDo0MlrOG-Hd2A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzc4NzIyNA==", "bodyText": "[PMD Java] Potential violation of Law of Demeter (object not created locally) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/687#discussion_r467787224", "createdAt": "2020-08-10T09:30:42Z", "author": {"login": "sider"}, "path": "src/main/java/org/fisco/bcos/channel/handler/ChannelConnections.java", "diffHunk": "@@ -510,9 +571,14 @@ private SslContext initSslContext() throws SSLException {\n \n             // check if ca.crt exist\n             if (Objects.isNull(caResource) || !caResource.exists()) {\n-                throw new RuntimeException(\n-                        (Objects.nonNull(caResource) ? \"ca.crt\" : caResource.getFilename())\n-                                + \" not exist \");\n+                Resource resource = resolver.getResource(CA_CERT);\n+                if (Objects.nonNull(resource) && resource.exists()) {\n+                    caResource = resource;\n+                } else {\n+                    throw new RuntimeException(\n+                            (Objects.nonNull(caResource) ? \"ca.crt\" : caResource.getFilename())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ca4399d3ff5b0e743785dbb50a2d9028a17a3bfb"}, "originalPosition": 166}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyMjU4OTk5OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/fisco/bcos/web3j/abi/wrapper/ABICodecJsonWrapper.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwOTozMDo0MlrOG-Hd3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwOTozMDo0MlrOG-Hd3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzc4NzIyOQ==", "bodyText": "[PMD Java] The method 'encodeNode(String, ABIObject, JsonNode)' has a NCSS line count of 81. (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nNcssCount\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_design.html#ncsscount\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/687#discussion_r467787229", "createdAt": "2020-08-10T09:30:42Z", "author": {"login": "sider"}, "path": "src/main/java/org/fisco/bcos/web3j/abi/wrapper/ABICodecJsonWrapper.java", "diffHunk": "@@ -0,0 +1,497 @@\n+package org.fisco.bcos.web3j.abi.wrapper;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.databind.node.ArrayNode;\n+import com.fasterxml.jackson.databind.node.JsonNodeFactory;\n+import java.io.IOException;\n+import java.security.InvalidParameterException;\n+import java.util.ArrayList;\n+import java.util.Base64;\n+import java.util.Iterator;\n+import java.util.List;\n+import org.fisco.bcos.web3j.abi.datatypes.Address;\n+import org.fisco.bcos.web3j.abi.datatypes.Bool;\n+import org.fisco.bcos.web3j.abi.datatypes.Bytes;\n+import org.fisco.bcos.web3j.abi.datatypes.DynamicBytes;\n+import org.fisco.bcos.web3j.abi.datatypes.Utf8String;\n+import org.fisco.bcos.web3j.abi.datatypes.generated.Int256;\n+import org.fisco.bcos.web3j.abi.datatypes.generated.Uint256;\n+import org.fisco.bcos.web3j.abi.wrapper.ABIObject.ListType;\n+import org.fisco.bcos.web3j.protocol.ObjectMapperFactory;\n+import org.fisco.bcos.web3j.utils.Numeric;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public class ABICodecJsonWrapper {\n+\n+    private static final Logger logger = LoggerFactory.getLogger(ABICodecJsonWrapper.class);\n+\n+    private ObjectMapper objectMapper = ObjectMapperFactory.getObjectMapper();\n+\n+    private void errorReport(String path, String expected, String actual)\n+            throws InvalidParameterException {\n+        String errorMessage =\n+                \"Arguments mismatch: \" + path + \", expected: \" + expected + \", actual: \" + actual;\n+        logger.error(errorMessage);\n+        throw new InvalidParameterException(errorMessage);\n+    }\n+\n+    private ABIObject encodeNode(String path, ABIObject template, JsonNode node) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ca4399d3ff5b0e743785dbb50a2d9028a17a3bfb"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyMjU5MDAxOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/fisco/bcos/web3j/abi/wrapper/ABICodecJsonWrapper.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwOTozMDo0MlrOG-Hd4Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwOTozMDo0MlrOG-Hd4Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzc4NzIzMw==", "bodyText": "[PMD Java] A high ratio of statements to labels in a switch statement.  Consider refactoring. (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nSwitchDensity\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_design.html#switchdensity\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/687#discussion_r467787233", "createdAt": "2020-08-10T09:30:42Z", "author": {"login": "sider"}, "path": "src/main/java/org/fisco/bcos/web3j/abi/wrapper/ABICodecJsonWrapper.java", "diffHunk": "@@ -0,0 +1,497 @@\n+package org.fisco.bcos.web3j.abi.wrapper;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.databind.node.ArrayNode;\n+import com.fasterxml.jackson.databind.node.JsonNodeFactory;\n+import java.io.IOException;\n+import java.security.InvalidParameterException;\n+import java.util.ArrayList;\n+import java.util.Base64;\n+import java.util.Iterator;\n+import java.util.List;\n+import org.fisco.bcos.web3j.abi.datatypes.Address;\n+import org.fisco.bcos.web3j.abi.datatypes.Bool;\n+import org.fisco.bcos.web3j.abi.datatypes.Bytes;\n+import org.fisco.bcos.web3j.abi.datatypes.DynamicBytes;\n+import org.fisco.bcos.web3j.abi.datatypes.Utf8String;\n+import org.fisco.bcos.web3j.abi.datatypes.generated.Int256;\n+import org.fisco.bcos.web3j.abi.datatypes.generated.Uint256;\n+import org.fisco.bcos.web3j.abi.wrapper.ABIObject.ListType;\n+import org.fisco.bcos.web3j.protocol.ObjectMapperFactory;\n+import org.fisco.bcos.web3j.utils.Numeric;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public class ABICodecJsonWrapper {\n+\n+    private static final Logger logger = LoggerFactory.getLogger(ABICodecJsonWrapper.class);\n+\n+    private ObjectMapper objectMapper = ObjectMapperFactory.getObjectMapper();\n+\n+    private void errorReport(String path, String expected, String actual)\n+            throws InvalidParameterException {\n+        String errorMessage =\n+                \"Arguments mismatch: \" + path + \", expected: \" + expected + \", actual: \" + actual;\n+        logger.error(errorMessage);\n+        throw new InvalidParameterException(errorMessage);\n+    }\n+\n+    private ABIObject encodeNode(String path, ABIObject template, JsonNode node) {\n+        ABIObject abiObject = template.newObject();\n+\n+        switch (abiObject.getType()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ca4399d3ff5b0e743785dbb50a2d9028a17a3bfb"}, "originalPosition": 43}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyMjU5MDAzOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/fisco/bcos/web3j/abi/wrapper/ABICodecJsonWrapper.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwOTozMDo0MlrOG-Hd5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwOTozMDo0MlrOG-Hd5A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzc4NzIzNg==", "bodyText": "[PMD Java] Switch statements should have a default label (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nSwitchStmtsShouldHaveDefault\nBest Practices\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_bestpractices.html#switchstmtsshouldhavedefault\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/687#discussion_r467787236", "createdAt": "2020-08-10T09:30:42Z", "author": {"login": "sider"}, "path": "src/main/java/org/fisco/bcos/web3j/abi/wrapper/ABICodecJsonWrapper.java", "diffHunk": "@@ -0,0 +1,497 @@\n+package org.fisco.bcos.web3j.abi.wrapper;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.databind.node.ArrayNode;\n+import com.fasterxml.jackson.databind.node.JsonNodeFactory;\n+import java.io.IOException;\n+import java.security.InvalidParameterException;\n+import java.util.ArrayList;\n+import java.util.Base64;\n+import java.util.Iterator;\n+import java.util.List;\n+import org.fisco.bcos.web3j.abi.datatypes.Address;\n+import org.fisco.bcos.web3j.abi.datatypes.Bool;\n+import org.fisco.bcos.web3j.abi.datatypes.Bytes;\n+import org.fisco.bcos.web3j.abi.datatypes.DynamicBytes;\n+import org.fisco.bcos.web3j.abi.datatypes.Utf8String;\n+import org.fisco.bcos.web3j.abi.datatypes.generated.Int256;\n+import org.fisco.bcos.web3j.abi.datatypes.generated.Uint256;\n+import org.fisco.bcos.web3j.abi.wrapper.ABIObject.ListType;\n+import org.fisco.bcos.web3j.protocol.ObjectMapperFactory;\n+import org.fisco.bcos.web3j.utils.Numeric;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public class ABICodecJsonWrapper {\n+\n+    private static final Logger logger = LoggerFactory.getLogger(ABICodecJsonWrapper.class);\n+\n+    private ObjectMapper objectMapper = ObjectMapperFactory.getObjectMapper();\n+\n+    private void errorReport(String path, String expected, String actual)\n+            throws InvalidParameterException {\n+        String errorMessage =\n+                \"Arguments mismatch: \" + path + \", expected: \" + expected + \", actual: \" + actual;\n+        logger.error(errorMessage);\n+        throw new InvalidParameterException(errorMessage);\n+    }\n+\n+    private ABIObject encodeNode(String path, ABIObject template, JsonNode node) {\n+        ABIObject abiObject = template.newObject();\n+\n+        switch (abiObject.getType()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ca4399d3ff5b0e743785dbb50a2d9028a17a3bfb"}, "originalPosition": 43}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyMjU5MDA1OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/fisco/bcos/web3j/abi/wrapper/ABICodecJsonWrapper.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwOTozMDo0M1rOG-Hd5g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwOTozMDo0M1rOG-Hd5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzc4NzIzOA==", "bodyText": "[PMD Java] Potential violation of Law of Demeter (method chain calls) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/687#discussion_r467787238", "createdAt": "2020-08-10T09:30:43Z", "author": {"login": "sider"}, "path": "src/main/java/org/fisco/bcos/web3j/abi/wrapper/ABICodecJsonWrapper.java", "diffHunk": "@@ -0,0 +1,497 @@\n+package org.fisco.bcos.web3j.abi.wrapper;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.databind.node.ArrayNode;\n+import com.fasterxml.jackson.databind.node.JsonNodeFactory;\n+import java.io.IOException;\n+import java.security.InvalidParameterException;\n+import java.util.ArrayList;\n+import java.util.Base64;\n+import java.util.Iterator;\n+import java.util.List;\n+import org.fisco.bcos.web3j.abi.datatypes.Address;\n+import org.fisco.bcos.web3j.abi.datatypes.Bool;\n+import org.fisco.bcos.web3j.abi.datatypes.Bytes;\n+import org.fisco.bcos.web3j.abi.datatypes.DynamicBytes;\n+import org.fisco.bcos.web3j.abi.datatypes.Utf8String;\n+import org.fisco.bcos.web3j.abi.datatypes.generated.Int256;\n+import org.fisco.bcos.web3j.abi.datatypes.generated.Uint256;\n+import org.fisco.bcos.web3j.abi.wrapper.ABIObject.ListType;\n+import org.fisco.bcos.web3j.protocol.ObjectMapperFactory;\n+import org.fisco.bcos.web3j.utils.Numeric;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public class ABICodecJsonWrapper {\n+\n+    private static final Logger logger = LoggerFactory.getLogger(ABICodecJsonWrapper.class);\n+\n+    private ObjectMapper objectMapper = ObjectMapperFactory.getObjectMapper();\n+\n+    private void errorReport(String path, String expected, String actual)\n+            throws InvalidParameterException {\n+        String errorMessage =\n+                \"Arguments mismatch: \" + path + \", expected: \" + expected + \", actual: \" + actual;\n+        logger.error(errorMessage);\n+        throw new InvalidParameterException(errorMessage);\n+    }\n+\n+    private ABIObject encodeNode(String path, ABIObject template, JsonNode node) {\n+        ABIObject abiObject = template.newObject();\n+\n+        switch (abiObject.getType()) {\n+            case VALUE:\n+                {\n+                    if (!node.isValueNode()) {\n+                        errorReport(\n+                                path,\n+                                abiObject.getType().toString(),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ca4399d3ff5b0e743785dbb50a2d9028a17a3bfb"}, "originalPosition": 49}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 585, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}