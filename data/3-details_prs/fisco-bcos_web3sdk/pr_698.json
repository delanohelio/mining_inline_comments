{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY4NTM2Mjgy", "number": 698, "title": "sync master", "bodyText": "", "createdAt": "2020-08-17T01:52:01Z", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/698", "merged": true, "mergeCommit": {"oid": "51671020b4bcdd6a39e72053c2118faff17476b8"}, "closed": true, "closedAt": "2020-08-17T02:39:16Z", "author": {"login": "ywy2090"}, "timelineItems": {"totalCount": 28, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcxPVVZgH2gAyNDY4NTM2MjgyOjVkZTIzZDIzNjM0YmVlMGY5YmMxZjk5ZTdjOWIzYjk0YzUyNDVjOWI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc_ol1FAFqTQ2ODEyNjM0Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "5de23d23634bee0f9bc1f99e7c9b3b94c5245c9b", "author": {"user": {"login": "ywy2090", "name": null}}, "url": "https://github.com/FISCO-BCOS/web3sdk/commit/5de23d23634bee0f9bc1f99e7c9b3b94c5245c9b", "committedDate": "2020-07-03T08:40:15Z", "message": "update deps\n\nadd default certificate configuration for SM SSL\n\nTypeEncode to public"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "594b57f65d54d8bab27eb27119dbbbc5c62f1145", "author": {"user": {"login": "ywy2090", "name": null}}, "url": "https://github.com/FISCO-BCOS/web3sdk/commit/594b57f65d54d8bab27eb27119dbbbc5c62f1145", "committedDate": "2020-07-03T08:55:15Z", "message": "Merge pull request #676 from ywy2090/release-2.6.0-origin\n\nupdate deps"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1b4a5915ff335060d9ca7f824e645917ca95ed00", "author": {"user": {"login": "ywy2090", "name": null}}, "url": "https://github.com/FISCO-BCOS/web3sdk/commit/1b4a5915ff335060d9ca7f824e645917ca95ed00", "committedDate": "2020-07-07T15:49:40Z", "message": "add sm binary code to Java contract"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bfcbb56290658513ffbf63c8490f4a4588c529ae", "author": {"user": {"login": "ywy2090", "name": null}}, "url": "https://github.com/FISCO-BCOS/web3sdk/commit/bfcbb56290658513ffbf63c8490f4a4588c529ae", "committedDate": "2020-07-08T02:51:14Z", "message": "Merge pull request #678 from ywy2090/release-2.6.0-origin\n\nadd sm binary code to Java contract"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a736639b776f84cb714159f5ea8c0b309635b3c3", "author": {"user": {"login": "sulenn", "name": "sulenn"}}, "url": "https://github.com/FISCO-BCOS/web3sdk/commit/a736639b776f84cb714159f5ea8c0b309635b3c3", "committedDate": "2020-07-09T11:04:35Z", "message": "Fix the problem that web3sdk cannot connect to IPv6 node probabilistically"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a902641c80af62ef567b84519f43aa280232fb03", "author": {"user": {"login": "ywy2090", "name": null}}, "url": "https://github.com/FISCO-BCOS/web3sdk/commit/a902641c80af62ef567b84519f43aa280232fb03", "committedDate": "2020-07-09T11:51:26Z", "message": "Merge pull request #673 from sulenn/dev\n\nFix connection problem for ipv6 peer"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6c0c0bc7d04bedac383b4082a00050831ddda07b", "author": {"user": {"login": "ywy2090", "name": null}}, "url": "https://github.com/FISCO-BCOS/web3sdk/commit/6c0c0bc7d04bedac383b4082a00050831ddda07b", "committedDate": "2020-07-20T02:35:50Z", "message": "add abi codec module"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "89baa3781e017272c0b37f5e5be5805cce47aa69", "author": {"user": {"login": "ywy2090", "name": null}}, "url": "https://github.com/FISCO-BCOS/web3sdk/commit/89baa3781e017272c0b37f5e5be5805cce47aa69", "committedDate": "2020-07-28T11:00:13Z", "message": "Merge pull request #679 from ywy2090/release-2.6.0-origin\n\nadd abi codec module"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7e61958adc320bc49ce20b2cc722297285b6e891", "author": {"user": {"login": "ywy2090", "name": null}}, "url": "https://github.com/FISCO-BCOS/web3sdk/commit/7e61958adc320bc49ce20b2cc722297285b6e891", "committedDate": "2020-08-05T07:41:59Z", "message": "Modify the SSL connection engine to opensSL"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "539f0eb0138880da91c8501683d99f364d8d0f8c", "author": {"user": {"login": "ywy2090", "name": null}}, "url": "https://github.com/FISCO-BCOS/web3sdk/commit/539f0eb0138880da91c8501683d99f364d8d0f8c", "committedDate": "2020-08-05T08:05:05Z", "message": "update tcnative version"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3913a5946fcd7c470d1451a26d02d3e1b33c72cb", "author": {"user": {"login": "ywy2090", "name": null}}, "url": "https://github.com/FISCO-BCOS/web3sdk/commit/3913a5946fcd7c470d1451a26d02d3e1b33c72cb", "committedDate": "2020-08-06T02:18:40Z", "message": "update ci_check.sh"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3159989a32b32b7500022c3a8bb36e2acd685705", "author": {"user": {"login": "ywy2090", "name": null}}, "url": "https://github.com/FISCO-BCOS/web3sdk/commit/3159989a32b32b7500022c3a8bb36e2acd685705", "committedDate": "2020-08-06T02:27:58Z", "message": "Merge pull request #684 from ywy2090/release-2.6.0-openssl\n\nModify the SSL connection engine to opensSL"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c8367908cd117ce4a76950d7790697a88cc79832", "author": {"user": {"login": "chaychen2005", "name": null}}, "url": "https://github.com/FISCO-BCOS/web3sdk/commit/c8367908cd117ce4a76950d7790697a88cc79832", "committedDate": "2020-08-06T02:29:04Z", "message": "print handshake fail reason"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "06b85f9ccc28e71a4ecb9275ea1ff7c0f6364705", "author": {"user": {"login": "chaychen2005", "name": null}}, "url": "https://github.com/FISCO-BCOS/web3sdk/commit/06b85f9ccc28e71a4ecb9275ea1ff7c0f6364705", "committedDate": "2020-08-06T03:03:15Z", "message": "Merge pull request #685 from chaychen2005/release-2.6.0\n\nprint handshake fail reason"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7d1ed64c07e69b303c19a5e2a0dfbb09daf343dd", "author": {"user": {"login": "chaychen2005", "name": null}}, "url": "https://github.com/FISCO-BCOS/web3sdk/commit/7d1ed64c07e69b303c19a5e2a0dfbb09daf343dd", "committedDate": "2020-08-10T09:17:01Z", "message": "fix bug of print handshake fail"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ca4399d3ff5b0e743785dbb50a2d9028a17a3bfb", "author": {"user": {"login": "chaychen2005", "name": null}}, "url": "https://github.com/FISCO-BCOS/web3sdk/commit/ca4399d3ff5b0e743785dbb50a2d9028a17a3bfb", "committedDate": "2020-08-10T09:29:51Z", "message": "Merge pull request #686 from chaychen2005/release-2.6.0\n\nfix bug of print handshake fail"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e50ecc66a794361bafba8d544d61412747c3b45e", "author": {"user": {"login": "bxq2011hust", "name": "XingQiang Bai"}}, "url": "https://github.com/FISCO-BCOS/web3sdk/commit/e50ecc66a794361bafba8d544d61412747c3b45e", "committedDate": "2020-08-10T09:53:32Z", "message": "Merge pull request #687 from FISCO-BCOS/release-2.6.0\n\nmerge Release 2.6.0"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4dfce652f1a8fd74db5ec22734ef63874571ffe4", "author": {"user": {"login": "ywy2090", "name": null}}, "url": "https://github.com/FISCO-BCOS/web3sdk/commit/4dfce652f1a8fd74db5ec22734ef63874571ffe4", "committedDate": "2020-08-12T01:50:32Z", "message": "update ChangeLog"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9296faab1948d29e6c2b5e5b59711c4e8055c134", "author": {"user": {"login": "ywy2090", "name": null}}, "url": "https://github.com/FISCO-BCOS/web3sdk/commit/9296faab1948d29e6c2b5e5b59711c4e8055c134", "committedDate": "2020-08-12T02:21:31Z", "message": "Merge pull request #692 from ywy2090/master-ChangeLog\n\nupdate ChangeLog"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1ac763c4e630e1f6207f966c8e053868ad8201d5", "author": {"user": {"login": "ywy2090", "name": null}}, "url": "https://github.com/FISCO-BCOS/web3sdk/commit/1ac763c4e630e1f6207f966c8e053868ad8201d5", "committedDate": "2020-08-12T06:07:15Z", "message": "fix solidity wrapper codegen bug."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "698e00f886a86ec08dcacac8d34d5ee821f0c10d", "author": {"user": {"login": "ywy2090", "name": null}}, "url": "https://github.com/FISCO-BCOS/web3sdk/commit/698e00f886a86ec08dcacac8d34d5ee821f0c10d", "committedDate": "2020-08-12T06:40:51Z", "message": "Merge pull request #693 from ywy2090/master-ChangeLog\n\nfix solidity wrapper codegen bug."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "70b288a65bc083686d9c35ac21bf7d113a38ec7a", "author": {"user": {"login": "ywy2090", "name": null}}, "url": "https://github.com/FISCO-BCOS/web3sdk/commit/70b288a65bc083686d9c35ac21bf7d113a38ec7a", "committedDate": "2020-08-14T02:00:38Z", "message": "update netty-sm-ssl-context"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cb34e65fb287be114eaf8bdb76f3d396edbbc2af", "author": {"user": {"login": "ywy2090", "name": null}}, "url": "https://github.com/FISCO-BCOS/web3sdk/commit/cb34e65fb287be114eaf8bdb76f3d396edbbc2af", "committedDate": "2020-08-14T02:16:52Z", "message": "add github action"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "075e4cda85865020673c7790bf811680188a5280", "author": {"user": {"login": "ywy2090", "name": null}}, "url": "https://github.com/FISCO-BCOS/web3sdk/commit/075e4cda85865020673c7790bf811680188a5280", "committedDate": "2020-08-14T02:28:21Z", "message": "Merge pull request #694 from ywy2090/master-ChangeLog\n\nupdate netty-sm-ssl-context"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bb05beb637809a57d726ff9d15cd0d9cc223a5f0", "author": {"user": {"login": "ywy2090", "name": null}}, "url": "https://github.com/FISCO-BCOS/web3sdk/commit/bb05beb637809a57d726ff9d15cd0d9cc223a5f0", "committedDate": "2020-08-14T05:49:04Z", "message": "update publish.gradle"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "51671020b4bcdd6a39e72053c2118faff17476b8", "author": {"user": {"login": "ywy2090", "name": null}}, "url": "https://github.com/FISCO-BCOS/web3sdk/commit/51671020b4bcdd6a39e72053c2118faff17476b8", "committedDate": "2020-08-14T06:41:51Z", "message": "Merge pull request #696 from ywy2090/master-ChangeLog\n\nupdate publish.gradle"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY4MTI0NTY2", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/698#pullrequestreview-468124566", "createdAt": "2020-08-17T01:52:47Z", "commit": {"oid": "51671020b4bcdd6a39e72053c2118faff17476b8"}, "state": "COMMENTED", "comments": {"totalCount": 30, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QwMTo1Mjo0N1rOHBXawg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QwMTo1Mjo1MlrOHBXa6A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTE5NDMwNg==", "bodyText": "[PMD Java] Potential violation of Law of Demeter (method chain calls) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/698#discussion_r471194306", "createdAt": "2020-08-17T01:52:47Z", "author": {"login": "sider"}, "path": "src/main/java/org/fisco/bcos/channel/handler/ChannelConnections.java", "diffHunk": "@@ -245,6 +260,11 @@ public ChannelHandlerContext randomNetworkConnection(\n     }\n \n     public ChannelHandlerContext getNetworkConnectionByHost(String host, Integer port) {\n+        try {\n+            host = Inet6Address.getByName(host).getHostAddress();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "51671020b4bcdd6a39e72053c2118faff17476b8"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTE5NDMwNw==", "bodyText": "[PMD Java] Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nAvoidCatchingGenericException\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_design.html#avoidcatchinggenericexception\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/698#discussion_r471194307", "createdAt": "2020-08-17T01:52:48Z", "author": {"login": "sider"}, "path": "src/main/java/org/fisco/bcos/channel/handler/ChannelConnections.java", "diffHunk": "@@ -245,6 +260,11 @@ public ChannelHandlerContext randomNetworkConnection(\n     }\n \n     public ChannelHandlerContext getNetworkConnectionByHost(String host, Integer port) {\n+        try {\n+            host = Inet6Address.getByName(host).getHostAddress();\n+        } catch (Exception e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "51671020b4bcdd6a39e72053c2118faff17476b8"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTE5NDMwOA==", "bodyText": "[PMD Java] Logger calls should be surrounded by log level guards. (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nGuardLogStatement\nBest Practices\n2\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_bestpractices.html#guardlogstatement\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/698#discussion_r471194308", "createdAt": "2020-08-17T01:52:48Z", "author": {"login": "sider"}, "path": "src/main/java/org/fisco/bcos/channel/handler/ChannelConnections.java", "diffHunk": "@@ -245,6 +260,11 @@ public ChannelHandlerContext randomNetworkConnection(\n     }\n \n     public ChannelHandlerContext getNetworkConnectionByHost(String host, Integer port) {\n+        try {\n+            host = Inet6Address.getByName(host).getHostAddress();\n+        } catch (Exception e) {\n+            logger.error(\"invalid host string format, value: \" + host);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "51671020b4bcdd6a39e72053c2118faff17476b8"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTE5NDMxMQ==", "bodyText": "[PMD Java] Potential violation of Law of Demeter (method chain calls) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/698#discussion_r471194311", "createdAt": "2020-08-17T01:52:48Z", "author": {"login": "sider"}, "path": "src/main/java/org/fisco/bcos/channel/handler/ChannelConnections.java", "diffHunk": "@@ -260,12 +280,22 @@ public ChannelHandlerContext getNetworkConnectionByHost(String host, Integer por\n      */\n     public ChannelHandlerContext setAndGetNetworkConnectionByHost(\n             String host, Integer port, ChannelHandlerContext ctx) {\n+        try {\n+            host = Inet6Address.getByName(host).getHostAddress();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "51671020b4bcdd6a39e72053c2118faff17476b8"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTE5NDMxMw==", "bodyText": "[PMD Java] Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nAvoidCatchingGenericException\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_design.html#avoidcatchinggenericexception\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/698#discussion_r471194313", "createdAt": "2020-08-17T01:52:48Z", "author": {"login": "sider"}, "path": "src/main/java/org/fisco/bcos/channel/handler/ChannelConnections.java", "diffHunk": "@@ -260,12 +280,22 @@ public ChannelHandlerContext getNetworkConnectionByHost(String host, Integer por\n      */\n     public ChannelHandlerContext setAndGetNetworkConnectionByHost(\n             String host, Integer port, ChannelHandlerContext ctx) {\n+        try {\n+            host = Inet6Address.getByName(host).getHostAddress();\n+        } catch (Exception e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "51671020b4bcdd6a39e72053c2118faff17476b8"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTE5NDMxNA==", "bodyText": "[PMD Java] Logger calls should be surrounded by log level guards. (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nGuardLogStatement\nBest Practices\n2\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_bestpractices.html#guardlogstatement\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/698#discussion_r471194314", "createdAt": "2020-08-17T01:52:48Z", "author": {"login": "sider"}, "path": "src/main/java/org/fisco/bcos/channel/handler/ChannelConnections.java", "diffHunk": "@@ -260,12 +280,22 @@ public ChannelHandlerContext getNetworkConnectionByHost(String host, Integer por\n      */\n     public ChannelHandlerContext setAndGetNetworkConnectionByHost(\n             String host, Integer port, ChannelHandlerContext ctx) {\n+        try {\n+            host = Inet6Address.getByName(host).getHostAddress();\n+        } catch (Exception e) {\n+            logger.error(\"invalid host string format, value: \" + host);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "51671020b4bcdd6a39e72053c2118faff17476b8"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTE5NDMxNQ==", "bodyText": "[PMD Java] Potential violation of Law of Demeter (method chain calls) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/698#discussion_r471194315", "createdAt": "2020-08-17T01:52:48Z", "author": {"login": "sider"}, "path": "src/main/java/org/fisco/bcos/channel/handler/ChannelConnections.java", "diffHunk": "@@ -260,12 +280,22 @@ public ChannelHandlerContext getNetworkConnectionByHost(String host, Integer por\n      */\n     public ChannelHandlerContext setAndGetNetworkConnectionByHost(\n             String host, Integer port, ChannelHandlerContext ctx) {\n+        try {\n+            host = Inet6Address.getByName(host).getHostAddress();\n+        } catch (Exception e) {\n+            logger.error(\"invalid host string format, value: \" + host);\n+        }\n         String endpoint = host + \":\" + port;\n         return networkConnections.put(endpoint, ctx);\n     }\n \n     public void removeNetworkConnectionByHost(\n             String host, Integer port, ChannelHandlerContext ctx) {\n+        try {\n+            host = Inet6Address.getByName(host).getHostAddress();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "51671020b4bcdd6a39e72053c2118faff17476b8"}, "originalPosition": 64}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTE5NDMxNg==", "bodyText": "[PMD Java] Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nAvoidCatchingGenericException\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_design.html#avoidcatchinggenericexception\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/698#discussion_r471194316", "createdAt": "2020-08-17T01:52:49Z", "author": {"login": "sider"}, "path": "src/main/java/org/fisco/bcos/channel/handler/ChannelConnections.java", "diffHunk": "@@ -260,12 +280,22 @@ public ChannelHandlerContext getNetworkConnectionByHost(String host, Integer por\n      */\n     public ChannelHandlerContext setAndGetNetworkConnectionByHost(\n             String host, Integer port, ChannelHandlerContext ctx) {\n+        try {\n+            host = Inet6Address.getByName(host).getHostAddress();\n+        } catch (Exception e) {\n+            logger.error(\"invalid host string format, value: \" + host);\n+        }\n         String endpoint = host + \":\" + port;\n         return networkConnections.put(endpoint, ctx);\n     }\n \n     public void removeNetworkConnectionByHost(\n             String host, Integer port, ChannelHandlerContext ctx) {\n+        try {\n+            host = Inet6Address.getByName(host).getHostAddress();\n+        } catch (Exception e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "51671020b4bcdd6a39e72053c2118faff17476b8"}, "originalPosition": 65}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTE5NDMxNw==", "bodyText": "[PMD Java] Logger calls should be surrounded by log level guards. (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nGuardLogStatement\nBest Practices\n2\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_bestpractices.html#guardlogstatement\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/698#discussion_r471194317", "createdAt": "2020-08-17T01:52:49Z", "author": {"login": "sider"}, "path": "src/main/java/org/fisco/bcos/channel/handler/ChannelConnections.java", "diffHunk": "@@ -260,12 +280,22 @@ public ChannelHandlerContext getNetworkConnectionByHost(String host, Integer por\n      */\n     public ChannelHandlerContext setAndGetNetworkConnectionByHost(\n             String host, Integer port, ChannelHandlerContext ctx) {\n+        try {\n+            host = Inet6Address.getByName(host).getHostAddress();\n+        } catch (Exception e) {\n+            logger.error(\"invalid host string format, value: \" + host);\n+        }\n         String endpoint = host + \":\" + port;\n         return networkConnections.put(endpoint, ctx);\n     }\n \n     public void removeNetworkConnectionByHost(\n             String host, Integer port, ChannelHandlerContext ctx) {\n+        try {\n+            host = Inet6Address.getByName(host).getHostAddress();\n+        } catch (Exception e) {\n+            logger.error(\"invalid host string format, value: \" + host);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "51671020b4bcdd6a39e72053c2118faff17476b8"}, "originalPosition": 66}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTE5NDMxOA==", "bodyText": "[PMD Java] Potential violation of Law of Demeter (method chain calls) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/698#discussion_r471194318", "createdAt": "2020-08-17T01:52:49Z", "author": {"login": "sider"}, "path": "src/main/java/org/fisco/bcos/channel/handler/ChannelConnections.java", "diffHunk": "@@ -304,6 +334,13 @@ public void init() {\n                         \" Invalid configuration, invalid IP string format, value: \" + IP);\n             }\n \n+            try {\n+                IP = Inet6Address.getByName(IP).getHostAddress();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "51671020b4bcdd6a39e72053c2118faff17476b8"}, "originalPosition": 76}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTE5NDMyMA==", "bodyText": "[PMD Java] Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nAvoidCatchingGenericException\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_design.html#avoidcatchinggenericexception\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/698#discussion_r471194320", "createdAt": "2020-08-17T01:52:49Z", "author": {"login": "sider"}, "path": "src/main/java/org/fisco/bcos/channel/handler/ChannelConnections.java", "diffHunk": "@@ -304,6 +334,13 @@ public void init() {\n                         \" Invalid configuration, invalid IP string format, value: \" + IP);\n             }\n \n+            try {\n+                IP = Inet6Address.getByName(IP).getHostAddress();\n+            } catch (Exception e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "51671020b4bcdd6a39e72053c2118faff17476b8"}, "originalPosition": 77}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTE5NDMyMQ==", "bodyText": "[PMD Java] New exception is thrown in catch block, original stack trace may be lost (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nPreserveStackTrace\nBest Practices\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_bestpractices.html#preservestacktrace\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/698#discussion_r471194321", "createdAt": "2020-08-17T01:52:49Z", "author": {"login": "sider"}, "path": "src/main/java/org/fisco/bcos/channel/handler/ChannelConnections.java", "diffHunk": "@@ -304,6 +334,13 @@ public void init() {\n                         \" Invalid configuration, invalid IP string format, value: \" + IP);\n             }\n \n+            try {\n+                IP = Inet6Address.getByName(IP).getHostAddress();\n+            } catch (Exception e) {\n+                throw new IllegalArgumentException(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "51671020b4bcdd6a39e72053c2118faff17476b8"}, "originalPosition": 78}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTE5NDMyMg==", "bodyText": "[PMD Java] Potential violation of Law of Demeter (object not created locally) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/698#discussion_r471194322", "createdAt": "2020-08-17T01:52:49Z", "author": {"login": "sider"}, "path": "src/main/java/org/fisco/bcos/channel/handler/ChannelConnections.java", "diffHunk": "@@ -490,7 +529,29 @@ public SslContext initSMSslContext()\n                     getGmSslKey().getInputStream());\n         }\n \n-        logger.info(\" Has no SM Ssl certificate configuration \");\n+        PathMatchingResourcePatternResolver resolver = new PathMatchingResourcePatternResolver();\n+        Resource gmCaResource = resolver.getResource(GM_CA_CERT);\n+        Resource gmSslResource = resolver.getResource(GM_SSL_CERT);\n+        Resource gmSslKeyResource = resolver.getResource(GM_SSL_KEY);\n+        Resource gmEnSslResource = resolver.getResource(GM_EN_SSL_CERT);\n+        Resource gmEnSslKeyResource = resolver.getResource(GM_EN_SSL_KEY);\n+\n+        // The client's SM SSL default certificate exists\n+        if (gmCaResource.exists()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "51671020b4bcdd6a39e72053c2118faff17476b8"}, "originalPosition": 114}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTE5NDMyMw==", "bodyText": "[PMD Java] Potential violation of Law of Demeter (object not created locally) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/698#discussion_r471194323", "createdAt": "2020-08-17T01:52:49Z", "author": {"login": "sider"}, "path": "src/main/java/org/fisco/bcos/channel/handler/ChannelConnections.java", "diffHunk": "@@ -490,7 +529,29 @@ public SslContext initSMSslContext()\n                     getGmSslKey().getInputStream());\n         }\n \n-        logger.info(\" Has no SM Ssl certificate configuration \");\n+        PathMatchingResourcePatternResolver resolver = new PathMatchingResourcePatternResolver();\n+        Resource gmCaResource = resolver.getResource(GM_CA_CERT);\n+        Resource gmSslResource = resolver.getResource(GM_SSL_CERT);\n+        Resource gmSslKeyResource = resolver.getResource(GM_SSL_KEY);\n+        Resource gmEnSslResource = resolver.getResource(GM_EN_SSL_CERT);\n+        Resource gmEnSslKeyResource = resolver.getResource(GM_EN_SSL_KEY);\n+\n+        // The client's SM SSL default certificate exists\n+        if (gmCaResource.exists()\n+                && gmSslResource.exists()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "51671020b4bcdd6a39e72053c2118faff17476b8"}, "originalPosition": 115}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTE5NDMyNA==", "bodyText": "[PMD Java] Potential violation of Law of Demeter (object not created locally) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/698#discussion_r471194324", "createdAt": "2020-08-17T01:52:50Z", "author": {"login": "sider"}, "path": "src/main/java/org/fisco/bcos/channel/handler/ChannelConnections.java", "diffHunk": "@@ -490,7 +529,29 @@ public SslContext initSMSslContext()\n                     getGmSslKey().getInputStream());\n         }\n \n-        logger.info(\" Has no SM Ssl certificate configuration \");\n+        PathMatchingResourcePatternResolver resolver = new PathMatchingResourcePatternResolver();\n+        Resource gmCaResource = resolver.getResource(GM_CA_CERT);\n+        Resource gmSslResource = resolver.getResource(GM_SSL_CERT);\n+        Resource gmSslKeyResource = resolver.getResource(GM_SSL_KEY);\n+        Resource gmEnSslResource = resolver.getResource(GM_EN_SSL_CERT);\n+        Resource gmEnSslKeyResource = resolver.getResource(GM_EN_SSL_KEY);\n+\n+        // The client's SM SSL default certificate exists\n+        if (gmCaResource.exists()\n+                && gmSslResource.exists()\n+                && gmSslKeyResource.exists()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "51671020b4bcdd6a39e72053c2118faff17476b8"}, "originalPosition": 116}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTE5NDMyNg==", "bodyText": "[PMD Java] Potential violation of Law of Demeter (object not created locally) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/698#discussion_r471194326", "createdAt": "2020-08-17T01:52:50Z", "author": {"login": "sider"}, "path": "src/main/java/org/fisco/bcos/channel/handler/ChannelConnections.java", "diffHunk": "@@ -490,7 +529,29 @@ public SslContext initSMSslContext()\n                     getGmSslKey().getInputStream());\n         }\n \n-        logger.info(\" Has no SM Ssl certificate configuration \");\n+        PathMatchingResourcePatternResolver resolver = new PathMatchingResourcePatternResolver();\n+        Resource gmCaResource = resolver.getResource(GM_CA_CERT);\n+        Resource gmSslResource = resolver.getResource(GM_SSL_CERT);\n+        Resource gmSslKeyResource = resolver.getResource(GM_SSL_KEY);\n+        Resource gmEnSslResource = resolver.getResource(GM_EN_SSL_CERT);\n+        Resource gmEnSslKeyResource = resolver.getResource(GM_EN_SSL_KEY);\n+\n+        // The client's SM SSL default certificate exists\n+        if (gmCaResource.exists()\n+                && gmSslResource.exists()\n+                && gmSslKeyResource.exists()\n+                && gmEnSslKeyResource.exists()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "51671020b4bcdd6a39e72053c2118faff17476b8"}, "originalPosition": 117}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTE5NDMyOA==", "bodyText": "[PMD Java] Potential violation of Law of Demeter (object not created locally) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/698#discussion_r471194328", "createdAt": "2020-08-17T01:52:50Z", "author": {"login": "sider"}, "path": "src/main/java/org/fisco/bcos/channel/handler/ChannelConnections.java", "diffHunk": "@@ -490,7 +529,29 @@ public SslContext initSMSslContext()\n                     getGmSslKey().getInputStream());\n         }\n \n-        logger.info(\" Has no SM Ssl certificate configuration \");\n+        PathMatchingResourcePatternResolver resolver = new PathMatchingResourcePatternResolver();\n+        Resource gmCaResource = resolver.getResource(GM_CA_CERT);\n+        Resource gmSslResource = resolver.getResource(GM_SSL_CERT);\n+        Resource gmSslKeyResource = resolver.getResource(GM_SSL_KEY);\n+        Resource gmEnSslResource = resolver.getResource(GM_EN_SSL_CERT);\n+        Resource gmEnSslKeyResource = resolver.getResource(GM_EN_SSL_KEY);\n+\n+        // The client's SM SSL default certificate exists\n+        if (gmCaResource.exists()\n+                && gmSslResource.exists()\n+                && gmSslKeyResource.exists()\n+                && gmEnSslKeyResource.exists()\n+                && gmEnSslResource.exists()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "51671020b4bcdd6a39e72053c2118faff17476b8"}, "originalPosition": 118}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTE5NDMyOQ==", "bodyText": "[PMD Java] Potential violation of Law of Demeter (object not created locally) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/698#discussion_r471194329", "createdAt": "2020-08-17T01:52:50Z", "author": {"login": "sider"}, "path": "src/main/java/org/fisco/bcos/channel/handler/ChannelConnections.java", "diffHunk": "@@ -510,9 +571,14 @@ private SslContext initSslContext() throws SSLException {\n \n             // check if ca.crt exist\n             if (Objects.isNull(caResource) || !caResource.exists()) {\n-                throw new RuntimeException(\n-                        (Objects.nonNull(caResource) ? \"ca.crt\" : caResource.getFilename())\n-                                + \" not exist \");\n+                Resource resource = resolver.getResource(CA_CERT);\n+                if (Objects.nonNull(resource) && resource.exists()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "51671020b4bcdd6a39e72053c2118faff17476b8"}, "originalPosition": 140}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTE5NDMzMA==", "bodyText": "[PMD Java] Found 'DU'-anomaly for variable 'caResource' (lines '576'-'632'). (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nDataflowAnomalyAnalysis\nError Prone\n5\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_errorprone.html#dataflowanomalyanalysis\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/698#discussion_r471194330", "createdAt": "2020-08-17T01:52:50Z", "author": {"login": "sider"}, "path": "src/main/java/org/fisco/bcos/channel/handler/ChannelConnections.java", "diffHunk": "@@ -510,9 +571,14 @@ private SslContext initSslContext() throws SSLException {\n \n             // check if ca.crt exist\n             if (Objects.isNull(caResource) || !caResource.exists()) {\n-                throw new RuntimeException(\n-                        (Objects.nonNull(caResource) ? \"ca.crt\" : caResource.getFilename())\n-                                + \" not exist \");\n+                Resource resource = resolver.getResource(CA_CERT);\n+                if (Objects.nonNull(resource) && resource.exists()) {\n+                    caResource = resource;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "51671020b4bcdd6a39e72053c2118faff17476b8"}, "originalPosition": 141}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTE5NDMzMQ==", "bodyText": "[PMD Java] Avoid throwing raw exception types. (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nAvoidThrowingRawExceptionTypes\nDesign\n1\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_design.html#avoidthrowingrawexceptiontypes\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/698#discussion_r471194331", "createdAt": "2020-08-17T01:52:50Z", "author": {"login": "sider"}, "path": "src/main/java/org/fisco/bcos/channel/handler/ChannelConnections.java", "diffHunk": "@@ -510,9 +571,14 @@ private SslContext initSslContext() throws SSLException {\n \n             // check if ca.crt exist\n             if (Objects.isNull(caResource) || !caResource.exists()) {\n-                throw new RuntimeException(\n-                        (Objects.nonNull(caResource) ? \"ca.crt\" : caResource.getFilename())\n-                                + \" not exist \");\n+                Resource resource = resolver.getResource(CA_CERT);\n+                if (Objects.nonNull(resource) && resource.exists()) {\n+                    caResource = resource;\n+                } else {\n+                    throw new RuntimeException(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "51671020b4bcdd6a39e72053c2118faff17476b8"}, "originalPosition": 143}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTE5NDMzMg==", "bodyText": "[PMD Java] Potential violation of Law of Demeter (object not created locally) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/698#discussion_r471194332", "createdAt": "2020-08-17T01:52:51Z", "author": {"login": "sider"}, "path": "src/main/java/org/fisco/bcos/channel/handler/ChannelConnections.java", "diffHunk": "@@ -510,9 +571,14 @@ private SslContext initSslContext() throws SSLException {\n \n             // check if ca.crt exist\n             if (Objects.isNull(caResource) || !caResource.exists()) {\n-                throw new RuntimeException(\n-                        (Objects.nonNull(caResource) ? \"ca.crt\" : caResource.getFilename())\n-                                + \" not exist \");\n+                Resource resource = resolver.getResource(CA_CERT);\n+                if (Objects.nonNull(resource) && resource.exists()) {\n+                    caResource = resource;\n+                } else {\n+                    throw new RuntimeException(\n+                            (Objects.nonNull(caResource) ? \"ca.crt\" : caResource.getFilename())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "51671020b4bcdd6a39e72053c2118faff17476b8"}, "originalPosition": 144}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTE5NDMzMw==", "bodyText": "[PMD Java] Found 'DD'-anomaly for variable 'peer' (lines '639'-'639'). (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nDataflowAnomalyAnalysis\nError Prone\n5\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_errorprone.html#dataflowanomalyanalysis\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/698#discussion_r471194333", "createdAt": "2020-08-17T01:52:51Z", "author": {"login": "sider"}, "path": "src/main/java/org/fisco/bcos/channel/handler/ChannelConnections.java", "diffHunk": "@@ -568,9 +635,9 @@ public void heartbeat() {\n \n         List<Tuple2<String, ChannelHandlerContext>> tuple2List = new ArrayList<>();\n \n-        for (ConnectionInfo connectionInfo : connections) {\n-            String peer = connectionInfo.getHost() + \":\" + connectionInfo.getPort();\n-            ChannelHandlerContext ctx = networkConnections.get(peer);\n+        for (Map.Entry<String, ChannelHandlerContext> entry : networkConnections.entrySet()) {\n+            String peer = entry.getKey();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "51671020b4bcdd6a39e72053c2118faff17476b8"}, "originalPosition": 168}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTE5NDMzNA==", "bodyText": "[PMD Java] Found 'DU'-anomaly for variable 'peer' (lines '639'-'652'). (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nDataflowAnomalyAnalysis\nError Prone\n5\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_errorprone.html#dataflowanomalyanalysis\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/698#discussion_r471194334", "createdAt": "2020-08-17T01:52:51Z", "author": {"login": "sider"}, "path": "src/main/java/org/fisco/bcos/channel/handler/ChannelConnections.java", "diffHunk": "@@ -568,9 +635,9 @@ public void heartbeat() {\n \n         List<Tuple2<String, ChannelHandlerContext>> tuple2List = new ArrayList<>();\n \n-        for (ConnectionInfo connectionInfo : connections) {\n-            String peer = connectionInfo.getHost() + \":\" + connectionInfo.getPort();\n-            ChannelHandlerContext ctx = networkConnections.get(peer);\n+        for (Map.Entry<String, ChannelHandlerContext> entry : networkConnections.entrySet()) {\n+            String peer = entry.getKey();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "51671020b4bcdd6a39e72053c2118faff17476b8"}, "originalPosition": 168}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTE5NDMzNQ==", "bodyText": "[PMD Java] The method 'decode(String, int, Class)' has a cyclomatic complexity of 10. (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nCyclomaticComplexity\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_design.html#cyclomaticcomplexity\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/698#discussion_r471194335", "createdAt": "2020-08-17T01:52:51Z", "author": {"login": "sider"}, "path": "src/main/java/org/fisco/bcos/web3j/abi/TypeDecoder.java", "diffHunk": "@@ -36,7 +36,7 @@\n     static final int MAX_BYTE_LENGTH_FOR_HEX_STRING = Type.MAX_BYTE_LENGTH << 1;\n \n     @SuppressWarnings(\"unchecked\")\n-    static <T extends Type> T decode(String input, int offset, Class<T> type) {\n+    public static <T extends Type> T decode(String input, int offset, Class<T> type) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "51671020b4bcdd6a39e72053c2118faff17476b8"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTE5NDMzNg==", "bodyText": "[PMD Java] The class 'ABICodecJsonWrapper' has a total cyclomatic complexity of 80 (highest 35). (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nCyclomaticComplexity\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_design.html#cyclomaticcomplexity\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/698#discussion_r471194336", "createdAt": "2020-08-17T01:52:51Z", "author": {"login": "sider"}, "path": "src/main/java/org/fisco/bcos/web3j/abi/wrapper/ABICodecJsonWrapper.java", "diffHunk": "@@ -0,0 +1,497 @@\n+package org.fisco.bcos.web3j.abi.wrapper;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.databind.node.ArrayNode;\n+import com.fasterxml.jackson.databind.node.JsonNodeFactory;\n+import java.io.IOException;\n+import java.security.InvalidParameterException;\n+import java.util.ArrayList;\n+import java.util.Base64;\n+import java.util.Iterator;\n+import java.util.List;\n+import org.fisco.bcos.web3j.abi.datatypes.Address;\n+import org.fisco.bcos.web3j.abi.datatypes.Bool;\n+import org.fisco.bcos.web3j.abi.datatypes.Bytes;\n+import org.fisco.bcos.web3j.abi.datatypes.DynamicBytes;\n+import org.fisco.bcos.web3j.abi.datatypes.Utf8String;\n+import org.fisco.bcos.web3j.abi.datatypes.generated.Int256;\n+import org.fisco.bcos.web3j.abi.datatypes.generated.Uint256;\n+import org.fisco.bcos.web3j.abi.wrapper.ABIObject.ListType;\n+import org.fisco.bcos.web3j.protocol.ObjectMapperFactory;\n+import org.fisco.bcos.web3j.utils.Numeric;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public class ABICodecJsonWrapper {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "51671020b4bcdd6a39e72053c2118faff17476b8"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTE5NDMzNw==", "bodyText": "[PMD Java] Found non-transient, non-static member. Please mark as transient or provide accessors. (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nBeanMembersShouldSerialize\nError Prone\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_errorprone.html#beanmembersshouldserialize\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/698#discussion_r471194337", "createdAt": "2020-08-17T01:52:52Z", "author": {"login": "sider"}, "path": "src/main/java/org/fisco/bcos/web3j/abi/wrapper/ABICodecJsonWrapper.java", "diffHunk": "@@ -0,0 +1,497 @@\n+package org.fisco.bcos.web3j.abi.wrapper;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.databind.node.ArrayNode;\n+import com.fasterxml.jackson.databind.node.JsonNodeFactory;\n+import java.io.IOException;\n+import java.security.InvalidParameterException;\n+import java.util.ArrayList;\n+import java.util.Base64;\n+import java.util.Iterator;\n+import java.util.List;\n+import org.fisco.bcos.web3j.abi.datatypes.Address;\n+import org.fisco.bcos.web3j.abi.datatypes.Bool;\n+import org.fisco.bcos.web3j.abi.datatypes.Bytes;\n+import org.fisco.bcos.web3j.abi.datatypes.DynamicBytes;\n+import org.fisco.bcos.web3j.abi.datatypes.Utf8String;\n+import org.fisco.bcos.web3j.abi.datatypes.generated.Int256;\n+import org.fisco.bcos.web3j.abi.datatypes.generated.Uint256;\n+import org.fisco.bcos.web3j.abi.wrapper.ABIObject.ListType;\n+import org.fisco.bcos.web3j.protocol.ObjectMapperFactory;\n+import org.fisco.bcos.web3j.utils.Numeric;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public class ABICodecJsonWrapper {\n+\n+    private static final Logger logger = LoggerFactory.getLogger(ABICodecJsonWrapper.class);\n+\n+    private ObjectMapper objectMapper = ObjectMapperFactory.getObjectMapper();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "51671020b4bcdd6a39e72053c2118faff17476b8"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTE5NDMzOA==", "bodyText": "[PMD Java] Private field 'objectMapper' could be made final; it is only initialized in the declaration or constructor. (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nImmutableField\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_design.html#immutablefield\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/698#discussion_r471194338", "createdAt": "2020-08-17T01:52:52Z", "author": {"login": "sider"}, "path": "src/main/java/org/fisco/bcos/web3j/abi/wrapper/ABICodecJsonWrapper.java", "diffHunk": "@@ -0,0 +1,497 @@\n+package org.fisco.bcos.web3j.abi.wrapper;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.databind.node.ArrayNode;\n+import com.fasterxml.jackson.databind.node.JsonNodeFactory;\n+import java.io.IOException;\n+import java.security.InvalidParameterException;\n+import java.util.ArrayList;\n+import java.util.Base64;\n+import java.util.Iterator;\n+import java.util.List;\n+import org.fisco.bcos.web3j.abi.datatypes.Address;\n+import org.fisco.bcos.web3j.abi.datatypes.Bool;\n+import org.fisco.bcos.web3j.abi.datatypes.Bytes;\n+import org.fisco.bcos.web3j.abi.datatypes.DynamicBytes;\n+import org.fisco.bcos.web3j.abi.datatypes.Utf8String;\n+import org.fisco.bcos.web3j.abi.datatypes.generated.Int256;\n+import org.fisco.bcos.web3j.abi.datatypes.generated.Uint256;\n+import org.fisco.bcos.web3j.abi.wrapper.ABIObject.ListType;\n+import org.fisco.bcos.web3j.protocol.ObjectMapperFactory;\n+import org.fisco.bcos.web3j.utils.Numeric;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public class ABICodecJsonWrapper {\n+\n+    private static final Logger logger = LoggerFactory.getLogger(ABICodecJsonWrapper.class);\n+\n+    private ObjectMapper objectMapper = ObjectMapperFactory.getObjectMapper();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "51671020b4bcdd6a39e72053c2118faff17476b8"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTE5NDM0Mg==", "bodyText": "[PMD Java] A method or constructor should not explicitly declare unchecked exceptions in its 'throws' clause (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nAvoidUncheckedExceptionsInSignatures\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_design.html#avoiduncheckedexceptionsinsignatures\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/698#discussion_r471194342", "createdAt": "2020-08-17T01:52:52Z", "author": {"login": "sider"}, "path": "src/main/java/org/fisco/bcos/web3j/abi/wrapper/ABICodecJsonWrapper.java", "diffHunk": "@@ -0,0 +1,497 @@\n+package org.fisco.bcos.web3j.abi.wrapper;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.databind.node.ArrayNode;\n+import com.fasterxml.jackson.databind.node.JsonNodeFactory;\n+import java.io.IOException;\n+import java.security.InvalidParameterException;\n+import java.util.ArrayList;\n+import java.util.Base64;\n+import java.util.Iterator;\n+import java.util.List;\n+import org.fisco.bcos.web3j.abi.datatypes.Address;\n+import org.fisco.bcos.web3j.abi.datatypes.Bool;\n+import org.fisco.bcos.web3j.abi.datatypes.Bytes;\n+import org.fisco.bcos.web3j.abi.datatypes.DynamicBytes;\n+import org.fisco.bcos.web3j.abi.datatypes.Utf8String;\n+import org.fisco.bcos.web3j.abi.datatypes.generated.Int256;\n+import org.fisco.bcos.web3j.abi.datatypes.generated.Uint256;\n+import org.fisco.bcos.web3j.abi.wrapper.ABIObject.ListType;\n+import org.fisco.bcos.web3j.protocol.ObjectMapperFactory;\n+import org.fisco.bcos.web3j.utils.Numeric;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public class ABICodecJsonWrapper {\n+\n+    private static final Logger logger = LoggerFactory.getLogger(ABICodecJsonWrapper.class);\n+\n+    private ObjectMapper objectMapper = ObjectMapperFactory.getObjectMapper();\n+\n+    private void errorReport(String path, String expected, String actual)\n+            throws InvalidParameterException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "51671020b4bcdd6a39e72053c2118faff17476b8"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTE5NDM0Mw==", "bodyText": "[PMD Java] The method 'encodeNode(String, ABIObject, JsonNode)' has a cyclomatic complexity of 35. (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nCyclomaticComplexity\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_design.html#cyclomaticcomplexity\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/698#discussion_r471194343", "createdAt": "2020-08-17T01:52:52Z", "author": {"login": "sider"}, "path": "src/main/java/org/fisco/bcos/web3j/abi/wrapper/ABICodecJsonWrapper.java", "diffHunk": "@@ -0,0 +1,497 @@\n+package org.fisco.bcos.web3j.abi.wrapper;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.databind.node.ArrayNode;\n+import com.fasterxml.jackson.databind.node.JsonNodeFactory;\n+import java.io.IOException;\n+import java.security.InvalidParameterException;\n+import java.util.ArrayList;\n+import java.util.Base64;\n+import java.util.Iterator;\n+import java.util.List;\n+import org.fisco.bcos.web3j.abi.datatypes.Address;\n+import org.fisco.bcos.web3j.abi.datatypes.Bool;\n+import org.fisco.bcos.web3j.abi.datatypes.Bytes;\n+import org.fisco.bcos.web3j.abi.datatypes.DynamicBytes;\n+import org.fisco.bcos.web3j.abi.datatypes.Utf8String;\n+import org.fisco.bcos.web3j.abi.datatypes.generated.Int256;\n+import org.fisco.bcos.web3j.abi.datatypes.generated.Uint256;\n+import org.fisco.bcos.web3j.abi.wrapper.ABIObject.ListType;\n+import org.fisco.bcos.web3j.protocol.ObjectMapperFactory;\n+import org.fisco.bcos.web3j.utils.Numeric;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public class ABICodecJsonWrapper {\n+\n+    private static final Logger logger = LoggerFactory.getLogger(ABICodecJsonWrapper.class);\n+\n+    private ObjectMapper objectMapper = ObjectMapperFactory.getObjectMapper();\n+\n+    private void errorReport(String path, String expected, String actual)\n+            throws InvalidParameterException {\n+        String errorMessage =\n+                \"Arguments mismatch: \" + path + \", expected: \" + expected + \", actual: \" + actual;\n+        logger.error(errorMessage);\n+        throw new InvalidParameterException(errorMessage);\n+    }\n+\n+    private ABIObject encodeNode(String path, ABIObject template, JsonNode node) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "51671020b4bcdd6a39e72053c2118faff17476b8"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTE5NDM0NA==", "bodyText": "[PMD Java] Avoid really long methods. (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nExcessiveMethodLength\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_design.html#excessivemethodlength\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/698#discussion_r471194344", "createdAt": "2020-08-17T01:52:52Z", "author": {"login": "sider"}, "path": "src/main/java/org/fisco/bcos/web3j/abi/wrapper/ABICodecJsonWrapper.java", "diffHunk": "@@ -0,0 +1,497 @@\n+package org.fisco.bcos.web3j.abi.wrapper;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.databind.node.ArrayNode;\n+import com.fasterxml.jackson.databind.node.JsonNodeFactory;\n+import java.io.IOException;\n+import java.security.InvalidParameterException;\n+import java.util.ArrayList;\n+import java.util.Base64;\n+import java.util.Iterator;\n+import java.util.List;\n+import org.fisco.bcos.web3j.abi.datatypes.Address;\n+import org.fisco.bcos.web3j.abi.datatypes.Bool;\n+import org.fisco.bcos.web3j.abi.datatypes.Bytes;\n+import org.fisco.bcos.web3j.abi.datatypes.DynamicBytes;\n+import org.fisco.bcos.web3j.abi.datatypes.Utf8String;\n+import org.fisco.bcos.web3j.abi.datatypes.generated.Int256;\n+import org.fisco.bcos.web3j.abi.datatypes.generated.Uint256;\n+import org.fisco.bcos.web3j.abi.wrapper.ABIObject.ListType;\n+import org.fisco.bcos.web3j.protocol.ObjectMapperFactory;\n+import org.fisco.bcos.web3j.utils.Numeric;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public class ABICodecJsonWrapper {\n+\n+    private static final Logger logger = LoggerFactory.getLogger(ABICodecJsonWrapper.class);\n+\n+    private ObjectMapper objectMapper = ObjectMapperFactory.getObjectMapper();\n+\n+    private void errorReport(String path, String expected, String actual)\n+            throws InvalidParameterException {\n+        String errorMessage =\n+                \"Arguments mismatch: \" + path + \", expected: \" + expected + \", actual: \" + actual;\n+        logger.error(errorMessage);\n+        throw new InvalidParameterException(errorMessage);\n+    }\n+\n+    private ABIObject encodeNode(String path, ABIObject template, JsonNode node) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "51671020b4bcdd6a39e72053c2118faff17476b8"}, "originalPosition": 40}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY4MTI2MzQz", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/698#pullrequestreview-468126343", "createdAt": "2020-08-17T02:00:50Z", "commit": {"oid": "51671020b4bcdd6a39e72053c2118faff17476b8"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1831, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}