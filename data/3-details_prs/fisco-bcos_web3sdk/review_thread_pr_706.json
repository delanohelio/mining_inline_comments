{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg3MjM2ODA2", "number": 706, "reviewThreads": {"totalCount": 56, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQxMTo0MToyNlrOEjjRRA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQwNjo1NjoyMlrOEn8jUQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1NzEzNDc2OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/fisco/bcos/web3j/crypto/Keys.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQxMTo0MToyNlrOHR9sWw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQxMTo0MToyNlrOHR9sWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODU5ODYxOQ==", "bodyText": "[PMD Java] Avoid empty if statements (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nEmptyIfStmt\nError Prone\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_errorprone.html#emptyifstmt\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/706#discussion_r488598619", "createdAt": "2020-09-15T11:41:26Z", "author": {"login": "sider"}, "path": "src/main/java/org/fisco/bcos/web3j/crypto/Keys.java", "diffHunk": "@@ -99,7 +100,20 @@ public static String getAddress(String publicKey) {\n             publicKeyNoPrefix =\n                     Strings.zeros(PUBLIC_KEY_LENGTH_IN_HEX - publicKeyNoPrefix.length())\n                             + publicKeyNoPrefix;\n+        } else if (publicKeyNoPrefix.length() == PUBLIC_KEY_LENGTH_IN_HEX) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "74a7654af618d099e581191ac4db63ea173a20ec"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1NzEzNDc3OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/fisco/bcos/web3j/crypto/Keys.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQxMTo0MToyNlrOHR9sXg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQxMTo0MToyNlrOHR9sXg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODU5ODYyMg==", "bodyText": "[PMD Java] Potential violation of Law of Demeter (object not created locally) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/706#discussion_r488598622", "createdAt": "2020-09-15T11:41:26Z", "author": {"login": "sider"}, "path": "src/main/java/org/fisco/bcos/web3j/crypto/Keys.java", "diffHunk": "@@ -99,7 +100,20 @@ public static String getAddress(String publicKey) {\n             publicKeyNoPrefix =\n                     Strings.zeros(PUBLIC_KEY_LENGTH_IN_HEX - publicKeyNoPrefix.length())\n                             + publicKeyNoPrefix;\n+        } else if (publicKeyNoPrefix.length() == PUBLIC_KEY_LENGTH_IN_HEX) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "74a7654af618d099e581191ac4db63ea173a20ec"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1NzEzNDgwOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/fisco/bcos/web3j/crypto/Keys.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQxMTo0MToyNlrOHR9sYg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQxMTo0MToyNlrOHR9sYg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODU5ODYyNg==", "bodyText": "[PMD Java] Potential violation of Law of Demeter (object not created locally) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/706#discussion_r488598626", "createdAt": "2020-09-15T11:41:26Z", "author": {"login": "sider"}, "path": "src/main/java/org/fisco/bcos/web3j/crypto/Keys.java", "diffHunk": "@@ -99,7 +100,20 @@ public static String getAddress(String publicKey) {\n             publicKeyNoPrefix =\n                     Strings.zeros(PUBLIC_KEY_LENGTH_IN_HEX - publicKeyNoPrefix.length())\n                             + publicKeyNoPrefix;\n+        } else if (publicKeyNoPrefix.length() == PUBLIC_KEY_LENGTH_IN_HEX) {\n+            // do nothing\n+        } else if (publicKeyNoPrefix.length() == PUBLIC_KEY_LENGTH_IN_HEX_WITH_COMPRESS_FLAG) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "74a7654af618d099e581191ac4db63ea173a20ec"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2MTA0NzMxOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/fisco/bcos/web3j/crypto/Keys.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQwNzoyODoxNVrOHSjuZA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQwNzoyODoxNVrOHSjuZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTIyMTczMg==", "bodyText": "[PMD Java] Avoid empty if statements (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nEmptyIfStmt\nError Prone\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_errorprone.html#emptyifstmt\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/706#discussion_r489221732", "createdAt": "2020-09-16T07:28:15Z", "author": {"login": "sider"}, "path": "src/main/java/org/fisco/bcos/web3j/crypto/Keys.java", "diffHunk": "@@ -99,7 +102,27 @@ public static String getAddress(String publicKey) {\n             publicKeyNoPrefix =\n                     Strings.zeros(PUBLIC_KEY_LENGTH_IN_HEX - publicKeyNoPrefix.length())\n                             + publicKeyNoPrefix;\n+        } else if (publicKeyNoPrefix.length() == PUBLIC_KEY_LENGTH_IN_HEX) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2e25e2a8d1802f1782f8b81160245643c8bbdfa3"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2MTA0NzMzOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/fisco/bcos/web3j/crypto/Keys.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQwNzoyODoxNVrOHSjuaA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQwNzoyODoxNVrOHSjuaA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTIyMTczNg==", "bodyText": "[PMD Java] Potential violation of Law of Demeter (object not created locally) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/706#discussion_r489221736", "createdAt": "2020-09-16T07:28:15Z", "author": {"login": "sider"}, "path": "src/main/java/org/fisco/bcos/web3j/crypto/Keys.java", "diffHunk": "@@ -99,7 +102,27 @@ public static String getAddress(String publicKey) {\n             publicKeyNoPrefix =\n                     Strings.zeros(PUBLIC_KEY_LENGTH_IN_HEX - publicKeyNoPrefix.length())\n                             + publicKeyNoPrefix;\n+        } else if (publicKeyNoPrefix.length() == PUBLIC_KEY_LENGTH_IN_HEX) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2e25e2a8d1802f1782f8b81160245643c8bbdfa3"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2MTA0NzM0OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/fisco/bcos/web3j/crypto/Keys.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQwNzoyODoxNVrOHSjuaQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQwNzoyODoxNVrOHSjuaQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTIyMTczNw==", "bodyText": "[PMD Java] Potential violation of Law of Demeter (object not created locally) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/706#discussion_r489221737", "createdAt": "2020-09-16T07:28:15Z", "author": {"login": "sider"}, "path": "src/main/java/org/fisco/bcos/web3j/crypto/Keys.java", "diffHunk": "@@ -99,7 +102,27 @@ public static String getAddress(String publicKey) {\n             publicKeyNoPrefix =\n                     Strings.zeros(PUBLIC_KEY_LENGTH_IN_HEX - publicKeyNoPrefix.length())\n                             + publicKeyNoPrefix;\n+        } else if (publicKeyNoPrefix.length() == PUBLIC_KEY_LENGTH_IN_HEX) {\n+            // do nothing\n+        } else if (publicKeyNoPrefix.length() == PUBLIC_KEY_LENGTH_IN_HEX_WITH_COMPRESS_FLAG_2) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2e25e2a8d1802f1782f8b81160245643c8bbdfa3"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2MTA0NzM2OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/fisco/bcos/web3j/crypto/Keys.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQwNzoyODoxNlrOHSjuaw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQwNzoyODoxNlrOHSjuaw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTIyMTczOQ==", "bodyText": "[PMD Java] Potential violation of Law of Demeter (object not created locally) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/706#discussion_r489221739", "createdAt": "2020-09-16T07:28:16Z", "author": {"login": "sider"}, "path": "src/main/java/org/fisco/bcos/web3j/crypto/Keys.java", "diffHunk": "@@ -99,7 +102,27 @@ public static String getAddress(String publicKey) {\n             publicKeyNoPrefix =\n                     Strings.zeros(PUBLIC_KEY_LENGTH_IN_HEX - publicKeyNoPrefix.length())\n                             + publicKeyNoPrefix;\n+        } else if (publicKeyNoPrefix.length() == PUBLIC_KEY_LENGTH_IN_HEX) {\n+            // do nothing\n+        } else if (publicKeyNoPrefix.length() == PUBLIC_KEY_LENGTH_IN_HEX_WITH_COMPRESS_FLAG_2) {\n+            // 130 length,should start with 03 or 04\n+            if (!(publicKeyNoPrefix.startsWith(\"03\") || publicKeyNoPrefix.startsWith(\"04\"))) {\n+                throw new IllegalArgumentException(\n+                        \" publicKey not start with \\\"03\\\" or \\\"04\\\", publicKey: \" + publicKey);\n+            }\n+            publicKeyNoPrefix = publicKeyNoPrefix.substring(2);\n+        } else if (publicKeyNoPrefix.length() == PUBLIC_KEY_LENGTH_IN_HEX_WITH_COMPRESS_FLAG_1) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2e25e2a8d1802f1782f8b81160245643c8bbdfa3"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2MTA0NzM3OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/fisco/bcos/web3j/crypto/Keys.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQwNzoyODoxNlrOHSjubA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQwNzoyODoxNlrOHSjubA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTIyMTc0MA==", "bodyText": "[PMD Java] This call to String.startsWith can be rewritten using String.charAt(0) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nSimplifyStartsWith\nPerformance\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_performance.html#simplifystartswith\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/706#discussion_r489221740", "createdAt": "2020-09-16T07:28:16Z", "author": {"login": "sider"}, "path": "src/main/java/org/fisco/bcos/web3j/crypto/Keys.java", "diffHunk": "@@ -99,7 +102,27 @@ public static String getAddress(String publicKey) {\n             publicKeyNoPrefix =\n                     Strings.zeros(PUBLIC_KEY_LENGTH_IN_HEX - publicKeyNoPrefix.length())\n                             + publicKeyNoPrefix;\n+        } else if (publicKeyNoPrefix.length() == PUBLIC_KEY_LENGTH_IN_HEX) {\n+            // do nothing\n+        } else if (publicKeyNoPrefix.length() == PUBLIC_KEY_LENGTH_IN_HEX_WITH_COMPRESS_FLAG_2) {\n+            // 130 length,should start with 03 or 04\n+            if (!(publicKeyNoPrefix.startsWith(\"03\") || publicKeyNoPrefix.startsWith(\"04\"))) {\n+                throw new IllegalArgumentException(\n+                        \" publicKey not start with \\\"03\\\" or \\\"04\\\", publicKey: \" + publicKey);\n+            }\n+            publicKeyNoPrefix = publicKeyNoPrefix.substring(2);\n+        } else if (publicKeyNoPrefix.length() == PUBLIC_KEY_LENGTH_IN_HEX_WITH_COMPRESS_FLAG_1) {\n+            // 129 length,should start with 3 or 4\n+            if (!(publicKeyNoPrefix.startsWith(\"3\") || publicKeyNoPrefix.startsWith(\"4\"))) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2e25e2a8d1802f1782f8b81160245643c8bbdfa3"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3MDIwODMzOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/fisco/bcos/web3j/precompile/cns/CnsService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQwMzoxMToxNFrOHT8bPQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQwMzoxMToxNFrOHT8bPQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDY3NTAwNQ==", "bodyText": "[PMD Java] Potential violation of Law of Demeter (method chain calls) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/706#discussion_r490675005", "createdAt": "2020-09-18T03:11:14Z", "author": {"login": "sider"}, "path": "src/main/java/org/fisco/bcos/web3j/precompile/cns/CnsService.java", "diffHunk": "@@ -99,14 +99,16 @@ public String getAddressByContractNameAndVersion(String contractNameAndVersion)\n \n     public String registerCns(String name, String version, String address, String abi)\n             throws Exception {\n-        CNS cns = lookupResolver();\n-        if (version.length() > MAX_VERSION_LENGTH) {\n-            return PrecompiledCommon.transferToJson(PrecompiledCommon.VersionExceeds);\n-        }\n-        TransactionReceipt receipt = cns.insert(name, version, address, abi).send();\n+        TransactionReceipt receipt = registerCnsAndRetReceipt(name, version, address, abi);\n         return PrecompiledCommon.handleTransactionReceipt(receipt, web3j);\n     }\n \n+    public TransactionReceipt registerCnsAndRetReceipt(\n+            String name, String version, String address, String abi) throws Exception {\n+        CNS cns = lookupResolver();\n+        return cns.insert(name, version, address, abi).send();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76eccee76628f89fec8c5872adebb070def50a0e"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3MDIwODM0OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/fisco/bcos/web3j/precompile/cns/CnsService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQwMzoxMToxNFrOHT8bPw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQwMzoxMToxNFrOHT8bPw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDY3NTAwNw==", "bodyText": "[PMD Java] Potential violation of Law of Demeter (object not created locally) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/706#discussion_r490675007", "createdAt": "2020-09-18T03:11:14Z", "author": {"login": "sider"}, "path": "src/main/java/org/fisco/bcos/web3j/precompile/cns/CnsService.java", "diffHunk": "@@ -99,14 +99,16 @@ public String getAddressByContractNameAndVersion(String contractNameAndVersion)\n \n     public String registerCns(String name, String version, String address, String abi)\n             throws Exception {\n-        CNS cns = lookupResolver();\n-        if (version.length() > MAX_VERSION_LENGTH) {\n-            return PrecompiledCommon.transferToJson(PrecompiledCommon.VersionExceeds);\n-        }\n-        TransactionReceipt receipt = cns.insert(name, version, address, abi).send();\n+        TransactionReceipt receipt = registerCnsAndRetReceipt(name, version, address, abi);\n         return PrecompiledCommon.handleTransactionReceipt(receipt, web3j);\n     }\n \n+    public TransactionReceipt registerCnsAndRetReceipt(\n+            String name, String version, String address, String abi) throws Exception {\n+        CNS cns = lookupResolver();\n+        return cns.insert(name, version, address, abi).send();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76eccee76628f89fec8c5872adebb070def50a0e"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3MDIwODM1OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/fisco/bcos/web3j/precompile/config/SystemConfigService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQwMzoxMToxNFrOHT8bQA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQwMzoxMToxNFrOHT8bQA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDY3NTAwOA==", "bodyText": "[PMD Java] Potential violation of Law of Demeter (method chain calls) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/706#discussion_r490675008", "createdAt": "2020-09-18T03:11:14Z", "author": {"login": "sider"}, "path": "src/main/java/org/fisco/bcos/web3j/precompile/config/SystemConfigService.java", "diffHunk": "@@ -25,7 +25,12 @@ public SystemConfigService(Web3j web3j, Credentials credentials) {\n     }\n \n     public String setValueByKey(String key, String value) throws Exception {\n-        TransactionReceipt receipt = systemConfig.setValueByKey(key, value).send();\n+        TransactionReceipt receipt = setValueByKeyAndRetReceipt(key, value);\n         return PrecompiledCommon.handleTransactionReceipt(receipt, web3j);\n     }\n+\n+    public TransactionReceipt setValueByKeyAndRetReceipt(String key, String value)\n+            throws Exception {\n+        return systemConfig.setValueByKey(key, value).send();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76eccee76628f89fec8c5872adebb070def50a0e"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3MDIwODM3OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/fisco/bcos/web3j/precompile/csm/ContractStatusService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQwMzoxMToxNFrOHT8bQg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQwMzoxMToxNFrOHT8bQg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDY3NTAxMA==", "bodyText": "[PMD Java] Potential violation of Law of Demeter (method chain calls) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/706#discussion_r490675010", "createdAt": "2020-09-18T03:11:14Z", "author": {"login": "sider"}, "path": "src/main/java/org/fisco/bcos/web3j/precompile/csm/ContractStatusService.java", "diffHunk": "@@ -32,37 +31,33 @@ public ContractStatusService(Web3j web3j, Credentials credentials) {\n     }\n \n     public String freeze(String addr) throws Exception {\n-        if (!WalletUtils.isValidAddress(addr)) {\n-            return PrecompiledCommon.transferToJson(PrecompiledCommon.InvalidAddress);\n-        }\n-\n-        TransactionReceipt receipt = contractLifeCycle.freeze(addr).send();\n+        TransactionReceipt receipt = freezeAndRetReceipt(addr);\n         return PrecompiledCommon.handleTransactionReceipt(receipt, web3j);\n     }\n \n-    public String unfreeze(String addr) throws Exception {\n-        if (!WalletUtils.isValidAddress(addr)) {\n-            return PrecompiledCommon.transferToJson(PrecompiledCommon.InvalidAddress);\n-        }\n+    public TransactionReceipt freezeAndRetReceipt(String addr) throws Exception {\n+        return contractLifeCycle.freeze(addr).send();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76eccee76628f89fec8c5872adebb070def50a0e"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3MDIwODQxOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/fisco/bcos/web3j/precompile/csm/ContractStatusService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQwMzoxMToxNVrOHT8bRg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQwMzoxMToxNVrOHT8bRg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDY3NTAxNA==", "bodyText": "[PMD Java] Potential violation of Law of Demeter (method chain calls) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/706#discussion_r490675014", "createdAt": "2020-09-18T03:11:15Z", "author": {"login": "sider"}, "path": "src/main/java/org/fisco/bcos/web3j/precompile/csm/ContractStatusService.java", "diffHunk": "@@ -32,37 +31,33 @@ public ContractStatusService(Web3j web3j, Credentials credentials) {\n     }\n \n     public String freeze(String addr) throws Exception {\n-        if (!WalletUtils.isValidAddress(addr)) {\n-            return PrecompiledCommon.transferToJson(PrecompiledCommon.InvalidAddress);\n-        }\n-\n-        TransactionReceipt receipt = contractLifeCycle.freeze(addr).send();\n+        TransactionReceipt receipt = freezeAndRetReceipt(addr);\n         return PrecompiledCommon.handleTransactionReceipt(receipt, web3j);\n     }\n \n-    public String unfreeze(String addr) throws Exception {\n-        if (!WalletUtils.isValidAddress(addr)) {\n-            return PrecompiledCommon.transferToJson(PrecompiledCommon.InvalidAddress);\n-        }\n+    public TransactionReceipt freezeAndRetReceipt(String addr) throws Exception {\n+        return contractLifeCycle.freeze(addr).send();\n+    }\n \n-        TransactionReceipt receipt = contractLifeCycle.unfreeze(addr).send();\n+    public String unfreeze(String addr) throws Exception {\n+        TransactionReceipt receipt = unfreezeAndRetReceipt(addr);\n         return PrecompiledCommon.handleTransactionReceipt(receipt, web3j);\n     }\n \n-    public String grantManager(String addr, String user) throws Exception {\n-        if (!WalletUtils.isValidAddress(addr) || !WalletUtils.isValidAddress(user)) {\n-            return PrecompiledCommon.transferToJson(PrecompiledCommon.InvalidAddress);\n-        }\n+    public TransactionReceipt unfreezeAndRetReceipt(String addr) throws Exception {\n+        return contractLifeCycle.unfreeze(addr).send();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76eccee76628f89fec8c5872adebb070def50a0e"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3MDIwODQ0OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/fisco/bcos/web3j/precompile/csm/ContractStatusService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQwMzoxMToxNVrOHT8bSQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQwMzoxMToxNVrOHT8bSQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDY3NTAxNw==", "bodyText": "[PMD Java] Potential violation of Law of Demeter (method chain calls) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/706#discussion_r490675017", "createdAt": "2020-09-18T03:11:15Z", "author": {"login": "sider"}, "path": "src/main/java/org/fisco/bcos/web3j/precompile/csm/ContractStatusService.java", "diffHunk": "@@ -32,37 +31,33 @@ public ContractStatusService(Web3j web3j, Credentials credentials) {\n     }\n \n     public String freeze(String addr) throws Exception {\n-        if (!WalletUtils.isValidAddress(addr)) {\n-            return PrecompiledCommon.transferToJson(PrecompiledCommon.InvalidAddress);\n-        }\n-\n-        TransactionReceipt receipt = contractLifeCycle.freeze(addr).send();\n+        TransactionReceipt receipt = freezeAndRetReceipt(addr);\n         return PrecompiledCommon.handleTransactionReceipt(receipt, web3j);\n     }\n \n-    public String unfreeze(String addr) throws Exception {\n-        if (!WalletUtils.isValidAddress(addr)) {\n-            return PrecompiledCommon.transferToJson(PrecompiledCommon.InvalidAddress);\n-        }\n+    public TransactionReceipt freezeAndRetReceipt(String addr) throws Exception {\n+        return contractLifeCycle.freeze(addr).send();\n+    }\n \n-        TransactionReceipt receipt = contractLifeCycle.unfreeze(addr).send();\n+    public String unfreeze(String addr) throws Exception {\n+        TransactionReceipt receipt = unfreezeAndRetReceipt(addr);\n         return PrecompiledCommon.handleTransactionReceipt(receipt, web3j);\n     }\n \n-    public String grantManager(String addr, String user) throws Exception {\n-        if (!WalletUtils.isValidAddress(addr) || !WalletUtils.isValidAddress(user)) {\n-            return PrecompiledCommon.transferToJson(PrecompiledCommon.InvalidAddress);\n-        }\n+    public TransactionReceipt unfreezeAndRetReceipt(String addr) throws Exception {\n+        return contractLifeCycle.unfreeze(addr).send();\n+    }\n \n-        TransactionReceipt receipt = contractLifeCycle.grantManager(addr, user).send();\n+    public String grantManager(String addr, String user) throws Exception {\n+        TransactionReceipt receipt = grantManagerAndRetReceipt(addr, user);\n         return PrecompiledCommon.handleTransactionReceipt(receipt, web3j);\n     }\n \n-    public String getStatus(String addr) throws Exception {\n-        if (!WalletUtils.isValidAddress(addr)) {\n-            return PrecompiledCommon.transferToJson(PrecompiledCommon.InvalidAddress);\n-        }\n+    public TransactionReceipt grantManagerAndRetReceipt(String addr, String user) throws Exception {\n+        return contractLifeCycle.grantManager(addr, user).send();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76eccee76628f89fec8c5872adebb070def50a0e"}, "originalPosition": 54}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3MDIwODQ1OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/fisco/bcos/web3j/precompile/permission/ChainGovernanceService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQwMzoxMToxNVrOHT8bSg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQwMzoxMToxNVrOHT8bSg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDY3NTAxOA==", "bodyText": "[PMD Java] Potential violation of Law of Demeter (method chain calls) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/706#discussion_r490675018", "createdAt": "2020-09-18T03:11:15Z", "author": {"login": "sider"}, "path": "src/main/java/org/fisco/bcos/web3j/precompile/permission/ChainGovernanceService.java", "diffHunk": "@@ -69,11 +69,14 @@ public BigInteger queryThreshold() throws Exception {\n     }\n \n     public String grantCommitteeMember(String account) throws Exception {\n-        TransactionReceipt transactionReceipt =\n-                chainGovernance.grantCommitteeMember(account).send();\n+        TransactionReceipt transactionReceipt = grantCommitteeMemberAndRetReceipt(account);\n         return PrecompiledCommon.handleTransactionReceipt(transactionReceipt, web3j);\n     }\n \n+    public TransactionReceipt grantCommitteeMemberAndRetReceipt(String account) throws Exception {\n+        return chainGovernance.grantCommitteeMember(account).send();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76eccee76628f89fec8c5872adebb070def50a0e"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3MDIwODQ2OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/fisco/bcos/web3j/precompile/permission/ChainGovernanceService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQwMzoxMToxNlrOHT8bSw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQwMzoxMToxNlrOHT8bSw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDY3NTAxOQ==", "bodyText": "[PMD Java] Potential violation of Law of Demeter (method chain calls) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/706#discussion_r490675019", "createdAt": "2020-09-18T03:11:16Z", "author": {"login": "sider"}, "path": "src/main/java/org/fisco/bcos/web3j/precompile/permission/ChainGovernanceService.java", "diffHunk": "@@ -85,37 +88,59 @@ public String grantCommitteeMember(String account) throws Exception {\n     }\n \n     public String updateThreshold(int threshold) throws Exception {\n-        TransactionReceipt transactionReceipt =\n-                chainGovernance.updateThreshold(BigInteger.valueOf(threshold)).send();\n+        TransactionReceipt transactionReceipt = updateThresholdAndRetReceipt(threshold);\n         return PrecompiledCommon.handleTransactionReceipt(transactionReceipt, web3j);\n     }\n \n+    public TransactionReceipt updateThresholdAndRetReceipt(int threshold) throws Exception {\n+        return chainGovernance.updateThreshold(BigInteger.valueOf(threshold)).send();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76eccee76628f89fec8c5872adebb070def50a0e"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3MDIwODQ4OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/fisco/bcos/web3j/precompile/permission/ChainGovernanceService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQwMzoxMToxNlrOHT8bTQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQwMzoxMToxNlrOHT8bTQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDY3NTAyMQ==", "bodyText": "[PMD Java] Potential violation of Law of Demeter (method chain calls) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/706#discussion_r490675021", "createdAt": "2020-09-18T03:11:16Z", "author": {"login": "sider"}, "path": "src/main/java/org/fisco/bcos/web3j/precompile/permission/ChainGovernanceService.java", "diffHunk": "@@ -85,37 +88,59 @@ public String grantCommitteeMember(String account) throws Exception {\n     }\n \n     public String updateThreshold(int threshold) throws Exception {\n-        TransactionReceipt transactionReceipt =\n-                chainGovernance.updateThreshold(BigInteger.valueOf(threshold)).send();\n+        TransactionReceipt transactionReceipt = updateThresholdAndRetReceipt(threshold);\n         return PrecompiledCommon.handleTransactionReceipt(transactionReceipt, web3j);\n     }\n \n+    public TransactionReceipt updateThresholdAndRetReceipt(int threshold) throws Exception {\n+        return chainGovernance.updateThreshold(BigInteger.valueOf(threshold)).send();\n+    }\n+\n     public String revokeCommitteeMember(String account) throws Exception {\n-        TransactionReceipt transactionReceipt =\n-                chainGovernance.revokeCommitteeMember(account).send();\n+        TransactionReceipt transactionReceipt = revokeCommitteeMemberAndRetReceipt(account);\n         return PrecompiledCommon.handleTransactionReceipt(transactionReceipt, web3j);\n     }\n \n+    public TransactionReceipt revokeCommitteeMemberAndRetReceipt(String account) throws Exception {\n+        return chainGovernance.revokeCommitteeMember(account).send();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76eccee76628f89fec8c5872adebb070def50a0e"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3MDIwODQ5OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/fisco/bcos/web3j/precompile/permission/ChainGovernanceService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQwMzoxMToxNlrOHT8bTg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQwMzoxMToxNlrOHT8bTg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDY3NTAyMg==", "bodyText": "[PMD Java] Potential violation of Law of Demeter (method chain calls) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/706#discussion_r490675022", "createdAt": "2020-09-18T03:11:16Z", "author": {"login": "sider"}, "path": "src/main/java/org/fisco/bcos/web3j/precompile/permission/ChainGovernanceService.java", "diffHunk": "@@ -85,37 +88,59 @@ public String grantCommitteeMember(String account) throws Exception {\n     }\n \n     public String updateThreshold(int threshold) throws Exception {\n-        TransactionReceipt transactionReceipt =\n-                chainGovernance.updateThreshold(BigInteger.valueOf(threshold)).send();\n+        TransactionReceipt transactionReceipt = updateThresholdAndRetReceipt(threshold);\n         return PrecompiledCommon.handleTransactionReceipt(transactionReceipt, web3j);\n     }\n \n+    public TransactionReceipt updateThresholdAndRetReceipt(int threshold) throws Exception {\n+        return chainGovernance.updateThreshold(BigInteger.valueOf(threshold)).send();\n+    }\n+\n     public String revokeCommitteeMember(String account) throws Exception {\n-        TransactionReceipt transactionReceipt =\n-                chainGovernance.revokeCommitteeMember(account).send();\n+        TransactionReceipt transactionReceipt = revokeCommitteeMemberAndRetReceipt(account);\n         return PrecompiledCommon.handleTransactionReceipt(transactionReceipt, web3j);\n     }\n \n+    public TransactionReceipt revokeCommitteeMemberAndRetReceipt(String account) throws Exception {\n+        return chainGovernance.revokeCommitteeMember(account).send();\n+    }\n+\n     public String grantOperator(String account) throws Exception {\n-        TransactionReceipt transactionReceipt = chainGovernance.grantOperator(account).send();\n+        TransactionReceipt transactionReceipt = grantOperatorAndRetReceipt(account);\n         return PrecompiledCommon.handleTransactionReceipt(transactionReceipt, web3j);\n     }\n \n+    public TransactionReceipt grantOperatorAndRetReceipt(String account) throws Exception {\n+        return chainGovernance.grantOperator(account).send();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76eccee76628f89fec8c5872adebb070def50a0e"}, "originalPosition": 49}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3MDIwODUwOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/fisco/bcos/web3j/precompile/permission/ChainGovernanceService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQwMzoxMToxNlrOHT8bUA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQwMzoxMToxNlrOHT8bUA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDY3NTAyNA==", "bodyText": "[PMD Java] Potential violation of Law of Demeter (method chain calls) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/706#discussion_r490675024", "createdAt": "2020-09-18T03:11:16Z", "author": {"login": "sider"}, "path": "src/main/java/org/fisco/bcos/web3j/precompile/permission/ChainGovernanceService.java", "diffHunk": "@@ -85,37 +88,59 @@ public String grantCommitteeMember(String account) throws Exception {\n     }\n \n     public String updateThreshold(int threshold) throws Exception {\n-        TransactionReceipt transactionReceipt =\n-                chainGovernance.updateThreshold(BigInteger.valueOf(threshold)).send();\n+        TransactionReceipt transactionReceipt = updateThresholdAndRetReceipt(threshold);\n         return PrecompiledCommon.handleTransactionReceipt(transactionReceipt, web3j);\n     }\n \n+    public TransactionReceipt updateThresholdAndRetReceipt(int threshold) throws Exception {\n+        return chainGovernance.updateThreshold(BigInteger.valueOf(threshold)).send();\n+    }\n+\n     public String revokeCommitteeMember(String account) throws Exception {\n-        TransactionReceipt transactionReceipt =\n-                chainGovernance.revokeCommitteeMember(account).send();\n+        TransactionReceipt transactionReceipt = revokeCommitteeMemberAndRetReceipt(account);\n         return PrecompiledCommon.handleTransactionReceipt(transactionReceipt, web3j);\n     }\n \n+    public TransactionReceipt revokeCommitteeMemberAndRetReceipt(String account) throws Exception {\n+        return chainGovernance.revokeCommitteeMember(account).send();\n+    }\n+\n     public String grantOperator(String account) throws Exception {\n-        TransactionReceipt transactionReceipt = chainGovernance.grantOperator(account).send();\n+        TransactionReceipt transactionReceipt = grantOperatorAndRetReceipt(account);\n         return PrecompiledCommon.handleTransactionReceipt(transactionReceipt, web3j);\n     }\n \n+    public TransactionReceipt grantOperatorAndRetReceipt(String account) throws Exception {\n+        return chainGovernance.grantOperator(account).send();\n+    }\n+\n     public String revokeOperator(String account) throws Exception {\n-        TransactionReceipt transactionReceipt = chainGovernance.revokeOperator(account).send();\n+        TransactionReceipt transactionReceipt = revokeOperatorAndRetReceipt(account);\n         return PrecompiledCommon.handleTransactionReceipt(transactionReceipt, web3j);\n     }\n \n+    public TransactionReceipt revokeOperatorAndRetReceipt(String account) throws Exception {\n+        return chainGovernance.revokeOperator(account).send();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76eccee76628f89fec8c5872adebb070def50a0e"}, "originalPosition": 59}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3MDIwODUyOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/fisco/bcos/web3j/precompile/permission/ChainGovernanceService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQwMzoxMToxNlrOHT8bUw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQwMzoxMToxNlrOHT8bUw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDY3NTAyNw==", "bodyText": "[PMD Java] Potential violation of Law of Demeter (method chain calls) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/706#discussion_r490675027", "createdAt": "2020-09-18T03:11:16Z", "author": {"login": "sider"}, "path": "src/main/java/org/fisco/bcos/web3j/precompile/permission/ChainGovernanceService.java", "diffHunk": "@@ -85,37 +88,59 @@ public String grantCommitteeMember(String account) throws Exception {\n     }\n \n     public String updateThreshold(int threshold) throws Exception {\n-        TransactionReceipt transactionReceipt =\n-                chainGovernance.updateThreshold(BigInteger.valueOf(threshold)).send();\n+        TransactionReceipt transactionReceipt = updateThresholdAndRetReceipt(threshold);\n         return PrecompiledCommon.handleTransactionReceipt(transactionReceipt, web3j);\n     }\n \n+    public TransactionReceipt updateThresholdAndRetReceipt(int threshold) throws Exception {\n+        return chainGovernance.updateThreshold(BigInteger.valueOf(threshold)).send();\n+    }\n+\n     public String revokeCommitteeMember(String account) throws Exception {\n-        TransactionReceipt transactionReceipt =\n-                chainGovernance.revokeCommitteeMember(account).send();\n+        TransactionReceipt transactionReceipt = revokeCommitteeMemberAndRetReceipt(account);\n         return PrecompiledCommon.handleTransactionReceipt(transactionReceipt, web3j);\n     }\n \n+    public TransactionReceipt revokeCommitteeMemberAndRetReceipt(String account) throws Exception {\n+        return chainGovernance.revokeCommitteeMember(account).send();\n+    }\n+\n     public String grantOperator(String account) throws Exception {\n-        TransactionReceipt transactionReceipt = chainGovernance.grantOperator(account).send();\n+        TransactionReceipt transactionReceipt = grantOperatorAndRetReceipt(account);\n         return PrecompiledCommon.handleTransactionReceipt(transactionReceipt, web3j);\n     }\n \n+    public TransactionReceipt grantOperatorAndRetReceipt(String account) throws Exception {\n+        return chainGovernance.grantOperator(account).send();\n+    }\n+\n     public String revokeOperator(String account) throws Exception {\n-        TransactionReceipt transactionReceipt = chainGovernance.revokeOperator(account).send();\n+        TransactionReceipt transactionReceipt = revokeOperatorAndRetReceipt(account);\n         return PrecompiledCommon.handleTransactionReceipt(transactionReceipt, web3j);\n     }\n \n+    public TransactionReceipt revokeOperatorAndRetReceipt(String account) throws Exception {\n+        return chainGovernance.revokeOperator(account).send();\n+    }\n+\n     public String freezeAccount(String account) throws Exception {\n-        TransactionReceipt transactionReceipt = chainGovernance.freezeAccount(account).send();\n+        TransactionReceipt transactionReceipt = freezeAccountAndRetReceipt(account);\n         return PrecompiledCommon.handleTransactionReceipt(transactionReceipt, web3j);\n     }\n \n+    public TransactionReceipt freezeAccountAndRetReceipt(String account) throws Exception {\n+        return chainGovernance.freezeAccount(account).send();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76eccee76628f89fec8c5872adebb070def50a0e"}, "originalPosition": 69}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3MDIwODU0OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/fisco/bcos/web3j/precompile/permission/ChainGovernanceService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQwMzoxMToxNlrOHT8bVg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQwMzoxMToxNlrOHT8bVg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDY3NTAzMA==", "bodyText": "[PMD Java] Potential violation of Law of Demeter (method chain calls) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/706#discussion_r490675030", "createdAt": "2020-09-18T03:11:16Z", "author": {"login": "sider"}, "path": "src/main/java/org/fisco/bcos/web3j/precompile/permission/ChainGovernanceService.java", "diffHunk": "@@ -85,37 +88,59 @@ public String grantCommitteeMember(String account) throws Exception {\n     }\n \n     public String updateThreshold(int threshold) throws Exception {\n-        TransactionReceipt transactionReceipt =\n-                chainGovernance.updateThreshold(BigInteger.valueOf(threshold)).send();\n+        TransactionReceipt transactionReceipt = updateThresholdAndRetReceipt(threshold);\n         return PrecompiledCommon.handleTransactionReceipt(transactionReceipt, web3j);\n     }\n \n+    public TransactionReceipt updateThresholdAndRetReceipt(int threshold) throws Exception {\n+        return chainGovernance.updateThreshold(BigInteger.valueOf(threshold)).send();\n+    }\n+\n     public String revokeCommitteeMember(String account) throws Exception {\n-        TransactionReceipt transactionReceipt =\n-                chainGovernance.revokeCommitteeMember(account).send();\n+        TransactionReceipt transactionReceipt = revokeCommitteeMemberAndRetReceipt(account);\n         return PrecompiledCommon.handleTransactionReceipt(transactionReceipt, web3j);\n     }\n \n+    public TransactionReceipt revokeCommitteeMemberAndRetReceipt(String account) throws Exception {\n+        return chainGovernance.revokeCommitteeMember(account).send();\n+    }\n+\n     public String grantOperator(String account) throws Exception {\n-        TransactionReceipt transactionReceipt = chainGovernance.grantOperator(account).send();\n+        TransactionReceipt transactionReceipt = grantOperatorAndRetReceipt(account);\n         return PrecompiledCommon.handleTransactionReceipt(transactionReceipt, web3j);\n     }\n \n+    public TransactionReceipt grantOperatorAndRetReceipt(String account) throws Exception {\n+        return chainGovernance.grantOperator(account).send();\n+    }\n+\n     public String revokeOperator(String account) throws Exception {\n-        TransactionReceipt transactionReceipt = chainGovernance.revokeOperator(account).send();\n+        TransactionReceipt transactionReceipt = revokeOperatorAndRetReceipt(account);\n         return PrecompiledCommon.handleTransactionReceipt(transactionReceipt, web3j);\n     }\n \n+    public TransactionReceipt revokeOperatorAndRetReceipt(String account) throws Exception {\n+        return chainGovernance.revokeOperator(account).send();\n+    }\n+\n     public String freezeAccount(String account) throws Exception {\n-        TransactionReceipt transactionReceipt = chainGovernance.freezeAccount(account).send();\n+        TransactionReceipt transactionReceipt = freezeAccountAndRetReceipt(account);\n         return PrecompiledCommon.handleTransactionReceipt(transactionReceipt, web3j);\n     }\n \n+    public TransactionReceipt freezeAccountAndRetReceipt(String account) throws Exception {\n+        return chainGovernance.freezeAccount(account).send();\n+    }\n+\n     public String unfreezeAccount(String account) throws Exception {\n-        TransactionReceipt transactionReceipt = chainGovernance.unfreezeAccount(account).send();\n+        TransactionReceipt transactionReceipt = unfreezeAccountAndRetReceipt(account);\n         return PrecompiledCommon.handleTransactionReceipt(transactionReceipt, web3j);\n     }\n \n+    public TransactionReceipt unfreezeAccountAndRetReceipt(String account) throws Exception {\n+        return chainGovernance.unfreezeAccount(account).send();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76eccee76628f89fec8c5872adebb070def50a0e"}, "originalPosition": 79}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3MDIwODU1OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/fisco/bcos/web3j/precompile/permission/PermissionService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQwMzoxMToxN1rOHT8bVw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQwMzoxMToxN1rOHT8bVw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDY3NTAzMQ==", "bodyText": "[PMD Java] Potential violation of Law of Demeter (method chain calls) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/706#discussion_r490675031", "createdAt": "2020-09-18T03:11:17Z", "author": {"login": "sider"}, "path": "src/main/java/org/fisco/bcos/web3j/precompile/permission/PermissionService.java", "diffHunk": "@@ -31,28 +30,36 @@ public PermissionService(Web3j web3j, Credentials credentials) {\n     }\n \n     public List<PermissionInfo> queryPermission(String address) throws Exception {\n-        String permissionyInfo = permission.queryPermission(address).send();\n+        String permissionInfo = permission.queryPermission(address).send();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76eccee76628f89fec8c5872adebb070def50a0e"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3MDIwODU3OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/fisco/bcos/web3j/precompile/permission/PermissionService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQwMzoxMToxN1rOHT8bWQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQwMzoxMToxN1rOHT8bWQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDY3NTAzMw==", "bodyText": "[PMD Java] Potential violation of Law of Demeter (method chain calls) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/706#discussion_r490675033", "createdAt": "2020-09-18T03:11:17Z", "author": {"login": "sider"}, "path": "src/main/java/org/fisco/bcos/web3j/precompile/permission/PermissionService.java", "diffHunk": "@@ -31,28 +30,36 @@ public PermissionService(Web3j web3j, Credentials credentials) {\n     }\n \n     public List<PermissionInfo> queryPermission(String address) throws Exception {\n-        String permissionyInfo = permission.queryPermission(address).send();\n+        String permissionInfo = permission.queryPermission(address).send();\n         ObjectMapper objectMapper = ObjectMapperFactory.getObjectMapper();\n         return objectMapper.readValue(\n-                permissionyInfo,\n+                permissionInfo,\n                 objectMapper\n                         .getTypeFactory()\n                         .constructCollectionType(List.class, PermissionInfo.class));\n     }\n \n     public String grantWrite(String address, String user) throws Exception {\n-        TransactionReceipt receipt = permission.grantWrite(address, user).send();\n-        return PrecompiledCommon.handleTransactionReceipt(receipt, web3j);\n+        TransactionReceipt transactionReceipt = grantWriteAndRetReceipt(address, user);\n+        return PrecompiledCommon.handleTransactionReceipt(transactionReceipt, web3j);\n+    }\n+\n+    public TransactionReceipt grantWriteAndRetReceipt(String address, String user)\n+            throws Exception {\n+        return permission.grantWrite(address, user).send();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76eccee76628f89fec8c5872adebb070def50a0e"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3MDIwODU4OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/fisco/bcos/web3j/precompile/permission/PermissionService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQwMzoxMToxN1rOHT8bWg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQwMzoxMToxN1rOHT8bWg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDY3NTAzNA==", "bodyText": "[PMD Java] Potential violation of Law of Demeter (method chain calls) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/706#discussion_r490675034", "createdAt": "2020-09-18T03:11:17Z", "author": {"login": "sider"}, "path": "src/main/java/org/fisco/bcos/web3j/precompile/permission/PermissionService.java", "diffHunk": "@@ -31,28 +30,36 @@ public PermissionService(Web3j web3j, Credentials credentials) {\n     }\n \n     public List<PermissionInfo> queryPermission(String address) throws Exception {\n-        String permissionyInfo = permission.queryPermission(address).send();\n+        String permissionInfo = permission.queryPermission(address).send();\n         ObjectMapper objectMapper = ObjectMapperFactory.getObjectMapper();\n         return objectMapper.readValue(\n-                permissionyInfo,\n+                permissionInfo,\n                 objectMapper\n                         .getTypeFactory()\n                         .constructCollectionType(List.class, PermissionInfo.class));\n     }\n \n     public String grantWrite(String address, String user) throws Exception {\n-        TransactionReceipt receipt = permission.grantWrite(address, user).send();\n-        return PrecompiledCommon.handleTransactionReceipt(receipt, web3j);\n+        TransactionReceipt transactionReceipt = grantWriteAndRetReceipt(address, user);\n+        return PrecompiledCommon.handleTransactionReceipt(transactionReceipt, web3j);\n+    }\n+\n+    public TransactionReceipt grantWriteAndRetReceipt(String address, String user)\n+            throws Exception {\n+        return permission.grantWrite(address, user).send();\n     }\n \n     public String revokeWrite(String address, String user) throws Exception {\n-        TransactionReceipt receipt = permission.revokeWrite(address, user).send();\n+        TransactionReceipt receipt = revokeWriteAndRetReceipt(address, user);\n         return PrecompiledCommon.handleTransactionReceipt(receipt, web3j);\n     }\n \n+    public TransactionReceipt revokeWriteAndRetReceipt(String address, String user)\n+            throws Exception {\n+        return permission.revokeWrite(address, user).send();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76eccee76628f89fec8c5872adebb070def50a0e"}, "originalPosition": 43}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3MDIwODU5OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/fisco/bcos/web3j/precompile/permission/PermissionService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQwMzoxMToxN1rOHT8bWw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQwMzoxMToxN1rOHT8bWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDY3NTAzNQ==", "bodyText": "[PMD Java] Potential violation of Law of Demeter (method chain calls) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/706#discussion_r490675035", "createdAt": "2020-09-18T03:11:17Z", "author": {"login": "sider"}, "path": "src/main/java/org/fisco/bcos/web3j/precompile/permission/PermissionService.java", "diffHunk": "@@ -120,25 +127,40 @@ public String revokeSysConfigManager(String grantress) throws Exception {\n         return revoke(PrecompiledCommon.SYS_CONFIG, grantress);\n     }\n \n+    public TransactionReceipt revokeSysConfigManagerAndRetReceipt(String grantress)\n+            throws Exception {\n+        return revokeAndRetReceipt(PrecompiledCommon.SYS_CONFIG, grantress);\n+    }\n+\n     public List<PermissionInfo> listSysConfigManager() throws Exception {\n         return list(PrecompiledCommon.SYS_CONFIG);\n     }\n \n-    private String grant(String tableName, String grantress) throws Exception {\n-        TransactionReceipt receipt = permission.insert(tableName, grantress).send();\n+    public String grant(String tableName, String grandness) throws Exception {\n+        TransactionReceipt receipt = grantAndRetReceipt(tableName, grandness);\n         return PrecompiledCommon.handleTransactionReceipt(receipt, web3j);\n     }\n \n-    private String revoke(String tableName, String address) throws Exception {\n-        TransactionReceipt receipt = permission.remove(tableName, address).send();\n+    private TransactionReceipt grantAndRetReceipt(String tableName, String grantress)\n+            throws Exception {\n+        return permission.insert(tableName, grantress).send();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76eccee76628f89fec8c5872adebb070def50a0e"}, "originalPosition": 93}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3MDIwODYwOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/fisco/bcos/web3j/precompile/permission/PermissionService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQwMzoxMToxN1rOHT8bXA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQwMzoxMToxN1rOHT8bXA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDY3NTAzNg==", "bodyText": "[PMD Java] Potential violation of Law of Demeter (method chain calls) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/706#discussion_r490675036", "createdAt": "2020-09-18T03:11:17Z", "author": {"login": "sider"}, "path": "src/main/java/org/fisco/bcos/web3j/precompile/permission/PermissionService.java", "diffHunk": "@@ -120,25 +127,40 @@ public String revokeSysConfigManager(String grantress) throws Exception {\n         return revoke(PrecompiledCommon.SYS_CONFIG, grantress);\n     }\n \n+    public TransactionReceipt revokeSysConfigManagerAndRetReceipt(String grantress)\n+            throws Exception {\n+        return revokeAndRetReceipt(PrecompiledCommon.SYS_CONFIG, grantress);\n+    }\n+\n     public List<PermissionInfo> listSysConfigManager() throws Exception {\n         return list(PrecompiledCommon.SYS_CONFIG);\n     }\n \n-    private String grant(String tableName, String grantress) throws Exception {\n-        TransactionReceipt receipt = permission.insert(tableName, grantress).send();\n+    public String grant(String tableName, String grandness) throws Exception {\n+        TransactionReceipt receipt = grantAndRetReceipt(tableName, grandness);\n         return PrecompiledCommon.handleTransactionReceipt(receipt, web3j);\n     }\n \n-    private String revoke(String tableName, String address) throws Exception {\n-        TransactionReceipt receipt = permission.remove(tableName, address).send();\n+    private TransactionReceipt grantAndRetReceipt(String tableName, String grantress)\n+            throws Exception {\n+        return permission.insert(tableName, grantress).send();\n+    }\n+\n+    public String revoke(String tableName, String address) throws Exception {\n+        TransactionReceipt receipt = revokeAndRetReceipt(tableName, address);\n         return PrecompiledCommon.handleTransactionReceipt(receipt, web3j);\n     }\n \n+    private TransactionReceipt revokeAndRetReceipt(String tableName, String address)\n+            throws Exception {\n+        return permission.remove(tableName, address).send();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76eccee76628f89fec8c5872adebb070def50a0e"}, "originalPosition": 103}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3MDIwODYxOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/fisco/bcos/web3j/precompile/permission/PermissionService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQwMzoxMToxOFrOHT8bXQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQwMzoxMToxOFrOHT8bXQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDY3NTAzNw==", "bodyText": "[PMD Java] Potential violation of Law of Demeter (method chain calls) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/706#discussion_r490675037", "createdAt": "2020-09-18T03:11:18Z", "author": {"login": "sider"}, "path": "src/main/java/org/fisco/bcos/web3j/precompile/permission/PermissionService.java", "diffHunk": "@@ -120,25 +127,40 @@ public String revokeSysConfigManager(String grantress) throws Exception {\n         return revoke(PrecompiledCommon.SYS_CONFIG, grantress);\n     }\n \n+    public TransactionReceipt revokeSysConfigManagerAndRetReceipt(String grantress)\n+            throws Exception {\n+        return revokeAndRetReceipt(PrecompiledCommon.SYS_CONFIG, grantress);\n+    }\n+\n     public List<PermissionInfo> listSysConfigManager() throws Exception {\n         return list(PrecompiledCommon.SYS_CONFIG);\n     }\n \n-    private String grant(String tableName, String grantress) throws Exception {\n-        TransactionReceipt receipt = permission.insert(tableName, grantress).send();\n+    public String grant(String tableName, String grandness) throws Exception {\n+        TransactionReceipt receipt = grantAndRetReceipt(tableName, grandness);\n         return PrecompiledCommon.handleTransactionReceipt(receipt, web3j);\n     }\n \n-    private String revoke(String tableName, String address) throws Exception {\n-        TransactionReceipt receipt = permission.remove(tableName, address).send();\n+    private TransactionReceipt grantAndRetReceipt(String tableName, String grantress)\n+            throws Exception {\n+        return permission.insert(tableName, grantress).send();\n+    }\n+\n+    public String revoke(String tableName, String address) throws Exception {\n+        TransactionReceipt receipt = revokeAndRetReceipt(tableName, address);\n         return PrecompiledCommon.handleTransactionReceipt(receipt, web3j);\n     }\n \n+    private TransactionReceipt revokeAndRetReceipt(String tableName, String address)\n+            throws Exception {\n+        return permission.remove(tableName, address).send();\n+    }\n+\n     private List<PermissionInfo> list(String tableName) throws Exception {\n-        String permissionyInfo = permission.queryByName(tableName).send();\n+        String permissionInfo = permission.queryByName(tableName).send();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76eccee76628f89fec8c5872adebb070def50a0e"}, "originalPosition": 108}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3MDIwODYyOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/fisco/bcos/web3j/precompile/cns/CnsService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQwMzoxMToxOFrOHT8bXw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQwMzoxMToxOFrOHT8bXw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDY3NTAzOQ==", "bodyText": "[PMD Java] A method/constructor should not explicitly throw java.lang.Exception (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nSignatureDeclareThrowsException\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_design.html#signaturedeclarethrowsexception\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/706#discussion_r490675039", "createdAt": "2020-09-18T03:11:18Z", "author": {"login": "sider"}, "path": "src/main/java/org/fisco/bcos/web3j/precompile/cns/CnsService.java", "diffHunk": "@@ -99,14 +99,16 @@ public String getAddressByContractNameAndVersion(String contractNameAndVersion)\n \n     public String registerCns(String name, String version, String address, String abi)\n             throws Exception {\n-        CNS cns = lookupResolver();\n-        if (version.length() > MAX_VERSION_LENGTH) {\n-            return PrecompiledCommon.transferToJson(PrecompiledCommon.VersionExceeds);\n-        }\n-        TransactionReceipt receipt = cns.insert(name, version, address, abi).send();\n+        TransactionReceipt receipt = registerCnsAndRetReceipt(name, version, address, abi);\n         return PrecompiledCommon.handleTransactionReceipt(receipt, web3j);\n     }\n \n+    public TransactionReceipt registerCnsAndRetReceipt(\n+            String name, String version, String address, String abi) throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76eccee76628f89fec8c5872adebb070def50a0e"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3MDIwODY0OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/fisco/bcos/web3j/precompile/config/SystemConfigService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQwMzoxMToxOFrOHT8bYQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQwMzoxMToxOFrOHT8bYQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDY3NTA0MQ==", "bodyText": "[PMD Java] A method/constructor should not explicitly throw java.lang.Exception (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nSignatureDeclareThrowsException\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_design.html#signaturedeclarethrowsexception\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/706#discussion_r490675041", "createdAt": "2020-09-18T03:11:18Z", "author": {"login": "sider"}, "path": "src/main/java/org/fisco/bcos/web3j/precompile/config/SystemConfigService.java", "diffHunk": "@@ -25,7 +25,12 @@ public SystemConfigService(Web3j web3j, Credentials credentials) {\n     }\n \n     public String setValueByKey(String key, String value) throws Exception {\n-        TransactionReceipt receipt = systemConfig.setValueByKey(key, value).send();\n+        TransactionReceipt receipt = setValueByKeyAndRetReceipt(key, value);\n         return PrecompiledCommon.handleTransactionReceipt(receipt, web3j);\n     }\n+\n+    public TransactionReceipt setValueByKeyAndRetReceipt(String key, String value)\n+            throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76eccee76628f89fec8c5872adebb070def50a0e"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3MDIwODY1OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/fisco/bcos/web3j/precompile/csm/ContractStatusService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQwMzoxMToxOFrOHT8bYg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQwMzoxMToxOFrOHT8bYg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDY3NTA0Mg==", "bodyText": "[PMD Java] A method/constructor should not explicitly throw java.lang.Exception (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nSignatureDeclareThrowsException\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_design.html#signaturedeclarethrowsexception\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/706#discussion_r490675042", "createdAt": "2020-09-18T03:11:18Z", "author": {"login": "sider"}, "path": "src/main/java/org/fisco/bcos/web3j/precompile/csm/ContractStatusService.java", "diffHunk": "@@ -32,37 +31,33 @@ public ContractStatusService(Web3j web3j, Credentials credentials) {\n     }\n \n     public String freeze(String addr) throws Exception {\n-        if (!WalletUtils.isValidAddress(addr)) {\n-            return PrecompiledCommon.transferToJson(PrecompiledCommon.InvalidAddress);\n-        }\n-\n-        TransactionReceipt receipt = contractLifeCycle.freeze(addr).send();\n+        TransactionReceipt receipt = freezeAndRetReceipt(addr);\n         return PrecompiledCommon.handleTransactionReceipt(receipt, web3j);\n     }\n \n-    public String unfreeze(String addr) throws Exception {\n-        if (!WalletUtils.isValidAddress(addr)) {\n-            return PrecompiledCommon.transferToJson(PrecompiledCommon.InvalidAddress);\n-        }\n+    public TransactionReceipt freezeAndRetReceipt(String addr) throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76eccee76628f89fec8c5872adebb070def50a0e"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3MDIwODY2OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/fisco/bcos/web3j/precompile/csm/ContractStatusService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQwMzoxMToxOFrOHT8bZA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQwMzoxMToxOFrOHT8bZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDY3NTA0NA==", "bodyText": "[PMD Java] A method/constructor should not explicitly throw java.lang.Exception (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nSignatureDeclareThrowsException\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_design.html#signaturedeclarethrowsexception\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/706#discussion_r490675044", "createdAt": "2020-09-18T03:11:18Z", "author": {"login": "sider"}, "path": "src/main/java/org/fisco/bcos/web3j/precompile/csm/ContractStatusService.java", "diffHunk": "@@ -32,37 +31,33 @@ public ContractStatusService(Web3j web3j, Credentials credentials) {\n     }\n \n     public String freeze(String addr) throws Exception {\n-        if (!WalletUtils.isValidAddress(addr)) {\n-            return PrecompiledCommon.transferToJson(PrecompiledCommon.InvalidAddress);\n-        }\n-\n-        TransactionReceipt receipt = contractLifeCycle.freeze(addr).send();\n+        TransactionReceipt receipt = freezeAndRetReceipt(addr);\n         return PrecompiledCommon.handleTransactionReceipt(receipt, web3j);\n     }\n \n-    public String unfreeze(String addr) throws Exception {\n-        if (!WalletUtils.isValidAddress(addr)) {\n-            return PrecompiledCommon.transferToJson(PrecompiledCommon.InvalidAddress);\n-        }\n+    public TransactionReceipt freezeAndRetReceipt(String addr) throws Exception {\n+        return contractLifeCycle.freeze(addr).send();\n+    }\n \n-        TransactionReceipt receipt = contractLifeCycle.unfreeze(addr).send();\n+    public String unfreeze(String addr) throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76eccee76628f89fec8c5872adebb070def50a0e"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3MDIwODY4OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/fisco/bcos/web3j/precompile/csm/ContractStatusService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQwMzoxMToxOFrOHT8bZg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQwMzoxMToxOFrOHT8bZg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDY3NTA0Ng==", "bodyText": "[PMD Java] A method/constructor should not explicitly throw java.lang.Exception (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nSignatureDeclareThrowsException\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_design.html#signaturedeclarethrowsexception\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/706#discussion_r490675046", "createdAt": "2020-09-18T03:11:18Z", "author": {"login": "sider"}, "path": "src/main/java/org/fisco/bcos/web3j/precompile/csm/ContractStatusService.java", "diffHunk": "@@ -32,37 +31,33 @@ public ContractStatusService(Web3j web3j, Credentials credentials) {\n     }\n \n     public String freeze(String addr) throws Exception {\n-        if (!WalletUtils.isValidAddress(addr)) {\n-            return PrecompiledCommon.transferToJson(PrecompiledCommon.InvalidAddress);\n-        }\n-\n-        TransactionReceipt receipt = contractLifeCycle.freeze(addr).send();\n+        TransactionReceipt receipt = freezeAndRetReceipt(addr);\n         return PrecompiledCommon.handleTransactionReceipt(receipt, web3j);\n     }\n \n-    public String unfreeze(String addr) throws Exception {\n-        if (!WalletUtils.isValidAddress(addr)) {\n-            return PrecompiledCommon.transferToJson(PrecompiledCommon.InvalidAddress);\n-        }\n+    public TransactionReceipt freezeAndRetReceipt(String addr) throws Exception {\n+        return contractLifeCycle.freeze(addr).send();\n+    }\n \n-        TransactionReceipt receipt = contractLifeCycle.unfreeze(addr).send();\n+    public String unfreeze(String addr) throws Exception {\n+        TransactionReceipt receipt = unfreezeAndRetReceipt(addr);\n         return PrecompiledCommon.handleTransactionReceipt(receipt, web3j);\n     }\n \n-    public String grantManager(String addr, String user) throws Exception {\n-        if (!WalletUtils.isValidAddress(addr) || !WalletUtils.isValidAddress(user)) {\n-            return PrecompiledCommon.transferToJson(PrecompiledCommon.InvalidAddress);\n-        }\n+    public TransactionReceipt unfreezeAndRetReceipt(String addr) throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76eccee76628f89fec8c5872adebb070def50a0e"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3MDIwODY5OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/fisco/bcos/web3j/precompile/csm/ContractStatusService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQwMzoxMToxOVrOHT8bZw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQwMzoxMToxOVrOHT8bZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDY3NTA0Nw==", "bodyText": "[PMD Java] A method/constructor should not explicitly throw java.lang.Exception (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nSignatureDeclareThrowsException\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_design.html#signaturedeclarethrowsexception\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/706#discussion_r490675047", "createdAt": "2020-09-18T03:11:19Z", "author": {"login": "sider"}, "path": "src/main/java/org/fisco/bcos/web3j/precompile/csm/ContractStatusService.java", "diffHunk": "@@ -32,37 +31,33 @@ public ContractStatusService(Web3j web3j, Credentials credentials) {\n     }\n \n     public String freeze(String addr) throws Exception {\n-        if (!WalletUtils.isValidAddress(addr)) {\n-            return PrecompiledCommon.transferToJson(PrecompiledCommon.InvalidAddress);\n-        }\n-\n-        TransactionReceipt receipt = contractLifeCycle.freeze(addr).send();\n+        TransactionReceipt receipt = freezeAndRetReceipt(addr);\n         return PrecompiledCommon.handleTransactionReceipt(receipt, web3j);\n     }\n \n-    public String unfreeze(String addr) throws Exception {\n-        if (!WalletUtils.isValidAddress(addr)) {\n-            return PrecompiledCommon.transferToJson(PrecompiledCommon.InvalidAddress);\n-        }\n+    public TransactionReceipt freezeAndRetReceipt(String addr) throws Exception {\n+        return contractLifeCycle.freeze(addr).send();\n+    }\n \n-        TransactionReceipt receipt = contractLifeCycle.unfreeze(addr).send();\n+    public String unfreeze(String addr) throws Exception {\n+        TransactionReceipt receipt = unfreezeAndRetReceipt(addr);\n         return PrecompiledCommon.handleTransactionReceipt(receipt, web3j);\n     }\n \n-    public String grantManager(String addr, String user) throws Exception {\n-        if (!WalletUtils.isValidAddress(addr) || !WalletUtils.isValidAddress(user)) {\n-            return PrecompiledCommon.transferToJson(PrecompiledCommon.InvalidAddress);\n-        }\n+    public TransactionReceipt unfreezeAndRetReceipt(String addr) throws Exception {\n+        return contractLifeCycle.unfreeze(addr).send();\n+    }\n \n-        TransactionReceipt receipt = contractLifeCycle.grantManager(addr, user).send();\n+    public String grantManager(String addr, String user) throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76eccee76628f89fec8c5872adebb070def50a0e"}, "originalPosition": 44}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4MjAzNDQzOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/fisco/bcos/web3j/precompile/permission/ChainGovernanceService.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQwNToxODozNVrOHVqhZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQwNToxODozNVrOHVqhZQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjQ3ODgyMQ==", "bodyText": "[PMD Java] Potential violation of Law of Demeter (method chain calls) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/706#discussion_r492478821", "createdAt": "2020-09-22T05:18:35Z", "author": {"login": "sider"}, "path": "src/main/java/org/fisco/bcos/web3j/precompile/permission/ChainGovernanceService.java", "diffHunk": "@@ -54,12 +54,17 @@ public ChainGovernanceService(Web3j web3j, Credentials credentials) {\n \n     public String updateCommitteeMemberWeight(String account, int weight) throws Exception {\n         TransactionReceipt transactionReceipt =\n-                chainGovernance\n-                        .updateCommitteeMemberWeight(account, BigInteger.valueOf(weight))\n-                        .send();\n+                updateCommitteeMemberWeightAndRetReceipt(account, weight);\n         return PrecompiledCommon.handleTransactionReceipt(transactionReceipt, web3j);\n     }\n \n+    public TransactionReceipt updateCommitteeMemberWeightAndRetReceipt(String account, int weight)\n+            throws Exception {\n+        return chainGovernance", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7188330d0acc4b02506a961f8ab644e5f4f3ae26"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4MjAzNDQ0OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/fisco/bcos/web3j/precompile/permission/ChainGovernanceService.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQwNToxODozNVrOHVqhZg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQwNToxODozNVrOHVqhZg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjQ3ODgyMg==", "bodyText": "[PMD Java] A method/constructor should not explicitly throw java.lang.Exception (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nSignatureDeclareThrowsException\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_design.html#signaturedeclarethrowsexception\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/706#discussion_r492478822", "createdAt": "2020-09-22T05:18:35Z", "author": {"login": "sider"}, "path": "src/main/java/org/fisco/bcos/web3j/precompile/permission/ChainGovernanceService.java", "diffHunk": "@@ -54,12 +54,17 @@ public ChainGovernanceService(Web3j web3j, Credentials credentials) {\n \n     public String updateCommitteeMemberWeight(String account, int weight) throws Exception {\n         TransactionReceipt transactionReceipt =\n-                chainGovernance\n-                        .updateCommitteeMemberWeight(account, BigInteger.valueOf(weight))\n-                        .send();\n+                updateCommitteeMemberWeightAndRetReceipt(account, weight);\n         return PrecompiledCommon.handleTransactionReceipt(transactionReceipt, web3j);\n     }\n \n+    public TransactionReceipt updateCommitteeMemberWeightAndRetReceipt(String account, int weight)\n+            throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7188330d0acc4b02506a961f8ab644e5f4f3ae26"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4MjAzNDQ1OnYy", "diffSide": "RIGHT", "path": "src/integration-test/java/org/fisco/bcos/precompile/PermissionServiceTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQwNToxODozNVrOHVqhZw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQwNToxODozNVrOHVqhZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjQ3ODgyMw==", "bodyText": "[PMD Java] System.out.println is used (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nSystemPrintln\nBest Practices\n2\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.26.0/pmd_rules_java_bestpractices.html#systemprintln\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/706#discussion_r492478823", "createdAt": "2020-09-22T05:18:35Z", "author": {"login": "sider"}, "path": "src/integration-test/java/org/fisco/bcos/precompile/PermissionServiceTest.java", "diffHunk": "@@ -1,22 +1,31 @@\n package org.fisco.bcos.precompile;\n \n import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertTrue;\n \n+import com.sun.org.apache.regexp.internal.RE;\n import org.fisco.bcos.TestBase;\n+import org.fisco.bcos.web3j.precompile.common.PrecompiledCommon;\n import org.fisco.bcos.web3j.precompile.exception.PrecompileMessageException;\n import org.fisco.bcos.web3j.precompile.permission.PermissionService;\n+import org.fisco.bcos.web3j.protocol.core.methods.response.TransactionReceipt;\n+import org.fisco.bcos.web3j.protocol.core.methods.response.TransactionReceiptWithProof;\n+import org.junit.Assert;\n import org.junit.Test;\n \n public class PermissionServiceTest extends TestBase {\n \n \n   private PermissionService permissionService = new PermissionService(web3j, credentials);\n \n-  @Test(expected= PrecompileMessageException.class) \n+  @Test\n   public void userTableManager() throws Exception {\n-  \t\n-\t  permissionService.grantUserTableManager(\"tt\", Common.TX_ORIGIN);\n-  \n+\n+\t  TransactionReceipt transactionReceipt = permissionService.grantAndRetReceipt(\"tt\", Common.TX_ORIGIN);\n+\t  Assert.assertTrue(transactionReceipt.isStatusOK());\n+\t  int i = PrecompiledCommon.handleTransactionReceiptForCRUD(transactionReceipt);\n+\t  System.out.println(i);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7188330d0acc4b02506a961f8ab644e5f4f3ae26"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwMjcwNzUxOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/fisco/bcos/web3j/precompile/permission/ChainGovernanceService.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQwMTo0MzozMVrOHYsHuQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQwMTo0MzozMVrOHYsHuQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTY1MDc0NQ==", "bodyText": "[PMD Java] Potential violation of Law of Demeter (method chain calls) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.27.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/706#discussion_r495650745", "createdAt": "2020-09-28T01:43:31Z", "author": {"login": "sider"}, "path": "src/main/java/org/fisco/bcos/web3j/precompile/permission/ChainGovernanceService.java", "diffHunk": "@@ -54,12 +54,17 @@ public ChainGovernanceService(Web3j web3j, Credentials credentials) {\n \n     public String updateCommitteeMemberWeight(String account, int weight) throws Exception {\n         TransactionReceipt transactionReceipt =\n-                chainGovernance\n-                        .updateCommitteeMemberWeight(account, BigInteger.valueOf(weight))\n-                        .send();\n+                updateCommitteeMemberWeightAndRetReceipt(account, weight);\n         return PrecompiledCommon.handleTransactionReceipt(transactionReceipt, web3j);\n     }\n \n+    public TransactionReceipt updateCommitteeMemberWeightAndRetReceipt(String account, int weight)\n+            throws Exception {\n+        return chainGovernance", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ead745d455675af825b4630009874306b2f6f92c"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwMjcwNzUzOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/fisco/bcos/web3j/precompile/permission/ChainGovernanceService.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQwMTo0MzozMVrOHYsHuw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQwMTo0MzozMVrOHYsHuw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTY1MDc0Nw==", "bodyText": "[PMD Java] A method/constructor should not explicitly throw java.lang.Exception (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nSignatureDeclareThrowsException\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.27.0/pmd_rules_java_design.html#signaturedeclarethrowsexception\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/706#discussion_r495650747", "createdAt": "2020-09-28T01:43:31Z", "author": {"login": "sider"}, "path": "src/main/java/org/fisco/bcos/web3j/precompile/permission/ChainGovernanceService.java", "diffHunk": "@@ -54,12 +54,17 @@ public ChainGovernanceService(Web3j web3j, Credentials credentials) {\n \n     public String updateCommitteeMemberWeight(String account, int weight) throws Exception {\n         TransactionReceipt transactionReceipt =\n-                chainGovernance\n-                        .updateCommitteeMemberWeight(account, BigInteger.valueOf(weight))\n-                        .send();\n+                updateCommitteeMemberWeightAndRetReceipt(account, weight);\n         return PrecompiledCommon.handleTransactionReceipt(transactionReceipt, web3j);\n     }\n \n+    public TransactionReceipt updateCommitteeMemberWeightAndRetReceipt(String account, int weight)\n+            throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ead745d455675af825b4630009874306b2f6f92c"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwMjcwNzU0OnYy", "diffSide": "RIGHT", "path": "src/integration-test/java/org/fisco/bcos/precompile/PermissionServiceTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQwMTo0MzozMVrOHYsHvA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQwMTo0MzozMVrOHYsHvA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTY1MDc0OA==", "bodyText": "[PMD Java] JUnit assertions should include a message (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nJUnitAssertionsShouldIncludeMessage\nBest Practices\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.27.0/pmd_rules_java_bestpractices.html#junitassertionsshouldincludemessage\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/706#discussion_r495650748", "createdAt": "2020-09-28T01:43:31Z", "author": {"login": "sider"}, "path": "src/integration-test/java/org/fisco/bcos/precompile/PermissionServiceTest.java", "diffHunk": "@@ -1,22 +1,28 @@\n package org.fisco.bcos.precompile;\n \n import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertTrue;\n \n import org.fisco.bcos.TestBase;\n-import org.fisco.bcos.web3j.precompile.exception.PrecompileMessageException;\n+import org.fisco.bcos.web3j.precompile.common.PrecompiledCommon;\n import org.fisco.bcos.web3j.precompile.permission.PermissionService;\n+import org.fisco.bcos.web3j.protocol.core.methods.response.TransactionReceipt;\n+import org.junit.Assert;\n import org.junit.Test;\n \n public class PermissionServiceTest extends TestBase {\n \n \n   private PermissionService permissionService = new PermissionService(web3j, credentials);\n \n-  @Test(expected= PrecompileMessageException.class) \n+  @Test\n   public void userTableManager() throws Exception {\n-  \t\n-\t  permissionService.grantUserTableManager(\"tt\", Common.TX_ORIGIN);\n-  \n+\n+\t  TransactionReceipt transactionReceipt = permissionService.grantAndRetReceipt(\"tt\", Common.TX_ORIGIN);\n+\t  Assert.assertTrue(transactionReceipt.isStatusOK());\n+\t  int i = PrecompiledCommon.handleTransactionReceiptForCRUD(transactionReceipt);\n+\t  System.out.println(\" ===> \" + i);\n+\t  assertTrue(i == PrecompiledCommon.InvalidTableNotExist);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ead745d455675af825b4630009874306b2f6f92c"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwMjcwNzU1OnYy", "diffSide": "RIGHT", "path": "src/integration-test/java/org/fisco/bcos/precompile/PermissionServiceTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQwMTo0MzozMVrOHYsHvg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQwMTo0MzozMVrOHYsHvg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTY1MDc1MA==", "bodyText": "[PMD Java] Potential violation of Law of Demeter (object not created locally) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.27.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/706#discussion_r495650750", "createdAt": "2020-09-28T01:43:31Z", "author": {"login": "sider"}, "path": "src/integration-test/java/org/fisco/bcos/precompile/PermissionServiceTest.java", "diffHunk": "@@ -1,22 +1,28 @@\n package org.fisco.bcos.precompile;\n \n import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertTrue;\n \n import org.fisco.bcos.TestBase;\n-import org.fisco.bcos.web3j.precompile.exception.PrecompileMessageException;\n+import org.fisco.bcos.web3j.precompile.common.PrecompiledCommon;\n import org.fisco.bcos.web3j.precompile.permission.PermissionService;\n+import org.fisco.bcos.web3j.protocol.core.methods.response.TransactionReceipt;\n+import org.junit.Assert;\n import org.junit.Test;\n \n public class PermissionServiceTest extends TestBase {\n \n \n   private PermissionService permissionService = new PermissionService(web3j, credentials);\n \n-  @Test(expected= PrecompileMessageException.class) \n+  @Test\n   public void userTableManager() throws Exception {\n-  \t\n-\t  permissionService.grantUserTableManager(\"tt\", Common.TX_ORIGIN);\n-  \n+\n+\t  TransactionReceipt transactionReceipt = permissionService.grantAndRetReceipt(\"tt\", Common.TX_ORIGIN);\n+\t  Assert.assertTrue(transactionReceipt.isStatusOK());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ead745d455675af825b4630009874306b2f6f92c"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwMjcwNzU5OnYy", "diffSide": "RIGHT", "path": "src/integration-test/java/org/fisco/bcos/precompile/PermissionServiceTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQwMTo0MzozMlrOHYsHwQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQwMTo0MzozMlrOHYsHwQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTY1MDc1Mw==", "bodyText": "[PMD Java] System.out.println is used (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nSystemPrintln\nBest Practices\n2\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.27.0/pmd_rules_java_bestpractices.html#systemprintln\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/706#discussion_r495650753", "createdAt": "2020-09-28T01:43:32Z", "author": {"login": "sider"}, "path": "src/integration-test/java/org/fisco/bcos/precompile/PermissionServiceTest.java", "diffHunk": "@@ -1,22 +1,28 @@\n package org.fisco.bcos.precompile;\n \n import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertTrue;\n \n import org.fisco.bcos.TestBase;\n-import org.fisco.bcos.web3j.precompile.exception.PrecompileMessageException;\n+import org.fisco.bcos.web3j.precompile.common.PrecompiledCommon;\n import org.fisco.bcos.web3j.precompile.permission.PermissionService;\n+import org.fisco.bcos.web3j.protocol.core.methods.response.TransactionReceipt;\n+import org.junit.Assert;\n import org.junit.Test;\n \n public class PermissionServiceTest extends TestBase {\n \n \n   private PermissionService permissionService = new PermissionService(web3j, credentials);\n \n-  @Test(expected= PrecompileMessageException.class) \n+  @Test\n   public void userTableManager() throws Exception {\n-  \t\n-\t  permissionService.grantUserTableManager(\"tt\", Common.TX_ORIGIN);\n-  \n+\n+\t  TransactionReceipt transactionReceipt = permissionService.grantAndRetReceipt(\"tt\", Common.TX_ORIGIN);\n+\t  Assert.assertTrue(transactionReceipt.isStatusOK());\n+\t  int i = PrecompiledCommon.handleTransactionReceiptForCRUD(transactionReceipt);\n+\t  System.out.println(\" ===> \" + i);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ead745d455675af825b4630009874306b2f6f92c"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwMjcwNzYwOnYy", "diffSide": "RIGHT", "path": "src/integration-test/java/org/fisco/bcos/precompile/PermissionServiceTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQwMTo0MzozMlrOHYsHwg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQwMTo0MzozMlrOHYsHwg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTY1MDc1NA==", "bodyText": "[PMD Java] Use assertSame(x, y) instead of assertTrue(x==y), or assertNotSame(x,y) vs assertFalse(x==y) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nUseAssertSameInsteadOfAssertTrue\nBest Practices\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.27.0/pmd_rules_java_bestpractices.html#useassertsameinsteadofasserttrue\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/706#discussion_r495650754", "createdAt": "2020-09-28T01:43:32Z", "author": {"login": "sider"}, "path": "src/integration-test/java/org/fisco/bcos/precompile/PermissionServiceTest.java", "diffHunk": "@@ -1,22 +1,28 @@\n package org.fisco.bcos.precompile;\n \n import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertTrue;\n \n import org.fisco.bcos.TestBase;\n-import org.fisco.bcos.web3j.precompile.exception.PrecompileMessageException;\n+import org.fisco.bcos.web3j.precompile.common.PrecompiledCommon;\n import org.fisco.bcos.web3j.precompile.permission.PermissionService;\n+import org.fisco.bcos.web3j.protocol.core.methods.response.TransactionReceipt;\n+import org.junit.Assert;\n import org.junit.Test;\n \n public class PermissionServiceTest extends TestBase {\n \n \n   private PermissionService permissionService = new PermissionService(web3j, credentials);\n \n-  @Test(expected= PrecompileMessageException.class) \n+  @Test\n   public void userTableManager() throws Exception {\n-  \t\n-\t  permissionService.grantUserTableManager(\"tt\", Common.TX_ORIGIN);\n-  \n+\n+\t  TransactionReceipt transactionReceipt = permissionService.grantAndRetReceipt(\"tt\", Common.TX_ORIGIN);\n+\t  Assert.assertTrue(transactionReceipt.isStatusOK());\n+\t  int i = PrecompiledCommon.handleTransactionReceiptForCRUD(transactionReceipt);\n+\t  System.out.println(\" ===> \" + i);\n+\t  assertTrue(i == PrecompiledCommon.InvalidTableNotExist);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ead745d455675af825b4630009874306b2f6f92c"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwMjczOTMxOnYy", "diffSide": "RIGHT", "path": "src/integration-test/java/org/fisco/bcos/precompile/PermissionServiceTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQwMjowNDo1NlrOHYsZNw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQwMjowNDo1NlrOHYsZNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTY1NTIyMw==", "bodyText": "[PMD Java] Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nAvoidCatchingGenericException\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.27.0/pmd_rules_java_design.html#avoidcatchinggenericexception\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/706#discussion_r495655223", "createdAt": "2020-09-28T02:04:56Z", "author": {"login": "sider"}, "path": "src/integration-test/java/org/fisco/bcos/precompile/PermissionServiceTest.java", "diffHunk": "@@ -1,22 +1,32 @@\n package org.fisco.bcos.precompile;\n \n import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertTrue;\n \n import org.fisco.bcos.TestBase;\n-import org.fisco.bcos.web3j.precompile.exception.PrecompileMessageException;\n+import org.fisco.bcos.web3j.precompile.common.PrecompiledCommon;\n import org.fisco.bcos.web3j.precompile.permission.PermissionService;\n+import org.fisco.bcos.web3j.protocol.core.methods.response.TransactionReceipt;\n+import org.junit.Assert;\n import org.junit.Test;\n \n public class PermissionServiceTest extends TestBase {\n \n \n   private PermissionService permissionService = new PermissionService(web3j, credentials);\n \n-  @Test(expected= PrecompileMessageException.class) \n+  @Test\n   public void userTableManager() throws Exception {\n-  \t\n-\t  permissionService.grantUserTableManager(\"tt\", Common.TX_ORIGIN);\n-  \n+\n+  \ttry {\n+\t\tTransactionReceipt transactionReceipt = permissionService.grantAndRetReceipt(\"tt\", Common.TX_ORIGIN);\n+\t\tAssert.assertTrue(transactionReceipt.isStatusOK());\n+\t\tint i = PrecompiledCommon.handleTransactionReceiptForCRUD(transactionReceipt);\n+\t\tSystem.out.println(\" ===> \" + i);\n+\t\tassertTrue(i == PrecompiledCommon.InvalidTableNotExist);\n+\t} catch (Exception e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4a192dac265431a08687ac91c7c3e88642d52ac6"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwMjczOTMyOnYy", "diffSide": "RIGHT", "path": "src/integration-test/java/org/fisco/bcos/precompile/PermissionServiceTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQwMjowNDo1NlrOHYsZOQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQwMjowNDo1NlrOHYsZOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTY1NTIyNQ==", "bodyText": "[PMD Java] Avoid printStackTrace(); use a logger call instead. (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nAvoidPrintStackTrace\nBest Practices\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.27.0/pmd_rules_java_bestpractices.html#avoidprintstacktrace\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/706#discussion_r495655225", "createdAt": "2020-09-28T02:04:56Z", "author": {"login": "sider"}, "path": "src/integration-test/java/org/fisco/bcos/precompile/PermissionServiceTest.java", "diffHunk": "@@ -1,22 +1,32 @@\n package org.fisco.bcos.precompile;\n \n import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertTrue;\n \n import org.fisco.bcos.TestBase;\n-import org.fisco.bcos.web3j.precompile.exception.PrecompileMessageException;\n+import org.fisco.bcos.web3j.precompile.common.PrecompiledCommon;\n import org.fisco.bcos.web3j.precompile.permission.PermissionService;\n+import org.fisco.bcos.web3j.protocol.core.methods.response.TransactionReceipt;\n+import org.junit.Assert;\n import org.junit.Test;\n \n public class PermissionServiceTest extends TestBase {\n \n \n   private PermissionService permissionService = new PermissionService(web3j, credentials);\n \n-  @Test(expected= PrecompileMessageException.class) \n+  @Test\n   public void userTableManager() throws Exception {\n-  \t\n-\t  permissionService.grantUserTableManager(\"tt\", Common.TX_ORIGIN);\n-  \n+\n+  \ttry {\n+\t\tTransactionReceipt transactionReceipt = permissionService.grantAndRetReceipt(\"tt\", Common.TX_ORIGIN);\n+\t\tAssert.assertTrue(transactionReceipt.isStatusOK());\n+\t\tint i = PrecompiledCommon.handleTransactionReceiptForCRUD(transactionReceipt);\n+\t\tSystem.out.println(\" ===> \" + i);\n+\t\tassertTrue(i == PrecompiledCommon.InvalidTableNotExist);\n+\t} catch (Exception e) {\n+  \t\te.printStackTrace();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4a192dac265431a08687ac91c7c3e88642d52ac6"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwMjczOTMzOnYy", "diffSide": "RIGHT", "path": "src/integration-test/java/org/fisco/bcos/precompile/PermissionServiceTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQwMjowNDo1NlrOHYsZOg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQwMjowNDo1NlrOHYsZOg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTY1NTIyNg==", "bodyText": "[PMD Java] JUnit assertions should include a message (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nJUnitAssertionsShouldIncludeMessage\nBest Practices\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.27.0/pmd_rules_java_bestpractices.html#junitassertionsshouldincludemessage\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/706#discussion_r495655226", "createdAt": "2020-09-28T02:04:56Z", "author": {"login": "sider"}, "path": "src/integration-test/java/org/fisco/bcos/precompile/PermissionServiceTest.java", "diffHunk": "@@ -1,22 +1,32 @@\n package org.fisco.bcos.precompile;\n \n import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertTrue;\n \n import org.fisco.bcos.TestBase;\n-import org.fisco.bcos.web3j.precompile.exception.PrecompileMessageException;\n+import org.fisco.bcos.web3j.precompile.common.PrecompiledCommon;\n import org.fisco.bcos.web3j.precompile.permission.PermissionService;\n+import org.fisco.bcos.web3j.protocol.core.methods.response.TransactionReceipt;\n+import org.junit.Assert;\n import org.junit.Test;\n \n public class PermissionServiceTest extends TestBase {\n \n \n   private PermissionService permissionService = new PermissionService(web3j, credentials);\n \n-  @Test(expected= PrecompileMessageException.class) \n+  @Test\n   public void userTableManager() throws Exception {\n-  \t\n-\t  permissionService.grantUserTableManager(\"tt\", Common.TX_ORIGIN);\n-  \n+\n+  \ttry {\n+\t\tTransactionReceipt transactionReceipt = permissionService.grantAndRetReceipt(\"tt\", Common.TX_ORIGIN);\n+\t\tAssert.assertTrue(transactionReceipt.isStatusOK());\n+\t\tint i = PrecompiledCommon.handleTransactionReceiptForCRUD(transactionReceipt);\n+\t\tSystem.out.println(\" ===> \" + i);\n+\t\tassertTrue(i == PrecompiledCommon.InvalidTableNotExist);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4a192dac265431a08687ac91c7c3e88642d52ac6"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwMjczOTM0OnYy", "diffSide": "RIGHT", "path": "src/integration-test/java/org/fisco/bcos/precompile/PermissionServiceTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQwMjowNDo1N1rOHYsZOw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQwMjowNDo1N1rOHYsZOw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTY1NTIyNw==", "bodyText": "[PMD Java] Potential violation of Law of Demeter (object not created locally) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.27.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/706#discussion_r495655227", "createdAt": "2020-09-28T02:04:57Z", "author": {"login": "sider"}, "path": "src/integration-test/java/org/fisco/bcos/precompile/PermissionServiceTest.java", "diffHunk": "@@ -1,22 +1,32 @@\n package org.fisco.bcos.precompile;\n \n import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertTrue;\n \n import org.fisco.bcos.TestBase;\n-import org.fisco.bcos.web3j.precompile.exception.PrecompileMessageException;\n+import org.fisco.bcos.web3j.precompile.common.PrecompiledCommon;\n import org.fisco.bcos.web3j.precompile.permission.PermissionService;\n+import org.fisco.bcos.web3j.protocol.core.methods.response.TransactionReceipt;\n+import org.junit.Assert;\n import org.junit.Test;\n \n public class PermissionServiceTest extends TestBase {\n \n \n   private PermissionService permissionService = new PermissionService(web3j, credentials);\n \n-  @Test(expected= PrecompileMessageException.class) \n+  @Test\n   public void userTableManager() throws Exception {\n-  \t\n-\t  permissionService.grantUserTableManager(\"tt\", Common.TX_ORIGIN);\n-  \n+\n+  \ttry {\n+\t\tTransactionReceipt transactionReceipt = permissionService.grantAndRetReceipt(\"tt\", Common.TX_ORIGIN);\n+\t\tAssert.assertTrue(transactionReceipt.isStatusOK());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4a192dac265431a08687ac91c7c3e88642d52ac6"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwMjczOTM1OnYy", "diffSide": "RIGHT", "path": "src/integration-test/java/org/fisco/bcos/precompile/PermissionServiceTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQwMjowNDo1N1rOHYsZPA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQwMjowNDo1N1rOHYsZPA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTY1NTIyOA==", "bodyText": "[PMD Java] System.out.println is used (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nSystemPrintln\nBest Practices\n2\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.27.0/pmd_rules_java_bestpractices.html#systemprintln\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/706#discussion_r495655228", "createdAt": "2020-09-28T02:04:57Z", "author": {"login": "sider"}, "path": "src/integration-test/java/org/fisco/bcos/precompile/PermissionServiceTest.java", "diffHunk": "@@ -1,22 +1,32 @@\n package org.fisco.bcos.precompile;\n \n import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertTrue;\n \n import org.fisco.bcos.TestBase;\n-import org.fisco.bcos.web3j.precompile.exception.PrecompileMessageException;\n+import org.fisco.bcos.web3j.precompile.common.PrecompiledCommon;\n import org.fisco.bcos.web3j.precompile.permission.PermissionService;\n+import org.fisco.bcos.web3j.protocol.core.methods.response.TransactionReceipt;\n+import org.junit.Assert;\n import org.junit.Test;\n \n public class PermissionServiceTest extends TestBase {\n \n \n   private PermissionService permissionService = new PermissionService(web3j, credentials);\n \n-  @Test(expected= PrecompileMessageException.class) \n+  @Test\n   public void userTableManager() throws Exception {\n-  \t\n-\t  permissionService.grantUserTableManager(\"tt\", Common.TX_ORIGIN);\n-  \n+\n+  \ttry {\n+\t\tTransactionReceipt transactionReceipt = permissionService.grantAndRetReceipt(\"tt\", Common.TX_ORIGIN);\n+\t\tAssert.assertTrue(transactionReceipt.isStatusOK());\n+\t\tint i = PrecompiledCommon.handleTransactionReceiptForCRUD(transactionReceipt);\n+\t\tSystem.out.println(\" ===> \" + i);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4a192dac265431a08687ac91c7c3e88642d52ac6"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwMjczOTM2OnYy", "diffSide": "RIGHT", "path": "src/integration-test/java/org/fisco/bcos/precompile/PermissionServiceTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQwMjowNDo1N1rOHYsZPg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQwMjowNDo1N1rOHYsZPg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTY1NTIzMA==", "bodyText": "[PMD Java] Use assertSame(x, y) instead of assertTrue(x==y), or assertNotSame(x,y) vs assertFalse(x==y) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nUseAssertSameInsteadOfAssertTrue\nBest Practices\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.27.0/pmd_rules_java_bestpractices.html#useassertsameinsteadofasserttrue\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/706#discussion_r495655230", "createdAt": "2020-09-28T02:04:57Z", "author": {"login": "sider"}, "path": "src/integration-test/java/org/fisco/bcos/precompile/PermissionServiceTest.java", "diffHunk": "@@ -1,22 +1,32 @@\n package org.fisco.bcos.precompile;\n \n import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertTrue;\n \n import org.fisco.bcos.TestBase;\n-import org.fisco.bcos.web3j.precompile.exception.PrecompileMessageException;\n+import org.fisco.bcos.web3j.precompile.common.PrecompiledCommon;\n import org.fisco.bcos.web3j.precompile.permission.PermissionService;\n+import org.fisco.bcos.web3j.protocol.core.methods.response.TransactionReceipt;\n+import org.junit.Assert;\n import org.junit.Test;\n \n public class PermissionServiceTest extends TestBase {\n \n \n   private PermissionService permissionService = new PermissionService(web3j, credentials);\n \n-  @Test(expected= PrecompileMessageException.class) \n+  @Test\n   public void userTableManager() throws Exception {\n-  \t\n-\t  permissionService.grantUserTableManager(\"tt\", Common.TX_ORIGIN);\n-  \n+\n+  \ttry {\n+\t\tTransactionReceipt transactionReceipt = permissionService.grantAndRetReceipt(\"tt\", Common.TX_ORIGIN);\n+\t\tAssert.assertTrue(transactionReceipt.isStatusOK());\n+\t\tint i = PrecompiledCommon.handleTransactionReceiptForCRUD(transactionReceipt);\n+\t\tSystem.out.println(\" ===> \" + i);\n+\t\tassertTrue(i == PrecompiledCommon.InvalidTableNotExist);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4a192dac265431a08687ac91c7c3e88642d52ac6"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwMjc5NTA1OnYy", "diffSide": "RIGHT", "path": "src/integration-test/java/org/fisco/bcos/precompile/PermissionServiceTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQwMjo0NjoxN1rOHYs4gQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQwMjo0NjoxN1rOHYs4gQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTY2MzIzMw==", "bodyText": "[PMD Java] JUnit assertions should include a message (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nJUnitAssertionsShouldIncludeMessage\nBest Practices\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.27.0/pmd_rules_java_bestpractices.html#junitassertionsshouldincludemessage\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/706#discussion_r495663233", "createdAt": "2020-09-28T02:46:17Z", "author": {"login": "sider"}, "path": "src/integration-test/java/org/fisco/bcos/precompile/PermissionServiceTest.java", "diffHunk": "@@ -1,22 +1,27 @@\n package org.fisco.bcos.precompile;\n \n import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertTrue;\n \n import org.fisco.bcos.TestBase;\n-import org.fisco.bcos.web3j.precompile.exception.PrecompileMessageException;\n+import org.fisco.bcos.web3j.precompile.common.PrecompiledCommon;\n import org.fisco.bcos.web3j.precompile.permission.PermissionService;\n+import org.fisco.bcos.web3j.protocol.core.methods.response.TransactionReceipt;\n+import org.junit.Assert;\n import org.junit.Test;\n \n public class PermissionServiceTest extends TestBase {\n \n \n   private PermissionService permissionService = new PermissionService(web3j, credentials);\n \n-  @Test(expected= PrecompileMessageException.class) \n+  @Test\n   public void userTableManager() throws Exception {\n-  \t\n-\t  permissionService.grantUserTableManager(\"tt\", Common.TX_ORIGIN);\n-  \n+\t\tTransactionReceipt transactionReceipt = permissionService.grantAndRetReceipt(\"tt_1111\", Common.TX_ORIGIN);\n+\t\tAssert.assertTrue(transactionReceipt.isStatusOK());\n+\t\tint i = PrecompiledCommon.handleTransactionReceiptForCRUD(transactionReceipt);\n+\t\tSystem.out.println(\" ===> \" + i);\n+\t\tassertTrue(i == PrecompiledCommon.InvalidTableNotExist);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3d8a6eb41366ef07dcbdfa9cc85b18a8380061b7"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwMjc5NTA2OnYy", "diffSide": "RIGHT", "path": "src/integration-test/java/org/fisco/bcos/precompile/PermissionServiceTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQwMjo0NjoxN1rOHYs4gg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQwMjo0NjoxN1rOHYs4gg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTY2MzIzNA==", "bodyText": "[PMD Java] Potential violation of Law of Demeter (object not created locally) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.27.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/706#discussion_r495663234", "createdAt": "2020-09-28T02:46:17Z", "author": {"login": "sider"}, "path": "src/integration-test/java/org/fisco/bcos/precompile/PermissionServiceTest.java", "diffHunk": "@@ -1,22 +1,27 @@\n package org.fisco.bcos.precompile;\n \n import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertTrue;\n \n import org.fisco.bcos.TestBase;\n-import org.fisco.bcos.web3j.precompile.exception.PrecompileMessageException;\n+import org.fisco.bcos.web3j.precompile.common.PrecompiledCommon;\n import org.fisco.bcos.web3j.precompile.permission.PermissionService;\n+import org.fisco.bcos.web3j.protocol.core.methods.response.TransactionReceipt;\n+import org.junit.Assert;\n import org.junit.Test;\n \n public class PermissionServiceTest extends TestBase {\n \n \n   private PermissionService permissionService = new PermissionService(web3j, credentials);\n \n-  @Test(expected= PrecompileMessageException.class) \n+  @Test\n   public void userTableManager() throws Exception {\n-  \t\n-\t  permissionService.grantUserTableManager(\"tt\", Common.TX_ORIGIN);\n-  \n+\t\tTransactionReceipt transactionReceipt = permissionService.grantAndRetReceipt(\"tt_1111\", Common.TX_ORIGIN);\n+\t\tAssert.assertTrue(transactionReceipt.isStatusOK());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3d8a6eb41366ef07dcbdfa9cc85b18a8380061b7"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwMjc5NTA3OnYy", "diffSide": "RIGHT", "path": "src/integration-test/java/org/fisco/bcos/precompile/PermissionServiceTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQwMjo0NjoxN1rOHYs4gw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQwMjo0NjoxN1rOHYs4gw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTY2MzIzNQ==", "bodyText": "[PMD Java] System.out.println is used (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nSystemPrintln\nBest Practices\n2\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.27.0/pmd_rules_java_bestpractices.html#systemprintln\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/706#discussion_r495663235", "createdAt": "2020-09-28T02:46:17Z", "author": {"login": "sider"}, "path": "src/integration-test/java/org/fisco/bcos/precompile/PermissionServiceTest.java", "diffHunk": "@@ -1,22 +1,27 @@\n package org.fisco.bcos.precompile;\n \n import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertTrue;\n \n import org.fisco.bcos.TestBase;\n-import org.fisco.bcos.web3j.precompile.exception.PrecompileMessageException;\n+import org.fisco.bcos.web3j.precompile.common.PrecompiledCommon;\n import org.fisco.bcos.web3j.precompile.permission.PermissionService;\n+import org.fisco.bcos.web3j.protocol.core.methods.response.TransactionReceipt;\n+import org.junit.Assert;\n import org.junit.Test;\n \n public class PermissionServiceTest extends TestBase {\n \n \n   private PermissionService permissionService = new PermissionService(web3j, credentials);\n \n-  @Test(expected= PrecompileMessageException.class) \n+  @Test\n   public void userTableManager() throws Exception {\n-  \t\n-\t  permissionService.grantUserTableManager(\"tt\", Common.TX_ORIGIN);\n-  \n+\t\tTransactionReceipt transactionReceipt = permissionService.grantAndRetReceipt(\"tt_1111\", Common.TX_ORIGIN);\n+\t\tAssert.assertTrue(transactionReceipt.isStatusOK());\n+\t\tint i = PrecompiledCommon.handleTransactionReceiptForCRUD(transactionReceipt);\n+\t\tSystem.out.println(\" ===> \" + i);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3d8a6eb41366ef07dcbdfa9cc85b18a8380061b7"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwMjc5NTA4OnYy", "diffSide": "RIGHT", "path": "src/integration-test/java/org/fisco/bcos/precompile/PermissionServiceTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQwMjo0NjoxN1rOHYs4hA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQwMjo0NjoxN1rOHYs4hA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTY2MzIzNg==", "bodyText": "[PMD Java] Use assertSame(x, y) instead of assertTrue(x==y), or assertNotSame(x,y) vs assertFalse(x==y) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nUseAssertSameInsteadOfAssertTrue\nBest Practices\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.27.0/pmd_rules_java_bestpractices.html#useassertsameinsteadofasserttrue\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/706#discussion_r495663236", "createdAt": "2020-09-28T02:46:17Z", "author": {"login": "sider"}, "path": "src/integration-test/java/org/fisco/bcos/precompile/PermissionServiceTest.java", "diffHunk": "@@ -1,22 +1,27 @@\n package org.fisco.bcos.precompile;\n \n import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertTrue;\n \n import org.fisco.bcos.TestBase;\n-import org.fisco.bcos.web3j.precompile.exception.PrecompileMessageException;\n+import org.fisco.bcos.web3j.precompile.common.PrecompiledCommon;\n import org.fisco.bcos.web3j.precompile.permission.PermissionService;\n+import org.fisco.bcos.web3j.protocol.core.methods.response.TransactionReceipt;\n+import org.junit.Assert;\n import org.junit.Test;\n \n public class PermissionServiceTest extends TestBase {\n \n \n   private PermissionService permissionService = new PermissionService(web3j, credentials);\n \n-  @Test(expected= PrecompileMessageException.class) \n+  @Test\n   public void userTableManager() throws Exception {\n-  \t\n-\t  permissionService.grantUserTableManager(\"tt\", Common.TX_ORIGIN);\n-  \n+\t\tTransactionReceipt transactionReceipt = permissionService.grantAndRetReceipt(\"tt_1111\", Common.TX_ORIGIN);\n+\t\tAssert.assertTrue(transactionReceipt.isStatusOK());\n+\t\tint i = PrecompiledCommon.handleTransactionReceiptForCRUD(transactionReceipt);\n+\t\tSystem.out.println(\" ===> \" + i);\n+\t\tassertTrue(i == PrecompiledCommon.InvalidTableNotExist);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3d8a6eb41366ef07dcbdfa9cc85b18a8380061b7"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwMzE2MzU1OnYy", "diffSide": "RIGHT", "path": "src/integration-test/java/org/fisco/bcos/precompile/PermissionServiceTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQwNjozNToxNlrOHYwIYA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQwNjozNToxNlrOHYwIYA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTcxNjQ0OA==", "bodyText": "[PMD Java] JUnit assertions should include a message (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nJUnitAssertionsShouldIncludeMessage\nBest Practices\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.27.0/pmd_rules_java_bestpractices.html#junitassertionsshouldincludemessage\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/706#discussion_r495716448", "createdAt": "2020-09-28T06:35:16Z", "author": {"login": "sider"}, "path": "src/integration-test/java/org/fisco/bcos/precompile/PermissionServiceTest.java", "diffHunk": "@@ -1,22 +1,26 @@\n package org.fisco.bcos.precompile;\n \n import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertTrue;\n \n import org.fisco.bcos.TestBase;\n-import org.fisco.bcos.web3j.precompile.exception.PrecompileMessageException;\n+import org.fisco.bcos.web3j.precompile.common.PrecompiledCommon;\n import org.fisco.bcos.web3j.precompile.permission.PermissionService;\n+import org.fisco.bcos.web3j.protocol.core.methods.response.TransactionReceipt;\n+import org.junit.Assert;\n import org.junit.Test;\n \n public class PermissionServiceTest extends TestBase {\n \n \n   private PermissionService permissionService = new PermissionService(web3j, credentials);\n \n-  @Test(expected= PrecompileMessageException.class) \n+  @Test\n   public void userTableManager() throws Exception {\n-  \t\n-\t  permissionService.grantUserTableManager(\"tt\", Common.TX_ORIGIN);\n-  \n+\t\tTransactionReceipt transactionReceipt = permissionService.grantAndRetReceipt(\"tt\", Common.TX_ORIGIN);\n+\t\tAssert.assertTrue(transactionReceipt.isStatusOK());\n+\t\tint i = PrecompiledCommon.handleTransactionReceiptForCRUD(transactionReceipt);\n+\t\tassertTrue(i == PrecompiledCommon.InvalidTableNotExist);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aa6f76098dc9e88e7affbd86f2b8e5400c36e849"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwMzE2MzU4OnYy", "diffSide": "RIGHT", "path": "src/integration-test/java/org/fisco/bcos/precompile/PermissionServiceTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQwNjozNToxNlrOHYwIYw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQwNjozNToxNlrOHYwIYw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTcxNjQ1MQ==", "bodyText": "[PMD Java] Use assertSame(x, y) instead of assertTrue(x==y), or assertNotSame(x,y) vs assertFalse(x==y) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nUseAssertSameInsteadOfAssertTrue\nBest Practices\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.27.0/pmd_rules_java_bestpractices.html#useassertsameinsteadofasserttrue\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/706#discussion_r495716451", "createdAt": "2020-09-28T06:35:16Z", "author": {"login": "sider"}, "path": "src/integration-test/java/org/fisco/bcos/precompile/PermissionServiceTest.java", "diffHunk": "@@ -1,22 +1,26 @@\n package org.fisco.bcos.precompile;\n \n import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertTrue;\n \n import org.fisco.bcos.TestBase;\n-import org.fisco.bcos.web3j.precompile.exception.PrecompileMessageException;\n+import org.fisco.bcos.web3j.precompile.common.PrecompiledCommon;\n import org.fisco.bcos.web3j.precompile.permission.PermissionService;\n+import org.fisco.bcos.web3j.protocol.core.methods.response.TransactionReceipt;\n+import org.junit.Assert;\n import org.junit.Test;\n \n public class PermissionServiceTest extends TestBase {\n \n \n   private PermissionService permissionService = new PermissionService(web3j, credentials);\n \n-  @Test(expected= PrecompileMessageException.class) \n+  @Test\n   public void userTableManager() throws Exception {\n-  \t\n-\t  permissionService.grantUserTableManager(\"tt\", Common.TX_ORIGIN);\n-  \n+\t\tTransactionReceipt transactionReceipt = permissionService.grantAndRetReceipt(\"tt\", Common.TX_ORIGIN);\n+\t\tAssert.assertTrue(transactionReceipt.isStatusOK());\n+\t\tint i = PrecompiledCommon.handleTransactionReceiptForCRUD(transactionReceipt);\n+\t\tassertTrue(i == PrecompiledCommon.InvalidTableNotExist);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aa6f76098dc9e88e7affbd86f2b8e5400c36e849"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwMzIyMDAwOnYy", "diffSide": "RIGHT", "path": "src/integration-test/java/org/fisco/bcos/precompile/PermissionServiceTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQwNjo1NjoyMlrOHYwpEg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQwNjo1NjoyMlrOHYwpEg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTcyNDgxOA==", "bodyText": "[PMD Java] JUnit assertions should include a message (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nJUnitAssertionsShouldIncludeMessage\nBest Practices\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.27.0/pmd_rules_java_bestpractices.html#junitassertionsshouldincludemessage\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/706#discussion_r495724818", "createdAt": "2020-09-28T06:56:22Z", "author": {"login": "sider"}, "path": "src/integration-test/java/org/fisco/bcos/precompile/PermissionServiceTest.java", "diffHunk": "@@ -1,22 +1,26 @@\n package org.fisco.bcos.precompile;\n \n import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertTrue;\n \n import org.fisco.bcos.TestBase;\n-import org.fisco.bcos.web3j.precompile.exception.PrecompileMessageException;\n+import org.fisco.bcos.web3j.precompile.common.PrecompiledCommon;\n import org.fisco.bcos.web3j.precompile.permission.PermissionService;\n+import org.fisco.bcos.web3j.protocol.core.methods.response.TransactionReceipt;\n+import org.junit.Assert;\n import org.junit.Test;\n \n public class PermissionServiceTest extends TestBase {\n \n \n   private PermissionService permissionService = new PermissionService(web3j, credentials);\n \n-  @Test(expected= PrecompileMessageException.class) \n+  @Test\n   public void userTableManager() throws Exception {\n-  \t\n-\t  permissionService.grantUserTableManager(\"tt\", Common.TX_ORIGIN);\n-  \n+\t\tTransactionReceipt transactionReceipt = permissionService.grantAndRetReceipt(\"tt\", Common.TX_ORIGIN);\n+\t\tAssert.assertTrue(transactionReceipt.isStatusOK());\n+\t\tint i = PrecompiledCommon.handleTransactionReceiptForCRUD(transactionReceipt);\n+\t\tassertEquals(i , 1);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "65784c29855efea0975a2096bbc5bf4427ba4e2f"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwMzIyMDAxOnYy", "diffSide": "RIGHT", "path": "src/integration-test/java/org/fisco/bcos/precompile/PermissionServiceTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQwNjo1NjoyMlrOHYwpEw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQwNjo1NjoyMlrOHYwpEw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTcyNDgxOQ==", "bodyText": "[PMD Java] Avoid unused imports such as 'org.junit.Assert.assertTrue' (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nUnusedImports\nBest Practices\n4\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.27.0/pmd_rules_java_bestpractices.html#unusedimports\n\nYou can close this issue if no need to fix it. Learn more.", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/706#discussion_r495724819", "createdAt": "2020-09-28T06:56:22Z", "author": {"login": "sider"}, "path": "src/integration-test/java/org/fisco/bcos/precompile/PermissionServiceTest.java", "diffHunk": "@@ -1,22 +1,26 @@\n package org.fisco.bcos.precompile;\n \n import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertTrue;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "65784c29855efea0975a2096bbc5bf4427ba4e2f"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 605, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}