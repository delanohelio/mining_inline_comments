{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAxNDY5MDM1", "number": 1341, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxNTowMjozM1rODwcbzw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxNTowMjozM1rODwcbzw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyMTI0MTExOnYy", "diffSide": "RIGHT", "path": "dependencies/src/test/java/com/google/cloud/tools/opensource/classpath/LinkageCheckerMainIntegrationTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxNTowMjozM1rOGDcyUw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxNTowMjozM1rOGDcyUw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjI3MDU0Nw==", "bodyText": "This was throwing exception (#1341 )", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1341#discussion_r406270547", "createdAt": "2020-04-09T15:02:33Z", "author": {"login": "suztomo"}, "path": "dependencies/src/test/java/com/google/cloud/tools/opensource/classpath/LinkageCheckerMainIntegrationTest.java", "diffHunk": "@@ -0,0 +1,98 @@\n+/*\n+ * Copyright 2020 Google LLC.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.cloud.tools.opensource.classpath;\n+\n+import static com.google.cloud.tools.opensource.classpath.TestHelper.absolutePathOfResource;\n+\n+import com.google.common.truth.Truth;\n+import java.io.ByteArrayOutputStream;\n+import java.io.IOException;\n+import java.io.PrintStream;\n+import java.net.URISyntaxException;\n+import java.nio.file.Path;\n+import org.eclipse.aether.RepositoryException;\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+public class LinkageCheckerMainIntegrationTest {\n+\n+  private static final PrintStream originalStandardOut = System.out;\n+  private ByteArrayOutputStream capturedOutputStream;\n+\n+  @Before\n+  public void setup() {\n+    capturedOutputStream = new ByteArrayOutputStream();\n+    System.setOut(new PrintStream(capturedOutputStream));\n+  }\n+\n+  @After\n+  public void cleanup() {\n+    System.setOut(originalStandardOut);\n+  }\n+\n+  private String readCapturedStdout() {\n+    System.out.flush();\n+    String output = new String(capturedOutputStream.toByteArray());\n+    return output;\n+  }\n+\n+  @Test\n+  public void testJarFiles() throws IOException, URISyntaxException, RepositoryException {\n+\n+    Path googleCloudCore = absolutePathOfResource(\"testdata/google-cloud-core-1.48.0.jar\");\n+    Path googleCloudFirestore =\n+        absolutePathOfResource(\"testdata/google-cloud-firestore-0.65.0-beta.jar\");\n+    Path guava = absolutePathOfResource(\"testdata/guava-23.5-jre.jar\");\n+\n+    String jarArgument = googleCloudCore + \",\" + googleCloudFirestore + \",\" + guava;\n+\n+    // This should not raise Exception\n+    LinkageCheckerMain.main(new String[] {\"-j\", jarArgument});", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9250558288ba1a4e9bee4ea451667cbf351f52e6"}, "originalPosition": 65}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2705, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}