{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI0NjQ1MjQx", "number": 1424, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQyMDowMjo1NFrOEAqCSw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxNDozMTo0NlrOEA6nPg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5MTI0MTcxOnYy", "diffSide": "RIGHT", "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/CycleBreakerGraphTransformer.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQyMDowMjo1NFrOGcEyVQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQyMDo0Mjo0MVrOGcF_sA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjA5MTczMw==", "bodyText": "you only call put and never get, so this is probably not the simplest data structure we could use here. Maybe a Set?", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1424#discussion_r432091733", "createdAt": "2020-05-28T20:02:54Z", "author": {"login": "elharo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/CycleBreakerGraphTransformer.java", "diffHunk": "@@ -52,6 +55,11 @@ private static void removeCycle(\n       return;\n     }\n \n+    if (visited.put(node, true) != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a5bc1d2c297389f192b2345853588c4786c4deea"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjExMDMwMA==", "bodyText": "I wish I have Set for object identity. JRE does not provide IdentityHashSet.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1424#discussion_r432110300", "createdAt": "2020-05-28T20:40:03Z", "author": {"login": "suztomo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/CycleBreakerGraphTransformer.java", "diffHunk": "@@ -52,6 +55,11 @@ private static void removeCycle(\n       return;\n     }\n \n+    if (visited.put(node, true) != null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjA5MTczMw=="}, "originalCommit": {"oid": "a5bc1d2c297389f192b2345853588c4786c4deea"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjExMTUzNg==", "bodyText": "https://docs.oracle.com/javase/8/docs/api/java/util/Collections.html#newSetFromMap-java.util.Map- may work. Let me try this.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1424#discussion_r432111536", "createdAt": "2020-05-28T20:42:41Z", "author": {"login": "suztomo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/CycleBreakerGraphTransformer.java", "diffHunk": "@@ -52,6 +55,11 @@ private static void removeCycle(\n       return;\n     }\n \n+    if (visited.put(node, true) != null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjA5MTczMw=="}, "originalCommit": {"oid": "a5bc1d2c297389f192b2345853588c4786c4deea"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5Mzk1Nzc0OnYy", "diffSide": "RIGHT", "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/CycleBreakerGraphTransformer.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxNDozMTo0NlrOGcfXJA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxODoyNTo1MlrOGcnmEA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjUyNzE0MA==", "bodyText": "True for now but this is risky. DependencyNode is an interface, not a class. This could change.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1424#discussion_r432527140", "createdAt": "2020-05-29T14:31:46Z", "author": {"login": "elharo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/CycleBreakerGraphTransformer.java", "diffHunk": "@@ -33,6 +34,9 @@\n  */\n final class CycleBreakerGraphTransformer implements DependencyGraphTransformer {\n \n+  // DependencyNode inherits Object's equality. No two instances are equal to each other.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0f088615dfdef3b6fb3ceda25db32d8e89731cb9"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjY2MjAzMg==", "bodyText": "Good point. Updated to use a set based on IdentityHashMap.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1424#discussion_r432662032", "createdAt": "2020-05-29T18:25:52Z", "author": {"login": "suztomo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/CycleBreakerGraphTransformer.java", "diffHunk": "@@ -33,6 +34,9 @@\n  */\n final class CycleBreakerGraphTransformer implements DependencyGraphTransformer {\n \n+  // DependencyNode inherits Object's equality. No two instances are equal to each other.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjUyNzE0MA=="}, "originalCommit": {"oid": "0f088615dfdef3b6fb3ceda25db32d8e89731cb9"}, "originalPosition": 12}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2769, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}