{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY5ODY5NzU0", "number": 1607, "title": "Linkage Checker to verify method references to JRE classes", "bodyText": "Fixes #1605 .", "createdAt": "2020-08-19T01:32:36Z", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1607", "merged": true, "mergeCommit": {"oid": "354bfeee858c53714091acf7a43bed0bfa677e96"}, "closed": true, "closedAt": "2020-08-26T05:30:56Z", "author": {"login": "suztomo"}, "timelineItems": {"totalCount": 19, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdARGDbAH2gAyNDY5ODY5NzU0OmFiNTNmMmVlMGJiZGFmMWY0ZjE0YTU2ODQ1MTc2ZmVhOWNjZWRlNjk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdCY-etgH2gAyNDY5ODY5NzU0OjEyYzBmZTE3Nzc3YjUxY2I2YTJmMDc3MWJlYjVkZjI5YjdkY2YyYTM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "ab53f2ee0bbdaf1f4f14a56845176fea9ccede69", "author": {"user": {"login": "suztomo", "name": "Tomo Suzuki"}}, "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/ab53f2ee0bbdaf1f4f14a56845176fea9ccede69", "committedDate": "2020-08-19T01:12:14Z", "message": "Validate system class in target"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a8a1571176ed9b8b48d9d698c9a56f2527bd878f", "author": {"user": {"login": "suztomo", "name": "Tomo Suzuki"}}, "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/a8a1571176ed9b8b48d9d698c9a56f2527bd878f", "committedDate": "2020-08-19T01:22:17Z", "message": "GraalVM references in exclusion rule"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcwMTA5Nzg5", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1607#pullrequestreview-470109789", "createdAt": "2020-08-19T04:05:26Z", "commit": {"oid": "a8a1571176ed9b8b48d9d698c9a56f2527bd878f"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQwNDowNToyNlrOHCxEJA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQwNDowNzozOFrOHCxJJA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjY2MzA3Ng==", "bodyText": "Because now we check JDK classes, GraalVM-related exclusion is needed.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1607#discussion_r472663076", "createdAt": "2020-08-19T04:05:26Z", "author": {"login": "suztomo"}, "path": "dependencies/src/main/resources/linkage-checker-exclusion-default.xml", "diffHunk": "@@ -41,7 +41,62 @@\n       <Package name=\"org.graalvm\" />\n     </Source>\n   </LinkageError>\n-\n+  <LinkageError>\n+    <Target>\n+      <Class name=\"java.lang.invoke.MethodHandle\" />\n+    </Target>\n+    <Source>\n+      <Package name=\"com.oracle.svm\" />\n+    </Source>\n+    <Reason>\n+      GraalVM-related libraries depend on Java Compiler Interface (JVMCI) that\n+      only exists in special JDK. These missing classes are false positives, because\n+      the code is only invoked when running in a GraalVM.\n+      https://github.com/GoogleCloudPlatform/cloud-opensource-java/issues/929\n+    </Reason>\n+  </LinkageError>\n+  <LinkageError>\n+    <Target>\n+      <Class name=\"java.lang.invoke.MethodHandle\" />\n+    </Target>\n+    <Source>\n+      <Package name=\"com.oracle.graal\" />\n+    </Source>\n+    <Reason>\n+      GraalVM-related libraries depend on Java Compiler Interface (JVMCI) that\n+      only exists in special JDK. These missing classes are false positives, because\n+      the code is only invoked when running in a GraalVM.\n+      https://github.com/GoogleCloudPlatform/cloud-opensource-java/issues/929\n+    </Reason>\n+  </LinkageError>\n+  <LinkageError>\n+    <Target>\n+      <Class name=\"java.lang.invoke.MethodHandle\" />\n+    </Target>\n+    <Source>\n+      <Package name=\"org.graalvm\" />\n+    </Source>\n+    <Reason>\n+      GraalVM-related libraries depend on Java Compiler Interface (JVMCI) that\n+      only exists in special JDK. These missing classes are false positives, because\n+      the code is only invoked when running in a GraalVM.\n+      https://github.com/GoogleCloudPlatform/cloud-opensource-java/issues/929\n+    </Reason>\n+  </LinkageError>\n+  <LinkageError>\n+    <Target>\n+      <Class name=\"java.lang.invoke.MethodHandle\" />\n+    </Target>\n+    <Source>\n+      <Package name=\"com.oracle.truffle\" />\n+    </Source>\n+    <Reason>\n+      GraalVM-related libraries depend on Java Compiler Interface (JVMCI) that\n+      only exists in special JDK. These missing classes are false positives, because\n+      the code is only invoked when running in a GraalVM.\n+      https://github.com/GoogleCloudPlatform/cloud-opensource-java/issues/929\n+    </Reason>\n+  </LinkageError>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a8a1571176ed9b8b48d9d698c9a56f2527bd878f"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjY2MzE5Mw==", "bodyText": "This is Kristen's finding yesterday.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1607#discussion_r472663193", "createdAt": "2020-08-19T04:05:39Z", "author": {"login": "suztomo"}, "path": "dependencies/src/test/java/com/google/cloud/tools/opensource/classpath/LinkageCheckerTest.java", "diffHunk": "@@ -1120,4 +1120,24 @@ public void testFindLinkageProblems_grpcAndGuava() throws IOException {\n                 \"has class binary name\"))\n         .contains(\"io.grpc.internal.DnsNameResolver\");\n   }\n+\n+  @Test\n+  public void testFindLinkageProblems_referenceToNonexistentMethodForJava8() throws IOException {\n+    // Protobuf-java 3.12.4 contained wrong byte code to reference non-existent method in JRE 1.8\n+    // https://github.com/protocolbuffers/protobuf/issues/7827", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a8a1571176ed9b8b48d9d698c9a56f2527bd878f"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjY2NDM1Ng==", "bodyText": "This was hiding the protobuf's linkage error against Java 8 runtime protocolbuffers/protobuf#7827", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1607#discussion_r472664356", "createdAt": "2020-08-19T04:07:38Z", "author": {"login": "suztomo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/LinkageChecker.java", "diffHunk": "@@ -239,8 +239,14 @@ private boolean problemFilter(LinkageProblem linkageProblem) {\n     String targetClassName = symbol.getClassBinaryName();\n     String methodName = symbol.getName();\n \n-    // Skip references to Java runtime class. For example, java.lang.String.\n-    if (classDumper.isSystemClass(targetClassName)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a8a1571176ed9b8b48d9d698c9a56f2527bd878f"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcwNDA1NTk4", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1607#pullrequestreview-470405598", "createdAt": "2020-08-19T12:27:47Z", "commit": {"oid": "a8a1571176ed9b8b48d9d698c9a56f2527bd878f"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQxMjoyNzo0N1rOHDFBRA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQxMjoyOToxOFrOHDFEiQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mjk5MDAyMA==", "bodyText": "I'm not sure lines 246-248 explain this code. It explains what we're not doing, not what we are. I suggest deleting them.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1607#discussion_r472990020", "createdAt": "2020-08-19T12:27:47Z", "author": {"login": "elharo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/LinkageChecker.java", "diffHunk": "@@ -239,8 +239,14 @@ private boolean problemFilter(LinkageProblem linkageProblem) {\n     String targetClassName = symbol.getClassBinaryName();\n     String methodName = symbol.getName();\n \n-    // Skip references to Java runtime class. For example, java.lang.String.\n-    if (classDumper.isSystemClass(targetClassName)) {\n+    if (ClassDumper.isArrayClass(targetClassName)) {\n+      return Optional.empty();\n+    }\n+    // Skip references from Java runtime class. For example, java.lang.String.\n+    // It is possible for wrongly configured Java compiler to generate bad byte code that references", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a8a1571176ed9b8b48d9d698c9a56f2527bd878f"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mjk5MDg1Nw==", "bodyText": "protobuf-java 3.12.4 references a Java 11 method that does not exist in Java 8", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1607#discussion_r472990857", "createdAt": "2020-08-19T12:29:18Z", "author": {"login": "elharo"}, "path": "dependencies/src/test/java/com/google/cloud/tools/opensource/classpath/LinkageCheckerTest.java", "diffHunk": "@@ -1120,4 +1120,24 @@ public void testFindLinkageProblems_grpcAndGuava() throws IOException {\n                 \"has class binary name\"))\n         .contains(\"io.grpc.internal.DnsNameResolver\");\n   }\n+\n+  @Test\n+  public void testFindLinkageProblems_referenceToNonexistentMethodForJava8() throws IOException {\n+    // Protobuf-java 3.12.4 contained wrong byte code to reference non-existent method in JRE 1.8", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a8a1571176ed9b8b48d9d698c9a56f2527bd878f"}, "originalPosition": 7}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcwNDA5MDI1", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1607#pullrequestreview-470409025", "createdAt": "2020-08-19T12:32:27Z", "commit": {"oid": "a8a1571176ed9b8b48d9d698c9a56f2527bd878f"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a36b4521d179b1dd9e2f54e4c2eca1749b59c826", "author": {"user": {"login": "suztomo", "name": "Tomo Suzuki"}}, "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/a36b4521d179b1dd9e2f54e4c2eca1749b59c826", "committedDate": "2020-08-19T12:52:56Z", "message": "Applied review"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcwNDI0OTMy", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1607#pullrequestreview-470424932", "createdAt": "2020-08-19T12:52:52Z", "commit": {"oid": "a8a1571176ed9b8b48d9d698c9a56f2527bd878f"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQxMjo1Mjo1MlrOHDF7gA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQxMjo1MzoyN1rOHDF81w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzAwNDkyOA==", "bodyText": "Updated.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1607#discussion_r473004928", "createdAt": "2020-08-19T12:52:52Z", "author": {"login": "suztomo"}, "path": "dependencies/src/test/java/com/google/cloud/tools/opensource/classpath/LinkageCheckerTest.java", "diffHunk": "@@ -1120,4 +1120,24 @@ public void testFindLinkageProblems_grpcAndGuava() throws IOException {\n                 \"has class binary name\"))\n         .contains(\"io.grpc.internal.DnsNameResolver\");\n   }\n+\n+  @Test\n+  public void testFindLinkageProblems_referenceToNonexistentMethodForJava8() throws IOException {\n+    // Protobuf-java 3.12.4 contained wrong byte code to reference non-existent method in JRE 1.8", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mjk5MDg1Nw=="}, "originalCommit": {"oid": "a8a1571176ed9b8b48d9d698c9a56f2527bd878f"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzAwNTI3MQ==", "bodyText": "Removed this if-statement and moved the explanation to array class skipping.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1607#discussion_r473005271", "createdAt": "2020-08-19T12:53:27Z", "author": {"login": "suztomo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/LinkageChecker.java", "diffHunk": "@@ -239,8 +239,14 @@ private boolean problemFilter(LinkageProblem linkageProblem) {\n     String targetClassName = symbol.getClassBinaryName();\n     String methodName = symbol.getName();\n \n-    // Skip references to Java runtime class. For example, java.lang.String.\n-    if (classDumper.isSystemClass(targetClassName)) {\n+    if (ClassDumper.isArrayClass(targetClassName)) {\n+      return Optional.empty();\n+    }\n+    // Skip references from Java runtime class. For example, java.lang.String.\n+    // It is possible for wrongly configured Java compiler to generate bad byte code that references", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mjk5MDAyMA=="}, "originalCommit": {"oid": "a8a1571176ed9b8b48d9d698c9a56f2527bd878f"}, "originalPosition": 10}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcwNzI2NzE5", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1607#pullrequestreview-470726719", "createdAt": "2020-08-19T18:22:03Z", "commit": {"oid": "a36b4521d179b1dd9e2f54e4c2eca1749b59c826"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcwNzI3MzQ5", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1607#pullrequestreview-470727349", "createdAt": "2020-08-19T18:22:59Z", "commit": {"oid": "a36b4521d179b1dd9e2f54e4c2eca1749b59c826"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQxODoyMjo1OVrOHDT7sw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQxODoyMzo1OFrOHDT9xQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzIzNDM1NQ==", "bodyText": "will we catch a reference to an array of a missing class?", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1607#discussion_r473234355", "createdAt": "2020-08-19T18:22:59Z", "author": {"login": "elharo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/ClassDumper.java", "diffHunk": "@@ -126,8 +126,7 @@ JavaClass loadJavaClass(String className) throws ClassNotFoundException {\n   /** Returns true if {@code className} is available in the system class loader. */\n   boolean isSystemClass(String className) {\n     try {\n-      if (className.startsWith(\"[\")) {\n-        // Array class\n+      if (isArrayClass(className)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a36b4521d179b1dd9e2f54e4c2eca1749b59c826"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzIzNDg4NQ==", "bodyText": "delete this comment. It describes what the code is not doing.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1607#discussion_r473234885", "createdAt": "2020-08-19T18:23:58Z", "author": {"login": "elharo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/LinkageChecker.java", "diffHunk": "@@ -239,8 +239,11 @@ private boolean problemFilter(LinkageProblem linkageProblem) {\n     String targetClassName = symbol.getClassBinaryName();\n     String methodName = symbol.getName();\n \n-    // Skip references to Java runtime class. For example, java.lang.String.\n-    if (classDumper.isSystemClass(targetClassName)) {\n+    if (ClassDumper.isArrayClass(targetClassName)) {\n+      // Skip references to array class. However, we want to check other JDK-provided classes,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a36b4521d179b1dd9e2f54e4c2eca1749b59c826"}, "originalPosition": 7}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f0f81dc3b790ffc17424727de704782be160a8d9", "author": {"user": {"login": "suztomo", "name": "Tomo Suzuki"}}, "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/f0f81dc3b790ffc17424727de704782be160a8d9", "committedDate": "2020-08-19T18:34:35Z", "message": "Removing irrelevant comment"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8199078801f2bc7358a3a15e3c62197d1ad1e77d", "author": {"user": {"login": "suztomo", "name": "Tomo Suzuki"}}, "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/8199078801f2bc7358a3a15e3c62197d1ad1e77d", "committedDate": "2020-08-19T18:34:54Z", "message": "Merge remote-tracking branch 'origin/master' into protobuf-3.12.4"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcwNzM1MDE5", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1607#pullrequestreview-470735019", "createdAt": "2020-08-19T18:34:04Z", "commit": {"oid": "a36b4521d179b1dd9e2f54e4c2eca1749b59c826"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQxODozNDowNVrOHDUS4Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQxODozNDo0NFrOHDUUNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzI0MDI4OQ==", "bodyText": "Yes, but not from array class reference. When there's a reference to array of a class, there should be a reference to the class in the same class file.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1607#discussion_r473240289", "createdAt": "2020-08-19T18:34:05Z", "author": {"login": "suztomo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/ClassDumper.java", "diffHunk": "@@ -126,8 +126,7 @@ JavaClass loadJavaClass(String className) throws ClassNotFoundException {\n   /** Returns true if {@code className} is available in the system class loader. */\n   boolean isSystemClass(String className) {\n     try {\n-      if (className.startsWith(\"[\")) {\n-        // Array class\n+      if (isArrayClass(className)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzIzNDM1NQ=="}, "originalCommit": {"oid": "a36b4521d179b1dd9e2f54e4c2eca1749b59c826"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzI0MDYyOA==", "bodyText": "Removed.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1607#discussion_r473240628", "createdAt": "2020-08-19T18:34:44Z", "author": {"login": "suztomo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/LinkageChecker.java", "diffHunk": "@@ -239,8 +239,11 @@ private boolean problemFilter(LinkageProblem linkageProblem) {\n     String targetClassName = symbol.getClassBinaryName();\n     String methodName = symbol.getName();\n \n-    // Skip references to Java runtime class. For example, java.lang.String.\n-    if (classDumper.isSystemClass(targetClassName)) {\n+    if (ClassDumper.isArrayClass(targetClassName)) {\n+      // Skip references to array class. However, we want to check other JDK-provided classes,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzIzNDg4NQ=="}, "originalCommit": {"oid": "a36b4521d179b1dd9e2f54e4c2eca1749b59c826"}, "originalPosition": 7}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDczMzcxOTkz", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1607#pullrequestreview-473371993", "createdAt": "2020-08-24T11:19:05Z", "commit": {"oid": "8199078801f2bc7358a3a15e3c62197d1ad1e77d"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8a9dca356b9d56939ebcc5a43d15e667720b210a", "author": {"user": {"login": "suztomo", "name": "Tomo Suzuki"}}, "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/8a9dca356b9d56939ebcc5a43d15e667720b210a", "committedDate": "2020-08-24T12:13:25Z", "message": "Merge branch 'master' into protobuf-3.12.4"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "baeaa93872c35da3104ecf55ce4b850871041e60", "author": {"user": {"login": "suztomo", "name": "Tomo Suzuki"}}, "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/baeaa93872c35da3104ecf55ce4b850871041e60", "committedDate": "2020-08-24T12:16:00Z", "message": "Merge branch 'master' into protobuf-3.12.4"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "82a08376e4dd38a92b3e7d7a5462538b3571c9a9", "author": {"user": {"login": "suztomo", "name": "Tomo Suzuki"}}, "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/82a08376e4dd38a92b3e7d7a5462538b3571c9a9", "committedDate": "2020-08-24T16:26:24Z", "message": "Merge branch 'master' into protobuf-3.12.4"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b4940647ff9086029943113df6671dfc25681710", "author": {"user": {"login": "suztomo", "name": "Tomo Suzuki"}}, "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/b4940647ff9086029943113df6671dfc25681710", "committedDate": "2020-08-24T20:18:10Z", "message": "Merge branch 'master' into protobuf-3.12.4"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc0NDk2NTQ3", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1607#pullrequestreview-474496547", "createdAt": "2020-08-25T13:45:52Z", "commit": {"oid": "b4940647ff9086029943113df6671dfc25681710"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "12c0fe17777b51cb6a2f0771beb5df29b7dcf2a3", "author": {"user": {"login": "suztomo", "name": "Tomo Suzuki"}}, "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/12c0fe17777b51cb6a2f0771beb5df29b7dcf2a3", "committedDate": "2020-08-25T15:31:03Z", "message": "Merge branch 'master' into protobuf-3.12.4"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1403, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}