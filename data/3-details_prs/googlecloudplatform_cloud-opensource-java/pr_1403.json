{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE3NjMxOTM2", "number": 1403, "title": "Linkage Checker to use class file names when checking existence of a class in ClassPathEntry", "bodyText": "Fixes #1401.\nThis snapshot version successfully builds the project in #1401:\nhttps://gist.github.com/suztomo/1979c34ec9e35cb0291fa2ebb96bf58b", "createdAt": "2020-05-13T21:50:35Z", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1403", "merged": true, "mergeCommit": {"oid": "6052296776c843e383f4214ba6c274ea596dbfe4"}, "closed": true, "closedAt": "2020-05-18T16:40:03Z", "author": {"login": "suztomo"}, "timelineItems": {"totalCount": 23, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcg_tI_gH2gAyNDE3NjMxOTM2OjM3NWVjNzYxODAwNGVlOGM5NzFjYzE1ZDM5M2YzZTcxM2YyNTdhMGM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABciiWfrgFqTQxMzc0ODMxNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "375ec7618004ee8c971cc15d393f3e713f257a0c", "author": {"user": {"login": "suztomo", "name": "Tomo Suzuki"}}, "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/375ec7618004ee8c971cc15d393f3e713f257a0c", "committedDate": "2020-05-13T21:24:59Z", "message": "Added test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9f6b0bc14f070deb535daa414446526347c30f9e", "author": {"user": {"login": "suztomo", "name": "Tomo Suzuki"}}, "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/9f6b0bc14f070deb535daa414446526347c30f9e", "committedDate": "2020-05-13T21:47:31Z", "message": "Added integration test"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDExMzI2ODYy", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1403#pullrequestreview-411326862", "createdAt": "2020-05-13T21:54:15Z", "commit": {"oid": "9f6b0bc14f070deb535daa414446526347c30f9e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QyMTo1NDoxNVrOGVE4Sw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QyMTo1NDoxNVrOGVE4Sw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDc1MzIyNw==", "bodyText": "This is the root cause of the problem. LinkageChecker was checking the existence of a class by class binary name (e.g., pzrep.ReportServlet), while the ClassPathEntry.getClassNames() returns a set of class file names (e.g., WEB-INF.classes.pzrep.ReportServlet).", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1403#discussion_r424753227", "createdAt": "2020-05-13T21:54:15Z", "author": {"login": "suztomo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/LinkageChecker.java", "diffHunk": "@@ -202,9 +209,12 @@ private LinkageChecker(\n         classToSymbols.getClassToFieldSymbols();\n     for (ClassFile classFile : classToFieldSymbols.keySet()) {\n       ImmutableSet<FieldSymbol> fieldSymbols = classToFieldSymbols.get(classFile);\n+      ImmutableSet<String> classFileNamesInSource =\n+          classFile.getClassPathEntry().getClassFileNames();\n       for (FieldSymbol fieldSymbol : fieldSymbols) {\n-        if (!classFile.getClassPathEntry().getClassNames()\n-            .contains(fieldSymbol.getClassBinaryName())) {\n+        String classBinaryName = fieldSymbol.getClassBinaryName();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9f6b0bc14f070deb535daa414446526347c30f9e"}, "originalPosition": 47}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDExMzI4NTgw", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1403#pullrequestreview-411328580", "createdAt": "2020-05-13T21:57:41Z", "commit": {"oid": "9f6b0bc14f070deb535daa414446526347c30f9e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QyMTo1Nzo0MVrOGVE94g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QyMTo1Nzo0MVrOGVE94g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDc1NDY1OA==", "bodyText": "This integration test case would fail with the latest enforcer rule 1.4.0:\nhttps://gist.github.com/suztomo/859543af569e53c7ba06fde6ec1f68ba", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1403#discussion_r424754658", "createdAt": "2020-05-13T21:57:41Z", "author": {"login": "suztomo"}, "path": "enforcer-rules/src/it/war-project-private-modifier/src/main/java/com.google.example/Dummy.java", "diffHunk": "@@ -0,0 +1,31 @@\n+/*\n+ * Copyright 2020 Google LLC.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.example;\n+\n+class Dummy {\n+  private int privateField = 0;\n+\n+  private int privateMethod() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9f6b0bc14f070deb535daa414446526347c30f9e"}, "originalPosition": 22}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDExNzQ4MzEx", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1403#pullrequestreview-411748311", "createdAt": "2020-05-14T12:23:22Z", "commit": {"oid": "9f6b0bc14f070deb535daa414446526347c30f9e"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxMjoyMzoyMlrOGVZs-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxMjozMToxNFrOGVZ-Yw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTA5NDM5Mg==", "bodyText": "\"Returns class file name\" --> Converts a binary name to a class file name.\nIt is not a location. It is a name.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1403#discussion_r425094392", "createdAt": "2020-05-14T12:23:22Z", "author": {"login": "elharo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/ClassDumper.java", "diffHunk": "@@ -334,6 +334,19 @@ ClassPathEntry findClassLocation(String className) {\n     return Iterables.getFirst(classFileNameToClassPathEntry.get(specialLocation), null);\n   }\n \n+  /**\n+   * Returns class file name which is a location of a class file within a JAR file. Usually it is", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9f6b0bc14f070deb535daa414446526347c30f9e"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTA5NDk3Mg==", "bodyText": "a framework-specific", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1403#discussion_r425094972", "createdAt": "2020-05-14T12:24:27Z", "author": {"login": "elharo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/ClassDumper.java", "diffHunk": "@@ -334,6 +334,19 @@ ClassPathEntry findClassLocation(String className) {\n     return Iterables.getFirst(classFileNameToClassPathEntry.get(specialLocation), null);\n   }\n \n+  /**\n+   * Returns class file name which is a location of a class file within a JAR file. Usually it is\n+   * the same as {@code classBinaryName}, however it may be different if the JAR file has framework-", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9f6b0bc14f070deb535daa414446526347c30f9e"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTA5NjI1Mg==", "bodyText": "This logic belongs in ClassPathEntry and ClassFile, not here.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1403#discussion_r425096252", "createdAt": "2020-05-14T12:26:46Z", "author": {"login": "elharo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/ClassDumper.java", "diffHunk": "@@ -334,6 +334,19 @@ ClassPathEntry findClassLocation(String className) {\n     return Iterables.getFirst(classFileNameToClassPathEntry.get(specialLocation), null);\n   }\n \n+  /**\n+   * Returns class file name which is a location of a class file within a JAR file. Usually it is\n+   * the same as {@code classBinaryName}, however it may be different if the JAR file has framework-\n+   * specific prefix such as \"WEB-INF.classes\".\n+   */\n+  String getClassFileName(String classBinaryName) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9f6b0bc14f070deb535daa414446526347c30f9e"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTA5NzM4Mg==", "bodyText": "I'm hesitant to expose implementation details in API doc", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1403#discussion_r425097382", "createdAt": "2020-05-14T12:28:47Z", "author": {"login": "elharo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/ClassPathEntry.java", "diffHunk": "@@ -112,13 +113,18 @@ private void readClassFileNames() throws IOException {\n       this.classFileNames = classNames.build();\n     }\n   }\n-  \n+\n   /**\n-   * Returns the fully qualified names of the classes in this entry's jar file.\n-   * \n+   * Returns a list of class file names in {@link #jar} as in {@link JavaClass#getFileName()}. This\n+   * class file name is usually a fully qualified class name. However a class file name may have a\n+   * framework-specific prefix. Example: {@code BOOT-INF.classes.com.google.Foo}.\n+   *\n+   * <p>This function caches the result. Therefore the caller does not need to worry about the", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9f6b0bc14f070deb535daa414446526347c30f9e"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTA5ODI2Ng==", "bodyText": "Avoid moving data between classes. Instead ClassSymbol should be able to return the classFileName if that's what we need.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1403#discussion_r425098266", "createdAt": "2020-05-14T12:30:15Z", "author": {"login": "elharo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/LinkageChecker.java", "diffHunk": "@@ -163,9 +166,10 @@ private LinkageChecker(\n             }\n           }\n         }\n-        if (!classFile.getClassPathEntry().getClassNames()\n-            .contains(classSymbol.getClassBinaryName())) {\n \n+        String classBinaryName = classSymbol.getClassBinaryName();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9f6b0bc14f070deb535daa414446526347c30f9e"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTA5ODg1MQ==", "bodyText": "again, just methodSymbol.getClassFileName()", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1403#discussion_r425098851", "createdAt": "2020-05-14T12:31:14Z", "author": {"login": "elharo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/LinkageChecker.java", "diffHunk": "@@ -189,9 +193,12 @@ private LinkageChecker(\n         classToSymbols.getClassToMethodSymbols();\n     for (ClassFile classFile : classToMethodSymbols.keySet()) {\n       ImmutableSet<MethodSymbol> methodSymbols = classToMethodSymbols.get(classFile);\n+      ImmutableSet<String> classFileNamesInSource =\n+          classFile.getClassPathEntry().getClassFileNames();\n       for (MethodSymbol methodSymbol : methodSymbols) {\n-        if (!classFile.getClassPathEntry().getClassNames()\n-            .contains(methodSymbol.getClassBinaryName())) {\n+        String classBinaryName = methodSymbol.getClassBinaryName();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9f6b0bc14f070deb535daa414446526347c30f9e"}, "originalPosition": 32}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "771bbc36a0e9df81093743f293e63a7835db45e1", "author": {"user": {"login": "suztomo", "name": "Tomo Suzuki"}}, "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/771bbc36a0e9df81093743f293e63a7835db45e1", "committedDate": "2020-05-14T14:00:39Z", "message": "Merge remote-tracking branch 'origin/master' into i1401-2"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b517071b67d0dd84417ef4084f53dd266fbe22ce", "author": {"user": {"login": "suztomo", "name": "Tomo Suzuki"}}, "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/b517071b67d0dd84417ef4084f53dd266fbe22ce", "committedDate": "2020-05-14T14:05:20Z", "message": "getClassFileName"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b8a48a7df8aebb21a33aacf2f5a3dcb8e057674e", "author": {"user": {"login": "suztomo", "name": "Tomo Suzuki"}}, "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/b8a48a7df8aebb21a33aacf2f5a3dcb8e057674e", "committedDate": "2020-05-14T14:48:12Z", "message": "Javadoc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9f0e19ae35299a233f183ff61e40a205f151da10", "author": {"user": {"login": "suztomo", "name": "Tomo Suzuki"}}, "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/9f0e19ae35299a233f183ff61e40a205f151da10", "committedDate": "2020-05-14T14:48:47Z", "message": "javadoc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "32a08359c8479d9a0d8b074b577def230eb0a025", "author": {"user": {"login": "suztomo", "name": "Tomo Suzuki"}}, "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/32a08359c8479d9a0d8b074b577def230eb0a025", "committedDate": "2020-05-14T14:50:32Z", "message": "Javadoc"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDExODM2MDA5", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1403#pullrequestreview-411836009", "createdAt": "2020-05-14T14:02:14Z", "commit": {"oid": "9f6b0bc14f070deb535daa414446526347c30f9e"}, "state": "COMMENTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxNDowMjoxNFrOGVdxpw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxNDo1MjowN1rOGVgFZQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTE2MTEyNw==", "bodyText": "ClassPathEntry cannot convert class binary names to class file names, because it does not read the content of .class files. On the other hand, ClassDumper (through classRepository) already reads the content of class files and thus can convert class binary names to class file names.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1403#discussion_r425161127", "createdAt": "2020-05-14T14:02:14Z", "author": {"login": "suztomo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/ClassDumper.java", "diffHunk": "@@ -334,6 +334,19 @@ ClassPathEntry findClassLocation(String className) {\n     return Iterables.getFirst(classFileNameToClassPathEntry.get(specialLocation), null);\n   }\n \n+  /**\n+   * Returns class file name which is a location of a class file within a JAR file. Usually it is\n+   * the same as {@code classBinaryName}, however it may be different if the JAR file has framework-\n+   * specific prefix such as \"WEB-INF.classes\".\n+   */\n+  String getClassFileName(String classBinaryName) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTA5NjI1Mg=="}, "originalCommit": {"oid": "9f6b0bc14f070deb535daa414446526347c30f9e"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTE2MTg5MA==", "bodyText": "Updated.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1403#discussion_r425161890", "createdAt": "2020-05-14T14:03:18Z", "author": {"login": "suztomo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/ClassDumper.java", "diffHunk": "@@ -334,6 +334,19 @@ ClassPathEntry findClassLocation(String className) {\n     return Iterables.getFirst(classFileNameToClassPathEntry.get(specialLocation), null);\n   }\n \n+  /**\n+   * Returns class file name which is a location of a class file within a JAR file. Usually it is\n+   * the same as {@code classBinaryName}, however it may be different if the JAR file has framework-", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTA5NDk3Mg=="}, "originalCommit": {"oid": "9f6b0bc14f070deb535daa414446526347c30f9e"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTE2MzQ3Mg==", "bodyText": "Updated.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1403#discussion_r425163472", "createdAt": "2020-05-14T14:05:31Z", "author": {"login": "suztomo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/ClassDumper.java", "diffHunk": "@@ -334,6 +334,19 @@ ClassPathEntry findClassLocation(String className) {\n     return Iterables.getFirst(classFileNameToClassPathEntry.get(specialLocation), null);\n   }\n \n+  /**\n+   * Returns class file name which is a location of a class file within a JAR file. Usually it is", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTA5NDM5Mg=="}, "originalCommit": {"oid": "9f6b0bc14f070deb535daa414446526347c30f9e"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTE2NDk5Ng==", "bodyText": "Removed the mention about the caching.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1403#discussion_r425164996", "createdAt": "2020-05-14T14:07:35Z", "author": {"login": "suztomo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/ClassPathEntry.java", "diffHunk": "@@ -112,13 +113,18 @@ private void readClassFileNames() throws IOException {\n       this.classFileNames = classNames.build();\n     }\n   }\n-  \n+\n   /**\n-   * Returns the fully qualified names of the classes in this entry's jar file.\n-   * \n+   * Returns a list of class file names in {@link #jar} as in {@link JavaClass#getFileName()}. This\n+   * class file name is usually a fully qualified class name. However a class file name may have a\n+   * framework-specific prefix. Example: {@code BOOT-INF.classes.com.google.Foo}.\n+   *\n+   * <p>This function caches the result. Therefore the caller does not need to worry about the", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTA5NzM4Mg=="}, "originalCommit": {"oid": "9f6b0bc14f070deb535daa414446526347c30f9e"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTE3MTg4Mg==", "bodyText": "A ClassSymbol cannot know the class file name. A symbol is an abstract entity apart from concrete class files. For example, when a class file's constant pool references a class symbol of \"com.google.Foo\", it does not know the class symbol is materialized by a class file \"BOOT-INF/classes/com/google/Foo.class\", another class file \"WEB-INF/classes/com/google/Foo.class\", or just \"com/google/Foo.class\".", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1403#discussion_r425171882", "createdAt": "2020-05-14T14:16:39Z", "author": {"login": "suztomo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/LinkageChecker.java", "diffHunk": "@@ -163,9 +166,10 @@ private LinkageChecker(\n             }\n           }\n         }\n-        if (!classFile.getClassPathEntry().getClassNames()\n-            .contains(classSymbol.getClassBinaryName())) {\n \n+        String classBinaryName = classSymbol.getClassBinaryName();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTA5ODI2Ng=="}, "originalCommit": {"oid": "9f6b0bc14f070deb535daa414446526347c30f9e"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTE5ODk0OQ==", "bodyText": "The previous javadoc was incorrect. It is not fully qualified class names. It returns class file names in a JAR.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1403#discussion_r425198949", "createdAt": "2020-05-14T14:52:07Z", "author": {"login": "suztomo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/ClassPathEntry.java", "diffHunk": "@@ -112,13 +114,15 @@ private void readClassFileNames() throws IOException {\n       this.classFileNames = classNames.build();\n     }\n   }\n-  \n+\n   /**\n-   * Returns the fully qualified names of the classes in this entry's jar file.\n-   * ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "32a08359c8479d9a0d8b074b577def230eb0a025"}, "originalPosition": 33}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5d20fd6a938b08a988fbbd32186845f8f3836eea", "author": {"user": {"login": "suztomo", "name": "Tomo Suzuki"}}, "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/5d20fd6a938b08a988fbbd32186845f8f3836eea", "committedDate": "2020-05-15T14:11:50Z", "message": "rename"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c4ecce81be114a342fedf5ddbe39a0450361807e", "author": {"user": {"login": "suztomo", "name": "Tomo Suzuki"}}, "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/c4ecce81be114a342fedf5ddbe39a0450361807e", "committedDate": "2020-05-15T14:23:49Z", "message": "Merge remote-tracking branch 'origin/master' into i1401-2"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "976cc32de4bd50d0091ea135ec2bd37f446c7cfe", "author": {"user": {"login": "suztomo", "name": "Tomo Suzuki"}}, "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/976cc32de4bd50d0091ea135ec2bd37f446c7cfe", "committedDate": "2020-05-15T14:28:55Z", "message": "format"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fbf8bb7a315966a9819f26148456d74d4eb82c0b", "author": {"user": {"login": "suztomo", "name": "Tomo Suzuki"}}, "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/fbf8bb7a315966a9819f26148456d74d4eb82c0b", "committedDate": "2020-05-15T14:38:17Z", "message": "Format"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "11d4a5da15854e9936e9821c8e726671e5e5b915", "author": {"user": {"login": "suztomo", "name": "Tomo Suzuki"}}, "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/11d4a5da15854e9936e9821c8e726671e5e5b915", "committedDate": "2020-05-15T14:43:35Z", "message": "Javadoc"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEyNzIwMjcy", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1403#pullrequestreview-412720272", "createdAt": "2020-05-15T14:53:40Z", "commit": {"oid": "11d4a5da15854e9936e9821c8e726671e5e5b915"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxNDo1Mzo0MFrOGWIPPg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxNDo1Mzo0MFrOGWIPPg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTg1NjgzMA==", "bodyText": "I was thinking to rename this variable to fileName or fileNameOfClass. But classFileName fits best.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1403#discussion_r425856830", "createdAt": "2020-05-15T14:53:40Z", "author": {"login": "suztomo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/LinkageChecker.java", "diffHunk": "@@ -163,9 +165,10 @@ private LinkageChecker(\n             }\n           }\n         }\n-        if (!classFile.getClassPathEntry().getFileNames()\n-            .contains(classSymbol.getClassBinaryName())) {\n \n+        String classBinaryName = classSymbol.getClassBinaryName();\n+        String classFileName = classDumper.getFileName(classBinaryName);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "11d4a5da15854e9936e9821c8e726671e5e5b915"}, "originalPosition": 17}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEzNjM5OTg4", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1403#pullrequestreview-413639988", "createdAt": "2020-05-18T14:19:07Z", "commit": {"oid": "11d4a5da15854e9936e9821c8e726671e5e5b915"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxNDoxOTowN1rOGW5Uyw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxNDoyNDoyNVrOGW5jPw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjY2MTA2Nw==", "bodyText": "a fully qualified class name --> fully qualified class names", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1403#discussion_r426661067", "createdAt": "2020-05-18T14:19:07Z", "author": {"login": "elharo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/ClassPathEntry.java", "diffHunk": "@@ -92,11 +93,11 @@ public String toString() {\n   }\n \n   /**\n-   * Returns a list of class file names in {@link #jar} as in {@link JavaClass#getFileName()}. This\n-   * class file name is usually a fully qualified class name. However a class file name may have a\n-   * framework-specific prefix. Example: {@code BOOT-INF.classes.com.google.Foo}.\n+   * Populates {@link #fileNames} through the classes in {@link #jar}. These file names are usually\n+   * a fully qualified class name. However a class file name may have a framework-specific prefix.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "11d4a5da15854e9936e9821c8e726671e5e5b915"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjY2NDA2MA==", "bodyText": "Not new in this PR, but I notice this is another case where the OO API is turned inside out. This should be classFile.getClassSymbols.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1403#discussion_r426664060", "createdAt": "2020-05-18T14:23:22Z", "author": {"login": "elharo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/LinkageChecker.java", "diffHunk": "@@ -150,6 +150,8 @@ private LinkageChecker(\n     \n     for (ClassFile classFile : classToClassSymbols.keySet()) {\n       ImmutableSet<ClassSymbol> classSymbols = classToClassSymbols.get(classFile);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "11d4a5da15854e9936e9821c8e726671e5e5b915"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjY2NDc2Nw==", "bodyText": "why \"InSource\"? Would just classFileNames work?", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1403#discussion_r426664767", "createdAt": "2020-05-18T14:24:25Z", "author": {"login": "elharo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/LinkageChecker.java", "diffHunk": "@@ -150,6 +150,8 @@ private LinkageChecker(\n     \n     for (ClassFile classFile : classToClassSymbols.keySet()) {\n       ImmutableSet<ClassSymbol> classSymbols = classToClassSymbols.get(classFile);\n+      ImmutableSet<String> classFileNamesInSource = classFile.getClassPathEntry().getFileNames();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "11d4a5da15854e9936e9821c8e726671e5e5b915"}, "originalPosition": 4}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fa8f11eeb15c1e496963f241f788c84d80e0321e", "author": {"user": {"login": "suztomo", "name": "Tomo Suzuki"}}, "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/fa8f11eeb15c1e496963f241f788c84d80e0321e", "committedDate": "2020-05-18T15:23:34Z", "message": "Applied review"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEzNzA2MDcw", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1403#pullrequestreview-413706070", "createdAt": "2020-05-18T15:30:42Z", "commit": {"oid": "fa8f11eeb15c1e496963f241f788c84d80e0321e"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxNTozMDo0MlrOGW8c5Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxNTozMDo0MlrOGW8c5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjcxMjI5Mw==", "bodyText": "just \"className\" might be enough here.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1403#discussion_r426712293", "createdAt": "2020-05-18T15:30:42Z", "author": {"login": "elharo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/ClassDumper.java", "diffHunk": "@@ -326,6 +326,14 @@ ClassPathEntry findClassLocation(String className) {\n     return Iterables.getFirst(fileNameToClassPathEntry.get(filename), null);\n   }\n \n+  /**\n+   * Converts a binary name to the file name of a class. Read {@link FixedSizeClassPathRepository}\n+   * for the difference.\n+   */\n+  String getFileName(String classBinaryName) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fa8f11eeb15c1e496963f241f788c84d80e0321e"}, "originalPosition": 8}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "584c208b87aa09de432472071af1710bdad05086", "author": {"user": {"login": "suztomo", "name": "Tomo Suzuki"}}, "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/584c208b87aa09de432472071af1710bdad05086", "committedDate": "2020-05-18T15:32:53Z", "message": "classBinaryName -> className"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0a8042243a87a41b5d7325258b22a1d187e19d26", "author": {"user": {"login": "suztomo", "name": "Tomo Suzuki"}}, "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/0a8042243a87a41b5d7325258b22a1d187e19d26", "committedDate": "2020-05-18T15:56:44Z", "message": "Merge remote-tracking branch 'origin/master' into i1401-2"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEzNzQ4MzE0", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1403#pullrequestreview-413748314", "createdAt": "2020-05-18T16:20:03Z", "commit": {"oid": "0a8042243a87a41b5d7325258b22a1d187e19d26"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxNjoyMDowM1rOGW-gLQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxNjoyMDowM1rOGW-gLQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjc0NTkwMQ==", "bodyText": "Writing functional code in a non-functional language such as Java is a recipe for confusion. Case in point: I am constantly confused while reading our code. I usually have to review several classes to remind myself what the code does and how in each PR.\nSeparating I/O makes sense, but we shouldn't be storing the results of those I/O operations outside of the relevant classes.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1403#discussion_r426745901", "createdAt": "2020-05-18T16:20:03Z", "author": {"login": "elharo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/LinkageChecker.java", "diffHunk": "@@ -150,6 +150,8 @@ private LinkageChecker(\n     \n     for (ClassFile classFile : classToClassSymbols.keySet()) {\n       ImmutableSet<ClassSymbol> classSymbols = classToClassSymbols.get(classFile);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjY2NDA2MA=="}, "originalCommit": {"oid": "11d4a5da15854e9936e9821c8e726671e5e5b915"}, "originalPosition": 3}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 403, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}