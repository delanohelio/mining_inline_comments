{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMzNDIzODI2", "number": 1468, "reviewThreads": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQwMjoxMDo1M1rOEE6M9g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxMjo0MDowN1rOEFCziQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczNTgzMzUwOnYy", "diffSide": "RIGHT", "path": "example-problems/gradle-project/build.gradle", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQwMjoxMDo1NFrOGi0zAQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQwMjoxMDo1NFrOGi0zAQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTE2OTc5Mw==", "bodyText": "Updated to avoid camelCase. This follows Gradle's example https://github.com/gradle/guides/blob/master/subprojects/testing-gradle-plugins/samples/code/url-verifier-plugin/src/functTest/groovy/org/gradle/sample/UrlVerifierPluginFunctionalTest.groovy#L18", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1468#discussion_r439169793", "createdAt": "2020-06-12T02:10:54Z", "author": {"login": "suztomo"}, "path": "example-problems/gradle-project/build.gradle", "diffHunk": "@@ -24,7 +24,7 @@ buildscript {\n   }\n }\n \n-apply plugin: 'com.google.cloud.tools.linkageChecker'\n+apply plugin: 'com.google.cloud.tools.linkagechecker'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c1cc8eaaa374d3921c2a848e8c3e500d20eb98a0"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczNTgzNDYyOnYy", "diffSide": "RIGHT", "path": "gradle-plugin/build.gradle", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQwMjoxMTozMVrOGi0zpg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQwMjoxMTozMVrOGi0zpg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTE2OTk1OA==", "bodyText": "Switched to use maven-publish plugin (rather than maven plugin, which is outdated).", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1468#discussion_r439169958", "createdAt": "2020-06-12T02:11:31Z", "author": {"login": "suztomo"}, "path": "gradle-plugin/build.gradle", "diffHunk": "@@ -13,35 +13,39 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n-\n plugins {\n   id 'java-gradle-plugin'\n   id 'groovy'\n-  id 'maven'\n+  id 'maven-publish'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c1cc8eaaa374d3921c2a848e8c3e500d20eb98a0"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczNTgzNzc4OnYy", "diffSide": "RIGHT", "path": "gradle-plugin/README.md", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQwMjoxMzo1MlrOGi01jw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQwMjoxMzo1MlrOGi01jw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTE3MDQ0Nw==", "bodyText": "\"install\" task was from old \"maven\" plugin. \"publishToMavenLocal\" is from \"maven-publish\" plugin.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1468#discussion_r439170447", "createdAt": "2020-06-12T02:13:52Z", "author": {"login": "suztomo"}, "path": "gradle-plugin/README.md", "diffHunk": "@@ -6,7 +6,7 @@ For usage of this plugin, see the documentation.\n \n ```\n $ cd gradle-plugin\n-$ ./gradlew build install  \n+$ ./gradlew build publishToMavenLocal", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c1cc8eaaa374d3921c2a848e8c3e500d20eb98a0"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczNTgzNzk4OnYy", "diffSide": "RIGHT", "path": "kokoro/continuous.bat", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQwMjoxMzo1N1rOGi01qg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQwMjoxMzo1N1rOGi01qg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTE3MDQ3NA==", "bodyText": "\"install\" task was from old \"maven\" plugin. \"publishToMavenLocal\" is from \"maven-publish\" plugin.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1468#discussion_r439170474", "createdAt": "2020-06-12T02:13:57Z", "author": {"login": "suztomo"}, "path": "kokoro/continuous.bat", "diffHunk": "@@ -13,4 +13,4 @@ mvnw.cmd -B clean install javadoc:jar\n exit /b %ERRORLEVEL%\n \n cd gradle-plugin\n-gradlew.bat build install\n+gradlew.bat build publishToMavenLocal", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c1cc8eaaa374d3921c2a848e8c3e500d20eb98a0"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczNTg0MDA2OnYy", "diffSide": "RIGHT", "path": "gradle-plugin/build.gradle", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQwMjoxNTowNVrOGi023g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQwMjoxNTowNVrOGi023g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTE3MDc4Mg==", "bodyText": "Gradle file for test is a separate file. This follows the sample https://github.com/gradle/guides/blob/master/subprojects/testing-gradle-plugins/samples/code/url-verifier-plugin/build.gradle#L4", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1468#discussion_r439170782", "createdAt": "2020-06-12T02:15:05Z", "author": {"login": "suztomo"}, "path": "gradle-plugin/build.gradle", "diffHunk": "@@ -13,35 +13,39 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n-\n plugins {\n   id 'java-gradle-plugin'\n   id 'groovy'\n-  id 'maven'\n+  id 'maven-publish'\n }\n \n+apply from: \"$rootDir/gradle/functional-test.gradle\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c1cc8eaaa374d3921c2a848e8c3e500d20eb98a0"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczNTk0MDI1OnYy", "diffSide": "RIGHT", "path": "gradle-plugin/src/functionalTest/groovy/com/google/cloud/tools/dependencies/gradle/BuildStatusFunctionalTest.groovy", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQwMzoyNDoyN1rOGi10cA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQwMzoyNDoyN1rOGi10cA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTE4NjU0NA==", "bodyText": "Groovy's multiline string is suitable to write build.gradle files for this functional tests.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1468#discussion_r439186544", "createdAt": "2020-06-12T03:24:27Z", "author": {"login": "suztomo"}, "path": "gradle-plugin/src/functionalTest/groovy/com/google/cloud/tools/dependencies/gradle/BuildStatusFunctionalTest.groovy", "diffHunk": "@@ -0,0 +1,100 @@\n+/*\n+ * Copyright 2020 Google LLC.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.cloud.tools.dependencies.gradle\n+\n+import org.gradle.testkit.runner.GradleRunner\n+import org.junit.Rule\n+import org.junit.rules.TemporaryFolder\n+import spock.lang.Specification\n+\n+import static org.gradle.testkit.runner.TaskOutcome.FAILED\n+import static org.gradle.testkit.runner.TaskOutcome.SUCCESS\n+\n+class BuildStatusFunctionalTest extends Specification {\n+  @Rule TemporaryFolder testProjectDir = new TemporaryFolder()\n+  File buildFile\n+\n+  def setup() {\n+    buildFile = testProjectDir.newFile('build.gradle')\n+    buildFile << \"\"\"\n+        plugins {\n+            id 'java'\n+            id 'com.google.cloud.tools.linkagechecker'\n+        }\n+        \"\"\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c8e9261b78407a2e249b3cc4f48a157f5f96d621"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczNTk0NTUxOnYy", "diffSide": "RIGHT", "path": "gradle-plugin/src/functionalTest/groovy/com/google/cloud/tools/dependencies/gradle/BuildStatusFunctionalTest.groovy", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQwMzoyODo1MlrOGi137g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxMzoxMjo1MlrOGjDdAQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTE4NzQzOA==", "bodyText": "These \"when\" and \"then\" come from Spock test framework http://spockframework.org/spock/docs/1.3/spock_primer.html#_when_and_then_blocks (recommended in the Gradle test documentation)", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1468#discussion_r439187438", "createdAt": "2020-06-12T03:28:52Z", "author": {"login": "suztomo"}, "path": "gradle-plugin/src/functionalTest/groovy/com/google/cloud/tools/dependencies/gradle/BuildStatusFunctionalTest.groovy", "diffHunk": "@@ -0,0 +1,100 @@\n+/*\n+ * Copyright 2020 Google LLC.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.cloud.tools.dependencies.gradle\n+\n+import org.gradle.testkit.runner.GradleRunner\n+import org.junit.Rule\n+import org.junit.rules.TemporaryFolder\n+import spock.lang.Specification\n+\n+import static org.gradle.testkit.runner.TaskOutcome.FAILED\n+import static org.gradle.testkit.runner.TaskOutcome.SUCCESS\n+\n+class BuildStatusFunctionalTest extends Specification {\n+  @Rule TemporaryFolder testProjectDir = new TemporaryFolder()\n+  File buildFile\n+\n+  def setup() {\n+    buildFile = testProjectDir.newFile('build.gradle')\n+    buildFile << \"\"\"\n+        plugins {\n+            id 'java'\n+            id 'com.google.cloud.tools.linkagechecker'\n+        }\n+        \"\"\"\n+  }\n+\n+  def \"can validate a project with no dependency conflicts\"() {\n+    buildFile << \"\"\"\n+        repositories {\n+          mavenCentral()\n+        }\n+        \n+        // Guava does not have any linkage error\n+        dependencies {\n+          compile 'com.google.guava:guava:28.2-jre'\n+        }\n+        \n+        linkageChecker {\n+          configurations = ['compile']\n+        }\n+        \"\"\"\n+\n+    when:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c8e9261b78407a2e249b3cc4f48a157f5f96d621"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTM5Mjg1Mw==", "bodyText": "indentation seems off, but I don't know Groovy conventions", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1468#discussion_r439392853", "createdAt": "2020-06-12T12:38:32Z", "author": {"login": "elharo"}, "path": "gradle-plugin/src/functionalTest/groovy/com/google/cloud/tools/dependencies/gradle/BuildStatusFunctionalTest.groovy", "diffHunk": "@@ -0,0 +1,100 @@\n+/*\n+ * Copyright 2020 Google LLC.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.cloud.tools.dependencies.gradle\n+\n+import org.gradle.testkit.runner.GradleRunner\n+import org.junit.Rule\n+import org.junit.rules.TemporaryFolder\n+import spock.lang.Specification\n+\n+import static org.gradle.testkit.runner.TaskOutcome.FAILED\n+import static org.gradle.testkit.runner.TaskOutcome.SUCCESS\n+\n+class BuildStatusFunctionalTest extends Specification {\n+  @Rule TemporaryFolder testProjectDir = new TemporaryFolder()\n+  File buildFile\n+\n+  def setup() {\n+    buildFile = testProjectDir.newFile('build.gradle')\n+    buildFile << \"\"\"\n+        plugins {\n+            id 'java'\n+            id 'com.google.cloud.tools.linkagechecker'\n+        }\n+        \"\"\"\n+  }\n+\n+  def \"can validate a project with no dependency conflicts\"() {\n+    buildFile << \"\"\"\n+        repositories {\n+          mavenCentral()\n+        }\n+        \n+        // Guava does not have any linkage error\n+        dependencies {\n+          compile 'com.google.guava:guava:28.2-jre'\n+        }\n+        \n+        linkageChecker {\n+          configurations = ['compile']\n+        }\n+        \"\"\"\n+\n+    when:", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTE4NzQzOA=="}, "originalCommit": {"oid": "c8e9261b78407a2e249b3cc4f48a157f5f96d621"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTQwOTkyMQ==", "bodyText": "Spock's blocks are not indented. The Gradle Plugin documentation example's UrlVerifierPluginFunctionalTest.groovy in https://guides.gradle.org/testing-gradle-plugins/#functional-tests as well as Spock's example code (http://spockframework.org/spock/docs/1.3/spock_primer.html#_when_and_then_blocks) have this style too.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1468#discussion_r439409921", "createdAt": "2020-06-12T13:12:52Z", "author": {"login": "suztomo"}, "path": "gradle-plugin/src/functionalTest/groovy/com/google/cloud/tools/dependencies/gradle/BuildStatusFunctionalTest.groovy", "diffHunk": "@@ -0,0 +1,100 @@\n+/*\n+ * Copyright 2020 Google LLC.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.cloud.tools.dependencies.gradle\n+\n+import org.gradle.testkit.runner.GradleRunner\n+import org.junit.Rule\n+import org.junit.rules.TemporaryFolder\n+import spock.lang.Specification\n+\n+import static org.gradle.testkit.runner.TaskOutcome.FAILED\n+import static org.gradle.testkit.runner.TaskOutcome.SUCCESS\n+\n+class BuildStatusFunctionalTest extends Specification {\n+  @Rule TemporaryFolder testProjectDir = new TemporaryFolder()\n+  File buildFile\n+\n+  def setup() {\n+    buildFile = testProjectDir.newFile('build.gradle')\n+    buildFile << \"\"\"\n+        plugins {\n+            id 'java'\n+            id 'com.google.cloud.tools.linkagechecker'\n+        }\n+        \"\"\"\n+  }\n+\n+  def \"can validate a project with no dependency conflicts\"() {\n+    buildFile << \"\"\"\n+        repositories {\n+          mavenCentral()\n+        }\n+        \n+        // Guava does not have any linkage error\n+        dependencies {\n+          compile 'com.google.guava:guava:28.2-jre'\n+        }\n+        \n+        linkageChecker {\n+          configurations = ['compile']\n+        }\n+        \"\"\"\n+\n+    when:", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTE4NzQzOA=="}, "originalCommit": {"oid": "c8e9261b78407a2e249b3cc4f48a157f5f96d621"}, "originalPosition": 57}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczNzIyODg2OnYy", "diffSide": "RIGHT", "path": "gradle-plugin/src/functionalTest/groovy/com/google/cloud/tools/dependencies/gradle/BuildStatusFunctionalTest.groovy", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxMjozNToyM1rOGjCUZg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxMjo1MzoyNVrOGjC3AQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTM5MTMzNA==", "bodyText": "no need to use static imports here. I like to know where constants come from.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1468#discussion_r439391334", "createdAt": "2020-06-12T12:35:23Z", "author": {"login": "elharo"}, "path": "gradle-plugin/src/functionalTest/groovy/com/google/cloud/tools/dependencies/gradle/BuildStatusFunctionalTest.groovy", "diffHunk": "@@ -0,0 +1,100 @@\n+/*\n+ * Copyright 2020 Google LLC.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.cloud.tools.dependencies.gradle\n+\n+import org.gradle.testkit.runner.GradleRunner\n+import org.junit.Rule\n+import org.junit.rules.TemporaryFolder\n+import spock.lang.Specification\n+\n+import static org.gradle.testkit.runner.TaskOutcome.FAILED", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8cbe998393d5d73bf13429b2414856d4a3d0e236"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTQwMDE5Mw==", "bodyText": "Updated.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1468#discussion_r439400193", "createdAt": "2020-06-12T12:53:25Z", "author": {"login": "suztomo"}, "path": "gradle-plugin/src/functionalTest/groovy/com/google/cloud/tools/dependencies/gradle/BuildStatusFunctionalTest.groovy", "diffHunk": "@@ -0,0 +1,100 @@\n+/*\n+ * Copyright 2020 Google LLC.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.cloud.tools.dependencies.gradle\n+\n+import org.gradle.testkit.runner.GradleRunner\n+import org.junit.Rule\n+import org.junit.rules.TemporaryFolder\n+import spock.lang.Specification\n+\n+import static org.gradle.testkit.runner.TaskOutcome.FAILED", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTM5MTMzNA=="}, "originalCommit": {"oid": "8cbe998393d5d73bf13429b2414856d4a3d0e236"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczNzIzMjA1OnYy", "diffSide": "RIGHT", "path": "gradle-plugin/src/functionalTest/groovy/com/google/cloud/tools/dependencies/gradle/BuildStatusFunctionalTest.groovy", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxMjozNjoxMlrOGjCWHA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxMjo1MjowN1rOGjC00w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTM5MTc3Mg==", "bodyText": "What's this? Is this a very standard thing in Groovy?", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1468#discussion_r439391772", "createdAt": "2020-06-12T12:36:12Z", "author": {"login": "elharo"}, "path": "gradle-plugin/src/functionalTest/groovy/com/google/cloud/tools/dependencies/gradle/BuildStatusFunctionalTest.groovy", "diffHunk": "@@ -0,0 +1,100 @@\n+/*\n+ * Copyright 2020 Google LLC.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.cloud.tools.dependencies.gradle\n+\n+import org.gradle.testkit.runner.GradleRunner\n+import org.junit.Rule\n+import org.junit.rules.TemporaryFolder\n+import spock.lang.Specification", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8cbe998393d5d73bf13429b2414856d4a3d0e236"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTM5OTYzNQ==", "bodyText": "It's one of popular test frameworks in Gradle. The Gradle Plugin document uses Spock. So I followed it.\n\nGradle does not dictate the use of a specific test framework. Popular choices include JUnit, TestNG and Spock. ... The following code snippet shows how to use Spock for implementing tests.\n\nhttps://guides.gradle.org/testing-gradle-plugins/#functional-tests", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1468#discussion_r439399635", "createdAt": "2020-06-12T12:52:07Z", "author": {"login": "suztomo"}, "path": "gradle-plugin/src/functionalTest/groovy/com/google/cloud/tools/dependencies/gradle/BuildStatusFunctionalTest.groovy", "diffHunk": "@@ -0,0 +1,100 @@\n+/*\n+ * Copyright 2020 Google LLC.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.cloud.tools.dependencies.gradle\n+\n+import org.gradle.testkit.runner.GradleRunner\n+import org.junit.Rule\n+import org.junit.rules.TemporaryFolder\n+import spock.lang.Specification", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTM5MTc3Mg=="}, "originalCommit": {"oid": "8cbe998393d5d73bf13429b2414856d4a3d0e236"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczNzIzNTM4OnYy", "diffSide": "RIGHT", "path": "gradle-plugin/src/functionalTest/groovy/com/google/cloud/tools/dependencies/gradle/BuildStatusFunctionalTest.groovy", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxMjozNzoyMFrOGjCYTA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxMjo1MzoxNlrOGjC2vw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTM5MjMzMg==", "bodyText": "errors", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1468#discussion_r439392332", "createdAt": "2020-06-12T12:37:20Z", "author": {"login": "elharo"}, "path": "gradle-plugin/src/functionalTest/groovy/com/google/cloud/tools/dependencies/gradle/BuildStatusFunctionalTest.groovy", "diffHunk": "@@ -0,0 +1,100 @@\n+/*\n+ * Copyright 2020 Google LLC.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.cloud.tools.dependencies.gradle\n+\n+import org.gradle.testkit.runner.GradleRunner\n+import org.junit.Rule\n+import org.junit.rules.TemporaryFolder\n+import spock.lang.Specification\n+\n+import static org.gradle.testkit.runner.TaskOutcome.FAILED\n+import static org.gradle.testkit.runner.TaskOutcome.SUCCESS\n+\n+class BuildStatusFunctionalTest extends Specification {\n+  @Rule TemporaryFolder testProjectDir = new TemporaryFolder()\n+  File buildFile\n+\n+  def setup() {\n+    buildFile = testProjectDir.newFile('build.gradle')\n+    buildFile << \"\"\"\n+        plugins {\n+            id 'java'\n+            id 'com.google.cloud.tools.linkagechecker'\n+        }\n+        \"\"\"\n+  }\n+\n+  def \"can validate a project with no dependency conflicts\"() {\n+    buildFile << \"\"\"\n+        repositories {\n+          mavenCentral()\n+        }\n+        \n+        // Guava does not have any linkage error", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8cbe998393d5d73bf13429b2414856d4a3d0e236"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTQwMDEyNw==", "bodyText": "Updated.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1468#discussion_r439400127", "createdAt": "2020-06-12T12:53:16Z", "author": {"login": "suztomo"}, "path": "gradle-plugin/src/functionalTest/groovy/com/google/cloud/tools/dependencies/gradle/BuildStatusFunctionalTest.groovy", "diffHunk": "@@ -0,0 +1,100 @@\n+/*\n+ * Copyright 2020 Google LLC.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.cloud.tools.dependencies.gradle\n+\n+import org.gradle.testkit.runner.GradleRunner\n+import org.junit.Rule\n+import org.junit.rules.TemporaryFolder\n+import spock.lang.Specification\n+\n+import static org.gradle.testkit.runner.TaskOutcome.FAILED\n+import static org.gradle.testkit.runner.TaskOutcome.SUCCESS\n+\n+class BuildStatusFunctionalTest extends Specification {\n+  @Rule TemporaryFolder testProjectDir = new TemporaryFolder()\n+  File buildFile\n+\n+  def setup() {\n+    buildFile = testProjectDir.newFile('build.gradle')\n+    buildFile << \"\"\"\n+        plugins {\n+            id 'java'\n+            id 'com.google.cloud.tools.linkagechecker'\n+        }\n+        \"\"\"\n+  }\n+\n+  def \"can validate a project with no dependency conflicts\"() {\n+    buildFile << \"\"\"\n+        repositories {\n+          mavenCentral()\n+        }\n+        \n+        // Guava does not have any linkage error", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTM5MjMzMg=="}, "originalCommit": {"oid": "8cbe998393d5d73bf13429b2414856d4a3d0e236"}, "originalPosition": 47}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczNzI0Mjk3OnYy", "diffSide": "RIGHT", "path": "gradle-plugin/src/functionalTest/groovy/com/google/cloud/tools/dependencies/gradle/BuildStatusFunctionalTest.groovy", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxMjo0MDowN1rOGjCdHg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxMzoxMzowMlrOGjDdQw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTM5MzU2Ng==", "bodyText": "this variable is superfluous.\nalso, it seems to be standard but I'm skeptical about putting variable definitions in then blocks.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1468#discussion_r439393566", "createdAt": "2020-06-12T12:40:07Z", "author": {"login": "elharo"}, "path": "gradle-plugin/src/functionalTest/groovy/com/google/cloud/tools/dependencies/gradle/BuildStatusFunctionalTest.groovy", "diffHunk": "@@ -0,0 +1,100 @@\n+/*\n+ * Copyright 2020 Google LLC.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.cloud.tools.dependencies.gradle\n+\n+import org.gradle.testkit.runner.GradleRunner\n+import org.junit.Rule\n+import org.junit.rules.TemporaryFolder\n+import spock.lang.Specification\n+\n+import static org.gradle.testkit.runner.TaskOutcome.FAILED\n+import static org.gradle.testkit.runner.TaskOutcome.SUCCESS\n+\n+class BuildStatusFunctionalTest extends Specification {\n+  @Rule TemporaryFolder testProjectDir = new TemporaryFolder()\n+  File buildFile\n+\n+  def setup() {\n+    buildFile = testProjectDir.newFile('build.gradle')\n+    buildFile << \"\"\"\n+        plugins {\n+            id 'java'\n+            id 'com.google.cloud.tools.linkagechecker'\n+        }\n+        \"\"\"\n+  }\n+\n+  def \"can validate a project with no dependency conflicts\"() {\n+    buildFile << \"\"\"\n+        repositories {\n+          mavenCentral()\n+        }\n+        \n+        // Guava does not have any linkage error\n+        dependencies {\n+          compile 'com.google.guava:guava:28.2-jre'\n+        }\n+        \n+        linkageChecker {\n+          configurations = ['compile']\n+        }\n+        \"\"\"\n+\n+    when:\n+    def result = GradleRunner.create()\n+        .withProjectDir(testProjectDir.root)\n+        .withArguments('linkageCheck')\n+        .withPluginClasspath()\n+        .build()\n+\n+    then:\n+    def output = result.output", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8cbe998393d5d73bf13429b2414856d4a3d0e236"}, "originalPosition": 65}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTQwOTk4Nw==", "bodyText": "Removed the variable.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1468#discussion_r439409987", "createdAt": "2020-06-12T13:13:02Z", "author": {"login": "suztomo"}, "path": "gradle-plugin/src/functionalTest/groovy/com/google/cloud/tools/dependencies/gradle/BuildStatusFunctionalTest.groovy", "diffHunk": "@@ -0,0 +1,100 @@\n+/*\n+ * Copyright 2020 Google LLC.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.cloud.tools.dependencies.gradle\n+\n+import org.gradle.testkit.runner.GradleRunner\n+import org.junit.Rule\n+import org.junit.rules.TemporaryFolder\n+import spock.lang.Specification\n+\n+import static org.gradle.testkit.runner.TaskOutcome.FAILED\n+import static org.gradle.testkit.runner.TaskOutcome.SUCCESS\n+\n+class BuildStatusFunctionalTest extends Specification {\n+  @Rule TemporaryFolder testProjectDir = new TemporaryFolder()\n+  File buildFile\n+\n+  def setup() {\n+    buildFile = testProjectDir.newFile('build.gradle')\n+    buildFile << \"\"\"\n+        plugins {\n+            id 'java'\n+            id 'com.google.cloud.tools.linkagechecker'\n+        }\n+        \"\"\"\n+  }\n+\n+  def \"can validate a project with no dependency conflicts\"() {\n+    buildFile << \"\"\"\n+        repositories {\n+          mavenCentral()\n+        }\n+        \n+        // Guava does not have any linkage error\n+        dependencies {\n+          compile 'com.google.guava:guava:28.2-jre'\n+        }\n+        \n+        linkageChecker {\n+          configurations = ['compile']\n+        }\n+        \"\"\"\n+\n+    when:\n+    def result = GradleRunner.create()\n+        .withProjectDir(testProjectDir.root)\n+        .withArguments('linkageCheck')\n+        .withPluginClasspath()\n+        .build()\n+\n+    then:\n+    def output = result.output", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTM5MzU2Ng=="}, "originalCommit": {"oid": "8cbe998393d5d73bf13429b2414856d4a3d0e236"}, "originalPosition": 65}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2598, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}