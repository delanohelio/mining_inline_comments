{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkyNTk3NzIx", "number": 1308, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxOTo0MDo0OVrODqhy6Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQyMToxMjozNFrODq-Pag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1OTIwNDg5OnYy", "diffSide": "RIGHT", "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/LinkageCheckClassPath.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxOTo0MDo0OVrOF6VQQg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxOTo0MDo0OVrOF6VQQg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjcwOTk1NA==", "bodyText": "This is where the ClassPathElement instances are used.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1308#discussion_r396709954", "createdAt": "2020-03-23T19:40:49Z", "author": {"login": "suztomo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/LinkageCheckClassPath.java", "diffHunk": "@@ -53,8 +52,11 @@\n    *\n    * @param paths list of absolute paths for the elements in the class path\n    */\n-  LinkageCheckClassPath(List<Path> paths) {\n-    super(paths.stream().map(Path::toString).collect(Collectors.joining(File.pathSeparator)));\n+  LinkageCheckClassPath(List<ClassPathElement> paths) {\n+    super(\n+        paths.stream()\n+            .map(ClassPathElement::getClassPath)\n+            .collect(Collectors.joining(File.pathSeparator)));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a44c7b64332e52db1e1e8d28c58d398494642082"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1OTU2NDMzOnYy", "diffSide": "RIGHT", "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/ClassPathElement.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QyMTozMDoyN1rOF6Y13g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQwMjo1OTozN1rOF6fa_w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njc2ODczNA==", "bodyText": "Oracle's docs call these entries, not elements:\nhttps://docs.oracle.com/javase/8/docs/technotes/tools/windows/classpath.html", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1308#discussion_r396768734", "createdAt": "2020-03-23T21:30:27Z", "author": {"login": "elharo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/ClassPathElement.java", "diffHunk": "@@ -0,0 +1,24 @@\n+/*\n+ * Copyright 2020 Google LLC.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.cloud.tools.opensource.classpath;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "276c07f050b5f549e3274362b3f294f100c02fa9"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njg3NjU0Mw==", "bodyText": "Updated to ClassPathEntry", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1308#discussion_r396876543", "createdAt": "2020-03-24T02:59:37Z", "author": {"login": "suztomo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/ClassPathElement.java", "diffHunk": "@@ -0,0 +1,24 @@\n+/*\n+ * Copyright 2020 Google LLC.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.cloud.tools.opensource.classpath;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njc2ODczNA=="}, "originalCommit": {"oid": "276c07f050b5f549e3274362b3f294f100c02fa9"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2MjU1NjgzOnYy", "diffSide": "RIGHT", "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/JarClassPathEntry.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQxNTozNjowNVrOF62JUA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQxNjoxOToyMFrOF64Pyg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzI0ODg0OA==", "bodyText": "This is a path as a string, not a class path. A path looks like \"/usr/lib/classes/foo.jar\"\nA classpath is a semicolon or colon separated list of paths.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1308#discussion_r397248848", "createdAt": "2020-03-24T15:36:05Z", "author": {"login": "elharo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/JarClassPathEntry.java", "diffHunk": "@@ -0,0 +1,56 @@\n+/*\n+ * Copyright 2020 Google LLC.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.cloud.tools.opensource.classpath;\n+\n+import java.nio.file.Path;\n+import java.util.Objects;\n+\n+/** JAR file entry in a class path. */\n+class JarClassPathEntry implements ClassPathEntry {\n+  private Path jar;\n+\n+  JarClassPathEntry(Path jar) {\n+    this.jar = jar;\n+  }\n+\n+  @Override\n+  public String getClassPath() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3547a03e8fa95fe7d1edd1adeb58aa48c6f0dd2a"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzI3NjIyMw==", "bodyText": "A class path consists of smaller class paths.\n-classpath classpath1;classpath2...\n\nhttps://docs.oracle.com/javase/7/docs/technotes/tools/windows/classpath.html\nThat's why I named getClassPath. Do you think of better name?", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1308#discussion_r397276223", "createdAt": "2020-03-24T16:10:23Z", "author": {"login": "suztomo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/JarClassPathEntry.java", "diffHunk": "@@ -0,0 +1,56 @@\n+/*\n+ * Copyright 2020 Google LLC.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.cloud.tools.opensource.classpath;\n+\n+import java.nio.file.Path;\n+import java.util.Objects;\n+\n+/** JAR file entry in a class path. */\n+class JarClassPathEntry implements ClassPathEntry {\n+  private Path jar;\n+\n+  JarClassPathEntry(Path jar) {\n+    this.jar = jar;\n+  }\n+\n+  @Override\n+  public String getClassPath() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzI0ODg0OA=="}, "originalCommit": {"oid": "3547a03e8fa95fe7d1edd1adeb58aa48c6f0dd2a"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzI4MTM4Mg==", "bodyText": "A classpath consists of class paths entries, not classpaths. And a classpath entry is a path.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1308#discussion_r397281382", "createdAt": "2020-03-24T16:16:56Z", "author": {"login": "elharo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/JarClassPathEntry.java", "diffHunk": "@@ -0,0 +1,56 @@\n+/*\n+ * Copyright 2020 Google LLC.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.cloud.tools.opensource.classpath;\n+\n+import java.nio.file.Path;\n+import java.util.Objects;\n+\n+/** JAR file entry in a class path. */\n+class JarClassPathEntry implements ClassPathEntry {\n+  private Path jar;\n+\n+  JarClassPathEntry(Path jar) {\n+    this.jar = jar;\n+  }\n+\n+  @Override\n+  public String getClassPath() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzI0ODg0OA=="}, "originalCommit": {"oid": "3547a03e8fa95fe7d1edd1adeb58aa48c6f0dd2a"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzI4MzI3NA==", "bodyText": "Then String getPath().", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1308#discussion_r397283274", "createdAt": "2020-03-24T16:19:20Z", "author": {"login": "suztomo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/JarClassPathEntry.java", "diffHunk": "@@ -0,0 +1,56 @@\n+/*\n+ * Copyright 2020 Google LLC.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.cloud.tools.opensource.classpath;\n+\n+import java.nio.file.Path;\n+import java.util.Objects;\n+\n+/** JAR file entry in a class path. */\n+class JarClassPathEntry implements ClassPathEntry {\n+  private Path jar;\n+\n+  JarClassPathEntry(Path jar) {\n+    this.jar = jar;\n+  }\n+\n+  @Override\n+  public String getClassPath() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzI0ODg0OA=="}, "originalCommit": {"oid": "3547a03e8fa95fe7d1edd1adeb58aa48c6f0dd2a"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2MjU4MDE3OnYy", "diffSide": "RIGHT", "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/ClassPathEntry.java", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQxNTo0MTowNFrOF62YMQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQxNzowMDowMFrOF66JsA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzI1MjY1Nw==", "bodyText": "Should we be able to use this type exclusively? If we have to do any casting or reflection to determine the real type, the design is incomplete.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1308#discussion_r397252657", "createdAt": "2020-03-24T15:41:04Z", "author": {"login": "elharo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/ClassPathEntry.java", "diffHunk": "@@ -0,0 +1,24 @@\n+/*\n+ * Copyright 2020 Google LLC.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.cloud.tools.opensource.classpath;\n+\n+/** An entry in Java class path. */\n+interface ClassPathEntry {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3547a03e8fa95fe7d1edd1adeb58aa48c6f0dd2a"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzI3MDcwMQ==", "bodyText": "Almost. ArtifactClassPathEntry will appear only when Linkage Checker needs to read Artifact's coordinates. It's intended, as that's the reason why I'm class path entries artifact-aware when class paths are from Maven artifacts.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1308#discussion_r397270701", "createdAt": "2020-03-24T16:03:19Z", "author": {"login": "suztomo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/ClassPathEntry.java", "diffHunk": "@@ -0,0 +1,24 @@\n+/*\n+ * Copyright 2020 Google LLC.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.cloud.tools.opensource.classpath;\n+\n+/** An entry in Java class path. */\n+interface ClassPathEntry {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzI1MjY1Nw=="}, "originalCommit": {"oid": "3547a03e8fa95fe7d1edd1adeb58aa48c6f0dd2a"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzI3ODk0OQ==", "bodyText": "It sounds like this class hierarchy doesn't match the use case. We shouldn't need reflection or instanceof.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1308#discussion_r397278949", "createdAt": "2020-03-24T16:13:51Z", "author": {"login": "elharo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/ClassPathEntry.java", "diffHunk": "@@ -0,0 +1,24 @@\n+/*\n+ * Copyright 2020 Google LLC.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.cloud.tools.opensource.classpath;\n+\n+/** An entry in Java class path. */\n+interface ClassPathEntry {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzI1MjY1Nw=="}, "originalCommit": {"oid": "3547a03e8fa95fe7d1edd1adeb58aa48c6f0dd2a"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzMwNDAxOQ==", "bodyText": "Updated ClassPathEntry as a concrete class. ArtifactClassPathEntry is a spacial case of ClassPathEntry that has associated Maven artifact. It will use instanceof to see a class path entry has associated Maven artifact. I don't think this use of instanceof means a bad class hierarchy.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1308#discussion_r397304019", "createdAt": "2020-03-24T16:46:10Z", "author": {"login": "suztomo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/ClassPathEntry.java", "diffHunk": "@@ -0,0 +1,24 @@\n+/*\n+ * Copyright 2020 Google LLC.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.cloud.tools.opensource.classpath;\n+\n+/** An entry in Java class path. */\n+interface ClassPathEntry {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzI1MjY1Nw=="}, "originalCommit": {"oid": "3547a03e8fa95fe7d1edd1adeb58aa48c6f0dd2a"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzMxNDQ4MA==", "bodyText": "Updated. ClassPathEntry now has getArtifact, which returns null by default. ArtifactClassPathEntry overrides it. Now we will not need to have instanceof.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1308#discussion_r397314480", "createdAt": "2020-03-24T17:00:00Z", "author": {"login": "suztomo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/ClassPathEntry.java", "diffHunk": "@@ -0,0 +1,24 @@\n+/*\n+ * Copyright 2020 Google LLC.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.cloud.tools.opensource.classpath;\n+\n+/** An entry in Java class path. */\n+interface ClassPathEntry {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzI1MjY1Nw=="}, "originalCommit": {"oid": "3547a03e8fa95fe7d1edd1adeb58aa48c6f0dd2a"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2MjU4NTk1OnYy", "diffSide": "RIGHT", "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/ClassPathEntry.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQxNTo0MjoxNFrOF62b_Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQxNjozODoyOFrOF65KAg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzI1MzYyOQ==", "bodyText": "Why interface instead of abstract class? Abstract classes are more powerful and much more changeable. E.g. you can add methods to one without breaking all subclasses.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1308#discussion_r397253629", "createdAt": "2020-03-24T15:42:14Z", "author": {"login": "elharo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/ClassPathEntry.java", "diffHunk": "@@ -0,0 +1,24 @@\n+/*\n+ * Copyright 2020 Google LLC.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.cloud.tools.opensource.classpath;\n+\n+/** An entry in Java class path. */\n+interface ClassPathEntry {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3547a03e8fa95fe7d1edd1adeb58aa48c6f0dd2a"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzI3MTkzMg==", "bodyText": "I made this as as interface because I don't need any concrete methods or fields. Interfaces can have implementation too. I don't see one is better than the other in this case.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1308#discussion_r397271932", "createdAt": "2020-03-24T16:04:52Z", "author": {"login": "suztomo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/ClassPathEntry.java", "diffHunk": "@@ -0,0 +1,24 @@\n+/*\n+ * Copyright 2020 Google LLC.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.cloud.tools.opensource.classpath;\n+\n+/** An entry in Java class path. */\n+interface ClassPathEntry {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzI1MzYyOQ=="}, "originalCommit": {"oid": "3547a03e8fa95fe7d1edd1adeb58aa48c6f0dd2a"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzI4MDE5OA==", "bodyText": "This point might become moot, but I really think the default should be class, not interface, without a strong reason otherwise. Interfaces are much more brittle than classes and have less functionality. They are vastly overused in Java today to no good end.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1308#discussion_r397280198", "createdAt": "2020-03-24T16:15:29Z", "author": {"login": "elharo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/ClassPathEntry.java", "diffHunk": "@@ -0,0 +1,24 @@\n+/*\n+ * Copyright 2020 Google LLC.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.cloud.tools.opensource.classpath;\n+\n+/** An entry in Java class path. */\n+interface ClassPathEntry {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzI1MzYyOQ=="}, "originalCommit": {"oid": "3547a03e8fa95fe7d1edd1adeb58aa48c6f0dd2a"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzI5ODE3OA==", "bodyText": "Changed this from interface to a concrete class.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1308#discussion_r397298178", "createdAt": "2020-03-24T16:38:28Z", "author": {"login": "suztomo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/ClassPathEntry.java", "diffHunk": "@@ -0,0 +1,24 @@\n+/*\n+ * Copyright 2020 Google LLC.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.cloud.tools.opensource.classpath;\n+\n+/** An entry in Java class path. */\n+interface ClassPathEntry {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzI1MzYyOQ=="}, "originalCommit": {"oid": "3547a03e8fa95fe7d1edd1adeb58aa48c6f0dd2a"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2Mzg2NTM4OnYy", "diffSide": "RIGHT", "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/ClassPathEntry.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQyMToxMjozNFrOF7DSfA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxNzozOTozM1rOF7mxsQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzQ2NDE4OA==", "bodyText": "for --> with", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1308#discussion_r397464188", "createdAt": "2020-03-24T21:12:34Z", "author": {"login": "elharo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/ClassPathEntry.java", "diffHunk": "@@ -0,0 +1,84 @@\n+/*\n+ * Copyright 2020 Google LLC.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.cloud.tools.opensource.classpath;\n+\n+import static com.google.common.base.Preconditions.checkNotNull;\n+\n+import java.nio.file.Path;\n+import java.util.Objects;\n+import org.eclipse.aether.artifact.Artifact;\n+\n+/** An entry in a class path. */\n+final class ClassPathEntry {\n+\n+  private Path jar;\n+  private Artifact artifact;\n+\n+  /** An entry for a JAR file without association with a Maven artifact. */\n+  ClassPathEntry(Path jar) {\n+    this.jar = checkNotNull(jar);\n+  }\n+\n+  /** An entry for a Maven artifact. */\n+  ClassPathEntry(Artifact artifact) {\n+    checkNotNull(artifact.getFile());\n+    this.artifact = artifact;\n+  }\n+\n+  /** Returns the path of the entry. */\n+  String getPath() {\n+    if (artifact != null) {\n+      return artifact.getFile().toString();\n+    } else {\n+      return jar.toString();\n+    }\n+  }\n+\n+  /**\n+   * Returns Maven artifact associated for the JAR file. If the JAR file does not have an artifact,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b6979fd3daeb669b85f2c55ba5770b8d35971220"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODA0NTYxNw==", "bodyText": "updated.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1308#discussion_r398045617", "createdAt": "2020-03-25T17:39:33Z", "author": {"login": "suztomo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/ClassPathEntry.java", "diffHunk": "@@ -0,0 +1,84 @@\n+/*\n+ * Copyright 2020 Google LLC.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.cloud.tools.opensource.classpath;\n+\n+import static com.google.common.base.Preconditions.checkNotNull;\n+\n+import java.nio.file.Path;\n+import java.util.Objects;\n+import org.eclipse.aether.artifact.Artifact;\n+\n+/** An entry in a class path. */\n+final class ClassPathEntry {\n+\n+  private Path jar;\n+  private Artifact artifact;\n+\n+  /** An entry for a JAR file without association with a Maven artifact. */\n+  ClassPathEntry(Path jar) {\n+    this.jar = checkNotNull(jar);\n+  }\n+\n+  /** An entry for a Maven artifact. */\n+  ClassPathEntry(Artifact artifact) {\n+    checkNotNull(artifact.getFile());\n+    this.artifact = artifact;\n+  }\n+\n+  /** Returns the path of the entry. */\n+  String getPath() {\n+    if (artifact != null) {\n+      return artifact.getFile().toString();\n+    } else {\n+      return jar.toString();\n+    }\n+  }\n+\n+  /**\n+   * Returns Maven artifact associated for the JAR file. If the JAR file does not have an artifact,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzQ2NDE4OA=="}, "originalCommit": {"oid": "b6979fd3daeb669b85f2c55ba5770b8d35971220"}, "originalPosition": 52}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2675, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}