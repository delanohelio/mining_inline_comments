{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg1NTA0MDk1", "number": 1648, "title": "separate concerns", "bodyText": "@suztomo I refactored this to separate printing and formatting problems from finding problems. This removes some code duplication and should make the logic easier to follow.", "createdAt": "2020-09-11T22:08:05Z", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1648", "merged": true, "mergeCommit": {"oid": "4b772a399ef1914fa9b2c500a3d4c89394dba3e4"}, "closed": true, "closedAt": "2020-09-14T16:36:48Z", "author": {"login": "elharo"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdH81aagH2gAyNDg1NTA0MDk1OmE0YTQ0ZDk0ZDc2NjhiNDQyODU0MGViOTU0Nzc2MDA5ZmQxZjA0MzM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdI1rqEgFqTQ4Nzk0MDMwOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "a4a44d94d7668b4428540eb954776009fd1f0433", "author": {"user": {"login": "elharo", "name": "Elliotte Rusty Harold"}}, "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/a4a44d94d7668b4428540eb954776009fd1f0433", "committedDate": "2020-09-11T22:07:21Z", "message": "separate concerns"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "52061ab5e8159a3687d44cf3ddc5afef7c210635", "author": {"user": {"login": "elharo", "name": "Elliotte Rusty Harold"}}, "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/52061ab5e8159a3687d44cf3ddc5afef7c210635", "committedDate": "2020-09-11T22:11:37Z", "message": "exclusion file is overwritten"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5e2901584d8e797abed9f82a73c2f2c27a1b7b87", "author": {"user": {"login": "elharo", "name": "Elliotte Rusty Harold"}}, "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/5e2901584d8e797abed9f82a73c2f2c27a1b7b87", "committedDate": "2020-09-11T22:57:04Z", "message": "wip"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8cee41ef41f94c2ea16d2fac585d93cf605e8122", "author": {"user": {"login": "elharo", "name": "Elliotte Rusty Harold"}}, "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/8cee41ef41f94c2ea16d2fac585d93cf605e8122", "committedDate": "2020-09-11T23:06:34Z", "message": "remove duplicate code"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ef3285616a77ae9c366d2c06425c5335376f31d3", "author": {"user": {"login": "elharo", "name": "Elliotte Rusty Harold"}}, "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/ef3285616a77ae9c366d2c06425c5335376f31d3", "committedDate": "2020-09-12T13:05:45Z", "message": "wip"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8ee9c3ed279164cf9e17e0a1f162673121dba0bd", "author": {"user": {"login": "elharo", "name": "Elliotte Rusty Harold"}}, "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/8ee9c3ed279164cf9e17e0a1f162673121dba0bd", "committedDate": "2020-09-12T13:52:04Z", "message": "unify I/O"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "28c38987df6b801e8ea5fe209dad28f2595fd412", "author": {"user": {"login": "elharo", "name": "Elliotte Rusty Harold"}}, "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/28c38987df6b801e8ea5fe209dad28f2595fd412", "committedDate": "2020-09-12T14:05:23Z", "message": "unify I/O"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7b10ffa99c036906e13a51dad854c0f5568ed704", "author": {"user": {"login": "elharo", "name": "Elliotte Rusty Harold"}}, "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/7b10ffa99c036906e13a51dad854c0f5568ed704", "committedDate": "2020-09-12T14:15:32Z", "message": "wip"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a88612a145265c3e84008f2ca719beb72795f365", "author": {"user": {"login": "elharo", "name": "Elliotte Rusty Harold"}}, "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/a88612a145265c3e84008f2ca719beb72795f365", "committedDate": "2020-09-12T14:29:43Z", "message": "use instance methods"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg3NzQwNjE0", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1648#pullrequestreview-487740614", "createdAt": "2020-09-14T13:15:16Z", "commit": {"oid": "a88612a145265c3e84008f2ca719beb72795f365"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg3NzcwODgz", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1648#pullrequestreview-487770883", "createdAt": "2020-09-14T13:31:32Z", "commit": {"oid": "a88612a145265c3e84008f2ca719beb72795f365"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxMzozMTozMlrOHRT9Cg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxMzo0MDo0M1rOHRUi-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzkxNDc2Mg==", "bodyText": "It's unused. I see Problem.writeExclusionFile takes care of this.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1648#discussion_r487914762", "createdAt": "2020-09-14T13:31:32Z", "author": {"login": "suztomo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/LinkageCheckerMain.java", "diffHunk": "@@ -150,16 +187,14 @@ public static void main(String[] arguments)\n               .collect(toImmutableSet());\n     }\n \n-    // TODO this should be a separate method; not part of findLinkageProblems\n-    Path outputExclusionFile = linkageCheckerArguments.getOutputExclusionFile();\n-    if (outputExclusionFile != null) {\n-      ExclusionFiles.write(outputExclusionFile, linkageProblems);\n-      System.out.println(\"Wrote the linkage errors as exclusion file: \" + outputExclusionFile);\n-      \n-      // TODO why do we return an empty set here?\n-      return ImmutableSet.of();\n-    }\n-\n     return linkageProblems;\n   }\n+  \n+  private static void writeExclusionFile(Path outputExclusionFile,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a88612a145265c3e84008f2ca719beb72795f365"}, "originalPosition": 166}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzkxODA0MQ==", "bodyText": "\"All output happens here\"? The input happens at checkJarFiles and checkArtifacts.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1648#discussion_r487918041", "createdAt": "2020-09-14T13:34:37Z", "author": {"login": "suztomo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/LinkageCheckerMain.java", "diffHunk": "@@ -60,25 +60,73 @@ public static void main(String[] arguments)\n         // If JAR files are specified, it's empty.\n         ImmutableList<Artifact> artifacts = linkageCheckerArguments.getArtifacts();\n \n-        ImmutableSet<LinkageProblem> linkageProblems =\n+        Problems problems =\n             artifacts.isEmpty()\n                 ? checkJarFiles(linkageCheckerArguments)\n                 : checkArtifacts(linkageCheckerArguments);\n-        if (!linkageProblems.isEmpty()) {\n-          System.out.println(\n-              \"For the details of the linkage errors, see \"\n-                  + \"https://github.com/GoogleCloudPlatform/cloud-opensource-java/wiki/Linkage-Checker-Messages\");\n-          // Throwing an exception is more test-friendly compared with System.exit(1). The latter\n-          // abruptly stops test execution.\n-          throw new LinkageCheckResultException(linkageProblems.size());\n+\n+        Path outputExclusionFile = linkageCheckerArguments.getOutputExclusionFile();\n+        // All I/O happens here", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a88612a145265c3e84008f2ca719beb72795f365"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzkyMjQ0Mg==", "bodyText": "This check looks good. I feel the similarity with curl -o <filename>. If we chose to write the output to the file, it does not print the information on console.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1648#discussion_r487922442", "createdAt": "2020-09-14T13:38:47Z", "author": {"login": "suztomo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/LinkageCheckerMain.java", "diffHunk": "@@ -60,25 +60,73 @@ public static void main(String[] arguments)\n         // If JAR files are specified, it's empty.\n         ImmutableList<Artifact> artifacts = linkageCheckerArguments.getArtifacts();\n \n-        ImmutableSet<LinkageProblem> linkageProblems =\n+        Problems problems =\n             artifacts.isEmpty()\n                 ? checkJarFiles(linkageCheckerArguments)\n                 : checkArtifacts(linkageCheckerArguments);\n-        if (!linkageProblems.isEmpty()) {\n-          System.out.println(\n-              \"For the details of the linkage errors, see \"\n-                  + \"https://github.com/GoogleCloudPlatform/cloud-opensource-java/wiki/Linkage-Checker-Messages\");\n-          // Throwing an exception is more test-friendly compared with System.exit(1). The latter\n-          // abruptly stops test execution.\n-          throw new LinkageCheckResultException(linkageProblems.size());\n+\n+        Path outputExclusionFile = linkageCheckerArguments.getOutputExclusionFile();\n+        // All I/O happens here\n+        if (!problems.linkageProblems.isEmpty()) {\n+          // TODO really uncertain about this check. Whether to write an exclusion file is\n+          // a separate issue from whether to print the linkage problems.\n+          if (outputExclusionFile == null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a88612a145265c3e84008f2ca719beb72795f365"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzkyNDQ3NA==", "bodyText": "I like this abstraction of getting the result regardless of the output.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1648#discussion_r487924474", "createdAt": "2020-09-14T13:40:43Z", "author": {"login": "suztomo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/LinkageCheckerMain.java", "diffHunk": "@@ -60,25 +60,73 @@ public static void main(String[] arguments)\n         // If JAR files are specified, it's empty.\n         ImmutableList<Artifact> artifacts = linkageCheckerArguments.getArtifacts();\n \n-        ImmutableSet<LinkageProblem> linkageProblems =\n+        Problems problems =\n             artifacts.isEmpty()\n                 ? checkJarFiles(linkageCheckerArguments)\n                 : checkArtifacts(linkageCheckerArguments);\n-        if (!linkageProblems.isEmpty()) {\n-          System.out.println(\n-              \"For the details of the linkage errors, see \"\n-                  + \"https://github.com/GoogleCloudPlatform/cloud-opensource-java/wiki/Linkage-Checker-Messages\");\n-          // Throwing an exception is more test-friendly compared with System.exit(1). The latter\n-          // abruptly stops test execution.\n-          throw new LinkageCheckResultException(linkageProblems.size());\n+\n+        Path outputExclusionFile = linkageCheckerArguments.getOutputExclusionFile();\n+        // All I/O happens here\n+        if (!problems.linkageProblems.isEmpty()) {\n+          // TODO really uncertain about this check. Whether to write an exclusion file is\n+          // a separate issue from whether to print the linkage problems.\n+          if (outputExclusionFile == null) {\n+            problems.print();\n+            // Throwing an exception is more test-friendly than System.exit(1). The latter\n+            // abruptly stops test execution.\n+            throw new LinkageCheckResultException(problems.linkageProblems.size());\n+          } else {\n+            problems.writeExclusionFile(outputExclusionFile);\n+          }\n         }\n       }\n     } catch (ParseException ex) {\n       System.err.println(ex.getMessage());\n     }\n   }\n+  \n+  // output from a check\n+  private static final class Problems { \n+    \n+    private final ImmutableList<ArtifactProblem> artifactProblems;\n+    private final ImmutableSet<LinkageProblem> linkageProblems;\n+    private final ClassPathResult classPathResult;\n+\n+    private Problems(\n+        ImmutableSet<LinkageProblem> linkageProblems,\n+        ImmutableList<ArtifactProblem> artifactProblems,\n+        ClassPathResult classPathResult) {\n+      this.artifactProblems = artifactProblems;\n+      this.linkageProblems = linkageProblems;\n+      this.classPathResult = classPathResult;\n+    }\n \n-  private static ImmutableSet<LinkageProblem> checkJarFiles(\n+    private Problems(ImmutableSet<LinkageProblem> linkageProblems) {\n+      this.linkageProblems = linkageProblems;\n+      this.artifactProblems = ImmutableList.of();\n+      this.classPathResult = null;\n+    }\n+    \n+    void print() {\n+      System.out.println(LinkageProblem.formatLinkageProblems(\n+          linkageProblems, classPathResult));\n+      if (!artifactProblems.isEmpty()) {\n+        System.out.println(\"\\n\");\n+        System.out.println(ArtifactProblem.formatProblems(artifactProblems));\n+      }\n+      System.out.println(\n+          \"For the details of the linkage errors, see \"\n+              + \"https://github.com/GoogleCloudPlatform/cloud-opensource-java/wiki/Linkage-Checker-Messages\");\n+    }\n+    \n+    void writeExclusionFile(Path path) throws IOException, XMLStreamException, TransformerException {\n+      ExclusionFiles.write(path, linkageProblems);\n+      System.out.println(\"Wrote the linkage errors as exclusion file: \" + path);\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a88612a145265c3e84008f2ca719beb72795f365"}, "originalPosition": 84}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e61b7bd56d06aa86681c0f5a502029724887324b", "author": {"user": {"login": "elharo", "name": "Elliotte Rusty Harold"}}, "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/e61b7bd56d06aa86681c0f5a502029724887324b", "committedDate": "2020-09-14T16:08:47Z", "message": "remove unused code"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg3OTQwMzA4", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1648#pullrequestreview-487940308", "createdAt": "2020-09-14T16:21:17Z", "commit": {"oid": "e61b7bd56d06aa86681c0f5a502029724887324b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 121, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}