{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE5NTY5MjM1", "number": 1407, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxNjowMDoxMVrOD9dT6A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxNjowNDoyM1rOD9daig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1NzY5OTYwOnYy", "diffSide": "RIGHT", "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/MethodSymbol.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxNjowMDoxMVrOGW9uUQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxNjowMDoxMVrOGW9uUQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjczMzEzNw==", "bodyText": "Checking the equality of class name here is more clear than super.equals. Nice.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1407#discussion_r426733137", "createdAt": "2020-05-18T16:00:11Z", "author": {"login": "suztomo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/MethodSymbol.java", "diffHunk": "@@ -65,18 +65,16 @@ public boolean equals(Object other) {\n     if (other == null || getClass() != other.getClass()) {\n       return false;\n     }\n-    if (!super.equals(other)) {\n-      return false;\n-    }\n     MethodSymbol that = (MethodSymbol) other;\n     return isInterfaceMethod == that.isInterfaceMethod\n         && name.equals(that.name)\n-        && descriptor.equals(that.descriptor);\n+        && descriptor.equals(that.descriptor)\n+        && this.getClassBinaryName().equals(that.getClassBinaryName());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "db6753d4d445a2d3ffea244ef862c7bbdece71d6"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1NzcxNjU4OnYy", "diffSide": "LEFT", "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/Symbol.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxNjowNDoyM1rOGW945g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxODoyOTo0MFrOGXC3Hg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjczNTg0Ng==", "bodyText": "two instances of different subclasses could theoretically compare equal.\n\nDoesn't this if statement prevent that?", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1407#discussion_r426735846", "createdAt": "2020-05-18T16:04:23Z", "author": {"login": "suztomo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/Symbol.java", "diffHunk": "@@ -47,21 +46,10 @@ String getClassBinaryName() {\n   }\n \n   @Override\n-  public boolean equals(Object other) {\n-    if (this == other) {\n-      return true;\n-    }\n-    if (other == null || getClass() != other.getClass()) {\n-      return false;\n-    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "db6753d4d445a2d3ffea244ef862c7bbdece71d6"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjc0MzM3Mg==", "bodyText": "You're right. It does.\nIt still means subclasses can be created with additional data that is not considered in an equality comparison. Mostly it's a little disconcerting to have an equals method that should always be overridden, especially in an abstract class.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1407#discussion_r426743372", "createdAt": "2020-05-18T16:15:53Z", "author": {"login": "elharo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/Symbol.java", "diffHunk": "@@ -47,21 +46,10 @@ String getClassBinaryName() {\n   }\n \n   @Override\n-  public boolean equals(Object other) {\n-    if (this == other) {\n-      return true;\n-    }\n-    if (other == null || getClass() != other.getClass()) {\n-      return false;\n-    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjczNTg0Ng=="}, "originalCommit": {"oid": "db6753d4d445a2d3ffea244ef862c7bbdece71d6"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjgxNzMxMA==", "bodyText": "It still means subclasses can be created with additional data that is not considered in an equality comparison.\n\nI'm not sure this change is an improvement on that. Even with this PR, a subclass can declare an additional data that's not considered in equality comparison.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1407#discussion_r426817310", "createdAt": "2020-05-18T18:29:40Z", "author": {"login": "suztomo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/Symbol.java", "diffHunk": "@@ -47,21 +46,10 @@ String getClassBinaryName() {\n   }\n \n   @Override\n-  public boolean equals(Object other) {\n-    if (this == other) {\n-      return true;\n-    }\n-    if (other == null || getClass() != other.getClass()) {\n-      return false;\n-    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjczNTg0Ng=="}, "originalCommit": {"oid": "db6753d4d445a2d3ffea244ef862c7bbdece71d6"}, "originalPosition": 18}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2758, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}