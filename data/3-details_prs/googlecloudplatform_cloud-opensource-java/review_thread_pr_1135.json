{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYzODA2MjAy", "number": 1135, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQxOToyNToyOFrODYnY3A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQxNToxMzoxMlrODZ3fIA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3MTM3NzU2OnYy", "diffSide": "LEFT", "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/ClassPathBuilder.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQxOToyNToyOFrOFek3Ow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQxOToyNToyOFrOFek3Ow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzYwNTU2Mw==", "bodyText": "This method is removed, in favor of classPathResult.getClassPath()", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1135#discussion_r367605563", "createdAt": "2020-01-16T19:25:28Z", "author": {"login": "suztomo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/ClassPathBuilder.java", "diffHunk": "@@ -52,44 +52,19 @@ public ClassPathBuilder(DependencyGraphBuilder dependencyGraphBuilder) {\n   }\n \n   /**\n-   * Finds jar file paths for Maven artifacts and their transitive dependencies, using Maven's\n-   * dependency mediation strategy.\n-   *\n-   * @param artifacts Maven artifacts to check\n-   * @return list of absolute paths to jar files\n-   * @throws RepositoryException when there is a problem retrieving jar files\n-   */\n-  public ImmutableList<Path> artifactsToClasspath(List<Artifact> artifacts)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a2dc1f7d9cd2ff0950b2c4d01e5b80c2018d52f5"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3MTM4MDgxOnYy", "diffSide": "LEFT", "path": "dependencies/src/test/java/com/google/cloud/tools/opensource/classpath/ClassDumperTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQxOToyNjozOFrOFek5QA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQxOToyNjozOFrOFek5QA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzYwNjA4MA==", "bodyText": "There were many typos to use grpcArtifact variable name for artifacts not related to grpc.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1135#discussion_r367606080", "createdAt": "2020-01-16T19:26:38Z", "author": {"login": "suztomo"}, "path": "dependencies/src/test/java/com/google/cloud/tools/opensource/classpath/ClassDumperTest.java", "diffHunk": "@@ -336,8 +334,7 @@ public void testIsUnusedClassSymbolReference_multiReleaseJar()\n       throws IOException, RepositoryException {\n     // org.graalvm.libgraal.LibGraal class has different implementations between Java 8 and 11 via\n     // Multi-release JAR of this artifact.\n-    Artifact grpcArtifact = new DefaultArtifact(\"org.graalvm.compiler:compiler:19.0.0\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a2dc1f7d9cd2ff0950b2c4d01e5b80c2018d52f5"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3MTM4NzIxOnYy", "diffSide": "RIGHT", "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/LinkageCheckerMain.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQxOToyODo1MVrOFek9OA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQxOToyODo1MVrOFek9OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzYwNzA5Ng==", "bodyText": "This is the goal of this PR. LinkageCheckerMain prints artifact problems if any.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1135#discussion_r367607096", "createdAt": "2020-01-16T19:28:51Z", "author": {"login": "suztomo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/LinkageCheckerMain.java", "diffHunk": "@@ -73,6 +81,10 @@ public static void main(String[] arguments)\n     }\n \n     System.out.println(SymbolProblem.formatSymbolProblems(symbolProblems));\n-  }\n \n+    if (!artifactProblems.isEmpty()) {\n+      System.out.println(\"\\n\");\n+      System.out.println(ArtifactProblem.formatProblems(artifactProblems));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a2dc1f7d9cd2ff0950b2c4d01e5b80c2018d52f5"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3MTM4OTIwOnYy", "diffSide": "RIGHT", "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/ClassPathResult.java", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQxOToyOTozMFrOFek-ag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQxNToxMjoyMVrOFgfsZg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzYwNzQwMg==", "bodyText": "I still think we're missing an abstraction here. We have problems of which there are several subtypes including missing artifacts and linkage errors. The linkage errors we don't have a class for. Instead we're storing them as an entry in the multimap.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1135#discussion_r367607402", "createdAt": "2020-01-16T19:29:30Z", "author": {"login": "elharo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/ClassPathResult.java", "diffHunk": "@@ -0,0 +1,65 @@\n+/*\n+ * Copyright 2020 Google LLC.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.cloud.tools.opensource.classpath;\n+\n+import com.google.cloud.tools.opensource.dependencies.DependencyPath;\n+import com.google.cloud.tools.opensource.dependencies.UnresolvableArtifactProblem;\n+import com.google.common.collect.ImmutableList;\n+import com.google.common.collect.ImmutableListMultimap;\n+import com.google.common.collect.LinkedListMultimap;\n+import java.nio.file.Path;\n+\n+/** Result of class path resolution with {@link UnresolvableArtifactProblem}s if any. */\n+public final class ClassPathResult {\n+\n+  private final ImmutableList<Path> classPath;\n+  private final ImmutableListMultimap<Path, DependencyPath> dependencyPaths;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a2dc1f7d9cd2ff0950b2c4d01e5b80c2018d52f5"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTI1NzUxOQ==", "bodyText": "Ping", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1135#discussion_r369257519", "createdAt": "2020-01-21T21:40:32Z", "author": {"login": "elharo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/ClassPathResult.java", "diffHunk": "@@ -0,0 +1,65 @@\n+/*\n+ * Copyright 2020 Google LLC.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.cloud.tools.opensource.classpath;\n+\n+import com.google.cloud.tools.opensource.dependencies.DependencyPath;\n+import com.google.cloud.tools.opensource.dependencies.UnresolvableArtifactProblem;\n+import com.google.common.collect.ImmutableList;\n+import com.google.common.collect.ImmutableListMultimap;\n+import com.google.common.collect.LinkedListMultimap;\n+import java.nio.file.Path;\n+\n+/** Result of class path resolution with {@link UnresolvableArtifactProblem}s if any. */\n+public final class ClassPathResult {\n+\n+  private final ImmutableList<Path> classPath;\n+  private final ImmutableListMultimap<Path, DependencyPath> dependencyPaths;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzYwNzQwMg=="}, "originalCommit": {"oid": "a2dc1f7d9cd2ff0950b2c4d01e5b80c2018d52f5"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTI3NTI4NA==", "bodyText": "This multimap (ImmutableListMultimap<Path, DependencyPath> dependencyPaths) is not SymbolProblems or ArtifactProblems. This is dependency path to Maven artifacts.\nFor a better representation of linkage errors, I had created an issue #1083. This PR does not take care of this.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1135#discussion_r369275284", "createdAt": "2020-01-21T22:22:35Z", "author": {"login": "suztomo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/ClassPathResult.java", "diffHunk": "@@ -0,0 +1,65 @@\n+/*\n+ * Copyright 2020 Google LLC.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.cloud.tools.opensource.classpath;\n+\n+import com.google.cloud.tools.opensource.dependencies.DependencyPath;\n+import com.google.cloud.tools.opensource.dependencies.UnresolvableArtifactProblem;\n+import com.google.common.collect.ImmutableList;\n+import com.google.common.collect.ImmutableListMultimap;\n+import com.google.common.collect.LinkedListMultimap;\n+import java.nio.file.Path;\n+\n+/** Result of class path resolution with {@link UnresolvableArtifactProblem}s if any. */\n+public final class ClassPathResult {\n+\n+  private final ImmutableList<Path> classPath;\n+  private final ImmutableListMultimap<Path, DependencyPath> dependencyPaths;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzYwNzQwMg=="}, "originalCommit": {"oid": "a2dc1f7d9cd2ff0950b2c4d01e5b80c2018d52f5"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTYwNDE0MA==", "bodyText": "#1083 is about the output format. My question is about the data structures we're using in the code itself.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1135#discussion_r369604140", "createdAt": "2020-01-22T14:49:54Z", "author": {"login": "elharo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/ClassPathResult.java", "diffHunk": "@@ -0,0 +1,65 @@\n+/*\n+ * Copyright 2020 Google LLC.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.cloud.tools.opensource.classpath;\n+\n+import com.google.cloud.tools.opensource.dependencies.DependencyPath;\n+import com.google.cloud.tools.opensource.dependencies.UnresolvableArtifactProblem;\n+import com.google.common.collect.ImmutableList;\n+import com.google.common.collect.ImmutableListMultimap;\n+import com.google.common.collect.LinkedListMultimap;\n+import java.nio.file.Path;\n+\n+/** Result of class path resolution with {@link UnresolvableArtifactProblem}s if any. */\n+public final class ClassPathResult {\n+\n+  private final ImmutableList<Path> classPath;\n+  private final ImmutableListMultimap<Path, DependencyPath> dependencyPaths;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzYwNzQwMg=="}, "originalCommit": {"oid": "a2dc1f7d9cd2ff0950b2c4d01e5b80c2018d52f5"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTYxODAyMg==", "bodyText": "Created #1139.\nThis line (line 30) is not linkage errors or artifact problems.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1135#discussion_r369618022", "createdAt": "2020-01-22T15:12:21Z", "author": {"login": "suztomo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/ClassPathResult.java", "diffHunk": "@@ -0,0 +1,65 @@\n+/*\n+ * Copyright 2020 Google LLC.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.cloud.tools.opensource.classpath;\n+\n+import com.google.cloud.tools.opensource.dependencies.DependencyPath;\n+import com.google.cloud.tools.opensource.dependencies.UnresolvableArtifactProblem;\n+import com.google.common.collect.ImmutableList;\n+import com.google.common.collect.ImmutableListMultimap;\n+import com.google.common.collect.LinkedListMultimap;\n+import java.nio.file.Path;\n+\n+/** Result of class path resolution with {@link UnresolvableArtifactProblem}s if any. */\n+public final class ClassPathResult {\n+\n+  private final ImmutableList<Path> classPath;\n+  private final ImmutableListMultimap<Path, DependencyPath> dependencyPaths;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzYwNzQwMg=="}, "originalCommit": {"oid": "a2dc1f7d9cd2ff0950b2c4d01e5b80c2018d52f5"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3MTY3NzM3OnYy", "diffSide": "RIGHT", "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/ClassPathResult.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQyMToxNTo0MVrOFenypA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQyMTo0MDoyMFrOFgr7Yg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzY1MzU0MA==", "bodyText": "A side note: this multimap will help to implement #1095 \"Linkage Checker to report which version of a library has expected symbols\".", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1135#discussion_r367653540", "createdAt": "2020-01-16T21:15:41Z", "author": {"login": "suztomo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/ClassPathResult.java", "diffHunk": "@@ -0,0 +1,65 @@\n+/*\n+ * Copyright 2020 Google LLC.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.cloud.tools.opensource.classpath;\n+\n+import com.google.cloud.tools.opensource.dependencies.DependencyPath;\n+import com.google.cloud.tools.opensource.dependencies.UnresolvableArtifactProblem;\n+import com.google.common.collect.ImmutableList;\n+import com.google.common.collect.ImmutableListMultimap;\n+import com.google.common.collect.LinkedListMultimap;\n+import java.nio.file.Path;\n+\n+/** Result of class path resolution with {@link UnresolvableArtifactProblem}s if any. */\n+public final class ClassPathResult {\n+\n+  private final ImmutableList<Path> classPath;\n+  private final ImmutableListMultimap<Path, DependencyPath> dependencyPaths;\n+  private final ImmutableList<UnresolvableArtifactProblem> artifactProblems;\n+\n+  ClassPathResult(\n+      LinkedListMultimap<Path, DependencyPath> dependencyPaths,\n+      Iterable<UnresolvableArtifactProblem> artifactProblems) {\n+    this.dependencyPaths = ImmutableListMultimap.copyOf(dependencyPaths);\n+    this.classPath = ImmutableList.copyOf(dependencyPaths.keySet());\n+    this.artifactProblems = ImmutableList.copyOf(artifactProblems);\n+  }\n+  ;\n+\n+  /** Returns the list of absolute paths to JAR files of resolved Maven artifacts. */\n+  public ImmutableList<Path> getClassPath() {\n+    return classPath;\n+  }\n+\n+  /**\n+   * Returns an ordered map of absolute paths of JAR files to one or more Maven dependency paths.\n+   *\n+   * <p>The keys of the returned map represent jar files of {@code artifacts} and their transitive\n+   * dependencies. The return value of {@link LinkedListMultimap#keySet()} preserves key iteration\n+   * order.\n+   *\n+   * <p>The values of the returned map for a key (jar file) represent the different Maven dependency\n+   * paths from {@code artifacts} to the Maven artifact of the jar file.\n+   */\n+  public ImmutableListMultimap<Path, DependencyPath> getDependencyPaths() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a2dc1f7d9cd2ff0950b2c4d01e5b80c2018d52f5"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTc0MTE4Ng==", "bodyText": "Why return a list here instead of letting this object offer a DependencyPath for an entry in the classpath? That is something like\npublic DependencyPath getDependencyPath(Path path)", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1135#discussion_r369741186", "createdAt": "2020-01-22T18:54:12Z", "author": {"login": "elharo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/ClassPathResult.java", "diffHunk": "@@ -0,0 +1,65 @@\n+/*\n+ * Copyright 2020 Google LLC.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.cloud.tools.opensource.classpath;\n+\n+import com.google.cloud.tools.opensource.dependencies.DependencyPath;\n+import com.google.cloud.tools.opensource.dependencies.UnresolvableArtifactProblem;\n+import com.google.common.collect.ImmutableList;\n+import com.google.common.collect.ImmutableListMultimap;\n+import com.google.common.collect.LinkedListMultimap;\n+import java.nio.file.Path;\n+\n+/** Result of class path resolution with {@link UnresolvableArtifactProblem}s if any. */\n+public final class ClassPathResult {\n+\n+  private final ImmutableList<Path> classPath;\n+  private final ImmutableListMultimap<Path, DependencyPath> dependencyPaths;\n+  private final ImmutableList<UnresolvableArtifactProblem> artifactProblems;\n+\n+  ClassPathResult(\n+      LinkedListMultimap<Path, DependencyPath> dependencyPaths,\n+      Iterable<UnresolvableArtifactProblem> artifactProblems) {\n+    this.dependencyPaths = ImmutableListMultimap.copyOf(dependencyPaths);\n+    this.classPath = ImmutableList.copyOf(dependencyPaths.keySet());\n+    this.artifactProblems = ImmutableList.copyOf(artifactProblems);\n+  }\n+  ;\n+\n+  /** Returns the list of absolute paths to JAR files of resolved Maven artifacts. */\n+  public ImmutableList<Path> getClassPath() {\n+    return classPath;\n+  }\n+\n+  /**\n+   * Returns an ordered map of absolute paths of JAR files to one or more Maven dependency paths.\n+   *\n+   * <p>The keys of the returned map represent jar files of {@code artifacts} and their transitive\n+   * dependencies. The return value of {@link LinkedListMultimap#keySet()} preserves key iteration\n+   * order.\n+   *\n+   * <p>The values of the returned map for a key (jar file) represent the different Maven dependency\n+   * paths from {@code artifacts} to the Maven artifact of the jar file.\n+   */\n+  public ImmutableListMultimap<Path, DependencyPath> getDependencyPaths() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzY1MzU0MA=="}, "originalCommit": {"oid": "a2dc1f7d9cd2ff0950b2c4d01e5b80c2018d52f5"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTgxODQ2Ng==", "bodyText": "That's nice idea. Updated.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1135#discussion_r369818466", "createdAt": "2020-01-22T21:40:20Z", "author": {"login": "suztomo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/ClassPathResult.java", "diffHunk": "@@ -0,0 +1,65 @@\n+/*\n+ * Copyright 2020 Google LLC.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.cloud.tools.opensource.classpath;\n+\n+import com.google.cloud.tools.opensource.dependencies.DependencyPath;\n+import com.google.cloud.tools.opensource.dependencies.UnresolvableArtifactProblem;\n+import com.google.common.collect.ImmutableList;\n+import com.google.common.collect.ImmutableListMultimap;\n+import com.google.common.collect.LinkedListMultimap;\n+import java.nio.file.Path;\n+\n+/** Result of class path resolution with {@link UnresolvableArtifactProblem}s if any. */\n+public final class ClassPathResult {\n+\n+  private final ImmutableList<Path> classPath;\n+  private final ImmutableListMultimap<Path, DependencyPath> dependencyPaths;\n+  private final ImmutableList<UnresolvableArtifactProblem> artifactProblems;\n+\n+  ClassPathResult(\n+      LinkedListMultimap<Path, DependencyPath> dependencyPaths,\n+      Iterable<UnresolvableArtifactProblem> artifactProblems) {\n+    this.dependencyPaths = ImmutableListMultimap.copyOf(dependencyPaths);\n+    this.classPath = ImmutableList.copyOf(dependencyPaths.keySet());\n+    this.artifactProblems = ImmutableList.copyOf(artifactProblems);\n+  }\n+  ;\n+\n+  /** Returns the list of absolute paths to JAR files of resolved Maven artifacts. */\n+  public ImmutableList<Path> getClassPath() {\n+    return classPath;\n+  }\n+\n+  /**\n+   * Returns an ordered map of absolute paths of JAR files to one or more Maven dependency paths.\n+   *\n+   * <p>The keys of the returned map represent jar files of {@code artifacts} and their transitive\n+   * dependencies. The return value of {@link LinkedListMultimap#keySet()} preserves key iteration\n+   * order.\n+   *\n+   * <p>The values of the returned map for a key (jar file) represent the different Maven dependency\n+   * paths from {@code artifacts} to the Maven artifact of the jar file.\n+   */\n+  public ImmutableListMultimap<Path, DependencyPath> getDependencyPaths() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzY1MzU0MA=="}, "originalCommit": {"oid": "a2dc1f7d9cd2ff0950b2c4d01e5b80c2018d52f5"}, "originalPosition": 57}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4MjE3NTY5OnYy", "diffSide": "RIGHT", "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/ClassPathResult.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQyMTo0MDoxMlrOFgJrlQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQyMjoyMToyMlrOFgKv1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTI1NzM2NQ==", "bodyText": "ClasspathProblems?", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1135#discussion_r369257365", "createdAt": "2020-01-21T21:40:12Z", "author": {"login": "elharo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/ClassPathResult.java", "diffHunk": "@@ -0,0 +1,65 @@\n+/*\n+ * Copyright 2020 Google LLC.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.cloud.tools.opensource.classpath;\n+\n+import com.google.cloud.tools.opensource.dependencies.DependencyPath;\n+import com.google.cloud.tools.opensource.dependencies.UnresolvableArtifactProblem;\n+import com.google.common.collect.ImmutableList;\n+import com.google.common.collect.ImmutableListMultimap;\n+import com.google.common.collect.LinkedListMultimap;\n+import java.nio.file.Path;\n+\n+/** Result of class path resolution with {@link UnresolvableArtifactProblem}s if any. */\n+public final class ClassPathResult {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a2dc1f7d9cd2ff0950b2c4d01e5b80c2018d52f5"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTI3NDgzNg==", "bodyText": "This is not just problems but includes the result of class path resolution classPath.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1135#discussion_r369274836", "createdAt": "2020-01-21T22:21:22Z", "author": {"login": "suztomo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/ClassPathResult.java", "diffHunk": "@@ -0,0 +1,65 @@\n+/*\n+ * Copyright 2020 Google LLC.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.cloud.tools.opensource.classpath;\n+\n+import com.google.cloud.tools.opensource.dependencies.DependencyPath;\n+import com.google.cloud.tools.opensource.dependencies.UnresolvableArtifactProblem;\n+import com.google.common.collect.ImmutableList;\n+import com.google.common.collect.ImmutableListMultimap;\n+import com.google.common.collect.LinkedListMultimap;\n+import java.nio.file.Path;\n+\n+/** Result of class path resolution with {@link UnresolvableArtifactProblem}s if any. */\n+public final class ClassPathResult {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTI1NzM2NQ=="}, "originalCommit": {"oid": "a2dc1f7d9cd2ff0950b2c4d01e5b80c2018d52f5"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4NDUwMDgwOnYy", "diffSide": "RIGHT", "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/ClassPathResult.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQxNToxMzoxMlrOFgfuaw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQxNToxMzoxMlrOFgfuaw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTYxODUzOQ==", "bodyText": "This field holds artifact problems encountered while resolving a class path.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1135#discussion_r369618539", "createdAt": "2020-01-22T15:13:12Z", "author": {"login": "suztomo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/ClassPathResult.java", "diffHunk": "@@ -0,0 +1,65 @@\n+/*\n+ * Copyright 2020 Google LLC.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.cloud.tools.opensource.classpath;\n+\n+import com.google.cloud.tools.opensource.dependencies.DependencyPath;\n+import com.google.cloud.tools.opensource.dependencies.UnresolvableArtifactProblem;\n+import com.google.common.collect.ImmutableList;\n+import com.google.common.collect.ImmutableListMultimap;\n+import com.google.common.collect.LinkedListMultimap;\n+import java.nio.file.Path;\n+\n+/** Result of class path resolution with {@link UnresolvableArtifactProblem}s if any. */\n+public final class ClassPathResult {\n+\n+  private final ImmutableList<Path> classPath;\n+  private final ImmutableListMultimap<Path, DependencyPath> dependencyPaths;\n+  private final ImmutableList<UnresolvableArtifactProblem> artifactProblems;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a2dc1f7d9cd2ff0950b2c4d01e5b80c2018d52f5"}, "originalPosition": 31}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2874, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}