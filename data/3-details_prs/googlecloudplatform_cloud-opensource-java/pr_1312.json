{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkzODQxNjM2", "number": 1312, "title": "Replace List<Path> with List<ClassPathEntry>", "bodyText": "Fixes #1179 . Replacing List<Path> that represents class paths, with List<ClassPathEntry>.", "createdAt": "2020-03-25T21:39:55Z", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1312", "merged": true, "mergeCommit": {"oid": "31dc69a555a6bcd76d73d367d91bcac7e67fc44c"}, "closed": true, "closedAt": "2020-03-27T16:18:28Z", "author": {"login": "suztomo"}, "timelineItems": {"totalCount": 26, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcRNzPqAH2gAyMzkzODQxNjM2OjBkYzg0YjQ0MjJlYTVjNzM3ZjhmNjk4YmYyZjMyYzkwZWU4YmI1ZjA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcRylQ4gFqTM4Mjk3MTk2Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "0dc84b4422ea5c737f8f698bf2f32c90ee8bb5f0", "author": {"user": {"login": "suztomo", "name": "Tomo Suzuki"}}, "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/0dc84b4422ea5c737f8f698bf2f32c90ee8bb5f0", "committedDate": "2020-03-25T20:47:32Z", "message": "Compiles"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ebff3100c1f203f35a484a5870954fa9e13f1be2", "author": {"user": {"login": "suztomo", "name": "Tomo Suzuki"}}, "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/ebff3100c1f203f35a484a5870954fa9e13f1be2", "committedDate": "2020-03-25T20:48:49Z", "message": "Formatted"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f8ccac8c67b3e1037faefe21e95f51d715fc2344", "author": {"user": {"login": "suztomo", "name": "Tomo Suzuki"}}, "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/f8ccac8c67b3e1037faefe21e95f51d715fc2344", "committedDate": "2020-03-25T20:53:12Z", "message": "Renamed ClassInJarTest to ClassFileTest"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a4413912821fbc11d5bbe0df60f1f6b1948fa4ee", "author": {"user": {"login": "suztomo", "name": "Tomo Suzuki"}}, "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/a4413912821fbc11d5bbe0df60f1f6b1948fa4ee", "committedDate": "2020-03-25T21:08:52Z", "message": "Moved PATH_FILE_NAMES to TestHelper"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d52e3c8c8c0fff13b9d956430eb810622e5af250", "author": {"user": {"login": "suztomo", "name": "Tomo Suzuki"}}, "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/d52e3c8c8c0fff13b9d956430eb810622e5af250", "committedDate": "2020-03-25T21:24:41Z", "message": "LinkageCheckerTest passes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "273e67978389d314e50b8ad807a3c8f747245b28", "author": {"user": {"login": "suztomo", "name": "Tomo Suzuki"}}, "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/273e67978389d314e50b8ad807a3c8f747245b28", "committedDate": "2020-03-25T21:32:22Z", "message": "LinkageCheckerArgumentsTest passes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4d17cd204ebe37e4d3d20cce2bc02715108071ba", "author": {"user": {"login": "suztomo", "name": "Tomo Suzuki"}}, "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/4d17cd204ebe37e4d3d20cce2bc02715108071ba", "committedDate": "2020-03-25T21:37:35Z", "message": "ClassPathBuilderTest passes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "58a02b0f4ee770fa92849fe7221c3b26e92b9272", "author": {"user": {"login": "suztomo", "name": "Tomo Suzuki"}}, "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/58a02b0f4ee770fa92849fe7221c3b26e92b9272", "committedDate": "2020-03-25T21:49:14Z", "message": "Project compiles"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7d10139e27529195380431df0350c8eb046fbb09", "author": {"user": {"login": "suztomo", "name": "Tomo Suzuki"}}, "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/7d10139e27529195380431df0350c8eb046fbb09", "committedDate": "2020-03-25T22:13:05Z", "message": "Merge remote-tracking branch 'origin/master' into i1179"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dd84b25278c5e97c06f7274a58b79d72bf0929ca", "author": {"user": {"login": "suztomo", "name": "Tomo Suzuki"}}, "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/dd84b25278c5e97c06f7274a58b79d72bf0929ca", "committedDate": "2020-03-25T22:13:10Z", "message": "Dashboard tests pass"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgxNTcxOTQ2", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1312#pullrequestreview-381571946", "createdAt": "2020-03-25T22:07:01Z", "commit": {"oid": "58a02b0f4ee770fa92849fe7221c3b26e92b9272"}, "state": "COMMENTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQyMjowNzowMVrOF7wLmA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQyMjoxMTozNFrOF7wTQw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODE5OTcwNA==", "bodyText": "I wasn't thinking of BOMs as classpath entries. They're not, are they?", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1312#discussion_r398199704", "createdAt": "2020-03-25T22:07:01Z", "author": {"login": "elharo"}, "path": "boms/integration-tests/src/test/java/com/google/cloud/MaximumLinkageErrorsTest.java", "diffHunk": "@@ -46,7 +46,7 @@ public void testForNewLinkageErrors()\n     String baselineCoordinates = \"com.google.cloud:libraries-bom:\" + version;\n     Bom baseline = RepositoryUtility.readBom(baselineCoordinates);\n \n-    Path bomFile = Paths.get(\"../cloud-oss-bom/pom.xml\");\n+    ClassPathEntry bomFile = Paths.get(\"../cloud-oss-bom/pom.xml\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "58a02b0f4ee770fa92849fe7221c3b26e92b9272"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODIwMDIzNQ==", "bodyText": "Not for this PR, but this is another place where  custom type makes sense.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1312#discussion_r398200235", "createdAt": "2020-03-25T22:08:16Z", "author": {"login": "elharo"}, "path": "dashboard/src/main/java/com/google/cloud/tools/opensource/dashboard/DashboardMain.java", "diffHunk": "@@ -222,7 +224,7 @@ private static Path generateHtml(\n     copyResource(output, \"css/dashboard.css\");\n     copyResource(output, \"js/dashboard.js\");\n \n-    ImmutableMap<Path, ImmutableSetMultimap<SymbolProblem, String>> symbolProblemTable =\n+    ImmutableMap<ClassPathEntry, ImmutableSetMultimap<SymbolProblem, String>> symbolProblemTable =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "58a02b0f4ee770fa92849fe7221c3b26e92b9272"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODIwMTAwNg==", "bodyText": "another opportunity for a more specific class type", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1312#discussion_r398201006", "createdAt": "2020-03-25T22:09:56Z", "author": {"login": "elharo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/ClassDumper.java", "diffHunk": "@@ -72,40 +74,42 @@\n class ClassDumper {\n   private static final Logger logger = Logger.getLogger(ClassDumper.class.getName());\n \n-  private final ImmutableList<Path> inputClassPath;\n+  private final ImmutableList<ClassPathEntry> inputClassPath;\n   private final FixedSizeClassPathRepository classRepository;\n   private final ClassLoader extensionClassLoader;\n-  private final ImmutableSetMultimap<Path, String> jarFileToClassFileNames;\n-  private final ImmutableListMultimap<String, Path> classFileNameToJarFiles;\n+  private final ImmutableSetMultimap<ClassPathEntry, String> classPathEntryToClassFileNames;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "58a02b0f4ee770fa92849fe7221c3b26e92b9272"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODIwMTIxOQ==", "bodyText": "Indeed one type could replace both of these fields", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1312#discussion_r398201219", "createdAt": "2020-03-25T22:10:26Z", "author": {"login": "elharo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/ClassDumper.java", "diffHunk": "@@ -72,40 +74,42 @@\n class ClassDumper {\n   private static final Logger logger = Logger.getLogger(ClassDumper.class.getName());\n \n-  private final ImmutableList<Path> inputClassPath;\n+  private final ImmutableList<ClassPathEntry> inputClassPath;\n   private final FixedSizeClassPathRepository classRepository;\n   private final ClassLoader extensionClassLoader;\n-  private final ImmutableSetMultimap<Path, String> jarFileToClassFileNames;\n-  private final ImmutableListMultimap<String, Path> classFileNameToJarFiles;\n+  private final ImmutableSetMultimap<ClassPathEntry, String> classPathEntryToClassFileNames;\n+  private final ImmutableListMultimap<String, ClassPathEntry> classFileNameToClassPathEntry;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "58a02b0f4ee770fa92849fe7221c3b26e92b9272"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODIwMTQ5Nw==", "bodyText": "why doesn't getPath return a Path? Should it?", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1312#discussion_r398201497", "createdAt": "2020-03-25T22:11:10Z", "author": {"login": "elharo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/ClassDumper.java", "diffHunk": "@@ -72,40 +74,42 @@\n class ClassDumper {\n   private static final Logger logger = Logger.getLogger(ClassDumper.class.getName());\n \n-  private final ImmutableList<Path> inputClassPath;\n+  private final ImmutableList<ClassPathEntry> inputClassPath;\n   private final FixedSizeClassPathRepository classRepository;\n   private final ClassLoader extensionClassLoader;\n-  private final ImmutableSetMultimap<Path, String> jarFileToClassFileNames;\n-  private final ImmutableListMultimap<String, Path> classFileNameToJarFiles;\n+  private final ImmutableSetMultimap<ClassPathEntry, String> classPathEntryToClassFileNames;\n+  private final ImmutableListMultimap<String, ClassPathEntry> classFileNameToClassPathEntry;\n \n-  private static FixedSizeClassPathRepository createClassRepository(List<Path> paths) {\n-    ClassPath classPath = new LinkageCheckClassPath(paths);\n+  private static FixedSizeClassPathRepository createClassRepository(List<ClassPathEntry> entries) {\n+    ClassPath classPath = new LinkageCheckClassPath(entries);\n     return new FixedSizeClassPathRepository(classPath);\n   }\n \n-  static ClassDumper create(List<Path> jarPaths) throws IOException {\n+  static ClassDumper create(List<ClassPathEntry> entries) throws IOException {\n     ClassLoader systemClassLoader = ClassLoader.getSystemClassLoader();\n     ClassLoader extensionClassLoader = systemClassLoader.getParent();\n \n     ImmutableList<Path> unreadableFiles =\n-        jarPaths.stream()\n+        entries.stream()\n+            .map(ClassPathEntry::getPath)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "58a02b0f4ee770fa92849fe7221c3b26e92b9272"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODIwMTY2Nw==", "bodyText": "need to update javadoc too", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1312#discussion_r398201667", "createdAt": "2020-03-25T22:11:34Z", "author": {"login": "elharo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/ClassDumper.java", "diffHunk": "@@ -323,14 +327,14 @@ private static FieldSymbol makeSymbol(\n    * Returns the first jar file {@link Path} defining the class. Null if the location is unknown.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "58a02b0f4ee770fa92849fe7221c3b26e92b9272"}, "originalPosition": 92}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7062753ed11a7421aaa23c10c9386bb6b354eee3", "author": {"user": {"login": "suztomo", "name": "Tomo Suzuki"}}, "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/7062753ed11a7421aaa23c10c9386bb6b354eee3", "committedDate": "2020-03-25T22:17:44Z", "message": "LinkageMonitorTest passes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgxNTg1MjU2", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1312#pullrequestreview-381585256", "createdAt": "2020-03-25T22:31:20Z", "commit": {"oid": "7062753ed11a7421aaa23c10c9386bb6b354eee3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQyMjozMToyMVrOF7w2Uw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQyMjozMToyMVrOF7w2Uw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODIxMDY0Mw==", "bodyText": "No toString conversion from java.nio.file.Path any more.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1312#discussion_r398210643", "createdAt": "2020-03-25T22:31:21Z", "author": {"login": "suztomo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/LinkageCheckClassPath.java", "diffHunk": "@@ -51,10 +50,13 @@\n   /**\n    * Constructs a classpath for check.\n    *\n-   * @param paths list of absolute paths for the elements in the class path\n+   * @param entries the elements in the class path\n    */\n-  LinkageCheckClassPath(List<Path> paths) {\n-    super(paths.stream().map(Path::toString).collect(Collectors.joining(File.pathSeparator)));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7062753ed11a7421aaa23c10c9386bb6b354eee3"}, "originalPosition": 16}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "879dc02c5b8bb5dafd0c41f75ee1df84bbb1762e", "author": {"user": {"login": "suztomo", "name": "Tomo Suzuki"}}, "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/879dc02c5b8bb5dafd0c41f75ee1df84bbb1762e", "committedDate": "2020-03-26T15:44:32Z", "message": "Updating Javadoc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d421d836ca1ae2886027d565c3b8006d48ae6bda", "author": {"user": {"login": "suztomo", "name": "Tomo Suzuki"}}, "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/d421d836ca1ae2886027d565c3b8006d48ae6bda", "committedDate": "2020-03-26T16:02:59Z", "message": "Done javadoc"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgyMDgyMDc5", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1312#pullrequestreview-382082079", "createdAt": "2020-03-26T14:46:21Z", "commit": {"oid": "7062753ed11a7421aaa23c10c9386bb6b354eee3"}, "state": "COMMENTED", "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxNDo0NjoyMVrOF8KckQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxNjowNzoyNlrOF8Oa8g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODYzMDAzMw==", "bodyText": "Fixed.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1312#discussion_r398630033", "createdAt": "2020-03-26T14:46:21Z", "author": {"login": "suztomo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/ClassDumper.java", "diffHunk": "@@ -142,8 +146,8 @@ boolean isSystemClass(String className) {\n    *\n    * @param jarPath absolute path to the jar file", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7062753ed11a7421aaa23c10c9386bb6b354eee3"}, "originalPosition": 73}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODYzMDgyOQ==", "bodyText": "Updated.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1312#discussion_r398630829", "createdAt": "2020-03-26T14:47:20Z", "author": {"login": "suztomo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/ClassDumper.java", "diffHunk": "@@ -323,14 +327,14 @@ private static FieldSymbol makeSymbol(\n    * Returns the first jar file {@link Path} defining the class. Null if the location is unknown.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODIwMTY2Nw=="}, "originalCommit": {"oid": "58a02b0f4ee770fa92849fe7221c3b26e92b9272"}, "originalPosition": 92}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODYzMjMxOQ==", "bodyText": "Fixed.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1312#discussion_r398632319", "createdAt": "2020-03-26T14:49:09Z", "author": {"login": "suztomo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/ClassDumper.java", "diffHunk": "@@ -339,19 +343,19 @@ Path findClassLocation(String className) {\n     if (specialLocation == null) {\n       return null;\n     }\n-    return Iterables.getFirst(classFileNameToJarFiles.get(specialLocation), null);\n+    return Iterables.getFirst(classFileNameToClassPathEntry.get(specialLocation), null);\n   }\n \n   /**\n-   * Returns mapping from jar files to class file names they contain.\n+   * Returns mapping from class path entries to class file names they contain.\n    *\n    * @param jars absolute paths to jar files", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7062753ed11a7421aaa23c10c9386bb6b354eee3"}, "originalPosition": 122}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODYzNjIwMw==", "bodyText": "Fixed", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1312#discussion_r398636203", "createdAt": "2020-03-26T14:54:02Z", "author": {"login": "suztomo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/ClassDumper.java", "diffHunk": "@@ -383,7 +387,7 @@ Path findClassLocation(String className) {\n    * Returns a set of {@link JavaClass}es which have entries in the {@code jar} through {@link", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7062753ed11a7421aaa23c10c9386bb6b354eee3"}, "originalPosition": 148}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODY4NzUzNg==", "bodyText": "This has been moved to TestHelper.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1312#discussion_r398687536", "createdAt": "2020-03-26T15:57:40Z", "author": {"login": "suztomo"}, "path": "dependencies/src/test/java/com/google/cloud/tools/opensource/classpath/ClassPathBuilderTest.java", "diffHunk": "@@ -37,14 +37,9 @@\n import org.junit.Test;\n \n public class ClassPathBuilderTest {\n-\n-  static final Correspondence<Path, String> PATH_FILE_NAMES =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "879dc02c5b8bb5dafd0c41f75ee1df84bbb1762e"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODY5MDc4Mg==", "bodyText": "Because it's clear that b-1.0.0.jar is a JAR file and foo:b:1.0.0 is a Maven artifact, I removed \"Artifact\" and \"JAR\" from toString output.\nBackground: 7062753#r398695154", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1312#discussion_r398690782", "createdAt": "2020-03-26T16:01:40Z", "author": {"login": "suztomo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/ClassPathEntry.java", "diffHunk": "@@ -76,9 +80,17 @@ public int hashCode() {\n   @Override\n   public String toString() {\n     if (artifact != null) {\n-      return \"Artifact(\" + artifact + \")\";\n+      // Group ID, artifact ID and version. No extension such as \"jar\" or \"tar.gz\", because Linkage\n+      // Checker uses only JAR artifacts.\n+      return Artifacts.toCoordinates(artifact);\n     } else {\n-      return \"JAR(\" + jar + \")\";\n+      return jar.toString();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "879dc02c5b8bb5dafd0c41f75ee1df84bbb1762e"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODY5MzI1NA==", "bodyText": "They are not. Fixed.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1312#discussion_r398693254", "createdAt": "2020-03-26T16:04:55Z", "author": {"login": "suztomo"}, "path": "boms/integration-tests/src/test/java/com/google/cloud/MaximumLinkageErrorsTest.java", "diffHunk": "@@ -46,7 +46,7 @@ public void testForNewLinkageErrors()\n     String baselineCoordinates = \"com.google.cloud:libraries-bom:\" + version;\n     Bom baseline = RepositoryUtility.readBom(baselineCoordinates);\n \n-    Path bomFile = Paths.get(\"../cloud-oss-bom/pom.xml\");\n+    ClassPathEntry bomFile = Paths.get(\"../cloud-oss-bom/pom.xml\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODE5OTcwNA=="}, "originalCommit": {"oid": "58a02b0f4ee770fa92849fe7221c3b26e92b9272"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODY5NTE1NA==", "bodyText": "These \"JAR\" was not giving any information to readers.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1312#discussion_r398695154", "createdAt": "2020-03-26T16:07:26Z", "author": {"login": "suztomo"}, "path": "linkage-monitor/src/test/java/com/google/cloud/tools/dependencies/linkagemonitor/LinkageMonitorTest.java", "diffHunk": "@@ -143,14 +143,14 @@ public void generateMessageForNewError() {\n                 ImmutableList.of()));\n     assertEquals(\n         \"Newly introduced problem:\\n\"\n-            + \"(b-1.0.0.jar) io.grpc.protobuf.ProtoUtils's method\"\n+            + \"(JAR(foo/b-1.0.0.jar)) io.grpc.protobuf.ProtoUtils's method\"\n             + \" marshaller(com.google.protobuf.Message arg1) is not found\\n\"\n-            + \"  referenced from com.abc.AAA (a-1.2.3.jar)\\n\"\n-            + \"  referenced from com.abc.BBB (a-1.2.3.jar)\\n\"\n+            + \"  referenced from com.abc.AAA (JAR(foo/a-1.2.3.jar))\\n\"\n+            + \"  referenced from com.abc.BBB (JAR(foo/a-1.2.3.jar))\\n\"\n             + \"\\n\"\n-            + \"b-1.0.0.jar is at:\\n\"\n+            + \"JAR(foo/b-1.0.0.jar) is at:\\n\"\n             + \"  foo:b:1.2.3 (compile, optional)\\n\"\n-            + \"a-1.2.3.jar is at:\\n\"\n+            + \"JAR(foo/a-1.2.3.jar) is at:\\n\"\n             + \"  foo:bar:1.0.0 (provided) / foo:a:1.2.3 (compile, optional)\\n\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7062753ed11a7421aaa23c10c9386bb6b354eee3"}, "originalPosition": 17}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgyMTY1Mzcx", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1312#pullrequestreview-382165371", "createdAt": "2020-03-26T16:08:10Z", "commit": {"oid": "d421d836ca1ae2886027d565c3b8006d48ae6bda"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "18fca4248177d257a26760836c97525981ed3028", "author": {"user": {"login": "suztomo", "name": "Tomo Suzuki"}}, "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/18fca4248177d257a26760836c97525981ed3028", "committedDate": "2020-03-26T17:10:11Z", "message": "Path to pass Windows"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "caaeafa6b719179199ebb02b153a3f7464806500", "author": {"user": {"login": "suztomo", "name": "Tomo Suzuki"}}, "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/caaeafa6b719179199ebb02b153a3f7464806500", "committedDate": "2020-03-26T17:18:26Z", "message": "toAbsolutePath"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c0eba4d0b50d44c4a2a935c8afe9571e62d1729b", "author": {"user": {"login": "suztomo", "name": "Tomo Suzuki"}}, "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/c0eba4d0b50d44c4a2a935c8afe9571e62d1729b", "committedDate": "2020-03-26T17:49:30Z", "message": "javadoc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7f50f1b2f54307424da0b51ae3b1a1ba6296468e", "author": {"user": {"login": "suztomo", "name": "Tomo Suzuki"}}, "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/7f50f1b2f54307424da0b51ae3b1a1ba6296468e", "committedDate": "2020-03-27T03:21:33Z", "message": "Merge remote-tracking branch 'origin/master' into i1179"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgyNzc3ODcx", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1312#pullrequestreview-382777871", "createdAt": "2020-03-27T11:30:42Z", "commit": {"oid": "7f50f1b2f54307424da0b51ae3b1a1ba6296468e"}, "state": "COMMENTED", "comments": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxMTozMDo0MlrOF8tQ5Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxMTo0NTowM1rOF8tsWQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTIwMDQ4NQ==", "bodyText": "For later: we could perhaps push a lot of this into ClassPathResult whihc could become simply Classpath. Hide a lot of the implementation details.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1312#discussion_r399200485", "createdAt": "2020-03-27T11:30:42Z", "author": {"login": "elharo"}, "path": "dashboard/src/main/java/com/google/cloud/tools/opensource/dashboard/DashboardMain.java", "diffHunk": "@@ -263,10 +265,10 @@ static Configuration configureFreemarker() {\n    * Returns mapping from the Maven coordinates of BOM members to jar files that are in the\n    * dependency tree of the BOM members.\n    */\n-  private static ImmutableSetMultimap<String, Path> bomMemberToJars(\n+  private static ImmutableSetMultimap<String, ClassPathEntry> bomMemberToJars(\n       ClassPathResult classPathResult) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7f50f1b2f54307424da0b51ae3b1a1ba6296468e"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTIwMTY5Ng==", "bodyText": "They could convert to a string if that's what they want. It's surprising to have the method name inconsistent with the return type.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1312#discussion_r399201696", "createdAt": "2020-03-27T11:33:17Z", "author": {"login": "elharo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/ClassDumper.java", "diffHunk": "@@ -72,40 +74,42 @@\n class ClassDumper {\n   private static final Logger logger = Logger.getLogger(ClassDumper.class.getName());\n \n-  private final ImmutableList<Path> inputClassPath;\n+  private final ImmutableList<ClassPathEntry> inputClassPath;\n   private final FixedSizeClassPathRepository classRepository;\n   private final ClassLoader extensionClassLoader;\n-  private final ImmutableSetMultimap<Path, String> jarFileToClassFileNames;\n-  private final ImmutableListMultimap<String, Path> classFileNameToJarFiles;\n+  private final ImmutableSetMultimap<ClassPathEntry, String> classPathEntryToClassFileNames;\n+  private final ImmutableListMultimap<String, ClassPathEntry> classFileNameToClassPathEntry;\n \n-  private static FixedSizeClassPathRepository createClassRepository(List<Path> paths) {\n-    ClassPath classPath = new LinkageCheckClassPath(paths);\n+  private static FixedSizeClassPathRepository createClassRepository(List<ClassPathEntry> entries) {\n+    ClassPath classPath = new LinkageCheckClassPath(entries);\n     return new FixedSizeClassPathRepository(classPath);\n   }\n \n-  static ClassDumper create(List<Path> jarPaths) throws IOException {\n+  static ClassDumper create(List<ClassPathEntry> entries) throws IOException {\n     ClassLoader systemClassLoader = ClassLoader.getSystemClassLoader();\n     ClassLoader extensionClassLoader = systemClassLoader.getParent();\n \n     ImmutableList<Path> unreadableFiles =\n-        jarPaths.stream()\n+        entries.stream()\n+            .map(ClassPathEntry::getPath)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODIwMTQ5Nw=="}, "originalCommit": {"oid": "58a02b0f4ee770fa92849fe7221c3b26e92b9272"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTIwMjQyNQ==", "bodyText": "\"defined\" is perhaps not the right word here. Perhaps \"Found\"? Or maybe just classNamesInJar", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1312#discussion_r399202425", "createdAt": "2020-03-27T11:34:40Z", "author": {"login": "elharo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/ClassDumper.java", "diffHunk": "@@ -137,13 +141,9 @@ boolean isSystemClass(String className) {\n     }\n   }\n \n-  /**\n-   * Returns class file names defined in the jar file.\n-   *\n-   * @param jarPath absolute path to the jar file\n-   */\n-  ImmutableSet<String> classesDefinedInJar(Path jarPath) {\n-    return jarFileToClassFileNames.get(jarPath);\n+  /** Returns class file names defined in the class path entry. */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7f50f1b2f54307424da0b51ae3b1a1ba6296468e"}, "originalPosition": 82}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTIwMjU3Nw==", "bodyText": "defining --> containing", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1312#discussion_r399202577", "createdAt": "2020-03-27T11:34:57Z", "author": {"login": "elharo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/ClassDumper.java", "diffHunk": "@@ -319,18 +319,16 @@ private static FieldSymbol makeSymbol(\n     return innerClassNames.build();\n   }\n \n-  /**\n-   * Returns the first jar file {@link Path} defining the class. Null if the location is unknown.\n-   */\n+  /** Returns the first class path entry defining the class. Null if the location is unknown. */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7f50f1b2f54307424da0b51ae3b1a1ba6296468e"}, "originalPosition": 104}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTIwMjgwNQ==", "bodyText": "no period", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1312#discussion_r399202805", "createdAt": "2020-03-27T11:35:27Z", "author": {"login": "elharo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/ClassDumper.java", "diffHunk": "@@ -339,19 +337,19 @@ Path findClassLocation(String className) {\n     if (specialLocation == null) {\n       return null;\n     }\n-    return Iterables.getFirst(classFileNameToJarFiles.get(specialLocation), null);\n+    return Iterables.getFirst(classFileNameToClassPathEntry.get(specialLocation), null);\n   }\n \n   /**\n-   * Returns mapping from jar files to class file names they contain.\n+   * Returns mapping from class path entries to class file names they contain.\n    *\n-   * @param jars absolute paths to jar files\n+   * @param classPath class path entries in which it finds the class names.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7f50f1b2f54307424da0b51ae3b1a1ba6296468e"}, "originalPosition": 134}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTIwMzI1Mg==", "bodyText": "How does the repository work here? What if there are multiple repositories?", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1312#discussion_r399203252", "createdAt": "2020-03-27T11:36:25Z", "author": {"login": "elharo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/ClassDumper.java", "diffHunk": "@@ -380,15 +378,15 @@ Path findClassLocation(String className) {\n   }\n \n   /**\n-   * Returns a set of {@link JavaClass}es which have entries in the {@code jar} through {@link\n+   * Returns a set of {@link JavaClass}es which have entries in the {@code entry} through {@link\n    * #classRepository}.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7f50f1b2f54307424da0b51ae3b1a1ba6296468e"}, "originalPosition": 176}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTIwMzY3Mg==", "bodyText": "entry.getClassFileNames()? That is, should we move the listing into the ClassPathEntry class?", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1312#discussion_r399203672", "createdAt": "2020-03-27T11:37:18Z", "author": {"login": "elharo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/ClassDumper.java", "diffHunk": "@@ -380,15 +378,15 @@ Path findClassLocation(String className) {\n   }\n \n   /**\n-   * Returns a set of {@link JavaClass}es which have entries in the {@code jar} through {@link\n+   * Returns a set of {@link JavaClass}es which have entries in the {@code entry} through {@link\n    * #classRepository}.\n    */\n-  private ImmutableSet<JavaClass> listClasses(Path jar) throws IOException {\n+  private ImmutableSet<JavaClass> listClasses(ClassPathEntry entry) throws IOException {\n     ImmutableSet.Builder<JavaClass> javaClasses = ImmutableSet.builder();\n \n     ImmutableList.Builder<String> corruptedClassFileNames = ImmutableList.builder();\n \n-    for (String classFileName : listClassFileNames(jar)) {\n+    for (String classFileName : listClassFileNames(entry)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7f50f1b2f54307424da0b51ae3b1a1ba6296468e"}, "originalPosition": 185}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTIwNDExNg==", "bodyText": "What's a \"locator\"? This is redundant with locate below. And perhaps this class is incorrectly named. I.e. why is it not ClassFileLocator if it represents a locator and not a class file.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1312#discussion_r399204116", "createdAt": "2020-03-27T11:38:16Z", "author": {"login": "elharo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/ClassFile.java", "diffHunk": "@@ -20,26 +20,25 @@\n \n import com.google.common.annotations.VisibleForTesting;\n import com.google.common.base.MoreObjects;\n-import java.nio.file.Path;\n import java.util.Objects;\n \n /**\n- * A locator for a compiled class file of {@code className} in {@code jar} to uniquely locate the\n- * class implementation in a class path.\n+ * A locator for a compiled class file of {@code className} in {@code classPathEntry} to uniquely", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7f50f1b2f54307424da0b51ae3b1a1ba6296468e"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTIwNTQ3OQ==", "bodyText": "so why do we get a ClasspathResult out of this and not a ClassPath?", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1312#discussion_r399205479", "createdAt": "2020-03-27T11:40:52Z", "author": {"login": "elharo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/ClassPathBuilder.java", "diffHunk": "@@ -30,7 +30,8 @@\n import org.eclipse.aether.artifact.Artifact;\n \n /**\n- * Utility to build a class path (a list of jar files) through a dependency tree of Maven artifacts.\n+ * Utility to build a class path (a list of class path entries) through a dependency tree of Maven", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7f50f1b2f54307424da0b51ae3b1a1ba6296468e"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTIwNjk4NQ==", "bodyText": "Perhaps this should be an empty list instead?", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1312#discussion_r399206985", "createdAt": "2020-03-27T11:43:56Z", "author": {"login": "elharo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/LinkageCheckerArguments.java", "diffHunk": "@@ -191,12 +190,16 @@ private static Options configureOptions() {\n     }\n   }\n \n-  /** Returns a list of absolute paths to files specified in the JAR file option. */\n-  ImmutableList<Path> getJarFiles() {\n+  /**\n+   * Returns class path entries for the absolute paths of the files specified in the JAR file\n+   * option.\n+   */\n+  ImmutableList<ClassPathEntry> getJarFiles() {\n     if (commandLine.hasOption(\"j\")) {\n       String[] jarFiles = commandLine.getOptionValues(\"j\");\n       return Arrays.stream(jarFiles)\n           .map(name -> Paths.get(name).toAbsolutePath())\n+          .map(ClassPathEntry::new)\n           .collect(toImmutableList());\n     } else {\n       throw new IllegalArgumentException(\"The arguments must have option 'j' to list JAR files\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7f50f1b2f54307424da0b51ae3b1a1ba6296468e"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTIwNzUxMw==", "bodyText": "for --> of", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1312#discussion_r399207513", "createdAt": "2020-03-27T11:45:03Z", "author": {"login": "elharo"}, "path": "dependencies/src/test/java/com/google/cloud/tools/opensource/classpath/ClassPathBuilderTest.java", "diffHunk": "@@ -55,16 +50,16 @@ public void testResolve_removingDuplicates() {\n     Artifact grpcArtifact = new DefaultArtifact(\"io.grpc:grpc-auth:1.15.1\");\n     ClassPathResult result = classPathBuilder.resolve(ImmutableList.of(grpcArtifact));\n \n-    ImmutableList<Path> paths = result.getClassPath();\n-    long jsr305Count = paths.stream().filter(path -> path.toString().contains(\"jsr305-\")).count();\n+    ImmutableList<ClassPathEntry> classPath = result.getClassPath();\n+    long jsr305Count = classPath.stream().filter(path -> path.toString().contains(\"jsr305\")).count();\n     Truth.assertWithMessage(\"There should not be duplicated versions for jsr305\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7f50f1b2f54307424da0b51ae3b1a1ba6296468e"}, "originalPosition": 45}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2c29bace0a0216334e84890b476bf50b047efcb6", "author": {"user": {"login": "suztomo", "name": "Tomo Suzuki"}}, "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/2c29bace0a0216334e84890b476bf50b047efcb6", "committedDate": "2020-03-27T14:28:51Z", "message": "Applied review."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2473f88fd417e5f48636b92659c631c08fcdbd51", "author": {"user": {"login": "suztomo", "name": "Tomo Suzuki"}}, "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/2473f88fd417e5f48636b92659c631c08fcdbd51", "committedDate": "2020-03-27T14:42:38Z", "message": "ClassPathEntry.getJar()"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgyODg2MTM4", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1312#pullrequestreview-382886138", "createdAt": "2020-03-27T14:03:59Z", "commit": {"oid": "7f50f1b2f54307424da0b51ae3b1a1ba6296468e"}, "state": "COMMENTED", "comments": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxNDowMzo1OVrOF8yjxg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxNDoyODoyMFrOF8zmTQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTI4NzIzOA==", "bodyText": "Updated.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1312#discussion_r399287238", "createdAt": "2020-03-27T14:03:59Z", "author": {"login": "suztomo"}, "path": "dashboard/src/main/java/com/google/cloud/tools/opensource/dashboard/DashboardMain.java", "diffHunk": "@@ -263,10 +265,10 @@ static Configuration configureFreemarker() {\n    * Returns mapping from the Maven coordinates of BOM members to jar files that are in the\n    * dependency tree of the BOM members.\n    */\n-  private static ImmutableSetMultimap<String, Path> bomMemberToJars(\n+  private static ImmutableSetMultimap<String, ClassPathEntry> bomMemberToJars(\n       ClassPathResult classPathResult) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTIwMDQ4NQ=="}, "originalCommit": {"oid": "7f50f1b2f54307424da0b51ae3b1a1ba6296468e"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTI4ODQ4OQ==", "bodyText": "Right. The name was not good. I also found other places in our code that benefits from returning java.nio.file.Path. Renamed this to Path getJar().", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1312#discussion_r399288489", "createdAt": "2020-03-27T14:05:56Z", "author": {"login": "suztomo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/ClassDumper.java", "diffHunk": "@@ -72,40 +74,42 @@\n class ClassDumper {\n   private static final Logger logger = Logger.getLogger(ClassDumper.class.getName());\n \n-  private final ImmutableList<Path> inputClassPath;\n+  private final ImmutableList<ClassPathEntry> inputClassPath;\n   private final FixedSizeClassPathRepository classRepository;\n   private final ClassLoader extensionClassLoader;\n-  private final ImmutableSetMultimap<Path, String> jarFileToClassFileNames;\n-  private final ImmutableListMultimap<String, Path> classFileNameToJarFiles;\n+  private final ImmutableSetMultimap<ClassPathEntry, String> classPathEntryToClassFileNames;\n+  private final ImmutableListMultimap<String, ClassPathEntry> classFileNameToClassPathEntry;\n \n-  private static FixedSizeClassPathRepository createClassRepository(List<Path> paths) {\n-    ClassPath classPath = new LinkageCheckClassPath(paths);\n+  private static FixedSizeClassPathRepository createClassRepository(List<ClassPathEntry> entries) {\n+    ClassPath classPath = new LinkageCheckClassPath(entries);\n     return new FixedSizeClassPathRepository(classPath);\n   }\n \n-  static ClassDumper create(List<Path> jarPaths) throws IOException {\n+  static ClassDumper create(List<ClassPathEntry> entries) throws IOException {\n     ClassLoader systemClassLoader = ClassLoader.getSystemClassLoader();\n     ClassLoader extensionClassLoader = systemClassLoader.getParent();\n \n     ImmutableList<Path> unreadableFiles =\n-        jarPaths.stream()\n+        entries.stream()\n+            .map(ClassPathEntry::getPath)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODIwMTQ5Nw=="}, "originalCommit": {"oid": "58a02b0f4ee770fa92849fe7221c3b26e92b9272"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTI5MTUwNQ==", "bodyText": "Renamed to classNamesInJar.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1312#discussion_r399291505", "createdAt": "2020-03-27T14:10:23Z", "author": {"login": "suztomo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/ClassDumper.java", "diffHunk": "@@ -137,13 +141,9 @@ boolean isSystemClass(String className) {\n     }\n   }\n \n-  /**\n-   * Returns class file names defined in the jar file.\n-   *\n-   * @param jarPath absolute path to the jar file\n-   */\n-  ImmutableSet<String> classesDefinedInJar(Path jarPath) {\n-    return jarFileToClassFileNames.get(jarPath);\n+  /** Returns class file names defined in the class path entry. */", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTIwMjQyNQ=="}, "originalCommit": {"oid": "7f50f1b2f54307424da0b51ae3b1a1ba6296468e"}, "originalPosition": 82}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTI5MTgzOA==", "bodyText": "Updated.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1312#discussion_r399291838", "createdAt": "2020-03-27T14:10:47Z", "author": {"login": "suztomo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/ClassDumper.java", "diffHunk": "@@ -319,18 +319,16 @@ private static FieldSymbol makeSymbol(\n     return innerClassNames.build();\n   }\n \n-  /**\n-   * Returns the first jar file {@link Path} defining the class. Null if the location is unknown.\n-   */\n+  /** Returns the first class path entry defining the class. Null if the location is unknown. */", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTIwMjU3Nw=="}, "originalCommit": {"oid": "7f50f1b2f54307424da0b51ae3b1a1ba6296468e"}, "originalPosition": 104}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTI5MjE4OA==", "bodyText": "removed.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1312#discussion_r399292188", "createdAt": "2020-03-27T14:11:17Z", "author": {"login": "suztomo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/ClassDumper.java", "diffHunk": "@@ -339,19 +337,19 @@ Path findClassLocation(String className) {\n     if (specialLocation == null) {\n       return null;\n     }\n-    return Iterables.getFirst(classFileNameToJarFiles.get(specialLocation), null);\n+    return Iterables.getFirst(classFileNameToClassPathEntry.get(specialLocation), null);\n   }\n \n   /**\n-   * Returns mapping from jar files to class file names they contain.\n+   * Returns mapping from class path entries to class file names they contain.\n    *\n-   * @param jars absolute paths to jar files\n+   * @param classPath class path entries in which it finds the class names.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTIwMjgwNQ=="}, "originalCommit": {"oid": "7f50f1b2f54307424da0b51ae3b1a1ba6296468e"}, "originalPosition": 134}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTI5NDU3MQ==", "bodyText": "One class repository for one class path. ClassDumper takes one class path. Therefore there's no multiple class repositories for one ClassDumper.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1312#discussion_r399294571", "createdAt": "2020-03-27T14:14:36Z", "author": {"login": "suztomo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/ClassDumper.java", "diffHunk": "@@ -380,15 +378,15 @@ Path findClassLocation(String className) {\n   }\n \n   /**\n-   * Returns a set of {@link JavaClass}es which have entries in the {@code jar} through {@link\n+   * Returns a set of {@link JavaClass}es which have entries in the {@code entry} through {@link\n    * #classRepository}.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTIwMzI1Mg=="}, "originalCommit": {"oid": "7f50f1b2f54307424da0b51ae3b1a1ba6296468e"}, "originalPosition": 176}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTI5NzI0Mg==", "bodyText": "Moved.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1312#discussion_r399297242", "createdAt": "2020-03-27T14:18:34Z", "author": {"login": "suztomo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/ClassDumper.java", "diffHunk": "@@ -380,15 +378,15 @@ Path findClassLocation(String className) {\n   }\n \n   /**\n-   * Returns a set of {@link JavaClass}es which have entries in the {@code jar} through {@link\n+   * Returns a set of {@link JavaClass}es which have entries in the {@code entry} through {@link\n    * #classRepository}.\n    */\n-  private ImmutableSet<JavaClass> listClasses(Path jar) throws IOException {\n+  private ImmutableSet<JavaClass> listClasses(ClassPathEntry entry) throws IOException {\n     ImmutableSet.Builder<JavaClass> javaClasses = ImmutableSet.builder();\n \n     ImmutableList.Builder<String> corruptedClassFileNames = ImmutableList.builder();\n \n-    for (String classFileName : listClassFileNames(jar)) {\n+    for (String classFileName : listClassFileNames(entry)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTIwMzY3Mg=="}, "originalCommit": {"oid": "7f50f1b2f54307424da0b51ae3b1a1ba6296468e"}, "originalPosition": 185}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTI5OTgxMg==", "bodyText": "ClassFileLocator sounds nice. Not updating in this PR.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1312#discussion_r399299812", "createdAt": "2020-03-27T14:22:16Z", "author": {"login": "suztomo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/ClassFile.java", "diffHunk": "@@ -20,26 +20,25 @@\n \n import com.google.common.annotations.VisibleForTesting;\n import com.google.common.base.MoreObjects;\n-import java.nio.file.Path;\n import java.util.Objects;\n \n /**\n- * A locator for a compiled class file of {@code className} in {@code jar} to uniquely locate the\n- * class implementation in a class path.\n+ * A locator for a compiled class file of {@code className} in {@code classPathEntry} to uniquely", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTIwNDExNg=="}, "originalCommit": {"oid": "7f50f1b2f54307424da0b51ae3b1a1ba6296468e"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTMwMDU1MA==", "bodyText": "Updated to Utility to build ClasspathResult that holds class path.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1312#discussion_r399300550", "createdAt": "2020-03-27T14:23:22Z", "author": {"login": "suztomo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/ClassPathBuilder.java", "diffHunk": "@@ -30,7 +30,8 @@\n import org.eclipse.aether.artifact.Artifact;\n \n /**\n- * Utility to build a class path (a list of jar files) through a dependency tree of Maven artifacts.\n+ * Utility to build a class path (a list of class path entries) through a dependency tree of Maven", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTIwNTQ3OQ=="}, "originalCommit": {"oid": "7f50f1b2f54307424da0b51ae3b1a1ba6296468e"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTMwMzcyOQ==", "bodyText": "Explicitly failing with IllegalArgumentException gives more clear message why the tool does not work as expected.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1312#discussion_r399303729", "createdAt": "2020-03-27T14:27:36Z", "author": {"login": "suztomo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/LinkageCheckerArguments.java", "diffHunk": "@@ -191,12 +190,16 @@ private static Options configureOptions() {\n     }\n   }\n \n-  /** Returns a list of absolute paths to files specified in the JAR file option. */\n-  ImmutableList<Path> getJarFiles() {\n+  /**\n+   * Returns class path entries for the absolute paths of the files specified in the JAR file\n+   * option.\n+   */\n+  ImmutableList<ClassPathEntry> getJarFiles() {\n     if (commandLine.hasOption(\"j\")) {\n       String[] jarFiles = commandLine.getOptionValues(\"j\");\n       return Arrays.stream(jarFiles)\n           .map(name -> Paths.get(name).toAbsolutePath())\n+          .map(ClassPathEntry::new)\n           .collect(toImmutableList());\n     } else {\n       throw new IllegalArgumentException(\"The arguments must have option 'j' to list JAR files\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTIwNjk4NQ=="}, "originalCommit": {"oid": "7f50f1b2f54307424da0b51ae3b1a1ba6296468e"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTMwNDI2OQ==", "bodyText": "Updated.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1312#discussion_r399304269", "createdAt": "2020-03-27T14:28:20Z", "author": {"login": "suztomo"}, "path": "dependencies/src/test/java/com/google/cloud/tools/opensource/classpath/ClassPathBuilderTest.java", "diffHunk": "@@ -55,16 +50,16 @@ public void testResolve_removingDuplicates() {\n     Artifact grpcArtifact = new DefaultArtifact(\"io.grpc:grpc-auth:1.15.1\");\n     ClassPathResult result = classPathBuilder.resolve(ImmutableList.of(grpcArtifact));\n \n-    ImmutableList<Path> paths = result.getClassPath();\n-    long jsr305Count = paths.stream().filter(path -> path.toString().contains(\"jsr305-\")).count();\n+    ImmutableList<ClassPathEntry> classPath = result.getClassPath();\n+    long jsr305Count = classPath.stream().filter(path -> path.toString().contains(\"jsr305\")).count();\n     Truth.assertWithMessage(\"There should not be duplicated versions for jsr305\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTIwNzUxMw=="}, "originalCommit": {"oid": "7f50f1b2f54307424da0b51ae3b1a1ba6296468e"}, "originalPosition": 45}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgyOTcxOTYy", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1312#pullrequestreview-382971962", "createdAt": "2020-03-27T15:38:45Z", "commit": {"oid": "2473f88fd417e5f48636b92659c631c08fcdbd51"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 312, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}