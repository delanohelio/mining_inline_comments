{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg1ODI1NzM3", "number": 1283, "title": "Linkage Checker exclusion file XML structure validation using Relax NG", "bodyText": "Fixes #1277", "createdAt": "2020-03-09T21:23:12Z", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1283", "merged": true, "mergeCommit": {"oid": "d7ae8992f9d010413f335a73d240aa261cf4ac60"}, "closed": true, "closedAt": "2020-03-11T21:11:21Z", "author": {"login": "suztomo"}, "timelineItems": {"totalCount": 19, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcMEryIgH2gAyMzg1ODI1NzM3OjdmZmNmOWQwOTg0MDA3ZjVmMTFiN2QyMGFhMjVkYzdhNzE5M2U2MGE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcMs87ogFqTM3MzA5Mzg1Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "7ffcf9d0984007f5f11b7d20aa25dc7a7193e60a", "author": {"user": {"login": "suztomo", "name": "Tomo Suzuki"}}, "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/7ffcf9d0984007f5f11b7d20aa25dc7a7193e60a", "committedDate": "2020-03-09T21:20:37Z", "message": "XML structure validation using Relax NG"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcxNTQxNDk4", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1283#pullrequestreview-371541498", "createdAt": "2020-03-09T21:27:39Z", "commit": {"oid": "7ffcf9d0984007f5f11b7d20aa25dc7a7193e60a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQyMToyNzozOVrOFz5-5w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQyMToyNzozOVrOFz5-5w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTk3MTY4Nw==", "bodyText": "The package name of this library is strange. This library org.relaxng:jing is from https://relaxng.org/jclark/api/jing/index.html\n\nYou can use Jing's native API.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1283#discussion_r389971687", "createdAt": "2020-03-09T21:27:39Z", "author": {"login": "suztomo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/ExclusionFileParser.java", "diffHunk": "@@ -17,8 +17,14 @@\n package com.google.cloud.tools.opensource.classpath;\n \n import com.google.common.collect.ImmutableList;\n+import com.thaiopensource.util.SinglePropertyMap;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7ffcf9d0984007f5f11b7d20aa25dc7a7193e60a"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcxNTQyODY1", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1283#pullrequestreview-371542865", "createdAt": "2020-03-09T21:30:11Z", "commit": {"oid": "7ffcf9d0984007f5f11b7d20aa25dc7a7193e60a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQyMTozMDoxMVrOFz6DNw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQyMTozMDoxMVrOFz6DNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTk3Mjc5MQ==", "bodyText": "I'm really not convinced that we want to do this when processing the documents.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1283#discussion_r389972791", "createdAt": "2020-03-09T21:30:11Z", "author": {"login": "elharo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/ExclusionFileParser.java", "diffHunk": "@@ -62,11 +68,25 @@\n   static ImmutableList<LinkageErrorMatcher> parse(Path exclusionFile)\n       throws SAXException, IOException {\n \n+    // DraconianErrorHandler throws SAXException upon invalid structure\n+    ValidationDriver validationDriver =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7ffcf9d0984007f5f11b7d20aa25dc7a7193e60a"}, "originalPosition": 20}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcyNzA4NTM1", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1283#pullrequestreview-372708535", "createdAt": "2020-03-11T12:22:18Z", "commit": {"oid": "7ffcf9d0984007f5f11b7d20aa25dc7a7193e60a"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxMjoyMjoxOVrOF00oeg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxMjoyODoyMFrOF00z7A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDkzMjYwMg==", "bodyText": "Can you find a license for this? I don't see one anywhere. I think it's BSD but I don't see a statement about that.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1283#discussion_r390932602", "createdAt": "2020-03-11T12:22:19Z", "author": {"login": "elharo"}, "path": "dependencies/pom.xml", "diffHunk": "@@ -79,6 +79,11 @@\n       <artifactId>httpclient</artifactId>\n       <version>4.5.12</version>\n     </dependency>\n+    <dependency>\n+      <groupId>org.relaxng</groupId>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7ffcf9d0984007f5f11b7d20aa25dc7a7193e60a"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDkzNDY5OQ==", "bodyText": "You might want to extract all this into a helper method, just for clarity.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1283#discussion_r390934699", "createdAt": "2020-03-11T12:26:34Z", "author": {"login": "elharo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/ExclusionFileParser.java", "diffHunk": "@@ -62,11 +68,25 @@\n   static ImmutableList<LinkageErrorMatcher> parse(Path exclusionFile)\n       throws SAXException, IOException {\n \n+    // DraconianErrorHandler throws SAXException upon invalid structure", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7ffcf9d0984007f5f11b7d20aa25dc7a7193e60a"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDkzNDgyMQ==", "bodyText": "copyright", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1283#discussion_r390934821", "createdAt": "2020-03-11T12:26:50Z", "author": {"login": "elharo"}, "path": "dependencies/src/main/resources/linkage-checker-exclusion-relax-ng.xml", "diffHunk": "@@ -0,0 +1,56 @@\n+<element name=\"LinkageCheckerFilter\" xmlns=\"http://relaxng.org/ns/structure/1.0\">", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7ffcf9d0984007f5f11b7d20aa25dc7a7193e60a"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDkzNTI0OA==", "bodyText": "In this pattern, we sometimes name the exception expected", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1283#discussion_r390935248", "createdAt": "2020-03-11T12:27:45Z", "author": {"login": "elharo"}, "path": "dependencies/src/test/java/com/google/cloud/tools/opensource/classpath/ExclusionFileParserTest.java", "diffHunk": "@@ -192,15 +192,44 @@ public void testParse_sourceAndTarget_unmatch()\n   }\n \n   @Test\n-  public void testParse_namespaceException() throws URISyntaxException, IOException, SAXException {\n+  public void testParse_namespaceException() throws URISyntaxException, SAXException, IOException {\n     Path exclusionFile = absolutePathOfResource(\"exclusion-sample-rules/target-with-namespace.xml\");\n     try {\n       ImmutableList<LinkageErrorMatcher> matchers = ExclusionFileParser.parse(exclusionFile);\n       fail();\n-    } catch (SAXException ex) {\n+    } catch (SAXParseException ex) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7ffcf9d0984007f5f11b7d20aa25dc7a7193e60a"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDkzNTUzMg==", "bodyText": "indent +2", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1283#discussion_r390935532", "createdAt": "2020-03-11T12:28:20Z", "author": {"login": "elharo"}, "path": "dependencies/src/main/resources/linkage-checker-exclusion-relax-ng.xml", "diffHunk": "@@ -0,0 +1,56 @@\n+<element name=\"LinkageCheckerFilter\" xmlns=\"http://relaxng.org/ns/structure/1.0\">\n+  <zeroOrMore>\n+    <element name=\"LinkageError\">\n+      <interleave>\n+        <optional>\n+          <element name=\"Target\">\n+            <choice>\n+              <element name=\"Package\">\n+                <attribute name=\"name\">\n+                  <text/>\n+                </attribute>\n+              </element>\n+              <element name=\"Class\">\n+                <attribute name=\"name\">\n+                  <text/>\n+                </attribute>\n+              </element>\n+              <element name=\"Method\">\n+                <attribute name=\"name\">\n+                  <text/>\n+                </attribute>\n+                <attribute name=\"className\">\n+                  <text/>\n+                </attribute>\n+              </element>\n+              <element name=\"Field\">\n+                <attribute name=\"name\">\n+                  <text/>\n+                </attribute>\n+                <attribute name=\"className\">\n+                  <text/>\n+                </attribute>\n+              </element>\n+            </choice>\n+          </element>\n+        </optional>\n+        <optional>\n+        <element name=\"Source\">", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7ffcf9d0984007f5f11b7d20aa25dc7a7193e60a"}, "originalPosition": 38}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "21850be3a378f3ea2880dd6136ad0f797209fb30", "author": {"user": {"login": "suztomo", "name": "Tomo Suzuki"}}, "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/21850be3a378f3ea2880dd6136ad0f797209fb30", "committedDate": "2020-03-11T14:58:51Z", "message": "Applied review"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "166d155651ac8e297b8a9b92cd7bd78ac318edfe", "author": {"user": {"login": "suztomo", "name": "Tomo Suzuki"}}, "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/166d155651ac8e297b8a9b92cd7bd78ac318edfe", "committedDate": "2020-03-11T15:02:47Z", "message": "Assertion on line number"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcyODMxNDAw", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1283#pullrequestreview-372831400", "createdAt": "2020-03-11T14:50:13Z", "commit": {"oid": "7ffcf9d0984007f5f11b7d20aa25dc7a7193e60a"}, "state": "COMMENTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxNDo1MDoxM1rOF06a6Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxNTowMzozN1rOF07Cyg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTAyNzQzMw==", "bodyText": "Found in https://search.maven.org/artifact/org.relaxng/jing/20181222/jar\n    <license>\n      <name>3-clause BSD license</name>\n      <url>https://github.com/relaxng/jing-trang/blob/master/copying.txt</url>\n      <distribution>repo</distribution>\n    </license>", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1283#discussion_r391027433", "createdAt": "2020-03-11T14:50:13Z", "author": {"login": "suztomo"}, "path": "dependencies/pom.xml", "diffHunk": "@@ -79,6 +79,11 @@\n       <artifactId>httpclient</artifactId>\n       <version>4.5.12</version>\n     </dependency>\n+    <dependency>\n+      <groupId>org.relaxng</groupId>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDkzMjYwMg=="}, "originalCommit": {"oid": "7ffcf9d0984007f5f11b7d20aa25dc7a7193e60a"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTAzMTIxNA==", "bodyText": "Nice idea. Updated.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1283#discussion_r391031214", "createdAt": "2020-03-11T14:55:13Z", "author": {"login": "suztomo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/ExclusionFileParser.java", "diffHunk": "@@ -62,11 +68,25 @@\n   static ImmutableList<LinkageErrorMatcher> parse(Path exclusionFile)\n       throws SAXException, IOException {\n \n+    // DraconianErrorHandler throws SAXException upon invalid structure", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDkzNDY5OQ=="}, "originalCommit": {"oid": "7ffcf9d0984007f5f11b7d20aa25dc7a7193e60a"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTAzMjI5NA==", "bodyText": "Added.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1283#discussion_r391032294", "createdAt": "2020-03-11T14:56:37Z", "author": {"login": "suztomo"}, "path": "dependencies/src/main/resources/linkage-checker-exclusion-relax-ng.xml", "diffHunk": "@@ -0,0 +1,56 @@\n+<element name=\"LinkageCheckerFilter\" xmlns=\"http://relaxng.org/ns/structure/1.0\">", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDkzNDgyMQ=="}, "originalCommit": {"oid": "7ffcf9d0984007f5f11b7d20aa25dc7a7193e60a"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTAzMjgxMA==", "bodyText": "Fixed.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1283#discussion_r391032810", "createdAt": "2020-03-11T14:57:18Z", "author": {"login": "suztomo"}, "path": "dependencies/src/main/resources/linkage-checker-exclusion-relax-ng.xml", "diffHunk": "@@ -0,0 +1,56 @@\n+<element name=\"LinkageCheckerFilter\" xmlns=\"http://relaxng.org/ns/structure/1.0\">\n+  <zeroOrMore>\n+    <element name=\"LinkageError\">\n+      <interleave>\n+        <optional>\n+          <element name=\"Target\">\n+            <choice>\n+              <element name=\"Package\">\n+                <attribute name=\"name\">\n+                  <text/>\n+                </attribute>\n+              </element>\n+              <element name=\"Class\">\n+                <attribute name=\"name\">\n+                  <text/>\n+                </attribute>\n+              </element>\n+              <element name=\"Method\">\n+                <attribute name=\"name\">\n+                  <text/>\n+                </attribute>\n+                <attribute name=\"className\">\n+                  <text/>\n+                </attribute>\n+              </element>\n+              <element name=\"Field\">\n+                <attribute name=\"name\">\n+                  <text/>\n+                </attribute>\n+                <attribute name=\"className\">\n+                  <text/>\n+                </attribute>\n+              </element>\n+            </choice>\n+          </element>\n+        </optional>\n+        <optional>\n+        <element name=\"Source\">", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDkzNTUzMg=="}, "originalCommit": {"oid": "7ffcf9d0984007f5f11b7d20aa25dc7a7193e60a"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTAzMzc0OA==", "bodyText": "That's more explanatory. Updated.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1283#discussion_r391033748", "createdAt": "2020-03-11T14:58:34Z", "author": {"login": "suztomo"}, "path": "dependencies/src/test/java/com/google/cloud/tools/opensource/classpath/ExclusionFileParserTest.java", "diffHunk": "@@ -192,15 +192,44 @@ public void testParse_sourceAndTarget_unmatch()\n   }\n \n   @Test\n-  public void testParse_namespaceException() throws URISyntaxException, IOException, SAXException {\n+  public void testParse_namespaceException() throws URISyntaxException, SAXException, IOException {\n     Path exclusionFile = absolutePathOfResource(\"exclusion-sample-rules/target-with-namespace.xml\");\n     try {\n       ImmutableList<LinkageErrorMatcher> matchers = ExclusionFileParser.parse(exclusionFile);\n       fail();\n-    } catch (SAXException ex) {\n+    } catch (SAXParseException ex) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDkzNTI0OA=="}, "originalCommit": {"oid": "7ffcf9d0984007f5f11b7d20aa25dc7a7193e60a"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTAzNzY0Mg==", "bodyText": "Added copyright", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1283#discussion_r391037642", "createdAt": "2020-03-11T15:03:37Z", "author": {"login": "suztomo"}, "path": "dependencies/src/main/resources/linkage-checker-exclusion-relax-ng.xml", "diffHunk": "@@ -0,0 +1,71 @@\n+<!--\n+  ~ Copyright 2020 Google LLC.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "166d155651ac8e297b8a9b92cd7bd78ac318edfe"}, "originalPosition": 2}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcyOTg5MDcx", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1283#pullrequestreview-372989071", "createdAt": "2020-03-11T17:47:03Z", "commit": {"oid": "166d155651ac8e297b8a9b92cd7bd78ac318edfe"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxNzo0NzowM1rOF1CHJg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxNzo1MToxM1rOF1CRaw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTE1MzQ0Ng==", "bodyText": "why convert to a File? Can we stick to Paths all the way through?", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1283#discussion_r391153446", "createdAt": "2020-03-11T17:47:03Z", "author": {"login": "elharo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/ExclusionFileParser.java", "diffHunk": "@@ -62,12 +68,29 @@\n   static ImmutableList<LinkageErrorMatcher> parse(Path exclusionFile)\n       throws SAXException, IOException {\n \n+    File exclusion = exclusionFile.toFile();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "166d155651ac8e297b8a9b92cd7bd78ac318edfe"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTE1NTEzNQ==", "bodyText": "If you call inputSource.setSystemId(path.toURI()) or some such thing here, error reporting will improve.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1283#discussion_r391155135", "createdAt": "2020-03-11T17:49:39Z", "author": {"login": "elharo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/ExclusionFileParser.java", "diffHunk": "@@ -62,12 +68,29 @@\n   static ImmutableList<LinkageErrorMatcher> parse(Path exclusionFile)\n       throws SAXException, IOException {\n \n+    File exclusion = exclusionFile.toFile();\n+    validate(exclusion);\n+\n     XMLReader xmlReader = XMLReaderFactory.createXMLReader();\n     ExclusionFileHandler handler = new ExclusionFileHandler();\n     xmlReader.setContentHandler(handler);\n \n-    InputSource inputSource = new InputSource(new FileInputStream(exclusionFile.toFile()));\n+    InputSource inputSource = new InputSource(new FileInputStream(exclusion));\n     xmlReader.parse(inputSource);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "166d155651ac8e297b8a9b92cd7bd78ac318edfe"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTE1NTUyOA==", "bodyText": "Files.newInputStream(path)", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1283#discussion_r391155528", "createdAt": "2020-03-11T17:50:16Z", "author": {"login": "elharo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/ExclusionFileParser.java", "diffHunk": "@@ -62,12 +68,29 @@\n   static ImmutableList<LinkageErrorMatcher> parse(Path exclusionFile)\n       throws SAXException, IOException {\n \n+    File exclusion = exclusionFile.toFile();\n+    validate(exclusion);\n+\n     XMLReader xmlReader = XMLReaderFactory.createXMLReader();\n     ExclusionFileHandler handler = new ExclusionFileHandler();\n     xmlReader.setContentHandler(handler);\n \n-    InputSource inputSource = new InputSource(new FileInputStream(exclusionFile.toFile()));\n+    InputSource inputSource = new InputSource(new FileInputStream(exclusion));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "166d155651ac8e297b8a9b92cd7bd78ac318edfe"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTE1NjA3NQ==", "bodyText": "This reads the file twice: once to validate and once to parse. Can this be combined into a single pass?", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1283#discussion_r391156075", "createdAt": "2020-03-11T17:51:13Z", "author": {"login": "elharo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/ExclusionFileParser.java", "diffHunk": "@@ -62,12 +68,29 @@\n   static ImmutableList<LinkageErrorMatcher> parse(Path exclusionFile)\n       throws SAXException, IOException {\n \n+    File exclusion = exclusionFile.toFile();\n+    validate(exclusion);\n+\n     XMLReader xmlReader = XMLReaderFactory.createXMLReader();\n     ExclusionFileHandler handler = new ExclusionFileHandler();\n     xmlReader.setContentHandler(handler);\n \n-    InputSource inputSource = new InputSource(new FileInputStream(exclusionFile.toFile()));\n+    InputSource inputSource = new InputSource(new FileInputStream(exclusion));\n     xmlReader.parse(inputSource);\n     return handler.getMatchers();\n   }\n+\n+  private static void validate(File file) throws IOException, SAXException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "166d155651ac8e297b8a9b92cd7bd78ac318edfe"}, "originalPosition": 32}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "91572e298a10a1d1ba1febf76e26617082bc3a50", "author": {"user": {"login": "suztomo", "name": "Tomo Suzuki"}}, "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/91572e298a10a1d1ba1febf76e26617082bc3a50", "committedDate": "2020-03-11T18:13:07Z", "message": "Files.newInputStream"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9b205d3563c4532ead753c2f872914bdbe8aef8a", "author": {"user": {"login": "suztomo", "name": "Tomo Suzuki"}}, "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/9b205d3563c4532ead753c2f872914bdbe8aef8a", "committedDate": "2020-03-11T18:19:59Z", "message": "javadoc"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzczMDAwODQy", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1283#pullrequestreview-373000842", "createdAt": "2020-03-11T18:02:15Z", "commit": {"oid": "166d155651ac8e297b8a9b92cd7bd78ac318edfe"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxODowMjoxNVrOF1Csdg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxODoxODowNFrOF1DQvg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTE2Mjk5OA==", "bodyText": "Updated to use Files.newInputStream.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1283#discussion_r391162998", "createdAt": "2020-03-11T18:02:15Z", "author": {"login": "suztomo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/ExclusionFileParser.java", "diffHunk": "@@ -62,12 +68,29 @@\n   static ImmutableList<LinkageErrorMatcher> parse(Path exclusionFile)\n       throws SAXException, IOException {\n \n+    File exclusion = exclusionFile.toFile();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTE1MzQ0Ng=="}, "originalCommit": {"oid": "166d155651ac8e297b8a9b92cd7bd78ac318edfe"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTE2MzEwNA==", "bodyText": "Updated.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1283#discussion_r391163104", "createdAt": "2020-03-11T18:02:25Z", "author": {"login": "suztomo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/ExclusionFileParser.java", "diffHunk": "@@ -62,12 +68,29 @@\n   static ImmutableList<LinkageErrorMatcher> parse(Path exclusionFile)\n       throws SAXException, IOException {\n \n+    File exclusion = exclusionFile.toFile();\n+    validate(exclusion);\n+\n     XMLReader xmlReader = XMLReaderFactory.createXMLReader();\n     ExclusionFileHandler handler = new ExclusionFileHandler();\n     xmlReader.setContentHandler(handler);\n \n-    InputSource inputSource = new InputSource(new FileInputStream(exclusionFile.toFile()));\n+    InputSource inputSource = new InputSource(new FileInputStream(exclusion));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTE1NTUyOA=="}, "originalCommit": {"oid": "166d155651ac8e297b8a9b92cd7bd78ac318edfe"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTE2ODA1Ng==", "bodyText": "Updated.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1283#discussion_r391168056", "createdAt": "2020-03-11T18:11:13Z", "author": {"login": "suztomo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/ExclusionFileParser.java", "diffHunk": "@@ -62,12 +68,29 @@\n   static ImmutableList<LinkageErrorMatcher> parse(Path exclusionFile)\n       throws SAXException, IOException {\n \n+    File exclusion = exclusionFile.toFile();\n+    validate(exclusion);\n+\n     XMLReader xmlReader = XMLReaderFactory.createXMLReader();\n     ExclusionFileHandler handler = new ExclusionFileHandler();\n     xmlReader.setContentHandler(handler);\n \n-    InputSource inputSource = new InputSource(new FileInputStream(exclusionFile.toFile()));\n+    InputSource inputSource = new InputSource(new FileInputStream(exclusion));\n     xmlReader.parse(inputSource);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTE1NTEzNQ=="}, "originalCommit": {"oid": "166d155651ac8e297b8a9b92cd7bd78ac318edfe"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTE3MjI4Ng==", "bodyText": "I didn't think of a way to do that. ValidationDriver does not give a method related to XMLReader.\nI thought reusing InputSource, but it's not intended to be reused:\n\nso applications should not attempt to re-use such streams after they have been handed to a parser.\n\nhttps://docs.oracle.com/javase/7/docs/api/org/xml/sax/InputSource.html#setPublicId(java.lang.String)", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1283#discussion_r391172286", "createdAt": "2020-03-11T18:18:04Z", "author": {"login": "suztomo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/ExclusionFileParser.java", "diffHunk": "@@ -62,12 +68,29 @@\n   static ImmutableList<LinkageErrorMatcher> parse(Path exclusionFile)\n       throws SAXException, IOException {\n \n+    File exclusion = exclusionFile.toFile();\n+    validate(exclusion);\n+\n     XMLReader xmlReader = XMLReaderFactory.createXMLReader();\n     ExclusionFileHandler handler = new ExclusionFileHandler();\n     xmlReader.setContentHandler(handler);\n \n-    InputSource inputSource = new InputSource(new FileInputStream(exclusionFile.toFile()));\n+    InputSource inputSource = new InputSource(new FileInputStream(exclusion));\n     xmlReader.parse(inputSource);\n     return handler.getMatchers();\n   }\n+\n+  private static void validate(File file) throws IOException, SAXException {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTE1NjA3NQ=="}, "originalCommit": {"oid": "166d155651ac8e297b8a9b92cd7bd78ac318edfe"}, "originalPosition": 32}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzczMDIxMzAz", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1283#pullrequestreview-373021303", "createdAt": "2020-03-11T18:30:09Z", "commit": {"oid": "9b205d3563c4532ead753c2f872914bdbe8aef8a"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0d4d76789388b4d1a9038b1264591abe45e16f89", "author": {"user": {"login": "suztomo", "name": "Tomo Suzuki"}}, "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/0d4d76789388b4d1a9038b1264591abe45e16f89", "committedDate": "2020-03-11T19:07:57Z", "message": "Using isorelax"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c470731d76d8060a2227d78969b438c1900ce3b7", "author": {"user": {"login": "suztomo", "name": "Tomo Suzuki"}}, "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/c470731d76d8060a2227d78969b438c1900ce3b7", "committedDate": "2020-03-11T19:17:19Z", "message": "Validate and parse in one pass"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "45aa358c64d2f70bb5c4e3e8bf05ed645849b53f", "author": {"user": {"login": "suztomo", "name": "Tomo Suzuki"}}, "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/45aa358c64d2f70bb5c4e3e8bf05ed645849b53f", "committedDate": "2020-03-11T19:19:30Z", "message": "isorelax dependency"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzczMDU4NDUz", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1283#pullrequestreview-373058453", "createdAt": "2020-03-11T19:25:17Z", "commit": {"oid": "45aa358c64d2f70bb5c4e3e8bf05ed645849b53f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxOToyNToxN1rOF1FfmQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxOToyNToxN1rOF1FfmQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTIwODg1Nw==", "bodyText": "http://iso-relax.sourceforge.net/ :  the MIT license", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1283#discussion_r391208857", "createdAt": "2020-03-11T19:25:17Z", "author": {"login": "suztomo"}, "path": "dependencies/pom.xml", "diffHunk": "@@ -79,6 +79,16 @@\n       <artifactId>httpclient</artifactId>\n       <version>4.5.12</version>\n     </dependency>\n+    <dependency>\n+      <groupId>org.relaxng</groupId>\n+      <artifactId>jing</artifactId>\n+      <version>20181222</version>\n+    </dependency>\n+    <dependency>\n+      <groupId>isorelax</groupId>\n+      <artifactId>isorelax</artifactId>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "45aa358c64d2f70bb5c4e3e8bf05ed645849b53f"}, "originalPosition": 11}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "94e699b7f3ca65a250faabc815db2683101bf457", "author": {"user": {"login": "suztomo", "name": "Tomo Suzuki"}}, "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/94e699b7f3ca65a250faabc815db2683101bf457", "committedDate": "2020-03-11T19:28:07Z", "message": "createParser"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7524d4813a29f54ad17af09b011193e1f0f5e674", "author": {"user": {"login": "suztomo", "name": "Tomo Suzuki"}}, "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/7524d4813a29f54ad17af09b011193e1f0f5e674", "committedDate": "2020-03-11T19:28:49Z", "message": "createXmlReader"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzczMDkzODU3", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1283#pullrequestreview-373093857", "createdAt": "2020-03-11T20:15:33Z", "commit": {"oid": "7524d4813a29f54ad17af09b011193e1f0f5e674"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 285, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}