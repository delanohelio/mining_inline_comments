{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA1MjA1MzU2", "number": 1359, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QxNTo0NTozMlrODy85rg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QxNTo0NjoyMlrODy865Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0NzUzMTk4OnYy", "diffSide": "RIGHT", "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/LinkageCheckerMain.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QxNTo0NTozMlrOGHTRTg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QxNTo0NTozMlrOGHTRTg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDMwODk0Mg==", "bodyText": "I know think with \"--output-exclusion-file\" option the tool should not print linkage errors. Showing \"Wrote the linkage errors as exclusion file: ...\" message is the exact effect of the option. Showing other linkage errors in console, potentially hundreds of lines, obscures the message.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1359#discussion_r410308942", "createdAt": "2020-04-17T15:45:32Z", "author": {"login": "suztomo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/LinkageCheckerMain.java", "diffHunk": "@@ -98,12 +99,15 @@ public static void main(String[] arguments)\n                       symbolProblems, classFile -> graph.isReachable(classFile.getBinaryName())));\n         }\n \n-        System.out.println(SymbolProblem.formatSymbolProblems(symbolProblems));\n-\n         Path writeAsExclusionFile = linkageCheckerArguments.getOutputExclusionFile();\n         if (writeAsExclusionFile != null) {\n           ExclusionFiles.write(writeAsExclusionFile, symbolProblems);\n           System.out.println(\"Wrote the linkage errors as exclusion file: \" + writeAsExclusionFile);\n+          return;\n+        }\n+\n+        if (!symbolProblems.isEmpty()) {\n+          System.out.println(SymbolProblem.formatSymbolProblems(symbolProblems));\n         }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4631c891fac29e6c512e1b297da397b96e37d1ef"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0NzUzNTA5OnYy", "diffSide": "RIGHT", "path": "dependencies/src/test/java/com/google/cloud/tools/opensource/classpath/LinkageCheckerMainIntegrationTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QxNTo0NjoyMlrOGHTTVQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QxOTowMTozNlrOGHZt2A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDMwOTQ2MQ==", "bodyText": "With System.exit, we would not be able to test LinkageCheckerMain's failure status. Therefore this PR proposes an exception to tell the failure to the caller of the tool (Gradle in mind).", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1359#discussion_r410309461", "createdAt": "2020-04-17T15:46:22Z", "author": {"login": "suztomo"}, "path": "dependencies/src/test/java/com/google/cloud/tools/opensource/classpath/LinkageCheckerMainIntegrationTest.java", "diffHunk": "@@ -64,8 +67,12 @@ public void testJarFiles()\n \n     String jarArgument = googleCloudCore + \",\" + googleCloudFirestore + \",\" + guava;\n \n-    // This should not raise Exception\n-    LinkageCheckerMain.main(new String[] {\"-j\", jarArgument});\n+    try {\n+      LinkageCheckerMain.main(new String[] {\"-j\", jarArgument});\n+      fail(\"LinkageCheckerMain should throw LinkageCheckResultException upon errors\");\n+    } catch (LinkageCheckResultException expected) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4631c891fac29e6c512e1b297da397b96e37d1ef"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDQxNDU1Mg==", "bodyText": "You could extract everything from main except System.exit() into a new method and test that. Or you could add an extra \"don't exit\" argument for tests, or some such. But this should work too.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1359#discussion_r410414552", "createdAt": "2020-04-17T19:01:36Z", "author": {"login": "elharo"}, "path": "dependencies/src/test/java/com/google/cloud/tools/opensource/classpath/LinkageCheckerMainIntegrationTest.java", "diffHunk": "@@ -64,8 +67,12 @@ public void testJarFiles()\n \n     String jarArgument = googleCloudCore + \",\" + googleCloudFirestore + \",\" + guava;\n \n-    // This should not raise Exception\n-    LinkageCheckerMain.main(new String[] {\"-j\", jarArgument});\n+    try {\n+      LinkageCheckerMain.main(new String[] {\"-j\", jarArgument});\n+      fail(\"LinkageCheckerMain should throw LinkageCheckResultException upon errors\");\n+    } catch (LinkageCheckResultException expected) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDMwOTQ2MQ=="}, "originalCommit": {"oid": "4631c891fac29e6c512e1b297da397b96e37d1ef"}, "originalPosition": 25}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2716, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}