{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA1MDE0NTQ5", "number": 1713, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQxODoyNDowOFrOEuo96w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOFQxMTowMzoxNlrOEu7Xwg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE3MzQxMTYzOnYy", "diffSide": "RIGHT", "path": "scripts/release_bom.sh", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQxODoyNDowOFrOHjLghQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOFQxMDozNzozN1rOHjmGAA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjY1MDc1Nw==", "bodyText": "script name", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1713#discussion_r506650757", "createdAt": "2020-10-16T18:24:08Z", "author": {"login": "suztomo"}, "path": "scripts/release_bom.sh", "diffHunk": "@@ -0,0 +1,114 @@\n+#!/bin/bash -\n+# Usage: ./prepare_release.sh <dependencies|bom> <release version>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fbe1175b38dde18c9ac21f7ba77d4aef82b488da"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzA4NjMzNg==", "bodyText": "done", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1713#discussion_r507086336", "createdAt": "2020-10-18T10:37:37Z", "author": {"login": "elharo"}, "path": "scripts/release_bom.sh", "diffHunk": "@@ -0,0 +1,114 @@\n+#!/bin/bash -\n+# Usage: ./prepare_release.sh <dependencies|bom> <release version>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjY1MDc1Nw=="}, "originalCommit": {"oid": "fbe1175b38dde18c9ac21f7ba77d4aef82b488da"}, "originalPosition": 2}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE3MzQxMjI4OnYy", "diffSide": "RIGHT", "path": "scripts/release_bom.sh", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQxODoyNDoyM1rOHjLg8w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQxOToyMDoyNlrOHjNGVQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjY1MDg2Nw==", "bodyText": "Script name", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1713#discussion_r506650867", "createdAt": "2020-10-16T18:24:23Z", "author": {"login": "suztomo"}, "path": "scripts/release_bom.sh", "diffHunk": "@@ -0,0 +1,114 @@\n+#!/bin/bash -\n+# Usage: ./prepare_release.sh <dependencies|bom> <release version>\n+\n+set -e\n+\n+EchoRed() {\n+  echo \"$(tput setaf 1; tput bold)$1$(tput sgr0)\"\n+}\n+EchoGreen() {\n+  echo \"$(tput setaf 2; tput bold)$1$(tput sgr0)\"\n+}\n+\n+Die() {\n+  EchoRed \"$1\"\n+  exit 1\n+}\n+\n+DieUsage() {\n+  Die \"Usage: ./prepare_release.sh <dependencies|bom> <release version> [<post-release-version>]\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fbe1175b38dde18c9ac21f7ba77d4aef82b488da"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjY3NjgyMQ==", "bodyText": "done", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1713#discussion_r506676821", "createdAt": "2020-10-16T19:20:26Z", "author": {"login": "elharo"}, "path": "scripts/release_bom.sh", "diffHunk": "@@ -0,0 +1,114 @@\n+#!/bin/bash -\n+# Usage: ./prepare_release.sh <dependencies|bom> <release version>\n+\n+set -e\n+\n+EchoRed() {\n+  echo \"$(tput setaf 1; tput bold)$1$(tput sgr0)\"\n+}\n+EchoGreen() {\n+  echo \"$(tput setaf 2; tput bold)$1$(tput sgr0)\"\n+}\n+\n+Die() {\n+  EchoRed \"$1\"\n+  exit 1\n+}\n+\n+DieUsage() {\n+  Die \"Usage: ./prepare_release.sh <dependencies|bom> <release version> [<post-release-version>]\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjY1MDg2Nw=="}, "originalCommit": {"oid": "fbe1175b38dde18c9ac21f7ba77d4aef82b488da"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE3NjQyNjkwOnYy", "diffSide": "RIGHT", "path": "scripts/release_bom.sh", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOFQxMTowMzoxNlrOHjmonA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOFQxMTowMzoxNlrOHjmonA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzA5NTE5Ng==", "bodyText": "period turns out not to be an allowed character in CITC client names, but we can substitute an underscore.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1713#discussion_r507095196", "createdAt": "2020-10-18T11:03:16Z", "author": {"login": "elharo"}, "path": "scripts/release_bom.sh", "diffHunk": "@@ -0,0 +1,114 @@\n+#!/bin/bash -\n+# Usage: ./release_bom.sh <dependencies|bom> <release version>\n+\n+set -e\n+\n+EchoRed() {\n+  echo \"$(tput setaf 1; tput bold)$1$(tput sgr0)\"\n+}\n+EchoGreen() {\n+  echo \"$(tput setaf 2; tput bold)$1$(tput sgr0)\"\n+}\n+\n+Die() {\n+  EchoRed \"$1\"\n+  exit 1\n+}\n+\n+DieUsage() {\n+  Die \"Usage: ./release_bom.sh <dependencies|bom> <release version> [<post-release-version>]\"\n+}\n+\n+# Usage: CheckVersion <version>\n+CheckVersion() {\n+  [[ $1 =~ ^[0-9]+\\.[0-9]+\\.[0-9]+(-[0-9A-Za-z]+)?$ ]] || Die \"Version: $1 not in ###.###.###[-XXX] format.\"\n+}\n+\n+# Usage: IncrementVersion <version>\n+IncrementVersion() {\n+  local version=$1\n+  local minorVersion=$(echo $version | sed 's/[0-9][0-9]*\\.[0-9][0-9]*\\.\\([0-9][0-9]\\)*/\\1/')\n+  local nextMinorVersion=$((minorVersion+1))\n+  echo $version | sed \"s/\\([0-9][0-9]*\\.[0-9][0-9]*\\)\\.[0-9][0-9]*/\\1.$nextMinorVersion/\"\n+}\n+\n+[ $# -ne 2 ] && [ $# -ne 3 ] && DieUsage\n+\n+EchoGreen '===== RELEASE SETUP SCRIPT ====='\n+\n+SUFFIX=$1\n+\n+if [[ \"${SUFFIX}\" != \"dependencies\" && \"${SUFFIX}\" != \"bom\" ]]; then\n+  DieUsage\n+fi\n+\n+VERSION=$2\n+CheckVersion ${VERSION}\n+\n+if [ -n \"$3\" ]; then\n+  NEXT_VERSION=$3\n+  CheckVersion ${NEXT_VERSION}\n+else\n+  NEXT_VERSION=$(IncrementVersion $VERSION)\n+  CheckVersion ${NEXT_VERSION}\n+fi\n+\n+if [[ $(git status -uno --porcelain) ]]; then\n+  Die 'There are uncommitted changes.'\n+fi\n+\n+# Make sure client is up to date with the latest changes.\n+git checkout master\n+git pull\n+\n+# Checks out a new branch for this version release (eg. 1.5.7).\n+git checkout -b ${VERSION}-${SUFFIX}\n+\n+\n+# Updates the pom.xml with the next snapshot version.\n+# For example, when releasing 1.5.7, the next snapshot version would be 1.5.8-SNAPSHOT.\n+NEXT_SNAPSHOT=${NEXT_VERSION}\n+if [[ \"${NEXT_SNAPSHOT}\" != *-SNAPSHOT ]]; then\n+  NEXT_SNAPSHOT=${NEXT_SNAPSHOT}-SNAPSHOT\n+fi\n+\n+if [[ \"${SUFFIX}\" = \"bom\" ]]; then\n+  cd boms/cloud-oss-bom\n+fi\n+\n+# Updates the pom.xml with the version to release.\n+mvn versions:set versions:commit -DnewVersion=${VERSION} -DgenerateBackupPoms=false\n+\n+if [[ \"${SUFFIX}\" = \"dependencies\" ]]; then\n+  sed -i \"\" \"s/version = .*/version = ${VERSION}/\" gradle-plugin/gradle.properties\n+fi\n+\n+# Tags a new commit for this release.\n+git commit -am \"preparing release ${VERSION}-${SUFFIX}\"\n+git tag v${VERSION}-${SUFFIX}\n+mvn versions:set versions:commit -DnewVersion=${NEXT_SNAPSHOT} -DgenerateBackupPoms=false\n+\n+if [[ \"${SUFFIX}\" = \"dependencies\" ]]; then\n+  sed -i \"\" \"s/version = .*/version = ${NEXT_SNAPSHOT}/\" gradle-plugin/gradle.properties\n+fi\n+\n+# Commits this next snapshot version.\n+git commit -am \"${NEXT_SNAPSHOT}\"\n+\n+# Pushes the tag and release branch to Github.\n+git push origin v${VERSION}-${SUFFIX}\n+git push --set-upstream origin ${VERSION}-${SUFFIX}\n+\n+# Create the PR\n+gh pr create -t \"Release ${VERSION}-${SUFFIX}\" -b \"Release ${VERSION}-${SUFFIX}\"\n+\n+# File a PR on Github for the new branch. Have someone LGTM it, which gives you permission to continue.\n+EchoGreen 'Ask someone to approve this PR.'\n+\n+p4 g4d -f release-${VERSION}-${SUFFIX}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eb29944c9d137445cc44a30cfa7f1e679fa2fb99"}, "originalPosition": 108}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2440, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}