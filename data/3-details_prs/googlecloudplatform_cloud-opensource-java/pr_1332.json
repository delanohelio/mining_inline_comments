{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk4MjQ4NzQ2", "number": 1332, "title": "Throw IOException from getClassFileNames", "bodyText": "@suztomo This is what the code looks like if we throw exceptions from getClassFilenames instead.", "createdAt": "2020-04-03T15:45:42Z", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1332", "merged": true, "mergeCommit": {"oid": "21359c227d35569f5cb77bf04a9f9f8be4b18077"}, "closed": true, "closedAt": "2020-04-11T11:53:40Z", "author": {"login": "elharo"}, "timelineItems": {"totalCount": 37, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcR1ogAAH2gAyMzk4MjQ4NzQ2OjE4Y2RlNGRiYTc1YzFmOTc2YjI0NzllMGYzYjk1OTIxM2YyNjVmOTE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcWYLeIAFqTM5MTY3NzY1Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "18cde4dba75c1f976b2479e0f3b959213f265f91", "author": {"user": {"login": "elharo", "name": "Elliotte Rusty Harold"}}, "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/18cde4dba75c1f976b2479e0f3b959213f265f91", "committedDate": "2020-03-27T19:12:00Z", "message": "push class file names into ClasspathEntry"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "05d4198bcf291d27014a4d078d678d9c9d72dc64", "author": {"user": {"login": "elharo", "name": "Elliotte Rusty Harold"}}, "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/05d4198bcf291d27014a4d078d678d9c9d72dc64", "committedDate": "2020-03-27T19:21:43Z", "message": "make listClassFileNames void"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "55e4bbb523d7680e3d097db18a138ae161b828f7", "author": {"user": {"login": "elharo", "name": "Elliotte Rusty Harold"}}, "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/55e4bbb523d7680e3d097db18a138ae161b828f7", "committedDate": "2020-03-27T19:24:00Z", "message": "javadoc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cade5d2a300903d63227dcc8a8b9dd28c47862db", "author": {"user": {"login": "elharo", "name": "Elliotte Rusty Harold"}}, "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/cade5d2a300903d63227dcc8a8b9dd28c47862db", "committedDate": "2020-03-27T19:43:40Z", "message": "reuse constructor"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a253f6b96abd4e1857dc7057b7220b872335a11f", "author": {"user": {"login": "elharo", "name": "Elliotte Rusty Harold"}}, "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/a253f6b96abd4e1857dc7057b7220b872335a11f", "committedDate": "2020-03-27T23:08:25Z", "message": "fix a test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "56a440fd3c6d8da7696ed998baf5caf0bcffb580", "author": {"user": {"login": "elharo", "name": "Elliotte Rusty Harold"}}, "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/56a440fd3c6d8da7696ed998baf5caf0bcffb580", "committedDate": "2020-03-27T23:22:01Z", "message": "fix a test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8055d3ff5d433dbe9704a7a0668e34411a25fc5e", "author": {"user": {"login": "elharo", "name": "Elliotte Rusty Harold"}}, "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/8055d3ff5d433dbe9704a7a0668e34411a25fc5e", "committedDate": "2020-03-27T23:23:23Z", "message": "remove old comment"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f55d642ca7a9b66f3ff5f923207564ca62bce6ff", "author": {"user": {"login": "elharo", "name": "Elliotte Rusty Harold"}}, "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/f55d642ca7a9b66f3ff5f923207564ca62bce6ff", "committedDate": "2020-03-27T23:53:43Z", "message": "fix a test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f3169d15bf9478b0dc0eb9b1a616eb2df9f0f81f", "author": {"user": {"login": "elharo", "name": "Elliotte Rusty Harold"}}, "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/f3169d15bf9478b0dc0eb9b1a616eb2df9f0f81f", "committedDate": "2020-03-30T17:35:30Z", "message": "merge master"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "459fc151d2df2ceb24008503eeaa7259e2cbaf37", "author": {"user": {"login": "elharo", "name": "Elliotte Rusty Harold"}}, "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/459fc151d2df2ceb24008503eeaa7259e2cbaf37", "committedDate": "2020-04-02T13:32:42Z", "message": "merge master"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "409432d69f8323d88fbbbf0adf13d198d9a96f8d", "author": {"user": {"login": "elharo", "name": "Elliotte Rusty Harold"}}, "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/409432d69f8323d88fbbbf0adf13d198d9a96f8d", "committedDate": "2020-04-02T14:26:49Z", "message": "load file names into classpath entry on construction"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fe992c89cfc8f37198e09a4687ffab5417c9f3f3", "author": {"user": {"login": "elharo", "name": "Elliotte Rusty Harold"}}, "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/fe992c89cfc8f37198e09a4687ffab5417c9f3f3", "committedDate": "2020-04-03T15:41:13Z", "message": "getClassNames throws IOException"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d62c6d856dc27b024b6935ccbffc2455dbe284e3", "author": {"user": {"login": "elharo", "name": "Elliotte Rusty Harold"}}, "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/d62c6d856dc27b024b6935ccbffc2455dbe284e3", "committedDate": "2020-04-03T15:44:14Z", "message": "merge master"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg3NDEwMTg5", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1332#pullrequestreview-387410189", "createdAt": "2020-04-03T16:33:47Z", "commit": {"oid": "d62c6d856dc27b024b6935ccbffc2455dbe284e3"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxNjozMzo0N1rOGAdNDg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxNjozNzowMVrOGAdUeQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzEzMTY2Mg==", "bodyText": "ClassPathBuilder should focus on building class path. It should not read the content of JAR.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1332#discussion_r403131662", "createdAt": "2020-04-03T16:33:47Z", "author": {"login": "suztomo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/ClassPathBuilder.java", "diffHunk": "@@ -59,8 +60,9 @@ public ClassPathBuilder(DependencyGraphBuilder dependencyGraphBuilder) {\n    * closest' strategy follows Maven's dependency mediation.\n    *\n    * @param artifacts Maven artifacts to check. They are treated as the root of the dependency tree.\n+   * @throws IOException if a jar file can't be read\n    */\n-  public ClassPathResult resolve(List<Artifact> artifacts) {\n+  public ClassPathResult resolve(List<Artifact> artifacts) throws IOException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d62c6d856dc27b024b6935ccbffc2455dbe284e3"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzEzMzQ1Mw==", "bodyText": "It looks strange to throw IOException just to create instances.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1332#discussion_r403133453", "createdAt": "2020-04-03T16:36:49Z", "author": {"login": "suztomo"}, "path": "dependencies/src/test/java/com/google/cloud/tools/opensource/classpath/ClassFileTest.java", "diffHunk": "@@ -21,27 +21,28 @@\n import com.google.common.testing.EqualsTester;\n import com.google.common.testing.NullPointerTester;\n import com.google.common.testing.NullPointerTester.Visibility;\n+import java.io.IOException;\n import java.nio.file.Paths;\n import org.junit.Test;\n \n public class ClassFileTest {\n   @Test\n-  public void testCreation() {\n+  public void testCreation() throws IOException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d62c6d856dc27b024b6935ccbffc2455dbe284e3"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzEzMzU2MQ==", "bodyText": "It looks strange to throw IOException just to checking equality.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1332#discussion_r403133561", "createdAt": "2020-04-03T16:37:01Z", "author": {"login": "suztomo"}, "path": "dependencies/src/test/java/com/google/cloud/tools/opensource/classpath/ClassFileTest.java", "diffHunk": "@@ -21,27 +21,28 @@\n import com.google.common.testing.EqualsTester;\n import com.google.common.testing.NullPointerTester;\n import com.google.common.testing.NullPointerTester.Visibility;\n+import java.io.IOException;\n import java.nio.file.Paths;\n import org.junit.Test;\n \n public class ClassFileTest {\n   @Test\n-  public void testCreation() {\n+  public void testCreation() throws IOException {\n     ClassPathEntry entry = new ClassPathEntry(Paths.get(\"foo\", \"bar.jar\"));\n     ClassFile file = new ClassFile(entry, \"com.test.Foo\");\n     assertEquals(\"com.test.Foo\", file.getBinaryName());\n     assertEquals(new ClassPathEntry(Paths.get(\"foo\", \"bar.jar\")), file.getClassPathEntry());\n   }\n \n   @Test\n-  public void testNull() {\n+  public void testNull() throws IOException {\n     new NullPointerTester()\n         .setDefault(ClassPathEntry.class, new ClassPathEntry(Paths.get(\"foo\", \"bar.jar\")))\n         .testConstructors(ClassFile.class, Visibility.PACKAGE);\n   }\n \n   @Test\n-  public void testEquality() {\n+  public void testEquality() throws IOException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d62c6d856dc27b024b6935ccbffc2455dbe284e3"}, "originalPosition": 28}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8d0b376a1425d2a26e01fc4a4f45f717a6b25107", "author": {"user": {"login": "elharo", "name": "Elliotte Rusty Harold"}}, "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/8d0b376a1425d2a26e01fc4a4f45f717a6b25107", "committedDate": "2020-04-03T17:11:52Z", "message": "remove some vestigial throws clauses"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c415c6ce5ce21ece0f94ac390b892dc87df8065a", "author": {"user": {"login": "elharo", "name": "Elliotte Rusty Harold"}}, "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/c415c6ce5ce21ece0f94ac390b892dc87df8065a", "committedDate": "2020-04-03T17:14:26Z", "message": "rmeove some vestigial throws clauses"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg3NDY2Mzg5", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1332#pullrequestreview-387466389", "createdAt": "2020-04-03T17:55:55Z", "commit": {"oid": "c415c6ce5ce21ece0f94ac390b892dc87df8065a"}, "state": "COMMENTED", "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxNzo1NTo1NVrOGAhLQg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxODoxNToyMFrOGAiMVQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzE5NjczOA==", "bodyText": "Are you trying to put more things to ClassPathEntry? I may need to listen to your direction further.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1332#discussion_r403196738", "createdAt": "2020-04-03T17:55:55Z", "author": {"login": "suztomo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/ClassFile.java", "diffHunk": "@@ -26,6 +26,7 @@\n  * A locator for a compiled class file of {@code className} in {@code classPathEntry} to uniquely\n  * locate the class implementation in a class path.\n  */\n+// TODO this should be merged into ClassPathEntry ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c415c6ce5ce21ece0f94ac390b892dc87df8065a"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzIwNDczMA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n               * @return the fully qualified names of the classes in this entry's jar file\n          \n          \n            \n               * Returns the fully qualified names of the classes in this entry's jar file", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1332#discussion_r403204730", "createdAt": "2020-04-03T18:05:05Z", "author": {"login": "suztomo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/ClassPathEntry.java", "diffHunk": "@@ -109,4 +109,17 @@ public String toString() {\n \n     return classPath.getAllClasses().stream().map(ClassInfo::getName).collect(toImmutableSet());\n   }\n+  \n+  /**\n+   * @return the fully qualified names of the classes in this entry's jar file", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c415c6ce5ce21ece0f94ac390b892dc87df8065a"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzIwNzIxNA==", "bodyText": "Would you move this outside constructor?\nClassDumper's factory method keeps the constructor simple without IO.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1332#discussion_r403207214", "createdAt": "2020-04-03T18:08:06Z", "author": {"login": "suztomo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/ClassDumper.java", "diffHunk": "@@ -91,19 +87,25 @@ static ClassDumper create(List<ClassPathEntry> entries) throws IOException {\n             .collect(toImmutableList());\n     checkArgument(\n         unreadableFiles.isEmpty(), \"Some jar files are not readable: %s\", unreadableFiles);\n-\n-    return new ClassDumper(entries, extensionClassLoader, mapJarToClassFileNames(entries));\n+    \n+    return new ClassDumper(entries, extensionClassLoader);\n   }\n \n   private ClassDumper(\n       List<ClassPathEntry> inputClassPath,\n-      ClassLoader extensionClassLoader,\n-      ImmutableSetMultimap<ClassPathEntry, String> jarToClasses) {\n+      ClassLoader extensionClassLoader) throws IOException {\n     this.inputClassPath = ImmutableList.copyOf(inputClassPath);\n     this.classRepository = createClassRepository(inputClassPath);\n     this.extensionClassLoader = extensionClassLoader;\n-    this.classPathEntryToClassFileNames = ImmutableSetMultimap.copyOf(jarToClasses);\n-    this.classFileNameToClassPathEntry = ImmutableListMultimap.copyOf(jarToClasses.inverse());\n+    \n+    ImmutableListMultimap.Builder<String, ClassPathEntry> builder = ImmutableListMultimap.builder();\n+    for (ClassPathEntry entry : inputClassPath) {\n+      for (String className : entry.getClassNames()) {\n+        builder.put(className, entry);\n+      }\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c415c6ce5ce21ece0f94ac390b892dc87df8065a"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzIwODM4OA==", "bodyText": "I'm still feeling a bit itchy on holding this in ClassPathEntry. But we can think of this as an internal optimization of existing listClassFileNames  method. Good.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1332#discussion_r403208388", "createdAt": "2020-04-03T18:09:32Z", "author": {"login": "suztomo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/ClassPathEntry.java", "diffHunk": "@@ -35,6 +35,7 @@\n \n   private Path jar;\n   private Artifact artifact;\n+  private ImmutableSet<String> classFileNames;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c415c6ce5ce21ece0f94ac390b892dc87df8065a"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzIwOTc5NQ==", "bodyText": "Description is needed. https://google.github.io/styleguide/javaguide.html#s7.1.3-javadoc-block-tags", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1332#discussion_r403209795", "createdAt": "2020-04-03T18:11:21Z", "author": {"login": "suztomo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/LinkageChecker.java", "diffHunk": "@@ -139,73 +137,79 @@ private LinkageChecker(\n   /**\n    * Returns {@link SymbolProblem}s found in the class path and referencing classes for each\n    * problem.\n+   * \n+   * @throws IOException ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c415c6ce5ce21ece0f94ac390b892dc87df8065a"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzIxMTQ1Mg==", "bodyText": "One line with \"*\" before block tags\nhttps://google.github.io/styleguide/javaguide.html#s7.1.2-javadoc-paragraphs", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1332#discussion_r403211452", "createdAt": "2020-04-03T18:13:06Z", "author": {"login": "suztomo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/LinkageCheckerArguments.java", "diffHunk": "@@ -202,14 +203,17 @@ private static Options configureOptions() {\n   /**\n    * Returns class path entries for the absolute paths of the files specified in the JAR file\n    * option.\n+   * @throws IOException if a jar file could not be read", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c415c6ce5ce21ece0f94ac390b892dc87df8065a"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzIxMzE0OA==", "bodyText": "getClassPath is not appropriate name. This method is for the case JAR files are specified. All three cases (bom, Maven artifacts, and JAR files) generate a class path but this method is only for when we specify JAR files.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1332#discussion_r403213148", "createdAt": "2020-04-03T18:15:03Z", "author": {"login": "suztomo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/LinkageCheckerArguments.java", "diffHunk": "@@ -202,14 +203,17 @@ private static Options configureOptions() {\n   /**\n    * Returns class path entries for the absolute paths of the files specified in the JAR file\n    * option.\n+   * @throws IOException if a jar file could not be read\n    */\n-  ImmutableList<ClassPathEntry> getJarFiles() {\n+  // TODO rename to getClassPath", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c415c6ce5ce21ece0f94ac390b892dc87df8065a"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzIxMzM5Nw==", "bodyText": "?", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1332#discussion_r403213397", "createdAt": "2020-04-03T18:15:20Z", "author": {"login": "suztomo"}, "path": "dependencies/src/test/java/com/google/cloud/tools/opensource/classpath/ClassPathEntryTest.java", "diffHunk": "@@ -46,7 +46,6 @@\n   private Artifact barArtifact =\n       new DefaultArtifact(\"com.google\", \"bar\", null, \"jar\", \"0.0.1\", null, barJar.toFile());\n \n-  @Test", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c415c6ce5ce21ece0f94ac390b892dc87df8065a"}, "originalPosition": 4}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ce4290521448498098a5769374007535dae208c8", "author": {"user": {"login": "elharo", "name": "Elliotte Rusty Harold"}}, "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/ce4290521448498098a5769374007535dae208c8", "committedDate": "2020-04-03T19:31:22Z", "message": "code review"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "29ac16cdd21a7e77390e952fa9098696b78a24ae", "author": {"user": {"login": "elharo", "name": "Elliotte Rusty Harold"}}, "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/29ac16cdd21a7e77390e952fa9098696b78a24ae", "committedDate": "2020-04-06T13:18:57Z", "message": "set field"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "da76a5cdda54bf115007ed3e4722a7c2653807ef", "author": {"user": {"login": "elharo", "name": "Elliotte Rusty Harold"}}, "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/da76a5cdda54bf115007ed3e4722a7c2653807ef", "committedDate": "2020-04-06T13:20:07Z", "message": "line length"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg3NTE4NjY1", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1332#pullrequestreview-387518665", "createdAt": "2020-04-03T19:17:57Z", "commit": {"oid": "c415c6ce5ce21ece0f94ac390b892dc87df8065a"}, "state": "COMMENTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxOToxNzo1N1rOGAk68A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxOTozMDo1OVrOGAlXuw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzI1ODA5Ng==", "bodyText": "The goal is is to eventually get rid of the ImmutableListMultimap completely. However for now the create method and the private constructor are effectively part 1 and part 2 of the same code. Which one code goes into doesn't seem to make any difference.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1332#discussion_r403258096", "createdAt": "2020-04-03T19:17:57Z", "author": {"login": "elharo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/ClassDumper.java", "diffHunk": "@@ -91,19 +87,25 @@ static ClassDumper create(List<ClassPathEntry> entries) throws IOException {\n             .collect(toImmutableList());\n     checkArgument(\n         unreadableFiles.isEmpty(), \"Some jar files are not readable: %s\", unreadableFiles);\n-\n-    return new ClassDumper(entries, extensionClassLoader, mapJarToClassFileNames(entries));\n+    \n+    return new ClassDumper(entries, extensionClassLoader);\n   }\n \n   private ClassDumper(\n       List<ClassPathEntry> inputClassPath,\n-      ClassLoader extensionClassLoader,\n-      ImmutableSetMultimap<ClassPathEntry, String> jarToClasses) {\n+      ClassLoader extensionClassLoader) throws IOException {\n     this.inputClassPath = ImmutableList.copyOf(inputClassPath);\n     this.classRepository = createClassRepository(inputClassPath);\n     this.extensionClassLoader = extensionClassLoader;\n-    this.classPathEntryToClassFileNames = ImmutableSetMultimap.copyOf(jarToClasses);\n-    this.classFileNameToClassPathEntry = ImmutableListMultimap.copyOf(jarToClasses.inverse());\n+    \n+    ImmutableListMultimap.Builder<String, ClassPathEntry> builder = ImmutableListMultimap.builder();\n+    for (ClassPathEntry entry : inputClassPath) {\n+      for (String className : entry.getClassNames()) {\n+        builder.put(className, entry);\n+      }\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzIwNzIxNA=="}, "originalCommit": {"oid": "c415c6ce5ce21ece0f94ac390b892dc87df8065a"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzI1OTM4Mg==", "bodyText": "The goal is to replace the generic, complex data structures like multiple ImmutableListMultimaps with class types that are tailored to the problem domain. ClassFile was only needed because we didn't have ClassPathEntry. It can go away now. We shouldn't have to look in four different places to figure out what's in the classpath.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1332#discussion_r403259382", "createdAt": "2020-04-03T19:20:44Z", "author": {"login": "elharo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/ClassFile.java", "diffHunk": "@@ -26,6 +26,7 @@\n  * A locator for a compiled class file of {@code className} in {@code classPathEntry} to uniquely\n  * locate the class implementation in a class path.\n  */\n+// TODO this should be merged into ClassPathEntry ", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzE5NjczOA=="}, "originalCommit": {"oid": "c415c6ce5ce21ece0f94ac390b892dc87df8065a"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzI2MDQ2Nw==", "bodyText": "done", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1332#discussion_r403260467", "createdAt": "2020-04-03T19:22:57Z", "author": {"login": "elharo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/ClassPathEntry.java", "diffHunk": "@@ -109,4 +109,17 @@ public String toString() {\n \n     return classPath.getAllClasses().stream().map(ClassInfo::getName).collect(toImmutableSet());\n   }\n+  \n+  /**\n+   * @return the fully qualified names of the classes in this entry's jar file", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzIwNDczMA=="}, "originalCommit": {"oid": "c415c6ce5ce21ece0f94ac390b892dc87df8065a"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzI2MjE2NA==", "bodyText": "done", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1332#discussion_r403262164", "createdAt": "2020-04-03T19:26:24Z", "author": {"login": "elharo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/LinkageChecker.java", "diffHunk": "@@ -139,73 +137,79 @@ private LinkageChecker(\n   /**\n    * Returns {@link SymbolProblem}s found in the class path and referencing classes for each\n    * problem.\n+   * \n+   * @throws IOException ", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzIwOTc5NQ=="}, "originalCommit": {"oid": "c415c6ce5ce21ece0f94ac390b892dc87df8065a"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzI2NDg5MA==", "bodyText": "Separate so I'll take that out for now but this needs a rethink too.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1332#discussion_r403264890", "createdAt": "2020-04-03T19:30:09Z", "author": {"login": "elharo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/LinkageCheckerArguments.java", "diffHunk": "@@ -202,14 +203,17 @@ private static Options configureOptions() {\n   /**\n    * Returns class path entries for the absolute paths of the files specified in the JAR file\n    * option.\n+   * @throws IOException if a jar file could not be read\n    */\n-  ImmutableList<ClassPathEntry> getJarFiles() {\n+  // TODO rename to getClassPath", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzIxMzE0OA=="}, "originalCommit": {"oid": "c415c6ce5ce21ece0f94ac390b892dc87df8065a"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzI2NTQ2Nw==", "bodyText": "merge glitch. fixed.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1332#discussion_r403265467", "createdAt": "2020-04-03T19:30:59Z", "author": {"login": "elharo"}, "path": "dependencies/src/test/java/com/google/cloud/tools/opensource/classpath/ClassPathEntryTest.java", "diffHunk": "@@ -46,7 +46,6 @@\n   private Artifact barArtifact =\n       new DefaultArtifact(\"com.google\", \"bar\", null, \"jar\", \"0.0.1\", null, barJar.toFile());\n \n-  @Test", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzIxMzM5Nw=="}, "originalCommit": {"oid": "c415c6ce5ce21ece0f94ac390b892dc87df8065a"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg4MzMxNjY3", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1332#pullrequestreview-388331667", "createdAt": "2020-04-06T14:54:38Z", "commit": {"oid": "da76a5cdda54bf115007ed3e4722a7c2653807ef"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxNDo1NDozOFrOGBbvGg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxNTowNzozOFrOGBcWMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDE1NjE4Ng==", "bodyText": "Yes, this is part 1 and part 2 to follow \"Avoid doing work in constructors\". For our case, it does not make much difference. Therefore, I don't find a special reason to defy this guide. Would you move this IO outside constructor?", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1332#discussion_r404156186", "createdAt": "2020-04-06T14:54:38Z", "author": {"login": "suztomo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/ClassDumper.java", "diffHunk": "@@ -91,19 +87,25 @@ static ClassDumper create(List<ClassPathEntry> entries) throws IOException {\n             .collect(toImmutableList());\n     checkArgument(\n         unreadableFiles.isEmpty(), \"Some jar files are not readable: %s\", unreadableFiles);\n-\n-    return new ClassDumper(entries, extensionClassLoader, mapJarToClassFileNames(entries));\n+    \n+    return new ClassDumper(entries, extensionClassLoader);\n   }\n \n   private ClassDumper(\n       List<ClassPathEntry> inputClassPath,\n-      ClassLoader extensionClassLoader,\n-      ImmutableSetMultimap<ClassPathEntry, String> jarToClasses) {\n+      ClassLoader extensionClassLoader) throws IOException {\n     this.inputClassPath = ImmutableList.copyOf(inputClassPath);\n     this.classRepository = createClassRepository(inputClassPath);\n     this.extensionClassLoader = extensionClassLoader;\n-    this.classPathEntryToClassFileNames = ImmutableSetMultimap.copyOf(jarToClasses);\n-    this.classFileNameToClassPathEntry = ImmutableListMultimap.copyOf(jarToClasses.inverse());\n+    \n+    ImmutableListMultimap.Builder<String, ClassPathEntry> builder = ImmutableListMultimap.builder();\n+    for (ClassPathEntry entry : inputClassPath) {\n+      for (String className : entry.getClassNames()) {\n+        builder.put(className, entry);\n+      }\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzIwNzIxNA=="}, "originalCommit": {"oid": "c415c6ce5ce21ece0f94ac390b892dc87df8065a"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDE1OTM1MQ==", "bodyText": "I believe these throws IOException is no longer needed as ClassPathEntry does not perform IO upon instance creation.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1332#discussion_r404159351", "createdAt": "2020-04-06T14:58:32Z", "author": {"login": "suztomo"}, "path": "dependencies/src/test/java/com/google/cloud/tools/opensource/classpath/ClassPathEntryTest.java", "diffHunk": "@@ -151,7 +151,7 @@ private static Artifact resolveArtifact(String coordinates) throws ArtifactResol\n   }\n   \n   @Test\n-  public void testFilePresenceRequirement() {\n+  public void testFilePresenceRequirement() throws IOException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "da76a5cdda54bf115007ed3e4722a7c2653807ef"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDE2NjE5Mg==", "bodyText": "Let's continue in #1328", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1332#discussion_r404166192", "createdAt": "2020-04-06T15:07:38Z", "author": {"login": "suztomo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/ClassFile.java", "diffHunk": "@@ -26,6 +26,7 @@\n  * A locator for a compiled class file of {@code className} in {@code classPathEntry} to uniquely\n  * locate the class implementation in a class path.\n  */\n+// TODO this should be merged into ClassPathEntry ", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzE5NjczOA=="}, "originalCommit": {"oid": "c415c6ce5ce21ece0f94ac390b892dc87df8065a"}, "originalPosition": 4}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b1f78924f40563441a1fbaa6c897e4ced823b61b", "author": {"user": {"login": "elharo", "name": "Elliotte Rusty Harold"}}, "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/b1f78924f40563441a1fbaa6c897e4ced823b61b", "committedDate": "2020-04-06T15:15:12Z", "message": "Merge branch 'master' into sim2"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2d620c7028e8d1c284f91267bd28ef77ac8e15e8", "author": {"user": {"login": "elharo", "name": "Elliotte Rusty Harold"}}, "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/2d620c7028e8d1c284f91267bd28ef77ac8e15e8", "committedDate": "2020-04-07T14:32:39Z", "message": "Merge branch 'master' into sim2"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dc30bdf280ff123704c4edad52d43ec449e654db", "author": {"user": {"login": "elharo", "name": "Elliotte Rusty Harold"}}, "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/dc30bdf280ff123704c4edad52d43ec449e654db", "committedDate": "2020-04-07T14:40:51Z", "message": "merge master"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d841f5b6813933a263d95a0a4c1e69edf24d79c5", "author": {"user": {"login": "elharo", "name": "Elliotte Rusty Harold"}}, "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/d841f5b6813933a263d95a0a4c1e69edf24d79c5", "committedDate": "2020-04-08T17:40:37Z", "message": "code review"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "42452a122706cfd7d85e662a99cfba33390e79d5", "author": {"user": {"login": "elharo", "name": "Elliotte Rusty Harold"}}, "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/42452a122706cfd7d85e662a99cfba33390e79d5", "committedDate": "2020-04-08T17:41:42Z", "message": "@return"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "38ee50eb03c6f7a9c87cb887dc76ddcffdf5d444", "author": {"user": {"login": "elharo", "name": "Elliotte Rusty Harold"}}, "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/38ee50eb03c6f7a9c87cb887dc76ddcffdf5d444", "committedDate": "2020-04-09T19:20:56Z", "message": "mark method static"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c8af49556a8713600f25bbea0fd0bb8e3a0d5a8d", "author": {"user": {"login": "elharo", "name": "Elliotte Rusty Harold"}}, "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/c8af49556a8713600f25bbea0fd0bb8e3a0d5a8d", "committedDate": "2020-04-10T16:43:42Z", "message": "Merge branch 'master' into sim2"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a1fc113334b8291a00cd53ff130386d79e22ba29", "author": {"user": {"login": "elharo", "name": "Elliotte Rusty Harold"}}, "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/a1fc113334b8291a00cd53ff130386d79e22ba29", "committedDate": "2020-04-10T17:03:24Z", "message": "remove comment"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0166cfcc1978fcda246ec07b1b14fcf93196d601", "author": {"user": {"login": "elharo", "name": "Elliotte Rusty Harold"}}, "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/0166cfcc1978fcda246ec07b1b14fcf93196d601", "committedDate": "2020-04-10T17:07:31Z", "message": "revert to fields"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "19727ed84aad9e7cc8f5b9b6aa1b095f735afa36", "author": {"user": {"login": "elharo", "name": "Elliotte Rusty Harold"}}, "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/19727ed84aad9e7cc8f5b9b6aa1b095f735afa36", "committedDate": "2020-04-10T17:09:14Z", "message": "correct typo"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "405736775f2bdc01d0158711aa1509b5022566b4", "author": {"user": {"login": "elharo", "name": "Elliotte Rusty Harold"}}, "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/405736775f2bdc01d0158711aa1509b5022566b4", "committedDate": "2020-04-10T21:01:05Z", "message": "Merge branch 'master' into sim2"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9dd2200d4ba902e8a5444c59b49a9f0b4573bc22", "author": {"user": {"login": "elharo", "name": "Elliotte Rusty Harold"}}, "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/9dd2200d4ba902e8a5444c59b49a9f0b4573bc22", "committedDate": "2020-04-10T21:08:26Z", "message": "Merge branch 'master' into sim2"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d9c21f62f28a02f91eff4c3b974115d9354a94d0", "author": {"user": {"login": "elharo", "name": "Elliotte Rusty Harold"}}, "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/d9c21f62f28a02f91eff4c3b974115d9354a94d0", "committedDate": "2020-04-10T21:09:18Z", "message": "Merge branch 'sim2' of github.com:GoogleCloudPlatform/cloud-opensource-java into sim2"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4911ccd85014648f523946f52592d59de5c63816", "author": {"user": {"login": "elharo", "name": "Elliotte Rusty Harold"}}, "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/4911ccd85014648f523946f52592d59de5c63816", "committedDate": "2020-04-10T21:20:42Z", "message": "move I/O out of the constructor"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkxNjc3NjUz", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1332#pullrequestreview-391677653", "createdAt": "2020-04-10T21:42:30Z", "commit": {"oid": "4911ccd85014648f523946f52592d59de5c63816"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQyMTo0MjozMFrOGEGodg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQyMTo0MjozMFrOGEGodg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjk1NjE1MA==", "bodyText": "This constructor does not throw IOException.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1332#discussion_r406956150", "createdAt": "2020-04-10T21:42:30Z", "author": {"login": "suztomo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/ClassDumper.java", "diffHunk": "@@ -91,19 +87,28 @@ static ClassDumper create(List<ClassPathEntry> entries) throws IOException {\n             .collect(toImmutableList());\n     checkArgument(\n         unreadableFiles.isEmpty(), \"Some jar files are not readable: %s\", unreadableFiles);\n-\n-    return new ClassDumper(entries, extensionClassLoader, mapJarToClassFileNames(entries));\n+    \n+    ImmutableListMultimap.Builder<String, ClassPathEntry> builder = ImmutableListMultimap.builder();\n+    for (ClassPathEntry entry : entries) {\n+      for (String className : entry.getClassNames()) {\n+        builder.put(className, entry);\n+      }\n+    }\n+    \n+    ImmutableListMultimap<String, ClassPathEntry> map = builder.build();\n+    \n+    return new ClassDumper(entries, extensionClassLoader, map);\n   }\n \n   private ClassDumper(\n       List<ClassPathEntry> inputClassPath,\n       ClassLoader extensionClassLoader,\n-      ImmutableSetMultimap<ClassPathEntry, String> jarToClasses) {\n+      ImmutableListMultimap<String, ClassPathEntry> map)\n+      throws IOException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4911ccd85014648f523946f52592d59de5c63816"}, "originalPosition": 46}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 337, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}