{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcyNDM1NTgy", "number": 1195, "reviewThreads": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QxNDozNDoyMFrODeCkDA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wOFQxNDowOTozM1rODeOIBA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyODI1ODY4OnYy", "diffSide": "RIGHT", "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/UnresolvableArtifactProblem.java", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QxNDozNDoyMFrOFm-62w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QxNjoyNzo0N1rOFnCxQQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjQyMTA4Mw==", "bodyText": "path needs to include the unfound artifact; otherwise we cannot tell the scope / optional of the dependency.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1195#discussion_r376421083", "createdAt": "2020-02-07T14:34:20Z", "author": {"login": "suztomo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/UnresolvableArtifactProblem.java", "diffHunk": "@@ -41,6 +42,18 @@ public UnresolvableArtifactProblem(Artifact artifact) {\n   public UnresolvableArtifactProblem(List<DependencyNode> dependencyPath) {\n     super(dependencyPath.get(dependencyPath.size() - 1).getArtifact(), dependencyPath);\n   }\n+  \n+  /**\n+   * Problem when Maven cannot resolve the artifact at the leaf of {@code dependencyPath} in a\n+   * dependency tree.\n+   * \n+   * @param artifact dependency that can't be found\n+   * @param path to the unfound artifact, not including the unfound artifact", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0bcc3b93b3a4fa905e604f9492e53df4f10f1a19"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjQ1MDYwNQ==", "bodyText": "Let me double check, but I think that would be a behavioral change from the current code", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1195#discussion_r376450605", "createdAt": "2020-02-07T15:27:00Z", "author": {"login": "elharo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/UnresolvableArtifactProblem.java", "diffHunk": "@@ -41,6 +42,18 @@ public UnresolvableArtifactProblem(Artifact artifact) {\n   public UnresolvableArtifactProblem(List<DependencyNode> dependencyPath) {\n     super(dependencyPath.get(dependencyPath.size() - 1).getArtifact(), dependencyPath);\n   }\n+  \n+  /**\n+   * Problem when Maven cannot resolve the artifact at the leaf of {@code dependencyPath} in a\n+   * dependency tree.\n+   * \n+   * @param artifact dependency that can't be found\n+   * @param path to the unfound artifact, not including the unfound artifact", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjQyMTA4Mw=="}, "originalCommit": {"oid": "0bcc3b93b3a4fa905e604f9492e53df4f10f1a19"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjQ1NzEyMg==", "bodyText": "OK, I think you're right though the code is a little hard to follow. The parentNodes stack variable might be poorly named. In any case I can make this doc comment ambiguous enough to cover both cases, and this PR does not change the behavior", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1195#discussion_r376457122", "createdAt": "2020-02-07T15:38:25Z", "author": {"login": "elharo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/UnresolvableArtifactProblem.java", "diffHunk": "@@ -41,6 +42,18 @@ public UnresolvableArtifactProblem(Artifact artifact) {\n   public UnresolvableArtifactProblem(List<DependencyNode> dependencyPath) {\n     super(dependencyPath.get(dependencyPath.size() - 1).getArtifact(), dependencyPath);\n   }\n+  \n+  /**\n+   * Problem when Maven cannot resolve the artifact at the leaf of {@code dependencyPath} in a\n+   * dependency tree.\n+   * \n+   * @param artifact dependency that can't be found\n+   * @param path to the unfound artifact, not including the unfound artifact", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjQyMTA4Mw=="}, "originalCommit": {"oid": "0bcc3b93b3a4fa905e604f9492e53df4f10f1a19"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjQ2NzA2MQ==", "bodyText": "The parentNodes do not have the node being checked. ExceptionAndPath was combining them to make the dependency path for UnresolvableArtifactProblem.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1195#discussion_r376467061", "createdAt": "2020-02-07T15:55:59Z", "author": {"login": "suztomo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/UnresolvableArtifactProblem.java", "diffHunk": "@@ -41,6 +42,18 @@ public UnresolvableArtifactProblem(Artifact artifact) {\n   public UnresolvableArtifactProblem(List<DependencyNode> dependencyPath) {\n     super(dependencyPath.get(dependencyPath.size() - 1).getArtifact(), dependencyPath);\n   }\n+  \n+  /**\n+   * Problem when Maven cannot resolve the artifact at the leaf of {@code dependencyPath} in a\n+   * dependency tree.\n+   * \n+   * @param artifact dependency that can't be found\n+   * @param path to the unfound artifact, not including the unfound artifact", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjQyMTA4Mw=="}, "originalCommit": {"oid": "0bcc3b93b3a4fa905e604f9492e53df4f10f1a19"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjQ4NDE2MQ==", "bodyText": "The parentNodes do not have the node being checked.\n\nThis was wrong.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1195#discussion_r376484161", "createdAt": "2020-02-07T16:27:47Z", "author": {"login": "suztomo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/UnresolvableArtifactProblem.java", "diffHunk": "@@ -41,6 +42,18 @@ public UnresolvableArtifactProblem(Artifact artifact) {\n   public UnresolvableArtifactProblem(List<DependencyNode> dependencyPath) {\n     super(dependencyPath.get(dependencyPath.size() - 1).getArtifact(), dependencyPath);\n   }\n+  \n+  /**\n+   * Problem when Maven cannot resolve the artifact at the leaf of {@code dependencyPath} in a\n+   * dependency tree.\n+   * \n+   * @param artifact dependency that can't be found\n+   * @param path to the unfound artifact, not including the unfound artifact", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjQyMTA4Mw=="}, "originalCommit": {"oid": "0bcc3b93b3a4fa905e604f9492e53df4f10f1a19"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyODY0NTA0OnYy", "diffSide": "RIGHT", "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/ArtifactProblem.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QxNjoyNDowM1rOFnCpwA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QxNjo0NTowNVrOFnDUVw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjQ4MjI0MA==", "bodyText": "Why does this needs to be changed to Collection?\n\nAs we care about the order of the dependency path, List is appropriate.\nI see Stack implements List interface. https://docs.oracle.com/javase/8/docs/api/java/util/Stack.html.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1195#discussion_r376482240", "createdAt": "2020-02-07T16:24:03Z", "author": {"login": "suztomo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/ArtifactProblem.java", "diffHunk": "@@ -35,7 +35,7 @@\n \n   protected final ImmutableList<DependencyNode> dependencyPath;\n \n-  protected ArtifactProblem(Artifact artifact, List<DependencyNode> dependencyPath) {\n+  protected ArtifactProblem(Artifact artifact, Collection<DependencyNode> dependencyPath) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "52e1eb2f1f3c4d93db438c29357773feabfcdc1f"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjQ5MzE0Mw==", "bodyText": "OK, fixed, though stacks being a subclass of List is a long-recognized problem in the Java Collections API since it violates the ADT for stack.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1195#discussion_r376493143", "createdAt": "2020-02-07T16:45:05Z", "author": {"login": "elharo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/ArtifactProblem.java", "diffHunk": "@@ -35,7 +35,7 @@\n \n   protected final ImmutableList<DependencyNode> dependencyPath;\n \n-  protected ArtifactProblem(Artifact artifact, List<DependencyNode> dependencyPath) {\n+  protected ArtifactProblem(Artifact artifact, Collection<DependencyNode> dependencyPath) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjQ4MjI0MA=="}, "originalCommit": {"oid": "52e1eb2f1f3c4d93db438c29357773feabfcdc1f"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyODY1NTc3OnYy", "diffSide": "RIGHT", "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/DependencyGraphBuilder.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QxNjoyNzoyNlrOFnCwiw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QxNjo0NToyM1rOFnDU5w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjQ4Mzk3OQ==", "bodyText": "Memo: The parentNodes.push(dependencyNode) happens at line 327 (before this line). Therefore, the code should behave the same as the previous one.\nShall we rename the variable at the line 327?", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1195#discussion_r376483979", "createdAt": "2020-02-07T16:27:26Z", "author": {"login": "suztomo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/DependencyGraphBuilder.java", "diffHunk": "@@ -340,16 +340,15 @@ private DependencyGraphResult levelOrder(\n                 resolutionException.getResult().getArtifactResults()) {\n               if (artifactResult.getArtifact() == null) {\n                 DependencyNode failedDependencyNode = artifactResult.getRequest().getDependencyNode();\n-                ExceptionAndPath failure =\n-                    ExceptionAndPath.create(parentNodes, failedDependencyNode, resolutionException);\n-                artifactProblems.add(new UnresolvableArtifactProblem(failure.getPath()));\n+                artifactProblems.add(\n+                    new UnresolvableArtifactProblem(failedDependencyNode.getArtifact(), parentNodes));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "52e1eb2f1f3c4d93db438c29357773feabfcdc1f"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjQ5MzI4Nw==", "bodyText": "next PR", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1195#discussion_r376493287", "createdAt": "2020-02-07T16:45:23Z", "author": {"login": "elharo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/DependencyGraphBuilder.java", "diffHunk": "@@ -340,16 +340,15 @@ private DependencyGraphResult levelOrder(\n                 resolutionException.getResult().getArtifactResults()) {\n               if (artifactResult.getArtifact() == null) {\n                 DependencyNode failedDependencyNode = artifactResult.getRequest().getDependencyNode();\n-                ExceptionAndPath failure =\n-                    ExceptionAndPath.create(parentNodes, failedDependencyNode, resolutionException);\n-                artifactProblems.add(new UnresolvableArtifactProblem(failure.getPath()));\n+                artifactProblems.add(\n+                    new UnresolvableArtifactProblem(failedDependencyNode.getArtifact(), parentNodes));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjQ4Mzk3OQ=="}, "originalCommit": {"oid": "52e1eb2f1f3c4d93db438c29357773feabfcdc1f"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyODY2MzA5OnYy", "diffSide": "RIGHT", "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/UnresolvableArtifactProblem.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QxNjoyOToyMlrOFnC06w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QxNjozMDo0MVrOFnC3nQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjQ4NTA5OQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n               * @param path to the unfound artifact\n          \n          \n            \n               * @param path path to the unavailable artifact", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1195#discussion_r376485099", "createdAt": "2020-02-07T16:29:22Z", "author": {"login": "suztomo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/UnresolvableArtifactProblem.java", "diffHunk": "@@ -41,6 +42,18 @@ public UnresolvableArtifactProblem(Artifact artifact) {\n   public UnresolvableArtifactProblem(List<DependencyNode> dependencyPath) {\n     super(dependencyPath.get(dependencyPath.size() - 1).getArtifact(), dependencyPath);\n   }\n+  \n+  /**\n+   * Problem when Maven cannot resolve the artifact at the leaf of {@code dependencyPath} in a\n+   * dependency tree.\n+   * \n+   * @param artifact dependency that can't be found\n+   * @param path to the unfound artifact", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "52e1eb2f1f3c4d93db438c29357773feabfcdc1f"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjQ4NTc4OQ==", "bodyText": "Because the artifact is held by the last element of path, you don't need the constructor.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1195#discussion_r376485789", "createdAt": "2020-02-07T16:30:41Z", "author": {"login": "suztomo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/UnresolvableArtifactProblem.java", "diffHunk": "@@ -41,6 +42,18 @@ public UnresolvableArtifactProblem(Artifact artifact) {\n   public UnresolvableArtifactProblem(List<DependencyNode> dependencyPath) {\n     super(dependencyPath.get(dependencyPath.size() - 1).getArtifact(), dependencyPath);\n   }\n+  \n+  /**\n+   * Problem when Maven cannot resolve the artifact at the leaf of {@code dependencyPath} in a\n+   * dependency tree.\n+   * \n+   * @param artifact dependency that can't be found\n+   * @param path to the unfound artifact", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjQ4NTA5OQ=="}, "originalCommit": {"oid": "52e1eb2f1f3c4d93db438c29357773feabfcdc1f"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyODY2ODk4OnYy", "diffSide": "RIGHT", "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/UnresolvableArtifactProblem.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QxNjozMToxMlrOFnC4sg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QxNjo0NzoyOVrOFnDZEw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjQ4NjA2Ng==", "bodyText": "Because the artifact is held by the last element of path, you don't need the constructor.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1195#discussion_r376486066", "createdAt": "2020-02-07T16:31:12Z", "author": {"login": "suztomo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/UnresolvableArtifactProblem.java", "diffHunk": "@@ -41,6 +42,18 @@ public UnresolvableArtifactProblem(Artifact artifact) {\n   public UnresolvableArtifactProblem(List<DependencyNode> dependencyPath) {\n     super(dependencyPath.get(dependencyPath.size() - 1).getArtifact(), dependencyPath);\n   }\n+  \n+  /**\n+   * Problem when Maven cannot resolve the artifact at the leaf of {@code dependencyPath} in a\n+   * dependency tree.\n+   * \n+   * @param artifact dependency that can't be found\n+   * @param path to the unfound artifact\n+   */\n+  public UnresolvableArtifactProblem(Artifact artifact, Collection<DependencyNode> path) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "52e1eb2f1f3c4d93db438c29357773feabfcdc1f"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjQ5NDM1NQ==", "bodyText": "done", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1195#discussion_r376494355", "createdAt": "2020-02-07T16:47:29Z", "author": {"login": "elharo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/UnresolvableArtifactProblem.java", "diffHunk": "@@ -41,6 +42,18 @@ public UnresolvableArtifactProblem(Artifact artifact) {\n   public UnresolvableArtifactProblem(List<DependencyNode> dependencyPath) {\n     super(dependencyPath.get(dependencyPath.size() - 1).getArtifact(), dependencyPath);\n   }\n+  \n+  /**\n+   * Problem when Maven cannot resolve the artifact at the leaf of {@code dependencyPath} in a\n+   * dependency tree.\n+   * \n+   * @param artifact dependency that can't be found\n+   * @param path to the unfound artifact\n+   */\n+  public UnresolvableArtifactProblem(Artifact artifact, Collection<DependencyNode> path) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjQ4NjA2Ng=="}, "originalCommit": {"oid": "52e1eb2f1f3c4d93db438c29357773feabfcdc1f"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyODgwNTIwOnYy", "diffSide": "RIGHT", "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/UnresolvableArtifactProblem.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QxNzoxNTo1MVrOFnEN8Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QxNzoxNTo1MVrOFnEN8Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjUwNzg4OQ==", "bodyText": "Incorrect param name.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1195#discussion_r376507889", "createdAt": "2020-02-07T17:15:51Z", "author": {"login": "suztomo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/UnresolvableArtifactProblem.java", "diffHunk": "@@ -37,6 +37,8 @@ public UnresolvableArtifactProblem(Artifact artifact) {\n   /**\n    * Problem when Maven cannot resolve the artifact at the leaf of {@code dependencyPath} in a\n    * dependency tree.\n+   * \n+   * @param path to the unavailable artifact\n    */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1123b3d99b35f81099552245be6542387595d094"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyOTA4ODkxOnYy", "diffSide": "LEFT", "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/DependencyGraphBuilder.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QxOTowMDoyNlrOFnHCrw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QxOTowMDoyNlrOFnHCrw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjU1NDE1OQ==", "bodyText": "Memo:\nThis fails:", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1195#discussion_r376554159", "createdAt": "2020-02-07T19:00:26Z", "author": {"login": "suztomo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/DependencyGraphBuilder.java", "diffHunk": "@@ -339,8 +339,11 @@ private DependencyGraphResult levelOrder(\n             for (ArtifactResult artifactResult :\n                 resolutionException.getResult().getArtifactResults()) {\n               if (artifactResult.getArtifact() == null) {\n-                artifactProblems.add(new UnresolvableArtifactProblem(parentNodes));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a146640fa203a89cf68c8fbc227b7ea5c6db6028"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyOTEyNDM3OnYy", "diffSide": "LEFT", "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/ExceptionAndPath.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QxOToxMzoyOVrOFnHZOQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QxOToxMzoyOVrOFnHZOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjU1OTkyOQ==", "bodyText": "parentDependencyNodes:\n  org.sonatype.sisu:sisu-guice:3.2.6 (compile)\n   / cglib:cglib:3.1 (provided, optional)\n   / ant:ant:1.6.2 (compile, optional)\n\ndependencyNode: xerces:xerces-impl:jar:2.6.2 (compile?)\n\ncreating\nparentDependencyNodes:\n  org.sonatype.sisu:sisu-guice:3.2.6 (compile)\n   / cglib:cglib:3.1 (provided, optional)\n   / ant:ant:1.6.2 (compile, optional) \n   / dependencyNode: xerces:xerces-impl:jar:2.6.2 (compile?)", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1195#discussion_r376559929", "createdAt": "2020-02-07T19:13:29Z", "author": {"login": "suztomo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/ExceptionAndPath.java", "diffHunk": "@@ -1,67 +0,0 @@\n-/*\n- * Copyright 2019 Google LLC.\n- *\n- * Licensed under the Apache License, Version 2.0 (the \"License\");\n- * you may not use this file except in compliance with the License.\n- * You may obtain a copy of the License at\n- *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-\n-package com.google.cloud.tools.opensource.dependencies;\n-\n-import static com.google.common.base.Preconditions.checkNotNull;\n-\n-import com.google.common.annotations.VisibleForTesting;\n-import com.google.common.collect.ImmutableList;\n-import org.eclipse.aether.RepositoryException;\n-import org.eclipse.aether.graph.DependencyNode;\n-\n-/**\n- * Tuple of a path in a Maven dependency graph and a {@link RepositoryException}, indicating that\n- * the {@link DependencyNode} specified at the path raises the exception.\n- */\n-public final class ExceptionAndPath {\n-\n-  private final ImmutableList<DependencyNode> path;\n-\n-  private final RepositoryException exception;\n-\n-  /** Returns a path from the root of dependency graph to a dependency node. */\n-  public ImmutableList<DependencyNode> getPath() {\n-    return path;\n-  }\n-\n-  /** Returns the exception raised at the {@link DependencyNode} specified at the path. */\n-  RepositoryException getException() {\n-    return exception;\n-  }\n-\n-  @VisibleForTesting\n-  ExceptionAndPath(ImmutableList<DependencyNode> path, RepositoryException exception) {\n-    this.path = checkNotNull(path);\n-    this.exception = checkNotNull(exception);\n-  }\n-\n-  static ExceptionAndPath create(\n-      Iterable<DependencyNode> parentDependencyNodes,\n-      DependencyNode dependencyNode,\n-      RepositoryException repositoryException) {\n-    return new ExceptionAndPath(\n-        ImmutableList.<DependencyNode>builder()\n-            .addAll(parentDependencyNodes)\n-            .add(dependencyNode)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a146640fa203a89cf68c8fbc227b7ea5c6db6028"}, "originalPosition": 59}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyOTE1MDM5OnYy", "diffSide": "RIGHT", "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/DependencyGraphBuilder.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QxOToyMjo0N1rOFnHpgw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QxOToyMjo0N1rOFnHpgw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjU2NDA5OQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                    failedDependencyNode.getArtifact(), parentNodes));\n          \n          \n            \n                                    ImmutableList.builder().addAll(parentNodes).add(failedDependencyNode).build()));\n          \n      \n    \n    \n  \n\nIn ClassPathBuilderTest.testResolve_artifactProblems failure, the last element of parentNodes does not match failedDependencyNode.getArtifact(), because \"ant:1.6.2\" is not the missing artifact.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1195#discussion_r376564099", "createdAt": "2020-02-07T19:22:47Z", "author": {"login": "suztomo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/DependencyGraphBuilder.java", "diffHunk": "@@ -339,17 +339,15 @@ private DependencyGraphResult levelOrder(\n             for (ArtifactResult artifactResult :\n                 resolutionException.getResult().getArtifactResults()) {\n               if (artifactResult.getArtifact() == null) {\n-                DependencyNode failedDependencyNode = artifactResult.getRequest().getDependencyNode();\n-                ExceptionAndPath failure =\n-                    ExceptionAndPath.create(parentNodes, failedDependencyNode, resolutionException);\n-                artifactProblems.add(new UnresolvableArtifactProblem(failure.getPath()));\n+                DependencyNode failedDependencyNode =\n+                    artifactResult.getRequest().getDependencyNode();\n+                artifactProblems.add(\n+                    new UnresolvableArtifactProblem(\n+                        failedDependencyNode.getArtifact(), parentNodes));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a146640fa203a89cf68c8fbc227b7ea5c6db6028"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyOTY0NDM3OnYy", "diffSide": "RIGHT", "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/DependencyGraphBuilder.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QyMjo0NDozMVrOFnMakA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QyMzoyOToyM1rOFnNLlQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjY0MjE5Mg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                new UnresolvableArtifactProblem(\n          \n          \n            \n                                new UnresolvableArtifactProblem(fullPath)\n          \n      \n    \n    \n  \n\nThen the new constructor is not needed.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1195#discussion_r376642192", "createdAt": "2020-02-07T22:44:31Z", "author": {"login": "suztomo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/DependencyGraphBuilder.java", "diffHunk": "@@ -339,20 +339,22 @@ private DependencyGraphResult levelOrder(\n             for (ArtifactResult artifactResult :\n                 resolutionException.getResult().getArtifactResults()) {\n               if (artifactResult.getArtifact() == null) {\n-                DependencyNode failedDependencyNode = artifactResult.getRequest().getDependencyNode();\n-                ExceptionAndPath failure =\n-                    ExceptionAndPath.create(parentNodes, failedDependencyNode, resolutionException);\n-                artifactProblems.add(new UnresolvableArtifactProblem(failure.getPath()));\n+                DependencyNode failedDependencyNode =\n+                    artifactResult.getRequest().getDependencyNode();\n+                \n+                List<DependencyNode> fullPath = makeFullPath(parentNodes, failedDependencyNode);\n+                \n+                artifactProblems.add(\n+                    new UnresolvableArtifactProblem(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c7e0ff27cbe1101ae4be772bdd410fd2fa327840"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjY1NDc0MQ==", "bodyText": "removed", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1195#discussion_r376654741", "createdAt": "2020-02-07T23:29:23Z", "author": {"login": "elharo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/DependencyGraphBuilder.java", "diffHunk": "@@ -339,20 +339,22 @@ private DependencyGraphResult levelOrder(\n             for (ArtifactResult artifactResult :\n                 resolutionException.getResult().getArtifactResults()) {\n               if (artifactResult.getArtifact() == null) {\n-                DependencyNode failedDependencyNode = artifactResult.getRequest().getDependencyNode();\n-                ExceptionAndPath failure =\n-                    ExceptionAndPath.create(parentNodes, failedDependencyNode, resolutionException);\n-                artifactProblems.add(new UnresolvableArtifactProblem(failure.getPath()));\n+                DependencyNode failedDependencyNode =\n+                    artifactResult.getRequest().getDependencyNode();\n+                \n+                List<DependencyNode> fullPath = makeFullPath(parentNodes, failedDependencyNode);\n+                \n+                artifactProblems.add(\n+                    new UnresolvableArtifactProblem(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjY0MjE5Mg=="}, "originalCommit": {"oid": "c7e0ff27cbe1101ae4be772bdd410fd2fa327840"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyOTY0NzA5OnYy", "diffSide": "LEFT", "path": "dependencies/src/test/java/com/google/cloud/tools/opensource/dependencies/DependencyGraphBuilderTest.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QyMjo0NTo0NFrOFnMcFQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wOFQwMzozNjozNlrOFnO9og==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjY0MjU4MQ==", "bodyText": "Why is it being removed?", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1195#discussion_r376642581", "createdAt": "2020-02-07T22:45:44Z", "author": {"login": "suztomo"}, "path": "dependencies/src/test/java/com/google/cloud/tools/opensource/dependencies/DependencyGraphBuilderTest.java", "diffHunk": "@@ -201,8 +201,6 @@ public void testGetStaticLinkageCheckDependencyGraph_artifactProblems()\n     assertEquals(\"xerces:xerces-impl:jar:2.6.2\", firstProblem.getArtifact().toString());\n \n     assertEquals(\n-        \"The problem should explain the dependency path to the unavailable artifact, \"\n-            + \"including scope and optional flag\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c7e0ff27cbe1101ae4be772bdd410fd2fa327840"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjY1NTI0Mw==", "bodyText": "This feels like more a comment about what the method does rather than why the test failed. When I ran the test this message pushed the actual diff out of the way.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1195#discussion_r376655243", "createdAt": "2020-02-07T23:31:16Z", "author": {"login": "elharo"}, "path": "dependencies/src/test/java/com/google/cloud/tools/opensource/dependencies/DependencyGraphBuilderTest.java", "diffHunk": "@@ -201,8 +201,6 @@ public void testGetStaticLinkageCheckDependencyGraph_artifactProblems()\n     assertEquals(\"xerces:xerces-impl:jar:2.6.2\", firstProblem.getArtifact().toString());\n \n     assertEquals(\n-        \"The problem should explain the dependency path to the unavailable artifact, \"\n-            + \"including scope and optional flag\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjY0MjU4MQ=="}, "originalCommit": {"oid": "c7e0ff27cbe1101ae4be772bdd410fd2fa327840"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjY4MzkzOA==", "bodyText": "That's true. This should be a source code comment in which I wanted to clarify the reason of this assertion.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1195#discussion_r376683938", "createdAt": "2020-02-08T03:36:36Z", "author": {"login": "suztomo"}, "path": "dependencies/src/test/java/com/google/cloud/tools/opensource/dependencies/DependencyGraphBuilderTest.java", "diffHunk": "@@ -201,8 +201,6 @@ public void testGetStaticLinkageCheckDependencyGraph_artifactProblems()\n     assertEquals(\"xerces:xerces-impl:jar:2.6.2\", firstProblem.getArtifact().toString());\n \n     assertEquals(\n-        \"The problem should explain the dependency path to the unavailable artifact, \"\n-            + \"including scope and optional flag\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjY0MjU4MQ=="}, "originalCommit": {"oid": "c7e0ff27cbe1101ae4be772bdd410fd2fa327840"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyOTkyNjQxOnYy", "diffSide": "RIGHT", "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/DependencyGraphBuilder.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wOFQwMzozMjozMVrOFnO8zQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wOFQxMjowODoyMVrOFnQVog==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjY4MzcyNQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                    failedDependencyNode.getArtifact(), fullPath));\n          \n          \n            \n                                    fullPath));", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1195#discussion_r376683725", "createdAt": "2020-02-08T03:32:31Z", "author": {"login": "suztomo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/DependencyGraphBuilder.java", "diffHunk": "@@ -339,20 +339,22 @@ private DependencyGraphResult levelOrder(\n             for (ArtifactResult artifactResult :\n                 resolutionException.getResult().getArtifactResults()) {\n               if (artifactResult.getArtifact() == null) {\n-                DependencyNode failedDependencyNode = artifactResult.getRequest().getDependencyNode();\n-                ExceptionAndPath failure =\n-                    ExceptionAndPath.create(parentNodes, failedDependencyNode, resolutionException);\n-                artifactProblems.add(new UnresolvableArtifactProblem(failure.getPath()));\n+                DependencyNode failedDependencyNode =\n+                    artifactResult.getRequest().getDependencyNode();\n+                \n+                List<DependencyNode> fullPath = makeFullPath(parentNodes, failedDependencyNode);\n+                \n+                artifactProblems.add(\n+                    new UnresolvableArtifactProblem(\n+                        failedDependencyNode.getArtifact(), fullPath));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "929e3753eef1351559cc72a92622874d8f23f69f"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjcwNjQ2Ng==", "bodyText": "done", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1195#discussion_r376706466", "createdAt": "2020-02-08T12:08:21Z", "author": {"login": "elharo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/DependencyGraphBuilder.java", "diffHunk": "@@ -339,20 +339,22 @@ private DependencyGraphResult levelOrder(\n             for (ArtifactResult artifactResult :\n                 resolutionException.getResult().getArtifactResults()) {\n               if (artifactResult.getArtifact() == null) {\n-                DependencyNode failedDependencyNode = artifactResult.getRequest().getDependencyNode();\n-                ExceptionAndPath failure =\n-                    ExceptionAndPath.create(parentNodes, failedDependencyNode, resolutionException);\n-                artifactProblems.add(new UnresolvableArtifactProblem(failure.getPath()));\n+                DependencyNode failedDependencyNode =\n+                    artifactResult.getRequest().getDependencyNode();\n+                \n+                List<DependencyNode> fullPath = makeFullPath(parentNodes, failedDependencyNode);\n+                \n+                artifactProblems.add(\n+                    new UnresolvableArtifactProblem(\n+                        failedDependencyNode.getArtifact(), fullPath));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjY4MzcyNQ=="}, "originalCommit": {"oid": "929e3753eef1351559cc72a92622874d8f23f69f"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzMDE1MzAwOnYy", "diffSide": "RIGHT", "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/ArtifactProblem.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wOFQxNDowOTozM1rOFnQrrw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wOFQxNDowOTozM1rOFnQrrw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjcxMjExMQ==", "bodyText": "This non-public constructor allows artifact problems in which we don\u2019t know dependencyPath.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1195#discussion_r376712111", "createdAt": "2020-02-08T14:09:33Z", "author": {"login": "suztomo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/ArtifactProblem.java", "diffHunk": "@@ -35,6 +35,8 @@\n \n   protected final ImmutableList<DependencyNode> dependencyPath;\n \n+  // todo since the artifact is the last element in the list, there's really no\n+  // reason to pass the artifact here. \n   protected ArtifactProblem(Artifact artifact, List<DependencyNode> dependencyPath) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5d956c6c59b8bca45f72c919f819cdb889656a11"}, "originalPosition": 6}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2799, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}