{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg1MjA1NzQ3", "number": 1647, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQxNjoxMjo1NVrOEimwFg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQxNjoxMjo1NVrOEimwFg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA0NzIxOTQyOnYy", "diffSide": "RIGHT", "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/LinkageCheckerMain.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQxNjoxMjo1NVrOHQlI6g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQxNzoxNzoxNlrOHQnNxQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzE0Nzc1NA==", "bodyText": "Because when writing the linkage problems into the file, we don't want to print the problems and the operation should not throw LinkageCheckResultException", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1647#discussion_r487147754", "createdAt": "2020-09-11T16:12:55Z", "author": {"login": "suztomo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/LinkageCheckerMain.java", "diffHunk": "@@ -148,10 +150,13 @@ public static void main(String[] arguments)\n               .collect(toImmutableSet());\n     }\n \n+    // TODO this should be a separate method; not part of findLinkageProblems\n     Path outputExclusionFile = linkageCheckerArguments.getOutputExclusionFile();\n     if (outputExclusionFile != null) {\n       ExclusionFiles.write(outputExclusionFile, linkageProblems);\n       System.out.println(\"Wrote the linkage errors as exclusion file: \" + outputExclusionFile);\n+      \n+      // TODO why do we return an empty set here?", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d278654f33177ba69ef5b42120dfd72788fcd710"}, "originalPosition": 68}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzE4MTc2NQ==", "bodyText": "OK, that makes sense. Splitting out logically distinct operations (printing linkage errors, writing exclusion file, etc.) into separate methods will probably help clarify this.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1647#discussion_r487181765", "createdAt": "2020-09-11T17:17:16Z", "author": {"login": "elharo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/LinkageCheckerMain.java", "diffHunk": "@@ -148,10 +150,13 @@ public static void main(String[] arguments)\n               .collect(toImmutableSet());\n     }\n \n+    // TODO this should be a separate method; not part of findLinkageProblems\n     Path outputExclusionFile = linkageCheckerArguments.getOutputExclusionFile();\n     if (outputExclusionFile != null) {\n       ExclusionFiles.write(outputExclusionFile, linkageProblems);\n       System.out.println(\"Wrote the linkage errors as exclusion file: \" + outputExclusionFile);\n+      \n+      // TODO why do we return an empty set here?", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzE0Nzc1NA=="}, "originalCommit": {"oid": "d278654f33177ba69ef5b42120dfd72788fcd710"}, "originalPosition": 68}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2538, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}