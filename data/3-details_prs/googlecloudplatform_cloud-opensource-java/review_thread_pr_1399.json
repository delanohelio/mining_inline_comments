{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE2OTM4NTM2", "number": 1399, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QwMzoxNTo0MlrOD75RjQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QwMzoxNTo0MlrOD75RjQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0MTMwOTU3OnYy", "diffSide": "RIGHT", "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/DependencyGraphBuilder.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QwMzoxNTo0MlrOGUgCUA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QwMzoxNTo0MlrOGUgCUA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDE0OTU4NA==", "bodyText": "That dependency mediation happens after levelOrder. The comment \"When there's a parent dependency node...\" refers to an optimization.\nYour point is also right. Maven does not always pick \"g1:a1:2.0\". It depends on other part of the tree. The comment wanted to mention that the node  g1:a1:1.0 will not be used by Maven to generate the resulting class path.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1399#discussion_r424149584", "createdAt": "2020-05-13T03:15:42Z", "author": {"login": "suztomo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/DependencyGraphBuilder.java", "diffHunk": "@@ -281,16 +281,21 @@ public static DependencyGraph levelOrder(DependencyNode firstNode) {\n         // When requesting dependencies of 2 or more artifacts, root DependencyNode's artifact is\n         // set to null\n \n-        // When there's a parent dependency node with the same groupId and artifactId as\n+        // When there's an ancestor dependency node with the same groupId and artifactId as\n         // the dependency, Maven will not pick up the dependency. For example, if there's a\n         // dependency path \"g1:a1:2.0 / ... / g1:a1:1.0\" (the leftmost node as root), then Maven's\n-        // dependency mediation always picks up g1:a1:2.0 over g1:a1:1.0.\n+        // dependency mediation always picks g1:a1:2.0 over g1:a1:1.0.\n+        \n+        // TODO This comment doesn't seem right. That's true for the root,\n+        // but not for non-root nodes. A node elsewhere in the tree could cause the \n+        // descendant to be selected. ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "279d70c80ab9678182a0b9c635b3d63c9d59a105"}, "originalPosition": 22}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2749, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}