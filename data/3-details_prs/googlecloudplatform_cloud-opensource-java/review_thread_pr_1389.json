{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE0MDgxODM0", "number": 1389, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQxNDoxMToyN1rOD51gQw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQyMTowMjoxNlrOD5_puw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxOTcyMDM1OnYy", "diffSide": "RIGHT", "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/ClassPathResult.java", "isResolved": false, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQxNDoxMToyN1rOGRU_4Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQyMDoxNjowOVrOGRjxfg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDgyMzAwOQ==", "bodyText": "As in the previous javadoc, the values are all ClassPathEntrys in the subtree of the key.\nThe below is copy from https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1371/files#r417496064 :\n\nThis method groups dependencies by its direct dependencies of the root. For example, suppose we have the following tree:\n+- g:a:1\n|  +- g:b:1\n|     +- g:c:1\n|\n+- g:d:1\n   +- g:c:1\n   +- g:e:1\n\nThe method returns a multimap of\n{\n\"g:a:1\" => {g:a:1, g:b:1, g:c:1}\n\"g:d:1\" => {g:d:1, g:c:1, g:e:1}\n}\n\nDashboardMain uses this map to group linkage errors by BOM members. E.g.,\nDependency Analysis of io.grpc:grpc-netty:1.29.0 has linkage errors that has source classes in the JAR files of the subtree of io.grpc:grpc-netty:1.29.0.\n\nI'm feeling this logic is very specific to DashboardMain (no other places need this) and it has been confusing to have this method in ClassPathResult. Do you want to move this logic to DashboardMain?", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1389#discussion_r420823009", "createdAt": "2020-05-06T14:11:27Z", "author": {"login": "suztomo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/ClassPathResult.java", "diffHunk": "@@ -93,21 +105,14 @@ public String formatDependencyPaths(Iterable<ClassPathEntry> entries) {\n     }\n     return message.toString();\n   }\n-\n+  \n   /**\n-   * Returns mapping from the Maven coordinates to {@link ClassPathEntry}. The keys are the\n-   * coordinates of the direct dependencies of the root nodes in {@link #dependencyPaths}. The\n-   * values are all {@link ClassPathEntry}s in the subtree of the key.\n+   * Returns the classpath entries for the specified coordinates.\n+   * \n+   * TODO: Explain why this is plural. Shouldn't there be exactly one?", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a9b12fa83171778838a734e444cb84c2f3034694"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTAwNTg5MA==", "bodyText": "Probably not though we can revisit. The focus is on not passing a bunch of weird data structures around. Instead I'd like public classes that represent our entities (ClassFile, ClassPathEntry, ClassPath, Artifact, Dependency, etc.) and operations on those.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1389#discussion_r421005890", "createdAt": "2020-05-06T18:33:27Z", "author": {"login": "elharo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/ClassPathResult.java", "diffHunk": "@@ -93,21 +105,14 @@ public String formatDependencyPaths(Iterable<ClassPathEntry> entries) {\n     }\n     return message.toString();\n   }\n-\n+  \n   /**\n-   * Returns mapping from the Maven coordinates to {@link ClassPathEntry}. The keys are the\n-   * coordinates of the direct dependencies of the root nodes in {@link #dependencyPaths}. The\n-   * values are all {@link ClassPathEntry}s in the subtree of the key.\n+   * Returns the classpath entries for the specified coordinates.\n+   * \n+   * TODO: Explain why this is plural. Shouldn't there be exactly one?", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDgyMzAwOQ=="}, "originalCommit": {"oid": "a9b12fa83171778838a734e444cb84c2f3034694"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTAzMDk0Mg==", "bodyText": "That's good. Would you update the javadoc using the word subtree or something similar? The previous javadoc explains why the values are plural.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1389#discussion_r421030942", "createdAt": "2020-05-06T19:14:58Z", "author": {"login": "suztomo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/ClassPathResult.java", "diffHunk": "@@ -93,21 +105,14 @@ public String formatDependencyPaths(Iterable<ClassPathEntry> entries) {\n     }\n     return message.toString();\n   }\n-\n+  \n   /**\n-   * Returns mapping from the Maven coordinates to {@link ClassPathEntry}. The keys are the\n-   * coordinates of the direct dependencies of the root nodes in {@link #dependencyPaths}. The\n-   * values are all {@link ClassPathEntry}s in the subtree of the key.\n+   * Returns the classpath entries for the specified coordinates.\n+   * \n+   * TODO: Explain why this is plural. Shouldn't there be exactly one?", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDgyMzAwOQ=="}, "originalCommit": {"oid": "a9b12fa83171778838a734e444cb84c2f3034694"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTAzOTY3Nw==", "bodyText": "I'm not sure it did. Or rather what it said didn't match the code. Notice that this returns class path entries, not dependency paths.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1389#discussion_r421039677", "createdAt": "2020-05-06T19:30:19Z", "author": {"login": "elharo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/ClassPathResult.java", "diffHunk": "@@ -93,21 +105,14 @@ public String formatDependencyPaths(Iterable<ClassPathEntry> entries) {\n     }\n     return message.toString();\n   }\n-\n+  \n   /**\n-   * Returns mapping from the Maven coordinates to {@link ClassPathEntry}. The keys are the\n-   * coordinates of the direct dependencies of the root nodes in {@link #dependencyPaths}. The\n-   * values are all {@link ClassPathEntry}s in the subtree of the key.\n+   * Returns the classpath entries for the specified coordinates.\n+   * \n+   * TODO: Explain why this is plural. Shouldn't there be exactly one?", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDgyMzAwOQ=="}, "originalCommit": {"oid": "a9b12fa83171778838a734e444cb84c2f3034694"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTA1Mjc5NA==", "bodyText": "How about \"Returns the class path entries in the subtree of the specified coordinates\"?", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1389#discussion_r421052794", "createdAt": "2020-05-06T19:54:04Z", "author": {"login": "suztomo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/ClassPathResult.java", "diffHunk": "@@ -93,21 +105,14 @@ public String formatDependencyPaths(Iterable<ClassPathEntry> entries) {\n     }\n     return message.toString();\n   }\n-\n+  \n   /**\n-   * Returns mapping from the Maven coordinates to {@link ClassPathEntry}. The keys are the\n-   * coordinates of the direct dependencies of the root nodes in {@link #dependencyPaths}. The\n-   * values are all {@link ClassPathEntry}s in the subtree of the key.\n+   * Returns the classpath entries for the specified coordinates.\n+   * \n+   * TODO: Explain why this is plural. Shouldn't there be exactly one?", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDgyMzAwOQ=="}, "originalCommit": {"oid": "a9b12fa83171778838a734e444cb84c2f3034694"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTA2NTA4Ng==", "bodyText": "done", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1389#discussion_r421065086", "createdAt": "2020-05-06T20:16:09Z", "author": {"login": "elharo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/ClassPathResult.java", "diffHunk": "@@ -93,21 +105,14 @@ public String formatDependencyPaths(Iterable<ClassPathEntry> entries) {\n     }\n     return message.toString();\n   }\n-\n+  \n   /**\n-   * Returns mapping from the Maven coordinates to {@link ClassPathEntry}. The keys are the\n-   * coordinates of the direct dependencies of the root nodes in {@link #dependencyPaths}. The\n-   * values are all {@link ClassPathEntry}s in the subtree of the key.\n+   * Returns the classpath entries for the specified coordinates.\n+   * \n+   * TODO: Explain why this is plural. Shouldn't there be exactly one?", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDgyMzAwOQ=="}, "originalCommit": {"oid": "a9b12fa83171778838a734e444cb84c2f3034694"}, "originalPosition": 56}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyMTM4Mjk5OnYy", "diffSide": "RIGHT", "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/ClassPathResult.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQyMTowMjoxN1rOGRlSyA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QxMToxODo1NFrOGR58gg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTA4OTk5Mg==", "bodyText": "It's the other way around. The artifact with the specified coordinates contains the class path entries as (transitive and direct) dependencies.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1389#discussion_r421089992", "createdAt": "2020-05-06T21:02:17Z", "author": {"login": "suztomo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/ClassPathResult.java", "diffHunk": "@@ -93,21 +92,24 @@ public String formatDependencyPaths(Iterable<ClassPathEntry> entries) {\n     }\n     return message.toString();\n   }\n-\n+  \n   /**\n-   * Returns mapping from the Maven coordinates to {@link ClassPathEntry}. The keys are the\n-   * coordinates of the direct dependencies of the root nodes in {@link #dependencyPaths}. The\n-   * values are all {@link ClassPathEntry}s in the subtree of the key.\n+   * Returns the classpath entries whose transitive dependencies contain\n+   * the artifact with the specified coordinates.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7724bda6bec93ab0bca368725c968014756d1181"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTQyODM1NA==", "bodyText": "fixed", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1389#discussion_r421428354", "createdAt": "2020-05-07T11:18:54Z", "author": {"login": "elharo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/ClassPathResult.java", "diffHunk": "@@ -93,21 +92,24 @@ public String formatDependencyPaths(Iterable<ClassPathEntry> entries) {\n     }\n     return message.toString();\n   }\n-\n+  \n   /**\n-   * Returns mapping from the Maven coordinates to {@link ClassPathEntry}. The keys are the\n-   * coordinates of the direct dependencies of the root nodes in {@link #dependencyPaths}. The\n-   * values are all {@link ClassPathEntry}s in the subtree of the key.\n+   * Returns the classpath entries whose transitive dependencies contain\n+   * the artifact with the specified coordinates.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTA4OTk5Mg=="}, "originalCommit": {"oid": "7724bda6bec93ab0bca368725c968014756d1181"}, "originalPosition": 32}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2739, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}