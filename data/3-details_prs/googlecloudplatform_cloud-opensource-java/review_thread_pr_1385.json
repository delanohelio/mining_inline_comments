{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEzNjA3MTUz", "number": 1385, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxNzo0MjoxNlrOD5grXQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxNzo0NDowNlrOD5guJg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxNjMwODEzOnYy", "diffSide": "RIGHT", "path": "dashboard/src/test/java/com/google/cloud/tools/opensource/dashboard/BomTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxNzo0MjoxNlrOGQ0ing==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxNzo0MjoxNlrOGQ0ing==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDI5MTIzMA==", "bodyText": "Unnecessary space at the end of line/", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1385#discussion_r420291230", "createdAt": "2020-05-05T17:42:16Z", "author": {"login": "suztomo"}, "path": "dashboard/src/test/java/com/google/cloud/tools/opensource/dashboard/BomTest.java", "diffHunk": "@@ -26,19 +26,19 @@\n import org.eclipse.aether.artifact.Artifact;\n import org.junit.Assert;\n import org.junit.Test;\n+import com.google.cloud.tools.opensource.dependencies.Bom;\n import com.google.cloud.tools.opensource.dependencies.MavenRepositoryException;\n-import com.google.cloud.tools.opensource.dependencies.RepositoryUtility;\n \n public class BomTest {\n \n   private static final Path CLOUD_OSS_BOM_PATH =\n-      Paths.get(\"..\", \"boms\", \"cloud-oss-bom\", \"pom.xml\").toAbsolutePath();\n-\n+      Paths.get(\"..\", \"boms\", \"cloud-oss-bom\", \"pom.xml\").toAbsolutePath();  ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b6f80a48a34d7faf069562a432f0ee6302008ec2"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxNjMxMDczOnYy", "diffSide": "RIGHT", "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/Bom.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxNzo0Mjo1N1rOGQ0kNA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxODo1MTozNFrOGQ3Ftw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDI5MTYzNg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n               * Parse the dependencyManagement section of an artifact and return the artifacts included there.\n          \n          \n            \n               * Parses the dependencyManagement section of an artifact and returns the artifacts included there.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1385#discussion_r420291636", "createdAt": "2020-05-05T17:42:57Z", "author": {"login": "suztomo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/Bom.java", "diffHunk": "@@ -59,6 +72,75 @@ public String getCoordinates() {\n     return coordinates;\n   }\n \n+  public static Bom readBom(Path pomFile) throws MavenRepositoryException {\n+    RepositorySystem system = RepositoryUtility.newRepositorySystem();\n+    RepositorySystemSession session = RepositoryUtility.newSession(system);\n+  \n+    MavenProject mavenProject = RepositoryUtility.createMavenProject(pomFile, session);\n+    String coordinates = mavenProject.getGroupId() + \":\" + mavenProject.getArtifactId() \n+        + \":\" + mavenProject.getVersion();\n+    DependencyManagement dependencyManagement = mavenProject.getDependencyManagement();\n+    List<org.apache.maven.model.Dependency> dependencies = dependencyManagement.getDependencies();\n+  \n+    ArtifactTypeRegistry registry = session.getArtifactTypeRegistry();\n+    ImmutableList<Artifact> artifacts = dependencies.stream()\n+        .map(dependency -> RepositoryUtils.toDependency(dependency, registry))\n+        .map(Dependency::getArtifact)\n+        .filter(artifact -> !shouldSkipBomMember(artifact))\n+        .collect(ImmutableList.toImmutableList());\n+    \n+    Bom bom = new Bom(coordinates, artifacts);\n+    return bom;\n+  }\n+\n+  /**\n+   * Parse the dependencyManagement section of an artifact and return the artifacts included there.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b6f80a48a34d7faf069562a432f0ee6302008ec2"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDMzMjk4Mw==", "bodyText": "done", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1385#discussion_r420332983", "createdAt": "2020-05-05T18:51:34Z", "author": {"login": "elharo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/Bom.java", "diffHunk": "@@ -59,6 +72,75 @@ public String getCoordinates() {\n     return coordinates;\n   }\n \n+  public static Bom readBom(Path pomFile) throws MavenRepositoryException {\n+    RepositorySystem system = RepositoryUtility.newRepositorySystem();\n+    RepositorySystemSession session = RepositoryUtility.newSession(system);\n+  \n+    MavenProject mavenProject = RepositoryUtility.createMavenProject(pomFile, session);\n+    String coordinates = mavenProject.getGroupId() + \":\" + mavenProject.getArtifactId() \n+        + \":\" + mavenProject.getVersion();\n+    DependencyManagement dependencyManagement = mavenProject.getDependencyManagement();\n+    List<org.apache.maven.model.Dependency> dependencies = dependencyManagement.getDependencies();\n+  \n+    ArtifactTypeRegistry registry = session.getArtifactTypeRegistry();\n+    ImmutableList<Artifact> artifacts = dependencies.stream()\n+        .map(dependency -> RepositoryUtils.toDependency(dependency, registry))\n+        .map(Dependency::getArtifact)\n+        .filter(artifact -> !shouldSkipBomMember(artifact))\n+        .collect(ImmutableList.toImmutableList());\n+    \n+    Bom bom = new Bom(coordinates, artifacts);\n+    return bom;\n+  }\n+\n+  /**\n+   * Parse the dependencyManagement section of an artifact and return the artifacts included there.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDI5MTYzNg=="}, "originalCommit": {"oid": "b6f80a48a34d7faf069562a432f0ee6302008ec2"}, "originalPosition": 56}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxNjMxNTI2OnYy", "diffSide": "LEFT", "path": "dependencies/src/test/java/com/google/cloud/tools/opensource/classpath/ClassPathBuilderTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxNzo0NDowNlrOGQ0m_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxODo1MTo0N1rOGQ3GRA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDI5MjM0OA==", "bodyText": "Insert an empty line between static imports and non-static imports.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1385#discussion_r420292348", "createdAt": "2020-05-05T17:44:06Z", "author": {"login": "suztomo"}, "path": "dependencies/src/test/java/com/google/cloud/tools/opensource/classpath/ClassPathBuilderTest.java", "diffHunk": "@@ -19,8 +19,7 @@\n import static com.google.cloud.tools.opensource.classpath.TestHelper.COORDINATES;\n import static org.junit.Assert.assertEquals;\n import static org.junit.Assert.assertNotNull;\n-\n-import com.google.cloud.tools.opensource.dependencies.RepositoryUtility;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b6f80a48a34d7faf069562a432f0ee6302008ec2"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDMzMzEyNA==", "bodyText": "done", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1385#discussion_r420333124", "createdAt": "2020-05-05T18:51:47Z", "author": {"login": "elharo"}, "path": "dependencies/src/test/java/com/google/cloud/tools/opensource/classpath/ClassPathBuilderTest.java", "diffHunk": "@@ -19,8 +19,7 @@\n import static com.google.cloud.tools.opensource.classpath.TestHelper.COORDINATES;\n import static org.junit.Assert.assertEquals;\n import static org.junit.Assert.assertNotNull;\n-\n-import com.google.cloud.tools.opensource.dependencies.RepositoryUtility;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDI5MjM0OA=="}, "originalCommit": {"oid": "b6f80a48a34d7faf069562a432f0ee6302008ec2"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2736, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}