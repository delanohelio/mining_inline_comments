{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMxMTI5MjIw", "number": 1854, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxNzozODoyNVrOE_u8Iw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxNzozOTo0MlrOE_u-Vw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1MjY0ODAzOnYy", "diffSide": "RIGHT", "path": "dashboard/src/test/java/com/google/cloud/tools/opensource/dashboard/DashboardTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxNzozODoyNVrOH9miMg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxODo0MjoxOVrOH9pEAw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDM1NjUzMA==", "bodyText": "This should be explained here, not just in the PR description.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1854#discussion_r534356530", "createdAt": "2020-12-02T17:38:25Z", "author": {"login": "elharo"}, "path": "dashboard/src/test/java/com/google/cloud/tools/opensource/dashboard/DashboardTest.java", "diffHunk": "@@ -314,6 +317,34 @@ public void testComponent_linkageCheckResult() throws IOException, ParsingExcept\n                 + \" referenced from 21 classes \u25b6\"); // '\u25b6' is the toggle button\n   }\n \n+  @Test\n+  public void testComponent_linkageCheckResult_java11() throws IOException, ParsingException {\n+    String javaVersion = System.getProperty(\"java.version\");\n+    // javaMajorVersion is 1 when we use Java 8. Still good indicator to ensure Java 11 or higher.\n+    int javaMajorVersion = Integer.parseInt(javaVersion.split(\"\\\\.\")[0]);\n+    Assume.assumeTrue(javaMajorVersion >= 11);\n+\n+    // version used in libraries-bom 1.0.0\n+    Document document = parseOutputFile(\n+        \"com.google.http-client_google-http-client-appengine_1.29.1.html\");\n+    Nodes reports = document.query(\"//p[@class='jar-linkage-report']\");\n+    Assert.assertEquals(2, reports.size());\n+    // This number differs between Java 8 and Java 11", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4df9ec58e4866907e92f694e4fddd08f3371959e"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDM5Nzk1NQ==", "bodyText": "Yes, updated.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1854#discussion_r534397955", "createdAt": "2020-12-02T18:42:19Z", "author": {"login": "suztomo"}, "path": "dashboard/src/test/java/com/google/cloud/tools/opensource/dashboard/DashboardTest.java", "diffHunk": "@@ -314,6 +317,34 @@ public void testComponent_linkageCheckResult() throws IOException, ParsingExcept\n                 + \" referenced from 21 classes \u25b6\"); // '\u25b6' is the toggle button\n   }\n \n+  @Test\n+  public void testComponent_linkageCheckResult_java11() throws IOException, ParsingException {\n+    String javaVersion = System.getProperty(\"java.version\");\n+    // javaMajorVersion is 1 when we use Java 8. Still good indicator to ensure Java 11 or higher.\n+    int javaMajorVersion = Integer.parseInt(javaVersion.split(\"\\\\.\")[0]);\n+    Assume.assumeTrue(javaMajorVersion >= 11);\n+\n+    // version used in libraries-bom 1.0.0\n+    Document document = parseOutputFile(\n+        \"com.google.http-client_google-http-client-appengine_1.29.1.html\");\n+    Nodes reports = document.query(\"//p[@class='jar-linkage-report']\");\n+    Assert.assertEquals(2, reports.size());\n+    // This number differs between Java 8 and Java 11", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDM1NjUzMA=="}, "originalCommit": {"oid": "4df9ec58e4866907e92f694e4fddd08f3371959e"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1MjY1MzY3OnYy", "diffSide": "RIGHT", "path": "dashboard/src/test/java/com/google/cloud/tools/opensource/dashboard/DashboardTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxNzozOTo0MlrOH9mluw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxODo0ODoxOFrOH9pSyQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDM1NzQzNQ==", "bodyText": "Is this difference still present in more recent http clients? If not, we could simply update the version we use for the test.\nIf it is present, we should probably file a bug against the http client since it should work with Java 11.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1854#discussion_r534357435", "createdAt": "2020-12-02T17:39:42Z", "author": {"login": "elharo"}, "path": "dashboard/src/test/java/com/google/cloud/tools/opensource/dashboard/DashboardTest.java", "diffHunk": "@@ -314,6 +317,34 @@ public void testComponent_linkageCheckResult() throws IOException, ParsingExcept\n                 + \" referenced from 21 classes \u25b6\"); // '\u25b6' is the toggle button\n   }\n \n+  @Test\n+  public void testComponent_linkageCheckResult_java11() throws IOException, ParsingException {\n+    String javaVersion = System.getProperty(\"java.version\");\n+    // javaMajorVersion is 1 when we use Java 8. Still good indicator to ensure Java 11 or higher.\n+    int javaMajorVersion = Integer.parseInt(javaVersion.split(\"\\\\.\")[0]);\n+    Assume.assumeTrue(javaMajorVersion >= 11);\n+\n+    // version used in libraries-bom 1.0.0\n+    Document document = parseOutputFile(\n+        \"com.google.http-client_google-http-client-appengine_1.29.1.html\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4df9ec58e4866907e92f694e4fddd08f3371959e"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDQwMTczNw==", "bodyText": "Added more description. This test does not check the difference between Java 8 and Java 11. Rather, this test ensures that the dashboard generated using Java 11 has the expected linkage error section.\nFor the linkage errors in google-http-client-appengine, the two artifacts (\"commons-logging:commons-logging:1.2\" and \"com.google.appengine:appengine-api-1.0-sdk:1.9.71\") still show the (known) linkage errors. They are present in Java 8 too: https://storage.googleapis.com/cloud-opensource-java-dashboard/com.google.cloud/libraries-bom/snapshot/com.google.http-client_google-http-client-appengine_1.38.0.html", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1854#discussion_r534401737", "createdAt": "2020-12-02T18:48:18Z", "author": {"login": "suztomo"}, "path": "dashboard/src/test/java/com/google/cloud/tools/opensource/dashboard/DashboardTest.java", "diffHunk": "@@ -314,6 +317,34 @@ public void testComponent_linkageCheckResult() throws IOException, ParsingExcept\n                 + \" referenced from 21 classes \u25b6\"); // '\u25b6' is the toggle button\n   }\n \n+  @Test\n+  public void testComponent_linkageCheckResult_java11() throws IOException, ParsingException {\n+    String javaVersion = System.getProperty(\"java.version\");\n+    // javaMajorVersion is 1 when we use Java 8. Still good indicator to ensure Java 11 or higher.\n+    int javaMajorVersion = Integer.parseInt(javaVersion.split(\"\\\\.\")[0]);\n+    Assume.assumeTrue(javaMajorVersion >= 11);\n+\n+    // version used in libraries-bom 1.0.0\n+    Document document = parseOutputFile(\n+        \"com.google.http-client_google-http-client-appengine_1.29.1.html\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDM1NzQzNQ=="}, "originalCommit": {"oid": "4df9ec58e4866907e92f694e4fddd08f3371959e"}, "originalPosition": 34}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2425, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}