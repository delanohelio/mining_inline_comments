{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI3OTYzNTk1", "number": 1442, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxODowMjo0OFrOECrFQw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxODoxNjozOVrOECrXQg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxMjM4NDY3OnYy", "diffSide": "RIGHT", "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/DependencyGraphBuilder.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxODowMjo0OFrOGfRmjQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxODowMjo0OFrOGfRmjQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTQ0NzQzNw==", "bodyText": "This method checks whether the artifact is already checked or not. Good.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1442#discussion_r435447437", "createdAt": "2020-06-04T18:02:48Z", "author": {"login": "suztomo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/DependencyGraphBuilder.java", "diffHunk": "@@ -177,68 +173,37 @@ public DependencyGraphResult buildFullDependencyGraph(List<Artifact> artifacts)\n    * In the event of I/O errors, missing artifacts, and other problems, it can\n    * return an incomplete graph.\n    */\n-  public DependencyGraphResult buildMavenDependencyGraph(Dependency dependency) {\n+  public DependencyGraph buildMavenDependencyGraph(Dependency dependency) {\n     return buildDependencyGraph(\n         ImmutableList.of(new DefaultDependencyNode(dependency)), GraphTraversalOption.MAVEN);\n   }\n \n-  private DependencyGraphResult buildDependencyGraph(\n+  private DependencyGraph buildDependencyGraph(\n       List<DependencyNode> dependencyNodes, GraphTraversalOption traversalOption) {\n     boolean fullDependency = traversalOption == GraphTraversalOption.FULL;\n+    \n+    DependencyGraph graph;\n     DependencyNode node;\n-    ImmutableSet.Builder<UnresolvableArtifactProblem> artifactProblems = ImmutableSet.builder();\n-\n     try {\n       node = resolveCompileTimeDependencies(dependencyNodes, fullDependency);\n+      graph = new DependencyGraph(node);\n     } catch (DependencyResolutionException ex) {\n       DependencyResult result = ex.getResult();\n       node = result.getRoot();\n+      graph = new DependencyGraph(node);\n \n-      Set<Artifact> checkedArtifacts = new HashSet<>();\n       for (ArtifactResult artifactResult : result.getArtifactResults()) {\n         Artifact resolvedArtifact = artifactResult.getArtifact();\n \n         if (resolvedArtifact == null) {\n           Artifact requestedArtifact = artifactResult.getRequest().getArtifact();\n-          if (checkedArtifacts.add(requestedArtifact)) {\n-            artifactProblems.add(createUnresolvableArtifactProblem(node, requestedArtifact));\n-          }\n+          graph.addUnresolvableArtifactProblem(requestedArtifact);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "887aadc1baedfdc67413d8cc908cc0c488540c88"}, "originalPosition": 66}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxMjM5Mzc0OnYy", "diffSide": "RIGHT", "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/DependencyGraph.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxODowNToyMVrOGfRsmQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQyMDoxMzoyNFrOGfWLFQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTQ0ODk4NQ==", "bodyText": "Is this package-visible constructor still needed? I see tests uses new DependencyGraph(null).", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1442#discussion_r435448985", "createdAt": "2020-06-04T18:05:21Z", "author": {"login": "suztomo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/DependencyGraph.java", "diffHunk": "@@ -59,9 +63,14 @@\n   \n   // map of groupId:artifactId:version to paths\n   private SetMultimap<String, DependencyPath> paths = HashMultimap.create();\n+\n+  private DependencyNode root;\n   \n-  @VisibleForTesting\n-  public DependencyGraph() {\n+  DependencyGraph() {\n+  }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "887aadc1baedfdc67413d8cc908cc0c488540c88"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTUyMjMyNQ==", "bodyText": "It isn't. removed.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1442#discussion_r435522325", "createdAt": "2020-06-04T20:13:24Z", "author": {"login": "elharo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/DependencyGraph.java", "diffHunk": "@@ -59,9 +63,14 @@\n   \n   // map of groupId:artifactId:version to paths\n   private SetMultimap<String, DependencyPath> paths = HashMultimap.create();\n+\n+  private DependencyNode root;\n   \n-  @VisibleForTesting\n-  public DependencyGraph() {\n+  DependencyGraph() {\n+  }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTQ0ODk4NQ=="}, "originalCommit": {"oid": "887aadc1baedfdc67413d8cc908cc0c488540c88"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxMjQzMDc0OnYy", "diffSide": "RIGHT", "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/DependencyGraphBuilder.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxODoxNjozOVrOGfSE4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQyMToxODozMlrOGfYSsg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTQ1NTIwMA==", "bodyText": "Thinking about other implementation of DependencyGraph, this levelOrder method of converting DependencyNode to DependencyGraph is specific to DependencyNode. It's because graph.addPath(path); in this method comes from the fact that current DependencyGraph consists of DependnecyPaths.\nDo you think moving this method inside DependencyGraph, as DependencyGraph.from(DependencyNode root) is a good idea?", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1442#discussion_r435455200", "createdAt": "2020-06-04T18:16:39Z", "author": {"login": "suztomo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/DependencyGraphBuilder.java", "diffHunk": "@@ -271,9 +236,12 @@ public static UnresolvableArtifactProblem createUnresolvableArtifactProblem(\n    * @param firstNode node to start traversal\n    */\n   public static DependencyGraph levelOrder(DependencyNode firstNode) {\n-\n     DependencyGraph graph = new DependencyGraph();\n \n+    return levelOrder(firstNode, graph);\n+  }\n+\n+  private static DependencyGraph levelOrder(DependencyNode firstNode, DependencyGraph graph) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "887aadc1baedfdc67413d8cc908cc0c488540c88"}, "originalPosition": 118}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTU1NzA0Mg==", "bodyText": "Good idea. Done, and that simplified some more code too.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1442#discussion_r435557042", "createdAt": "2020-06-04T21:18:32Z", "author": {"login": "elharo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/DependencyGraphBuilder.java", "diffHunk": "@@ -271,9 +236,12 @@ public static UnresolvableArtifactProblem createUnresolvableArtifactProblem(\n    * @param firstNode node to start traversal\n    */\n   public static DependencyGraph levelOrder(DependencyNode firstNode) {\n-\n     DependencyGraph graph = new DependencyGraph();\n \n+    return levelOrder(firstNode, graph);\n+  }\n+\n+  private static DependencyGraph levelOrder(DependencyNode firstNode, DependencyGraph graph) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTQ1NTIwMA=="}, "originalCommit": {"oid": "887aadc1baedfdc67413d8cc908cc0c488540c88"}, "originalPosition": 118}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2585, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}