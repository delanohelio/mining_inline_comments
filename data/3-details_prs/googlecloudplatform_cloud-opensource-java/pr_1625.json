{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc0OTU1Njc5", "number": 1625, "title": "Java8IncompatibleReferenceCheck", "bodyText": "Towards #1621 .\nOutput: https://gist.github.com/suztomo/60ca017b17b06ee9fbadb3c85628750b (It takes around 5 minutes to run)\n# From the directory cloud-opensource-java/dependencies\n$ mvn exec:java -Pbad-jdk-reference-check -Dexec.arguments=\"../boms/cloud-oss-bom/pom.xml\"\n\n...\n\nAug 27, 2020 6:28:44 PM com.google.cloud.tools.opensource.dependencies.BadJdkReferenceChecker main\nSEVERE: The following artifacts contain bad references to classes in 'java' package, which does not work for Java 8\n  com.google.protobuf:protobuf-java:jar:3.13.0\n  com.google.protobuf:protobuf-java:jar:3.12.4\nThe following artifacts in the BOM contain the bad artifacts in their dependencies\n  com.google.protobuf:protobuf-java:jar:3.13.0 due to [com.google.protobuf:protobuf-java:jar:3.13.0]\n  com.google.protobuf:protobuf-java-util:jar:3.13.0 due to [com.google.protobuf:protobuf-java:jar:3.13.0]\n  com.google.api.grpc:proto-google-iam-v1:jar:1.0.0 due to [com.google.protobuf:protobuf-java:jar:3.12.4]\n  com.google.api.grpc:grpc-google-iam-v1:jar:1.0.0 due to [com.google.protobuf:protobuf-java:jar:3.12.4]\n  com.google.cloud:google-cloud-bigquery:jar:1.116.10 due to [com.google.protobuf:protobuf-java:jar:3.12.4]\n...", "createdAt": "2020-08-27T21:15:23Z", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1625", "merged": true, "mergeCommit": {"oid": "43fc4838382fe787e07f3a7e7bd89c692a0ee292"}, "closed": true, "closedAt": "2020-09-08T14:38:44Z", "author": {"login": "suztomo"}, "timelineItems": {"totalCount": 22, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdDHEsMAH2gAyNDc0OTU1Njc5OjZmNTlmMzY1ZmZlOGUxY2ZhODRlMDI2ZTYwMGZhNWIyMWVlMmU1YzE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdFT8UMAFqTQ4MjA0ODUxNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "6f59f365ffe8e1cfa84e026e600fa5b21ee2e5c1", "author": {"user": {"login": "suztomo", "name": "Tomo Suzuki"}}, "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/6f59f365ffe8e1cfa84e026e600fa5b21ee2e5c1", "committedDate": "2020-08-27T21:13:28Z", "message": "BadJdkReferenceChecker"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "74d9a77b62cbe3c1c8916ea334ce3d9c3363648a", "author": {"user": {"login": "suztomo", "name": "Tomo Suzuki"}}, "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/74d9a77b62cbe3c1c8916ea334ce3d9c3363648a", "committedDate": "2020-08-27T21:54:00Z", "message": "Setting up profile to execute BadJdkReferenceChecker"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5032e8705e7b8f09211ebc73a43410ddd80f4896", "author": {"user": {"login": "suztomo", "name": "Tomo Suzuki"}}, "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/5032e8705e7b8f09211ebc73a43410ddd80f4896", "committedDate": "2020-08-27T22:04:26Z", "message": "exit value"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "78ab0c090c2d3628c7232a6f30d3ac44f923a3fb", "author": {"user": {"login": "suztomo", "name": "Tomo Suzuki"}}, "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/78ab0c090c2d3628c7232a6f30d3ac44f923a3fb", "committedDate": "2020-08-27T22:13:01Z", "message": "message"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "45849dba1af894dc206bcd1c3f71dddc8fe603b4", "author": {"user": {"login": "suztomo", "name": "Tomo Suzuki"}}, "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/45849dba1af894dc206bcd1c3f71dddc8fe603b4", "committedDate": "2020-08-28T18:05:09Z", "message": "Appengine problems as xml file"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9d07c0ab9f23084e5c99411a6bcbd27afd37ab9c", "author": {"user": {"login": "suztomo", "name": "Tomo Suzuki"}}, "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/9d07c0ab9f23084e5c99411a6bcbd27afd37ab9c", "committedDate": "2020-09-01T17:24:08Z", "message": "Merge branch 'master' into bad_jdk_references_check"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc5OTcyMDky", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1625#pullrequestreview-479972092", "createdAt": "2020-09-01T17:36:00Z", "commit": {"oid": "9d07c0ab9f23084e5c99411a6bcbd27afd37ab9c"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxNzozNjowMFrOHLBRWQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxNzozNzowNFrOHLBTkw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTMxNzIwOQ==", "bodyText": "we need a better name for this. What's a \"bad JDK\"?", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1625#discussion_r481317209", "createdAt": "2020-09-01T17:36:00Z", "author": {"login": "elharo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/BadJdkReferenceChecker.java", "diffHunk": "@@ -0,0 +1,125 @@\n+/*\n+ * Copyright 2020 Google LLC.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.cloud.tools.opensource.dependencies;\n+\n+import static com.google.common.collect.ImmutableSet.toImmutableSet;\n+\n+import com.google.cloud.tools.opensource.classpath.ClassFile;\n+import com.google.cloud.tools.opensource.classpath.ClassPathBuilder;\n+import com.google.cloud.tools.opensource.classpath.ClassPathEntry;\n+import com.google.cloud.tools.opensource.classpath.ClassPathResult;\n+import com.google.cloud.tools.opensource.classpath.LinkageChecker;\n+import com.google.cloud.tools.opensource.classpath.LinkageProblem;\n+import com.google.common.collect.ImmutableList;\n+import com.google.common.collect.ImmutableSet;\n+import com.google.common.collect.ImmutableSetMultimap;\n+import java.io.IOException;\n+import java.net.URI;\n+import java.net.URISyntaxException;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+import java.util.logging.Logger;\n+import org.eclipse.aether.artifact.Artifact;\n+\n+public class BadJdkReferenceChecker {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9d07c0ab9f23084e5c99411a6bcbd27afd37ab9c"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTMxNzQ1MA==", "bodyText": "per google style do not use \"Please\" in UI messages", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1625#discussion_r481317450", "createdAt": "2020-09-01T17:36:26Z", "author": {"login": "elharo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/BadJdkReferenceChecker.java", "diffHunk": "@@ -0,0 +1,125 @@\n+/*\n+ * Copyright 2020 Google LLC.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.cloud.tools.opensource.dependencies;\n+\n+import static com.google.common.collect.ImmutableSet.toImmutableSet;\n+\n+import com.google.cloud.tools.opensource.classpath.ClassFile;\n+import com.google.cloud.tools.opensource.classpath.ClassPathBuilder;\n+import com.google.cloud.tools.opensource.classpath.ClassPathEntry;\n+import com.google.cloud.tools.opensource.classpath.ClassPathResult;\n+import com.google.cloud.tools.opensource.classpath.LinkageChecker;\n+import com.google.cloud.tools.opensource.classpath.LinkageProblem;\n+import com.google.common.collect.ImmutableList;\n+import com.google.common.collect.ImmutableSet;\n+import com.google.common.collect.ImmutableSetMultimap;\n+import java.io.IOException;\n+import java.net.URI;\n+import java.net.URISyntaxException;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+import java.util.logging.Logger;\n+import org.eclipse.aether.artifact.Artifact;\n+\n+public class BadJdkReferenceChecker {\n+\n+  private static final Logger logger = Logger.getLogger(BadJdkReferenceChecker.class.getName());\n+\n+  public static void main(String[] arguments)\n+      throws MavenRepositoryException, IOException, URISyntaxException {\n+\n+    if (arguments.length != 1) {\n+      System.err.println(\"Please specify a path to the BOM file\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9d07c0ab9f23084e5c99411a6bcbd27afd37ab9c"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTMxNzc3OQ==", "bodyText": "does --> do", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1625#discussion_r481317779", "createdAt": "2020-09-01T17:37:04Z", "author": {"login": "elharo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/BadJdkReferenceChecker.java", "diffHunk": "@@ -0,0 +1,125 @@\n+/*\n+ * Copyright 2020 Google LLC.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.cloud.tools.opensource.dependencies;\n+\n+import static com.google.common.collect.ImmutableSet.toImmutableSet;\n+\n+import com.google.cloud.tools.opensource.classpath.ClassFile;\n+import com.google.cloud.tools.opensource.classpath.ClassPathBuilder;\n+import com.google.cloud.tools.opensource.classpath.ClassPathEntry;\n+import com.google.cloud.tools.opensource.classpath.ClassPathResult;\n+import com.google.cloud.tools.opensource.classpath.LinkageChecker;\n+import com.google.cloud.tools.opensource.classpath.LinkageProblem;\n+import com.google.common.collect.ImmutableList;\n+import com.google.common.collect.ImmutableSet;\n+import com.google.common.collect.ImmutableSetMultimap;\n+import java.io.IOException;\n+import java.net.URI;\n+import java.net.URISyntaxException;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+import java.util.logging.Logger;\n+import org.eclipse.aether.artifact.Artifact;\n+\n+public class BadJdkReferenceChecker {\n+\n+  private static final Logger logger = Logger.getLogger(BadJdkReferenceChecker.class.getName());\n+\n+  public static void main(String[] arguments)\n+      throws MavenRepositoryException, IOException, URISyntaxException {\n+\n+    if (arguments.length != 1) {\n+      System.err.println(\"Please specify a path to the BOM file\");\n+      System.exit(1);\n+    }\n+\n+    URI exclusionFileUri =\n+        BadJdkReferenceChecker.class\n+            .getClassLoader()\n+            .getResource(\"bad-jdk-reference-check-exclusion.xml\")\n+            .toURI();\n+    Path exclusionFile = Paths.get(exclusionFileUri).toAbsolutePath();\n+\n+    String bomFileName = arguments[0];\n+\n+    Path bomFile = Paths.get(bomFileName);\n+    Bom bom = Bom.readBom(bomFile);\n+\n+    ImmutableList<Artifact> managedDependencies = bom.getManagedDependencies();\n+\n+    int count = 1;\n+\n+    ImmutableSetMultimap.Builder<Artifact, Artifact> badDependencies =\n+        ImmutableSetMultimap.builder();\n+    for (Artifact managedDependency : managedDependencies) {\n+      logger.info(\n+          \"Checking \"\n+              + managedDependency\n+              + \" (\"\n+              + (count++)\n+              + \"/\"\n+              + managedDependencies.size()\n+              + \")\");\n+\n+      ClassPathBuilder classPathBuilder = new ClassPathBuilder();\n+      ClassPathResult result = classPathBuilder.resolve(ImmutableList.of(managedDependency), false);\n+\n+      LinkageChecker linkageChecker =\n+          LinkageChecker.create(result.getClassPath(), result.getClassPath(), exclusionFile);\n+\n+      ImmutableSet<LinkageProblem> linkageProblems = linkageChecker.findLinkageProblems();\n+\n+      ImmutableSet<LinkageProblem> badJdkReferences =\n+          linkageProblems.stream()\n+              .filter(problem -> problem.getSymbol().getClassBinaryName().startsWith(\"java.\"))\n+              .collect(toImmutableSet());\n+\n+      if (!badJdkReferences.isEmpty()) {\n+        badJdkReferences.stream()\n+            .map(LinkageProblem::getSourceClass)\n+            .map(ClassFile::getClassPathEntry)\n+            .map(ClassPathEntry::getArtifact)\n+            .forEach(artifact -> badDependencies.put(managedDependency, artifact));\n+\n+        logger.severe(LinkageProblem.formatLinkageProblems(badJdkReferences));\n+      }\n+    }\n+\n+    ImmutableSetMultimap<Artifact, Artifact> bomMemberToBadDependencies = badDependencies.build();\n+\n+    if (bomMemberToBadDependencies.isEmpty()) {\n+      logger.info(\"No problematic artifacts\");\n+      return;\n+    }\n+\n+    StringBuilder message = new StringBuilder();\n+    message.append(\n+        \"The following artifacts contain bad references to classes in 'java' package,\"\n+            + \" which does not work for Java 8\\n\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9d07c0ab9f23084e5c99411a6bcbd27afd37ab9c"}, "originalPosition": 112}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "66789ae3169c745496dc850294dc5216ff64cad1", "author": {"user": {"login": "suztomo", "name": "Tomo Suzuki"}}, "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/66789ae3169c745496dc850294dc5216ff64cad1", "committedDate": "2020-09-01T19:14:12Z", "message": "Merge branch 'master' into bad_jdk_references_check"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5172cfe94decebb77a077f7c1efd4e47cb63b715", "author": {"user": {"login": "suztomo", "name": "Tomo Suzuki"}}, "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/5172cfe94decebb77a077f7c1efd4e47cb63b715", "committedDate": "2020-09-02T19:53:54Z", "message": "Applied review."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgxMjUzMzA4", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1625#pullrequestreview-481253308", "createdAt": "2020-09-02T19:56:34Z", "commit": {"oid": "5172cfe94decebb77a077f7c1efd4e47cb63b715"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxOTo1NjozNFrOHMB7Ig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxOTo1ODowOVrOHMCDpw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjM3NjQ4Mg==", "bodyText": "JavaDoc would help clarify this.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1625#discussion_r482376482", "createdAt": "2020-09-02T19:56:34Z", "author": {"login": "elharo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/Java8IncompatibleReferenceCheck.java", "diffHunk": "@@ -35,20 +35,20 @@\n import java.util.logging.Logger;\n import org.eclipse.aether.artifact.Artifact;\n \n-public class BadJdkReferenceChecker {\n+public class Java8IncompatibleReferenceCheck {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5172cfe94decebb77a077f7c1efd4e47cb63b715"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjM3ODY2Mw==", "bodyText": "delete \"bad\"\nperhaps \"classes in 'java' package\" --> classes in the core library\nwhich do not work for --> which are not present in", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1625#discussion_r482378663", "createdAt": "2020-09-02T19:58:09Z", "author": {"login": "elharo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/Java8IncompatibleReferenceCheck.java", "diffHunk": "@@ -109,7 +109,7 @@ public static void main(String[] arguments)\n     StringBuilder message = new StringBuilder();\n     message.append(\n         \"The following artifacts contain bad references to classes in 'java' package,\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5172cfe94decebb77a077f7c1efd4e47cb63b715"}, "originalPosition": 28}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f2f99a4855a2e93feb2a055ffe91fbe462bce552", "author": {"user": {"login": "suztomo", "name": "Tomo Suzuki"}}, "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/f2f99a4855a2e93feb2a055ffe91fbe462bce552", "committedDate": "2020-09-02T21:47:04Z", "message": "Applied review"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "129d0e69074f3a0fca388feee21f8d313c34e57b", "author": {"user": {"login": "suztomo", "name": "Tomo Suzuki"}}, "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/129d0e69074f3a0fca388feee21f8d313c34e57b", "committedDate": "2020-09-02T21:52:45Z", "message": "format"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5d778a567222ddc02a56e92ea2b6da43c91d662e", "author": {"user": {"login": "suztomo", "name": "Tomo Suzuki"}}, "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/5d778a567222ddc02a56e92ea2b6da43c91d662e", "committedDate": "2020-09-02T21:58:50Z", "message": "format"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgxODczODQx", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1625#pullrequestreview-481873841", "createdAt": "2020-09-03T14:05:30Z", "commit": {"oid": "5d778a567222ddc02a56e92ea2b6da43c91d662e"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxNDowNTozMFrOHMoPoA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxNDoxMDoyOVrOHModgw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzAwNDMyMA==", "bodyText": "dependency graph of each of the artifacts above", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1625#discussion_r483004320", "createdAt": "2020-09-03T14:05:30Z", "author": {"login": "elharo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/Java8IncompatibleReferenceCheck.java", "diffHunk": "@@ -0,0 +1,145 @@\n+/*\n+ * Copyright 2020 Google LLC.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.cloud.tools.opensource.dependencies;\n+\n+import static com.google.common.collect.ImmutableSet.toImmutableSet;\n+\n+import com.google.cloud.tools.opensource.classpath.ClassFile;\n+import com.google.cloud.tools.opensource.classpath.ClassPathBuilder;\n+import com.google.cloud.tools.opensource.classpath.ClassPathEntry;\n+import com.google.cloud.tools.opensource.classpath.ClassPathResult;\n+import com.google.cloud.tools.opensource.classpath.LinkageChecker;\n+import com.google.cloud.tools.opensource.classpath.LinkageProblem;\n+import com.google.common.collect.ImmutableList;\n+import com.google.common.collect.ImmutableSet;\n+import com.google.common.collect.ImmutableSetMultimap;\n+import java.io.IOException;\n+import java.net.URI;\n+import java.net.URISyntaxException;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+import java.util.logging.Logger;\n+import org.eclipse.aether.artifact.Artifact;\n+\n+/**\n+ * A tool to find Java 8-incompatible references in the class files in a BOM. It checks the class\n+ * files in the following artifacts:\n+ *\n+ * <ul>\n+ *   <li>The artifacts in the {@code dependencyManagement} section of the BOM\n+ *   <li>The artifacts in the dependency graph for each of the artifact above", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5d778a567222ddc02a56e92ea2b6da43c91d662e"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzAwNDU0NA==", "bodyText": "no comma after library", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1625#discussion_r483004544", "createdAt": "2020-09-03T14:05:47Z", "author": {"login": "elharo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/Java8IncompatibleReferenceCheck.java", "diffHunk": "@@ -0,0 +1,145 @@\n+/*\n+ * Copyright 2020 Google LLC.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.cloud.tools.opensource.dependencies;\n+\n+import static com.google.common.collect.ImmutableSet.toImmutableSet;\n+\n+import com.google.cloud.tools.opensource.classpath.ClassFile;\n+import com.google.cloud.tools.opensource.classpath.ClassPathBuilder;\n+import com.google.cloud.tools.opensource.classpath.ClassPathEntry;\n+import com.google.cloud.tools.opensource.classpath.ClassPathResult;\n+import com.google.cloud.tools.opensource.classpath.LinkageChecker;\n+import com.google.cloud.tools.opensource.classpath.LinkageProblem;\n+import com.google.common.collect.ImmutableList;\n+import com.google.common.collect.ImmutableSet;\n+import com.google.common.collect.ImmutableSetMultimap;\n+import java.io.IOException;\n+import java.net.URI;\n+import java.net.URISyntaxException;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+import java.util.logging.Logger;\n+import org.eclipse.aether.artifact.Artifact;\n+\n+/**\n+ * A tool to find Java 8-incompatible references in the class files in a BOM. It checks the class\n+ * files in the following artifacts:\n+ *\n+ * <ul>\n+ *   <li>The artifacts in the {@code dependencyManagement} section of the BOM\n+ *   <li>The artifacts in the dependency graph for each of the artifact above\n+ *   <li>The latest version of the artifacts in the dependency graphs\n+ * </ul>\n+ *\n+ * <p>If it finds references to classes in the core library, which are not present in Java 8, it", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5d778a567222ddc02a56e92ea2b6da43c91d662e"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzAwNTg0OQ==", "bodyText": "I'm surprised this works since it's a resource in a jar, not a file. Could we skip both URIs and paths here and get a stream from the resource instead?", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1625#discussion_r483005849", "createdAt": "2020-09-03T14:07:39Z", "author": {"login": "elharo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/Java8IncompatibleReferenceCheck.java", "diffHunk": "@@ -0,0 +1,145 @@\n+/*\n+ * Copyright 2020 Google LLC.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.cloud.tools.opensource.dependencies;\n+\n+import static com.google.common.collect.ImmutableSet.toImmutableSet;\n+\n+import com.google.cloud.tools.opensource.classpath.ClassFile;\n+import com.google.cloud.tools.opensource.classpath.ClassPathBuilder;\n+import com.google.cloud.tools.opensource.classpath.ClassPathEntry;\n+import com.google.cloud.tools.opensource.classpath.ClassPathResult;\n+import com.google.cloud.tools.opensource.classpath.LinkageChecker;\n+import com.google.cloud.tools.opensource.classpath.LinkageProblem;\n+import com.google.common.collect.ImmutableList;\n+import com.google.common.collect.ImmutableSet;\n+import com.google.common.collect.ImmutableSetMultimap;\n+import java.io.IOException;\n+import java.net.URI;\n+import java.net.URISyntaxException;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+import java.util.logging.Logger;\n+import org.eclipse.aether.artifact.Artifact;\n+\n+/**\n+ * A tool to find Java 8-incompatible references in the class files in a BOM. It checks the class\n+ * files in the following artifacts:\n+ *\n+ * <ul>\n+ *   <li>The artifacts in the {@code dependencyManagement} section of the BOM\n+ *   <li>The artifacts in the dependency graph for each of the artifact above\n+ *   <li>The latest version of the artifacts in the dependency graphs\n+ * </ul>\n+ *\n+ * <p>If it finds references to classes in the core library, which are not present in Java 8, it\n+ * exits with status code 1; otherwise it exits with status code 0.\n+ *\n+ * @see <a\n+ *     href=\"https://github.com/GoogleCloudPlatform/cloud-opensource-java/wiki/Java-8-incompatible-references-of-java.nio.Buffer-classes-generated-by-Java-9--compilers\"\n+ *     >Java 8 incompatible references of java.nio.Buffer classes generated by Java 9 compilers</a>\n+ */\n+public class Java8IncompatibleReferenceCheck {\n+\n+  private static final Logger logger =\n+      Logger.getLogger(Java8IncompatibleReferenceCheck.class.getName());\n+\n+  public static void main(String[] arguments)\n+      throws MavenRepositoryException, IOException, URISyntaxException {\n+\n+    if (arguments.length != 1) {\n+      System.err.println(\"Specify a path to the BOM file\");\n+      System.exit(1);\n+    }\n+\n+    URI exclusionFileUri =\n+        Java8IncompatibleReferenceCheck.class\n+            .getClassLoader()\n+            .getResource(\"java8-incompatible-reference-check-exclusion.xml\")\n+            .toURI();\n+    Path exclusionFile = Paths.get(exclusionFileUri).toAbsolutePath();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5d778a567222ddc02a56e92ea2b6da43c91d662e"}, "originalPosition": 73}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzAwNzg3NQ==", "bodyText": "This is what would contain the return type change?", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1625#discussion_r483007875", "createdAt": "2020-09-03T14:10:29Z", "author": {"login": "elharo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/Java8IncompatibleReferenceCheck.java", "diffHunk": "@@ -0,0 +1,145 @@\n+/*\n+ * Copyright 2020 Google LLC.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.cloud.tools.opensource.dependencies;\n+\n+import static com.google.common.collect.ImmutableSet.toImmutableSet;\n+\n+import com.google.cloud.tools.opensource.classpath.ClassFile;\n+import com.google.cloud.tools.opensource.classpath.ClassPathBuilder;\n+import com.google.cloud.tools.opensource.classpath.ClassPathEntry;\n+import com.google.cloud.tools.opensource.classpath.ClassPathResult;\n+import com.google.cloud.tools.opensource.classpath.LinkageChecker;\n+import com.google.cloud.tools.opensource.classpath.LinkageProblem;\n+import com.google.common.collect.ImmutableList;\n+import com.google.common.collect.ImmutableSet;\n+import com.google.common.collect.ImmutableSetMultimap;\n+import java.io.IOException;\n+import java.net.URI;\n+import java.net.URISyntaxException;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+import java.util.logging.Logger;\n+import org.eclipse.aether.artifact.Artifact;\n+\n+/**\n+ * A tool to find Java 8-incompatible references in the class files in a BOM. It checks the class\n+ * files in the following artifacts:\n+ *\n+ * <ul>\n+ *   <li>The artifacts in the {@code dependencyManagement} section of the BOM\n+ *   <li>The artifacts in the dependency graph for each of the artifact above\n+ *   <li>The latest version of the artifacts in the dependency graphs\n+ * </ul>\n+ *\n+ * <p>If it finds references to classes in the core library, which are not present in Java 8, it\n+ * exits with status code 1; otherwise it exits with status code 0.\n+ *\n+ * @see <a\n+ *     href=\"https://github.com/GoogleCloudPlatform/cloud-opensource-java/wiki/Java-8-incompatible-references-of-java.nio.Buffer-classes-generated-by-Java-9--compilers\"\n+ *     >Java 8 incompatible references of java.nio.Buffer classes generated by Java 9 compilers</a>\n+ */\n+public class Java8IncompatibleReferenceCheck {\n+\n+  private static final Logger logger =\n+      Logger.getLogger(Java8IncompatibleReferenceCheck.class.getName());\n+\n+  public static void main(String[] arguments)\n+      throws MavenRepositoryException, IOException, URISyntaxException {\n+\n+    if (arguments.length != 1) {\n+      System.err.println(\"Specify a path to the BOM file\");\n+      System.exit(1);\n+    }\n+\n+    URI exclusionFileUri =\n+        Java8IncompatibleReferenceCheck.class\n+            .getClassLoader()\n+            .getResource(\"java8-incompatible-reference-check-exclusion.xml\")\n+            .toURI();\n+    Path exclusionFile = Paths.get(exclusionFileUri).toAbsolutePath();\n+\n+    String bomFileName = arguments[0];\n+\n+    Path bomFile = Paths.get(bomFileName);\n+    Bom bom = Bom.readBom(bomFile);\n+\n+    ImmutableList<Artifact> managedDependencies = bom.getManagedDependencies();\n+\n+    int count = 1;\n+\n+    // The BOM member to problematic dependencies\n+    ImmutableSetMultimap.Builder<Artifact, Artifact> problematicDependencies =\n+        ImmutableSetMultimap.builder();\n+    for (Artifact managedDependency : managedDependencies) {\n+      logger.info(\n+          \"Checking \"\n+              + managedDependency\n+              + \" (\"\n+              + (count++)\n+              + \"/\"\n+              + managedDependencies.size()\n+              + \")\");\n+\n+      ClassPathBuilder classPathBuilder = new ClassPathBuilder();\n+      ClassPathResult result = classPathBuilder.resolve(ImmutableList.of(managedDependency), false);\n+\n+      LinkageChecker linkageChecker =\n+          LinkageChecker.create(result.getClassPath(), result.getClassPath(), exclusionFile);\n+\n+      ImmutableSet<LinkageProblem> linkageProblems = linkageChecker.findLinkageProblems();\n+\n+      ImmutableSet<LinkageProblem> invalidJdkReferences =\n+          linkageProblems.stream()\n+              .filter(problem -> problem.getSymbol().getClassBinaryName().startsWith(\"java.\"))\n+              .collect(toImmutableSet());\n+\n+      if (!invalidJdkReferences.isEmpty()) {\n+        invalidJdkReferences.stream()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5d778a567222ddc02a56e92ea2b6da43c91d662e"}, "originalPosition": 111}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "514cc0f5e7850841cd0c5dde25002fe98f98c143", "author": {"user": {"login": "suztomo", "name": "Tomo Suzuki"}}, "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/514cc0f5e7850841cd0c5dde25002fe98f98c143", "committedDate": "2020-09-03T14:52:19Z", "message": "Applied review"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "01b6dc4023dec3417224af53fdc530d96c0f63e7", "author": {"user": {"login": "suztomo", "name": "Tomo Suzuki"}}, "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/01b6dc4023dec3417224af53fdc530d96c0f63e7", "committedDate": "2020-09-03T16:24:40Z", "message": "LinkageChecker to take exclusion file URL"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "980f98eb405a1bd4015641c9d095f9ee675a8dca", "author": {"user": {"login": "suztomo", "name": "Tomo Suzuki"}}, "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/980f98eb405a1bd4015641c9d095f9ee675a8dca", "committedDate": "2020-09-03T16:27:11Z", "message": "Merge branch 'bad_jdk_references_check' of https://github.com/GoogleCloudPlatform/cloud-opensource-java into bad_jdk_references_check"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgyMDI2MzY4", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1625#pullrequestreview-482026368", "createdAt": "2020-09-03T16:49:09Z", "commit": {"oid": "980f98eb405a1bd4015641c9d095f9ee675a8dca"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "da2d0b9b3d7b148f2f7d7c5f1ddf5880e7638215", "author": {"user": {"login": "suztomo", "name": "Tomo Suzuki"}}, "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/da2d0b9b3d7b148f2f7d7c5f1ddf5880e7638215", "committedDate": "2020-09-03T17:05:24Z", "message": "Exclusion file to be arguments specified in pom.xml"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e75533a2c456142d611fd4a5ae2a6a3e9e472259", "author": {"user": {"login": "suztomo", "name": "Tomo Suzuki"}}, "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/e75533a2c456142d611fd4a5ae2a6a3e9e472259", "committedDate": "2020-09-03T17:05:58Z", "message": "Merge remote-tracking branch 'origin/master' into bad_jdk_references_check"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "904e4bf58871c795cb10eae1b70dae60727386ff", "author": {"user": {"login": "suztomo", "name": "Tomo Suzuki"}}, "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/904e4bf58871c795cb10eae1b70dae60727386ff", "committedDate": "2020-09-03T17:20:39Z", "message": "Reverted unnecessary change"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgyMDQ4NTE3", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1625#pullrequestreview-482048517", "createdAt": "2020-09-03T17:19:09Z", "commit": {"oid": "e75533a2c456142d611fd4a5ae2a6a3e9e472259"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxNzoxOTowOVrOHMwVAw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxNzoxOTowOVrOHMwVAw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzEzNjc3MQ==", "bodyText": "Now the exclusion file is passed to the program as the second argument.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1625#discussion_r483136771", "createdAt": "2020-09-03T17:19:09Z", "author": {"login": "suztomo"}, "path": "dependencies/pom.xml", "diffHunk": "@@ -120,4 +120,26 @@\n       <scope>test</scope>\n     </dependency>\n   </dependencies>\n+\n+  <profiles>\n+    <profile>\n+      <id>java8-incompatible-reference-check</id>\n+      <build>\n+        <plugins>\n+          <plugin>\n+            <groupId>org.codehaus.mojo</groupId>\n+            <artifactId>exec-maven-plugin</artifactId>\n+            <configuration>\n+              <skip>false</skip>\n+              <mainClass>com.google.cloud.tools.opensource.dependencies.Java8IncompatibleReferenceCheck</mainClass>\n+              <arguments>\n+                <argument>../boms/cloud-oss-bom/pom.xml</argument>\n+                <argument>src/main/resources/java8-incompatible-reference-check-exclusion.xml</argument>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e75533a2c456142d611fd4a5ae2a6a3e9e472259"}, "originalPosition": 18}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1416, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}