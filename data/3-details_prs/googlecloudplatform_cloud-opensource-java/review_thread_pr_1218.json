{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc1MTgwNzcz", "number": 1218, "reviewThreads": {"totalCount": 21, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQwMjozMTo1M1rODfwzeg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxODo1NDo0NlrODf_DXw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0NjMyMDU4OnYy", "diffSide": "LEFT", "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/DependencyGraphBuilder.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQwMjozMTo1M1rOFpqAAw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQwMjozMTo1M1rOFpqAAw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTIyNDA2Nw==", "bodyText": "buildCompleteGraph and buildLinkageCheckDependencyGraph have been merged to buildFullDependencyGraph.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1218#discussion_r379224067", "createdAt": "2020-02-14T02:31:53Z", "author": {"login": "suztomo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/DependencyGraphBuilder.java", "diffHunk": "@@ -195,41 +192,30 @@ private DependencyNode resolveCompileTimeDependencies(\n    * @param artifacts Maven artifacts to retrieve their dependencies\n    * @return dependency graph representing the tree of Maven artifacts\n    */\n-  public DependencyGraphResult buildLinkageCheckDependencyGraph(List<Artifact> artifacts) {\n+  public DependencyGraphResult buildFullDependencyGraph(List<Artifact> artifacts) {\n     ImmutableList<DependencyNode> dependencyNodes =\n         artifacts.stream().map(DefaultDependencyNode::new).collect(toImmutableList());\n-    return buildDependencyGraph(\n-        dependencyNodes, GraphTraversalOption.FULL_DEPENDENCY_WITH_PROVIDED);\n-  }\n-\n-  /**\n-   * Finds the full compile time, transitive dependency graph including duplicates and conflicting\n-   * versions.\n-   */\n-  public DependencyGraphResult buildCompleteGraph(Dependency dependency) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76e0349f83d637d54a26184550fa5a9b9c500cb3"}, "originalPosition": 68}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0NjMyMTM1OnYy", "diffSide": "RIGHT", "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/DependencyGraphBuilder.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQwMjozMjoyM1rOFpqAew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQwMjozMjoyM1rOFpqAew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTIyNDE4Nw==", "bodyText": "Renamed to reflect \"dependency graph as seen by Maven\" as in Javadoc.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1218#discussion_r379224187", "createdAt": "2020-02-14T02:32:23Z", "author": {"login": "suztomo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/DependencyGraphBuilder.java", "diffHunk": "@@ -195,41 +192,30 @@ private DependencyNode resolveCompileTimeDependencies(\n    * @param artifacts Maven artifacts to retrieve their dependencies\n    * @return dependency graph representing the tree of Maven artifacts\n    */\n-  public DependencyGraphResult buildLinkageCheckDependencyGraph(List<Artifact> artifacts) {\n+  public DependencyGraphResult buildFullDependencyGraph(List<Artifact> artifacts) {\n     ImmutableList<DependencyNode> dependencyNodes =\n         artifacts.stream().map(DefaultDependencyNode::new).collect(toImmutableList());\n-    return buildDependencyGraph(\n-        dependencyNodes, GraphTraversalOption.FULL_DEPENDENCY_WITH_PROVIDED);\n-  }\n-\n-  /**\n-   * Finds the full compile time, transitive dependency graph including duplicates and conflicting\n-   * versions.\n-   */\n-  public DependencyGraphResult buildCompleteGraph(Dependency dependency) {\n-    DefaultDependencyNode root = new DefaultDependencyNode(dependency);\n-    return buildDependencyGraph(ImmutableList.of(root), GraphTraversalOption.FULL_DEPENDENCY);\n+    return buildDependencyGraph(dependencyNodes, GraphTraversalOption.FULL_DEPENDENCY);\n   }\n \n   /**\n    * Finds the complete transitive dependency graph as seen by Maven. It does not include duplicates\n    * and conflicting versions. That is, this resolves conflicting versions by picking the first\n    * version seen. This is how Maven normally operates.\n    */\n-  public DependencyGraphResult buildGraph(Dependency dependency) {\n+  public DependencyGraphResult buildMavenDependencyGraph(Dependency dependency) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76e0349f83d637d54a26184550fa5a9b9c500cb3"}, "originalPosition": 80}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0NjMyMzYwOnYy", "diffSide": "RIGHT", "path": "dependencies/src/test/java/com/google/cloud/tools/opensource/dependencies/DependencyGraphIntegrationTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQwMjozMzo0N1rOFpqBsw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQwMjozMzo0N1rOFpqBsw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTIyNDQ5OQ==", "bodyText": "Because now the graph includes provided dependencies, the number of updates increases. This will affect the dependency convergence column.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1218#discussion_r379224499", "createdAt": "2020-02-14T02:33:47Z", "author": {"login": "suztomo"}, "path": "dependencies/src/test/java/com/google/cloud/tools/opensource/dependencies/DependencyGraphIntegrationTest.java", "diffHunk": "@@ -97,13 +106,15 @@ public void testJaxen() throws RepositoryException {\n     DefaultArtifact jaxen =\n         new DefaultArtifact(\"jaxen:jaxen:1.1.6\");\n     DependencyGraph graph =\n-        dependencyGraphBuilder.buildCompleteGraph(new Dependency(jaxen, \"compile\")).getDependencyGraph();\n+        dependencyGraphBuilder\n+            .buildFullDependencyGraph(ImmutableList.of(jaxen))\n+            .getDependencyGraph();\n \n     List<Update> updates = graph.findUpdates();\n-    Truth.assertThat(updates).hasSize(3);\n+    Truth.assertThat(updates).hasSize(6);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76e0349f83d637d54a26184550fa5a9b9c500cb3"}, "originalPosition": 58}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0NjMyNDAzOnYy", "diffSide": "RIGHT", "path": "dependencies/src/test/java/com/google/cloud/tools/opensource/dependencies/DependencyGraphIntegrationTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQwMjozNDowMVrOFpqB8w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQwMjozNDowMVrOFpqB8w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTIyNDU2Mw==", "bodyText": "Because now the graph includes provided dependencies, the number of calculated conflicts increases. This will affect the dependency convergence column.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1218#discussion_r379224563", "createdAt": "2020-02-14T02:34:01Z", "author": {"login": "suztomo"}, "path": "dependencies/src/test/java/com/google/cloud/tools/opensource/dependencies/DependencyGraphIntegrationTest.java", "diffHunk": "@@ -97,13 +106,15 @@ public void testJaxen() throws RepositoryException {\n     DefaultArtifact jaxen =\n         new DefaultArtifact(\"jaxen:jaxen:1.1.6\");\n     DependencyGraph graph =\n-        dependencyGraphBuilder.buildCompleteGraph(new Dependency(jaxen, \"compile\")).getDependencyGraph();\n+        dependencyGraphBuilder\n+            .buildFullDependencyGraph(ImmutableList.of(jaxen))\n+            .getDependencyGraph();\n \n     List<Update> updates = graph.findUpdates();\n-    Truth.assertThat(updates).hasSize(3);\n+    Truth.assertThat(updates).hasSize(6);\n \n     List<DependencyPath> conflicts = graph.findConflicts();\n-    Truth.assertThat(conflicts).hasSize(5);\n+    Truth.assertThat(conflicts).hasSize(10);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76e0349f83d637d54a26184550fa5a9b9c500cb3"}, "originalPosition": 62}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0NzUzNzQzOnYy", "diffSide": "RIGHT", "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/DependencyGraphBuilder.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxMjo0NjozOVrOFp1gTw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxNTowMzoxNVrOFp5fMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTQxMjU1OQ==", "bodyText": "delete \"complete\"", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1218#discussion_r379412559", "createdAt": "2020-02-14T12:46:39Z", "author": {"login": "elharo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/DependencyGraphBuilder.java", "diffHunk": "@@ -195,41 +192,30 @@ private DependencyNode resolveCompileTimeDependencies(\n    * @param artifacts Maven artifacts to retrieve their dependencies\n    * @return dependency graph representing the tree of Maven artifacts\n    */\n-  public DependencyGraphResult buildLinkageCheckDependencyGraph(List<Artifact> artifacts) {\n+  public DependencyGraphResult buildFullDependencyGraph(List<Artifact> artifacts) {\n     ImmutableList<DependencyNode> dependencyNodes =\n         artifacts.stream().map(DefaultDependencyNode::new).collect(toImmutableList());\n-    return buildDependencyGraph(\n-        dependencyNodes, GraphTraversalOption.FULL_DEPENDENCY_WITH_PROVIDED);\n-  }\n-\n-  /**\n-   * Finds the full compile time, transitive dependency graph including duplicates and conflicting\n-   * versions.\n-   */\n-  public DependencyGraphResult buildCompleteGraph(Dependency dependency) {\n-    DefaultDependencyNode root = new DefaultDependencyNode(dependency);\n-    return buildDependencyGraph(ImmutableList.of(root), GraphTraversalOption.FULL_DEPENDENCY);\n+    return buildDependencyGraph(dependencyNodes, GraphTraversalOption.FULL_DEPENDENCY);\n   }\n \n   /**\n    * Finds the complete transitive dependency graph as seen by Maven. It does not include duplicates", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76e0349f83d637d54a26184550fa5a9b9c500cb3"}, "originalPosition": 75}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTQ3NzgxMA==", "bodyText": "Done.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1218#discussion_r379477810", "createdAt": "2020-02-14T15:03:15Z", "author": {"login": "suztomo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/DependencyGraphBuilder.java", "diffHunk": "@@ -195,41 +192,30 @@ private DependencyNode resolveCompileTimeDependencies(\n    * @param artifacts Maven artifacts to retrieve their dependencies\n    * @return dependency graph representing the tree of Maven artifacts\n    */\n-  public DependencyGraphResult buildLinkageCheckDependencyGraph(List<Artifact> artifacts) {\n+  public DependencyGraphResult buildFullDependencyGraph(List<Artifact> artifacts) {\n     ImmutableList<DependencyNode> dependencyNodes =\n         artifacts.stream().map(DefaultDependencyNode::new).collect(toImmutableList());\n-    return buildDependencyGraph(\n-        dependencyNodes, GraphTraversalOption.FULL_DEPENDENCY_WITH_PROVIDED);\n-  }\n-\n-  /**\n-   * Finds the full compile time, transitive dependency graph including duplicates and conflicting\n-   * versions.\n-   */\n-  public DependencyGraphResult buildCompleteGraph(Dependency dependency) {\n-    DefaultDependencyNode root = new DefaultDependencyNode(dependency);\n-    return buildDependencyGraph(ImmutableList.of(root), GraphTraversalOption.FULL_DEPENDENCY);\n+    return buildDependencyGraph(dependencyNodes, GraphTraversalOption.FULL_DEPENDENCY);\n   }\n \n   /**\n    * Finds the complete transitive dependency graph as seen by Maven. It does not include duplicates", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTQxMjU1OQ=="}, "originalCommit": {"oid": "76e0349f83d637d54a26184550fa5a9b9c500cb3"}, "originalPosition": 75}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0NzU0NDQ0OnYy", "diffSide": "RIGHT", "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/DependencyGraphBuilder.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxMjo0OToyOFrOFp1kcA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxNTowNDowN1rOFp5g5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTQxMzYxNg==", "bodyText": "\"Option for the default dependency graph by Maven.\" --> \"Normal Maven dependency graph.\"", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1218#discussion_r379413616", "createdAt": "2020-02-14T12:49:28Z", "author": {"login": "elharo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/DependencyGraphBuilder.java", "diffHunk": "@@ -291,13 +277,28 @@ public static UnresolvableArtifactProblem createUnresolvableArtifactProblem(\n   }\n \n   private enum GraphTraversalOption {\n+    /**\n+     * Option for the default dependency graph by Maven. This dependency graph has the following", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76e0349f83d637d54a26184550fa5a9b9c500cb3"}, "originalPosition": 104}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTQ3ODI0Ng==", "bodyText": "Done.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1218#discussion_r379478246", "createdAt": "2020-02-14T15:04:07Z", "author": {"login": "suztomo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/DependencyGraphBuilder.java", "diffHunk": "@@ -291,13 +277,28 @@ public static UnresolvableArtifactProblem createUnresolvableArtifactProblem(\n   }\n \n   private enum GraphTraversalOption {\n+    /**\n+     * Option for the default dependency graph by Maven. This dependency graph has the following", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTQxMzYxNg=="}, "originalCommit": {"oid": "76e0349f83d637d54a26184550fa5a9b9c500cb3"}, "originalPosition": 104}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0NzU0NTk5OnYy", "diffSide": "RIGHT", "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/DependencyGraphBuilder.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxMjo1MDoxMVrOFp1lcA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxNTowNDowOVrOFp5hBQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTQxMzg3Mg==", "bodyText": "perhaps NONE --> MAVEN or MAVEN_DEFAULT (though default would imply that Maven itself has another mode. Does it?)", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1218#discussion_r379413872", "createdAt": "2020-02-14T12:50:11Z", "author": {"login": "elharo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/DependencyGraphBuilder.java", "diffHunk": "@@ -291,13 +277,28 @@ public static UnresolvableArtifactProblem createUnresolvableArtifactProblem(\n   }\n \n   private enum GraphTraversalOption {\n+    /**\n+     * Option for the default dependency graph by Maven. This dependency graph has the following\n+     * attributes:\n+     *\n+     * <ul>\n+     *   <li>It contains at most one node for the same groupId and artifactId.\n+     *   <li>It does not contain transitive provided-scope dependencies.\n+     *   <li>It does not contain transitive optional dependencies.\n+     * </ul>\n+     */\n     NONE,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76e0349f83d637d54a26184550fa5a9b9c500cb3"}, "originalPosition": 113}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTQ3ODI3Nw==", "bodyText": "Updated to MAVEN.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1218#discussion_r379478277", "createdAt": "2020-02-14T15:04:09Z", "author": {"login": "suztomo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/DependencyGraphBuilder.java", "diffHunk": "@@ -291,13 +277,28 @@ public static UnresolvableArtifactProblem createUnresolvableArtifactProblem(\n   }\n \n   private enum GraphTraversalOption {\n+    /**\n+     * Option for the default dependency graph by Maven. This dependency graph has the following\n+     * attributes:\n+     *\n+     * <ul>\n+     *   <li>It contains at most one node for the same groupId and artifactId.\n+     *   <li>It does not contain transitive provided-scope dependencies.\n+     *   <li>It does not contain transitive optional dependencies.\n+     * </ul>\n+     */\n     NONE,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTQxMzg3Mg=="}, "originalCommit": {"oid": "76e0349f83d637d54a26184550fa5a9b9c500cb3"}, "originalPosition": 113}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0NzU0Njk5OnYy", "diffSide": "RIGHT", "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/DependencyGraphBuilder.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxMjo1MDozM1rOFp1mBw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxNTowNDo0NFrOFp5iOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTQxNDAyMw==", "bodyText": "delete \"Option for\"", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1218#discussion_r379414023", "createdAt": "2020-02-14T12:50:33Z", "author": {"login": "elharo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/DependencyGraphBuilder.java", "diffHunk": "@@ -291,13 +277,28 @@ public static UnresolvableArtifactProblem createUnresolvableArtifactProblem(\n   }\n \n   private enum GraphTraversalOption {\n+    /**\n+     * Option for the default dependency graph by Maven. This dependency graph has the following\n+     * attributes:\n+     *\n+     * <ul>\n+     *   <li>It contains at most one node for the same groupId and artifactId.\n+     *   <li>It does not contain transitive provided-scope dependencies.\n+     *   <li>It does not contain transitive optional dependencies.\n+     * </ul>\n+     */\n     NONE,\n-    FULL_DEPENDENCY,\n-    FULL_DEPENDENCY_WITH_PROVIDED;\n \n-    private boolean resolveFullDependencies() {\n-      return this == FULL_DEPENDENCY || this == FULL_DEPENDENCY_WITH_PROVIDED;\n-    }\n+    /**\n+     * Option for the full dependency graph. This dependency graph has the following attributes:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76e0349f83d637d54a26184550fa5a9b9c500cb3"}, "originalPosition": 121}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTQ3ODU4NA==", "bodyText": "Done.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1218#discussion_r379478584", "createdAt": "2020-02-14T15:04:44Z", "author": {"login": "suztomo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/DependencyGraphBuilder.java", "diffHunk": "@@ -291,13 +277,28 @@ public static UnresolvableArtifactProblem createUnresolvableArtifactProblem(\n   }\n \n   private enum GraphTraversalOption {\n+    /**\n+     * Option for the default dependency graph by Maven. This dependency graph has the following\n+     * attributes:\n+     *\n+     * <ul>\n+     *   <li>It contains at most one node for the same groupId and artifactId.\n+     *   <li>It does not contain transitive provided-scope dependencies.\n+     *   <li>It does not contain transitive optional dependencies.\n+     * </ul>\n+     */\n     NONE,\n-    FULL_DEPENDENCY,\n-    FULL_DEPENDENCY_WITH_PROVIDED;\n \n-    private boolean resolveFullDependencies() {\n-      return this == FULL_DEPENDENCY || this == FULL_DEPENDENCY_WITH_PROVIDED;\n-    }\n+    /**\n+     * Option for the full dependency graph. This dependency graph has the following attributes:", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTQxNDAyMw=="}, "originalCommit": {"oid": "76e0349f83d637d54a26184550fa5a9b9c500cb3"}, "originalPosition": 121}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0NzU0Nzg4OnYy", "diffSide": "RIGHT", "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/DependencyGraphBuilder.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxMjo1MDo0N1rOFp1mfg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxNToxMjo0NFrOFp5ztA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTQxNDE0Mg==", "bodyText": "perhaps just FULL", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1218#discussion_r379414142", "createdAt": "2020-02-14T12:50:47Z", "author": {"login": "elharo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/DependencyGraphBuilder.java", "diffHunk": "@@ -291,13 +277,28 @@ public static UnresolvableArtifactProblem createUnresolvableArtifactProblem(\n   }\n \n   private enum GraphTraversalOption {\n+    /**\n+     * Option for the default dependency graph by Maven. This dependency graph has the following\n+     * attributes:\n+     *\n+     * <ul>\n+     *   <li>It contains at most one node for the same groupId and artifactId.\n+     *   <li>It does not contain transitive provided-scope dependencies.\n+     *   <li>It does not contain transitive optional dependencies.\n+     * </ul>\n+     */\n     NONE,\n-    FULL_DEPENDENCY,\n-    FULL_DEPENDENCY_WITH_PROVIDED;\n \n-    private boolean resolveFullDependencies() {\n-      return this == FULL_DEPENDENCY || this == FULL_DEPENDENCY_WITH_PROVIDED;\n-    }\n+    /**\n+     * Option for the full dependency graph. This dependency graph has the following attributes:\n+     *\n+     * <ul>\n+     *   <li>It may contain different dependency nodes for the same groupId and artifactId.\n+     *   <li>It may contain transitive provided-scope dependencies.\n+     *   <li>It may contain transitive optional dependencies.\n+     * </ul>\n+     */\n+    FULL_DEPENDENCY;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76e0349f83d637d54a26184550fa5a9b9c500cb3"}, "originalPosition": 129}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTQ4MzA2MA==", "bodyText": "Updated.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1218#discussion_r379483060", "createdAt": "2020-02-14T15:12:44Z", "author": {"login": "suztomo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/DependencyGraphBuilder.java", "diffHunk": "@@ -291,13 +277,28 @@ public static UnresolvableArtifactProblem createUnresolvableArtifactProblem(\n   }\n \n   private enum GraphTraversalOption {\n+    /**\n+     * Option for the default dependency graph by Maven. This dependency graph has the following\n+     * attributes:\n+     *\n+     * <ul>\n+     *   <li>It contains at most one node for the same groupId and artifactId.\n+     *   <li>It does not contain transitive provided-scope dependencies.\n+     *   <li>It does not contain transitive optional dependencies.\n+     * </ul>\n+     */\n     NONE,\n-    FULL_DEPENDENCY,\n-    FULL_DEPENDENCY_WITH_PROVIDED;\n \n-    private boolean resolveFullDependencies() {\n-      return this == FULL_DEPENDENCY || this == FULL_DEPENDENCY_WITH_PROVIDED;\n-    }\n+    /**\n+     * Option for the full dependency graph. This dependency graph has the following attributes:\n+     *\n+     * <ul>\n+     *   <li>It may contain different dependency nodes for the same groupId and artifactId.\n+     *   <li>It may contain transitive provided-scope dependencies.\n+     *   <li>It may contain transitive optional dependencies.\n+     * </ul>\n+     */\n+    FULL_DEPENDENCY;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTQxNDE0Mg=="}, "originalCommit": {"oid": "76e0349f83d637d54a26184550fa5a9b9c500cb3"}, "originalPosition": 129}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0NzU1MjM2OnYy", "diffSide": "RIGHT", "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/DependencyGraphBuilder.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxMjo1MjozOFrOFp1pHQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxNToxMjoyNlrOFp5zCg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTQxNDgxMw==", "bodyText": "I see what you mean but \"may\" is a little unclear. I think it might be clearer to rephrase this like, \"It contains dependency nodes for each group:artifact:version\"", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1218#discussion_r379414813", "createdAt": "2020-02-14T12:52:38Z", "author": {"login": "elharo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/DependencyGraphBuilder.java", "diffHunk": "@@ -291,13 +277,28 @@ public static UnresolvableArtifactProblem createUnresolvableArtifactProblem(\n   }\n \n   private enum GraphTraversalOption {\n+    /**\n+     * Option for the default dependency graph by Maven. This dependency graph has the following\n+     * attributes:\n+     *\n+     * <ul>\n+     *   <li>It contains at most one node for the same groupId and artifactId.\n+     *   <li>It does not contain transitive provided-scope dependencies.\n+     *   <li>It does not contain transitive optional dependencies.\n+     * </ul>\n+     */\n     NONE,\n-    FULL_DEPENDENCY,\n-    FULL_DEPENDENCY_WITH_PROVIDED;\n \n-    private boolean resolveFullDependencies() {\n-      return this == FULL_DEPENDENCY || this == FULL_DEPENDENCY_WITH_PROVIDED;\n-    }\n+    /**\n+     * Option for the full dependency graph. This dependency graph has the following attributes:\n+     *\n+     * <ul>\n+     *   <li>It may contain different dependency nodes for the same groupId and artifactId.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76e0349f83d637d54a26184550fa5a9b9c500cb3"}, "originalPosition": 124}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTQ4Mjg5MA==", "bodyText": "Updated as \"The same artifact, which have the same group:artifact:version, appears in different nodes in the graph\"", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1218#discussion_r379482890", "createdAt": "2020-02-14T15:12:26Z", "author": {"login": "suztomo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/DependencyGraphBuilder.java", "diffHunk": "@@ -291,13 +277,28 @@ public static UnresolvableArtifactProblem createUnresolvableArtifactProblem(\n   }\n \n   private enum GraphTraversalOption {\n+    /**\n+     * Option for the default dependency graph by Maven. This dependency graph has the following\n+     * attributes:\n+     *\n+     * <ul>\n+     *   <li>It contains at most one node for the same groupId and artifactId.\n+     *   <li>It does not contain transitive provided-scope dependencies.\n+     *   <li>It does not contain transitive optional dependencies.\n+     * </ul>\n+     */\n     NONE,\n-    FULL_DEPENDENCY,\n-    FULL_DEPENDENCY_WITH_PROVIDED;\n \n-    private boolean resolveFullDependencies() {\n-      return this == FULL_DEPENDENCY || this == FULL_DEPENDENCY_WITH_PROVIDED;\n-    }\n+    /**\n+     * Option for the full dependency graph. This dependency graph has the following attributes:\n+     *\n+     * <ul>\n+     *   <li>It may contain different dependency nodes for the same groupId and artifactId.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTQxNDgxMw=="}, "originalCommit": {"oid": "76e0349f83d637d54a26184550fa5a9b9c500cb3"}, "originalPosition": 124}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0NzU1Mjg1OnYy", "diffSide": "RIGHT", "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/DependencyGraphBuilder.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxMjo1Mjo1MVrOFp1paQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxNToxMjozMVrOFp5zPQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTQxNDg4OQ==", "bodyText": "It may contain --> It contains", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1218#discussion_r379414889", "createdAt": "2020-02-14T12:52:51Z", "author": {"login": "elharo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/DependencyGraphBuilder.java", "diffHunk": "@@ -291,13 +277,28 @@ public static UnresolvableArtifactProblem createUnresolvableArtifactProblem(\n   }\n \n   private enum GraphTraversalOption {\n+    /**\n+     * Option for the default dependency graph by Maven. This dependency graph has the following\n+     * attributes:\n+     *\n+     * <ul>\n+     *   <li>It contains at most one node for the same groupId and artifactId.\n+     *   <li>It does not contain transitive provided-scope dependencies.\n+     *   <li>It does not contain transitive optional dependencies.\n+     * </ul>\n+     */\n     NONE,\n-    FULL_DEPENDENCY,\n-    FULL_DEPENDENCY_WITH_PROVIDED;\n \n-    private boolean resolveFullDependencies() {\n-      return this == FULL_DEPENDENCY || this == FULL_DEPENDENCY_WITH_PROVIDED;\n-    }\n+    /**\n+     * Option for the full dependency graph. This dependency graph has the following attributes:\n+     *\n+     * <ul>\n+     *   <li>It may contain different dependency nodes for the same groupId and artifactId.\n+     *   <li>It may contain transitive provided-scope dependencies.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76e0349f83d637d54a26184550fa5a9b9c500cb3"}, "originalPosition": 125}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTQ4Mjk0MQ==", "bodyText": "Done", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1218#discussion_r379482941", "createdAt": "2020-02-14T15:12:31Z", "author": {"login": "suztomo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/DependencyGraphBuilder.java", "diffHunk": "@@ -291,13 +277,28 @@ public static UnresolvableArtifactProblem createUnresolvableArtifactProblem(\n   }\n \n   private enum GraphTraversalOption {\n+    /**\n+     * Option for the default dependency graph by Maven. This dependency graph has the following\n+     * attributes:\n+     *\n+     * <ul>\n+     *   <li>It contains at most one node for the same groupId and artifactId.\n+     *   <li>It does not contain transitive provided-scope dependencies.\n+     *   <li>It does not contain transitive optional dependencies.\n+     * </ul>\n+     */\n     NONE,\n-    FULL_DEPENDENCY,\n-    FULL_DEPENDENCY_WITH_PROVIDED;\n \n-    private boolean resolveFullDependencies() {\n-      return this == FULL_DEPENDENCY || this == FULL_DEPENDENCY_WITH_PROVIDED;\n-    }\n+    /**\n+     * Option for the full dependency graph. This dependency graph has the following attributes:\n+     *\n+     * <ul>\n+     *   <li>It may contain different dependency nodes for the same groupId and artifactId.\n+     *   <li>It may contain transitive provided-scope dependencies.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTQxNDg4OQ=="}, "originalCommit": {"oid": "76e0349f83d637d54a26184550fa5a9b9c500cb3"}, "originalPosition": 125}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0NzU1MzQwOnYy", "diffSide": "RIGHT", "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/DependencyGraphBuilder.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxMjo1MzowNFrOFp1puA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxNToxMjozNlrOFp5zXw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTQxNDk2OA==", "bodyText": "may contain --> contains", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1218#discussion_r379414968", "createdAt": "2020-02-14T12:53:04Z", "author": {"login": "elharo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/DependencyGraphBuilder.java", "diffHunk": "@@ -291,13 +277,28 @@ public static UnresolvableArtifactProblem createUnresolvableArtifactProblem(\n   }\n \n   private enum GraphTraversalOption {\n+    /**\n+     * Option for the default dependency graph by Maven. This dependency graph has the following\n+     * attributes:\n+     *\n+     * <ul>\n+     *   <li>It contains at most one node for the same groupId and artifactId.\n+     *   <li>It does not contain transitive provided-scope dependencies.\n+     *   <li>It does not contain transitive optional dependencies.\n+     * </ul>\n+     */\n     NONE,\n-    FULL_DEPENDENCY,\n-    FULL_DEPENDENCY_WITH_PROVIDED;\n \n-    private boolean resolveFullDependencies() {\n-      return this == FULL_DEPENDENCY || this == FULL_DEPENDENCY_WITH_PROVIDED;\n-    }\n+    /**\n+     * Option for the full dependency graph. This dependency graph has the following attributes:\n+     *\n+     * <ul>\n+     *   <li>It may contain different dependency nodes for the same groupId and artifactId.\n+     *   <li>It may contain transitive provided-scope dependencies.\n+     *   <li>It may contain transitive optional dependencies.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76e0349f83d637d54a26184550fa5a9b9c500cb3"}, "originalPosition": 126}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTQ4Mjk3NQ==", "bodyText": "Done.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1218#discussion_r379482975", "createdAt": "2020-02-14T15:12:36Z", "author": {"login": "suztomo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/DependencyGraphBuilder.java", "diffHunk": "@@ -291,13 +277,28 @@ public static UnresolvableArtifactProblem createUnresolvableArtifactProblem(\n   }\n \n   private enum GraphTraversalOption {\n+    /**\n+     * Option for the default dependency graph by Maven. This dependency graph has the following\n+     * attributes:\n+     *\n+     * <ul>\n+     *   <li>It contains at most one node for the same groupId and artifactId.\n+     *   <li>It does not contain transitive provided-scope dependencies.\n+     *   <li>It does not contain transitive optional dependencies.\n+     * </ul>\n+     */\n     NONE,\n-    FULL_DEPENDENCY,\n-    FULL_DEPENDENCY_WITH_PROVIDED;\n \n-    private boolean resolveFullDependencies() {\n-      return this == FULL_DEPENDENCY || this == FULL_DEPENDENCY_WITH_PROVIDED;\n-    }\n+    /**\n+     * Option for the full dependency graph. This dependency graph has the following attributes:\n+     *\n+     * <ul>\n+     *   <li>It may contain different dependency nodes for the same groupId and artifactId.\n+     *   <li>It may contain transitive provided-scope dependencies.\n+     *   <li>It may contain transitive optional dependencies.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTQxNDk2OA=="}, "originalCommit": {"oid": "76e0349f83d637d54a26184550fa5a9b9c500cb3"}, "originalPosition": 126}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0NzU1NzE0OnYy", "diffSide": "RIGHT", "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/DependencyTreeFormatter.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxMjo1NDozMlrOFp1sCg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxNToxNDo1M1rOFp54Tw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTQxNTU2Mg==", "bodyText": "I think the sentence \"Each element...at the root\" can be deleted.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1218#discussion_r379415562", "createdAt": "2020-02-14T12:54:32Z", "author": {"login": "elharo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/DependencyTreeFormatter.java", "diffHunk": "@@ -30,8 +30,8 @@\n    * Formats dependencies as a tree in a similar way to {@code mvn dependency:tree}.\n    *\n    * @param dependencyPaths dependency paths from @{@link\n-   *     DependencyGraphBuilder#buildCompleteGraph(Dependency)}. Each element must have its\n-   *     parent in the list, except the ones at the root.\n+   *     DependencyGraphBuilder#buildFullDependencyGraph(List)} (Dependency)}. Each element must\n+   *     have its parent in the list, except the ones at the root.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76e0349f83d637d54a26184550fa5a9b9c500cb3"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTQ4NDIzOQ==", "bodyText": "Deleted.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1218#discussion_r379484239", "createdAt": "2020-02-14T15:14:53Z", "author": {"login": "suztomo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/DependencyTreeFormatter.java", "diffHunk": "@@ -30,8 +30,8 @@\n    * Formats dependencies as a tree in a similar way to {@code mvn dependency:tree}.\n    *\n    * @param dependencyPaths dependency paths from @{@link\n-   *     DependencyGraphBuilder#buildCompleteGraph(Dependency)}. Each element must have its\n-   *     parent in the list, except the ones at the root.\n+   *     DependencyGraphBuilder#buildFullDependencyGraph(List)} (Dependency)}. Each element must\n+   *     have its parent in the list, except the ones at the root.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTQxNTU2Mg=="}, "originalCommit": {"oid": "76e0349f83d637d54a26184550fa5a9b9c500cb3"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0ODEwMDY4OnYy", "diffSide": "LEFT", "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/DependencyGraphBuilder.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxNTo0NDowM1rOFp647g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxNTo0NDowM1rOFp647g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTUwMDc4Mg==", "bodyText": "This was implementation detail.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1218#discussion_r379500782", "createdAt": "2020-02-14T15:44:03Z", "author": {"login": "suztomo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/DependencyGraphBuilder.java", "diffHunk": "@@ -49,8 +49,33 @@\n import org.eclipse.aether.util.graph.visitor.PathRecordingDependencyVisitor;\n \n /**\n- * Based on the <a href=\"https://maven.apache.org/resolver/index.html\">Apache Maven Artifact", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c51d0359521c22fc1f39c431fd7662d975314119"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0ODEwMzI1OnYy", "diffSide": "RIGHT", "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/DependencyGraphBuilder.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxNTo0NDo1MVrOFp66lg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxOTo1MzowMVrOFqB7CQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTUwMTIwNg==", "bodyText": "Changed the argument type to Artifact because all caller was wrapping the argument with new Dependency(artifact, \"compile\"). The caller should not care about the root dependency's scope.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1218#discussion_r379501206", "createdAt": "2020-02-14T15:44:51Z", "author": {"login": "suztomo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/DependencyGraphBuilder.java", "diffHunk": "@@ -195,41 +217,31 @@ private DependencyNode resolveCompileTimeDependencies(\n    * @param artifacts Maven artifacts to retrieve their dependencies\n    * @return dependency graph representing the tree of Maven artifacts\n    */\n-  public DependencyGraphResult buildLinkageCheckDependencyGraph(List<Artifact> artifacts) {\n+  public DependencyGraphResult buildFullDependencyGraph(List<Artifact> artifacts) {\n     ImmutableList<DependencyNode> dependencyNodes =\n         artifacts.stream().map(DefaultDependencyNode::new).collect(toImmutableList());\n-    return buildDependencyGraph(\n-        dependencyNodes, GraphTraversalOption.FULL_DEPENDENCY_WITH_PROVIDED);\n+    return buildDependencyGraph(dependencyNodes, GraphTraversalOption.FULL);\n   }\n \n   /**\n-   * Finds the full compile time, transitive dependency graph including duplicates and conflicting\n-   * versions.\n+   * Builds the transitive dependency graph as seen by Maven. It does not include duplicates and\n+   * conflicting versions. That is, this resolves conflicting versions by picking the first version\n+   * seen. This is how Maven normally operates.\n    */\n-  public DependencyGraphResult buildCompleteGraph(Dependency dependency) {\n-    DefaultDependencyNode root = new DefaultDependencyNode(dependency);\n-    return buildDependencyGraph(ImmutableList.of(root), GraphTraversalOption.FULL_DEPENDENCY);\n-  }\n-\n-  /**\n-   * Finds the complete transitive dependency graph as seen by Maven. It does not include duplicates\n-   * and conflicting versions. That is, this resolves conflicting versions by picking the first\n-   * version seen. This is how Maven normally operates.\n-   */\n-  public DependencyGraphResult buildGraph(Dependency dependency) {\n+  public DependencyGraphResult buildMavenDependencyGraph(Artifact artifact) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c51d0359521c22fc1f39c431fd7662d975314119"}, "originalPosition": 119}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTU5MTQzMw==", "bodyText": "No, I think we do want dependency here. Conceptually graphs are built from dependencies, not form artifacts.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1218#discussion_r379591433", "createdAt": "2020-02-14T18:55:50Z", "author": {"login": "elharo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/DependencyGraphBuilder.java", "diffHunk": "@@ -195,41 +217,31 @@ private DependencyNode resolveCompileTimeDependencies(\n    * @param artifacts Maven artifacts to retrieve their dependencies\n    * @return dependency graph representing the tree of Maven artifacts\n    */\n-  public DependencyGraphResult buildLinkageCheckDependencyGraph(List<Artifact> artifacts) {\n+  public DependencyGraphResult buildFullDependencyGraph(List<Artifact> artifacts) {\n     ImmutableList<DependencyNode> dependencyNodes =\n         artifacts.stream().map(DefaultDependencyNode::new).collect(toImmutableList());\n-    return buildDependencyGraph(\n-        dependencyNodes, GraphTraversalOption.FULL_DEPENDENCY_WITH_PROVIDED);\n+    return buildDependencyGraph(dependencyNodes, GraphTraversalOption.FULL);\n   }\n \n   /**\n-   * Finds the full compile time, transitive dependency graph including duplicates and conflicting\n-   * versions.\n+   * Builds the transitive dependency graph as seen by Maven. It does not include duplicates and\n+   * conflicting versions. That is, this resolves conflicting versions by picking the first version\n+   * seen. This is how Maven normally operates.\n    */\n-  public DependencyGraphResult buildCompleteGraph(Dependency dependency) {\n-    DefaultDependencyNode root = new DefaultDependencyNode(dependency);\n-    return buildDependencyGraph(ImmutableList.of(root), GraphTraversalOption.FULL_DEPENDENCY);\n-  }\n-\n-  /**\n-   * Finds the complete transitive dependency graph as seen by Maven. It does not include duplicates\n-   * and conflicting versions. That is, this resolves conflicting versions by picking the first\n-   * version seen. This is how Maven normally operates.\n-   */\n-  public DependencyGraphResult buildGraph(Dependency dependency) {\n+  public DependencyGraphResult buildMavenDependencyGraph(Artifact artifact) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTUwMTIwNg=="}, "originalCommit": {"oid": "c51d0359521c22fc1f39c431fd7662d975314119"}, "originalPosition": 119}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTYxNjAwOQ==", "bodyText": "Reverted.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1218#discussion_r379616009", "createdAt": "2020-02-14T19:53:01Z", "author": {"login": "suztomo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/DependencyGraphBuilder.java", "diffHunk": "@@ -195,41 +217,31 @@ private DependencyNode resolveCompileTimeDependencies(\n    * @param artifacts Maven artifacts to retrieve their dependencies\n    * @return dependency graph representing the tree of Maven artifacts\n    */\n-  public DependencyGraphResult buildLinkageCheckDependencyGraph(List<Artifact> artifacts) {\n+  public DependencyGraphResult buildFullDependencyGraph(List<Artifact> artifacts) {\n     ImmutableList<DependencyNode> dependencyNodes =\n         artifacts.stream().map(DefaultDependencyNode::new).collect(toImmutableList());\n-    return buildDependencyGraph(\n-        dependencyNodes, GraphTraversalOption.FULL_DEPENDENCY_WITH_PROVIDED);\n+    return buildDependencyGraph(dependencyNodes, GraphTraversalOption.FULL);\n   }\n \n   /**\n-   * Finds the full compile time, transitive dependency graph including duplicates and conflicting\n-   * versions.\n+   * Builds the transitive dependency graph as seen by Maven. It does not include duplicates and\n+   * conflicting versions. That is, this resolves conflicting versions by picking the first version\n+   * seen. This is how Maven normally operates.\n    */\n-  public DependencyGraphResult buildCompleteGraph(Dependency dependency) {\n-    DefaultDependencyNode root = new DefaultDependencyNode(dependency);\n-    return buildDependencyGraph(ImmutableList.of(root), GraphTraversalOption.FULL_DEPENDENCY);\n-  }\n-\n-  /**\n-   * Finds the complete transitive dependency graph as seen by Maven. It does not include duplicates\n-   * and conflicting versions. That is, this resolves conflicting versions by picking the first\n-   * version seen. This is how Maven normally operates.\n-   */\n-  public DependencyGraphResult buildGraph(Dependency dependency) {\n+  public DependencyGraphResult buildMavenDependencyGraph(Artifact artifact) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTUwMTIwNg=="}, "originalCommit": {"oid": "c51d0359521c22fc1f39c431fd7662d975314119"}, "originalPosition": 119}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0ODY0ODAyOnYy", "diffSide": "RIGHT", "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/DependencyGraphBuilder.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxODo1MjowNVrOFqAUnw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxOTo0Nzo1M1rOFqByzA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTU4OTc5MQ==", "bodyText": "artifacts don't have dependencies. A dependency contains an artifact (usually) but is not an artifact.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1218#discussion_r379589791", "createdAt": "2020-02-14T18:52:05Z", "author": {"login": "elharo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/DependencyGraphBuilder.java", "diffHunk": "@@ -49,8 +49,33 @@\n import org.eclipse.aether.util.graph.visitor.PathRecordingDependencyVisitor;\n \n /**\n- * Based on the <a href=\"https://maven.apache.org/resolver/index.html\">Apache Maven Artifact\n- * Resolver</a> (formerly known as Eclipse Aether).\n+ * This class builds dependency graphs for Maven artifacts. The nodes in the graph are Maven\n+ * artifacts and its edges are dependencies from an artifact to another.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff1eeff2ac4319c94f238fffc9c821c07b66b1a3"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTYwMzAwNw==", "bodyText": "In Maven's Dependency and Artifact classes, that's right. However, when drawing our graph we don't need to follow that. I felt it's natural to recognize artifacts as nodes and dependencies as edges.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1218#discussion_r379603007", "createdAt": "2020-02-14T19:22:33Z", "author": {"login": "suztomo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/DependencyGraphBuilder.java", "diffHunk": "@@ -49,8 +49,33 @@\n import org.eclipse.aether.util.graph.visitor.PathRecordingDependencyVisitor;\n \n /**\n- * Based on the <a href=\"https://maven.apache.org/resolver/index.html\">Apache Maven Artifact\n- * Resolver</a> (formerly known as Eclipse Aether).\n+ * This class builds dependency graphs for Maven artifacts. The nodes in the graph are Maven\n+ * artifacts and its edges are dependencies from an artifact to another.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTU4OTc5MQ=="}, "originalCommit": {"oid": "ff1eeff2ac4319c94f238fffc9c821c07b66b1a3"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTYxMzkwMA==", "bodyText": "As discussed, remove this node and edge definition for now.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1218#discussion_r379613900", "createdAt": "2020-02-14T19:47:53Z", "author": {"login": "suztomo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/DependencyGraphBuilder.java", "diffHunk": "@@ -49,8 +49,33 @@\n import org.eclipse.aether.util.graph.visitor.PathRecordingDependencyVisitor;\n \n /**\n- * Based on the <a href=\"https://maven.apache.org/resolver/index.html\">Apache Maven Artifact\n- * Resolver</a> (formerly known as Eclipse Aether).\n+ * This class builds dependency graphs for Maven artifacts. The nodes in the graph are Maven\n+ * artifacts and its edges are dependencies from an artifact to another.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTU4OTc5MQ=="}, "originalCommit": {"oid": "ff1eeff2ac4319c94f238fffc9c821c07b66b1a3"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0ODY0OTQxOnYy", "diffSide": "RIGHT", "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/DependencyGraphBuilder.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxODo1MjozOVrOFqAVhw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxOTo0ODowOFrOFqBzNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTU5MDAyMw==", "bodyText": "Rather than focusing on the methods, describe how Maven itself does this.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1218#discussion_r379590023", "createdAt": "2020-02-14T18:52:39Z", "author": {"login": "elharo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/DependencyGraphBuilder.java", "diffHunk": "@@ -49,8 +49,33 @@\n import org.eclipse.aether.util.graph.visitor.PathRecordingDependencyVisitor;\n \n /**\n- * Based on the <a href=\"https://maven.apache.org/resolver/index.html\">Apache Maven Artifact\n- * Resolver</a> (formerly known as Eclipse Aether).\n+ * This class builds dependency graphs for Maven artifacts. The nodes in the graph are Maven\n+ * artifacts and its edges are dependencies from an artifact to another.\n+ *\n+ * <p>{@link #buildMavenDependencyGraph(Artifact)} builds a normal Maven dependency graph. This", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff1eeff2ac4319c94f238fffc9c821c07b66b1a3"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTYxNDAwNQ==", "bodyText": "Updated. Does that look good?", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1218#discussion_r379614005", "createdAt": "2020-02-14T19:48:08Z", "author": {"login": "suztomo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/DependencyGraphBuilder.java", "diffHunk": "@@ -49,8 +49,33 @@\n import org.eclipse.aether.util.graph.visitor.PathRecordingDependencyVisitor;\n \n /**\n- * Based on the <a href=\"https://maven.apache.org/resolver/index.html\">Apache Maven Artifact\n- * Resolver</a> (formerly known as Eclipse Aether).\n+ * This class builds dependency graphs for Maven artifacts. The nodes in the graph are Maven\n+ * artifacts and its edges are dependencies from an artifact to another.\n+ *\n+ * <p>{@link #buildMavenDependencyGraph(Artifact)} builds a normal Maven dependency graph. This", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTU5MDAyMw=="}, "originalCommit": {"oid": "ff1eeff2ac4319c94f238fffc9c821c07b66b1a3"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0ODY1MDIxOnYy", "diffSide": "RIGHT", "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/DependencyGraphBuilder.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxODo1Mjo1NVrOFqAV-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxOTo0ODoyMlrOFqBzjw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTU5MDEzOA==", "bodyText": "group ID and artifact ID since this isn't code", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1218#discussion_r379590138", "createdAt": "2020-02-14T18:52:55Z", "author": {"login": "elharo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/DependencyGraphBuilder.java", "diffHunk": "@@ -49,8 +49,33 @@\n import org.eclipse.aether.util.graph.visitor.PathRecordingDependencyVisitor;\n \n /**\n- * Based on the <a href=\"https://maven.apache.org/resolver/index.html\">Apache Maven Artifact\n- * Resolver</a> (formerly known as Eclipse Aether).\n+ * This class builds dependency graphs for Maven artifacts. The nodes in the graph are Maven\n+ * artifacts and its edges are dependencies from an artifact to another.\n+ *\n+ * <p>{@link #buildMavenDependencyGraph(Artifact)} builds a normal Maven dependency graph. This\n+ * graph has the following attributes:\n+ *\n+ * <ul>\n+ *   <li>It contains at most one node for the same groupId and artifactId. (<a", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff1eeff2ac4319c94f238fffc9c821c07b66b1a3"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTYxNDA5NQ==", "bodyText": "Updated", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1218#discussion_r379614095", "createdAt": "2020-02-14T19:48:22Z", "author": {"login": "suztomo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/DependencyGraphBuilder.java", "diffHunk": "@@ -49,8 +49,33 @@\n import org.eclipse.aether.util.graph.visitor.PathRecordingDependencyVisitor;\n \n /**\n- * Based on the <a href=\"https://maven.apache.org/resolver/index.html\">Apache Maven Artifact\n- * Resolver</a> (formerly known as Eclipse Aether).\n+ * This class builds dependency graphs for Maven artifacts. The nodes in the graph are Maven\n+ * artifacts and its edges are dependencies from an artifact to another.\n+ *\n+ * <p>{@link #buildMavenDependencyGraph(Artifact)} builds a normal Maven dependency graph. This\n+ * graph has the following attributes:\n+ *\n+ * <ul>\n+ *   <li>It contains at most one node for the same groupId and artifactId. (<a", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTU5MDEzOA=="}, "originalCommit": {"oid": "ff1eeff2ac4319c94f238fffc9c821c07b66b1a3"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0ODY1MTk3OnYy", "diffSide": "RIGHT", "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/DependencyGraphBuilder.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxODo1MzozNFrOFqAXEQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxOTo0ODoyOVrOFqBzxg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTU5MDQxNw==", "bodyText": "A full dependency graph is...", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1218#discussion_r379590417", "createdAt": "2020-02-14T18:53:34Z", "author": {"login": "elharo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/DependencyGraphBuilder.java", "diffHunk": "@@ -49,8 +49,33 @@\n import org.eclipse.aether.util.graph.visitor.PathRecordingDependencyVisitor;\n \n /**\n- * Based on the <a href=\"https://maven.apache.org/resolver/index.html\">Apache Maven Artifact\n- * Resolver</a> (formerly known as Eclipse Aether).\n+ * This class builds dependency graphs for Maven artifacts. The nodes in the graph are Maven\n+ * artifacts and its edges are dependencies from an artifact to another.\n+ *\n+ * <p>{@link #buildMavenDependencyGraph(Artifact)} builds a normal Maven dependency graph. This\n+ * graph has the following attributes:\n+ *\n+ * <ul>\n+ *   <li>It contains at most one node for the same groupId and artifactId. (<a\n+ *       href=\"https://maven.apache.org/guides/introduction/introduction-to-dependency-mechanism.html#Transitive_Dependencies\">dependency\n+ *       mediation</a>)\n+ *   <li>The scope of a dependency affects the scope of its children's dependencies as per <a\n+ *       href=\"https://maven.apache.org/guides/introduction/introduction-to-dependency-mechanism.html#Dependency_Scope\">Maven:\n+ *       Dependency Scope</a>\n+ *   <li>It does not contain transitive provided-scope dependencies.\n+ *   <li>It does not contain transitive optional dependencies.\n+ * </ul>\n+ *\n+ * <p>{@link #buildFullDependencyGraph(List)} builds a full dependency graph. This graph has the", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff1eeff2ac4319c94f238fffc9c821c07b66b1a3"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTYxNDE1MA==", "bodyText": "Updated.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1218#discussion_r379614150", "createdAt": "2020-02-14T19:48:29Z", "author": {"login": "suztomo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/DependencyGraphBuilder.java", "diffHunk": "@@ -49,8 +49,33 @@\n import org.eclipse.aether.util.graph.visitor.PathRecordingDependencyVisitor;\n \n /**\n- * Based on the <a href=\"https://maven.apache.org/resolver/index.html\">Apache Maven Artifact\n- * Resolver</a> (formerly known as Eclipse Aether).\n+ * This class builds dependency graphs for Maven artifacts. The nodes in the graph are Maven\n+ * artifacts and its edges are dependencies from an artifact to another.\n+ *\n+ * <p>{@link #buildMavenDependencyGraph(Artifact)} builds a normal Maven dependency graph. This\n+ * graph has the following attributes:\n+ *\n+ * <ul>\n+ *   <li>It contains at most one node for the same groupId and artifactId. (<a\n+ *       href=\"https://maven.apache.org/guides/introduction/introduction-to-dependency-mechanism.html#Transitive_Dependencies\">dependency\n+ *       mediation</a>)\n+ *   <li>The scope of a dependency affects the scope of its children's dependencies as per <a\n+ *       href=\"https://maven.apache.org/guides/introduction/introduction-to-dependency-mechanism.html#Dependency_Scope\">Maven:\n+ *       Dependency Scope</a>\n+ *   <li>It does not contain transitive provided-scope dependencies.\n+ *   <li>It does not contain transitive optional dependencies.\n+ * </ul>\n+ *\n+ * <p>{@link #buildFullDependencyGraph(List)} builds a full dependency graph. This graph has the", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTU5MDQxNw=="}, "originalCommit": {"oid": "ff1eeff2ac4319c94f238fffc9c821c07b66b1a3"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0ODY1MjQ1OnYy", "diffSide": "RIGHT", "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/DependencyGraphBuilder.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxODo1Mzo0OVrOFqAXdw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxOTo0OTowMlrOFqB0sA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTU5MDUxOQ==", "bodyText": "which has", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1218#discussion_r379590519", "createdAt": "2020-02-14T18:53:49Z", "author": {"login": "elharo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/DependencyGraphBuilder.java", "diffHunk": "@@ -49,8 +49,33 @@\n import org.eclipse.aether.util.graph.visitor.PathRecordingDependencyVisitor;\n \n /**\n- * Based on the <a href=\"https://maven.apache.org/resolver/index.html\">Apache Maven Artifact\n- * Resolver</a> (formerly known as Eclipse Aether).\n+ * This class builds dependency graphs for Maven artifacts. The nodes in the graph are Maven\n+ * artifacts and its edges are dependencies from an artifact to another.\n+ *\n+ * <p>{@link #buildMavenDependencyGraph(Artifact)} builds a normal Maven dependency graph. This\n+ * graph has the following attributes:\n+ *\n+ * <ul>\n+ *   <li>It contains at most one node for the same groupId and artifactId. (<a\n+ *       href=\"https://maven.apache.org/guides/introduction/introduction-to-dependency-mechanism.html#Transitive_Dependencies\">dependency\n+ *       mediation</a>)\n+ *   <li>The scope of a dependency affects the scope of its children's dependencies as per <a\n+ *       href=\"https://maven.apache.org/guides/introduction/introduction-to-dependency-mechanism.html#Dependency_Scope\">Maven:\n+ *       Dependency Scope</a>\n+ *   <li>It does not contain transitive provided-scope dependencies.\n+ *   <li>It does not contain transitive optional dependencies.\n+ * </ul>\n+ *\n+ * <p>{@link #buildFullDependencyGraph(List)} builds a full dependency graph. This graph has the\n+ * following attributes:\n+ *\n+ * <ul>\n+ *   <li>The same artifact, which have the same group:artifact:version, appears in different nodes", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff1eeff2ac4319c94f238fffc9c821c07b66b1a3"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTYxNDM4NA==", "bodyText": "Fixed.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1218#discussion_r379614384", "createdAt": "2020-02-14T19:49:02Z", "author": {"login": "suztomo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/DependencyGraphBuilder.java", "diffHunk": "@@ -49,8 +49,33 @@\n import org.eclipse.aether.util.graph.visitor.PathRecordingDependencyVisitor;\n \n /**\n- * Based on the <a href=\"https://maven.apache.org/resolver/index.html\">Apache Maven Artifact\n- * Resolver</a> (formerly known as Eclipse Aether).\n+ * This class builds dependency graphs for Maven artifacts. The nodes in the graph are Maven\n+ * artifacts and its edges are dependencies from an artifact to another.\n+ *\n+ * <p>{@link #buildMavenDependencyGraph(Artifact)} builds a normal Maven dependency graph. This\n+ * graph has the following attributes:\n+ *\n+ * <ul>\n+ *   <li>It contains at most one node for the same groupId and artifactId. (<a\n+ *       href=\"https://maven.apache.org/guides/introduction/introduction-to-dependency-mechanism.html#Transitive_Dependencies\">dependency\n+ *       mediation</a>)\n+ *   <li>The scope of a dependency affects the scope of its children's dependencies as per <a\n+ *       href=\"https://maven.apache.org/guides/introduction/introduction-to-dependency-mechanism.html#Dependency_Scope\">Maven:\n+ *       Dependency Scope</a>\n+ *   <li>It does not contain transitive provided-scope dependencies.\n+ *   <li>It does not contain transitive optional dependencies.\n+ * </ul>\n+ *\n+ * <p>{@link #buildFullDependencyGraph(List)} builds a full dependency graph. This graph has the\n+ * following attributes:\n+ *\n+ * <ul>\n+ *   <li>The same artifact, which have the same group:artifact:version, appears in different nodes", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTU5MDUxOQ=="}, "originalCommit": {"oid": "ff1eeff2ac4319c94f238fffc9c821c07b66b1a3"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0ODY1NTAzOnYy", "diffSide": "RIGHT", "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/DependencyGraphBuilder.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxODo1NDo0NlrOFqAZKw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxOTo1MjoyNlrOFqB6Ig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTU5MDk1NQ==", "bodyText": "Is it correct to say that provided and optional are not treated differently than any other dependency?", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1218#discussion_r379590955", "createdAt": "2020-02-14T18:54:46Z", "author": {"login": "elharo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/DependencyGraphBuilder.java", "diffHunk": "@@ -49,8 +49,33 @@\n import org.eclipse.aether.util.graph.visitor.PathRecordingDependencyVisitor;\n \n /**\n- * Based on the <a href=\"https://maven.apache.org/resolver/index.html\">Apache Maven Artifact\n- * Resolver</a> (formerly known as Eclipse Aether).\n+ * This class builds dependency graphs for Maven artifacts. The nodes in the graph are Maven\n+ * artifacts and its edges are dependencies from an artifact to another.\n+ *\n+ * <p>{@link #buildMavenDependencyGraph(Artifact)} builds a normal Maven dependency graph. This\n+ * graph has the following attributes:\n+ *\n+ * <ul>\n+ *   <li>It contains at most one node for the same groupId and artifactId. (<a\n+ *       href=\"https://maven.apache.org/guides/introduction/introduction-to-dependency-mechanism.html#Transitive_Dependencies\">dependency\n+ *       mediation</a>)\n+ *   <li>The scope of a dependency affects the scope of its children's dependencies as per <a\n+ *       href=\"https://maven.apache.org/guides/introduction/introduction-to-dependency-mechanism.html#Dependency_Scope\">Maven:\n+ *       Dependency Scope</a>\n+ *   <li>It does not contain transitive provided-scope dependencies.\n+ *   <li>It does not contain transitive optional dependencies.\n+ * </ul>\n+ *\n+ * <p>{@link #buildFullDependencyGraph(List)} builds a full dependency graph. This graph has the\n+ * following attributes:\n+ *\n+ * <ul>\n+ *   <li>The same artifact, which have the same group:artifact:version, appears in different nodes\n+ *       in the graph.\n+ *   <li>The scope of a dependency does not affect the scope of its children's dependencies.\n+ *   <li>It contains transitive provided-scope dependencies.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff1eeff2ac4319c94f238fffc9c821c07b66b1a3"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTYxNTc3OA==", "bodyText": "Yes, that's simple. Updated.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1218#discussion_r379615778", "createdAt": "2020-02-14T19:52:26Z", "author": {"login": "suztomo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/DependencyGraphBuilder.java", "diffHunk": "@@ -49,8 +49,33 @@\n import org.eclipse.aether.util.graph.visitor.PathRecordingDependencyVisitor;\n \n /**\n- * Based on the <a href=\"https://maven.apache.org/resolver/index.html\">Apache Maven Artifact\n- * Resolver</a> (formerly known as Eclipse Aether).\n+ * This class builds dependency graphs for Maven artifacts. The nodes in the graph are Maven\n+ * artifacts and its edges are dependencies from an artifact to another.\n+ *\n+ * <p>{@link #buildMavenDependencyGraph(Artifact)} builds a normal Maven dependency graph. This\n+ * graph has the following attributes:\n+ *\n+ * <ul>\n+ *   <li>It contains at most one node for the same groupId and artifactId. (<a\n+ *       href=\"https://maven.apache.org/guides/introduction/introduction-to-dependency-mechanism.html#Transitive_Dependencies\">dependency\n+ *       mediation</a>)\n+ *   <li>The scope of a dependency affects the scope of its children's dependencies as per <a\n+ *       href=\"https://maven.apache.org/guides/introduction/introduction-to-dependency-mechanism.html#Dependency_Scope\">Maven:\n+ *       Dependency Scope</a>\n+ *   <li>It does not contain transitive provided-scope dependencies.\n+ *   <li>It does not contain transitive optional dependencies.\n+ * </ul>\n+ *\n+ * <p>{@link #buildFullDependencyGraph(List)} builds a full dependency graph. This graph has the\n+ * following attributes:\n+ *\n+ * <ul>\n+ *   <li>The same artifact, which have the same group:artifact:version, appears in different nodes\n+ *       in the graph.\n+ *   <li>The scope of a dependency does not affect the scope of its children's dependencies.\n+ *   <li>It contains transitive provided-scope dependencies.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTU5MDk1NQ=="}, "originalCommit": {"oid": "ff1eeff2ac4319c94f238fffc9c821c07b66b1a3"}, "originalPosition": 30}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2811, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}