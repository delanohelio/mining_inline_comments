{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc1MTgwNzcz", "number": 1218, "title": "Merging FULL_DEPENDENCY and FULL_DEPENDENCY_WITH_PROVIDED into FULL", "bodyText": "Towards #1188.\nThis PR merges FULL_DEPENDENCY and FULL_DEPENDENCY_WITH_PROVIDED flags into one FULL, deleting \"_with_provided\" the flag.\nBackground\n\nFULL_DEPENDENCY was for our Dashboard's dependency convergence check. It (somehow) did not include provided dependencies.\nFULL_DEPENDENCY_WITH_PROVIDED was introduced for Linkage Checker. At that time, I had to distinguish the flag with WITH_PROVIDED.\n\nNow, because FULL_DEPENDENCY is used only the dashboard's dependency convergence columns (which we don't use much) and we're fine including provided dependency there, this PR makes the dashboard and Linkage Checker to use the same graph generation logic which includes provided-scope dependencies, deleting FULL_DEPENDENCY option.\nAfter FULL_DEPENDENCY is deleted, the \"_WITH_PROVIDED\" in FULL_DEPENDENCY_WITH_PROVIDED does not make sense. Therefore, renaming FULL_DEPENDENCY_WITH_PROVIDED to FULL_DEPENDENCY.\n2 Graph Types\nDependencyGraphBuilder now has 2 graph generation functions:\n\nbuildFullDependencyGraph\nbuildMavenDependencyGraph\n\nSee GraphTraversalOption's Javadoc and go/jdd-tree-comparison for comparison. This PR handles the red rectangles below:", "createdAt": "2020-02-14T02:25:35Z", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1218", "merged": true, "mergeCommit": {"oid": "a31f9b8df68b566bf0070f95687bba164a8797b7"}, "closed": true, "closedAt": "2020-02-14T21:16:39Z", "author": {"login": "suztomo"}, "timelineItems": {"totalCount": 16, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcEF2cHAH2gAyMzc1MTgwNzczOmYzYTAzNGQ4MTc0ZjBkMzY2ZjRjMmUyZGVmOGZjYWU0ODdkZGE3NmU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcEVpdMAH2gAyMzc1MTgwNzczOjQyMmVmN2Q2N2E3M2NmY2VjMmI4OGM2YTI5ZmJiMjhjNjFjNzQzNmQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "f3a034d8174f0d366f4c2e2def8fcae487dda76e", "author": {"user": {"login": "suztomo", "name": "Tomo Suzuki"}}, "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/f3a034d8174f0d366f4c2e2def8fcae487dda76e", "committedDate": "2020-02-14T02:10:46Z", "message": "Merged FULL_DEPENDENCY and FULL_DEPENDENCY_WITH_PROVIDED"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "76e0349f83d637d54a26184550fa5a9b9c500cb3", "author": {"user": {"login": "suztomo", "name": "Tomo Suzuki"}}, "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/76e0349f83d637d54a26184550fa5a9b9c500cb3", "committedDate": "2020-02-14T02:30:53Z", "message": "Format"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU4NjgwNDE2", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1218#pullrequestreview-358680416", "createdAt": "2020-02-14T02:31:53Z", "commit": {"oid": "76e0349f83d637d54a26184550fa5a9b9c500cb3"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQwMjozMTo1M1rOFpqAAw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQwMjozNDowMVrOFpqB8w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTIyNDA2Nw==", "bodyText": "buildCompleteGraph and buildLinkageCheckDependencyGraph have been merged to buildFullDependencyGraph.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1218#discussion_r379224067", "createdAt": "2020-02-14T02:31:53Z", "author": {"login": "suztomo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/DependencyGraphBuilder.java", "diffHunk": "@@ -195,41 +192,30 @@ private DependencyNode resolveCompileTimeDependencies(\n    * @param artifacts Maven artifacts to retrieve their dependencies\n    * @return dependency graph representing the tree of Maven artifacts\n    */\n-  public DependencyGraphResult buildLinkageCheckDependencyGraph(List<Artifact> artifacts) {\n+  public DependencyGraphResult buildFullDependencyGraph(List<Artifact> artifacts) {\n     ImmutableList<DependencyNode> dependencyNodes =\n         artifacts.stream().map(DefaultDependencyNode::new).collect(toImmutableList());\n-    return buildDependencyGraph(\n-        dependencyNodes, GraphTraversalOption.FULL_DEPENDENCY_WITH_PROVIDED);\n-  }\n-\n-  /**\n-   * Finds the full compile time, transitive dependency graph including duplicates and conflicting\n-   * versions.\n-   */\n-  public DependencyGraphResult buildCompleteGraph(Dependency dependency) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76e0349f83d637d54a26184550fa5a9b9c500cb3"}, "originalPosition": 68}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTIyNDE4Nw==", "bodyText": "Renamed to reflect \"dependency graph as seen by Maven\" as in Javadoc.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1218#discussion_r379224187", "createdAt": "2020-02-14T02:32:23Z", "author": {"login": "suztomo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/DependencyGraphBuilder.java", "diffHunk": "@@ -195,41 +192,30 @@ private DependencyNode resolveCompileTimeDependencies(\n    * @param artifacts Maven artifacts to retrieve their dependencies\n    * @return dependency graph representing the tree of Maven artifacts\n    */\n-  public DependencyGraphResult buildLinkageCheckDependencyGraph(List<Artifact> artifacts) {\n+  public DependencyGraphResult buildFullDependencyGraph(List<Artifact> artifacts) {\n     ImmutableList<DependencyNode> dependencyNodes =\n         artifacts.stream().map(DefaultDependencyNode::new).collect(toImmutableList());\n-    return buildDependencyGraph(\n-        dependencyNodes, GraphTraversalOption.FULL_DEPENDENCY_WITH_PROVIDED);\n-  }\n-\n-  /**\n-   * Finds the full compile time, transitive dependency graph including duplicates and conflicting\n-   * versions.\n-   */\n-  public DependencyGraphResult buildCompleteGraph(Dependency dependency) {\n-    DefaultDependencyNode root = new DefaultDependencyNode(dependency);\n-    return buildDependencyGraph(ImmutableList.of(root), GraphTraversalOption.FULL_DEPENDENCY);\n+    return buildDependencyGraph(dependencyNodes, GraphTraversalOption.FULL_DEPENDENCY);\n   }\n \n   /**\n    * Finds the complete transitive dependency graph as seen by Maven. It does not include duplicates\n    * and conflicting versions. That is, this resolves conflicting versions by picking the first\n    * version seen. This is how Maven normally operates.\n    */\n-  public DependencyGraphResult buildGraph(Dependency dependency) {\n+  public DependencyGraphResult buildMavenDependencyGraph(Dependency dependency) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76e0349f83d637d54a26184550fa5a9b9c500cb3"}, "originalPosition": 80}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTIyNDQ5OQ==", "bodyText": "Because now the graph includes provided dependencies, the number of updates increases. This will affect the dependency convergence column.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1218#discussion_r379224499", "createdAt": "2020-02-14T02:33:47Z", "author": {"login": "suztomo"}, "path": "dependencies/src/test/java/com/google/cloud/tools/opensource/dependencies/DependencyGraphIntegrationTest.java", "diffHunk": "@@ -97,13 +106,15 @@ public void testJaxen() throws RepositoryException {\n     DefaultArtifact jaxen =\n         new DefaultArtifact(\"jaxen:jaxen:1.1.6\");\n     DependencyGraph graph =\n-        dependencyGraphBuilder.buildCompleteGraph(new Dependency(jaxen, \"compile\")).getDependencyGraph();\n+        dependencyGraphBuilder\n+            .buildFullDependencyGraph(ImmutableList.of(jaxen))\n+            .getDependencyGraph();\n \n     List<Update> updates = graph.findUpdates();\n-    Truth.assertThat(updates).hasSize(3);\n+    Truth.assertThat(updates).hasSize(6);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76e0349f83d637d54a26184550fa5a9b9c500cb3"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTIyNDU2Mw==", "bodyText": "Because now the graph includes provided dependencies, the number of calculated conflicts increases. This will affect the dependency convergence column.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1218#discussion_r379224563", "createdAt": "2020-02-14T02:34:01Z", "author": {"login": "suztomo"}, "path": "dependencies/src/test/java/com/google/cloud/tools/opensource/dependencies/DependencyGraphIntegrationTest.java", "diffHunk": "@@ -97,13 +106,15 @@ public void testJaxen() throws RepositoryException {\n     DefaultArtifact jaxen =\n         new DefaultArtifact(\"jaxen:jaxen:1.1.6\");\n     DependencyGraph graph =\n-        dependencyGraphBuilder.buildCompleteGraph(new Dependency(jaxen, \"compile\")).getDependencyGraph();\n+        dependencyGraphBuilder\n+            .buildFullDependencyGraph(ImmutableList.of(jaxen))\n+            .getDependencyGraph();\n \n     List<Update> updates = graph.findUpdates();\n-    Truth.assertThat(updates).hasSize(3);\n+    Truth.assertThat(updates).hasSize(6);\n \n     List<DependencyPath> conflicts = graph.findConflicts();\n-    Truth.assertThat(conflicts).hasSize(5);\n+    Truth.assertThat(conflicts).hasSize(10);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76e0349f83d637d54a26184550fa5a9b9c500cb3"}, "originalPosition": 62}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU4OTE3MDMy", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1218#pullrequestreview-358917032", "createdAt": "2020-02-14T12:46:38Z", "commit": {"oid": "76e0349f83d637d54a26184550fa5a9b9c500cb3"}, "state": "COMMENTED", "comments": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxMjo0NjozOVrOFp1gTw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxMjo1NDozMlrOFp1sCg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTQxMjU1OQ==", "bodyText": "delete \"complete\"", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1218#discussion_r379412559", "createdAt": "2020-02-14T12:46:39Z", "author": {"login": "elharo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/DependencyGraphBuilder.java", "diffHunk": "@@ -195,41 +192,30 @@ private DependencyNode resolveCompileTimeDependencies(\n    * @param artifacts Maven artifacts to retrieve their dependencies\n    * @return dependency graph representing the tree of Maven artifacts\n    */\n-  public DependencyGraphResult buildLinkageCheckDependencyGraph(List<Artifact> artifacts) {\n+  public DependencyGraphResult buildFullDependencyGraph(List<Artifact> artifacts) {\n     ImmutableList<DependencyNode> dependencyNodes =\n         artifacts.stream().map(DefaultDependencyNode::new).collect(toImmutableList());\n-    return buildDependencyGraph(\n-        dependencyNodes, GraphTraversalOption.FULL_DEPENDENCY_WITH_PROVIDED);\n-  }\n-\n-  /**\n-   * Finds the full compile time, transitive dependency graph including duplicates and conflicting\n-   * versions.\n-   */\n-  public DependencyGraphResult buildCompleteGraph(Dependency dependency) {\n-    DefaultDependencyNode root = new DefaultDependencyNode(dependency);\n-    return buildDependencyGraph(ImmutableList.of(root), GraphTraversalOption.FULL_DEPENDENCY);\n+    return buildDependencyGraph(dependencyNodes, GraphTraversalOption.FULL_DEPENDENCY);\n   }\n \n   /**\n    * Finds the complete transitive dependency graph as seen by Maven. It does not include duplicates", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76e0349f83d637d54a26184550fa5a9b9c500cb3"}, "originalPosition": 75}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTQxMzYxNg==", "bodyText": "\"Option for the default dependency graph by Maven.\" --> \"Normal Maven dependency graph.\"", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1218#discussion_r379413616", "createdAt": "2020-02-14T12:49:28Z", "author": {"login": "elharo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/DependencyGraphBuilder.java", "diffHunk": "@@ -291,13 +277,28 @@ public static UnresolvableArtifactProblem createUnresolvableArtifactProblem(\n   }\n \n   private enum GraphTraversalOption {\n+    /**\n+     * Option for the default dependency graph by Maven. This dependency graph has the following", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76e0349f83d637d54a26184550fa5a9b9c500cb3"}, "originalPosition": 104}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTQxMzg3Mg==", "bodyText": "perhaps NONE --> MAVEN or MAVEN_DEFAULT (though default would imply that Maven itself has another mode. Does it?)", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1218#discussion_r379413872", "createdAt": "2020-02-14T12:50:11Z", "author": {"login": "elharo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/DependencyGraphBuilder.java", "diffHunk": "@@ -291,13 +277,28 @@ public static UnresolvableArtifactProblem createUnresolvableArtifactProblem(\n   }\n \n   private enum GraphTraversalOption {\n+    /**\n+     * Option for the default dependency graph by Maven. This dependency graph has the following\n+     * attributes:\n+     *\n+     * <ul>\n+     *   <li>It contains at most one node for the same groupId and artifactId.\n+     *   <li>It does not contain transitive provided-scope dependencies.\n+     *   <li>It does not contain transitive optional dependencies.\n+     * </ul>\n+     */\n     NONE,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76e0349f83d637d54a26184550fa5a9b9c500cb3"}, "originalPosition": 113}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTQxNDAyMw==", "bodyText": "delete \"Option for\"", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1218#discussion_r379414023", "createdAt": "2020-02-14T12:50:33Z", "author": {"login": "elharo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/DependencyGraphBuilder.java", "diffHunk": "@@ -291,13 +277,28 @@ public static UnresolvableArtifactProblem createUnresolvableArtifactProblem(\n   }\n \n   private enum GraphTraversalOption {\n+    /**\n+     * Option for the default dependency graph by Maven. This dependency graph has the following\n+     * attributes:\n+     *\n+     * <ul>\n+     *   <li>It contains at most one node for the same groupId and artifactId.\n+     *   <li>It does not contain transitive provided-scope dependencies.\n+     *   <li>It does not contain transitive optional dependencies.\n+     * </ul>\n+     */\n     NONE,\n-    FULL_DEPENDENCY,\n-    FULL_DEPENDENCY_WITH_PROVIDED;\n \n-    private boolean resolveFullDependencies() {\n-      return this == FULL_DEPENDENCY || this == FULL_DEPENDENCY_WITH_PROVIDED;\n-    }\n+    /**\n+     * Option for the full dependency graph. This dependency graph has the following attributes:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76e0349f83d637d54a26184550fa5a9b9c500cb3"}, "originalPosition": 121}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTQxNDE0Mg==", "bodyText": "perhaps just FULL", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1218#discussion_r379414142", "createdAt": "2020-02-14T12:50:47Z", "author": {"login": "elharo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/DependencyGraphBuilder.java", "diffHunk": "@@ -291,13 +277,28 @@ public static UnresolvableArtifactProblem createUnresolvableArtifactProblem(\n   }\n \n   private enum GraphTraversalOption {\n+    /**\n+     * Option for the default dependency graph by Maven. This dependency graph has the following\n+     * attributes:\n+     *\n+     * <ul>\n+     *   <li>It contains at most one node for the same groupId and artifactId.\n+     *   <li>It does not contain transitive provided-scope dependencies.\n+     *   <li>It does not contain transitive optional dependencies.\n+     * </ul>\n+     */\n     NONE,\n-    FULL_DEPENDENCY,\n-    FULL_DEPENDENCY_WITH_PROVIDED;\n \n-    private boolean resolveFullDependencies() {\n-      return this == FULL_DEPENDENCY || this == FULL_DEPENDENCY_WITH_PROVIDED;\n-    }\n+    /**\n+     * Option for the full dependency graph. This dependency graph has the following attributes:\n+     *\n+     * <ul>\n+     *   <li>It may contain different dependency nodes for the same groupId and artifactId.\n+     *   <li>It may contain transitive provided-scope dependencies.\n+     *   <li>It may contain transitive optional dependencies.\n+     * </ul>\n+     */\n+    FULL_DEPENDENCY;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76e0349f83d637d54a26184550fa5a9b9c500cb3"}, "originalPosition": 129}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTQxNDgxMw==", "bodyText": "I see what you mean but \"may\" is a little unclear. I think it might be clearer to rephrase this like, \"It contains dependency nodes for each group:artifact:version\"", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1218#discussion_r379414813", "createdAt": "2020-02-14T12:52:38Z", "author": {"login": "elharo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/DependencyGraphBuilder.java", "diffHunk": "@@ -291,13 +277,28 @@ public static UnresolvableArtifactProblem createUnresolvableArtifactProblem(\n   }\n \n   private enum GraphTraversalOption {\n+    /**\n+     * Option for the default dependency graph by Maven. This dependency graph has the following\n+     * attributes:\n+     *\n+     * <ul>\n+     *   <li>It contains at most one node for the same groupId and artifactId.\n+     *   <li>It does not contain transitive provided-scope dependencies.\n+     *   <li>It does not contain transitive optional dependencies.\n+     * </ul>\n+     */\n     NONE,\n-    FULL_DEPENDENCY,\n-    FULL_DEPENDENCY_WITH_PROVIDED;\n \n-    private boolean resolveFullDependencies() {\n-      return this == FULL_DEPENDENCY || this == FULL_DEPENDENCY_WITH_PROVIDED;\n-    }\n+    /**\n+     * Option for the full dependency graph. This dependency graph has the following attributes:\n+     *\n+     * <ul>\n+     *   <li>It may contain different dependency nodes for the same groupId and artifactId.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76e0349f83d637d54a26184550fa5a9b9c500cb3"}, "originalPosition": 124}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTQxNDg4OQ==", "bodyText": "It may contain --> It contains", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1218#discussion_r379414889", "createdAt": "2020-02-14T12:52:51Z", "author": {"login": "elharo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/DependencyGraphBuilder.java", "diffHunk": "@@ -291,13 +277,28 @@ public static UnresolvableArtifactProblem createUnresolvableArtifactProblem(\n   }\n \n   private enum GraphTraversalOption {\n+    /**\n+     * Option for the default dependency graph by Maven. This dependency graph has the following\n+     * attributes:\n+     *\n+     * <ul>\n+     *   <li>It contains at most one node for the same groupId and artifactId.\n+     *   <li>It does not contain transitive provided-scope dependencies.\n+     *   <li>It does not contain transitive optional dependencies.\n+     * </ul>\n+     */\n     NONE,\n-    FULL_DEPENDENCY,\n-    FULL_DEPENDENCY_WITH_PROVIDED;\n \n-    private boolean resolveFullDependencies() {\n-      return this == FULL_DEPENDENCY || this == FULL_DEPENDENCY_WITH_PROVIDED;\n-    }\n+    /**\n+     * Option for the full dependency graph. This dependency graph has the following attributes:\n+     *\n+     * <ul>\n+     *   <li>It may contain different dependency nodes for the same groupId and artifactId.\n+     *   <li>It may contain transitive provided-scope dependencies.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76e0349f83d637d54a26184550fa5a9b9c500cb3"}, "originalPosition": 125}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTQxNDk2OA==", "bodyText": "may contain --> contains", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1218#discussion_r379414968", "createdAt": "2020-02-14T12:53:04Z", "author": {"login": "elharo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/DependencyGraphBuilder.java", "diffHunk": "@@ -291,13 +277,28 @@ public static UnresolvableArtifactProblem createUnresolvableArtifactProblem(\n   }\n \n   private enum GraphTraversalOption {\n+    /**\n+     * Option for the default dependency graph by Maven. This dependency graph has the following\n+     * attributes:\n+     *\n+     * <ul>\n+     *   <li>It contains at most one node for the same groupId and artifactId.\n+     *   <li>It does not contain transitive provided-scope dependencies.\n+     *   <li>It does not contain transitive optional dependencies.\n+     * </ul>\n+     */\n     NONE,\n-    FULL_DEPENDENCY,\n-    FULL_DEPENDENCY_WITH_PROVIDED;\n \n-    private boolean resolveFullDependencies() {\n-      return this == FULL_DEPENDENCY || this == FULL_DEPENDENCY_WITH_PROVIDED;\n-    }\n+    /**\n+     * Option for the full dependency graph. This dependency graph has the following attributes:\n+     *\n+     * <ul>\n+     *   <li>It may contain different dependency nodes for the same groupId and artifactId.\n+     *   <li>It may contain transitive provided-scope dependencies.\n+     *   <li>It may contain transitive optional dependencies.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76e0349f83d637d54a26184550fa5a9b9c500cb3"}, "originalPosition": 126}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTQxNTU2Mg==", "bodyText": "I think the sentence \"Each element...at the root\" can be deleted.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1218#discussion_r379415562", "createdAt": "2020-02-14T12:54:32Z", "author": {"login": "elharo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/DependencyTreeFormatter.java", "diffHunk": "@@ -30,8 +30,8 @@\n    * Formats dependencies as a tree in a similar way to {@code mvn dependency:tree}.\n    *\n    * @param dependencyPaths dependency paths from @{@link\n-   *     DependencyGraphBuilder#buildCompleteGraph(Dependency)}. Each element must have its\n-   *     parent in the list, except the ones at the root.\n+   *     DependencyGraphBuilder#buildFullDependencyGraph(List)} (Dependency)}. Each element must\n+   *     have its parent in the list, except the ones at the root.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76e0349f83d637d54a26184550fa5a9b9c500cb3"}, "originalPosition": 7}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5e1c883b54209b6180b78fd068d0accd0da69cd7", "author": {"user": {"login": "suztomo", "name": "Tomo Suzuki"}}, "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/5e1c883b54209b6180b78fd068d0accd0da69cd7", "committedDate": "2020-02-14T15:15:54Z", "message": "Applied review"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4e88251a753970f78e2962b02aed8237563f1f65", "author": {"user": {"login": "suztomo", "name": "Tomo Suzuki"}}, "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/4e88251a753970f78e2962b02aed8237563f1f65", "committedDate": "2020-02-14T15:39:09Z", "message": "DependencyGraphBuilder javadoc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a83ee2f143a39bc86c417f8d84265970b7b08758", "author": {"user": {"login": "suztomo", "name": "Tomo Suzuki"}}, "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/a83ee2f143a39bc86c417f8d84265970b7b08758", "committedDate": "2020-02-14T15:39:58Z", "message": "format"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c51d0359521c22fc1f39c431fd7662d975314119", "author": {"user": {"login": "suztomo", "name": "Tomo Suzuki"}}, "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/c51d0359521c22fc1f39c431fd7662d975314119", "committedDate": "2020-02-14T15:42:57Z", "message": "buildMavenDependencyGraph to take Artifact"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5da8bd99ced5dc04c4cd070dd088e495dbc329cc", "author": {"user": {"login": "suztomo", "name": "Tomo Suzuki"}}, "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/5da8bd99ced5dc04c4cd070dd088e495dbc329cc", "committedDate": "2020-02-14T15:46:25Z", "message": "format"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU5MDAyNTY2", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1218#pullrequestreview-359002566", "createdAt": "2020-02-14T15:03:15Z", "commit": {"oid": "76e0349f83d637d54a26184550fa5a9b9c500cb3"}, "state": "COMMENTED", "comments": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxNTowMzoxNVrOFp5fMg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxNTo0NDo1MVrOFp66lg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTQ3NzgxMA==", "bodyText": "Done.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1218#discussion_r379477810", "createdAt": "2020-02-14T15:03:15Z", "author": {"login": "suztomo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/DependencyGraphBuilder.java", "diffHunk": "@@ -195,41 +192,30 @@ private DependencyNode resolveCompileTimeDependencies(\n    * @param artifacts Maven artifacts to retrieve their dependencies\n    * @return dependency graph representing the tree of Maven artifacts\n    */\n-  public DependencyGraphResult buildLinkageCheckDependencyGraph(List<Artifact> artifacts) {\n+  public DependencyGraphResult buildFullDependencyGraph(List<Artifact> artifacts) {\n     ImmutableList<DependencyNode> dependencyNodes =\n         artifacts.stream().map(DefaultDependencyNode::new).collect(toImmutableList());\n-    return buildDependencyGraph(\n-        dependencyNodes, GraphTraversalOption.FULL_DEPENDENCY_WITH_PROVIDED);\n-  }\n-\n-  /**\n-   * Finds the full compile time, transitive dependency graph including duplicates and conflicting\n-   * versions.\n-   */\n-  public DependencyGraphResult buildCompleteGraph(Dependency dependency) {\n-    DefaultDependencyNode root = new DefaultDependencyNode(dependency);\n-    return buildDependencyGraph(ImmutableList.of(root), GraphTraversalOption.FULL_DEPENDENCY);\n+    return buildDependencyGraph(dependencyNodes, GraphTraversalOption.FULL_DEPENDENCY);\n   }\n \n   /**\n    * Finds the complete transitive dependency graph as seen by Maven. It does not include duplicates", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTQxMjU1OQ=="}, "originalCommit": {"oid": "76e0349f83d637d54a26184550fa5a9b9c500cb3"}, "originalPosition": 75}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTQ3ODI0Ng==", "bodyText": "Done.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1218#discussion_r379478246", "createdAt": "2020-02-14T15:04:07Z", "author": {"login": "suztomo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/DependencyGraphBuilder.java", "diffHunk": "@@ -291,13 +277,28 @@ public static UnresolvableArtifactProblem createUnresolvableArtifactProblem(\n   }\n \n   private enum GraphTraversalOption {\n+    /**\n+     * Option for the default dependency graph by Maven. This dependency graph has the following", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTQxMzYxNg=="}, "originalCommit": {"oid": "76e0349f83d637d54a26184550fa5a9b9c500cb3"}, "originalPosition": 104}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTQ3ODI3Nw==", "bodyText": "Updated to MAVEN.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1218#discussion_r379478277", "createdAt": "2020-02-14T15:04:09Z", "author": {"login": "suztomo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/DependencyGraphBuilder.java", "diffHunk": "@@ -291,13 +277,28 @@ public static UnresolvableArtifactProblem createUnresolvableArtifactProblem(\n   }\n \n   private enum GraphTraversalOption {\n+    /**\n+     * Option for the default dependency graph by Maven. This dependency graph has the following\n+     * attributes:\n+     *\n+     * <ul>\n+     *   <li>It contains at most one node for the same groupId and artifactId.\n+     *   <li>It does not contain transitive provided-scope dependencies.\n+     *   <li>It does not contain transitive optional dependencies.\n+     * </ul>\n+     */\n     NONE,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTQxMzg3Mg=="}, "originalCommit": {"oid": "76e0349f83d637d54a26184550fa5a9b9c500cb3"}, "originalPosition": 113}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTQ3ODU4NA==", "bodyText": "Done.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1218#discussion_r379478584", "createdAt": "2020-02-14T15:04:44Z", "author": {"login": "suztomo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/DependencyGraphBuilder.java", "diffHunk": "@@ -291,13 +277,28 @@ public static UnresolvableArtifactProblem createUnresolvableArtifactProblem(\n   }\n \n   private enum GraphTraversalOption {\n+    /**\n+     * Option for the default dependency graph by Maven. This dependency graph has the following\n+     * attributes:\n+     *\n+     * <ul>\n+     *   <li>It contains at most one node for the same groupId and artifactId.\n+     *   <li>It does not contain transitive provided-scope dependencies.\n+     *   <li>It does not contain transitive optional dependencies.\n+     * </ul>\n+     */\n     NONE,\n-    FULL_DEPENDENCY,\n-    FULL_DEPENDENCY_WITH_PROVIDED;\n \n-    private boolean resolveFullDependencies() {\n-      return this == FULL_DEPENDENCY || this == FULL_DEPENDENCY_WITH_PROVIDED;\n-    }\n+    /**\n+     * Option for the full dependency graph. This dependency graph has the following attributes:", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTQxNDAyMw=="}, "originalCommit": {"oid": "76e0349f83d637d54a26184550fa5a9b9c500cb3"}, "originalPosition": 121}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTQ4Mjg5MA==", "bodyText": "Updated as \"The same artifact, which have the same group:artifact:version, appears in different nodes in the graph\"", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1218#discussion_r379482890", "createdAt": "2020-02-14T15:12:26Z", "author": {"login": "suztomo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/DependencyGraphBuilder.java", "diffHunk": "@@ -291,13 +277,28 @@ public static UnresolvableArtifactProblem createUnresolvableArtifactProblem(\n   }\n \n   private enum GraphTraversalOption {\n+    /**\n+     * Option for the default dependency graph by Maven. This dependency graph has the following\n+     * attributes:\n+     *\n+     * <ul>\n+     *   <li>It contains at most one node for the same groupId and artifactId.\n+     *   <li>It does not contain transitive provided-scope dependencies.\n+     *   <li>It does not contain transitive optional dependencies.\n+     * </ul>\n+     */\n     NONE,\n-    FULL_DEPENDENCY,\n-    FULL_DEPENDENCY_WITH_PROVIDED;\n \n-    private boolean resolveFullDependencies() {\n-      return this == FULL_DEPENDENCY || this == FULL_DEPENDENCY_WITH_PROVIDED;\n-    }\n+    /**\n+     * Option for the full dependency graph. This dependency graph has the following attributes:\n+     *\n+     * <ul>\n+     *   <li>It may contain different dependency nodes for the same groupId and artifactId.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTQxNDgxMw=="}, "originalCommit": {"oid": "76e0349f83d637d54a26184550fa5a9b9c500cb3"}, "originalPosition": 124}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTQ4Mjk0MQ==", "bodyText": "Done", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1218#discussion_r379482941", "createdAt": "2020-02-14T15:12:31Z", "author": {"login": "suztomo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/DependencyGraphBuilder.java", "diffHunk": "@@ -291,13 +277,28 @@ public static UnresolvableArtifactProblem createUnresolvableArtifactProblem(\n   }\n \n   private enum GraphTraversalOption {\n+    /**\n+     * Option for the default dependency graph by Maven. This dependency graph has the following\n+     * attributes:\n+     *\n+     * <ul>\n+     *   <li>It contains at most one node for the same groupId and artifactId.\n+     *   <li>It does not contain transitive provided-scope dependencies.\n+     *   <li>It does not contain transitive optional dependencies.\n+     * </ul>\n+     */\n     NONE,\n-    FULL_DEPENDENCY,\n-    FULL_DEPENDENCY_WITH_PROVIDED;\n \n-    private boolean resolveFullDependencies() {\n-      return this == FULL_DEPENDENCY || this == FULL_DEPENDENCY_WITH_PROVIDED;\n-    }\n+    /**\n+     * Option for the full dependency graph. This dependency graph has the following attributes:\n+     *\n+     * <ul>\n+     *   <li>It may contain different dependency nodes for the same groupId and artifactId.\n+     *   <li>It may contain transitive provided-scope dependencies.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTQxNDg4OQ=="}, "originalCommit": {"oid": "76e0349f83d637d54a26184550fa5a9b9c500cb3"}, "originalPosition": 125}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTQ4Mjk3NQ==", "bodyText": "Done.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1218#discussion_r379482975", "createdAt": "2020-02-14T15:12:36Z", "author": {"login": "suztomo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/DependencyGraphBuilder.java", "diffHunk": "@@ -291,13 +277,28 @@ public static UnresolvableArtifactProblem createUnresolvableArtifactProblem(\n   }\n \n   private enum GraphTraversalOption {\n+    /**\n+     * Option for the default dependency graph by Maven. This dependency graph has the following\n+     * attributes:\n+     *\n+     * <ul>\n+     *   <li>It contains at most one node for the same groupId and artifactId.\n+     *   <li>It does not contain transitive provided-scope dependencies.\n+     *   <li>It does not contain transitive optional dependencies.\n+     * </ul>\n+     */\n     NONE,\n-    FULL_DEPENDENCY,\n-    FULL_DEPENDENCY_WITH_PROVIDED;\n \n-    private boolean resolveFullDependencies() {\n-      return this == FULL_DEPENDENCY || this == FULL_DEPENDENCY_WITH_PROVIDED;\n-    }\n+    /**\n+     * Option for the full dependency graph. This dependency graph has the following attributes:\n+     *\n+     * <ul>\n+     *   <li>It may contain different dependency nodes for the same groupId and artifactId.\n+     *   <li>It may contain transitive provided-scope dependencies.\n+     *   <li>It may contain transitive optional dependencies.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTQxNDk2OA=="}, "originalCommit": {"oid": "76e0349f83d637d54a26184550fa5a9b9c500cb3"}, "originalPosition": 126}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTQ4MzA2MA==", "bodyText": "Updated.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1218#discussion_r379483060", "createdAt": "2020-02-14T15:12:44Z", "author": {"login": "suztomo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/DependencyGraphBuilder.java", "diffHunk": "@@ -291,13 +277,28 @@ public static UnresolvableArtifactProblem createUnresolvableArtifactProblem(\n   }\n \n   private enum GraphTraversalOption {\n+    /**\n+     * Option for the default dependency graph by Maven. This dependency graph has the following\n+     * attributes:\n+     *\n+     * <ul>\n+     *   <li>It contains at most one node for the same groupId and artifactId.\n+     *   <li>It does not contain transitive provided-scope dependencies.\n+     *   <li>It does not contain transitive optional dependencies.\n+     * </ul>\n+     */\n     NONE,\n-    FULL_DEPENDENCY,\n-    FULL_DEPENDENCY_WITH_PROVIDED;\n \n-    private boolean resolveFullDependencies() {\n-      return this == FULL_DEPENDENCY || this == FULL_DEPENDENCY_WITH_PROVIDED;\n-    }\n+    /**\n+     * Option for the full dependency graph. This dependency graph has the following attributes:\n+     *\n+     * <ul>\n+     *   <li>It may contain different dependency nodes for the same groupId and artifactId.\n+     *   <li>It may contain transitive provided-scope dependencies.\n+     *   <li>It may contain transitive optional dependencies.\n+     * </ul>\n+     */\n+    FULL_DEPENDENCY;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTQxNDE0Mg=="}, "originalCommit": {"oid": "76e0349f83d637d54a26184550fa5a9b9c500cb3"}, "originalPosition": 129}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTQ4NDIzOQ==", "bodyText": "Deleted.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1218#discussion_r379484239", "createdAt": "2020-02-14T15:14:53Z", "author": {"login": "suztomo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/DependencyTreeFormatter.java", "diffHunk": "@@ -30,8 +30,8 @@\n    * Formats dependencies as a tree in a similar way to {@code mvn dependency:tree}.\n    *\n    * @param dependencyPaths dependency paths from @{@link\n-   *     DependencyGraphBuilder#buildCompleteGraph(Dependency)}. Each element must have its\n-   *     parent in the list, except the ones at the root.\n+   *     DependencyGraphBuilder#buildFullDependencyGraph(List)} (Dependency)}. Each element must\n+   *     have its parent in the list, except the ones at the root.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTQxNTU2Mg=="}, "originalCommit": {"oid": "76e0349f83d637d54a26184550fa5a9b9c500cb3"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTUwMDc4Mg==", "bodyText": "This was implementation detail.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1218#discussion_r379500782", "createdAt": "2020-02-14T15:44:03Z", "author": {"login": "suztomo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/DependencyGraphBuilder.java", "diffHunk": "@@ -49,8 +49,33 @@\n import org.eclipse.aether.util.graph.visitor.PathRecordingDependencyVisitor;\n \n /**\n- * Based on the <a href=\"https://maven.apache.org/resolver/index.html\">Apache Maven Artifact", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c51d0359521c22fc1f39c431fd7662d975314119"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTUwMTIwNg==", "bodyText": "Changed the argument type to Artifact because all caller was wrapping the argument with new Dependency(artifact, \"compile\"). The caller should not care about the root dependency's scope.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1218#discussion_r379501206", "createdAt": "2020-02-14T15:44:51Z", "author": {"login": "suztomo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/DependencyGraphBuilder.java", "diffHunk": "@@ -195,41 +217,31 @@ private DependencyNode resolveCompileTimeDependencies(\n    * @param artifacts Maven artifacts to retrieve their dependencies\n    * @return dependency graph representing the tree of Maven artifacts\n    */\n-  public DependencyGraphResult buildLinkageCheckDependencyGraph(List<Artifact> artifacts) {\n+  public DependencyGraphResult buildFullDependencyGraph(List<Artifact> artifacts) {\n     ImmutableList<DependencyNode> dependencyNodes =\n         artifacts.stream().map(DefaultDependencyNode::new).collect(toImmutableList());\n-    return buildDependencyGraph(\n-        dependencyNodes, GraphTraversalOption.FULL_DEPENDENCY_WITH_PROVIDED);\n+    return buildDependencyGraph(dependencyNodes, GraphTraversalOption.FULL);\n   }\n \n   /**\n-   * Finds the full compile time, transitive dependency graph including duplicates and conflicting\n-   * versions.\n+   * Builds the transitive dependency graph as seen by Maven. It does not include duplicates and\n+   * conflicting versions. That is, this resolves conflicting versions by picking the first version\n+   * seen. This is how Maven normally operates.\n    */\n-  public DependencyGraphResult buildCompleteGraph(Dependency dependency) {\n-    DefaultDependencyNode root = new DefaultDependencyNode(dependency);\n-    return buildDependencyGraph(ImmutableList.of(root), GraphTraversalOption.FULL_DEPENDENCY);\n-  }\n-\n-  /**\n-   * Finds the complete transitive dependency graph as seen by Maven. It does not include duplicates\n-   * and conflicting versions. That is, this resolves conflicting versions by picking the first\n-   * version seen. This is how Maven normally operates.\n-   */\n-  public DependencyGraphResult buildGraph(Dependency dependency) {\n+  public DependencyGraphResult buildMavenDependencyGraph(Artifact artifact) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c51d0359521c22fc1f39c431fd7662d975314119"}, "originalPosition": 119}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ff1eeff2ac4319c94f238fffc9c821c07b66b1a3", "author": {"user": {"login": "suztomo", "name": "Tomo Suzuki"}}, "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/ff1eeff2ac4319c94f238fffc9c821c07b66b1a3", "committedDate": "2020-02-14T16:32:18Z", "message": "Merge remote-tracking branch 'origin/master' into levelOrder"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU5MTQ4MjQ2", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1218#pullrequestreview-359148246", "createdAt": "2020-02-14T18:52:04Z", "commit": {"oid": "ff1eeff2ac4319c94f238fffc9c821c07b66b1a3"}, "state": "COMMENTED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxODo1MjowNVrOFqAUnw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxODo1NTo1MFrOFqAbCQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTU4OTc5MQ==", "bodyText": "artifacts don't have dependencies. A dependency contains an artifact (usually) but is not an artifact.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1218#discussion_r379589791", "createdAt": "2020-02-14T18:52:05Z", "author": {"login": "elharo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/DependencyGraphBuilder.java", "diffHunk": "@@ -49,8 +49,33 @@\n import org.eclipse.aether.util.graph.visitor.PathRecordingDependencyVisitor;\n \n /**\n- * Based on the <a href=\"https://maven.apache.org/resolver/index.html\">Apache Maven Artifact\n- * Resolver</a> (formerly known as Eclipse Aether).\n+ * This class builds dependency graphs for Maven artifacts. The nodes in the graph are Maven\n+ * artifacts and its edges are dependencies from an artifact to another.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff1eeff2ac4319c94f238fffc9c821c07b66b1a3"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTU5MDAyMw==", "bodyText": "Rather than focusing on the methods, describe how Maven itself does this.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1218#discussion_r379590023", "createdAt": "2020-02-14T18:52:39Z", "author": {"login": "elharo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/DependencyGraphBuilder.java", "diffHunk": "@@ -49,8 +49,33 @@\n import org.eclipse.aether.util.graph.visitor.PathRecordingDependencyVisitor;\n \n /**\n- * Based on the <a href=\"https://maven.apache.org/resolver/index.html\">Apache Maven Artifact\n- * Resolver</a> (formerly known as Eclipse Aether).\n+ * This class builds dependency graphs for Maven artifacts. The nodes in the graph are Maven\n+ * artifacts and its edges are dependencies from an artifact to another.\n+ *\n+ * <p>{@link #buildMavenDependencyGraph(Artifact)} builds a normal Maven dependency graph. This", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff1eeff2ac4319c94f238fffc9c821c07b66b1a3"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTU5MDEzOA==", "bodyText": "group ID and artifact ID since this isn't code", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1218#discussion_r379590138", "createdAt": "2020-02-14T18:52:55Z", "author": {"login": "elharo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/DependencyGraphBuilder.java", "diffHunk": "@@ -49,8 +49,33 @@\n import org.eclipse.aether.util.graph.visitor.PathRecordingDependencyVisitor;\n \n /**\n- * Based on the <a href=\"https://maven.apache.org/resolver/index.html\">Apache Maven Artifact\n- * Resolver</a> (formerly known as Eclipse Aether).\n+ * This class builds dependency graphs for Maven artifacts. The nodes in the graph are Maven\n+ * artifacts and its edges are dependencies from an artifact to another.\n+ *\n+ * <p>{@link #buildMavenDependencyGraph(Artifact)} builds a normal Maven dependency graph. This\n+ * graph has the following attributes:\n+ *\n+ * <ul>\n+ *   <li>It contains at most one node for the same groupId and artifactId. (<a", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff1eeff2ac4319c94f238fffc9c821c07b66b1a3"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTU5MDQxNw==", "bodyText": "A full dependency graph is...", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1218#discussion_r379590417", "createdAt": "2020-02-14T18:53:34Z", "author": {"login": "elharo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/DependencyGraphBuilder.java", "diffHunk": "@@ -49,8 +49,33 @@\n import org.eclipse.aether.util.graph.visitor.PathRecordingDependencyVisitor;\n \n /**\n- * Based on the <a href=\"https://maven.apache.org/resolver/index.html\">Apache Maven Artifact\n- * Resolver</a> (formerly known as Eclipse Aether).\n+ * This class builds dependency graphs for Maven artifacts. The nodes in the graph are Maven\n+ * artifacts and its edges are dependencies from an artifact to another.\n+ *\n+ * <p>{@link #buildMavenDependencyGraph(Artifact)} builds a normal Maven dependency graph. This\n+ * graph has the following attributes:\n+ *\n+ * <ul>\n+ *   <li>It contains at most one node for the same groupId and artifactId. (<a\n+ *       href=\"https://maven.apache.org/guides/introduction/introduction-to-dependency-mechanism.html#Transitive_Dependencies\">dependency\n+ *       mediation</a>)\n+ *   <li>The scope of a dependency affects the scope of its children's dependencies as per <a\n+ *       href=\"https://maven.apache.org/guides/introduction/introduction-to-dependency-mechanism.html#Dependency_Scope\">Maven:\n+ *       Dependency Scope</a>\n+ *   <li>It does not contain transitive provided-scope dependencies.\n+ *   <li>It does not contain transitive optional dependencies.\n+ * </ul>\n+ *\n+ * <p>{@link #buildFullDependencyGraph(List)} builds a full dependency graph. This graph has the", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff1eeff2ac4319c94f238fffc9c821c07b66b1a3"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTU5MDUxOQ==", "bodyText": "which has", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1218#discussion_r379590519", "createdAt": "2020-02-14T18:53:49Z", "author": {"login": "elharo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/DependencyGraphBuilder.java", "diffHunk": "@@ -49,8 +49,33 @@\n import org.eclipse.aether.util.graph.visitor.PathRecordingDependencyVisitor;\n \n /**\n- * Based on the <a href=\"https://maven.apache.org/resolver/index.html\">Apache Maven Artifact\n- * Resolver</a> (formerly known as Eclipse Aether).\n+ * This class builds dependency graphs for Maven artifacts. The nodes in the graph are Maven\n+ * artifacts and its edges are dependencies from an artifact to another.\n+ *\n+ * <p>{@link #buildMavenDependencyGraph(Artifact)} builds a normal Maven dependency graph. This\n+ * graph has the following attributes:\n+ *\n+ * <ul>\n+ *   <li>It contains at most one node for the same groupId and artifactId. (<a\n+ *       href=\"https://maven.apache.org/guides/introduction/introduction-to-dependency-mechanism.html#Transitive_Dependencies\">dependency\n+ *       mediation</a>)\n+ *   <li>The scope of a dependency affects the scope of its children's dependencies as per <a\n+ *       href=\"https://maven.apache.org/guides/introduction/introduction-to-dependency-mechanism.html#Dependency_Scope\">Maven:\n+ *       Dependency Scope</a>\n+ *   <li>It does not contain transitive provided-scope dependencies.\n+ *   <li>It does not contain transitive optional dependencies.\n+ * </ul>\n+ *\n+ * <p>{@link #buildFullDependencyGraph(List)} builds a full dependency graph. This graph has the\n+ * following attributes:\n+ *\n+ * <ul>\n+ *   <li>The same artifact, which have the same group:artifact:version, appears in different nodes", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff1eeff2ac4319c94f238fffc9c821c07b66b1a3"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTU5MDk1NQ==", "bodyText": "Is it correct to say that provided and optional are not treated differently than any other dependency?", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1218#discussion_r379590955", "createdAt": "2020-02-14T18:54:46Z", "author": {"login": "elharo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/DependencyGraphBuilder.java", "diffHunk": "@@ -49,8 +49,33 @@\n import org.eclipse.aether.util.graph.visitor.PathRecordingDependencyVisitor;\n \n /**\n- * Based on the <a href=\"https://maven.apache.org/resolver/index.html\">Apache Maven Artifact\n- * Resolver</a> (formerly known as Eclipse Aether).\n+ * This class builds dependency graphs for Maven artifacts. The nodes in the graph are Maven\n+ * artifacts and its edges are dependencies from an artifact to another.\n+ *\n+ * <p>{@link #buildMavenDependencyGraph(Artifact)} builds a normal Maven dependency graph. This\n+ * graph has the following attributes:\n+ *\n+ * <ul>\n+ *   <li>It contains at most one node for the same groupId and artifactId. (<a\n+ *       href=\"https://maven.apache.org/guides/introduction/introduction-to-dependency-mechanism.html#Transitive_Dependencies\">dependency\n+ *       mediation</a>)\n+ *   <li>The scope of a dependency affects the scope of its children's dependencies as per <a\n+ *       href=\"https://maven.apache.org/guides/introduction/introduction-to-dependency-mechanism.html#Dependency_Scope\">Maven:\n+ *       Dependency Scope</a>\n+ *   <li>It does not contain transitive provided-scope dependencies.\n+ *   <li>It does not contain transitive optional dependencies.\n+ * </ul>\n+ *\n+ * <p>{@link #buildFullDependencyGraph(List)} builds a full dependency graph. This graph has the\n+ * following attributes:\n+ *\n+ * <ul>\n+ *   <li>The same artifact, which have the same group:artifact:version, appears in different nodes\n+ *       in the graph.\n+ *   <li>The scope of a dependency does not affect the scope of its children's dependencies.\n+ *   <li>It contains transitive provided-scope dependencies.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff1eeff2ac4319c94f238fffc9c821c07b66b1a3"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTU5MTQzMw==", "bodyText": "No, I think we do want dependency here. Conceptually graphs are built from dependencies, not form artifacts.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1218#discussion_r379591433", "createdAt": "2020-02-14T18:55:50Z", "author": {"login": "elharo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/DependencyGraphBuilder.java", "diffHunk": "@@ -195,41 +217,31 @@ private DependencyNode resolveCompileTimeDependencies(\n    * @param artifacts Maven artifacts to retrieve their dependencies\n    * @return dependency graph representing the tree of Maven artifacts\n    */\n-  public DependencyGraphResult buildLinkageCheckDependencyGraph(List<Artifact> artifacts) {\n+  public DependencyGraphResult buildFullDependencyGraph(List<Artifact> artifacts) {\n     ImmutableList<DependencyNode> dependencyNodes =\n         artifacts.stream().map(DefaultDependencyNode::new).collect(toImmutableList());\n-    return buildDependencyGraph(\n-        dependencyNodes, GraphTraversalOption.FULL_DEPENDENCY_WITH_PROVIDED);\n+    return buildDependencyGraph(dependencyNodes, GraphTraversalOption.FULL);\n   }\n \n   /**\n-   * Finds the full compile time, transitive dependency graph including duplicates and conflicting\n-   * versions.\n+   * Builds the transitive dependency graph as seen by Maven. It does not include duplicates and\n+   * conflicting versions. That is, this resolves conflicting versions by picking the first version\n+   * seen. This is how Maven normally operates.\n    */\n-  public DependencyGraphResult buildCompleteGraph(Dependency dependency) {\n-    DefaultDependencyNode root = new DefaultDependencyNode(dependency);\n-    return buildDependencyGraph(ImmutableList.of(root), GraphTraversalOption.FULL_DEPENDENCY);\n-  }\n-\n-  /**\n-   * Finds the complete transitive dependency graph as seen by Maven. It does not include duplicates\n-   * and conflicting versions. That is, this resolves conflicting versions by picking the first\n-   * version seen. This is how Maven normally operates.\n-   */\n-  public DependencyGraphResult buildGraph(Dependency dependency) {\n+  public DependencyGraphResult buildMavenDependencyGraph(Artifact artifact) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTUwMTIwNg=="}, "originalCommit": {"oid": "c51d0359521c22fc1f39c431fd7662d975314119"}, "originalPosition": 119}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "84b5ee12dab5dc37a3fff4596e1f75544ec4cf60", "author": {"user": {"login": "suztomo", "name": "Tomo Suzuki"}}, "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/84b5ee12dab5dc37a3fff4596e1f75544ec4cf60", "committedDate": "2020-02-14T20:07:17Z", "message": "Applied review"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU5MTkzNzY1", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1218#pullrequestreview-359193765", "createdAt": "2020-02-14T20:14:19Z", "commit": {"oid": "84b5ee12dab5dc37a3fff4596e1f75544ec4cf60"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU5MTc5OTIz", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1218#pullrequestreview-359179923", "createdAt": "2020-02-14T19:47:53Z", "commit": {"oid": "ff1eeff2ac4319c94f238fffc9c821c07b66b1a3"}, "state": "COMMENTED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxOTo0Nzo1M1rOFqByzA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxOTo1MzowMVrOFqB7CQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTYxMzkwMA==", "bodyText": "As discussed, remove this node and edge definition for now.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1218#discussion_r379613900", "createdAt": "2020-02-14T19:47:53Z", "author": {"login": "suztomo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/DependencyGraphBuilder.java", "diffHunk": "@@ -49,8 +49,33 @@\n import org.eclipse.aether.util.graph.visitor.PathRecordingDependencyVisitor;\n \n /**\n- * Based on the <a href=\"https://maven.apache.org/resolver/index.html\">Apache Maven Artifact\n- * Resolver</a> (formerly known as Eclipse Aether).\n+ * This class builds dependency graphs for Maven artifacts. The nodes in the graph are Maven\n+ * artifacts and its edges are dependencies from an artifact to another.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTU4OTc5MQ=="}, "originalCommit": {"oid": "ff1eeff2ac4319c94f238fffc9c821c07b66b1a3"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTYxNDAwNQ==", "bodyText": "Updated. Does that look good?", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1218#discussion_r379614005", "createdAt": "2020-02-14T19:48:08Z", "author": {"login": "suztomo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/DependencyGraphBuilder.java", "diffHunk": "@@ -49,8 +49,33 @@\n import org.eclipse.aether.util.graph.visitor.PathRecordingDependencyVisitor;\n \n /**\n- * Based on the <a href=\"https://maven.apache.org/resolver/index.html\">Apache Maven Artifact\n- * Resolver</a> (formerly known as Eclipse Aether).\n+ * This class builds dependency graphs for Maven artifacts. The nodes in the graph are Maven\n+ * artifacts and its edges are dependencies from an artifact to another.\n+ *\n+ * <p>{@link #buildMavenDependencyGraph(Artifact)} builds a normal Maven dependency graph. This", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTU5MDAyMw=="}, "originalCommit": {"oid": "ff1eeff2ac4319c94f238fffc9c821c07b66b1a3"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTYxNDA5NQ==", "bodyText": "Updated", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1218#discussion_r379614095", "createdAt": "2020-02-14T19:48:22Z", "author": {"login": "suztomo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/DependencyGraphBuilder.java", "diffHunk": "@@ -49,8 +49,33 @@\n import org.eclipse.aether.util.graph.visitor.PathRecordingDependencyVisitor;\n \n /**\n- * Based on the <a href=\"https://maven.apache.org/resolver/index.html\">Apache Maven Artifact\n- * Resolver</a> (formerly known as Eclipse Aether).\n+ * This class builds dependency graphs for Maven artifacts. The nodes in the graph are Maven\n+ * artifacts and its edges are dependencies from an artifact to another.\n+ *\n+ * <p>{@link #buildMavenDependencyGraph(Artifact)} builds a normal Maven dependency graph. This\n+ * graph has the following attributes:\n+ *\n+ * <ul>\n+ *   <li>It contains at most one node for the same groupId and artifactId. (<a", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTU5MDEzOA=="}, "originalCommit": {"oid": "ff1eeff2ac4319c94f238fffc9c821c07b66b1a3"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTYxNDE1MA==", "bodyText": "Updated.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1218#discussion_r379614150", "createdAt": "2020-02-14T19:48:29Z", "author": {"login": "suztomo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/DependencyGraphBuilder.java", "diffHunk": "@@ -49,8 +49,33 @@\n import org.eclipse.aether.util.graph.visitor.PathRecordingDependencyVisitor;\n \n /**\n- * Based on the <a href=\"https://maven.apache.org/resolver/index.html\">Apache Maven Artifact\n- * Resolver</a> (formerly known as Eclipse Aether).\n+ * This class builds dependency graphs for Maven artifacts. The nodes in the graph are Maven\n+ * artifacts and its edges are dependencies from an artifact to another.\n+ *\n+ * <p>{@link #buildMavenDependencyGraph(Artifact)} builds a normal Maven dependency graph. This\n+ * graph has the following attributes:\n+ *\n+ * <ul>\n+ *   <li>It contains at most one node for the same groupId and artifactId. (<a\n+ *       href=\"https://maven.apache.org/guides/introduction/introduction-to-dependency-mechanism.html#Transitive_Dependencies\">dependency\n+ *       mediation</a>)\n+ *   <li>The scope of a dependency affects the scope of its children's dependencies as per <a\n+ *       href=\"https://maven.apache.org/guides/introduction/introduction-to-dependency-mechanism.html#Dependency_Scope\">Maven:\n+ *       Dependency Scope</a>\n+ *   <li>It does not contain transitive provided-scope dependencies.\n+ *   <li>It does not contain transitive optional dependencies.\n+ * </ul>\n+ *\n+ * <p>{@link #buildFullDependencyGraph(List)} builds a full dependency graph. This graph has the", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTU5MDQxNw=="}, "originalCommit": {"oid": "ff1eeff2ac4319c94f238fffc9c821c07b66b1a3"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTYxNDM4NA==", "bodyText": "Fixed.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1218#discussion_r379614384", "createdAt": "2020-02-14T19:49:02Z", "author": {"login": "suztomo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/DependencyGraphBuilder.java", "diffHunk": "@@ -49,8 +49,33 @@\n import org.eclipse.aether.util.graph.visitor.PathRecordingDependencyVisitor;\n \n /**\n- * Based on the <a href=\"https://maven.apache.org/resolver/index.html\">Apache Maven Artifact\n- * Resolver</a> (formerly known as Eclipse Aether).\n+ * This class builds dependency graphs for Maven artifacts. The nodes in the graph are Maven\n+ * artifacts and its edges are dependencies from an artifact to another.\n+ *\n+ * <p>{@link #buildMavenDependencyGraph(Artifact)} builds a normal Maven dependency graph. This\n+ * graph has the following attributes:\n+ *\n+ * <ul>\n+ *   <li>It contains at most one node for the same groupId and artifactId. (<a\n+ *       href=\"https://maven.apache.org/guides/introduction/introduction-to-dependency-mechanism.html#Transitive_Dependencies\">dependency\n+ *       mediation</a>)\n+ *   <li>The scope of a dependency affects the scope of its children's dependencies as per <a\n+ *       href=\"https://maven.apache.org/guides/introduction/introduction-to-dependency-mechanism.html#Dependency_Scope\">Maven:\n+ *       Dependency Scope</a>\n+ *   <li>It does not contain transitive provided-scope dependencies.\n+ *   <li>It does not contain transitive optional dependencies.\n+ * </ul>\n+ *\n+ * <p>{@link #buildFullDependencyGraph(List)} builds a full dependency graph. This graph has the\n+ * following attributes:\n+ *\n+ * <ul>\n+ *   <li>The same artifact, which have the same group:artifact:version, appears in different nodes", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTU5MDUxOQ=="}, "originalCommit": {"oid": "ff1eeff2ac4319c94f238fffc9c821c07b66b1a3"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTYxNTc3OA==", "bodyText": "Yes, that's simple. Updated.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1218#discussion_r379615778", "createdAt": "2020-02-14T19:52:26Z", "author": {"login": "suztomo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/DependencyGraphBuilder.java", "diffHunk": "@@ -49,8 +49,33 @@\n import org.eclipse.aether.util.graph.visitor.PathRecordingDependencyVisitor;\n \n /**\n- * Based on the <a href=\"https://maven.apache.org/resolver/index.html\">Apache Maven Artifact\n- * Resolver</a> (formerly known as Eclipse Aether).\n+ * This class builds dependency graphs for Maven artifacts. The nodes in the graph are Maven\n+ * artifacts and its edges are dependencies from an artifact to another.\n+ *\n+ * <p>{@link #buildMavenDependencyGraph(Artifact)} builds a normal Maven dependency graph. This\n+ * graph has the following attributes:\n+ *\n+ * <ul>\n+ *   <li>It contains at most one node for the same groupId and artifactId. (<a\n+ *       href=\"https://maven.apache.org/guides/introduction/introduction-to-dependency-mechanism.html#Transitive_Dependencies\">dependency\n+ *       mediation</a>)\n+ *   <li>The scope of a dependency affects the scope of its children's dependencies as per <a\n+ *       href=\"https://maven.apache.org/guides/introduction/introduction-to-dependency-mechanism.html#Dependency_Scope\">Maven:\n+ *       Dependency Scope</a>\n+ *   <li>It does not contain transitive provided-scope dependencies.\n+ *   <li>It does not contain transitive optional dependencies.\n+ * </ul>\n+ *\n+ * <p>{@link #buildFullDependencyGraph(List)} builds a full dependency graph. This graph has the\n+ * following attributes:\n+ *\n+ * <ul>\n+ *   <li>The same artifact, which have the same group:artifact:version, appears in different nodes\n+ *       in the graph.\n+ *   <li>The scope of a dependency does not affect the scope of its children's dependencies.\n+ *   <li>It contains transitive provided-scope dependencies.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTU5MDk1NQ=="}, "originalCommit": {"oid": "ff1eeff2ac4319c94f238fffc9c821c07b66b1a3"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTYxNjAwOQ==", "bodyText": "Reverted.", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1218#discussion_r379616009", "createdAt": "2020-02-14T19:53:01Z", "author": {"login": "suztomo"}, "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/DependencyGraphBuilder.java", "diffHunk": "@@ -195,41 +217,31 @@ private DependencyNode resolveCompileTimeDependencies(\n    * @param artifacts Maven artifacts to retrieve their dependencies\n    * @return dependency graph representing the tree of Maven artifacts\n    */\n-  public DependencyGraphResult buildLinkageCheckDependencyGraph(List<Artifact> artifacts) {\n+  public DependencyGraphResult buildFullDependencyGraph(List<Artifact> artifacts) {\n     ImmutableList<DependencyNode> dependencyNodes =\n         artifacts.stream().map(DefaultDependencyNode::new).collect(toImmutableList());\n-    return buildDependencyGraph(\n-        dependencyNodes, GraphTraversalOption.FULL_DEPENDENCY_WITH_PROVIDED);\n+    return buildDependencyGraph(dependencyNodes, GraphTraversalOption.FULL);\n   }\n \n   /**\n-   * Finds the full compile time, transitive dependency graph including duplicates and conflicting\n-   * versions.\n+   * Builds the transitive dependency graph as seen by Maven. It does not include duplicates and\n+   * conflicting versions. That is, this resolves conflicting versions by picking the first version\n+   * seen. This is how Maven normally operates.\n    */\n-  public DependencyGraphResult buildCompleteGraph(Dependency dependency) {\n-    DefaultDependencyNode root = new DefaultDependencyNode(dependency);\n-    return buildDependencyGraph(ImmutableList.of(root), GraphTraversalOption.FULL_DEPENDENCY);\n-  }\n-\n-  /**\n-   * Finds the complete transitive dependency graph as seen by Maven. It does not include duplicates\n-   * and conflicting versions. That is, this resolves conflicting versions by picking the first\n-   * version seen. This is how Maven normally operates.\n-   */\n-  public DependencyGraphResult buildGraph(Dependency dependency) {\n+  public DependencyGraphResult buildMavenDependencyGraph(Artifact artifact) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTUwMTIwNg=="}, "originalCommit": {"oid": "c51d0359521c22fc1f39c431fd7662d975314119"}, "originalPosition": 119}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "422ef7d67a73cfcec2b88c6a29fbb28c61c7436d", "author": {"user": {"login": "suztomo", "name": "Tomo Suzuki"}}, "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/422ef7d67a73cfcec2b88c6a29fbb28c61c7436d", "committedDate": "2020-02-14T20:35:04Z", "message": "Merge branch 'master' into levelOrder"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 466, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}