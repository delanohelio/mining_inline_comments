{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDYwNzgyNDgy", "number": 3634, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMFQyMDo1OToyNFrOEldSpA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMFQyMTowNzoxN1rOEldVRg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3NzEyNjc2OnYy", "diffSide": "RIGHT", "path": "xchange-bitstamp/src/main/java/org/knowm/xchange/bitstamp/service/BitstampAccountServiceRaw.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMFQyMDo1OToyNFrOHU9DOA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMFQyMDo1OToyNFrOHU9DOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTczMzgxNg==", "bodyText": "using ExchangeRestProxyBuilder is the new preferred approach\nwhy are you downgrading this to RestProxyFactory?", "url": "https://github.com/knowm/XChange/pull/3634#discussion_r491733816", "createdAt": "2020-09-20T20:59:24Z", "author": {"login": "walec51"}, "path": "xchange-bitstamp/src/main/java/org/knowm/xchange/bitstamp/service/BitstampAccountServiceRaw.java", "diffHunk": "@@ -47,13 +47,15 @@ protected BitstampAccountServiceRaw(Exchange exchange) {\n     super(exchange);\n \n     this.bitstampAuthenticated =\n-        ExchangeRestProxyBuilder.forInterface(\n-                BitstampAuthenticated.class, exchange.getExchangeSpecification())\n-            .build();\n+        RestProxyFactory.createProxy(\n+            BitstampAuthenticated.class,\n+            exchange.getExchangeSpecification().getSslUri(),\n+            getClientConfig());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6fe57c36119cda6baba99905dd4f3bba2a30bb1a"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3NzEyOTk3OnYy", "diffSide": "RIGHT", "path": "xchange-kraken/src/main/java/org/knowm/xchange/kraken/service/KrakenTradeService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMFQyMTowMzozN1rOHU9EyA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMFQyMTowMzozN1rOHU9EyA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTczNDIxNg==", "bodyText": "+ \"\" i unnecesary\ngetKrakenTradeHistory should support null values", "url": "https://github.com/knowm/XChange/pull/3634#discussion_r491734216", "createdAt": "2020-09-20T21:03:37Z", "author": {"login": "walec51"}, "path": "xchange-kraken/src/main/java/org/knowm/xchange/kraken/service/KrakenTradeService.java", "diffHunk": "@@ -68,32 +68,44 @@ public boolean cancelOrder(CancelOrderParams orderParams) throws IOException {\n \n   /**\n    * @param params Can optionally implement {@link TradeHistoryParamOffset} and {@link\n-   *     TradeHistoryParamsTimeSpan}. All other TradeHistoryParams types will be ignored.\n+   *     TradeHistoryParamsTimeSpan} and {@link TradeHistoryParamsIdSpan} All other\n+   *     TradeHistoryParams types will be ignored.\n    */\n   @Override\n   public UserTrades getTradeHistory(TradeHistoryParams params)\n       throws ExchangeException, IOException {\n \n-    final Long startTime;\n-    final Long endTime;\n-    if (params instanceof TradeHistoryParamsTimeSpan) {\n-      TradeHistoryParamsTimeSpan timeSpan = (TradeHistoryParamsTimeSpan) params;\n-      startTime = DateUtils.toUnixTimeNullSafe(timeSpan.getStartTime());\n-      endTime = DateUtils.toUnixTimeNullSafe(timeSpan.getEndTime());\n-    } else {\n-      startTime = null;\n-      endTime = null;\n-    }\n+    String start = null;\n+    String end = null;\n+\n+    Long offset = null;\n \n-    final Long offset;\n     if (params instanceof TradeHistoryParamOffset) {\n       offset = ((TradeHistoryParamOffset) params).getOffset();\n-    } else {\n-      offset = null;\n+    }\n+\n+    if (params instanceof TradeHistoryParamsIdSpan) {\n+      TradeHistoryParamsIdSpan idSpan = (TradeHistoryParamsIdSpan) params;\n+      if (idSpan.getStartId() != null) {\n+        start = idSpan.getStartId();\n+      }\n+      if (idSpan.getEndId() != null) {\n+        end = idSpan.getEndId();\n+      }\n+    }\n+\n+    if (params instanceof TradeHistoryParamsTimeSpan) {\n+      TradeHistoryParamsTimeSpan timeSpan = (TradeHistoryParamsTimeSpan) params;\n+      if (timeSpan.getStartTime() != null) {\n+        start = DateUtils.toUnixTimeNullSafe(timeSpan.getStartTime()) + \"\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6fe57c36119cda6baba99905dd4f3bba2a30bb1a"}, "originalPosition": 47}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3NzEzMTQxOnYy", "diffSide": "RIGHT", "path": "xchange-bitstamp/src/main/java/org/knowm/xchange/bitstamp/service/BitstampTradeServiceRaw.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMFQyMTowNToxOFrOHU9FbQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMFQyMTowNToxOFrOHU9FbQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTczNDM4MQ==", "bodyText": "why is this not final any more?", "url": "https://github.com/knowm/XChange/pull/3634#discussion_r491734381", "createdAt": "2020-09-20T21:05:18Z", "author": {"login": "walec51"}, "path": "xchange-bitstamp/src/main/java/org/knowm/xchange/bitstamp/service/BitstampTradeServiceRaw.java", "diffHunk": "@@ -20,20 +21,22 @@\n   private final BitstampAuthenticated bitstampAuthenticated;\n   private final BitstampAuthenticatedV2 bitstampAuthenticatedV2;\n   private final BitstampDigest signatureCreator;\n-  private final String apiKey;\n-  private final SynchronizedValueFactory<Long> nonceFactory;\n+  private String apiKey;\n+  private SynchronizedValueFactory<Long> nonceFactory;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6fe57c36119cda6baba99905dd4f3bba2a30bb1a"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3NzEzMzUwOnYy", "diffSide": "RIGHT", "path": "xchange-kraken/src/main/java/org/knowm/xchange/kraken/service/KrakenTradeService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMFQyMTowNzoxN1rOHU9GXQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMFQyMTowNzoxN1rOHU9GXQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTczNDYyMQ==", "bodyText": "these ifs are unnecessary\njust doing start = idSpan.getStartId(); for a null idSpan.getStartId() will have the same result in start as it is initialized to null", "url": "https://github.com/knowm/XChange/pull/3634#discussion_r491734621", "createdAt": "2020-09-20T21:07:17Z", "author": {"login": "walec51"}, "path": "xchange-kraken/src/main/java/org/knowm/xchange/kraken/service/KrakenTradeService.java", "diffHunk": "@@ -68,32 +68,44 @@ public boolean cancelOrder(CancelOrderParams orderParams) throws IOException {\n \n   /**\n    * @param params Can optionally implement {@link TradeHistoryParamOffset} and {@link\n-   *     TradeHistoryParamsTimeSpan}. All other TradeHistoryParams types will be ignored.\n+   *     TradeHistoryParamsTimeSpan} and {@link TradeHistoryParamsIdSpan} All other\n+   *     TradeHistoryParams types will be ignored.\n    */\n   @Override\n   public UserTrades getTradeHistory(TradeHistoryParams params)\n       throws ExchangeException, IOException {\n \n-    final Long startTime;\n-    final Long endTime;\n-    if (params instanceof TradeHistoryParamsTimeSpan) {\n-      TradeHistoryParamsTimeSpan timeSpan = (TradeHistoryParamsTimeSpan) params;\n-      startTime = DateUtils.toUnixTimeNullSafe(timeSpan.getStartTime());\n-      endTime = DateUtils.toUnixTimeNullSafe(timeSpan.getEndTime());\n-    } else {\n-      startTime = null;\n-      endTime = null;\n-    }\n+    String start = null;\n+    String end = null;\n+\n+    Long offset = null;\n \n-    final Long offset;\n     if (params instanceof TradeHistoryParamOffset) {\n       offset = ((TradeHistoryParamOffset) params).getOffset();\n-    } else {\n-      offset = null;\n+    }\n+\n+    if (params instanceof TradeHistoryParamsIdSpan) {\n+      TradeHistoryParamsIdSpan idSpan = (TradeHistoryParamsIdSpan) params;\n+      if (idSpan.getStartId() != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6fe57c36119cda6baba99905dd4f3bba2a30bb1a"}, "originalPosition": 36}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3786, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}