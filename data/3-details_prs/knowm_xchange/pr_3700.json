{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDgzODY0NjA5", "number": 3700, "title": "Merge Develop", "bodyText": "", "createdAt": "2020-09-10T13:36:11Z", "url": "https://github.com/knowm/XChange/pull/3700", "merged": true, "mergeCommit": {"oid": "fc2e2771963ada7d20a79d2ad609541f707a1311"}, "closed": true, "closedAt": "2020-10-24T18:59:50Z", "author": {"login": "mdvx"}, "timelineItems": {"totalCount": 39, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc5wCjkAH2gAyNDgzODY0NjA5OmIwNjY2NTc1NDI2ODY2ZjMwZDJhMGVmOTUxMzgwYjhkYTM4NWM1ODQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdVuVeWAH2gAyNDgzODY0NjA5OmE5MDljNWNiYjQwZGJlYzkyZjJkYmVlNGVhYjI4ZDc2MzlhNzM0NTU=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "b0666575426866f30d2a0ef951380b8da385c584", "author": {"user": {"login": "mdvx", "name": "Marc Deveaux"}}, "url": "https://github.com/knowm/XChange/commit/b0666575426866f30d2a0ef951380b8da385c584", "committedDate": "2020-07-29T19:18:00Z", "message": "Merge pull request #9 from knowm/develop\n\nmerge"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "aafff91e06eec54e2c71e9c2eec2fbb562dee472", "author": {"user": {"login": "mdvx", "name": "Marc Deveaux"}}, "url": "https://github.com/knowm/XChange/commit/aafff91e06eec54e2c71e9c2eec2fbb562dee472", "committedDate": "2020-07-29T19:23:09Z", "message": "Merge pull request #10 from mdvx/Gemini-Stream-Fix\n\nGemini stream fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1ec08af1b5b8cd26f064ccdc62068b503b92f6dc", "author": {"user": null}, "url": "https://github.com/knowm/XChange/commit/1ec08af1b5b8cd26f064ccdc62068b503b92f6dc", "committedDate": "2020-08-02T12:32:31Z", "message": "[Gemini] Implement getTicker using top of orderbook"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c1bfdb45b74fd83aa8f1d9dd753fe40bfefefbe3", "author": {"user": null}, "url": "https://github.com/knowm/XChange/commit/c1bfdb45b74fd83aa8f1d9dd753fe40bfefefbe3", "committedDate": "2020-08-02T12:43:04Z", "message": "[Gemini] Implement getTicker using top of orderbook - reformat"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "037f6e14df24a4427a0e72c373b8fa9d4eb41194", "author": {"user": null}, "url": "https://github.com/knowm/XChange/commit/037f6e14df24a4427a0e72c373b8fa9d4eb41194", "committedDate": "2020-08-02T12:45:43Z", "message": "[Gemini] Implement getTicker using top of orderbook - cascade errors"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b272f3d240280b6a265d44b45872f03544e394a3", "author": {"user": null}, "url": "https://github.com/knowm/XChange/commit/b272f3d240280b6a265d44b45872f03544e394a3", "committedDate": "2020-08-02T12:53:51Z", "message": "[Gemini] Implement getTicker using top of orderbook - reformat - cascade errors"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "66823c75b0a862f2e63e2d3b329665e5f55b2164", "author": {"user": null}, "url": "https://github.com/knowm/XChange/commit/66823c75b0a862f2e63e2d3b329665e5f55b2164", "committedDate": "2020-08-11T02:08:45Z", "message": "[Bitmex] getStreamingService public plus extra access to tables\ngetTradeHistory in reverse order"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "91629d291e194bef0eddcce4a7173c1fce8bda67", "author": {"user": null}, "url": "https://github.com/knowm/XChange/commit/91629d291e194bef0eddcce4a7173c1fce8bda67", "committedDate": "2020-08-11T02:09:42Z", "message": "[BitstampTradeService] getBitstampOpenOrders fixed"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9c206d171d1d434fe6599610f8a9eba7a82db53f", "author": {"user": null}, "url": "https://github.com/knowm/XChange/commit/9c206d171d1d434fe6599610f8a9eba7a82db53f", "committedDate": "2020-08-11T02:14:03Z", "message": "Bitstamp openOrders"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2f0b84b6d79c7836ae943b8238ebf880f5151899", "author": {"user": {"login": "mdvx", "name": "Marc Deveaux"}}, "url": "https://github.com/knowm/XChange/commit/2f0b84b6d79c7836ae943b8238ebf880f5151899", "committedDate": "2020-08-15T18:03:39Z", "message": "Merge pull request #11 from knowm/develop\n\nmerge"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cdae5130174659c9f75aee42d6fbeb0b06d9861a", "author": {"user": null}, "url": "https://github.com/knowm/XChange/commit/cdae5130174659c9f75aee42d6fbeb0b06d9861a", "committedDate": "2020-08-31T16:40:25Z", "message": "[Gemini] fix adaptCurrencyPair for LINK/USD or 4/3"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1f8781bcac3010fe05bfed5ce65316c1dfe7958b", "author": {"user": null}, "url": "https://github.com/knowm/XChange/commit/1f8781bcac3010fe05bfed5ce65316c1dfe7958b", "committedDate": "2020-09-01T22:59:53Z", "message": "[Gemini] priceScales for extra currencies"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "38c7d5e9ccb4bbdf60b672651bafd89a20237ea0", "author": {"user": null}, "url": "https://github.com/knowm/XChange/commit/38c7d5e9ccb4bbdf60b672651bafd89a20237ea0", "committedDate": "2020-09-01T23:54:28Z", "message": "merge from develop"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f64e5818b289b1d5b4cc2931633ac5d166f56b1c", "author": {"user": {"login": "mdvx", "name": "Marc Deveaux"}}, "url": "https://github.com/knowm/XChange/commit/f64e5818b289b1d5b4cc2931633ac5d166f56b1c", "committedDate": "2020-09-10T13:37:55Z", "message": "Merge branch 'develop' into develop"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg2MDA0ODMw", "url": "https://github.com/knowm/XChange/pull/3700#pullrequestreview-486004830", "createdAt": "2020-09-10T14:37:38Z", "commit": {"oid": "f64e5818b289b1d5b4cc2931633ac5d166f56b1c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQxNDozNzozOFrOHP3SVw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQxNDozNzozOFrOHP3SVw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjM5NjUwMw==", "bodyText": "would this make more sense as a switch, and if not at least having the constant on the left side of the equality comparison for NPE protection?", "url": "https://github.com/knowm/XChange/pull/3700#discussion_r486396503", "createdAt": "2020-09-10T14:37:38Z", "author": {"login": "earce"}, "path": "xchange-stream-bitmex/src/main/java/info/bitrich/xchangestream/bitmex/BitmexStreamingService.java", "diffHunk": "@@ -194,7 +200,12 @@ protected DefaultHttpHeaders getCustomHeaders() {\n   @Override\n   protected String getChannelNameFromMessage(JsonNode message) throws IOException {\n     String table = message.get(\"table\").asText();\n-    if (\"order\".equals(table) || \"funding\".equals(table) || \"position\".equals(table)) {\n+    if (table.equals(\"order\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f64e5818b289b1d5b4cc2931633ac5d166f56b1c"}, "originalPosition": 20}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg2MDEyMTg3", "url": "https://github.com/knowm/XChange/pull/3700#pullrequestreview-486012187", "createdAt": "2020-09-10T14:44:38Z", "commit": {"oid": "f64e5818b289b1d5b4cc2931633ac5d166f56b1c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQxNDo0NDozOFrOHP3ngg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQxNDo0NDozOFrOHP3ngg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjQwMTkyMg==", "bodyText": "can this new ArrayList<>() be created after the getBitstampOpenOrders() and using the openOrders.length to size the array?", "url": "https://github.com/knowm/XChange/pull/3700#discussion_r486401922", "createdAt": "2020-09-10T14:44:38Z", "author": {"login": "earce"}, "path": "xchange-bitstamp/src/main/java/org/knowm/xchange/bitstamp/service/BitstampTradeService.java", "diffHunk": "@@ -43,28 +53,28 @@ public OpenOrders getOpenOrders() throws IOException, BitstampException {\n \n   @Override\n   public OpenOrders getOpenOrders(OpenOrdersParams params) throws ExchangeException, IOException {\n-    Collection<CurrencyPair> pairs = DefaultOpenOrdersParamCurrencyPair.getPairs(params, exchange);\n+\n     List<LimitOrder> limitOrders = new ArrayList<>();\n-    for (CurrencyPair pair : pairs) {\n-      BitstampOrder[] openOrders = getBitstampOpenOrders(pair);\n-      for (BitstampOrder bitstampOrder : openOrders) {\n-        OrderType orderType = bitstampOrder.getType() == 0 ? OrderType.BID : OrderType.ASK;\n-        String id = Long.toString(bitstampOrder.getId());\n-        BigDecimal price = bitstampOrder.getPrice();\n-        limitOrders.add(\n-            new LimitOrder(\n-                orderType,\n-                bitstampOrder.getAmount(),\n-                pair,\n-                id,\n-                bitstampOrder.getDatetime(),\n-                price,\n-                null, // avgPrice\n-                null, // cumAmount\n-                null, // fee\n-                Order.OrderStatus.NEW));\n-      }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f64e5818b289b1d5b4cc2931633ac5d166f56b1c"}, "originalPosition": 52}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg2MDE3ODkz", "url": "https://github.com/knowm/XChange/pull/3700#pullrequestreview-486017893", "createdAt": "2020-09-10T14:50:08Z", "commit": {"oid": "f64e5818b289b1d5b4cc2931633ac5d166f56b1c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQxNDo1MDowOFrOHP34fQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQxNDo1MDowOFrOHP34fQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjQwNjI2OQ==", "bodyText": "this could potentially break downstream users expecting the oldest rows first, does it make more sense to add a param to BitmexTradeHistoryParams which uses could explicitly toggle and have the default set to something?", "url": "https://github.com/knowm/XChange/pull/3700#discussion_r486406269", "createdAt": "2020-09-10T14:50:08Z", "author": {"login": "earce"}, "path": "xchange-bitmex/src/main/java/org/knowm/xchange/bitmex/service/BitmexTradeService.java", "diffHunk": "@@ -187,7 +194,7 @@ public UserTrades getTradeHistory(TradeHistoryParams params) throws IOException\n     }\n \n     List<UserTrade> userTrades =\n-        getTradeHistory(symbol, null, null, count, start, false, startTime, endTime).stream()\n+        getTradeHistory(symbol, null, null, count, start, true, startTime, endTime).stream()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f64e5818b289b1d5b4cc2931633ac5d166f56b1c"}, "originalPosition": 21}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkyMjI0NzE1", "url": "https://github.com/knowm/XChange/pull/3700#pullrequestreview-492224715", "createdAt": "2020-09-20T21:32:59Z", "commit": {"oid": "f64e5818b289b1d5b4cc2931633ac5d166f56b1c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMFQyMTozMjo1OVrOHU9Pjg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMFQyMTozMjo1OVrOHU9Pjg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTczNjk3NA==", "bodyText": "why is this not final any more?", "url": "https://github.com/knowm/XChange/pull/3700#discussion_r491736974", "createdAt": "2020-09-20T21:32:59Z", "author": {"login": "walec51"}, "path": "xchange-bitmex/src/main/java/org/knowm/xchange/bitmex/BitmexExchange.java", "diffHunk": "@@ -27,8 +27,8 @@\n \n public class BitmexExchange extends BaseExchange implements Exchange {\n \n-  private final SynchronizedValueFactory<Long> nonceFactory = new ExpirationTimeFactory(30);\n   protected RateLimitUpdateListener rateLimitUpdateListener;\n+  private SynchronizedValueFactory<Long> nonceFactory = new ExpirationTimeFactory(30);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f64e5818b289b1d5b4cc2931633ac5d166f56b1c"}, "originalPosition": 6}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "46e2af812a28eafad9c6a2710234842f4c876299", "author": {"user": null}, "url": "https://github.com/knowm/XChange/commit/46e2af812a28eafad9c6a2710234842f4c876299", "committedDate": "2020-10-12T02:42:42Z", "message": "[Kraken] NPE Fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4a773af42851970346f516e02c3e9453673fed2c", "author": {"user": {"login": "mdvx", "name": "Marc Deveaux"}}, "url": "https://github.com/knowm/XChange/commit/4a773af42851970346f516e02c3e9453673fed2c", "committedDate": "2020-10-14T01:48:02Z", "message": "Merge pull request #13 from knowm/develop\n\nMerge from knowm"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bf9e56b2cf3323920b5f088bebd452c3a3988669", "author": {"user": null}, "url": "https://github.com/knowm/XChange/commit/bf9e56b2cf3323920b5f088bebd452c3a3988669", "committedDate": "2020-10-20T03:03:38Z", "message": "throw NotYetImplementedForExchangeException - add some color to the exception"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "44d0e9a84d085e4c0f063a6da7128c951edcf71a", "author": {"user": null}, "url": "https://github.com/knowm/XChange/commit/44d0e9a84d085e4c0f063a6da7128c951edcf71a", "committedDate": "2020-10-20T03:27:44Z", "message": "[XStream-Core] simplify connection state monitoring\nThe following can be ...\n  Observable<Throwable> subscribeReconnectFailure();\n  Observable<Object> subscribeConnectionSuccess();\n  Observable<Object> subscribeDisconnect();\n\n... replaced by\n  Observable<State> subscribeConnectionState();\n\n...for most use cases.\nThe old functionality is not removed."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "05523330ed8837a72f18a209758d0a1b0a0b3133", "author": {"user": null}, "url": "https://github.com/knowm/XChange/commit/05523330ed8837a72f18a209758d0a1b0a0b3133", "committedDate": "2020-10-21T23:01:46Z", "message": "use ImmutableSet.of() for SIMPLE_TABLES"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "657c0544ae401c9354828ee7956742a8c99a0c41", "author": {"user": null}, "url": "https://github.com/knowm/XChange/commit/657c0544ae401c9354828ee7956742a8c99a0c41", "committedDate": "2020-10-21T23:05:37Z", "message": "change order of list and array creation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "67439362b094744355cb05fc5fbf294005771af9", "author": {"user": {"login": "mdvx", "name": "Marc Deveaux"}}, "url": "https://github.com/knowm/XChange/commit/67439362b094744355cb05fc5fbf294005771af9", "committedDate": "2020-10-21T23:17:17Z", "message": "Merge branch 'develop' into develop"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE0MjU4Njc2", "url": "https://github.com/knowm/XChange/pull/3700#pullrequestreview-514258676", "createdAt": "2020-10-21T23:26:22Z", "commit": {"oid": "657c0544ae401c9354828ee7956742a8c99a0c41"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQyMzoyNjoyM1rOHmLOqA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQyMzoyNjoyM1rOHmLOqA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTc5MTkxMg==", "bodyText": "should we have NPE protection here given ConcurrentHashMap throws them on null keys and same on handleChannelError and subscribeChannel", "url": "https://github.com/knowm/XChange/pull/3700#discussion_r509791912", "createdAt": "2020-10-21T23:26:23Z", "author": {"login": "earce"}, "path": "xchange-stream-service-netty/src/main/java/info/bitrich/xchangestream/service/netty/NettyStreamingService.java", "diffHunk": "@@ -459,18 +475,24 @@ private void onIdle(ChannelHandlerContext ctx) {\n   }\n \n   protected void handleChannelMessage(String channel, T message) {\n-    NettyStreamingService<T>.Subscription subscription = channels.get(channel);\n-    if (subscription == null) {\n-      LOG.debug(\"Channel has been closed {}.\", channel);\n-      return;\n-    }\n-    ObservableEmitter<T> emitter = subscription.emitter;\n-    if (emitter == null) {\n-      LOG.debug(\"No subscriber for channel {}.\", channel);\n-      return;\n+    if (\"ALL\".equals(channel)) {\n+      channels\n+          .forEach((k, v) ->\n+              v.emitter.onNext(message));\n+\n+    } else {\n+      NettyStreamingService<T>.Subscription subscription = channels.get(channel);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "657c0544ae401c9354828ee7956742a8c99a0c41"}, "originalPosition": 146}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b95d878938b729b2fc7308ad8ae113918f5bbf93", "author": {"user": null}, "url": "https://github.com/knowm/XChange/commit/b95d878938b729b2fc7308ad8ae113918f5bbf93", "committedDate": "2020-10-21T23:31:38Z", "message": "[Bitmex] backward compat of order in getTradeHistory"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "aa1eeccf55605cb0c6f3b55399c09c37d2be1c41", "author": {"user": null}, "url": "https://github.com/knowm/XChange/commit/aa1eeccf55605cb0c6f3b55399c09c37d2be1c41", "committedDate": "2020-10-21T23:33:13Z", "message": "Merge remote-tracking branch 'origin/develop' into develop"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE0MjYxNzg5", "url": "https://github.com/knowm/XChange/pull/3700#pullrequestreview-514261789", "createdAt": "2020-10-21T23:34:48Z", "commit": {"oid": "657c0544ae401c9354828ee7956742a8c99a0c41"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQyMzozNDo0OVrOHmLYqw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQyMzozNDo0OVrOHmLYqw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTc5NDQ3NQ==", "bodyText": "ALL seems to be a constant associated only with CoinbasePro should we either pull it out of CoinbasePro and make it a Netty constant or override in the CoinbasePro handleChannelMessage?", "url": "https://github.com/knowm/XChange/pull/3700#discussion_r509794475", "createdAt": "2020-10-21T23:34:49Z", "author": {"login": "earce"}, "path": "xchange-stream-service-netty/src/main/java/info/bitrich/xchangestream/service/netty/NettyStreamingService.java", "diffHunk": "@@ -459,18 +475,24 @@ private void onIdle(ChannelHandlerContext ctx) {\n   }\n \n   protected void handleChannelMessage(String channel, T message) {\n-    NettyStreamingService<T>.Subscription subscription = channels.get(channel);\n-    if (subscription == null) {\n-      LOG.debug(\"Channel has been closed {}.\", channel);\n-      return;\n-    }\n-    ObservableEmitter<T> emitter = subscription.emitter;\n-    if (emitter == null) {\n-      LOG.debug(\"No subscriber for channel {}.\", channel);\n-      return;\n+    if (\"ALL\".equals(channel)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "657c0544ae401c9354828ee7956742a8c99a0c41"}, "originalPosition": 140}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE0MjYzMTcy", "url": "https://github.com/knowm/XChange/pull/3700#pullrequestreview-514263172", "createdAt": "2020-10-21T23:38:52Z", "commit": {"oid": "657c0544ae401c9354828ee7956742a8c99a0c41"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQyMzozODo1MlrOHmLddQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQyMzozODo1MlrOHmLddQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTc5NTcwMQ==", "bodyText": "would this make more sense as an atomic reference? I would imagine if more states are introduced you may want updates to this to happen atomically no?", "url": "https://github.com/knowm/XChange/pull/3700#discussion_r509795701", "createdAt": "2020-10-21T23:38:52Z", "author": {"login": "earce"}, "path": "xchange-stream-service-netty/src/main/java/info/bitrich/xchangestream/service/netty/ConnectionStateModel.java", "diffHunk": "@@ -0,0 +1,35 @@\n+package info.bitrich.xchangestream.service.netty;\n+\n+import io.reactivex.Observable;\n+import io.reactivex.subjects.BehaviorSubject;\n+import io.reactivex.subjects.Subject;\n+\n+/**\n+ * The simplest Connection state model possible (maybe someone wants to add authenticated,\n+ * connecting, etc...)\n+ */\n+public final class ConnectionStateModel {\n+\n+  public enum State {\n+    closed,\n+    open\n+  }\n+\n+  private volatile State state = State.closed;  // start with a closed state", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "657c0544ae401c9354828ee7956742a8c99a0c41"}, "originalPosition": 18}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE0MjY0MTQ4", "url": "https://github.com/knowm/XChange/pull/3700#pullrequestreview-514264148", "createdAt": "2020-10-21T23:41:39Z", "commit": {"oid": "657c0544ae401c9354828ee7956742a8c99a0c41"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQyMzo0MTozOVrOHmLg0g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQyMzo0MTozOVrOHmLg0g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTc5NjU2Mg==", "bodyText": "should these be concurrent?", "url": "https://github.com/knowm/XChange/pull/3700#discussion_r509796562", "createdAt": "2020-10-21T23:41:39Z", "author": {"login": "earce"}, "path": "xchange-stream-gemini/src/main/java/info/bitrich/xchangestream/gemini/GeminiStreamingService.java", "diffHunk": "@@ -1,26 +1,33 @@\n package info.bitrich.xchangestream.gemini;\n \n import com.fasterxml.jackson.databind.JsonNode;\n+import info.bitrich.xchangestream.service.netty.ConnectionStateModel.State;\n import io.reactivex.Observable;\n+import io.reactivex.subjects.BehaviorSubject;\n+import io.reactivex.subjects.Subject;\n import java.util.HashMap;\n import java.util.Map;\n import org.knowm.xchange.currency.CurrencyPair;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n-/** Created by Lukas Zaoralek on 15.11.17. */\n+/**\n+ * Created by Lukas Zaoralek on 15.11.17.\n+ */\n public class GeminiStreamingService {\n+\n   private static final Logger LOG = LoggerFactory.getLogger(GeminiStreamingService.class);\n \n   private final String baseUri;\n \n-  private Map<CurrencyPair, GeminiProductStreamingService> productStreamingServices;\n-  private Map<CurrencyPair, Observable<JsonNode>> productSubscriptions;\n+  private final Map<CurrencyPair, GeminiProductStreamingService> productStreamingServices =\n+      new HashMap<>();\n+  private final Map<CurrencyPair, Observable<JsonNode>> productSubscriptions = new HashMap<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "657c0544ae401c9354828ee7956742a8c99a0c41"}, "originalPosition": 28}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a6c9166fc8c1aa9d95c4ebcab13b66c528cb5d57", "author": {"user": null}, "url": "https://github.com/knowm/XChange/commit/a6c9166fc8c1aa9d95c4ebcab13b66c528cb5d57", "committedDate": "2020-10-22T14:50:56Z", "message": "[StreamingCore] use atomic (to replace volatile)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4dff1b81f409afccf126b435968827eaca53811a", "author": {"user": null}, "url": "https://github.com/knowm/XChange/commit/4dff1b81f409afccf126b435968827eaca53811a", "committedDate": "2020-10-22T14:51:34Z", "message": "[Gemini] use ConcurrentHashMap"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "69359db3ebeadc4623d78a996a6f03622b725bc6", "author": {"user": null}, "url": "https://github.com/knowm/XChange/commit/69359db3ebeadc4623d78a996a6f03622b725bc6", "committedDate": "2020-10-22T15:50:05Z", "message": "[Streaming-Core] move \"ALL\" channel to [Coinbase]"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE1MDExMDMy", "url": "https://github.com/knowm/XChange/pull/3700#pullrequestreview-515011032", "createdAt": "2020-10-22T18:33:42Z", "commit": {"oid": "69359db3ebeadc4623d78a996a6f03622b725bc6"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQxODozMzo0M1rOHmuxyw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQxODozMzo0M1rOHmuxyw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDM3NDM0Nw==", "bodyText": "why are we leaving this commented out like this?", "url": "https://github.com/knowm/XChange/pull/3700#discussion_r510374347", "createdAt": "2020-10-22T18:33:43Z", "author": {"login": "walec51"}, "path": "xchange-stream-kraken/src/test/java/info/bitrich/xchangestream/kraken/KrakenManualExample.java", "diffHunk": "@@ -24,40 +24,40 @@ public static void main(String[] args) throws InterruptedException {\n     krakenExchange.connect().blockingAwait();\n \n     CurrencyPair bchUsdt = new CurrencyPair(Currency.BCH, Currency.getInstance(\"USD\"));\n-    Disposable btcEurOrderBookDis =\n-        krakenExchange\n-            .getStreamingMarketDataService()\n-            .getOrderBook(bchUsdt, 100)\n-            .subscribe(\n-                s -> {\n-                  LOG.info(\n-                      \"Received order book {}({},{}) ask[0] = {} bid[0] = {}\",\n-                      bchUsdt,\n-                      s.getAsks().size(),\n-                      s.getBids().size(),\n-                      s.getAsks().get(0),\n-                      s.getBids().get(0));\n-                },\n-                throwable -> {\n-                  LOG.error(\"Order book FAILED {}\", throwable.getMessage(), throwable);\n-                });\n-    Disposable btcUsdOrderBookDis =\n-        krakenExchange\n-            .getStreamingMarketDataService()\n-            .getOrderBook(CurrencyPair.BCH_EUR, 10)\n-            .subscribe(\n-                s -> {\n-                  LOG.info(\n-                      \"Received order book {}({},{}) ask[0] = {} bid[0] = {}\",\n-                      CurrencyPair.BCH_EUR,\n-                      s.getAsks().size(),\n-                      s.getBids().size(),\n-                      s.getAsks().get(0),\n-                      s.getBids().get(0));\n-                },\n-                throwable -> {\n-                  LOG.error(\"Order book FAILED {}\", throwable.getMessage(), throwable);\n-                });\n+//    Disposable btcEurOrderBookDis =\n+//        krakenExchange\n+//            .getStreamingMarketDataService()\n+//            .getOrderBook(bchUsdt, 100)\n+//            .subscribe(\n+//                s -> {\n+//                  LOG.info(\n+//                      \"Received order book {}({},{}) ask[0] = {} bid[0] = {}\",\n+//                      bchUsdt,\n+//                      s.getAsks().size(),\n+//                      s.getBids().size(),\n+//                      s.getAsks().get(0),\n+//                      s.getBids().get(0));\n+//                },\n+//                throwable -> {\n+//                  LOG.error(\"Order book FAILED {}\", throwable.getMessage(), throwable);\n+//                });\n+//    Disposable btcUsdOrderBookDis =\n+//        krakenExchange\n+//            .getStreamingMarketDataService()\n+//            .getOrderBook(CurrencyPair.BCH_EUR, 10)\n+//            .subscribe(\n+//                s -> {\n+//                  LOG.info(\n+//                      \"Received order book {}({},{}) ask[0] = {} bid[0] = {}\",\n+//                      CurrencyPair.BCH_EUR,\n+//                      s.getAsks().size(),\n+//                      s.getBids().size(),\n+//                      s.getAsks().get(0),\n+//                      s.getBids().get(0));\n+//                },\n+//                throwable -> {\n+//                  LOG.error(\"Order book FAILED {}\", throwable.getMessage(), throwable);\n+//                });", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "69359db3ebeadc4623d78a996a6f03622b725bc6"}, "originalPosition": 71}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE1MDEyODU5", "url": "https://github.com/knowm/XChange/pull/3700#pullrequestreview-515012859", "createdAt": "2020-10-22T18:36:14Z", "commit": {"oid": "69359db3ebeadc4623d78a996a6f03622b725bc6"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQxODozNjoxNFrOHmu3WA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQxODozNjoxNFrOHmu3WA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDM3NTc2OA==", "bodyText": "enum values should be uppercased", "url": "https://github.com/knowm/XChange/pull/3700#discussion_r510375768", "createdAt": "2020-10-22T18:36:14Z", "author": {"login": "walec51"}, "path": "xchange-stream-service-netty/src/main/java/info/bitrich/xchangestream/service/netty/ConnectionStateModel.java", "diffHunk": "@@ -0,0 +1,37 @@\n+package info.bitrich.xchangestream.service.netty;\n+\n+import io.reactivex.Observable;\n+import io.reactivex.subjects.BehaviorSubject;\n+import io.reactivex.subjects.Subject;\n+import java.util.concurrent.atomic.AtomicReference;\n+\n+/**\n+ * The simplest Connection state model possible (maybe someone wants to add authenticated,\n+ * connecting, etc...)\n+ */\n+public final class ConnectionStateModel {\n+\n+  public enum State {\n+    closed,\n+    open", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "69359db3ebeadc4623d78a996a6f03622b725bc6"}, "originalPosition": 16}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ac60bbd71e498dcfa52762b8225c99f7e7be7151", "author": {"user": null}, "url": "https://github.com/knowm/XChange/commit/ac60bbd71e498dcfa52762b8225c99f7e7be7151", "committedDate": "2020-10-24T17:01:47Z", "message": "[Kraken] uncomment example code (that was commented only for a test)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8d237f7d3eb7ddb854683614a40fbe3ac2de8588", "author": {"user": null}, "url": "https://github.com/knowm/XChange/commit/8d237f7d3eb7ddb854683614a40fbe3ac2de8588", "committedDate": "2020-10-24T17:03:31Z", "message": "[Kraken] ConnectionStateModel.State to upper case for enum values"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a909c5cbb40dbec92f2dbee4eab28d7639a73455", "author": {"user": null}, "url": "https://github.com/knowm/XChange/commit/a909c5cbb40dbec92f2dbee4eab28d7639a73455", "committedDate": "2020-10-24T17:08:44Z", "message": "[BitMex] ah final was on another change list"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2512, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}