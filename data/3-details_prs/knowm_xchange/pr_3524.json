{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIwNTAwNTgy", "number": 3524, "title": "Added btcmarkets streaming code", "bodyText": "", "createdAt": "2020-05-20T04:36:48Z", "url": "https://github.com/knowm/XChange/pull/3524", "merged": true, "mergeCommit": {"oid": "a591813e93f14a59d209c300f5206e4979e29d85"}, "closed": true, "closedAt": "2020-05-21T19:57:22Z", "author": {"login": "nielsdraaisma"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcjCqt5ABqjMzNTQ4Mjg2MTg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcjTNeogH2gAyNDIwNTAwNTgyOmFlYjZlZDYwZjViNTFjOGI1MjBjNGRkMWVjYmQ4ZTgxZTU0OWRjZGM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7cae64e2dad58cc326068d685878f9bb38eca84b", "author": {"user": null}, "url": "https://github.com/knowm/XChange/commit/7cae64e2dad58cc326068d685878f9bb38eca84b", "committedDate": "2020-05-20T04:35:13Z", "message": "Initial commit of btcmarkets streaming code"}, "afterCommit": {"oid": "e9e396ddb0b22ddbe1f88a6e105e9c8b9aab9798", "author": {"user": {"login": "nielsdraaisma", "name": "Niels Draaisma"}}, "url": "https://github.com/knowm/XChange/commit/e9e396ddb0b22ddbe1f88a6e105e9c8b9aab9798", "committedDate": "2020-05-20T05:59:25Z", "message": "Initial commit of btcmarkets streaming code"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d38b11a966c726cd3ab839e69d8bbde86fe490fc", "author": {"user": {"login": "nielsdraaisma", "name": "Niels Draaisma"}}, "url": "https://github.com/knowm/XChange/commit/d38b11a966c726cd3ab839e69d8bbde86fe490fc", "committedDate": "2020-05-20T06:14:13Z", "message": "Initial commit of btcmarkets streaming code"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e9e396ddb0b22ddbe1f88a6e105e9c8b9aab9798", "author": {"user": {"login": "nielsdraaisma", "name": "Niels Draaisma"}}, "url": "https://github.com/knowm/XChange/commit/e9e396ddb0b22ddbe1f88a6e105e9c8b9aab9798", "committedDate": "2020-05-20T05:59:25Z", "message": "Initial commit of btcmarkets streaming code"}, "afterCommit": {"oid": "d38b11a966c726cd3ab839e69d8bbde86fe490fc", "author": {"user": {"login": "nielsdraaisma", "name": "Niels Draaisma"}}, "url": "https://github.com/knowm/XChange/commit/d38b11a966c726cd3ab839e69d8bbde86fe490fc", "committedDate": "2020-05-20T06:14:13Z", "message": "Initial commit of btcmarkets streaming code"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE1NjY1ODA4", "url": "https://github.com/knowm/XChange/pull/3524#pullrequestreview-415665808", "createdAt": "2020-05-20T19:52:50Z", "commit": {"oid": "d38b11a966c726cd3ab839e69d8bbde86fe490fc"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxOTo1Mjo1MVrOGYbhEQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQyMDoxMToxNVrOGYcHWQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODI2OTg0MQ==", "bodyText": "XChange uses logback rather than log4j, so this won't do anything.", "url": "https://github.com/knowm/XChange/pull/3524#discussion_r428269841", "createdAt": "2020-05-20T19:52:51Z", "author": {"login": "badgerwithagun"}, "path": "xchange-stream-btcmarkets/src/test/resources/log4j2.xml", "diffHunk": "@@ -0,0 +1,15 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d38b11a966c726cd3ab839e69d8bbde86fe490fc"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODI3MjU1OQ==", "bodyText": "Could you make these List<List<BigDecimal>>?", "url": "https://github.com/knowm/XChange/pull/3524#discussion_r428272559", "createdAt": "2020-05-20T19:57:58Z", "author": {"login": "badgerwithagun"}, "path": "xchange-stream-btcmarkets/src/main/java/info/bitrich/xchangestream/btcmarkets/dto/BTCMarketsWebSocketOrderbookMessage.java", "diffHunk": "@@ -0,0 +1,28 @@\n+package info.bitrich.xchangestream.btcmarkets.dto;\n+\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import java.util.List;\n+\n+public class BTCMarketsWebSocketOrderbookMessage {\n+  public final String marketId;\n+\n+  public final String timestamp;\n+\n+  public final List<List<String>> bids;\n+  public final List<List<String>> asks;\n+\n+  public final String messageType;\n+\n+  public BTCMarketsWebSocketOrderbookMessage(\n+      @JsonProperty(\"marketId\") String marketId,\n+      @JsonProperty(\"timestamp\") String timestamp,\n+      @JsonProperty(\"bids\") List<List<String>> bids,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d38b11a966c726cd3ab839e69d8bbde86fe490fc"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODI3Mjg2Mw==", "bodyText": "Does this need to be public?", "url": "https://github.com/knowm/XChange/pull/3524#discussion_r428272863", "createdAt": "2020-05-20T19:58:31Z", "author": {"login": "badgerwithagun"}, "path": "xchange-stream-btcmarkets/src/main/java/info/bitrich/xchangestream/btcmarkets/service/BTCMarketsStreamingDigest.java", "diffHunk": "@@ -0,0 +1,32 @@\n+package info.bitrich.xchangestream.btcmarkets.service;\n+\n+import java.nio.charset.Charset;\n+import java.nio.charset.StandardCharsets;\n+import java.security.InvalidKeyException;\n+import java.security.NoSuchAlgorithmException;\n+import java.util.Base64;\n+import javax.crypto.Mac;\n+import javax.crypto.spec.SecretKeySpec;\n+import org.knowm.xchange.utils.Assert;\n+\n+public class BTCMarketsStreamingDigest {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d38b11a966c726cd3ab839e69d8bbde86fe490fc"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODI3MzIxOA==", "bodyText": "Could this be co-located with the services and lowered to default visibility?", "url": "https://github.com/knowm/XChange/pull/3524#discussion_r428273218", "createdAt": "2020-05-20T19:59:16Z", "author": {"login": "badgerwithagun"}, "path": "xchange-stream-btcmarkets/src/main/java/info/bitrich/xchangestream/btcmarkets/BTCMarketsStreamingAdapters.java", "diffHunk": "@@ -0,0 +1,44 @@\n+package info.bitrich.xchangestream.btcmarkets;\n+\n+import com.fasterxml.jackson.databind.exc.InvalidFormatException;\n+import info.bitrich.xchangestream.btcmarkets.dto.BTCMarketsWebSocketOrderbookMessage;\n+import java.math.BigDecimal;\n+import java.util.List;\n+import java.util.function.BiFunction;\n+import java.util.stream.Collectors;\n+import org.knowm.xchange.currency.CurrencyPair;\n+import org.knowm.xchange.dto.Order;\n+import org.knowm.xchange.dto.marketdata.OrderBook;\n+import org.knowm.xchange.dto.trade.LimitOrder;\n+import org.knowm.xchange.utils.DateUtils;\n+\n+public class BTCMarketsStreamingAdapters {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d38b11a966c726cd3ab839e69d8bbde86fe490fc"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODI3NDI4Ng==", "bodyText": "could simplify this to marketId.equals(orderEvent.marketId) and lose the null check", "url": "https://github.com/knowm/XChange/pull/3524#discussion_r428274286", "createdAt": "2020-05-20T20:01:27Z", "author": {"login": "badgerwithagun"}, "path": "xchange-stream-btcmarkets/src/main/java/info/bitrich/xchangestream/btcmarkets/service/BTCMarketsStreamingMarketDataService.java", "diffHunk": "@@ -0,0 +1,52 @@\n+package info.bitrich.xchangestream.btcmarkets.service;\n+\n+import static info.bitrich.xchangestream.btcmarkets.service.BTCMarketsStreamingService.CHANNEL_ORDERBOOK;\n+\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.databind.exc.InvalidFormatException;\n+import info.bitrich.xchangestream.btcmarkets.BTCMarketsStreamingAdapters;\n+import info.bitrich.xchangestream.btcmarkets.dto.BTCMarketsWebSocketOrderbookMessage;\n+import info.bitrich.xchangestream.core.StreamingMarketDataService;\n+import info.bitrich.xchangestream.service.netty.StreamingObjectMapperHelper;\n+import io.reactivex.Observable;\n+import org.knowm.xchange.currency.CurrencyPair;\n+import org.knowm.xchange.dto.marketdata.OrderBook;\n+import org.knowm.xchange.dto.marketdata.Ticker;\n+import org.knowm.xchange.dto.marketdata.Trade;\n+import org.knowm.xchange.exceptions.NotAvailableFromExchangeException;\n+\n+public class BTCMarketsStreamingMarketDataService implements StreamingMarketDataService {\n+\n+  private final ObjectMapper mapper = StreamingObjectMapperHelper.getObjectMapper();\n+\n+  private final BTCMarketsStreamingService service;\n+\n+  public BTCMarketsStreamingMarketDataService(BTCMarketsStreamingService service) {\n+    this.service = service;\n+  }\n+\n+  private OrderBook handleOrderbookMessage(BTCMarketsWebSocketOrderbookMessage message)\n+      throws InvalidFormatException {\n+    return BTCMarketsStreamingAdapters.adaptOrderbookMessageToOrderbook(message);\n+  }\n+\n+  @Override\n+  public Observable<OrderBook> getOrderBook(CurrencyPair currencyPair, Object... args) {\n+    String marketId = BTCMarketsStreamingAdapters.adaptCurrencyPairToMarketId(currencyPair);\n+    return service\n+        .subscribeChannel(CHANNEL_ORDERBOOK, marketId)\n+        .map(node -> mapper.treeToValue(node, BTCMarketsWebSocketOrderbookMessage.class))\n+        .filter(orderEvent -> orderEvent.marketId != null && orderEvent.marketId.equals(marketId))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d38b11a966c726cd3ab839e69d8bbde86fe490fc"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODI3NjQ0NQ==", "bodyText": "Do these need to be public?", "url": "https://github.com/knowm/XChange/pull/3524#discussion_r428276445", "createdAt": "2020-05-20T20:05:23Z", "author": {"login": "badgerwithagun"}, "path": "xchange-stream-btcmarkets/src/main/java/info/bitrich/xchangestream/btcmarkets/service/BTCMarketsStreamingService.java", "diffHunk": "@@ -0,0 +1,70 @@\n+package info.bitrich.xchangestream.btcmarkets.service;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.google.common.collect.Lists;\n+import com.google.common.collect.Sets;\n+import info.bitrich.xchangestream.btcmarkets.dto.BTCMarketsWebSocketSubscribeMessage;\n+import info.bitrich.xchangestream.service.netty.JsonNettyStreamingService;\n+import java.io.IOException;\n+import java.util.ArrayList;\n+import java.util.Set;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public class BTCMarketsStreamingService extends JsonNettyStreamingService {\n+  public static final String CHANNEL_ORDERBOOK = \"orderbook\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d38b11a966c726cd3ab839e69d8bbde86fe490fc"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODI3NjU3Nw==", "bodyText": "Does this class itself need to be public?", "url": "https://github.com/knowm/XChange/pull/3524#discussion_r428276577", "createdAt": "2020-05-20T20:05:38Z", "author": {"login": "badgerwithagun"}, "path": "xchange-stream-btcmarkets/src/main/java/info/bitrich/xchangestream/btcmarkets/service/BTCMarketsStreamingService.java", "diffHunk": "@@ -0,0 +1,70 @@\n+package info.bitrich.xchangestream.btcmarkets.service;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.google.common.collect.Lists;\n+import com.google.common.collect.Sets;\n+import info.bitrich.xchangestream.btcmarkets.dto.BTCMarketsWebSocketSubscribeMessage;\n+import info.bitrich.xchangestream.service.netty.JsonNettyStreamingService;\n+import java.io.IOException;\n+import java.util.ArrayList;\n+import java.util.Set;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public class BTCMarketsStreamingService extends JsonNettyStreamingService {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d38b11a966c726cd3ab839e69d8bbde86fe490fc"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODI3OTY0MQ==", "bodyText": "Looks like there should be a subscribedOrderbooks.remove() here.\nnit: Setting up subscribedOrderbooks in the get...Message methods seems unsafe, but I can't see an obvious cleaner way. It's not the ideal websocket API, so I'm not too bothered.", "url": "https://github.com/knowm/XChange/pull/3524#discussion_r428279641", "createdAt": "2020-05-20T20:11:15Z", "author": {"login": "badgerwithagun"}, "path": "xchange-stream-btcmarkets/src/main/java/info/bitrich/xchangestream/btcmarkets/service/BTCMarketsStreamingService.java", "diffHunk": "@@ -0,0 +1,70 @@\n+package info.bitrich.xchangestream.btcmarkets.service;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.google.common.collect.Lists;\n+import com.google.common.collect.Sets;\n+import info.bitrich.xchangestream.btcmarkets.dto.BTCMarketsWebSocketSubscribeMessage;\n+import info.bitrich.xchangestream.service.netty.JsonNettyStreamingService;\n+import java.io.IOException;\n+import java.util.ArrayList;\n+import java.util.Set;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public class BTCMarketsStreamingService extends JsonNettyStreamingService {\n+  public static final String CHANNEL_ORDERBOOK = \"orderbook\";\n+  public static final String CHANNEL_HEARTBEAT = \"heartbeat\";\n+  private static final Logger LOG = LoggerFactory.getLogger(BTCMarketsStreamingService.class);\n+  private final Set<String> subscribedOrderbooks = Sets.newConcurrentHashSet();\n+\n+  public BTCMarketsStreamingService(String apiUrl) {\n+    super(apiUrl);\n+  }\n+\n+  private BTCMarketsWebSocketSubscribeMessage buildSubscribeMessage() {\n+    return new BTCMarketsWebSocketSubscribeMessage(\n+        new ArrayList<>(subscribedOrderbooks),\n+        Lists.newArrayList(CHANNEL_ORDERBOOK, CHANNEL_HEARTBEAT),\n+        null,\n+        null,\n+        null);\n+  }\n+\n+  @Override\n+  protected String getChannelNameFromMessage(JsonNode message) {\n+    final String messageType = message.get(\"messageType\").asText();\n+    if (messageType.startsWith(CHANNEL_ORDERBOOK)) {\n+      return messageType + \":\" + message.get(\"marketId\").asText();\n+    }\n+    return messageType;\n+  }\n+\n+  @Override\n+  public String getSubscribeMessage(String channelName, Object... args) throws IOException {\n+    if (CHANNEL_ORDERBOOK.equals(channelName)) {\n+      subscribedOrderbooks.add(args[0].toString());\n+      LOG.debug(\"Now subscribed to orderbooks {}\", subscribedOrderbooks);\n+      return objectMapper.writeValueAsString(buildSubscribeMessage());\n+    } else {\n+      throw new IllegalArgumentException(\n+          \"Can't create subscribe messsage for channel \" + channelName);\n+    }\n+  }\n+\n+  public String getSubscriptionUniqueId(String channelName, Object... args) {\n+    if (CHANNEL_ORDERBOOK.equals(channelName)) {\n+      return channelName + \":\" + args[0].toString();\n+    }\n+    return channelName;\n+  }\n+\n+  @Override\n+  public String getUnsubscribeMessage(String channelName) throws IOException {\n+    if (channelName.startsWith(CHANNEL_ORDERBOOK)) {\n+      final String[] parts = channelName.split(\":\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d38b11a966c726cd3ab839e69d8bbde86fe490fc"}, "originalPosition": 64}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9635863206dd6189cbec8425348d1d0defc6bd62", "author": {"user": {"login": "nielsdraaisma", "name": "Niels Draaisma"}}, "url": "https://github.com/knowm/XChange/commit/9635863206dd6189cbec8425348d1d0defc6bd62", "committedDate": "2020-05-21T00:37:10Z", "message": "[btcmarkets] Code review fixes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "aeb6ed60f5b51c8b520c4dd1ecbd8e81e549dcdc", "author": {"user": {"login": "nielsdraaisma", "name": "Niels Draaisma"}}, "url": "https://github.com/knowm/XChange/commit/aeb6ed60f5b51c8b520c4dd1ecbd8e81e549dcdc", "committedDate": "2020-05-21T01:16:21Z", "message": "[btcmarkets] Moved streaming code to single package"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2560, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}