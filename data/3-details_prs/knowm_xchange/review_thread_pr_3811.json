{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIxNzUyMTgx", "number": 3811, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QxNzoyMzozM1rOE6IaLw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQyMDo0MTowMFrOE6wdCA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI5MzkwNjM5OnYy", "diffSide": "RIGHT", "path": "xchange-upbit/src/main/java/org/knowm/xchange/upbit/UpbitUtils.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QxNzoyMzozM1rOH1Aiaw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQxODozNjoxN1rOH18psQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTM0NTM4Nw==", "bodyText": "This isn't needed", "url": "https://github.com/knowm/XChange/pull/3811#discussion_r525345387", "createdAt": "2020-11-17T17:23:33Z", "author": {"login": "earce"}, "path": "xchange-upbit/src/main/java/org/knowm/xchange/upbit/UpbitUtils.java", "diffHunk": "@@ -0,0 +1,26 @@\n+package org.knowm.xchange.upbit;\n+\n+import org.knowm.xchange.currency.CurrencyPair;\n+\n+public class UpbitUtils {\n+\n+  public static final String MARKET_NAME_SEPARATOR = \"-\";\n+\n+  private UpbitUtils() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cae89c10faf94570966784cf4f2615e65ce53403"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjI5Mzg2Ng==", "bodyText": "Do you mean that private constructor is not neseccery?", "url": "https://github.com/knowm/XChange/pull/3811#discussion_r526293866", "createdAt": "2020-11-18T17:41:57Z", "author": {"login": "aaron-jang"}, "path": "xchange-upbit/src/main/java/org/knowm/xchange/upbit/UpbitUtils.java", "diffHunk": "@@ -0,0 +1,26 @@\n+package org.knowm.xchange.upbit;\n+\n+import org.knowm.xchange.currency.CurrencyPair;\n+\n+public class UpbitUtils {\n+\n+  public static final String MARKET_NAME_SEPARATOR = \"-\";\n+\n+  private UpbitUtils() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTM0NTM4Nw=="}, "originalCommit": {"oid": "cae89c10faf94570966784cf4f2615e65ce53403"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjMwMzA1Mw==", "bodyText": "Yes, it's really about enforcing so that static classes can't be sub classed, final on the class should accomplish the same thing, but neither is necessary.", "url": "https://github.com/knowm/XChange/pull/3811#discussion_r526303053", "createdAt": "2020-11-18T17:54:39Z", "author": {"login": "earce"}, "path": "xchange-upbit/src/main/java/org/knowm/xchange/upbit/UpbitUtils.java", "diffHunk": "@@ -0,0 +1,26 @@\n+package org.knowm.xchange.upbit;\n+\n+import org.knowm.xchange.currency.CurrencyPair;\n+\n+public class UpbitUtils {\n+\n+  public static final String MARKET_NAME_SEPARATOR = \"-\";\n+\n+  private UpbitUtils() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTM0NTM4Nw=="}, "originalCommit": {"oid": "cae89c10faf94570966784cf4f2615e65ce53403"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjMzMDI4OQ==", "bodyText": "Removed.", "url": "https://github.com/knowm/XChange/pull/3811#discussion_r526330289", "createdAt": "2020-11-18T18:36:17Z", "author": {"login": "aaron-jang"}, "path": "xchange-upbit/src/main/java/org/knowm/xchange/upbit/UpbitUtils.java", "diffHunk": "@@ -0,0 +1,26 @@\n+package org.knowm.xchange.upbit;\n+\n+import org.knowm.xchange.currency.CurrencyPair;\n+\n+public class UpbitUtils {\n+\n+  public static final String MARKET_NAME_SEPARATOR = \"-\";\n+\n+  private UpbitUtils() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTM0NTM4Nw=="}, "originalCommit": {"oid": "cae89c10faf94570966784cf4f2615e65ce53403"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI5MzkwOTMzOnYy", "diffSide": "RIGHT", "path": "xchange-upbit/src/main/java/org/knowm/xchange/upbit/UpbitUtils.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QxNzoyNDoxNVrOH1AkMg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQxNzozOTozMlrOH16N7g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTM0NTg0Mg==", "bodyText": "is this index order correct (1 then 0)? Seems to be the opposite of what I am seeing in public static OrderBook adaptOrderBook(UpbitOrderBooks upbitOrderBooks)", "url": "https://github.com/knowm/XChange/pull/3811#discussion_r525345842", "createdAt": "2020-11-17T17:24:15Z", "author": {"login": "earce"}, "path": "xchange-upbit/src/main/java/org/knowm/xchange/upbit/UpbitUtils.java", "diffHunk": "@@ -0,0 +1,26 @@\n+package org.knowm.xchange.upbit;\n+\n+import org.knowm.xchange.currency.CurrencyPair;\n+\n+public class UpbitUtils {\n+\n+  public static final String MARKET_NAME_SEPARATOR = \"-\";\n+\n+  private UpbitUtils() {\n+    // not called\n+  }\n+\n+  public static String toPairString(CurrencyPair currencyPair) {\n+    if (currencyPair == null) return null;\n+    return currencyPair.counter.getCurrencyCode().toUpperCase()\n+        + MARKET_NAME_SEPARATOR\n+        + currencyPair.base.getCurrencyCode().toUpperCase();\n+  }\n+\n+  public static CurrencyPair toCurrencyPair(String pairString) {\n+    if (pairString == null) return null;\n+    String[] pairStringSplit = pairString.split(MARKET_NAME_SEPARATOR);\n+    if (pairStringSplit.length != 2) return null;\n+    return new CurrencyPair(pairStringSplit[1], pairStringSplit[0]);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cae89c10faf94570966784cf4f2615e65ce53403"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjI5MDQxNA==", "bodyText": "There was a bug in the previous code.\nCheck out the api below.\n\nhttps://api.upbit.com/v1/trades/ticks?market=BTC-ETH (success)\nhttps://api.upbit.com/v1/trades/ticks?market=ETH-BTC (fail)\n\nbase: ETH (index 1)\ncounter: BTH(index 0)", "url": "https://github.com/knowm/XChange/pull/3811#discussion_r526290414", "createdAt": "2020-11-18T17:39:32Z", "author": {"login": "aaron-jang"}, "path": "xchange-upbit/src/main/java/org/knowm/xchange/upbit/UpbitUtils.java", "diffHunk": "@@ -0,0 +1,26 @@\n+package org.knowm.xchange.upbit;\n+\n+import org.knowm.xchange.currency.CurrencyPair;\n+\n+public class UpbitUtils {\n+\n+  public static final String MARKET_NAME_SEPARATOR = \"-\";\n+\n+  private UpbitUtils() {\n+    // not called\n+  }\n+\n+  public static String toPairString(CurrencyPair currencyPair) {\n+    if (currencyPair == null) return null;\n+    return currencyPair.counter.getCurrencyCode().toUpperCase()\n+        + MARKET_NAME_SEPARATOR\n+        + currencyPair.base.getCurrencyCode().toUpperCase();\n+  }\n+\n+  public static CurrencyPair toCurrencyPair(String pairString) {\n+    if (pairString == null) return null;\n+    String[] pairStringSplit = pairString.split(MARKET_NAME_SEPARATOR);\n+    if (pairStringSplit.length != 2) return null;\n+    return new CurrencyPair(pairStringSplit[1], pairStringSplit[0]);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTM0NTg0Mg=="}, "originalCommit": {"oid": "cae89c10faf94570966784cf4f2615e65ce53403"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI5MzkyNDQzOnYy", "diffSide": "RIGHT", "path": "xchange-upbit/src/main/java/org/knowm/xchange/upbit/UpbitAdapters.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QxNzoyNzo0N1rOH1AtXg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQxNzozMjozMVrOH15cjw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTM0ODE5MA==", "bodyText": "put the ask on the left side for NPE protection", "url": "https://github.com/knowm/XChange/pull/3811#discussion_r525348190", "createdAt": "2020-11-17T17:27:47Z", "author": {"login": "earce"}, "path": "xchange-upbit/src/main/java/org/knowm/xchange/upbit/UpbitAdapters.java", "diffHunk": "@@ -131,27 +138,27 @@ public static Order adaptOrderInfo(UpbitOrderResponse upbitOrderResponse) {\n     } else if (upbitOrderResponse.getState().equalsIgnoreCase(\"done\")) {\n       status = Order.OrderStatus.FILLED;\n     }\n-    OrderType type = upbitOrderResponse.getSide().equals(\"ask\") ? OrderType.ASK : OrderType.BID;\n-    BigDecimal originalAmount = upbitOrderResponse.getVolume();\n-    String[] markets = upbitOrderResponse.getMarket().split(\"-\");\n-    CurrencyPair currencyPair =\n-        new CurrencyPair(new Currency(markets[1]), new Currency(markets[0]));\n-    String orderId = upbitOrderResponse.getUuid();\n-    BigDecimal cumulativeAmount = upbitOrderResponse.getExecutedVolume();\n-    BigDecimal price = upbitOrderResponse.getAvgPrice();\n-    ZonedDateTime dateTime = ZonedDateTime.parse(upbitOrderResponse.getCreatedAt());\n-    LimitOrder order =\n-        new LimitOrder(\n-            type,\n-            originalAmount,\n-            currencyPair,\n-            orderId,\n-            Date.from(dateTime.toInstant()),\n-            price,\n-            price,\n-            cumulativeAmount,\n-            upbitOrderResponse.getPaidFee(),\n-            status);\n-    return order;\n+    return new LimitOrder(\n+        upbitOrderResponse.getSide().equals(\"ask\") ? OrderType.ASK : OrderType.BID,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cae89c10faf94570966784cf4f2615e65ce53403"}, "originalPosition": 95}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjI3Nzc3NQ==", "bodyText": "fixed.", "url": "https://github.com/knowm/XChange/pull/3811#discussion_r526277775", "createdAt": "2020-11-18T17:32:31Z", "author": {"login": "aaron-jang"}, "path": "xchange-upbit/src/main/java/org/knowm/xchange/upbit/UpbitAdapters.java", "diffHunk": "@@ -131,27 +138,27 @@ public static Order adaptOrderInfo(UpbitOrderResponse upbitOrderResponse) {\n     } else if (upbitOrderResponse.getState().equalsIgnoreCase(\"done\")) {\n       status = Order.OrderStatus.FILLED;\n     }\n-    OrderType type = upbitOrderResponse.getSide().equals(\"ask\") ? OrderType.ASK : OrderType.BID;\n-    BigDecimal originalAmount = upbitOrderResponse.getVolume();\n-    String[] markets = upbitOrderResponse.getMarket().split(\"-\");\n-    CurrencyPair currencyPair =\n-        new CurrencyPair(new Currency(markets[1]), new Currency(markets[0]));\n-    String orderId = upbitOrderResponse.getUuid();\n-    BigDecimal cumulativeAmount = upbitOrderResponse.getExecutedVolume();\n-    BigDecimal price = upbitOrderResponse.getAvgPrice();\n-    ZonedDateTime dateTime = ZonedDateTime.parse(upbitOrderResponse.getCreatedAt());\n-    LimitOrder order =\n-        new LimitOrder(\n-            type,\n-            originalAmount,\n-            currencyPair,\n-            orderId,\n-            Date.from(dateTime.toInstant()),\n-            price,\n-            price,\n-            cumulativeAmount,\n-            upbitOrderResponse.getPaidFee(),\n-            status);\n-    return order;\n+    return new LimitOrder(\n+        upbitOrderResponse.getSide().equals(\"ask\") ? OrderType.ASK : OrderType.BID,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTM0ODE5MA=="}, "originalCommit": {"oid": "cae89c10faf94570966784cf4f2615e65ce53403"}, "originalPosition": 95}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI5OTgzODQ3OnYy", "diffSide": "RIGHT", "path": "xchange-upbit/src/main/java/org/knowm/xchange/upbit/UpbitAdapters.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQxNzo1OTo0NlrOH17PAA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQxODozNjozM1rOH18qQw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjMwNzA3Mg==", "bodyText": "also sorry missed this but can you use the builder class that limit order has to do this", "url": "https://github.com/knowm/XChange/pull/3811#discussion_r526307072", "createdAt": "2020-11-18T17:59:46Z", "author": {"login": "earce"}, "path": "xchange-upbit/src/main/java/org/knowm/xchange/upbit/UpbitAdapters.java", "diffHunk": "@@ -130,28 +137,30 @@ public static Order adaptOrderInfo(UpbitOrderResponse upbitOrderResponse) {\n       status = Order.OrderStatus.PARTIALLY_FILLED;\n     } else if (upbitOrderResponse.getState().equalsIgnoreCase(\"done\")) {\n       status = Order.OrderStatus.FILLED;\n+    } else {\n+      status = Order.OrderStatus.NEW;\n     }\n-    OrderType type = upbitOrderResponse.getSide().equals(\"ask\") ? OrderType.ASK : OrderType.BID;\n-    BigDecimal originalAmount = upbitOrderResponse.getVolume();\n-    String[] markets = upbitOrderResponse.getMarket().split(\"-\");\n-    CurrencyPair currencyPair =\n-        new CurrencyPair(new Currency(markets[1]), new Currency(markets[0]));\n-    String orderId = upbitOrderResponse.getUuid();\n-    BigDecimal cumulativeAmount = upbitOrderResponse.getExecutedVolume();\n-    BigDecimal price = upbitOrderResponse.getAvgPrice();\n-    ZonedDateTime dateTime = ZonedDateTime.parse(upbitOrderResponse.getCreatedAt());\n-    LimitOrder order =\n-        new LimitOrder(\n-            type,\n-            originalAmount,\n-            currencyPair,\n-            orderId,\n-            Date.from(dateTime.toInstant()),\n-            price,\n-            price,\n-            cumulativeAmount,\n-            upbitOrderResponse.getPaidFee(),\n-            status);\n-    return order;\n+    return new LimitOrder(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "84fa9f0255cf4fc20bd542dc7ef5ee2907fc289c"}, "originalPosition": 106}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjMzMDQzNQ==", "bodyText": "Fixed.", "url": "https://github.com/knowm/XChange/pull/3811#discussion_r526330435", "createdAt": "2020-11-18T18:36:33Z", "author": {"login": "aaron-jang"}, "path": "xchange-upbit/src/main/java/org/knowm/xchange/upbit/UpbitAdapters.java", "diffHunk": "@@ -130,28 +137,30 @@ public static Order adaptOrderInfo(UpbitOrderResponse upbitOrderResponse) {\n       status = Order.OrderStatus.PARTIALLY_FILLED;\n     } else if (upbitOrderResponse.getState().equalsIgnoreCase(\"done\")) {\n       status = Order.OrderStatus.FILLED;\n+    } else {\n+      status = Order.OrderStatus.NEW;\n     }\n-    OrderType type = upbitOrderResponse.getSide().equals(\"ask\") ? OrderType.ASK : OrderType.BID;\n-    BigDecimal originalAmount = upbitOrderResponse.getVolume();\n-    String[] markets = upbitOrderResponse.getMarket().split(\"-\");\n-    CurrencyPair currencyPair =\n-        new CurrencyPair(new Currency(markets[1]), new Currency(markets[0]));\n-    String orderId = upbitOrderResponse.getUuid();\n-    BigDecimal cumulativeAmount = upbitOrderResponse.getExecutedVolume();\n-    BigDecimal price = upbitOrderResponse.getAvgPrice();\n-    ZonedDateTime dateTime = ZonedDateTime.parse(upbitOrderResponse.getCreatedAt());\n-    LimitOrder order =\n-        new LimitOrder(\n-            type,\n-            originalAmount,\n-            currencyPair,\n-            orderId,\n-            Date.from(dateTime.toInstant()),\n-            price,\n-            price,\n-            cumulativeAmount,\n-            upbitOrderResponse.getPaidFee(),\n-            status);\n-    return order;\n+    return new LimitOrder(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjMwNzA3Mg=="}, "originalCommit": {"oid": "84fa9f0255cf4fc20bd542dc7ef5ee2907fc289c"}, "originalPosition": 106}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwMDQ1NTI2OnYy", "diffSide": "RIGHT", "path": "xchange-upbit/src/main/java/org/knowm/xchange/upbit/UpbitAdapters.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQyMDozNzozN1rOH2BMOQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQyMzo1NDoyMFrOH22syg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjQwNDY2NQ==", "bodyText": "is there a reason why you aren't using cp here?", "url": "https://github.com/knowm/XChange/pull/3811#discussion_r526404665", "createdAt": "2020-11-18T20:37:37Z", "author": {"login": "earce"}, "path": "xchange-upbit/src/main/java/org/knowm/xchange/upbit/UpbitAdapters.java", "diffHunk": "@@ -130,28 +136,32 @@ public static Order adaptOrderInfo(UpbitOrderResponse upbitOrderResponse) {\n       status = Order.OrderStatus.PARTIALLY_FILLED;\n     } else if (upbitOrderResponse.getState().equalsIgnoreCase(\"done\")) {\n       status = Order.OrderStatus.FILLED;\n+    } else {\n+      status = Order.OrderStatus.NEW;\n     }\n-    OrderType type = upbitOrderResponse.getSide().equals(\"ask\") ? OrderType.ASK : OrderType.BID;\n-    BigDecimal originalAmount = upbitOrderResponse.getVolume();\n-    String[] markets = upbitOrderResponse.getMarket().split(\"-\");\n-    CurrencyPair currencyPair =\n-        new CurrencyPair(new Currency(markets[1]), new Currency(markets[0]));\n-    String orderId = upbitOrderResponse.getUuid();\n-    BigDecimal cumulativeAmount = upbitOrderResponse.getExecutedVolume();\n-    BigDecimal price = upbitOrderResponse.getAvgPrice();\n-    ZonedDateTime dateTime = ZonedDateTime.parse(upbitOrderResponse.getCreatedAt());\n-    LimitOrder order =\n-        new LimitOrder(\n-            type,\n-            originalAmount,\n-            currencyPair,\n-            orderId,\n-            Date.from(dateTime.toInstant()),\n-            price,\n-            price,\n-            cumulativeAmount,\n-            upbitOrderResponse.getPaidFee(),\n-            status);\n-    return order;\n+\n+    final OrderType orderType = UpbitUtils.fromSide(upbitOrderResponse.getSide());\n+    final CurrencyPair currencyPair = UpbitUtils.toCurrencyPair(upbitOrderResponse.getMarket());\n+    return new LimitOrder.Builder(orderType, currencyPair)\n+        .originalAmount(upbitOrderResponse.getVolume())\n+        .id(upbitOrderResponse.getUuid())\n+        .timestamp(Date.from(ZonedDateTime.parse(upbitOrderResponse.getCreatedAt()).toInstant()))\n+        .limitPrice(upbitOrderResponse.getAvgPrice())\n+        .averagePrice(upbitOrderResponse.getAvgPrice())\n+        .cumulativeAmount(upbitOrderResponse.getExecutedVolume())\n+        .fee(upbitOrderResponse.getPaidFee())\n+        .orderStatus(status)\n+        .build();\n+  }\n+\n+  public static ExchangeMetaData adaptMetadata(List<UpbitMarket> markets) {\n+    Map<CurrencyPair, CurrencyPairMetaData> pairMeta =\n+        markets.stream()\n+            .map(UpbitMarket::getMarket)\n+            .map(UpbitUtils::toCurrencyPair)\n+            .collect(\n+                Collectors.toMap(\n+                    Function.identity(), cp -> new CurrencyPairMetaData.Builder().build()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3ad817e7ccd567c372ab8670af978d9b44f11214"}, "originalPosition": 156}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjg2NDE3MQ==", "bodyText": "The second argument of tomap is a function parameter, so I used cp only to receive an argument.\nIs there any way to recommend it?", "url": "https://github.com/knowm/XChange/pull/3811#discussion_r526864171", "createdAt": "2020-11-19T13:04:30Z", "author": {"login": "aaron-jang"}, "path": "xchange-upbit/src/main/java/org/knowm/xchange/upbit/UpbitAdapters.java", "diffHunk": "@@ -130,28 +136,32 @@ public static Order adaptOrderInfo(UpbitOrderResponse upbitOrderResponse) {\n       status = Order.OrderStatus.PARTIALLY_FILLED;\n     } else if (upbitOrderResponse.getState().equalsIgnoreCase(\"done\")) {\n       status = Order.OrderStatus.FILLED;\n+    } else {\n+      status = Order.OrderStatus.NEW;\n     }\n-    OrderType type = upbitOrderResponse.getSide().equals(\"ask\") ? OrderType.ASK : OrderType.BID;\n-    BigDecimal originalAmount = upbitOrderResponse.getVolume();\n-    String[] markets = upbitOrderResponse.getMarket().split(\"-\");\n-    CurrencyPair currencyPair =\n-        new CurrencyPair(new Currency(markets[1]), new Currency(markets[0]));\n-    String orderId = upbitOrderResponse.getUuid();\n-    BigDecimal cumulativeAmount = upbitOrderResponse.getExecutedVolume();\n-    BigDecimal price = upbitOrderResponse.getAvgPrice();\n-    ZonedDateTime dateTime = ZonedDateTime.parse(upbitOrderResponse.getCreatedAt());\n-    LimitOrder order =\n-        new LimitOrder(\n-            type,\n-            originalAmount,\n-            currencyPair,\n-            orderId,\n-            Date.from(dateTime.toInstant()),\n-            price,\n-            price,\n-            cumulativeAmount,\n-            upbitOrderResponse.getPaidFee(),\n-            status);\n-    return order;\n+\n+    final OrderType orderType = UpbitUtils.fromSide(upbitOrderResponse.getSide());\n+    final CurrencyPair currencyPair = UpbitUtils.toCurrencyPair(upbitOrderResponse.getMarket());\n+    return new LimitOrder.Builder(orderType, currencyPair)\n+        .originalAmount(upbitOrderResponse.getVolume())\n+        .id(upbitOrderResponse.getUuid())\n+        .timestamp(Date.from(ZonedDateTime.parse(upbitOrderResponse.getCreatedAt()).toInstant()))\n+        .limitPrice(upbitOrderResponse.getAvgPrice())\n+        .averagePrice(upbitOrderResponse.getAvgPrice())\n+        .cumulativeAmount(upbitOrderResponse.getExecutedVolume())\n+        .fee(upbitOrderResponse.getPaidFee())\n+        .orderStatus(status)\n+        .build();\n+  }\n+\n+  public static ExchangeMetaData adaptMetadata(List<UpbitMarket> markets) {\n+    Map<CurrencyPair, CurrencyPairMetaData> pairMeta =\n+        markets.stream()\n+            .map(UpbitMarket::getMarket)\n+            .map(UpbitUtils::toCurrencyPair)\n+            .collect(\n+                Collectors.toMap(\n+                    Function.identity(), cp -> new CurrencyPairMetaData.Builder().build()));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjQwNDY2NQ=="}, "originalCommit": {"oid": "3ad817e7ccd567c372ab8670af978d9b44f11214"}, "originalPosition": 156}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzA1NTAxMQ==", "bodyText": "I was wondering more like why did you not pass in anything to the CurrencyPairMetaData Builders like .set(currencyPair) before building it, otherwise it doesn't have any data. Is that intentional? If yes that is fine leave it as is.", "url": "https://github.com/knowm/XChange/pull/3811#discussion_r527055011", "createdAt": "2020-11-19T17:09:08Z", "author": {"login": "earce"}, "path": "xchange-upbit/src/main/java/org/knowm/xchange/upbit/UpbitAdapters.java", "diffHunk": "@@ -130,28 +136,32 @@ public static Order adaptOrderInfo(UpbitOrderResponse upbitOrderResponse) {\n       status = Order.OrderStatus.PARTIALLY_FILLED;\n     } else if (upbitOrderResponse.getState().equalsIgnoreCase(\"done\")) {\n       status = Order.OrderStatus.FILLED;\n+    } else {\n+      status = Order.OrderStatus.NEW;\n     }\n-    OrderType type = upbitOrderResponse.getSide().equals(\"ask\") ? OrderType.ASK : OrderType.BID;\n-    BigDecimal originalAmount = upbitOrderResponse.getVolume();\n-    String[] markets = upbitOrderResponse.getMarket().split(\"-\");\n-    CurrencyPair currencyPair =\n-        new CurrencyPair(new Currency(markets[1]), new Currency(markets[0]));\n-    String orderId = upbitOrderResponse.getUuid();\n-    BigDecimal cumulativeAmount = upbitOrderResponse.getExecutedVolume();\n-    BigDecimal price = upbitOrderResponse.getAvgPrice();\n-    ZonedDateTime dateTime = ZonedDateTime.parse(upbitOrderResponse.getCreatedAt());\n-    LimitOrder order =\n-        new LimitOrder(\n-            type,\n-            originalAmount,\n-            currencyPair,\n-            orderId,\n-            Date.from(dateTime.toInstant()),\n-            price,\n-            price,\n-            cumulativeAmount,\n-            upbitOrderResponse.getPaidFee(),\n-            status);\n-    return order;\n+\n+    final OrderType orderType = UpbitUtils.fromSide(upbitOrderResponse.getSide());\n+    final CurrencyPair currencyPair = UpbitUtils.toCurrencyPair(upbitOrderResponse.getMarket());\n+    return new LimitOrder.Builder(orderType, currencyPair)\n+        .originalAmount(upbitOrderResponse.getVolume())\n+        .id(upbitOrderResponse.getUuid())\n+        .timestamp(Date.from(ZonedDateTime.parse(upbitOrderResponse.getCreatedAt()).toInstant()))\n+        .limitPrice(upbitOrderResponse.getAvgPrice())\n+        .averagePrice(upbitOrderResponse.getAvgPrice())\n+        .cumulativeAmount(upbitOrderResponse.getExecutedVolume())\n+        .fee(upbitOrderResponse.getPaidFee())\n+        .orderStatus(status)\n+        .build();\n+  }\n+\n+  public static ExchangeMetaData adaptMetadata(List<UpbitMarket> markets) {\n+    Map<CurrencyPair, CurrencyPairMetaData> pairMeta =\n+        markets.stream()\n+            .map(UpbitMarket::getMarket)\n+            .map(UpbitUtils::toCurrencyPair)\n+            .collect(\n+                Collectors.toMap(\n+                    Function.identity(), cp -> new CurrencyPairMetaData.Builder().build()));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjQwNDY2NQ=="}, "originalCommit": {"oid": "3ad817e7ccd567c372ab8670af978d9b44f11214"}, "originalPosition": 156}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzI4MTM1NA==", "bodyText": "Yes, it was intended.\nCurrencyPairMetaData has no CurrencyPair field and no more values to fill in.", "url": "https://github.com/knowm/XChange/pull/3811#discussion_r527281354", "createdAt": "2020-11-19T23:54:20Z", "author": {"login": "aaron-jang"}, "path": "xchange-upbit/src/main/java/org/knowm/xchange/upbit/UpbitAdapters.java", "diffHunk": "@@ -130,28 +136,32 @@ public static Order adaptOrderInfo(UpbitOrderResponse upbitOrderResponse) {\n       status = Order.OrderStatus.PARTIALLY_FILLED;\n     } else if (upbitOrderResponse.getState().equalsIgnoreCase(\"done\")) {\n       status = Order.OrderStatus.FILLED;\n+    } else {\n+      status = Order.OrderStatus.NEW;\n     }\n-    OrderType type = upbitOrderResponse.getSide().equals(\"ask\") ? OrderType.ASK : OrderType.BID;\n-    BigDecimal originalAmount = upbitOrderResponse.getVolume();\n-    String[] markets = upbitOrderResponse.getMarket().split(\"-\");\n-    CurrencyPair currencyPair =\n-        new CurrencyPair(new Currency(markets[1]), new Currency(markets[0]));\n-    String orderId = upbitOrderResponse.getUuid();\n-    BigDecimal cumulativeAmount = upbitOrderResponse.getExecutedVolume();\n-    BigDecimal price = upbitOrderResponse.getAvgPrice();\n-    ZonedDateTime dateTime = ZonedDateTime.parse(upbitOrderResponse.getCreatedAt());\n-    LimitOrder order =\n-        new LimitOrder(\n-            type,\n-            originalAmount,\n-            currencyPair,\n-            orderId,\n-            Date.from(dateTime.toInstant()),\n-            price,\n-            price,\n-            cumulativeAmount,\n-            upbitOrderResponse.getPaidFee(),\n-            status);\n-    return order;\n+\n+    final OrderType orderType = UpbitUtils.fromSide(upbitOrderResponse.getSide());\n+    final CurrencyPair currencyPair = UpbitUtils.toCurrencyPair(upbitOrderResponse.getMarket());\n+    return new LimitOrder.Builder(orderType, currencyPair)\n+        .originalAmount(upbitOrderResponse.getVolume())\n+        .id(upbitOrderResponse.getUuid())\n+        .timestamp(Date.from(ZonedDateTime.parse(upbitOrderResponse.getCreatedAt()).toInstant()))\n+        .limitPrice(upbitOrderResponse.getAvgPrice())\n+        .averagePrice(upbitOrderResponse.getAvgPrice())\n+        .cumulativeAmount(upbitOrderResponse.getExecutedVolume())\n+        .fee(upbitOrderResponse.getPaidFee())\n+        .orderStatus(status)\n+        .build();\n+  }\n+\n+  public static ExchangeMetaData adaptMetadata(List<UpbitMarket> markets) {\n+    Map<CurrencyPair, CurrencyPairMetaData> pairMeta =\n+        markets.stream()\n+            .map(UpbitMarket::getMarket)\n+            .map(UpbitUtils::toCurrencyPair)\n+            .collect(\n+                Collectors.toMap(\n+                    Function.identity(), cp -> new CurrencyPairMetaData.Builder().build()));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjQwNDY2NQ=="}, "originalCommit": {"oid": "3ad817e7ccd567c372ab8670af978d9b44f11214"}, "originalPosition": 156}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwMDQ2NzI4OnYy", "diffSide": "RIGHT", "path": "xchange-upbit/src/main/java/org/knowm/xchange/upbit/UpbitAdapters.java", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQyMDo0MTowMFrOH2BToA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQwMDoyODowNFrOH235dQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjQwNjU2MA==", "bodyText": "the compare to == 0 implies executed volume == 0 which would be unfilled, wouldn't partially filled be a number > 0?", "url": "https://github.com/knowm/XChange/pull/3811#discussion_r526406560", "createdAt": "2020-11-18T20:41:00Z", "author": {"login": "earce"}, "path": "xchange-upbit/src/main/java/org/knowm/xchange/upbit/UpbitAdapters.java", "diffHunk": "@@ -121,7 +127,7 @@ public static Wallet adaptWallet(UpbitBalances wallets) {\n   }\n \n   public static Order adaptOrderInfo(UpbitOrderResponse upbitOrderResponse) {\n-    Order.OrderStatus status = Order.OrderStatus.NEW;\n+    Order.OrderStatus status;\n     if (upbitOrderResponse.getState().equalsIgnoreCase(\"cancel\")) {\n       status = Order.OrderStatus.CANCELED;\n     } else if (upbitOrderResponse.getExecutedVolume().compareTo(BigDecimal.ZERO) == 0) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3ad817e7ccd567c372ab8670af978d9b44f11214"}, "originalPosition": 104}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjg3NjAxMQ==", "bodyText": "Does unfilled mean that the executed value can be null?\nIn the demo tests, there was no case where the executed value was null.\nIt was 0.0 when the transaction was not executed.", "url": "https://github.com/knowm/XChange/pull/3811#discussion_r526876011", "createdAt": "2020-11-19T13:23:21Z", "author": {"login": "aaron-jang"}, "path": "xchange-upbit/src/main/java/org/knowm/xchange/upbit/UpbitAdapters.java", "diffHunk": "@@ -121,7 +127,7 @@ public static Wallet adaptWallet(UpbitBalances wallets) {\n   }\n \n   public static Order adaptOrderInfo(UpbitOrderResponse upbitOrderResponse) {\n-    Order.OrderStatus status = Order.OrderStatus.NEW;\n+    Order.OrderStatus status;\n     if (upbitOrderResponse.getState().equalsIgnoreCase(\"cancel\")) {\n       status = Order.OrderStatus.CANCELED;\n     } else if (upbitOrderResponse.getExecutedVolume().compareTo(BigDecimal.ZERO) == 0) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjQwNjU2MA=="}, "originalCommit": {"oid": "3ad817e7ccd567c372ab8670af978d9b44f11214"}, "originalPosition": 104}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzA1NzE2NQ==", "bodyText": "Unfilled means executed value == 0, but in this case you are saying if executedVolume == 0 that it's partially filled, which I don't think is right?\n } else if (upbitOrderResponse.getExecutedVolume().compareTo(BigDecimal.ZERO) == 0) { status = Order.OrderStatus.PARTIALLY_FILLED;\nI don't think executed volume of 0 is partially filled?", "url": "https://github.com/knowm/XChange/pull/3811#discussion_r527057165", "createdAt": "2020-11-19T17:12:08Z", "author": {"login": "earce"}, "path": "xchange-upbit/src/main/java/org/knowm/xchange/upbit/UpbitAdapters.java", "diffHunk": "@@ -121,7 +127,7 @@ public static Wallet adaptWallet(UpbitBalances wallets) {\n   }\n \n   public static Order adaptOrderInfo(UpbitOrderResponse upbitOrderResponse) {\n-    Order.OrderStatus status = Order.OrderStatus.NEW;\n+    Order.OrderStatus status;\n     if (upbitOrderResponse.getState().equalsIgnoreCase(\"cancel\")) {\n       status = Order.OrderStatus.CANCELED;\n     } else if (upbitOrderResponse.getExecutedVolume().compareTo(BigDecimal.ZERO) == 0) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjQwNjU2MA=="}, "originalCommit": {"oid": "3ad817e7ccd567c372ab8670af978d9b44f11214"}, "originalPosition": 104}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzI5Njg3Mw==", "bodyText": "Didn't you see the folded code?\nFull code\n     } else if (upbitOrderResponse.getExecutedVolume().compareTo(BigDecimal.ZERO) == 0) {\n       status = Order.OrderStatus.NEW;\n     } else if (upbitOrderResponse.getRemainingVolume().compareTo(BigDecimal.ZERO)> 0) {\n       status = Order.OrderStatus.PARTIALLY_FILLED;\nhttps://github.com/knowm/XChange/pull/3811/files/3ad817e7ccd567c372ab8670af978d9b44f11214#diff-a07acc5ce0d340e36689164bcc4d69b8382ff6f6b174210b9d6a11bdcdd977c1R133-L131", "url": "https://github.com/knowm/XChange/pull/3811#discussion_r527296873", "createdAt": "2020-11-20T00:23:22Z", "author": {"login": "aaron-jang"}, "path": "xchange-upbit/src/main/java/org/knowm/xchange/upbit/UpbitAdapters.java", "diffHunk": "@@ -121,7 +127,7 @@ public static Wallet adaptWallet(UpbitBalances wallets) {\n   }\n \n   public static Order adaptOrderInfo(UpbitOrderResponse upbitOrderResponse) {\n-    Order.OrderStatus status = Order.OrderStatus.NEW;\n+    Order.OrderStatus status;\n     if (upbitOrderResponse.getState().equalsIgnoreCase(\"cancel\")) {\n       status = Order.OrderStatus.CANCELED;\n     } else if (upbitOrderResponse.getExecutedVolume().compareTo(BigDecimal.ZERO) == 0) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjQwNjU2MA=="}, "originalCommit": {"oid": "3ad817e7ccd567c372ab8670af978d9b44f11214"}, "originalPosition": 104}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzMwMDk4MQ==", "bodyText": "Ah, that's what I was missing, thanks for clarifying.", "url": "https://github.com/knowm/XChange/pull/3811#discussion_r527300981", "createdAt": "2020-11-20T00:28:04Z", "author": {"login": "earce"}, "path": "xchange-upbit/src/main/java/org/knowm/xchange/upbit/UpbitAdapters.java", "diffHunk": "@@ -121,7 +127,7 @@ public static Wallet adaptWallet(UpbitBalances wallets) {\n   }\n \n   public static Order adaptOrderInfo(UpbitOrderResponse upbitOrderResponse) {\n-    Order.OrderStatus status = Order.OrderStatus.NEW;\n+    Order.OrderStatus status;\n     if (upbitOrderResponse.getState().equalsIgnoreCase(\"cancel\")) {\n       status = Order.OrderStatus.CANCELED;\n     } else if (upbitOrderResponse.getExecutedVolume().compareTo(BigDecimal.ZERO) == 0) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjQwNjU2MA=="}, "originalCommit": {"oid": "3ad817e7ccd567c372ab8670af978d9b44f11214"}, "originalPosition": 104}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3769, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}