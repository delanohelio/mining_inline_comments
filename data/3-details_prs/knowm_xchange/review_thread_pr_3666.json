{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDcyMTcxNzY4", "number": 3666, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yM1QyMTo1NTo1NFrOEbW4tQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yM1QyMTo1ODo1MlrOEbW5jg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk3MTIxOTczOnYy", "diffSide": "RIGHT", "path": "xchange-coinbasepro/src/main/java/org/knowm/xchange/coinbasepro/CoinbaseProAdapters.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yM1QyMTo1NTo1NFrOHFQTKA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yM1QyMjowMDo1MVrOHFQU9Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTI3MTk3Ng==", "bodyText": "nit: methods like this are called a lot in high-volume code. This would be more efficient:\nvar split = productId.split('-');\nreturn new CurrencyPair(split[0], split[1]);", "url": "https://github.com/knowm/XChange/pull/3666#discussion_r475271976", "createdAt": "2020-08-23T21:55:54Z", "author": {"login": "badgerwithagun"}, "path": "xchange-coinbasepro/src/main/java/org/knowm/xchange/coinbasepro/CoinbaseProAdapters.java", "diffHunk": "@@ -100,6 +100,10 @@ protected static Date parseDate(final String rawDate) {\n     }\n   }\n \n+  public static CurrencyPair toCurrencyPair(final String productId) {\n+    return new CurrencyPair(productId.replace('-', '/'));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8ff9e41ef607a4d1cc4d8d617959904b67e6bc61"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTI3MjQzNw==", "bodyText": "updated", "url": "https://github.com/knowm/XChange/pull/3666#discussion_r475272437", "createdAt": "2020-08-23T22:00:51Z", "author": {"login": "earce"}, "path": "xchange-coinbasepro/src/main/java/org/knowm/xchange/coinbasepro/CoinbaseProAdapters.java", "diffHunk": "@@ -100,6 +100,10 @@ protected static Date parseDate(final String rawDate) {\n     }\n   }\n \n+  public static CurrencyPair toCurrencyPair(final String productId) {\n+    return new CurrencyPair(productId.replace('-', '/'));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTI3MTk3Ng=="}, "originalCommit": {"oid": "8ff9e41ef607a4d1cc4d8d617959904b67e6bc61"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk3MTIyMTEwOnYy", "diffSide": "RIGHT", "path": "xchange-stream-kraken/src/main/java/info/bitrich/xchangestream/kraken/KrakenStreamingExchange.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yM1QyMTo1NzozOVrOHFQTww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yM1QyMTo1ODoxMlrOHFQT6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTI3MjEzMQ==", "bodyText": "Why make this public?", "url": "https://github.com/knowm/XChange/pull/3666#discussion_r475272131", "createdAt": "2020-08-23T21:57:39Z", "author": {"login": "badgerwithagun"}, "path": "xchange-stream-kraken/src/main/java/info/bitrich/xchangestream/kraken/KrakenStreamingExchange.java", "diffHunk": "@@ -29,7 +29,7 @@\n \n   public KrakenStreamingExchange() {}\n \n-  private static String pickUri(boolean isPrivate, boolean useBeta) {\n+  public static String pickUri(boolean isPrivate, boolean useBeta) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8ff9e41ef607a4d1cc4d8d617959904b67e6bc61"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTI3MjE2OQ==", "bodyText": "@badgerwithagun I use these urls directly in my own code and would like to expose them.", "url": "https://github.com/knowm/XChange/pull/3666#discussion_r475272169", "createdAt": "2020-08-23T21:58:12Z", "author": {"login": "earce"}, "path": "xchange-stream-kraken/src/main/java/info/bitrich/xchangestream/kraken/KrakenStreamingExchange.java", "diffHunk": "@@ -29,7 +29,7 @@\n \n   public KrakenStreamingExchange() {}\n \n-  private static String pickUri(boolean isPrivate, boolean useBeta) {\n+  public static String pickUri(boolean isPrivate, boolean useBeta) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTI3MjEzMQ=="}, "originalCommit": {"oid": "8ff9e41ef607a4d1cc4d8d617959904b67e6bc61"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk3MTIyMTEzOnYy", "diffSide": "RIGHT", "path": "xchange-stream-kraken/src/main/java/info/bitrich/xchangestream/kraken/KrakenStreamingMarketDataService.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yM1QyMTo1Nzo0NFrOHFQTyA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yM1QyMTo1OTowMVrOHFQUKg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTI3MjEzNg==", "bodyText": "Or this?", "url": "https://github.com/knowm/XChange/pull/3666#discussion_r475272136", "createdAt": "2020-08-23T21:57:44Z", "author": {"login": "badgerwithagun"}, "path": "xchange-stream-kraken/src/main/java/info/bitrich/xchangestream/kraken/KrakenStreamingMarketDataService.java", "diffHunk": "@@ -143,7 +143,7 @@ public KrakenStreamingMarketDataService(KrakenStreamingService service) {\n             });\n   }\n \n-  private String getChannelName(\n+  public String getChannelName(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8ff9e41ef607a4d1cc4d8d617959904b67e6bc61"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTI3MjIzNA==", "bodyText": "same reason, I use these functions directly and would like a handle on them and receive updates for them if the underlying code changes.", "url": "https://github.com/knowm/XChange/pull/3666#discussion_r475272234", "createdAt": "2020-08-23T21:59:01Z", "author": {"login": "earce"}, "path": "xchange-stream-kraken/src/main/java/info/bitrich/xchangestream/kraken/KrakenStreamingMarketDataService.java", "diffHunk": "@@ -143,7 +143,7 @@ public KrakenStreamingMarketDataService(KrakenStreamingService service) {\n             });\n   }\n \n-  private String getChannelName(\n+  public String getChannelName(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTI3MjEzNg=="}, "originalCommit": {"oid": "8ff9e41ef607a4d1cc4d8d617959904b67e6bc61"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk3MTIyMTkwOnYy", "diffSide": "RIGHT", "path": "xchange-stream-binance/src/main/java/info/bitrich/xchangestream/binance/BinanceStreamingService.java", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yM1QyMTo1ODo1MlrOHFQUJA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yM1QyMjoxNjo1OFrOHFQang==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTI3MjIyOA==", "bodyText": "You've added these constructor overloads but no code that uses them. Are you planning to call them on construction in the StreamingExchange implementations in some follow-up PR?", "url": "https://github.com/knowm/XChange/pull/3666#discussion_r475272228", "createdAt": "2020-08-23T21:58:52Z", "author": {"login": "badgerwithagun"}, "path": "xchange-stream-binance/src/main/java/info/bitrich/xchangestream/binance/BinanceStreamingService.java", "diffHunk": "@@ -14,6 +15,16 @@ public BinanceStreamingService(String baseUri, ProductSubscription productSubscr\n     this.productSubscription = productSubscription;\n   }\n \n+  public BinanceStreamingService(String baseUri,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8ff9e41ef607a4d1cc4d8d617959904b67e6bc61"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTI3MjMyMg==", "bodyText": "I don't have immediate plans for them, I think being restricted to use the defaults is not ideal and I use these outside of this codebase (I think it makes sense to have them in place)", "url": "https://github.com/knowm/XChange/pull/3666#discussion_r475272322", "createdAt": "2020-08-23T21:59:58Z", "author": {"login": "earce"}, "path": "xchange-stream-binance/src/main/java/info/bitrich/xchangestream/binance/BinanceStreamingService.java", "diffHunk": "@@ -14,6 +15,16 @@ public BinanceStreamingService(String baseUri, ProductSubscription productSubscr\n     this.productSubscription = productSubscription;\n   }\n \n+  public BinanceStreamingService(String baseUri,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTI3MjIyOA=="}, "originalCommit": {"oid": "8ff9e41ef607a4d1cc4d8d617959904b67e6bc61"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTI3MzU5NQ==", "bodyText": "I'd be intrigued to hear how and why you are using the underlying streaming services directly (rather than just exposing nice entry points in the StreamingExchanges, but fair enough for now.", "url": "https://github.com/knowm/XChange/pull/3666#discussion_r475273595", "createdAt": "2020-08-23T22:13:50Z", "author": {"login": "badgerwithagun"}, "path": "xchange-stream-binance/src/main/java/info/bitrich/xchangestream/binance/BinanceStreamingService.java", "diffHunk": "@@ -14,6 +15,16 @@ public BinanceStreamingService(String baseUri, ProductSubscription productSubscr\n     this.productSubscription = productSubscription;\n   }\n \n+  public BinanceStreamingService(String baseUri,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTI3MjIyOA=="}, "originalCommit": {"oid": "8ff9e41ef607a4d1cc4d8d617959904b67e6bc61"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTI3Mzg0NQ==", "bodyText": "@badgerwithagun in short I want raw json payloads, I'm not interested in the unified objects Xchange uses so I have found a few ways of accomplishing this and using the mature parts of Xchange's code.", "url": "https://github.com/knowm/XChange/pull/3666#discussion_r475273845", "createdAt": "2020-08-23T22:16:26Z", "author": {"login": "earce"}, "path": "xchange-stream-binance/src/main/java/info/bitrich/xchangestream/binance/BinanceStreamingService.java", "diffHunk": "@@ -14,6 +15,16 @@ public BinanceStreamingService(String baseUri, ProductSubscription productSubscr\n     this.productSubscription = productSubscription;\n   }\n \n+  public BinanceStreamingService(String baseUri,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTI3MjIyOA=="}, "originalCommit": {"oid": "8ff9e41ef607a4d1cc4d8d617959904b67e6bc61"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTI3Mzg4Ng==", "bodyText": "thanks for approving", "url": "https://github.com/knowm/XChange/pull/3666#discussion_r475273886", "createdAt": "2020-08-23T22:16:58Z", "author": {"login": "earce"}, "path": "xchange-stream-binance/src/main/java/info/bitrich/xchangestream/binance/BinanceStreamingService.java", "diffHunk": "@@ -14,6 +15,16 @@ public BinanceStreamingService(String baseUri, ProductSubscription productSubscr\n     this.productSubscription = productSubscription;\n   }\n \n+  public BinanceStreamingService(String baseUri,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTI3MjIyOA=="}, "originalCommit": {"oid": "8ff9e41ef607a4d1cc4d8d617959904b67e6bc61"}, "originalPosition": 12}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3793, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}