{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIyMzUzMzcz", "number": 3534, "title": "[Core-Stream] Roll up of two excluded open PR during merge", "bodyText": "bitrich-info/xchange-stream#522\nbitrich-info/xchange-stream#566", "createdAt": "2020-05-24T02:29:56Z", "url": "https://github.com/knowm/XChange/pull/3534", "merged": true, "mergeCommit": {"oid": "6409b76022430592252c5cfe0390c9dfe86015c5"}, "closed": true, "closedAt": "2020-05-25T09:37:11Z", "author": {"login": "mdvx"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABckR5fMAH2gAyNDIyMzUzMzczOmUzYmMwMjNmMmIwZjYyODc5NjJlNDFlOGQ0NzBhYmFjNzcxNDk0ZDY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABckrZcgAFqTQxNzUyOTQ2MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "e3bc023f2b0f6287962e41e8d470abac771494d6", "author": {"user": null}, "url": "https://github.com/knowm/XChange/commit/e3bc023f2b0f6287962e41e8d470abac771494d6", "committedDate": "2020-05-24T02:18:32Z", "message": "[Core]NettyStreamingService using PublishSubject for connect/fail handling #566"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cd4f56d038e61e5e5e92223d16c594d6e2cf777b", "author": {"user": null}, "url": "https://github.com/knowm/XChange/commit/cd4f56d038e61e5e5e92223d16c594d6e2cf777b", "committedDate": "2020-05-24T02:23:59Z", "message": "[core] subscribeChannel unnecessary onError #522"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "91a0e0a36665c570fc4846f75fc24cc1f5c15373", "author": {"user": null}, "url": "https://github.com/knowm/XChange/commit/91a0e0a36665c570fc4846f75fc24cc1f5c15373", "committedDate": "2020-05-24T13:16:24Z", "message": "run fmt"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE3MzY4MDI2", "url": "https://github.com/knowm/XChange/pull/3534#pullrequestreview-417368026", "createdAt": "2020-05-24T15:22:06Z", "commit": {"oid": "91a0e0a36665c570fc4846f75fc24cc1f5c15373"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNFQxNToyMjowN1rOGZvmMg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNFQxNToyMjowN1rOGZvmMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTY0NzQxMA==", "bodyText": "Do we want to log more information about what the error that occurred here was?", "url": "https://github.com/knowm/XChange/pull/3534#discussion_r429647410", "createdAt": "2020-05-24T15:22:07Z", "author": {"login": "earce"}, "path": "xchange-stream-service-netty/src/main/java/info/bitrich/xchangestream/service/netty/NettyStreamingService.java", "diffHunk": "@@ -375,16 +374,23 @@ public void sendMessage(String message) {\n                     Subscription newSubscription = new Subscription(e, channelName, args);\n                     try {\n                       sendMessage(getSubscribeMessage(channelName, args));\n-                    } catch (IOException throwable) {\n-                      e.onError(throwable);\n+                    } catch (\n+                        Exception\n+                            throwable) { // if getSubscribeMessage throws this, it is because it\n+                      // needs to report\n+                      e.onError(throwable); // a problem creating the message\n                     }\n                     return newSubscription;\n                   });\n             })\n         .doOnDispose(\n             () -> {\n               if (channels.remove(channelId) != null) {\n-                sendMessage(getUnsubscribeMessage(channelId));\n+                try {\n+                  sendMessage(getUnsubscribeMessage(channelId));\n+                } catch (IOException e) {\n+                  LOG.error(\"Failed to unsubscribe channel: {}\", channelId);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "91a0e0a36665c570fc4846f75fc24cc1f5c15373"}, "originalPosition": 96}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f0a7de2111caa4edad4d99c6fa32d24a08bffc08", "author": {"user": null}, "url": "https://github.com/knowm/XChange/commit/f0a7de2111caa4edad4d99c6fa32d24a08bffc08", "committedDate": "2020-05-24T23:04:36Z", "message": "But this is better error handling"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8a573063b468b01887f38d1a4fd7e7f46509a551", "author": {"user": null}, "url": "https://github.com/knowm/XChange/commit/8a573063b468b01887f38d1a4fd7e7f46509a551", "committedDate": "2020-05-24T23:04:58Z", "message": "format"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE3NTI5NDYw", "url": "https://github.com/knowm/XChange/pull/3534#pullrequestreview-417529460", "createdAt": "2020-05-25T08:01:03Z", "commit": {"oid": "8a573063b468b01887f38d1a4fd7e7f46509a551"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQwODowMTowM1rOGZ4S-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQwODowMTowM1rOGZ4S-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTc4OTk0Ng==", "bodyText": "sendMessage itself is asynchronous - I've been thinking for a while that it should return a Completable (see #3518). Is that likely to be a problem for you here? Are you only worried about exceptions from getUnsubscribeMessage and getSubscribeMessage?", "url": "https://github.com/knowm/XChange/pull/3534#discussion_r429789946", "createdAt": "2020-05-25T08:01:03Z", "author": {"login": "badgerwithagun"}, "path": "xchange-stream-service-netty/src/main/java/info/bitrich/xchangestream/service/netty/NettyStreamingService.java", "diffHunk": "@@ -375,16 +374,25 @@ public void sendMessage(String message) {\n                     Subscription newSubscription = new Subscription(e, channelName, args);\n                     try {\n                       sendMessage(getSubscribeMessage(channelName, args));\n-                    } catch (IOException throwable) {\n-                      e.onError(throwable);\n+                    } catch (\n+                        Exception\n+                            throwable) { // if getSubscribeMessage throws this, it is because it\n+                      // needs to report\n+                      e.onError(throwable); // a problem creating the message\n                     }\n                     return newSubscription;\n                   });\n             })\n         .doOnDispose(\n             () -> {\n               if (channels.remove(channelId) != null) {\n-                sendMessage(getUnsubscribeMessage(channelId));\n+                try {\n+                  sendMessage(getUnsubscribeMessage(channelId));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a573063b468b01887f38d1a4fd7e7f46509a551"}, "originalPosition": 94}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2568, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}