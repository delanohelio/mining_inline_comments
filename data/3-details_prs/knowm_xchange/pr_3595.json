{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ1MDM3NTcz", "number": 3595, "title": "[Gemini] Orderbook stream fix", "bodyText": "updates sometimes arrive before the initial book state", "createdAt": "2020-07-06T22:42:32Z", "url": "https://github.com/knowm/XChange/pull/3595", "merged": true, "mergeCommit": {"oid": "dd600ed6d8f3688ad655252b709b585e598ccbc5"}, "closed": true, "closedAt": "2020-09-06T14:03:23Z", "author": {"login": "mdvx"}, "timelineItems": {"totalCount": 15, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcyZKFMAH2gAyNDQ1MDM3NTczOjNkYTc3NjA5MWE3ZTU5ZTMwOTVkM2RiMjc5YWY4YTRhZGZmOTlmZGI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdEvZkgAH2gAyNDQ1MDM3NTczOmIwODk5ZWQyY2FmNzQ4NmI0NzM0OTUwZDM5NTljMmIxYWVkYjE1ZmE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "3da776091a7e59e3095d3db279af8a4adff99fdb", "author": {"user": null}, "url": "https://github.com/knowm/XChange/commit/3da776091a7e59e3095d3db279af8a4adff99fdb", "committedDate": "2020-07-06T22:40:56Z", "message": "[Gemini] Better fix for updates before initial orderbook"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0e4594753635e561bf0fecb16b1db48441e57401", "author": {"user": null}, "url": "https://github.com/knowm/XChange/commit/0e4594753635e561bf0fecb16b1db48441e57401", "committedDate": "2020-07-07T09:25:33Z", "message": "[Streaming][Gemini]Massive improvement in CPU and memory usage for orderbook processing."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ0MjgyNzM5", "url": "https://github.com/knowm/XChange/pull/3595#pullrequestreview-444282739", "createdAt": "2020-07-07T22:05:15Z", "commit": {"oid": "0e4594753635e561bf0fecb16b1db48441e57401"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QyMjowNToxNlrOGuRRDQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QyMjowNToxNlrOGuRRDQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTE3MDU3Mw==", "bodyText": "Are these updates published again after the image of the book is received? How are these then added back into the book?", "url": "https://github.com/knowm/XChange/pull/3595#discussion_r451170573", "createdAt": "2020-07-07T22:05:16Z", "author": {"login": "earce"}, "path": "xchange-stream-gemini/src/main/java/info/bitrich/xchangestream/gemini/GeminiStreamingMarketDataService.java", "diffHunk": "@@ -55,15 +56,21 @@ private boolean filterEventsByReason(JsonNode message, String type, String reaso\n   @Override\n   public Observable<OrderBook> getOrderBook(CurrencyPair currencyPair, Object... args) {\n \n+    Integer maxDepth = args.length > 0 ? (Integer) args[0] : null;\n+\n     Observable<GeminiOrderbook> subscribedOrderbookSnapshot =\n         service\n-            .subscribeChannel(currencyPair, args)\n+            .subscribeChannel(currencyPair, maxDepth, maxDepth)\n             .filter(\n                 s ->\n                     filterEventsByReason(s, \"change\", \"initial\")\n                         || filterEventsByReason(s, \"change\", \"place\")\n                         || filterEventsByReason(s, \"change\", \"cancel\")\n                         || filterEventsByReason(s, \"change\", \"trade\"))\n+            .filter(\n+                s -> // filter out updates that arrive before initial book\n+                orderbooks.get(currencyPair) != null\n+                        || filterEventsByReason(s, \"change\", \"initial\"))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0e4594753635e561bf0fecb16b1db48441e57401"}, "originalPosition": 27}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ0OTg0MjY2", "url": "https://github.com/knowm/XChange/pull/3595#pullrequestreview-444984266", "createdAt": "2020-07-08T17:31:10Z", "commit": {"oid": "0e4594753635e561bf0fecb16b1db48441e57401"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUxMTcyNTM5", "url": "https://github.com/knowm/XChange/pull/3595#pullrequestreview-451172539", "createdAt": "2020-07-19T23:25:38Z", "commit": {"oid": "0e4594753635e561bf0fecb16b1db48441e57401"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xOVQyMzoyNTozOVrOGzzKYg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xOVQyMzoyNTozOVrOGzzKYg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njk2ODgwMg==", "bodyText": "why are you downgrading this do Double?\nlevel.getPrice().doubleValue() can lead to lost precision\nleave BigDecimal", "url": "https://github.com/knowm/XChange/pull/3595#discussion_r456968802", "createdAt": "2020-07-19T23:25:39Z", "author": {"login": "walec51"}, "path": "xchange-stream-gemini/src/main/java/info/bitrich/xchangestream/gemini/dto/GeminiOrderbook.java", "diffHunk": "@@ -1,50 +1,50 @@\n package info.bitrich.xchangestream.gemini.dto;\n \n-import static org.knowm.xchange.gemini.v1.GeminiAdapters.adaptOrders;\n-\n import java.math.BigDecimal;\n-import java.util.Collections;\n+import java.util.Comparator;\n+import java.util.Date;\n import java.util.List;\n import java.util.Map;\n-import java.util.concurrent.ConcurrentHashMap;\n+import java.util.TreeMap;\n+import java.util.stream.Collectors;\n import org.knowm.xchange.currency.CurrencyPair;\n import org.knowm.xchange.dto.Order;\n import org.knowm.xchange.dto.marketdata.OrderBook;\n import org.knowm.xchange.dto.trade.LimitOrder;\n \n /** Created by Lukas Zaoralek on 15.11.17. */\n public class GeminiOrderbook {\n-  private final Map<BigDecimal, GeminiLimitOrder> asks;\n-  private final Map<BigDecimal, GeminiLimitOrder> bids;\n+  private final Map<Double, GeminiLimitOrder> asks;\n+  private final Map<Double, GeminiLimitOrder> bids;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0e4594753635e561bf0fecb16b1db48441e57401"}, "originalPosition": 24}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUxMTcyNjkw", "url": "https://github.com/knowm/XChange/pull/3595#pullrequestreview-451172690", "createdAt": "2020-07-19T23:27:27Z", "commit": {"oid": "0e4594753635e561bf0fecb16b1db48441e57401"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xOVQyMzoyNzoyN1rOGzzLCQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xOVQyMzoyNzoyN1rOGzzLCQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njk2ODk2OQ==", "bodyText": "this class cannot make up its mind is it an adapter or an DTO\ncan't we move this to GeminiAdapters?", "url": "https://github.com/knowm/XChange/pull/3595#discussion_r456968969", "createdAt": "2020-07-19T23:27:27Z", "author": {"login": "walec51"}, "path": "xchange-stream-gemini/src/main/java/info/bitrich/xchangestream/gemini/dto/GeminiOrderbook.java", "diffHunk": "@@ -54,15 +54,35 @@ public void updateLevels(GeminiLimitOrder[] levels) {\n     }\n   }\n \n-  public OrderBook toOrderbook() {\n-    GeminiLimitOrder[] askLevels = asks.values().toArray(new GeminiLimitOrder[asks.size()]);\n-    GeminiLimitOrder[] bidLevels = bids.values().toArray(new GeminiLimitOrder[bids.size()]);\n+  public OrderBook toOrderbook(int maxLevels, Date timestamp) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0e4594753635e561bf0fecb16b1db48441e57401"}, "originalPosition": 71}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "27b658bd7901651a8b47fc4c03037a4a7e5721ca", "author": {"user": null}, "url": "https://github.com/knowm/XChange/commit/27b658bd7901651a8b47fc4c03037a4a7e5721ca", "committedDate": "2020-07-26T19:26:09Z", "message": "Yes, I agree, BigDecimal is better - reverting"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "93dfc2cae179f367a98cf23026243dc83c0e5c69", "author": {"user": null}, "url": "https://github.com/knowm/XChange/commit/93dfc2cae179f367a98cf23026243dc83c0e5c69", "committedDate": "2020-07-26T19:42:52Z", "message": "move adapter methods GeminiAdaptersX"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b6fcdda06454ec852e5ae4e29d70253a7fba2139", "author": {"user": null}, "url": "https://github.com/knowm/XChange/commit/b6fcdda06454ec852e5ae4e29d70253a7fba2139", "committedDate": "2020-07-27T04:40:20Z", "message": "formatting"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "baf4c3e787d4a071be93fd50c26ba55cbdb8e87d", "author": {"user": null}, "url": "https://github.com/knowm/XChange/commit/baf4c3e787d4a071be93fd50c26ba55cbdb8e87d", "committedDate": "2020-07-29T17:09:27Z", "message": "[Bitmex] priceScale is derived from last price, however last price observed as null (NPE Fix)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "607b9d96a80313e7614ecd39e2fd774ac23e5e3a", "author": {"user": null}, "url": "https://github.com/knowm/XChange/commit/607b9d96a80313e7614ecd39e2fd774ac23e5e3a", "committedDate": "2020-07-29T17:18:22Z", "message": "[Bitmex] L2 25 only depth for performance, in an arg is supplied - accidental in previous checkin\ncheck the right field"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e777474c10e9cf2ba587a25ad4d6e288d2ca3f3e", "author": {"user": null}, "url": "https://github.com/knowm/XChange/commit/e777474c10e9cf2ba587a25ad4d6e288d2ca3f3e", "committedDate": "2020-07-29T18:23:47Z", "message": "squash! [Bitmex] priceScale is derived from last price, however last price observed as null (NPE Fix)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b87d45b3e292f91a6a634eb7aebc6a6831b111e6", "author": {"user": null}, "url": "https://github.com/knowm/XChange/commit/b87d45b3e292f91a6a634eb7aebc6a6831b111e6", "committedDate": "2020-08-02T12:37:49Z", "message": "[Gemini] Implement getTicker using top of orderbook"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fe0706e4ebbf54bcc56b720bf580f34d015fe61a", "author": {"user": null}, "url": "https://github.com/knowm/XChange/commit/fe0706e4ebbf54bcc56b720bf580f34d015fe61a", "committedDate": "2020-08-02T12:47:49Z", "message": "[Gemini] Implement getTicker using top of orderbook - reformat - cascade errors"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b0899ed2caf7486b4734950d3959c2b1aedb15fa", "author": {"user": {"login": "mdvx", "name": "Marc Deveaux"}}, "url": "https://github.com/knowm/XChange/commit/b0899ed2caf7486b4734950d3959c2b1aedb15fa", "committedDate": "2020-09-01T22:46:24Z", "message": "Merge branch 'develop' into Gemini-Stream-Fix"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2491, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}