{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkyMDYyMTg1", "number": 3463, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQwODoyMjo0NVrODriQ6Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQwODo0MTowOVrODriqxg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2OTc2NzQ1OnYy", "diffSide": "RIGHT", "path": "xchange-binance/src/main/java/org/knowm/xchange/binance/dto/account/TransfertHistoryResponse.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQwODoyMjo0NVrOF77sNQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxOTowNjoxNFrOF_5gDg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODM4ODI3Nw==", "bodyText": "if your using lombok then these setters / getters are not needed", "url": "https://github.com/knowm/XChange/pull/3463#discussion_r398388277", "createdAt": "2020-03-26T08:22:45Z", "author": {"login": "walec51"}, "path": "xchange-binance/src/main/java/org/knowm/xchange/binance/dto/account/TransfertHistoryResponse.java", "diffHunk": "@@ -0,0 +1,80 @@\n+package org.knowm.xchange.binance.dto.account;\n+\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import java.math.BigDecimal;\n+import java.util.Arrays;\n+import java.util.List;\n+import lombok.Data;\n+\n+public final class TransfertHistoryResponse\n+    extends WapiResponse<List<TransfertHistoryResponse.TransfertHistory>> {\n+\n+  private final TransfertHistory[] transfertHistories;\n+\n+  public TransfertHistoryResponse(\n+      @JsonProperty(\"transfers\") TransfertHistoryResponse.TransfertHistory[] transfertHistories,\n+      @JsonProperty(\"success\") boolean success,\n+      @JsonProperty(\"msg\") String msg) {\n+    super(success, msg);\n+    this.transfertHistories = transfertHistories;\n+  }\n+\n+  @Override\n+  public List<TransfertHistory> getData() {\n+    return Arrays.asList(transfertHistories);\n+  }\n+\n+  @Override\n+  public String toString() {\n+    return \"transfertHistories [rows=\" + Arrays.toString(transfertHistories) + \"]\";\n+  }\n+\n+  @Data\n+  public static final class TransfertHistory {\n+    private String from;\n+    private String to;\n+    private String asset;\n+    private BigDecimal qty;\n+    private long time;\n+\n+    public String getFrom() {\n+      return from;\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "520197da8563256e708dc1e924c4c19d1697a6b4"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODQwMjk0Mg==", "bodyText": "I haven't created unit test but if you remove getter, are you still able to create UT ?", "url": "https://github.com/knowm/XChange/pull/3463#discussion_r398402942", "createdAt": "2020-03-26T08:49:00Z", "author": {"login": "trixprod"}, "path": "xchange-binance/src/main/java/org/knowm/xchange/binance/dto/account/TransfertHistoryResponse.java", "diffHunk": "@@ -0,0 +1,80 @@\n+package org.knowm.xchange.binance.dto.account;\n+\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import java.math.BigDecimal;\n+import java.util.Arrays;\n+import java.util.List;\n+import lombok.Data;\n+\n+public final class TransfertHistoryResponse\n+    extends WapiResponse<List<TransfertHistoryResponse.TransfertHistory>> {\n+\n+  private final TransfertHistory[] transfertHistories;\n+\n+  public TransfertHistoryResponse(\n+      @JsonProperty(\"transfers\") TransfertHistoryResponse.TransfertHistory[] transfertHistories,\n+      @JsonProperty(\"success\") boolean success,\n+      @JsonProperty(\"msg\") String msg) {\n+    super(success, msg);\n+    this.transfertHistories = transfertHistories;\n+  }\n+\n+  @Override\n+  public List<TransfertHistory> getData() {\n+    return Arrays.asList(transfertHistories);\n+  }\n+\n+  @Override\n+  public String toString() {\n+    return \"transfertHistories [rows=\" + Arrays.toString(transfertHistories) + \"]\";\n+  }\n+\n+  @Data\n+  public static final class TransfertHistory {\n+    private String from;\n+    private String to;\n+    private String asset;\n+    private BigDecimal qty;\n+    private long time;\n+\n+    public String getFrom() {\n+      return from;\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODM4ODI3Nw=="}, "originalCommit": {"oid": "520197da8563256e708dc1e924c4c19d1697a6b4"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTc3OTA5Mg==", "bodyText": "I'm not telling to remove getters\nI'm telling to remove the getter code you have written by hand\nlombok will generate getters for you - this is how the @Data annotation you have used here works https://projectlombok.org/features/Data", "url": "https://github.com/knowm/XChange/pull/3463#discussion_r399779092", "createdAt": "2020-03-29T10:45:09Z", "author": {"login": "walec51"}, "path": "xchange-binance/src/main/java/org/knowm/xchange/binance/dto/account/TransfertHistoryResponse.java", "diffHunk": "@@ -0,0 +1,80 @@\n+package org.knowm.xchange.binance.dto.account;\n+\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import java.math.BigDecimal;\n+import java.util.Arrays;\n+import java.util.List;\n+import lombok.Data;\n+\n+public final class TransfertHistoryResponse\n+    extends WapiResponse<List<TransfertHistoryResponse.TransfertHistory>> {\n+\n+  private final TransfertHistory[] transfertHistories;\n+\n+  public TransfertHistoryResponse(\n+      @JsonProperty(\"transfers\") TransfertHistoryResponse.TransfertHistory[] transfertHistories,\n+      @JsonProperty(\"success\") boolean success,\n+      @JsonProperty(\"msg\") String msg) {\n+    super(success, msg);\n+    this.transfertHistories = transfertHistories;\n+  }\n+\n+  @Override\n+  public List<TransfertHistory> getData() {\n+    return Arrays.asList(transfertHistories);\n+  }\n+\n+  @Override\n+  public String toString() {\n+    return \"transfertHistories [rows=\" + Arrays.toString(transfertHistories) + \"]\";\n+  }\n+\n+  @Data\n+  public static final class TransfertHistory {\n+    private String from;\n+    private String to;\n+    private String asset;\n+    private BigDecimal qty;\n+    private long time;\n+\n+    public String getFrom() {\n+      return from;\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODM4ODI3Nw=="}, "originalCommit": {"oid": "520197da8563256e708dc1e924c4c19d1697a6b4"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjQ1NjMyNw==", "bodyText": "file name has a typo", "url": "https://github.com/knowm/XChange/pull/3463#discussion_r402456327", "createdAt": "2020-04-02T16:42:54Z", "author": {"login": "conspyrosy"}, "path": "xchange-binance/src/main/java/org/knowm/xchange/binance/dto/account/TransfertHistoryResponse.java", "diffHunk": "@@ -0,0 +1,80 @@\n+package org.knowm.xchange.binance.dto.account;\n+\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import java.math.BigDecimal;\n+import java.util.Arrays;\n+import java.util.List;\n+import lombok.Data;\n+\n+public final class TransfertHistoryResponse\n+    extends WapiResponse<List<TransfertHistoryResponse.TransfertHistory>> {\n+\n+  private final TransfertHistory[] transfertHistories;\n+\n+  public TransfertHistoryResponse(\n+      @JsonProperty(\"transfers\") TransfertHistoryResponse.TransfertHistory[] transfertHistories,\n+      @JsonProperty(\"success\") boolean success,\n+      @JsonProperty(\"msg\") String msg) {\n+    super(success, msg);\n+    this.transfertHistories = transfertHistories;\n+  }\n+\n+  @Override\n+  public List<TransfertHistory> getData() {\n+    return Arrays.asList(transfertHistories);\n+  }\n+\n+  @Override\n+  public String toString() {\n+    return \"transfertHistories [rows=\" + Arrays.toString(transfertHistories) + \"]\";\n+  }\n+\n+  @Data\n+  public static final class TransfertHistory {\n+    private String from;\n+    private String to;\n+    private String asset;\n+    private BigDecimal qty;\n+    private long time;\n+\n+    public String getFrom() {\n+      return from;\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODM4ODI3Nw=="}, "originalCommit": {"oid": "520197da8563256e708dc1e924c4c19d1697a6b4"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjU0NjcwMg==", "bodyText": "file name has a typo\n\nFixed all references from Transfert to Transfer ( without the 't' )", "url": "https://github.com/knowm/XChange/pull/3463#discussion_r402546702", "createdAt": "2020-04-02T19:06:14Z", "author": {"login": "trixprod"}, "path": "xchange-binance/src/main/java/org/knowm/xchange/binance/dto/account/TransfertHistoryResponse.java", "diffHunk": "@@ -0,0 +1,80 @@\n+package org.knowm.xchange.binance.dto.account;\n+\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import java.math.BigDecimal;\n+import java.util.Arrays;\n+import java.util.List;\n+import lombok.Data;\n+\n+public final class TransfertHistoryResponse\n+    extends WapiResponse<List<TransfertHistoryResponse.TransfertHistory>> {\n+\n+  private final TransfertHistory[] transfertHistories;\n+\n+  public TransfertHistoryResponse(\n+      @JsonProperty(\"transfers\") TransfertHistoryResponse.TransfertHistory[] transfertHistories,\n+      @JsonProperty(\"success\") boolean success,\n+      @JsonProperty(\"msg\") String msg) {\n+    super(success, msg);\n+    this.transfertHistories = transfertHistories;\n+  }\n+\n+  @Override\n+  public List<TransfertHistory> getData() {\n+    return Arrays.asList(transfertHistories);\n+  }\n+\n+  @Override\n+  public String toString() {\n+    return \"transfertHistories [rows=\" + Arrays.toString(transfertHistories) + \"]\";\n+  }\n+\n+  @Data\n+  public static final class TransfertHistory {\n+    private String from;\n+    private String to;\n+    private String asset;\n+    private BigDecimal qty;\n+    private long time;\n+\n+    public String getFrom() {\n+      return from;\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODM4ODI3Nw=="}, "originalCommit": {"oid": "520197da8563256e708dc1e924c4c19d1697a6b4"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2OTc3Njc5OnYy", "diffSide": "RIGHT", "path": "xchange-binance/src/main/java/org/knowm/xchange/binance/service/BinanceAccountService.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQwODoyNToxNVrOF77x4w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQwODo0OTo1MVrOF78nVw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODM4OTczMQ==", "bodyText": "I don't think this is needed", "url": "https://github.com/knowm/XChange/pull/3463#discussion_r398389731", "createdAt": "2020-03-26T08:25:15Z", "author": {"login": "walec51"}, "path": "xchange-binance/src/main/java/org/knowm/xchange/binance/service/BinanceAccountService.java", "diffHunk": "@@ -287,6 +304,52 @@ public TradeHistoryParams createFundingHistoryParams() {\n                 });\n       }\n \n+      final String finalEmail = email;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "520197da8563256e708dc1e924c4c19d1697a6b4"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODQwMzQxNQ==", "bodyText": "Lambda need final field. email field is null then affected to a value if needed.", "url": "https://github.com/knowm/XChange/pull/3463#discussion_r398403415", "createdAt": "2020-03-26T08:49:51Z", "author": {"login": "trixprod"}, "path": "xchange-binance/src/main/java/org/knowm/xchange/binance/service/BinanceAccountService.java", "diffHunk": "@@ -287,6 +304,52 @@ public TradeHistoryParams createFundingHistoryParams() {\n                 });\n       }\n \n+      final String finalEmail = email;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODM4OTczMQ=="}, "originalCommit": {"oid": "520197da8563256e708dc1e924c4c19d1697a6b4"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2OTc4MDAzOnYy", "diffSide": "RIGHT", "path": "xchange-binance/src/main/java/org/knowm/xchange/binance/service/BinanceAccountService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQwODoyNjoxMFrOF77z7A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQwODoyNjoxMFrOF77z7A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODM5MDI1Mg==", "bodyText": "please use builder", "url": "https://github.com/knowm/XChange/pull/3463#discussion_r398390252", "createdAt": "2020-03-26T08:26:10Z", "author": {"login": "walec51"}, "path": "xchange-binance/src/main/java/org/knowm/xchange/binance/service/BinanceAccountService.java", "diffHunk": "@@ -287,6 +304,52 @@ public TradeHistoryParams createFundingHistoryParams() {\n                 });\n       }\n \n+      final String finalEmail = email;\n+\n+      if (email != null) {\n+        super.getTransfertHistory(email, startTime, endTime, page, limit)\n+            .forEach(\n+                a -> {\n+                  result.add(\n+                      new FundingRecord(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "520197da8563256e708dc1e924c4c19d1697a6b4"}, "originalPosition": 48}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2OTc4MDU4OnYy", "diffSide": "RIGHT", "path": "xchange-binance/src/main/java/org/knowm/xchange/binance/service/BinanceAccountService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQwODoyNjoyMVrOF770Qg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQwODoyNjoyMVrOF770Qg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODM5MDMzOA==", "bodyText": "please use builder", "url": "https://github.com/knowm/XChange/pull/3463#discussion_r398390338", "createdAt": "2020-03-26T08:26:21Z", "author": {"login": "walec51"}, "path": "xchange-binance/src/main/java/org/knowm/xchange/binance/service/BinanceAccountService.java", "diffHunk": "@@ -287,6 +304,52 @@ public TradeHistoryParams createFundingHistoryParams() {\n                 });\n       }\n \n+      final String finalEmail = email;\n+\n+      if (email != null) {\n+        super.getTransfertHistory(email, startTime, endTime, page, limit)\n+            .forEach(\n+                a -> {\n+                  result.add(\n+                      new FundingRecord(\n+                          finalEmail,\n+                          null,\n+                          new Date(a.getTime()),\n+                          Currency.getInstance(a.getAsset()),\n+                          a.getQty(),\n+                          null,\n+                          null,\n+                          Type.SUBACCOUNT_OUTFLOW,\n+                          Status.COMPLETE,\n+                          null,\n+                          null,\n+                          null));\n+                });\n+      }\n+\n+      if (subAccount) {\n+\n+        Integer type = deposits && withdrawals ? null : deposits ? 1 : 0;\n+        super.getSubUserHistory(asset, type, startTime, endTime, limit)\n+            .forEach(\n+                a -> {\n+                  result.add(\n+                      new FundingRecord(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "520197da8563256e708dc1e924c4c19d1697a6b4"}, "originalPosition": 71}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2OTgzMzY2OnYy", "diffSide": "RIGHT", "path": "xchange-core/src/main/java/org/knowm/xchange/dto/account/FundingRecord.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQwODo0MTowOVrOF78UGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQwODo0MTowOVrOF78UGw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODM5ODQ5MQ==", "bodyText": "I think more generic names would be better as this is to Binance-specific\nsome exchanges have a flat structure with many account for a given currency and no master\nI would suggest:\n    /**\n     * Withdrawal from the exchange a blockchain address or a bank account.\n     *\n     * Usually results in a withdrawal fee being subtracted\n     */\n    WITHDRAWAL(false),\n\n    /** Deposit from a blockchain address or a bank account to the exchange */\n    DEPOSIT(true),\n\n    /** Used for transfers between exchanges accounts */\n    INTERNAL_WITHDRAWAL(false);\n\n    /** Used for transfers between exchanges accounts */\n    INTERNAL_DEPOSIT(true),\n\n    /** Used for transfers between exchanges accounts */\n    INTERNAL_WITHDRAWAL(false);", "url": "https://github.com/knowm/XChange/pull/3463#discussion_r398398491", "createdAt": "2020-03-26T08:41:09Z", "author": {"login": "walec51"}, "path": "xchange-core/src/main/java/org/knowm/xchange/dto/account/FundingRecord.java", "diffHunk": "@@ -298,7 +298,13 @@ public String toString() {\n      * outflows defined above or their nature could not have been deduced from the exchanges\n      * response\n      */\n-    OTHER_OUTFLOW(false);\n+    OTHER_OUTFLOW(false),\n+\n+    /** Used for inflows that come from a sub account to the master account */\n+    SUBACCOUNT_INFLOW(true),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "520197da8563256e708dc1e924c4c19d1697a6b4"}, "originalPosition": 8}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3811, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}