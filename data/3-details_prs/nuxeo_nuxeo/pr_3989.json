{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDExNzI3MDEx", "number": 3989, "title": " NXP-28995: remove documentation feature on explorer", "bodyText": "Draft PR waiting for:\n\nreadmes display\nmore tests (unit and functional)\n#3959 and #3961 to be merged\n\nT&P check at https://qa.nuxeo.org/jenkins/job/TestAndPush/job/ondemand-testandpush-atchertchian-master/209", "createdAt": "2020-04-30T17:18:33Z", "url": "https://github.com/nuxeo/nuxeo/pull/3989", "merged": true, "mergeCommit": {"oid": "d127208d44caf8fc9e20b45b9c3ef96ce39e2585"}, "closed": true, "closedAt": "2020-05-15T08:13:49Z", "author": {"login": "atchertchian"}, "timelineItems": {"totalCount": 20, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcgM4JlgBqjMzMjIyNjU0OTU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABchdSwZgFqTQxMjQyNDM1NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b7183fb1012a4951c73614f05265c04342e13877", "author": {"user": {"login": "atchertchian", "name": "Anahide Tchertchian"}}, "url": "https://github.com/nuxeo/nuxeo/commit/b7183fb1012a4951c73614f05265c04342e13877", "committedDate": "2020-04-30T17:15:10Z", "message": "add TODO for readme tests and display"}, "afterCommit": {"oid": "eb25e8deb2ab36f000dc66c7fdff4c93d6d59e3d", "author": {"user": {"login": "atchertchian", "name": "Anahide Tchertchian"}}, "url": "https://github.com/nuxeo/nuxeo/commit/eb25e8deb2ab36f000dc66c7fdff4c93d6d59e3d", "committedDate": "2020-05-11T10:11:34Z", "message": "add TODO for readme tests and display"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8123a1eaf88aae91de7245266fc6b95963470307", "author": {"user": {"login": "atchertchian", "name": "Anahide Tchertchian"}}, "url": "https://github.com/nuxeo/nuxeo/commit/8123a1eaf88aae91de7245266fc6b95963470307", "committedDate": "2020-05-11T15:23:40Z", "message": "readme fixes + tests"}, "afterCommit": {"oid": "a20764c207193190c0f77255c05952e633fc51ea", "author": {"user": {"login": "atchertchian", "name": "Anahide Tchertchian"}}, "url": "https://github.com/nuxeo/nuxeo/commit/a20764c207193190c0f77255c05952e633fc51ea", "committedDate": "2020-05-12T09:11:50Z", "message": "readme fixes + tests"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a20764c207193190c0f77255c05952e633fc51ea", "author": {"user": {"login": "atchertchian", "name": "Anahide Tchertchian"}}, "url": "https://github.com/nuxeo/nuxeo/commit/a20764c207193190c0f77255c05952e633fc51ea", "committedDate": "2020-05-12T09:11:50Z", "message": "readme fixes + tests"}, "afterCommit": {"oid": "8da9a5ea6370ff71da4f5274290b52bf38888252", "author": {"user": {"login": "atchertchian", "name": "Anahide Tchertchian"}}, "url": "https://github.com/nuxeo/nuxeo/commit/8da9a5ea6370ff71da4f5274290b52bf38888252", "committedDate": "2020-05-12T09:15:36Z", "message": "readme fixes + tests"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8da9a5ea6370ff71da4f5274290b52bf38888252", "author": {"user": {"login": "atchertchian", "name": "Anahide Tchertchian"}}, "url": "https://github.com/nuxeo/nuxeo/commit/8da9a5ea6370ff71da4f5274290b52bf38888252", "committedDate": "2020-05-12T09:15:36Z", "message": "readme fixes + tests"}, "afterCommit": {"oid": "24799f84c10d02c3c211d4a412702f4002b5820b", "author": {"user": {"login": "atchertchian", "name": "Anahide Tchertchian"}}, "url": "https://github.com/nuxeo/nuxeo/commit/24799f84c10d02c3c211d4a412702f4002b5820b", "committedDate": "2020-05-12T18:24:14Z", "message": "operation tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "901cd5fcd1917480b86dc734c76fd95dd1657a5b", "author": {"user": {"login": "atchertchian", "name": "Anahide Tchertchian"}}, "url": "https://github.com/nuxeo/nuxeo/commit/901cd5fcd1917480b86dc734c76fd95dd1657a5b", "committedDate": "2020-05-13T17:34:36Z", "message": "NXP-28995: extract content utilities in tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c7d36fd409e23e773f81597cabdccf97447adc88", "author": {"user": {"login": "atchertchian", "name": "Anahide Tchertchian"}}, "url": "https://github.com/nuxeo/nuxeo/commit/c7d36fd409e23e773f81597cabdccf97447adc88", "committedDate": "2020-05-13T17:34:36Z", "message": "NXP-28995: allow generating reference export in tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2a54628f5a29e08ccc5283b3356ef42699c7f68f", "author": {"user": {"login": "atchertchian", "name": "Anahide Tchertchian"}}, "url": "https://github.com/nuxeo/nuxeo/commit/2a54628f5a29e08ccc5283b3356ef42699c7f68f", "committedDate": "2020-05-13T17:34:36Z", "message": "NXP-28995: make json export deterministic"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "24799f84c10d02c3c211d4a412702f4002b5820b", "author": {"user": {"login": "atchertchian", "name": "Anahide Tchertchian"}}, "url": "https://github.com/nuxeo/nuxeo/commit/24799f84c10d02c3c211d4a412702f4002b5820b", "committedDate": "2020-05-12T18:24:14Z", "message": "operation tests"}, "afterCommit": {"oid": "7f5ab5825048c05fd3205333aa173bdcc82f917b", "author": {"user": {"login": "atchertchian", "name": "Anahide Tchertchian"}}, "url": "https://github.com/nuxeo/nuxeo/commit/7f5ab5825048c05fd3205333aa173bdcc82f917b", "committedDate": "2020-05-13T17:34:36Z", "message": "NXP-28995: improve all sorts of remaining doc + add tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDExNTM2NzI3", "url": "https://github.com/nuxeo/nuxeo/pull/3989#pullrequestreview-411536727", "createdAt": "2020-05-14T07:34:46Z", "commit": {"oid": "7f5ab5825048c05fd3205333aa173bdcc82f917b"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQwNzozNDo0NlrOGVPlUQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQwODowMTowNlrOGVQfnA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDkyODU5Mw==", "bodyText": "You can use StandardCharsets instead of guava.", "url": "https://github.com/nuxeo/nuxeo/pull/3989#discussion_r424928593", "createdAt": "2020-05-14T07:34:46Z", "author": {"login": "kevinleturc"}, "path": "modules/platform/nuxeo-apidoc-server/nuxeo-apidoc-core/src/main/java/org/nuxeo/apidoc/adapters/BaseNuxeoArtifactDocAdapter.java", "diffHunk": "@@ -18,21 +18,26 @@\n  */\n package org.nuxeo.apidoc.adapters;\n \n+import java.io.IOException;\n import java.util.Collections;\n import java.util.List;\n \n+import org.apache.commons.lang3.StringUtils;\n import org.apache.commons.logging.Log;\n import org.apache.commons.logging.LogFactory;\n import org.nuxeo.apidoc.api.BaseNuxeoArtifact;\n import org.nuxeo.apidoc.api.NuxeoArtifact;\n import org.nuxeo.apidoc.snapshot.DistributionSnapshot;\n import org.nuxeo.common.utils.IdUtils;\n import org.nuxeo.common.utils.Path;\n+import org.nuxeo.ecm.core.api.Blob;\n import org.nuxeo.ecm.core.api.CoreSession;\n import org.nuxeo.ecm.core.api.DocumentModel;\n import org.nuxeo.ecm.core.api.PathRef;\n import org.nuxeo.ecm.core.api.PropertyException;\n \n+import com.google.common.base.Charsets;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7f5ab5825048c05fd3205333aa173bdcc82f917b"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDkzMTM5NA==", "bodyText": "You can use var to declare only once ArrayList (and to avoid implementation type declaration for List).", "url": "https://github.com/nuxeo/nuxeo/pull/3989#discussion_r424931394", "createdAt": "2020-05-14T07:40:14Z", "author": {"login": "kevinleturc"}, "path": "modules/platform/nuxeo-apidoc-server/nuxeo-apidoc-core/src/main/java/org/nuxeo/apidoc/adapters/BundleGroupDocAdapter.java", "diffHunk": "@@ -49,6 +53,13 @@ public static BundleGroupDocAdapter create(BundleGroup bundleGroup, CoreSession\n         doc.setPropertyValue(NuxeoArtifact.TITLE_PROPERTY_PATH, bundleGroup.getName());\n         doc.setPropertyValue(PROP_GROUP_NAME, bundleGroup.getName());\n         doc.setPropertyValue(PROP_KEY, bundleGroup.getId());\n+        ArrayList<Map<String, Serializable>> files = new ArrayList<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7f5ab5825048c05fd3205333aa173bdcc82f917b"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDkzODEyNg==", "bodyText": "LogManager from log4j2 should be used instead.", "url": "https://github.com/nuxeo/nuxeo/pull/3989#discussion_r424938126", "createdAt": "2020-05-14T07:51:56Z", "author": {"login": "kevinleturc"}, "path": "modules/platform/nuxeo-apidoc-server/nuxeo-apidoc-core/src/main/java/org/nuxeo/apidoc/introspection/RuntimeSnapshot.java", "diffHunk": "@@ -60,13 +62,16 @@\n import com.fasterxml.jackson.annotation.JsonProperty;\n import com.fasterxml.jackson.core.JsonGenerator;\n import com.fasterxml.jackson.core.JsonParser;\n+import com.fasterxml.jackson.core.PrettyPrinter;\n import com.fasterxml.jackson.databind.DeserializationFeature;\n import com.fasterxml.jackson.databind.ObjectMapper;\n import com.fasterxml.jackson.databind.ObjectReader;\n import com.fasterxml.jackson.databind.ObjectWriter;\n \n public class RuntimeSnapshot extends BaseNuxeoArtifact implements DistributionSnapshot {\n \n+    private static final Log log = LogFactory.getLog(RuntimeSnapshot.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7f5ab5825048c05fd3205333aa173bdcc82f917b"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDk0MzAyNA==", "bodyText": "StringUtils.isEmpty can be used.", "url": "https://github.com/nuxeo/nuxeo/pull/3989#discussion_r424943024", "createdAt": "2020-05-14T08:00:17Z", "author": {"login": "kevinleturc"}, "path": "modules/platform/nuxeo-apidoc-server/nuxeo-apidoc-webengine/src/main/java/org/nuxeo/apidoc/browse/OperationWO.java", "diffHunk": "@@ -48,44 +50,24 @@ public NuxeoArtifact getNxArtifact() {\n         return getTargetComponentInfo();\n     }\n \n-    protected String[] getInputs(OperationInfo op) {\n-        String[] signature = op.getSignature();\n-        if (signature == null || signature.length == 0) {\n-            return new String[0];\n-        }\n-        String[] result = new String[signature.length / 2];\n-        for (int i = 0, k = 0; i < signature.length; i += 2, k++) {\n-            result[k] = signature[i];\n-        }\n-        return result;\n-    }\n-\n-    protected String[] getOutputs(OperationInfo op) {\n-        String[] signature = op.getSignature();\n-        if (signature == null || signature.length == 0) {\n-            return new String[0];\n+    protected String getSignatureInfo(OperationInfo op, boolean isInput) {\n+        List<String> signature = op.getSignature();\n+        if (signature == null || signature.isEmpty()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7f5ab5825048c05fd3205333aa173bdcc82f917b"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDk0MzUxNg==", "bodyText": "String.join from JDK can be used.", "url": "https://github.com/nuxeo/nuxeo/pull/3989#discussion_r424943516", "createdAt": "2020-05-14T08:01:06Z", "author": {"login": "kevinleturc"}, "path": "modules/platform/nuxeo-apidoc-server/nuxeo-apidoc-webengine/src/main/java/org/nuxeo/apidoc/browse/OperationWO.java", "diffHunk": "@@ -48,44 +50,24 @@ public NuxeoArtifact getNxArtifact() {\n         return getTargetComponentInfo();\n     }\n \n-    protected String[] getInputs(OperationInfo op) {\n-        String[] signature = op.getSignature();\n-        if (signature == null || signature.length == 0) {\n-            return new String[0];\n-        }\n-        String[] result = new String[signature.length / 2];\n-        for (int i = 0, k = 0; i < signature.length; i += 2, k++) {\n-            result[k] = signature[i];\n-        }\n-        return result;\n-    }\n-\n-    protected String[] getOutputs(OperationInfo op) {\n-        String[] signature = op.getSignature();\n-        if (signature == null || signature.length == 0) {\n-            return new String[0];\n+    protected String getSignatureInfo(OperationInfo op, boolean isInput) {\n+        List<String> signature = op.getSignature();\n+        if (signature == null || signature.isEmpty()) {\n+            return \"void\";\n         }\n-        String[] result = new String[signature.length / 2];\n-        for (int i = 1, k = 0; i < signature.length; i += 2, k++) {\n-            result[k] = signature[i];\n+        List<String> result = new ArrayList<>();\n+        for (int i = (isInput ? 0 : 1); i < signature.size(); i += 2) {\n+            result.add(signature.get(i));\n         }\n-        return result;\n+        return StringUtils.join(result, \", \");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7f5ab5825048c05fd3205333aa173bdcc82f917b"}, "originalPosition": 42}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDExNTg5MDEx", "url": "https://github.com/nuxeo/nuxeo/pull/3989#pullrequestreview-411589011", "createdAt": "2020-05-14T08:43:41Z", "commit": {"oid": "a8db9ff702916b594b0cd42f7bb580a83dd56e40"}, "state": "DISMISSED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQwODo0Mzo0MVrOGVSE2w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQwODo0Mzo0MVrOGVSE2w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDk2OTQzNQ==", "bodyText": "This test seems a bit too optimist; as everything starting by readme matches. Like readme-test.md, readme-sample.ascidoc, etc.", "url": "https://github.com/nuxeo/nuxeo/pull/3989#discussion_r424969435", "createdAt": "2020-05-14T08:43:41Z", "author": {"login": "akervern"}, "path": "modules/platform/nuxeo-apidoc-server/nuxeo-apidoc-core/src/main/java/org/nuxeo/apidoc/introspection/EmbeddedDocExtractor.java", "diffHunk": "@@ -18,68 +18,116 @@\n  */\n package org.nuxeo.apidoc.introspection;\n \n+import java.io.File;\n+import java.io.FileInputStream;\n import java.io.IOException;\n import java.io.InputStream;\n import java.nio.charset.StandardCharsets;\n import java.util.Enumeration;\n-import java.util.HashMap;\n-import java.util.Map;\n import java.util.zip.ZipEntry;\n import java.util.zip.ZipFile;\n \n import org.apache.commons.io.IOUtils;\n-import org.nuxeo.apidoc.documentation.DefaultDocumentationType;\n-import org.nuxeo.apidoc.documentation.ResourceDocumentationItem;\n import org.nuxeo.common.utils.Path;\n+import org.nuxeo.ecm.core.api.Blob;\n+import org.nuxeo.ecm.core.api.impl.blob.StringBlob;\n \n public class EmbeddedDocExtractor {\n \n     public static final String DOC_PREFIX = \"doc/\";\n \n     public static final String PARENT_DOC_PREFIX = \"doc-parent/\";\n \n-    public static void extractEmbeddedDoc(ZipFile jarFile, BundleInfoImpl bi) throws IOException {\n+    /**\n+     * Hardcoded parent readme filename for tests.\n+     *\n+     * @since 11.1\n+     */\n+    protected static final String README = \"ReadMe.md\";\n \n-        Enumeration<? extends ZipEntry> entries = jarFile.entries();\n+    /**\n+     * Navigates hierarchy to find target file.\n+     *\n+     * @since 11.1\n+     */\n+    public static File findFile(File jarFile, String subPath) {\n+        File up = new File(jarFile, \"..\");\n+        File file = new File(up, subPath);\n+        if (!file.exists()) {\n+            file = new File(new File(up, \"..\"), subPath);\n+            if (!file.exists()) {\n+                file = null;\n+            }\n+        }\n+        return file;\n+    }\n \n-        Map<String, ResourceDocumentationItem> localDocs = new HashMap<>();\n-        Map<String, ResourceDocumentationItem> parentDocs = new HashMap<>();\n+    public static void extractEmbeddedDoc(ZipFile jarFile, BundleInfoImpl bi) throws IOException {\n+        Enumeration<? extends ZipEntry> entries = jarFile.entries();\n         while (entries.hasMoreElements()) {\n             ZipEntry entry = entries.nextElement();\n-\n-            try (InputStream is = jarFile.getInputStream(entry)) {\n-                if (entry.getName().startsWith(PARENT_DOC_PREFIX) && !entry.isDirectory()) {\n-                    String content = IOUtils.toString(is, StandardCharsets.UTF_8);\n-                    String name = new Path(entry.getName()).lastSegment();\n-                    if (name.length() >= 6 && name.substring(0, 6).equalsIgnoreCase(\"readme\")) {\n-\n-                        ResourceDocumentationItem docItem = new ResourceDocumentationItem(name, content,\n-                                DefaultDocumentationType.DESCRIPTION.toString(), bi);\n-\n-                        parentDocs.put(DefaultDocumentationType.DESCRIPTION.toString(), docItem);\n-                    } else {\n-                        ResourceDocumentationItem docItem = new ResourceDocumentationItem(name, content,\n-                                DefaultDocumentationType.HOW_TO.toString(), bi);\n-                        parentDocs.put(DefaultDocumentationType.HOW_TO.toString(), docItem);\n-                    }\n+            if (entry.isDirectory()) {\n+                continue;\n+            }\n+            int isReadme = isReadme(entry.getName());\n+            if (isReadme > 0) {\n+                Blob content = null;\n+                String name = new Path(entry.getName()).lastSegment();\n+                try (InputStream is = jarFile.getInputStream(entry)) {\n+                    content = getReadme(name, is);\n                 }\n-                if (entry.getName().startsWith(DOC_PREFIX) && !entry.isDirectory()) {\n-                    String content = IOUtils.toString(is, StandardCharsets.UTF_8);\n-                    String name = new Path(entry.getName()).lastSegment();\n-                    if (name.length() >= 6 && name.substring(0, 6).equalsIgnoreCase(\"readme\")) {\n-\n-                        ResourceDocumentationItem docItem = new ResourceDocumentationItem(name, content,\n-                                DefaultDocumentationType.DESCRIPTION.toString(), bi);\n-                        localDocs.put(DefaultDocumentationType.DESCRIPTION.toString(), docItem);\n-                    } else {\n-                        ResourceDocumentationItem docItem = new ResourceDocumentationItem(name, content,\n-                                DefaultDocumentationType.HOW_TO.toString(), bi);\n-                        localDocs.put(DefaultDocumentationType.HOW_TO.toString(), docItem);\n-                    }\n+                if (isReadme == 1) {\n+                    bi.setReadme(content);\n+                } else {\n+                    bi.setParentReadme(content);\n                 }\n             }\n+            if (bi.getReadme() != null && bi.getParentReadme() != null) {\n+                break;\n+            }\n         }\n-        bi.setLiveDoc(localDocs);\n-        bi.setParentLiveDoc(parentDocs);\n     }\n+\n+    /**\n+     * Mimicks extaction of readme file for tests.\n+     *\n+     * @implNote maven is in charge of copying doc files to the target server: this needs to be done here for tests to\n+     *           still take readmes into account in Eclipse for instance.\n+     * @since 11.1\n+     */\n+    public static void extractEmbeddedDoc(File dirFile, BundleInfoImpl bi) throws IOException {\n+        File readme = findFile(dirFile, README);\n+        if (readme != null) {\n+            try (InputStream is = new FileInputStream(readme)) {\n+                bi.setReadme(getReadme(README, is));\n+            }\n+        }\n+        File parentReadme = findFile(new File(dirFile, \"../..\"), README);\n+        if (parentReadme != null) {\n+            try (InputStream is = new FileInputStream(parentReadme)) {\n+                bi.setParentReadme(getReadme(README, is));\n+            }\n+        }\n+    }\n+\n+    /**\n+     * Returns 0 if not a doc, 1 if local doc, 2 if parent doc.\n+     */\n+    protected static int isReadme(String name) {\n+        boolean isDoc = name.startsWith(DOC_PREFIX);\n+        boolean isParentDoc = name.startsWith(PARENT_DOC_PREFIX);\n+        if (isDoc || isParentDoc) {\n+            String filename = new Path(name).lastSegment();\n+            if (filename.length() >= 6 && filename.substring(0, 6).equalsIgnoreCase(\"readme\")) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a8db9ff702916b594b0cd42f7bb580a83dd56e40"}, "originalPosition": 143}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "263e84631db57b6dd50df904e4cb0965f78a7a6d", "author": {"user": {"login": "atchertchian", "name": "Anahide Tchertchian"}}, "url": "https://github.com/nuxeo/nuxeo/commit/263e84631db57b6dd50df904e4cb0965f78a7a6d", "committedDate": "2020-05-14T09:47:30Z", "message": "NXP-28995: remove documentation feature on explorer"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "17fc1a182fa0f7e9aee18b7493787b55c851fdcd", "author": {"user": {"login": "atchertchian", "name": "Anahide Tchertchian"}}, "url": "https://github.com/nuxeo/nuxeo/commit/17fc1a182fa0f7e9aee18b7493787b55c851fdcd", "committedDate": "2020-05-14T09:47:30Z", "message": "NXP-28995: cleanup explorer operation api for consistency"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7c97e255e562bc7e024e5946ac08fa5ea1318270", "author": {"user": {"login": "atchertchian", "name": "Anahide Tchertchian"}}, "url": "https://github.com/nuxeo/nuxeo/commit/7c97e255e562bc7e024e5946ac08fa5ea1318270", "committedDate": "2020-05-14T09:01:30Z", "message": "NXP-28995: better check on readme extraction"}, "afterCommit": {"oid": "0cbe9fe4936d21c777acaeb8ac396e2041ecd763", "author": {"user": {"login": "atchertchian", "name": "Anahide Tchertchian"}}, "url": "https://github.com/nuxeo/nuxeo/commit/0cbe9fe4936d21c777acaeb8ac396e2041ecd763", "committedDate": "2020-05-14T09:47:30Z", "message": "NXP-28995: improve all sorts of remaining doc + add tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e49a4b3c2a5f998f1f2178218647695711f60218", "author": {"user": {"login": "atchertchian", "name": "Anahide Tchertchian"}}, "url": "https://github.com/nuxeo/nuxeo/commit/e49a4b3c2a5f998f1f2178218647695711f60218", "committedDate": "2020-05-14T12:13:45Z", "message": "NXP-28995: keep readmes retrieval + handle display + add ftests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "df6219e9b1b891fa7c56b072dec579c1703cd177", "author": {"user": {"login": "atchertchian", "name": "Anahide Tchertchian"}}, "url": "https://github.com/nuxeo/nuxeo/commit/df6219e9b1b891fa7c56b072dec579c1703cd177", "committedDate": "2020-05-14T12:13:45Z", "message": "NXP-28995: better check on readme extraction"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4dadde8b130f11002492b88aec79d7ae75ca73bb", "author": {"user": {"login": "atchertchian", "name": "Anahide Tchertchian"}}, "url": "https://github.com/nuxeo/nuxeo/commit/4dadde8b130f11002492b88aec79d7ae75ca73bb", "committedDate": "2020-05-14T12:13:45Z", "message": "NXP-28995: fix bundle group retrieval on persisted distributions.\nRevealed by new unit tests."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "58d5dee9b647dadc1dec23a9691e723a8f0d90a5", "author": {"user": {"login": "atchertchian", "name": "Anahide Tchertchian"}}, "url": "https://github.com/nuxeo/nuxeo/commit/58d5dee9b647dadc1dec23a9691e723a8f0d90a5", "committedDate": "2020-05-14T12:13:45Z", "message": "NXP-28995: improve all sorts of remaining doc + add tests"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0cbe9fe4936d21c777acaeb8ac396e2041ecd763", "author": {"user": {"login": "atchertchian", "name": "Anahide Tchertchian"}}, "url": "https://github.com/nuxeo/nuxeo/commit/0cbe9fe4936d21c777acaeb8ac396e2041ecd763", "committedDate": "2020-05-14T09:47:30Z", "message": "NXP-28995: improve all sorts of remaining doc + add tests"}, "afterCommit": {"oid": "58d5dee9b647dadc1dec23a9691e723a8f0d90a5", "author": {"user": {"login": "atchertchian", "name": "Anahide Tchertchian"}}, "url": "https://github.com/nuxeo/nuxeo/commit/58d5dee9b647dadc1dec23a9691e723a8f0d90a5", "committedDate": "2020-05-14T12:13:45Z", "message": "NXP-28995: improve all sorts of remaining doc + add tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEyNDA1NzAz", "url": "https://github.com/nuxeo/nuxeo/pull/3989#pullrequestreview-412405703", "createdAt": "2020-05-15T07:23:21Z", "commit": {"oid": "58d5dee9b647dadc1dec23a9691e723a8f0d90a5"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEyNDI0MzU1", "url": "https://github.com/nuxeo/nuxeo/pull/3989#pullrequestreview-412424355", "createdAt": "2020-05-15T07:53:19Z", "commit": {"oid": "58d5dee9b647dadc1dec23a9691e723a8f0d90a5"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4789, "cost": 1, "resetAt": "2021-11-03T18:41:40Z"}}}