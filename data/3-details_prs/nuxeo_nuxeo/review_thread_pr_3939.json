{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA1NTM1MDIy", "number": 3939, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxNDoxOTo1MlrOD0RVkQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxNDoxOTo1MlrOD0RVkQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2MTM2NTkzOnYy", "diffSide": "RIGHT", "path": "modules/core/nuxeo-core-binarymanager-cloud/nuxeo-core-binarymanager-s3/src/main/java/org/nuxeo/ecm/blob/s3/S3BlobStoreConfiguration.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxNDoxOTo1MlrOGJIWiQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxNDozMToyM1rOGJI9-w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjIyNzIwOQ==", "bodyText": "If Optional creation is not an issue, you could save some lines:\nreturn Optional.ofNullable(result.getObjectLockConfiguration())\n                .map(ObjectLockConfiguration:: getRule)\n                .map(ObjectLockRule:: getDefaultRetention)\n                .map(DefaultRetention::getMode)\n                .map(ObjectLockRetentionMode::valueOf)\n                .orElse(DEFAULT_RETENTION_MODE);", "url": "https://github.com/nuxeo/nuxeo/pull/3939#discussion_r412227209", "createdAt": "2020-04-21T14:19:52Z", "author": {"login": "kevinleturc"}, "path": "modules/core/nuxeo-core-binarymanager-cloud/nuxeo-core-binarymanager-s3/src/main/java/org/nuxeo/ecm/blob/s3/S3BlobStoreConfiguration.java", "diffHunk": "@@ -412,6 +423,33 @@ protected TransferManager createTransferManager() {\n                                      .build();\n     }\n \n+    protected ObjectLockRetentionMode getRetentionMode() {\n+        GetObjectLockConfigurationRequest request = new GetObjectLockConfigurationRequest().withBucketName(bucketName);\n+        GetObjectLockConfigurationResult result;\n+        try {\n+            result = amazonS3.getObjectLockConfiguration(request);\n+        } catch (AmazonServiceException e) {\n+            return DEFAULT_RETENTION_MODE;\n+        }\n+        ObjectLockConfiguration config = result.getObjectLockConfiguration();\n+        if (config == null) {\n+            return DEFAULT_RETENTION_MODE;\n+        }\n+        ObjectLockRule rule = config.getRule();\n+        if (rule == null) {\n+            return DEFAULT_RETENTION_MODE;\n+        }\n+        DefaultRetention defaultRetention = rule.getDefaultRetention();\n+        if (defaultRetention == null) {\n+            return DEFAULT_RETENTION_MODE;\n+        }\n+        String mode = defaultRetention.getMode();\n+        if (mode == null) {\n+            return DEFAULT_RETENTION_MODE;\n+        }\n+        return ObjectLockRetentionMode.valueOf(mode);\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c9d6fa055c9e21db7e0a4b28da5dab17a09fe2a8"}, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjIzNzMwNw==", "bodyText": "Nice, I updated the code.", "url": "https://github.com/nuxeo/nuxeo/pull/3939#discussion_r412237307", "createdAt": "2020-04-21T14:31:23Z", "author": {"login": "efge"}, "path": "modules/core/nuxeo-core-binarymanager-cloud/nuxeo-core-binarymanager-s3/src/main/java/org/nuxeo/ecm/blob/s3/S3BlobStoreConfiguration.java", "diffHunk": "@@ -412,6 +423,33 @@ protected TransferManager createTransferManager() {\n                                      .build();\n     }\n \n+    protected ObjectLockRetentionMode getRetentionMode() {\n+        GetObjectLockConfigurationRequest request = new GetObjectLockConfigurationRequest().withBucketName(bucketName);\n+        GetObjectLockConfigurationResult result;\n+        try {\n+            result = amazonS3.getObjectLockConfiguration(request);\n+        } catch (AmazonServiceException e) {\n+            return DEFAULT_RETENTION_MODE;\n+        }\n+        ObjectLockConfiguration config = result.getObjectLockConfiguration();\n+        if (config == null) {\n+            return DEFAULT_RETENTION_MODE;\n+        }\n+        ObjectLockRule rule = config.getRule();\n+        if (rule == null) {\n+            return DEFAULT_RETENTION_MODE;\n+        }\n+        DefaultRetention defaultRetention = rule.getDefaultRetention();\n+        if (defaultRetention == null) {\n+            return DEFAULT_RETENTION_MODE;\n+        }\n+        String mode = defaultRetention.getMode();\n+        if (mode == null) {\n+            return DEFAULT_RETENTION_MODE;\n+        }\n+        return ObjectLockRetentionMode.valueOf(mode);\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjIyNzIwOQ=="}, "originalCommit": {"oid": "c9d6fa055c9e21db7e0a4b28da5dab17a09fe2a8"}, "originalPosition": 69}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4160, "cost": 1, "resetAt": "2021-11-03T18:41:40Z"}}}