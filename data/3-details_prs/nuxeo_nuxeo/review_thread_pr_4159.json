{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM1NjgxOTY0", "number": 4159, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxMDowNDo1MVrOEGSMPg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQxNToxNTowNlrOEHJo6g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1MDI0OTU4OnYy", "diffSide": "RIGHT", "path": "modules/core/nuxeo-core-el/src/main/java/org/nuxeo/ecm/platform/el/Functions.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxMDowNDo1MVrOGk-7sA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxMzoyOTowM1rOGlFw-w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTQzMzAwOA==", "bodyText": "For consistency:\nReturns {@code true} if the given {@code arr} contains the given {@code o}.\nor\nReturns {@code true} if the given array contains the given object.", "url": "https://github.com/nuxeo/nuxeo/pull/4159#discussion_r441433008", "createdAt": "2020-06-17T10:04:51Z", "author": {"login": "ataillefer"}, "path": "modules/core/nuxeo-core-el/src/main/java/org/nuxeo/ecm/platform/el/Functions.java", "diffHunk": "@@ -0,0 +1,44 @@\n+/*\n+ * (C) Copyright 2020 Nuxeo (http://nuxeo.com/) and others.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ * Contributors:\n+ *     Thomas Roger <troger@nuxeo.com>\n+ */\n+\n+package org.nuxeo.ecm.platform.el;\n+\n+import java.util.Arrays;\n+\n+/**\n+ * Helper functions injected in the {@link ExpressionContext} instance.\n+ *\n+ * @since 11.2\n+ */\n+public class Functions {\n+\n+    /**\n+     * Returns {@code true} if the given {@code arr} contains the specified element.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6343aab04c2685b267fb481a8f97b6ec0a95647f"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTU0NDk1NQ==", "bodyText": "You should specify in the Javadoc what happens for a null array (it's fine to make it behave like an empty one).", "url": "https://github.com/nuxeo/nuxeo/pull/4159#discussion_r441544955", "createdAt": "2020-06-17T13:29:03Z", "author": {"login": "efge"}, "path": "modules/core/nuxeo-core-el/src/main/java/org/nuxeo/ecm/platform/el/Functions.java", "diffHunk": "@@ -0,0 +1,44 @@\n+/*\n+ * (C) Copyright 2020 Nuxeo (http://nuxeo.com/) and others.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ * Contributors:\n+ *     Thomas Roger <troger@nuxeo.com>\n+ */\n+\n+package org.nuxeo.ecm.platform.el;\n+\n+import java.util.Arrays;\n+\n+/**\n+ * Helper functions injected in the {@link ExpressionContext} instance.\n+ *\n+ * @since 11.2\n+ */\n+public class Functions {\n+\n+    /**\n+     * Returns {@code true} if the given {@code arr} contains the specified element.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTQzMzAwOA=="}, "originalCommit": {"oid": "6343aab04c2685b267fb481a8f97b6ec0a95647f"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1MDMyNTQ2OnYy", "diffSide": "RIGHT", "path": "modules/core/nuxeo-core-el/src/test/java/org/nuxeo/platform/el/TestExpressionEvaluator.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxMDoyNzowNVrOGk_rfg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxMDoyNzowNVrOGk_rfg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTQ0NTI0Ng==", "bodyText": "Could add @since 11.2", "url": "https://github.com/nuxeo/nuxeo/pull/4159#discussion_r441445246", "createdAt": "2020-06-17T10:27:05Z", "author": {"login": "ataillefer"}, "path": "modules/core/nuxeo-core-el/src/test/java/org/nuxeo/platform/el/TestExpressionEvaluator.java", "diffHunk": "@@ -106,4 +107,21 @@ public void testList() {\n         assertNotNull(value);\n     }\n \n+    /**\n+     * NXP-28918\n+     */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6343aab04c2685b267fb481a8f97b6ec0a95647f"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1MDMyNjc2OnYy", "diffSide": "RIGHT", "path": "modules/platform/nuxeo-platform-imaging/nuxeo-platform-imaging-core/src/test/java/org/nuxeo/ecm/platform/picture/core/test/TestPictureConversions.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxMDoyNzozMVrOGk_sYg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxMDoyNzozMVrOGk_sYg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTQ0NTQ3NA==", "bodyText": "@since 11.2", "url": "https://github.com/nuxeo/nuxeo/pull/4159#discussion_r441445474", "createdAt": "2020-06-17T10:27:31Z", "author": {"login": "ataillefer"}, "path": "modules/platform/nuxeo-platform-imaging/nuxeo-platform-imaging-core/src/test/java/org/nuxeo/ecm/platform/picture/core/test/TestPictureConversions.java", "diffHunk": "@@ -194,6 +194,32 @@ public void shouldFilterPictureConversions() throws Exception {\n         assertNull(multiviewPicture.getView(\"anotherSmallConversion\"));\n     }\n \n+    /**\n+     * NXP-28918\n+     */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6343aab04c2685b267fb481a8f97b6ec0a95647f"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1MDk0MzE0OnYy", "diffSide": "RIGHT", "path": "modules/core/nuxeo-core-el/src/test/java/org/nuxeo/platform/el/TestExpressionEvaluator.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxMzoyOTo0OVrOGlFy-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxNjoxNjowM1rOGlNKQw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTU0NTQ2NQ==", "bodyText": "Please also test the null case.", "url": "https://github.com/nuxeo/nuxeo/pull/4159#discussion_r441545465", "createdAt": "2020-06-17T13:29:49Z", "author": {"login": "efge"}, "path": "modules/core/nuxeo-core-el/src/test/java/org/nuxeo/platform/el/TestExpressionEvaluator.java", "diffHunk": "@@ -106,4 +107,21 @@ public void testList() {\n         assertNotNull(value);\n     }\n \n+    /**\n+     * NXP-28918\n+     */\n+    @Test\n+    public void testArrayContainsFunction() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6343aab04c2685b267fb481a8f97b6ec0a95647f"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTU0ODYxNg==", "bodyText": "WDYM? The array to null or the element? (or both maybe?)", "url": "https://github.com/nuxeo/nuxeo/pull/4159#discussion_r441548616", "createdAt": "2020-06-17T13:34:17Z", "author": {"login": "troger"}, "path": "modules/core/nuxeo-core-el/src/test/java/org/nuxeo/platform/el/TestExpressionEvaluator.java", "diffHunk": "@@ -106,4 +107,21 @@ public void testList() {\n         assertNotNull(value);\n     }\n \n+    /**\n+     * NXP-28918\n+     */\n+    @Test\n+    public void testArrayContainsFunction() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTU0NTQ2NQ=="}, "originalCommit": {"oid": "6343aab04c2685b267fb481a8f97b6ec0a95647f"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTU1NjU0NA==", "bodyText": "I meant the array.", "url": "https://github.com/nuxeo/nuxeo/pull/4159#discussion_r441556544", "createdAt": "2020-06-17T13:45:06Z", "author": {"login": "efge"}, "path": "modules/core/nuxeo-core-el/src/test/java/org/nuxeo/platform/el/TestExpressionEvaluator.java", "diffHunk": "@@ -106,4 +107,21 @@ public void testList() {\n         assertNotNull(value);\n     }\n \n+    /**\n+     * NXP-28918\n+     */\n+    @Test\n+    public void testArrayContainsFunction() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTU0NTQ2NQ=="}, "originalCommit": {"oid": "6343aab04c2685b267fb481a8f97b6ec0a95647f"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTU5MjAxMw==", "bodyText": "First test is testing  a null (non-existent) array in the context.\nI can't explicitly set a null value with evaluatorUnderTest#bindValue anyway.", "url": "https://github.com/nuxeo/nuxeo/pull/4159#discussion_r441592013", "createdAt": "2020-06-17T14:32:22Z", "author": {"login": "troger"}, "path": "modules/core/nuxeo-core-el/src/test/java/org/nuxeo/platform/el/TestExpressionEvaluator.java", "diffHunk": "@@ -106,4 +107,21 @@ public void testList() {\n         assertNotNull(value);\n     }\n \n+    /**\n+     * NXP-28918\n+     */\n+    @Test\n+    public void testArrayContainsFunction() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTU0NTQ2NQ=="}, "originalCommit": {"oid": "6343aab04c2685b267fb481a8f97b6ec0a95647f"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTY2NjExNQ==", "bodyText": "Ah yes sorry", "url": "https://github.com/nuxeo/nuxeo/pull/4159#discussion_r441666115", "createdAt": "2020-06-17T16:16:03Z", "author": {"login": "efge"}, "path": "modules/core/nuxeo-core-el/src/test/java/org/nuxeo/platform/el/TestExpressionEvaluator.java", "diffHunk": "@@ -106,4 +107,21 @@ public void testList() {\n         assertNotNull(value);\n     }\n \n+    /**\n+     * NXP-28918\n+     */\n+    @Test\n+    public void testArrayContainsFunction() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTU0NTQ2NQ=="}, "originalCommit": {"oid": "6343aab04c2685b267fb481a8f97b6ec0a95647f"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1MDk0ODU2OnYy", "diffSide": "RIGHT", "path": "modules/core/nuxeo-core-el/src/main/java/org/nuxeo/ecm/platform/el/Functions.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxMzozMDo1OVrOGlF2WA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxMzozMzoxMFrOGlF8VQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTU0NjMyOA==", "bodyText": "While we're at it wouldn't it be useful to also code now an arrayContainsAll and arrayContainsAny? And maybe arrayContainsNone?", "url": "https://github.com/nuxeo/nuxeo/pull/4159#discussion_r441546328", "createdAt": "2020-06-17T13:30:59Z", "author": {"login": "efge"}, "path": "modules/core/nuxeo-core-el/src/main/java/org/nuxeo/ecm/platform/el/Functions.java", "diffHunk": "@@ -0,0 +1,44 @@\n+/*\n+ * (C) Copyright 2020 Nuxeo (http://nuxeo.com/) and others.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ * Contributors:\n+ *     Thomas Roger <troger@nuxeo.com>\n+ */\n+\n+package org.nuxeo.ecm.platform.el;\n+\n+import java.util.Arrays;\n+\n+/**\n+ * Helper functions injected in the {@link ExpressionContext} instance.\n+ *\n+ * @since 11.2\n+ */\n+public class Functions {\n+\n+    /**\n+     * Returns {@code true} if the given {@code arr} contains the specified element.\n+     */\n+    public static boolean arrayContains(Object[] arr, Object o) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6343aab04c2685b267fb481a8f97b6ec0a95647f"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTU0Nzg2MQ==", "bodyText": "I'm not always a fan of adding methods that are not needed but could be a good idea here.", "url": "https://github.com/nuxeo/nuxeo/pull/4159#discussion_r441547861", "createdAt": "2020-06-17T13:33:10Z", "author": {"login": "troger"}, "path": "modules/core/nuxeo-core-el/src/main/java/org/nuxeo/ecm/platform/el/Functions.java", "diffHunk": "@@ -0,0 +1,44 @@\n+/*\n+ * (C) Copyright 2020 Nuxeo (http://nuxeo.com/) and others.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ * Contributors:\n+ *     Thomas Roger <troger@nuxeo.com>\n+ */\n+\n+package org.nuxeo.ecm.platform.el;\n+\n+import java.util.Arrays;\n+\n+/**\n+ * Helper functions injected in the {@link ExpressionContext} instance.\n+ *\n+ * @since 11.2\n+ */\n+public class Functions {\n+\n+    /**\n+     * Returns {@code true} if the given {@code arr} contains the specified element.\n+     */\n+    public static boolean arrayContains(Object[] arr, Object o) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTU0NjMyOA=="}, "originalCommit": {"oid": "6343aab04c2685b267fb481a8f97b6ec0a95647f"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1OTIyNjAxOnYy", "diffSide": "RIGHT", "path": "modules/core/nuxeo-core-el/src/main/java/org/nuxeo/ecm/platform/el/ExpressionContext.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQxNDo0MzozMVrOGmXUSQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQxNDo0MzozMVrOGmXUSQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjg4MTA5Nw==", "bodyText": "No need for isPublic, as getMethods only returns public methods", "url": "https://github.com/nuxeo/nuxeo/pull/4159#discussion_r442881097", "createdAt": "2020-06-19T14:43:31Z", "author": {"login": "efge"}, "path": "modules/core/nuxeo-core-el/src/main/java/org/nuxeo/ecm/platform/el/ExpressionContext.java", "diffHunk": "@@ -30,6 +35,12 @@\n \n public class ExpressionContext extends ELContext {\n \n+    private static final Map<String, Method> DEFAULT_FUNCTIONS = //\n+            Stream.of(Functions.class.getMethods())\n+                  .filter(m -> Modifier.isStatic(m.getModifiers()))\n+                  .filter(m -> Modifier.isPublic(m.getModifiers()))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7b4f19491d2f0c4a0036058d114939fcb3683471"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1OTMzNDE4OnYy", "diffSide": "RIGHT", "path": "modules/core/nuxeo-core-el/src/main/java/org/nuxeo/ecm/platform/el/ExpressionContext.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQxNToxNTowNlrOGmYYSQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQxNToxNTowNlrOGmYYSQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjg5ODUwNQ==", "bodyText": "String.format is overkill and costly (and you don't use it in mapFunction anyway).", "url": "https://github.com/nuxeo/nuxeo/pull/4159#discussion_r442898505", "createdAt": "2020-06-19T15:15:06Z", "author": {"login": "efge"}, "path": "modules/core/nuxeo-core-el/src/main/java/org/nuxeo/ecm/platform/el/ExpressionContext.java", "diffHunk": "@@ -51,7 +62,13 @@ public ValueExpression setVariable(String variable, ValueExpression expression)\n \n         @Override\n         public Method resolveFunction(String prefix, String localName) {\n-            return map.get(prefix + \":\" + localName);\n+            String key = String.format(\"%s:%s\", prefix, localName);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7b4f19491d2f0c4a0036058d114939fcb3683471"}, "originalPosition": 33}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4118, "cost": 1, "resetAt": "2021-11-03T18:41:40Z"}}}