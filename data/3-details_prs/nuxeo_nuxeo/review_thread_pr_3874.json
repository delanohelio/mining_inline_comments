{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk1MzY1Mzcz", "number": 3874, "reviewThreads": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxMzoyMjo0NVrODvIAXA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxMzozMToyMlrODvIPHg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwNzQwODI4OnYy", "diffSide": "RIGHT", "path": "modules/platform/nuxeo-elasticsearch/nuxeo-elasticsearch-audit/src/main/java/org/nuxeo/elasticsearch/audit/pageprovider/ESDocumentHistoryPageProvider.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxMzoyMjo0NVrOGBXcOw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxMzoyMjo0NVrOGBXcOw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDA4NTgxOQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        if (fixedPart != null && !fixedPart.isEmpty()) {\n          \n          \n            \n                        if (StringUtils.isNotEmpty(fixedPart)) {", "url": "https://github.com/nuxeo/nuxeo/pull/3874#discussion_r404085819", "createdAt": "2020-04-06T13:22:45Z", "author": {"login": "troger"}, "path": "modules/platform/nuxeo-elasticsearch/nuxeo-elasticsearch-audit/src/main/java/org/nuxeo/elasticsearch/audit/pageprovider/ESDocumentHistoryPageProvider.java", "diffHunk": "@@ -79,6 +79,14 @@\n \n     @Override\n     protected String getFixedPart() {\n+        if (getDefinition().getWhereClause() != null) {\n+            //if the pp definition contains a fixed part, use it\n+            String fixedPart = getDefinition().getWhereClause().getFixedPart();\n+            if (fixedPart != null && !fixedPart.isEmpty()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "18ee347570d4ad9225e936d4f6fcd3c2d3ce4104"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwNzQwOTY1OnYy", "diffSide": "RIGHT", "path": "modules/platform/nuxeo-elasticsearch/nuxeo-elasticsearch-audit/src/test/java/org/nuxeo/elasticsearch/TestESHistoryProvider.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxMzoyMzowNFrOGBXdFw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxMzoyMzowNFrOGBXdFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDA4NjAzOQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    extendedInfos.put(\"reason\",new ExtendedInfoImpl.StringInfo(\"test\"));\n          \n          \n            \n                    extendedInfos.put(\"reason\", new ExtendedInfoImpl.StringInfo(\"test\"));", "url": "https://github.com/nuxeo/nuxeo/pull/3874#discussion_r404086039", "createdAt": "2020-04-06T13:23:04Z", "author": {"login": "troger"}, "path": "modules/platform/nuxeo-elasticsearch/nuxeo-elasticsearch-audit/src/test/java/org/nuxeo/elasticsearch/TestESHistoryProvider.java", "diffHunk": "@@ -197,6 +200,9 @@ protected void createTestEntries() throws Exception {\n         createdEntry.setEventDate(new Date());\n         createdEntry.setDocPath(doc.getPathAsString());\n         createdEntry.setRepositoryId(\"test\");\n+        Map<String, ExtendedInfo> extendedInfos = new HashMap<>();\n+        extendedInfos.put(\"reason\",new ExtendedInfoImpl.StringInfo(\"test\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "18ee347570d4ad9225e936d4f6fcd3c2d3ce4104"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwNzQxODU1OnYy", "diffSide": "RIGHT", "path": "modules/platform/nuxeo-elasticsearch/nuxeo-elasticsearch-audit/src/test/java/org/nuxeo/elasticsearch/TestESHistoryProvider.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxMzoyNDo1OFrOGBXirg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxMzoyNDo1OFrOGBXirg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDA4NzQ3MA==", "bodyText": "Move it to the first pageProvider assignation.", "url": "https://github.com/nuxeo/nuxeo/pull/3874#discussion_r404087470", "createdAt": "2020-04-06T13:24:58Z", "author": {"login": "troger"}, "path": "modules/platform/nuxeo-elasticsearch/nuxeo-elasticsearch-audit/src/test/java/org/nuxeo/elasticsearch/TestESHistoryProvider.java", "diffHunk": "@@ -398,6 +404,30 @@ public void testCustomDocumentHistoryPageProvider() {\n         assertEquals(5, entries.size());\n     }\n \n+    @Test\n+    public void testCustomFixedPartDocumentHistoryPageProvider() {\n+        assertNotNull(pageProviderService.getPageProviderDefinition(\"FIXED_PART_DOCUMENT_HISTORY_PROVIDER\"));\n+        DocumentModel searchDoc = session.createDocumentModel(\"BasicAuditSearch\");\n+        searchDoc.setPathInfo(\"/\", \"auditsearch\");\n+        searchDoc = session.createDocument(searchDoc);\n+\n+        PageProvider<LogEntry> pageProvider;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "18ee347570d4ad9225e936d4f6fcd3c2d3ce4104"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwNzQyMDI3OnYy", "diffSide": "RIGHT", "path": "modules/platform/nuxeo-elasticsearch/nuxeo-elasticsearch-audit/src/test/java/org/nuxeo/elasticsearch/TestESHistoryProvider.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxMzoyNToyNVrOGBXjzQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxMzoyNToyNVrOGBXjzQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDA4Nzc1Nw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    //test with doc\n          \n          \n            \n                    // test with doc", "url": "https://github.com/nuxeo/nuxeo/pull/3874#discussion_r404087757", "createdAt": "2020-04-06T13:25:25Z", "author": {"login": "troger"}, "path": "modules/platform/nuxeo-elasticsearch/nuxeo-elasticsearch-audit/src/test/java/org/nuxeo/elasticsearch/TestESHistoryProvider.java", "diffHunk": "@@ -398,6 +404,30 @@ public void testCustomDocumentHistoryPageProvider() {\n         assertEquals(5, entries.size());\n     }\n \n+    @Test\n+    public void testCustomFixedPartDocumentHistoryPageProvider() {\n+        assertNotNull(pageProviderService.getPageProviderDefinition(\"FIXED_PART_DOCUMENT_HISTORY_PROVIDER\"));\n+        DocumentModel searchDoc = session.createDocumentModel(\"BasicAuditSearch\");\n+        searchDoc.setPathInfo(\"/\", \"auditsearch\");\n+        searchDoc = session.createDocument(searchDoc);\n+\n+        PageProvider<LogEntry> pageProvider;\n+        searchDoc.setPropertyValue(\"basicauditsearch:eventIds\", null);\n+        searchDoc.setPropertyValue(\"basicauditsearch:eventCategories\", null);\n+        searchDoc.setPropertyValue(\"basicauditsearch:startDate\", null);\n+        searchDoc.setPropertyValue(\"basicauditsearch:endDate\", null);\n+\n+        //test with doc", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "18ee347570d4ad9225e936d4f6fcd3c2d3ce4104"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwNzQyMDgzOnYy", "diffSide": "RIGHT", "path": "modules/platform/nuxeo-elasticsearch/nuxeo-elasticsearch-audit/src/test/java/org/nuxeo/elasticsearch/TestESHistoryProvider.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxMzoyNTozMVrOGBXkHg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxMzoyNTozMVrOGBXkHg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDA4NzgzOA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    //test with proxy to check that the doc uuid is correctly set in the fixed part\n          \n          \n            \n                    // test with proxy to check that the doc uuid is correctly set in the fixed part", "url": "https://github.com/nuxeo/nuxeo/pull/3874#discussion_r404087838", "createdAt": "2020-04-06T13:25:31Z", "author": {"login": "troger"}, "path": "modules/platform/nuxeo-elasticsearch/nuxeo-elasticsearch-audit/src/test/java/org/nuxeo/elasticsearch/TestESHistoryProvider.java", "diffHunk": "@@ -398,6 +404,30 @@ public void testCustomDocumentHistoryPageProvider() {\n         assertEquals(5, entries.size());\n     }\n \n+    @Test\n+    public void testCustomFixedPartDocumentHistoryPageProvider() {\n+        assertNotNull(pageProviderService.getPageProviderDefinition(\"FIXED_PART_DOCUMENT_HISTORY_PROVIDER\"));\n+        DocumentModel searchDoc = session.createDocumentModel(\"BasicAuditSearch\");\n+        searchDoc.setPathInfo(\"/\", \"auditsearch\");\n+        searchDoc = session.createDocument(searchDoc);\n+\n+        PageProvider<LogEntry> pageProvider;\n+        searchDoc.setPropertyValue(\"basicauditsearch:eventIds\", null);\n+        searchDoc.setPropertyValue(\"basicauditsearch:eventCategories\", null);\n+        searchDoc.setPropertyValue(\"basicauditsearch:startDate\", null);\n+        searchDoc.setPropertyValue(\"basicauditsearch:endDate\", null);\n+\n+        //test with doc\n+        pageProvider = getPageProvider(\"FIXED_PART_DOCUMENT_HISTORY_PROVIDER\", 30, 0, doc);\n+        pageProvider.setSearchDocumentModel(searchDoc);\n+        assertEquals(1,pageProvider.getCurrentPage().size());\n+\n+        //test with proxy to check that the doc uuid is correctly set in the fixed part", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "18ee347570d4ad9225e936d4f6fcd3c2d3ce4104"}, "originalPosition": 50}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwNzQyMTkyOnYy", "diffSide": "RIGHT", "path": "modules/platform/nuxeo-elasticsearch/nuxeo-elasticsearch-audit/src/test/java/org/nuxeo/elasticsearch/TestESHistoryProvider.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxMzoyNTo0N1rOGBXkzA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxMzoyNTo0N1rOGBXkzA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDA4ODAxMg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    assertEquals(1,pageProvider.getCurrentPage().size());\n          \n          \n            \n                    assertEquals(1, pageProvider.getCurrentPage().size());", "url": "https://github.com/nuxeo/nuxeo/pull/3874#discussion_r404088012", "createdAt": "2020-04-06T13:25:47Z", "author": {"login": "troger"}, "path": "modules/platform/nuxeo-elasticsearch/nuxeo-elasticsearch-audit/src/test/java/org/nuxeo/elasticsearch/TestESHistoryProvider.java", "diffHunk": "@@ -398,6 +404,30 @@ public void testCustomDocumentHistoryPageProvider() {\n         assertEquals(5, entries.size());\n     }\n \n+    @Test\n+    public void testCustomFixedPartDocumentHistoryPageProvider() {\n+        assertNotNull(pageProviderService.getPageProviderDefinition(\"FIXED_PART_DOCUMENT_HISTORY_PROVIDER\"));\n+        DocumentModel searchDoc = session.createDocumentModel(\"BasicAuditSearch\");\n+        searchDoc.setPathInfo(\"/\", \"auditsearch\");\n+        searchDoc = session.createDocument(searchDoc);\n+\n+        PageProvider<LogEntry> pageProvider;\n+        searchDoc.setPropertyValue(\"basicauditsearch:eventIds\", null);\n+        searchDoc.setPropertyValue(\"basicauditsearch:eventCategories\", null);\n+        searchDoc.setPropertyValue(\"basicauditsearch:startDate\", null);\n+        searchDoc.setPropertyValue(\"basicauditsearch:endDate\", null);\n+\n+        //test with doc\n+        pageProvider = getPageProvider(\"FIXED_PART_DOCUMENT_HISTORY_PROVIDER\", 30, 0, doc);\n+        pageProvider.setSearchDocumentModel(searchDoc);\n+        assertEquals(1,pageProvider.getCurrentPage().size());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "18ee347570d4ad9225e936d4f6fcd3c2d3ce4104"}, "originalPosition": 48}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwNzQ0MDA2OnYy", "diffSide": "RIGHT", "path": "modules/platform/nuxeo-elasticsearch/nuxeo-elasticsearch-audit/src/test/java/org/nuxeo/elasticsearch/TestESHistoryProvider.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxMzoyOTo1NVrOGBXv-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxMzoyOTo1NVrOGBXv-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDA5MDg3Mg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    assertEquals(0,pageProvider.getCurrentPage().size());\n          \n          \n            \n                    assertTrue(pageProvider.getCurrentPage().isEmpty());", "url": "https://github.com/nuxeo/nuxeo/pull/3874#discussion_r404090872", "createdAt": "2020-04-06T13:29:55Z", "author": {"login": "troger"}, "path": "modules/platform/nuxeo-elasticsearch/nuxeo-elasticsearch-audit/src/test/java/org/nuxeo/elasticsearch/TestESHistoryProvider.java", "diffHunk": "@@ -398,6 +404,30 @@ public void testCustomDocumentHistoryPageProvider() {\n         assertEquals(5, entries.size());\n     }\n \n+    @Test\n+    public void testCustomFixedPartDocumentHistoryPageProvider() {\n+        assertNotNull(pageProviderService.getPageProviderDefinition(\"FIXED_PART_DOCUMENT_HISTORY_PROVIDER\"));\n+        DocumentModel searchDoc = session.createDocumentModel(\"BasicAuditSearch\");\n+        searchDoc.setPathInfo(\"/\", \"auditsearch\");\n+        searchDoc = session.createDocument(searchDoc);\n+\n+        PageProvider<LogEntry> pageProvider;\n+        searchDoc.setPropertyValue(\"basicauditsearch:eventIds\", null);\n+        searchDoc.setPropertyValue(\"basicauditsearch:eventCategories\", null);\n+        searchDoc.setPropertyValue(\"basicauditsearch:startDate\", null);\n+        searchDoc.setPropertyValue(\"basicauditsearch:endDate\", null);\n+\n+        //test with doc\n+        pageProvider = getPageProvider(\"FIXED_PART_DOCUMENT_HISTORY_PROVIDER\", 30, 0, doc);\n+        pageProvider.setSearchDocumentModel(searchDoc);\n+        assertEquals(1,pageProvider.getCurrentPage().size());\n+\n+        //test with proxy to check that the doc uuid is correctly set in the fixed part\n+        pageProvider = getPageProvider(\"FIXED_PART_DOCUMENT_HISTORY_PROVIDER\", 30, 0, proxy);\n+        pageProvider.setSearchDocumentModel(searchDoc);\n+        assertEquals(0,pageProvider.getCurrentPage().size());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "18ee347570d4ad9225e936d4f6fcd3c2d3ce4104"}, "originalPosition": 53}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwNzQ0NjA2OnYy", "diffSide": "RIGHT", "path": "modules/platform/nuxeo-elasticsearch/nuxeo-elasticsearch-audit/src/test/resources/es-audit-pageprovider-test-contrib.xml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxMzozMToyMlrOGBXzuw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxMzozMToyMlrOGBXzuw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDA5MTgzNQ==", "bodyText": "Not really needed \ud83d\ude03", "url": "https://github.com/nuxeo/nuxeo/pull/3874#discussion_r404091835", "createdAt": "2020-04-06T13:31:22Z", "author": {"login": "troger"}, "path": "modules/platform/nuxeo-elasticsearch/nuxeo-elasticsearch-audit/src/test/resources/es-audit-pageprovider-test-contrib.xml", "diffHunk": "@@ -128,6 +128,45 @@\n       <maxPageSize>1000</maxPageSize>\n     </genericPageProvider>\n \n+    <genericPageProvider name=\"FIXED_PART_DOCUMENT_HISTORY_PROVIDER\"\n+                         class=\"org.nuxeo.elasticsearch.audit.pageprovider.ESDocumentHistoryPageProvider\">\n+      <whereClause docType=\"BasicAuditSearch\">\n+        <fixedPart>\n+          {\n+            \"bool\": {\n+              \"must\": [{\n+                  \"term\": {\n+                    \"docUUID\": \"?\"\n+                  }\n+                },{\n+                  \"term\": {\n+                    \"extended.reason\": \"test\"\n+                  }\n+              }]\n+            }\n+          }\n+        </fixedPart>\n+        <predicate parameter=\"eventDate\" operator=\"BETWEEN\">\n+          <field schema=\"basicauditsearch\" name=\"startDate\" />\n+          <field schema=\"basicauditsearch\" name=\"endDate\" />\n+        </predicate>\n+        <predicate parameter=\"category\" operator=\"IN\">\n+          <field schema=\"basicauditsearch\" name=\"eventCategories\" />\n+        </predicate>\n+        <predicate parameter=\"eventId\" operator=\"IN\">\n+          <field schema=\"basicauditsearch\" name=\"eventIds\" />\n+        </predicate>\n+        <predicate parameter=\"principalName\" operator=\"IN\">\n+          <field schema=\"basicauditsearch\" name=\"principalNames\" />\n+        </predicate>\n+      </whereClause>\n+      <sort column=\"eventDate\" ascending=\"false\" />\n+      <pageSize>10</pageSize>\n+      <maxPageSize>1000</maxPageSize>\n+    </genericPageProvider>\n+\n+\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "18ee347570d4ad9225e936d4f6fcd3c2d3ce4104"}, "originalPosition": 42}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4224, "cost": 1, "resetAt": "2021-11-03T18:41:40Z"}}}