{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcxMDg5NzM1", "number": 3723, "title": "fix-NXP-28408-check-underlying-file-cache-entry-presence", "bodyText": "PR created from https://qa.nuxeo.org/jenkins/job/TestAndPush/job/ondemand-testandpush-nalkotob/122/", "createdAt": "2020-02-04T22:49:48Z", "url": "https://github.com/nuxeo/nuxeo/pull/3723", "merged": true, "mergeCommit": {"oid": "f4b0b64870e8aff104b45fcb52082f9d87cf3d79"}, "closed": true, "closedAt": "2020-02-11T18:59:40Z", "author": {"login": "nuxeojenkins"}, "timelineItems": {"totalCount": 18, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcBRFn0AFqTM1MzUxMTU2MA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcDUonPgFqTM1NjgyMTc5OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUzNTExNTYw", "url": "https://github.com/nuxeo/nuxeo/pull/3723#pullrequestreview-353511560", "createdAt": "2020-02-05T07:34:32Z", "commit": {"oid": "e1a8f094930468560560e6590f76a723500afe04"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQwNzozNDozMlrOFluEUA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQwNzozNDozMlrOFluEUA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTA5NjQwMA==", "bodyText": "Already done by the unique caller getFromCache so not appropriate here, no?", "url": "https://github.com/nuxeo/nuxeo/pull/3723#discussion_r375096400", "createdAt": "2020-02-05T07:34:32Z", "author": {"login": "ataillefer"}, "path": "nuxeo-core/nuxeo-core-convert/src/main/java/org/nuxeo/ecm/core/convert/cache/ConversionCacheHolder.java", "diffHunk": "@@ -178,7 +183,12 @@ protected static BlobHolder doGetFromCache(String key) {\n                 // skip all negative values\n                 CACHE_HITS.addAndGet(Long.MIN_VALUE); // back to 0\n             }\n-            return cacheEntry.restore();\n+            BlobHolder restored = cacheEntry.restore();\n+            if (restored.getBlob().getFile().exists()) {\n+                return restored;\n+            } else {\n+                removeFromCache(key);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e1a8f094930468560560e6590f76a723500afe04"}, "originalPosition": 29}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUzNTE2MjI5", "url": "https://github.com/nuxeo/nuxeo/pull/3723#pullrequestreview-353516229", "createdAt": "2020-02-05T07:46:20Z", "commit": {"oid": "e1a8f094930468560560e6590f76a723500afe04"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQwNzo0NjoyMFrOFluS_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQwNzo0NjoyMFrOFluS_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTEwMDE1Ng==", "bodyText": "This test is nice, but it might be better/simpler to have a real unit test of the impacted ConversionCacheHolder API:\n\nIn the same Maven module: nuxeo-core-convert instead of nuxeo-platform-convert, so the test and the code are in the same layer.\nTesting directly #getFromCache, as it's static it should be easy.\nNot bothering with the ConversionService.\n\nYou should be able to add a BlobHolder to the cache, verify you can get it, delete its underlying file, get it again and verify the result is null and the cache entry has been removed.", "url": "https://github.com/nuxeo/nuxeo/pull/3723#discussion_r375100156", "createdAt": "2020-02-05T07:46:20Z", "author": {"login": "ataillefer"}, "path": "nuxeo-services/nuxeo-platform-convert/src/test/java/org/nuxeo/ecm/platform/convert/tests/TestCacheConversion.java", "diffHunk": "@@ -0,0 +1,74 @@\n+/*\n+ * (C) Copyright 2020 Nuxeo (http://nuxeo.com/) and others.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ * Contributors:\n+ *     Nour AL KOTOB\n+ */\n+package org.nuxeo.ecm.platform.convert.tests;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertNotEquals;\n+import static org.junit.Assert.assertNotNull;\n+\n+import java.io.IOException;\n+import java.io.Serializable;\n+import java.nio.file.Files;\n+import java.nio.file.Paths;\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+import org.junit.Test;\n+import org.nuxeo.ecm.core.api.blobholder.BlobHolder;\n+import org.nuxeo.ecm.core.convert.cache.CacheKeyGenerator;\n+import org.nuxeo.ecm.core.convert.cache.ConversionCacheHolder;\n+\n+/**\n+ * @since 11.1\n+ */\n+public class TestCacheConversion extends BaseConverterTest {\n+\n+    @Test\n+    public void shouldRegenNullFileCacheEntries() throws IOException {\n+        String srcMT = \"text/html\";\n+        String fileName = \"hello.html\";\n+        String converterName = cs.getConverterName(srcMT, \"application/pdf\");\n+        assertEquals(\"any2pdf\", converterName);\n+\n+        checkConverterAvailability(converterName);\n+        checkCommandAvailability(\"soffice\");\n+\n+        BlobHolder hg = getBlobFromPath(\"test-docs/\" + fileName, srcMT);\n+        Map<String, Serializable> parameters = new HashMap<>();\n+\n+        // first conversion\n+        BlobHolder result = cs.convert(converterName, hg, parameters);\n+        assertNotNull(result);\n+\n+        // retrieve the temp file\n+        String cacheKey = CacheKeyGenerator.computeKey(converterName, hg, parameters);\n+        BlobHolder blobHolder = ConversionCacheHolder.getFromCache(cacheKey);\n+        String firstTempFileName = blobHolder.getBlob().getFile().getAbsolutePath();\n+        // delete the temp file\n+        Files.delete(Paths.get(blobHolder.getBlob().getFile().getPath()));\n+\n+        // replay conversion\n+        cs.convert(converterName, hg, parameters);\n+        blobHolder = ConversionCacheHolder.getFromCache(cacheKey);\n+        String secondTempFileName = blobHolder.getBlob().getFile().getAbsolutePath();\n+        // missing temp file has been regenerated. So it has a different name\n+        assertNotEquals(firstTempFileName, secondTempFileName);\n+    }\n+\n+}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e1a8f094930468560560e6590f76a723500afe04"}, "originalPosition": 74}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e1a8f094930468560560e6590f76a723500afe04", "author": {"user": {"login": "NourNuxeo", "name": "Nour AL KOTOB"}}, "url": "https://github.com/nuxeo/nuxeo/commit/e1a8f094930468560560e6590f76a723500afe04", "committedDate": "2020-02-04T20:34:56Z", "message": "NXP-28408: check cached temp file exist"}, "afterCommit": {"oid": "10a83a29a0b2d27d06232a22ff20d79622076c08", "author": {"user": {"login": "NourNuxeo", "name": "Nour AL KOTOB"}}, "url": "https://github.com/nuxeo/nuxeo/commit/10a83a29a0b2d27d06232a22ff20d79622076c08", "committedDate": "2020-02-07T19:03:38Z", "message": "NXP-28408: check cached temp file exist"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "10a83a29a0b2d27d06232a22ff20d79622076c08", "author": {"user": {"login": "NourNuxeo", "name": "Nour AL KOTOB"}}, "url": "https://github.com/nuxeo/nuxeo/commit/10a83a29a0b2d27d06232a22ff20d79622076c08", "committedDate": "2020-02-07T19:03:38Z", "message": "NXP-28408: check cached temp file exist"}, "afterCommit": {"oid": "cbec6bf65b0ad532e065278b34bd029c9adc60e0", "author": {"user": {"login": "NourNuxeo", "name": "Nour AL KOTOB"}}, "url": "https://github.com/nuxeo/nuxeo/commit/cbec6bf65b0ad532e065278b34bd029c9adc60e0", "committedDate": "2020-02-07T19:05:04Z", "message": "NXP-28408: check cached temp file exist"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "cbec6bf65b0ad532e065278b34bd029c9adc60e0", "author": {"user": {"login": "NourNuxeo", "name": "Nour AL KOTOB"}}, "url": "https://github.com/nuxeo/nuxeo/commit/cbec6bf65b0ad532e065278b34bd029c9adc60e0", "committedDate": "2020-02-07T19:05:04Z", "message": "NXP-28408: check cached temp file exist"}, "afterCommit": {"oid": "01e09b584c3aa36cd02d69b38f3d728992293e43", "author": {"user": {"login": "NourNuxeo", "name": "Nour AL KOTOB"}}, "url": "https://github.com/nuxeo/nuxeo/commit/01e09b584c3aa36cd02d69b38f3d728992293e43", "committedDate": "2020-02-07T19:10:02Z", "message": "NXP-28408: check cached temp file exist"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "01e09b584c3aa36cd02d69b38f3d728992293e43", "author": {"user": {"login": "NourNuxeo", "name": "Nour AL KOTOB"}}, "url": "https://github.com/nuxeo/nuxeo/commit/01e09b584c3aa36cd02d69b38f3d728992293e43", "committedDate": "2020-02-07T19:10:02Z", "message": "NXP-28408: check cached temp file exist"}, "afterCommit": {"oid": "fdc9a87070cbdf314e7a1fe1937c95338de73f8d", "author": {"user": {"login": "NourNuxeo", "name": "Nour AL KOTOB"}}, "url": "https://github.com/nuxeo/nuxeo/commit/fdc9a87070cbdf314e7a1fe1937c95338de73f8d", "committedDate": "2020-02-07T19:11:17Z", "message": "NXP-28408: check cached temp file exist"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "fdc9a87070cbdf314e7a1fe1937c95338de73f8d", "author": {"user": {"login": "NourNuxeo", "name": "Nour AL KOTOB"}}, "url": "https://github.com/nuxeo/nuxeo/commit/fdc9a87070cbdf314e7a1fe1937c95338de73f8d", "committedDate": "2020-02-07T19:11:17Z", "message": "NXP-28408: check cached temp file exist"}, "afterCommit": {"oid": "f5f62f174eb212ff60d045014f4dcf1c38668395", "author": {"user": {"login": "NourNuxeo", "name": "Nour AL KOTOB"}}, "url": "https://github.com/nuxeo/nuxeo/commit/f5f62f174eb212ff60d045014f4dcf1c38668395", "committedDate": "2020-02-10T09:33:31Z", "message": "NXP-28408: check cached temp file exist"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU2NDI5NjY0", "url": "https://github.com/nuxeo/nuxeo/pull/3723#pullrequestreview-356429664", "createdAt": "2020-02-11T06:01:17Z", "commit": {"oid": "f5f62f174eb212ff60d045014f4dcf1c38668395"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQwNjowMToxN1rOFn-Hfg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQwNjowMToxN1rOFn-Hfg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzQ1NjUxMA==", "bodyText": "I know these 2 lines are in the existing test, but I wouldn't keep them as they're asserting on a static test resource from the repository.", "url": "https://github.com/nuxeo/nuxeo/pull/3723#discussion_r377456510", "createdAt": "2020-02-11T06:01:17Z", "author": {"login": "ataillefer"}, "path": "nuxeo-core/nuxeo-core-convert/src/test/java/org/nuxeo/ecm/core/convert/tests/TestCache.java", "diffHunk": "@@ -94,4 +100,33 @@ public void testCache() throws Exception {\n         assertEquals(0, cacheSize1 - cacheSize3);\n     }\n \n+    @Test\n+    public void shouldNotReturnNullFileCacheEntries() throws IOException {\n+        File file = FileUtils.getResourceFileFromContext(\"test-data/hello.doc\");\n+        assertNotNull(file);\n+        assertTrue(file.length() > 0);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f5f62f174eb212ff60d045014f4dcf1c38668395"}, "originalPosition": 33}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU2NDMyMTY0", "url": "https://github.com/nuxeo/nuxeo/pull/3723#pullrequestreview-356432164", "createdAt": "2020-02-11T06:12:44Z", "commit": {"oid": "f5f62f174eb212ff60d045014f4dcf1c38668395"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQwNjoxMjo0NVrOFn-PrQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQwNjoxMjo0NVrOFn-PrQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzQ1ODYwNQ==", "bodyText": "You can probably simplify to the one-parameter constructor, the other ones shouldn't be needed.", "url": "https://github.com/nuxeo/nuxeo/pull/3723#discussion_r377458605", "createdAt": "2020-02-11T06:12:45Z", "author": {"login": "ataillefer"}, "path": "nuxeo-core/nuxeo-core-convert/src/test/java/org/nuxeo/ecm/core/convert/tests/TestCache.java", "diffHunk": "@@ -94,4 +100,33 @@ public void testCache() throws Exception {\n         assertEquals(0, cacheSize1 - cacheSize3);\n     }\n \n+    @Test\n+    public void shouldNotReturnNullFileCacheEntries() throws IOException {\n+        File file = FileUtils.getResourceFileFromContext(\"test-data/hello.doc\");\n+        assertNotNull(file);\n+        assertTrue(file.length() > 0);\n+\n+        // Put a blobholder in the cache\n+        Blob blob = Blobs.createBlob(file, \"application/msword\", null, \"hello.doc\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f5f62f174eb212ff60d045014f4dcf1c38668395"}, "originalPosition": 36}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU2NDMzODE2", "url": "https://github.com/nuxeo/nuxeo/pull/3723#pullrequestreview-356433816", "createdAt": "2020-02-11T06:20:15Z", "commit": {"oid": "f5f62f174eb212ff60d045014f4dcf1c38668395"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQwNjoyMDoxNVrOFn-VPg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQwNjoyMDoxNVrOFn-VPg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzQ2MDAzMA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    // retrieve the temp file\n          \n          \n            \n                    // retrieve the cache entry", "url": "https://github.com/nuxeo/nuxeo/pull/3723#discussion_r377460030", "createdAt": "2020-02-11T06:20:15Z", "author": {"login": "ataillefer"}, "path": "nuxeo-core/nuxeo-core-convert/src/test/java/org/nuxeo/ecm/core/convert/tests/TestCache.java", "diffHunk": "@@ -94,4 +100,33 @@ public void testCache() throws Exception {\n         assertEquals(0, cacheSize1 - cacheSize3);\n     }\n \n+    @Test\n+    public void shouldNotReturnNullFileCacheEntries() throws IOException {\n+        File file = FileUtils.getResourceFileFromContext(\"test-data/hello.doc\");\n+        assertNotNull(file);\n+        assertTrue(file.length() > 0);\n+\n+        // Put a blobholder in the cache\n+        Blob blob = Blobs.createBlob(file, \"application/msword\", null, \"hello.doc\");\n+        BlobHolder bh = new SimpleCachableBlobHolder(blob);\n+        String cacheKey = CacheKeyGenerator.computeKey(\"identity\", bh, null);\n+        ConversionCacheHolder.addToCache(cacheKey, bh);\n+\n+        // check new cache entry was created\n+        assertEquals(1, ConversionCacheHolder.getNbCacheEntries());\n+\n+        // retrieve the temp file", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f5f62f174eb212ff60d045014f4dcf1c38668395"}, "originalPosition": 44}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU2NDM0MzM3", "url": "https://github.com/nuxeo/nuxeo/pull/3723#pullrequestreview-356434337", "createdAt": "2020-02-11T06:22:42Z", "commit": {"oid": "f5f62f174eb212ff60d045014f4dcf1c38668395"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQwNjoyMjo0MlrOFn-W8g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQwNjoyMjo0MlrOFn-W8g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzQ2MDQ2Ng==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    // requesting null file cache entries returns null after clearing the outdated key\n          \n          \n            \n                    // requesting null file cache entry returns null after clearing the outdated key", "url": "https://github.com/nuxeo/nuxeo/pull/3723#discussion_r377460466", "createdAt": "2020-02-11T06:22:42Z", "author": {"login": "ataillefer"}, "path": "nuxeo-core/nuxeo-core-convert/src/test/java/org/nuxeo/ecm/core/convert/tests/TestCache.java", "diffHunk": "@@ -94,4 +100,33 @@ public void testCache() throws Exception {\n         assertEquals(0, cacheSize1 - cacheSize3);\n     }\n \n+    @Test\n+    public void shouldNotReturnNullFileCacheEntries() throws IOException {\n+        File file = FileUtils.getResourceFileFromContext(\"test-data/hello.doc\");\n+        assertNotNull(file);\n+        assertTrue(file.length() > 0);\n+\n+        // Put a blobholder in the cache\n+        Blob blob = Blobs.createBlob(file, \"application/msword\", null, \"hello.doc\");\n+        BlobHolder bh = new SimpleCachableBlobHolder(blob);\n+        String cacheKey = CacheKeyGenerator.computeKey(\"identity\", bh, null);\n+        ConversionCacheHolder.addToCache(cacheKey, bh);\n+\n+        // check new cache entry was created\n+        assertEquals(1, ConversionCacheHolder.getNbCacheEntries());\n+\n+        // retrieve the temp file\n+        BlobHolder blobHolder = ConversionCacheHolder.getFromCache(cacheKey);\n+\n+        // delete the temp file\n+        Files.delete(Paths.get(blobHolder.getBlob().getFile().getPath()));\n+        // check the cache is outdated\n+        assertEquals(1, ConversionCacheHolder.getNbCacheEntries());\n+        assertTrue(ConversionCacheHolder.getCacheKeys().contains(cacheKey));\n+\n+        // requesting null file cache entries returns null after clearing the outdated key", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f5f62f174eb212ff60d045014f4dcf1c38668395"}, "originalPosition": 53}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f5f62f174eb212ff60d045014f4dcf1c38668395", "author": {"user": {"login": "NourNuxeo", "name": "Nour AL KOTOB"}}, "url": "https://github.com/nuxeo/nuxeo/commit/f5f62f174eb212ff60d045014f4dcf1c38668395", "committedDate": "2020-02-10T09:33:31Z", "message": "NXP-28408: check cached temp file exist"}, "afterCommit": {"oid": "cfef8581b23ba8dcbd0c1e82d4d0eafb6e2093a6", "author": {"user": {"login": "NourNuxeo", "name": "Nour AL KOTOB"}}, "url": "https://github.com/nuxeo/nuxeo/commit/cfef8581b23ba8dcbd0c1e82d4d0eafb6e2093a6", "committedDate": "2020-02-11T06:26:49Z", "message": "NXP-28408: check cached temp file exist"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "cfef8581b23ba8dcbd0c1e82d4d0eafb6e2093a6", "author": {"user": {"login": "NourNuxeo", "name": "Nour AL KOTOB"}}, "url": "https://github.com/nuxeo/nuxeo/commit/cfef8581b23ba8dcbd0c1e82d4d0eafb6e2093a6", "committedDate": "2020-02-11T06:26:49Z", "message": "NXP-28408: check cached temp file exist"}, "afterCommit": {"oid": "f6c8aebdc98ae98f5c1f1b97a6c8d71f64d19308", "author": {"user": {"login": "NourNuxeo", "name": "Nour AL KOTOB"}}, "url": "https://github.com/nuxeo/nuxeo/commit/f6c8aebdc98ae98f5c1f1b97a6c8d71f64d19308", "committedDate": "2020-02-11T06:31:39Z", "message": "NXP-28408: check cached temp file exist"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU2NDUwMTQ1", "url": "https://github.com/nuxeo/nuxeo/pull/3723#pullrequestreview-356450145", "createdAt": "2020-02-11T07:22:21Z", "commit": {"oid": "f6c8aebdc98ae98f5c1f1b97a6c8d71f64d19308"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "54249b75b2c193d5f3fb309259a9bc6c95e141d8", "author": {"user": {"login": "NourNuxeo", "name": "Nour AL KOTOB"}}, "url": "https://github.com/nuxeo/nuxeo/commit/54249b75b2c193d5f3fb309259a9bc6c95e141d8", "committedDate": "2020-02-11T13:04:31Z", "message": "NXP-28408: fix check cached temp file exist"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f6c8aebdc98ae98f5c1f1b97a6c8d71f64d19308", "author": {"user": {"login": "NourNuxeo", "name": "Nour AL KOTOB"}}, "url": "https://github.com/nuxeo/nuxeo/commit/f6c8aebdc98ae98f5c1f1b97a6c8d71f64d19308", "committedDate": "2020-02-11T06:31:39Z", "message": "NXP-28408: check cached temp file exist"}, "afterCommit": {"oid": "54249b75b2c193d5f3fb309259a9bc6c95e141d8", "author": {"user": {"login": "NourNuxeo", "name": "Nour AL KOTOB"}}, "url": "https://github.com/nuxeo/nuxeo/commit/54249b75b2c193d5f3fb309259a9bc6c95e141d8", "committedDate": "2020-02-11T13:04:31Z", "message": "NXP-28408: fix check cached temp file exist"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU2NjQzNTUx", "url": "https://github.com/nuxeo/nuxeo/pull/3723#pullrequestreview-356643551", "createdAt": "2020-02-11T13:13:00Z", "commit": {"oid": "54249b75b2c193d5f3fb309259a9bc6c95e141d8"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU2ODIxNzk4", "url": "https://github.com/nuxeo/nuxeo/pull/3723#pullrequestreview-356821798", "createdAt": "2020-02-11T16:50:19Z", "commit": {"oid": "54249b75b2c193d5f3fb309259a9bc6c95e141d8"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4838, "cost": 1, "resetAt": "2021-11-03T18:41:40Z"}}}