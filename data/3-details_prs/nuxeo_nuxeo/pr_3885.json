{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk3NzIzMTkx", "number": 3885, "title": "NXP-26704: allow storing fulltext in blobs", "bodyText": "T&P ok https://qa.nuxeo.org/jenkins/job/TestAndPush/job/ondemand-testandpush-fguillaume/797/", "createdAt": "2020-04-02T17:40:22Z", "url": "https://github.com/nuxeo/nuxeo/pull/3885", "merged": true, "mergeCommit": {"oid": "a0a8c6fb800dac678e8121cb3121fd040776b9b6"}, "closed": true, "closedAt": "2020-04-03T14:30:46Z", "author": {"login": "efge"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcT-TDTAFqTM4NzA1MDMxOA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcUBvX4gFqTM4NzMwNTcwOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg3MDUwMzE4", "url": "https://github.com/nuxeo/nuxeo/pull/3885#pullrequestreview-387050318", "createdAt": "2020-04-03T08:19:30Z", "commit": {"oid": "e9a2b2dc0bda2dbd0fe2c9f2f2ebfd316b657f8b"}, "state": "COMMENTED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QwODoxOTozMFrOGAKVuA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxMDoyMjozNlrOGAPgzA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjgyMjU4NA==", "bodyText": "Since 11.1.", "url": "https://github.com/nuxeo/nuxeo/pull/3885#discussion_r402822584", "createdAt": "2020-04-03T08:19:30Z", "author": {"login": "troger"}, "path": "modules/core/nuxeo-core-storage-dbs/src/main/java/org/nuxeo/ecm/core/storage/dbs/DBSRepositoryDescriptor.java", "diffHunk": "@@ -70,6 +70,11 @@ public void setFulltextDisabled(boolean disabled) {\n         fulltextDescriptor.setFulltextDisabled(disabled);\n     }\n \n+    @XNode(\"fulltext@storedInBlob\")\n+    public void setFulltextStoredInBlob(boolean storedInBlob) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e9a2b2dc0bda2dbd0fe2c9f2f2ebfd316b657f8b"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjgyNDQxMA==", "bodyText": "What about:\nif (fulltextStoredInBlob && fulltext != null)", "url": "https://github.com/nuxeo/nuxeo/pull/3885#discussion_r402824410", "createdAt": "2020-04-03T08:21:34Z", "author": {"login": "troger"}, "path": "modules/core/nuxeo-core-storage-dbs/src/main/java/org/nuxeo/ecm/core/storage/dbs/DBSSession.java", "diffHunk": "@@ -1547,10 +1554,29 @@ protected static ACP memToAcp(Serializable acpSer) {\n         return acp;\n     }\n \n+    @Override\n+    public boolean isFulltextStoredInBlob() {\n+        return fulltextStoredInBlob;\n+    }\n+\n     @Override\n     public Map<String, String> getBinaryFulltext(String id) {\n         State state = transaction.getStateForRead(id);\n         String fulltext = (String) state.get(KEY_FULLTEXT_BINARY);\n+        if (fulltextStoredInBlob) {\n+            String key = fulltext;\n+            if (key != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e9a2b2dc0bda2dbd0fe2c9f2f2ebfd316b657f8b"}, "originalPosition": 64}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjkwMTQ4Mg==", "bodyText": "Since 11.1", "url": "https://github.com/nuxeo/nuxeo/pull/3885#discussion_r402901482", "createdAt": "2020-04-03T10:11:10Z", "author": {"login": "troger"}, "path": "modules/core/nuxeo-core-storage-sql/nuxeo-core-storage-sql/src/main/java/org/nuxeo/ecm/core/storage/sql/RepositoryDescriptor.java", "diffHunk": "@@ -318,6 +318,11 @@ public void setFulltextDisabled(boolean disabled) {\n         fulltextDescriptor.setFulltextDisabled(disabled);\n     }\n \n+    @XNode(\"indexing/fulltext@storedInBlob\")\n+    public void setFulltextStoredInBlob(boolean storedInBlob) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e9a2b2dc0bda2dbd0fe2c9f2f2ebfd316b657f8b"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjkwMzM4NA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (fulltextDescriptor.getFulltextStoredInBlob()) {\n          \n          \n            \n                        String key = map.get(\"binarytext\");\n          \n          \n            \n                        if (key != null) {\n          \n          \n            \n                    String key = map.get(\"binarytext\");\n          \n          \n            \n                    if (fulltextDescriptor.getFulltextStoredInBlob() && key != null) {", "url": "https://github.com/nuxeo/nuxeo/pull/3885#discussion_r402903384", "createdAt": "2020-04-03T10:14:58Z", "author": {"login": "troger"}, "path": "modules/core/nuxeo-core-storage-sql/nuxeo-core-storage-sql/src/main/java/org/nuxeo/ecm/core/storage/sql/SessionImpl.java", "diffHunk": "@@ -1475,13 +1484,34 @@ public long getCacheSelectionSize() {\n         return context.getCacheSelectionSize();\n     }\n \n+    @Override\n+    public boolean isFulltextStoredInBlob() {\n+        return fulltextDescriptor.getFulltextStoredInBlob();\n+    }\n+\n     @Override\n     public Map<String, String> getBinaryFulltext(Serializable id) {\n-        if (repository.getRepositoryDescriptor().getFulltextDescriptor().getFulltextDisabled()) {\n+        if (fulltextDescriptor.getFulltextDisabled()) {\n             return null;\n         }\n         RowId rowId = new RowId(Model.FULLTEXT_TABLE_NAME, id);\n-        return mapper.getBinaryFulltext(rowId);\n+        Map<String, String> map = mapper.getBinaryFulltext(rowId);\n+        if (fulltextDescriptor.getFulltextStoredInBlob()) {\n+            String key = map.get(\"binarytext\");\n+            if (key != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e9a2b2dc0bda2dbd0fe2c9f2f2ebfd316b657f8b"}, "originalPosition": 81}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjkwMzgzNA==", "bodyText": "Worth updating the class to log4j 2, nop?", "url": "https://github.com/nuxeo/nuxeo/pull/3885#discussion_r402903834", "createdAt": "2020-04-03T10:15:52Z", "author": {"login": "troger"}, "path": "modules/core/nuxeo-core-storage-sql/nuxeo-core-storage-sql/src/main/java/org/nuxeo/ecm/core/storage/sql/jdbc/JDBCBackend.java", "diffHunk": "@@ -126,8 +126,9 @@ public Model initialize(RepositoryImpl repository) {\n         }\n         if (log.isDebugEnabled()) {\n             FulltextDescriptor fulltextDescriptor = repositoryDescriptor.getFulltextDescriptor();\n-            log.debug(String.format(\"Database ready, fulltext: disabled=%b searchDisabled=%b.\",\n-                    fulltextDescriptor.getFulltextDisabled(), fulltextDescriptor.getFulltextSearchDisabled()));\n+            log.debug(String.format(\"Database ready, fulltext: disabled=%b storedInBlob=%b searchDisabled=%b.\",\n+                    fulltextDescriptor.getFulltextDisabled(), fulltextDescriptor.getFulltextStoredInBlob(),\n+                    fulltextDescriptor.getFulltextSearchDisabled()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e9a2b2dc0bda2dbd0fe2c9f2f2ebfd316b657f8b"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjkwNjM1MA==", "bodyText": "Since 11.1.", "url": "https://github.com/nuxeo/nuxeo/pull/3885#discussion_r402906350", "createdAt": "2020-04-03T10:20:37Z", "author": {"login": "troger"}, "path": "modules/core/nuxeo-core-storage/src/main/java/org/nuxeo/ecm/core/storage/FulltextDescriptor.java", "diffHunk": "@@ -111,10 +111,20 @@ public void setFulltextDisabled(boolean disabled) {\n         fulltextDisabled = Boolean.valueOf(disabled);\n     }\n \n+    private Boolean fulltextStoredInBlob;\n+\n+    public boolean getFulltextStoredInBlob() {\n+        return defaultFalse(fulltextStoredInBlob);\n+    }\n+\n+    public void setFulltextStoredInBlob(boolean storedInBlob) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e9a2b2dc0bda2dbd0fe2c9f2f2ebfd316b657f8b"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjkwNzM0MA==", "bodyText": "Missing blank line?", "url": "https://github.com/nuxeo/nuxeo/pull/3885#discussion_r402907340", "createdAt": "2020-04-03T10:22:36Z", "author": {"login": "troger"}, "path": "modules/core/nuxeo-core-test/src/main/java/org/nuxeo/ecm/core/test/FulltextStoredInBlobFeature.java", "diffHunk": "@@ -0,0 +1,43 @@\n+/*\n+ * (C) Copyright 2020 Nuxeo (http://nuxeo.com/) and others.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ * Contributors:\n+ *     Florent Guillaume\n+ */\n+package org.nuxeo.ecm.core.test;\n+\n+import org.nuxeo.runtime.test.runner.FeaturesRunner;\n+import org.nuxeo.runtime.test.runner.RunnerFeature;\n+\n+public class FulltextStoredInBlobFeature implements RunnerFeature {\n+    private static final String KEY = \"nuxeo.test.fulltext.storedInBlob\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e9a2b2dc0bda2dbd0fe2c9f2f2ebfd316b657f8b"}, "originalPosition": 25}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg3MTUzNDA2", "url": "https://github.com/nuxeo/nuxeo/pull/3885#pullrequestreview-387153406", "createdAt": "2020-04-03T10:54:54Z", "commit": {"oid": "e9a2b2dc0bda2dbd0fe2c9f2f2ebfd316b657f8b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxMDo1NDo1NFrOGAQgfQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxMDo1NDo1NFrOGAQgfQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjkyMzY0NQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    Assert.assertEquals(1, esRet.totalSize());\n          \n          \n            \n                    assertEquals(1, esRet.totalSize());\n          \n      \n    \n    \n  \n\nThere's another one in the class.", "url": "https://github.com/nuxeo/nuxeo/pull/3885#discussion_r402923645", "createdAt": "2020-04-03T10:54:54Z", "author": {"login": "kevinleturc"}, "path": "modules/platform/nuxeo-elasticsearch/nuxeo-elasticsearch-core/src/test/java/org/nuxeo/elasticsearch/test/TestFulltextStoredInBlob.java", "diffHunk": "@@ -0,0 +1,68 @@\n+/*\n+ * (C) Copyright 2015-2020 Nuxeo (http://nuxeo.com/) and others.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ * Contributors:\n+ *     Benoit Delbosc\n+ *     Florent Guillaume\n+ */\n+package org.nuxeo.elasticsearch.test;\n+\n+import org.junit.Assert;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.nuxeo.ecm.core.api.DocumentModel;\n+import org.nuxeo.ecm.core.api.DocumentModelList;\n+import org.nuxeo.ecm.core.query.QueryParseException;\n+import org.nuxeo.ecm.core.test.FulltextStoredInBlobFeature;\n+import org.nuxeo.elasticsearch.query.NxQueryBuilder;\n+import org.nuxeo.runtime.test.runner.Deploy;\n+import org.nuxeo.runtime.test.runner.Features;\n+import org.nuxeo.runtime.test.runner.FeaturesRunner;\n+\n+@RunWith(FeaturesRunner.class)\n+@Features({ FulltextStoredInBlobFeature.class, RepositoryElasticSearchFeature.class })\n+@Deploy(\"org.nuxeo.elasticsearch.core:elasticsearch-test-contrib.xml\")\n+public class TestFulltextStoredInBlob extends TestFulltextEnabled {\n+\n+    @Override\n+    @Test\n+    public void testFulltext() throws Exception {\n+        createFileWithBlob();\n+        // binary fulltext extraction is done\n+        String nxql = \"SELECT * FROM Document WHERE ecm:fulltext='search'\";\n+        DocumentModelList esRet = ess.query(new NxQueryBuilder(session).nxql(nxql));\n+        Assert.assertEquals(1, esRet.totalSize());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e9a2b2dc0bda2dbd0fe2c9f2f2ebfd316b657f8b"}, "originalPosition": 46}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "be8c5e5f9ab9b4d0abba77e3c0ff7189e7d5d84d", "author": {"user": {"login": "efge", "name": "Florent Guillaume"}}, "url": "https://github.com/nuxeo/nuxeo/commit/be8c5e5f9ab9b4d0abba77e3c0ff7189e7d5d84d", "committedDate": "2020-04-03T12:36:41Z", "message": "NXP-26704: move fulltext-related test features to nuxeo-core-test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c607f41fc2814bec77380f1f9e8c49efa81673f5", "author": {"user": {"login": "efge", "name": "Florent Guillaume"}}, "url": "https://github.com/nuxeo/nuxeo/commit/c607f41fc2814bec77380f1f9e8c49efa81673f5", "committedDate": "2020-04-03T12:36:41Z", "message": "NXP-26704: align internal property names in VCS and DBS, for simpler blob dispatcher config"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a19e2826ed843387ed1c586a95631cca82813a30", "author": {"user": {"login": "efge", "name": "Florent Guillaume"}}, "url": "https://github.com/nuxeo/nuxeo/commit/a19e2826ed843387ed1c586a95631cca82813a30", "committedDate": "2020-04-03T12:36:41Z", "message": "NXP-26704: allow storing fulltext in blobs"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e9a2b2dc0bda2dbd0fe2c9f2f2ebfd316b657f8b", "author": {"user": {"login": "efge", "name": "Florent Guillaume"}}, "url": "https://github.com/nuxeo/nuxeo/commit/e9a2b2dc0bda2dbd0fe2c9f2f2ebfd316b657f8b", "committedDate": "2020-04-02T17:38:44Z", "message": "NXP-26704: allow storing fulltext in blobs"}, "afterCommit": {"oid": "a19e2826ed843387ed1c586a95631cca82813a30", "author": {"user": {"login": "efge", "name": "Florent Guillaume"}}, "url": "https://github.com/nuxeo/nuxeo/commit/a19e2826ed843387ed1c586a95631cca82813a30", "committedDate": "2020-04-03T12:36:41Z", "message": "NXP-26704: allow storing fulltext in blobs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b846e4ce35bb673096a7a357eb9859788a8d9b56", "author": {"user": {"login": "efge", "name": "Florent Guillaume"}}, "url": "https://github.com/nuxeo/nuxeo/commit/b846e4ce35bb673096a7a357eb9859788a8d9b56", "committedDate": "2020-04-03T12:57:58Z", "message": "NXP-26704: use constant for binarytext key in map"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg3MjM5NjI1", "url": "https://github.com/nuxeo/nuxeo/pull/3885#pullrequestreview-387239625", "createdAt": "2020-04-03T13:09:52Z", "commit": {"oid": "b846e4ce35bb673096a7a357eb9859788a8d9b56"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg3MzA1NzA5", "url": "https://github.com/nuxeo/nuxeo/pull/3885#pullrequestreview-387305709", "createdAt": "2020-04-03T14:26:13Z", "commit": {"oid": "b846e4ce35bb673096a7a357eb9859788a8d9b56"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4821, "cost": 1, "resetAt": "2021-11-03T18:41:40Z"}}}