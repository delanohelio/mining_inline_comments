{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI0NjgwMDIx", "number": 4092, "title": "fix-NXP-28634-faulty-infinite-scroll-in-HISTORY-tab", "bodyText": "PR created from https://qa.nuxeo.org/jenkins/job/TestAndPush/job/ondemand-testandpush-saouana/244/\nT&P Ok on MongoDB: https://qa.nuxeo.org/jenkins/job/TestAndPush/job/ondemand-testandpush-saouana-2/14/\n** Context **\nFor more explanation please have a look at the JIRA  NXP-28634\nNew T&P after review:\n\n\nDefault https://qa.nuxeo.org/jenkins/job/TestAndPush/job/ondemand-testandpush-saouana/246/\n\n\nMongoDB OK: https://qa.nuxeo.org/jenkins/job/TestAndPush/job/ondemand-testandpush-saouana-2/15/", "createdAt": "2020-05-28T19:14:23Z", "url": "https://github.com/nuxeo/nuxeo/pull/4092", "merged": true, "mergeCommit": {"oid": "bce8eef1a29fbfe9ddbc7e6edbd561cf2c643834"}, "closed": true, "closedAt": "2020-06-02T16:17:38Z", "author": {"login": "nuxeojenkins"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcm95slAFqTQyMTczNjU0Nw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcnW2jzAFqTQyMjgxNzExNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIxNzM2NTQ3", "url": "https://github.com/nuxeo/nuxeo/pull/4092#pullrequestreview-421736547", "createdAt": "2020-06-01T10:16:56Z", "commit": {"oid": "7f0d78d24c2649da49df4d800a4a78bffc9b6ebc"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxMDoxNjo1NlrOGdFjUA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxMDo0MTo1M1rOGdGKqw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzE1Mjg0OA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    logEntries.add(buildLogEntry(doc, \"One\", \"secondEvent\", \"leela\", secondDate));\n          \n          \n            \n                    logEntries.add(buildLogEntry(doc, \"One\", \"secondEvent\", \"leela\", firstDate));", "url": "https://github.com/nuxeo/nuxeo/pull/4092#discussion_r433152848", "createdAt": "2020-06-01T10:16:56Z", "author": {"login": "ataillefer"}, "path": "modules/platform/rest-api/nuxeo-rest-api-test/src/test/java/org/nuxeo/ecm/restapi/test/AuditTest.java", "diffHunk": "@@ -304,38 +277,13 @@ public void shouldFilterLogEntriesOnMultipleCriteria() throws Exception {\n         ZonedDateTime secondDate = firstDate.plusDays(10);\n \n         List<LogEntry> logEntries = new ArrayList<>();\n-        LogEntry logEntry = auditLogger.newLogEntry();\n-        logEntry.setDocUUID(doc.getRef());\n-        logEntry.setCategory(\"One\");\n-        logEntry.setEventId(\"firstEvent\");\n-        logEntry.setPrincipalName(\"bender\");\n-        logEntry.setEventDate(DateUtils.toDate(firstDate));\n-        logEntries.add(logEntry);\n-        logEntry = auditLogger.newLogEntry();\n-        logEntry.setDocUUID(doc.getRef());\n-        logEntry.setCategory(\"One\");\n-        logEntry.setEventId(\"secondEvent\");\n-        logEntry.setPrincipalName(\"leela\");\n-        logEntry.setEventDate(DateUtils.toDate(firstDate));\n-        logEntries.add(logEntry);\n-        logEntry = auditLogger.newLogEntry();\n-        logEntry.setDocUUID(doc.getRef());\n-        logEntry.setCategory(\"One\");\n-        logEntry.setEventId(\"firstEvent\");\n-        logEntry.setPrincipalName(\"leela\");\n-        logEntry.setEventDate(DateUtils.toDate(secondDate));\n-        logEntries.add(logEntry);\n-        logEntry = auditLogger.newLogEntry();\n-        logEntry.setDocUUID(doc.getRef());\n-        logEntry.setCategory(\"One\");\n-        logEntry.setEventId(\"thirdEvent\");\n-        logEntry.setPrincipalName(\"leela\");\n-        logEntry.setEventDate(DateUtils.toDate(secondDate));\n-        logEntries.add(logEntry);\n+        logEntries.add(buildLogEntry(doc, \"One\", \"firstEvent\", \"bender\", firstDate));\n+        logEntries.add(buildLogEntry(doc, \"One\", \"secondEvent\", \"leela\", secondDate));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7f0d78d24c2649da49df4d800a4a78bffc9b6ebc"}, "originalPosition": 126}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzE1NTU1OA==", "bodyText": "Are we sure of the impacts other than related to the PaginableAdapter?", "url": "https://github.com/nuxeo/nuxeo/pull/4092#discussion_r433155558", "createdAt": "2020-06-01T10:23:48Z", "author": {"login": "ataillefer"}, "path": "modules/platform/nuxeo-platform-query-api/src/main/java/org/nuxeo/ecm/platform/query/api/AbstractPageProvider.java", "diffHunk": "@@ -355,7 +355,6 @@ public void addQuickFilter(QuickFilter quickFilter) {\n     public void setSortInfos(List<SortInfo> sortInfo) {\n         if (sortInfoChanged(this.sortInfos, sortInfo)) {\n             this.sortInfos = sortInfo;\n-            refresh();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b9fd9a68fd676f201e30622267a3a3db2e69f9ee"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzE1NzM4OQ==", "bodyText": "Is this really useful? If sortBy isn't blank, then sortBy.split(\",\") should always return a non empty array no?", "url": "https://github.com/nuxeo/nuxeo/pull/4092#discussion_r433157389", "createdAt": "2020-06-01T10:28:20Z", "author": {"login": "ataillefer"}, "path": "modules/platform/rest-api/nuxeo-rest-api-server/src/main/java/org/nuxeo/ecm/restapi/server/jaxrs/adapters/PaginableAdapter.java", "diffHunk": "@@ -114,22 +118,27 @@ protected DocumentModel getSearchDocument() {\n         PageProviderService pps = Framework.getService(PageProviderService.class);\n         Map<String, Serializable> props = new HashMap<>();\n         props.put(CoreQueryDocumentPageProvider.CORE_SESSION_PROPERTY, (Serializable) ctx.getCoreSession());\n-        PageProvider<T> pp = (PageProvider<T>) pps.getPageProvider(\"\", ppDefinition, getSearchDocument(), null,\n-                pageSize, currentPageIndex, props, getParams());\n+        List<SortInfo> sortersInfos = null;\n         if (!StringUtils.isBlank(sortBy)) {\n             String[] sorts = sortBy.split(\",\");\n             String[] orders = null;\n             if (!StringUtils.isBlank(sortOrder)) {\n                 orders = sortOrder.split(\",\");\n             }\n-            // clear potential default sort infos first\n-            pp.setSortInfos(null);\n-            for (int i = 0; i < sorts.length; i++) {\n-                String sort = sorts[i];\n-                boolean sortAscending = orders != null && orders.length > i && \"asc\".equals(orders[i].toLowerCase());\n-                pp.addSortInfo(sort, sortAscending);\n+\n+            if (ArrayUtils.isNotEmpty(sorts)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b9fd9a68fd676f201e30622267a3a3db2e69f9ee"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzE2MjkyMw==", "bodyText": "Sounds weird to have \"firstEvent\" or \"thirdEvent\" occur several times.\nMaybe call them \"eventA\", \"eventB\", ...", "url": "https://github.com/nuxeo/nuxeo/pull/4092#discussion_r433162923", "createdAt": "2020-06-01T10:41:53Z", "author": {"login": "ataillefer"}, "path": "modules/platform/rest-api/nuxeo-rest-api-test/src/test/java/org/nuxeo/ecm/restapi/test/AuditTest.java", "diffHunk": "@@ -420,6 +421,64 @@ public void shouldEnrichWithLatestDocumentLogEntries() throws IOException {\n         }\n     }\n \n+    @Test\n+    public void shouldHandleSortingAndPagination() throws Exception {\n+        DocumentModel doc = RestServerInit.getFile(1, session);\n+\n+        List<LogEntry> logEntries = new ArrayList<>();\n+        logEntries.add(buildLogEntry(doc, \"Two\", \"secondEvent\", \"james\", null));\n+        logEntries.add(buildLogEntry(doc, \"Two\", \"firstEvent\", \"james\", null));\n+        logEntries.add(buildLogEntry(doc, \"Two\", \"thirdEvent\", \"james\", null));\n+        logEntries.add(buildLogEntry(doc, \"Two\", \"thirdEvent\", \"james\", null));\n+        logEntries.add(buildLogEntry(doc, \"Two\", \"thirdEvent\", \"james\", null));\n+        logEntries.add(buildLogEntry(doc, \"Two\", \"thirdEvent\", \"james\", null));\n+        logEntries.add(buildLogEntry(doc, \"One\", \"secondEvent\", \"james\", null));\n+        logEntries.add(buildLogEntry(doc, \"One\", \"thirdEvent\", \"james\", null));\n+        logEntries.add(buildLogEntry(doc, \"One\", \"firstEvent\", \"james\", null));\n+        logEntries.add(buildLogEntry(doc, \"One\", \"thirdEvent\", \"james\", null));\n+        logEntries.add(buildLogEntry(doc, \"One\", \"firstEvent\", \"james\", null));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b9fd9a68fd676f201e30622267a3a3db2e69f9ee"}, "originalPosition": 27}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b9fd9a68fd676f201e30622267a3a3db2e69f9ee", "author": {"user": {"login": "RSalem07", "name": "Salem Aouana"}}, "url": "https://github.com/nuxeo/nuxeo/commit/b9fd9a68fd676f201e30622267a3a3db2e69f9ee", "committedDate": "2020-05-28T12:53:41Z", "message": "NXP-28634: Fix sorting and pagination (infinit scroll) in page provider"}, "afterCommit": {"oid": "a167a1ce52596575ff3a4900dec5af681d562fe5", "author": {"user": {"login": "RSalem07", "name": "Salem Aouana"}}, "url": "https://github.com/nuxeo/nuxeo/commit/a167a1ce52596575ff3a4900dec5af681d562fe5", "committedDate": "2020-06-01T14:10:12Z", "message": "NXP-28634: Fix sorting and pagination (infinit scroll) in page provider"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIxOTQ4MjU1", "url": "https://github.com/nuxeo/nuxeo/pull/4092#pullrequestreview-421948255", "createdAt": "2020-06-01T15:27:13Z", "commit": {"oid": "a167a1ce52596575ff3a4900dec5af681d562fe5"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIxOTYwMTIy", "url": "https://github.com/nuxeo/nuxeo/pull/4092#pullrequestreview-421960122", "createdAt": "2020-06-01T15:41:51Z", "commit": {"oid": "a167a1ce52596575ff3a4900dec5af681d562fe5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxNTo0MTo1MlrOGdPjCg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxNTo0MTo1MlrOGdPjCg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzMxNjYxOA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    List<SortInfo> sortersInfos = null;\n          \n          \n            \n                    List<SortInfo> sortInfos = null;\n          \n      \n    \n    \n  \n\n?", "url": "https://github.com/nuxeo/nuxeo/pull/4092#discussion_r433316618", "createdAt": "2020-06-01T15:41:52Z", "author": {"login": "troger"}, "path": "modules/platform/rest-api/nuxeo-rest-api-server/src/main/java/org/nuxeo/ecm/restapi/server/jaxrs/adapters/PaginableAdapter.java", "diffHunk": "@@ -114,25 +117,24 @@ protected DocumentModel getSearchDocument() {\n         PageProviderService pps = Framework.getService(PageProviderService.class);\n         Map<String, Serializable> props = new HashMap<>();\n         props.put(CoreQueryDocumentPageProvider.CORE_SESSION_PROPERTY, (Serializable) ctx.getCoreSession());\n-        PageProvider<T> pp = (PageProvider<T>) pps.getPageProvider(\"\", ppDefinition, getSearchDocument(), null,\n-                pageSize, currentPageIndex, props, getParams());\n+        List<SortInfo> sortersInfos = null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a167a1ce52596575ff3a4900dec5af681d562fe5"}, "originalPosition": 31}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "40e2141fd3be83c4bc6f72de1165de0860617d0f", "author": {"user": {"login": "RSalem07", "name": "Salem Aouana"}}, "url": "https://github.com/nuxeo/nuxeo/commit/40e2141fd3be83c4bc6f72de1165de0860617d0f", "committedDate": "2020-06-01T16:59:32Z", "message": "NXP-28634: Cleanup / Format"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a167a1ce52596575ff3a4900dec5af681d562fe5", "author": {"user": {"login": "RSalem07", "name": "Salem Aouana"}}, "url": "https://github.com/nuxeo/nuxeo/commit/a167a1ce52596575ff3a4900dec5af681d562fe5", "committedDate": "2020-06-01T14:10:12Z", "message": "NXP-28634: Fix sorting and pagination (infinit scroll) in page provider"}, "afterCommit": {"oid": "5293f4163a7531a3d9d659b4047fc8c68ba88be7", "author": {"user": {"login": "RSalem07", "name": "Salem Aouana"}}, "url": "https://github.com/nuxeo/nuxeo/commit/5293f4163a7531a3d9d659b4047fc8c68ba88be7", "committedDate": "2020-06-01T16:59:32Z", "message": "NXP-28634: Fix sorting and pagination (infinit scroll) in page provider"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "90f5ba434ed20bd0e093121794c4b177c0b360c1", "author": {"user": {"login": "RSalem07", "name": "Salem Aouana"}}, "url": "https://github.com/nuxeo/nuxeo/commit/90f5ba434ed20bd0e093121794c4b177c0b360c1", "committedDate": "2020-06-01T17:05:43Z", "message": "NXP-28634: Fix sorting and pagination (infinit scroll) in page provider"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5293f4163a7531a3d9d659b4047fc8c68ba88be7", "author": {"user": {"login": "RSalem07", "name": "Salem Aouana"}}, "url": "https://github.com/nuxeo/nuxeo/commit/5293f4163a7531a3d9d659b4047fc8c68ba88be7", "committedDate": "2020-06-01T16:59:32Z", "message": "NXP-28634: Fix sorting and pagination (infinit scroll) in page provider"}, "afterCommit": {"oid": "90f5ba434ed20bd0e093121794c4b177c0b360c1", "author": {"user": {"login": "RSalem07", "name": "Salem Aouana"}}, "url": "https://github.com/nuxeo/nuxeo/commit/90f5ba434ed20bd0e093121794c4b177c0b360c1", "committedDate": "2020-06-01T17:05:43Z", "message": "NXP-28634: Fix sorting and pagination (infinit scroll) in page provider"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIyNDQ2MjM1", "url": "https://github.com/nuxeo/nuxeo/pull/4092#pullrequestreview-422446235", "createdAt": "2020-06-02T08:18:31Z", "commit": {"oid": "90f5ba434ed20bd0e093121794c4b177c0b360c1"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIyNDU2MzQ5", "url": "https://github.com/nuxeo/nuxeo/pull/4092#pullrequestreview-422456349", "createdAt": "2020-06-02T08:31:13Z", "commit": {"oid": "90f5ba434ed20bd0e093121794c4b177c0b360c1"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIyODE3MTE3", "url": "https://github.com/nuxeo/nuxeo/pull/4092#pullrequestreview-422817117", "createdAt": "2020-06-02T15:46:38Z", "commit": {"oid": "90f5ba434ed20bd0e093121794c4b177c0b360c1"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4751, "cost": 1, "resetAt": "2021-11-03T18:41:40Z"}}}