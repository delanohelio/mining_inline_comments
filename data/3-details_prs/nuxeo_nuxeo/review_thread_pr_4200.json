{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ0NzIzMzg2", "number": 4200, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxODowMzozNVrOEML6xw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQwNTo1NDo0N1rOEU2xFQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxMjEzNjM5OnYy", "diffSide": "RIGHT", "path": "nuxeo-features/rest-api/nuxeo-rest-api-server/src/main/java/org/nuxeo/ecm/restapi/server/jaxrs/BatchUploadObject.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxODowMzozNVrOGuJ0vw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxODowMzozNVrOGuJ0vw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTA0ODYzOQ==", "bodyText": "removed in next push", "url": "https://github.com/nuxeo/nuxeo/pull/4200#discussion_r451048639", "createdAt": "2020-07-07T18:03:35Z", "author": {"login": "NourNuxeo"}, "path": "nuxeo-features/rest-api/nuxeo-rest-api-server/src/main/java/org/nuxeo/ecm/restapi/server/jaxrs/BatchUploadObject.java", "diffHunk": "@@ -128,6 +135,8 @@\n \n     public static final String MD5 = \"md5\";\n \n+\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d4f905e714e30a37a87a1ed468465965611249df"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxMjMzNDU4OnYy", "diffSide": "RIGHT", "path": "nuxeo-features/rest-api/nuxeo-rest-api-test/src/test/java/org/nuxeo/ecm/restapi/test/BatchUploadFixture.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxOTowMzoyNFrOGuLweA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxOTowMzoyNFrOGuLweA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTA4MDMxMg==", "bodyText": "comment removed in next puh", "url": "https://github.com/nuxeo/nuxeo/pull/4200#discussion_r451080312", "createdAt": "2020-07-07T19:03:24Z", "author": {"login": "NourNuxeo"}, "path": "nuxeo-features/rest-api/nuxeo-rest-api-test/src/test/java/org/nuxeo/ecm/restapi/test/BatchUploadFixture.java", "diffHunk": "@@ -1083,6 +1085,48 @@ public void testErrorOnRefreshedTokenError() throws Exception {\n         }\n     }\n \n+    @Test\n+    public void testUploadMHTML() throws Exception {\n+        String batchId;\n+        try (CloseableClientResponse response = getResponse(RequestType.POST, \"upload/new/dummy\")) {\n+            assertEquals(Status.OK.getStatusCode(), response.getStatus());\n+            JsonNode responseJson = mapper.readTree(response.getEntityInputStream());\n+            batchId = responseJson.get(\"batchId\").getValueAsText();\n+            assertNotNull(batchId);\n+        }\n+\n+        try (CloseableClientResponse response = getResponse(RequestType.POST, \"upload/\" + batchId + \"/0\",\n+                \"dummy\", Collections.singletonMap(\"Content-Type\", \"multipart/related\"))) {\n+            assertEquals(Status.INTERNAL_SERVER_ERROR.getStatusCode(), response.getStatus());\n+        }\n+    }\n+\n+    @Test\n+    @Deploy(\"org.nuxeo.ecm.platform.restapi.server:batch-upload-contrib-test.xml\")\n+    public void testUploadMHTMLMultipartDisabled() throws Exception {\n+        String batchId;\n+        try (CloseableClientResponse response = getResponse(RequestType.POST, \"upload/new/dummy\")) {\n+            assertEquals(Status.OK.getStatusCode(), response.getStatus());\n+            JsonNode responseJson = mapper.readTree(response.getEntityInputStream());\n+            batchId = responseJson.get(\"batchId\").getValueAsText();\n+            assertNotNull(batchId);\n+        }\n+\n+        Map<String, String> headers = new HashMap<>();\n+        headers.put(\"Content-Type\", \"multipart/related\");\n+        headers.put(\"X-File-Name\", \"dummy.mhtml\");\n+        // typed via mime-type", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d4f905e714e30a37a87a1ed468465965611249df"}, "originalPosition": 50}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2MzM1OTk2OnYy", "diffSide": "RIGHT", "path": "nuxeo-features/rest-api/nuxeo-rest-api-test/src/test/java/org/nuxeo/ecm/restapi/test/BatchUploadFixture.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxNDoyNzoyMlrOG1lA-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxNDoyNzoyMlrOG1lA-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODgzNDE3MA==", "bodyText": "Comment should be above the annotations.", "url": "https://github.com/nuxeo/nuxeo/pull/4200#discussion_r458834170", "createdAt": "2020-07-22T14:27:22Z", "author": {"login": "kevinleturc"}, "path": "nuxeo-features/rest-api/nuxeo-rest-api-test/src/test/java/org/nuxeo/ecm/restapi/test/BatchUploadFixture.java", "diffHunk": "@@ -1083,6 +1085,49 @@ public void testErrorOnRefreshedTokenError() throws Exception {\n         }\n     }\n \n+    @Test\n+    /** NXP-29246: Fix import of MHTML file using Chrome */\n+    public void testUploadMHTMLMultipartEnabled() throws Exception {\n+        String batchId;\n+        try (CloseableClientResponse response = getResponse(RequestType.POST, \"upload/new/dummy\")) {\n+            assertEquals(Status.OK.getStatusCode(), response.getStatus());\n+            JsonNode responseJson = mapper.readTree(response.getEntityInputStream());\n+            batchId = responseJson.get(\"batchId\").getValueAsText();\n+            assertNotNull(batchId);\n+        }\n+\n+        try (CloseableClientResponse response = getResponse(RequestType.POST, \"upload/\" + batchId + \"/0\",\n+                \"dummy\", Collections.singletonMap(\"Content-Type\", \"multipart/related\"))) {\n+            assertEquals(Status.INTERNAL_SERVER_ERROR.getStatusCode(), response.getStatus());\n+        }\n+    }\n+\n+    @Test\n+    /** NXP-29246: Fix import of MHTML file using Chrome */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3ab7eba474719389e3149ec5c5db3acafe66d247"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwMzAzOTQzOnYy", "diffSide": "RIGHT", "path": "nuxeo-features/rest-api/nuxeo-rest-api-test/src/test/java/org/nuxeo/ecm/restapi/test/BatchUploadFixture.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQwNTo1Mjo1OVrOG7SEoA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQwOToxNDo1N1rOG7YGuw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDgxNTI2NA==", "bodyText": "Can you please use the following code instead:\n        String batchId;\n        try (CloseableClientResponse response = getResponse(RequestType.POST, \"upload\")) {\n            assertEquals(Status.CREATED.getStatusCode(), response.getStatus());\n            JsonNode node = mapper.readTree(response.getEntityInputStream());\n            batchId = node.get(\"batchId\").getValueAsText();\n            assertNotNull(batchId);\n        }\n\nThe /upload/new/{handler} endpoint only makes sense when specifying a handler other than the default one (S3 for instance).\nThe fact that the /upload endpoint is marked as deprecated in the documentation is a mistake and should be fixed...", "url": "https://github.com/nuxeo/nuxeo/pull/4200#discussion_r464815264", "createdAt": "2020-08-04T05:52:59Z", "author": {"login": "ataillefer"}, "path": "nuxeo-features/rest-api/nuxeo-rest-api-test/src/test/java/org/nuxeo/ecm/restapi/test/BatchUploadFixture.java", "diffHunk": "@@ -1083,6 +1085,49 @@ public void testErrorOnRefreshedTokenError() throws Exception {\n         }\n     }\n \n+    /** NXP-29246: Fix import of MHTML file using Chrome */\n+    @Test\n+    public void testUploadMHTMLMultipartEnabled() throws Exception {\n+        String batchId;\n+        try (CloseableClientResponse response = getResponse(RequestType.POST, \"upload/new/dummy\")) {\n+            assertEquals(Status.OK.getStatusCode(), response.getStatus());\n+            JsonNode responseJson = mapper.readTree(response.getEntityInputStream());\n+            batchId = responseJson.get(\"batchId\").getValueAsText();\n+            assertNotNull(batchId);\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d84a7f93e7891c87f8c09abd0cf80bd07638f044"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDkxNDEwNw==", "bodyText": "Thanks !", "url": "https://github.com/nuxeo/nuxeo/pull/4200#discussion_r464914107", "createdAt": "2020-08-04T09:14:57Z", "author": {"login": "NourNuxeo"}, "path": "nuxeo-features/rest-api/nuxeo-rest-api-test/src/test/java/org/nuxeo/ecm/restapi/test/BatchUploadFixture.java", "diffHunk": "@@ -1083,6 +1085,49 @@ public void testErrorOnRefreshedTokenError() throws Exception {\n         }\n     }\n \n+    /** NXP-29246: Fix import of MHTML file using Chrome */\n+    @Test\n+    public void testUploadMHTMLMultipartEnabled() throws Exception {\n+        String batchId;\n+        try (CloseableClientResponse response = getResponse(RequestType.POST, \"upload/new/dummy\")) {\n+            assertEquals(Status.OK.getStatusCode(), response.getStatus());\n+            JsonNode responseJson = mapper.readTree(response.getEntityInputStream());\n+            batchId = responseJson.get(\"batchId\").getValueAsText();\n+            assertNotNull(batchId);\n+        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDgxNTI2NA=="}, "originalCommit": {"oid": "d84a7f93e7891c87f8c09abd0cf80bd07638f044"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwMzA0Mjc3OnYy", "diffSide": "RIGHT", "path": "nuxeo-features/rest-api/nuxeo-rest-api-test/src/test/java/org/nuxeo/ecm/restapi/test/BatchUploadFixture.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQwNTo1NDo0N1rOG7SGrA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQwNTo1NDo0N1rOG7SGrA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDgxNTc4OA==", "bodyText": "Same remark as above.", "url": "https://github.com/nuxeo/nuxeo/pull/4200#discussion_r464815788", "createdAt": "2020-08-04T05:54:47Z", "author": {"login": "ataillefer"}, "path": "nuxeo-features/rest-api/nuxeo-rest-api-test/src/test/java/org/nuxeo/ecm/restapi/test/BatchUploadFixture.java", "diffHunk": "@@ -1083,6 +1085,49 @@ public void testErrorOnRefreshedTokenError() throws Exception {\n         }\n     }\n \n+    /** NXP-29246: Fix import of MHTML file using Chrome */\n+    @Test\n+    public void testUploadMHTMLMultipartEnabled() throws Exception {\n+        String batchId;\n+        try (CloseableClientResponse response = getResponse(RequestType.POST, \"upload/new/dummy\")) {\n+            assertEquals(Status.OK.getStatusCode(), response.getStatus());\n+            JsonNode responseJson = mapper.readTree(response.getEntityInputStream());\n+            batchId = responseJson.get(\"batchId\").getValueAsText();\n+            assertNotNull(batchId);\n+        }\n+\n+        try (CloseableClientResponse response = getResponse(RequestType.POST, \"upload/\" + batchId + \"/0\",\n+                \"dummy\", Collections.singletonMap(\"Content-Type\", \"multipart/related\"))) {\n+            assertEquals(Status.INTERNAL_SERVER_ERROR.getStatusCode(), response.getStatus());\n+        }\n+    }\n+\n+    /** NXP-29246: Fix import of MHTML file using Chrome */\n+    @Test\n+    @Deploy(\"org.nuxeo.ecm.platform.restapi.test.test:test-batch-upload-properties.xml\")\n+    public void testUploadMHTMLMultipartDisabled() throws Exception {\n+        String batchId;\n+        try (CloseableClientResponse response = getResponse(RequestType.POST, \"upload/new/dummy\")) {\n+            assertEquals(Status.OK.getStatusCode(), response.getStatus());\n+            JsonNode responseJson = mapper.readTree(response.getEntityInputStream());\n+            batchId = responseJson.get(\"batchId\").getValueAsText();\n+            assertNotNull(batchId);\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d84a7f93e7891c87f8c09abd0cf80bd07638f044"}, "originalPosition": 47}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4096, "cost": 1, "resetAt": "2021-11-03T18:41:40Z"}}}