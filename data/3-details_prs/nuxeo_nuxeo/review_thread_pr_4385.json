{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAzOTI0NTkx", "number": 4385, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQwODo0MToxNlrOEuXz9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxNDoxNDozN1rOEvVhsQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE3MDYwMDg0OnYy", "diffSide": "RIGHT", "path": "modules/runtime/nuxeo-runtime/src/main/java/org/nuxeo/runtime/model/Descriptor.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQwODo0MToxNlrOHiurkg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQwODo0MToxNlrOHiurkg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjE3ODQ1MA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * Returns a list of descriptor representing {@code d2} merged into {@code d1}.\n          \n          \n            \n                 * Returns a list of descriptors representing {@code d2} merged into {@code d1}.", "url": "https://github.com/nuxeo/nuxeo/pull/4385#discussion_r506178450", "createdAt": "2020-10-16T08:41:16Z", "author": {"login": "ataillefer"}, "path": "modules/runtime/nuxeo-runtime/src/main/java/org/nuxeo/runtime/model/Descriptor.java", "diffHunk": "@@ -69,4 +76,18 @@ default boolean doesRemove() {\n         return false;\n     }\n \n+    /**\n+     * Returns a list of descriptor representing {@code d2} merged into {@code d1}.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2f91780563663617205c3a61b06e9a499feb5d8b"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE3MDYwMTc3OnYy", "diffSide": "RIGHT", "path": "modules/runtime/nuxeo-runtime/src/main/java/org/nuxeo/runtime/model/DescriptorRegistry.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQwODo0MToyOVrOHiusIQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQwODo1MzozM1rOHivM1Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjE3ODU5Mw==", "bodyText": "public or protected?", "url": "https://github.com/nuxeo/nuxeo/pull/4385#discussion_r506178593", "createdAt": "2020-10-16T08:41:29Z", "author": {"login": "ataillefer"}, "path": "modules/runtime/nuxeo-runtime/src/main/java/org/nuxeo/runtime/model/DescriptorRegistry.java", "diffHunk": "@@ -50,10 +51,17 @@\n     protected Map<String, Map<String, Map<String, List<Descriptor>>>> descriptors = new HashMap<>();\n \n     public <T extends Descriptor> T getDescriptor(String target, String xp, String id) {\n-        return (T) merge(descriptors.getOrDefault(target, Collections.emptyMap())\n-                                    .getOrDefault(xp, Collections.emptyMap())\n-                                    .getOrDefault(id, Collections.emptyList()));\n+        return this.<T> optDescriptor(target, xp, id).orElse(null);\n+    }\n \n+    /**\n+     * @since 11.4\n+     */\n+    public <T extends Descriptor> Optional<T> optDescriptor(String target, String xp, String id) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "14e1cca788031243057f109d419d5c8892504768"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjE4Njk2NQ==", "bodyText": "I would keep the public modifier for later use if it's ok for the team?", "url": "https://github.com/nuxeo/nuxeo/pull/4385#discussion_r506186965", "createdAt": "2020-10-16T08:53:33Z", "author": {"login": "kevinleturc"}, "path": "modules/runtime/nuxeo-runtime/src/main/java/org/nuxeo/runtime/model/DescriptorRegistry.java", "diffHunk": "@@ -50,10 +51,17 @@\n     protected Map<String, Map<String, Map<String, List<Descriptor>>>> descriptors = new HashMap<>();\n \n     public <T extends Descriptor> T getDescriptor(String target, String xp, String id) {\n-        return (T) merge(descriptors.getOrDefault(target, Collections.emptyMap())\n-                                    .getOrDefault(xp, Collections.emptyMap())\n-                                    .getOrDefault(id, Collections.emptyList()));\n+        return this.<T> optDescriptor(target, xp, id).orElse(null);\n+    }\n \n+    /**\n+     * @since 11.4\n+     */\n+    public <T extends Descriptor> Optional<T> optDescriptor(String target, String xp, String id) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjE3ODU5Mw=="}, "originalCommit": {"oid": "14e1cca788031243057f109d419d5c8892504768"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE3MDYwODM0OnYy", "diffSide": "LEFT", "path": "modules/platform/nuxeo-platform-filemanager-core/src/main/java/org/nuxeo/ecm/platform/filemanager/service/extension/FileImporterDescriptor.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQwODo0MzowMVrOHiuwLg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQwOToyODoxMVrOHixAiA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjE3OTYzMA==", "bodyText": "Why can it be safely removed?", "url": "https://github.com/nuxeo/nuxeo/pull/4385#discussion_r506179630", "createdAt": "2020-10-16T08:43:01Z", "author": {"login": "ataillefer"}, "path": "modules/platform/nuxeo-platform-filemanager-core/src/main/java/org/nuxeo/ecm/platform/filemanager/service/extension/FileImporterDescriptor.java", "diffHunk": "@@ -173,23 +176,14 @@ public Descriptor merge(Descriptor o) {\n \n         FileImporterDescriptor merged = new FileImporterDescriptor();\n         merged.name = other.name;\n-        merged.enabled = other.enabled;\n-        merged.klass = defaultValue(other.klass, klass);\n-        merged.className = defaultValue(other.className, className);\n-        merged.docType = defaultValue(other.docType, docType);\n+        merged.enabled = defaultIfNull(other.enabled, enabled);\n+        merged.klass = defaultIfNull(other.klass, klass);\n+        merged.className = defaultIfBlank(other.className, className);\n+        merged.docType = defaultIfBlank(other.docType, docType);\n         merged.filters = new ArrayList<>();\n         merged.filters.addAll(filters);\n         merged.filters.addAll(other.filters);\n-        merged.order = defaultValue(other.order, order);\n+        merged.order = defaultIfNull(other.order, order);\n         return merged;\n     }\n-\n-    protected <T> T defaultValue(T value, T defaultValue) {\n-        return value == null ? defaultValue : value;\n-    }\n-\n-    @Override\n-    public boolean doesRemove() {\n-        return !enabled;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2f91780563663617205c3a61b06e9a499feb5d8b"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjIxNjU4NA==", "bodyText": "doesRemove makes the last descriptor null which is filtered out by the registry. Now that the registry takes care to filter out disabled contributions, this override is not needed anymore.\nFurthermore, the doesRemove is better suited to re-init the contributions merge with such contributions:\n<extension target=\"\" point=\"\">\n  <something remove=\"true\" />\n  <something ...> <!-- completely new contribution -->\n     ...\n  </something>\n</extension>\n\nWhereas enabled with help of merge attribute allows us to do what we want in a single contribution.", "url": "https://github.com/nuxeo/nuxeo/pull/4385#discussion_r506216584", "createdAt": "2020-10-16T09:28:11Z", "author": {"login": "kevinleturc"}, "path": "modules/platform/nuxeo-platform-filemanager-core/src/main/java/org/nuxeo/ecm/platform/filemanager/service/extension/FileImporterDescriptor.java", "diffHunk": "@@ -173,23 +176,14 @@ public Descriptor merge(Descriptor o) {\n \n         FileImporterDescriptor merged = new FileImporterDescriptor();\n         merged.name = other.name;\n-        merged.enabled = other.enabled;\n-        merged.klass = defaultValue(other.klass, klass);\n-        merged.className = defaultValue(other.className, className);\n-        merged.docType = defaultValue(other.docType, docType);\n+        merged.enabled = defaultIfNull(other.enabled, enabled);\n+        merged.klass = defaultIfNull(other.klass, klass);\n+        merged.className = defaultIfBlank(other.className, className);\n+        merged.docType = defaultIfBlank(other.docType, docType);\n         merged.filters = new ArrayList<>();\n         merged.filters.addAll(filters);\n         merged.filters.addAll(other.filters);\n-        merged.order = defaultValue(other.order, order);\n+        merged.order = defaultIfNull(other.order, order);\n         return merged;\n     }\n-\n-    protected <T> T defaultValue(T value, T defaultValue) {\n-        return value == null ? defaultValue : value;\n-    }\n-\n-    @Override\n-    public boolean doesRemove() {\n-        return !enabled;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjE3OTYzMA=="}, "originalCommit": {"oid": "2f91780563663617205c3a61b06e9a499feb5d8b"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4MDY5Mzk0OnYy", "diffSide": "RIGHT", "path": "modules/platform/login/nuxeo-platform-login-openid/src/main/java/org/nuxeo/ecm/platform/oauth2/openid/OpenIDConnectProviderDescriptor.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxNDoxMDo1NlrOHkQfIw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxNDoxMDo1NlrOHkQfIw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzc4MDg5OQ==", "bodyText": "private", "url": "https://github.com/nuxeo/nuxeo/pull/4385#discussion_r507780899", "createdAt": "2020-10-19T14:10:56Z", "author": {"login": "efge"}, "path": "modules/platform/login/nuxeo-platform-login-openid/src/main/java/org/nuxeo/ecm/platform/oauth2/openid/OpenIDConnectProviderDescriptor.java", "diffHunk": "@@ -37,6 +42,8 @@\n public class OpenIDConnectProviderDescriptor implements Descriptor {\n     protected static final long serialVersionUID = 1L;\n \n+    protected static final Logger log = LogManager.getLogger(OpenIDConnectProviderDescriptor.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "090959770bd99a5fb59bb7979270bdb7bcf8807a"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4MDY5NTk1OnYy", "diffSide": "RIGHT", "path": "modules/platform/login/nuxeo-platform-login-openid/src/main/java/org/nuxeo/ecm/platform/oauth2/openid/OpenIDConnectProviderDescriptor.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxNDoxMToyMVrOHkQgZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxNDoyMjo1MVrOHkRE3A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzc4MTIyMQ==", "bodyText": "Having a log in the getter means that this is going to potentially get logged numerous times, no?", "url": "https://github.com/nuxeo/nuxeo/pull/4385#discussion_r507781221", "createdAt": "2020-10-19T14:11:21Z", "author": {"login": "efge"}, "path": "modules/platform/login/nuxeo-platform-login-openid/src/main/java/org/nuxeo/ecm/platform/oauth2/openid/OpenIDConnectProviderDescriptor.java", "diffHunk": "@@ -161,6 +168,10 @@ public String getIcon() {\n \n     @Override\n     public boolean isEnabled() {\n+        if (isBlank(clientId) || isBlank(clientSecret)) {\n+            log.info(\"OpenId provider: {} is disabled because clientId and/or clientSecret are empty\", name);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "090959770bd99a5fb59bb7979270bdb7bcf8807a"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzc4Nzc1OQ==", "bodyText": "It should be done once per Component#start calls. Otherwise, I can remove it, not sure that an info log is going to be useful at some point, wdyt?", "url": "https://github.com/nuxeo/nuxeo/pull/4385#discussion_r507787759", "createdAt": "2020-10-19T14:19:18Z", "author": {"login": "kevinleturc"}, "path": "modules/platform/login/nuxeo-platform-login-openid/src/main/java/org/nuxeo/ecm/platform/oauth2/openid/OpenIDConnectProviderDescriptor.java", "diffHunk": "@@ -161,6 +168,10 @@ public String getIcon() {\n \n     @Override\n     public boolean isEnabled() {\n+        if (isBlank(clientId) || isBlank(clientSecret)) {\n+            log.info(\"OpenId provider: {} is disabled because clientId and/or clientSecret are empty\", name);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzc4MTIyMQ=="}, "originalCommit": {"oid": "090959770bd99a5fb59bb7979270bdb7bcf8807a"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzc5MDU1Ng==", "bodyText": "I don't think it's the descriptor's role to warn of such things. For me the descriptor is a pure carrier of data without any logic (and in general even the defaults should probably be elsewhere, in a service).", "url": "https://github.com/nuxeo/nuxeo/pull/4385#discussion_r507790556", "createdAt": "2020-10-19T14:22:51Z", "author": {"login": "efge"}, "path": "modules/platform/login/nuxeo-platform-login-openid/src/main/java/org/nuxeo/ecm/platform/oauth2/openid/OpenIDConnectProviderDescriptor.java", "diffHunk": "@@ -161,6 +168,10 @@ public String getIcon() {\n \n     @Override\n     public boolean isEnabled() {\n+        if (isBlank(clientId) || isBlank(clientSecret)) {\n+            log.info(\"OpenId provider: {} is disabled because clientId and/or clientSecret are empty\", name);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzc4MTIyMQ=="}, "originalCommit": {"oid": "090959770bd99a5fb59bb7979270bdb7bcf8807a"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4MDcxMjE3OnYy", "diffSide": "RIGHT", "path": "modules/core/nuxeo-core-bulk/src/main/java/org/nuxeo/ecm/core/bulk/BulkActionDescriptor.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxNDoxNDozN1rOHkQqhQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxOTo1MToxNVrOHkfMRA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzc4MzgxMw==", "bodyText": "Aren't you changing the merge semantics? Previously if we had\n<extension target=\"\" point=\"\">\n  <something enabled=\"false\" />\n  <something ... /> <!-- completely new contribution -->\n</extension>\n\nThen the new contribution would be enabled, but now it'll keep a merged enabled=false flag. Or is something else changing in the merge?", "url": "https://github.com/nuxeo/nuxeo/pull/4385#discussion_r507783813", "createdAt": "2020-10-19T14:14:37Z", "author": {"login": "efge"}, "path": "modules/core/nuxeo-core-bulk/src/main/java/org/nuxeo/ecm/core/bulk/BulkActionDescriptor.java", "diffHunk": "@@ -38,7 +39,7 @@\n \n     // @since 11.1\n     @XNode(\"@enabled\")\n-    protected boolean isEnabled = true;\n+    protected Boolean enabled;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a726c1a3b3f427e2dbb63b9e1cfb64813cba82e9"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzc5NzU5Nw==", "bodyText": "You're right, this one will keep the enabled=false.\nThis change was introduced in 11.x, I think we can break the compatibility there, wdyt?", "url": "https://github.com/nuxeo/nuxeo/pull/4385#discussion_r507797597", "createdAt": "2020-10-19T14:30:10Z", "author": {"login": "kevinleturc"}, "path": "modules/core/nuxeo-core-bulk/src/main/java/org/nuxeo/ecm/core/bulk/BulkActionDescriptor.java", "diffHunk": "@@ -38,7 +39,7 @@\n \n     // @since 11.1\n     @XNode(\"@enabled\")\n-    protected boolean isEnabled = true;\n+    protected Boolean enabled;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzc4MzgxMw=="}, "originalCommit": {"oid": "a726c1a3b3f427e2dbb63b9e1cfb64813cba82e9"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODAyMTgyOA==", "bodyText": "I'm ok, I just wanted to be sure you were aware of and ok with the change.", "url": "https://github.com/nuxeo/nuxeo/pull/4385#discussion_r508021828", "createdAt": "2020-10-19T19:51:15Z", "author": {"login": "efge"}, "path": "modules/core/nuxeo-core-bulk/src/main/java/org/nuxeo/ecm/core/bulk/BulkActionDescriptor.java", "diffHunk": "@@ -38,7 +39,7 @@\n \n     // @since 11.1\n     @XNode(\"@enabled\")\n-    protected boolean isEnabled = true;\n+    protected Boolean enabled;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzc4MzgxMw=="}, "originalCommit": {"oid": "a726c1a3b3f427e2dbb63b9e1cfb64813cba82e9"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4357, "cost": 1, "resetAt": "2021-11-03T18:41:40Z"}}}