{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc3OTg5Njc5", "number": 3772, "title": "fix-NXP-28560-catch-enrichers-exceptions", "bodyText": "PR created from https://qa.nuxeo.org/jenkins/job/TestAndPush/job/ondemand-testandpush-nalkotob/131/", "createdAt": "2020-02-20T21:44:19Z", "url": "https://github.com/nuxeo/nuxeo/pull/3772", "merged": true, "mergeCommit": {"oid": "444651e106de529108a2c8036fbb9b2933439620"}, "closed": true, "closedAt": "2020-02-21T13:47:53Z", "author": {"login": "nuxeojenkins"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcGT85CAFqTM2MjMwOTEwMg==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcGflPtAFqTM2MjYyMDkwMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYyMzA5MTAy", "url": "https://github.com/nuxeo/nuxeo/pull/3772#pullrequestreview-362309102", "createdAt": "2020-02-20T23:31:57Z", "commit": {"oid": "bdaa1b387c2445910d009a74f5d919e17d058dc9"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQyMzozMTo1N1rOFsm0dg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQyMzo0NDoxMVrOFsnHFQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjMxNzY4Ng==", "bodyText": "The writer is not used at all and can be removed, I guess this is old code from a previous attempt", "url": "https://github.com/nuxeo/nuxeo/pull/3772#discussion_r382317686", "createdAt": "2020-02-20T23:31:57Z", "author": {"login": "efge"}, "path": "nuxeo-core/nuxeo-core-io/src/main/java/org/nuxeo/ecm/core/io/marshallers/json/enrichers/AbstractJsonEnricher.java", "diffHunk": "@@ -56,8 +64,20 @@ public boolean accept(Class<?> clazz, Type genericType, MediaType mediatype) {\n \n     @Override\n     public void write(Enriched<EntityType> enrichable, JsonGenerator jg) {\n-        try {\n-            write(jg, enrichable.getEntity());\n+        try (Writer writer = new StringWriter()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bdaa1b387c2445910d009a74f5d919e17d058dc9"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjMxNzg0NA==", "bodyText": "Expand the comment to: Write to a temporary output in case of exception during write()", "url": "https://github.com/nuxeo/nuxeo/pull/3772#discussion_r382317844", "createdAt": "2020-02-20T23:32:29Z", "author": {"login": "efge"}, "path": "nuxeo-core/nuxeo-core-io/src/main/java/org/nuxeo/ecm/core/io/marshallers/json/enrichers/AbstractJsonEnricher.java", "diffHunk": "@@ -56,8 +64,20 @@ public boolean accept(Class<?> clazz, Type genericType, MediaType mediatype) {\n \n     @Override\n     public void write(Enriched<EntityType> enrichable, JsonGenerator jg) {\n-        try {\n-            write(jg, enrichable.getEntity());\n+        try (Writer writer = new StringWriter()) {\n+            try (TokenBuffer tb = new TokenBuffer(MAPPER, false)) {\n+                // Write to a temporary output", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bdaa1b387c2445910d009a74f5d919e17d058dc9"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjMxODAwNA==", "bodyText": "Expand: Add the complete, well-formed content to the real output", "url": "https://github.com/nuxeo/nuxeo/pull/3772#discussion_r382318004", "createdAt": "2020-02-20T23:32:55Z", "author": {"login": "efge"}, "path": "nuxeo-core/nuxeo-core-io/src/main/java/org/nuxeo/ecm/core/io/marshallers/json/enrichers/AbstractJsonEnricher.java", "diffHunk": "@@ -56,8 +64,20 @@ public boolean accept(Class<?> clazz, Type genericType, MediaType mediatype) {\n \n     @Override\n     public void write(Enriched<EntityType> enrichable, JsonGenerator jg) {\n-        try {\n-            write(jg, enrichable.getEntity());\n+        try (Writer writer = new StringWriter()) {\n+            try (TokenBuffer tb = new TokenBuffer(MAPPER, false)) {\n+                // Write to a temporary output\n+                tb.writeStartObject();\n+                write(tb, enrichable.getEntity());\n+                tb.flush();\n+                // Add the content to the real output", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bdaa1b387c2445910d009a74f5d919e17d058dc9"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjMxODgxMA==", "bodyText": "To better simulate a failure with incomplete content I would rather do jg.writeFieldName(\"justfieldname\"); jg.flush() so that we're sure the result is invalid.", "url": "https://github.com/nuxeo/nuxeo/pull/3772#discussion_r382318810", "createdAt": "2020-02-20T23:35:40Z", "author": {"login": "efge"}, "path": "nuxeo-core/nuxeo-core-test/src/test/java/org/nuxeo/ecm/core/io/marshallers/json/enrichers/FailingEnricher.java", "diffHunk": "@@ -43,6 +43,7 @@ public FailingEnricher() {\n \n     @Override\n     public void write(JsonGenerator jg, DocumentModel enriched) throws IOException {\n+        jg.writeStringField(\"shouldnot\", \"bethere\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bdaa1b387c2445910d009a74f5d919e17d058dc9"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjMyMjQ1Mw==", "bodyText": "I think it's worth checking that we're really at the end here after the loop, and if not at least log an error with the enricher name (code untested):\nif (parser.currentToken() != null) {\n    log.error(\"Enricher {} returned invalid output {}\", name, tb.toString());\n}", "url": "https://github.com/nuxeo/nuxeo/pull/3772#discussion_r382322453", "createdAt": "2020-02-20T23:44:11Z", "author": {"login": "efge"}, "path": "nuxeo-core/nuxeo-core-io/src/main/java/org/nuxeo/ecm/core/io/marshallers/json/enrichers/AbstractJsonEnricher.java", "diffHunk": "@@ -56,8 +64,20 @@ public boolean accept(Class<?> clazz, Type genericType, MediaType mediatype) {\n \n     @Override\n     public void write(Enriched<EntityType> enrichable, JsonGenerator jg) {\n-        try {\n-            write(jg, enrichable.getEntity());\n+        try (Writer writer = new StringWriter()) {\n+            try (TokenBuffer tb = new TokenBuffer(MAPPER, false)) {\n+                // Write to a temporary output\n+                tb.writeStartObject();\n+                write(tb, enrichable.getEntity());\n+                tb.flush();\n+                // Add the content to the real output\n+                try (JsonParser parser = tb.asParser()) {\n+                    parser.nextToken(); // ignoring START_OBJECT\n+                    while (parser.nextToken() == JsonToken.FIELD_NAME) {\n+                        jg.copyCurrentStructure(parser);\n+                    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bdaa1b387c2445910d009a74f5d919e17d058dc9"}, "originalPosition": 46}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYyMzE4NTI5", "url": "https://github.com/nuxeo/nuxeo/pull/3772#pullrequestreview-362318529", "createdAt": "2020-02-20T23:53:33Z", "commit": {"oid": "bdaa1b387c2445910d009a74f5d919e17d058dc9"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQyMzo1MzozM1rOFsnTKg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQyMzo1MzozM1rOFsnTKg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjMyNTU0Ng==", "bodyText": "In the log.info(\"enrichment failed\", e) a bit below, could you also add the enricher name in the message?", "url": "https://github.com/nuxeo/nuxeo/pull/3772#discussion_r382325546", "createdAt": "2020-02-20T23:53:33Z", "author": {"login": "efge"}, "path": "nuxeo-core/nuxeo-core-io/src/main/java/org/nuxeo/ecm/core/io/marshallers/json/enrichers/AbstractJsonEnricher.java", "diffHunk": "@@ -56,8 +64,20 @@ public boolean accept(Class<?> clazz, Type genericType, MediaType mediatype) {\n \n     @Override\n     public void write(Enriched<EntityType> enrichable, JsonGenerator jg) {\n-        try {\n-            write(jg, enrichable.getEntity());\n+        try (Writer writer = new StringWriter()) {\n+            try (TokenBuffer tb = new TokenBuffer(MAPPER, false)) {\n+                // Write to a temporary output\n+                tb.writeStartObject();\n+                write(tb, enrichable.getEntity());\n+                tb.flush();\n+                // Add the content to the real output\n+                try (JsonParser parser = tb.asParser()) {\n+                    parser.nextToken(); // ignoring START_OBJECT\n+                    while (parser.nextToken() == JsonToken.FIELD_NAME) {\n+                        jg.copyCurrentStructure(parser);\n+                    }\n+                }\n+            }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bdaa1b387c2445910d009a74f5d919e17d058dc9"}, "originalPosition": 48}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "131f17a5d476c96d984dd1e2469d8f5bb98ce953", "author": {"user": {"login": "NourNuxeo", "name": "Nour AL KOTOB"}}, "url": "https://github.com/nuxeo/nuxeo/commit/131f17a5d476c96d984dd1e2469d8f5bb98ce953", "committedDate": "2020-02-21T11:00:56Z", "message": "NXP-28560: fix catch AbstractJsonEnrichers Exception"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "bdaa1b387c2445910d009a74f5d919e17d058dc9", "author": {"user": {"login": "NourNuxeo", "name": "Nour AL KOTOB"}}, "url": "https://github.com/nuxeo/nuxeo/commit/bdaa1b387c2445910d009a74f5d919e17d058dc9", "committedDate": "2020-02-20T16:50:51Z", "message": "NXP-28560: fix catch AbstractJsonEnrichers Exception"}, "afterCommit": {"oid": "131f17a5d476c96d984dd1e2469d8f5bb98ce953", "author": {"user": {"login": "NourNuxeo", "name": "Nour AL KOTOB"}}, "url": "https://github.com/nuxeo/nuxeo/commit/131f17a5d476c96d984dd1e2469d8f5bb98ce953", "committedDate": "2020-02-21T11:00:56Z", "message": "NXP-28560: fix catch AbstractJsonEnrichers Exception"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYyNTY3Mjcx", "url": "https://github.com/nuxeo/nuxeo/pull/3772#pullrequestreview-362567271", "createdAt": "2020-02-21T11:29:45Z", "commit": {"oid": "131f17a5d476c96d984dd1e2469d8f5bb98ce953"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYyNTc1OTA3", "url": "https://github.com/nuxeo/nuxeo/pull/3772#pullrequestreview-362575907", "createdAt": "2020-02-21T11:47:46Z", "commit": {"oid": "131f17a5d476c96d984dd1e2469d8f5bb98ce953"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYyNjIwOTAw", "url": "https://github.com/nuxeo/nuxeo/pull/3772#pullrequestreview-362620900", "createdAt": "2020-02-21T13:17:22Z", "commit": {"oid": "131f17a5d476c96d984dd1e2469d8f5bb98ce953"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4856, "cost": 1, "resetAt": "2021-11-03T18:41:40Z"}}}