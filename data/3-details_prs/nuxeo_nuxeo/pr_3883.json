{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk3MTQzNjk5", "number": 3883, "title": "feature-NXP-28743-Add-the-ability-to-disable-the-rendition-computations", "bodyText": "PR created from https://qa.nuxeo.org/jenkins/job/TestAndPush/job/ondemand-testandpush-saouana-2/2/", "createdAt": "2020-04-01T17:53:14Z", "url": "https://github.com/nuxeo/nuxeo/pull/3883", "merged": true, "mergeCommit": {"oid": "346516611fd3f2ed55a8d179325dd62212f7465b"}, "closed": true, "closedAt": "2020-04-06T07:42:55Z", "author": {"login": "nuxeojenkins"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcTno02AFqTM4NjE3ODMwMw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcUDSjigFqTM4NzM5NjM1Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg2MTc4MzAz", "url": "https://github.com/nuxeo/nuxeo/pull/3883#pullrequestreview-386178303", "createdAt": "2020-04-02T07:44:42Z", "commit": {"oid": "99c7a702fe8f416ace82d898b9a30b74c9656805"}, "state": "COMMENTED", "comments": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQwNzo0NDo0MlrOF_fDuA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQwODowMDo1NlrOF_fpKw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjExMzQ2NA==", "bodyText": "Worth adding VideoConstants.* them as static import", "url": "https://github.com/nuxeo/nuxeo/pull/3883#discussion_r402113464", "createdAt": "2020-04-02T07:44:42Z", "author": {"login": "troger"}, "path": "modules/platform/nuxeo-platform-video/nuxeo-platform-video-core/src/test/java/org/nuxeo/ecm/platform/video/extension/TestVideoImporterAndListeners.java", "diffHunk": "@@ -115,20 +114,20 @@ protected static Blob getBlobFromPath(String path, String mimeType) throws IOExc\n \n     @Test\n     public void testVideoType() {\n-        DocumentType videoType = session.getDocumentType(VIDEO_TYPE);\n+        DocumentType videoType = session.getDocumentType(VideoConstants.VIDEO_TYPE);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "99c7a702fe8f416ace82d898b9a30b74c9656805"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjExNTk5Mw==", "bodyText": "Why do you need to deploy it?", "url": "https://github.com/nuxeo/nuxeo/pull/3883#discussion_r402115993", "createdAt": "2020-04-02T07:49:03Z", "author": {"login": "troger"}, "path": "modules/platform/nuxeo-platform-video/nuxeo-platform-video-core/src/test/java/org/nuxeo/ecm/platform/video/extension/TestVideoImporterAndListeners.java", "diffHunk": "@@ -452,9 +449,46 @@ public void testConfiguration() throws Exception {\n         // check storyboard\n         @SuppressWarnings(\"unchecked\")\n         List<Map<String, Serializable>> storyboard = (List<Map<String, Serializable>>) docModel.getPropertyValue(\n-                \"vid:storyboard\");\n+                VideoConstants.STORYBOARD_PROPERTY);\n         assertNotNull(storyboard);\n         assertEquals(2, storyboard.size());\n     }\n \n+    @Test\n+    @Deploy(\"org.nuxeo.ecm.platform.video.core:test-video-conversions-enabled.xml\")\n+    @Deploy(\"org.nuxeo.ecm.platform.video.core:test-video-listeners-contrib.xml\")\n+    @Deploy(\"org.nuxeo.ecm.platform.video.core:video-configuration-override.xml\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "99c7a702fe8f416ace82d898b9a30b74c9656805"}, "originalPosition": 280}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjExNjQwNg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    doc.getContextData().put(VideoChangedListener.DISABLE_VIDEO_CONVERSIONS_GENERATION_LISTENER, true);\n          \n          \n            \n                    doc.putContextData(VideoChangedListener.DISABLE_VIDEO_CONVERSIONS_GENERATION_LISTENER, true);", "url": "https://github.com/nuxeo/nuxeo/pull/3883#discussion_r402116406", "createdAt": "2020-04-02T07:49:41Z", "author": {"login": "troger"}, "path": "modules/platform/nuxeo-platform-video/nuxeo-platform-video-core/src/test/java/org/nuxeo/ecm/platform/video/extension/TestVideoImporterAndListeners.java", "diffHunk": "@@ -452,9 +449,46 @@ public void testConfiguration() throws Exception {\n         // check storyboard\n         @SuppressWarnings(\"unchecked\")\n         List<Map<String, Serializable>> storyboard = (List<Map<String, Serializable>>) docModel.getPropertyValue(\n-                \"vid:storyboard\");\n+                VideoConstants.STORYBOARD_PROPERTY);\n         assertNotNull(storyboard);\n         assertEquals(2, storyboard.size());\n     }\n \n+    @Test\n+    @Deploy(\"org.nuxeo.ecm.platform.video.core:test-video-conversions-enabled.xml\")\n+    @Deploy(\"org.nuxeo.ecm.platform.video.core:test-video-listeners-contrib.xml\")\n+    @Deploy(\"org.nuxeo.ecm.platform.video.core:video-configuration-override.xml\")\n+    @SuppressWarnings(\"unchecked\")\n+    public void testNotConversionWhenDisabled() throws IOException {\n+        DocumentModel doc = session.createDocumentModel(\"/\", \"testVideoDoc\", VideoConstants.VIDEO_TYPE);\n+        Blob blobContent = getBlobFromPath(\"test-data/sample.mpg\", \"video/mpeg\");\n+        doc.setPropertyValue(\"file:content\", (Serializable) blobContent);\n+        doc.getContextData().put(VideoChangedListener.DISABLE_VIDEO_CONVERSIONS_GENERATION_LISTENER, true);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "99c7a702fe8f416ace82d898b9a30b74c9656805"}, "originalPosition": 286}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjExNzQxMA==", "bodyText": "Worth adding some comments, such as we check that the conversion done event is not fired as we don't do any conversion.", "url": "https://github.com/nuxeo/nuxeo/pull/3883#discussion_r402117410", "createdAt": "2020-04-02T07:51:18Z", "author": {"login": "troger"}, "path": "modules/platform/nuxeo-platform-video/nuxeo-platform-video-core/src/test/java/org/nuxeo/ecm/platform/video/extension/TestVideoImporterAndListeners.java", "diffHunk": "@@ -452,9 +449,46 @@ public void testConfiguration() throws Exception {\n         // check storyboard\n         @SuppressWarnings(\"unchecked\")\n         List<Map<String, Serializable>> storyboard = (List<Map<String, Serializable>>) docModel.getPropertyValue(\n-                \"vid:storyboard\");\n+                VideoConstants.STORYBOARD_PROPERTY);\n         assertNotNull(storyboard);\n         assertEquals(2, storyboard.size());\n     }\n \n+    @Test\n+    @Deploy(\"org.nuxeo.ecm.platform.video.core:test-video-conversions-enabled.xml\")\n+    @Deploy(\"org.nuxeo.ecm.platform.video.core:test-video-listeners-contrib.xml\")\n+    @Deploy(\"org.nuxeo.ecm.platform.video.core:video-configuration-override.xml\")\n+    @SuppressWarnings(\"unchecked\")\n+    public void testNotConversionWhenDisabled() throws IOException {\n+        DocumentModel doc = session.createDocumentModel(\"/\", \"testVideoDoc\", VideoConstants.VIDEO_TYPE);\n+        Blob blobContent = getBlobFromPath(\"test-data/sample.mpg\", \"video/mpeg\");\n+        doc.setPropertyValue(\"file:content\", (Serializable) blobContent);\n+        doc.getContextData().put(VideoChangedListener.DISABLE_VIDEO_CONVERSIONS_GENERATION_LISTENER, true);\n+        doc = session.createDocument(doc);\n+\n+        KeyValueStore kvs = Framework.getService(KeyValueService.class).getKeyValueStore(\"default\");\n+        kvs.put(doc.getId(), 0L);\n+        txFeature.nextTransaction();\n+\n+        assertEquals(Long.valueOf(0), kvs.getLong(doc.getId()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "99c7a702fe8f416ace82d898b9a30b74c9656805"}, "originalPosition": 293}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjExOTM4NA==", "bodyText": "Be consistent :)\nnoStoryboard and noTranscodedVideos or just storyboard and transcodedVideo (my peer).", "url": "https://github.com/nuxeo/nuxeo/pull/3883#discussion_r402119384", "createdAt": "2020-04-02T07:54:34Z", "author": {"login": "troger"}, "path": "modules/platform/nuxeo-platform-video/nuxeo-platform-video-core/src/test/java/org/nuxeo/ecm/platform/video/extension/TestVideoImporterAndListeners.java", "diffHunk": "@@ -452,9 +449,46 @@ public void testConfiguration() throws Exception {\n         // check storyboard\n         @SuppressWarnings(\"unchecked\")\n         List<Map<String, Serializable>> storyboard = (List<Map<String, Serializable>>) docModel.getPropertyValue(\n-                \"vid:storyboard\");\n+                VideoConstants.STORYBOARD_PROPERTY);\n         assertNotNull(storyboard);\n         assertEquals(2, storyboard.size());\n     }\n \n+    @Test\n+    @Deploy(\"org.nuxeo.ecm.platform.video.core:test-video-conversions-enabled.xml\")\n+    @Deploy(\"org.nuxeo.ecm.platform.video.core:test-video-listeners-contrib.xml\")\n+    @Deploy(\"org.nuxeo.ecm.platform.video.core:video-configuration-override.xml\")\n+    @SuppressWarnings(\"unchecked\")\n+    public void testNotConversionWhenDisabled() throws IOException {\n+        DocumentModel doc = session.createDocumentModel(\"/\", \"testVideoDoc\", VideoConstants.VIDEO_TYPE);\n+        Blob blobContent = getBlobFromPath(\"test-data/sample.mpg\", \"video/mpeg\");\n+        doc.setPropertyValue(\"file:content\", (Serializable) blobContent);\n+        doc.getContextData().put(VideoChangedListener.DISABLE_VIDEO_CONVERSIONS_GENERATION_LISTENER, true);\n+        doc = session.createDocument(doc);\n+\n+        KeyValueStore kvs = Framework.getService(KeyValueService.class).getKeyValueStore(\"default\");\n+        kvs.put(doc.getId(), 0L);\n+        txFeature.nextTransaction();\n+\n+        assertEquals(Long.valueOf(0), kvs.getLong(doc.getId()));\n+\n+        var transcodedVideos = (List<Map<String, Serializable>>) doc.getPropertyValue(\n+                VideoConstants.TRANSCODED_VIDEOS_PROPERTY);\n+        assertEquals(0, transcodedVideos.size());\n+        var noStoryboard = (List<Map<String, Serializable>>) doc.getPropertyValue(VideoConstants.STORYBOARD_PROPERTY);\n+        assertEquals(0, noStoryboard.size());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "99c7a702fe8f416ace82d898b9a30b74c9656805"}, "originalPosition": 299}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjExOTgyNA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    doc.getContextData().put(VideoChangedListener.DISABLE_VIDEO_CONVERSIONS_GENERATION_LISTENER, false);\n          \n          \n            \n                    doc.putContextData(VideoChangedListener.DISABLE_VIDEO_CONVERSIONS_GENERATION_LISTENER, false);", "url": "https://github.com/nuxeo/nuxeo/pull/3883#discussion_r402119824", "createdAt": "2020-04-02T07:55:20Z", "author": {"login": "troger"}, "path": "modules/platform/nuxeo-platform-video/nuxeo-platform-video-core/src/test/java/org/nuxeo/ecm/platform/video/extension/TestVideoImporterAndListeners.java", "diffHunk": "@@ -452,9 +449,46 @@ public void testConfiguration() throws Exception {\n         // check storyboard\n         @SuppressWarnings(\"unchecked\")\n         List<Map<String, Serializable>> storyboard = (List<Map<String, Serializable>>) docModel.getPropertyValue(\n-                \"vid:storyboard\");\n+                VideoConstants.STORYBOARD_PROPERTY);\n         assertNotNull(storyboard);\n         assertEquals(2, storyboard.size());\n     }\n \n+    @Test\n+    @Deploy(\"org.nuxeo.ecm.platform.video.core:test-video-conversions-enabled.xml\")\n+    @Deploy(\"org.nuxeo.ecm.platform.video.core:test-video-listeners-contrib.xml\")\n+    @Deploy(\"org.nuxeo.ecm.platform.video.core:video-configuration-override.xml\")\n+    @SuppressWarnings(\"unchecked\")\n+    public void testNotConversionWhenDisabled() throws IOException {\n+        DocumentModel doc = session.createDocumentModel(\"/\", \"testVideoDoc\", VideoConstants.VIDEO_TYPE);\n+        Blob blobContent = getBlobFromPath(\"test-data/sample.mpg\", \"video/mpeg\");\n+        doc.setPropertyValue(\"file:content\", (Serializable) blobContent);\n+        doc.getContextData().put(VideoChangedListener.DISABLE_VIDEO_CONVERSIONS_GENERATION_LISTENER, true);\n+        doc = session.createDocument(doc);\n+\n+        KeyValueStore kvs = Framework.getService(KeyValueService.class).getKeyValueStore(\"default\");\n+        kvs.put(doc.getId(), 0L);\n+        txFeature.nextTransaction();\n+\n+        assertEquals(Long.valueOf(0), kvs.getLong(doc.getId()));\n+\n+        var transcodedVideos = (List<Map<String, Serializable>>) doc.getPropertyValue(\n+                VideoConstants.TRANSCODED_VIDEOS_PROPERTY);\n+        assertEquals(0, transcodedVideos.size());\n+        var noStoryboard = (List<Map<String, Serializable>>) doc.getPropertyValue(VideoConstants.STORYBOARD_PROPERTY);\n+        assertEquals(0, noStoryboard.size());\n+\n+        // the conversions should be done if we disable the flag\n+        doc.getContextData().put(VideoChangedListener.DISABLE_VIDEO_CONVERSIONS_GENERATION_LISTENER, false);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "99c7a702fe8f416ace82d898b9a30b74c9656805"}, "originalPosition": 302}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjEyMDgwMw==", "bodyText": "Is this really needed? The case with false aka not existing is tested in testVideoConversions.", "url": "https://github.com/nuxeo/nuxeo/pull/3883#discussion_r402120803", "createdAt": "2020-04-02T07:57:00Z", "author": {"login": "troger"}, "path": "modules/platform/nuxeo-platform-video/nuxeo-platform-video-core/src/test/java/org/nuxeo/ecm/platform/video/extension/TestVideoImporterAndListeners.java", "diffHunk": "@@ -452,9 +449,46 @@ public void testConfiguration() throws Exception {\n         // check storyboard\n         @SuppressWarnings(\"unchecked\")\n         List<Map<String, Serializable>> storyboard = (List<Map<String, Serializable>>) docModel.getPropertyValue(\n-                \"vid:storyboard\");\n+                VideoConstants.STORYBOARD_PROPERTY);\n         assertNotNull(storyboard);\n         assertEquals(2, storyboard.size());\n     }\n \n+    @Test\n+    @Deploy(\"org.nuxeo.ecm.platform.video.core:test-video-conversions-enabled.xml\")\n+    @Deploy(\"org.nuxeo.ecm.platform.video.core:test-video-listeners-contrib.xml\")\n+    @Deploy(\"org.nuxeo.ecm.platform.video.core:video-configuration-override.xml\")\n+    @SuppressWarnings(\"unchecked\")\n+    public void testNotConversionWhenDisabled() throws IOException {\n+        DocumentModel doc = session.createDocumentModel(\"/\", \"testVideoDoc\", VideoConstants.VIDEO_TYPE);\n+        Blob blobContent = getBlobFromPath(\"test-data/sample.mpg\", \"video/mpeg\");\n+        doc.setPropertyValue(\"file:content\", (Serializable) blobContent);\n+        doc.getContextData().put(VideoChangedListener.DISABLE_VIDEO_CONVERSIONS_GENERATION_LISTENER, true);\n+        doc = session.createDocument(doc);\n+\n+        KeyValueStore kvs = Framework.getService(KeyValueService.class).getKeyValueStore(\"default\");\n+        kvs.put(doc.getId(), 0L);\n+        txFeature.nextTransaction();\n+\n+        assertEquals(Long.valueOf(0), kvs.getLong(doc.getId()));\n+\n+        var transcodedVideos = (List<Map<String, Serializable>>) doc.getPropertyValue(\n+                VideoConstants.TRANSCODED_VIDEOS_PROPERTY);\n+        assertEquals(0, transcodedVideos.size());\n+        var noStoryboard = (List<Map<String, Serializable>>) doc.getPropertyValue(VideoConstants.STORYBOARD_PROPERTY);\n+        assertEquals(0, noStoryboard.size());\n+\n+        // the conversions should be done if we disable the flag\n+        doc.getContextData().put(VideoChangedListener.DISABLE_VIDEO_CONVERSIONS_GENERATION_LISTENER, false);\n+        doc.setPropertyValue(\"file:content\", (Serializable) blobContent);\n+        doc = session.saveDocument(doc);\n+        txFeature.nextTransaction();\n+        assertEquals(Long.valueOf(1), kvs.getLong(doc.getId()));\n+        transcodedVideos = (List<Map<String, Serializable>>) doc.getPropertyValue(\n+                VideoConstants.TRANSCODED_VIDEOS_PROPERTY);\n+        assertEquals(2, transcodedVideos.size());\n+        noStoryboard = (List<Map<String, Serializable>>) doc.getPropertyValue(VideoConstants.STORYBOARD_PROPERTY);\n+        assertEquals(2, noStoryboard.size());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "99c7a702fe8f416ace82d898b9a30b74c9656805"}, "originalPosition": 311}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjEyMTE3NQ==", "bodyText": "Why a log.trace here, but not in VideoChangedListener?", "url": "https://github.com/nuxeo/nuxeo/pull/3883#discussion_r402121175", "createdAt": "2020-04-02T07:57:39Z", "author": {"login": "troger"}, "path": "modules/platform/nuxeo-thumbnail/src/main/java/org/nuxeo/ecm/platform/thumbnail/listener/UpdateThumbnailListener.java", "diffHunk": "@@ -123,6 +128,11 @@ public void handleEvent(EventBundle events) {\n             }\n             DocumentEventContext context = (DocumentEventContext) event.getContext();\n             DocumentModel doc = context.getSourceDocument();\n+            if (Boolean.TRUE.equals(context.getProperty(ThumbnailConstants.DISABLE_THUMBNAIL_COMPUTATION))) {\n+                log.trace(\"Thumbnail computation is disabled for document {}\", doc.getId());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "99c7a702fe8f416ace82d898b9a30b74c9656805"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjEyMjY0NA==", "bodyText": "The thumbnail generation is already tested before.", "url": "https://github.com/nuxeo/nuxeo/pull/3883#discussion_r402122644", "createdAt": "2020-04-02T08:00:12Z", "author": {"login": "troger"}, "path": "modules/platform/nuxeo-thumbnail/src/test/java/org/nuxeo/ecm/platform/thumbnail/test/TestRecomputeThumbnails.java", "diffHunk": "@@ -133,4 +136,27 @@ public void testThumbnailsForTIFF() throws Exception {\n         assertNotNull(\"the TIFF thumbnail is not generated\", thumbnail);\n     }\n \n+    @Test\n+    public void testNotRecomputeThumbnailsWhenDisabled() throws IOException, OperationException {\n+        Blob blob = Blobs.createBlob(FileUtils.getResourceFileFromContext(\"test-data/big_nuxeo_logo.jpg\"), \"image/jpeg\",\n+                StandardCharsets.UTF_8.name(), \"big_nuxeo_logo.jpg\");\n+\n+        DocumentModel fileWithThumbnail = session.createDocumentModel(\"/\", \"fileWithThumbnail\", \"File\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "99c7a702fe8f416ace82d898b9a30b74c9656805"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjEyMjkxNg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public void testNotRecomputeThumbnailsWhenDisabled() throws IOException, OperationException {\n          \n          \n            \n                public void testNoThumbnailWhenDisabled() throws IOException, OperationException {", "url": "https://github.com/nuxeo/nuxeo/pull/3883#discussion_r402122916", "createdAt": "2020-04-02T08:00:41Z", "author": {"login": "troger"}, "path": "modules/platform/nuxeo-thumbnail/src/test/java/org/nuxeo/ecm/platform/thumbnail/test/TestRecomputeThumbnails.java", "diffHunk": "@@ -133,4 +136,27 @@ public void testThumbnailsForTIFF() throws Exception {\n         assertNotNull(\"the TIFF thumbnail is not generated\", thumbnail);\n     }\n \n+    @Test\n+    public void testNotRecomputeThumbnailsWhenDisabled() throws IOException, OperationException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "99c7a702fe8f416ace82d898b9a30b74c9656805"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjEyMzA1MQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public void testNotConversionWhenDisabled() throws IOException {\n          \n          \n            \n                public void testNoConversionWhenDisabled() throws IOException {", "url": "https://github.com/nuxeo/nuxeo/pull/3883#discussion_r402123051", "createdAt": "2020-04-02T08:00:56Z", "author": {"login": "troger"}, "path": "modules/platform/nuxeo-platform-video/nuxeo-platform-video-core/src/test/java/org/nuxeo/ecm/platform/video/extension/TestVideoImporterAndListeners.java", "diffHunk": "@@ -452,9 +449,46 @@ public void testConfiguration() throws Exception {\n         // check storyboard\n         @SuppressWarnings(\"unchecked\")\n         List<Map<String, Serializable>> storyboard = (List<Map<String, Serializable>>) docModel.getPropertyValue(\n-                \"vid:storyboard\");\n+                VideoConstants.STORYBOARD_PROPERTY);\n         assertNotNull(storyboard);\n         assertEquals(2, storyboard.size());\n     }\n \n+    @Test\n+    @Deploy(\"org.nuxeo.ecm.platform.video.core:test-video-conversions-enabled.xml\")\n+    @Deploy(\"org.nuxeo.ecm.platform.video.core:test-video-listeners-contrib.xml\")\n+    @Deploy(\"org.nuxeo.ecm.platform.video.core:video-configuration-override.xml\")\n+    @SuppressWarnings(\"unchecked\")\n+    public void testNotConversionWhenDisabled() throws IOException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "99c7a702fe8f416ace82d898b9a30b74c9656805"}, "originalPosition": 282}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "99c7a702fe8f416ace82d898b9a30b74c9656805", "author": {"user": {"login": "RSalem07", "name": "Salem Aouana"}}, "url": "https://github.com/nuxeo/nuxeo/commit/99c7a702fe8f416ace82d898b9a30b74c9656805", "committedDate": "2020-04-01T10:16:06Z", "message": "NXP-28743: Add the ability to disable the thumbnail computation"}, "afterCommit": {"oid": "2c45a164279860feb295db0e6482c0bb5b3832c2", "author": {"user": {"login": "RSalem07", "name": "Salem Aouana"}}, "url": "https://github.com/nuxeo/nuxeo/commit/2c45a164279860feb295db0e6482c0bb5b3832c2", "committedDate": "2020-04-02T08:01:20Z", "message": "NXP-28743: Add the ability to disable the thumbnail computation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f38829cd0cc6acc84db3652cd2bcc21442aed7c0", "author": {"user": {"login": "RSalem07", "name": "Salem Aouana"}}, "url": "https://github.com/nuxeo/nuxeo/commit/f38829cd0cc6acc84db3652cd2bcc21442aed7c0", "committedDate": "2020-04-02T09:48:03Z", "message": "NXP-28743: Cleanup / Format"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "30d67d16b796da9f54295f0c513a47bf49593c35", "author": {"user": {"login": "RSalem07", "name": "Salem Aouana"}}, "url": "https://github.com/nuxeo/nuxeo/commit/30d67d16b796da9f54295f0c513a47bf49593c35", "committedDate": "2020-04-02T10:01:08Z", "message": "NXP-28743: Add the ability to disable the video conversions"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2c45a164279860feb295db0e6482c0bb5b3832c2", "author": {"user": {"login": "RSalem07", "name": "Salem Aouana"}}, "url": "https://github.com/nuxeo/nuxeo/commit/2c45a164279860feb295db0e6482c0bb5b3832c2", "committedDate": "2020-04-02T08:01:20Z", "message": "NXP-28743: Add the ability to disable the thumbnail computation"}, "afterCommit": {"oid": "9d51911513bd10de17b5fb97b031db3fc0c62c41", "author": {"user": {"login": "RSalem07", "name": "Salem Aouana"}}, "url": "https://github.com/nuxeo/nuxeo/commit/9d51911513bd10de17b5fb97b031db3fc0c62c41", "committedDate": "2020-04-02T10:04:49Z", "message": "NXP-28743: Add the ability to disable the thumbnail computation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9a0c504dd9fe464777f0d048b61b2c4a7bc495f6", "author": {"user": {"login": "RSalem07", "name": "Salem Aouana"}}, "url": "https://github.com/nuxeo/nuxeo/commit/9a0c504dd9fe464777f0d048b61b2c4a7bc495f6", "committedDate": "2020-04-02T10:07:03Z", "message": "NXP-28743: Add the ability to disable the thumbnail computation"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9d51911513bd10de17b5fb97b031db3fc0c62c41", "author": {"user": {"login": "RSalem07", "name": "Salem Aouana"}}, "url": "https://github.com/nuxeo/nuxeo/commit/9d51911513bd10de17b5fb97b031db3fc0c62c41", "committedDate": "2020-04-02T10:04:49Z", "message": "NXP-28743: Add the ability to disable the thumbnail computation"}, "afterCommit": {"oid": "9a0c504dd9fe464777f0d048b61b2c4a7bc495f6", "author": {"user": {"login": "RSalem07", "name": "Salem Aouana"}}, "url": "https://github.com/nuxeo/nuxeo/commit/9a0c504dd9fe464777f0d048b61b2c4a7bc495f6", "committedDate": "2020-04-02T10:07:03Z", "message": "NXP-28743: Add the ability to disable the thumbnail computation"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg3Mzg3MzYz", "url": "https://github.com/nuxeo/nuxeo/pull/3883#pullrequestreview-387387363", "createdAt": "2020-04-03T16:02:53Z", "commit": {"oid": "9a0c504dd9fe464777f0d048b61b2c4a7bc495f6"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg3Mzk2MTMw", "url": "https://github.com/nuxeo/nuxeo/pull/3883#pullrequestreview-387396130", "createdAt": "2020-04-03T16:14:15Z", "commit": {"oid": "9a0c504dd9fe464777f0d048b61b2c4a7bc495f6"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxNjoxNDoxNlrOGAcTFg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxNjoxNDoxNlrOGAcTFg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzExNjgyMg==", "bodyText": "FYI @since is overkill for protected/private fields/methods", "url": "https://github.com/nuxeo/nuxeo/pull/3883#discussion_r403116822", "createdAt": "2020-04-03T16:14:16Z", "author": {"login": "efge"}, "path": "modules/platform/nuxeo-thumbnail/src/main/java/org/nuxeo/ecm/platform/thumbnail/listener/UpdateThumbnailListener.java", "diffHunk": "@@ -55,6 +57,9 @@\n  */\n public class UpdateThumbnailListener implements PostCommitEventListener {\n \n+    /** @since 11.1 **/\n+    private static final Logger log = LogManager.getLogger(UpdateThumbnailListener.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9a0c504dd9fe464777f0d048b61b2c4a7bc495f6"}, "originalPosition": 14}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg3Mzk2MzUy", "url": "https://github.com/nuxeo/nuxeo/pull/3883#pullrequestreview-387396352", "createdAt": "2020-04-03T16:14:33Z", "commit": {"oid": "9a0c504dd9fe464777f0d048b61b2c4a7bc495f6"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4819, "cost": 1, "resetAt": "2021-11-03T18:41:40Z"}}}