{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc3Nzk1MTcz", "number": 4293, "reviewThreads": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQwODoxOTozNVrOEjA6MQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQxNjowNjozMlrOEx-U8g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1MTUwNTEzOnYy", "diffSide": "RIGHT", "path": "modules/platform/nuxeo-elasticsearch/nuxeo-elasticsearch-core/src/test/java/org/nuxeo/elasticsearch/test/TestESClient.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQwODoxOTozNVrOHRI4LA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQwODoxOTozNVrOHRI4LA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzczMzI5Mg==", "bodyText": "To remove?", "url": "https://github.com/nuxeo/nuxeo/pull/4293#discussion_r487733292", "createdAt": "2020-09-14T08:19:35Z", "author": {"login": "kevinleturc"}, "path": "modules/platform/nuxeo-elasticsearch/nuxeo-elasticsearch-core/src/test/java/org/nuxeo/elasticsearch/test/TestESClient.java", "diffHunk": "@@ -97,12 +97,13 @@ public void closeESClient() throws Exception {\n     @Test\n     public void testIndexOptimisticConcurrency() {\n         client.createIndex(\"foo-index\", \"{\\\"index\\\" : {\\\"number_of_shards\\\" : 1, \\\"number_of_replicas\\\" : 0}}\");\n+        // client.createIndex(\"foo-index\", \"{\\\"settings\\\":{\\\"index\\\" : {\\\"number_of_shards\\\" : 1, \\\"number_of_replicas\\\" : 0}}}\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bc8f98013083a8aef44171014afd103557d82506"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1MTUxNTM1OnYy", "diffSide": "RIGHT", "path": "modules/platform/nuxeo-elasticsearch/nuxeo-elasticsearch-core/src/main/java/org/nuxeo/elasticsearch/hint/GeoShapeESHintQueryBuilder.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQwODoyMjowMFrOHRI9-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQwOToxNTozNlrOHcURPw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzczNDc3OA==", "bodyText": "Shouldn't we keep a backward compatibility mechanism for the existing queries with 4 parameters written by users?", "url": "https://github.com/nuxeo/nuxeo/pull/4293#discussion_r487734778", "createdAt": "2020-09-14T08:22:00Z", "author": {"login": "kevinleturc"}, "path": "modules/platform/nuxeo-elasticsearch/nuxeo-elasticsearch-core/src/main/java/org/nuxeo/elasticsearch/hint/GeoShapeESHintQueryBuilder.java", "diffHunk": "@@ -40,10 +40,10 @@\n      */\n     @Override\n     public QueryBuilder make(EsHint hint, String fieldName, Object value) {\n-        String[] values = validate(value, 4, \"shapeId, type, index and path\");\n-        return QueryBuilders.geoShapeQuery(fieldName, values[0], values[1])\n+        String[] values = validate(value, 3, \"shapeId, index and path\");\n+        return QueryBuilders.geoShapeQuery(fieldName, values[0])\n                             .relation(ShapeRelation.WITHIN)\n-                            .indexedShapeIndex(values[2])\n-                            .indexedShapePath(values[3]);\n+                            .indexedShapeIndex(values[1])\n+                            .indexedShapePath(values[2]);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bc8f98013083a8aef44171014afd103557d82506"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTQ1NDI3MQ==", "bodyText": "yes, you are right, I will add the \"type\" back here saying it is unused.", "url": "https://github.com/nuxeo/nuxeo/pull/4293#discussion_r499454271", "createdAt": "2020-10-05T09:15:36Z", "author": {"login": "bdelbosc"}, "path": "modules/platform/nuxeo-elasticsearch/nuxeo-elasticsearch-core/src/main/java/org/nuxeo/elasticsearch/hint/GeoShapeESHintQueryBuilder.java", "diffHunk": "@@ -40,10 +40,10 @@\n      */\n     @Override\n     public QueryBuilder make(EsHint hint, String fieldName, Object value) {\n-        String[] values = validate(value, 4, \"shapeId, type, index and path\");\n-        return QueryBuilders.geoShapeQuery(fieldName, values[0], values[1])\n+        String[] values = validate(value, 3, \"shapeId, index and path\");\n+        return QueryBuilders.geoShapeQuery(fieldName, values[0])\n                             .relation(ShapeRelation.WITHIN)\n-                            .indexedShapeIndex(values[2])\n-                            .indexedShapePath(values[3]);\n+                            .indexedShapeIndex(values[1])\n+                            .indexedShapePath(values[2]);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzczNDc3OA=="}, "originalCommit": {"oid": "bc8f98013083a8aef44171014afd103557d82506"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzExODA2MjA2OnYy", "diffSide": "RIGHT", "path": "modules/platform/nuxeo-elasticsearch/nuxeo-elasticsearch-core/src/main/java/org/nuxeo/elasticsearch/client/ESRestClient.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQwODowNjoyNlrOHa_EFA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQwODowNjoyNlrOHa_EFA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODA1ODI2MA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    } catch (IOException|ElasticsearchStatusException e) {\n          \n          \n            \n                    } catch (IOException | ElasticsearchStatusException e) {", "url": "https://github.com/nuxeo/nuxeo/pull/4293#discussion_r498058260", "createdAt": "2020-10-01T08:06:26Z", "author": {"login": "ataillefer"}, "path": "modules/platform/nuxeo-elasticsearch/nuxeo-elasticsearch-core/src/main/java/org/nuxeo/elasticsearch/client/ESRestClient.java", "diffHunk": "@@ -321,7 +323,8 @@ public DeleteResponse delete(DeleteRequest request) {\n     public SearchResponse search(SearchRequest request) {\n         try (Scope ignored = getScopedSpan(\"elastic/_search\", request.toString())) {\n             return client.search(request, RequestOptions.DEFAULT);\n-        } catch (IOException e) {\n+        } catch (IOException|ElasticsearchStatusException e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f2afb3d1cc87dd9b40c7e2d50499c7af381dd55e"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzExODA2ODQwOnYy", "diffSide": "RIGHT", "path": "modules/platform/nuxeo-elasticsearch/nuxeo-elasticsearch-core/src/main/java/org/nuxeo/elasticsearch/core/ElasticSearchServiceImpl.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQwODowODoyMVrOHa_IHw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQwODowODoyMVrOHa_IHw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODA1OTI5NQ==", "bodyText": "really needed?", "url": "https://github.com/nuxeo/nuxeo/pull/4293#discussion_r498059295", "createdAt": "2020-10-01T08:08:21Z", "author": {"login": "ataillefer"}, "path": "modules/platform/nuxeo-elasticsearch/nuxeo-elasticsearch-core/src/main/java/org/nuxeo/elasticsearch/core/ElasticSearchServiceImpl.java", "diffHunk": "@@ -20,13 +20,12 @@\n \n package org.nuxeo.elasticsearch.core;\n \n-import static org.nuxeo.elasticsearch.ElasticSearchConstants.DOC_TYPE;\n-\n import java.util.List;\n \n import org.apache.commons.lang3.StringUtils;\n import org.apache.commons.logging.Log;\n import org.apache.commons.logging.LogFactory;\n+import org.apache.lucene.search.TotalHits;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f2afb3d1cc87dd9b40c7e2d50499c7af381dd55e"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzExODA4MzgwOnYy", "diffSide": "RIGHT", "path": "modules/platform/nuxeo-elasticsearch/nuxeo-elasticsearch-core/src/test/java/org/nuxeo/elasticsearch/test/TestMapping.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQwODoxMjozMlrOHa_RMg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQwODoxMjozMlrOHa_RMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODA2MTYxOA==", "bodyText": "not needed I guess", "url": "https://github.com/nuxeo/nuxeo/pull/4293#discussion_r498061618", "createdAt": "2020-10-01T08:12:32Z", "author": {"login": "ataillefer"}, "path": "modules/platform/nuxeo-elasticsearch/nuxeo-elasticsearch-core/src/test/java/org/nuxeo/elasticsearch/test/TestMapping.java", "diffHunk": "@@ -23,13 +23,15 @@\n \n import javax.inject.Inject;\n \n+import org.elasticsearch.ElasticsearchStatusException;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f2afb3d1cc87dd9b40c7e2d50499c7af381dd55e"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzExODEzODE3OnYy", "diffSide": "RIGHT", "path": "modules/platform/nuxeo-elasticsearch/nuxeo-elasticsearch-audit/src/main/java/org/nuxeo/elasticsearch/audit/ESAuditBackend.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQwODoyNjo0NlrOHa_yhg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxMTowOTowN1rOHcYL3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODA3MDE1MA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    Aggregation agg = searchResponse.getAggregations().get(\"maxAgg\");\n          \n          \n            \n                    long maxLogEntryId = 0;\n          \n          \n            \n                    if (agg.getMetadata() != null && agg.getMetadata().containsKey(Aggregation.CommonFields.VALUE)) {\n          \n          \n            \n                        maxLogEntryId = (long) agg.getMetadata().get(Aggregation.CommonFields.VALUE);\n          \n          \n            \n                    }\n          \n          \n            \n                    long maxLogEntryId = 0;\n          \n          \n            \n                    Aggregation agg = searchResponse.getAggregations().get(\"maxAgg\");\n          \n          \n            \n                    Map<String, Object> aggMetadata = agg.getMetaData();\n          \n          \n            \n                    if (aggMetadata != null) {\n          \n          \n            \n                        maxLogEntryId = (long) aggMetadata.getOrDefault(Aggregation.CommonFields.VALUE, 0);\n          \n          \n            \n                    }", "url": "https://github.com/nuxeo/nuxeo/pull/4293#discussion_r498070150", "createdAt": "2020-10-01T08:26:46Z", "author": {"login": "ataillefer"}, "path": "modules/platform/nuxeo-elasticsearch/nuxeo-elasticsearch-audit/src/main/java/org/nuxeo/elasticsearch/audit/ESAuditBackend.java", "diffHunk": "@@ -715,9 +715,11 @@ protected void ensureUIDSequencer(ESClient esClient) {\n         request.source(new SearchSourceBuilder().query(QueryBuilders.matchAllQuery())\n                                                 .aggregation(AggregationBuilders.max(\"maxAgg\").field(\"id\")));\n         SearchResponse searchResponse = esClient.search(request);\n-        Max agg = searchResponse.getAggregations().get(\"maxAgg\");\n-        long maxLogEntryId = (long) agg.getValue();\n-\n+        Aggregation agg = searchResponse.getAggregations().get(\"maxAgg\");\n+        long maxLogEntryId = 0;\n+        if (agg.getMetadata() != null && agg.getMetadata().containsKey(Aggregation.CommonFields.VALUE)) {\n+            maxLogEntryId = (long) agg.getMetadata().get(Aggregation.CommonFields.VALUE);\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e912bb845c757e7ecdfb7cac47bca4a6e7a3a43c"}, "originalPosition": 70}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTUxODQyOQ==", "bodyText": "I find it harder to read", "url": "https://github.com/nuxeo/nuxeo/pull/4293#discussion_r499518429", "createdAt": "2020-10-05T11:09:07Z", "author": {"login": "bdelbosc"}, "path": "modules/platform/nuxeo-elasticsearch/nuxeo-elasticsearch-audit/src/main/java/org/nuxeo/elasticsearch/audit/ESAuditBackend.java", "diffHunk": "@@ -715,9 +715,11 @@ protected void ensureUIDSequencer(ESClient esClient) {\n         request.source(new SearchSourceBuilder().query(QueryBuilders.matchAllQuery())\n                                                 .aggregation(AggregationBuilders.max(\"maxAgg\").field(\"id\")));\n         SearchResponse searchResponse = esClient.search(request);\n-        Max agg = searchResponse.getAggregations().get(\"maxAgg\");\n-        long maxLogEntryId = (long) agg.getValue();\n-\n+        Aggregation agg = searchResponse.getAggregations().get(\"maxAgg\");\n+        long maxLogEntryId = 0;\n+        if (agg.getMetadata() != null && agg.getMetadata().containsKey(Aggregation.CommonFields.VALUE)) {\n+            maxLogEntryId = (long) agg.getMetadata().get(Aggregation.CommonFields.VALUE);\n+        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODA3MDE1MA=="}, "originalCommit": {"oid": "e912bb845c757e7ecdfb7cac47bca4a6e7a3a43c"}, "originalPosition": 70}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzExODE1MDY5OnYy", "diffSide": "RIGHT", "path": "modules/platform/nuxeo-elasticsearch/nuxeo-elasticsearch-core/src/main/java/org/nuxeo/elasticsearch/core/ElasticSearchIndexingImpl.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQwODoyOToyOVrOHa_50Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxMzo1Mzo0NFrOHceI1w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODA3MjAxNw==", "bodyText": "to be clear, this should be in the same commit as f2afb3d#diff-f0d6271e8fca3291a638cf9797c75ddaL295", "url": "https://github.com/nuxeo/nuxeo/pull/4293#discussion_r498072017", "createdAt": "2020-10-01T08:29:29Z", "author": {"login": "ataillefer"}, "path": "modules/platform/nuxeo-elasticsearch/nuxeo-elasticsearch-core/src/main/java/org/nuxeo/elasticsearch/core/ElasticSearchIndexingImpl.java", "diffHunk": "@@ -290,7 +290,7 @@ void processIndexCommand(IndexingCommand cmd) {\n             return;\n         }\n         if (log.isDebugEnabled()) {\n-            logDebugMessageTruncated(String.format(\"Index request: curl -XPUT 'http://localhost:9200/%s/%s/%s' -d '%s'\",\n+            logDebugMessageTruncated(String.format(\"Index request: curl -XPUT 'http://localhost:9200/%s/%s' -d '%s'\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e912bb845c757e7ecdfb7cac47bca4a6e7a3a43c"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTYxNTk1OQ==", "bodyText": "will do that better next time", "url": "https://github.com/nuxeo/nuxeo/pull/4293#discussion_r499615959", "createdAt": "2020-10-05T13:53:44Z", "author": {"login": "bdelbosc"}, "path": "modules/platform/nuxeo-elasticsearch/nuxeo-elasticsearch-core/src/main/java/org/nuxeo/elasticsearch/core/ElasticSearchIndexingImpl.java", "diffHunk": "@@ -290,7 +290,7 @@ void processIndexCommand(IndexingCommand cmd) {\n             return;\n         }\n         if (log.isDebugEnabled()) {\n-            logDebugMessageTruncated(String.format(\"Index request: curl -XPUT 'http://localhost:9200/%s/%s/%s' -d '%s'\",\n+            logDebugMessageTruncated(String.format(\"Index request: curl -XPUT 'http://localhost:9200/%s/%s' -d '%s'\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODA3MjAxNw=="}, "originalCommit": {"oid": "e912bb845c757e7ecdfb7cac47bca4a6e7a3a43c"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzExODE1MTY1OnYy", "diffSide": "RIGHT", "path": "modules/platform/nuxeo-elasticsearch/nuxeo-elasticsearch-core/src/main/java/org/nuxeo/elasticsearch/core/ElasticSearchIndexingImpl.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQwODoyOTo0NlrOHa_6bw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQwODoyOTo0NlrOHa_6bw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODA3MjE3NQ==", "bodyText": "and this too probably", "url": "https://github.com/nuxeo/nuxeo/pull/4293#discussion_r498072175", "createdAt": "2020-10-01T08:29:46Z", "author": {"login": "ataillefer"}, "path": "modules/platform/nuxeo-elasticsearch/nuxeo-elasticsearch-core/src/main/java/org/nuxeo/elasticsearch/core/ElasticSearchIndexingImpl.java", "diffHunk": "@@ -360,7 +360,7 @@ void processDeleteCommandRecursive(IndexingCommand cmd) {\n             // Build bulk delete request\n             BulkRequest bulkRequest = new BulkRequest();\n             for (SearchHit hit : response.getHits().getHits()) {\n-                bulkRequest.add(new DeleteRequest(hit.getIndex(), hit.getType(), hit.getId()));\n+                bulkRequest.add(new DeleteRequest(hit.getIndex(), hit.getId()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e912bb845c757e7ecdfb7cac47bca4a6e7a3a43c"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzExODE1NTg0OnYy", "diffSide": "RIGHT", "path": "modules/platform/nuxeo-elasticsearch/nuxeo-elasticsearch-core/src/test/resources/log4j2-test.xml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQwODozMDo1MFrOHa_89A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQwODozMDo1MFrOHa_89A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODA3MjgyMA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                <!-- Remove WARN on elastic embedded because node and cluster identifiers change between test suite -->\n          \n          \n            \n                <!-- Remove WARN on elastic embedded because node and cluster identifiers change between test suites -->", "url": "https://github.com/nuxeo/nuxeo/pull/4293#discussion_r498072820", "createdAt": "2020-10-01T08:30:50Z", "author": {"login": "ataillefer"}, "path": "modules/platform/nuxeo-elasticsearch/nuxeo-elasticsearch-core/src/test/resources/log4j2-test.xml", "diffHunk": "@@ -12,6 +12,10 @@\n   </Appenders>\n   <Loggers>\n     <Logger name=\"org.nuxeo\" level=\"info\" />\n+    <!-- Remove WARN on elastic embedded because dangling indices cannot be detected -->\n+    <Logger name=\"org.elasticsearch.gateway.DanglingIndicesState\" level=\"error\" />\n+    <!-- Remove WARN on elastic embedded because node and cluster identifiers change between test suite -->", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ecc4e127151184d04b81533937c2e7dd5fc8e459"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzExODE1OTY2OnYy", "diffSide": "RIGHT", "path": "pom.xml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQwODozMTo1MlrOHa__SA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxMzo1MzoxNlrOHceHow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODA3MzQxNg==", "bodyText": "in the end, should be squashed with f2afb3d#diff-600376dffeb79835ede4a0b285078036L72", "url": "https://github.com/nuxeo/nuxeo/pull/4293#discussion_r498073416", "createdAt": "2020-10-01T08:31:52Z", "author": {"login": "ataillefer"}, "path": "pom.xml", "diffHunk": "@@ -69,8 +69,8 @@\n     <jaxb-api.version>2.3.3</jaxb-api.version>\n     <jaxb.version>2.3.3</jaxb.version>\n     <tomcat.version>9.0.38</tomcat.version>\n-    <lucene.version>8.6.0</lucene.version>\n-    <elasticsearch.version>7.9.0</elasticsearch.version> <!-- when changing this make sure JNA version is in sync -->\n+    <lucene.version>8.6.2</lucene.version>\n+    <elasticsearch.version>7.9.1</elasticsearch.version> <!-- when changing this make sure JNA version is in sync -->", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ecc4e127151184d04b81533937c2e7dd5fc8e459"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTYxNTY1MQ==", "bodyText": "yes, I have updated now upgrade is on 7.9.2", "url": "https://github.com/nuxeo/nuxeo/pull/4293#discussion_r499615651", "createdAt": "2020-10-05T13:53:16Z", "author": {"login": "bdelbosc"}, "path": "pom.xml", "diffHunk": "@@ -69,8 +69,8 @@\n     <jaxb-api.version>2.3.3</jaxb-api.version>\n     <jaxb.version>2.3.3</jaxb.version>\n     <tomcat.version>9.0.38</tomcat.version>\n-    <lucene.version>8.6.0</lucene.version>\n-    <elasticsearch.version>7.9.0</elasticsearch.version> <!-- when changing this make sure JNA version is in sync -->\n+    <lucene.version>8.6.2</lucene.version>\n+    <elasticsearch.version>7.9.1</elasticsearch.version> <!-- when changing this make sure JNA version is in sync -->", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODA3MzQxNg=="}, "originalCommit": {"oid": "ecc4e127151184d04b81533937c2e7dd5fc8e459"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIwODM2MDY5OnYy", "diffSide": "RIGHT", "path": "modules/platform/nuxeo-elasticsearch/nuxeo-elasticsearch-audit/src/main/java/org/nuxeo/elasticsearch/audit/ESAuditBackend.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQxNjowNDo0OFrOHoW0xg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QwNzozMDoyMFrOHoucWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjA3OTA0Ng==", "bodyText": "Could we put agg.getMetaData() in a local var at least to avoid repetition? It could be done directly with\nvar aggMetadata = searchResponse.getAggregations().get(\"maxAgg\").getMetaData();\n\nBut I would also really want to advocate getOrDefault, it's a habit that's good to have.", "url": "https://github.com/nuxeo/nuxeo/pull/4293#discussion_r512079046", "createdAt": "2020-10-26T16:04:48Z", "author": {"login": "efge"}, "path": "modules/platform/nuxeo-elasticsearch/nuxeo-elasticsearch-audit/src/main/java/org/nuxeo/elasticsearch/audit/ESAuditBackend.java", "diffHunk": "@@ -715,8 +715,11 @@ protected void ensureUIDSequencer(ESClient esClient) {\n         request.source(new SearchSourceBuilder().query(QueryBuilders.matchAllQuery())\n                                                 .aggregation(AggregationBuilders.max(\"maxAgg\").field(\"id\")));\n         SearchResponse searchResponse = esClient.search(request);\n-        Max agg = searchResponse.getAggregations().get(\"maxAgg\");\n-        long maxLogEntryId = (long) agg.getValue();\n+        Aggregation agg = searchResponse.getAggregations().get(\"maxAgg\");\n+        long maxLogEntryId = 0;\n+        if (agg.getMetadata() != null && agg.getMetadata().containsKey(Aggregation.CommonFields.VALUE)) {\n+            maxLogEntryId = (long) agg.getMetadata().get(Aggregation.CommonFields.VALUE);\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1b528f00e48559aa28236de7d40547f806070920"}, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjQ2NjAxMQ==", "bodyText": "ok will do that another time, the CI cannot validate a new change before merging", "url": "https://github.com/nuxeo/nuxeo/pull/4293#discussion_r512466011", "createdAt": "2020-10-27T07:30:20Z", "author": {"login": "bdelbosc"}, "path": "modules/platform/nuxeo-elasticsearch/nuxeo-elasticsearch-audit/src/main/java/org/nuxeo/elasticsearch/audit/ESAuditBackend.java", "diffHunk": "@@ -715,8 +715,11 @@ protected void ensureUIDSequencer(ESClient esClient) {\n         request.source(new SearchSourceBuilder().query(QueryBuilders.matchAllQuery())\n                                                 .aggregation(AggregationBuilders.max(\"maxAgg\").field(\"id\")));\n         SearchResponse searchResponse = esClient.search(request);\n-        Max agg = searchResponse.getAggregations().get(\"maxAgg\");\n-        long maxLogEntryId = (long) agg.getValue();\n+        Aggregation agg = searchResponse.getAggregations().get(\"maxAgg\");\n+        long maxLogEntryId = 0;\n+        if (agg.getMetadata() != null && agg.getMetadata().containsKey(Aggregation.CommonFields.VALUE)) {\n+            maxLogEntryId = (long) agg.getMetadata().get(Aggregation.CommonFields.VALUE);\n+        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjA3OTA0Ng=="}, "originalCommit": {"oid": "1b528f00e48559aa28236de7d40547f806070920"}, "originalPosition": 69}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIwODM2ODUwOnYy", "diffSide": "RIGHT", "path": "pom.xml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQxNjowNjozMlrOHoW5kw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQxNjoxNzo1N1rOHoXZiA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjA4MDI3NQ==", "bodyText": "Note that 7.9.3 is out now.", "url": "https://github.com/nuxeo/nuxeo/pull/4293#discussion_r512080275", "createdAt": "2020-10-26T16:06:32Z", "author": {"login": "efge"}, "path": "pom.xml", "diffHunk": "@@ -69,8 +69,8 @@\n     <jaxb-api.version>2.3.3</jaxb-api.version>\n     <jaxb.version>2.3.3</jaxb.version>\n     <tomcat.version>9.0.39</tomcat.version>\n-    <lucene.version>7.5.0</lucene.version>\n-    <elasticsearch.version>6.5.3</elasticsearch.version> <!-- when changing this make sure JNA version is in sync -->\n+    <lucene.version>8.6.2</lucene.version>\n+    <elasticsearch.version>7.9.2</elasticsearch.version> <!-- when changing this make sure JNA version is in sync -->", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "14b098de15be8e152407a8c6a509c1871d06b53d"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjA4ODQ1Ng==", "bodyText": "yes, it is hard to follow their release cycle, I prefer to continue on 7.9.2 for now,\nI think there is going to be a 7.10 as well", "url": "https://github.com/nuxeo/nuxeo/pull/4293#discussion_r512088456", "createdAt": "2020-10-26T16:17:57Z", "author": {"login": "bdelbosc"}, "path": "pom.xml", "diffHunk": "@@ -69,8 +69,8 @@\n     <jaxb-api.version>2.3.3</jaxb-api.version>\n     <jaxb.version>2.3.3</jaxb.version>\n     <tomcat.version>9.0.39</tomcat.version>\n-    <lucene.version>7.5.0</lucene.version>\n-    <elasticsearch.version>6.5.3</elasticsearch.version> <!-- when changing this make sure JNA version is in sync -->\n+    <lucene.version>8.6.2</lucene.version>\n+    <elasticsearch.version>7.9.2</elasticsearch.version> <!-- when changing this make sure JNA version is in sync -->", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjA4MDI3NQ=="}, "originalCommit": {"oid": "14b098de15be8e152407a8c6a509c1871d06b53d"}, "originalPosition": 7}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4376, "cost": 1, "resetAt": "2021-11-03T18:41:40Z"}}}