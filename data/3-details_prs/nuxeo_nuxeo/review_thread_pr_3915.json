{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAyNzAxNTQ0", "number": 3915, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxMzoyNToyNlrODxpNQA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxMzo1Mjo1M1rODyFQbA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzMzgxOTUyOnYy", "diffSide": "RIGHT", "path": "modules/core/nuxeo-core-io/src/main/java/org/nuxeo/ecm/core/io/impl/ExportedDocumentImpl.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxMzoyNToyNlrOGFOfrQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQxNzozMzoxMlrOGY8JVg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODEzMzU0OQ==", "bodyText": "With java 9 APIs this could be rewritten to:\nObjects.requireNonNullElseGet(blob.getFilename(), () -> Integer.toHexString(RANDOM.nextInt()));", "url": "https://github.com/nuxeo/nuxeo/pull/3915#discussion_r408133549", "createdAt": "2020-04-14T13:25:26Z", "author": {"login": "kevinleturc"}, "path": "modules/core/nuxeo-core-io/src/main/java/org/nuxeo/ecm/core/io/impl/ExportedDocumentImpl.java", "diffHunk": "@@ -310,7 +310,7 @@ protected void readProperty(Element parent, Namespace targetNs, Field field, Obj\n \n     protected final void readBlob(Element element, ComplexType ctype, Blob blob, boolean inlineBlobs)\n             throws IOException {\n-        String blobPath = Integer.toHexString(RANDOM.nextInt()) + \".blob\";\n+        String blobPath = blob.getFilename() != null ? blob.getFilename() : Integer.toHexString(RANDOM.nextInt()) + \".blob\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cf519645ed3bbce7db2ccb01065560f1c2d0aad7"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODgwNDQzOA==", "bodyText": "Or, simpler to read, using StringUtils.defaultString (when evaluating the second part is not too costly)", "url": "https://github.com/nuxeo/nuxeo/pull/3915#discussion_r428804438", "createdAt": "2020-05-21T17:33:12Z", "author": {"login": "efge"}, "path": "modules/core/nuxeo-core-io/src/main/java/org/nuxeo/ecm/core/io/impl/ExportedDocumentImpl.java", "diffHunk": "@@ -310,7 +310,7 @@ protected void readProperty(Element parent, Namespace targetNs, Field field, Obj\n \n     protected final void readBlob(Element element, ComplexType ctype, Blob blob, boolean inlineBlobs)\n             throws IOException {\n-        String blobPath = Integer.toHexString(RANDOM.nextInt()) + \".blob\";\n+        String blobPath = blob.getFilename() != null ? blob.getFilename() : Integer.toHexString(RANDOM.nextInt()) + \".blob\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODEzMzU0OQ=="}, "originalCommit": {"oid": "cf519645ed3bbce7db2ccb01065560f1c2d0aad7"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzODQxNTE2OnYy", "diffSide": "RIGHT", "path": "modules/core/nuxeo-core-io/src/main/java/org/nuxeo/ecm/core/io/impl/ExportedDocumentImpl.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxMzo1Mjo1M1rOGF6xgQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNlQyMDozNjoyNFrOGMJudA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODg1OTAwOQ==", "bodyText": "This is problematic because if a document has several attached blobs with the same filename, you will have a collision. So you would need to check in the blobs map (when not using inlineBlobs) and have a way to choose an alternate name that is not already in the map.", "url": "https://github.com/nuxeo/nuxeo/pull/3915#discussion_r408859009", "createdAt": "2020-04-15T13:52:53Z", "author": {"login": "efge"}, "path": "modules/core/nuxeo-core-io/src/main/java/org/nuxeo/ecm/core/io/impl/ExportedDocumentImpl.java", "diffHunk": "@@ -310,7 +310,7 @@ protected void readProperty(Element parent, Namespace targetNs, Field field, Obj\n \n     protected final void readBlob(Element element, ComplexType ctype, Blob blob, boolean inlineBlobs)\n             throws IOException {\n-        String blobPath = Integer.toHexString(RANDOM.nextInt()) + \".blob\";\n+        String blobPath = blob.getFilename() != null ? blob.getFilename() : Integer.toHexString(RANDOM.nextInt()) + \".blob\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cf519645ed3bbce7db2ccb01065560f1c2d0aad7"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTM5NTQ0NA==", "bodyText": "Thanks for your contribution. I made a comment for potential improvement.\nNXP-28892 is about retention, is the right ticket?\nI trigger a T&P to validate the change: https://qa.nuxeo.org/jenkins/job/TestAndPush/job/ondemand-testandpush-kleturc-3/32/\n\nI apologize, the correct ticket is 28897", "url": "https://github.com/nuxeo/nuxeo/pull/3915#discussion_r415395444", "createdAt": "2020-04-26T20:36:24Z", "author": {"login": "eikkaj"}, "path": "modules/core/nuxeo-core-io/src/main/java/org/nuxeo/ecm/core/io/impl/ExportedDocumentImpl.java", "diffHunk": "@@ -310,7 +310,7 @@ protected void readProperty(Element parent, Namespace targetNs, Field field, Obj\n \n     protected final void readBlob(Element element, ComplexType ctype, Blob blob, boolean inlineBlobs)\n             throws IOException {\n-        String blobPath = Integer.toHexString(RANDOM.nextInt()) + \".blob\";\n+        String blobPath = blob.getFilename() != null ? blob.getFilename() : Integer.toHexString(RANDOM.nextInt()) + \".blob\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODg1OTAwOQ=="}, "originalCommit": {"oid": "cf519645ed3bbce7db2ccb01065560f1c2d0aad7"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4153, "cost": 1, "resetAt": "2021-11-03T18:41:40Z"}}}