{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg1NjA3OTgz", "number": 3820, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxNjo0MzoxOVrODnKE_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxNjo1MzozN1rODnKWQA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyMzg2MTc1OnYy", "diffSide": "RIGHT", "path": "nuxeo-core/nuxeo-core-api/src/main/java/org/nuxeo/ecm/core/api/CoreSession.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxNjo0MzoxOVrOF0_f-w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxNzo1MDo1N1rOF1CQ3g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTExMDY1MQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * @since 10.10-HF23\n          \n          \n            \n                 * @since 11.1", "url": "https://github.com/nuxeo/nuxeo/pull/3820#discussion_r391110651", "createdAt": "2020-03-11T16:43:19Z", "author": {"login": "kevinleturc"}, "path": "nuxeo-core/nuxeo-core-api/src/main/java/org/nuxeo/ecm/core/api/CoreSession.java", "diffHunk": "@@ -477,6 +477,22 @@\n      */\n     DocumentModel createDocumentModel(String parentPath, String name, String typeName);\n \n+    /**\n+     * Creates a new document model using required information.\n+     * <p>\n+     * Used to fetch initial datamodels from the type definition.\n+     * <p>\n+     * DocumentModel creation notifies a {@link DocumentEventTypes#EMPTY_DOCUMENTMODEL_CREATED} so that core event\n+     * listener can initialize its content with computed properties.\n+     *\n+     * @param parentRef the parent document ref {@link DocumentRef}\n+     * @param name The destination name\n+     * @param typeName the type name\n+     * @return the initial document model\n+     * @since 10.10-HF23", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b4782bf0081c1bea749fc98179b6765c5dbf376f"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTEyMzMzMQ==", "bodyText": "I was thinking we should keep the same since, I mean by that if we did the modification on master -> @since 11.1 we should keep it when we backport and I was thing this is also true from 10.10 to 11.1, when the method is added on 10.10 and forwarded we should keep it.", "url": "https://github.com/nuxeo/nuxeo/pull/3820#discussion_r391123331", "createdAt": "2020-03-11T17:02:14Z", "author": {"login": "RSalem07"}, "path": "nuxeo-core/nuxeo-core-api/src/main/java/org/nuxeo/ecm/core/api/CoreSession.java", "diffHunk": "@@ -477,6 +477,22 @@\n      */\n     DocumentModel createDocumentModel(String parentPath, String name, String typeName);\n \n+    /**\n+     * Creates a new document model using required information.\n+     * <p>\n+     * Used to fetch initial datamodels from the type definition.\n+     * <p>\n+     * DocumentModel creation notifies a {@link DocumentEventTypes#EMPTY_DOCUMENTMODEL_CREATED} so that core event\n+     * listener can initialize its content with computed properties.\n+     *\n+     * @param parentRef the parent document ref {@link DocumentRef}\n+     * @param name The destination name\n+     * @param typeName the type name\n+     * @return the initial document model\n+     * @since 10.10-HF23", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTExMDY1MQ=="}, "originalCommit": {"oid": "b4782bf0081c1bea749fc98179b6765c5dbf376f"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTE1NTkzNA==", "bodyText": "Not in this direction, what is important to know is the introduction in Master. Then you can change the since for backport if you want to be explicit, but it adds more work.", "url": "https://github.com/nuxeo/nuxeo/pull/3820#discussion_r391155934", "createdAt": "2020-03-11T17:50:57Z", "author": {"login": "kevinleturc"}, "path": "nuxeo-core/nuxeo-core-api/src/main/java/org/nuxeo/ecm/core/api/CoreSession.java", "diffHunk": "@@ -477,6 +477,22 @@\n      */\n     DocumentModel createDocumentModel(String parentPath, String name, String typeName);\n \n+    /**\n+     * Creates a new document model using required information.\n+     * <p>\n+     * Used to fetch initial datamodels from the type definition.\n+     * <p>\n+     * DocumentModel creation notifies a {@link DocumentEventTypes#EMPTY_DOCUMENTMODEL_CREATED} so that core event\n+     * listener can initialize its content with computed properties.\n+     *\n+     * @param parentRef the parent document ref {@link DocumentRef}\n+     * @param name The destination name\n+     * @param typeName the type name\n+     * @return the initial document model\n+     * @since 10.10-HF23", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTExMDY1MQ=="}, "originalCommit": {"oid": "b4782bf0081c1bea749fc98179b6765c5dbf376f"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyMzg4MTcxOnYy", "diffSide": "RIGHT", "path": "nuxeo-core/nuxeo-core/src/main/java/org/nuxeo/ecm/core/api/AbstractSession.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxNjo0ODowNVrOF0_sVQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxNzo1Mzo0MFrOF1CXow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTExMzgxMw==", "bodyText": "Don't we want to use this new API with parentRef for former methods with String? I'm talking about the setPathInfo in this method which could be removed I think.", "url": "https://github.com/nuxeo/nuxeo/pull/3820#discussion_r391113813", "createdAt": "2020-03-11T16:48:05Z", "author": {"login": "kevinleturc"}, "path": "nuxeo-core/nuxeo-core/src/main/java/org/nuxeo/ecm/core/api/AbstractSession.java", "diffHunk": "@@ -616,12 +616,16 @@ public void cancel() {\n     }\n \n     private DocumentModel createDocumentModelFromTypeName(String typeName, Map<String, Serializable> options) {\n-        SchemaManager schemaManager = Framework.getService(SchemaManager.class);\n-        DocumentType docType = schemaManager.getDocumentType(typeName);\n+        return createDocumentModelFromParentAndType(null, typeName, options);\n+    }\n+\n+    private DocumentModel createDocumentModelFromParentAndType(DocumentRef parentRef, String typeName,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b4782bf0081c1bea749fc98179b6765c5dbf376f"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTEzMDE4NA==", "bodyText": "I see what you mean, but perhaps we should keep it, because this method compute the path and the ref:\n @Override\n    public void setPathInfo(String parentPath, String name) {\n        path = new Path(parentPath == null ? name : parentPath + '/' + name);\n        ref = new PathRef(parentPath, name);\n    }\n\ni think if we want to remove it from former method, we should rewrite this once, and I thinking about the case where the DocumentRef parentRef that we pass as parameter if it is a IdRef we can do a meeting to clarify the things :)", "url": "https://github.com/nuxeo/nuxeo/pull/3820#discussion_r391130184", "createdAt": "2020-03-11T17:12:47Z", "author": {"login": "RSalem07"}, "path": "nuxeo-core/nuxeo-core/src/main/java/org/nuxeo/ecm/core/api/AbstractSession.java", "diffHunk": "@@ -616,12 +616,16 @@ public void cancel() {\n     }\n \n     private DocumentModel createDocumentModelFromTypeName(String typeName, Map<String, Serializable> options) {\n-        SchemaManager schemaManager = Framework.getService(SchemaManager.class);\n-        DocumentType docType = schemaManager.getDocumentType(typeName);\n+        return createDocumentModelFromParentAndType(null, typeName, options);\n+    }\n+\n+    private DocumentModel createDocumentModelFromParentAndType(DocumentRef parentRef, String typeName,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTExMzgxMw=="}, "originalCommit": {"oid": "b4782bf0081c1bea749fc98179b6765c5dbf376f"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTE1NzY2Nw==", "bodyText": "Of course for a meeting \ud83d\udc4c\nSome answer:\nIdref shouldn't be a problem as we resolve the reference to get the path from Document.", "url": "https://github.com/nuxeo/nuxeo/pull/3820#discussion_r391157667", "createdAt": "2020-03-11T17:53:40Z", "author": {"login": "kevinleturc"}, "path": "nuxeo-core/nuxeo-core/src/main/java/org/nuxeo/ecm/core/api/AbstractSession.java", "diffHunk": "@@ -616,12 +616,16 @@ public void cancel() {\n     }\n \n     private DocumentModel createDocumentModelFromTypeName(String typeName, Map<String, Serializable> options) {\n-        SchemaManager schemaManager = Framework.getService(SchemaManager.class);\n-        DocumentType docType = schemaManager.getDocumentType(typeName);\n+        return createDocumentModelFromParentAndType(null, typeName, options);\n+    }\n+\n+    private DocumentModel createDocumentModelFromParentAndType(DocumentRef parentRef, String typeName,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTExMzgxMw=="}, "originalCommit": {"oid": "b4782bf0081c1bea749fc98179b6765c5dbf376f"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyMzkwMjMzOnYy", "diffSide": "RIGHT", "path": "nuxeo-core/nuxeo-core/src/main/java/org/nuxeo/ecm/core/api/DocumentModelFactory.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxNjo1Mjo1MVrOF0_4_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxNjo1Mjo1MVrOF0_4_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTExNzA1Mg==", "bodyText": "Since 11.1", "url": "https://github.com/nuxeo/nuxeo/pull/3820#discussion_r391117052", "createdAt": "2020-03-11T16:52:51Z", "author": {"login": "kevinleturc"}, "path": "nuxeo-core/nuxeo-core/src/main/java/org/nuxeo/ecm/core/api/DocumentModelFactory.java", "diffHunk": "@@ -166,8 +166,23 @@ public static DocumentModelImpl createDocumentModel(String docType) {\n      * @return the document model\n      */\n     public static DocumentModelImpl createDocumentModel(String sessionId, DocumentType docType) {\n-        DocumentModelImpl docModel = new DocumentModelImpl(sessionId, docType.getName(), null, null, null, null, null,\n-                null, null, null, null);\n+        return createDocumentModel(sessionId, docType, null);\n+    }\n+\n+    /**\n+     * Creates a document model for a new document.\n+     * <p>\n+     * Initializes the proper data models according to the type info.\n+     *\n+     * @param sessionId the CoreSession id\n+     * @param docType the document type\n+     * @param parentRef the parent ref\n+     * @return the document model\n+     * @since 10.10-HF23", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b4782bf0081c1bea749fc98179b6765c5dbf376f"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyMzkwNTkyOnYy", "diffSide": "RIGHT", "path": "nuxeo-features/nuxeo-platform-comment/nuxeo-platform-comment/src/main/java/org/nuxeo/ecm/platform/comment/impl/TreeCommentManager.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxNjo1MzozN1rOF0_7Ew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxNjo1MzozN1rOF0_7Ew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTExNzU4Nw==", "bodyText": "since 11.1", "url": "https://github.com/nuxeo/nuxeo/pull/3820#discussion_r391117587", "createdAt": "2020-03-11T16:53:37Z", "author": {"login": "kevinleturc"}, "path": "nuxeo-features/nuxeo-platform-comment/nuxeo-platform-comment/src/main/java/org/nuxeo/ecm/platform/comment/impl/TreeCommentManager.java", "diffHunk": "@@ -308,21 +308,26 @@ public void deleteComment(DocumentModel doc, DocumentModel comment) {\n         throw new UnsupportedOperationException(SERVICE_WITHOUT_IMPLEMENTATION_MESSAGE);\n     }\n \n-    @Override\n-    public String getLocationOfCommentCreation(CoreSession session, DocumentModel commentedDoc) {\n+    /**\n+     * Returns the {@link DocumentRef} of the comments location in repository for the given commented document model.\n+     *\n+     * @param session the session needs to be privileged\n+     * @return the document model container of the comments of the given {@code commentedDoc}\n+     * @since 10.10-HF23", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b4782bf0081c1bea749fc98179b6765c5dbf376f"}, "originalPosition": 35}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4172, "cost": 1, "resetAt": "2021-11-03T18:41:40Z"}}}