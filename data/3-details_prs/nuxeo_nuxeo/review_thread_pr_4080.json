{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIzNTExODE5", "number": 4080, "reviewThreads": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QwNjo0NToxOFrOD_9Klw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQwODoxNjo1NFrOEAZ_4Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4Mzg5MDE1OnYy", "diffSide": "RIGHT", "path": "modules/runtime/nuxeo-stream/src/main/java/org/nuxeo/lib/stream/log/chronicle/ChronicleRetentionListener.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QwNjo0NToxOFrOGa7gSA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QwODozNDo0MFrOGa_B4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDg5MTA4MA==", "bodyText": "Don't reinvent this, use import org.apache.commons.lang3.SystemUtils and check with SystemUtils.IS_OS_WINDOWS", "url": "https://github.com/nuxeo/nuxeo/pull/4080#discussion_r430891080", "createdAt": "2020-05-27T06:45:18Z", "author": {"login": "efge"}, "path": "modules/runtime/nuxeo-stream/src/main/java/org/nuxeo/lib/stream/log/chronicle/ChronicleRetentionListener.java", "diffHunk": "@@ -47,6 +47,10 @@\n \n     protected long purgedStamp;\n \n+    // NXP-29161 https://stackoverflow.com/questions/58733295/why-does-chronicle-queue-hold-on-to-files-for-a-second-after-close\n+    protected final static String OS = System.getProperty(\"os.name\").toLowerCase();\n+    public final static boolean IS_WIN = OS.startsWith(\"win\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4b7c25af08ac51e9bbf08c204a034275a78706ab"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDk0ODgzMg==", "bodyText": "nuxeo-stream does not currently have a dependency over common-lang3.\n=> preserving minimal dependencies for this library.", "url": "https://github.com/nuxeo/nuxeo/pull/4080#discussion_r430948832", "createdAt": "2020-05-27T08:34:40Z", "author": {"login": "pabgrall"}, "path": "modules/runtime/nuxeo-stream/src/main/java/org/nuxeo/lib/stream/log/chronicle/ChronicleRetentionListener.java", "diffHunk": "@@ -47,6 +47,10 @@\n \n     protected long purgedStamp;\n \n+    // NXP-29161 https://stackoverflow.com/questions/58733295/why-does-chronicle-queue-hold-on-to-files-for-a-second-after-close\n+    protected final static String OS = System.getProperty(\"os.name\").toLowerCase();\n+    public final static boolean IS_WIN = OS.startsWith(\"win\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDg5MTA4MA=="}, "originalCommit": {"oid": "4b7c25af08ac51e9bbf08c204a034275a78706ab"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4Mzg5MzEzOnYy", "diffSide": "RIGHT", "path": "modules/runtime/nuxeo-stream/src/main/java/org/nuxeo/lib/stream/log/chronicle/ChronicleRetentionListener.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QwNjo0NjozM1rOGa7iIg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QwODozNjowNFrOGa_FZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDg5MTU1NA==", "bodyText": "} catch (InterruptedException e) {\n                    Thread.currentThread().interrupt();\n                    throw new RuntimeException(e);\n                }", "url": "https://github.com/nuxeo/nuxeo/pull/4080#discussion_r430891554", "createdAt": "2020-05-27T06:46:33Z", "author": {"login": "efge"}, "path": "modules/runtime/nuxeo-stream/src/main/java/org/nuxeo/lib/stream/log/chronicle/ChronicleRetentionListener.java", "diffHunk": "@@ -91,6 +95,12 @@ protected void dropCycle(Integer cycle) {\n         log.info(\"Deleting Chronicle file: {} according to retention: {}\", file::getAbsolutePath, () -> retention);\n         try {\n             queue.release(store);\n+            // NXP-29161 https://stackoverflow.com/questions/58733295/why-does-chronicle-queue-hold-on-to-files-for-a-second-after-close\n+            if (IS_WIN) {\n+                try {\n+                    Thread.sleep(1000);\n+                } catch (InterruptedException ie) {}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4b7c25af08ac51e9bbf08c204a034275a78706ab"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDk0OTczNQ==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/nuxeo/nuxeo/pull/4080#discussion_r430949735", "createdAt": "2020-05-27T08:36:04Z", "author": {"login": "pabgrall"}, "path": "modules/runtime/nuxeo-stream/src/main/java/org/nuxeo/lib/stream/log/chronicle/ChronicleRetentionListener.java", "diffHunk": "@@ -91,6 +95,12 @@ protected void dropCycle(Integer cycle) {\n         log.info(\"Deleting Chronicle file: {} according to retention: {}\", file::getAbsolutePath, () -> retention);\n         try {\n             queue.release(store);\n+            // NXP-29161 https://stackoverflow.com/questions/58733295/why-does-chronicle-queue-hold-on-to-files-for-a-second-after-close\n+            if (IS_WIN) {\n+                try {\n+                    Thread.sleep(1000);\n+                } catch (InterruptedException ie) {}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDg5MTU1NA=="}, "originalCommit": {"oid": "4b7c25af08ac51e9bbf08c204a034275a78706ab"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4Mzg5NjI5OnYy", "diffSide": "RIGHT", "path": "modules/runtime/nuxeo-stream/src/test/java/org/nuxeo/lib/stream/tests/log/TestLogChronicle.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QwNjo0Nzo0OFrOGa7kBQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QwODozNzoyM1rOGa_IiA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDg5MjAzNw==", "bodyText": "Please use just assumeFalse(SystemUtils.IS_OS_WINDOWS) instead.", "url": "https://github.com/nuxeo/nuxeo/pull/4080#discussion_r430892037", "createdAt": "2020-05-27T06:47:48Z", "author": {"login": "efge"}, "path": "modules/runtime/nuxeo-stream/src/test/java/org/nuxeo/lib/stream/tests/log/TestLogChronicle.java", "diffHunk": "@@ -74,6 +76,10 @@ public LogManager createManager() throws Exception {\n \n     @Test\n     public void deleteInvalidPath() throws Exception {\n+        if (IS_WIN) {\n+            // HACK for Windows JUnit test\n+            return;\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4b7c25af08ac51e9bbf08c204a034275a78706ab"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDk1MDUzNg==", "bodyText": "assumeFalse(IS_WIN) preferred to keep independency of nuxeo-stream from commons-lang3", "url": "https://github.com/nuxeo/nuxeo/pull/4080#discussion_r430950536", "createdAt": "2020-05-27T08:37:23Z", "author": {"login": "pabgrall"}, "path": "modules/runtime/nuxeo-stream/src/test/java/org/nuxeo/lib/stream/tests/log/TestLogChronicle.java", "diffHunk": "@@ -74,6 +76,10 @@ public LogManager createManager() throws Exception {\n \n     @Test\n     public void deleteInvalidPath() throws Exception {\n+        if (IS_WIN) {\n+            // HACK for Windows JUnit test\n+            return;\n+        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDg5MjAzNw=="}, "originalCommit": {"oid": "4b7c25af08ac51e9bbf08c204a034275a78706ab"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4NDI4NTk1OnYy", "diffSide": "RIGHT", "path": "modules/runtime/nuxeo-stream/src/test/java/org/nuxeo/lib/stream/tests/log/TestLogChronicle.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QwODo0NTo1MFrOGa_crA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QwODo0NzozNVrOGa_ghA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDk1NTY5Mg==", "bodyText": "If you remove everything then you can remove the whole method", "url": "https://github.com/nuxeo/nuxeo/pull/4080#discussion_r430955692", "createdAt": "2020-05-27T08:45:50Z", "author": {"login": "efge"}, "path": "modules/runtime/nuxeo-stream/src/test/java/org/nuxeo/lib/stream/tests/log/TestLogChronicle.java", "diffHunk": "@@ -56,7 +56,9 @@\n \n     @Before\n     public void skipWindowsThatDoNotCleanTempFolder() {\n-        org.junit.Assume.assumeFalse(IS_WIN);\n+        // NXP-29161 - https://stackoverflow.com/questions/58733295/why-does-chronicle-queue-hold-on-to-files-for-a-second-after-close\n+        // beware: not all tests actually work on Windows\n+        // org.junit.Assume.assumeFalse(IS_WIN);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4b7c25af08ac51e9bbf08c204a034275a78706ab"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDk1NjY3Ng==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/nuxeo/nuxeo/pull/4080#discussion_r430956676", "createdAt": "2020-05-27T08:47:35Z", "author": {"login": "pabgrall"}, "path": "modules/runtime/nuxeo-stream/src/test/java/org/nuxeo/lib/stream/tests/log/TestLogChronicle.java", "diffHunk": "@@ -56,7 +56,9 @@\n \n     @Before\n     public void skipWindowsThatDoNotCleanTempFolder() {\n-        org.junit.Assume.assumeFalse(IS_WIN);\n+        // NXP-29161 - https://stackoverflow.com/questions/58733295/why-does-chronicle-queue-hold-on-to-files-for-a-second-after-close\n+        // beware: not all tests actually work on Windows\n+        // org.junit.Assume.assumeFalse(IS_WIN);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDk1NTY5Mg=="}, "originalCommit": {"oid": "4b7c25af08ac51e9bbf08c204a034275a78706ab"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4ODU3Njg2OnYy", "diffSide": "RIGHT", "path": "modules/runtime/nuxeo-stream/src/main/java/org/nuxeo/lib/stream/log/chronicle/ChronicleRetentionListener.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQwODowNTo1NFrOGbqGWQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQwODowNTo1NFrOGbqGWQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTY1NDQ4OQ==", "bodyText": "Comment should be inside the IS_WIN block\nand should give a short explanation why we need to wait 1s\nand refer to NXP-29161 that contains the stackoverflow reference", "url": "https://github.com/nuxeo/nuxeo/pull/4080#discussion_r431654489", "createdAt": "2020-05-28T08:05:54Z", "author": {"login": "bdelbosc"}, "path": "modules/runtime/nuxeo-stream/src/main/java/org/nuxeo/lib/stream/log/chronicle/ChronicleRetentionListener.java", "diffHunk": "@@ -91,6 +95,15 @@ protected void dropCycle(Integer cycle) {\n         log.info(\"Deleting Chronicle file: {} according to retention: {}\", file::getAbsolutePath, () -> retention);\n         try {\n             queue.release(store);\n+            // NXP-29161 https://stackoverflow.com/questions/58733295/why-does-chronicle-queue-hold-on-to-files-for-a-second-after-close", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3db8b57098b1bc58aac5b9a50d218ffc2ec54ca4"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4ODU3ODQ5OnYy", "diffSide": "RIGHT", "path": "modules/runtime/nuxeo-stream/src/main/java/org/nuxeo/lib/stream/log/chronicle/ChronicleRetentionListener.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQwODowNjoyN1rOGbqHaw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQwODowNjoyN1rOGbqHaw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTY1NDc2Mw==", "bodyText": "remove this duplicate comment", "url": "https://github.com/nuxeo/nuxeo/pull/4080#discussion_r431654763", "createdAt": "2020-05-28T08:06:27Z", "author": {"login": "bdelbosc"}, "path": "modules/runtime/nuxeo-stream/src/main/java/org/nuxeo/lib/stream/log/chronicle/ChronicleRetentionListener.java", "diffHunk": "@@ -47,6 +47,10 @@\n \n     protected long purgedStamp;\n \n+    // NXP-29161 https://stackoverflow.com/questions/58733295/why-does-chronicle-queue-hold-on-to-files-for-a-second-after-close", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3db8b57098b1bc58aac5b9a50d218ffc2ec54ca4"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4ODU3OTI2OnYy", "diffSide": "RIGHT", "path": "modules/runtime/nuxeo-stream/src/main/java/org/nuxeo/lib/stream/log/chronicle/ChronicleRetentionListener.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQwODowNjo0MlrOGbqH8Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQwODowNjo0MlrOGbqH8Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTY1NDg5Nw==", "bodyText": "missing blank line after", "url": "https://github.com/nuxeo/nuxeo/pull/4080#discussion_r431654897", "createdAt": "2020-05-28T08:06:42Z", "author": {"login": "bdelbosc"}, "path": "modules/runtime/nuxeo-stream/src/main/java/org/nuxeo/lib/stream/log/chronicle/ChronicleRetentionListener.java", "diffHunk": "@@ -47,6 +47,10 @@\n \n     protected long purgedStamp;\n \n+    // NXP-29161 https://stackoverflow.com/questions/58733295/why-does-chronicle-queue-hold-on-to-files-for-a-second-after-close\n+    protected final static String OS = System.getProperty(\"os.name\").toLowerCase();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3db8b57098b1bc58aac5b9a50d218ffc2ec54ca4"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4ODYwNTczOnYy", "diffSide": "RIGHT", "path": "modules/runtime/nuxeo-stream/src/test/java/org/nuxeo/lib/stream/tests/log/TestLogChronicle.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQwODoxNDozMlrOGbqZZg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQwODoxNDozMlrOGbqZZg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTY1OTM2Ng==", "bodyText": "the reason to exclude test under windows was that temp folder are not cleaned,\nyou need to provide a reason for each assumeFalse now\nassumeFalse(\"explain why or NXP\", IS_WIN)", "url": "https://github.com/nuxeo/nuxeo/pull/4080#discussion_r431659366", "createdAt": "2020-05-28T08:14:32Z", "author": {"login": "bdelbosc"}, "path": "modules/runtime/nuxeo-stream/src/test/java/org/nuxeo/lib/stream/tests/log/TestLogChronicle.java", "diffHunk": "@@ -74,6 +68,8 @@ public LogManager createManager() throws Exception {\n \n     @Test\n     public void deleteInvalidPath() throws Exception {\n+        org.junit.Assume.assumeFalse(IS_WIN);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3db8b57098b1bc58aac5b9a50d218ffc2ec54ca4"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4ODYxMjY3OnYy", "diffSide": "RIGHT", "path": "modules/runtime/nuxeo-stream/src/test/java/org/nuxeo/lib/stream/tests/log/TestLogChronicle.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQwODoxNjozMFrOGbqdsw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQwODoxNjozMFrOGbqdsw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTY2MDQ2Nw==", "bodyText": "I was expecting this test to pass to prove that the bug is fixed, we need a reason on assumeFalse", "url": "https://github.com/nuxeo/nuxeo/pull/4080#discussion_r431660467", "createdAt": "2020-05-28T08:16:30Z", "author": {"login": "bdelbosc"}, "path": "modules/runtime/nuxeo-stream/src/test/java/org/nuxeo/lib/stream/tests/log/TestLogChronicle.java", "diffHunk": "@@ -135,6 +131,8 @@ public void testFileRetention() throws Exception {\n     @SuppressWarnings(\"FutureReturnValueIgnored\")\n     @Test\n     public void testConcurrentFileRetentions() throws Exception {\n+        org.junit.Assume.assumeFalse(IS_WIN);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3db8b57098b1bc58aac5b9a50d218ffc2ec54ca4"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4ODYxNDA5OnYy", "diffSide": "RIGHT", "path": "modules/runtime/nuxeo-stream/src/test/java/org/nuxeo/lib/stream/tests/log/TestLogChronicle.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQwODoxNjo1NFrOGbqeng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQwODoxNjo1NFrOGbqeng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTY2MDcwMg==", "bodyText": "reason on assumeFalse", "url": "https://github.com/nuxeo/nuxeo/pull/4080#discussion_r431660702", "createdAt": "2020-05-28T08:16:54Z", "author": {"login": "bdelbosc"}, "path": "modules/runtime/nuxeo-stream/src/test/java/org/nuxeo/lib/stream/tests/log/TestLogChronicle.java", "diffHunk": "@@ -191,6 +189,8 @@ public void testRollCycle() throws Exception {\n \n     @Test\n     public void testRecoverAfterExpirationOfRetention() throws Exception {\n+        org.junit.Assume.assumeFalse(IS_WIN);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3db8b57098b1bc58aac5b9a50d218ffc2ec54ca4"}, "originalPosition": 42}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4151, "cost": 1, "resetAt": "2021-11-03T18:41:40Z"}}}