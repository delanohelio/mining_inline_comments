{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQxMjcyMjI3", "number": 4548, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQxNTo1MzoyNVrOFHPj-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQxNTo1ODoxOFrOFHPr2w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQzMTM5MzIxOnYy", "diffSide": "RIGHT", "path": "modules/platform/nuxeo-automation/nuxeo-automation-features/src/main/java/org/nuxeo/ecm/automation/core/operations/notification/SendMail.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQxNTo1MzoyNVrOIIomVA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQxNTo1MzoyNVrOIIomVA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTkyNDY5Mg==", "bodyText": "Forgotten Sys out?", "url": "https://github.com/nuxeo/nuxeo/pull/4548#discussion_r545924692", "createdAt": "2020-12-18T15:53:25Z", "author": {"login": "kevinleturc"}, "path": "modules/platform/nuxeo-automation/nuxeo-automation-features/src/main/java/org/nuxeo/ecm/automation/core/operations/notification/SendMail.java", "diffHunk": "@@ -165,34 +167,38 @@ protected void send(DocumentModel doc)\n         // TODO should sent one by one to each recipient? and have the template\n         // rendered for each recipient? Use: \"mailto\" var name?\n         try {\n-            Map<String, Object> map = Scripting.initBindings(ctx);\n-            // do not use document wrapper which is working only in mvel.\n-            map.put(\"Document\", doc);\n-            map.put(\"docUrl\",\n-                    createDocUrlWithToken(MailTemplateHelper.getDocumentUrl(doc, viewId), (String) map.get(\"token\")));\n-            map.put(\"subject\", subject);\n-            map.put(\"to\", to);\n-            map.put(\"toResolved\", MailBox.fetchPersonsFromList(to, isStrict));\n-            map.put(\"from\", from);\n-            map.put(\"fromResolved\", MailBox.fetchPersonsFromString(from, isStrict));\n-            map.put(\"cc\", cc);\n-            map.put(\"ccResolved\", MailBox.fetchPersonsFromList(cc, isStrict));\n-            map.put(\"bcc\", bcc);\n-            map.put(\"bccResolved\", MailBox.fetchPersonsFromList(bcc, isStrict));\n-            map.put(\"replyto\", replyto);\n-            map.put(\"replytoResolved\", MailBox.fetchPersonsFromList(replyto, isStrict));\n-            map.put(\"viewId\", viewId);\n-            map.put(\"baseUrl\", NotificationServiceHelper.getNotificationService().getServerUrlPrefix());\n-            map.put(\"Runtime\", Framework.getRuntime());\n-            Mailer.Message msg = createMessage(doc, getContent(), map);\n-            msg.setSubject(subject, \"UTF-8\");\n-            msg.setSentDate(new Date());\n-\n-            addMailBoxInfo(msg, map);\n-\n-            msg.send();\n+            AdministrativeStatusManager asm = Framework.getService(AdministrativeStatusManager.class);\n+            if (asm == null || !asm.getStatus(\"org.nuxeo.ecm.smtp\").getState().equals(PASSIVE)) {\n+                Map<String, Object> map = Scripting.initBindings(ctx);\n+                // do not use document wrapper which is working only in mvel.\n+                map.put(\"Document\", doc);\n+                map.put(\"docUrl\", createDocUrlWithToken(MailTemplateHelper.getDocumentUrl(doc, viewId),\n+                        (String) map.get(\"token\")));\n+                map.put(\"subject\", subject);\n+                map.put(\"to\", to);\n+                map.put(\"toResolved\", MailBox.fetchPersonsFromList(to, isStrict));\n+                map.put(\"from\", from);\n+                map.put(\"fromResolved\", MailBox.fetchPersonsFromString(from, isStrict));\n+                map.put(\"cc\", cc);\n+                map.put(\"ccResolved\", MailBox.fetchPersonsFromList(cc, isStrict));\n+                map.put(\"bcc\", bcc);\n+                map.put(\"bccResolved\", MailBox.fetchPersonsFromList(bcc, isStrict));\n+                map.put(\"replyto\", replyto);\n+                map.put(\"replytoResolved\", MailBox.fetchPersonsFromList(replyto, isStrict));\n+                map.put(\"viewId\", viewId);\n+                map.put(\"baseUrl\", NotificationServiceHelper.getNotificationService().getServerUrlPrefix());\n+                map.put(\"Runtime\", Framework.getRuntime());\n+                Mailer.Message msg = createMessage(doc, getContent(), map);\n+                msg.setSubject(subject, \"UTF-8\");\n+                msg.setSentDate(new Date());\n+\n+                addMailBoxInfo(msg, map);\n+\n+                msg.send();\n+            }\n         } catch (NuxeoException | TemplateException | RenderingException | OperationException | MessagingException\n                 | IOException e) {\n+            System.out.println(\"Class\" + e.getClass() + \" :\" + e.getMessage());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2f98d809aebd064d5754fd5a1334327a5dbf5257"}, "originalPosition": 77}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQzMTQxMzM5OnYy", "diffSide": "RIGHT", "path": "modules/platform/nuxeo-automation/nuxeo-automation-features/src/main/java/org/nuxeo/ecm/automation/core/operations/notification/SendMail.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQxNTo1ODoxOFrOIIoyDw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQxMzowMDo1NlrOIJ6ZGw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTkyNzY5NQ==", "bodyText": "As there's a lot of line inside the if, and to preserve the git history, could you change the if to something such as below:\nif (asm != null && PASSIVE.equals(asm.getStatus(\"org.nuxeo.ecm.smtp\").getState()) {\n    return;\n}", "url": "https://github.com/nuxeo/nuxeo/pull/4548#discussion_r545927695", "createdAt": "2020-12-18T15:58:18Z", "author": {"login": "kevinleturc"}, "path": "modules/platform/nuxeo-automation/nuxeo-automation-features/src/main/java/org/nuxeo/ecm/automation/core/operations/notification/SendMail.java", "diffHunk": "@@ -165,34 +167,38 @@ protected void send(DocumentModel doc)\n         // TODO should sent one by one to each recipient? and have the template\n         // rendered for each recipient? Use: \"mailto\" var name?\n         try {\n-            Map<String, Object> map = Scripting.initBindings(ctx);\n-            // do not use document wrapper which is working only in mvel.\n-            map.put(\"Document\", doc);\n-            map.put(\"docUrl\",\n-                    createDocUrlWithToken(MailTemplateHelper.getDocumentUrl(doc, viewId), (String) map.get(\"token\")));\n-            map.put(\"subject\", subject);\n-            map.put(\"to\", to);\n-            map.put(\"toResolved\", MailBox.fetchPersonsFromList(to, isStrict));\n-            map.put(\"from\", from);\n-            map.put(\"fromResolved\", MailBox.fetchPersonsFromString(from, isStrict));\n-            map.put(\"cc\", cc);\n-            map.put(\"ccResolved\", MailBox.fetchPersonsFromList(cc, isStrict));\n-            map.put(\"bcc\", bcc);\n-            map.put(\"bccResolved\", MailBox.fetchPersonsFromList(bcc, isStrict));\n-            map.put(\"replyto\", replyto);\n-            map.put(\"replytoResolved\", MailBox.fetchPersonsFromList(replyto, isStrict));\n-            map.put(\"viewId\", viewId);\n-            map.put(\"baseUrl\", NotificationServiceHelper.getNotificationService().getServerUrlPrefix());\n-            map.put(\"Runtime\", Framework.getRuntime());\n-            Mailer.Message msg = createMessage(doc, getContent(), map);\n-            msg.setSubject(subject, \"UTF-8\");\n-            msg.setSentDate(new Date());\n-\n-            addMailBoxInfo(msg, map);\n-\n-            msg.send();\n+            AdministrativeStatusManager asm = Framework.getService(AdministrativeStatusManager.class);\n+            if (asm == null || !asm.getStatus(\"org.nuxeo.ecm.smtp\").getState().equals(PASSIVE)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2f98d809aebd064d5754fd5a1334327a5dbf5257"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzI2NDc5NQ==", "bodyText": "+1 although I'd like to see a debug log here before the return: log.debug(\"SMTP is in passive mode, mail not sent\")", "url": "https://github.com/nuxeo/nuxeo/pull/4548#discussion_r547264795", "createdAt": "2020-12-22T13:00:56Z", "author": {"login": "efge"}, "path": "modules/platform/nuxeo-automation/nuxeo-automation-features/src/main/java/org/nuxeo/ecm/automation/core/operations/notification/SendMail.java", "diffHunk": "@@ -165,34 +167,38 @@ protected void send(DocumentModel doc)\n         // TODO should sent one by one to each recipient? and have the template\n         // rendered for each recipient? Use: \"mailto\" var name?\n         try {\n-            Map<String, Object> map = Scripting.initBindings(ctx);\n-            // do not use document wrapper which is working only in mvel.\n-            map.put(\"Document\", doc);\n-            map.put(\"docUrl\",\n-                    createDocUrlWithToken(MailTemplateHelper.getDocumentUrl(doc, viewId), (String) map.get(\"token\")));\n-            map.put(\"subject\", subject);\n-            map.put(\"to\", to);\n-            map.put(\"toResolved\", MailBox.fetchPersonsFromList(to, isStrict));\n-            map.put(\"from\", from);\n-            map.put(\"fromResolved\", MailBox.fetchPersonsFromString(from, isStrict));\n-            map.put(\"cc\", cc);\n-            map.put(\"ccResolved\", MailBox.fetchPersonsFromList(cc, isStrict));\n-            map.put(\"bcc\", bcc);\n-            map.put(\"bccResolved\", MailBox.fetchPersonsFromList(bcc, isStrict));\n-            map.put(\"replyto\", replyto);\n-            map.put(\"replytoResolved\", MailBox.fetchPersonsFromList(replyto, isStrict));\n-            map.put(\"viewId\", viewId);\n-            map.put(\"baseUrl\", NotificationServiceHelper.getNotificationService().getServerUrlPrefix());\n-            map.put(\"Runtime\", Framework.getRuntime());\n-            Mailer.Message msg = createMessage(doc, getContent(), map);\n-            msg.setSubject(subject, \"UTF-8\");\n-            msg.setSentDate(new Date());\n-\n-            addMailBoxInfo(msg, map);\n-\n-            msg.send();\n+            AdministrativeStatusManager asm = Framework.getService(AdministrativeStatusManager.class);\n+            if (asm == null || !asm.getStatus(\"org.nuxeo.ecm.smtp\").getState().equals(PASSIVE)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTkyNzY5NQ=="}, "originalCommit": {"oid": "2f98d809aebd064d5754fd5a1334327a5dbf5257"}, "originalPosition": 47}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4310, "cost": 1, "resetAt": "2021-11-03T18:41:40Z"}}}