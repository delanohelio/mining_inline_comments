{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzczMDE5MjM4", "number": 3735, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQwOTozNzozOFrODeYm3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQxMTowMjoyN1rODfIoPA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzMTg3MDM3OnYy", "diffSide": "RIGHT", "path": "nuxeo-features/nuxeo-platform-comment/nuxeo-platform-comment/src/main/java/org/nuxeo/ecm/platform/comment/impl/CommentsMigrator.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQwOTozNzozOFrOFnfQwA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQwOTozNzozOFrOFnfQwA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njk1MDk3Ng==", "bodyText": "because its parent. his is for humans", "url": "https://github.com/nuxeo/nuxeo/pull/3735#discussion_r376950976", "createdAt": "2020-02-10T09:37:38Z", "author": {"login": "NourNuxeo"}, "path": "nuxeo-features/nuxeo-platform-comment/nuxeo-platform-comment/src/main/java/org/nuxeo/ecm/platform/comment/impl/CommentsMigrator.java", "diffHunk": "@@ -250,6 +250,13 @@ protected void migrateCommentsFromPropertyToSecured(CoreSession session, Comment\n         }\n \n         DocumentRef parentDocRef = new IdRef(parentId);\n+        if (!session.exists(parentDocRef)) {\n+            log.warn(\n+                    \"The comment document model with IdRef: {} cannot be migrated, because his parent: {} cannot be found\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "79267f5373a8ff6849f17e4daad5e056ea497a10"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzNjcyMDY2OnYy", "diffSide": "RIGHT", "path": "nuxeo-features/nuxeo-platform-comment/nuxeo-platform-comment/src/test/java/org/nuxeo/ecm/platform/comment/TestCommentsMigrator.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxNToyNjowMlrOFoNWQw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxNjo0MjoyNVrOFoQeNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzcwNjA1MQ==", "bodyText": "You assert everything has been caught (the 51 warns) but you don't assert there are only 51 (no duplicates, erronous messages). Maybe that would be overkill ? I leave it to you !", "url": "https://github.com/nuxeo/nuxeo/pull/3735#discussion_r377706051", "createdAt": "2020-02-11T15:26:02Z", "author": {"login": "NourNuxeo"}, "path": "nuxeo-features/nuxeo-platform-comment/nuxeo-platform-comment/src/test/java/org/nuxeo/ecm/platform/comment/TestCommentsMigrator.java", "diffHunk": "@@ -233,6 +236,48 @@ public void testMigrationFromPropertyToSecuredWithCommentsNotCorrectlyFilled() {\n             assertTrue(caughtEventMessages.contains(message));\n             assertTrue(session.exists(new IdRef(docId)));\n         }\n+\n+    }\n+\n+    /**\n+     * Test the migration in the case where the {@code comment:parentId} is not empty, but it doesn't exist.\n+     */\n+    @Test\n+    @LogCaptureFeature.FilterOn(logLevel = \"WARN\")\n+    @Deploy(\"org.nuxeo.ecm.platform.comment.tests:OSGI-INF/disable-removing-comment-children-listener.xml\")\n+    public void testMigrationFromPropertyToSecuredWithRemovedParentComment() {\n+        // NB_COMMENTS_BY_FILE*4 + NB_COMMENT_TO_REPLY_ON_IT*NB_REPLY_BY_COMMENT (5 levels of reply) = 200 + 50\n+        createCommentsAsProperty(false, true);\n+\n+        // Second step of migrate: from 'Property' to 'Secured'\n+        migrateFromPropertyToSecured(new CommentsMigrator(), false, true);\n+        transactionalFeature.nextTransaction();\n+\n+        List<LogEvent> events = logCaptureResult.getCaughtEvents();\n+        assertEquals(NB_COMMENTS_BY_FILE + 1, events.size());\n+\n+        String query = String.format(\"SELECT %s FROM Comment WHERE %s = '%s'\", ECM_UUID, COMMENT_PARENT_ID,\n+                fileToCommentAndRemove.getId());\n+        List<String> unMigratedCommentDocIds = session.queryProjection(query, 0, 0)\n+                                                      .stream()\n+                                                      .map(m -> (String) m.get(ECM_UUID))\n+                                                      .collect(Collectors.toList());\n+\n+        // The comments not migrated should be there but, not under 'fileToCommentAndRemove'\n+        assertEquals(NB_COMMENTS_BY_FILE, unMigratedCommentDocIds.size());\n+        List<String> caughtEventMessages = logCaptureResult.getCaughtEventMessages();\n+\n+        assertTrue(caughtEventMessages.contains(String.format(\n+                \"Some comments have not been migrated, see logs for more information. The folder containing these comments will be renamed to %s\",\n+                UNMIGRATED_COMMENTS_FOLDER_NAME)));\n+\n+        for (String docId : unMigratedCommentDocIds) {\n+            String message = String.format(\n+                    \"The comment document model with IdRef: %s cannot be migrated, because its parent: %s cannot be found\",\n+                    docId, fileToCommentAndRemove.getId());\n+            assertTrue(caughtEventMessages.contains(message));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c85a64bd7174b4f969d77311e774541caec56285"}, "originalPosition": 105}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzc0MjA3MQ==", "bodyText": "My idea here is to be sure that all my expected things are here not on the whole process, i mean if a new warn can be logged by another process (for example once who deploy, others services...) i will not be impacted by it as the main message will be logged as WARN. this a first thing in other hand have look here i check that the 50 comments will be not migrated", "url": "https://github.com/nuxeo/nuxeo/pull/3735#discussion_r377742071", "createdAt": "2020-02-11T16:19:11Z", "author": {"login": "RSalem07"}, "path": "nuxeo-features/nuxeo-platform-comment/nuxeo-platform-comment/src/test/java/org/nuxeo/ecm/platform/comment/TestCommentsMigrator.java", "diffHunk": "@@ -233,6 +236,48 @@ public void testMigrationFromPropertyToSecuredWithCommentsNotCorrectlyFilled() {\n             assertTrue(caughtEventMessages.contains(message));\n             assertTrue(session.exists(new IdRef(docId)));\n         }\n+\n+    }\n+\n+    /**\n+     * Test the migration in the case where the {@code comment:parentId} is not empty, but it doesn't exist.\n+     */\n+    @Test\n+    @LogCaptureFeature.FilterOn(logLevel = \"WARN\")\n+    @Deploy(\"org.nuxeo.ecm.platform.comment.tests:OSGI-INF/disable-removing-comment-children-listener.xml\")\n+    public void testMigrationFromPropertyToSecuredWithRemovedParentComment() {\n+        // NB_COMMENTS_BY_FILE*4 + NB_COMMENT_TO_REPLY_ON_IT*NB_REPLY_BY_COMMENT (5 levels of reply) = 200 + 50\n+        createCommentsAsProperty(false, true);\n+\n+        // Second step of migrate: from 'Property' to 'Secured'\n+        migrateFromPropertyToSecured(new CommentsMigrator(), false, true);\n+        transactionalFeature.nextTransaction();\n+\n+        List<LogEvent> events = logCaptureResult.getCaughtEvents();\n+        assertEquals(NB_COMMENTS_BY_FILE + 1, events.size());\n+\n+        String query = String.format(\"SELECT %s FROM Comment WHERE %s = '%s'\", ECM_UUID, COMMENT_PARENT_ID,\n+                fileToCommentAndRemove.getId());\n+        List<String> unMigratedCommentDocIds = session.queryProjection(query, 0, 0)\n+                                                      .stream()\n+                                                      .map(m -> (String) m.get(ECM_UUID))\n+                                                      .collect(Collectors.toList());\n+\n+        // The comments not migrated should be there but, not under 'fileToCommentAndRemove'\n+        assertEquals(NB_COMMENTS_BY_FILE, unMigratedCommentDocIds.size());\n+        List<String> caughtEventMessages = logCaptureResult.getCaughtEventMessages();\n+\n+        assertTrue(caughtEventMessages.contains(String.format(\n+                \"Some comments have not been migrated, see logs for more information. The folder containing these comments will be renamed to %s\",\n+                UNMIGRATED_COMMENTS_FOLDER_NAME)));\n+\n+        for (String docId : unMigratedCommentDocIds) {\n+            String message = String.format(\n+                    \"The comment document model with IdRef: %s cannot be migrated, because its parent: %s cannot be found\",\n+                    docId, fileToCommentAndRemove.getId());\n+            assertTrue(caughtEventMessages.contains(message));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzcwNjA1MQ=="}, "originalCommit": {"oid": "c85a64bd7174b4f969d77311e774541caec56285"}, "originalPosition": 105}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzc0NTI4OQ==", "bodyText": "My question is about asserting the number of warns generated introduced by your changes is equal and not superior to the number of comments not migrated, I'm not talking about checking the effective comments non-migrated as you already assert you have the right warn for each one.\nIt's up to you as I said !", "url": "https://github.com/nuxeo/nuxeo/pull/3735#discussion_r377745289", "createdAt": "2020-02-11T16:24:09Z", "author": {"login": "NourNuxeo"}, "path": "nuxeo-features/nuxeo-platform-comment/nuxeo-platform-comment/src/test/java/org/nuxeo/ecm/platform/comment/TestCommentsMigrator.java", "diffHunk": "@@ -233,6 +236,48 @@ public void testMigrationFromPropertyToSecuredWithCommentsNotCorrectlyFilled() {\n             assertTrue(caughtEventMessages.contains(message));\n             assertTrue(session.exists(new IdRef(docId)));\n         }\n+\n+    }\n+\n+    /**\n+     * Test the migration in the case where the {@code comment:parentId} is not empty, but it doesn't exist.\n+     */\n+    @Test\n+    @LogCaptureFeature.FilterOn(logLevel = \"WARN\")\n+    @Deploy(\"org.nuxeo.ecm.platform.comment.tests:OSGI-INF/disable-removing-comment-children-listener.xml\")\n+    public void testMigrationFromPropertyToSecuredWithRemovedParentComment() {\n+        // NB_COMMENTS_BY_FILE*4 + NB_COMMENT_TO_REPLY_ON_IT*NB_REPLY_BY_COMMENT (5 levels of reply) = 200 + 50\n+        createCommentsAsProperty(false, true);\n+\n+        // Second step of migrate: from 'Property' to 'Secured'\n+        migrateFromPropertyToSecured(new CommentsMigrator(), false, true);\n+        transactionalFeature.nextTransaction();\n+\n+        List<LogEvent> events = logCaptureResult.getCaughtEvents();\n+        assertEquals(NB_COMMENTS_BY_FILE + 1, events.size());\n+\n+        String query = String.format(\"SELECT %s FROM Comment WHERE %s = '%s'\", ECM_UUID, COMMENT_PARENT_ID,\n+                fileToCommentAndRemove.getId());\n+        List<String> unMigratedCommentDocIds = session.queryProjection(query, 0, 0)\n+                                                      .stream()\n+                                                      .map(m -> (String) m.get(ECM_UUID))\n+                                                      .collect(Collectors.toList());\n+\n+        // The comments not migrated should be there but, not under 'fileToCommentAndRemove'\n+        assertEquals(NB_COMMENTS_BY_FILE, unMigratedCommentDocIds.size());\n+        List<String> caughtEventMessages = logCaptureResult.getCaughtEventMessages();\n+\n+        assertTrue(caughtEventMessages.contains(String.format(\n+                \"Some comments have not been migrated, see logs for more information. The folder containing these comments will be renamed to %s\",\n+                UNMIGRATED_COMMENTS_FOLDER_NAME)));\n+\n+        for (String docId : unMigratedCommentDocIds) {\n+            String message = String.format(\n+                    \"The comment document model with IdRef: %s cannot be migrated, because its parent: %s cannot be found\",\n+                    docId, fileToCommentAndRemove.getId());\n+            assertTrue(caughtEventMessages.contains(message));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzcwNjA1MQ=="}, "originalCommit": {"oid": "c85a64bd7174b4f969d77311e774541caec56285"}, "originalPosition": 105}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzc1NzIzOQ==", "bodyText": "yes this check is already done see here this check ensure that at least i have the warn messages of my comments but to check the inverse i don't think is really needed", "url": "https://github.com/nuxeo/nuxeo/pull/3735#discussion_r377757239", "createdAt": "2020-02-11T16:42:25Z", "author": {"login": "RSalem07"}, "path": "nuxeo-features/nuxeo-platform-comment/nuxeo-platform-comment/src/test/java/org/nuxeo/ecm/platform/comment/TestCommentsMigrator.java", "diffHunk": "@@ -233,6 +236,48 @@ public void testMigrationFromPropertyToSecuredWithCommentsNotCorrectlyFilled() {\n             assertTrue(caughtEventMessages.contains(message));\n             assertTrue(session.exists(new IdRef(docId)));\n         }\n+\n+    }\n+\n+    /**\n+     * Test the migration in the case where the {@code comment:parentId} is not empty, but it doesn't exist.\n+     */\n+    @Test\n+    @LogCaptureFeature.FilterOn(logLevel = \"WARN\")\n+    @Deploy(\"org.nuxeo.ecm.platform.comment.tests:OSGI-INF/disable-removing-comment-children-listener.xml\")\n+    public void testMigrationFromPropertyToSecuredWithRemovedParentComment() {\n+        // NB_COMMENTS_BY_FILE*4 + NB_COMMENT_TO_REPLY_ON_IT*NB_REPLY_BY_COMMENT (5 levels of reply) = 200 + 50\n+        createCommentsAsProperty(false, true);\n+\n+        // Second step of migrate: from 'Property' to 'Secured'\n+        migrateFromPropertyToSecured(new CommentsMigrator(), false, true);\n+        transactionalFeature.nextTransaction();\n+\n+        List<LogEvent> events = logCaptureResult.getCaughtEvents();\n+        assertEquals(NB_COMMENTS_BY_FILE + 1, events.size());\n+\n+        String query = String.format(\"SELECT %s FROM Comment WHERE %s = '%s'\", ECM_UUID, COMMENT_PARENT_ID,\n+                fileToCommentAndRemove.getId());\n+        List<String> unMigratedCommentDocIds = session.queryProjection(query, 0, 0)\n+                                                      .stream()\n+                                                      .map(m -> (String) m.get(ECM_UUID))\n+                                                      .collect(Collectors.toList());\n+\n+        // The comments not migrated should be there but, not under 'fileToCommentAndRemove'\n+        assertEquals(NB_COMMENTS_BY_FILE, unMigratedCommentDocIds.size());\n+        List<String> caughtEventMessages = logCaptureResult.getCaughtEventMessages();\n+\n+        assertTrue(caughtEventMessages.contains(String.format(\n+                \"Some comments have not been migrated, see logs for more information. The folder containing these comments will be renamed to %s\",\n+                UNMIGRATED_COMMENTS_FOLDER_NAME)));\n+\n+        for (String docId : unMigratedCommentDocIds) {\n+            String message = String.format(\n+                    \"The comment document model with IdRef: %s cannot be migrated, because its parent: %s cannot be found\",\n+                    docId, fileToCommentAndRemove.getId());\n+            assertTrue(caughtEventMessages.contains(message));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzcwNjA1MQ=="}, "originalCommit": {"oid": "c85a64bd7174b4f969d77311e774541caec56285"}, "originalPosition": 105}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzOTczODIwOnYy", "diffSide": "RIGHT", "path": "nuxeo-features/nuxeo-platform-comment/nuxeo-platform-comment/src/main/java/org/nuxeo/ecm/platform/comment/impl/CommentsMigrator.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQxMTowMjoyN1rOFoqWlA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQxMToxNTo1OFrOFoqwMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODE4MTI2OA==", "bodyText": "Not sure about this change.", "url": "https://github.com/nuxeo/nuxeo/pull/3735#discussion_r378181268", "createdAt": "2020-02-12T11:02:27Z", "author": {"login": "kevinleturc"}, "path": "nuxeo-features/nuxeo-platform-comment/nuxeo-platform-comment/src/main/java/org/nuxeo/ecm/platform/comment/impl/CommentsMigrator.java", "diffHunk": "@@ -215,22 +215,22 @@ protected void migrateSessionPropertyToSecured(CoreSession session, MigrationCon\n \n             session.removeDocuments(documentsToRemove);\n \n-            reportProgress(\"Done Migrating from Property to Secured\", totalOfComments, totalOfComments);\n+            reportProgress(\"Done Migration from Property to Secured\", totalOfComments, totalOfComments);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c85a64bd7174b4f969d77311e774541caec56285"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODE4NjA3Nw==", "bodyText": "this was a warning of my spell checking IDE plugin, and i changed it. if you want i can rollback this part", "url": "https://github.com/nuxeo/nuxeo/pull/3735#discussion_r378186077", "createdAt": "2020-02-12T11:12:23Z", "author": {"login": "RSalem07"}, "path": "nuxeo-features/nuxeo-platform-comment/nuxeo-platform-comment/src/main/java/org/nuxeo/ecm/platform/comment/impl/CommentsMigrator.java", "diffHunk": "@@ -215,22 +215,22 @@ protected void migrateSessionPropertyToSecured(CoreSession session, MigrationCon\n \n             session.removeDocuments(documentsToRemove);\n \n-            reportProgress(\"Done Migrating from Property to Secured\", totalOfComments, totalOfComments);\n+            reportProgress(\"Done Migration from Property to Secured\", totalOfComments, totalOfComments);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODE4MTI2OA=="}, "originalCommit": {"oid": "c85a64bd7174b4f969d77311e774541caec56285"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODE4NzIzNw==", "bodyText": "Probably because your dictionary doesn't have this word, it can happen. Yes, I'm in favor of not changing it and adding the word to the dictionary to remove the warning.", "url": "https://github.com/nuxeo/nuxeo/pull/3735#discussion_r378187237", "createdAt": "2020-02-12T11:14:44Z", "author": {"login": "kevinleturc"}, "path": "nuxeo-features/nuxeo-platform-comment/nuxeo-platform-comment/src/main/java/org/nuxeo/ecm/platform/comment/impl/CommentsMigrator.java", "diffHunk": "@@ -215,22 +215,22 @@ protected void migrateSessionPropertyToSecured(CoreSession session, MigrationCon\n \n             session.removeDocuments(documentsToRemove);\n \n-            reportProgress(\"Done Migrating from Property to Secured\", totalOfComments, totalOfComments);\n+            reportProgress(\"Done Migration from Property to Secured\", totalOfComments, totalOfComments);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODE4MTI2OA=="}, "originalCommit": {"oid": "c85a64bd7174b4f969d77311e774541caec56285"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODE4NzgyNg==", "bodyText": "The first one seems more correct. If spell checking is not happy maybe you can say\n\n\"Migrated from Property to Secured\"", "url": "https://github.com/nuxeo/nuxeo/pull/3735#discussion_r378187826", "createdAt": "2020-02-12T11:15:58Z", "author": {"login": "NourNuxeo"}, "path": "nuxeo-features/nuxeo-platform-comment/nuxeo-platform-comment/src/main/java/org/nuxeo/ecm/platform/comment/impl/CommentsMigrator.java", "diffHunk": "@@ -215,22 +215,22 @@ protected void migrateSessionPropertyToSecured(CoreSession session, MigrationCon\n \n             session.removeDocuments(documentsToRemove);\n \n-            reportProgress(\"Done Migrating from Property to Secured\", totalOfComments, totalOfComments);\n+            reportProgress(\"Done Migration from Property to Secured\", totalOfComments, totalOfComments);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODE4MTI2OA=="}, "originalCommit": {"oid": "c85a64bd7174b4f969d77311e774541caec56285"}, "originalPosition": 52}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4247, "cost": 1, "resetAt": "2021-11-03T18:41:40Z"}}}