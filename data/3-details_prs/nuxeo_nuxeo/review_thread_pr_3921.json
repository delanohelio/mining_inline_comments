{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAzNDI2MjA3", "number": 3921, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxMDowNDoyNVrODyAMBQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxMDoxMzo0MlrODyAY7g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNzU4NDY5OnYy", "diffSide": "LEFT", "path": "nuxeo-core/nuxeo-core-storage-mongodb/src/main/java/org/nuxeo/ecm/core/storage/mongodb/MongoDBConverter.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxMDowNDoyNVrOGFyvFQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxMTo1NzoyNlrOGF2V3A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODcyNzMxNw==", "bodyText": "Don't we want to keep the existing constructor/methods for backward compatibility, to be safe? (I know it's mostly internal stuff)", "url": "https://github.com/nuxeo/nuxeo/pull/3921#discussion_r408727317", "createdAt": "2020-04-15T10:04:25Z", "author": {"login": "troger"}, "path": "nuxeo-core/nuxeo-core-storage-mongodb/src/main/java/org/nuxeo/ecm/core/storage/mongodb/MongoDBConverter.java", "diffHunk": "@@ -57,22 +64,35 @@\n     /** The key to use in memory to map the database native \"_id\". */\n     protected final String idKey;\n \n+    /** The keys for booleans whose value is true or null (instead of false). */\n+    protected final Set<String> trueOrNullBooleanKeys;\n+\n+    /** The keys whose values are ids and are stored as longs. */\n+    protected final Set<String> idValuesKeys;\n+\n     /**\n      * Constructor for a converter that does not map the MongoDB native \"_id\".\n      *\n      * @since 10.3\n      */\n     public MongoDBConverter() {\n-        this(null);\n+        this(null, Collections.emptySet(), Collections.emptySet());\n     }\n \n     /**\n      * Constructor for a converter that also knows to optionally translate the native MongoDB \"_id\" into a custom id.\n+     * <p>\n+     * When {@code idValuesKeys} are provided, the ids are stored as longs.\n      *\n      * @param idKey the key to use to map the native \"_id\" in memory, if not {@code null}\n+     * @param trueOrNullBooleanKeys the keys corresponding to boolean values that are only true or null (instead of\n+     *            false)\n+     * @param idValuesKeys the keys corresponding to values that are ids\n      */\n-    public MongoDBConverter(String idKey) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f22f08ce03ad612b473ef193825868abb4b1ed6a"}, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODc4NjM5Ng==", "bodyText": "This is too low-level internals to make sense.", "url": "https://github.com/nuxeo/nuxeo/pull/3921#discussion_r408786396", "createdAt": "2020-04-15T11:57:26Z", "author": {"login": "efge"}, "path": "nuxeo-core/nuxeo-core-storage-mongodb/src/main/java/org/nuxeo/ecm/core/storage/mongodb/MongoDBConverter.java", "diffHunk": "@@ -57,22 +64,35 @@\n     /** The key to use in memory to map the database native \"_id\". */\n     protected final String idKey;\n \n+    /** The keys for booleans whose value is true or null (instead of false). */\n+    protected final Set<String> trueOrNullBooleanKeys;\n+\n+    /** The keys whose values are ids and are stored as longs. */\n+    protected final Set<String> idValuesKeys;\n+\n     /**\n      * Constructor for a converter that does not map the MongoDB native \"_id\".\n      *\n      * @since 10.3\n      */\n     public MongoDBConverter() {\n-        this(null);\n+        this(null, Collections.emptySet(), Collections.emptySet());\n     }\n \n     /**\n      * Constructor for a converter that also knows to optionally translate the native MongoDB \"_id\" into a custom id.\n+     * <p>\n+     * When {@code idValuesKeys} are provided, the ids are stored as longs.\n      *\n      * @param idKey the key to use to map the native \"_id\" in memory, if not {@code null}\n+     * @param trueOrNullBooleanKeys the keys corresponding to boolean values that are only true or null (instead of\n+     *            false)\n+     * @param idValuesKeys the keys corresponding to values that are ids\n      */\n-    public MongoDBConverter(String idKey) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODcyNzMxNw=="}, "originalCommit": {"oid": "f22f08ce03ad612b473ef193825868abb4b1ed6a"}, "originalPosition": 63}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNzYxNzc0OnYy", "diffSide": "RIGHT", "path": "nuxeo-core/nuxeo-core/src/main/java/org/nuxeo/ecm/core/blob/DocumentBlobManager.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxMDoxMzo0MlrOGFzDgw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxMTo1ODo0NVrOGF2Yvw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODczMjU0Nw==", "bodyText": "Maybe a default impl?", "url": "https://github.com/nuxeo/nuxeo/pull/3921#discussion_r408732547", "createdAt": "2020-04-15T10:13:42Z", "author": {"login": "troger"}, "path": "nuxeo-core/nuxeo-core/src/main/java/org/nuxeo/ecm/core/blob/DocumentBlobManager.java", "diffHunk": "@@ -35,14 +35,27 @@\n  */\n public interface DocumentBlobManager {\n \n+    /**\n+     * Reads a {@link Blob} from storage.\n+     *\n+     * @param blobInfo the blob information\n+     * @param doc the document to which this blob belongs\n+     * @param xpath the xpath of the blob in the document\n+     * @return a managed blob\n+     * @since 11.1\n+     */\n+    Blob readBlob(BlobInfo blobInfo, Document doc, String xpath) throws IOException;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f22f08ce03ad612b473ef193825868abb4b1ed6a"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODc4NzEzNQ==", "bodyText": "As it's a service with only one implementation not really worth it, and it has to be implemented anyway.", "url": "https://github.com/nuxeo/nuxeo/pull/3921#discussion_r408787135", "createdAt": "2020-04-15T11:58:45Z", "author": {"login": "efge"}, "path": "nuxeo-core/nuxeo-core/src/main/java/org/nuxeo/ecm/core/blob/DocumentBlobManager.java", "diffHunk": "@@ -35,14 +35,27 @@\n  */\n public interface DocumentBlobManager {\n \n+    /**\n+     * Reads a {@link Blob} from storage.\n+     *\n+     * @param blobInfo the blob information\n+     * @param doc the document to which this blob belongs\n+     * @param xpath the xpath of the blob in the document\n+     * @return a managed blob\n+     * @since 11.1\n+     */\n+    Blob readBlob(BlobInfo blobInfo, Document doc, String xpath) throws IOException;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODczMjU0Nw=="}, "originalCommit": {"oid": "f22f08ce03ad612b473ef193825868abb4b1ed6a"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4164, "cost": 1, "resetAt": "2021-11-03T18:41:40Z"}}}