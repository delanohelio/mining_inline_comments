{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk3MjQzMzg0", "number": 3884, "title": "feature-NXP-28602-Transfer-document-in-S3-Glacier-Manual-action-in-WebUI-for-a-resultset-of-documents", "bodyText": "PR created from https://qa.nuxeo.org/jenkins/job/TestAndPush/job/ondemand-testandpush-saouana/224/", "createdAt": "2020-04-01T21:32:52Z", "url": "https://github.com/nuxeo/nuxeo/pull/3884", "merged": true, "mergeCommit": {"oid": "896a8933a32d61178f30d4df0b287856e0720594"}, "closed": true, "closedAt": "2020-04-06T07:42:22Z", "author": {"login": "nuxeojenkins"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcToBXKAFqTM4NjE5NDYzMg==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcUDeD3gFqTM4NzQwNTQwOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg2MTk0NjMy", "url": "https://github.com/nuxeo/nuxeo/pull/3884#pullrequestreview-386194632", "createdAt": "2020-04-02T08:08:20Z", "commit": {"oid": "8c4fa36cc607f8d47934a3b2dd04e37f5af151a3"}, "state": "COMMENTED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQwODowODoyMVrOF_f4vQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQwODoyODoxMFrOF_gkZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjEyNzAzNw==", "bodyText": "This behaves differently from moveContent when save is true. In moveContent you are returning the saved document while here the documents in result are not the ones returned by CoreSession#saveDocument.\nLooking at the saveDocuments implementation, you could do your own iteration/stream :)\nBTW, why not letting moveContent save the document? This would avoid multiple if(save).", "url": "https://github.com/nuxeo/nuxeo/pull/3884#discussion_r402127037", "createdAt": "2020-04-02T08:08:21Z", "author": {"login": "troger"}, "path": "modules/platform/nuxeo-automation/nuxeo-automation-features/src/main/java/org/nuxeo/ecm/automation/core/operations/coldstorage/MoveToColdStorage.java", "diffHunk": "@@ -50,8 +55,28 @@\n     @Param(name = \"save\", required = false, values = \"true\")\n     protected boolean save = true;\n \n-    @OperationMethod(collector = DocumentModelCollector.class)\n-    public DocumentModel run(DocumentModel doc) {\n+    @OperationMethod\n+    public DocumentModelList run(DocumentModelList documents) {\n+        DocumentModelList result = new DocumentModelListImpl();\n+        for (DocumentModel documentModel : documents) {\n+            try {\n+                result.add(moveContent(documentModel, false));\n+            } catch (Exception e) {\n+                log.error(\"Unable to move document: {} to cold storage\", documentModel.getId(), e);\n+            }\n+        }\n+        if (save) {\n+            session.saveDocuments(result.toArray(new DocumentModel[0]));\n+        }\n+        return result;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c4fa36cc607f8d47934a3b2dd04e37f5af151a3"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjEyODA2Nw==", "bodyText": "Why catching Exception here? Do not forget https://doc.nuxeo.com/corg/catching-exceptions/#never-catch-exception :)", "url": "https://github.com/nuxeo/nuxeo/pull/3884#discussion_r402128067", "createdAt": "2020-04-02T08:10:09Z", "author": {"login": "troger"}, "path": "modules/platform/nuxeo-automation/nuxeo-automation-features/src/main/java/org/nuxeo/ecm/automation/core/operations/coldstorage/MoveToColdStorage.java", "diffHunk": "@@ -50,8 +55,28 @@\n     @Param(name = \"save\", required = false, values = \"true\")\n     protected boolean save = true;\n \n-    @OperationMethod(collector = DocumentModelCollector.class)\n-    public DocumentModel run(DocumentModel doc) {\n+    @OperationMethod\n+    public DocumentModelList run(DocumentModelList documents) {\n+        DocumentModelList result = new DocumentModelListImpl();\n+        for (DocumentModel documentModel : documents) {\n+            try {\n+                result.add(moveContent(documentModel, false));\n+            } catch (Exception e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c4fa36cc607f8d47934a3b2dd04e37f5af151a3"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjEyOTI5OQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                protected void checkMoveContent(List<DocumentModel> expectedDocs, List<DocumentModel> foundedDocs)\n          \n          \n            \n                protected void checkMoveContent(List<DocumentModel> expectedDocs, List<DocumentModel> actualDocs)\n          \n      \n    \n    \n  \n\n?", "url": "https://github.com/nuxeo/nuxeo/pull/3884#discussion_r402129299", "createdAt": "2020-04-02T08:12:26Z", "author": {"login": "troger"}, "path": "modules/platform/nuxeo-automation/nuxeo-automation-features/src/test/java/org/nuxeo/ecm/automation/core/operations/coldstorage/AbstractTestColdStorageOperation.java", "diffHunk": "@@ -66,18 +68,52 @@ protected void moveContentToColdStorage(CoreSession session, DocumentModel docum\n         try (OperationContext context = new OperationContext(session)) {\n             context.setInput(documentModel);\n             DocumentModel updatedDocModel = (DocumentModel) automationService.run(context, MoveToColdStorage.ID);\n+            checkMoveContent(List.of(documentModel), List.of(updatedDocModel));\n+        }\n+    }\n+\n+    protected void moveContentToColdStorage(CoreSession session, List<DocumentModel> documents)\n+            throws OperationException, IOException {\n+        List<String> documentIds = documents.stream().map(DocumentModel::getId).collect(Collectors.toList());\n+        try (OperationContext context = new OperationContext(session)) {\n+            context.setInput(documents);\n+            checkMoveContent(documents, (DocumentModelList) automationService.run(context, MoveToColdStorage.ID));\n+        }\n+    }\n+\n+    protected void checkMoveContent(List<DocumentModel> expectedDocs, List<DocumentModel> foundedDocs)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c4fa36cc607f8d47934a3b2dd04e37f5af151a3"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjEyOTYxOA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    for (DocumentModel updatedDocModel : foundedDocs) {\n          \n          \n            \n                    for (DocumentModel updatedDoc : foundedDocs) {", "url": "https://github.com/nuxeo/nuxeo/pull/3884#discussion_r402129618", "createdAt": "2020-04-02T08:12:58Z", "author": {"login": "troger"}, "path": "modules/platform/nuxeo-automation/nuxeo-automation-features/src/test/java/org/nuxeo/ecm/automation/core/operations/coldstorage/AbstractTestColdStorageOperation.java", "diffHunk": "@@ -66,18 +68,52 @@ protected void moveContentToColdStorage(CoreSession session, DocumentModel docum\n         try (OperationContext context = new OperationContext(session)) {\n             context.setInput(documentModel);\n             DocumentModel updatedDocModel = (DocumentModel) automationService.run(context, MoveToColdStorage.ID);\n+            checkMoveContent(List.of(documentModel), List.of(updatedDocModel));\n+        }\n+    }\n+\n+    protected void moveContentToColdStorage(CoreSession session, List<DocumentModel> documents)\n+            throws OperationException, IOException {\n+        List<String> documentIds = documents.stream().map(DocumentModel::getId).collect(Collectors.toList());\n+        try (OperationContext context = new OperationContext(session)) {\n+            context.setInput(documents);\n+            checkMoveContent(documents, (DocumentModelList) automationService.run(context, MoveToColdStorage.ID));\n+        }\n+    }\n+\n+    protected void checkMoveContent(List<DocumentModel> expectedDocs, List<DocumentModel> foundedDocs)\n+            throws IOException {\n+        assertEquals(expectedDocs.size(), foundedDocs.size());\n+        List<String> expectedDocIds = expectedDocs.stream().map(DocumentModel::getId).collect(Collectors.toList());\n+        for (DocumentModel updatedDocModel : foundedDocs) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c4fa36cc607f8d47934a3b2dd04e37f5af151a3"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjEzNTMxOA==", "bodyText": "The assertEquals messages are not really needed, and it makes the code/test hardly understandable IMO.", "url": "https://github.com/nuxeo/nuxeo/pull/3884#discussion_r402135318", "createdAt": "2020-04-02T08:23:17Z", "author": {"login": "troger"}, "path": "modules/platform/nuxeo-automation/nuxeo-automation-features/src/test/java/org/nuxeo/ecm/automation/core/operations/coldstorage/AbstractTestColdStorageOperation.java", "diffHunk": "@@ -66,18 +68,52 @@ protected void moveContentToColdStorage(CoreSession session, DocumentModel docum\n         try (OperationContext context = new OperationContext(session)) {\n             context.setInput(documentModel);\n             DocumentModel updatedDocModel = (DocumentModel) automationService.run(context, MoveToColdStorage.ID);\n+            checkMoveContent(List.of(documentModel), List.of(updatedDocModel));\n+        }\n+    }\n+\n+    protected void moveContentToColdStorage(CoreSession session, List<DocumentModel> documents)\n+            throws OperationException, IOException {\n+        List<String> documentIds = documents.stream().map(DocumentModel::getId).collect(Collectors.toList());\n+        try (OperationContext context = new OperationContext(session)) {\n+            context.setInput(documents);\n+            checkMoveContent(documents, (DocumentModelList) automationService.run(context, MoveToColdStorage.ID));\n+        }\n+    }\n+\n+    protected void checkMoveContent(List<DocumentModel> expectedDocs, List<DocumentModel> foundedDocs)\n+            throws IOException {\n+        assertEquals(expectedDocs.size(), foundedDocs.size());\n+        List<String> expectedDocIds = expectedDocs.stream().map(DocumentModel::getId).collect(Collectors.toList());\n+        for (DocumentModel updatedDocModel : foundedDocs) {\n             Blob fileContent = (Blob) updatedDocModel.getPropertyValue(ColdStorageHelper.FILE_CONTENT_PROPERTY);\n             Blob coldStorageContent = (Blob) updatedDocModel.getPropertyValue(\n                     ColdStorageHelper.COLD_STORAGE_CONTENT_PROPERTY);\n-            assertEquals(documentModel.getRef(), updatedDocModel.getRef());\n-            assertTrue(updatedDocModel.hasFacet(FacetNames.COLD_STORAGE));\n-            assertEquals(DummyThumbnailFactory.DUMMY_THUMBNAIL_CONTENT, fileContent.getString());\n-            assertEquals(FILE_CONTENT, coldStorageContent.getString());\n+\n+            // check document\n+            assertTrue(String.format(\"Doc: %s must one of %s\", updatedDocModel, expectedDocs),\n+                    expectedDocIds.contains(updatedDocModel.getId()));\n+            assertTrue(String.format(\"Doc: %s must have the %s Facet\", updatedDocModel, FacetNames.COLD_STORAGE),\n+                    updatedDocModel.hasFacet(FacetNames.COLD_STORAGE));\n+\n+            // check blobs\n+            assertEquals(String.format(\"Doc: %s must have %s in 'file:content'\", //\n+                    updatedDocModel, DummyThumbnailFactory.DUMMY_THUMBNAIL_CONTENT), //\n+                    DummyThumbnailFactory.DUMMY_THUMBNAIL_CONTENT, fileContent.getString());\n+            assertEquals(String.format(\"Doc: %s must have %s in 'coldstorage:coldContent'\", //\n+                    updatedDocModel, FILE_CONTENT), //\n+                    FILE_CONTENT, coldStorageContent.getString());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c4fa36cc607f8d47934a3b2dd04e37f5af151a3"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjEzNjI4Nw==", "bodyText": "What about just removing this method used 2 times, and give a doc name to both calls?", "url": "https://github.com/nuxeo/nuxeo/pull/3884#discussion_r402136287", "createdAt": "2020-04-02T08:24:48Z", "author": {"login": "troger"}, "path": "modules/platform/nuxeo-automation/nuxeo-automation-features/src/test/java/org/nuxeo/ecm/automation/core/operations/coldstorage/AbstractTestColdStorageOperation.java", "diffHunk": "@@ -66,18 +68,52 @@ protected void moveContentToColdStorage(CoreSession session, DocumentModel docum\n         try (OperationContext context = new OperationContext(session)) {\n             context.setInput(documentModel);\n             DocumentModel updatedDocModel = (DocumentModel) automationService.run(context, MoveToColdStorage.ID);\n+            checkMoveContent(List.of(documentModel), List.of(updatedDocModel));\n+        }\n+    }\n+\n+    protected void moveContentToColdStorage(CoreSession session, List<DocumentModel> documents)\n+            throws OperationException, IOException {\n+        List<String> documentIds = documents.stream().map(DocumentModel::getId).collect(Collectors.toList());\n+        try (OperationContext context = new OperationContext(session)) {\n+            context.setInput(documents);\n+            checkMoveContent(documents, (DocumentModelList) automationService.run(context, MoveToColdStorage.ID));\n+        }\n+    }\n+\n+    protected void checkMoveContent(List<DocumentModel> expectedDocs, List<DocumentModel> foundedDocs)\n+            throws IOException {\n+        assertEquals(expectedDocs.size(), foundedDocs.size());\n+        List<String> expectedDocIds = expectedDocs.stream().map(DocumentModel::getId).collect(Collectors.toList());\n+        for (DocumentModel updatedDocModel : foundedDocs) {\n             Blob fileContent = (Blob) updatedDocModel.getPropertyValue(ColdStorageHelper.FILE_CONTENT_PROPERTY);\n             Blob coldStorageContent = (Blob) updatedDocModel.getPropertyValue(\n                     ColdStorageHelper.COLD_STORAGE_CONTENT_PROPERTY);\n-            assertEquals(documentModel.getRef(), updatedDocModel.getRef());\n-            assertTrue(updatedDocModel.hasFacet(FacetNames.COLD_STORAGE));\n-            assertEquals(DummyThumbnailFactory.DUMMY_THUMBNAIL_CONTENT, fileContent.getString());\n-            assertEquals(FILE_CONTENT, coldStorageContent.getString());\n+\n+            // check document\n+            assertTrue(String.format(\"Doc: %s must one of %s\", updatedDocModel, expectedDocs),\n+                    expectedDocIds.contains(updatedDocModel.getId()));\n+            assertTrue(String.format(\"Doc: %s must have the %s Facet\", updatedDocModel, FacetNames.COLD_STORAGE),\n+                    updatedDocModel.hasFacet(FacetNames.COLD_STORAGE));\n+\n+            // check blobs\n+            assertEquals(String.format(\"Doc: %s must have %s in 'file:content'\", //\n+                    updatedDocModel, DummyThumbnailFactory.DUMMY_THUMBNAIL_CONTENT), //\n+                    DummyThumbnailFactory.DUMMY_THUMBNAIL_CONTENT, fileContent.getString());\n+            assertEquals(String.format(\"Doc: %s must have %s in 'coldstorage:coldContent'\", //\n+                    updatedDocModel, FILE_CONTENT), //\n+                    FILE_CONTENT, coldStorageContent.getString());\n         }\n+\n     }\n \n     protected DocumentModel createFileDocument(CoreSession session, boolean withBlobContent, ACE... aces) {\n-        DocumentModel documentModel = session.createDocumentModel(\"/\", \"MyFile\", \"File\");\n+        return createFileDocument(session, withBlobContent, \"MyFile\", aces);\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c4fa36cc607f8d47934a3b2dd04e37f5af151a3"}, "originalPosition": 66}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjEzODIxNQ==", "bodyText": "Is this expected to create the documents with \"linda\" aces?", "url": "https://github.com/nuxeo/nuxeo/pull/3884#discussion_r402138215", "createdAt": "2020-04-02T08:28:10Z", "author": {"login": "troger"}, "path": "modules/platform/nuxeo-automation/nuxeo-automation-features/src/test/java/org/nuxeo/ecm/automation/core/operations/coldstorage/MoveToColdStorageTest.java", "diffHunk": "@@ -80,6 +81,29 @@ public void shouldMoveToColdStorage() throws OperationException, IOException {\n         moveContentToColdStorage(session, documentModel);\n     }\n \n+    @Test\n+    public void shouldMoveDocsToColdStorage() throws OperationException, IOException {\n+        // with regular user with \"WriteColdStorage\" permission\n+        ACE[] aces = { new ACE(\"linda\", SecurityConstants.READ, true), //\n+                new ACE(\"linda\", SecurityConstants.WRITE, true), //\n+                new ACE(\"linda\", SecurityConstants.WRITE_COLD_STORAGE, true) };\n+\n+        List<DocumentModel> documents = List.of(createFileDocument(session, true, \"MyFile1\", aces), //\n+                createFileDocument(session, true, \"MyFile2\", aces), //\n+                createFileDocument(session, true, \"MyFile3\", aces));\n+\n+        try (CloseableCoreSession userSession = CoreInstance.openCoreSession(session.getRepositoryName(), \"linda\")) {\n+            moveContentToColdStorage(userSession, documents);\n+        }\n+\n+        // with Administrator\n+        documents = List.of(createFileDocument(session, true, \"MyFile4\", aces), //\n+                createFileDocument(session, true, \"MyFile5\", aces), //\n+                createFileDocument(session, true, \"MyFile6\", aces));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c4fa36cc607f8d47934a3b2dd04e37f5af151a3"}, "originalPosition": 30}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8c4fa36cc607f8d47934a3b2dd04e37f5af151a3", "author": {"user": {"login": "RSalem07", "name": "Salem Aouana"}}, "url": "https://github.com/nuxeo/nuxeo/commit/8c4fa36cc607f8d47934a3b2dd04e37f5af151a3", "committedDate": "2020-03-31T09:57:53Z", "message": "NXP-28602: Add ability to move documents contents to cold storage"}, "afterCommit": {"oid": "faaf7adfee0a8ae58bac2205dbcfc0b1866c31cd", "author": {"user": {"login": "RSalem07", "name": "Salem Aouana"}}, "url": "https://github.com/nuxeo/nuxeo/commit/faaf7adfee0a8ae58bac2205dbcfc0b1866c31cd", "committedDate": "2020-04-02T09:19:34Z", "message": "NXP-28602: Add ability to move documents contents to cold storage"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "faaf7adfee0a8ae58bac2205dbcfc0b1866c31cd", "author": {"user": {"login": "RSalem07", "name": "Salem Aouana"}}, "url": "https://github.com/nuxeo/nuxeo/commit/faaf7adfee0a8ae58bac2205dbcfc0b1866c31cd", "committedDate": "2020-04-02T09:19:34Z", "message": "NXP-28602: Add ability to move documents contents to cold storage"}, "afterCommit": {"oid": "d6626ad3214588c8222bdb1c09f1519b8731532f", "author": {"user": {"login": "RSalem07", "name": "Salem Aouana"}}, "url": "https://github.com/nuxeo/nuxeo/commit/d6626ad3214588c8222bdb1c09f1519b8731532f", "committedDate": "2020-04-02T09:27:06Z", "message": "NXP-28602: Add ability to move documents contents to cold storage"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg2Mjc5NDQy", "url": "https://github.com/nuxeo/nuxeo/pull/3884#pullrequestreview-386279442", "createdAt": "2020-04-02T10:02:25Z", "commit": {"oid": "d6626ad3214588c8222bdb1c09f1519b8731532f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxMDowMjoyNlrOF_kIOQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxMDowMjoyNlrOF_kIOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjE5NjUzNw==", "bodyText": "If we confirm that we want this kind of pattern, should we also add a test for it? i.e. for the exception situation", "url": "https://github.com/nuxeo/nuxeo/pull/3884#discussion_r402196537", "createdAt": "2020-04-02T10:02:26Z", "author": {"login": "nmpcunha"}, "path": "modules/platform/nuxeo-automation/nuxeo-automation-features/src/main/java/org/nuxeo/ecm/automation/core/operations/coldstorage/MoveToColdStorage.java", "diffHunk": "@@ -67,4 +73,17 @@ public DocumentModel run(DocumentModel doc) {\n         return documentModel;\n     }\n \n+    @OperationMethod\n+    public DocumentModelList run(DocumentModelList documents) {\n+        DocumentModelList result = new DocumentModelListImpl();\n+        for (DocumentModel documentModel : documents) {\n+            try {\n+                result.add(run(documentModel));\n+            } catch (Exception e) {\n+                log.error(\"Unable to move document: {} to cold storage\", documentModel.getId(), e);\n+            }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d6626ad3214588c8222bdb1c09f1519b8731532f"}, "originalPosition": 66}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d6626ad3214588c8222bdb1c09f1519b8731532f", "author": {"user": {"login": "RSalem07", "name": "Salem Aouana"}}, "url": "https://github.com/nuxeo/nuxeo/commit/d6626ad3214588c8222bdb1c09f1519b8731532f", "committedDate": "2020-04-02T09:27:06Z", "message": "NXP-28602: Add ability to move documents contents to cold storage"}, "afterCommit": {"oid": "3a9018745d2475419931e655ce09d0702b7c0846", "author": {"user": {"login": "RSalem07", "name": "Salem Aouana"}}, "url": "https://github.com/nuxeo/nuxeo/commit/3a9018745d2475419931e655ce09d0702b7c0846", "committedDate": "2020-04-02T12:56:55Z", "message": "NXP-28602: Add ability to move documents contents to cold storage"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4e313a181470cdcdd4bb751bcaf343d2db3c2373", "author": {"user": {"login": "RSalem07", "name": "Salem Aouana"}}, "url": "https://github.com/nuxeo/nuxeo/commit/4e313a181470cdcdd4bb751bcaf343d2db3c2373", "committedDate": "2020-04-02T13:07:42Z", "message": "NXP-28602: Add ability to move documents contents to cold storage"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3a9018745d2475419931e655ce09d0702b7c0846", "author": {"user": {"login": "RSalem07", "name": "Salem Aouana"}}, "url": "https://github.com/nuxeo/nuxeo/commit/3a9018745d2475419931e655ce09d0702b7c0846", "committedDate": "2020-04-02T12:56:55Z", "message": "NXP-28602: Add ability to move documents contents to cold storage"}, "afterCommit": {"oid": "4e313a181470cdcdd4bb751bcaf343d2db3c2373", "author": {"user": {"login": "RSalem07", "name": "Salem Aouana"}}, "url": "https://github.com/nuxeo/nuxeo/commit/4e313a181470cdcdd4bb751bcaf343d2db3c2373", "committedDate": "2020-04-02T13:07:42Z", "message": "NXP-28602: Add ability to move documents contents to cold storage"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg3MTM3NTI1", "url": "https://github.com/nuxeo/nuxeo/pull/3884#pullrequestreview-387137525", "createdAt": "2020-04-03T10:28:40Z", "commit": {"oid": "4e313a181470cdcdd4bb751bcaf343d2db3c2373"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg3MzkyNjAy", "url": "https://github.com/nuxeo/nuxeo/pull/3884#pullrequestreview-387392602", "createdAt": "2020-04-03T16:09:47Z", "commit": {"oid": "4e313a181470cdcdd4bb751bcaf343d2db3c2373"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg3NDAxNTgw", "url": "https://github.com/nuxeo/nuxeo/pull/3884#pullrequestreview-387401580", "createdAt": "2020-04-03T16:21:42Z", "commit": {"oid": "4e313a181470cdcdd4bb751bcaf343d2db3c2373"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxNjoyMTo0MlrOGAcstQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxNjoyMTo0MlrOGAcstQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzEyMzM4MQ==", "bodyText": "We use doc in lots of places to refer to DocumentModel instances, not sure why it's worth changing here.", "url": "https://github.com/nuxeo/nuxeo/pull/3884#discussion_r403123381", "createdAt": "2020-04-03T16:21:42Z", "author": {"login": "efge"}, "path": "modules/platform/nuxeo-automation/nuxeo-automation-features/src/main/java/org/nuxeo/ecm/automation/core/operations/coldstorage/MoveToColdStorage.java", "diffHunk": "@@ -50,13 +57,13 @@\n     @Param(name = \"save\", required = false, values = \"true\")\n     protected boolean save = true;\n \n-    @OperationMethod(collector = DocumentModelCollector.class)\n-    public DocumentModel run(DocumentModel doc) {\n+    @OperationMethod\n+    public DocumentModel run(DocumentModel document) {\n         // retrieve the thumbnail which will be used to replace the content, once the move done\n-        Blob thumbnail = Framework.getService(ThumbnailService.class).getThumbnail(doc, session);\n+        Blob thumbnail = Framework.getService(ThumbnailService.class).getThumbnail(document, session);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4e313a181470cdcdd4bb751bcaf343d2db3c2373"}, "originalPosition": 47}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg3NDAxODk1", "url": "https://github.com/nuxeo/nuxeo/pull/3884#pullrequestreview-387401895", "createdAt": "2020-04-03T16:22:09Z", "commit": {"oid": "4e313a181470cdcdd4bb751bcaf343d2db3c2373"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxNjoyMjowOVrOGAcuNg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxNjoyMjowOVrOGAcuNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzEyMzc2Ng==", "bodyText": "doc would be fine here too", "url": "https://github.com/nuxeo/nuxeo/pull/3884#discussion_r403123766", "createdAt": "2020-04-03T16:22:09Z", "author": {"login": "efge"}, "path": "modules/platform/nuxeo-automation/nuxeo-automation-features/src/main/java/org/nuxeo/ecm/automation/core/operations/coldstorage/MoveToColdStorage.java", "diffHunk": "@@ -67,4 +74,17 @@ public DocumentModel run(DocumentModel doc) {\n         return documentModel;\n     }\n \n+    @OperationMethod\n+    public DocumentModelList run(DocumentModelList documents) {\n+        DocumentModelList result = new DocumentModelListImpl();\n+        for (DocumentModel documentModel : documents) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4e313a181470cdcdd4bb751bcaf343d2db3c2373"}, "originalPosition": 62}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg3NDA1NDA4", "url": "https://github.com/nuxeo/nuxeo/pull/3884#pullrequestreview-387405408", "createdAt": "2020-04-03T16:27:07Z", "commit": {"oid": "4e313a181470cdcdd4bb751bcaf343d2db3c2373"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4820, "cost": 1, "resetAt": "2021-11-03T18:41:40Z"}}}