{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc2MDY5MDc3", "number": 3751, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QxMTowNDoxNVrODgWcPA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QxMTowNDo0OFrODgWc6A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1MjQ4NzAwOnYy", "diffSide": "RIGHT", "path": "addons/nuxeo-core-binarymanager-cloud/nuxeo-core-binarymanager-s3/src/main/java/org/nuxeo/ecm/core/storage/sql/S3BinaryManager.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QxMTowNDoxNVrOFqgjYw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QxMTowODowN1rOFqgqdw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDExNzg1OQ==", "bodyText": "in which case does it happen?", "url": "https://github.com/nuxeo/nuxeo/pull/3751#discussion_r380117859", "createdAt": "2020-02-17T11:04:15Z", "author": {"login": "ataillefer"}, "path": "addons/nuxeo-core-binarymanager-cloud/nuxeo-core-binarymanager-s3/src/main/java/org/nuxeo/ecm/core/storage/sql/S3BinaryManager.java", "diffHunk": "@@ -193,16 +195,32 @@ public void close() {\n      *\n      * @since 7.2\n      */\n-    protected void abortOldUploads() throws IOException {\n+    protected void abortOldUploads() {\n+        ConfigurationService configurationService = Framework.getService(ConfigurationService.class);\n+        if (configurationService == null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22d7e7cec4c36226ae01099f258be1cc5ca6bcb3"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDExOTY3MQ==", "bodyText": "It's not something I expect to happen, but I want to be robust in backports (and maybe some pure unit tests).", "url": "https://github.com/nuxeo/nuxeo/pull/3751#discussion_r380119671", "createdAt": "2020-02-17T11:08:07Z", "author": {"login": "efge"}, "path": "addons/nuxeo-core-binarymanager-cloud/nuxeo-core-binarymanager-s3/src/main/java/org/nuxeo/ecm/core/storage/sql/S3BinaryManager.java", "diffHunk": "@@ -193,16 +195,32 @@ public void close() {\n      *\n      * @since 7.2\n      */\n-    protected void abortOldUploads() throws IOException {\n+    protected void abortOldUploads() {\n+        ConfigurationService configurationService = Framework.getService(ConfigurationService.class);\n+        if (configurationService == null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDExNzg1OQ=="}, "originalCommit": {"oid": "22d7e7cec4c36226ae01099f258be1cc5ca6bcb3"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1MjQ4ODcyOnYy", "diffSide": "RIGHT", "path": "addons/nuxeo-core-binarymanager-cloud/nuxeo-core-binarymanager-s3/src/main/java/org/nuxeo/ecm/blob/s3/S3BlobStoreConfiguration.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QxMTowNDo0OFrOFqgkXg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QxMTowNDo0OFrOFqgkXg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDExODExMA==", "bodyText": "in which case does it happen?", "url": "https://github.com/nuxeo/nuxeo/pull/3751#discussion_r380118110", "createdAt": "2020-02-17T11:04:48Z", "author": {"login": "ataillefer"}, "path": "addons/nuxeo-core-binarymanager-cloud/nuxeo-core-binarymanager-s3/src/main/java/org/nuxeo/ecm/blob/s3/S3BlobStoreConfiguration.java", "diffHunk": "@@ -385,17 +392,33 @@ protected TransferManager createTransferManager() {\n     /**\n      * Aborts uploads that crashed and are older than 1 day.\n      */\n-    protected void abortOldUploads() throws IOException {\n+    protected void abortOldUploads() {\n+        ConfigurationService configurationService = Framework.getService(ConfigurationService.class);\n+        if (configurationService == null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22d7e7cec4c36226ae01099f258be1cc5ca6bcb3"}, "originalPosition": 21}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4260, "cost": 1, "resetAt": "2021-11-03T18:41:40Z"}}}