{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM3MTA2MjM1", "number": 4541, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQyMzowNTo1M1rOFEQbsA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQyMzowNTo1M1rOFEQbsA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQwMDA3ODU2OnYy", "diffSide": "RIGHT", "path": "modules/core/nuxeo-core-event/src/main/java/org/nuxeo/ecm/core/work/WorkManagerImpl.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQyMzowNTo1M1rOIET0CQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQwOToxNzowM1rOIFG0zw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTM4OTgzMw==", "bodyText": "The existing naming for ComponentManager.Listener methods gets a bit confusing when we have this method inside a Component, because now we have a start method that is called when the component is started, but afterStart is after the whole runtime has started. Could you look at renaming/aliasing things so that here we can have a method name afterRuntimeStart (for instance).", "url": "https://github.com/nuxeo/nuxeo/pull/4541#discussion_r541389833", "createdAt": "2020-12-11T23:05:53Z", "author": {"login": "efge"}, "path": "modules/core/nuxeo-core-event/src/main/java/org/nuxeo/ecm/core/work/WorkManagerImpl.java", "diffHunk": "@@ -426,41 +427,34 @@ public void init() {\n             for (WorkQueueDescriptor descriptor : descriptors) {\n                 initializeQueue(descriptor);\n             }\n+        }\n+    }\n \n-            Framework.getRuntime().getComponentManager().addListener(new ComponentManager.Listener() {\n-                @Override\n-                public void beforeStop(ComponentManager mgr, boolean isStandby) {\n-                    List<WorkQueueDescriptor> descriptors = getDescriptors(QUEUES_EP);\n-                    for (WorkQueueDescriptor descriptor : descriptors) {\n-                        deactivateQueue(descriptor);\n-                    }\n-                    try {\n-                        if (!shutdown(10, TimeUnit.SECONDS)) {\n-                            log.error(\"Some processors are still active\");\n-                        }\n-                    } catch (InterruptedException e) {\n-                        Thread.currentThread().interrupt();\n-                        throw new NuxeoException(\"Interrupted while stopping work manager thread pools\", e);\n-                    }\n-                }\n-\n-                @Override\n-                public void afterStart(ComponentManager mgr, boolean isResume) {\n-                    if (isProcessingDisabled()) {\n-                        log.warn(\"WorkManager processing has been disabled on this node\");\n-                        return;\n-                    }\n-                    List<WorkQueueDescriptor> descriptors = getDescriptors(QUEUES_EP);\n-                    for (WorkQueueDescriptor descriptor : descriptors) {\n-                        activateQueue(descriptor);\n-                    }\n-                }\n+    @Override\n+    public void afterStart(ComponentManager mgr, boolean isResume) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c0e625ff752d4192c498a117401df63ef64a08ae"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjIyNTYxNQ==", "bodyText": "This was just a suggestion to improve listeners declaration, we can review the API indeed but i'll create a jira first if we're happy with this way of registering listeners, to address the methods confusion.", "url": "https://github.com/nuxeo/nuxeo/pull/4541#discussion_r542225615", "createdAt": "2020-12-14T09:17:03Z", "author": {"login": "atchertchian"}, "path": "modules/core/nuxeo-core-event/src/main/java/org/nuxeo/ecm/core/work/WorkManagerImpl.java", "diffHunk": "@@ -426,41 +427,34 @@ public void init() {\n             for (WorkQueueDescriptor descriptor : descriptors) {\n                 initializeQueue(descriptor);\n             }\n+        }\n+    }\n \n-            Framework.getRuntime().getComponentManager().addListener(new ComponentManager.Listener() {\n-                @Override\n-                public void beforeStop(ComponentManager mgr, boolean isStandby) {\n-                    List<WorkQueueDescriptor> descriptors = getDescriptors(QUEUES_EP);\n-                    for (WorkQueueDescriptor descriptor : descriptors) {\n-                        deactivateQueue(descriptor);\n-                    }\n-                    try {\n-                        if (!shutdown(10, TimeUnit.SECONDS)) {\n-                            log.error(\"Some processors are still active\");\n-                        }\n-                    } catch (InterruptedException e) {\n-                        Thread.currentThread().interrupt();\n-                        throw new NuxeoException(\"Interrupted while stopping work manager thread pools\", e);\n-                    }\n-                }\n-\n-                @Override\n-                public void afterStart(ComponentManager mgr, boolean isResume) {\n-                    if (isProcessingDisabled()) {\n-                        log.warn(\"WorkManager processing has been disabled on this node\");\n-                        return;\n-                    }\n-                    List<WorkQueueDescriptor> descriptors = getDescriptors(QUEUES_EP);\n-                    for (WorkQueueDescriptor descriptor : descriptors) {\n-                        activateQueue(descriptor);\n-                    }\n-                }\n+    @Override\n+    public void afterStart(ComponentManager mgr, boolean isResume) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTM4OTgzMw=="}, "originalCommit": {"oid": "c0e625ff752d4192c498a117401df63ef64a08ae"}, "originalPosition": 55}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4293, "cost": 1, "resetAt": "2021-11-03T18:41:40Z"}}}