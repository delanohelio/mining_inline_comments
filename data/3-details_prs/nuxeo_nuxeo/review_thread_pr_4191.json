{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQyMDIzMzk4", "number": 4191, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxNDoyMTowNlrOEKHvBA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwODowMDowNlrOEKZ9mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5MDQ3OTQwOnYy", "diffSide": "RIGHT", "path": "modules/platform/nuxeo-preview-core/src/main/java/org/nuxeo/ecm/platform/preview/io/BlobPreviewJsonEnricher.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxNDoyMTowNlrOGq-wtw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxNDoyMTowNlrOGq-wtw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzcyMTY1NQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * Enrich {@link Blob} json with embed preview link when available.\n          \n          \n            \n             * Enriches {@link Blob} json with embed preview link when available.", "url": "https://github.com/nuxeo/nuxeo/pull/4191#discussion_r447721655", "createdAt": "2020-06-30T14:21:06Z", "author": {"login": "troger"}, "path": "modules/platform/nuxeo-preview-core/src/main/java/org/nuxeo/ecm/platform/preview/io/BlobPreviewJsonEnricher.java", "diffHunk": "@@ -0,0 +1,82 @@\n+/*\n+ * (C) Copyright 2020 Nuxeo (http://nuxeo.com/) and others.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ * Contributors:\n+ *     Nelson Silva <nsilva@nuxeo.com>\n+ */\n+\n+package org.nuxeo.ecm.platform.preview.io;\n+\n+import static org.nuxeo.ecm.core.io.registry.reflect.Instantiations.SINGLETON;\n+import static org.nuxeo.ecm.core.io.registry.reflect.Priorities.REFERENCE;\n+\n+import java.io.IOException;\n+import java.net.URI;\n+\n+import org.nuxeo.ecm.core.api.Blob;\n+import org.nuxeo.ecm.core.api.model.impl.primitives.BlobProperty;\n+import org.nuxeo.ecm.core.blob.BlobManager;\n+import org.nuxeo.ecm.core.blob.ManagedBlob;\n+import org.nuxeo.ecm.core.io.marshallers.json.enrichers.AbstractJsonEnricher;\n+import org.nuxeo.ecm.core.io.registry.reflect.Setup;\n+import org.nuxeo.runtime.api.Framework;\n+\n+import com.fasterxml.jackson.core.JsonGenerator;\n+\n+/**\n+ * Enrich {@link Blob} json with embed preview link when available.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b982ee55aa03de01db1b1dd54a7de9a8f9cc81f3"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5MTI4MTkwOnYy", "diffSide": "RIGHT", "path": "modules/platform/nuxeo-preview-core/src/main/java/org/nuxeo/ecm/platform/preview/io/BlobPreviewJsonEnricher.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxNzoxMjoxMFrOGrGcyw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxNzoxMjoxMFrOGrGcyw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzg0NzYyNw==", "bodyText": "You must use toASCIIString instead of toString here.", "url": "https://github.com/nuxeo/nuxeo/pull/4191#discussion_r447847627", "createdAt": "2020-06-30T17:12:10Z", "author": {"login": "efge"}, "path": "modules/platform/nuxeo-preview-core/src/main/java/org/nuxeo/ecm/platform/preview/io/BlobPreviewJsonEnricher.java", "diffHunk": "@@ -0,0 +1,82 @@\n+/*\n+ * (C) Copyright 2020 Nuxeo (http://nuxeo.com/) and others.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ * Contributors:\n+ *     Nelson Silva <nsilva@nuxeo.com>\n+ */\n+\n+package org.nuxeo.ecm.platform.preview.io;\n+\n+import static org.nuxeo.ecm.core.io.registry.reflect.Instantiations.SINGLETON;\n+import static org.nuxeo.ecm.core.io.registry.reflect.Priorities.REFERENCE;\n+\n+import java.io.IOException;\n+import java.net.URI;\n+\n+import org.nuxeo.ecm.core.api.Blob;\n+import org.nuxeo.ecm.core.api.model.impl.primitives.BlobProperty;\n+import org.nuxeo.ecm.core.blob.BlobManager;\n+import org.nuxeo.ecm.core.blob.ManagedBlob;\n+import org.nuxeo.ecm.core.io.marshallers.json.enrichers.AbstractJsonEnricher;\n+import org.nuxeo.ecm.core.io.registry.reflect.Setup;\n+import org.nuxeo.runtime.api.Framework;\n+\n+import com.fasterxml.jackson.core.JsonGenerator;\n+\n+/**\n+ * Enriches {@link Blob} json with embed preview link when available.\n+ * <p>\n+ * Enabled when parameter enrichers-blob=preview is present.\n+ * <p>\n+ * Blob format is:\n+ *\n+ * <pre>\n+ * {@code\n+ * {\n+ *  \"name\": \"...\",\n+ *  \"mime-type\": \"...\",\n+ *  ...\n+ *  \"preview\": \"<url>\"\n+ * }\n+ * }\n+ * </pre>\n+ *\n+ * @since 11.2\n+ */\n+@Setup(mode = SINGLETON, priority = REFERENCE)\n+public class BlobPreviewJsonEnricher extends AbstractJsonEnricher<BlobProperty> {\n+\n+    public static final String NAME = \"preview\";\n+\n+    public BlobPreviewJsonEnricher() {\n+        super(NAME);\n+    }\n+\n+    @Override\n+    public void write(JsonGenerator jg, BlobProperty blobProperty) throws IOException {\n+        Blob blob = (Blob) blobProperty.getValue();\n+        if (!(blob instanceof ManagedBlob)) {\n+            return;\n+        }\n+\n+        // if it's a managed blob try to use the embed uri for preview\n+        BlobManager blobManager = Framework.getService(BlobManager.class);\n+        URI uri = blobManager.getURI(blob, BlobManager.UsageHint.EMBED, null);\n+        if (uri != null) {\n+            jg.writeStringField(NAME, uri.toString());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4e47bc78891c4b50af48352dfbfdfe9c08dcdf42"}, "originalPosition": 78}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5MTI5OTQwOnYy", "diffSide": "RIGHT", "path": "modules/platform/nuxeo-preview-core/src/test/java/org/nuxeo/ecm/platform/preview/io/DummyManagedBlobProvider.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxNzoxNjo1OFrOGrGn-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxNzoxNjo1OFrOGrGn-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzg1MDQ4OA==", "bodyText": "Could you use a real example.com URI to be clearer in the test?", "url": "https://github.com/nuxeo/nuxeo/pull/4191#discussion_r447850488", "createdAt": "2020-06-30T17:16:58Z", "author": {"login": "efge"}, "path": "modules/platform/nuxeo-preview-core/src/test/java/org/nuxeo/ecm/platform/preview/io/DummyManagedBlobProvider.java", "diffHunk": "@@ -0,0 +1,45 @@\n+/*\n+ * (C) Copyright 2020 Nuxeo (http://nuxeo.com/) and others.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ * Contributors:\n+ *     Nelson Silva <nsilva@nuxeo.com>\n+ */\n+\n+package org.nuxeo.ecm.platform.preview.io;\n+\n+import org.nuxeo.ecm.core.blob.BlobManager;\n+import org.nuxeo.ecm.core.blob.DummyBlobProvider;\n+import org.nuxeo.ecm.core.blob.ManagedBlob;\n+\n+import javax.servlet.http.HttpServletRequest;\n+import java.io.IOException;\n+import java.net.URI;\n+import java.net.URISyntaxException;\n+\n+/**\n+ * Dummy storage in memory.\n+ */\n+public class DummyManagedBlobProvider extends DummyBlobProvider {\n+    @Override\n+    public URI getURI(ManagedBlob blob, BlobManager.UsageHint usage, HttpServletRequest servletRequest) throws IOException {\n+        URI uri = null;\n+        try {\n+            uri = new URI(usage.name());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4e47bc78891c4b50af48352dfbfdfe9c08dcdf42"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5MzQ2NTg2OnYy", "diffSide": "RIGHT", "path": "modules/platform/nuxeo-preview-core/src/test/resources/META-INF/MANIFEST.MF", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwODowMDowNlrOGrbIFg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQxMzoxODo1MlrOGrlhlA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODE4NjM5MA==", "bodyText": "Don't need this file, just deploy your test contrib with org.nuxeo.ecm.platform.preview:test-dummy-blob-provider.xml", "url": "https://github.com/nuxeo/nuxeo/pull/4191#discussion_r448186390", "createdAt": "2020-07-01T08:00:06Z", "author": {"login": "troger"}, "path": "modules/platform/nuxeo-preview-core/src/test/resources/META-INF/MANIFEST.MF", "diffHunk": "@@ -0,0 +1,4 @@\n+Manifest-Version: 1.0", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "86bb0a54922575919c4c367be023d12dd659ceb9"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODM1Njc1Ng==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/nuxeo/nuxeo/pull/4191#discussion_r448356756", "createdAt": "2020-07-01T13:18:52Z", "author": {"login": "nelsonsilva"}, "path": "modules/platform/nuxeo-preview-core/src/test/resources/META-INF/MANIFEST.MF", "diffHunk": "@@ -0,0 +1,4 @@\n+Manifest-Version: 1.0", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODE4NjM5MA=="}, "originalCommit": {"oid": "86bb0a54922575919c4c367be023d12dd659ceb9"}, "originalPosition": 1}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4093, "cost": 1, "resetAt": "2021-11-03T18:41:40Z"}}}