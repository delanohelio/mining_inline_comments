{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY4Mjg5MTk5", "number": 3706, "title": "fix-NXP-28560-catch-enrichers-exceptions", "bodyText": "PR created from https://qa.nuxeo.org/jenkins/job/TestAndPush/job/ondemand-testandpush-nalkotob/118/", "createdAt": "2020-01-28T23:02:26Z", "url": "https://github.com/nuxeo/nuxeo/pull/3706", "merged": true, "mergeCommit": {"oid": "c79799a8a6b277301387cb6d79abc270f4ea95a8"}, "closed": true, "closedAt": "2020-01-30T15:49:05Z", "author": {"login": "nuxeojenkins"}, "timelineItems": {"totalCount": 29, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb-6y7IgFqTM0OTc5NjA2Mg==", "endCursor": "Y3Vyc29yOnYyOpPPAAABb_cjR1AFqTM1MDkyODc1NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ5Nzk2MDYy", "url": "https://github.com/nuxeo/nuxeo/pull/3706#pullrequestreview-349796062", "createdAt": "2020-01-29T00:25:11Z", "commit": {"oid": "2224bcc5e6c1e708fad241070a1bd7dc62fb6dc6"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQwMDoyNToxMlrOFi5KuA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQwMDoyNzoyMlrOFi5M4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjEzMjUzNg==", "bodyText": "We format constants before fields.", "url": "https://github.com/nuxeo/nuxeo/pull/3706#discussion_r372132536", "createdAt": "2020-01-29T00:25:12Z", "author": {"login": "efge"}, "path": "nuxeo-core/nuxeo-core-io/src/main/java/org/nuxeo/ecm/core/io/marshallers/json/enrichers/AbstractJsonEnricher.java", "diffHunk": "@@ -37,10 +37,10 @@\n  */\n public abstract class AbstractJsonEnricher<EntityType> extends AbstractJsonWriter<Enriched<EntityType>> {\n \n-    public static final String ENTITY_ENRICHER_NAME = \"_EntityEnricherName\";\n-\n     private final String name;\n \n+    public static final String ENTITY_ENRICHER_NAME = \"_EntityEnricherName\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2224bcc5e6c1e708fad241070a1bd7dc62fb6dc6"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjEzMjc5NA==", "bodyText": "log.error(e, e) otherwise with what you wrote the stacktrace is not logged.\nAlso worth adding a // TODO collect exception and return it to the caller", "url": "https://github.com/nuxeo/nuxeo/pull/3706#discussion_r372132794", "createdAt": "2020-01-29T00:26:05Z", "author": {"login": "efge"}, "path": "nuxeo-core/nuxeo-core-io/src/main/java/org/nuxeo/ecm/core/io/marshallers/json/enrichers/AbstractJsonEnricher.java", "diffHunk": "@@ -51,8 +55,12 @@ public boolean accept(Class<?> clazz, Type genericType, MediaType mediatype) {\n     }\n \n     @Override\n-    public void write(Enriched<EntityType> enrichable, JsonGenerator jg) throws IOException {\n-        write(jg, enrichable.getEntity());\n+    public void write(Enriched<EntityType> enrichable, JsonGenerator jg) {\n+        try {\n+            write(jg, enrichable.getEntity());\n+        } catch (IOException e) {\n+            log.error(e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3ac5af9861f850c8bd10b20a20f557654c7dd6d1"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjEzMzA4OA==", "bodyText": "No need for try/catch, the test itself failing is enough (and more informative with respect to the exception).", "url": "https://github.com/nuxeo/nuxeo/pull/3706#discussion_r372133088", "createdAt": "2020-01-29T00:27:22Z", "author": {"login": "efge"}, "path": "nuxeo-features/rest-api/nuxeo-rest-api-test/src/test/java/org/nuxeo/ecm/restapi/test/enrichers/FailingEnricherTest.java", "diffHunk": "@@ -0,0 +1,67 @@\n+/*\n+ * (C) Copyright 2020 Nuxeo (http://nuxeo.com/) and others.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ * Contributors:\n+ *     Nour \"AIR\" AL KOTOB\n+ */\n+\n+package org.nuxeo.ecm.restapi.test.enrichers;\n+\n+import static org.junit.Assert.fail;\n+\n+import javax.inject.Inject;\n+\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.nuxeo.ecm.core.api.CoreSession;\n+import org.nuxeo.ecm.core.api.DocumentModel;\n+import org.nuxeo.ecm.core.api.PathRef;\n+import org.nuxeo.ecm.core.io.marshallers.json.AbstractJsonWriterTest;\n+import org.nuxeo.ecm.core.io.marshallers.json.document.DocumentModelJsonWriter;\n+import org.nuxeo.ecm.core.io.registry.context.RenderingContext.CtxBuilder;\n+import org.nuxeo.ecm.core.test.annotations.Granularity;\n+import org.nuxeo.ecm.core.test.annotations.RepositoryConfig;\n+import org.nuxeo.ecm.restapi.test.RestServerFeature;\n+import org.nuxeo.ecm.restapi.test.RestServerInit;\n+import org.nuxeo.runtime.test.runner.Deploy;\n+import org.nuxeo.runtime.test.runner.Features;\n+import org.nuxeo.runtime.test.runner.FeaturesRunner;\n+\n+@RunWith(FeaturesRunner.class)\n+@Features({ RestServerFeature.class })\n+@RepositoryConfig(cleanup = Granularity.METHOD, init = RestServerInit.class)\n+@Deploy(\"org.nuxeo.ecm.platform.restapi.test.test:enrichers-contrib.xml\")\n+public class FailingEnricherTest\n+        extends AbstractJsonWriterTest.External<DocumentModelJsonWriter, DocumentModel> {\n+\n+    public FailingEnricherTest() {\n+        super(DocumentModelJsonWriter.class, DocumentModel.class);\n+    }\n+\n+    @Inject\n+    private CoreSession session;\n+\n+    @Test\n+    public void test() {\n+        DocumentModel root = session.getDocument(new PathRef(\"/\"));\n+        // Use the given URL codec name\n+        try {\n+            jsonAssert(root, CtxBuilder.enrichDoc(\"failingEnricher\").get());\n+        } catch (Exception e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3ac5af9861f850c8bd10b20a20f557654c7dd6d1"}, "originalPosition": 62}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3ac5af9861f850c8bd10b20a20f557654c7dd6d1", "author": {"user": {"login": "NourNuxeo", "name": "Nour AL KOTOB"}}, "url": "https://github.com/nuxeo/nuxeo/commit/3ac5af9861f850c8bd10b20a20f557654c7dd6d1", "committedDate": "2020-01-28T18:21:15Z", "message": "NXP-28560: Catch AbstractJsonEnrichers IOException"}, "afterCommit": {"oid": "38db46c742bff93450e49f193783a15fac1dfe90", "author": {"user": {"login": "NourNuxeo", "name": "Nour AL KOTOB"}}, "url": "https://github.com/nuxeo/nuxeo/commit/38db46c742bff93450e49f193783a15fac1dfe90", "committedDate": "2020-01-29T05:10:49Z", "message": "NXP-28560: Catch AbstractJsonEnrichers IOException"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ec3ef27dd142f340e299f30fd7606ea5bf5a1348", "author": {"user": {"login": "NourNuxeo", "name": "Nour AL KOTOB"}}, "url": "https://github.com/nuxeo/nuxeo/commit/ec3ef27dd142f340e299f30fd7606ea5bf5a1348", "committedDate": "2020-01-29T05:29:04Z", "message": "NXP-28560: Cleanup / Format"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "38db46c742bff93450e49f193783a15fac1dfe90", "author": {"user": {"login": "NourNuxeo", "name": "Nour AL KOTOB"}}, "url": "https://github.com/nuxeo/nuxeo/commit/38db46c742bff93450e49f193783a15fac1dfe90", "committedDate": "2020-01-29T05:10:49Z", "message": "NXP-28560: Catch AbstractJsonEnrichers IOException"}, "afterCommit": {"oid": "56b7b2f521ec93011387a952fd1f4b24a2638693", "author": {"user": {"login": "NourNuxeo", "name": "Nour AL KOTOB"}}, "url": "https://github.com/nuxeo/nuxeo/commit/56b7b2f521ec93011387a952fd1f4b24a2638693", "committedDate": "2020-01-29T05:32:55Z", "message": "NXP-28560: catch AbstractJsonEnrichers IOException"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "56b7b2f521ec93011387a952fd1f4b24a2638693", "author": {"user": {"login": "NourNuxeo", "name": "Nour AL KOTOB"}}, "url": "https://github.com/nuxeo/nuxeo/commit/56b7b2f521ec93011387a952fd1f4b24a2638693", "committedDate": "2020-01-29T05:32:55Z", "message": "NXP-28560: catch AbstractJsonEnrichers IOException"}, "afterCommit": {"oid": "abb0fccaa54d5b16afbb32d2d930410f39a3cc90", "author": {"user": {"login": "NourNuxeo", "name": "Nour AL KOTOB"}}, "url": "https://github.com/nuxeo/nuxeo/commit/abb0fccaa54d5b16afbb32d2d930410f39a3cc90", "committedDate": "2020-01-29T05:35:03Z", "message": "NXP-28560: catch AbstractJsonEnrichers IOException"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "abb0fccaa54d5b16afbb32d2d930410f39a3cc90", "author": {"user": {"login": "NourNuxeo", "name": "Nour AL KOTOB"}}, "url": "https://github.com/nuxeo/nuxeo/commit/abb0fccaa54d5b16afbb32d2d930410f39a3cc90", "committedDate": "2020-01-29T05:35:03Z", "message": "NXP-28560: catch AbstractJsonEnrichers IOException"}, "afterCommit": {"oid": "f49760ab1d2175bb579eeb75706aba76b272a304", "author": {"user": {"login": "NourNuxeo", "name": "Nour AL KOTOB"}}, "url": "https://github.com/nuxeo/nuxeo/commit/f49760ab1d2175bb579eeb75706aba76b272a304", "committedDate": "2020-01-29T05:37:01Z", "message": "NXP-28560: catch AbstractJsonEnrichers IOException"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ5OTc0OTQx", "url": "https://github.com/nuxeo/nuxeo/pull/3706#pullrequestreview-349974941", "createdAt": "2020-01-29T09:45:48Z", "commit": {"oid": "f49760ab1d2175bb579eeb75706aba76b272a304"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQwOTo0NTo0OFrOFjCLbg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQwOTo0Nzo1MFrOFjCPnA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjI4MDE3NA==", "bodyText": "protected", "url": "https://github.com/nuxeo/nuxeo/pull/3706#discussion_r372280174", "createdAt": "2020-01-29T09:45:48Z", "author": {"login": "efge"}, "path": "nuxeo-features/rest-api/nuxeo-rest-api-test/src/test/java/org/nuxeo/ecm/restapi/test/enrichers/FailingEnricherTest.java", "diffHunk": "@@ -0,0 +1,76 @@\n+/*\n+ * (C) Copyright 2020 Nuxeo (http://nuxeo.com/) and others.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ * Contributors:\n+ *     Nour \"AIR\" AL KOTOB\n+ */\n+\n+package org.nuxeo.ecm.restapi.test.enrichers;\n+\n+import static org.junit.Assert.assertEquals;\n+\n+import java.io.IOException;\n+import java.util.List;\n+\n+import javax.inject.Inject;\n+\n+import org.apache.logging.log4j.core.LogEvent;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.nuxeo.ecm.core.api.CoreSession;\n+import org.nuxeo.ecm.core.api.DocumentModel;\n+import org.nuxeo.ecm.core.api.PathRef;\n+import org.nuxeo.ecm.core.io.marshallers.json.AbstractJsonWriterTest;\n+import org.nuxeo.ecm.core.io.marshallers.json.document.DocumentModelJsonWriter;\n+import org.nuxeo.ecm.core.io.registry.context.RenderingContext.CtxBuilder;\n+import org.nuxeo.ecm.core.test.annotations.Granularity;\n+import org.nuxeo.ecm.core.test.annotations.RepositoryConfig;\n+import org.nuxeo.ecm.restapi.test.RestServerFeature;\n+import org.nuxeo.ecm.restapi.test.RestServerInit;\n+import org.nuxeo.runtime.test.runner.Deploy;\n+import org.nuxeo.runtime.test.runner.Features;\n+import org.nuxeo.runtime.test.runner.FeaturesRunner;\n+import org.nuxeo.runtime.test.runner.LogCaptureFeature;\n+\n+@RunWith(FeaturesRunner.class)\n+@Features({ LogCaptureFeature.class, RestServerFeature.class })\n+@RepositoryConfig(cleanup = Granularity.METHOD, init = RestServerInit.class)\n+@Deploy(\"org.nuxeo.ecm.platform.restapi.test.test:enrichers-contrib.xml\")\n+public class FailingEnricherTest\n+        extends AbstractJsonWriterTest.External<DocumentModelJsonWriter, DocumentModel> {\n+\n+    @Inject\n+    protected LogCaptureFeature.Result logCaptureResult;\n+\n+    public FailingEnricherTest() {\n+        super(DocumentModelJsonWriter.class, DocumentModel.class);\n+    }\n+\n+    @Inject\n+    private CoreSession session;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f49760ab1d2175bb579eeb75706aba76b272a304"}, "originalPosition": 62}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjI4MTI0NA==", "bodyText": "session.getRootDocument()", "url": "https://github.com/nuxeo/nuxeo/pull/3706#discussion_r372281244", "createdAt": "2020-01-29T09:47:50Z", "author": {"login": "efge"}, "path": "nuxeo-features/rest-api/nuxeo-rest-api-test/src/test/java/org/nuxeo/ecm/restapi/test/enrichers/FailingEnricherTest.java", "diffHunk": "@@ -0,0 +1,76 @@\n+/*\n+ * (C) Copyright 2020 Nuxeo (http://nuxeo.com/) and others.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ * Contributors:\n+ *     Nour \"AIR\" AL KOTOB\n+ */\n+\n+package org.nuxeo.ecm.restapi.test.enrichers;\n+\n+import static org.junit.Assert.assertEquals;\n+\n+import java.io.IOException;\n+import java.util.List;\n+\n+import javax.inject.Inject;\n+\n+import org.apache.logging.log4j.core.LogEvent;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.nuxeo.ecm.core.api.CoreSession;\n+import org.nuxeo.ecm.core.api.DocumentModel;\n+import org.nuxeo.ecm.core.api.PathRef;\n+import org.nuxeo.ecm.core.io.marshallers.json.AbstractJsonWriterTest;\n+import org.nuxeo.ecm.core.io.marshallers.json.document.DocumentModelJsonWriter;\n+import org.nuxeo.ecm.core.io.registry.context.RenderingContext.CtxBuilder;\n+import org.nuxeo.ecm.core.test.annotations.Granularity;\n+import org.nuxeo.ecm.core.test.annotations.RepositoryConfig;\n+import org.nuxeo.ecm.restapi.test.RestServerFeature;\n+import org.nuxeo.ecm.restapi.test.RestServerInit;\n+import org.nuxeo.runtime.test.runner.Deploy;\n+import org.nuxeo.runtime.test.runner.Features;\n+import org.nuxeo.runtime.test.runner.FeaturesRunner;\n+import org.nuxeo.runtime.test.runner.LogCaptureFeature;\n+\n+@RunWith(FeaturesRunner.class)\n+@Features({ LogCaptureFeature.class, RestServerFeature.class })\n+@RepositoryConfig(cleanup = Granularity.METHOD, init = RestServerInit.class)\n+@Deploy(\"org.nuxeo.ecm.platform.restapi.test.test:enrichers-contrib.xml\")\n+public class FailingEnricherTest\n+        extends AbstractJsonWriterTest.External<DocumentModelJsonWriter, DocumentModel> {\n+\n+    @Inject\n+    protected LogCaptureFeature.Result logCaptureResult;\n+\n+    public FailingEnricherTest() {\n+        super(DocumentModelJsonWriter.class, DocumentModel.class);\n+    }\n+\n+    @Inject\n+    private CoreSession session;\n+\n+    @LogCaptureFeature.FilterOn(logLevel = \"ERROR\")\n+    @Test\n+    public void test() throws IOException {\n+        DocumentModel root = session.getDocument(new PathRef(\"/\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f49760ab1d2175bb579eeb75706aba76b272a304"}, "originalPosition": 67}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f49760ab1d2175bb579eeb75706aba76b272a304", "author": {"user": {"login": "NourNuxeo", "name": "Nour AL KOTOB"}}, "url": "https://github.com/nuxeo/nuxeo/commit/f49760ab1d2175bb579eeb75706aba76b272a304", "committedDate": "2020-01-29T05:37:01Z", "message": "NXP-28560: catch AbstractJsonEnrichers IOException"}, "afterCommit": {"oid": "e11acf0e6cbf9336c495cfa6fe28431aa976ae07", "author": {"user": {"login": "NourNuxeo", "name": "Nour AL KOTOB"}}, "url": "https://github.com/nuxeo/nuxeo/commit/e11acf0e6cbf9336c495cfa6fe28431aa976ae07", "committedDate": "2020-01-29T09:58:07Z", "message": "NXP-28560: catch AbstractJsonEnrichers IOException"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ5OTgyMDA4", "url": "https://github.com/nuxeo/nuxeo/pull/3706#pullrequestreview-349982008", "createdAt": "2020-01-29T09:56:14Z", "commit": {"oid": "f49760ab1d2175bb579eeb75706aba76b272a304"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQwOTo1NjoxNFrOFjChGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQxMDoxNToyMVrOFjDHWg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjI4NTcyMw==", "bodyText": "What if the enricher throws another exception than IOException? For instance a NuxeoException?\nI think you need to deal with catching Exception and follows https://doc.nuxeo.com/corg/catching-exceptions/#calling-something-declared-as-throws-exception about InterruptedException.\nI don't think catching IOException and NuxeoException only is enough here, WDYT @efge ?", "url": "https://github.com/nuxeo/nuxeo/pull/3706#discussion_r372285723", "createdAt": "2020-01-29T09:56:14Z", "author": {"login": "troger"}, "path": "nuxeo-core/nuxeo-core-io/src/main/java/org/nuxeo/ecm/core/io/marshallers/json/enrichers/AbstractJsonEnricher.java", "diffHunk": "@@ -51,8 +55,13 @@ public boolean accept(Class<?> clazz, Type genericType, MediaType mediatype) {\n     }\n \n     @Override\n-    public void write(Enriched<EntityType> enrichable, JsonGenerator jg) throws IOException {\n-        write(jg, enrichable.getEntity());\n+    public void write(Enriched<EntityType> enrichable, JsonGenerator jg) {\n+        try {\n+            write(jg, enrichable.getEntity());\n+        } catch (IOException e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f49760ab1d2175bb579eeb75706aba76b272a304"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjI4NzM3Ng==", "bodyText": "Use FailingEnricher.NAME.", "url": "https://github.com/nuxeo/nuxeo/pull/3706#discussion_r372287376", "createdAt": "2020-01-29T09:59:21Z", "author": {"login": "troger"}, "path": "nuxeo-features/rest-api/nuxeo-rest-api-test/src/test/java/org/nuxeo/ecm/restapi/test/enrichers/FailingEnricherTest.java", "diffHunk": "@@ -0,0 +1,76 @@\n+/*\n+ * (C) Copyright 2020 Nuxeo (http://nuxeo.com/) and others.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ * Contributors:\n+ *     Nour \"AIR\" AL KOTOB\n+ */\n+\n+package org.nuxeo.ecm.restapi.test.enrichers;\n+\n+import static org.junit.Assert.assertEquals;\n+\n+import java.io.IOException;\n+import java.util.List;\n+\n+import javax.inject.Inject;\n+\n+import org.apache.logging.log4j.core.LogEvent;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.nuxeo.ecm.core.api.CoreSession;\n+import org.nuxeo.ecm.core.api.DocumentModel;\n+import org.nuxeo.ecm.core.api.PathRef;\n+import org.nuxeo.ecm.core.io.marshallers.json.AbstractJsonWriterTest;\n+import org.nuxeo.ecm.core.io.marshallers.json.document.DocumentModelJsonWriter;\n+import org.nuxeo.ecm.core.io.registry.context.RenderingContext.CtxBuilder;\n+import org.nuxeo.ecm.core.test.annotations.Granularity;\n+import org.nuxeo.ecm.core.test.annotations.RepositoryConfig;\n+import org.nuxeo.ecm.restapi.test.RestServerFeature;\n+import org.nuxeo.ecm.restapi.test.RestServerInit;\n+import org.nuxeo.runtime.test.runner.Deploy;\n+import org.nuxeo.runtime.test.runner.Features;\n+import org.nuxeo.runtime.test.runner.FeaturesRunner;\n+import org.nuxeo.runtime.test.runner.LogCaptureFeature;\n+\n+@RunWith(FeaturesRunner.class)\n+@Features({ LogCaptureFeature.class, RestServerFeature.class })\n+@RepositoryConfig(cleanup = Granularity.METHOD, init = RestServerInit.class)\n+@Deploy(\"org.nuxeo.ecm.platform.restapi.test.test:enrichers-contrib.xml\")\n+public class FailingEnricherTest\n+        extends AbstractJsonWriterTest.External<DocumentModelJsonWriter, DocumentModel> {\n+\n+    @Inject\n+    protected LogCaptureFeature.Result logCaptureResult;\n+\n+    public FailingEnricherTest() {\n+        super(DocumentModelJsonWriter.class, DocumentModel.class);\n+    }\n+\n+    @Inject\n+    protected CoreSession session;\n+\n+    @LogCaptureFeature.FilterOn(logLevel = \"ERROR\")\n+    @Test\n+    public void test() throws IOException {\n+        DocumentModel root = session.getRootDocument();\n+        // shouldn't throw\n+        jsonAssert(root, CtxBuilder.enrichDoc(\"failingEnricher\").get());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e11acf0e6cbf9336c495cfa6fe28431aa976ae07"}, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjI4ODY2MA==", "bodyText": "This test should go to nuxeo-core-test module with other enricher tests.", "url": "https://github.com/nuxeo/nuxeo/pull/3706#discussion_r372288660", "createdAt": "2020-01-29T10:01:50Z", "author": {"login": "troger"}, "path": "nuxeo-features/rest-api/nuxeo-rest-api-test/src/test/java/org/nuxeo/ecm/restapi/test/enrichers/FailingEnricherTest.java", "diffHunk": "@@ -0,0 +1,76 @@\n+/*\n+ * (C) Copyright 2020 Nuxeo (http://nuxeo.com/) and others.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ * Contributors:\n+ *     Nour \"AIR\" AL KOTOB\n+ */\n+\n+package org.nuxeo.ecm.restapi.test.enrichers;\n+\n+import static org.junit.Assert.assertEquals;\n+\n+import java.io.IOException;\n+import java.util.List;\n+\n+import javax.inject.Inject;\n+\n+import org.apache.logging.log4j.core.LogEvent;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.nuxeo.ecm.core.api.CoreSession;\n+import org.nuxeo.ecm.core.api.DocumentModel;\n+import org.nuxeo.ecm.core.api.PathRef;\n+import org.nuxeo.ecm.core.io.marshallers.json.AbstractJsonWriterTest;\n+import org.nuxeo.ecm.core.io.marshallers.json.document.DocumentModelJsonWriter;\n+import org.nuxeo.ecm.core.io.registry.context.RenderingContext.CtxBuilder;\n+import org.nuxeo.ecm.core.test.annotations.Granularity;\n+import org.nuxeo.ecm.core.test.annotations.RepositoryConfig;\n+import org.nuxeo.ecm.restapi.test.RestServerFeature;\n+import org.nuxeo.ecm.restapi.test.RestServerInit;\n+import org.nuxeo.runtime.test.runner.Deploy;\n+import org.nuxeo.runtime.test.runner.Features;\n+import org.nuxeo.runtime.test.runner.FeaturesRunner;\n+import org.nuxeo.runtime.test.runner.LogCaptureFeature;\n+\n+@RunWith(FeaturesRunner.class)\n+@Features({ LogCaptureFeature.class, RestServerFeature.class })\n+@RepositoryConfig(cleanup = Granularity.METHOD, init = RestServerInit.class)\n+@Deploy(\"org.nuxeo.ecm.platform.restapi.test.test:enrichers-contrib.xml\")\n+public class FailingEnricherTest", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e11acf0e6cbf9336c495cfa6fe28431aa976ae07"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjI5NTIzOA==", "bodyText": "I would have put a more meaningful message here, such as \"Simulated exception for test purpose\".", "url": "https://github.com/nuxeo/nuxeo/pull/3706#discussion_r372295238", "createdAt": "2020-01-29T10:14:54Z", "author": {"login": "troger"}, "path": "nuxeo-features/rest-api/nuxeo-rest-api-test/src/test/java/org/nuxeo/ecm/restapi/test/enrichers/FailingEnricher.java", "diffHunk": "@@ -0,0 +1,46 @@\n+/*\n+ * (C) Copyright 2020 Nuxeo (http://nuxeo.com/) and others.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ * Contributors:\n+ *     Nour AL KOTOB\n+ */\n+\n+package org.nuxeo.ecm.restapi.test.enrichers;\n+\n+import static org.nuxeo.ecm.core.io.registry.reflect.Instantiations.SINGLETON;\n+import static org.nuxeo.ecm.core.io.registry.reflect.Priorities.REFERENCE;\n+\n+import java.io.IOException;\n+\n+import org.nuxeo.ecm.core.api.DocumentModel;\n+import org.nuxeo.ecm.core.io.marshallers.json.enrichers.AbstractJsonEnricher;\n+import org.nuxeo.ecm.core.io.registry.reflect.Setup;\n+\n+import com.fasterxml.jackson.core.JsonGenerator;\n+\n+@Setup(mode = SINGLETON, priority = REFERENCE)\n+public class FailingEnricher extends AbstractJsonEnricher<DocumentModel> {\n+\n+    public static final String NAME = \"failingEnricher\";\n+\n+    public FailingEnricher() {\n+        super(NAME);\n+    }\n+\n+    @Override\n+    public void write(JsonGenerator jg, DocumentModel enriched) throws IOException {\n+        throw new IOException(\"oh yeah!\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e11acf0e6cbf9336c495cfa6fe28431aa976ae07"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjI5NTUxNA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             *     Nour \"AIR\" AL KOTOB\n          \n          \n            \n             *     Nour AL KOTOB\n          \n      \n    \n    \n  \n\n? \ud83d\ude04", "url": "https://github.com/nuxeo/nuxeo/pull/3706#discussion_r372295514", "createdAt": "2020-01-29T10:15:21Z", "author": {"login": "troger"}, "path": "nuxeo-features/rest-api/nuxeo-rest-api-test/src/test/java/org/nuxeo/ecm/restapi/test/enrichers/FailingEnricherTest.java", "diffHunk": "@@ -0,0 +1,76 @@\n+/*\n+ * (C) Copyright 2020 Nuxeo (http://nuxeo.com/) and others.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ * Contributors:\n+ *     Nour \"AIR\" AL KOTOB", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e11acf0e6cbf9336c495cfa6fe28431aa976ae07"}, "originalPosition": 17}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e11acf0e6cbf9336c495cfa6fe28431aa976ae07", "author": {"user": {"login": "NourNuxeo", "name": "Nour AL KOTOB"}}, "url": "https://github.com/nuxeo/nuxeo/commit/e11acf0e6cbf9336c495cfa6fe28431aa976ae07", "committedDate": "2020-01-29T09:58:07Z", "message": "NXP-28560: catch AbstractJsonEnrichers IOException"}, "afterCommit": {"oid": "63087b912b4ca85ebb6303a09bce43e25aac00bb", "author": {"user": {"login": "NourNuxeo", "name": "Nour AL KOTOB"}}, "url": "https://github.com/nuxeo/nuxeo/commit/63087b912b4ca85ebb6303a09bce43e25aac00bb", "committedDate": "2020-01-29T11:03:39Z", "message": "NXP-28560: catch AbstractJsonEnrichers IOException"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "63087b912b4ca85ebb6303a09bce43e25aac00bb", "author": {"user": {"login": "NourNuxeo", "name": "Nour AL KOTOB"}}, "url": "https://github.com/nuxeo/nuxeo/commit/63087b912b4ca85ebb6303a09bce43e25aac00bb", "committedDate": "2020-01-29T11:03:39Z", "message": "NXP-28560: catch AbstractJsonEnrichers IOException"}, "afterCommit": {"oid": "5dee2faaad120cfc6ff22b6c80320755a4e1313a", "author": {"user": {"login": "NourNuxeo", "name": "Nour AL KOTOB"}}, "url": "https://github.com/nuxeo/nuxeo/commit/5dee2faaad120cfc6ff22b6c80320755a4e1313a", "committedDate": "2020-01-29T11:04:39Z", "message": "NXP-28560: catch AbstractJsonEnrichers Exception"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5dee2faaad120cfc6ff22b6c80320755a4e1313a", "author": {"user": {"login": "NourNuxeo", "name": "Nour AL KOTOB"}}, "url": "https://github.com/nuxeo/nuxeo/commit/5dee2faaad120cfc6ff22b6c80320755a4e1313a", "committedDate": "2020-01-29T11:04:39Z", "message": "NXP-28560: catch AbstractJsonEnrichers Exception"}, "afterCommit": {"oid": "7ccf3bf835ec45a24f3d0b3f3d5d8a71395d3fdc", "author": {"user": {"login": "NourNuxeo", "name": "Nour AL KOTOB"}}, "url": "https://github.com/nuxeo/nuxeo/commit/7ccf3bf835ec45a24f3d0b3f3d5d8a71395d3fdc", "committedDate": "2020-01-29T11:12:28Z", "message": "NXP-28560: catch AbstractJsonEnrichers Exception"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUwMDMwOTMz", "url": "https://github.com/nuxeo/nuxeo/pull/3706#pullrequestreview-350030933", "createdAt": "2020-01-29T11:17:20Z", "commit": {"oid": "7ccf3bf835ec45a24f3d0b3f3d5d8a71395d3fdc"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQxMToxNzoyMVrOFjE4RA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQxMToxNzoyMVrOFjE4RA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjMyNDQyMA==", "bodyText": "If you receive an InterruptedException you must stop processing immediately, so throw new RuntimeException(\"interrupted\", e). Again, please read the doc https://doc.nuxeo.com/corg/catching-exceptions/#calling-something-declared-as-throws-exception", "url": "https://github.com/nuxeo/nuxeo/pull/3706#discussion_r372324420", "createdAt": "2020-01-29T11:17:21Z", "author": {"login": "efge"}, "path": "nuxeo-core/nuxeo-core-io/src/main/java/org/nuxeo/ecm/core/io/marshallers/json/enrichers/AbstractJsonEnricher.java", "diffHunk": "@@ -51,8 +55,16 @@ public boolean accept(Class<?> clazz, Type genericType, MediaType mediatype) {\n     }\n \n     @Override\n-    public void write(Enriched<EntityType> enrichable, JsonGenerator jg) throws IOException {\n-        write(jg, enrichable.getEntity());\n+    public void write(Enriched<EntityType> enrichable, JsonGenerator jg) {\n+        try {\n+            write(jg, enrichable.getEntity());\n+        } catch (Exception e) {\n+            if (e instanceof InterruptedException) {\n+                Thread.currentThread().interrupt();\n+            }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7ccf3bf835ec45a24f3d0b3f3d5d8a71395d3fdc"}, "originalPosition": 37}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7ccf3bf835ec45a24f3d0b3f3d5d8a71395d3fdc", "author": {"user": {"login": "NourNuxeo", "name": "Nour AL KOTOB"}}, "url": "https://github.com/nuxeo/nuxeo/commit/7ccf3bf835ec45a24f3d0b3f3d5d8a71395d3fdc", "committedDate": "2020-01-29T11:12:28Z", "message": "NXP-28560: catch AbstractJsonEnrichers Exception"}, "afterCommit": {"oid": "d3a7672b45d0ec91e1e802dd8cab54aaa7b37581", "author": {"user": {"login": "NourNuxeo", "name": "Nour AL KOTOB"}}, "url": "https://github.com/nuxeo/nuxeo/commit/d3a7672b45d0ec91e1e802dd8cab54aaa7b37581", "committedDate": "2020-01-29T11:49:03Z", "message": "NXP-28560: catch AbstractJsonEnrichers Exception"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d3a7672b45d0ec91e1e802dd8cab54aaa7b37581", "author": {"user": {"login": "NourNuxeo", "name": "Nour AL KOTOB"}}, "url": "https://github.com/nuxeo/nuxeo/commit/d3a7672b45d0ec91e1e802dd8cab54aaa7b37581", "committedDate": "2020-01-29T11:49:03Z", "message": "NXP-28560: catch AbstractJsonEnrichers Exception"}, "afterCommit": {"oid": "a8a4c60f39a3ce9b4d18b3e3bff5dd489d97f4f5", "author": {"user": {"login": "NourNuxeo", "name": "Nour AL KOTOB"}}, "url": "https://github.com/nuxeo/nuxeo/commit/a8a4c60f39a3ce9b4d18b3e3bff5dd489d97f4f5", "committedDate": "2020-01-29T12:10:12Z", "message": "NXP-28560: catch AbstractJsonEnrichers Exception"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUwMDc4MDkz", "url": "https://github.com/nuxeo/nuxeo/pull/3706#pullrequestreview-350078093", "createdAt": "2020-01-29T12:45:27Z", "commit": {"oid": "a8a4c60f39a3ce9b4d18b3e3bff5dd489d97f4f5"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUwMTEyNzE5", "url": "https://github.com/nuxeo/nuxeo/pull/3706#pullrequestreview-350112719", "createdAt": "2020-01-29T13:42:33Z", "commit": {"oid": "a8a4c60f39a3ce9b4d18b3e3bff5dd489d97f4f5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQxMzo0MjozM1rOFjIwdA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQxMzo0MjozM1rOFjIwdA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjM4Nzk1Ng==", "bodyText": "This class seems not formatted correctly.", "url": "https://github.com/nuxeo/nuxeo/pull/3706#discussion_r372387956", "createdAt": "2020-01-29T13:42:33Z", "author": {"login": "troger"}, "path": "nuxeo-core/nuxeo-core-test/src/test/java/org/nuxeo/ecm/core/io/marshallers/json/enrichers/FailingEnricherTest.java", "diffHunk": "@@ -0,0 +1,71 @@\n+/*\n+ * (C) Copyright 2020 Nuxeo (http://nuxeo.com/) and others.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ * Contributors:\n+ *     Nour AL KOTOB\n+ */\n+\n+package org.nuxeo.ecm.core.io.marshallers.json.enrichers;\n+\n+import static org.junit.Assert.assertEquals;\n+\n+import java.io.IOException;\n+import java.util.List;\n+\n+import javax.inject.Inject;\n+\n+import org.apache.logging.log4j.core.LogEvent;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.nuxeo.ecm.core.api.CoreSession;\n+import org.nuxeo.ecm.core.api.DocumentModel;\n+import org.nuxeo.ecm.core.io.marshallers.json.AbstractJsonWriterTest;\n+import org.nuxeo.ecm.core.io.marshallers.json.document.DocumentModelJsonWriter;\n+import org.nuxeo.ecm.core.io.registry.context.RenderingContext.CtxBuilder;\n+import org.nuxeo.ecm.core.test.CoreFeature;\n+import org.nuxeo.runtime.test.runner.Deploy;\n+import org.nuxeo.runtime.test.runner.Features;\n+import org.nuxeo.runtime.test.runner.FeaturesRunner;\n+import org.nuxeo.runtime.test.runner.LogCaptureFeature;\n+\n+@RunWith(FeaturesRunner.class)\n+@Features({ LogCaptureFeature.class, CoreFeature.class })\n+@Deploy(\"org.nuxeo.ecm.core.test.tests:enrichers-contrib.xml\")\n+public class FailingEnricherTest", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a8a4c60f39a3ce9b4d18b3e3bff5dd489d97f4f5"}, "originalPosition": 46}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a8a4c60f39a3ce9b4d18b3e3bff5dd489d97f4f5", "author": {"user": {"login": "NourNuxeo", "name": "Nour AL KOTOB"}}, "url": "https://github.com/nuxeo/nuxeo/commit/a8a4c60f39a3ce9b4d18b3e3bff5dd489d97f4f5", "committedDate": "2020-01-29T12:10:12Z", "message": "NXP-28560: catch AbstractJsonEnrichers Exception"}, "afterCommit": {"oid": "0db60b2cd5acb9e4e7ce788f1b55e8d6683441d2", "author": {"user": {"login": "NourNuxeo", "name": "Nour AL KOTOB"}}, "url": "https://github.com/nuxeo/nuxeo/commit/0db60b2cd5acb9e4e7ce788f1b55e8d6683441d2", "committedDate": "2020-01-29T13:45:02Z", "message": "NXP-28560: catch AbstractJsonEnrichers Exception"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUwMTU3MjI0", "url": "https://github.com/nuxeo/nuxeo/pull/3706#pullrequestreview-350157224", "createdAt": "2020-01-29T14:42:17Z", "commit": {"oid": "0db60b2cd5acb9e4e7ce788f1b55e8d6683441d2"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUwNzEwOTQ2", "url": "https://github.com/nuxeo/nuxeo/pull/3706#pullrequestreview-350710946", "createdAt": "2020-01-30T10:15:23Z", "commit": {"oid": "0db60b2cd5acb9e4e7ce788f1b55e8d6683441d2"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQxMDoxNToyM1rOFjluxQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQxMDoxNToyM1rOFjluxQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mjg2MjY2MQ==", "bodyText": "Thinking of it, I would log it at INFO or DEBUG level. Not sure it's a good idea to fill the server logs with errors when doing calls asking for an enricher that fails.\nLooking at the initial issue NXP-28047, it seems legitimate to me to define a set of enrichers used for all calls of an application, even if they should not be applicable for all calls.\nWDYT @kevinleturc @efge ?", "url": "https://github.com/nuxeo/nuxeo/pull/3706#discussion_r372862661", "createdAt": "2020-01-30T10:15:23Z", "author": {"login": "troger"}, "path": "nuxeo-core/nuxeo-core-io/src/main/java/org/nuxeo/ecm/core/io/marshallers/json/enrichers/AbstractJsonEnricher.java", "diffHunk": "@@ -51,8 +55,18 @@ public boolean accept(Class<?> clazz, Type genericType, MediaType mediatype) {\n     }\n \n     @Override\n-    public void write(Enriched<EntityType> enrichable, JsonGenerator jg) throws IOException {\n-        write(jg, enrichable.getEntity());\n+    public void write(Enriched<EntityType> enrichable, JsonGenerator jg) {\n+        try {\n+            write(jg, enrichable.getEntity());\n+        } catch (Exception e) {\n+            if (e instanceof InterruptedException) {\n+                Thread.currentThread().interrupt();\n+                throw new RuntimeException(\"interrupted\", e); // NOSONAR\n+            } else {\n+                // TODO collect exception and return it to the caller\n+                log.error(e, e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0db60b2cd5acb9e4e7ce788f1b55e8d6683441d2"}, "originalPosition": 40}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUwODI2MDQ0", "url": "https://github.com/nuxeo/nuxeo/pull/3706#pullrequestreview-350826044", "createdAt": "2020-01-30T13:37:42Z", "commit": {"oid": "0db60b2cd5acb9e4e7ce788f1b55e8d6683441d2"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQxMzozNzo0M1rOFjrHIA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQxMzo0Mjo1NFrOFjrRow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mjk1MDgxNg==", "bodyText": "You could use this:\norg.nuxeo.common.utils.ExceptionUtils.checkInterrupt(e);\nand get rid of these three lines + if / else.", "url": "https://github.com/nuxeo/nuxeo/pull/3706#discussion_r372950816", "createdAt": "2020-01-30T13:37:43Z", "author": {"login": "kevinleturc"}, "path": "nuxeo-core/nuxeo-core-io/src/main/java/org/nuxeo/ecm/core/io/marshallers/json/enrichers/AbstractJsonEnricher.java", "diffHunk": "@@ -51,8 +55,18 @@ public boolean accept(Class<?> clazz, Type genericType, MediaType mediatype) {\n     }\n \n     @Override\n-    public void write(Enriched<EntityType> enrichable, JsonGenerator jg) throws IOException {\n-        write(jg, enrichable.getEntity());\n+    public void write(Enriched<EntityType> enrichable, JsonGenerator jg) {\n+        try {\n+            write(jg, enrichable.getEntity());\n+        } catch (Exception e) {\n+            if (e instanceof InterruptedException) {\n+                Thread.currentThread().interrupt();\n+                throw new RuntimeException(\"interrupted\", e); // NOSONAR", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0db60b2cd5acb9e4e7ce788f1b55e8d6683441d2"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mjk1Mjg1MQ==", "bodyText": "Could you re-organise the fields, methods and constructor? We're currently having a field, then the constructor then another field.\nFurthermore, for a reading aspect, I would put @Test before @LogCaptureFeature.FilterOn.", "url": "https://github.com/nuxeo/nuxeo/pull/3706#discussion_r372952851", "createdAt": "2020-01-30T13:41:40Z", "author": {"login": "kevinleturc"}, "path": "nuxeo-core/nuxeo-core-test/src/test/java/org/nuxeo/ecm/core/io/marshallers/json/enrichers/FailingEnricherTest.java", "diffHunk": "@@ -0,0 +1,71 @@\n+/*\n+ * (C) Copyright 2020 Nuxeo (http://nuxeo.com/) and others.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ * Contributors:\n+ *     Nour AL KOTOB\n+ */\n+\n+package org.nuxeo.ecm.core.io.marshallers.json.enrichers;\n+\n+import static org.junit.Assert.assertEquals;\n+\n+import java.io.IOException;\n+import java.util.List;\n+\n+import javax.inject.Inject;\n+\n+import org.apache.logging.log4j.core.LogEvent;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.nuxeo.ecm.core.api.CoreSession;\n+import org.nuxeo.ecm.core.api.DocumentModel;\n+import org.nuxeo.ecm.core.io.marshallers.json.AbstractJsonWriterTest;\n+import org.nuxeo.ecm.core.io.marshallers.json.document.DocumentModelJsonWriter;\n+import org.nuxeo.ecm.core.io.registry.context.RenderingContext.CtxBuilder;\n+import org.nuxeo.ecm.core.test.CoreFeature;\n+import org.nuxeo.runtime.test.runner.Deploy;\n+import org.nuxeo.runtime.test.runner.Features;\n+import org.nuxeo.runtime.test.runner.FeaturesRunner;\n+import org.nuxeo.runtime.test.runner.LogCaptureFeature;\n+\n+@RunWith(FeaturesRunner.class)\n+@Features({ LogCaptureFeature.class, CoreFeature.class })\n+@Deploy(\"org.nuxeo.ecm.core.test.tests:enrichers-contrib.xml\")\n+public class FailingEnricherTest extends AbstractJsonWriterTest.External<DocumentModelJsonWriter, DocumentModel> {\n+\n+    @Inject\n+    protected LogCaptureFeature.Result logCaptureResult;\n+\n+    public FailingEnricherTest() {\n+        super(DocumentModelJsonWriter.class, DocumentModel.class);\n+    }\n+\n+    @Inject\n+    protected CoreSession session;\n+\n+    @LogCaptureFeature.FilterOn(logLevel = \"ERROR\")\n+    @Test\n+    public void test() throws IOException {\n+        DocumentModel root = session.getRootDocument();\n+        // shouldn't throw\n+        jsonAssert(root, CtxBuilder.enrichDoc(FailingEnricher.NAME).get());\n+        List<LogEvent> caughtEvents = logCaptureResult.getCaughtEvents();\n+        // should log an error\n+        assertEquals(1, caughtEvents.size());\n+        assertEquals(\"java.io.IOException: Simulated exception for test purpose\",\n+                caughtEvents.get(0).getMessage().toString());\n+    }\n+\n+}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0db60b2cd5acb9e4e7ce788f1b55e8d6683441d2"}, "originalPosition": 71}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mjk1MzUwNw==", "bodyText": "Could you use LogCaptureFeature.Result#getCaughtEventMessages for these assertions?", "url": "https://github.com/nuxeo/nuxeo/pull/3706#discussion_r372953507", "createdAt": "2020-01-30T13:42:54Z", "author": {"login": "kevinleturc"}, "path": "nuxeo-core/nuxeo-core-test/src/test/java/org/nuxeo/ecm/core/io/marshallers/json/enrichers/FailingEnricherTest.java", "diffHunk": "@@ -0,0 +1,71 @@\n+/*\n+ * (C) Copyright 2020 Nuxeo (http://nuxeo.com/) and others.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ * Contributors:\n+ *     Nour AL KOTOB\n+ */\n+\n+package org.nuxeo.ecm.core.io.marshallers.json.enrichers;\n+\n+import static org.junit.Assert.assertEquals;\n+\n+import java.io.IOException;\n+import java.util.List;\n+\n+import javax.inject.Inject;\n+\n+import org.apache.logging.log4j.core.LogEvent;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.nuxeo.ecm.core.api.CoreSession;\n+import org.nuxeo.ecm.core.api.DocumentModel;\n+import org.nuxeo.ecm.core.io.marshallers.json.AbstractJsonWriterTest;\n+import org.nuxeo.ecm.core.io.marshallers.json.document.DocumentModelJsonWriter;\n+import org.nuxeo.ecm.core.io.registry.context.RenderingContext.CtxBuilder;\n+import org.nuxeo.ecm.core.test.CoreFeature;\n+import org.nuxeo.runtime.test.runner.Deploy;\n+import org.nuxeo.runtime.test.runner.Features;\n+import org.nuxeo.runtime.test.runner.FeaturesRunner;\n+import org.nuxeo.runtime.test.runner.LogCaptureFeature;\n+\n+@RunWith(FeaturesRunner.class)\n+@Features({ LogCaptureFeature.class, CoreFeature.class })\n+@Deploy(\"org.nuxeo.ecm.core.test.tests:enrichers-contrib.xml\")\n+public class FailingEnricherTest extends AbstractJsonWriterTest.External<DocumentModelJsonWriter, DocumentModel> {\n+\n+    @Inject\n+    protected LogCaptureFeature.Result logCaptureResult;\n+\n+    public FailingEnricherTest() {\n+        super(DocumentModelJsonWriter.class, DocumentModel.class);\n+    }\n+\n+    @Inject\n+    protected CoreSession session;\n+\n+    @LogCaptureFeature.FilterOn(logLevel = \"ERROR\")\n+    @Test\n+    public void test() throws IOException {\n+        DocumentModel root = session.getRootDocument();\n+        // shouldn't throw\n+        jsonAssert(root, CtxBuilder.enrichDoc(FailingEnricher.NAME).get());\n+        List<LogEvent> caughtEvents = logCaptureResult.getCaughtEvents();\n+        // should log an error\n+        assertEquals(1, caughtEvents.size());\n+        assertEquals(\"java.io.IOException: Simulated exception for test purpose\",\n+                caughtEvents.get(0).getMessage().toString());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0db60b2cd5acb9e4e7ce788f1b55e8d6683441d2"}, "originalPosition": 68}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0db60b2cd5acb9e4e7ce788f1b55e8d6683441d2", "author": {"user": {"login": "NourNuxeo", "name": "Nour AL KOTOB"}}, "url": "https://github.com/nuxeo/nuxeo/commit/0db60b2cd5acb9e4e7ce788f1b55e8d6683441d2", "committedDate": "2020-01-29T13:45:02Z", "message": "NXP-28560: catch AbstractJsonEnrichers Exception"}, "afterCommit": {"oid": "0b2329c34aaabdb3e1be302126563a5db0533d63", "author": {"user": {"login": "NourNuxeo", "name": "Nour AL KOTOB"}}, "url": "https://github.com/nuxeo/nuxeo/commit/0b2329c34aaabdb3e1be302126563a5db0533d63", "committedDate": "2020-01-30T13:43:52Z", "message": "NXP-28560: catch AbstractJsonEnrichers Exception"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0b2329c34aaabdb3e1be302126563a5db0533d63", "author": {"user": {"login": "NourNuxeo", "name": "Nour AL KOTOB"}}, "url": "https://github.com/nuxeo/nuxeo/commit/0b2329c34aaabdb3e1be302126563a5db0533d63", "committedDate": "2020-01-30T13:43:52Z", "message": "NXP-28560: catch AbstractJsonEnrichers Exception"}, "afterCommit": {"oid": "8ee9ecf8e96c020f836d6f74c5e9c229fbf14125", "author": {"user": {"login": "NourNuxeo", "name": "Nour AL KOTOB"}}, "url": "https://github.com/nuxeo/nuxeo/commit/8ee9ecf8e96c020f836d6f74c5e9c229fbf14125", "committedDate": "2020-01-30T13:57:37Z", "message": "NXP-28560: catch AbstractJsonEnrichers Exception"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8ee9ecf8e96c020f836d6f74c5e9c229fbf14125", "author": {"user": {"login": "NourNuxeo", "name": "Nour AL KOTOB"}}, "url": "https://github.com/nuxeo/nuxeo/commit/8ee9ecf8e96c020f836d6f74c5e9c229fbf14125", "committedDate": "2020-01-30T13:57:37Z", "message": "NXP-28560: catch AbstractJsonEnrichers Exception"}, "afterCommit": {"oid": "55974721e30af5a7e2899e441822bd856b18ac88", "author": {"user": {"login": "NourNuxeo", "name": "Nour AL KOTOB"}}, "url": "https://github.com/nuxeo/nuxeo/commit/55974721e30af5a7e2899e441822bd856b18ac88", "committedDate": "2020-01-30T14:01:15Z", "message": "NXP-28560: catch AbstractJsonEnrichers Exception"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "55974721e30af5a7e2899e441822bd856b18ac88", "author": {"user": {"login": "NourNuxeo", "name": "Nour AL KOTOB"}}, "url": "https://github.com/nuxeo/nuxeo/commit/55974721e30af5a7e2899e441822bd856b18ac88", "committedDate": "2020-01-30T14:01:15Z", "message": "NXP-28560: catch AbstractJsonEnrichers Exception"}, "afterCommit": {"oid": "658625922e1281e220cedb3108a7a086063c81be", "author": {"user": {"login": "NourNuxeo", "name": "Nour AL KOTOB"}}, "url": "https://github.com/nuxeo/nuxeo/commit/658625922e1281e220cedb3108a7a086063c81be", "committedDate": "2020-01-30T15:16:04Z", "message": "NXP-28560: catch AbstractJsonEnrichers Exception"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c14cd06c346b7de76222d0a525f0658d52510d30", "author": {"user": {"login": "NourNuxeo", "name": "Nour AL KOTOB"}}, "url": "https://github.com/nuxeo/nuxeo/commit/c14cd06c346b7de76222d0a525f0658d52510d30", "committedDate": "2020-01-30T15:19:48Z", "message": "NXP-28560: catch AbstractJsonEnrichers Exception"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "658625922e1281e220cedb3108a7a086063c81be", "author": {"user": {"login": "NourNuxeo", "name": "Nour AL KOTOB"}}, "url": "https://github.com/nuxeo/nuxeo/commit/658625922e1281e220cedb3108a7a086063c81be", "committedDate": "2020-01-30T15:16:04Z", "message": "NXP-28560: catch AbstractJsonEnrichers Exception"}, "afterCommit": {"oid": "c14cd06c346b7de76222d0a525f0658d52510d30", "author": {"user": {"login": "NourNuxeo", "name": "Nour AL KOTOB"}}, "url": "https://github.com/nuxeo/nuxeo/commit/c14cd06c346b7de76222d0a525f0658d52510d30", "committedDate": "2020-01-30T15:19:48Z", "message": "NXP-28560: catch AbstractJsonEnrichers Exception"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUwOTA1OTQ2", "url": "https://github.com/nuxeo/nuxeo/pull/3706#pullrequestreview-350905946", "createdAt": "2020-01-30T15:20:54Z", "commit": {"oid": "c14cd06c346b7de76222d0a525f0658d52510d30"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUwOTI4NzU0", "url": "https://github.com/nuxeo/nuxeo/pull/3706#pullrequestreview-350928754", "createdAt": "2020-01-30T15:48:02Z", "commit": {"oid": "c14cd06c346b7de76222d0a525f0658d52510d30"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4891, "cost": 1, "resetAt": "2021-11-03T18:41:40Z"}}}