{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI5NzE3MTkx", "number": 4498, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQyMjo0OTo0M1rOFEQHyw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQyMjo1Nzo0MFrOFEQP9Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQwMDAyNzYzOnYy", "diffSide": "RIGHT", "path": "modules/runtime/nuxeo-runtime/src/main/java/org/nuxeo/runtime/model/impl/RegistrationInfoImpl.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQyMjo0OTo0M1rOIETW5g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQyMjo0OTo0M1rOIETW5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTM4MjM3NA==", "bodyText": "Remove  = false", "url": "https://github.com/nuxeo/nuxeo/pull/4498#discussion_r541382374", "createdAt": "2020-12-11T22:49:43Z", "author": {"login": "efge"}, "path": "modules/runtime/nuxeo-runtime/src/main/java/org/nuxeo/runtime/model/impl/RegistrationInfoImpl.java", "diffHunk": "@@ -72,8 +72,12 @@\n     @XNode(\"@name\")\n     ComponentName name;\n \n-    @XNode(\"@disabled\")\n-    boolean disabled;\n+    @XNode(\"@disable\")\n+    protected boolean disable = false;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "13d9a753b82b9c6406a9c07374c585db42aa03d8"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQwMDAzMTEyOnYy", "diffSide": "RIGHT", "path": "modules/runtime/nuxeo-runtime/src/main/java/org/nuxeo/runtime/model/impl/RegistrationInfoImpl.java", "isResolved": false, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQyMjo1MToyMlrOIETY0w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxNzo0NDoyMVrOIGX3rg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTM4Mjg2Nw==", "bodyText": "We're sure we don't need compat with the old name?", "url": "https://github.com/nuxeo/nuxeo/pull/4498#discussion_r541382867", "createdAt": "2020-12-11T22:51:22Z", "author": {"login": "efge"}, "path": "modules/runtime/nuxeo-runtime/src/main/java/org/nuxeo/runtime/model/impl/RegistrationInfoImpl.java", "diffHunk": "@@ -72,8 +72,12 @@\n     @XNode(\"@name\")\n     ComponentName name;\n \n-    @XNode(\"@disabled\")\n-    boolean disabled;\n+    @XNode(\"@disable\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "13d9a753b82b9c6406a9c07374c585db42aa03d8"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjIzMDkyNw==", "bodyText": "Disablement API was only used in unused persisted registrations so I think we do not need compat indeed.", "url": "https://github.com/nuxeo/nuxeo/pull/4498#discussion_r542230927", "createdAt": "2020-12-14T09:24:45Z", "author": {"login": "atchertchian"}, "path": "modules/runtime/nuxeo-runtime/src/main/java/org/nuxeo/runtime/model/impl/RegistrationInfoImpl.java", "diffHunk": "@@ -72,8 +72,12 @@\n     @XNode(\"@name\")\n     ComponentName name;\n \n-    @XNode(\"@disabled\")\n-    boolean disabled;\n+    @XNode(\"@disable\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTM4Mjg2Nw=="}, "originalCommit": {"oid": "13d9a753b82b9c6406a9c07374c585db42aa03d8"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzQ4MzgwMA==", "bodyText": "Why not removing it and leverage enable?", "url": "https://github.com/nuxeo/nuxeo/pull/4498#discussion_r543483800", "createdAt": "2020-12-15T16:15:36Z", "author": {"login": "kevinleturc"}, "path": "modules/runtime/nuxeo-runtime/src/main/java/org/nuxeo/runtime/model/impl/RegistrationInfoImpl.java", "diffHunk": "@@ -72,8 +72,12 @@\n     @XNode(\"@name\")\n     ComponentName name;\n \n-    @XNode(\"@disabled\")\n-    boolean disabled;\n+    @XNode(\"@disable\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTM4Mjg2Nw=="}, "originalCommit": {"oid": "13d9a753b82b9c6406a9c07374c585db42aa03d8"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzUwMDEyMg==", "bodyText": "The idea is to be able to avoid scripting logics, so it's easier to have:\n<component enable=\"${org.nuxeo.my.condition}\">\n<component>\n\nfor components to enable conditionally if org.nuxeo.my.condition runtime property is true, and also:\n<component disable=\"${org.nuxeo.my.condition}\">\n<component>\n\nfor components to disable conditionally (on the same condition).\nThe alternative would be to introduce some scripting logics like\n<component enable=\"!${org.nuxeo.my.condition}\">\n</component>", "url": "https://github.com/nuxeo/nuxeo/pull/4498#discussion_r543500122", "createdAt": "2020-12-15T16:35:50Z", "author": {"login": "atchertchian"}, "path": "modules/runtime/nuxeo-runtime/src/main/java/org/nuxeo/runtime/model/impl/RegistrationInfoImpl.java", "diffHunk": "@@ -72,8 +72,12 @@\n     @XNode(\"@name\")\n     ComponentName name;\n \n-    @XNode(\"@disabled\")\n-    boolean disabled;\n+    @XNode(\"@disable\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTM4Mjg2Nw=="}, "originalCommit": {"oid": "13d9a753b82b9c6406a9c07374c585db42aa03d8"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzU0NjM3NQ==", "bodyText": "Ok, it's clearer, thanks \ud83d\udc4d.\nI think the scripting logic is the way to go, otherwise, I'm pretty sure we're gonna end with:\n<component enable=\"${org.nuxeo.my.condition.1}\" disable=\"${org.nuxeo.my.condition.2}\">\n</component>\nI'm afraid about maintenance on this.\nFurthermore, improving the scripting logic could be interesting as we may need to have OR and AND boolean operators in the future.\nThis may be needed by drive change finder which has 3 implementations and only one might be enabled.", "url": "https://github.com/nuxeo/nuxeo/pull/4498#discussion_r543546375", "createdAt": "2020-12-15T17:34:45Z", "author": {"login": "kevinleturc"}, "path": "modules/runtime/nuxeo-runtime/src/main/java/org/nuxeo/runtime/model/impl/RegistrationInfoImpl.java", "diffHunk": "@@ -72,8 +72,12 @@\n     @XNode(\"@name\")\n     ComponentName name;\n \n-    @XNode(\"@disabled\")\n-    boolean disabled;\n+    @XNode(\"@disable\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTM4Mjg2Nw=="}, "originalCommit": {"oid": "13d9a753b82b9c6406a9c07374c585db42aa03d8"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzU1MzQ1NA==", "bodyText": "Well if we need scripting logics, i'm afraid using nxftl is a better option: the goal of this feature was to avoid having scripting logics introduced for simple conditional enablements and disablements, and maybe simplify some configuration templates using (or over-using) freemarker templating for components configuration.\nThis does not prevent from keeping nxftl, and i do not see the point of this PR anymore if we're not happy with this improvement: i've discussed this several times with you both and you seemed in favor of it so i'm confused (but it's ok if you changed your minds, this was a quick try at simplifying some use cases).", "url": "https://github.com/nuxeo/nuxeo/pull/4498#discussion_r543553454", "createdAt": "2020-12-15T17:44:21Z", "author": {"login": "atchertchian"}, "path": "modules/runtime/nuxeo-runtime/src/main/java/org/nuxeo/runtime/model/impl/RegistrationInfoImpl.java", "diffHunk": "@@ -72,8 +72,12 @@\n     @XNode(\"@name\")\n     ComponentName name;\n \n-    @XNode(\"@disabled\")\n-    boolean disabled;\n+    @XNode(\"@disable\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTM4Mjg2Nw=="}, "originalCommit": {"oid": "13d9a753b82b9c6406a9c07374c585db42aa03d8"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQwMDA0ODUzOnYy", "diffSide": "RIGHT", "path": "modules/runtime/nuxeo-runtime/src/main/java/org/nuxeo/runtime/model/impl/RegistrationInfoImpl.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQyMjo1Nzo0MFrOIETiNA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQwOToyNjo0NVrOIFHO0g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTM4NTI2OA==", "bodyText": "You could have only one field, for instance enable like elsewhere, and a setter for @disable that sets enable = !disable. The API could just have isEnabled and no redundant logic needed like ri.isDisabled() || !ri.isEnabled()", "url": "https://github.com/nuxeo/nuxeo/pull/4498#discussion_r541385268", "createdAt": "2020-12-11T22:57:40Z", "author": {"login": "efge"}, "path": "modules/runtime/nuxeo-runtime/src/main/java/org/nuxeo/runtime/model/impl/RegistrationInfoImpl.java", "diffHunk": "@@ -72,8 +72,12 @@\n     @XNode(\"@name\")\n     ComponentName name;\n \n-    @XNode(\"@disabled\")\n-    boolean disabled;\n+    @XNode(\"@disable\")\n+    protected boolean disable = false;\n+\n+    // @since 11.5\n+    @XNode(\"@enable\")\n+    protected boolean enable = true;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "13d9a753b82b9c6406a9c07374c585db42aa03d8"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjIzMjI3NA==", "bodyText": "Indeed but that would imply sorting properties (xmap supports it) to make sure disable is set after enable, and i was trying not to put logics inside the descriptor, as we're trying to stick to that \"Data only object\" rule.\nWe can still discuss it if it's better.", "url": "https://github.com/nuxeo/nuxeo/pull/4498#discussion_r542232274", "createdAt": "2020-12-14T09:26:45Z", "author": {"login": "atchertchian"}, "path": "modules/runtime/nuxeo-runtime/src/main/java/org/nuxeo/runtime/model/impl/RegistrationInfoImpl.java", "diffHunk": "@@ -72,8 +72,12 @@\n     @XNode(\"@name\")\n     ComponentName name;\n \n-    @XNode(\"@disabled\")\n-    boolean disabled;\n+    @XNode(\"@disable\")\n+    protected boolean disable = false;\n+\n+    // @since 11.5\n+    @XNode(\"@enable\")\n+    protected boolean enable = true;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTM4NTI2OA=="}, "originalCommit": {"oid": "13d9a753b82b9c6406a9c07374c585db42aa03d8"}, "originalPosition": 11}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4254, "cost": 1, "resetAt": "2021-11-03T18:41:40Z"}}}