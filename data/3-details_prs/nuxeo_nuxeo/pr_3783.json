{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc5MjQxNzA1", "number": 3783, "title": "feature-NXP-28639-datadog-tagging", "bodyText": "PR created from https://qa.nuxeo.org/jenkins/job/TestAndPush/job/ondemand-testandpush-bdelbosc3/292/", "createdAt": "2020-02-24T21:31:44Z", "url": "https://github.com/nuxeo/nuxeo/pull/3783", "merged": true, "mergeCommit": {"oid": "8208fe1dd79b9c65c9fb58d0b192ed2b35784c13"}, "closed": true, "closedAt": "2020-03-26T20:49:11Z", "author": {"login": "nuxeojenkins"}, "timelineItems": {"totalCount": 37, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcH3xDzgBqjMwNzA4MDYyODk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcRewqdAFqTM4MjE5MDMzOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2c3ebc2f046ed5f48367bcec412a5e9949d5af3f", "author": {"user": {"login": "bdelbosc", "name": "Benoit Delbosc"}}, "url": "https://github.com/nuxeo/nuxeo/commit/2c3ebc2f046ed5f48367bcec412a5e9949d5af3f", "committedDate": "2020-02-24T15:07:05Z", "message": "NXP-28639: Add a NuxeoDatadogRerpoter to handle metric with tags"}, "afterCommit": {"oid": "34e04c290a2789d2f1fba1cfc6fc02dfdac31a98", "author": {"user": {"login": "bdelbosc", "name": "Benoit Delbosc"}}, "url": "https://github.com/nuxeo/nuxeo/commit/34e04c290a2789d2f1fba1cfc6fc02dfdac31a98", "committedDate": "2020-02-25T20:00:33Z", "message": "NXP-28639: Add a NuxeoDatadogRerpoter to handle metric with tags"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY5NzM2NTY4", "url": "https://github.com/nuxeo/nuxeo/pull/3783#pullrequestreview-369736568", "createdAt": "2020-03-05T16:47:41Z", "commit": {"oid": "c0d8eae03783785812bb0cda9ef460d56098de3f"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQxNjo1MTo1N1rOFybksQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQxNjo1MTo1N1rOFybksQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODQyNDg4MQ==", "bodyText": "We can't put our copyright or license here. Please just copy https://github.com/coursera/metrics-datadog/blob/master/LICENSE into the header of this file. Then we can add just \"Additional contributors: Nuxeo (Benoit Delbosc)\" after it", "url": "https://github.com/nuxeo/nuxeo/pull/3783#discussion_r388424881", "createdAt": "2020-03-05T16:51:57Z", "author": {"login": "efge"}, "path": "addons/nuxeo-datadog-reporter/src/main/java/org/nuxeo/datadog/reporter/NuxeoDatadogReporter.java", "diffHunk": "@@ -1,26 +1,61 @@\n-package org.coursera.metrics.datadog;\n+/*\n+ * (C) Copyright 2020 Nuxeo (http://nuxeo.com/) and others.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "34e04c290a2789d2f1fba1cfc6fc02dfdac31a98"}, "originalPosition": 3}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY4NzE2MjY2", "url": "https://github.com/nuxeo/nuxeo/pull/3783#pullrequestreview-368716266", "createdAt": "2020-03-04T11:54:19Z", "commit": {"oid": "34e04c290a2789d2f1fba1cfc6fc02dfdac31a98"}, "state": "DISMISSED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxMTo1NDoxOVrOFxqX4g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxMTo1NDoxOVrOFxqX4g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzYxODc4Ng==", "bodyText": "Does it miss an assertion?", "url": "https://github.com/nuxeo/nuxeo/pull/3783#discussion_r387618786", "createdAt": "2020-03-04T11:54:19Z", "author": {"login": "kevinleturc"}, "path": "nuxeo-core/nuxeo-core-cache/src/test/java/org/nuxeo/ecm/core/cache/CacheComplianceFixture.java", "diffHunk": "@@ -113,10 +116,12 @@ public void invalidateAll() throws IOException {\n \n     @Test\n     public void hasMetrics() {\n+        List<MetricName> expected = Arrays.asList(\"nuxeo.cache.defaultCache.read\", \"nuxeo.cache.defaultCache.read-hit\",\n+                \"nuxeo.cache.defaultCache.read-hit-ratio\", \"nuxeo.cache.defaultCache.read-miss\",\n+                \"nuxeo.cache.defaultCache.write\", \"nuxeo.cache.defaultCache.invalidate-all\",\n+                \"nuxeo.cache.defaultCache.size\").stream().map(MetricName::build).collect(Collectors.toList());\n+\n         SharedMetricRegistries.getOrCreate(MetricsService.class.getName()).getNames()\n-                .containsAll(Arrays.asList(\"nuxeo.cache.defaultCache.read\", \"nuxeo.cache.defaultCache.read-hit\",\n-                        \"nuxeo.cache.defaultCache.read-hit-ratio\", \"nuxeo.cache.defaultCache.read-miss\",\n-                        \"nuxeo.cache.defaultCache.write\", \"nuxeo.cache.defaultCache.invalidate-all\",\n-                        \"nuxeo.cache.defaultCache.size\"));\n+                              .containsAll(expected);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "34e04c290a2789d2f1fba1cfc6fc02dfdac31a98"}, "originalPosition": 34}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "34e04c290a2789d2f1fba1cfc6fc02dfdac31a98", "author": {"user": {"login": "bdelbosc", "name": "Benoit Delbosc"}}, "url": "https://github.com/nuxeo/nuxeo/commit/34e04c290a2789d2f1fba1cfc6fc02dfdac31a98", "committedDate": "2020-02-25T20:00:33Z", "message": "NXP-28639: Add a NuxeoDatadogRerpoter to handle metric with tags"}, "afterCommit": {"oid": "5ac4a71b516f39dff24617531e1e86cf2d8c149f", "author": {"user": {"login": "bdelbosc", "name": "Benoit Delbosc"}}, "url": "https://github.com/nuxeo/nuxeo/commit/5ac4a71b516f39dff24617531e1e86cf2d8c149f", "committedDate": "2020-03-10T15:01:56Z", "message": "NXP-28639: Add a NuxeoDatadogRerpoter to handle metric with tags"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5ac4a71b516f39dff24617531e1e86cf2d8c149f", "author": {"user": {"login": "bdelbosc", "name": "Benoit Delbosc"}}, "url": "https://github.com/nuxeo/nuxeo/commit/5ac4a71b516f39dff24617531e1e86cf2d8c149f", "committedDate": "2020-03-10T15:01:56Z", "message": "NXP-28639: Add a NuxeoDatadogRerpoter to handle metric with tags"}, "afterCommit": {"oid": "2de53ac5118dd71a3b06b8c470b681d73ff12730", "author": {"user": {"login": "bdelbosc", "name": "Benoit Delbosc"}}, "url": "https://github.com/nuxeo/nuxeo/commit/2de53ac5118dd71a3b06b8c470b681d73ff12730", "committedDate": "2020-03-10T15:29:30Z", "message": "NXP-28639: Add a NuxeoDatadogRerpoter to handle metric with tags"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2de53ac5118dd71a3b06b8c470b681d73ff12730", "author": {"user": {"login": "bdelbosc", "name": "Benoit Delbosc"}}, "url": "https://github.com/nuxeo/nuxeo/commit/2de53ac5118dd71a3b06b8c470b681d73ff12730", "committedDate": "2020-03-10T15:29:30Z", "message": "NXP-28639: Add a NuxeoDatadogRerpoter to handle metric with tags"}, "afterCommit": {"oid": "875e2658b13963980f033fd44693c64dca4f6055", "author": {"user": {"login": "bdelbosc", "name": "Benoit Delbosc"}}, "url": "https://github.com/nuxeo/nuxeo/commit/875e2658b13963980f033fd44693c64dca4f6055", "committedDate": "2020-03-16T10:59:57Z", "message": "NXP-28639: Uniformize metric names, use tags when possible"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c0ede45ef7016a1ed5e1b97a712afb55abe97105", "author": {"user": {"login": "bdelbosc", "name": "Benoit Delbosc"}}, "url": "https://github.com/nuxeo/nuxeo/commit/c0ede45ef7016a1ed5e1b97a712afb55abe97105", "committedDate": "2020-03-17T14:52:32Z", "message": "NXP-28760: Change default Datadog poll intervar to 1min"}, "afterCommit": {"oid": "121348c066c635082d714cb0ebebe484a022aab7", "author": {"user": {"login": "bdelbosc", "name": "Benoit Delbosc"}}, "url": "https://github.com/nuxeo/nuxeo/commit/121348c066c635082d714cb0ebebe484a022aab7", "committedDate": "2020-03-17T16:48:40Z", "message": "NXP-28760: Change default Datadog poll intervar to 1min"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "121348c066c635082d714cb0ebebe484a022aab7", "author": {"user": {"login": "bdelbosc", "name": "Benoit Delbosc"}}, "url": "https://github.com/nuxeo/nuxeo/commit/121348c066c635082d714cb0ebebe484a022aab7", "committedDate": "2020-03-17T16:48:40Z", "message": "NXP-28760: Change default Datadog poll intervar to 1min"}, "afterCommit": {"oid": "341039db1f1c8ec4735abe58a565473257669de2", "author": {"user": {"login": "bdelbosc", "name": "Benoit Delbosc"}}, "url": "https://github.com/nuxeo/nuxeo/commit/341039db1f1c8ec4735abe58a565473257669de2", "committedDate": "2020-03-17T16:50:21Z", "message": "NXP-28760: Change default Datadog poll intervar to 1min"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "108d036b422b08cdc6524c7e1cb9fa743c61c567", "author": {"user": {"login": "bdelbosc", "name": "Benoit Delbosc"}}, "url": "https://github.com/nuxeo/nuxeo/commit/108d036b422b08cdc6524c7e1cb9fa743c61c567", "committedDate": "2020-03-20T15:32:11Z", "message": "NXP-28795: Remove the Datadog addon and package\n\nDatadog is now supported by default in Nuxeo using the MetricsService"}, "afterCommit": {"oid": "5157e21d6992db1ea5058701f08864d0b0383d85", "author": {"user": {"login": "bdelbosc", "name": "Benoit Delbosc"}}, "url": "https://github.com/nuxeo/nuxeo/commit/5157e21d6992db1ea5058701f08864d0b0383d85", "committedDate": "2020-03-20T16:22:30Z", "message": "NXP-28795: Remove the Datadog addon and package\n\nDatadog is now supported by default in Nuxeo using the MetricsService"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9bba98add195d9c90c50564f5877eee8ad1a16bc", "author": {"user": {"login": "bdelbosc", "name": "Benoit Delbosc"}}, "url": "https://github.com/nuxeo/nuxeo/commit/9bba98add195d9c90c50564f5877eee8ad1a16bc", "committedDate": "2020-03-20T17:41:51Z", "message": "NXP-26799: Add prometheus metrics reporter"}, "afterCommit": {"oid": "877e60df563cb45487ebaca2bb356128140bc593", "author": {"user": {"login": "bdelbosc", "name": "Benoit Delbosc"}}, "url": "https://github.com/nuxeo/nuxeo/commit/877e60df563cb45487ebaca2bb356128140bc593", "committedDate": "2020-03-20T18:42:17Z", "message": "NXP-26799: Add prometheus metrics reporter"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "877e60df563cb45487ebaca2bb356128140bc593", "author": {"user": {"login": "bdelbosc", "name": "Benoit Delbosc"}}, "url": "https://github.com/nuxeo/nuxeo/commit/877e60df563cb45487ebaca2bb356128140bc593", "committedDate": "2020-03-20T18:42:17Z", "message": "NXP-26799: Add prometheus metrics reporter"}, "afterCommit": {"oid": "779af20a5dcb228bb3e964b7b1eead30dac9dd4d", "author": {"user": {"login": "bdelbosc", "name": "Benoit Delbosc"}}, "url": "https://github.com/nuxeo/nuxeo/commit/779af20a5dcb228bb3e964b7b1eead30dac9dd4d", "committedDate": "2020-03-20T20:00:49Z", "message": "NXP-26799: Add prometheus metrics reporter"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "779af20a5dcb228bb3e964b7b1eead30dac9dd4d", "author": {"user": {"login": "bdelbosc", "name": "Benoit Delbosc"}}, "url": "https://github.com/nuxeo/nuxeo/commit/779af20a5dcb228bb3e964b7b1eead30dac9dd4d", "committedDate": "2020-03-20T20:00:49Z", "message": "NXP-26799: Add prometheus metrics reporter"}, "afterCommit": {"oid": "4d155525a3a03237d203b5c11558b8da961410fe", "author": {"user": {"login": "bdelbosc", "name": "Benoit Delbosc"}}, "url": "https://github.com/nuxeo/nuxeo/commit/4d155525a3a03237d203b5c11558b8da961410fe", "committedDate": "2020-03-21T07:03:30Z", "message": "NXP-26799: Add prometheus metrics reporter"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4d155525a3a03237d203b5c11558b8da961410fe", "author": {"user": {"login": "bdelbosc", "name": "Benoit Delbosc"}}, "url": "https://github.com/nuxeo/nuxeo/commit/4d155525a3a03237d203b5c11558b8da961410fe", "committedDate": "2020-03-21T07:03:30Z", "message": "NXP-26799: Add prometheus metrics reporter"}, "afterCommit": {"oid": "1addd00c0182b3009dda3cc78535d3f30ed78fcf", "author": {"user": {"login": "bdelbosc", "name": "Benoit Delbosc"}}, "url": "https://github.com/nuxeo/nuxeo/commit/1addd00c0182b3009dda3cc78535d3f30ed78fcf", "committedDate": "2020-03-21T13:06:45Z", "message": "NXP-28639: Add a JMX metric reporter"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1addd00c0182b3009dda3cc78535d3f30ed78fcf", "author": {"user": {"login": "bdelbosc", "name": "Benoit Delbosc"}}, "url": "https://github.com/nuxeo/nuxeo/commit/1addd00c0182b3009dda3cc78535d3f30ed78fcf", "committedDate": "2020-03-21T13:06:45Z", "message": "NXP-28639: Add a JMX metric reporter"}, "afterCommit": {"oid": "5ab4fbf561c2fbaaa4d764aadbd4dd565af2c644", "author": {"user": {"login": "bdelbosc", "name": "Benoit Delbosc"}}, "url": "https://github.com/nuxeo/nuxeo/commit/5ab4fbf561c2fbaaa4d764aadbd4dd565af2c644", "committedDate": "2020-03-21T18:03:52Z", "message": "NXP-28639: Add a JMX metric reporter"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5ab4fbf561c2fbaaa4d764aadbd4dd565af2c644", "author": {"user": {"login": "bdelbosc", "name": "Benoit Delbosc"}}, "url": "https://github.com/nuxeo/nuxeo/commit/5ab4fbf561c2fbaaa4d764aadbd4dd565af2c644", "committedDate": "2020-03-21T18:03:52Z", "message": "NXP-28639: Add a JMX metric reporter"}, "afterCommit": {"oid": "2f1159e2b7bf0497b5ecf515207950cefec426f2", "author": {"user": {"login": "bdelbosc", "name": "Benoit Delbosc"}}, "url": "https://github.com/nuxeo/nuxeo/commit/2f1159e2b7bf0497b5ecf515207950cefec426f2", "committedDate": "2020-03-23T08:30:33Z", "message": "NXP-28795: Add automation operators to stop start Metrics Reporters"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2f1159e2b7bf0497b5ecf515207950cefec426f2", "author": {"user": {"login": "bdelbosc", "name": "Benoit Delbosc"}}, "url": "https://github.com/nuxeo/nuxeo/commit/2f1159e2b7bf0497b5ecf515207950cefec426f2", "committedDate": "2020-03-23T08:30:33Z", "message": "NXP-28795: Add automation operators to stop start Metrics Reporters"}, "afterCommit": {"oid": "012dc8b2253a3315ed0bb9c1dd3a5db5642da35f", "author": {"user": {"login": "bdelbosc", "name": "Benoit Delbosc"}}, "url": "https://github.com/nuxeo/nuxeo/commit/012dc8b2253a3315ed0bb9c1dd3a5db5642da35f", "committedDate": "2020-03-23T08:52:16Z", "message": "NXP-28795: Add automation operators to stop start Metrics Reporters"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgxMDA3MjQy", "url": "https://github.com/nuxeo/nuxeo/pull/3783#pullrequestreview-381007242", "createdAt": "2020-03-25T10:08:00Z", "commit": {"oid": "012dc8b2253a3315ed0bb9c1dd3a5db5642da35f"}, "state": "COMMENTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxMDowODowMFrOF7T9HQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxMToxNzo1OFrOF7WczQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzczNzI0NQ==", "bodyText": "to remove?", "url": "https://github.com/nuxeo/nuxeo/pull/3783#discussion_r397737245", "createdAt": "2020-03-25T10:08:00Z", "author": {"login": "kevinleturc"}, "path": "nuxeo-core/nuxeo-core-storage-dbs/src/main/java/org/nuxeo/ecm/core/storage/dbs/GuavaCacheMetric.java", "diffHunk": "@@ -20,36 +20,52 @@\n \n import org.nuxeo.runtime.metrics.NuxeoMetricSet;\n \n-import com.codahale.metrics.MetricSet;\n import com.google.common.cache.Cache;\n \n+import io.dropwizard.metrics5.MetricName;\n+import io.dropwizard.metrics5.MetricSet;\n+\n /**\n  * Wrapper used to wrap the Guava cache's statistics into Gauges in order to report them via Codahale Metrics.\n  *\n  * @since 8.10\n  */\n public class GuavaCacheMetric extends NuxeoMetricSet {\n \n+    private GuavaCacheMetric(MetricName name) {\n+        super(name);\n+    }\n+\n     private GuavaCacheMetric(String name, String... names) {\n         super(name, names);\n     }\n \n+    public static MetricSet of(Cache<?, ?> cache, MetricName name) {\n+        GuavaCacheMetric metrics = new GuavaCacheMetric(name);\n+        addCacheMetrics(cache, metrics);\n+        return metrics;\n+    }\n+\n     public static MetricSet of(Cache<?, ?> cache, String name, String... names) {\n         GuavaCacheMetric metrics = new GuavaCacheMetric(name, names);\n+        addCacheMetrics(cache, metrics);\n+        return metrics;\n+    }\n+\n+    protected static void addCacheMetrics(Cache<?, ?> cache, GuavaCacheMetric metrics) {\n         metrics.putGauge(() -> cache.size(), \"size\");\n-        metrics.putGauge(() -> cache.stats().averageLoadPenalty(), \"average\", \"load\", \"penalty\");\n         metrics.putGauge(() -> cache.stats().evictionCount(), \"eviction\", \"count\");\n         metrics.putGauge(() -> cache.stats().hitCount(), \"hit\", \"count\");\n-        metrics.putGauge(() -> cache.stats().hitRate(), \"hit\", \"rate\");\n-        metrics.putGauge(() -> cache.stats().loadCount(), \"load\", \"count\");\n-        metrics.putGauge(() -> cache.stats().loadExceptionCount(), \"load\", \"exception\", \"count\");\n-        metrics.putGauge(() -> cache.stats().loadExceptionRate(), \"load\", \"exception\", \"rate\");\n-        metrics.putGauge(() -> cache.stats().loadSuccessCount(), \"load\", \"success\", \"count\");\n+        metrics.putGauge(() -> cache.stats().hitRate(), \"hit\", \"ratio\");\n         metrics.putGauge(() -> cache.stats().missCount(), \"miss\", \"count\");\n-        metrics.putGauge(() -> cache.stats().missRate(), \"miss\", \"rate\");\n-        metrics.putGauge(() -> cache.stats().requestCount(), \"request\", \"count\");\n-        metrics.putGauge(() -> cache.stats().totalLoadTime(), \"total\", \"load\", \"time\");\n-        return metrics;\n+        metrics.putGauge(() -> cache.stats().requestCount(), \"read\", \"count\");\n+        // metrics.putGauge(() -> cache.stats().averageLoadPenalty(), \"average\", \"load\", \"penalty\");\n+        // metrics.putGauge(() -> cache.stats().loadCount(), \"load\", \"count\");\n+        // metrics.putGauge(() -> cache.stats().loadExceptionCount(), \"load\", \"exception\", \"count\");\n+        // metrics.putGauge(() -> cache.stats().loadExceptionRate(), \"load\", \"exception\", \"rate\");\n+        // metrics.putGauge(() -> cache.stats().loadSuccessCount(), \"load\", \"success\", \"count\");\n+        // metrics.putGauge(() -> cache.stats().missRate(), \"miss\", \"rate\");\n+        // metrics.putGauge(() -> cache.stats().totalLoadTime(), \"total\", \"load\", \"time\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "012dc8b2253a3315ed0bb9c1dd3a5db5642da35f"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzczODkxMQ==", "bodyText": "Does the leading . is wanted?", "url": "https://github.com/nuxeo/nuxeo/pull/3783#discussion_r397738911", "createdAt": "2020-03-25T10:10:44Z", "author": {"login": "kevinleturc"}, "path": "nuxeo-distribution/nuxeo-nxr-server/src/main/resources/templates/common-base/nxserver/config/metrics-config.xml", "diffHunk": "@@ -0,0 +1,70 @@\n+<?xml version=\"1.0\"?>\n+<component name=\"org.nuxeo.runtime.metrics.default.contrib\">\n+\n+  <extension target=\"org.nuxeo.runtime.metrics.MetricsService\" point=\"configuration\">\n+      <configuration enabled=\"${metrics.enabled}\">\n+      <instrument name=\"jvm\" enabled=\"${metrics.jvm.enabled}\" />\n+      <instrument name=\"log4j\" enabled=\"${metrics.log4j.enabled}\" />\n+      <instrument name=\"tomcat\" enabled=\"${metrics.tomcat.enabled}\" />\n+      <filter>\n+        <allow>\n+          <prefix>nuxeo.cache.default-cache.</prefix>\n+          <prefix>nuxeo.cache.user-entry-cache.</prefix>\n+          <prefix>nuxeo.cache.group-entry-cache.</prefix>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "012dc8b2253a3315ed0bb9c1dd3a5db5642da35f"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzc0MTMwOQ==", "bodyText": "Remaining version not in super pom.", "url": "https://github.com/nuxeo/nuxeo/pull/3783#discussion_r397741309", "createdAt": "2020-03-25T10:14:40Z", "author": {"login": "kevinleturc"}, "path": "nuxeo-runtime/nuxeo-runtime-metrics/pom.xml", "diffHunk": "@@ -24,39 +25,74 @@\n       <artifactId>nuxeo-runtime-management</artifactId>\n     </dependency>\n     <dependency>\n-      <groupId>io.dropwizard.metrics</groupId>\n+      <groupId>io.dropwizard.metrics5</groupId>\n       <artifactId>metrics-core</artifactId>\n     </dependency>\n     <dependency>\n-      <groupId>io.dropwizard.metrics</groupId>\n+      <groupId>io.dropwizard.metrics5</groupId>\n       <artifactId>metrics-graphite</artifactId>\n     </dependency>\n     <dependency>\n-      <groupId>io.dropwizard.metrics</groupId>\n+      <groupId>io.dropwizard.metrics5</groupId>\n+      <artifactId>metrics-jmx</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>io.dropwizard.metrics5</groupId>\n       <artifactId>metrics-log4j2</artifactId>\n     </dependency>\n     <dependency>\n-      <groupId>io.dropwizard.metrics</groupId>\n+      <groupId>io.dropwizard.metrics5</groupId>\n       <artifactId>metrics-jvm</artifactId>\n     </dependency>\n     <dependency>\n-      <groupId>io.dropwizard.metrics</groupId>\n+      <groupId>io.dropwizard.metrics5</groupId>\n       <artifactId>metrics-jmx</artifactId>\n     </dependency>\n     <dependency>\n-      <groupId>com.readytalk</groupId>\n-      <artifactId>metrics3-statsd</artifactId>\n+      <groupId>org.apache.logging.log4j</groupId>\n+      <artifactId>log4j-core</artifactId>\n+      <scope>provided</scope>\n     </dependency>\n     <dependency>\n-      <groupId>com.readytalk</groupId>\n-      <artifactId>metrics-statsd-common</artifactId>\n+      <groupId>org.coursera</groupId>\n+      <artifactId>metrics-datadog</artifactId>\n+      <exclusions>\n+        <exclusion>\n+          <groupId>io.dropwizard.metrics</groupId>\n+          <artifactId>metrics-core</artifactId>\n+        </exclusion>\n+      </exclusions>\n     </dependency>\n     <dependency>\n-      <groupId>org.apache.logging.log4j</groupId>\n-      <artifactId>log4j-core</artifactId>\n-      <scope>provided</scope>\n+      <groupId>io.opencensus</groupId>\n+      <artifactId>opencensus-impl</artifactId>\n+      <scope>runtime</scope>\n+    </dependency>\n+    <dependency>\n+      <groupId>io.opencensus</groupId>\n+      <artifactId>opencensus-exporter-trace-jaeger</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>io.opencensus</groupId>\n+      <artifactId>opencensus-exporter-trace-zipkin</artifactId>\n+      <version>${opencensus.version}</version>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "012dc8b2253a3315ed0bb9c1dd3a5db5642da35f"}, "originalPosition": 73}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzc0Mzk0NA==", "bodyText": "Don't we want to inc/dec this counter when the reporters are active in order to send the info?", "url": "https://github.com/nuxeo/nuxeo/pull/3783#discussion_r397743944", "createdAt": "2020-03-25T10:19:03Z", "author": {"login": "kevinleturc"}, "path": "nuxeo-runtime/nuxeo-runtime-metrics/src/main/java/org/nuxeo/runtime/metrics/MetricsServiceImpl.java", "diffHunk": "@@ -18,79 +18,207 @@\n  */\n package org.nuxeo.runtime.metrics;\n \n-import org.apache.commons.logging.Log;\n-import org.apache.commons.logging.LogFactory;\n+import static org.apache.logging.log4j.Level.INFO;\n+import static org.apache.logging.log4j.LogManager.ROOT_LOGGER_NAME;\n+import static org.nuxeo.runtime.model.Descriptor.UNIQUE_DESCRIPTOR_ID;\n+\n+import java.lang.management.ManagementFactory;\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+import javax.management.MalformedObjectNameException;\n+import javax.management.ObjectName;\n+\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+import org.apache.logging.log4j.core.LoggerContext;\n+import org.apache.logging.log4j.core.config.Configuration;\n+import org.nuxeo.runtime.api.Framework;\n import org.nuxeo.runtime.model.ComponentContext;\n-import org.nuxeo.runtime.model.ComponentInstance;\n import org.nuxeo.runtime.model.DefaultComponent;\n \n-import com.codahale.metrics.Counter;\n-import com.codahale.metrics.MetricRegistry;\n-import com.codahale.metrics.SharedMetricRegistries;\n+import io.dropwizard.metrics5.Counter;\n+import io.dropwizard.metrics5.MetricRegistry;\n+import io.dropwizard.metrics5.SharedMetricRegistries;\n+import io.dropwizard.metrics5.jvm.BufferPoolMetricSet;\n+import io.dropwizard.metrics5.jvm.FileDescriptorRatioGauge;\n+import io.dropwizard.metrics5.jvm.GarbageCollectorMetricSet;\n+import io.dropwizard.metrics5.jvm.JmxAttributeGauge;\n+import io.dropwizard.metrics5.jvm.MemoryUsageGaugeSet;\n+import io.dropwizard.metrics5.jvm.ThreadStatesGaugeSet;\n+import io.dropwizard.metrics5.log4j2.InstrumentedAppender;\n \n public class MetricsServiceImpl extends DefaultComponent implements MetricsService {\n \n-    protected static final Log log = LogFactory.getLog(MetricsServiceImpl.class);\n+    private static final Logger log = LogManager.getLogger(MetricsServiceImpl.class);\n \n-    protected MetricRegistry registry = SharedMetricRegistries.getOrCreate(MetricsService.class.getName());\n+    protected static final String CONFIGURATION_EP = \"configuration\";\n \n-    private final Counter instanceUp = registry.counter(MetricRegistry.name(\"nuxeo\", \"instance-up\"));\n+    protected static final String REPORTER_EP = \"reporter\";\n \n-    protected static final String CONFIGURATION_EP = \"configuration\";\n+    protected MetricRegistry registry = SharedMetricRegistries.getOrCreate(MetricsService.class.getName());\n+\n+    protected final Counter instanceUp = registry.counter(MetricRegistry.name(\"nuxeo\", \"instance-up\"));\n \n     protected MetricsDescriptor config;\n \n-    public MetricsServiceImpl() {\n-        super();\n-    }\n+    protected List<MetricsReporterDescriptor> reporterConfigs;\n \n-    @Override\n-    public void registerContribution(Object contribution, String extensionPoint, ComponentInstance contributor) {\n-        if (CONFIGURATION_EP.equals(extensionPoint) && contribution instanceof MetricsDescriptor) {\n-            log.debug(\"Registering metrics contribution\");\n-            config = (MetricsDescriptor) contribution;\n-        } else {\n-            log.warn(\"Unknown EP \" + extensionPoint);\n-        }\n-    }\n+    protected List<MetricsReporter> reporters;\n+\n+    protected InstrumentedAppender appender;\n \n     @Override\n     public void activate(ComponentContext context) {\n+        super.activate(context);\n+        log.debug(\"Activating component\");\n         SharedMetricRegistries.getOrCreate(MetricsService.class.getName());\n     }\n \n     @Override\n     public void deactivate(ComponentContext context) {\n+        log.debug(\"Deactivating component\");\n         SharedMetricRegistries.remove(MetricsService.class.getName());\n-        log.debug(\"Deactivate component.\");\n+        super.deactivate(context);\n     }\n \n     @Override\n     public void start(ComponentContext context) {\n-        if (config == null) {\n-            // Use a default config\n-            config = new MetricsDescriptor();\n-        }\n-        log.info(\"Setting up metrics configuration\");\n-        config.enable(registry);\n+        super.start(context);\n+        log.debug(\"Starting component\");\n         instanceUp.inc();\n+        config = getDescriptor(CONFIGURATION_EP, UNIQUE_DESCRIPTOR_ID);\n+        startReporters();\n     }\n \n     @Override\n     public void stop(ComponentContext context) {\n-        try {\n-            config.disable(registry);\n-        } finally {\n-            instanceUp.dec();\n+        log.debug(\"Stopping component\");\n+        stopReporters();\n+        instanceUp.dec();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "012dc8b2253a3315ed0bb9c1dd3a5db5642da35f"}, "originalPosition": 114}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzc3NzM4OA==", "bodyText": "You should use assertNull.", "url": "https://github.com/nuxeo/nuxeo/pull/3783#discussion_r397777388", "createdAt": "2020-03-25T11:16:41Z", "author": {"login": "kevinleturc"}, "path": "nuxeo-runtime/nuxeo-runtime-metrics/src/test/java/org/nuxeo/runtime/metrics/TestNuxeoMetricSet.java", "diffHunk": "@@ -36,32 +37,32 @@\n     @Test\n     public void testInstantiation() {\n         NuxeoMetricSet metrics = new NuxeoMetricSet();\n-        assertEquals(\"\", metrics.getPrefixName());\n+        assertEquals(null, metrics.getPrefixName());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "012dc8b2253a3315ed0bb9c1dd3a5db5642da35f"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzc3ODEyNQ==", "bodyText": "What is the wish to start/stop reporters several times?", "url": "https://github.com/nuxeo/nuxeo/pull/3783#discussion_r397778125", "createdAt": "2020-03-25T11:17:58Z", "author": {"login": "kevinleturc"}, "path": "nuxeo-runtime/nuxeo-runtime-test/src/test/java/org/nuxeo/runtime/metrics/TestMetricsService.java", "diffHunk": "@@ -18,33 +18,56 @@\n  *\n  */\n \n-package org.nuxeo.runtime;\n+package org.nuxeo.runtime.metrics;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertNotEquals;\n+import static org.junit.Assert.assertNotNull;\n+\n+import java.util.Arrays;\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+import javax.inject.Inject;\n \n import org.junit.Test;\n import org.junit.runner.RunWith;\n-import org.nuxeo.runtime.metrics.MetricsDescriptor;\n+import org.nuxeo.runtime.test.runner.Deploy;\n import org.nuxeo.runtime.test.runner.Features;\n import org.nuxeo.runtime.test.runner.FeaturesRunner;\n import org.nuxeo.runtime.test.runner.RuntimeFeature;\n \n-import java.util.Arrays;\n-import java.util.List;\n-import java.util.stream.Collectors;\n-\n-import static org.junit.Assert.assertEquals;\n-import static org.junit.Assert.assertNotEquals;\n+import io.dropwizard.metrics5.MetricName;\n \n /**\n- * @since 9.3\n+ * @since 11.1\n  */\n @RunWith(FeaturesRunner.class)\n @Features(RuntimeFeature.class)\n-public class TestGraphiteReporter {\n+@Deploy(\"org.nuxeo.runtime.metrics\")\n+@Deploy(\"org.nuxeo.runtime.metrics:test-metrics-contrib.xml\")\n+public class TestMetricsService {\n+\n+    @Inject\n+    protected MetricsService service;\n \n     @Test\n-    public void testFilterMetrics() {\n+    public void testService() {\n+        assertNotNull(service);\n+        service.stopReporters();\n+        service.startReporters();\n+        service.stopReporters();\n+        service.startReporters();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "012dc8b2253a3315ed0bb9c1dd3a5db5642da35f"}, "originalPosition": 54}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgxMjY1MDk4", "url": "https://github.com/nuxeo/nuxeo/pull/3783#pullrequestreview-381265098", "createdAt": "2020-03-25T15:31:01Z", "commit": {"oid": "47705188d3fb40bea88d544423e0b48045170613"}, "state": "COMMENTED", "comments": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxNTozMTowMVrOF7g0ag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxNjoyMDowOFrOF7jNnw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzk0ODAxMA==", "bodyText": "protected?", "url": "https://github.com/nuxeo/nuxeo/pull/3783#discussion_r397948010", "createdAt": "2020-03-25T15:31:01Z", "author": {"login": "troger"}, "path": "nuxeo-core/nuxeo-core-management/src/main/java/org/nuxeo/ecm/core/management/standby/StandbyComponent.java", "diffHunk": "@@ -38,14 +41,13 @@\n \n     protected final StandbyCommand command = new StandbyCommand();\n \n-    protected final Counter active = Framework.getService(MetricRegistry.class)\n-            .counter(MetricRegistry.name(StandbyComponent.class, \"active\"));\n+    MetricRegistry registry = SharedMetricRegistries.getOrCreate(MetricsService.class.getName());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "47705188d3fb40bea88d544423e0b48045170613"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzk1MDQ5OA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            metrics.graphite.pollInterval=60\n          \n          \n            \n            metrics.datadog.pollInterval=60\n          \n      \n    \n    \n  \n\n?", "url": "https://github.com/nuxeo/nuxeo/pull/3783#discussion_r397950498", "createdAt": "2020-03-25T15:34:03Z", "author": {"login": "troger"}, "path": "nuxeo-distribution/nuxeo-nxr-server/src/main/resources/templates/common-base/nuxeo.defaults", "diffHunk": "@@ -226,3 +226,29 @@ nuxeo.stream.health.check.delay=36h\n # JWT config, must be the same cluster-wide\n nuxeo.jwt.secret=\n nuxeo.jwt.defaultTTL=3600\n+\n+# Metrics\n+metrics.enabled=false\n+## Instrumentations\n+metrics.jvm.enabled=true\n+metrics.log4j.enabled=true\n+metrics.tomcat.enabled=true\n+\n+## Graphite reporter\n+metrics.graphite.enabled=false\n+metrics.graphite.host=graphite\n+metrics.graphite.port=2003\n+metrics.graphite.udp=false\n+metrics.graphite.pollInterval=30\n+metrics.graphite.prefix=\n+\n+## Datadog reporter\n+metrics.datadog.enabled=false\n+metrics.graphite.pollInterval=60", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "47705188d3fb40bea88d544423e0b48045170613"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzk1Njg0OQ==", "bodyText": "Maybe missing something between name and the errorMessage, such as space or some separator \ud83d\ude00", "url": "https://github.com/nuxeo/nuxeo/pull/3783#discussion_r397956849", "createdAt": "2020-03-25T15:41:54Z", "author": {"login": "troger"}, "path": "nuxeo-runtime/nuxeo-runtime-metrics/src/main/java/org/nuxeo/runtime/metrics/AbstractMetricsReporter.java", "diffHunk": "@@ -0,0 +1,113 @@\n+/*\n+ * (C) Copyright 2020 Nuxeo (http://nuxeo.com/) and others.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ * Contributors:\n+ *     bdelbosc\n+ */\n+package org.nuxeo.runtime.metrics;\n+\n+import static org.apache.commons.lang3.StringUtils.isBlank;\n+\n+import java.net.InetAddress;\n+import java.net.URI;\n+import java.net.URISyntaxException;\n+import java.net.UnknownHostException;\n+import java.util.Map;\n+\n+import org.nuxeo.runtime.api.Framework;\n+\n+/**\n+ * @since 11.1\n+ */\n+public abstract class AbstractMetricsReporter implements MetricsReporter {\n+\n+    protected Map<String, String> options;\n+\n+    protected long pollInterval;\n+\n+    @Override\n+    public void init(long pollInterval, Map<String, String> options) {\n+        this.options = options;\n+        this.pollInterval = pollInterval;\n+    }\n+\n+    protected String getCurrentHostname() {\n+        try {\n+            return InetAddress.getLocalHost().getHostName().split(\"\\\\.\")[0];\n+        } catch (UnknownHostException e) {\n+            return \"unknown\";\n+        }\n+    }\n+\n+    protected long getPollInterval() {\n+        return pollInterval;\n+    }\n+\n+    protected String getHostnameFromNuxeoUrl() {\n+        try {\n+            String url = Framework.getProperty(\"nuxeo.url\");\n+            if (isBlank(url)) {\n+                return \"\";\n+            }\n+            URI uri = new URI(url);\n+            String domain = uri.getHost();\n+            if (isBlank(domain)) {\n+                return \"\";\n+            }\n+            return domain.startsWith(\"www.\") ? domain.substring(4) : domain;\n+        } catch (URISyntaxException e) {\n+            return \"\";\n+        }\n+    }\n+\n+    protected String getOption(String name, String defaultValue) {\n+        String value = options.get(name);\n+        if (isBlank(value)) {\n+            return defaultValue;\n+        }\n+        return value;\n+    }\n+\n+    protected String requireOption(String name) {\n+        return requireOption(name, null);\n+    }\n+\n+    protected String requireOption(String name, String errorMessage) {\n+        String value = options.get(name);\n+        if (isBlank(value)) {\n+            throw new IllegalArgumentException(\"Metric Reporter configuration requires option: \" + name\n+                    + (isBlank(errorMessage) ? \"\" : errorMessage));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "47705188d3fb40bea88d544423e0b48045170613"}, "originalPosition": 91}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzk1ODI2NQ==", "bodyText": "Extra line not needed.", "url": "https://github.com/nuxeo/nuxeo/pull/3783#discussion_r397958265", "createdAt": "2020-03-25T15:43:39Z", "author": {"login": "troger"}, "path": "nuxeo-runtime/nuxeo-runtime-metrics/src/main/java/org/nuxeo/runtime/metrics/AbstractMetricsReporter.java", "diffHunk": "@@ -0,0 +1,113 @@\n+/*\n+ * (C) Copyright 2020 Nuxeo (http://nuxeo.com/) and others.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ * Contributors:\n+ *     bdelbosc\n+ */\n+package org.nuxeo.runtime.metrics;\n+\n+import static org.apache.commons.lang3.StringUtils.isBlank;\n+\n+import java.net.InetAddress;\n+import java.net.URI;\n+import java.net.URISyntaxException;\n+import java.net.UnknownHostException;\n+import java.util.Map;\n+\n+import org.nuxeo.runtime.api.Framework;\n+\n+/**\n+ * @since 11.1\n+ */\n+public abstract class AbstractMetricsReporter implements MetricsReporter {\n+\n+    protected Map<String, String> options;\n+\n+    protected long pollInterval;\n+\n+    @Override\n+    public void init(long pollInterval, Map<String, String> options) {\n+        this.options = options;\n+        this.pollInterval = pollInterval;\n+    }\n+\n+    protected String getCurrentHostname() {\n+        try {\n+            return InetAddress.getLocalHost().getHostName().split(\"\\\\.\")[0];\n+        } catch (UnknownHostException e) {\n+            return \"unknown\";\n+        }\n+    }\n+\n+    protected long getPollInterval() {\n+        return pollInterval;\n+    }\n+\n+    protected String getHostnameFromNuxeoUrl() {\n+        try {\n+            String url = Framework.getProperty(\"nuxeo.url\");\n+            if (isBlank(url)) {\n+                return \"\";\n+            }\n+            URI uri = new URI(url);\n+            String domain = uri.getHost();\n+            if (isBlank(domain)) {\n+                return \"\";\n+            }\n+            return domain.startsWith(\"www.\") ? domain.substring(4) : domain;\n+        } catch (URISyntaxException e) {\n+            return \"\";\n+        }\n+    }\n+\n+    protected String getOption(String name, String defaultValue) {\n+        String value = options.get(name);\n+        if (isBlank(value)) {\n+            return defaultValue;\n+        }\n+        return value;\n+    }\n+\n+    protected String requireOption(String name) {\n+        return requireOption(name, null);\n+    }\n+\n+    protected String requireOption(String name, String errorMessage) {\n+        String value = options.get(name);\n+        if (isBlank(value)) {\n+            throw new IllegalArgumentException(\"Metric Reporter configuration requires option: \" + name\n+                    + (isBlank(errorMessage) ? \"\" : errorMessage));\n+        }\n+        return value;\n+    }\n+\n+    protected int getOptionAsInt(String name, int defaultValue) {\n+        String value = options.get(name);\n+        if (isBlank(value)) {\n+            return defaultValue;\n+        }\n+        return Integer.valueOf(value);\n+    }\n+\n+    protected boolean getOptionAsBoolean(String name, boolean defaultValue) {\n+        String value = options.get(name);\n+        if (isBlank(value)) {\n+            return defaultValue;\n+        }\n+        return Boolean.valueOf(value);\n+    }\n+\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "47705188d3fb40bea88d544423e0b48045170613"}, "originalPosition": 112}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzk1OTM2MQ==", "bodyText": "Maybe MetricsConfigurationDescriptor to match the object name configuration?", "url": "https://github.com/nuxeo/nuxeo/pull/3783#discussion_r397959361", "createdAt": "2020-03-25T15:45:02Z", "author": {"login": "troger"}, "path": "nuxeo-runtime/nuxeo-runtime-metrics/src/main/java/org/nuxeo/runtime/metrics/MetricsDescriptor.java", "diffHunk": "@@ -18,402 +18,121 @@\n  */\n package org.nuxeo.runtime.metrics;\n \n-import static org.apache.logging.log4j.Level.INFO;\n-import static org.apache.logging.log4j.LogManager.ROOT_LOGGER_NAME;\n-\n-import java.io.Serializable;\n-import java.net.InetAddress;\n-import java.net.InetSocketAddress;\n-import java.net.UnknownHostException;\n import java.util.ArrayList;\n-import java.util.Arrays;\n import java.util.Collections;\n import java.util.List;\n import java.util.Map;\n import java.util.Set;\n-import java.util.concurrent.TimeUnit;\n import java.util.stream.Collectors;\n \n-import javax.management.MalformedObjectNameException;\n-import javax.management.ObjectName;\n-\n-import org.apache.commons.logging.LogFactory;\n-import org.apache.logging.log4j.LogManager;\n-import org.apache.logging.log4j.core.LoggerContext;\n-import org.apache.logging.log4j.core.config.Configuration;\n import org.nuxeo.common.xmap.annotation.XNode;\n import org.nuxeo.common.xmap.annotation.XNodeList;\n import org.nuxeo.common.xmap.annotation.XObject;\n-import org.nuxeo.runtime.api.Framework;\n-import org.nuxeo.runtime.management.ServerLocator;\n+import org.nuxeo.runtime.model.Descriptor;\n \n+import io.dropwizard.metrics5.Metric;\n import io.dropwizard.metrics5.MetricAttribute;\n+import io.dropwizard.metrics5.MetricFilter;\n import io.dropwizard.metrics5.MetricName;\n-import io.dropwizard.metrics5.MetricRegistry;\n-import io.dropwizard.metrics5.graphite.Graphite;\n-import io.dropwizard.metrics5.graphite.GraphiteReporter;\n-import io.dropwizard.metrics5.jmx.JmxReporter;\n-import io.dropwizard.metrics5.jvm.BufferPoolMetricSet;\n-import io.dropwizard.metrics5.jvm.FileDescriptorRatioGauge;\n-import io.dropwizard.metrics5.jvm.GarbageCollectorMetricSet;\n-import io.dropwizard.metrics5.jvm.JmxAttributeGauge;\n-import io.dropwizard.metrics5.jvm.MemoryUsageGaugeSet;\n-import io.dropwizard.metrics5.jvm.ThreadStatesGaugeSet;\n-import io.dropwizard.metrics5.log4j2.InstrumentedAppender;\n \n-@XObject(\"metrics\")\n-public class MetricsDescriptor implements Serializable {\n+@XObject(\"configuration\")\n+public class MetricsDescriptor implements Descriptor, MetricFilter {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "47705188d3fb40bea88d544423e0b48045170613"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzk2MTI2Mg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  <configuration enabled=\"${metrics.enabled}\">\n          \n          \n            \n                <configuration enabled=\"${metrics.enabled}\">\n          \n      \n    \n    \n  \n\n(indentation)", "url": "https://github.com/nuxeo/nuxeo/pull/3783#discussion_r397961262", "createdAt": "2020-03-25T15:47:23Z", "author": {"login": "troger"}, "path": "nuxeo-distribution/nuxeo-nxr-server/src/main/resources/templates/common-base/nxserver/config/metrics-config.xml", "diffHunk": "@@ -0,0 +1,61 @@\n+<?xml version=\"1.0\"?>\n+<component name=\"org.nuxeo.runtime.metrics.default.contrib\">\n+\n+  <extension target=\"org.nuxeo.runtime.metrics.MetricsService\" point=\"configuration\">\n+      <configuration enabled=\"${metrics.enabled}\">", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "47705188d3fb40bea88d544423e0b48045170613"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzk2MzM4Mg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * Called on new instance\n          \n          \n            \n                 * Called on new instance.", "url": "https://github.com/nuxeo/nuxeo/pull/3783#discussion_r397963382", "createdAt": "2020-03-25T15:49:49Z", "author": {"login": "troger"}, "path": "nuxeo-runtime/nuxeo-runtime-metrics/src/main/java/org/nuxeo/runtime/metrics/MetricsReporter.java", "diffHunk": "@@ -0,0 +1,48 @@\n+/*\n+ * (C) Copyright 2020 Nuxeo (http://nuxeo.com/) and others.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ * Contributors:\n+ *     bdelbosc\n+ */\n+package org.nuxeo.runtime.metrics;\n+\n+import java.util.Map;\n+import java.util.Set;\n+\n+import io.dropwizard.metrics5.MetricAttribute;\n+import io.dropwizard.metrics5.MetricFilter;\n+import io.dropwizard.metrics5.MetricRegistry;\n+\n+/**\n+ * @since 11.1\n+ */\n+public interface MetricsReporter {\n+\n+    /**\n+     * Called on new instance", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "47705188d3fb40bea88d544423e0b48045170613"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzk2MzgwNA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * Starts the metric reporter.\n          \n          \n            \n                 * Starts the metrics reporter.", "url": "https://github.com/nuxeo/nuxeo/pull/3783#discussion_r397963804", "createdAt": "2020-03-25T15:50:18Z", "author": {"login": "troger"}, "path": "nuxeo-runtime/nuxeo-runtime-metrics/src/main/java/org/nuxeo/runtime/metrics/MetricsReporter.java", "diffHunk": "@@ -0,0 +1,48 @@\n+/*\n+ * (C) Copyright 2020 Nuxeo (http://nuxeo.com/) and others.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ * Contributors:\n+ *     bdelbosc\n+ */\n+package org.nuxeo.runtime.metrics;\n+\n+import java.util.Map;\n+import java.util.Set;\n+\n+import io.dropwizard.metrics5.MetricAttribute;\n+import io.dropwizard.metrics5.MetricFilter;\n+import io.dropwizard.metrics5.MetricRegistry;\n+\n+/**\n+ * @since 11.1\n+ */\n+public interface MetricsReporter {\n+\n+    /**\n+     * Called on new instance\n+     */\n+    void init(long pollInterval, Map<String, String> options);\n+\n+    /**\n+     * Starts the metric reporter.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "47705188d3fb40bea88d544423e0b48045170613"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzk2MzkwMw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * Stops the metric reporter.\n          \n          \n            \n                 * Stops the metrics reporter.", "url": "https://github.com/nuxeo/nuxeo/pull/3783#discussion_r397963903", "createdAt": "2020-03-25T15:50:26Z", "author": {"login": "troger"}, "path": "nuxeo-runtime/nuxeo-runtime-metrics/src/main/java/org/nuxeo/runtime/metrics/MetricsReporter.java", "diffHunk": "@@ -0,0 +1,48 @@\n+/*\n+ * (C) Copyright 2020 Nuxeo (http://nuxeo.com/) and others.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ * Contributors:\n+ *     bdelbosc\n+ */\n+package org.nuxeo.runtime.metrics;\n+\n+import java.util.Map;\n+import java.util.Set;\n+\n+import io.dropwizard.metrics5.MetricAttribute;\n+import io.dropwizard.metrics5.MetricFilter;\n+import io.dropwizard.metrics5.MetricRegistry;\n+\n+/**\n+ * @since 11.1\n+ */\n+public interface MetricsReporter {\n+\n+    /**\n+     * Called on new instance\n+     */\n+    void init(long pollInterval, Map<String, String> options);\n+\n+    /**\n+     * Starts the metric reporter.\n+     */\n+    void start(MetricRegistry registry, MetricFilter filter, Set<MetricAttribute> deniedExpansions);\n+\n+    /**\n+     * Stops the metric reporter.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "47705188d3fb40bea88d544423e0b48045170613"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzk4MDYxNQ==", "bodyText": "Do we need both debug and warn?", "url": "https://github.com/nuxeo/nuxeo/pull/3783#discussion_r397980615", "createdAt": "2020-03-25T16:11:26Z", "author": {"login": "troger"}, "path": "nuxeo-runtime/nuxeo-runtime-metrics/src/main/java/org/nuxeo/runtime/metrics/reporter/DatadogReporter.java", "diffHunk": "@@ -0,0 +1,160 @@\n+/*\n+ * (C) Copyright 2020 Nuxeo (http://nuxeo.com/) and others.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ * Contributors:\n+ *     bdelbosc\n+ */\n+package org.nuxeo.runtime.metrics.reporter;\n+\n+import static org.apache.commons.lang3.StringUtils.isBlank;\n+\n+import java.util.Arrays;\n+import java.util.EnumSet;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Set;\n+import java.util.concurrent.TimeUnit;\n+import java.util.stream.Collectors;\n+\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+import org.coursera.metrics.datadog.DefaultMetricNameFormatter;\n+import org.coursera.metrics.datadog.transport.HttpTransport;\n+import org.coursera.metrics.datadog.transport.Transport;\n+import org.coursera.metrics.datadog.transport.UdpTransport;\n+import org.nuxeo.runtime.metrics.AbstractMetricsReporter;\n+import org.nuxeo.runtime.metrics.reporter.patch.NuxeoDatadogReporter;\n+\n+import io.dropwizard.metrics5.MetricAttribute;\n+import io.dropwizard.metrics5.MetricFilter;\n+import io.dropwizard.metrics5.MetricRegistry;\n+\n+/**\n+ * Patches the coursera implementation to support metric with tags.\n+ *\n+ * @since 11.1\n+ */\n+public class DatadogReporter extends AbstractMetricsReporter {\n+\n+    private static final Logger log = LogManager.getLogger(DatadogReporter.class);\n+\n+    protected NuxeoDatadogReporter reporter;\n+\n+    protected String hostname;\n+\n+    protected List<String> tags;\n+\n+    @Override\n+    public void init(long pollInterval, Map<String, String> options) {\n+        super.init(pollInterval, options);\n+        hostname = getHostname();\n+        tags = getTags();\n+    }\n+\n+    private String getHostname() {\n+        String value = options.get(\"hostname\");\n+        if (!isBlank(value)) {\n+            return value;\n+        }\n+        value = getHostnameFromNuxeoUrl();\n+        if (!isBlank(value)) {\n+            return value;\n+        }\n+        return getCurrentHostname();\n+    }\n+\n+    @Override\n+    public void start(MetricRegistry registry, MetricFilter filter, Set<MetricAttribute> deniedExpansions) {\n+        Transport transport;\n+        if (getOptionAsBoolean(\"udp\", false)) {\n+            String host = requireOption(\"host\", \" when using UDP\");\n+            int port = getOptionAsInt(\"port\", 8125);\n+            log.warn(\"Connecting using UDP {}:{} reporting every {}s from {}\", host, port, pollInterval, hostname);\n+            transport = new UdpTransport.Builder().withStatsdHost(host).withPort(port).withRetryingLookup(true).build();\n+        } else {\n+            String apiKey = requireOption(\"apiKey\", \" when using HTTP\");\n+            transport = new HttpTransport.Builder().withApiKey(apiKey).build();\n+            log.debug(\"Connecting using HTTP transport using apiKey reporting every {}s from {}\", pollInterval,\n+                    hostname);\n+            log.warn(\"Connecting using HTTP transport using apiKey reporting every {}s from {}\", pollInterval,\n+                    hostname);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "47705188d3fb40bea88d544423e0b48045170613"}, "originalPosition": 92}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzk4MzM3Ng==", "bodyText": "Is it accurate? I don't see any \"tags\" references in the class.", "url": "https://github.com/nuxeo/nuxeo/pull/3783#discussion_r397983376", "createdAt": "2020-03-25T16:15:02Z", "author": {"login": "troger"}, "path": "nuxeo-runtime/nuxeo-runtime-metrics/src/main/java/org/nuxeo/runtime/metrics/reporter/GraphiteReporter.java", "diffHunk": "@@ -0,0 +1,101 @@\n+/*\n+ * (C) Copyright 2020 Nuxeo (http://nuxeo.com/) and others.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ * Contributors:\n+ *     bdelbosc\n+ */\n+package org.nuxeo.runtime.metrics.reporter;\n+\n+import java.net.InetSocketAddress;\n+import java.util.Map;\n+import java.util.Set;\n+import java.util.concurrent.TimeUnit;\n+\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+import org.nuxeo.runtime.metrics.AbstractMetricsReporter;\n+import org.nuxeo.runtime.metrics.reporter.patch.NuxeoGraphiteReporter;\n+\n+import io.dropwizard.metrics5.MetricAttribute;\n+import io.dropwizard.metrics5.MetricFilter;\n+import io.dropwizard.metrics5.MetricRegistry;\n+import io.dropwizard.metrics5.graphite.Graphite;\n+import io.dropwizard.metrics5.graphite.GraphiteSender;\n+import io.dropwizard.metrics5.graphite.GraphiteUDP;\n+\n+/**\n+ * Patches the dropwizard metrics implementation to support metric with tags.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "47705188d3fb40bea88d544423e0b48045170613"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzk4Mzg2NA==", "bodyText": "Isn't it for the NuxeoDatadogReporter class?", "url": "https://github.com/nuxeo/nuxeo/pull/3783#discussion_r397983864", "createdAt": "2020-03-25T16:15:38Z", "author": {"login": "troger"}, "path": "nuxeo-runtime/nuxeo-runtime-metrics/src/main/java/org/nuxeo/runtime/metrics/reporter/DatadogReporter.java", "diffHunk": "@@ -0,0 +1,160 @@\n+/*\n+ * (C) Copyright 2020 Nuxeo (http://nuxeo.com/) and others.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ * Contributors:\n+ *     bdelbosc\n+ */\n+package org.nuxeo.runtime.metrics.reporter;\n+\n+import static org.apache.commons.lang3.StringUtils.isBlank;\n+\n+import java.util.Arrays;\n+import java.util.EnumSet;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Set;\n+import java.util.concurrent.TimeUnit;\n+import java.util.stream.Collectors;\n+\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+import org.coursera.metrics.datadog.DefaultMetricNameFormatter;\n+import org.coursera.metrics.datadog.transport.HttpTransport;\n+import org.coursera.metrics.datadog.transport.Transport;\n+import org.coursera.metrics.datadog.transport.UdpTransport;\n+import org.nuxeo.runtime.metrics.AbstractMetricsReporter;\n+import org.nuxeo.runtime.metrics.reporter.patch.NuxeoDatadogReporter;\n+\n+import io.dropwizard.metrics5.MetricAttribute;\n+import io.dropwizard.metrics5.MetricFilter;\n+import io.dropwizard.metrics5.MetricRegistry;\n+\n+/**\n+ * Patches the coursera implementation to support metric with tags.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "47705188d3fb40bea88d544423e0b48045170613"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzk4NjM5MA==", "bodyText": "Worth adding a small comment maybe? So that someone won't clean it up at some point \ud83d\ude2c", "url": "https://github.com/nuxeo/nuxeo/pull/3783#discussion_r397986390", "createdAt": "2020-03-25T16:19:03Z", "author": {"login": "troger"}, "path": "nuxeo-runtime/nuxeo-runtime-test/src/test/java/org/nuxeo/runtime/metrics/TestMetricsService.java", "diffHunk": "@@ -18,33 +18,56 @@\n  *\n  */\n \n-package org.nuxeo.runtime;\n+package org.nuxeo.runtime.metrics;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertNotEquals;\n+import static org.junit.Assert.assertNotNull;\n+\n+import java.util.Arrays;\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+import javax.inject.Inject;\n \n import org.junit.Test;\n import org.junit.runner.RunWith;\n-import org.nuxeo.runtime.metrics.MetricsDescriptor;\n+import org.nuxeo.runtime.test.runner.Deploy;\n import org.nuxeo.runtime.test.runner.Features;\n import org.nuxeo.runtime.test.runner.FeaturesRunner;\n import org.nuxeo.runtime.test.runner.RuntimeFeature;\n \n-import java.util.Arrays;\n-import java.util.List;\n-import java.util.stream.Collectors;\n-\n-import static org.junit.Assert.assertEquals;\n-import static org.junit.Assert.assertNotEquals;\n+import io.dropwizard.metrics5.MetricName;\n \n /**\n- * @since 9.3\n+ * @since 11.1\n  */\n @RunWith(FeaturesRunner.class)\n @Features(RuntimeFeature.class)\n-public class TestGraphiteReporter {\n+@Deploy(\"org.nuxeo.runtime.metrics\")\n+@Deploy(\"org.nuxeo.runtime.metrics:test-metrics-contrib.xml\")\n+public class TestMetricsService {\n+\n+    @Inject\n+    protected MetricsService service;\n \n     @Test\n-    public void testFilterMetrics() {\n+    public void testService() {\n+        assertNotNull(service);\n+        service.stopReporters();\n+        service.startReporters();\n+        service.stopReporters();\n+        service.startReporters();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzc3ODEyNQ=="}, "originalCommit": {"oid": "012dc8b2253a3315ed0bb9c1dd3a5db5642da35f"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzk4NzIzMQ==", "bodyText": "Is this something real?", "url": "https://github.com/nuxeo/nuxeo/pull/3783#discussion_r397987231", "createdAt": "2020-03-25T16:20:08Z", "author": {"login": "troger"}, "path": "addons/nuxeo-datadog-reporter/src/main/resources/OSGI-INF/datadog-contrib.xml", "diffHunk": "@@ -8,6 +8,27 @@\n       <host>${datadog.host:=}</host>\n       <pollInterval>${datadog.pollinterval:=60}</pollInterval>\n       <tags>${datadog.tags:=nuxeo}</tags>\n+\n+      <filter method=\"substring\">\n+        <includes>\n+          <include>jvm.</include>\n+          <include>nuxeo.</include>\n+        </includes>\n+        <excludes>\n+          <exclude>jvm.useless</exclude>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "47705188d3fb40bea88d544423e0b48045170613"}, "originalPosition": 11}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "012dc8b2253a3315ed0bb9c1dd3a5db5642da35f", "author": {"user": {"login": "bdelbosc", "name": "Benoit Delbosc"}}, "url": "https://github.com/nuxeo/nuxeo/commit/012dc8b2253a3315ed0bb9c1dd3a5db5642da35f", "committedDate": "2020-03-23T08:52:16Z", "message": "NXP-28795: Add automation operators to stop start Metrics Reporters"}, "afterCommit": {"oid": "0b477523275026a324f1faefb03439a17c015738", "author": {"user": {"login": "bdelbosc", "name": "Benoit Delbosc"}}, "url": "https://github.com/nuxeo/nuxeo/commit/0b477523275026a324f1faefb03439a17c015738", "committedDate": "2020-03-26T11:13:56Z", "message": "NXP-28795: Add automation operators to stop start Metrics Reporters"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e6d82190d49c7ee0a9d5ab2e13752a0b864485e0", "author": {"user": {"login": "bdelbosc", "name": "Benoit Delbosc"}}, "url": "https://github.com/nuxeo/nuxeo/commit/e6d82190d49c7ee0a9d5ab2e13752a0b864485e0", "committedDate": "2020-03-26T11:58:42Z", "message": "NXP-28639: Upgrade to dropwizzard metrics 5\n\nRemoving StatsD and CSV Reporters"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f7c581c2f895b0d6a231015c3603cc56efa27429", "author": {"user": {"login": "bdelbosc", "name": "Benoit Delbosc"}}, "url": "https://github.com/nuxeo/nuxeo/commit/f7c581c2f895b0d6a231015c3603cc56efa27429", "committedDate": "2020-03-26T11:58:42Z", "message": "NXP-28639: Add a NuxeoGraphiteReporter to handle metric with tags\n\nUse tagged metric on WorkManager, Computations, Elasticsearch\nand Cache.\n\nFor Graphite WorkManager and Elasticsearch metrics have new names."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a0940c3bd525d2fd30bb24b0ed784918d387db3a", "author": {"user": {"login": "bdelbosc", "name": "Benoit Delbosc"}}, "url": "https://github.com/nuxeo/nuxeo/commit/a0940c3bd525d2fd30bb24b0ed784918d387db3a", "committedDate": "2020-03-26T11:58:42Z", "message": "NXP-28639: Copy coursera DatadogReporter for customization"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4df4e103a37215a9cc8043c1cbbe7fa2d3132908", "author": {"user": {"login": "bdelbosc", "name": "Benoit Delbosc"}}, "url": "https://github.com/nuxeo/nuxeo/commit/4df4e103a37215a9cc8043c1cbbe7fa2d3132908", "committedDate": "2020-03-26T11:58:42Z", "message": "NXP-28639: Add a NuxeoDatadogRerpoter to handle metric with tags"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d724cf0f8635a070632f43f056cbcdfbd48d729a", "author": {"user": {"login": "bdelbosc", "name": "Benoit Delbosc"}}, "url": "https://github.com/nuxeo/nuxeo/commit/d724cf0f8635a070632f43f056cbcdfbd48d729a", "committedDate": "2020-03-26T11:58:42Z", "message": "NXP-28639: Report DLQ Work counter as 0 on start\n\nCache StreamWorkManager gauges to reduce Kafka round trip."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "55746d72f1681848853bb1913f0341265de5e738", "author": {"user": {"login": "bdelbosc", "name": "Benoit Delbosc"}}, "url": "https://github.com/nuxeo/nuxeo/commit/55746d72f1681848853bb1913f0341265de5e738", "committedDate": "2020-03-26T12:43:43Z", "message": "NXP-28639: Uniformize metric names, use tags when possible"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "eba13e8e62bccf408d0e3f41ba43aafdbb8838ef", "author": {"user": {"login": "bdelbosc", "name": "Benoit Delbosc"}}, "url": "https://github.com/nuxeo/nuxeo/commit/eba13e8e62bccf408d0e3f41ba43aafdbb8838ef", "committedDate": "2020-03-26T12:43:43Z", "message": "NXP-28696: Reduce the number of metrics"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e4d63be7662246e2fb19ba8a6eabd0835eab82b9", "author": {"user": {"login": "bdelbosc", "name": "Benoit Delbosc"}}, "url": "https://github.com/nuxeo/nuxeo/commit/e4d63be7662246e2fb19ba8a6eabd0835eab82b9", "committedDate": "2020-03-26T12:43:43Z", "message": "NXP-28760: Change default Datadog poll intervar to 1min"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8e9eeea29a9aeb2e5c98da48dc64a1b1f621c74d", "author": {"user": {"login": "bdelbosc", "name": "Benoit Delbosc"}}, "url": "https://github.com/nuxeo/nuxeo/commit/8e9eeea29a9aeb2e5c98da48dc64a1b1f621c74d", "committedDate": "2020-03-26T12:43:43Z", "message": "NXP-28639: Remove explicit fluent-hc dependency"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0b477523275026a324f1faefb03439a17c015738", "author": {"user": {"login": "bdelbosc", "name": "Benoit Delbosc"}}, "url": "https://github.com/nuxeo/nuxeo/commit/0b477523275026a324f1faefb03439a17c015738", "committedDate": "2020-03-26T11:13:56Z", "message": "NXP-28795: Add automation operators to stop start Metrics Reporters"}, "afterCommit": {"oid": "947f27a33e8969bf4bc80c859d9e2989a2d94e54", "author": {"user": {"login": "bdelbosc", "name": "Benoit Delbosc"}}, "url": "https://github.com/nuxeo/nuxeo/commit/947f27a33e8969bf4bc80c859d9e2989a2d94e54", "committedDate": "2020-03-26T12:43:43Z", "message": "NXP-28795: Add automation operators to stop start Metrics Reporters"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4f778796fbee9e0bd0bb7155f62c52d4aa870160", "author": {"user": {"login": "bdelbosc", "name": "Benoit Delbosc"}}, "url": "https://github.com/nuxeo/nuxeo/commit/4f778796fbee9e0bd0bb7155f62c52d4aa870160", "committedDate": "2020-03-26T13:35:08Z", "message": "NXP-28795: Refactor the MetricsService create a reporter EP\n\nMetrics can be enabled, we can choose the instrumentation and filter\ncan be shared by different reporters.\nAdd Graphite and Datadog reporters."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6efcf6c986ad173c4a7a68f4206dc5b98ab2b923", "author": {"user": {"login": "bdelbosc", "name": "Benoit Delbosc"}}, "url": "https://github.com/nuxeo/nuxeo/commit/6efcf6c986ad173c4a7a68f4206dc5b98ab2b923", "committedDate": "2020-03-26T13:35:08Z", "message": "NXP-28795: Remove the Datadog addon and package\n\nDatadog is now supported by default in Nuxeo using the MetricsService"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f8e7441adeea672f4c24231a08f01e75baf23525", "author": {"user": {"login": "bdelbosc", "name": "Benoit Delbosc"}}, "url": "https://github.com/nuxeo/nuxeo/commit/f8e7441adeea672f4c24231a08f01e75baf23525", "committedDate": "2020-03-26T13:35:08Z", "message": "NXP-26800: Add opencensus dependency"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "639cd5f919909bf7edd12bd5342125ea60e63b7c", "author": {"user": {"login": "bdelbosc", "name": "Benoit Delbosc"}}, "url": "https://github.com/nuxeo/nuxeo/commit/639cd5f919909bf7edd12bd5342125ea60e63b7c", "committedDate": "2020-03-26T13:35:08Z", "message": "NXP-26799: Add prometheus metrics reporter"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "25132c6da6d3ed25eed680fb63f2618518f85ec1", "author": {"user": {"login": "bdelbosc", "name": "Benoit Delbosc"}}, "url": "https://github.com/nuxeo/nuxeo/commit/25132c6da6d3ed25eed680fb63f2618518f85ec1", "committedDate": "2020-03-26T13:35:08Z", "message": "NXP-28639: Add a JMX metric reporter"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "652b0f6e10eb25c60e1cb3f0cf62d590a4c1a561", "author": {"user": {"login": "bdelbosc", "name": "Benoit Delbosc"}}, "url": "https://github.com/nuxeo/nuxeo/commit/652b0f6e10eb25c60e1cb3f0cf62d590a4c1a561", "committedDate": "2020-03-26T13:35:08Z", "message": "NXP-28795: Add automation operators to stop start Metrics Reporters"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "947f27a33e8969bf4bc80c859d9e2989a2d94e54", "author": {"user": {"login": "bdelbosc", "name": "Benoit Delbosc"}}, "url": "https://github.com/nuxeo/nuxeo/commit/947f27a33e8969bf4bc80c859d9e2989a2d94e54", "committedDate": "2020-03-26T12:43:43Z", "message": "NXP-28795: Add automation operators to stop start Metrics Reporters"}, "afterCommit": {"oid": "652b0f6e10eb25c60e1cb3f0cf62d590a4c1a561", "author": {"user": {"login": "bdelbosc", "name": "Benoit Delbosc"}}, "url": "https://github.com/nuxeo/nuxeo/commit/652b0f6e10eb25c60e1cb3f0cf62d590a4c1a561", "committedDate": "2020-03-26T13:35:08Z", "message": "NXP-28795: Add automation operators to stop start Metrics Reporters"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgyMTkwMzM4", "url": "https://github.com/nuxeo/nuxeo/pull/3783#pullrequestreview-382190338", "createdAt": "2020-03-26T16:33:06Z", "commit": {"oid": "652b0f6e10eb25c60e1cb3f0cf62d590a4c1a561"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4859, "cost": 1, "resetAt": "2021-11-03T18:41:40Z"}}}