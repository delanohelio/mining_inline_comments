{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDYzOTgyMTEy", "number": 4241, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxMzoyNzozOFrOEV0_fQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QxNDoyNTo1NlrOEWPHPA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxMzIzNzczOnYy", "diffSide": "RIGHT", "path": "modules/platform/nuxeo-automation/nuxeo-automation-core/src/main/java/org/nuxeo/ecm/automation/core/AutomationComponent.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxMzoyNzozOFrOG8zemA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxMzozODo1MVrOG8z74w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjQxMTE2MA==", "bodyText": "What do you think about merging the two try/catch? Something like below:\n            try {\n                Class<?> type = Class.forName(opc.type);\n                service.putOperation(type, opc.replace, contributor.getName().toString(), widgetDefinitionList);\n            } catch (ClassNotFoundException e) {\n                throw new IllegalArgumentException(\"Invalid operation class '\" + opc.type + \"': class not found.\");\n            } catch (OperationException e) {\n                throw new RuntimeException(e);\n            }", "url": "https://github.com/nuxeo/nuxeo/pull/4241#discussion_r466411160", "createdAt": "2020-08-06T13:27:38Z", "author": {"login": "kevinleturc"}, "path": "modules/platform/nuxeo-automation/nuxeo-automation-core/src/main/java/org/nuxeo/ecm/automation/core/AutomationComponent.java", "diffHunk": "@@ -135,21 +136,25 @@ public void registerContribution(Object contribution, String extensionPoint, Com\n                     widgetDefinitionList.add(widgetDescriptor.getWidgetDefinition());\n                 }\n             }\n+            Class<?> type;\n             try {\n-                service.putOperation(opc.type, opc.replace, contributor.getName().toString(), widgetDefinitionList);\n+                type = Class.forName(opc.type);\n+            } catch (ClassNotFoundException e) {\n+                throw new IllegalArgumentException(\"Invalid operation class '\" + opc.type + \"': class not found.\");\n+            }\n+            try {\n+                service.putOperation(type, opc.replace, contributor.getName().toString(), widgetDefinitionList);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b1da43408bff7ec1ecfe1524a542a5d3c57e126a"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjQxODY1OQ==", "bodyText": "will let the T&P go through like this first, and will make the change after", "url": "https://github.com/nuxeo/nuxeo/pull/4241#discussion_r466418659", "createdAt": "2020-08-06T13:38:51Z", "author": {"login": "atchertchian"}, "path": "modules/platform/nuxeo-automation/nuxeo-automation-core/src/main/java/org/nuxeo/ecm/automation/core/AutomationComponent.java", "diffHunk": "@@ -135,21 +136,25 @@ public void registerContribution(Object contribution, String extensionPoint, Com\n                     widgetDefinitionList.add(widgetDescriptor.getWidgetDefinition());\n                 }\n             }\n+            Class<?> type;\n             try {\n-                service.putOperation(opc.type, opc.replace, contributor.getName().toString(), widgetDefinitionList);\n+                type = Class.forName(opc.type);\n+            } catch (ClassNotFoundException e) {\n+                throw new IllegalArgumentException(\"Invalid operation class '\" + opc.type + \"': class not found.\");\n+            }\n+            try {\n+                service.putOperation(type, opc.replace, contributor.getName().toString(), widgetDefinitionList);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjQxMTE2MA=="}, "originalCommit": {"oid": "b1da43408bff7ec1ecfe1524a542a5d3c57e126a"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxNzUxNzQwOnYy", "diffSide": "RIGHT", "path": "modules/platform/nuxeo-automation/nuxeo-automation-core/src/main/java/org/nuxeo/ecm/automation/core/AutomationComponent.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QxNDoyNTo1NlrOG9b-cg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QxNDozMDoyMVrOG9cJog==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzA3NDY3NA==", "bodyText": "Not sure you need this declaration outside the try/catch?", "url": "https://github.com/nuxeo/nuxeo/pull/4241#discussion_r467074674", "createdAt": "2020-08-07T14:25:56Z", "author": {"login": "kevinleturc"}, "path": "modules/platform/nuxeo-automation/nuxeo-automation-core/src/main/java/org/nuxeo/ecm/automation/core/AutomationComponent.java", "diffHunk": "@@ -135,21 +136,23 @@ public void registerContribution(Object contribution, String extensionPoint, Com\n                     widgetDefinitionList.add(widgetDescriptor.getWidgetDefinition());\n                 }\n             }\n+            Class<?> type;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b32609afd602099902c028adda6aac7eb889a6d5"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzA3NzUzOA==", "bodyText": "indeed", "url": "https://github.com/nuxeo/nuxeo/pull/4241#discussion_r467077538", "createdAt": "2020-08-07T14:30:21Z", "author": {"login": "atchertchian"}, "path": "modules/platform/nuxeo-automation/nuxeo-automation-core/src/main/java/org/nuxeo/ecm/automation/core/AutomationComponent.java", "diffHunk": "@@ -135,21 +136,23 @@ public void registerContribution(Object contribution, String extensionPoint, Com\n                     widgetDefinitionList.add(widgetDescriptor.getWidgetDefinition());\n                 }\n             }\n+            Class<?> type;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzA3NDY3NA=="}, "originalCommit": {"oid": "b32609afd602099902c028adda6aac7eb889a6d5"}, "originalPosition": 15}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4377, "cost": 1, "resetAt": "2021-11-03T18:41:40Z"}}}