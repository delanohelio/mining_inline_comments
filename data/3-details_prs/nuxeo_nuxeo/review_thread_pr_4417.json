{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTExNDE2NDIz", "number": 4417, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQxNTo1OToxNVrOEy4ifg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxNToxNjoxOFrOEzWMmg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxNzkwNTkwOnYy", "diffSide": "RIGHT", "path": "modules/core/nuxeo-core-storage-sql/nuxeo-core-storage-sql/src/main/java/org/nuxeo/ecm/core/storage/sql/jdbc/NXQLQueryMaker.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQxNTo1OToxNVrOHpxcJA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQxNTo1OToxNVrOHpxcJA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzU2MzY4NA==", "bodyText": "Space after ,", "url": "https://github.com/nuxeo/nuxeo/pull/4417#discussion_r513563684", "createdAt": "2020-10-28T15:59:15Z", "author": {"login": "efge"}, "path": "modules/core/nuxeo-core-storage-sql/nuxeo-core-storage-sql/src/main/java/org/nuxeo/ecm/core/storage/sql/jdbc/NXQLQueryMaker.java", "diffHunk": "@@ -1101,7 +1101,7 @@ public void visitFromClause(FromClause node) {\n                 }\n                 Set<String> subTypes = model.getDocumentSubTypes(typeName);\n                 if (subTypes == null) {\n-                    throw new QueryParseException(\"Unknown type: \" + typeName);\n+                    throw new QueryParseException(\"Unknown type: \" + typeName,SC_BAD_REQUEST);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "68b0c7ef4192d88cfb9081f6604e07ebefc4af80"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxNzk5NzEyOnYy", "diffSide": "RIGHT", "path": "modules/core/nuxeo-core-query/src/main/java/org/nuxeo/ecm/core/query/QueryParseException.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQxNjoxNzozNVrOHpyV4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQxNjoxNzozNVrOHpyV4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzU3ODQ2NA==", "bodyText": "Formatter should put static imports before regular ones.", "url": "https://github.com/nuxeo/nuxeo/pull/4417#discussion_r513578464", "createdAt": "2020-10-28T16:17:35Z", "author": {"login": "efge"}, "path": "modules/core/nuxeo-core-query/src/main/java/org/nuxeo/ecm/core/query/QueryParseException.java", "diffHunk": "@@ -22,6 +22,7 @@\n package org.nuxeo.ecm.core.query;\n \n import org.nuxeo.ecm.core.api.NuxeoException;\n+import static org.apache.http.HttpStatus.SC_BAD_REQUEST;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2feb3b345210ba2cea85072002e470bc8b8f2639"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxNzk5ODM3OnYy", "diffSide": "RIGHT", "path": "modules/core/nuxeo-core-query/src/main/java/org/nuxeo/ecm/core/query/QueryParseException.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQxNjoxNzo1MVrOHpyWmw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQxNjoxNzo1MVrOHpyWmw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzU3ODY1MQ==", "bodyText": "Ok but all other super calls in other constructors should do the same", "url": "https://github.com/nuxeo/nuxeo/pull/4417#discussion_r513578651", "createdAt": "2020-10-28T16:17:51Z", "author": {"login": "efge"}, "path": "modules/core/nuxeo-core-query/src/main/java/org/nuxeo/ecm/core/query/QueryParseException.java", "diffHunk": "@@ -34,7 +35,7 @@ public QueryParseException() {\n     }\n \n     public QueryParseException(String message) {\n-        super(message);\n+        super(message, SC_BAD_REQUEST);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2feb3b345210ba2cea85072002e470bc8b8f2639"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxNzk5OTYwOnYy", "diffSide": "RIGHT", "path": "modules/core/nuxeo-core-storage-sql/nuxeo-core-storage-sql/src/main/java/org/nuxeo/ecm/core/storage/sql/jdbc/JDBCMapper.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQxNjoxODowOVrOHpyXWw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQxNjoyMDowOVrOHpydrw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzU3ODg0Mw==", "bodyText": "All changes in this class not needed after the constructor changes are done.", "url": "https://github.com/nuxeo/nuxeo/pull/4417#discussion_r513578843", "createdAt": "2020-10-28T16:18:09Z", "author": {"login": "efge"}, "path": "modules/core/nuxeo-core-storage-sql/nuxeo-core-storage-sql/src/main/java/org/nuxeo/ecm/core/storage/sql/jdbc/JDBCMapper.java", "diffHunk": "@@ -428,7 +430,7 @@ public IterableQueryResult queryAndFetch(String query, String queryType, QueryFi\n         try {\n             return new ResultSetQueryResult(queryMaker, query, queryFilter, pathResolver, this, params);\n         } catch (SQLException e) {\n-            throw new NuxeoException(\"Invalid query: \" + queryType + \": \" + query, e);\n+            throw new NuxeoException(\"Invalid query: \" + queryType + \": \" + query, e, SC_BAD_REQUEST);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2feb3b345210ba2cea85072002e470bc8b8f2639"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzU3OTE2MQ==", "bodyText": "Hm sorry forget about this, I was wrong.", "url": "https://github.com/nuxeo/nuxeo/pull/4417#discussion_r513579161", "createdAt": "2020-10-28T16:18:33Z", "author": {"login": "efge"}, "path": "modules/core/nuxeo-core-storage-sql/nuxeo-core-storage-sql/src/main/java/org/nuxeo/ecm/core/storage/sql/jdbc/JDBCMapper.java", "diffHunk": "@@ -428,7 +430,7 @@ public IterableQueryResult queryAndFetch(String query, String queryType, QueryFi\n         try {\n             return new ResultSetQueryResult(queryMaker, query, queryFilter, pathResolver, this, params);\n         } catch (SQLException e) {\n-            throw new NuxeoException(\"Invalid query: \" + queryType + \": \" + query, e);\n+            throw new NuxeoException(\"Invalid query: \" + queryType + \": \" + query, e, SC_BAD_REQUEST);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzU3ODg0Mw=="}, "originalCommit": {"oid": "2feb3b345210ba2cea85072002e470bc8b8f2639"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzU4MDQ2Mw==", "bodyText": "It's a NuxeoException not a QueryParseException, so by default it throws a 500 status code if not precised otherwise.", "url": "https://github.com/nuxeo/nuxeo/pull/4417#discussion_r513580463", "createdAt": "2020-10-28T16:20:09Z", "author": {"login": "charlesboidot"}, "path": "modules/core/nuxeo-core-storage-sql/nuxeo-core-storage-sql/src/main/java/org/nuxeo/ecm/core/storage/sql/jdbc/JDBCMapper.java", "diffHunk": "@@ -428,7 +430,7 @@ public IterableQueryResult queryAndFetch(String query, String queryType, QueryFi\n         try {\n             return new ResultSetQueryResult(queryMaker, query, queryFilter, pathResolver, this, params);\n         } catch (SQLException e) {\n-            throw new NuxeoException(\"Invalid query: \" + queryType + \": \" + query, e);\n+            throw new NuxeoException(\"Invalid query: \" + queryType + \": \" + query, e, SC_BAD_REQUEST);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzU3ODg0Mw=="}, "originalCommit": {"oid": "2feb3b345210ba2cea85072002e470bc8b8f2639"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyMjE2ODEwOnYy", "diffSide": "RIGHT", "path": "modules/core/nuxeo-core-query/src/main/java/org/nuxeo/ecm/core/query/QueryParseException.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxMzowOToyMFrOHqbAUg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxMzowOToyMFrOHqbAUg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDI0NDY5MA==", "bodyText": "This one should call super(SC_BAD_REQUEST);", "url": "https://github.com/nuxeo/nuxeo/pull/4417#discussion_r514244690", "createdAt": "2020-10-29T13:09:20Z", "author": {"login": "kevinleturc"}, "path": "modules/core/nuxeo-core-query/src/main/java/org/nuxeo/ecm/core/query/QueryParseException.java", "diffHunk": "@@ -34,15 +35,15 @@ public QueryParseException() {\n     }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "98c7fcf9d51b4f48697cac12a68165b790308ecd"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyMjc2NTA2OnYy", "diffSide": "RIGHT", "path": "modules/core/nuxeo-core-query/src/main/java/org/nuxeo/ecm/core/query/QueryParseException.java", "isResolved": true, "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxNToxNjoxOFrOHqg1uQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxNjoyNjowOVrOHrWnjQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDM0MDI4MQ==", "bodyText": "What about using javax.servlet.http.HttpServletResponse.SC_BAD_REQUEST like what we did in other Exception such as DocumentNotFoundException or ConcurrentUpdateException?\nSame for other status code.", "url": "https://github.com/nuxeo/nuxeo/pull/4417#discussion_r514340281", "createdAt": "2020-10-29T15:16:18Z", "author": {"login": "troger"}, "path": "modules/core/nuxeo-core-query/src/main/java/org/nuxeo/ecm/core/query/QueryParseException.java", "diffHunk": "@@ -21,6 +21,8 @@\n \n package org.nuxeo.ecm.core.query;\n \n+import static org.apache.http.HttpStatus.SC_BAD_REQUEST;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8fa7a82e8a170780eb1170c825915c5d6e4f1551"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTAwNDQ4OA==", "bodyText": "I used the same SC_BAD_REQUEST as the PR here", "url": "https://github.com/nuxeo/nuxeo/pull/4417#discussion_r515004488", "createdAt": "2020-10-30T10:35:26Z", "author": {"login": "charlesboidot"}, "path": "modules/core/nuxeo-core-query/src/main/java/org/nuxeo/ecm/core/query/QueryParseException.java", "diffHunk": "@@ -21,6 +21,8 @@\n \n package org.nuxeo.ecm.core.query;\n \n+import static org.apache.http.HttpStatus.SC_BAD_REQUEST;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDM0MDI4MQ=="}, "originalCommit": {"oid": "8fa7a82e8a170780eb1170c825915c5d6e4f1551"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTAyMTAyMw==", "bodyText": "Oh well, ok ...\n@efge shouldn't we want to align on javax.servlet.http.HttpServletResponse instead of relying on org.apache.httpcomponents:httpcore for those constants?", "url": "https://github.com/nuxeo/nuxeo/pull/4417#discussion_r515021023", "createdAt": "2020-10-30T11:08:47Z", "author": {"login": "troger"}, "path": "modules/core/nuxeo-core-query/src/main/java/org/nuxeo/ecm/core/query/QueryParseException.java", "diffHunk": "@@ -21,6 +21,8 @@\n \n package org.nuxeo.ecm.core.query;\n \n+import static org.apache.http.HttpStatus.SC_BAD_REQUEST;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDM0MDI4MQ=="}, "originalCommit": {"oid": "8fa7a82e8a170780eb1170c825915c5d6e4f1551"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTIwNjY0OQ==", "bodyText": "@troger that would be a possible cleanup yes but I'd say the benefit is very low. We don't plan on removing HttpComponents from our dependencies anytime soon anyway.", "url": "https://github.com/nuxeo/nuxeo/pull/4417#discussion_r515206649", "createdAt": "2020-10-30T16:01:55Z", "author": {"login": "efge"}, "path": "modules/core/nuxeo-core-query/src/main/java/org/nuxeo/ecm/core/query/QueryParseException.java", "diffHunk": "@@ -21,6 +21,8 @@\n \n package org.nuxeo.ecm.core.query;\n \n+import static org.apache.http.HttpStatus.SC_BAD_REQUEST;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDM0MDI4MQ=="}, "originalCommit": {"oid": "8fa7a82e8a170780eb1170c825915c5d6e4f1551"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTIwNzE1NA==", "bodyText": "On the other hand for new code it's worth using standard-based classes so javax.servlet.http.HttpServletResponse is slightly better", "url": "https://github.com/nuxeo/nuxeo/pull/4417#discussion_r515207154", "createdAt": "2020-10-30T16:02:43Z", "author": {"login": "efge"}, "path": "modules/core/nuxeo-core-query/src/main/java/org/nuxeo/ecm/core/query/QueryParseException.java", "diffHunk": "@@ -21,6 +21,8 @@\n \n package org.nuxeo.ecm.core.query;\n \n+import static org.apache.http.HttpStatus.SC_BAD_REQUEST;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDM0MDI4MQ=="}, "originalCommit": {"oid": "8fa7a82e8a170780eb1170c825915c5d6e4f1551"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTIwODQwMQ==", "bodyText": "@charlesboidot if you're not tired of doing iterations on this PR you could change the import yes, otherwise forget it", "url": "https://github.com/nuxeo/nuxeo/pull/4417#discussion_r515208401", "createdAt": "2020-10-30T16:04:41Z", "author": {"login": "efge"}, "path": "modules/core/nuxeo-core-query/src/main/java/org/nuxeo/ecm/core/query/QueryParseException.java", "diffHunk": "@@ -21,6 +21,8 @@\n \n package org.nuxeo.ecm.core.query;\n \n+import static org.apache.http.HttpStatus.SC_BAD_REQUEST;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDM0MDI4MQ=="}, "originalCommit": {"oid": "8fa7a82e8a170780eb1170c825915c5d6e4f1551"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTIyMTM4OQ==", "bodyText": "It's ok I'll change it", "url": "https://github.com/nuxeo/nuxeo/pull/4417#discussion_r515221389", "createdAt": "2020-10-30T16:26:09Z", "author": {"login": "charlesboidot"}, "path": "modules/core/nuxeo-core-query/src/main/java/org/nuxeo/ecm/core/query/QueryParseException.java", "diffHunk": "@@ -21,6 +21,8 @@\n \n package org.nuxeo.ecm.core.query;\n \n+import static org.apache.http.HttpStatus.SC_BAD_REQUEST;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDM0MDI4MQ=="}, "originalCommit": {"oid": "8fa7a82e8a170780eb1170c825915c5d6e4f1551"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4378, "cost": 1, "resetAt": "2021-11-03T18:41:40Z"}}}