{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAwOTQ0NDI4", "number": 3900, "title": "NXP-28900: allow blob provider to access document when reading blob", "bodyText": "T&P ok https://qa.nuxeo.org/jenkins/job/TestAndPush/job/ondemand-testandpush-fguillaume/801/", "createdAt": "2020-04-08T16:10:53Z", "url": "https://github.com/nuxeo/nuxeo/pull/3900", "merged": true, "mergeCommit": {"oid": "094e3765ba3856057873cefc11b4bfacd3626918"}, "closed": true, "closedAt": "2020-04-16T12:52:14Z", "author": {"login": "efge"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcXSxZPgBqjMyMjc5Nzg1ODg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcYMFJkgFqTM5NDU5NDExNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "534ae998db0c24729210f45b056d391e7b6a2140", "author": {"user": {"login": "efge", "name": "Florent Guillaume"}}, "url": "https://github.com/nuxeo/nuxeo/commit/534ae998db0c24729210f45b056d391e7b6a2140", "committedDate": "2020-04-08T16:07:10Z", "message": "NXP-28900: allow blob provider to access document when reading blob"}, "afterCommit": {"oid": "65e8364875a06597c87de0e9a3caab7e9ab32dfe", "author": {"user": {"login": "efge", "name": "Florent Guillaume"}}, "url": "https://github.com/nuxeo/nuxeo/commit/65e8364875a06597c87de0e9a3caab7e9ab32dfe", "committedDate": "2020-04-13T17:58:18Z", "message": "NXP-28919: allow blob provider to do optimized byte range requests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8de5454a7317a08c81a1edd6f0a395eb74beb676", "author": {"user": {"login": "efge", "name": "Florent Guillaume"}}, "url": "https://github.com/nuxeo/nuxeo/commit/8de5454a7317a08c81a1edd6f0a395eb74beb676", "committedDate": "2020-04-13T18:28:16Z", "message": "NXP-28900: allow blob provider to access document when reading blob"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "65e8364875a06597c87de0e9a3caab7e9ab32dfe", "author": {"user": {"login": "efge", "name": "Florent Guillaume"}}, "url": "https://github.com/nuxeo/nuxeo/commit/65e8364875a06597c87de0e9a3caab7e9ab32dfe", "committedDate": "2020-04-13T17:58:18Z", "message": "NXP-28919: allow blob provider to do optimized byte range requests"}, "afterCommit": {"oid": "f8ab2d2cf6cb4ecc6d5f4ac8ac167b34db47ee2e", "author": {"user": {"login": "efge", "name": "Florent Guillaume"}}, "url": "https://github.com/nuxeo/nuxeo/commit/f8ab2d2cf6cb4ecc6d5f4ac8ac167b34db47ee2e", "committedDate": "2020-04-13T18:33:43Z", "message": "NXP-28919: allow blob provider to do optimized byte range requests"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f8ab2d2cf6cb4ecc6d5f4ac8ac167b34db47ee2e", "author": {"user": {"login": "efge", "name": "Florent Guillaume"}}, "url": "https://github.com/nuxeo/nuxeo/commit/f8ab2d2cf6cb4ecc6d5f4ac8ac167b34db47ee2e", "committedDate": "2020-04-13T18:33:43Z", "message": "NXP-28919: allow blob provider to do optimized byte range requests"}, "afterCommit": {"oid": "4c9a16dafd125a6964c3b25206303c9ade1757d4", "author": {"user": {"login": "efge", "name": "Florent Guillaume"}}, "url": "https://github.com/nuxeo/nuxeo/commit/4c9a16dafd125a6964c3b25206303c9ade1757d4", "committedDate": "2020-04-13T19:05:02Z", "message": "NXP-28919: allow blob provider to do optimized byte range requests"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4c9a16dafd125a6964c3b25206303c9ade1757d4", "author": {"user": {"login": "efge", "name": "Florent Guillaume"}}, "url": "https://github.com/nuxeo/nuxeo/commit/4c9a16dafd125a6964c3b25206303c9ade1757d4", "committedDate": "2020-04-13T19:05:02Z", "message": "NXP-28919: allow blob provider to do optimized byte range requests"}, "afterCommit": {"oid": "1a524ee3c57f11ba2e0134e0b6a972b7a66604ab", "author": {"user": {"login": "efge", "name": "Florent Guillaume"}}, "url": "https://github.com/nuxeo/nuxeo/commit/1a524ee3c57f11ba2e0134e0b6a972b7a66604ab", "committedDate": "2020-04-14T01:16:51Z", "message": "NXP-28919: allow blob provider to do optimized byte range requests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkzNTYzODU1", "url": "https://github.com/nuxeo/nuxeo/pull/3900#pullrequestreview-393563855", "createdAt": "2020-04-15T08:31:41Z", "commit": {"oid": "1a524ee3c57f11ba2e0134e0b6a972b7a66604ab"}, "state": "DISMISSED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwODozMTo0MVrOGFvUyA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwODozMTo0MVrOGFvUyA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODY3MTQzMg==", "bodyText": "Is there any replacement to mention?", "url": "https://github.com/nuxeo/nuxeo/pull/3900#discussion_r408671432", "createdAt": "2020-04-15T08:31:41Z", "author": {"login": "troger"}, "path": "modules/core/nuxeo-core-api/src/main/java/org/nuxeo/ecm/core/blob/BlobManager.java", "diffHunk": "@@ -95,22 +95,28 @@ default BlobProvider getBlobProviderWithNamespace(String id) {\n     BlobProvider getBlobProvider(Blob blob);\n \n     /**\n-     * INTERNAL - Gets an {@link InputStream} for the data of a managed blob. Used by internal implementations, regular\n-     * callers should call {@link Blob#getStream}.\n+     * Gets an {@link InputStream} for the data of a managed blob.\n+     * <p>\n+     * If the blob is managed this is equivalent to {@link ManagedBlob#getStream()}, otherwise returns {@code null}.\n      *\n      * @param blob the blob\n-     * @return the stream\n+     * @return the stream, or {@code null} if the blob is not managed\n+     * @deprecated since 11.1", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1a524ee3c57f11ba2e0134e0b6a972b7a66604ab"}, "originalPosition": 13}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkzNTUwNzM0", "url": "https://github.com/nuxeo/nuxeo/pull/3900#pullrequestreview-393550734", "createdAt": "2020-04-15T08:14:13Z", "commit": {"oid": "1a524ee3c57f11ba2e0134e0b6a972b7a66604ab"}, "state": "COMMENTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwODoxNDoxM1rOGFur_Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwOToyMjo0NVrOGFxM_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODY2MDk4OQ==", "bodyText": "Is putting the key in the log message could help debugging?", "url": "https://github.com/nuxeo/nuxeo/pull/3900#discussion_r408660989", "createdAt": "2020-04-15T08:14:13Z", "author": {"login": "kevinleturc"}, "path": "modules/core/nuxeo-core-api/src/main/java/org/nuxeo/ecm/core/blob/AbstractBlobStore.java", "diffHunk": "@@ -126,6 +134,28 @@ protected String stripBlobKeyPrefix(String key) {\n         return key;\n     }\n \n+    public static String setByteRangeInKey(String key, ByteRange byteRange) {\n+        return key + String.valueOf(BYTE_RANGE_SEP) + byteRange.getStart() + String.valueOf(BYTE_RANGE_SEP)\n+                + byteRange.getEnd();\n+    }\n+\n+    public static ByteRange getByteRangeFromKey(MutableObject<String> keyHolder) {\n+        String key = keyHolder.getValue();\n+        int j = key.lastIndexOf(BYTE_RANGE_SEP);\n+        int i = key.lastIndexOf(BYTE_RANGE_SEP, j - 1);\n+        if (j > 0) {\n+            try {\n+                long start = Long.parseLong(key.substring(i + 1, j));\n+                long end = Long.parseLong(key.substring(j + 1));\n+                keyHolder.setValue(key.substring(0, i));\n+                return ByteRange.inclusive(start, end);\n+            } catch (NumberFormatException e) {\n+                log.debug(e, e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1a524ee3c57f11ba2e0134e0b6a972b7a66604ab"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODY2MTYwNg==", "bodyText": "The deprecation is for the internal API? Is BlobProvide#getStream the replacement of this one?", "url": "https://github.com/nuxeo/nuxeo/pull/3900#discussion_r408661606", "createdAt": "2020-04-15T08:15:15Z", "author": {"login": "kevinleturc"}, "path": "modules/core/nuxeo-core-api/src/main/java/org/nuxeo/ecm/core/blob/BlobManager.java", "diffHunk": "@@ -95,22 +95,28 @@ default BlobProvider getBlobProviderWithNamespace(String id) {\n     BlobProvider getBlobProvider(Blob blob);\n \n     /**\n-     * INTERNAL - Gets an {@link InputStream} for the data of a managed blob. Used by internal implementations, regular\n-     * callers should call {@link Blob#getStream}.\n+     * Gets an {@link InputStream} for the data of a managed blob.\n+     * <p>\n+     * If the blob is managed this is equivalent to {@link ManagedBlob#getStream()}, otherwise returns {@code null}.\n      *\n      * @param blob the blob\n-     * @return the stream\n+     * @return the stream, or {@code null} if the blob is not managed\n+     * @deprecated since 11.1", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1a524ee3c57f11ba2e0134e0b6a972b7a66604ab"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODY4OTkxOQ==", "bodyText": "Should we configure it as allowing byte range?", "url": "https://github.com/nuxeo/nuxeo/pull/3900#discussion_r408689919", "createdAt": "2020-04-15T09:02:04Z", "author": {"login": "kevinleturc"}, "path": "modules/core/nuxeo-core-api/src/test/resources/OSGI-INF/dummy-blob-provider.xml", "diffHunk": "@@ -12,5 +12,15 @@\n     <blobprovider name=\"dummy\">\n       <class>org.nuxeo.ecm.core.blob.DummyBlobProvider</class>\n     </blobprovider>\n+    <blobprovider name=\"fromdoc\">\n+      <class>org.nuxeo.ecm.core.blob.DummyBlobProvider</class>\n+    </blobprovider>\n+    <blobprovider name=\"fromdoc2\">\n+      <class>org.nuxeo.ecm.core.blob.DummyBlobProvider</class>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1a524ee3c57f11ba2e0134e0b6a972b7a66604ab"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODY5MzY3Nw==", "bodyText": "What do you think about introducing an object for key which does all the needed parsing (byte range and version) and holds methods such as containsRange.", "url": "https://github.com/nuxeo/nuxeo/pull/3900#discussion_r408693677", "createdAt": "2020-04-15T09:08:19Z", "author": {"login": "kevinleturc"}, "path": "modules/core/nuxeo-core-binarymanager-cloud/nuxeo-core-binarymanager-s3/src/main/java/org/nuxeo/ecm/blob/s3/S3BlobStore.java", "diffHunk": "@@ -367,15 +373,23 @@ protected void clearBucket() {\n \n     @Override\n     public boolean readBlob(String key, Path dest) throws IOException {\n+        ByteRange byteRange;\n+        if (allowByteRange) {\n+            MutableObject<String> keyHolder = new MutableObject<>(key);\n+            byteRange = getByteRangeFromKey(keyHolder);\n+            key = keyHolder.getValue();\n+        } else {\n+            byteRange = null;\n+        }\n         String objectKey;\n         String versionId;\n-        int seppos = key.indexOf(VER_SEP);\n-        if (seppos < 0) {\n-            objectKey = key;\n-            versionId = null;\n-        } else {\n+        int seppos;\n+        if (useVersion && (seppos = key.indexOf(VER_SEP)) > 0) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1a524ee3c57f11ba2e0134e0b6a972b7a66604ab"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODY5OTIzMg==", "bodyText": "It can happen if fulltext is not stored in blob, no?", "url": "https://github.com/nuxeo/nuxeo/pull/3900#discussion_r408699232", "createdAt": "2020-04-15T09:17:47Z", "author": {"login": "kevinleturc"}, "path": "modules/core/nuxeo-core-storage-sql/nuxeo-core-storage-sql/src/main/java/org/nuxeo/ecm/core/storage/sql/SessionImpl.java", "diffHunk": "@@ -1491,26 +1493,32 @@ public boolean isFulltextStoredInBlob() {\n     }\n \n     @Override\n-    public Map<String, String> getBinaryFulltext(Serializable id) {\n+    public Map<String, String> getBinaryFulltext(Serializable id, Document doc) {\n         if (fulltextDescriptor.getFulltextDisabled()) {\n             return null;\n         }\n         RowId rowId = new RowId(Model.FULLTEXT_TABLE_NAME, id);\n         Map<String, String> map = mapper.getBinaryFulltext(rowId);\n         String fulltext = map.get(BINARY_FULLTEXT_MAIN_KEY);\n         if (fulltextDescriptor.getFulltextStoredInBlob() && fulltext != null) {\n-            // fulltext is actually the blob  key\n-            // now retrieve the actual fulltext from the blob content\n-            DocumentBlobManager blobManager = Framework.getService(DocumentBlobManager.class);\n-            try {\n-                BlobInfo blobInfo = new BlobInfo();\n-                blobInfo.key = fulltext;\n-                Blob blob = blobManager.readBlob(blobInfo, getRepositoryName());\n-                fulltext = blob.getString();\n-                map.put(BINARY_FULLTEXT_MAIN_KEY, fulltext);\n-            } catch (IOException e) {\n-                throw new PropertyException(\"Cannot read fulltext blob for doc: \" + id, e);\n+            if (doc == null) {\n+                // could not find doc (shouldn't happen)\n+                fulltext = null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1a524ee3c57f11ba2e0134e0b6a972b7a66604ab"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODcwMjIwNg==", "bodyText": "Why not using BlobInfoContext for the signature?", "url": "https://github.com/nuxeo/nuxeo/pull/3900#discussion_r408702206", "createdAt": "2020-04-15T09:22:45Z", "author": {"login": "kevinleturc"}, "path": "modules/core/nuxeo-core/src/main/java/org/nuxeo/ecm/core/blob/DocumentBlobManager.java", "diffHunk": "@@ -35,14 +35,27 @@\n  */\n public interface DocumentBlobManager {\n \n+    /**\n+     * Reads a {@link Blob} from storage.\n+     *\n+     * @param blobInfo the blob information\n+     * @param doc the document to which this blob belongs\n+     * @param xpath the xpath of the blob in the document\n+     * @return a managed blob\n+     * @since 11.1\n+     */\n+    Blob readBlob(BlobInfo blobInfo, Document doc, String xpath) throws IOException;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1a524ee3c57f11ba2e0134e0b6a972b7a66604ab"}, "originalPosition": 13}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ac3275a535af64993a8c74f49b54e14f0d46f422", "author": {"user": {"login": "efge", "name": "Florent Guillaume"}}, "url": "https://github.com/nuxeo/nuxeo/commit/ac3275a535af64993a8c74f49b54e14f0d46f422", "committedDate": "2020-04-15T11:52:47Z", "message": "NXP-28919: simplify ManagedBlob logic"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "95114fbc6e740f1a0b21cd715b9427d1a92b5b62", "author": {"user": {"login": "efge", "name": "Florent Guillaume"}}, "url": "https://github.com/nuxeo/nuxeo/commit/95114fbc6e740f1a0b21cd715b9427d1a92b5b62", "committedDate": "2020-04-15T11:52:47Z", "message": "NXP-28919: move ByteRange to nuxeo-core-api"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ff9cd188872bdc28872d57ec194cb3f4676d573d", "author": {"user": {"login": "efge", "name": "Florent Guillaume"}}, "url": "https://github.com/nuxeo/nuxeo/commit/ff9cd188872bdc28872d57ec194cb3f4676d573d", "committedDate": "2020-04-15T11:52:47Z", "message": "NXP-28919: allow blob provider to do optimized byte range requests"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1a524ee3c57f11ba2e0134e0b6a972b7a66604ab", "author": {"user": {"login": "efge", "name": "Florent Guillaume"}}, "url": "https://github.com/nuxeo/nuxeo/commit/1a524ee3c57f11ba2e0134e0b6a972b7a66604ab", "committedDate": "2020-04-14T01:16:51Z", "message": "NXP-28919: allow blob provider to do optimized byte range requests"}, "afterCommit": {"oid": "ff9cd188872bdc28872d57ec194cb3f4676d573d", "author": {"user": {"login": "efge", "name": "Florent Guillaume"}}, "url": "https://github.com/nuxeo/nuxeo/commit/ff9cd188872bdc28872d57ec194cb3f4676d573d", "committedDate": "2020-04-15T11:52:47Z", "message": "NXP-28919: allow blob provider to do optimized byte range requests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkzNzY3MTQz", "url": "https://github.com/nuxeo/nuxeo/pull/3900#pullrequestreview-393767143", "createdAt": "2020-04-15T13:22:34Z", "commit": {"oid": "ff9cd188872bdc28872d57ec194cb3f4676d573d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk0NTk0MTE0", "url": "https://github.com/nuxeo/nuxeo/pull/3900#pullrequestreview-394594114", "createdAt": "2020-04-16T12:44:45Z", "commit": {"oid": "ff9cd188872bdc28872d57ec194cb3f4676d573d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4827, "cost": 1, "resetAt": "2021-11-03T18:41:40Z"}}}