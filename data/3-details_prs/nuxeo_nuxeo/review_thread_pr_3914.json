{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAyNjk4MDE3", "number": 3914, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxMzozMzozNVrODyEsYg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxOToyNToxOVrOD8NKhQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzODMyMjkwOnYy", "diffSide": "RIGHT", "path": "modules/platform/nuxeo-platform-filemanager-core/src/main/java/org/nuxeo/ecm/platform/filemanager/service/extension/CSVZipImporter.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxMzozMzozNVrOGF54ag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxNTo1Nzo0MFrOGU4ikQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODg0NDM5NA==", "bodyText": "I would use a log.warn here, ERROR seems a bit strong for something about which the server admins can't do anything. Also logging the name is useless as it's blank, maybe log csvRecord.getRecordNumber() or csvRecord.getCharacterPosition() instead?", "url": "https://github.com/nuxeo/nuxeo/pull/3914#discussion_r408844394", "createdAt": "2020-04-15T13:33:35Z", "author": {"login": "efge"}, "path": "modules/platform/nuxeo-platform-filemanager-core/src/main/java/org/nuxeo/ecm/platform/filemanager/service/extension/CSVZipImporter.java", "diffHunk": "@@ -111,47 +118,46 @@ public DocumentModel createOrUpdate(FileImporterContext context) throws IOExcept\n \n             ZipEntry index = zip.getEntry(MARKER);\n             try (Reader reader = new InputStreamReader(zip.getInputStream(index));\n-                 CSVParser csvParser = new CSVParser(reader, CSVFormat.DEFAULT.withHeader());) {\n+                CSVParser csvParser = new CSVParser(reader, CSVFormat.DEFAULT.withHeader());) {\n \n                 Map<String, Integer> header = csvParser.getHeaderMap();\n                 for (CSVRecord csvRecord : csvParser) {\n                     String type = null;\n-                    String id = null;\n+                    String name = null;\n                     Map<String, String> stringValues = new HashMap<>();\n                     for (String headerValue : header.keySet()) {\n                         String lineValue = csvRecord.get(headerValue);\n                         if (\"type\".equalsIgnoreCase(headerValue)) {\n                             type = lineValue;\n-                        } else if (\"id\".equalsIgnoreCase(headerValue)) {\n-                            id = lineValue;\n+                        } else if (\"name\".equalsIgnoreCase(headerValue)) {\n+                            name = lineValue;\n                         } else {\n                             stringValues.put(headerValue, lineValue);\n                         }\n                     }\n \n+                    if (StringUtils.isBlank(name)) {\n+                        log.error(\"Can not create or update doc without a name, skipping line: {}\", name);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c91023865991fbda44bf62fd451d3091f1e1c702"}, "originalPosition": 85}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDU1MTA1Nw==", "bodyText": "sorry I missed that @efge , I made an update for this", "url": "https://github.com/nuxeo/nuxeo/pull/3914#discussion_r424551057", "createdAt": "2020-05-13T15:57:40Z", "author": {"login": "eikkaj"}, "path": "modules/platform/nuxeo-platform-filemanager-core/src/main/java/org/nuxeo/ecm/platform/filemanager/service/extension/CSVZipImporter.java", "diffHunk": "@@ -111,47 +118,46 @@ public DocumentModel createOrUpdate(FileImporterContext context) throws IOExcept\n \n             ZipEntry index = zip.getEntry(MARKER);\n             try (Reader reader = new InputStreamReader(zip.getInputStream(index));\n-                 CSVParser csvParser = new CSVParser(reader, CSVFormat.DEFAULT.withHeader());) {\n+                CSVParser csvParser = new CSVParser(reader, CSVFormat.DEFAULT.withHeader());) {\n \n                 Map<String, Integer> header = csvParser.getHeaderMap();\n                 for (CSVRecord csvRecord : csvParser) {\n                     String type = null;\n-                    String id = null;\n+                    String name = null;\n                     Map<String, String> stringValues = new HashMap<>();\n                     for (String headerValue : header.keySet()) {\n                         String lineValue = csvRecord.get(headerValue);\n                         if (\"type\".equalsIgnoreCase(headerValue)) {\n                             type = lineValue;\n-                        } else if (\"id\".equalsIgnoreCase(headerValue)) {\n-                            id = lineValue;\n+                        } else if (\"name\".equalsIgnoreCase(headerValue)) {\n+                            name = lineValue;\n                         } else {\n                             stringValues.put(headerValue, lineValue);\n                         }\n                     }\n \n+                    if (StringUtils.isBlank(name)) {\n+                        log.error(\"Can not create or update doc without a name, skipping line: {}\", name);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODg0NDM5NA=="}, "originalCommit": {"oid": "c91023865991fbda44bf62fd451d3091f1e1c702"}, "originalPosition": 85}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0NDU1ODExOnYy", "diffSide": "RIGHT", "path": "modules/platform/nuxeo-platform-filemanager-core/src/main/java/org/nuxeo/ecm/platform/filemanager/service/extension/CSVZipImporter.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxOToyMjoxMlrOGVALvQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxNzo0MjozOFrOGWOICg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDY3NjI4NQ==", "bodyText": "Not a big deal, as WARN messages will rarely be hidden, and this is not a performance hot spot, but (as some check tools warn about) the better syntax here is to use csvRecord::getRecordNumber to delay evaluation until the message is actually required.", "url": "https://github.com/nuxeo/nuxeo/pull/3914#discussion_r424676285", "createdAt": "2020-05-13T19:22:12Z", "author": {"login": "efge"}, "path": "modules/platform/nuxeo-platform-filemanager-core/src/main/java/org/nuxeo/ecm/platform/filemanager/service/extension/CSVZipImporter.java", "diffHunk": "@@ -111,47 +118,47 @@ public DocumentModel createOrUpdate(FileImporterContext context) throws IOExcept\n \n             ZipEntry index = zip.getEntry(MARKER);\n             try (Reader reader = new InputStreamReader(zip.getInputStream(index));\n-                 CSVParser csvParser = new CSVParser(reader, CSVFormat.DEFAULT.withHeader());) {\n+                CSVParser csvParser = new CSVParser(reader, CSVFormat.DEFAULT.withHeader());) {\n \n                 Map<String, Integer> header = csvParser.getHeaderMap();\n                 for (CSVRecord csvRecord : csvParser) {\n                     String type = null;\n-                    String id = null;\n+                    String name = null;\n                     Map<String, String> stringValues = new HashMap<>();\n                     for (String headerValue : header.keySet()) {\n                         String lineValue = csvRecord.get(headerValue);\n                         if (\"type\".equalsIgnoreCase(headerValue)) {\n                             type = lineValue;\n-                        } else if (\"id\".equalsIgnoreCase(headerValue)) {\n-                            id = lineValue;\n+                        } else if (\"name\".equalsIgnoreCase(headerValue)) {\n+                            name = lineValue;\n                         } else {\n                             stringValues.put(headerValue, lineValue);\n                         }\n                     }\n \n+                    if (StringUtils.isBlank(name)) {\n+                        log.warn(\"Can not create or update doc without a name, skipping line: {}\",\n+                                csvRecord.getRecordNumber());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1c89c5aeecb5ee273389ec823f2620cfec468b90"}, "originalPosition": 86}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTk1MzI5MA==", "bodyText": "Cool, I had not thought of this. I made this update now, thanks for pointing it out.", "url": "https://github.com/nuxeo/nuxeo/pull/3914#discussion_r425953290", "createdAt": "2020-05-15T17:42:38Z", "author": {"login": "eikkaj"}, "path": "modules/platform/nuxeo-platform-filemanager-core/src/main/java/org/nuxeo/ecm/platform/filemanager/service/extension/CSVZipImporter.java", "diffHunk": "@@ -111,47 +118,47 @@ public DocumentModel createOrUpdate(FileImporterContext context) throws IOExcept\n \n             ZipEntry index = zip.getEntry(MARKER);\n             try (Reader reader = new InputStreamReader(zip.getInputStream(index));\n-                 CSVParser csvParser = new CSVParser(reader, CSVFormat.DEFAULT.withHeader());) {\n+                CSVParser csvParser = new CSVParser(reader, CSVFormat.DEFAULT.withHeader());) {\n \n                 Map<String, Integer> header = csvParser.getHeaderMap();\n                 for (CSVRecord csvRecord : csvParser) {\n                     String type = null;\n-                    String id = null;\n+                    String name = null;\n                     Map<String, String> stringValues = new HashMap<>();\n                     for (String headerValue : header.keySet()) {\n                         String lineValue = csvRecord.get(headerValue);\n                         if (\"type\".equalsIgnoreCase(headerValue)) {\n                             type = lineValue;\n-                        } else if (\"id\".equalsIgnoreCase(headerValue)) {\n-                            id = lineValue;\n+                        } else if (\"name\".equalsIgnoreCase(headerValue)) {\n+                            name = lineValue;\n                         } else {\n                             stringValues.put(headerValue, lineValue);\n                         }\n                     }\n \n+                    if (StringUtils.isBlank(name)) {\n+                        log.warn(\"Can not create or update doc without a name, skipping line: {}\",\n+                                csvRecord.getRecordNumber());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDY3NjI4NQ=="}, "originalCommit": {"oid": "1c89c5aeecb5ee273389ec823f2620cfec468b90"}, "originalPosition": 86}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0NDU2Mzk2OnYy", "diffSide": "RIGHT", "path": "modules/platform/nuxeo-platform-filemanager-core/src/main/java/org/nuxeo/ecm/platform/filemanager/service/extension/CSVZipImporter.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxOToyMzo1MVrOGVAPUg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxNzo0Mjo1N1rOGWOIsg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDY3NzIwMg==", "bodyText": "I had to double check because the other \"skipping line\" message above logs the line number, whereas here we log the line \"name\" but this is a good enough identifier. Although I guess it wouldn't hurt to also add the line number.", "url": "https://github.com/nuxeo/nuxeo/pull/3914#discussion_r424677202", "createdAt": "2020-05-13T19:23:51Z", "author": {"login": "efge"}, "path": "modules/platform/nuxeo-platform-filemanager-core/src/main/java/org/nuxeo/ecm/platform/filemanager/service/extension/CSVZipImporter.java", "diffHunk": "@@ -111,47 +118,47 @@ public DocumentModel createOrUpdate(FileImporterContext context) throws IOExcept\n \n             ZipEntry index = zip.getEntry(MARKER);\n             try (Reader reader = new InputStreamReader(zip.getInputStream(index));\n-                 CSVParser csvParser = new CSVParser(reader, CSVFormat.DEFAULT.withHeader());) {\n+                CSVParser csvParser = new CSVParser(reader, CSVFormat.DEFAULT.withHeader());) {\n \n                 Map<String, Integer> header = csvParser.getHeaderMap();\n                 for (CSVRecord csvRecord : csvParser) {\n                     String type = null;\n-                    String id = null;\n+                    String name = null;\n                     Map<String, String> stringValues = new HashMap<>();\n                     for (String headerValue : header.keySet()) {\n                         String lineValue = csvRecord.get(headerValue);\n                         if (\"type\".equalsIgnoreCase(headerValue)) {\n                             type = lineValue;\n-                        } else if (\"id\".equalsIgnoreCase(headerValue)) {\n-                            id = lineValue;\n+                        } else if (\"name\".equalsIgnoreCase(headerValue)) {\n+                            name = lineValue;\n                         } else {\n                             stringValues.put(headerValue, lineValue);\n                         }\n                     }\n \n+                    if (StringUtils.isBlank(name)) {\n+                        log.warn(\"Can not create or update doc without a name, skipping line: {}\",\n+                                csvRecord.getRecordNumber());\n+                        continue;\n+                    }\n+\n                     boolean updateDoc = false;\n                     // get doc for update\n                     DocumentModel targetDoc = null;\n-                    if (id != null) {\n-                        // update ?\n-                        String targetPath = new Path(parentPath).append(id).toString();\n-                        if (session.exists(new PathRef(targetPath))) {\n-                            targetDoc = session.getDocument(new PathRef(targetPath));\n-                            updateDoc = true;\n-                        }\n+\n+                    String targetPath = new Path(parentPath).append(name).toString();\n+                    if (session.exists(new PathRef(targetPath))) {\n+                        targetDoc = session.getDocument(new PathRef(targetPath));\n+                        updateDoc = true;\n                     }\n \n                     // create doc if needed\n                     if (targetDoc == null) {\n                         if (type == null) {\n-                            log.error(\"Can not create doc without a type, skipping line\");\n+                            log.error(\"Can not create doc without a type, skipping line: {}\", name);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1c89c5aeecb5ee273389ec823f2620cfec468b90"}, "originalPosition": 111}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTk1MzQ1OA==", "bodyText": "I replaced with line number for simplicity and also changed to warn instead of error", "url": "https://github.com/nuxeo/nuxeo/pull/3914#discussion_r425953458", "createdAt": "2020-05-15T17:42:57Z", "author": {"login": "eikkaj"}, "path": "modules/platform/nuxeo-platform-filemanager-core/src/main/java/org/nuxeo/ecm/platform/filemanager/service/extension/CSVZipImporter.java", "diffHunk": "@@ -111,47 +118,47 @@ public DocumentModel createOrUpdate(FileImporterContext context) throws IOExcept\n \n             ZipEntry index = zip.getEntry(MARKER);\n             try (Reader reader = new InputStreamReader(zip.getInputStream(index));\n-                 CSVParser csvParser = new CSVParser(reader, CSVFormat.DEFAULT.withHeader());) {\n+                CSVParser csvParser = new CSVParser(reader, CSVFormat.DEFAULT.withHeader());) {\n \n                 Map<String, Integer> header = csvParser.getHeaderMap();\n                 for (CSVRecord csvRecord : csvParser) {\n                     String type = null;\n-                    String id = null;\n+                    String name = null;\n                     Map<String, String> stringValues = new HashMap<>();\n                     for (String headerValue : header.keySet()) {\n                         String lineValue = csvRecord.get(headerValue);\n                         if (\"type\".equalsIgnoreCase(headerValue)) {\n                             type = lineValue;\n-                        } else if (\"id\".equalsIgnoreCase(headerValue)) {\n-                            id = lineValue;\n+                        } else if (\"name\".equalsIgnoreCase(headerValue)) {\n+                            name = lineValue;\n                         } else {\n                             stringValues.put(headerValue, lineValue);\n                         }\n                     }\n \n+                    if (StringUtils.isBlank(name)) {\n+                        log.warn(\"Can not create or update doc without a name, skipping line: {}\",\n+                                csvRecord.getRecordNumber());\n+                        continue;\n+                    }\n+\n                     boolean updateDoc = false;\n                     // get doc for update\n                     DocumentModel targetDoc = null;\n-                    if (id != null) {\n-                        // update ?\n-                        String targetPath = new Path(parentPath).append(id).toString();\n-                        if (session.exists(new PathRef(targetPath))) {\n-                            targetDoc = session.getDocument(new PathRef(targetPath));\n-                            updateDoc = true;\n-                        }\n+\n+                    String targetPath = new Path(parentPath).append(name).toString();\n+                    if (session.exists(new PathRef(targetPath))) {\n+                        targetDoc = session.getDocument(new PathRef(targetPath));\n+                        updateDoc = true;\n                     }\n \n                     // create doc if needed\n                     if (targetDoc == null) {\n                         if (type == null) {\n-                            log.error(\"Can not create doc without a type, skipping line\");\n+                            log.error(\"Can not create doc without a type, skipping line: {}\", name);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDY3NzIwMg=="}, "originalCommit": {"oid": "1c89c5aeecb5ee273389ec823f2620cfec468b90"}, "originalPosition": 111}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0NDU2ODM3OnYy", "diffSide": "RIGHT", "path": "modules/platform/nuxeo-platform-filemanager-core/src/main/java/org/nuxeo/ecm/platform/filemanager/service/extension/CSVZipImporter.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxOToyNToxOVrOGVASSg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxNzo0MzowOFrOGWOJLw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDY3Nzk2Mg==", "bodyText": "You can just replace these 3 lines with returnEarly |= blobIndex == null", "url": "https://github.com/nuxeo/nuxeo/pull/3914#discussion_r424677962", "createdAt": "2020-05-13T19:25:19Z", "author": {"login": "efge"}, "path": "modules/platform/nuxeo-platform-filemanager-core/src/main/java/org/nuxeo/ecm/platform/filemanager/service/extension/CSVZipImporter.java", "diffHunk": "@@ -241,9 +254,16 @@ protected Serializable getFieldValue(Field field, String stringValue, ZipFile zi\n                 log.warn(String.format(\"Unsupported field type '%s'\", type));\n                 return null;\n             }\n-        } else if (type.isComplexType() && TypeConstants.CONTENT.equals(field.getName().getLocalName())) {\n+        } else if (type.isComplexType()) {\n+            boolean returnEarly = true;\n+            if (TypeConstants.CONTENT.equals(field.getName().getLocalName())) {\n+                returnEarly = false;\n+            }\n             ZipEntry blobIndex = zip.getEntry(stringValue);\n-            if (blobIndex != null) {\n+            if (!returnEarly) {\n+                returnEarly = blobIndex == null;\n+            }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1c89c5aeecb5ee273389ec823f2620cfec468b90"}, "originalPosition": 152}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTk1MzU4Mw==", "bodyText": "Nice :) Updated", "url": "https://github.com/nuxeo/nuxeo/pull/3914#discussion_r425953583", "createdAt": "2020-05-15T17:43:08Z", "author": {"login": "eikkaj"}, "path": "modules/platform/nuxeo-platform-filemanager-core/src/main/java/org/nuxeo/ecm/platform/filemanager/service/extension/CSVZipImporter.java", "diffHunk": "@@ -241,9 +254,16 @@ protected Serializable getFieldValue(Field field, String stringValue, ZipFile zi\n                 log.warn(String.format(\"Unsupported field type '%s'\", type));\n                 return null;\n             }\n-        } else if (type.isComplexType() && TypeConstants.CONTENT.equals(field.getName().getLocalName())) {\n+        } else if (type.isComplexType()) {\n+            boolean returnEarly = true;\n+            if (TypeConstants.CONTENT.equals(field.getName().getLocalName())) {\n+                returnEarly = false;\n+            }\n             ZipEntry blobIndex = zip.getEntry(stringValue);\n-            if (blobIndex != null) {\n+            if (!returnEarly) {\n+                returnEarly = blobIndex == null;\n+            }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDY3Nzk2Mg=="}, "originalCommit": {"oid": "1c89c5aeecb5ee273389ec823f2620cfec468b90"}, "originalPosition": 152}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4150, "cost": 1, "resetAt": "2021-11-03T18:41:40Z"}}}