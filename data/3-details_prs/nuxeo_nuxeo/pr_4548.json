{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQxMjcyMjI3", "number": 4548, "title": "NXP-29810: take into account SMTP service state on Document.Mail oper\u2026", "bodyText": "Fix for Jira Issue: https://jira.nuxeo.com/browse/NXP-29810", "createdAt": "2020-12-16T16:05:04Z", "url": "https://github.com/nuxeo/nuxeo/pull/4548", "merged": true, "mergeCommit": {"oid": "b754784b7feda6bab29250644432328e45d6d130"}, "closed": true, "closedAt": "2021-01-04T13:24:32Z", "author": {"login": "charlesboidot"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdnCJf6ABqjQxMjQ3MTcxMTY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdszF-JgFqTU2MDg5MjE4NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "09c88bc4bd5e15bef2e6521f8a0fd5806cb663c9", "author": {"user": {"login": "charlesboidot", "name": "Charles Boidot"}}, "url": "https://github.com/nuxeo/nuxeo/commit/09c88bc4bd5e15bef2e6521f8a0fd5806cb663c9", "committedDate": "2020-12-16T16:03:28Z", "message": "NXP-29810: take into account SMTP service state on Document.Mail operation"}, "afterCommit": {"oid": "2f98d809aebd064d5754fd5a1334327a5dbf5257", "author": {"user": {"login": "charlesboidot", "name": "Charles Boidot"}}, "url": "https://github.com/nuxeo/nuxeo/commit/2f98d809aebd064d5754fd5a1334327a5dbf5257", "committedDate": "2020-12-17T11:50:17Z", "message": "NXP-29810: take into account SMTP service state on Document.Mail operation"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU1NjA3MzY4", "url": "https://github.com/nuxeo/nuxeo/pull/4548#pullrequestreview-555607368", "createdAt": "2020-12-18T15:53:25Z", "commit": {"oid": "2f98d809aebd064d5754fd5a1334327a5dbf5257"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQxNTo1MzoyNVrOIIomVA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQxNTo1ODoxOFrOIIoyDw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTkyNDY5Mg==", "bodyText": "Forgotten Sys out?", "url": "https://github.com/nuxeo/nuxeo/pull/4548#discussion_r545924692", "createdAt": "2020-12-18T15:53:25Z", "author": {"login": "kevinleturc"}, "path": "modules/platform/nuxeo-automation/nuxeo-automation-features/src/main/java/org/nuxeo/ecm/automation/core/operations/notification/SendMail.java", "diffHunk": "@@ -165,34 +167,38 @@ protected void send(DocumentModel doc)\n         // TODO should sent one by one to each recipient? and have the template\n         // rendered for each recipient? Use: \"mailto\" var name?\n         try {\n-            Map<String, Object> map = Scripting.initBindings(ctx);\n-            // do not use document wrapper which is working only in mvel.\n-            map.put(\"Document\", doc);\n-            map.put(\"docUrl\",\n-                    createDocUrlWithToken(MailTemplateHelper.getDocumentUrl(doc, viewId), (String) map.get(\"token\")));\n-            map.put(\"subject\", subject);\n-            map.put(\"to\", to);\n-            map.put(\"toResolved\", MailBox.fetchPersonsFromList(to, isStrict));\n-            map.put(\"from\", from);\n-            map.put(\"fromResolved\", MailBox.fetchPersonsFromString(from, isStrict));\n-            map.put(\"cc\", cc);\n-            map.put(\"ccResolved\", MailBox.fetchPersonsFromList(cc, isStrict));\n-            map.put(\"bcc\", bcc);\n-            map.put(\"bccResolved\", MailBox.fetchPersonsFromList(bcc, isStrict));\n-            map.put(\"replyto\", replyto);\n-            map.put(\"replytoResolved\", MailBox.fetchPersonsFromList(replyto, isStrict));\n-            map.put(\"viewId\", viewId);\n-            map.put(\"baseUrl\", NotificationServiceHelper.getNotificationService().getServerUrlPrefix());\n-            map.put(\"Runtime\", Framework.getRuntime());\n-            Mailer.Message msg = createMessage(doc, getContent(), map);\n-            msg.setSubject(subject, \"UTF-8\");\n-            msg.setSentDate(new Date());\n-\n-            addMailBoxInfo(msg, map);\n-\n-            msg.send();\n+            AdministrativeStatusManager asm = Framework.getService(AdministrativeStatusManager.class);\n+            if (asm == null || !asm.getStatus(\"org.nuxeo.ecm.smtp\").getState().equals(PASSIVE)) {\n+                Map<String, Object> map = Scripting.initBindings(ctx);\n+                // do not use document wrapper which is working only in mvel.\n+                map.put(\"Document\", doc);\n+                map.put(\"docUrl\", createDocUrlWithToken(MailTemplateHelper.getDocumentUrl(doc, viewId),\n+                        (String) map.get(\"token\")));\n+                map.put(\"subject\", subject);\n+                map.put(\"to\", to);\n+                map.put(\"toResolved\", MailBox.fetchPersonsFromList(to, isStrict));\n+                map.put(\"from\", from);\n+                map.put(\"fromResolved\", MailBox.fetchPersonsFromString(from, isStrict));\n+                map.put(\"cc\", cc);\n+                map.put(\"ccResolved\", MailBox.fetchPersonsFromList(cc, isStrict));\n+                map.put(\"bcc\", bcc);\n+                map.put(\"bccResolved\", MailBox.fetchPersonsFromList(bcc, isStrict));\n+                map.put(\"replyto\", replyto);\n+                map.put(\"replytoResolved\", MailBox.fetchPersonsFromList(replyto, isStrict));\n+                map.put(\"viewId\", viewId);\n+                map.put(\"baseUrl\", NotificationServiceHelper.getNotificationService().getServerUrlPrefix());\n+                map.put(\"Runtime\", Framework.getRuntime());\n+                Mailer.Message msg = createMessage(doc, getContent(), map);\n+                msg.setSubject(subject, \"UTF-8\");\n+                msg.setSentDate(new Date());\n+\n+                addMailBoxInfo(msg, map);\n+\n+                msg.send();\n+            }\n         } catch (NuxeoException | TemplateException | RenderingException | OperationException | MessagingException\n                 | IOException e) {\n+            System.out.println(\"Class\" + e.getClass() + \" :\" + e.getMessage());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2f98d809aebd064d5754fd5a1334327a5dbf5257"}, "originalPosition": 77}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTkyNzY5NQ==", "bodyText": "As there's a lot of line inside the if, and to preserve the git history, could you change the if to something such as below:\nif (asm != null && PASSIVE.equals(asm.getStatus(\"org.nuxeo.ecm.smtp\").getState()) {\n    return;\n}", "url": "https://github.com/nuxeo/nuxeo/pull/4548#discussion_r545927695", "createdAt": "2020-12-18T15:58:18Z", "author": {"login": "kevinleturc"}, "path": "modules/platform/nuxeo-automation/nuxeo-automation-features/src/main/java/org/nuxeo/ecm/automation/core/operations/notification/SendMail.java", "diffHunk": "@@ -165,34 +167,38 @@ protected void send(DocumentModel doc)\n         // TODO should sent one by one to each recipient? and have the template\n         // rendered for each recipient? Use: \"mailto\" var name?\n         try {\n-            Map<String, Object> map = Scripting.initBindings(ctx);\n-            // do not use document wrapper which is working only in mvel.\n-            map.put(\"Document\", doc);\n-            map.put(\"docUrl\",\n-                    createDocUrlWithToken(MailTemplateHelper.getDocumentUrl(doc, viewId), (String) map.get(\"token\")));\n-            map.put(\"subject\", subject);\n-            map.put(\"to\", to);\n-            map.put(\"toResolved\", MailBox.fetchPersonsFromList(to, isStrict));\n-            map.put(\"from\", from);\n-            map.put(\"fromResolved\", MailBox.fetchPersonsFromString(from, isStrict));\n-            map.put(\"cc\", cc);\n-            map.put(\"ccResolved\", MailBox.fetchPersonsFromList(cc, isStrict));\n-            map.put(\"bcc\", bcc);\n-            map.put(\"bccResolved\", MailBox.fetchPersonsFromList(bcc, isStrict));\n-            map.put(\"replyto\", replyto);\n-            map.put(\"replytoResolved\", MailBox.fetchPersonsFromList(replyto, isStrict));\n-            map.put(\"viewId\", viewId);\n-            map.put(\"baseUrl\", NotificationServiceHelper.getNotificationService().getServerUrlPrefix());\n-            map.put(\"Runtime\", Framework.getRuntime());\n-            Mailer.Message msg = createMessage(doc, getContent(), map);\n-            msg.setSubject(subject, \"UTF-8\");\n-            msg.setSentDate(new Date());\n-\n-            addMailBoxInfo(msg, map);\n-\n-            msg.send();\n+            AdministrativeStatusManager asm = Framework.getService(AdministrativeStatusManager.class);\n+            if (asm == null || !asm.getStatus(\"org.nuxeo.ecm.smtp\").getState().equals(PASSIVE)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2f98d809aebd064d5754fd5a1334327a5dbf5257"}, "originalPosition": 47}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2f98d809aebd064d5754fd5a1334327a5dbf5257", "author": {"user": {"login": "charlesboidot", "name": "Charles Boidot"}}, "url": "https://github.com/nuxeo/nuxeo/commit/2f98d809aebd064d5754fd5a1334327a5dbf5257", "committedDate": "2020-12-17T11:50:17Z", "message": "NXP-29810: take into account SMTP service state on Document.Mail operation"}, "afterCommit": {"oid": "d8a81ea1d6caebfa8ec7391ada652224586581d4", "author": {"user": {"login": "charlesboidot", "name": "Charles Boidot"}}, "url": "https://github.com/nuxeo/nuxeo/commit/d8a81ea1d6caebfa8ec7391ada652224586581d4", "committedDate": "2020-12-28T08:46:55Z", "message": "NXP-29810: take into account SMTP service state on Document.Mail operation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8000a4712ccd754b5f5ceca3fe0a153aafabc263", "author": {"user": {"login": "charlesboidot", "name": "Charles Boidot"}}, "url": "https://github.com/nuxeo/nuxeo/commit/8000a4712ccd754b5f5ceca3fe0a153aafabc263", "committedDate": "2020-12-28T08:48:04Z", "message": "NXP-29810: take into account SMTP service state on Document.Mail operation"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d8a81ea1d6caebfa8ec7391ada652224586581d4", "author": {"user": {"login": "charlesboidot", "name": "Charles Boidot"}}, "url": "https://github.com/nuxeo/nuxeo/commit/d8a81ea1d6caebfa8ec7391ada652224586581d4", "committedDate": "2020-12-28T08:46:55Z", "message": "NXP-29810: take into account SMTP service state on Document.Mail operation"}, "afterCommit": {"oid": "8000a4712ccd754b5f5ceca3fe0a153aafabc263", "author": {"user": {"login": "charlesboidot", "name": "Charles Boidot"}}, "url": "https://github.com/nuxeo/nuxeo/commit/8000a4712ccd754b5f5ceca3fe0a153aafabc263", "committedDate": "2020-12-28T08:48:04Z", "message": "NXP-29810: take into account SMTP service state on Document.Mail operation"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU5MTA0Nzc4", "url": "https://github.com/nuxeo/nuxeo/pull/4548#pullrequestreview-559104778", "createdAt": "2020-12-28T11:23:25Z", "commit": {"oid": "8000a4712ccd754b5f5ceca3fe0a153aafabc263"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYwODkyMTg1", "url": "https://github.com/nuxeo/nuxeo/pull/4548#pullrequestreview-560892185", "createdAt": "2021-01-04T09:41:35Z", "commit": {"oid": "8000a4712ccd754b5f5ceca3fe0a153aafabc263"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4921, "cost": 1, "resetAt": "2021-11-03T18:41:40Z"}}}