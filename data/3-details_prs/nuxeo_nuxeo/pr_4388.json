{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA0MTk3MjQ5", "number": 4388, "title": "10.10-HF/fix-NXP-29720-Make-UserGroup.Suggestion-work-with-subgroups", "bodyText": "PR created from https://qa2.nuxeo.org/jenkins/job/TestAndPush/job/ondemand-testandpush-cboidot-10.10/13/", "createdAt": "2020-10-15T15:37:47Z", "url": "https://github.com/nuxeo/nuxeo/pull/4388", "merged": true, "mergeCommit": {"oid": "3c5e0e375d194330eb3cc4d0f161207290e2db28"}, "closed": true, "closedAt": "2020-11-12T12:03:41Z", "author": {"login": "nuxeojenkins"}, "timelineItems": {"totalCount": 15, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdUBC2GAFqTUxMTU3MTIyMw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdbw6ZSgFqTUyODk5NzgzNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTExNTcxMjIz", "url": "https://github.com/nuxeo/nuxeo/pull/4388#pullrequestreview-511571223", "createdAt": "2020-10-19T09:24:40Z", "commit": {"oid": "12e29667947b7d5ef52ffe5b6756b6c5eae04b06"}, "state": "COMMENTED", "comments": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQwOToyNDo0MFrOHkFeWA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQwOTo0ODoxM1rOHkGZeA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzYwMDQ3Mg==", "bodyText": "You should start by checking groups != null before computing the descendant groups, to avoid doing so if the user has no group.", "url": "https://github.com/nuxeo/nuxeo/pull/4388#discussion_r507600472", "createdAt": "2020-10-19T09:24:40Z", "author": {"login": "ataillefer"}, "path": "nuxeo-features/nuxeo-automation/nuxeo-automation-features/src/main/java/org/nuxeo/ecm/automation/core/operations/users/SuggestUserEntries.java", "diffHunk": "@@ -269,8 +275,20 @@ public Blob run() throws IOException {\n                 user = userManager.getUserModel(userId);\n                 UserAdapter userAdapter = user.getAdapter(UserAdapter.class);\n                 List<String> groups = userAdapter.getGroups();\n-                if (groups != null && groups.contains(groupRestriction)) {\n-                    result.add(obj);\n+                List<String> restrictedGroups = new ArrayList<>();\n+                restrictedGroups.add(groupRestriction);\n+                if (allowSubGroupsRestriction) {\n+                    List<String> subGroups = userManager.getDescendantGroups(groupRestriction);\n+                    for (String subGroup : subGroups) {\n+                        restrictedGroups.add(subGroup);\n+                    }\n+                }\n+\n+                if (groups != null) {\n+                    groups.retainAll(restrictedGroups);\n+                    if (!groups.isEmpty()) {\n+                        result.add(obj);\n+                    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "12e29667947b7d5ef52ffe5b6756b6c5eae04b06"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzYwMTc5OQ==", "bodyText": "It sounds like we're only suggesting from the subgroups, not including the restricted group itself.\nMaybe something like \"Include the subgroups when passing a groupRestriction.\"", "url": "https://github.com/nuxeo/nuxeo/pull/4388#discussion_r507601799", "createdAt": "2020-10-19T09:26:42Z", "author": {"login": "ataillefer"}, "path": "nuxeo-features/nuxeo-automation/nuxeo-automation-features/src/main/java/org/nuxeo/ecm/automation/core/operations/users/SuggestUserEntries.java", "diffHunk": "@@ -143,6 +143,12 @@\n     @Param(name = \"lang\", required = false)\n     protected String lang;\n \n+    /*\n+     * @since 11.4\n+     */\n+    @Param(name = \"allowSubGroupsRestriction\", required = false, description = \"Suggest users from the subgroups specified in the group restriction.\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "12e29667947b7d5ef52ffe5b6756b6c5eae04b06"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzYwMjAxNw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    DocumentModel Employees = userManager.getBareGroupModel();\n          \n          \n            \n                    DocumentModel employees = userManager.getBareGroupModel();", "url": "https://github.com/nuxeo/nuxeo/pull/4388#discussion_r507602017", "createdAt": "2020-10-19T09:27:01Z", "author": {"login": "ataillefer"}, "path": "nuxeo-features/nuxeo-automation/nuxeo-automation-features/src/test/java/org/nuxeo/ecm/automation/core/operations/users/TestSuggestUserEntries.java", "diffHunk": "@@ -276,4 +276,75 @@ public void testMixedEntries() throws Exception {\n         }\n     }\n \n+    @Test\n+    public void testSubGroupEntries() throws Exception {\n+\n+        // create top level group 'employees'\n+        DocumentModel Employees = userManager.getBareGroupModel();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "12e29667947b7d5ef52ffe5b6756b6c5eae04b06"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzYwMjU5MQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    DocumentModel Developpers = userManager.getBareGroupModel();\n          \n          \n            \n                    DocumentModel developpers = userManager.getBareGroupModel();", "url": "https://github.com/nuxeo/nuxeo/pull/4388#discussion_r507602591", "createdAt": "2020-10-19T09:27:57Z", "author": {"login": "ataillefer"}, "path": "nuxeo-features/nuxeo-automation/nuxeo-automation-features/src/test/java/org/nuxeo/ecm/automation/core/operations/users/TestSuggestUserEntries.java", "diffHunk": "@@ -276,4 +276,75 @@ public void testMixedEntries() throws Exception {\n         }\n     }\n \n+    @Test\n+    public void testSubGroupEntries() throws Exception {\n+\n+        // create top level group 'employees'\n+        DocumentModel Employees = userManager.getBareGroupModel();\n+        Employees.setPropertyValue(\"group:groupname\", \"Employees\");\n+        Employees.setPropertyValue(\"group:subGroups\", (Serializable) Arrays.asList(\"Developpers\"));\n+\n+        userManager.createGroup(Employees);\n+\n+        // create second level group 'developpers'\n+        DocumentModel Developpers = userManager.getBareGroupModel();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "12e29667947b7d5ef52ffe5b6756b6c5eae04b06"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzYwMzU4NA==", "bodyText": "groupname is an internal id, best to use lowercase: employees, same for all the other groups/subgroups below", "url": "https://github.com/nuxeo/nuxeo/pull/4388#discussion_r507603584", "createdAt": "2020-10-19T09:29:27Z", "author": {"login": "ataillefer"}, "path": "nuxeo-features/nuxeo-automation/nuxeo-automation-features/src/test/java/org/nuxeo/ecm/automation/core/operations/users/TestSuggestUserEntries.java", "diffHunk": "@@ -276,4 +276,75 @@ public void testMixedEntries() throws Exception {\n         }\n     }\n \n+    @Test\n+    public void testSubGroupEntries() throws Exception {\n+\n+        // create top level group 'employees'\n+        DocumentModel Employees = userManager.getBareGroupModel();\n+        Employees.setPropertyValue(\"group:groupname\", \"Employees\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "12e29667947b7d5ef52ffe5b6756b6c5eae04b06"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzYwNTUxMA==", "bodyText": "these 2 lines are unneeded, you can reuse the same map", "url": "https://github.com/nuxeo/nuxeo/pull/4388#discussion_r507605510", "createdAt": "2020-10-19T09:32:18Z", "author": {"login": "ataillefer"}, "path": "nuxeo-features/nuxeo-automation/nuxeo-automation-features/src/test/java/org/nuxeo/ecm/automation/core/operations/users/TestSuggestUserEntries.java", "diffHunk": "@@ -276,4 +276,75 @@ public void testMixedEntries() throws Exception {\n         }\n     }\n \n+    @Test\n+    public void testSubGroupEntries() throws Exception {\n+\n+        // create top level group 'employees'\n+        DocumentModel Employees = userManager.getBareGroupModel();\n+        Employees.setPropertyValue(\"group:groupname\", \"Employees\");\n+        Employees.setPropertyValue(\"group:subGroups\", (Serializable) Arrays.asList(\"Developpers\"));\n+\n+        userManager.createGroup(Employees);\n+\n+        // create second level group 'developpers'\n+        DocumentModel Developpers = userManager.getBareGroupModel();\n+        Developpers.setPropertyValue(\"group:groupname\", \"Developpers\");\n+        Developpers.setPropertyValue(\"group:parentGroups\", (Serializable) Arrays.asList(\"Employees\"));\n+        Developpers.setPropertyValue(\"group:subGroups\", (Serializable) Arrays.asList(\"Support\"));\n+\n+        userManager.createGroup(Developpers);\n+\n+        // create third level group 'support'\n+        DocumentModel Support = userManager.getBareGroupModel();\n+        Support.setPropertyValue(\"group:groupname\", \"Support\");\n+        Support.setPropertyValue(\"group:parentGroups\", (Serializable) Arrays.asList(\"Developpers\"));\n+\n+        userManager.createGroup(Support);\n+\n+        // create 2 users in each group\n+        for (int i = 0; i < 6; i++) {\n+            DocumentModel user = userManager.getBareUserModel();\n+            user.setPropertyValue(\"user:username\", \"user\" + i);\n+            user.setPropertyValue(\"user:firstName\", \"User\" + i);\n+            user.setPropertyValue(\"user:lastName\", \"Smith\");\n+            user.setPropertyValue(\"user:email\", \"user\" + i + \"@example.com\");\n+            if (i % 3 == 0) {\n+                user.setPropertyValue(\"user:groups\", (Serializable) Arrays.asList(\"Employees\"));\n+            } else if (i % 3 == 1) {\n+                user.setPropertyValue(\"user:groups\", (Serializable) Arrays.asList(\"Developpers\"));\n+            } else {\n+                user.setPropertyValue(\"user:groups\", (Serializable) Arrays.asList(\"Support\"));\n+            }\n+            userManager.createUser(user);\n+        }\n+\n+        try (OperationContext ctx = new OperationContext(session)) {\n+            // By searching employees we should have all the users we created before in the three groups and not only\n+            // those in the Employees group directly, so a total of 6 people\n+            Map<String, String> params = new HashMap<>();\n+            params.put(\"allowSubGroupsRestriction\", \"true\");\n+            params.put(\"groupRestriction\", \"Employees\");\n+            Blob result = (Blob) automationService.run(ctx, SuggestUserEntries.ID, params);\n+            assertNotNull(result);\n+            JsonAssert json = JsonAssert.on(result.getString());\n+            assertEquals(6, json.getNode().size());\n+\n+            params = new HashMap<>();\n+            params.put(\"allowSubGroupsRestriction\", \"true\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "12e29667947b7d5ef52ffe5b6756b6c5eae04b06"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzYwNTY0OA==", "bodyText": "same remark as above", "url": "https://github.com/nuxeo/nuxeo/pull/4388#discussion_r507605648", "createdAt": "2020-10-19T09:32:32Z", "author": {"login": "ataillefer"}, "path": "nuxeo-features/nuxeo-automation/nuxeo-automation-features/src/test/java/org/nuxeo/ecm/automation/core/operations/users/TestSuggestUserEntries.java", "diffHunk": "@@ -276,4 +276,75 @@ public void testMixedEntries() throws Exception {\n         }\n     }\n \n+    @Test\n+    public void testSubGroupEntries() throws Exception {\n+\n+        // create top level group 'employees'\n+        DocumentModel Employees = userManager.getBareGroupModel();\n+        Employees.setPropertyValue(\"group:groupname\", \"Employees\");\n+        Employees.setPropertyValue(\"group:subGroups\", (Serializable) Arrays.asList(\"Developpers\"));\n+\n+        userManager.createGroup(Employees);\n+\n+        // create second level group 'developpers'\n+        DocumentModel Developpers = userManager.getBareGroupModel();\n+        Developpers.setPropertyValue(\"group:groupname\", \"Developpers\");\n+        Developpers.setPropertyValue(\"group:parentGroups\", (Serializable) Arrays.asList(\"Employees\"));\n+        Developpers.setPropertyValue(\"group:subGroups\", (Serializable) Arrays.asList(\"Support\"));\n+\n+        userManager.createGroup(Developpers);\n+\n+        // create third level group 'support'\n+        DocumentModel Support = userManager.getBareGroupModel();\n+        Support.setPropertyValue(\"group:groupname\", \"Support\");\n+        Support.setPropertyValue(\"group:parentGroups\", (Serializable) Arrays.asList(\"Developpers\"));\n+\n+        userManager.createGroup(Support);\n+\n+        // create 2 users in each group\n+        for (int i = 0; i < 6; i++) {\n+            DocumentModel user = userManager.getBareUserModel();\n+            user.setPropertyValue(\"user:username\", \"user\" + i);\n+            user.setPropertyValue(\"user:firstName\", \"User\" + i);\n+            user.setPropertyValue(\"user:lastName\", \"Smith\");\n+            user.setPropertyValue(\"user:email\", \"user\" + i + \"@example.com\");\n+            if (i % 3 == 0) {\n+                user.setPropertyValue(\"user:groups\", (Serializable) Arrays.asList(\"Employees\"));\n+            } else if (i % 3 == 1) {\n+                user.setPropertyValue(\"user:groups\", (Serializable) Arrays.asList(\"Developpers\"));\n+            } else {\n+                user.setPropertyValue(\"user:groups\", (Serializable) Arrays.asList(\"Support\"));\n+            }\n+            userManager.createUser(user);\n+        }\n+\n+        try (OperationContext ctx = new OperationContext(session)) {\n+            // By searching employees we should have all the users we created before in the three groups and not only\n+            // those in the Employees group directly, so a total of 6 people\n+            Map<String, String> params = new HashMap<>();\n+            params.put(\"allowSubGroupsRestriction\", \"true\");\n+            params.put(\"groupRestriction\", \"Employees\");\n+            Blob result = (Blob) automationService.run(ctx, SuggestUserEntries.ID, params);\n+            assertNotNull(result);\n+            JsonAssert json = JsonAssert.on(result.getString());\n+            assertEquals(6, json.getNode().size());\n+\n+            params = new HashMap<>();\n+            params.put(\"allowSubGroupsRestriction\", \"true\");\n+            params.put(\"groupRestriction\", \"Developpers\");\n+            result = (Blob) automationService.run(ctx, SuggestUserEntries.ID, params);\n+            assertNotNull(result);\n+            json = JsonAssert.on(result.getString());\n+            assertEquals(4, json.getNode().size());\n+\n+            params = new HashMap<>();\n+            params.put(\"allowSubGroupsRestriction\", \"true\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "12e29667947b7d5ef52ffe5b6756b6c5eae04b06"}, "originalPosition": 66}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzYwNjIyNg==", "bodyText": "Can you please add a test with params.put(\"allowSubGroupsRestriction\", \"false\"); showing the expected result: 2.", "url": "https://github.com/nuxeo/nuxeo/pull/4388#discussion_r507606226", "createdAt": "2020-10-19T09:33:29Z", "author": {"login": "ataillefer"}, "path": "nuxeo-features/nuxeo-automation/nuxeo-automation-features/src/test/java/org/nuxeo/ecm/automation/core/operations/users/TestSuggestUserEntries.java", "diffHunk": "@@ -276,4 +276,75 @@ public void testMixedEntries() throws Exception {\n         }\n     }\n \n+    @Test\n+    public void testSubGroupEntries() throws Exception {\n+\n+        // create top level group 'employees'\n+        DocumentModel Employees = userManager.getBareGroupModel();\n+        Employees.setPropertyValue(\"group:groupname\", \"Employees\");\n+        Employees.setPropertyValue(\"group:subGroups\", (Serializable) Arrays.asList(\"Developpers\"));\n+\n+        userManager.createGroup(Employees);\n+\n+        // create second level group 'developpers'\n+        DocumentModel Developpers = userManager.getBareGroupModel();\n+        Developpers.setPropertyValue(\"group:groupname\", \"Developpers\");\n+        Developpers.setPropertyValue(\"group:parentGroups\", (Serializable) Arrays.asList(\"Employees\"));\n+        Developpers.setPropertyValue(\"group:subGroups\", (Serializable) Arrays.asList(\"Support\"));\n+\n+        userManager.createGroup(Developpers);\n+\n+        // create third level group 'support'\n+        DocumentModel Support = userManager.getBareGroupModel();\n+        Support.setPropertyValue(\"group:groupname\", \"Support\");\n+        Support.setPropertyValue(\"group:parentGroups\", (Serializable) Arrays.asList(\"Developpers\"));\n+\n+        userManager.createGroup(Support);\n+\n+        // create 2 users in each group\n+        for (int i = 0; i < 6; i++) {\n+            DocumentModel user = userManager.getBareUserModel();\n+            user.setPropertyValue(\"user:username\", \"user\" + i);\n+            user.setPropertyValue(\"user:firstName\", \"User\" + i);\n+            user.setPropertyValue(\"user:lastName\", \"Smith\");\n+            user.setPropertyValue(\"user:email\", \"user\" + i + \"@example.com\");\n+            if (i % 3 == 0) {\n+                user.setPropertyValue(\"user:groups\", (Serializable) Arrays.asList(\"Employees\"));\n+            } else if (i % 3 == 1) {\n+                user.setPropertyValue(\"user:groups\", (Serializable) Arrays.asList(\"Developpers\"));\n+            } else {\n+                user.setPropertyValue(\"user:groups\", (Serializable) Arrays.asList(\"Support\"));\n+            }\n+            userManager.createUser(user);\n+        }\n+\n+        try (OperationContext ctx = new OperationContext(session)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "12e29667947b7d5ef52ffe5b6756b6c5eae04b06"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzYxNTYwOA==", "bodyText": "I can see 2 problems here, take the following group hierarchy (OK it's twisted, but can happen):\n     A\n     |--- B\n     |    |--- A\n     |    |--- C   \n     |--- C\n     |    |--- D\n\nIt seems that with the suggested algorithm, the resulting list will:\n\nInclude A (the parent group, also sub-sub-group), but this is probably not an issue.\nNot include D, C being skipped since already present as a subgroup of B probably an issue.", "url": "https://github.com/nuxeo/nuxeo/pull/4388#discussion_r507615608", "createdAt": "2020-10-19T09:48:13Z", "author": {"login": "ataillefer"}, "path": "nuxeo-services/nuxeo-platform-usermanager-core/src/main/java/org/nuxeo/ecm/platform/usermanager/UserManagerImpl.java", "diffHunk": "@@ -1604,6 +1604,24 @@ public GroupConfig getGroupConfig() {\n         return groupConfig;\n     }\n \n+    @Override\n+    public List<String> getDescendantGroups(String groupId){\n+        List<String> descendantGroups = new ArrayList<>();\n+        populateDescendantGroups(groupId, descendantGroups);\n+        return descendantGroups;\n+    }\n+\n+    protected void populateDescendantGroups(String groupId, List<String> descendantGroups) {\n+        NuxeoGroup group = getGroup(groupId);\n+        if (group != null) {\n+            List<String> subGroups = group.getMemberGroups();\n+            subGroups.stream().filter(subGroup -> !descendantGroups.contains(subGroup)).forEach(subGroup -> {\n+                descendantGroups.add(subGroup);\n+                populateDescendantGroups(subGroup, descendantGroups);\n+            });\n+        }\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "12e29667947b7d5ef52ffe5b6756b6c5eae04b06"}, "originalPosition": 20}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTExNzQ5NTk3", "url": "https://github.com/nuxeo/nuxeo/pull/4388#pullrequestreview-511749597", "createdAt": "2020-10-19T13:18:44Z", "commit": {"oid": "12e29667947b7d5ef52ffe5b6756b6c5eae04b06"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxMzoxODo0NVrOHkN3Mw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxMzoyODoxMlrOHkOUzg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzczNzkwNw==", "bodyText": "Don't forget to document this new configuration option in the NXP ticket", "url": "https://github.com/nuxeo/nuxeo/pull/4388#discussion_r507737907", "createdAt": "2020-10-19T13:18:45Z", "author": {"login": "efge"}, "path": "nuxeo-features/nuxeo-automation/nuxeo-automation-features/src/main/java/org/nuxeo/ecm/automation/core/operations/users/SuggestUserEntries.java", "diffHunk": "@@ -143,6 +143,12 @@\n     @Param(name = \"lang\", required = false)\n     protected String lang;\n \n+    /*\n+     * @since 11.4\n+     */\n+    @Param(name = \"allowSubGroupsRestriction\", required = false, description = \"Suggest users from the subgroups specified in the group restriction.\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "12e29667947b7d5ef52ffe5b6756b6c5eae04b06"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzc0NTQ4Ng==", "bodyText": "Yes maybe consider an algorithm based on (untested, modulo details):\n    Set<String> descendantGroups = new HashSet<>();\n    Deque<String> todo = new LinkedList<>();\n    todo.add(groupId);\n    while (!todo.isEmpty()) {\n        String id = todo.pop();\n        if (descendantGroups.add(id)) {\n            // recurse\n            NuxeoGroup group = getGroup(id);\n            if (group != null) {\n                todo.addAll(group.getMemberGroups());\n            }\n        }\n    }", "url": "https://github.com/nuxeo/nuxeo/pull/4388#discussion_r507745486", "createdAt": "2020-10-19T13:28:12Z", "author": {"login": "efge"}, "path": "nuxeo-services/nuxeo-platform-usermanager-core/src/main/java/org/nuxeo/ecm/platform/usermanager/UserManagerImpl.java", "diffHunk": "@@ -1604,6 +1604,24 @@ public GroupConfig getGroupConfig() {\n         return groupConfig;\n     }\n \n+    @Override\n+    public List<String> getDescendantGroups(String groupId){\n+        List<String> descendantGroups = new ArrayList<>();\n+        populateDescendantGroups(groupId, descendantGroups);\n+        return descendantGroups;\n+    }\n+\n+    protected void populateDescendantGroups(String groupId, List<String> descendantGroups) {\n+        NuxeoGroup group = getGroup(groupId);\n+        if (group != null) {\n+            List<String> subGroups = group.getMemberGroups();\n+            subGroups.stream().filter(subGroup -> !descendantGroups.contains(subGroup)).forEach(subGroup -> {\n+                descendantGroups.add(subGroup);\n+                populateDescendantGroups(subGroup, descendantGroups);\n+            });\n+        }\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzYxNTYwOA=="}, "originalCommit": {"oid": "12e29667947b7d5ef52ffe5b6756b6c5eae04b06"}, "originalPosition": 20}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4e620f5c8e6fd76ec4e8e0a4796856b9a28effbc", "author": {"user": {"login": "charlesboidot", "name": "Charles Boidot"}}, "url": "https://github.com/nuxeo/nuxeo/commit/4e620f5c8e6fd76ec4e8e0a4796856b9a28effbc", "committedDate": "2020-10-19T16:05:10Z", "message": "Merge branch '10.10-HF/fix-NXP-29720-Make-UserGroup.Suggestion-work-with-subgroups' of github.com:nuxeo/nuxeo into 10.10-HF/fix-NXP-29720-Make-UserGroup.Suggestion-work-with-subgroups"}, "afterCommit": {"oid": "53b7eac5ec2fd833e1133ee5391b13b6de195f3f", "author": {"user": {"login": "charlesboidot", "name": "Charles Boidot"}}, "url": "https://github.com/nuxeo/nuxeo/commit/53b7eac5ec2fd833e1133ee5391b13b6de195f3f", "committedDate": "2020-10-19T16:09:46Z", "message": "Merge branch '10.10-HF/fix-NXP-29720-Make-UserGroup.Suggestion-work-with-subgroups' of github.com:nuxeo/nuxeo into 10.10-HF/fix-NXP-29720-Make-UserGroup.Suggestion-work-with-subgroups"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "53b7eac5ec2fd833e1133ee5391b13b6de195f3f", "author": {"user": {"login": "charlesboidot", "name": "Charles Boidot"}}, "url": "https://github.com/nuxeo/nuxeo/commit/53b7eac5ec2fd833e1133ee5391b13b6de195f3f", "committedDate": "2020-10-19T16:09:46Z", "message": "Merge branch '10.10-HF/fix-NXP-29720-Make-UserGroup.Suggestion-work-with-subgroups' of github.com:nuxeo/nuxeo into 10.10-HF/fix-NXP-29720-Make-UserGroup.Suggestion-work-with-subgroups"}, "afterCommit": {"oid": "9f5ad2aa3d5ac3af45a8d5d71a1901b71cc766da", "author": {"user": {"login": "charlesboidot", "name": "Charles Boidot"}}, "url": "https://github.com/nuxeo/nuxeo/commit/9f5ad2aa3d5ac3af45a8d5d71a1901b71cc766da", "committedDate": "2020-10-27T14:36:35Z", "message": "NXP-29720: Make UserGroup.Suggestion work with subgroups"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9f5ad2aa3d5ac3af45a8d5d71a1901b71cc766da", "author": {"user": {"login": "charlesboidot", "name": "Charles Boidot"}}, "url": "https://github.com/nuxeo/nuxeo/commit/9f5ad2aa3d5ac3af45a8d5d71a1901b71cc766da", "committedDate": "2020-10-27T14:36:35Z", "message": "NXP-29720: Make UserGroup.Suggestion work with subgroups"}, "afterCommit": {"oid": "837fbf43b2cce45c22ff35c3631f9aa5ff26dba6", "author": {"user": {"login": "charlesboidot", "name": "Charles Boidot"}}, "url": "https://github.com/nuxeo/nuxeo/commit/837fbf43b2cce45c22ff35c3631f9aa5ff26dba6", "committedDate": "2020-10-27T15:06:08Z", "message": "NXP-29720: Make UserGroup.Suggestion work with subgroups"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "837fbf43b2cce45c22ff35c3631f9aa5ff26dba6", "author": {"user": {"login": "charlesboidot", "name": "Charles Boidot"}}, "url": "https://github.com/nuxeo/nuxeo/commit/837fbf43b2cce45c22ff35c3631f9aa5ff26dba6", "committedDate": "2020-10-27T15:06:08Z", "message": "NXP-29720: Make UserGroup.Suggestion work with subgroups"}, "afterCommit": {"oid": "fd2fe96fd112fb21daab3388fbc04d76be812738", "author": {"user": {"login": "charlesboidot", "name": "Charles Boidot"}}, "url": "https://github.com/nuxeo/nuxeo/commit/fd2fe96fd112fb21daab3388fbc04d76be812738", "committedDate": "2020-10-29T09:17:47Z", "message": "NXP-29720: Make UserGroup.Suggestion work with subgroups"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIxNTM2NDYw", "url": "https://github.com/nuxeo/nuxeo/pull/4388#pullrequestreview-521536460", "createdAt": "2020-11-02T11:12:08Z", "commit": {"oid": "fd2fe96fd112fb21daab3388fbc04d76be812738"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxMToxMjowOFrOHsAFaw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxMToxMjowOFrOHsAFaw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTkwMDc3OQ==", "bodyText": "I think we can also test if goups is not empty before computing the descendant groups, to avoid computing them uselessly for a user that isn't in any group.", "url": "https://github.com/nuxeo/nuxeo/pull/4388#discussion_r515900779", "createdAt": "2020-11-02T11:12:08Z", "author": {"login": "ataillefer"}, "path": "nuxeo-features/nuxeo-automation/nuxeo-automation-features/src/main/java/org/nuxeo/ecm/automation/core/operations/users/SuggestUserEntries.java", "diffHunk": "@@ -269,8 +275,20 @@ public Blob run() throws IOException {\n                 user = userManager.getUserModel(userId);\n                 UserAdapter userAdapter = user.getAdapter(UserAdapter.class);\n                 List<String> groups = userAdapter.getGroups();\n-                if (groups != null && groups.contains(groupRestriction)) {\n-                    result.add(obj);\n+                List<String> restrictedGroups = new ArrayList<>();\n+                restrictedGroups.add(groupRestriction);\n+\n+                if (groups != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fd2fe96fd112fb21daab3388fbc04d76be812738"}, "originalPosition": 22}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "fd2fe96fd112fb21daab3388fbc04d76be812738", "author": {"user": {"login": "charlesboidot", "name": "Charles Boidot"}}, "url": "https://github.com/nuxeo/nuxeo/commit/fd2fe96fd112fb21daab3388fbc04d76be812738", "committedDate": "2020-10-29T09:17:47Z", "message": "NXP-29720: Make UserGroup.Suggestion work with subgroups"}, "afterCommit": {"oid": "abbff664f011cf61e758bce3eea66c493c892aa9", "author": {"user": {"login": "charlesboidot", "name": "Charles Boidot"}}, "url": "https://github.com/nuxeo/nuxeo/commit/abbff664f011cf61e758bce3eea66c493c892aa9", "committedDate": "2020-11-02T16:03:32Z", "message": "NXP-29720: Make UserGroup.Suggestion work with subgroups"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIxNzcxNDQ1", "url": "https://github.com/nuxeo/nuxeo/pull/4388#pullrequestreview-521771445", "createdAt": "2020-11-02T16:07:46Z", "commit": {"oid": "abbff664f011cf61e758bce3eea66c493c892aa9"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI4OTA4NTM1", "url": "https://github.com/nuxeo/nuxeo/pull/4388#pullrequestreview-528908535", "createdAt": "2020-11-12T09:40:26Z", "commit": {"oid": "abbff664f011cf61e758bce3eea66c493c892aa9"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQwOTo0MDoyNlrOHxyZfg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQxMDoxMDoyOFrOHxznrA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTk2Nzk5OA==", "bodyText": "The description text is not clear. I suggest \"Whether to take into account subgroups when evaluating groupRestriction\" \u2014\u00a0if I understand correctly.", "url": "https://github.com/nuxeo/nuxeo/pull/4388#discussion_r521967998", "createdAt": "2020-11-12T09:40:26Z", "author": {"login": "efge"}, "path": "nuxeo-features/nuxeo-automation/nuxeo-automation-features/src/main/java/org/nuxeo/ecm/automation/core/operations/users/SuggestUserEntries.java", "diffHunk": "@@ -143,6 +144,12 @@\n     @Param(name = \"lang\", required = false)\n     protected String lang;\n \n+    /*\n+     * @since 11.4\n+     */\n+    @Param(name = \"allowSubGroupsRestriction\", required = false, description = \"Include the subgroups when passing a groupRestriction.\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "abbff664f011cf61e758bce3eea66c493c892aa9"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTk2OTI4MQ==", "bodyText": "Please put this method just below getAncestorGroups.", "url": "https://github.com/nuxeo/nuxeo/pull/4388#discussion_r521969281", "createdAt": "2020-11-12T09:42:22Z", "author": {"login": "efge"}, "path": "nuxeo-services/nuxeo-platform-usermanager-api/src/main/java/org/nuxeo/ecm/platform/usermanager/UserManager.java", "diffHunk": "@@ -463,4 +463,12 @@ default void notifyGroupChanged(String groupName, String eventId) {\n      * @since 9.2\n      */\n     void notifyGroupChanged(String groupName, String eventId, List<String> ancestorGroupNames);\n+\n+    /**\n+     * Returns the descendant groups of the group with the given id.\n+     *\n+     * @since 11.4\n+     */\n+    List<String> getDescendantGroups(String groupId);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "abbff664f011cf61e758bce3eea66c493c892aa9"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTk2OTM4Ng==", "bodyText": "Please put this method just below getAncestorGroups.", "url": "https://github.com/nuxeo/nuxeo/pull/4388#discussion_r521969386", "createdAt": "2020-11-12T09:42:34Z", "author": {"login": "efge"}, "path": "nuxeo-services/nuxeo-platform-usermanager-core/src/main/java/org/nuxeo/ecm/platform/usermanager/FakeUserManagerImpl.java", "diffHunk": "@@ -498,4 +498,9 @@ public void notifyGroupChanged(String groupName, String eventId, List<String> an\n         throw new UnsupportedOperationException();\n     }\n \n+    @Override\n+    public List<String> getDescendantGroups(String groupId) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "abbff664f011cf61e758bce3eea66c493c892aa9"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTk3MDI0Mg==", "bodyText": "Please put these two methods just below getAncestorGroups (actually below populateAncestorGroups)", "url": "https://github.com/nuxeo/nuxeo/pull/4388#discussion_r521970242", "createdAt": "2020-11-12T09:43:53Z", "author": {"login": "efge"}, "path": "nuxeo-services/nuxeo-platform-usermanager-core/src/main/java/org/nuxeo/ecm/platform/usermanager/UserManagerImpl.java", "diffHunk": "@@ -1604,6 +1604,24 @@ public GroupConfig getGroupConfig() {\n         return groupConfig;\n     }\n \n+    @Override\n+    public List<String> getDescendantGroups(String groupId){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "abbff664f011cf61e758bce3eea66c493c892aa9"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTk3NDA4MA==", "bodyText": "Remove empty line", "url": "https://github.com/nuxeo/nuxeo/pull/4388#discussion_r521974080", "createdAt": "2020-11-12T09:49:37Z", "author": {"login": "efge"}, "path": "nuxeo-features/nuxeo-automation/nuxeo-automation-features/src/main/java/org/nuxeo/ecm/automation/core/operations/users/SuggestUserEntries.java", "diffHunk": "@@ -269,8 +276,20 @@ public Blob run() throws IOException {\n                 user = userManager.getUserModel(userId);\n                 UserAdapter userAdapter = user.getAdapter(UserAdapter.class);\n                 List<String> groups = userAdapter.getGroups();\n-                if (groups != null && groups.contains(groupRestriction)) {\n-                    result.add(obj);\n+                List<String> restrictedGroups = new ArrayList<>();\n+                restrictedGroups.add(groupRestriction);\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "abbff664f011cf61e758bce3eea66c493c892aa9"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTk3NTEyNw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                    List<String> subGroups = userManager.getDescendantGroups(groupRestriction);\n          \n          \n            \n                                    for (String subGroup : subGroups) {\n          \n          \n            \n                                        restrictedGroups.add(subGroup);\n          \n          \n            \n                                    }\n          \n          \n            \n                                    restrictedGroups.addAll(userManager.getDescendantGroups(groupRestriction));", "url": "https://github.com/nuxeo/nuxeo/pull/4388#discussion_r521975127", "createdAt": "2020-11-12T09:51:09Z", "author": {"login": "efge"}, "path": "nuxeo-features/nuxeo-automation/nuxeo-automation-features/src/main/java/org/nuxeo/ecm/automation/core/operations/users/SuggestUserEntries.java", "diffHunk": "@@ -269,8 +276,20 @@ public Blob run() throws IOException {\n                 user = userManager.getUserModel(userId);\n                 UserAdapter userAdapter = user.getAdapter(UserAdapter.class);\n                 List<String> groups = userAdapter.getGroups();\n-                if (groups != null && groups.contains(groupRestriction)) {\n-                    result.add(obj);\n+                List<String> restrictedGroups = new ArrayList<>();\n+                restrictedGroups.add(groupRestriction);\n+\n+                if (CollectionUtils.isNotEmpty(groups)) {\n+                    if (allowSubGroupsRestriction) {\n+                        List<String> subGroups = userManager.getDescendantGroups(groupRestriction);\n+                        for (String subGroup : subGroups) {\n+                            restrictedGroups.add(subGroup);\n+                        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "abbff664f011cf61e758bce3eea66c493c892aa9"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTk4MjQ4Ng==", "bodyText": "I'd rather not modify groups as it comes from the adapter and I'm not sure we have enough defensive copies (and actually there's nothing that guarantees that's it's a modifiable list).\nAs the check we want is that the intersection is not empty, I think this works just as well:\nrestrictedGroups.retainAll(groups);\nif (!restrictedGroups.isEmpty()) {\n\nBut of course run the unit tests to make sure.", "url": "https://github.com/nuxeo/nuxeo/pull/4388#discussion_r521982486", "createdAt": "2020-11-12T10:02:01Z", "author": {"login": "efge"}, "path": "nuxeo-features/nuxeo-automation/nuxeo-automation-features/src/main/java/org/nuxeo/ecm/automation/core/operations/users/SuggestUserEntries.java", "diffHunk": "@@ -269,8 +276,20 @@ public Blob run() throws IOException {\n                 user = userManager.getUserModel(userId);\n                 UserAdapter userAdapter = user.getAdapter(UserAdapter.class);\n                 List<String> groups = userAdapter.getGroups();\n-                if (groups != null && groups.contains(groupRestriction)) {\n-                    result.add(obj);\n+                List<String> restrictedGroups = new ArrayList<>();\n+                restrictedGroups.add(groupRestriction);\n+\n+                if (CollectionUtils.isNotEmpty(groups)) {\n+                    if (allowSubGroupsRestriction) {\n+                        List<String> subGroups = userManager.getDescendantGroups(groupRestriction);\n+                        for (String subGroup : subGroups) {\n+                            restrictedGroups.add(subGroup);\n+                        }\n+                    }\n+                    groups.retainAll(restrictedGroups);\n+                    if (!groups.isEmpty()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "abbff664f011cf61e758bce3eea66c493c892aa9"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTk4NDQ4Ng==", "bodyText": "These two lines can be moved further down inside the if", "url": "https://github.com/nuxeo/nuxeo/pull/4388#discussion_r521984486", "createdAt": "2020-11-12T10:04:54Z", "author": {"login": "efge"}, "path": "nuxeo-features/nuxeo-automation/nuxeo-automation-features/src/main/java/org/nuxeo/ecm/automation/core/operations/users/SuggestUserEntries.java", "diffHunk": "@@ -269,8 +276,20 @@ public Blob run() throws IOException {\n                 user = userManager.getUserModel(userId);\n                 UserAdapter userAdapter = user.getAdapter(UserAdapter.class);\n                 List<String> groups = userAdapter.getGroups();\n-                if (groups != null && groups.contains(groupRestriction)) {\n-                    result.add(obj);\n+                List<String> restrictedGroups = new ArrayList<>();\n+                restrictedGroups.add(groupRestriction);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "abbff664f011cf61e758bce3eea66c493c892aa9"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTk4NTc2OA==", "bodyText": "One one empty line only (enforced by formatter).", "url": "https://github.com/nuxeo/nuxeo/pull/4388#discussion_r521985768", "createdAt": "2020-11-12T10:07:00Z", "author": {"login": "efge"}, "path": "nuxeo-features/nuxeo-automation/nuxeo-automation-features/src/test/java/org/nuxeo/ecm/automation/core/operations/users/TestSuggestUserEntries.java", "diffHunk": "@@ -276,4 +276,103 @@ public void testMixedEntries() throws Exception {\n         }\n     }\n \n+    @Test\n+    public void testSubGroupEntries() throws Exception {\n+\n+        //A\n+        //|--- B\n+        //|    |--- A\n+        //|    |--- C\n+        //|--- C\n+        //|    |--- D\n+\n+        // create group 'A'\n+        DocumentModel A = userManager.getBareGroupModel();\n+        A.setPropertyValue(\"group:groupname\", \"A\");\n+        A.setPropertyValue(\"group:subGroups\", (Serializable) Arrays.asList(\"B\", \"C\"));\n+\n+        userManager.createGroup(A);\n+\n+        // create group 'B'\n+        DocumentModel B = userManager.getBareGroupModel();\n+        B.setPropertyValue(\"group:groupname\", \"B\");\n+        B.setPropertyValue(\"group:parentGroups\", (Serializable) Arrays.asList(\"A\"));\n+        B.setPropertyValue(\"group:subGroups\", (Serializable) Arrays.asList(\"C\", \"A\"));\n+\n+        userManager.createGroup(B);\n+\n+        // create group 'C'\n+        DocumentModel C = userManager.getBareGroupModel();\n+        C.setPropertyValue(\"group:groupname\", \"C\");\n+        C.setPropertyValue(\"group:parentGroups\", (Serializable) Arrays.asList(\"B\", \"A\"));\n+        C.setPropertyValue(\"group:subGroups\", (Serializable) Arrays.asList(\"D\"));\n+\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "abbff664f011cf61e758bce3eea66c493c892aa9"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTk4NjM2Mw==", "bodyText": "Don't use local variables starting with an uppercase -> a", "url": "https://github.com/nuxeo/nuxeo/pull/4388#discussion_r521986363", "createdAt": "2020-11-12T10:07:54Z", "author": {"login": "efge"}, "path": "nuxeo-features/nuxeo-automation/nuxeo-automation-features/src/test/java/org/nuxeo/ecm/automation/core/operations/users/TestSuggestUserEntries.java", "diffHunk": "@@ -276,4 +276,103 @@ public void testMixedEntries() throws Exception {\n         }\n     }\n \n+    @Test\n+    public void testSubGroupEntries() throws Exception {\n+\n+        //A\n+        //|--- B\n+        //|    |--- A\n+        //|    |--- C\n+        //|--- C\n+        //|    |--- D\n+\n+        // create group 'A'\n+        DocumentModel A = userManager.getBareGroupModel();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "abbff664f011cf61e758bce3eea66c493c892aa9"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTk4ODAxMg==", "bodyText": "Empty line not needed before } in a method.\nOn the other hand we like to have an empty line before the final } of the class...\n\ud83d\ude2c", "url": "https://github.com/nuxeo/nuxeo/pull/4388#discussion_r521988012", "createdAt": "2020-11-12T10:10:28Z", "author": {"login": "efge"}, "path": "nuxeo-features/nuxeo-automation/nuxeo-automation-features/src/test/java/org/nuxeo/ecm/automation/core/operations/users/TestSuggestUserEntries.java", "diffHunk": "@@ -276,4 +276,103 @@ public void testMixedEntries() throws Exception {\n         }\n     }\n \n+    @Test\n+    public void testSubGroupEntries() throws Exception {\n+\n+        //A\n+        //|--- B\n+        //|    |--- A\n+        //|    |--- C\n+        //|--- C\n+        //|    |--- D\n+\n+        // create group 'A'\n+        DocumentModel A = userManager.getBareGroupModel();\n+        A.setPropertyValue(\"group:groupname\", \"A\");\n+        A.setPropertyValue(\"group:subGroups\", (Serializable) Arrays.asList(\"B\", \"C\"));\n+\n+        userManager.createGroup(A);\n+\n+        // create group 'B'\n+        DocumentModel B = userManager.getBareGroupModel();\n+        B.setPropertyValue(\"group:groupname\", \"B\");\n+        B.setPropertyValue(\"group:parentGroups\", (Serializable) Arrays.asList(\"A\"));\n+        B.setPropertyValue(\"group:subGroups\", (Serializable) Arrays.asList(\"C\", \"A\"));\n+\n+        userManager.createGroup(B);\n+\n+        // create group 'C'\n+        DocumentModel C = userManager.getBareGroupModel();\n+        C.setPropertyValue(\"group:groupname\", \"C\");\n+        C.setPropertyValue(\"group:parentGroups\", (Serializable) Arrays.asList(\"B\", \"A\"));\n+        C.setPropertyValue(\"group:subGroups\", (Serializable) Arrays.asList(\"D\"));\n+\n+\n+        userManager.createGroup(C);\n+\n+         // create group 'D'\n+         DocumentModel D = userManager.getBareGroupModel();\n+         D.setPropertyValue(\"group:groupname\", \"D\");\n+         D.setPropertyValue(\"group:parentGroups\", (Serializable) Arrays.asList(\"C\"));\n+\n+        userManager.createGroup(D);\n+\n+        // create 2 users in each group\n+        for (int i = 0; i < 8; i++) {\n+            DocumentModel user = userManager.getBareUserModel();\n+            user.setPropertyValue(\"user:username\", \"user\" + i);\n+            user.setPropertyValue(\"user:firstName\", \"User\" + i);\n+            user.setPropertyValue(\"user:lastName\", \"Smith\");\n+            user.setPropertyValue(\"user:email\", \"user\" + i + \"@example.com\");\n+            if (i % 4 == 0) {\n+                user.setPropertyValue(\"user:groups\", (Serializable) Arrays.asList(\"A\"));\n+            } else if (i % 4 == 1) {\n+                user.setPropertyValue(\"user:groups\", (Serializable) Arrays.asList(\"B\"));\n+            } else if (i % 4 == 2) {\n+                user.setPropertyValue(\"user:groups\", (Serializable) Arrays.asList(\"C\"));\n+            } else {\n+                user.setPropertyValue(\"user:groups\", (Serializable) Arrays.asList(\"D\"));\n+            }\n+            userManager.createUser(user);\n+        }\n+\n+        try (OperationContext ctx = new OperationContext(session)) {\n+            // By searching A we should have all the users we created before in the three groups and not only\n+            // those in the A group directly, so a total of 8 people\n+            Map<String, String> params = new HashMap<>();\n+            params.put(\"allowSubGroupsRestriction\", \"true\");\n+            params.put(\"groupRestriction\", \"A\");\n+            Blob result = (Blob) automationService.run(ctx, SuggestUserEntries.ID, params);\n+            assertNotNull(result);\n+            JsonAssert json = JsonAssert.on(result.getString());\n+            assertEquals(8, json.getNode().size());\n+\n+            params.put(\"groupRestriction\", \"B\");\n+            result = (Blob) automationService.run(ctx, SuggestUserEntries.ID, params);\n+            assertNotNull(result);\n+            json = JsonAssert.on(result.getString());\n+            assertEquals(8, json.getNode().size());\n+\n+            params.put(\"groupRestriction\", \"C\");\n+            result = (Blob) automationService.run(ctx, SuggestUserEntries.ID, params);\n+            assertNotNull(result);\n+            json = JsonAssert.on(result.getString());\n+            assertEquals(4, json.getNode().size());\n+\n+            params.put(\"groupRestriction\", \"D\");\n+            result = (Blob) automationService.run(ctx, SuggestUserEntries.ID, params);\n+            assertNotNull(result);\n+            json = JsonAssert.on(result.getString());\n+            assertEquals(2, json.getNode().size());\n+\n+            // By searching A we should have only 2 people if we don't filter on the subgroups\n+            params.put(\"allowSubGroupsRestriction\", \"false\");\n+            params.put(\"groupRestriction\", \"A\");\n+            result = (Blob) automationService.run(ctx, SuggestUserEntries.ID, params);\n+            assertNotNull(result);\n+            json = JsonAssert.on(result.getString());\n+            assertEquals(2, json.getNode().size());\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "abbff664f011cf61e758bce3eea66c493c892aa9"}, "originalPosition": 100}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d808c457c5fe004d20ef7f9e57c1a26e38f9007c", "author": {"user": {"login": "charlesboidot", "name": "Charles Boidot"}}, "url": "https://github.com/nuxeo/nuxeo/commit/d808c457c5fe004d20ef7f9e57c1a26e38f9007c", "committedDate": "2020-11-12T10:56:26Z", "message": "NXP-29720: Make UserGroup.Suggestion work with subgroups"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "abbff664f011cf61e758bce3eea66c493c892aa9", "author": {"user": {"login": "charlesboidot", "name": "Charles Boidot"}}, "url": "https://github.com/nuxeo/nuxeo/commit/abbff664f011cf61e758bce3eea66c493c892aa9", "committedDate": "2020-11-02T16:03:32Z", "message": "NXP-29720: Make UserGroup.Suggestion work with subgroups"}, "afterCommit": {"oid": "d808c457c5fe004d20ef7f9e57c1a26e38f9007c", "author": {"user": {"login": "charlesboidot", "name": "Charles Boidot"}}, "url": "https://github.com/nuxeo/nuxeo/commit/d808c457c5fe004d20ef7f9e57c1a26e38f9007c", "committedDate": "2020-11-12T10:56:26Z", "message": "NXP-29720: Make UserGroup.Suggestion work with subgroups"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI4OTc3NDI0", "url": "https://github.com/nuxeo/nuxeo/pull/4388#pullrequestreview-528977424", "createdAt": "2020-11-12T11:04:11Z", "commit": {"oid": "d808c457c5fe004d20ef7f9e57c1a26e38f9007c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI4OTk1MDgy", "url": "https://github.com/nuxeo/nuxeo/pull/4388#pullrequestreview-528995082", "createdAt": "2020-11-12T11:28:35Z", "commit": {"oid": "d808c457c5fe004d20ef7f9e57c1a26e38f9007c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQxMToyODozNVrOHx2jaA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQxMToyODozNVrOHx2jaA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjAzNjA3Mg==", "bodyText": "why remove the schema showing the group hierarchy?", "url": "https://github.com/nuxeo/nuxeo/pull/4388#discussion_r522036072", "createdAt": "2020-11-12T11:28:35Z", "author": {"login": "ataillefer"}, "path": "nuxeo-features/nuxeo-automation/nuxeo-automation-features/src/test/java/org/nuxeo/ecm/automation/core/operations/users/TestSuggestUserEntries.java", "diffHunk": "@@ -276,4 +276,95 @@ public void testMixedEntries() throws Exception {\n         }\n     }\n \n+    @Test\n+    public void testSubGroupEntries() throws Exception {\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d808c457c5fe004d20ef7f9e57c1a26e38f9007c"}, "originalPosition": 6}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI4OTk3ODM1", "url": "https://github.com/nuxeo/nuxeo/pull/4388#pullrequestreview-528997835", "createdAt": "2020-11-12T11:32:25Z", "commit": {"oid": "d808c457c5fe004d20ef7f9e57c1a26e38f9007c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4938, "cost": 1, "resetAt": "2021-11-03T18:41:40Z"}}}