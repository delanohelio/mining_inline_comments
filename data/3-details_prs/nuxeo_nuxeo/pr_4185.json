{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM5NjgyODMw", "number": 4185, "title": "fix-NXP-29297-audit-extended-info-json-writter", "bodyText": "PR created from https://qa.nuxeo.org/jenkins/job/TestAndPush/job/ondemand-testandpush-mvachette/12/", "createdAt": "2020-06-25T05:57:07Z", "url": "https://github.com/nuxeo/nuxeo/pull/4185", "merged": true, "mergeCommit": {"oid": "e73eb320f45a4b5cbd549c0c54a2d2d2cbfa1fe7"}, "closed": true, "closedAt": "2020-08-31T15:24:14Z", "author": {"login": "nuxeojenkins"}, "timelineItems": {"totalCount": 15, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcuqt8wAFqTQzNzI5NTg4OQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdESuRhAFqTQ3ODYxMDUzMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM3Mjk1ODg5", "url": "https://github.com/nuxeo/nuxeo/pull/4185#pullrequestreview-437295889", "createdAt": "2020-06-25T08:52:48Z", "commit": {"oid": "34235d367098e4a141b260dc7694184aa3a1937b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQwODo1Mjo0OFrOGoxgvQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQwODo1Mjo0OFrOGoxgvQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTQwNzQyMQ==", "bodyText": "missing new line", "url": "https://github.com/nuxeo/nuxeo/pull/4185#discussion_r445407421", "createdAt": "2020-06-25T08:52:48Z", "author": {"login": "NourNuxeo"}, "path": "modules/platform/nuxeo-platform-audit/nuxeo-platform-audit-core/src/main/java/org/nuxeo/ecm/platform/audit/io/LogEntryJsonWriter.java", "diffHunk": "@@ -147,20 +148,15 @@ protected void writeExtendedInfo(JsonGenerator jg, String key, Serializable valu\n             jg.writeObjectField(key, value);\n         } else if (Map.class.isAssignableFrom(clazz)) {\n             @SuppressWarnings(\"unchecked\")\n-            Map<String, Serializable> map = //\n-                    ((Map<String, Serializable>) value).entrySet()\n-                                                       .stream()\n-                                                       // keep primitive values\n-                                                       // blobs can be in WorkflowVariables for instance\n-                                                       .filter(entry -> entry.getValue() != null\n-                                                               && ClassUtils.isPrimitiveOrWrapper(\n-                                                                       entry.getValue().getClass()))\n-                                                       .collect(Collectors.toMap(Entry::getKey, Entry::getValue));\n-            jg.writeObjectField(key, map);\n+            Map<String,Serializable> map = (Map<String, Serializable>) value;\n+            jg.writeObjectFieldStart(key);\n+            for(Entry<String,Serializable> entry : map.entrySet()) {\n+                writeExtendedInfo(jg,entry.getKey(),entry.getValue());\n+            }\n+            jg.writeEndObject();\n         } else {\n             // mainly blobs\n             jg.writeStringField(key, value.toString());\n         }\n     }\n-\n-}\n+}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "34235d367098e4a141b260dc7694184aa3a1937b"}, "originalPosition": 35}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM3MzEwOTY1", "url": "https://github.com/nuxeo/nuxeo/pull/4185#pullrequestreview-437310965", "createdAt": "2020-06-25T09:12:17Z", "commit": {"oid": "34235d367098e4a141b260dc7694184aa3a1937b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQwOToxMjoxOFrOGoyM8Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQwOToxMjoxOFrOGoyM8Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTQxODczNw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    json.has(\"extended\").properties(1).has(\"params\").isObject().has(\"String\").isEquals(\"abcde\");\n          \n          \n            \n                    json.has(\"extended\").properties(1).has(\"params\").isObject().has(\"Date\").isEquals(formatISODateTime(now));\n          \n          \n            \n                    json.has(\"extended\").properties(1).has(\"params\").isObject().has(\"Integer\").isEquals(1);\n          \n          \n            \n                    json.has(\"extended\").properties(1).has(\"params\").isObject().has(\"Double\").isEquals(2.0,0.0);\n          \n          \n            \n                    json.has(\"extended\").properties(1).has(\"params\").isObject().has(\"Boolean\").isEquals(false);\n          \n          \n            \n                    var extended = json.has(\"extended\").properties(1).has(\"params\").isObject();\n          \n          \n            \n                    extended.has(\"String\").isEquals(\"abcde\");\n          \n          \n            \n                    extended.has(\"Date\").isEquals(formatISODateTime(now));\n          \n          \n            \n                    extended.has(\"Integer\").isEquals(1);\n          \n          \n            \n                    extended.has(\"Double\").isEquals(2.0,0.0);\n          \n          \n            \n                    extended.has(\"Boolean\").isEquals(false);", "url": "https://github.com/nuxeo/nuxeo/pull/4185#discussion_r445418737", "createdAt": "2020-06-25T09:12:18Z", "author": {"login": "NourNuxeo"}, "path": "modules/platform/nuxeo-platform-audit/nuxeo-platform-audit-core/src/test/java/org/nuxeo/ecm/platform/audit/io/LogEntryJsonWriterTest.java", "diffHunk": "@@ -114,4 +119,42 @@ public void testArrayInExtendedInfo() throws Exception {\n         json.has(\"extended\").properties(1).has(\"params\").isArray().contains(\"a simple string\");\n     }\n \n+    @Test\n+    public void testMapInExtendedInfo() throws Exception {\n+        Map<String, ExtendedInfo> infos = new HashMap<>();\n+\n+        HashMap<String, Serializable> infoMap = new HashMap<>();\n+        infoMap.put(\"String\",\"abcde\");\n+        Date now = new Date();\n+        infoMap.put(\"Date\", now);\n+        infoMap.put(\"Boolean\",false);\n+        infoMap.put(\"Integer\",1);\n+        infoMap.put(\"Double\",2.0);\n+        infos.put(\"params\", ExtendedInfoImpl.createExtendedInfo(infoMap));\n+\n+        LogEntry logEntry = new LogEntryImpl();\n+        logEntry.setExtendedInfos(infos);\n+\n+        JsonAssert json = jsonAssert(logEntry);\n+        json.properties(14);\n+        json.has(\"entity-type\").isEquals(\"logEntry\");\n+        json.has(\"id\").isEquals(0);\n+        json.has(\"category\").isNull();\n+        json.has(\"principalName\").isNull();\n+        json.has(\"docPath\").isNull();\n+        json.has(\"docType\").isNull();\n+        json.has(\"docUUID\").isNull();\n+        json.has(\"eventId\").isNull();\n+        json.has(\"repositoryId\").isNull();\n+        json.has(\"eventDate\").isText();\n+        json.has(\"logDate\").isText();\n+        json.has(\"comment\").isNull();\n+        json.has(\"docLifeCycle\").isNull();\n+        json.has(\"extended\").properties(1).has(\"params\").isObject().has(\"String\").isEquals(\"abcde\");\n+        json.has(\"extended\").properties(1).has(\"params\").isObject().has(\"Date\").isEquals(formatISODateTime(now));\n+        json.has(\"extended\").properties(1).has(\"params\").isObject().has(\"Integer\").isEquals(1);\n+        json.has(\"extended\").properties(1).has(\"params\").isObject().has(\"Double\").isEquals(2.0,0.0);\n+        json.has(\"extended\").properties(1).has(\"params\").isObject().has(\"Boolean\").isEquals(false);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "34235d367098e4a141b260dc7694184aa3a1937b"}, "originalPosition": 58}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM3MzMxMjA5", "url": "https://github.com/nuxeo/nuxeo/pull/4185#pullrequestreview-437331209", "createdAt": "2020-06-25T09:39:01Z", "commit": {"oid": "34235d367098e4a141b260dc7694184aa3a1937b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQwOTozOTowMVrOGozKXg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQwOTozOTowMVrOGozKXg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTQzNDQ2Mg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    HashMap<String, Serializable> infoMap = new HashMap<>();\n          \n          \n            \n                    infoMap.put(\"String\",\"abcde\");\n          \n          \n            \n                    Date now = new Date();\n          \n          \n            \n                    infoMap.put(\"Date\", now);\n          \n          \n            \n                    infoMap.put(\"Boolean\",false);\n          \n          \n            \n                    infoMap.put(\"Integer\",1);\n          \n          \n            \n                    infoMap.put(\"Double\",2.0);\n          \n          \n            \n                    infos.put(\"params\", ExtendedInfoImpl.createExtendedInfo(infoMap));\n          \n          \n            \n                    var infoMap = Map.of(\"String\", \"abcde\", \"Date\", new Date(), \"Boolean\", false, \"Integer\", 1, \"Double\", 2.0);\n          \n          \n            \n                    infos.put(\"params\", ExtendedInfoImpl.createExtendedInfo((Serializable) infoMap));", "url": "https://github.com/nuxeo/nuxeo/pull/4185#discussion_r445434462", "createdAt": "2020-06-25T09:39:01Z", "author": {"login": "NourNuxeo"}, "path": "modules/platform/nuxeo-platform-audit/nuxeo-platform-audit-core/src/test/java/org/nuxeo/ecm/platform/audit/io/LogEntryJsonWriterTest.java", "diffHunk": "@@ -114,4 +119,42 @@ public void testArrayInExtendedInfo() throws Exception {\n         json.has(\"extended\").properties(1).has(\"params\").isArray().contains(\"a simple string\");\n     }\n \n+    @Test\n+    public void testMapInExtendedInfo() throws Exception {\n+        Map<String, ExtendedInfo> infos = new HashMap<>();\n+\n+        HashMap<String, Serializable> infoMap = new HashMap<>();\n+        infoMap.put(\"String\",\"abcde\");\n+        Date now = new Date();\n+        infoMap.put(\"Date\", now);\n+        infoMap.put(\"Boolean\",false);\n+        infoMap.put(\"Integer\",1);\n+        infoMap.put(\"Double\",2.0);\n+        infos.put(\"params\", ExtendedInfoImpl.createExtendedInfo(infoMap));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "34235d367098e4a141b260dc7694184aa3a1937b"}, "originalPosition": 34}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM3MzUzNzU5", "url": "https://github.com/nuxeo/nuxeo/pull/4185#pullrequestreview-437353759", "createdAt": "2020-06-25T10:10:28Z", "commit": {"oid": "34235d367098e4a141b260dc7694184aa3a1937b"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxMDoxMDoyOFrOGo0PTA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxMDoxMjoyM1rOGo0TVQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTQ1MjEwOA==", "bodyText": "Space before ( and after , here an in several other places", "url": "https://github.com/nuxeo/nuxeo/pull/4185#discussion_r445452108", "createdAt": "2020-06-25T10:10:28Z", "author": {"login": "efge"}, "path": "modules/platform/nuxeo-platform-audit/nuxeo-platform-audit-core/src/main/java/org/nuxeo/ecm/platform/audit/io/LogEntryJsonWriter.java", "diffHunk": "@@ -147,20 +148,15 @@ protected void writeExtendedInfo(JsonGenerator jg, String key, Serializable valu\n             jg.writeObjectField(key, value);\n         } else if (Map.class.isAssignableFrom(clazz)) {\n             @SuppressWarnings(\"unchecked\")\n-            Map<String, Serializable> map = //\n-                    ((Map<String, Serializable>) value).entrySet()\n-                                                       .stream()\n-                                                       // keep primitive values\n-                                                       // blobs can be in WorkflowVariables for instance\n-                                                       .filter(entry -> entry.getValue() != null\n-                                                               && ClassUtils.isPrimitiveOrWrapper(\n-                                                                       entry.getValue().getClass()))\n-                                                       .collect(Collectors.toMap(Entry::getKey, Entry::getValue));\n-            jg.writeObjectField(key, map);\n+            Map<String,Serializable> map = (Map<String, Serializable>) value;\n+            jg.writeObjectFieldStart(key);\n+            for(Entry<String,Serializable> entry : map.entrySet()) {\n+                writeExtendedInfo(jg,entry.getKey(),entry.getValue());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "34235d367098e4a141b260dc7694184aa3a1937b"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTQ1MjQ0Nw==", "bodyText": "The formatter should put static imports before standard ones", "url": "https://github.com/nuxeo/nuxeo/pull/4185#discussion_r445452447", "createdAt": "2020-06-25T10:11:07Z", "author": {"login": "efge"}, "path": "modules/platform/nuxeo-platform-audit/nuxeo-platform-audit-core/src/test/java/org/nuxeo/ecm/platform/audit/io/LogEntryJsonWriterTest.java", "diffHunk": "@@ -41,6 +44,8 @@\n import org.nuxeo.runtime.test.runner.Deploy;\n import org.nuxeo.runtime.test.runner.Features;\n \n+import static org.nuxeo.common.utils.DateUtils.formatISODateTime;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "34235d367098e4a141b260dc7694184aa3a1937b"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTQ1MzE0MQ==", "bodyText": "@NourNuxeo if we do that it wont' be directly backportable. And for a test it isn't as readable.", "url": "https://github.com/nuxeo/nuxeo/pull/4185#discussion_r445453141", "createdAt": "2020-06-25T10:12:23Z", "author": {"login": "efge"}, "path": "modules/platform/nuxeo-platform-audit/nuxeo-platform-audit-core/src/test/java/org/nuxeo/ecm/platform/audit/io/LogEntryJsonWriterTest.java", "diffHunk": "@@ -114,4 +119,42 @@ public void testArrayInExtendedInfo() throws Exception {\n         json.has(\"extended\").properties(1).has(\"params\").isArray().contains(\"a simple string\");\n     }\n \n+    @Test\n+    public void testMapInExtendedInfo() throws Exception {\n+        Map<String, ExtendedInfo> infos = new HashMap<>();\n+\n+        HashMap<String, Serializable> infoMap = new HashMap<>();\n+        infoMap.put(\"String\",\"abcde\");\n+        Date now = new Date();\n+        infoMap.put(\"Date\", now);\n+        infoMap.put(\"Boolean\",false);\n+        infoMap.put(\"Integer\",1);\n+        infoMap.put(\"Double\",2.0);\n+        infos.put(\"params\", ExtendedInfoImpl.createExtendedInfo(infoMap));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTQzNDQ2Mg=="}, "originalCommit": {"oid": "34235d367098e4a141b260dc7694184aa3a1937b"}, "originalPosition": 34}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "34235d367098e4a141b260dc7694184aa3a1937b", "author": {"user": {"login": "michaelva", "name": "Micha\u00ebl Vachette"}}, "url": "https://github.com/nuxeo/nuxeo/commit/34235d367098e4a141b260dc7694184aa3a1937b", "committedDate": "2020-06-24T06:01:18Z", "message": "NXP-29297: serialize string and date values from map in audit extended info"}, "afterCommit": {"oid": "c19e8265ab917ba0b6f2bba8b039077ad030a702", "author": {"user": {"login": "michaelva", "name": "Micha\u00ebl Vachette"}}, "url": "https://github.com/nuxeo/nuxeo/commit/c19e8265ab917ba0b6f2bba8b039077ad030a702", "committedDate": "2020-06-26T05:58:05Z", "message": "NXP-29297: serialize string and date values from map in audit extended info"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c19e8265ab917ba0b6f2bba8b039077ad030a702", "author": {"user": {"login": "michaelva", "name": "Micha\u00ebl Vachette"}}, "url": "https://github.com/nuxeo/nuxeo/commit/c19e8265ab917ba0b6f2bba8b039077ad030a702", "committedDate": "2020-06-26T05:58:05Z", "message": "NXP-29297: serialize string and date values from map in audit extended info"}, "afterCommit": {"oid": "cf67d07647b9aa5e2b78234b740652da831270e5", "author": {"user": {"login": "michaelva", "name": "Micha\u00ebl Vachette"}}, "url": "https://github.com/nuxeo/nuxeo/commit/cf67d07647b9aa5e2b78234b740652da831270e5", "committedDate": "2020-06-26T06:04:42Z", "message": "NXP-29297: serialize string and date values from map in audit extended info"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "cf67d07647b9aa5e2b78234b740652da831270e5", "author": {"user": {"login": "michaelva", "name": "Micha\u00ebl Vachette"}}, "url": "https://github.com/nuxeo/nuxeo/commit/cf67d07647b9aa5e2b78234b740652da831270e5", "committedDate": "2020-06-26T06:04:42Z", "message": "NXP-29297: serialize string and date values from map in audit extended info"}, "afterCommit": {"oid": "5ac1789d53a29c41a51f4c5d3c4b68f8680cfb5e", "author": {"user": {"login": "michaelva", "name": "Micha\u00ebl Vachette"}}, "url": "https://github.com/nuxeo/nuxeo/commit/5ac1789d53a29c41a51f4c5d3c4b68f8680cfb5e", "committedDate": "2020-06-26T06:06:07Z", "message": "NXP-29297: serialize string and date values from map in audit extended info"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5ac1789d53a29c41a51f4c5d3c4b68f8680cfb5e", "author": {"user": {"login": "michaelva", "name": "Micha\u00ebl Vachette"}}, "url": "https://github.com/nuxeo/nuxeo/commit/5ac1789d53a29c41a51f4c5d3c4b68f8680cfb5e", "committedDate": "2020-06-26T06:06:07Z", "message": "NXP-29297: serialize string and date values from map in audit extended info"}, "afterCommit": {"oid": "550ec5bd23f2ae852a6fbb7107851818f190d256", "author": {"user": {"login": "michaelva", "name": "Micha\u00ebl Vachette"}}, "url": "https://github.com/nuxeo/nuxeo/commit/550ec5bd23f2ae852a6fbb7107851818f190d256", "committedDate": "2020-06-26T06:08:53Z", "message": "NXP-29297: serialize string and date values from map in audit extended info"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "550ec5bd23f2ae852a6fbb7107851818f190d256", "author": {"user": {"login": "michaelva", "name": "Micha\u00ebl Vachette"}}, "url": "https://github.com/nuxeo/nuxeo/commit/550ec5bd23f2ae852a6fbb7107851818f190d256", "committedDate": "2020-06-26T06:08:53Z", "message": "NXP-29297: serialize string and date values from map in audit extended info"}, "afterCommit": {"oid": "33e4569493ad3fe82814c09bce66d9a98689d01b", "author": {"user": {"login": "michaelva", "name": "Micha\u00ebl Vachette"}}, "url": "https://github.com/nuxeo/nuxeo/commit/33e4569493ad3fe82814c09bce66d9a98689d01b", "committedDate": "2020-08-28T12:20:49Z", "message": "NXP-29297: serialize string and date values from map in audit extended info"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc3OTQxNDEy", "url": "https://github.com/nuxeo/nuxeo/pull/4185#pullrequestreview-477941412", "createdAt": "2020-08-28T18:27:10Z", "commit": {"oid": "33e4569493ad3fe82814c09bce66d9a98689d01b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxODoyNzoxMFrOHJQc4g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxODoyNzoxMFrOHJQc4g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQ2ODc3MA==", "bodyText": "I wonder if we want to check these properties in this specific test?\nThey're already tested in other tests.", "url": "https://github.com/nuxeo/nuxeo/pull/4185#discussion_r479468770", "createdAt": "2020-08-28T18:27:10Z", "author": {"login": "ataillefer"}, "path": "modules/platform/nuxeo-platform-audit/nuxeo-platform-audit-core/src/test/java/org/nuxeo/ecm/platform/audit/io/LogEntryJsonWriterTest.java", "diffHunk": "@@ -114,4 +118,44 @@ public void testArrayInExtendedInfo() throws Exception {\n         json.has(\"extended\").properties(1).has(\"params\").isArray().contains(\"a simple string\");\n     }\n \n+    @Test\n+    public void testMapInExtendedInfo() throws Exception {\n+        Map<String, ExtendedInfo> infos = new HashMap<>();\n+\n+        HashMap<String, Serializable> infoMap = new HashMap<>();\n+        infoMap.put(\"String\", \"abcde\");\n+        Date now = new Date();\n+        infoMap.put(\"Date\", now);\n+        infoMap.put(\"Boolean\", false);\n+        infoMap.put(\"Integer\", 1);\n+        infoMap.put(\"Double\", 2.0);\n+        infos.put(\"params\", ExtendedInfoImpl.createExtendedInfo(infoMap));\n+\n+        LogEntry logEntry = new LogEntryImpl();\n+        logEntry.setExtendedInfos(infos);\n+\n+        JsonAssert json = jsonAssert(logEntry);\n+        json.properties(14);\n+        json.has(\"entity-type\").isEquals(\"logEntry\");\n+        json.has(\"id\").isEquals(0);\n+        json.has(\"category\").isNull();\n+        json.has(\"principalName\").isNull();\n+        json.has(\"docPath\").isNull();\n+        json.has(\"docType\").isNull();\n+        json.has(\"docUUID\").isNull();\n+        json.has(\"eventId\").isNull();\n+        json.has(\"repositoryId\").isNull();\n+        json.has(\"eventDate\").isText();\n+        json.has(\"logDate\").isText();\n+        json.has(\"comment\").isNull();\n+        json.has(\"docLifeCycle\").isNull();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "33e4569493ad3fe82814c09bce66d9a98689d01b"}, "originalPosition": 66}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "37f6cff6a1c699109e61f919ee78e8c069d7f4cb", "author": {"user": {"login": "michaelva", "name": "Micha\u00ebl Vachette"}}, "url": "https://github.com/nuxeo/nuxeo/commit/37f6cff6a1c699109e61f919ee78e8c069d7f4cb", "committedDate": "2020-08-31T08:00:54Z", "message": "NXP-29297: serialize string and date values from map in audit extended info"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "33e4569493ad3fe82814c09bce66d9a98689d01b", "author": {"user": {"login": "michaelva", "name": "Micha\u00ebl Vachette"}}, "url": "https://github.com/nuxeo/nuxeo/commit/33e4569493ad3fe82814c09bce66d9a98689d01b", "committedDate": "2020-08-28T12:20:49Z", "message": "NXP-29297: serialize string and date values from map in audit extended info"}, "afterCommit": {"oid": "37f6cff6a1c699109e61f919ee78e8c069d7f4cb", "author": {"user": {"login": "michaelva", "name": "Micha\u00ebl Vachette"}}, "url": "https://github.com/nuxeo/nuxeo/commit/37f6cff6a1c699109e61f919ee78e8c069d7f4cb", "committedDate": "2020-08-31T08:00:54Z", "message": "NXP-29297: serialize string and date values from map in audit extended info"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc4NDI4MzEx", "url": "https://github.com/nuxeo/nuxeo/pull/4185#pullrequestreview-478428311", "createdAt": "2020-08-31T08:44:24Z", "commit": {"oid": "37f6cff6a1c699109e61f919ee78e8c069d7f4cb"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc4NDY5MTU0", "url": "https://github.com/nuxeo/nuxeo/pull/4185#pullrequestreview-478469154", "createdAt": "2020-08-31T09:48:30Z", "commit": {"oid": "37f6cff6a1c699109e61f919ee78e8c069d7f4cb"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc4NjEwNTMx", "url": "https://github.com/nuxeo/nuxeo/pull/4185#pullrequestreview-478610531", "createdAt": "2020-08-31T13:21:46Z", "commit": {"oid": "37f6cff6a1c699109e61f919ee78e8c069d7f4cb"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4720, "cost": 1, "resetAt": "2021-11-03T18:41:40Z"}}}