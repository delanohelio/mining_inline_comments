{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMxNDg1NTkx", "number": 4127, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQwODoxMTo0M1rOEDwkcg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QwOTowNTowNVrOEL_RjA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyMzc2OTQ2OnYy", "diffSide": "RIGHT", "path": "modules/runtime/nuxeo-stream/src/main/java/org/nuxeo/lib/stream/log/Name.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQwODoxMTo0M1rOGg9q8Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxNjoyMjowM1rOGteWKw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzIxODAzMw==", "bodyText": "Any reason it's not written this way?\nreturn \"Name{id='\" + id + \"', urn='\" + urn + \"'}\";", "url": "https://github.com/nuxeo/nuxeo/pull/4127#discussion_r437218033", "createdAt": "2020-06-09T08:11:43Z", "author": {"login": "ataillefer"}, "path": "modules/runtime/nuxeo-stream/src/main/java/org/nuxeo/lib/stream/log/Name.java", "diffHunk": "@@ -115,8 +115,7 @@ public String getUrn() {\n \n     @Override\n     public String toString() {\n-        return \"Name{\" + \"namespace='\" + namespace + '\\'' + \", name='\" + name + '\\'' + \", id='\" + id + '\\'' + \", urn='\"\n-                + urn + '\\'' + '}';\n+        return \"Name{\" + \"id='\" + id + '\\'' + \", urn='\" + urn + '\\'' + '}';", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8617068112d9afc7c5612ad939463eabc79aa9a6"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDMzNjI5OQ==", "bodyText": "generated code", "url": "https://github.com/nuxeo/nuxeo/pull/4127#discussion_r450336299", "createdAt": "2020-07-06T16:22:03Z", "author": {"login": "bdelbosc"}, "path": "modules/runtime/nuxeo-stream/src/main/java/org/nuxeo/lib/stream/log/Name.java", "diffHunk": "@@ -115,8 +115,7 @@ public String getUrn() {\n \n     @Override\n     public String toString() {\n-        return \"Name{\" + \"namespace='\" + namespace + '\\'' + \", name='\" + name + '\\'' + \", id='\" + id + '\\'' + \", urn='\"\n-                + urn + '\\'' + '}';\n+        return \"Name{\" + \"id='\" + id + '\\'' + \", urn='\" + urn + '\\'' + '}';", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzIxODAzMw=="}, "originalCommit": {"oid": "8617068112d9afc7c5612ad939463eabc79aa9a6"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyMzc3ODE5OnYy", "diffSide": "RIGHT", "path": "modules/runtime/nuxeo-stream/src/main/java/org/nuxeo/lib/stream/tools/command/PositionCommand.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQwODoxNDowN1rOGg9wbA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQwODoxNDowN1rOGg9wbA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzIxOTQzNg==", "bodyText": "It's a single position right? In which case position.", "url": "https://github.com/nuxeo/nuxeo/pull/4127#discussion_r437219436", "createdAt": "2020-06-09T08:14:07Z", "author": {"login": "ataillefer"}, "path": "modules/runtime/nuxeo-stream/src/main/java/org/nuxeo/lib/stream/tools/command/PositionCommand.java", "diffHunk": "@@ -124,6 +126,13 @@ public void updateOptions(Options options) {\n                       .hasArg()\n                       .argName(\"DATE\")\n                       .build());\n+        options.addOption(Option.builder()\n+                                .longOpt(TO_OFFSET_OPT)\n+                                .desc(\"Sets the committed positions to a specific offset.\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e029664a0dec10d75673df5c8bd083068acb03d4"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyMzc4MzM4OnYy", "diffSide": "RIGHT", "path": "modules/runtime/nuxeo-stream/src/main/java/org/nuxeo/lib/stream/tools/command/PositionCommand.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQwODoxNTozMlrOGg9zow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxMDoxNzowMlrOGt4KdA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzIyMDI1OQ==", "bodyText": "Why? Is it an abnormal behavior?", "url": "https://github.com/nuxeo/nuxeo/pull/4127#discussion_r437220259", "createdAt": "2020-06-09T08:15:32Z", "author": {"login": "ataillefer"}, "path": "modules/runtime/nuxeo-stream/src/main/java/org/nuxeo/lib/stream/tools/command/PositionCommand.java", "diffHunk": "@@ -212,7 +224,7 @@ protected boolean positionAfterDate(LogManager manager, Name group, Name name, i\n                 }\n                 tailer.seek(logOffset);\n                 movedOffset = true;\n-                log.info(String.format(\"# Set log %s, group: %s, to offset %s\", labelFor(name, part), group,\n+                log.warn(String.format(\"# Set log %s, group: %s, to offset %s\", labelFor(name, part), group,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e029664a0dec10d75673df5c8bd083068acb03d4"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDc1OTI4NA==", "bodyText": "it is not abnormal, but moving consumer offset is an important administrative operation so it is important to warn", "url": "https://github.com/nuxeo/nuxeo/pull/4127#discussion_r450759284", "createdAt": "2020-07-07T10:17:02Z", "author": {"login": "bdelbosc"}, "path": "modules/runtime/nuxeo-stream/src/main/java/org/nuxeo/lib/stream/tools/command/PositionCommand.java", "diffHunk": "@@ -212,7 +224,7 @@ protected boolean positionAfterDate(LogManager manager, Name group, Name name, i\n                 }\n                 tailer.seek(logOffset);\n                 movedOffset = true;\n-                log.info(String.format(\"# Set log %s, group: %s, to offset %s\", labelFor(name, part), group,\n+                log.warn(String.format(\"# Set log %s, group: %s, to offset %s\", labelFor(name, part), group,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzIyMDI1OQ=="}, "originalCommit": {"oid": "e029664a0dec10d75673df5c8bd083068acb03d4"}, "originalPosition": 47}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyMzc5ODg0OnYy", "diffSide": "RIGHT", "path": "modules/runtime/nuxeo-stream/src/main/java/org/nuxeo/lib/stream/tools/command/PositionCommand.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQwODoxOTo0NlrOGg99gw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxNjozMToxM1rOGtesqA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzIyMjc4Nw==", "bodyText": "Do we want:\nlog.error(\"Interrupted\", e);\n\n?", "url": "https://github.com/nuxeo/nuxeo/pull/4127#discussion_r437222787", "createdAt": "2020-06-09T08:19:46Z", "author": {"login": "ataillefer"}, "path": "modules/runtime/nuxeo-stream/src/main/java/org/nuxeo/lib/stream/tools/command/PositionCommand.java", "diffHunk": "@@ -280,4 +292,38 @@ protected LogOffset searchWatermarkOffset(LogTailer<Record> tailer, long timesta\n         return lastOffset;\n     }\n \n+    protected boolean positionToOffset(LogManager manager, Name group, Name name, int partition, long offset) {\n+        LogLag lag = getLag(manager, group, name, partition);\n+        long pos = lag.lower();\n+        boolean goToStart = false;\n+        if (offset < pos) {\n+            goToStart = true;\n+        } else if (offset == pos) {\n+            log.error(String.format(\"Current offset for group %s on %s is already %d\", group, labelFor(name, partition),\n+                    pos));\n+            return false;\n+        }\n+        try (LogTailer<Externalizable> tailer = manager.createTailer(group, LogPartition.of(name, partition))) {\n+            if (goToStart) {\n+                tailer.toStart();\n+            }\n+            for (;;) {\n+                LogRecord<Externalizable> record = tailer.read(Duration.ofSeconds(1));\n+                if (record == null || record.offset().offset() > offset) {\n+                    log.error(\"No offset found for the specified partition\");\n+                    return false;\n+                }\n+                if (record.offset().offset() == offset) {\n+                    tailer.commit();\n+                    log.warn(String.format(\"# Move group %s on %s from %d to %d\", group, labelFor(name, partition), pos,\n+                            offset));\n+                    return true;\n+                }\n+            }\n+        } catch (InterruptedException e) {\n+            Thread.currentThread().interrupt();\n+            log.error(\"Interrupted\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e029664a0dec10d75673df5c8bd083068acb03d4"}, "originalPosition": 85}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzMzNTUyMw==", "bodyText": "No I don't think so, interrupts aren't error so the location that caught the exception doesn't matter. I'm not sure why we would log at all to be honest.", "url": "https://github.com/nuxeo/nuxeo/pull/4127#discussion_r437335523", "createdAt": "2020-06-09T11:26:12Z", "author": {"login": "efge"}, "path": "modules/runtime/nuxeo-stream/src/main/java/org/nuxeo/lib/stream/tools/command/PositionCommand.java", "diffHunk": "@@ -280,4 +292,38 @@ protected LogOffset searchWatermarkOffset(LogTailer<Record> tailer, long timesta\n         return lastOffset;\n     }\n \n+    protected boolean positionToOffset(LogManager manager, Name group, Name name, int partition, long offset) {\n+        LogLag lag = getLag(manager, group, name, partition);\n+        long pos = lag.lower();\n+        boolean goToStart = false;\n+        if (offset < pos) {\n+            goToStart = true;\n+        } else if (offset == pos) {\n+            log.error(String.format(\"Current offset for group %s on %s is already %d\", group, labelFor(name, partition),\n+                    pos));\n+            return false;\n+        }\n+        try (LogTailer<Externalizable> tailer = manager.createTailer(group, LogPartition.of(name, partition))) {\n+            if (goToStart) {\n+                tailer.toStart();\n+            }\n+            for (;;) {\n+                LogRecord<Externalizable> record = tailer.read(Duration.ofSeconds(1));\n+                if (record == null || record.offset().offset() > offset) {\n+                    log.error(\"No offset found for the specified partition\");\n+                    return false;\n+                }\n+                if (record.offset().offset() == offset) {\n+                    tailer.commit();\n+                    log.warn(String.format(\"# Move group %s on %s from %d to %d\", group, labelFor(name, partition), pos,\n+                            offset));\n+                    return true;\n+                }\n+            }\n+        } catch (InterruptedException e) {\n+            Thread.currentThread().interrupt();\n+            log.error(\"Interrupted\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzIyMjc4Nw=="}, "originalCommit": {"oid": "e029664a0dec10d75673df5c8bd083068acb03d4"}, "originalPosition": 85}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDM0MjA1Ng==", "bodyText": "This is the output of a command-line tool, not trace of a Nuxeo Service, the output can be copy/pasted for support purpose and if someone hit Ctrl-C It is important to know that the command was interrupted, the stack trace is useless.", "url": "https://github.com/nuxeo/nuxeo/pull/4127#discussion_r450342056", "createdAt": "2020-07-06T16:31:13Z", "author": {"login": "bdelbosc"}, "path": "modules/runtime/nuxeo-stream/src/main/java/org/nuxeo/lib/stream/tools/command/PositionCommand.java", "diffHunk": "@@ -280,4 +292,38 @@ protected LogOffset searchWatermarkOffset(LogTailer<Record> tailer, long timesta\n         return lastOffset;\n     }\n \n+    protected boolean positionToOffset(LogManager manager, Name group, Name name, int partition, long offset) {\n+        LogLag lag = getLag(manager, group, name, partition);\n+        long pos = lag.lower();\n+        boolean goToStart = false;\n+        if (offset < pos) {\n+            goToStart = true;\n+        } else if (offset == pos) {\n+            log.error(String.format(\"Current offset for group %s on %s is already %d\", group, labelFor(name, partition),\n+                    pos));\n+            return false;\n+        }\n+        try (LogTailer<Externalizable> tailer = manager.createTailer(group, LogPartition.of(name, partition))) {\n+            if (goToStart) {\n+                tailer.toStart();\n+            }\n+            for (;;) {\n+                LogRecord<Externalizable> record = tailer.read(Duration.ofSeconds(1));\n+                if (record == null || record.offset().offset() > offset) {\n+                    log.error(\"No offset found for the specified partition\");\n+                    return false;\n+                }\n+                if (record.offset().offset() == offset) {\n+                    tailer.commit();\n+                    log.warn(String.format(\"# Move group %s on %s from %d to %d\", group, labelFor(name, partition), pos,\n+                            offset));\n+                    return true;\n+                }\n+            }\n+        } catch (InterruptedException e) {\n+            Thread.currentThread().interrupt();\n+            log.error(\"Interrupted\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzIyMjc4Nw=="}, "originalCommit": {"oid": "e029664a0dec10d75673df5c8bd083068acb03d4"}, "originalPosition": 85}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxMDA0NDc5OnYy", "diffSide": "RIGHT", "path": "modules/core/nuxeo-core-bulk/src/main/java/org/nuxeo/ecm/core/bulk/BulkAdminServiceImpl.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QwODo1OTo0MlrOGt1bOA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QwODo1OTo0MlrOGt1bOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDcxNDQyNA==", "bodyText": "since and final?", "url": "https://github.com/nuxeo/nuxeo/pull/4127#discussion_r450714424", "createdAt": "2020-07-07T08:59:42Z", "author": {"login": "troger"}, "path": "modules/core/nuxeo-core-bulk/src/main/java/org/nuxeo/ecm/core/bulk/BulkAdminServiceImpl.java", "diffHunk": "@@ -47,11 +47,15 @@\n \n     public static final String BULK_SCROLL_PRODUCE_IMMEDIATE_PROPERTY = \"nuxeo.core.bulk.scroller.produceImmediate\";\n \n-\n     public static final int DEFAULT_SCROLL_SIZE = 100;\n \n     public static final int DEFAULT_SCROLL_KEEP_ALIVE = 60;\n \n+    // @since 11.2\n+    public static final String BULK_SCROLL_TRANSACTION_TIMEOUT_PROPERTY = \"nuxeo.core.bulk.scroller.transactionTimeout\";\n+\n+    public static Duration DEFAULT_SCROLL_TRANSACTION_TIMEOUT = Duration.ofDays(2);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "355ba62dad1d0d6732ba9878f0cd16999f55d16a"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxMDA2NDc2OnYy", "diffSide": "RIGHT", "path": "modules/runtime/nuxeo-stream/src/main/java/org/nuxeo/lib/stream/tools/command/PositionCommand.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QwOTowNTowNVrOGt1ncA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QwOTowNTowNVrOGt1ncA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDcxNzU1Mg==", "bodyText": "since", "url": "https://github.com/nuxeo/nuxeo/pull/4127#discussion_r450717552", "createdAt": "2020-07-07T09:05:05Z", "author": {"login": "troger"}, "path": "modules/runtime/nuxeo-stream/src/main/java/org/nuxeo/lib/stream/tools/command/PositionCommand.java", "diffHunk": "@@ -59,6 +59,8 @@\n \n     public static final String TO_WATERMARK_OPT = \"to-watermark\";\n \n+    public static final String TO_OFFSET_OPT = \"to-offset\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "355ba62dad1d0d6732ba9878f0cd16999f55d16a"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4103, "cost": 1, "resetAt": "2021-11-03T18:41:40Z"}}}