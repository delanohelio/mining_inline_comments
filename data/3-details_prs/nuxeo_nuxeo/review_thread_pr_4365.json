{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAwMzI0NTU2", "number": 4365, "reviewThreads": {"totalCount": 19, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMVQxODoyNDoxNVrOEsaJ0Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxMzo0NjozNVrOEvyVdg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1MDAxMjk3OnYy", "diffSide": "RIGHT", "path": "modules/platform/nuxeo-platform-document-routing/nuxeo-routing-api/src/main/java/org/nuxeo/ecm/platform/routing/api/DocumentRoutingService.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMVQxODoyNDoxNVrOHfpk5Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQwODowMToyN1rOHfzSkw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjk0OTA5Mw==", "bodyText": "This will need to be updated to @since 11.4 now everywhere.", "url": "https://github.com/nuxeo/nuxeo/pull/4365#discussion_r502949093", "createdAt": "2020-10-11T18:24:15Z", "author": {"login": "efge"}, "path": "modules/platform/nuxeo-platform-document-routing/nuxeo-routing-api/src/main/java/org/nuxeo/ecm/platform/routing/api/DocumentRoutingService.java", "diffHunk": "@@ -622,4 +622,19 @@ void grantPermissionToTaskDelegatedActors(CoreSession session, String permission\n      */\n     boolean isWorkflowModel(final DocumentRoute documentRoute);\n \n+    /**\n+     * Returns true if the workflowModel can be started on the document list\n+     * @param documentIds\n+     * @param worflowModelName\n+     * @since 11.3", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "14af41b34ae85e9b8e171aa2bebfaa1031e63371"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzEwODI0Mw==", "bodyText": "done", "url": "https://github.com/nuxeo/nuxeo/pull/4365#discussion_r503108243", "createdAt": "2020-10-12T08:01:27Z", "author": {"login": "michaelva"}, "path": "modules/platform/nuxeo-platform-document-routing/nuxeo-routing-api/src/main/java/org/nuxeo/ecm/platform/routing/api/DocumentRoutingService.java", "diffHunk": "@@ -622,4 +622,19 @@ void grantPermissionToTaskDelegatedActors(CoreSession session, String permission\n      */\n     boolean isWorkflowModel(final DocumentRoute documentRoute);\n \n+    /**\n+     * Returns true if the workflowModel can be started on the document list\n+     * @param documentIds\n+     * @param worflowModelName\n+     * @since 11.3", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjk0OTA5Mw=="}, "originalCommit": {"oid": "14af41b34ae85e9b8e171aa2bebfaa1031e63371"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1MDAxMzg3OnYy", "diffSide": "RIGHT", "path": "modules/platform/nuxeo-platform-document-routing/nuxeo-routing-api/src/main/java/org/nuxeo/ecm/platform/routing/api/DocumentRoutingService.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMVQxODoyNToxMVrOHfplUw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQxMDo0NToyNlrOHf5U0Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjk0OTIwMw==", "bodyText": "Returns {@code true} if the workflow model can be started on the document list.", "url": "https://github.com/nuxeo/nuxeo/pull/4365#discussion_r502949203", "createdAt": "2020-10-11T18:25:11Z", "author": {"login": "efge"}, "path": "modules/platform/nuxeo-platform-document-routing/nuxeo-routing-api/src/main/java/org/nuxeo/ecm/platform/routing/api/DocumentRoutingService.java", "diffHunk": "@@ -622,4 +622,19 @@ void grantPermissionToTaskDelegatedActors(CoreSession session, String permission\n      */\n     boolean isWorkflowModel(final DocumentRoute documentRoute);\n \n+    /**\n+     * Returns true if the workflowModel can be started on the document list", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "14af41b34ae85e9b8e171aa2bebfaa1031e63371"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzEwODMwMw==", "bodyText": "done", "url": "https://github.com/nuxeo/nuxeo/pull/4365#discussion_r503108303", "createdAt": "2020-10-12T08:01:33Z", "author": {"login": "michaelva"}, "path": "modules/platform/nuxeo-platform-document-routing/nuxeo-routing-api/src/main/java/org/nuxeo/ecm/platform/routing/api/DocumentRoutingService.java", "diffHunk": "@@ -622,4 +622,19 @@ void grantPermissionToTaskDelegatedActors(CoreSession session, String permission\n      */\n     boolean isWorkflowModel(final DocumentRoute documentRoute);\n \n+    /**\n+     * Returns true if the workflowModel can be started on the document list", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjk0OTIwMw=="}, "originalCommit": {"oid": "14af41b34ae85e9b8e171aa2bebfaa1031e63371"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzIwNzEyMQ==", "bodyText": "Thanks. Just a \ud83d\udc4d on my comment and resolving the conversation is enough notification for me \ud83d\ude00", "url": "https://github.com/nuxeo/nuxeo/pull/4365#discussion_r503207121", "createdAt": "2020-10-12T10:45:26Z", "author": {"login": "efge"}, "path": "modules/platform/nuxeo-platform-document-routing/nuxeo-routing-api/src/main/java/org/nuxeo/ecm/platform/routing/api/DocumentRoutingService.java", "diffHunk": "@@ -622,4 +622,19 @@ void grantPermissionToTaskDelegatedActors(CoreSession session, String permission\n      */\n     boolean isWorkflowModel(final DocumentRoute documentRoute);\n \n+    /**\n+     * Returns true if the workflowModel can be started on the document list", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjk0OTIwMw=="}, "originalCommit": {"oid": "14af41b34ae85e9b8e171aa2bebfaa1031e63371"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1MDAxNDMxOnYy", "diffSide": "RIGHT", "path": "modules/platform/nuxeo-platform-document-routing/nuxeo-routing-api/src/main/java/org/nuxeo/ecm/platform/routing/api/DocumentRoutingService.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMVQxODoyNTo0MlrOHfpljA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQwODowMTo1M1rOHfzTgQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjk0OTI2MA==", "bodyText": "Returns a list of runnable document routes for the input document IDs.", "url": "https://github.com/nuxeo/nuxeo/pull/4365#discussion_r502949260", "createdAt": "2020-10-11T18:25:42Z", "author": {"login": "efge"}, "path": "modules/platform/nuxeo-platform-document-routing/nuxeo-routing-api/src/main/java/org/nuxeo/ecm/platform/routing/api/DocumentRoutingService.java", "diffHunk": "@@ -622,4 +622,19 @@ void grantPermissionToTaskDelegatedActors(CoreSession session, String permission\n      */\n     boolean isWorkflowModel(final DocumentRoute documentRoute);\n \n+    /**\n+     * Returns true if the workflowModel can be started on the document list\n+     * @param documentIds\n+     * @param worflowModelName\n+     * @since 11.3\n+     */\n+    boolean canCreateInstance(CoreSession session, List<String> documentIds, String worflowModelName);\n+\n+    /**\n+     * Returns a list of runnable DocumentRoute for the input document IDs", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "14af41b34ae85e9b8e171aa2bebfaa1031e63371"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzEwODQ4MQ==", "bodyText": "done", "url": "https://github.com/nuxeo/nuxeo/pull/4365#discussion_r503108481", "createdAt": "2020-10-12T08:01:53Z", "author": {"login": "michaelva"}, "path": "modules/platform/nuxeo-platform-document-routing/nuxeo-routing-api/src/main/java/org/nuxeo/ecm/platform/routing/api/DocumentRoutingService.java", "diffHunk": "@@ -622,4 +622,19 @@ void grantPermissionToTaskDelegatedActors(CoreSession session, String permission\n      */\n     boolean isWorkflowModel(final DocumentRoute documentRoute);\n \n+    /**\n+     * Returns true if the workflowModel can be started on the document list\n+     * @param documentIds\n+     * @param worflowModelName\n+     * @since 11.3\n+     */\n+    boolean canCreateInstance(CoreSession session, List<String> documentIds, String worflowModelName);\n+\n+    /**\n+     * Returns a list of runnable DocumentRoute for the input document IDs", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjk0OTI2MA=="}, "originalCommit": {"oid": "14af41b34ae85e9b8e171aa2bebfaa1031e63371"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1MDAxNTA4OnYy", "diffSide": "RIGHT", "path": "modules/platform/nuxeo-platform-document-routing/nuxeo-routing-core/src/main/java/org/nuxeo/ecm/platform/routing/core/api/operation/StartWorkflowOperation.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMVQxODoyNjo0NFrOHfpl6w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQwODowMjowMlrOHfzT6w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjk0OTM1NQ==", "bodyText": "the the ->the\nMaybe log the ids too in the exception?", "url": "https://github.com/nuxeo/nuxeo/pull/4365#discussion_r502949355", "createdAt": "2020-10-11T18:26:44Z", "author": {"login": "efge"}, "path": "modules/platform/nuxeo-platform-document-routing/nuxeo-routing-core/src/main/java/org/nuxeo/ecm/platform/routing/core/api/operation/StartWorkflowOperation.java", "diffHunk": "@@ -97,6 +98,10 @@ public DocumentModel run(DocumentModel doc) {\n     }\n \n     protected void startNewInstance(List<String> ids) {\n+        if (!documentRoutingService.canCreateInstance(session, ids, id)) {\n+            throw new NuxeoException(\n+                    String.format(\"Cannot start the the worflow model %s for the input documents\", id));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "14af41b34ae85e9b8e171aa2bebfaa1031e63371"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzEwODU4Nw==", "bodyText": "done", "url": "https://github.com/nuxeo/nuxeo/pull/4365#discussion_r503108587", "createdAt": "2020-10-12T08:02:02Z", "author": {"login": "michaelva"}, "path": "modules/platform/nuxeo-platform-document-routing/nuxeo-routing-core/src/main/java/org/nuxeo/ecm/platform/routing/core/api/operation/StartWorkflowOperation.java", "diffHunk": "@@ -97,6 +98,10 @@ public DocumentModel run(DocumentModel doc) {\n     }\n \n     protected void startNewInstance(List<String> ids) {\n+        if (!documentRoutingService.canCreateInstance(session, ids, id)) {\n+            throw new NuxeoException(\n+                    String.format(\"Cannot start the the worflow model %s for the input documents\", id));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjk0OTM1NQ=="}, "originalCommit": {"oid": "14af41b34ae85e9b8e171aa2bebfaa1031e63371"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1MDAxNTkxOnYy", "diffSide": "RIGHT", "path": "modules/platform/nuxeo-platform-document-routing/nuxeo-routing-core/src/main/java/org/nuxeo/ecm/platform/routing/core/impl/DocumentRoutingServiceImpl.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMVQxODoyODowMlrOHfpmXQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQwODowMjoxMFrOHfzUJA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjk0OTQ2OQ==", "bodyText": "No need for Javadoc on the implementation, it's already on the interface.", "url": "https://github.com/nuxeo/nuxeo/pull/4365#discussion_r502949469", "createdAt": "2020-10-11T18:28:02Z", "author": {"login": "efge"}, "path": "modules/platform/nuxeo-platform-document-routing/nuxeo-routing-core/src/main/java/org/nuxeo/ecm/platform/routing/core/impl/DocumentRoutingServiceImpl.java", "diffHunk": "@@ -1388,4 +1392,52 @@ public void invalidateRouteModelsCache() {\n     public boolean isWorkflowModel(final DocumentRoute documentRoute) {\n         return documentRoute.isValidated();\n     }\n+\n+    /**\n+     * @since 11.3\n+     */\n+    @Override", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "14af41b34ae85e9b8e171aa2bebfaa1031e63371"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzEwODY0NA==", "bodyText": "done", "url": "https://github.com/nuxeo/nuxeo/pull/4365#discussion_r503108644", "createdAt": "2020-10-12T08:02:10Z", "author": {"login": "michaelva"}, "path": "modules/platform/nuxeo-platform-document-routing/nuxeo-routing-core/src/main/java/org/nuxeo/ecm/platform/routing/core/impl/DocumentRoutingServiceImpl.java", "diffHunk": "@@ -1388,4 +1392,52 @@ public void invalidateRouteModelsCache() {\n     public boolean isWorkflowModel(final DocumentRoute documentRoute) {\n         return documentRoute.isValidated();\n     }\n+\n+    /**\n+     * @since 11.3\n+     */\n+    @Override", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjk0OTQ2OQ=="}, "originalCommit": {"oid": "14af41b34ae85e9b8e171aa2bebfaa1031e63371"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1MDAxNzQ4OnYy", "diffSide": "RIGHT", "path": "modules/platform/nuxeo-platform-document-routing/nuxeo-routing-core/src/main/java/org/nuxeo/ecm/platform/routing/core/impl/DocumentRoutingServiceImpl.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMVQxODoyOToxOFrOHfpnEg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQwODowMjoyMVrOHfzUiA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjk0OTY1MA==", "bodyText": "Move the definition of docs further down, just before its use.", "url": "https://github.com/nuxeo/nuxeo/pull/4365#discussion_r502949650", "createdAt": "2020-10-11T18:29:18Z", "author": {"login": "efge"}, "path": "modules/platform/nuxeo-platform-document-routing/nuxeo-routing-core/src/main/java/org/nuxeo/ecm/platform/routing/core/impl/DocumentRoutingServiceImpl.java", "diffHunk": "@@ -1388,4 +1392,52 @@ public void invalidateRouteModelsCache() {\n     public boolean isWorkflowModel(final DocumentRoute documentRoute) {\n         return documentRoute.isValidated();\n     }\n+\n+    /**\n+     * @since 11.3\n+     */\n+    @Override\n+    public boolean canCreateInstance(CoreSession session, List<String> documentIds, String workflowModelName) {\n+\n+        DocumentModelList docs = session.getDocuments(documentIds.stream().map(IdRef::new).toArray(DocumentRef[]::new));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "14af41b34ae85e9b8e171aa2bebfaa1031e63371"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzEwODc0NA==", "bodyText": "done", "url": "https://github.com/nuxeo/nuxeo/pull/4365#discussion_r503108744", "createdAt": "2020-10-12T08:02:21Z", "author": {"login": "michaelva"}, "path": "modules/platform/nuxeo-platform-document-routing/nuxeo-routing-core/src/main/java/org/nuxeo/ecm/platform/routing/core/impl/DocumentRoutingServiceImpl.java", "diffHunk": "@@ -1388,4 +1392,52 @@ public void invalidateRouteModelsCache() {\n     public boolean isWorkflowModel(final DocumentRoute documentRoute) {\n         return documentRoute.isValidated();\n     }\n+\n+    /**\n+     * @since 11.3\n+     */\n+    @Override\n+    public boolean canCreateInstance(CoreSession session, List<String> documentIds, String workflowModelName) {\n+\n+        DocumentModelList docs = session.getDocuments(documentIds.stream().map(IdRef::new).toArray(DocumentRef[]::new));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjk0OTY1MA=="}, "originalCommit": {"oid": "14af41b34ae85e9b8e171aa2bebfaa1031e63371"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1MDAyMzc3OnYy", "diffSide": "RIGHT", "path": "modules/platform/nuxeo-platform-document-routing/nuxeo-routing-core/src/test/java/org/nuxeo/ecm/platform/routing/test/WorkflowActivationFilter.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMVQxODozNTozOFrOHfpp-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQwODowMjoyOFrOHfzUtg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjk1MDM5NA==", "bodyText": "Please rename to WorkflowActivationFilterTest.", "url": "https://github.com/nuxeo/nuxeo/pull/4365#discussion_r502950394", "createdAt": "2020-10-11T18:35:38Z", "author": {"login": "efge"}, "path": "modules/platform/nuxeo-platform-document-routing/nuxeo-routing-core/src/test/java/org/nuxeo/ecm/platform/routing/test/WorkflowActivationFilter.java", "diffHunk": "@@ -0,0 +1,111 @@\n+/*\n+ * (C) Copyright 2020 Nuxeo (http://nuxeo.com/) and others.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ * Contributors:\n+ *     Guillaume Renard\n+ *     Michael Vachette\n+ */\n+package org.nuxeo.ecm.platform.routing.test;\n+\n+import java.util.List;\n+\n+import javax.inject.Inject;\n+\n+import org.junit.Assert;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.nuxeo.ecm.core.api.CoreSession;\n+import org.nuxeo.ecm.core.api.DocumentModel;\n+import org.nuxeo.ecm.platform.routing.api.DocumentRoute;\n+import org.nuxeo.ecm.platform.routing.api.DocumentRoutingService;\n+import org.nuxeo.ecm.platform.routing.core.impl.GraphNode;\n+import org.nuxeo.ecm.platform.routing.core.impl.GraphRoute;\n+import org.nuxeo.ecm.webengine.test.WebEngineFeatureCore;\n+import org.nuxeo.runtime.test.runner.Deploy;\n+import org.nuxeo.runtime.test.runner.Features;\n+import org.nuxeo.runtime.test.runner.FeaturesRunner;\n+\n+/**\n+ * @since 11.3\n+ */\n+@RunWith(FeaturesRunner.class)\n+@Features({ WorkflowFeature.class, WebEngineFeatureCore.class })\n+@Deploy(\"org.nuxeo.ecm.platform.routing.core:OSGI-INF/test-document-routing-activation-filters.xml\")\n+public class WorkflowActivationFilter extends AbstractGraphRouteTest {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "14af41b34ae85e9b8e171aa2bebfaa1031e63371"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzEwODc5MA==", "bodyText": "done", "url": "https://github.com/nuxeo/nuxeo/pull/4365#discussion_r503108790", "createdAt": "2020-10-12T08:02:28Z", "author": {"login": "michaelva"}, "path": "modules/platform/nuxeo-platform-document-routing/nuxeo-routing-core/src/test/java/org/nuxeo/ecm/platform/routing/test/WorkflowActivationFilter.java", "diffHunk": "@@ -0,0 +1,111 @@\n+/*\n+ * (C) Copyright 2020 Nuxeo (http://nuxeo.com/) and others.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ * Contributors:\n+ *     Guillaume Renard\n+ *     Michael Vachette\n+ */\n+package org.nuxeo.ecm.platform.routing.test;\n+\n+import java.util.List;\n+\n+import javax.inject.Inject;\n+\n+import org.junit.Assert;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.nuxeo.ecm.core.api.CoreSession;\n+import org.nuxeo.ecm.core.api.DocumentModel;\n+import org.nuxeo.ecm.platform.routing.api.DocumentRoute;\n+import org.nuxeo.ecm.platform.routing.api.DocumentRoutingService;\n+import org.nuxeo.ecm.platform.routing.core.impl.GraphNode;\n+import org.nuxeo.ecm.platform.routing.core.impl.GraphRoute;\n+import org.nuxeo.ecm.webengine.test.WebEngineFeatureCore;\n+import org.nuxeo.runtime.test.runner.Deploy;\n+import org.nuxeo.runtime.test.runner.Features;\n+import org.nuxeo.runtime.test.runner.FeaturesRunner;\n+\n+/**\n+ * @since 11.3\n+ */\n+@RunWith(FeaturesRunner.class)\n+@Features({ WorkflowFeature.class, WebEngineFeatureCore.class })\n+@Deploy(\"org.nuxeo.ecm.platform.routing.core:OSGI-INF/test-document-routing-activation-filters.xml\")\n+public class WorkflowActivationFilter extends AbstractGraphRouteTest {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjk1MDM5NA=="}, "originalCommit": {"oid": "14af41b34ae85e9b8e171aa2bebfaa1031e63371"}, "originalPosition": 47}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1MDAyNDA1OnYy", "diffSide": "RIGHT", "path": "modules/platform/nuxeo-platform-document-routing/nuxeo-routing-core/src/test/java/org/nuxeo/ecm/platform/routing/test/WorkflowActivationFilter.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMVQxODozNjowMVrOHfpqHg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQwODowMjo1M1rOHfzVjw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjk1MDQzMA==", "bodyText": "protected (same below)", "url": "https://github.com/nuxeo/nuxeo/pull/4365#discussion_r502950430", "createdAt": "2020-10-11T18:36:01Z", "author": {"login": "efge"}, "path": "modules/platform/nuxeo-platform-document-routing/nuxeo-routing-core/src/test/java/org/nuxeo/ecm/platform/routing/test/WorkflowActivationFilter.java", "diffHunk": "@@ -0,0 +1,111 @@\n+/*\n+ * (C) Copyright 2020 Nuxeo (http://nuxeo.com/) and others.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ * Contributors:\n+ *     Guillaume Renard\n+ *     Michael Vachette\n+ */\n+package org.nuxeo.ecm.platform.routing.test;\n+\n+import java.util.List;\n+\n+import javax.inject.Inject;\n+\n+import org.junit.Assert;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.nuxeo.ecm.core.api.CoreSession;\n+import org.nuxeo.ecm.core.api.DocumentModel;\n+import org.nuxeo.ecm.platform.routing.api.DocumentRoute;\n+import org.nuxeo.ecm.platform.routing.api.DocumentRoutingService;\n+import org.nuxeo.ecm.platform.routing.core.impl.GraphNode;\n+import org.nuxeo.ecm.platform.routing.core.impl.GraphRoute;\n+import org.nuxeo.ecm.webengine.test.WebEngineFeatureCore;\n+import org.nuxeo.runtime.test.runner.Deploy;\n+import org.nuxeo.runtime.test.runner.Features;\n+import org.nuxeo.runtime.test.runner.FeaturesRunner;\n+\n+/**\n+ * @since 11.3\n+ */\n+@RunWith(FeaturesRunner.class)\n+@Features({ WorkflowFeature.class, WebEngineFeatureCore.class })\n+@Deploy(\"org.nuxeo.ecm.platform.routing.core:OSGI-INF/test-document-routing-activation-filters.xml\")\n+public class WorkflowActivationFilter extends AbstractGraphRouteTest {\n+\n+    @Inject\n+    CoreSession session;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "14af41b34ae85e9b8e171aa2bebfaa1031e63371"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzEwOTAwNw==", "bodyText": "done", "url": "https://github.com/nuxeo/nuxeo/pull/4365#discussion_r503109007", "createdAt": "2020-10-12T08:02:53Z", "author": {"login": "michaelva"}, "path": "modules/platform/nuxeo-platform-document-routing/nuxeo-routing-core/src/test/java/org/nuxeo/ecm/platform/routing/test/WorkflowActivationFilter.java", "diffHunk": "@@ -0,0 +1,111 @@\n+/*\n+ * (C) Copyright 2020 Nuxeo (http://nuxeo.com/) and others.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ * Contributors:\n+ *     Guillaume Renard\n+ *     Michael Vachette\n+ */\n+package org.nuxeo.ecm.platform.routing.test;\n+\n+import java.util.List;\n+\n+import javax.inject.Inject;\n+\n+import org.junit.Assert;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.nuxeo.ecm.core.api.CoreSession;\n+import org.nuxeo.ecm.core.api.DocumentModel;\n+import org.nuxeo.ecm.platform.routing.api.DocumentRoute;\n+import org.nuxeo.ecm.platform.routing.api.DocumentRoutingService;\n+import org.nuxeo.ecm.platform.routing.core.impl.GraphNode;\n+import org.nuxeo.ecm.platform.routing.core.impl.GraphRoute;\n+import org.nuxeo.ecm.webengine.test.WebEngineFeatureCore;\n+import org.nuxeo.runtime.test.runner.Deploy;\n+import org.nuxeo.runtime.test.runner.Features;\n+import org.nuxeo.runtime.test.runner.FeaturesRunner;\n+\n+/**\n+ * @since 11.3\n+ */\n+@RunWith(FeaturesRunner.class)\n+@Features({ WorkflowFeature.class, WebEngineFeatureCore.class })\n+@Deploy(\"org.nuxeo.ecm.platform.routing.core:OSGI-INF/test-document-routing-activation-filters.xml\")\n+public class WorkflowActivationFilter extends AbstractGraphRouteTest {\n+\n+    @Inject\n+    CoreSession session;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjk1MDQzMA=="}, "originalCommit": {"oid": "14af41b34ae85e9b8e171aa2bebfaa1031e63371"}, "originalPosition": 50}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1MDAyNDUzOnYy", "diffSide": "RIGHT", "path": "modules/platform/nuxeo-platform-document-routing/nuxeo-routing-core/src/test/java/org/nuxeo/ecm/platform/routing/test/WorkflowActivationFilter.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMVQxODozNjozMVrOHfpqWA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQwODowMzowN1rOHfzV9A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjk1MDQ4OA==", "bodyText": "Setting the title is probably not necessary for the test.", "url": "https://github.com/nuxeo/nuxeo/pull/4365#discussion_r502950488", "createdAt": "2020-10-11T18:36:31Z", "author": {"login": "efge"}, "path": "modules/platform/nuxeo-platform-document-routing/nuxeo-routing-core/src/test/java/org/nuxeo/ecm/platform/routing/test/WorkflowActivationFilter.java", "diffHunk": "@@ -0,0 +1,111 @@\n+/*\n+ * (C) Copyright 2020 Nuxeo (http://nuxeo.com/) and others.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ * Contributors:\n+ *     Guillaume Renard\n+ *     Michael Vachette\n+ */\n+package org.nuxeo.ecm.platform.routing.test;\n+\n+import java.util.List;\n+\n+import javax.inject.Inject;\n+\n+import org.junit.Assert;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.nuxeo.ecm.core.api.CoreSession;\n+import org.nuxeo.ecm.core.api.DocumentModel;\n+import org.nuxeo.ecm.platform.routing.api.DocumentRoute;\n+import org.nuxeo.ecm.platform.routing.api.DocumentRoutingService;\n+import org.nuxeo.ecm.platform.routing.core.impl.GraphNode;\n+import org.nuxeo.ecm.platform.routing.core.impl.GraphRoute;\n+import org.nuxeo.ecm.webengine.test.WebEngineFeatureCore;\n+import org.nuxeo.runtime.test.runner.Deploy;\n+import org.nuxeo.runtime.test.runner.Features;\n+import org.nuxeo.runtime.test.runner.FeaturesRunner;\n+\n+/**\n+ * @since 11.3\n+ */\n+@RunWith(FeaturesRunner.class)\n+@Features({ WorkflowFeature.class, WebEngineFeatureCore.class })\n+@Deploy(\"org.nuxeo.ecm.platform.routing.core:OSGI-INF/test-document-routing-activation-filters.xml\")\n+public class WorkflowActivationFilter extends AbstractGraphRouteTest {\n+\n+    @Inject\n+    CoreSession session;\n+\n+    @Inject\n+    DocumentRoutingService routing;\n+\n+    @Before\n+    public void setUp() {\n+        doc = session.createDocumentModel(\"/\", \"file\", \"File\");\n+        doc.setPropertyValue(\"dc:title\", \"file\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "14af41b34ae85e9b8e171aa2bebfaa1031e63371"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzEwOTEwOA==", "bodyText": "done", "url": "https://github.com/nuxeo/nuxeo/pull/4365#discussion_r503109108", "createdAt": "2020-10-12T08:03:07Z", "author": {"login": "michaelva"}, "path": "modules/platform/nuxeo-platform-document-routing/nuxeo-routing-core/src/test/java/org/nuxeo/ecm/platform/routing/test/WorkflowActivationFilter.java", "diffHunk": "@@ -0,0 +1,111 @@\n+/*\n+ * (C) Copyright 2020 Nuxeo (http://nuxeo.com/) and others.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ * Contributors:\n+ *     Guillaume Renard\n+ *     Michael Vachette\n+ */\n+package org.nuxeo.ecm.platform.routing.test;\n+\n+import java.util.List;\n+\n+import javax.inject.Inject;\n+\n+import org.junit.Assert;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.nuxeo.ecm.core.api.CoreSession;\n+import org.nuxeo.ecm.core.api.DocumentModel;\n+import org.nuxeo.ecm.platform.routing.api.DocumentRoute;\n+import org.nuxeo.ecm.platform.routing.api.DocumentRoutingService;\n+import org.nuxeo.ecm.platform.routing.core.impl.GraphNode;\n+import org.nuxeo.ecm.platform.routing.core.impl.GraphRoute;\n+import org.nuxeo.ecm.webengine.test.WebEngineFeatureCore;\n+import org.nuxeo.runtime.test.runner.Deploy;\n+import org.nuxeo.runtime.test.runner.Features;\n+import org.nuxeo.runtime.test.runner.FeaturesRunner;\n+\n+/**\n+ * @since 11.3\n+ */\n+@RunWith(FeaturesRunner.class)\n+@Features({ WorkflowFeature.class, WebEngineFeatureCore.class })\n+@Deploy(\"org.nuxeo.ecm.platform.routing.core:OSGI-INF/test-document-routing-activation-filters.xml\")\n+public class WorkflowActivationFilter extends AbstractGraphRouteTest {\n+\n+    @Inject\n+    CoreSession session;\n+\n+    @Inject\n+    DocumentRoutingService routing;\n+\n+    @Before\n+    public void setUp() {\n+        doc = session.createDocumentModel(\"/\", \"file\", \"File\");\n+        doc.setPropertyValue(\"dc:title\", \"file\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjk1MDQ4OA=="}, "originalCommit": {"oid": "14af41b34ae85e9b8e171aa2bebfaa1031e63371"}, "originalPosition": 58}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1MDAyNjA0OnYy", "diffSide": "RIGHT", "path": "modules/platform/nuxeo-platform-document-routing/nuxeo-routing-core/src/test/java/org/nuxeo/ecm/platform/routing/test/WorkflowActivationFilter.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMVQxODozODowOVrOHfprBw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQwODowMzoxNVrOHfzWOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjk1MDY2Mw==", "bodyText": "Please do a static import of all the assert* methods.", "url": "https://github.com/nuxeo/nuxeo/pull/4365#discussion_r502950663", "createdAt": "2020-10-11T18:38:09Z", "author": {"login": "efge"}, "path": "modules/platform/nuxeo-platform-document-routing/nuxeo-routing-core/src/test/java/org/nuxeo/ecm/platform/routing/test/WorkflowActivationFilter.java", "diffHunk": "@@ -0,0 +1,111 @@\n+/*\n+ * (C) Copyright 2020 Nuxeo (http://nuxeo.com/) and others.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ * Contributors:\n+ *     Guillaume Renard\n+ *     Michael Vachette\n+ */\n+package org.nuxeo.ecm.platform.routing.test;\n+\n+import java.util.List;\n+\n+import javax.inject.Inject;\n+\n+import org.junit.Assert;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.nuxeo.ecm.core.api.CoreSession;\n+import org.nuxeo.ecm.core.api.DocumentModel;\n+import org.nuxeo.ecm.platform.routing.api.DocumentRoute;\n+import org.nuxeo.ecm.platform.routing.api.DocumentRoutingService;\n+import org.nuxeo.ecm.platform.routing.core.impl.GraphNode;\n+import org.nuxeo.ecm.platform.routing.core.impl.GraphRoute;\n+import org.nuxeo.ecm.webengine.test.WebEngineFeatureCore;\n+import org.nuxeo.runtime.test.runner.Deploy;\n+import org.nuxeo.runtime.test.runner.Features;\n+import org.nuxeo.runtime.test.runner.FeaturesRunner;\n+\n+/**\n+ * @since 11.3\n+ */\n+@RunWith(FeaturesRunner.class)\n+@Features({ WorkflowFeature.class, WebEngineFeatureCore.class })\n+@Deploy(\"org.nuxeo.ecm.platform.routing.core:OSGI-INF/test-document-routing-activation-filters.xml\")\n+public class WorkflowActivationFilter extends AbstractGraphRouteTest {\n+\n+    @Inject\n+    CoreSession session;\n+\n+    @Inject\n+    DocumentRoutingService routing;\n+\n+    @Before\n+    public void setUp() {\n+        doc = session.createDocumentModel(\"/\", \"file\", \"File\");\n+        doc.setPropertyValue(\"dc:title\", \"file\");\n+        doc = session.createDocument(doc);\n+    }\n+\n+    public void setRoute(String activationFiltername) {\n+        routeDoc = createRoute(\"myroute\", session);\n+        DocumentModel node1 = createNode(routeDoc, \"node1\", session);\n+        node1.setPropertyValue(GraphNode.PROP_START, Boolean.TRUE);\n+        node1.setPropertyValue(GraphNode.PROP_STOP, Boolean.TRUE);\n+        session.saveDocument(node1);\n+        routeDoc.setPropertyValue(GraphRoute.PROP_VARIABLES_FACET, \"FacetRoute1\");\n+        routeDoc.setPropertyValue(GraphRoute.PROP_AVAILABILITY_FILTER, activationFiltername);\n+        routeDoc.addFacet(\"FacetRoute1\");\n+        routeDoc = session.saveDocument(routeDoc);\n+        validate(routeDoc, session);\n+    }\n+\n+    @Test\n+    public void testWorkflowWithoutFilterCanBeStarted() {\n+        setRoute(null);\n+        Assert.assertTrue(routing.canCreateInstance(session, List.of(doc.getId()), routeDoc.getName()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "14af41b34ae85e9b8e171aa2bebfaa1031e63371"}, "originalPosition": 78}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzEwOTE3Ng==", "bodyText": "done", "url": "https://github.com/nuxeo/nuxeo/pull/4365#discussion_r503109176", "createdAt": "2020-10-12T08:03:15Z", "author": {"login": "michaelva"}, "path": "modules/platform/nuxeo-platform-document-routing/nuxeo-routing-core/src/test/java/org/nuxeo/ecm/platform/routing/test/WorkflowActivationFilter.java", "diffHunk": "@@ -0,0 +1,111 @@\n+/*\n+ * (C) Copyright 2020 Nuxeo (http://nuxeo.com/) and others.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ * Contributors:\n+ *     Guillaume Renard\n+ *     Michael Vachette\n+ */\n+package org.nuxeo.ecm.platform.routing.test;\n+\n+import java.util.List;\n+\n+import javax.inject.Inject;\n+\n+import org.junit.Assert;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.nuxeo.ecm.core.api.CoreSession;\n+import org.nuxeo.ecm.core.api.DocumentModel;\n+import org.nuxeo.ecm.platform.routing.api.DocumentRoute;\n+import org.nuxeo.ecm.platform.routing.api.DocumentRoutingService;\n+import org.nuxeo.ecm.platform.routing.core.impl.GraphNode;\n+import org.nuxeo.ecm.platform.routing.core.impl.GraphRoute;\n+import org.nuxeo.ecm.webengine.test.WebEngineFeatureCore;\n+import org.nuxeo.runtime.test.runner.Deploy;\n+import org.nuxeo.runtime.test.runner.Features;\n+import org.nuxeo.runtime.test.runner.FeaturesRunner;\n+\n+/**\n+ * @since 11.3\n+ */\n+@RunWith(FeaturesRunner.class)\n+@Features({ WorkflowFeature.class, WebEngineFeatureCore.class })\n+@Deploy(\"org.nuxeo.ecm.platform.routing.core:OSGI-INF/test-document-routing-activation-filters.xml\")\n+public class WorkflowActivationFilter extends AbstractGraphRouteTest {\n+\n+    @Inject\n+    CoreSession session;\n+\n+    @Inject\n+    DocumentRoutingService routing;\n+\n+    @Before\n+    public void setUp() {\n+        doc = session.createDocumentModel(\"/\", \"file\", \"File\");\n+        doc.setPropertyValue(\"dc:title\", \"file\");\n+        doc = session.createDocument(doc);\n+    }\n+\n+    public void setRoute(String activationFiltername) {\n+        routeDoc = createRoute(\"myroute\", session);\n+        DocumentModel node1 = createNode(routeDoc, \"node1\", session);\n+        node1.setPropertyValue(GraphNode.PROP_START, Boolean.TRUE);\n+        node1.setPropertyValue(GraphNode.PROP_STOP, Boolean.TRUE);\n+        session.saveDocument(node1);\n+        routeDoc.setPropertyValue(GraphRoute.PROP_VARIABLES_FACET, \"FacetRoute1\");\n+        routeDoc.setPropertyValue(GraphRoute.PROP_AVAILABILITY_FILTER, activationFiltername);\n+        routeDoc.addFacet(\"FacetRoute1\");\n+        routeDoc = session.saveDocument(routeDoc);\n+        validate(routeDoc, session);\n+    }\n+\n+    @Test\n+    public void testWorkflowWithoutFilterCanBeStarted() {\n+        setRoute(null);\n+        Assert.assertTrue(routing.canCreateInstance(session, List.of(doc.getId()), routeDoc.getName()));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjk1MDY2Mw=="}, "originalCommit": {"oid": "14af41b34ae85e9b8e171aa2bebfaa1031e63371"}, "originalPosition": 78}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1MDAyOTIyOnYy", "diffSide": "RIGHT", "path": "modules/platform/nuxeo-platform-document-routing/nuxeo-routing-rest-api/src/main/java/org/nuxeo/ecm/restapi/server/jaxrs/routing/WorkflowObject.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMVQxODo0MTo0OFrOHfpshA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQwODowMzoyM1rOHfzWeg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjk1MTA0NA==", "bodyText": "Please put ctx.getCoreSession(), workflowRequest.getAttachedDocumentIds() and workflowRequest.getWorkflowModelName(), which are used several times, in local variables.\ngetContext().getCoreSession() could also use the same session local variable.", "url": "https://github.com/nuxeo/nuxeo/pull/4365#discussion_r502951044", "createdAt": "2020-10-11T18:41:48Z", "author": {"login": "efge"}, "path": "modules/platform/nuxeo-platform-document-routing/nuxeo-routing-rest-api/src/main/java/org/nuxeo/ecm/restapi/server/jaxrs/routing/WorkflowObject.java", "diffHunk": "@@ -67,12 +67,17 @@ protected void initialize(Object... args) {\n \n     @POST\n     public Response createWorkflowInstance(WorkflowRequest workflowRequest) {\n-        final String workflowInstanceId = documentRoutingService.createNewInstance(\n-                workflowRequest.getWorkflowModelName(), workflowRequest.getAttachedDocumentIds(),\n-                workflowRequest.getVariables(), ctx.getCoreSession(), true);\n-        DocumentModel workflowInstance = getContext().getCoreSession().getDocument(new IdRef(workflowInstanceId));\n-        DocumentRoute route = workflowInstance.getAdapter(DocumentRoute.class);\n-        return Response.ok(route).status(Status.CREATED).build();\n+        if (documentRoutingService.canCreateInstance(ctx.getCoreSession(), workflowRequest.getAttachedDocumentIds(),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "14af41b34ae85e9b8e171aa2bebfaa1031e63371"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzEwOTI0Mg==", "bodyText": "done", "url": "https://github.com/nuxeo/nuxeo/pull/4365#discussion_r503109242", "createdAt": "2020-10-12T08:03:23Z", "author": {"login": "michaelva"}, "path": "modules/platform/nuxeo-platform-document-routing/nuxeo-routing-rest-api/src/main/java/org/nuxeo/ecm/restapi/server/jaxrs/routing/WorkflowObject.java", "diffHunk": "@@ -67,12 +67,17 @@ protected void initialize(Object... args) {\n \n     @POST\n     public Response createWorkflowInstance(WorkflowRequest workflowRequest) {\n-        final String workflowInstanceId = documentRoutingService.createNewInstance(\n-                workflowRequest.getWorkflowModelName(), workflowRequest.getAttachedDocumentIds(),\n-                workflowRequest.getVariables(), ctx.getCoreSession(), true);\n-        DocumentModel workflowInstance = getContext().getCoreSession().getDocument(new IdRef(workflowInstanceId));\n-        DocumentRoute route = workflowInstance.getAdapter(DocumentRoute.class);\n-        return Response.ok(route).status(Status.CREATED).build();\n+        if (documentRoutingService.canCreateInstance(ctx.getCoreSession(), workflowRequest.getAttachedDocumentIds(),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjk1MTA0NA=="}, "originalCommit": {"oid": "14af41b34ae85e9b8e171aa2bebfaa1031e63371"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1MDAzMDM5OnYy", "diffSide": "RIGHT", "path": "modules/platform/nuxeo-platform-document-routing/nuxeo-routing-rest-api/src/main/java/org/nuxeo/ecm/restapi/server/jaxrs/routing/adapter/WorkflowAdapter.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMVQxODo0Mzo0OVrOHfptGA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQwODowMzozMlrOHfzWxA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjk1MTE5Mg==", "bodyText": "Same comment about local variables than in WorkflowObject.", "url": "https://github.com/nuxeo/nuxeo/pull/4365#discussion_r502951192", "createdAt": "2020-10-11T18:43:49Z", "author": {"login": "efge"}, "path": "modules/platform/nuxeo-platform-document-routing/nuxeo-routing-rest-api/src/main/java/org/nuxeo/ecm/restapi/server/jaxrs/routing/adapter/WorkflowAdapter.java", "diffHunk": "@@ -50,13 +50,18 @@\n     @POST\n     public Response doPost(WorkflowRequest routingRequest) {\n         DocumentModel doc = getTarget().getAdapter(DocumentModel.class);\n-        final String workflowInstanceId = Framework.getService(DocumentRoutingService.class)\n-                                                   .createNewInstance(routingRequest.getWorkflowModelName(),\n-                                                           List.of(doc.getId()), routingRequest.getVariables(),\n-                                                           ctx.getCoreSession(), true);\n-        DocumentModel result = getContext().getCoreSession().getDocument(new IdRef(workflowInstanceId));\n-        DocumentRoute route = result.getAdapter(DocumentRoute.class);\n-        return Response.ok(route).status(Status.CREATED).build();\n+        DocumentRoutingService documentRoutingService = Framework.getService(DocumentRoutingService.class);\n+        if (documentRoutingService.canCreateInstance(doc.getCoreSession(), List.of(doc.getId()),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "14af41b34ae85e9b8e171aa2bebfaa1031e63371"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzEwOTMxNg==", "bodyText": "done", "url": "https://github.com/nuxeo/nuxeo/pull/4365#discussion_r503109316", "createdAt": "2020-10-12T08:03:32Z", "author": {"login": "michaelva"}, "path": "modules/platform/nuxeo-platform-document-routing/nuxeo-routing-rest-api/src/main/java/org/nuxeo/ecm/restapi/server/jaxrs/routing/adapter/WorkflowAdapter.java", "diffHunk": "@@ -50,13 +50,18 @@\n     @POST\n     public Response doPost(WorkflowRequest routingRequest) {\n         DocumentModel doc = getTarget().getAdapter(DocumentModel.class);\n-        final String workflowInstanceId = Framework.getService(DocumentRoutingService.class)\n-                                                   .createNewInstance(routingRequest.getWorkflowModelName(),\n-                                                           List.of(doc.getId()), routingRequest.getVariables(),\n-                                                           ctx.getCoreSession(), true);\n-        DocumentModel result = getContext().getCoreSession().getDocument(new IdRef(workflowInstanceId));\n-        DocumentRoute route = result.getAdapter(DocumentRoute.class);\n-        return Response.ok(route).status(Status.CREATED).build();\n+        DocumentRoutingService documentRoutingService = Framework.getService(DocumentRoutingService.class);\n+        if (documentRoutingService.canCreateInstance(doc.getCoreSession(), List.of(doc.getId()),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjk1MTE5Mg=="}, "originalCommit": {"oid": "14af41b34ae85e9b8e171aa2bebfaa1031e63371"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1MDAzMDYyOnYy", "diffSide": "RIGHT", "path": "modules/platform/nuxeo-platform-document-routing/nuxeo-routing-rest-api/src/main/java/org/nuxeo/ecm/restapi/server/jaxrs/routing/adapter/WorkflowAdapter.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMVQxODo0NDowN1rOHfptNQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQwODowMzo0MlrOHfzXJg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjk1MTIyMQ==", "bodyText": "final can be removed while we're changing this code.", "url": "https://github.com/nuxeo/nuxeo/pull/4365#discussion_r502951221", "createdAt": "2020-10-11T18:44:07Z", "author": {"login": "efge"}, "path": "modules/platform/nuxeo-platform-document-routing/nuxeo-routing-rest-api/src/main/java/org/nuxeo/ecm/restapi/server/jaxrs/routing/adapter/WorkflowAdapter.java", "diffHunk": "@@ -50,13 +50,18 @@\n     @POST\n     public Response doPost(WorkflowRequest routingRequest) {\n         DocumentModel doc = getTarget().getAdapter(DocumentModel.class);\n-        final String workflowInstanceId = Framework.getService(DocumentRoutingService.class)\n-                                                   .createNewInstance(routingRequest.getWorkflowModelName(),\n-                                                           List.of(doc.getId()), routingRequest.getVariables(),\n-                                                           ctx.getCoreSession(), true);\n-        DocumentModel result = getContext().getCoreSession().getDocument(new IdRef(workflowInstanceId));\n-        DocumentRoute route = result.getAdapter(DocumentRoute.class);\n-        return Response.ok(route).status(Status.CREATED).build();\n+        DocumentRoutingService documentRoutingService = Framework.getService(DocumentRoutingService.class);\n+        if (documentRoutingService.canCreateInstance(doc.getCoreSession(), List.of(doc.getId()),\n+                routingRequest.getWorkflowModelName())) {\n+            final String workflowInstanceId = documentRoutingService.createNewInstance(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "14af41b34ae85e9b8e171aa2bebfaa1031e63371"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzEwOTQxNA==", "bodyText": "done", "url": "https://github.com/nuxeo/nuxeo/pull/4365#discussion_r503109414", "createdAt": "2020-10-12T08:03:42Z", "author": {"login": "michaelva"}, "path": "modules/platform/nuxeo-platform-document-routing/nuxeo-routing-rest-api/src/main/java/org/nuxeo/ecm/restapi/server/jaxrs/routing/adapter/WorkflowAdapter.java", "diffHunk": "@@ -50,13 +50,18 @@\n     @POST\n     public Response doPost(WorkflowRequest routingRequest) {\n         DocumentModel doc = getTarget().getAdapter(DocumentModel.class);\n-        final String workflowInstanceId = Framework.getService(DocumentRoutingService.class)\n-                                                   .createNewInstance(routingRequest.getWorkflowModelName(),\n-                                                           List.of(doc.getId()), routingRequest.getVariables(),\n-                                                           ctx.getCoreSession(), true);\n-        DocumentModel result = getContext().getCoreSession().getDocument(new IdRef(workflowInstanceId));\n-        DocumentRoute route = result.getAdapter(DocumentRoute.class);\n-        return Response.ok(route).status(Status.CREATED).build();\n+        DocumentRoutingService documentRoutingService = Framework.getService(DocumentRoutingService.class);\n+        if (documentRoutingService.canCreateInstance(doc.getCoreSession(), List.of(doc.getId()),\n+                routingRequest.getWorkflowModelName())) {\n+            final String workflowInstanceId = documentRoutingService.createNewInstance(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjk1MTIyMQ=="}, "originalCommit": {"oid": "14af41b34ae85e9b8e171aa2bebfaa1031e63371"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1MDAzMjUwOnYy", "diffSide": "RIGHT", "path": "modules/platform/nuxeo-platform-document-routing/nuxeo-routing-rest-api/src/main/java/org/nuxeo/ecm/restapi/server/jaxrs/routing/WorkflowObject.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMVQxODo0NTo1NFrOHfpuDw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQxNjoyNjoxMlrOHgFbRQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjk1MTQzOQ==", "bodyText": "I'm not sure about FORBIDDEN here, does @nelsonsilva or @nuxeo/platform have an opinion with respect to REST API best practices? Maybe a 400?", "url": "https://github.com/nuxeo/nuxeo/pull/4365#discussion_r502951439", "createdAt": "2020-10-11T18:45:54Z", "author": {"login": "efge"}, "path": "modules/platform/nuxeo-platform-document-routing/nuxeo-routing-rest-api/src/main/java/org/nuxeo/ecm/restapi/server/jaxrs/routing/WorkflowObject.java", "diffHunk": "@@ -67,12 +67,17 @@ protected void initialize(Object... args) {\n \n     @POST\n     public Response createWorkflowInstance(WorkflowRequest workflowRequest) {\n-        final String workflowInstanceId = documentRoutingService.createNewInstance(\n-                workflowRequest.getWorkflowModelName(), workflowRequest.getAttachedDocumentIds(),\n-                workflowRequest.getVariables(), ctx.getCoreSession(), true);\n-        DocumentModel workflowInstance = getContext().getCoreSession().getDocument(new IdRef(workflowInstanceId));\n-        DocumentRoute route = workflowInstance.getAdapter(DocumentRoute.class);\n-        return Response.ok(route).status(Status.CREATED).build();\n+        if (documentRoutingService.canCreateInstance(ctx.getCoreSession(), workflowRequest.getAttachedDocumentIds(),\n+                workflowRequest.getWorkflowModelName())) {\n+            final String workflowInstanceId = documentRoutingService.createNewInstance(\n+                    workflowRequest.getWorkflowModelName(), workflowRequest.getAttachedDocumentIds(),\n+                    workflowRequest.getVariables(), ctx.getCoreSession(), true);\n+            DocumentModel workflowInstance = getContext().getCoreSession().getDocument(new IdRef(workflowInstanceId));\n+            DocumentRoute route = workflowInstance.getAdapter(DocumentRoute.class);\n+            return Response.ok(route).status(Status.CREATED).build();\n+        } else {\n+            return Response.status(Status.FORBIDDEN).build();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "14af41b34ae85e9b8e171aa2bebfaa1031e63371"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzQwNTM4MQ==", "bodyText": "@michaelva after some discussions it seems that Status.BAD_REQUEST would be better.", "url": "https://github.com/nuxeo/nuxeo/pull/4365#discussion_r503405381", "createdAt": "2020-10-12T16:26:12Z", "author": {"login": "efge"}, "path": "modules/platform/nuxeo-platform-document-routing/nuxeo-routing-rest-api/src/main/java/org/nuxeo/ecm/restapi/server/jaxrs/routing/WorkflowObject.java", "diffHunk": "@@ -67,12 +67,17 @@ protected void initialize(Object... args) {\n \n     @POST\n     public Response createWorkflowInstance(WorkflowRequest workflowRequest) {\n-        final String workflowInstanceId = documentRoutingService.createNewInstance(\n-                workflowRequest.getWorkflowModelName(), workflowRequest.getAttachedDocumentIds(),\n-                workflowRequest.getVariables(), ctx.getCoreSession(), true);\n-        DocumentModel workflowInstance = getContext().getCoreSession().getDocument(new IdRef(workflowInstanceId));\n-        DocumentRoute route = workflowInstance.getAdapter(DocumentRoute.class);\n-        return Response.ok(route).status(Status.CREATED).build();\n+        if (documentRoutingService.canCreateInstance(ctx.getCoreSession(), workflowRequest.getAttachedDocumentIds(),\n+                workflowRequest.getWorkflowModelName())) {\n+            final String workflowInstanceId = documentRoutingService.createNewInstance(\n+                    workflowRequest.getWorkflowModelName(), workflowRequest.getAttachedDocumentIds(),\n+                    workflowRequest.getVariables(), ctx.getCoreSession(), true);\n+            DocumentModel workflowInstance = getContext().getCoreSession().getDocument(new IdRef(workflowInstanceId));\n+            DocumentRoute route = workflowInstance.getAdapter(DocumentRoute.class);\n+            return Response.ok(route).status(Status.CREATED).build();\n+        } else {\n+            return Response.status(Status.FORBIDDEN).build();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjk1MTQzOQ=="}, "originalCommit": {"oid": "14af41b34ae85e9b8e171aa2bebfaa1031e63371"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4NTA0NjA4OnYy", "diffSide": "RIGHT", "path": "modules/platform/nuxeo-platform-document-routing/nuxeo-routing-api/src/main/java/org/nuxeo/ecm/platform/routing/api/DocumentRoutingService.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxMjoyNTo0NlrOHk5tmQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxMjoyNTo0NlrOHk5tmQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODQ1NjM0NQ==", "bodyText": "To remove.", "url": "https://github.com/nuxeo/nuxeo/pull/4365#discussion_r508456345", "createdAt": "2020-10-20T12:25:46Z", "author": {"login": "kevinleturc"}, "path": "modules/platform/nuxeo-platform-document-routing/nuxeo-routing-api/src/main/java/org/nuxeo/ecm/platform/routing/api/DocumentRoutingService.java", "diffHunk": "@@ -622,4 +622,19 @@ void grantPermissionToTaskDelegatedActors(CoreSession session, String permission\n      */\n     boolean isWorkflowModel(final DocumentRoute documentRoute);\n \n+    /**\n+     * Returns {@code true} if the workflow model can be started on the document list.\n+     * @param documentIds\n+     * @param worflowModelName", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b4e3ed0145a8bd3fb5532d9c6d421dcf0f727a26"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4NTA0Njc4OnYy", "diffSide": "RIGHT", "path": "modules/platform/nuxeo-platform-document-routing/nuxeo-routing-api/src/main/java/org/nuxeo/ecm/platform/routing/api/DocumentRoutingService.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxMjoyNTo1NlrOHk5uAg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxMjoyNTo1NlrOHk5uAg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODQ1NjQ1MA==", "bodyText": "To remove.", "url": "https://github.com/nuxeo/nuxeo/pull/4365#discussion_r508456450", "createdAt": "2020-10-20T12:25:56Z", "author": {"login": "kevinleturc"}, "path": "modules/platform/nuxeo-platform-document-routing/nuxeo-routing-api/src/main/java/org/nuxeo/ecm/platform/routing/api/DocumentRoutingService.java", "diffHunk": "@@ -622,4 +622,19 @@ void grantPermissionToTaskDelegatedActors(CoreSession session, String permission\n      */\n     boolean isWorkflowModel(final DocumentRoute documentRoute);\n \n+    /**\n+     * Returns {@code true} if the workflow model can be started on the document list.\n+     * @param documentIds\n+     * @param worflowModelName\n+     * @since 11.4\n+     */\n+    boolean canCreateInstance(CoreSession session, List<String> documentIds, String worflowModelName);\n+\n+    /**\n+     * Returns a list of runnable document routes for the input document IDs.\n+     * @param documentIds", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b4e3ed0145a8bd3fb5532d9c6d421dcf0f727a26"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4NTA3MTk2OnYy", "diffSide": "RIGHT", "path": "modules/platform/nuxeo-platform-document-routing/nuxeo-routing-api/src/main/java/org/nuxeo/ecm/platform/routing/api/DocumentRoutingService.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxMjozMjoyMFrOHk59_Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxMjozMjoyMFrOHk59_Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODQ2MDU0MQ==", "bodyText": "Missing newline between description and @param.", "url": "https://github.com/nuxeo/nuxeo/pull/4365#discussion_r508460541", "createdAt": "2020-10-20T12:32:20Z", "author": {"login": "troger"}, "path": "modules/platform/nuxeo-platform-document-routing/nuxeo-routing-api/src/main/java/org/nuxeo/ecm/platform/routing/api/DocumentRoutingService.java", "diffHunk": "@@ -622,4 +622,19 @@ void grantPermissionToTaskDelegatedActors(CoreSession session, String permission\n      */\n     boolean isWorkflowModel(final DocumentRoute documentRoute);\n \n+    /**\n+     * Returns {@code true} if the workflow model can be started on the document list.\n+     * @param documentIds", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b4e3ed0145a8bd3fb5532d9c6d421dcf0f727a26"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4NTA3MjMwOnYy", "diffSide": "RIGHT", "path": "modules/platform/nuxeo-platform-document-routing/nuxeo-routing-api/src/main/java/org/nuxeo/ecm/platform/routing/api/DocumentRoutingService.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxMjozMjoyNFrOHk5-Mg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxMjozMjoyNFrOHk5-Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODQ2MDU5NA==", "bodyText": "Missing newline between description and @param.", "url": "https://github.com/nuxeo/nuxeo/pull/4365#discussion_r508460594", "createdAt": "2020-10-20T12:32:24Z", "author": {"login": "troger"}, "path": "modules/platform/nuxeo-platform-document-routing/nuxeo-routing-api/src/main/java/org/nuxeo/ecm/platform/routing/api/DocumentRoutingService.java", "diffHunk": "@@ -622,4 +622,19 @@ void grantPermissionToTaskDelegatedActors(CoreSession session, String permission\n      */\n     boolean isWorkflowModel(final DocumentRoute documentRoute);\n \n+    /**\n+     * Returns {@code true} if the workflow model can be started on the document list.\n+     * @param documentIds\n+     * @param worflowModelName\n+     * @since 11.4\n+     */\n+    boolean canCreateInstance(CoreSession session, List<String> documentIds, String worflowModelName);\n+\n+    /**\n+     * Returns a list of runnable document routes for the input document IDs.\n+     * @param documentIds", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b4e3ed0145a8bd3fb5532d9c6d421dcf0f727a26"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4NTQzMjIyOnYy", "diffSide": "RIGHT", "path": "modules/platform/nuxeo-platform-document-routing/nuxeo-routing-core/src/test/resources/OSGI-INF/test-document-routing-activation-filters.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxMzo0NjozNVrOHk9ebA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxMzo0NjozNVrOHk9ebA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODUxNzk5Ng==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            <component name=\"org.nuxeo.ecm.platform.routing.filters\" version=\"1.0.0\">\n          \n          \n            \n            <component name=\"org.nuxeo.ecm.platform.routing.filters.test\" version=\"1.0.0\">", "url": "https://github.com/nuxeo/nuxeo/pull/4365#discussion_r508517996", "createdAt": "2020-10-20T13:46:35Z", "author": {"login": "ataillefer"}, "path": "modules/platform/nuxeo-platform-document-routing/nuxeo-routing-core/src/test/resources/OSGI-INF/test-document-routing-activation-filters.xml", "diffHunk": "@@ -0,0 +1,18 @@\n+<component name=\"org.nuxeo.ecm.platform.routing.filters\" version=\"1.0.0\">", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b4e3ed0145a8bd3fb5532d9c6d421dcf0f727a26"}, "originalPosition": 1}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4331, "cost": 1, "resetAt": "2021-11-03T18:41:40Z"}}}