{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEzNjYzODI2", "number": 4008, "reviewThreads": {"totalCount": 26, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxODowMDo0MFrOD5hHQA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQwODozNDoyNFrOEDxGSg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxNjM3OTUyOnYy", "diffSide": "RIGHT", "path": "modules/platform/nuxeo-platform-document-routing/nuxeo-routing-core/src/main/java/org/nuxeo/ecm/platform/routing/core/io/TaskWriter.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxODowMDo0MFrOGQ1PHw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxODowNTo1MlrOGQ1bOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDMwMjYyMw==", "bodyText": "If you want to log the stack trace you need log.error(e, e).\nIf you don't, please add a comment saying so because it's surprising to hide it.", "url": "https://github.com/nuxeo/nuxeo/pull/4008#discussion_r420302623", "createdAt": "2020-05-05T18:00:40Z", "author": {"login": "efge"}, "path": "modules/platform/nuxeo-platform-document-routing/nuxeo-routing-core/src/main/java/org/nuxeo/ecm/platform/routing/core/io/TaskWriter.java", "diffHunk": "@@ -219,6 +224,9 @@ public void writeEntityBody(Task item, JsonGenerator jg) throws IOException {\n \n                 jg.writeEndObject();\n             }\n+        } catch (DocumentNotFoundException e) {\n+            // If the DocumentRoute is not found (deleted for example), the TaskWriter fails.\n+            log.error(e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cb9bbbae1bc29ffae3bb8011b875b8651927473b"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDMwNTcyMA==", "bodyText": "Yes no special reason to hide the stack! Fixed!", "url": "https://github.com/nuxeo/nuxeo/pull/4008#discussion_r420305720", "createdAt": "2020-05-05T18:05:52Z", "author": {"login": "NourNuxeo"}, "path": "modules/platform/nuxeo-platform-document-routing/nuxeo-routing-core/src/main/java/org/nuxeo/ecm/platform/routing/core/io/TaskWriter.java", "diffHunk": "@@ -219,6 +224,9 @@ public void writeEntityBody(Task item, JsonGenerator jg) throws IOException {\n \n                 jg.writeEndObject();\n             }\n+        } catch (DocumentNotFoundException e) {\n+            // If the DocumentRoute is not found (deleted for example), the TaskWriter fails.\n+            log.error(e);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDMwMjYyMw=="}, "originalCommit": {"oid": "cb9bbbae1bc29ffae3bb8011b875b8651927473b"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxNjY4NjcwOnYy", "diffSide": "RIGHT", "path": "modules/platform/nuxeo-platform-document-routing/nuxeo-routing-core/src/main/java/org/nuxeo/ecm/platform/routing/core/io/TaskWriter.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxOToyNjoxMVrOGQ4RxQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQwODoyMjowN1rOGRIpdg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDM1MjQ1Mw==", "bodyText": "If a sysadmin can't do much about it and the application can keep functioning, I'd prefer a WARN.\nAlso where is the exception being thrown exactly? Could you add a full stack trace in the NXP ticket please. I'm asking because the try/catch has a very large scope, which is bad if we can have a smaller one.\nFrom a quick test it seems to appear in nodeAccessRunner.runUnrestricted() so the try/catch should be around that, and you should log.warn(\"Failed to get workflow instance\", e)", "url": "https://github.com/nuxeo/nuxeo/pull/4008#discussion_r420352453", "createdAt": "2020-05-05T19:26:11Z", "author": {"login": "efge"}, "path": "modules/platform/nuxeo-platform-document-routing/nuxeo-routing-core/src/main/java/org/nuxeo/ecm/platform/routing/core/io/TaskWriter.java", "diffHunk": "@@ -219,6 +224,9 @@ public void writeEntityBody(Task item, JsonGenerator jg) throws IOException {\n \n                 jg.writeEndObject();\n             }\n+        } catch (DocumentNotFoundException e) {\n+            // If the DocumentRoute is not found (deleted for example), the TaskWriter fails.\n+            log.error(e, e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a875bf2a02bafa3d8935390a0c386216164d46cd"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDQ2MDU1MA==", "bodyText": "Making it a warn and updating the ticket!\nYes indeed, I just catched there because there was already a try clause and because I was certain about the context this is called in (by context I mean while writing a task to json). The UnrestrictedSessionRunner.runUnrestricted() is called in so many places I didn't want to catch in it.\nI could also make a sub try catch around the nodeAccessRunner.runUnrestricted();call in TaskWriter.writeEntityBody() line 116. to make sure I only catch errors on the runUnrestricted().\nAt first I wanted to avoid doing a sub try catch.", "url": "https://github.com/nuxeo/nuxeo/pull/4008#discussion_r420460550", "createdAt": "2020-05-05T23:10:09Z", "author": {"login": "NourNuxeo"}, "path": "modules/platform/nuxeo-platform-document-routing/nuxeo-routing-core/src/main/java/org/nuxeo/ecm/platform/routing/core/io/TaskWriter.java", "diffHunk": "@@ -219,6 +224,9 @@ public void writeEntityBody(Task item, JsonGenerator jg) throws IOException {\n \n                 jg.writeEndObject();\n             }\n+        } catch (DocumentNotFoundException e) {\n+            // If the DocumentRoute is not found (deleted for example), the TaskWriter fails.\n+            log.error(e, e);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDM1MjQ1Mw=="}, "originalCommit": {"oid": "a875bf2a02bafa3d8935390a0c386216164d46cd"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDUwOTI0NA==", "bodyText": "Yes I mean around the call to nodeAccessRunner.runUnrestricted at line 116. It helps the reader to know where the exception can come from.", "url": "https://github.com/nuxeo/nuxeo/pull/4008#discussion_r420509244", "createdAt": "2020-05-06T02:10:18Z", "author": {"login": "efge"}, "path": "modules/platform/nuxeo-platform-document-routing/nuxeo-routing-core/src/main/java/org/nuxeo/ecm/platform/routing/core/io/TaskWriter.java", "diffHunk": "@@ -219,6 +224,9 @@ public void writeEntityBody(Task item, JsonGenerator jg) throws IOException {\n \n                 jg.writeEndObject();\n             }\n+        } catch (DocumentNotFoundException e) {\n+            // If the DocumentRoute is not found (deleted for example), the TaskWriter fails.\n+            log.error(e, e);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDM1MjQ1Mw=="}, "originalCommit": {"oid": "a875bf2a02bafa3d8935390a0c386216164d46cd"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDU3MzYyOQ==", "bodyText": "Done!", "url": "https://github.com/nuxeo/nuxeo/pull/4008#discussion_r420573629", "createdAt": "2020-05-06T06:39:48Z", "author": {"login": "NourNuxeo"}, "path": "modules/platform/nuxeo-platform-document-routing/nuxeo-routing-core/src/main/java/org/nuxeo/ecm/platform/routing/core/io/TaskWriter.java", "diffHunk": "@@ -219,6 +224,9 @@ public void writeEntityBody(Task item, JsonGenerator jg) throws IOException {\n \n                 jg.writeEndObject();\n             }\n+        } catch (DocumentNotFoundException e) {\n+            // If the DocumentRoute is not found (deleted for example), the TaskWriter fails.\n+            log.error(e, e);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDM1MjQ1Mw=="}, "originalCommit": {"oid": "a875bf2a02bafa3d8935390a0c386216164d46cd"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDYyMDY2Mg==", "bodyText": "After moving the catch, now the faulty task contains more info in the response. I have updated the jira ticket with a response containing a corrupted task first and then a well formed one. Also Kevin has identified some issues we'd like to have your opinion about: #4008 (comment)", "url": "https://github.com/nuxeo/nuxeo/pull/4008#discussion_r420620662", "createdAt": "2020-05-06T08:22:07Z", "author": {"login": "NourNuxeo"}, "path": "modules/platform/nuxeo-platform-document-routing/nuxeo-routing-core/src/main/java/org/nuxeo/ecm/platform/routing/core/io/TaskWriter.java", "diffHunk": "@@ -219,6 +224,9 @@ public void writeEntityBody(Task item, JsonGenerator jg) throws IOException {\n \n                 jg.writeEndObject();\n             }\n+        } catch (DocumentNotFoundException e) {\n+            // If the DocumentRoute is not found (deleted for example), the TaskWriter fails.\n+            log.error(e, e);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDM1MjQ1Mw=="}, "originalCommit": {"oid": "a875bf2a02bafa3d8935390a0c386216164d46cd"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxODIyNzc4OnYy", "diffSide": "RIGHT", "path": "modules/platform/nuxeo-platform-document-routing/nuxeo-routing-core/src/main/java/org/nuxeo/ecm/platform/routing/core/io/TaskWriter.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQwNzowNjo0OFrOGRGaiQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQwODoxNzo0OVrOGRIgzQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDU4NDA3Mw==", "bodyText": "Why not fixing the root cause in NodeAccessRunner instead of catching?", "url": "https://github.com/nuxeo/nuxeo/pull/4008#discussion_r420584073", "createdAt": "2020-05-06T07:06:48Z", "author": {"login": "kevinleturc"}, "path": "modules/platform/nuxeo-platform-document-routing/nuxeo-routing-core/src/main/java/org/nuxeo/ecm/platform/routing/core/io/TaskWriter.java", "diffHunk": "@@ -108,7 +113,12 @@ public void writeEntityBody(Task item, JsonGenerator jg) throws IOException {\n             if (StringUtils.isNotBlank(workflowInstanceId)) {\n                 NodeAccessRunner nodeAccessRunner = new NodeAccessRunner(wrapper.getSession(), workflowInstanceId,\n                         nodeId);\n-                nodeAccessRunner.runUnrestricted();\n+                try {\n+                    nodeAccessRunner.runUnrestricted();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "05f3fc68aeed664c0c0f8ebf306cae1be4682c33"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDYxODQ0NQ==", "bodyText": "As we discussed on slack the root cause is a DocumentNotFound exception we can only catch where we need to.\nWe have identified other issues as well:\n\nthe NodeAccessRunner is also called by org.nuxeo.ecm.platform.routing.core.io.TaskCompletionRequestJsonReader.readEntity(JsonNode)\nWhen we list the tasks, corrupted tasks show, but obviously miss information, which we may want to avoid in the UI.\nHere is a sample response with a first corrupted task and a well formed task:\nhttps://jira.nuxeo.com/browse/NXP-28798?focusedCommentId=453928&page=com.atlassian.jira.plugin.system.issuetabpanels%3Acomment-tabpanel#comment-453928", "url": "https://github.com/nuxeo/nuxeo/pull/4008#discussion_r420618445", "createdAt": "2020-05-06T08:17:49Z", "author": {"login": "NourNuxeo"}, "path": "modules/platform/nuxeo-platform-document-routing/nuxeo-routing-core/src/main/java/org/nuxeo/ecm/platform/routing/core/io/TaskWriter.java", "diffHunk": "@@ -108,7 +113,12 @@ public void writeEntityBody(Task item, JsonGenerator jg) throws IOException {\n             if (StringUtils.isNotBlank(workflowInstanceId)) {\n                 NodeAccessRunner nodeAccessRunner = new NodeAccessRunner(wrapper.getSession(), workflowInstanceId,\n                         nodeId);\n-                nodeAccessRunner.runUnrestricted();\n+                try {\n+                    nodeAccessRunner.runUnrestricted();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDU4NDA3Mw=="}, "originalCommit": {"oid": "05f3fc68aeed664c0c0f8ebf306cae1be4682c33"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyNDAxOTg3OnYy", "diffSide": "RIGHT", "path": "modules/platform/nuxeo-platform-document-routing/nuxeo-routing-core/src/main/java/org/nuxeo/ecm/platform/routing/core/io/TaskWriter.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QxMzoyMzowOFrOGR-SEg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxNDozNjo1MlrOGVfX1Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTQ5OTQxMA==", "bodyText": "As @efge said in one of his comments, you should log something meaningful if possible:\nlog.warn(\"Failed to get workflow instance\", e)\n\nBTW, do we want the whole stack trace for a WARN? (cc @kevinleturc)", "url": "https://github.com/nuxeo/nuxeo/pull/4008#discussion_r421499410", "createdAt": "2020-05-07T13:23:08Z", "author": {"login": "troger"}, "path": "modules/platform/nuxeo-platform-document-routing/nuxeo-routing-core/src/main/java/org/nuxeo/ecm/platform/routing/core/io/TaskWriter.java", "diffHunk": "@@ -108,7 +113,12 @@ public void writeEntityBody(Task item, JsonGenerator jg) throws IOException {\n             if (StringUtils.isNotBlank(workflowInstanceId)) {\n                 NodeAccessRunner nodeAccessRunner = new NodeAccessRunner(wrapper.getSession(), workflowInstanceId,\n                         nodeId);\n-                nodeAccessRunner.runUnrestricted();\n+                try {\n+                    nodeAccessRunner.runUnrestricted();\n+                } catch (DocumentNotFoundException e) {\n+                    // If the DocumentRoute is not found (deleted for example), the TaskWriter fails.\n+                    log.warn(e, e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "05f3fc68aeed664c0c0f8ebf306cae1be4682c33"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTUwNDkzNQ==", "bodyText": "I would say no as this is a valid error case, I'm wondering if we still want it behind a debug/trace level.", "url": "https://github.com/nuxeo/nuxeo/pull/4008#discussion_r421504935", "createdAt": "2020-05-07T13:30:51Z", "author": {"login": "kevinleturc"}, "path": "modules/platform/nuxeo-platform-document-routing/nuxeo-routing-core/src/main/java/org/nuxeo/ecm/platform/routing/core/io/TaskWriter.java", "diffHunk": "@@ -108,7 +113,12 @@ public void writeEntityBody(Task item, JsonGenerator jg) throws IOException {\n             if (StringUtils.isNotBlank(workflowInstanceId)) {\n                 NodeAccessRunner nodeAccessRunner = new NodeAccessRunner(wrapper.getSession(), workflowInstanceId,\n                         nodeId);\n-                nodeAccessRunner.runUnrestricted();\n+                try {\n+                    nodeAccessRunner.runUnrestricted();\n+                } catch (DocumentNotFoundException e) {\n+                    // If the DocumentRoute is not found (deleted for example), the TaskWriter fails.\n+                    log.warn(e, e);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTQ5OTQxMA=="}, "originalCommit": {"oid": "05f3fc68aeed664c0c0f8ebf306cae1be4682c33"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTE1NjE5Ng==", "bodyText": "So a simple:\nlog.warn(\"Failed to get workflow instance: {}\", workflowInstanceId);\nlog.debug(e, e);\n\n?", "url": "https://github.com/nuxeo/nuxeo/pull/4008#discussion_r425156196", "createdAt": "2020-05-14T13:55:38Z", "author": {"login": "troger"}, "path": "modules/platform/nuxeo-platform-document-routing/nuxeo-routing-core/src/main/java/org/nuxeo/ecm/platform/routing/core/io/TaskWriter.java", "diffHunk": "@@ -108,7 +113,12 @@ public void writeEntityBody(Task item, JsonGenerator jg) throws IOException {\n             if (StringUtils.isNotBlank(workflowInstanceId)) {\n                 NodeAccessRunner nodeAccessRunner = new NodeAccessRunner(wrapper.getSession(), workflowInstanceId,\n                         nodeId);\n-                nodeAccessRunner.runUnrestricted();\n+                try {\n+                    nodeAccessRunner.runUnrestricted();\n+                } catch (DocumentNotFoundException e) {\n+                    // If the DocumentRoute is not found (deleted for example), the TaskWriter fails.\n+                    log.warn(e, e);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTQ5OTQxMA=="}, "originalCommit": {"oid": "05f3fc68aeed664c0c0f8ebf306cae1be4682c33"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTE4NzI4NQ==", "bodyText": "Looks good \ud83d\udc4d", "url": "https://github.com/nuxeo/nuxeo/pull/4008#discussion_r425187285", "createdAt": "2020-05-14T14:36:52Z", "author": {"login": "kevinleturc"}, "path": "modules/platform/nuxeo-platform-document-routing/nuxeo-routing-core/src/main/java/org/nuxeo/ecm/platform/routing/core/io/TaskWriter.java", "diffHunk": "@@ -108,7 +113,12 @@ public void writeEntityBody(Task item, JsonGenerator jg) throws IOException {\n             if (StringUtils.isNotBlank(workflowInstanceId)) {\n                 NodeAccessRunner nodeAccessRunner = new NodeAccessRunner(wrapper.getSession(), workflowInstanceId,\n                         nodeId);\n-                nodeAccessRunner.runUnrestricted();\n+                try {\n+                    nodeAccessRunner.runUnrestricted();\n+                } catch (DocumentNotFoundException e) {\n+                    // If the DocumentRoute is not found (deleted for example), the TaskWriter fails.\n+                    log.warn(e, e);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTQ5OTQxMA=="}, "originalCommit": {"oid": "05f3fc68aeed664c0c0f8ebf306cae1be4682c33"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyNDAyNjgyOnYy", "diffSide": "RIGHT", "path": "modules/platform/nuxeo-platform-document-routing/nuxeo-routing-core/src/main/java/org/nuxeo/ecm/platform/routing/core/io/TaskWriter.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QxMzoyNDozOVrOGR-WTg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QxMzoyNzo1MlrOGR-fOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTUwMDQ5NA==", "bodyText": "The comment is not accurate, the TaskWriter does not fail anymore with your fix. Keep it simple...\n// Workflow instance not found\n\nI'm not sure it's even needed according to the DocumentNotFoundException and the log message?", "url": "https://github.com/nuxeo/nuxeo/pull/4008#discussion_r421500494", "createdAt": "2020-05-07T13:24:39Z", "author": {"login": "troger"}, "path": "modules/platform/nuxeo-platform-document-routing/nuxeo-routing-core/src/main/java/org/nuxeo/ecm/platform/routing/core/io/TaskWriter.java", "diffHunk": "@@ -108,7 +113,12 @@ public void writeEntityBody(Task item, JsonGenerator jg) throws IOException {\n             if (StringUtils.isNotBlank(workflowInstanceId)) {\n                 NodeAccessRunner nodeAccessRunner = new NodeAccessRunner(wrapper.getSession(), workflowInstanceId,\n                         nodeId);\n-                nodeAccessRunner.runUnrestricted();\n+                try {\n+                    nodeAccessRunner.runUnrestricted();\n+                } catch (DocumentNotFoundException e) {\n+                    // If the DocumentRoute is not found (deleted for example), the TaskWriter fails.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "05f3fc68aeed664c0c0f8ebf306cae1be4682c33"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTUwMjc3Ng==", "bodyText": "At the begining the catch was at the end of the try resource (way more line below) so I explained why I was catching.\nI should have removed it when I made a very local try catch", "url": "https://github.com/nuxeo/nuxeo/pull/4008#discussion_r421502776", "createdAt": "2020-05-07T13:27:52Z", "author": {"login": "NourNuxeo"}, "path": "modules/platform/nuxeo-platform-document-routing/nuxeo-routing-core/src/main/java/org/nuxeo/ecm/platform/routing/core/io/TaskWriter.java", "diffHunk": "@@ -108,7 +113,12 @@ public void writeEntityBody(Task item, JsonGenerator jg) throws IOException {\n             if (StringUtils.isNotBlank(workflowInstanceId)) {\n                 NodeAccessRunner nodeAccessRunner = new NodeAccessRunner(wrapper.getSession(), workflowInstanceId,\n                         nodeId);\n-                nodeAccessRunner.runUnrestricted();\n+                try {\n+                    nodeAccessRunner.runUnrestricted();\n+                } catch (DocumentNotFoundException e) {\n+                    // If the DocumentRoute is not found (deleted for example), the TaskWriter fails.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTUwMDQ5NA=="}, "originalCommit": {"oid": "05f3fc68aeed664c0c0f8ebf306cae1be4682c33"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1NTc5ODkxOnYy", "diffSide": "RIGHT", "path": "server/nuxeo-nxr-server/src/main/resources/templates/common-base/client/scripts/taskGC.groovy", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQwNzo0NjoyOVrOGWrJ1w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxMjoxNToyOVrOGYIoGg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjQyODg4Nw==", "bodyText": "There's still an interrogation about committing this script or not.", "url": "https://github.com/nuxeo/nuxeo/pull/4008#discussion_r426428887", "createdAt": "2020-05-18T07:46:29Z", "author": {"login": "kevinleturc"}, "path": "server/nuxeo-nxr-server/src/main/resources/templates/common-base/client/scripts/taskGC.groovy", "diffHunk": "@@ -0,0 +1,33 @@\n+import org.apache.logging.log4j.LogManager", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a455f292f864a07f7e93239027de1611254f891c"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzk2MDM0Ng==", "bodyText": "Checked with @tmartins ans he is OK committing the script there \ud83d\ude03", "url": "https://github.com/nuxeo/nuxeo/pull/4008#discussion_r427960346", "createdAt": "2020-05-20T12:15:29Z", "author": {"login": "troger"}, "path": "server/nuxeo-nxr-server/src/main/resources/templates/common-base/client/scripts/taskGC.groovy", "diffHunk": "@@ -0,0 +1,33 @@\n+import org.apache.logging.log4j.LogManager", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjQyODg4Nw=="}, "originalCommit": {"oid": "a455f292f864a07f7e93239027de1611254f891c"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2NTM0NDI2OnYy", "diffSide": "RIGHT", "path": "server/nuxeo-nxr-server/src/main/resources/templates/common-base/client/scripts/taskGC.groovy", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxMjoxNjoyOFrOGYIrTw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxMjoxNjoyOFrOGYIrTw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzk2MTE2Nw==", "bodyText": "Could you rename the script to match the already existing one (consistency)? Such as deleteOrphanTasks.groovy.", "url": "https://github.com/nuxeo/nuxeo/pull/4008#discussion_r427961167", "createdAt": "2020-05-20T12:16:28Z", "author": {"login": "troger"}, "path": "server/nuxeo-nxr-server/src/main/resources/templates/common-base/client/scripts/taskGC.groovy", "diffHunk": "@@ -0,0 +1,33 @@\n+import org.apache.logging.log4j.LogManager", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a455f292f864a07f7e93239027de1611254f891c"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2NTM0NzIxOnYy", "diffSide": "RIGHT", "path": "server/nuxeo-nxr-server/src/main/resources/templates/common-base/client/scripts/taskGC.groovy", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxMjoxNzoyM1rOGYItLg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxMjoxNzoyM1rOGYItLg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzk2MTY0Ng==", "bodyText": "Even if it's not mandatory, could you take the habit to declare your vars at least with def if you don't want to type them?\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            log = LogManager.getLogger(\"taskGC.groovy\")\n          \n          \n            \n            def log = LogManager.getLogger(\"taskGC.groovy\")\n          \n      \n    \n    \n  \n\nSame for all vars in the script.", "url": "https://github.com/nuxeo/nuxeo/pull/4008#discussion_r427961646", "createdAt": "2020-05-20T12:17:23Z", "author": {"login": "troger"}, "path": "server/nuxeo-nxr-server/src/main/resources/templates/common-base/client/scripts/taskGC.groovy", "diffHunk": "@@ -0,0 +1,33 @@\n+import org.apache.logging.log4j.LogManager\n+import org.nuxeo.ecm.platform.task.Task\n+import org.nuxeo.ecm.core.api.IdRef\n+import org.nuxeo.ecm.core.api.ScrollResult\n+import org.nuxeo.runtime.transaction.TransactionHelper\n+import java.util.HashMap\n+\n+log = LogManager.getLogger(\"taskGC.groovy\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a455f292f864a07f7e93239027de1611254f891c"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2NTM1ODY0OnYy", "diffSide": "RIGHT", "path": "server/nuxeo-nxr-server/src/main/resources/templates/common-base/client/scripts/taskGC.groovy", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxMjoyMDoyM1rOGYIz-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxMjozODo1OVrOGYJh5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzk2MzM4NQ==", "bodyText": "I'm just wondering, is 500 not too much as batch size to avoid transaction timeout? Or could it be increased? Or 500 is just fine :)\n@kevinleturc @bdelbosc ?", "url": "https://github.com/nuxeo/nuxeo/pull/4008#discussion_r427963385", "createdAt": "2020-05-20T12:20:23Z", "author": {"login": "troger"}, "path": "server/nuxeo-nxr-server/src/main/resources/templates/common-base/client/scripts/taskGC.groovy", "diffHunk": "@@ -0,0 +1,33 @@\n+import org.apache.logging.log4j.LogManager\n+import org.nuxeo.ecm.platform.task.Task\n+import org.nuxeo.ecm.core.api.IdRef\n+import org.nuxeo.ecm.core.api.ScrollResult\n+import org.nuxeo.runtime.transaction.TransactionHelper\n+import java.util.HashMap\n+\n+log = LogManager.getLogger(\"taskGC.groovy\")\n+nxql = \"SELECT * FROM Document WHERE ecm:mixinType = 'Task'\"\n+dryRun = true\n+session = Context.getCoreSession()\n+ScrollResult<String> scrollResult = session.scroll(nxql, 500, 60)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a455f292f864a07f7e93239027de1611254f891c"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzk3NTE0MQ==", "bodyText": "500 is the default we put everywhere, it looks like a good default.\nI think we always increase it when it comes to production.", "url": "https://github.com/nuxeo/nuxeo/pull/4008#discussion_r427975141", "createdAt": "2020-05-20T12:38:59Z", "author": {"login": "kevinleturc"}, "path": "server/nuxeo-nxr-server/src/main/resources/templates/common-base/client/scripts/taskGC.groovy", "diffHunk": "@@ -0,0 +1,33 @@\n+import org.apache.logging.log4j.LogManager\n+import org.nuxeo.ecm.platform.task.Task\n+import org.nuxeo.ecm.core.api.IdRef\n+import org.nuxeo.ecm.core.api.ScrollResult\n+import org.nuxeo.runtime.transaction.TransactionHelper\n+import java.util.HashMap\n+\n+log = LogManager.getLogger(\"taskGC.groovy\")\n+nxql = \"SELECT * FROM Document WHERE ecm:mixinType = 'Task'\"\n+dryRun = true\n+session = Context.getCoreSession()\n+ScrollResult<String> scrollResult = session.scroll(nxql, 500, 60)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzk2MzM4NQ=="}, "originalCommit": {"oid": "a455f292f864a07f7e93239027de1611254f891c"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2NTM2ODk4OnYy", "diffSide": "RIGHT", "path": "server/nuxeo-nxr-server/src/main/resources/templates/common-base/client/scripts/taskGC.groovy", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxMjoyMjoyN1rOGYI6GA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxMjoyMjoyN1rOGYI6GA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzk2NDk1Mg==", "bodyText": "Can't we use the same as in Java?\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        log.info(\"removing orphan task \" + id)\n          \n          \n            \n                        log.info(\"removing orphan task: {}\", id)", "url": "https://github.com/nuxeo/nuxeo/pull/4008#discussion_r427964952", "createdAt": "2020-05-20T12:22:27Z", "author": {"login": "troger"}, "path": "server/nuxeo-nxr-server/src/main/resources/templates/common-base/client/scripts/taskGC.groovy", "diffHunk": "@@ -0,0 +1,33 @@\n+import org.apache.logging.log4j.LogManager\n+import org.nuxeo.ecm.platform.task.Task\n+import org.nuxeo.ecm.core.api.IdRef\n+import org.nuxeo.ecm.core.api.ScrollResult\n+import org.nuxeo.runtime.transaction.TransactionHelper\n+import java.util.HashMap\n+\n+log = LogManager.getLogger(\"taskGC.groovy\")\n+nxql = \"SELECT * FROM Document WHERE ecm:mixinType = 'Task'\"\n+dryRun = true\n+session = Context.getCoreSession()\n+ScrollResult<String> scrollResult = session.scroll(nxql, 500, 60)\n+bucketCount = 0\n+documentCount = 0\n+\n+while (scrollResult.hasResults()) {\n+    documentCount += scrollResult.getResults().size()\n+    cache = new HashMap<IdRef>()\n+    for(id in scrollResult.getResults()) {\n+        task = session.getDocument(new IdRef(id)).getAdapter(Task.class)\n+        workflowRef = new IdRef(task.getProcessId())\n+        if(!cache.computeIfAbsent(workflowRef, session.&exists)) {\n+            log.info(\"removing orphan task \" + id)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a455f292f864a07f7e93239027de1611254f891c"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2NTM4OTIwOnYy", "diffSide": "RIGHT", "path": "server/nuxeo-nxr-server/src/main/resources/templates/common-base/client/scripts/taskGC.groovy", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxMjoyNzoxMFrOGYJGEA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxMjoyNzoxMFrOGYJGEA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzk2ODAxNg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                for(id in scrollResult.getResults()) {\n          \n          \n            \n                for (id in scrollResult.getResults()) {", "url": "https://github.com/nuxeo/nuxeo/pull/4008#discussion_r427968016", "createdAt": "2020-05-20T12:27:10Z", "author": {"login": "troger"}, "path": "server/nuxeo-nxr-server/src/main/resources/templates/common-base/client/scripts/taskGC.groovy", "diffHunk": "@@ -0,0 +1,33 @@\n+import org.apache.logging.log4j.LogManager\n+import org.nuxeo.ecm.platform.task.Task\n+import org.nuxeo.ecm.core.api.IdRef\n+import org.nuxeo.ecm.core.api.ScrollResult\n+import org.nuxeo.runtime.transaction.TransactionHelper\n+import java.util.HashMap\n+\n+log = LogManager.getLogger(\"taskGC.groovy\")\n+nxql = \"SELECT * FROM Document WHERE ecm:mixinType = 'Task'\"\n+dryRun = true\n+session = Context.getCoreSession()\n+ScrollResult<String> scrollResult = session.scroll(nxql, 500, 60)\n+bucketCount = 0\n+documentCount = 0\n+\n+while (scrollResult.hasResults()) {\n+    documentCount += scrollResult.getResults().size()\n+    cache = new HashMap<IdRef>()\n+    for(id in scrollResult.getResults()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a455f292f864a07f7e93239027de1611254f891c"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2NTM4OTYxOnYy", "diffSide": "RIGHT", "path": "server/nuxeo-nxr-server/src/main/resources/templates/common-base/client/scripts/taskGC.groovy", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxMjoyNzoxNlrOGYJGTw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxMjoyNzoxNlrOGYJGTw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzk2ODA3OQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if(!cache.computeIfAbsent(workflowRef, session.&exists)) {\n          \n          \n            \n                    if (!cache.computeIfAbsent(workflowRef, session.&exists)) {", "url": "https://github.com/nuxeo/nuxeo/pull/4008#discussion_r427968079", "createdAt": "2020-05-20T12:27:16Z", "author": {"login": "troger"}, "path": "server/nuxeo-nxr-server/src/main/resources/templates/common-base/client/scripts/taskGC.groovy", "diffHunk": "@@ -0,0 +1,33 @@\n+import org.apache.logging.log4j.LogManager\n+import org.nuxeo.ecm.platform.task.Task\n+import org.nuxeo.ecm.core.api.IdRef\n+import org.nuxeo.ecm.core.api.ScrollResult\n+import org.nuxeo.runtime.transaction.TransactionHelper\n+import java.util.HashMap\n+\n+log = LogManager.getLogger(\"taskGC.groovy\")\n+nxql = \"SELECT * FROM Document WHERE ecm:mixinType = 'Task'\"\n+dryRun = true\n+session = Context.getCoreSession()\n+ScrollResult<String> scrollResult = session.scroll(nxql, 500, 60)\n+bucketCount = 0\n+documentCount = 0\n+\n+while (scrollResult.hasResults()) {\n+    documentCount += scrollResult.getResults().size()\n+    cache = new HashMap<IdRef>()\n+    for(id in scrollResult.getResults()) {\n+        task = session.getDocument(new IdRef(id)).getAdapter(Task.class)\n+        workflowRef = new IdRef(task.getProcessId())\n+        if(!cache.computeIfAbsent(workflowRef, session.&exists)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a455f292f864a07f7e93239027de1611254f891c"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2NTQwMTQ1OnYy", "diffSide": "RIGHT", "path": "server/nuxeo-nxr-server/src/main/resources/templates/common-base/client/scripts/taskGC.groovy", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxMjoyOTo1MVrOGYJNOQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxNToxMjo0NVrOGYQupQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzk2OTg0OQ==", "bodyText": "Either use it or just remove those variables.", "url": "https://github.com/nuxeo/nuxeo/pull/4008#discussion_r427969849", "createdAt": "2020-05-20T12:29:51Z", "author": {"login": "troger"}, "path": "server/nuxeo-nxr-server/src/main/resources/templates/common-base/client/scripts/taskGC.groovy", "diffHunk": "@@ -0,0 +1,33 @@\n+import org.apache.logging.log4j.LogManager\n+import org.nuxeo.ecm.platform.task.Task\n+import org.nuxeo.ecm.core.api.IdRef\n+import org.nuxeo.ecm.core.api.ScrollResult\n+import org.nuxeo.runtime.transaction.TransactionHelper\n+import java.util.HashMap\n+\n+log = LogManager.getLogger(\"taskGC.groovy\")\n+nxql = \"SELECT * FROM Document WHERE ecm:mixinType = 'Task'\"\n+dryRun = true\n+session = Context.getCoreSession()\n+ScrollResult<String> scrollResult = session.scroll(nxql, 500, 60)\n+bucketCount = 0\n+documentCount = 0", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a455f292f864a07f7e93239027de1611254f891c"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODAzMDgwMQ==", "bodyText": "Added a removedCount instead of bucketCount\nI log at the end:\nlog.info(\"removed {} out of {} tasks\", removedCount, documentCount)", "url": "https://github.com/nuxeo/nuxeo/pull/4008#discussion_r428030801", "createdAt": "2020-05-20T13:54:49Z", "author": {"login": "NourNuxeo"}, "path": "server/nuxeo-nxr-server/src/main/resources/templates/common-base/client/scripts/taskGC.groovy", "diffHunk": "@@ -0,0 +1,33 @@\n+import org.apache.logging.log4j.LogManager\n+import org.nuxeo.ecm.platform.task.Task\n+import org.nuxeo.ecm.core.api.IdRef\n+import org.nuxeo.ecm.core.api.ScrollResult\n+import org.nuxeo.runtime.transaction.TransactionHelper\n+import java.util.HashMap\n+\n+log = LogManager.getLogger(\"taskGC.groovy\")\n+nxql = \"SELECT * FROM Document WHERE ecm:mixinType = 'Task'\"\n+dryRun = true\n+session = Context.getCoreSession()\n+ScrollResult<String> scrollResult = session.scroll(nxql, 500, 60)\n+bucketCount = 0\n+documentCount = 0", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzk2OTg0OQ=="}, "originalCommit": {"oid": "a455f292f864a07f7e93239027de1611254f891c"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODA3NzkyMw==", "bodyText": "Name it taskCount maybe so? :p", "url": "https://github.com/nuxeo/nuxeo/pull/4008#discussion_r428077923", "createdAt": "2020-05-20T14:53:16Z", "author": {"login": "troger"}, "path": "server/nuxeo-nxr-server/src/main/resources/templates/common-base/client/scripts/taskGC.groovy", "diffHunk": "@@ -0,0 +1,33 @@\n+import org.apache.logging.log4j.LogManager\n+import org.nuxeo.ecm.platform.task.Task\n+import org.nuxeo.ecm.core.api.IdRef\n+import org.nuxeo.ecm.core.api.ScrollResult\n+import org.nuxeo.runtime.transaction.TransactionHelper\n+import java.util.HashMap\n+\n+log = LogManager.getLogger(\"taskGC.groovy\")\n+nxql = \"SELECT * FROM Document WHERE ecm:mixinType = 'Task'\"\n+dryRun = true\n+session = Context.getCoreSession()\n+ScrollResult<String> scrollResult = session.scroll(nxql, 500, 60)\n+bucketCount = 0\n+documentCount = 0", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzk2OTg0OQ=="}, "originalCommit": {"oid": "a455f292f864a07f7e93239027de1611254f891c"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODA5MzA5Mw==", "bodyText": "there you go", "url": "https://github.com/nuxeo/nuxeo/pull/4008#discussion_r428093093", "createdAt": "2020-05-20T15:12:45Z", "author": {"login": "NourNuxeo"}, "path": "server/nuxeo-nxr-server/src/main/resources/templates/common-base/client/scripts/taskGC.groovy", "diffHunk": "@@ -0,0 +1,33 @@\n+import org.apache.logging.log4j.LogManager\n+import org.nuxeo.ecm.platform.task.Task\n+import org.nuxeo.ecm.core.api.IdRef\n+import org.nuxeo.ecm.core.api.ScrollResult\n+import org.nuxeo.runtime.transaction.TransactionHelper\n+import java.util.HashMap\n+\n+log = LogManager.getLogger(\"taskGC.groovy\")\n+nxql = \"SELECT * FROM Document WHERE ecm:mixinType = 'Task'\"\n+dryRun = true\n+session = Context.getCoreSession()\n+ScrollResult<String> scrollResult = session.scroll(nxql, 500, 60)\n+bucketCount = 0\n+documentCount = 0", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzk2OTg0OQ=="}, "originalCommit": {"oid": "a455f292f864a07f7e93239027de1611254f891c"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2NTQwOTAzOnYy", "diffSide": "RIGHT", "path": "server/nuxeo-nxr-server/src/main/resources/templates/common-base/client/scripts/taskGC.groovy", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxMjozMTo1OVrOGYJSBQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxMjozMTo1OVrOGYJSBQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzk3MTA3Nw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        if(!dryRun) {\n          \n          \n            \n                        if (!dryRun) {", "url": "https://github.com/nuxeo/nuxeo/pull/4008#discussion_r427971077", "createdAt": "2020-05-20T12:31:59Z", "author": {"login": "troger"}, "path": "server/nuxeo-nxr-server/src/main/resources/templates/common-base/client/scripts/taskGC.groovy", "diffHunk": "@@ -0,0 +1,33 @@\n+import org.apache.logging.log4j.LogManager\n+import org.nuxeo.ecm.platform.task.Task\n+import org.nuxeo.ecm.core.api.IdRef\n+import org.nuxeo.ecm.core.api.ScrollResult\n+import org.nuxeo.runtime.transaction.TransactionHelper\n+import java.util.HashMap\n+\n+log = LogManager.getLogger(\"taskGC.groovy\")\n+nxql = \"SELECT * FROM Document WHERE ecm:mixinType = 'Task'\"\n+dryRun = true\n+session = Context.getCoreSession()\n+ScrollResult<String> scrollResult = session.scroll(nxql, 500, 60)\n+bucketCount = 0\n+documentCount = 0\n+\n+while (scrollResult.hasResults()) {\n+    documentCount += scrollResult.getResults().size()\n+    cache = new HashMap<IdRef>()\n+    for(id in scrollResult.getResults()) {\n+        task = session.getDocument(new IdRef(id)).getAdapter(Task.class)\n+        workflowRef = new IdRef(task.getProcessId())\n+        if(!cache.computeIfAbsent(workflowRef, session.&exists)) {\n+            log.info(\"removing orphan task \" + id)\n+            if(!dryRun) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a455f292f864a07f7e93239027de1611254f891c"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2NTQxMDg5OnYy", "diffSide": "RIGHT", "path": "server/nuxeo-nxr-server/src/main/resources/templates/common-base/client/scripts/taskGC.groovy", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxMjozMjozMVrOGYJTMA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxMzo1ODo0MFrOGYNI0Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzk3MTM3Ng==", "bodyText": "You are always logging this, dry run or not, it could be misleading while reading the logs :)", "url": "https://github.com/nuxeo/nuxeo/pull/4008#discussion_r427971376", "createdAt": "2020-05-20T12:32:31Z", "author": {"login": "troger"}, "path": "server/nuxeo-nxr-server/src/main/resources/templates/common-base/client/scripts/taskGC.groovy", "diffHunk": "@@ -0,0 +1,33 @@\n+import org.apache.logging.log4j.LogManager\n+import org.nuxeo.ecm.platform.task.Task\n+import org.nuxeo.ecm.core.api.IdRef\n+import org.nuxeo.ecm.core.api.ScrollResult\n+import org.nuxeo.runtime.transaction.TransactionHelper\n+import java.util.HashMap\n+\n+log = LogManager.getLogger(\"taskGC.groovy\")\n+nxql = \"SELECT * FROM Document WHERE ecm:mixinType = 'Task'\"\n+dryRun = true\n+session = Context.getCoreSession()\n+ScrollResult<String> scrollResult = session.scroll(nxql, 500, 60)\n+bucketCount = 0\n+documentCount = 0\n+\n+while (scrollResult.hasResults()) {\n+    documentCount += scrollResult.getResults().size()\n+    cache = new HashMap<IdRef>()\n+    for(id in scrollResult.getResults()) {\n+        task = session.getDocument(new IdRef(id)).getAdapter(Task.class)\n+        workflowRef = new IdRef(task.getProcessId())\n+        if(!cache.computeIfAbsent(workflowRef, session.&exists)) {\n+            log.info(\"removing orphan task \" + id)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a455f292f864a07f7e93239027de1611254f891c"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODAzNDI1Nw==", "bodyText": "Then I will do 2 different logs \"would remove...\" and since we have 2 explicit cases I now check dryRun rather than !dryRyn", "url": "https://github.com/nuxeo/nuxeo/pull/4008#discussion_r428034257", "createdAt": "2020-05-20T13:58:40Z", "author": {"login": "NourNuxeo"}, "path": "server/nuxeo-nxr-server/src/main/resources/templates/common-base/client/scripts/taskGC.groovy", "diffHunk": "@@ -0,0 +1,33 @@\n+import org.apache.logging.log4j.LogManager\n+import org.nuxeo.ecm.platform.task.Task\n+import org.nuxeo.ecm.core.api.IdRef\n+import org.nuxeo.ecm.core.api.ScrollResult\n+import org.nuxeo.runtime.transaction.TransactionHelper\n+import java.util.HashMap\n+\n+log = LogManager.getLogger(\"taskGC.groovy\")\n+nxql = \"SELECT * FROM Document WHERE ecm:mixinType = 'Task'\"\n+dryRun = true\n+session = Context.getCoreSession()\n+ScrollResult<String> scrollResult = session.scroll(nxql, 500, 60)\n+bucketCount = 0\n+documentCount = 0\n+\n+while (scrollResult.hasResults()) {\n+    documentCount += scrollResult.getResults().size()\n+    cache = new HashMap<IdRef>()\n+    for(id in scrollResult.getResults()) {\n+        task = session.getDocument(new IdRef(id)).getAdapter(Task.class)\n+        workflowRef = new IdRef(task.getProcessId())\n+        if(!cache.computeIfAbsent(workflowRef, session.&exists)) {\n+            log.info(\"removing orphan task \" + id)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzk3MTM3Ng=="}, "originalCommit": {"oid": "a455f292f864a07f7e93239027de1611254f891c"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2NjA5NTYzOnYy", "diffSide": "RIGHT", "path": "server/nuxeo-nxr-server/src/main/resources/templates/common-base/client/scripts/deleteOrphanTasks.groovy", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxNDo1NTo0MlrOGYP69Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxNToyMjoxNlrOGYRKGQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODA3OTg2MQ==", "bodyText": "This probably needs to be renamed, if it was to match the script name?", "url": "https://github.com/nuxeo/nuxeo/pull/4008#discussion_r428079861", "createdAt": "2020-05-20T14:55:42Z", "author": {"login": "troger"}, "path": "server/nuxeo-nxr-server/src/main/resources/templates/common-base/client/scripts/deleteOrphanTasks.groovy", "diffHunk": "@@ -0,0 +1,39 @@\n+import org.apache.logging.log4j.LogManager\n+import org.nuxeo.ecm.platform.task.Task\n+import org.nuxeo.ecm.core.api.IdRef\n+import org.nuxeo.ecm.core.api.ScrollResult\n+import org.nuxeo.runtime.transaction.TransactionHelper\n+import java.util.HashMap\n+\n+def log = LogManager.getLogger(\"taskGC.groovy\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "547ad04d66709304d92307555f1794058aa83e94"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODEwMDEyMQ==", "bodyText": "Yes, since it's a String and doesn't fail, I missed that one !", "url": "https://github.com/nuxeo/nuxeo/pull/4008#discussion_r428100121", "createdAt": "2020-05-20T15:22:16Z", "author": {"login": "NourNuxeo"}, "path": "server/nuxeo-nxr-server/src/main/resources/templates/common-base/client/scripts/deleteOrphanTasks.groovy", "diffHunk": "@@ -0,0 +1,39 @@\n+import org.apache.logging.log4j.LogManager\n+import org.nuxeo.ecm.platform.task.Task\n+import org.nuxeo.ecm.core.api.IdRef\n+import org.nuxeo.ecm.core.api.ScrollResult\n+import org.nuxeo.runtime.transaction.TransactionHelper\n+import java.util.HashMap\n+\n+def log = LogManager.getLogger(\"taskGC.groovy\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODA3OTg2MQ=="}, "originalCommit": {"oid": "547ad04d66709304d92307555f1794058aa83e94"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2NjE5NjgxOnYy", "diffSide": "RIGHT", "path": "server/nuxeo-nxr-server/src/main/resources/templates/common-base/client/scripts/deleteOrphanTasks.groovy", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxNToxNzo0MlrOGYQ9QQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxNToxNzo0MlrOGYQ9QQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODA5NjgzMw==", "bodyText": "You probably could merge both logs...\nlog.info(\"End deleting orphan tasks, removed {} out of {} tasks\", ...)", "url": "https://github.com/nuxeo/nuxeo/pull/4008#discussion_r428096833", "createdAt": "2020-05-20T15:17:42Z", "author": {"login": "troger"}, "path": "server/nuxeo-nxr-server/src/main/resources/templates/common-base/client/scripts/deleteOrphanTasks.groovy", "diffHunk": "@@ -0,0 +1,39 @@\n+import org.apache.logging.log4j.LogManager\n+import org.nuxeo.ecm.platform.task.Task\n+import org.nuxeo.ecm.core.api.IdRef\n+import org.nuxeo.ecm.core.api.ScrollResult\n+import org.nuxeo.runtime.transaction.TransactionHelper\n+import java.util.HashMap\n+\n+def log = LogManager.getLogger(\"taskGC.groovy\")\n+def nxql = \"SELECT * FROM Document WHERE ecm:mixinType = 'Task'\"\n+def dryRun = true\n+def session = Context.getCoreSession()\n+def ScrollResult<String> scrollResult = session.scroll(nxql, 500, 60)\n+def removedCount = 0\n+def taskCount = 0\n+\n+log.info(\"Starting deleting orphan tasks...\")\n+while (scrollResult.hasResults()) {\n+    taskCount += scrollResult.getResults().size()\n+    cache = new HashMap<IdRef>()\n+    for (id in scrollResult.getResults()) {\n+        task = session.getDocument(new IdRef(id)).getAdapter(Task.class)\n+        workflowRef = new IdRef(task.getProcessId())\n+        if (!cache.computeIfAbsent(workflowRef, session.&exists)) {\n+            if (dryRun) {\n+                log.info(\"would remove orphan task: {}\", id)\n+            } else {\n+                log.info(\"removing orphan task: {}\", id)\n+                session.removeDocument(new IdRef(id))\n+                removedCount += 1\n+            }\n+        }\n+    }\n+    scrollResult = session.scroll(scrollResult.getScrollId())\n+    TransactionHelper.commitOrRollbackTransaction()\n+    TransactionHelper.startTransaction()\n+}\n+\n+log.info(\"Finished deleting orphan tasks\")\n+log.info(\"removed {} out of {} tasks\", removedCount, taskCount)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1ebd18e046ef9671cf4a9b7aa39f84ef82c1ec8a"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2NjE5NzMwOnYy", "diffSide": "RIGHT", "path": "server/nuxeo-nxr-server/src/main/resources/templates/common-base/client/scripts/deleteOrphanTasks.groovy", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxNToxNzo0OFrOGYQ9jg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxNToxNzo0OFrOGYQ9jg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODA5NjkxMA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            log.info(\"would remove orphan task: {}\", id)\n          \n          \n            \n                            log.info(\"Would remove orphan task: {}\", id)", "url": "https://github.com/nuxeo/nuxeo/pull/4008#discussion_r428096910", "createdAt": "2020-05-20T15:17:48Z", "author": {"login": "troger"}, "path": "server/nuxeo-nxr-server/src/main/resources/templates/common-base/client/scripts/deleteOrphanTasks.groovy", "diffHunk": "@@ -0,0 +1,39 @@\n+import org.apache.logging.log4j.LogManager\n+import org.nuxeo.ecm.platform.task.Task\n+import org.nuxeo.ecm.core.api.IdRef\n+import org.nuxeo.ecm.core.api.ScrollResult\n+import org.nuxeo.runtime.transaction.TransactionHelper\n+import java.util.HashMap\n+\n+def log = LogManager.getLogger(\"taskGC.groovy\")\n+def nxql = \"SELECT * FROM Document WHERE ecm:mixinType = 'Task'\"\n+def dryRun = true\n+def session = Context.getCoreSession()\n+def ScrollResult<String> scrollResult = session.scroll(nxql, 500, 60)\n+def removedCount = 0\n+def taskCount = 0\n+\n+log.info(\"Starting deleting orphan tasks...\")\n+while (scrollResult.hasResults()) {\n+    taskCount += scrollResult.getResults().size()\n+    cache = new HashMap<IdRef>()\n+    for (id in scrollResult.getResults()) {\n+        task = session.getDocument(new IdRef(id)).getAdapter(Task.class)\n+        workflowRef = new IdRef(task.getProcessId())\n+        if (!cache.computeIfAbsent(workflowRef, session.&exists)) {\n+            if (dryRun) {\n+                log.info(\"would remove orphan task: {}\", id)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1ebd18e046ef9671cf4a9b7aa39f84ef82c1ec8a"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2NjE5NzkxOnYy", "diffSide": "RIGHT", "path": "server/nuxeo-nxr-server/src/main/resources/templates/common-base/client/scripts/deleteOrphanTasks.groovy", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxNToxNzo1NlrOGYQ98Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxNToxNzo1NlrOGYQ98Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODA5NzAwOQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            log.info(\"removing orphan task: {}\", id)\n          \n          \n            \n                            log.info(\"Removing orphan task: {}\", id)", "url": "https://github.com/nuxeo/nuxeo/pull/4008#discussion_r428097009", "createdAt": "2020-05-20T15:17:56Z", "author": {"login": "troger"}, "path": "server/nuxeo-nxr-server/src/main/resources/templates/common-base/client/scripts/deleteOrphanTasks.groovy", "diffHunk": "@@ -0,0 +1,39 @@\n+import org.apache.logging.log4j.LogManager\n+import org.nuxeo.ecm.platform.task.Task\n+import org.nuxeo.ecm.core.api.IdRef\n+import org.nuxeo.ecm.core.api.ScrollResult\n+import org.nuxeo.runtime.transaction.TransactionHelper\n+import java.util.HashMap\n+\n+def log = LogManager.getLogger(\"taskGC.groovy\")\n+def nxql = \"SELECT * FROM Document WHERE ecm:mixinType = 'Task'\"\n+def dryRun = true\n+def session = Context.getCoreSession()\n+def ScrollResult<String> scrollResult = session.scroll(nxql, 500, 60)\n+def removedCount = 0\n+def taskCount = 0\n+\n+log.info(\"Starting deleting orphan tasks...\")\n+while (scrollResult.hasResults()) {\n+    taskCount += scrollResult.getResults().size()\n+    cache = new HashMap<IdRef>()\n+    for (id in scrollResult.getResults()) {\n+        task = session.getDocument(new IdRef(id)).getAdapter(Task.class)\n+        workflowRef = new IdRef(task.getProcessId())\n+        if (!cache.computeIfAbsent(workflowRef, session.&exists)) {\n+            if (dryRun) {\n+                log.info(\"would remove orphan task: {}\", id)\n+            } else {\n+                log.info(\"removing orphan task: {}\", id)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1ebd18e046ef9671cf4a9b7aa39f84ef82c1ec8a"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2NjE5OTM4OnYy", "diffSide": "RIGHT", "path": "server/nuxeo-nxr-server/src/main/resources/templates/common-base/client/scripts/deleteOrphanTasks.groovy", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxNToxODoxNlrOGYQ-5Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxNTozMDozOVrOGYRjcg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODA5NzI1Mw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                cache = new HashMap<IdRef>()\n          \n          \n            \n                def cache = new HashMap<IdRef>()", "url": "https://github.com/nuxeo/nuxeo/pull/4008#discussion_r428097253", "createdAt": "2020-05-20T15:18:16Z", "author": {"login": "troger"}, "path": "server/nuxeo-nxr-server/src/main/resources/templates/common-base/client/scripts/deleteOrphanTasks.groovy", "diffHunk": "@@ -0,0 +1,39 @@\n+import org.apache.logging.log4j.LogManager\n+import org.nuxeo.ecm.platform.task.Task\n+import org.nuxeo.ecm.core.api.IdRef\n+import org.nuxeo.ecm.core.api.ScrollResult\n+import org.nuxeo.runtime.transaction.TransactionHelper\n+import java.util.HashMap\n+\n+def log = LogManager.getLogger(\"taskGC.groovy\")\n+def nxql = \"SELECT * FROM Document WHERE ecm:mixinType = 'Task'\"\n+def dryRun = true\n+def session = Context.getCoreSession()\n+def ScrollResult<String> scrollResult = session.scroll(nxql, 500, 60)\n+def removedCount = 0\n+def taskCount = 0\n+\n+log.info(\"Starting deleting orphan tasks...\")\n+while (scrollResult.hasResults()) {\n+    taskCount += scrollResult.getResults().size()\n+    cache = new HashMap<IdRef>()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1ebd18e046ef9671cf4a9b7aa39f84ef82c1ec8a"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODEwNjYxMA==", "bodyText": "Took the opportunity to declare cache in a groovy fashion and spare the Hashmap import", "url": "https://github.com/nuxeo/nuxeo/pull/4008#discussion_r428106610", "createdAt": "2020-05-20T15:30:39Z", "author": {"login": "NourNuxeo"}, "path": "server/nuxeo-nxr-server/src/main/resources/templates/common-base/client/scripts/deleteOrphanTasks.groovy", "diffHunk": "@@ -0,0 +1,39 @@\n+import org.apache.logging.log4j.LogManager\n+import org.nuxeo.ecm.platform.task.Task\n+import org.nuxeo.ecm.core.api.IdRef\n+import org.nuxeo.ecm.core.api.ScrollResult\n+import org.nuxeo.runtime.transaction.TransactionHelper\n+import java.util.HashMap\n+\n+def log = LogManager.getLogger(\"taskGC.groovy\")\n+def nxql = \"SELECT * FROM Document WHERE ecm:mixinType = 'Task'\"\n+def dryRun = true\n+def session = Context.getCoreSession()\n+def ScrollResult<String> scrollResult = session.scroll(nxql, 500, 60)\n+def removedCount = 0\n+def taskCount = 0\n+\n+log.info(\"Starting deleting orphan tasks...\")\n+while (scrollResult.hasResults()) {\n+    taskCount += scrollResult.getResults().size()\n+    cache = new HashMap<IdRef>()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODA5NzI1Mw=="}, "originalCommit": {"oid": "1ebd18e046ef9671cf4a9b7aa39f84ef82c1ec8a"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2NjIwMTEzOnYy", "diffSide": "RIGHT", "path": "server/nuxeo-nxr-server/src/main/resources/templates/common-base/client/scripts/deleteOrphanTasks.groovy", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxNToxODozOVrOGYRAAg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxNToxODozOVrOGYRAAg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODA5NzUzOA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    task = session.getDocument(new IdRef(id)).getAdapter(Task.class)\n          \n          \n            \n                    def task = session.getDocument(new IdRef(id)).getAdapter(Task.class)", "url": "https://github.com/nuxeo/nuxeo/pull/4008#discussion_r428097538", "createdAt": "2020-05-20T15:18:39Z", "author": {"login": "troger"}, "path": "server/nuxeo-nxr-server/src/main/resources/templates/common-base/client/scripts/deleteOrphanTasks.groovy", "diffHunk": "@@ -0,0 +1,39 @@\n+import org.apache.logging.log4j.LogManager\n+import org.nuxeo.ecm.platform.task.Task\n+import org.nuxeo.ecm.core.api.IdRef\n+import org.nuxeo.ecm.core.api.ScrollResult\n+import org.nuxeo.runtime.transaction.TransactionHelper\n+import java.util.HashMap\n+\n+def log = LogManager.getLogger(\"taskGC.groovy\")\n+def nxql = \"SELECT * FROM Document WHERE ecm:mixinType = 'Task'\"\n+def dryRun = true\n+def session = Context.getCoreSession()\n+def ScrollResult<String> scrollResult = session.scroll(nxql, 500, 60)\n+def removedCount = 0\n+def taskCount = 0\n+\n+log.info(\"Starting deleting orphan tasks...\")\n+while (scrollResult.hasResults()) {\n+    taskCount += scrollResult.getResults().size()\n+    cache = new HashMap<IdRef>()\n+    for (id in scrollResult.getResults()) {\n+        task = session.getDocument(new IdRef(id)).getAdapter(Task.class)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1ebd18e046ef9671cf4a9b7aa39f84ef82c1ec8a"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2NjIwMTg3OnYy", "diffSide": "RIGHT", "path": "server/nuxeo-nxr-server/src/main/resources/templates/common-base/client/scripts/deleteOrphanTasks.groovy", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxNToxODo0OFrOGYRAgg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxNToxODo0OFrOGYRAgg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODA5NzY2Ng==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    workflowRef = new IdRef(task.getProcessId())\n          \n          \n            \n                    def workflowRef = new IdRef(task.getProcessId())", "url": "https://github.com/nuxeo/nuxeo/pull/4008#discussion_r428097666", "createdAt": "2020-05-20T15:18:48Z", "author": {"login": "troger"}, "path": "server/nuxeo-nxr-server/src/main/resources/templates/common-base/client/scripts/deleteOrphanTasks.groovy", "diffHunk": "@@ -0,0 +1,39 @@\n+import org.apache.logging.log4j.LogManager\n+import org.nuxeo.ecm.platform.task.Task\n+import org.nuxeo.ecm.core.api.IdRef\n+import org.nuxeo.ecm.core.api.ScrollResult\n+import org.nuxeo.runtime.transaction.TransactionHelper\n+import java.util.HashMap\n+\n+def log = LogManager.getLogger(\"taskGC.groovy\")\n+def nxql = \"SELECT * FROM Document WHERE ecm:mixinType = 'Task'\"\n+def dryRun = true\n+def session = Context.getCoreSession()\n+def ScrollResult<String> scrollResult = session.scroll(nxql, 500, 60)\n+def removedCount = 0\n+def taskCount = 0\n+\n+log.info(\"Starting deleting orphan tasks...\")\n+while (scrollResult.hasResults()) {\n+    taskCount += scrollResult.getResults().size()\n+    cache = new HashMap<IdRef>()\n+    for (id in scrollResult.getResults()) {\n+        task = session.getDocument(new IdRef(id)).getAdapter(Task.class)\n+        workflowRef = new IdRef(task.getProcessId())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1ebd18e046ef9671cf4a9b7aa39f84ef82c1ec8a"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4ODYyODc1OnYy", "diffSide": "RIGHT", "path": "server/nuxeo-nxr-server/src/main/resources/templates/common-base/client/scripts/deleteOrphanTasks.groovy", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQwODoyMDo1MFrOGbqnxw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxMDowMTo0OFrOGe-ssg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTY2MzA0Nw==", "bodyText": "Shouldn't we re-start the transaction before doing a new scroll?", "url": "https://github.com/nuxeo/nuxeo/pull/4008#discussion_r431663047", "createdAt": "2020-05-28T08:20:50Z", "author": {"login": "troger"}, "path": "server/nuxeo-nxr-server/src/main/resources/templates/common-base/client/scripts/deleteOrphanTasks.groovy", "diffHunk": "@@ -0,0 +1,37 @@\n+import org.apache.logging.log4j.LogManager\n+import org.nuxeo.ecm.platform.task.Task\n+import org.nuxeo.ecm.core.api.IdRef\n+import org.nuxeo.ecm.core.api.ScrollResult\n+import org.nuxeo.runtime.transaction.TransactionHelper\n+\n+def log = LogManager.getLogger(\"deleteOrphanTasks.groovy\")\n+def nxql = \"SELECT * FROM Document WHERE ecm:mixinType = 'Task'\"\n+def dryRun = true\n+def session = Context.getCoreSession()\n+def ScrollResult<String> scrollResult = session.scroll(nxql, 500, 60)\n+def removedCount = 0\n+def taskCount = 0\n+\n+log.info(\"Starting deleting orphan tasks...\")\n+while (scrollResult.hasResults()) {\n+    taskCount += scrollResult.getResults().size()\n+    def cache = [:]\n+    for (id in scrollResult.getResults()) {\n+        def task = session.getDocument(new IdRef(id)).getAdapter(Task.class)\n+        def workflowRef = new IdRef(task.getProcessId())\n+        if (!cache.computeIfAbsent(workflowRef, session.&exists)) {\n+            if (dryRun) {\n+                log.info(\"Would remove orphan task: {}\", id)\n+            } else {\n+                log.info(\"Removing orphan task: {}\", id)\n+                session.removeDocument(new IdRef(id))\n+                removedCount += 1\n+            }\n+        }\n+    }\n+    scrollResult = session.scroll(scrollResult.getScrollId())\n+    TransactionHelper.commitOrRollbackTransaction()\n+    TransactionHelper.startTransaction()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f54b65fe4cda0a66e4357dce4c373b92790fd34a"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTY4NDYyOA==", "bodyText": "This is how it's done in org.nuxeo.ecm.core.BatchFinderWork.work() lines 88-90 (the code is old though)\nShouldn't the scroll be a snapshot that shouldn't be affected by the transaction ?", "url": "https://github.com/nuxeo/nuxeo/pull/4008#discussion_r431684628", "createdAt": "2020-05-28T08:56:38Z", "author": {"login": "NourNuxeo"}, "path": "server/nuxeo-nxr-server/src/main/resources/templates/common-base/client/scripts/deleteOrphanTasks.groovy", "diffHunk": "@@ -0,0 +1,37 @@\n+import org.apache.logging.log4j.LogManager\n+import org.nuxeo.ecm.platform.task.Task\n+import org.nuxeo.ecm.core.api.IdRef\n+import org.nuxeo.ecm.core.api.ScrollResult\n+import org.nuxeo.runtime.transaction.TransactionHelper\n+\n+def log = LogManager.getLogger(\"deleteOrphanTasks.groovy\")\n+def nxql = \"SELECT * FROM Document WHERE ecm:mixinType = 'Task'\"\n+def dryRun = true\n+def session = Context.getCoreSession()\n+def ScrollResult<String> scrollResult = session.scroll(nxql, 500, 60)\n+def removedCount = 0\n+def taskCount = 0\n+\n+log.info(\"Starting deleting orphan tasks...\")\n+while (scrollResult.hasResults()) {\n+    taskCount += scrollResult.getResults().size()\n+    def cache = [:]\n+    for (id in scrollResult.getResults()) {\n+        def task = session.getDocument(new IdRef(id)).getAdapter(Task.class)\n+        def workflowRef = new IdRef(task.getProcessId())\n+        if (!cache.computeIfAbsent(workflowRef, session.&exists)) {\n+            if (dryRun) {\n+                log.info(\"Would remove orphan task: {}\", id)\n+            } else {\n+                log.info(\"Removing orphan task: {}\", id)\n+                session.removeDocument(new IdRef(id))\n+                removedCount += 1\n+            }\n+        }\n+    }\n+    scrollResult = session.scroll(scrollResult.getScrollId())\n+    TransactionHelper.commitOrRollbackTransaction()\n+    TransactionHelper.startTransaction()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTY2MzA0Nw=="}, "originalCommit": {"oid": "f54b65fe4cda0a66e4357dce4c373b92790fd34a"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTEzNzcxNA==", "bodyText": "Tested it with a 1 bucket size and 2 tasks. Seems to be ok but in doubt i swapped the lines", "url": "https://github.com/nuxeo/nuxeo/pull/4008#discussion_r435137714", "createdAt": "2020-06-04T10:01:48Z", "author": {"login": "NourNuxeo"}, "path": "server/nuxeo-nxr-server/src/main/resources/templates/common-base/client/scripts/deleteOrphanTasks.groovy", "diffHunk": "@@ -0,0 +1,37 @@\n+import org.apache.logging.log4j.LogManager\n+import org.nuxeo.ecm.platform.task.Task\n+import org.nuxeo.ecm.core.api.IdRef\n+import org.nuxeo.ecm.core.api.ScrollResult\n+import org.nuxeo.runtime.transaction.TransactionHelper\n+\n+def log = LogManager.getLogger(\"deleteOrphanTasks.groovy\")\n+def nxql = \"SELECT * FROM Document WHERE ecm:mixinType = 'Task'\"\n+def dryRun = true\n+def session = Context.getCoreSession()\n+def ScrollResult<String> scrollResult = session.scroll(nxql, 500, 60)\n+def removedCount = 0\n+def taskCount = 0\n+\n+log.info(\"Starting deleting orphan tasks...\")\n+while (scrollResult.hasResults()) {\n+    taskCount += scrollResult.getResults().size()\n+    def cache = [:]\n+    for (id in scrollResult.getResults()) {\n+        def task = session.getDocument(new IdRef(id)).getAdapter(Task.class)\n+        def workflowRef = new IdRef(task.getProcessId())\n+        if (!cache.computeIfAbsent(workflowRef, session.&exists)) {\n+            if (dryRun) {\n+                log.info(\"Would remove orphan task: {}\", id)\n+            } else {\n+                log.info(\"Removing orphan task: {}\", id)\n+                session.removeDocument(new IdRef(id))\n+                removedCount += 1\n+            }\n+        }\n+    }\n+    scrollResult = session.scroll(scrollResult.getScrollId())\n+    TransactionHelper.commitOrRollbackTransaction()\n+    TransactionHelper.startTransaction()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTY2MzA0Nw=="}, "originalCommit": {"oid": "f54b65fe4cda0a66e4357dce4c373b92790fd34a"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyMDQ2NTI1OnYy", "diffSide": "RIGHT", "path": "server/nuxeo-nxr-server/src/main/resources/templates/common-base/client/scripts/deleteOrphanTasks.groovy", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxMzoyMToyN1rOGgdt-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxNDo1MzowM1rOGgiUxA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjY5NDUyMg==", "bodyText": "Should be outside the while as we may want to reuse the cache when scrolling.", "url": "https://github.com/nuxeo/nuxeo/pull/4008#discussion_r436694522", "createdAt": "2020-06-08T13:21:27Z", "author": {"login": "troger"}, "path": "server/nuxeo-nxr-server/src/main/resources/templates/common-base/client/scripts/deleteOrphanTasks.groovy", "diffHunk": "@@ -0,0 +1,37 @@\n+import org.apache.logging.log4j.LogManager\n+import org.nuxeo.ecm.platform.task.Task\n+import org.nuxeo.ecm.core.api.IdRef\n+import org.nuxeo.ecm.core.api.ScrollResult\n+import org.nuxeo.runtime.transaction.TransactionHelper\n+\n+def log = LogManager.getLogger(\"deleteOrphanTasks.groovy\")\n+def nxql = \"SELECT * FROM Document WHERE ecm:mixinType = 'Task'\"\n+def dryRun = true\n+def session = Context.getCoreSession()\n+def ScrollResult<String> scrollResult = session.scroll(nxql, 500, 60)\n+def removedCount = 0\n+def taskCount = 0\n+\n+log.info(\"Starting deleting orphan tasks...\")\n+while (scrollResult.hasResults()) {\n+    taskCount += scrollResult.getResults().size()\n+    def cache = [:]", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bcbd4b29bf6ab24ea93412f006b83e668da3939b"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjc2OTk4OA==", "bodyText": "doh", "url": "https://github.com/nuxeo/nuxeo/pull/4008#discussion_r436769988", "createdAt": "2020-06-08T14:53:03Z", "author": {"login": "NourNuxeo"}, "path": "server/nuxeo-nxr-server/src/main/resources/templates/common-base/client/scripts/deleteOrphanTasks.groovy", "diffHunk": "@@ -0,0 +1,37 @@\n+import org.apache.logging.log4j.LogManager\n+import org.nuxeo.ecm.platform.task.Task\n+import org.nuxeo.ecm.core.api.IdRef\n+import org.nuxeo.ecm.core.api.ScrollResult\n+import org.nuxeo.runtime.transaction.TransactionHelper\n+\n+def log = LogManager.getLogger(\"deleteOrphanTasks.groovy\")\n+def nxql = \"SELECT * FROM Document WHERE ecm:mixinType = 'Task'\"\n+def dryRun = true\n+def session = Context.getCoreSession()\n+def ScrollResult<String> scrollResult = session.scroll(nxql, 500, 60)\n+def removedCount = 0\n+def taskCount = 0\n+\n+log.info(\"Starting deleting orphan tasks...\")\n+while (scrollResult.hasResults()) {\n+    taskCount += scrollResult.getResults().size()\n+    def cache = [:]", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjY5NDUyMg=="}, "originalCommit": {"oid": "bcbd4b29bf6ab24ea93412f006b83e668da3939b"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyMzg1NDI5OnYy", "diffSide": "RIGHT", "path": "server/nuxeo-nxr-server/src/main/resources/templates/common-base/client/scripts/deleteOrphanTasks.groovy", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQwODozMzo1NFrOGg-gjg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQwODozMzo1NFrOGg-gjg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzIzMTc1OA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            log.info(\"Starting deleting orphan tasks...\")\n          \n          \n            \n            log.info(\"Start deleting orphan tasks...\")", "url": "https://github.com/nuxeo/nuxeo/pull/4008#discussion_r437231758", "createdAt": "2020-06-09T08:33:54Z", "author": {"login": "ataillefer"}, "path": "server/nuxeo-nxr-server/src/main/resources/templates/common-base/client/scripts/deleteOrphanTasks.groovy", "diffHunk": "@@ -0,0 +1,37 @@\n+import org.apache.logging.log4j.LogManager\n+import org.nuxeo.ecm.platform.task.Task\n+import org.nuxeo.ecm.core.api.IdRef\n+import org.nuxeo.ecm.core.api.ScrollResult\n+import org.nuxeo.runtime.transaction.TransactionHelper\n+\n+def log = LogManager.getLogger(\"deleteOrphanTasks.groovy\")\n+def nxql = \"SELECT * FROM Document WHERE ecm:mixinType = 'Task'\"\n+def dryRun = true\n+def session = Context.getCoreSession()\n+def ScrollResult<String> scrollResult = session.scroll(nxql, 500, 60)\n+def removedCount = 0\n+def taskCount = 0\n+def cache = [:]\n+\n+log.info(\"Starting deleting orphan tasks...\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "60f843918ec32efa03c4992dc0fbf859c85ad9db"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyMzg1NjEwOnYy", "diffSide": "RIGHT", "path": "server/nuxeo-nxr-server/src/main/resources/templates/common-base/client/scripts/deleteOrphanTasks.groovy", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQwODozNDoyNFrOGg-hwQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQwODozNDoyNFrOGg-hwQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzIzMjA2NQ==", "bodyText": "scrollResult.getResults() could be in a variable", "url": "https://github.com/nuxeo/nuxeo/pull/4008#discussion_r437232065", "createdAt": "2020-06-09T08:34:24Z", "author": {"login": "ataillefer"}, "path": "server/nuxeo-nxr-server/src/main/resources/templates/common-base/client/scripts/deleteOrphanTasks.groovy", "diffHunk": "@@ -0,0 +1,37 @@\n+import org.apache.logging.log4j.LogManager\n+import org.nuxeo.ecm.platform.task.Task\n+import org.nuxeo.ecm.core.api.IdRef\n+import org.nuxeo.ecm.core.api.ScrollResult\n+import org.nuxeo.runtime.transaction.TransactionHelper\n+\n+def log = LogManager.getLogger(\"deleteOrphanTasks.groovy\")\n+def nxql = \"SELECT * FROM Document WHERE ecm:mixinType = 'Task'\"\n+def dryRun = true\n+def session = Context.getCoreSession()\n+def ScrollResult<String> scrollResult = session.scroll(nxql, 500, 60)\n+def removedCount = 0\n+def taskCount = 0\n+def cache = [:]\n+\n+log.info(\"Starting deleting orphan tasks...\")\n+while (scrollResult.hasResults()) {\n+    taskCount += scrollResult.getResults().size()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "60f843918ec32efa03c4992dc0fbf859c85ad9db"}, "originalPosition": 18}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4219, "cost": 1, "resetAt": "2021-11-03T18:41:40Z"}}}