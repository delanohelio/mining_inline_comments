{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDcyOTczOTE0", "number": 4272, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQxMjoyMjoyOFrOEcCxAw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxNzoxNTozMlrOEd0_ig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk3ODQwODk5OnYy", "diffSide": "RIGHT", "path": "modules/core/nuxeo-core-schema/src/main/java/org/nuxeo/ecm/core/schema/TypeService.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQxMjoyMjoyOFrOHGVg3w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQxMzozODowMFrOHGYfYA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjQwNTk4Mw==", "bodyText": "To remove?", "url": "https://github.com/nuxeo/nuxeo/pull/4272#discussion_r476405983", "createdAt": "2020-08-25T12:22:28Z", "author": {"login": "kevinleturc"}, "path": "modules/core/nuxeo-core-schema/src/main/java/org/nuxeo/ecm/core/schema/TypeService.java", "diffHunk": "@@ -20,12 +20,16 @@\n package org.nuxeo.ecm.core.schema;\n \n import org.nuxeo.runtime.RuntimeMessage.Level;\n+import org.nuxeo.runtime.RuntimeMessage.Source;\n import org.nuxeo.runtime.RuntimeServiceException;\n import org.nuxeo.runtime.logging.DeprecationLogger;\n import org.nuxeo.runtime.model.ComponentContext;\n import org.nuxeo.runtime.model.ComponentInstance;\n+import org.nuxeo.runtime.model.ComponentName;\n import org.nuxeo.runtime.model.DefaultComponent;\n \n+import jnr.ffi.Struct.socklen_t;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0ce2f522bcf83d8fd4a9d6a6e8707456b8f3b1a2"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjQ1NDc1Mg==", "bodyText": "oops \ud83d\udc4d", "url": "https://github.com/nuxeo/nuxeo/pull/4272#discussion_r476454752", "createdAt": "2020-08-25T13:38:00Z", "author": {"login": "atchertchian"}, "path": "modules/core/nuxeo-core-schema/src/main/java/org/nuxeo/ecm/core/schema/TypeService.java", "diffHunk": "@@ -20,12 +20,16 @@\n package org.nuxeo.ecm.core.schema;\n \n import org.nuxeo.runtime.RuntimeMessage.Level;\n+import org.nuxeo.runtime.RuntimeMessage.Source;\n import org.nuxeo.runtime.RuntimeServiceException;\n import org.nuxeo.runtime.logging.DeprecationLogger;\n import org.nuxeo.runtime.model.ComponentContext;\n import org.nuxeo.runtime.model.ComponentInstance;\n+import org.nuxeo.runtime.model.ComponentName;\n import org.nuxeo.runtime.model.DefaultComponent;\n \n+import jnr.ffi.Struct.socklen_t;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjQwNTk4Mw=="}, "originalCommit": {"oid": "0ce2f522bcf83d8fd4a9d6a6e8707456b8f3b1a2"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk3ODQ1MjUzOnYy", "diffSide": "RIGHT", "path": "modules/core/nuxeo-core-schema/src/main/java/org/nuxeo/ecm/core/schema/TypeService.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQxMjozNDoyOVrOHGV7FQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQxNDozMToxMlrOHGa9uQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjQxMjY5Mw==", "bodyText": "Spurious import", "url": "https://github.com/nuxeo/nuxeo/pull/4272#discussion_r476412693", "createdAt": "2020-08-25T12:34:29Z", "author": {"login": "efge"}, "path": "modules/core/nuxeo-core-schema/src/main/java/org/nuxeo/ecm/core/schema/TypeService.java", "diffHunk": "@@ -20,12 +20,16 @@\n package org.nuxeo.ecm.core.schema;\n \n import org.nuxeo.runtime.RuntimeMessage.Level;\n+import org.nuxeo.runtime.RuntimeMessage.Source;\n import org.nuxeo.runtime.RuntimeServiceException;\n import org.nuxeo.runtime.logging.DeprecationLogger;\n import org.nuxeo.runtime.model.ComponentContext;\n import org.nuxeo.runtime.model.ComponentInstance;\n+import org.nuxeo.runtime.model.ComponentName;\n import org.nuxeo.runtime.model.DefaultComponent;\n \n+import jnr.ffi.Struct.socklen_t;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7f481653b2d46cd6d85806ed0f3228f330328539"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjQ5NTI4OQ==", "bodyText": "Thanks, already fixed (spotted by Kevin above too)", "url": "https://github.com/nuxeo/nuxeo/pull/4272#discussion_r476495289", "createdAt": "2020-08-25T14:31:12Z", "author": {"login": "atchertchian"}, "path": "modules/core/nuxeo-core-schema/src/main/java/org/nuxeo/ecm/core/schema/TypeService.java", "diffHunk": "@@ -20,12 +20,16 @@\n package org.nuxeo.ecm.core.schema;\n \n import org.nuxeo.runtime.RuntimeMessage.Level;\n+import org.nuxeo.runtime.RuntimeMessage.Source;\n import org.nuxeo.runtime.RuntimeServiceException;\n import org.nuxeo.runtime.logging.DeprecationLogger;\n import org.nuxeo.runtime.model.ComponentContext;\n import org.nuxeo.runtime.model.ComponentInstance;\n+import org.nuxeo.runtime.model.ComponentName;\n import org.nuxeo.runtime.model.DefaultComponent;\n \n+import jnr.ffi.Struct.socklen_t;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjQxMjY5Mw=="}, "originalCommit": {"oid": "7f481653b2d46cd6d85806ed0f3228f330328539"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5NzExMTQ5OnYy", "diffSide": "RIGHT", "path": "modules/runtime/nuxeo-runtime/src/main/java/org/nuxeo/runtime/RuntimeMessage.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxNzoxMTozMVrOHJOR0A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQwNzozNzoxMlrOHJt45w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQzMzE2OA==", "bodyText": "Could we deprecate this constructor?\nFurthermore, can we pass CODE as source and this class name as sourceId to avoid future check on these fields due to deprecation?", "url": "https://github.com/nuxeo/nuxeo/pull/4272#discussion_r479433168", "createdAt": "2020-08-28T17:11:31Z", "author": {"login": "kevinleturc"}, "path": "modules/runtime/nuxeo-runtime/src/main/java/org/nuxeo/runtime/RuntimeMessage.java", "diffHunk": "@@ -32,9 +32,19 @@\n \n     protected final String message;\n \n-    public RuntimeMessage(Level level, String message) {\n+    protected final Source source;\n+\n+    protected final String sourceId;\n+\n+    public RuntimeMessage(Level level, String message, Source source, String sourceId) {\n         this.level = level;\n         this.message = message;\n+        this.source = source;\n+        this.sourceId = sourceId;\n+    }\n+\n+    public RuntimeMessage(Level level, String message) {\n+        this(level, message, null, null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c9e0770002ed355adc4c0599d8d01ec9ecb458b0"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTk1MTA3OQ==", "bodyText": "I removed the constructor since it was introduced recently.\nI added an unknown source and fallback values for getters to avoid dealing with null values.", "url": "https://github.com/nuxeo/nuxeo/pull/4272#discussion_r479951079", "createdAt": "2020-08-31T07:37:12Z", "author": {"login": "atchertchian"}, "path": "modules/runtime/nuxeo-runtime/src/main/java/org/nuxeo/runtime/RuntimeMessage.java", "diffHunk": "@@ -32,9 +32,19 @@\n \n     protected final String message;\n \n-    public RuntimeMessage(Level level, String message) {\n+    protected final Source source;\n+\n+    protected final String sourceId;\n+\n+    public RuntimeMessage(Level level, String message, Source source, String sourceId) {\n         this.level = level;\n         this.message = message;\n+        this.source = source;\n+        this.sourceId = sourceId;\n+    }\n+\n+    public RuntimeMessage(Level level, String message) {\n+        this(level, message, null, null);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQzMzE2OA=="}, "originalCommit": {"oid": "c9e0770002ed355adc4c0599d8d01ec9ecb458b0"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5NzExMzE1OnYy", "diffSide": "RIGHT", "path": "modules/runtime/nuxeo-runtime/src/main/java/org/nuxeo/runtime/AbstractRuntimeService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxNzoxMjowMVrOHJOSyg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxNzoxMjowMVrOHJOSyg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQzMzQxOA==", "bodyText": "Extra line.", "url": "https://github.com/nuxeo/nuxeo/pull/4272#discussion_r479433418", "createdAt": "2020-08-28T17:12:01Z", "author": {"login": "kevinleturc"}, "path": "modules/runtime/nuxeo-runtime/src/main/java/org/nuxeo/runtime/AbstractRuntimeService.java", "diffHunk": "@@ -131,6 +134,7 @@ public synchronized void start() {\n         try {\n             loadConfig();\n         } catch (IOException e) {\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c9e0770002ed355adc4c0599d8d01ec9ecb458b0"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5NzExOTAyOnYy", "diffSide": "RIGHT", "path": "modules/runtime/nuxeo-runtime/src/main/java/org/nuxeo/runtime/AbstractRuntimeService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxNzoxNDowMVrOHJOWlA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxNzoxNDowMVrOHJOWlA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQzNDM4OA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                      org.nuxeo.runtime.RuntimeMessage.Level.ERROR, err, Source.DEPLOYMENT, null)));\n          \n          \n            \n                                      RuntimeMessage.Level.ERROR, err, Source.DEPLOYMENT, \"org.nuxeo.runtime.deployment.preprocessor.DeploymentPreprocessor\")));\n          \n      \n    \n    \n  \n\n?", "url": "https://github.com/nuxeo/nuxeo/pull/4272#discussion_r479434388", "createdAt": "2020-08-28T17:14:01Z", "author": {"login": "kevinleturc"}, "path": "modules/runtime/nuxeo-runtime/src/main/java/org/nuxeo/runtime/AbstractRuntimeService.java", "diffHunk": "@@ -99,7 +100,9 @@ protected AbstractRuntimeService(DefaultRuntimeContext context, Map<String, Stri\n         // get errors set by NuxeoDeployer\n         String errs = System.getProperty(\"org.nuxeo.runtime.deployment.errors\");\n         if (errs != null) {\n-            Arrays.asList(errs.split(\"\\n\")).forEach(err -> messageHandler.addMessage(RuntimeMessage.Level.ERROR, err));\n+            Arrays.asList(errs.split(\"\\n\"))\n+                  .forEach(err -> messageHandler.addMessage(new RuntimeMessage(\n+                          org.nuxeo.runtime.RuntimeMessage.Level.ERROR, err, Source.DEPLOYMENT, null)));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c9e0770002ed355adc4c0599d8d01ec9ecb458b0"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5NzEyMzk0OnYy", "diffSide": "RIGHT", "path": "modules/runtime/nuxeo-runtime-test/src/test/java/org/nuxeo/runtime/RuntimeInitializationTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxNzoxNTozMlrOHJOZhQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxNzoxNTozMlrOHJOZhQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQzNTE0MQ==", "bodyText": "Why not giving just the Source?", "url": "https://github.com/nuxeo/nuxeo/pull/4272#discussion_r479435141", "createdAt": "2020-08-28T17:15:32Z", "author": {"login": "kevinleturc"}, "path": "modules/runtime/nuxeo-runtime-test/src/test/java/org/nuxeo/runtime/RuntimeInitializationTest.java", "diffHunk": "@@ -53,13 +56,26 @@ public void testContributions() {\n \n     protected void checkDupe(boolean detected) {\n         List<String> errors = Framework.getRuntime().getMessageHandler().getMessages(Level.ERROR);\n+        List<RuntimeMessage> errorMessages = Framework.getRuntime().getMessageHandler().getRuntimeMessages(Level.ERROR);\n         if (detected) {\n             assertEquals(List.of(\"Duplicate component name: service:my.comp2\"), errors);\n+            assertEquals(List.of(Source.COMPONENT),\n+                    errorMessages.stream().map(RuntimeMessage::getSource).collect(Collectors.toList()));\n+            assertEquals(List.of(\"my.comp2\"),\n+                    errorMessages.stream().map(RuntimeMessage::getSourceId).collect(Collectors.toList()));\n         } else {\n             assertTrue(errors.isEmpty());\n         }\n     }\n \n+    protected void checkErrorSource(boolean fromExtension) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c9e0770002ed355adc4c0599d8d01ec9ecb458b0"}, "originalPosition": 35}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4356, "cost": 1, "resetAt": "2021-11-03T18:41:40Z"}}}