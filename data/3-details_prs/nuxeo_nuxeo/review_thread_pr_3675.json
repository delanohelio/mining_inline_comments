{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY0MTIwNDY4", "number": 3675, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QxMzowMDoxNlrODYz08w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QxNDozOTowMlrODY1j6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3MzQxNTU1OnYy", "diffSide": "RIGHT", "path": "nuxeo-core/nuxeo-core-mongodb/src/test/java/org/nuxeo/ecm/core/mongodb/TestMongoDBIndices.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QxMzowMDoxNlrOFe4RGA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QxNDowODowNFrOFe6ATg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzkyMzQ4MA==", "bodyText": "This is too complex, we don't care about the detailed format of the human-readable message that MongoDB returns. Just check for presence of \"E11000 duplicate key error\" and the folder id, and avoid all this complexity (which looks way too much like white-box testing).", "url": "https://github.com/nuxeo/nuxeo/pull/3675#discussion_r367923480", "createdAt": "2020-01-17T13:00:16Z", "author": {"login": "efge"}, "path": "nuxeo-core/nuxeo-core-mongodb/src/test/java/org/nuxeo/ecm/core/mongodb/TestMongoDBIndices.java", "diffHunk": "@@ -83,11 +84,13 @@ public void shouldFailWhenCreatingExistingChildNameDocument() {\n             fail(\"should throw a ConcurrentUpdateException\");\n         } catch (ConcurrentUpdateException cue) {\n             assertEquals(SC_CONFLICT, cue.getStatusCode());\n+            String mongoDBName = Framework.getProperties().getProperty(MONGODB_DBNAME_PROPERTY);\n             assertTrue(\n                     cue.getMessage()\n                        .contains(String.format(\n                                \"E11000 duplicate key error collection: %s.test index: ecm:parentId_1_ecm:name_1 dup key: { : \\\"%s\\\", : \\\"%s\\\" }\",\n-                               DEFAULT_MONGODB_DBNAME, folder.getId(), DOCUMENT_NAME)));\n+                               mongoDBName, folder.getId(), DOCUMENT_NAME)));\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2635f1ad7c3810adba803f3a620b831825e40fd5"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzk1MTk1MA==", "bodyText": "this is  what i did on the first dev, but i changed because most of times on our tests we check the whole message. but i will change  it to keep it more simple and readable :)", "url": "https://github.com/nuxeo/nuxeo/pull/3675#discussion_r367951950", "createdAt": "2020-01-17T14:08:04Z", "author": {"login": "RSalem07"}, "path": "nuxeo-core/nuxeo-core-mongodb/src/test/java/org/nuxeo/ecm/core/mongodb/TestMongoDBIndices.java", "diffHunk": "@@ -83,11 +84,13 @@ public void shouldFailWhenCreatingExistingChildNameDocument() {\n             fail(\"should throw a ConcurrentUpdateException\");\n         } catch (ConcurrentUpdateException cue) {\n             assertEquals(SC_CONFLICT, cue.getStatusCode());\n+            String mongoDBName = Framework.getProperties().getProperty(MONGODB_DBNAME_PROPERTY);\n             assertTrue(\n                     cue.getMessage()\n                        .contains(String.format(\n                                \"E11000 duplicate key error collection: %s.test index: ecm:parentId_1_ecm:name_1 dup key: { : \\\"%s\\\", : \\\"%s\\\" }\",\n-                               DEFAULT_MONGODB_DBNAME, folder.getId(), DOCUMENT_NAME)));\n+                               mongoDBName, folder.getId(), DOCUMENT_NAME)));\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzkyMzQ4MA=="}, "originalCommit": {"oid": "2635f1ad7c3810adba803f3a620b831825e40fd5"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3MzUzMjQwOnYy", "diffSide": "RIGHT", "path": "nuxeo-core/nuxeo-core-mongodb/src/test/java/org/nuxeo/ecm/core/mongodb/TestMongoDBIndices.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QxMzo0NToxNlrOFe5Xkw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QxNDoxNzozMlrOFe6SGg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzk0MTUyMw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        String mongoDBName = Framework.getProperties().getProperty(MONGODB_DBNAME_PROPERTY);\n          \n          \n            \n                        String mongoDBName = Framework.getProperty(MONGODB_DBNAME_PROPERTY);\n          \n      \n    \n    \n  \n\nno?", "url": "https://github.com/nuxeo/nuxeo/pull/3675#discussion_r367941523", "createdAt": "2020-01-17T13:45:16Z", "author": {"login": "ataillefer"}, "path": "nuxeo-core/nuxeo-core-mongodb/src/test/java/org/nuxeo/ecm/core/mongodb/TestMongoDBIndices.java", "diffHunk": "@@ -83,11 +84,13 @@ public void shouldFailWhenCreatingExistingChildNameDocument() {\n             fail(\"should throw a ConcurrentUpdateException\");\n         } catch (ConcurrentUpdateException cue) {\n             assertEquals(SC_CONFLICT, cue.getStatusCode());\n+            String mongoDBName = Framework.getProperties().getProperty(MONGODB_DBNAME_PROPERTY);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2635f1ad7c3810adba803f3a620b831825e40fd5"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzk1MTI4NQ==", "bodyText": "yep i just copied/past the code that was on MongoDBFeature", "url": "https://github.com/nuxeo/nuxeo/pull/3675#discussion_r367951285", "createdAt": "2020-01-17T14:06:40Z", "author": {"login": "RSalem07"}, "path": "nuxeo-core/nuxeo-core-mongodb/src/test/java/org/nuxeo/ecm/core/mongodb/TestMongoDBIndices.java", "diffHunk": "@@ -83,11 +84,13 @@ public void shouldFailWhenCreatingExistingChildNameDocument() {\n             fail(\"should throw a ConcurrentUpdateException\");\n         } catch (ConcurrentUpdateException cue) {\n             assertEquals(SC_CONFLICT, cue.getStatusCode());\n+            String mongoDBName = Framework.getProperties().getProperty(MONGODB_DBNAME_PROPERTY);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzk0MTUyMw=="}, "originalCommit": {"oid": "2635f1ad7c3810adba803f3a620b831825e40fd5"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzk1NjUwNg==", "bodyText": "to keep the things simple/more readable i took #3675 (comment) into account which removes the dependency to Framework.getProp...", "url": "https://github.com/nuxeo/nuxeo/pull/3675#discussion_r367956506", "createdAt": "2020-01-17T14:17:32Z", "author": {"login": "RSalem07"}, "path": "nuxeo-core/nuxeo-core-mongodb/src/test/java/org/nuxeo/ecm/core/mongodb/TestMongoDBIndices.java", "diffHunk": "@@ -83,11 +84,13 @@ public void shouldFailWhenCreatingExistingChildNameDocument() {\n             fail(\"should throw a ConcurrentUpdateException\");\n         } catch (ConcurrentUpdateException cue) {\n             assertEquals(SC_CONFLICT, cue.getStatusCode());\n+            String mongoDBName = Framework.getProperties().getProperty(MONGODB_DBNAME_PROPERTY);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzk0MTUyMw=="}, "originalCommit": {"oid": "2635f1ad7c3810adba803f3a620b831825e40fd5"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3MzYzMjM0OnYy", "diffSide": "RIGHT", "path": "nuxeo-core/nuxeo-core-mongodb/src/test/java/org/nuxeo/ecm/core/mongodb/TestMongoDBIndices.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QxNDoxODoxOVrOFe6Tog==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QxNDoyMTozMFrOFe6aRw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzk1Njg5OA==", "bodyText": "Just contains(DOCUMENT_NAME) and contains(folder.getId())\nAlso you could put cue.getMessage() in a local variable.", "url": "https://github.com/nuxeo/nuxeo/pull/3675#discussion_r367956898", "createdAt": "2020-01-17T14:18:19Z", "author": {"login": "efge"}, "path": "nuxeo-core/nuxeo-core-mongodb/src/test/java/org/nuxeo/ecm/core/mongodb/TestMongoDBIndices.java", "diffHunk": "@@ -83,11 +82,9 @@ public void shouldFailWhenCreatingExistingChildNameDocument() {\n             fail(\"should throw a ConcurrentUpdateException\");\n         } catch (ConcurrentUpdateException cue) {\n             assertEquals(SC_CONFLICT, cue.getStatusCode());\n-            assertTrue(\n-                    cue.getMessage()\n-                       .contains(String.format(\n-                               \"E11000 duplicate key error collection: %s.test index: ecm:parentId_1_ecm:name_1 dup key: { : \\\"%s\\\", : \\\"%s\\\" }\",\n-                               DEFAULT_MONGODB_DBNAME, folder.getId(), DOCUMENT_NAME)));\n+            assertTrue(cue.getMessage().contains(\"E11000 duplicate key error collection\"));\n+            assertTrue(cue.getMessage().contains(String.format(\"%s\", DOCUMENT_NAME)));\n+            assertTrue(cue.getMessage().contains(String.format(\"%s\", folder.getId())));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8b1ce84c5e599875b866e8d0ae374816d32dccb3"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzk1ODU5OQ==", "bodyText": "sorry i didn't know why i did it with String.format :(", "url": "https://github.com/nuxeo/nuxeo/pull/3675#discussion_r367958599", "createdAt": "2020-01-17T14:21:30Z", "author": {"login": "RSalem07"}, "path": "nuxeo-core/nuxeo-core-mongodb/src/test/java/org/nuxeo/ecm/core/mongodb/TestMongoDBIndices.java", "diffHunk": "@@ -83,11 +82,9 @@ public void shouldFailWhenCreatingExistingChildNameDocument() {\n             fail(\"should throw a ConcurrentUpdateException\");\n         } catch (ConcurrentUpdateException cue) {\n             assertEquals(SC_CONFLICT, cue.getStatusCode());\n-            assertTrue(\n-                    cue.getMessage()\n-                       .contains(String.format(\n-                               \"E11000 duplicate key error collection: %s.test index: ecm:parentId_1_ecm:name_1 dup key: { : \\\"%s\\\", : \\\"%s\\\" }\",\n-                               DEFAULT_MONGODB_DBNAME, folder.getId(), DOCUMENT_NAME)));\n+            assertTrue(cue.getMessage().contains(\"E11000 duplicate key error collection\"));\n+            assertTrue(cue.getMessage().contains(String.format(\"%s\", DOCUMENT_NAME)));\n+            assertTrue(cue.getMessage().contains(String.format(\"%s\", folder.getId())));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzk1Njg5OA=="}, "originalCommit": {"oid": "8b1ce84c5e599875b866e8d0ae374816d32dccb3"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3MzYzNTc3OnYy", "diffSide": "RIGHT", "path": "nuxeo-core/nuxeo-core-mongodb/src/test/java/org/nuxeo/ecm/core/mongodb/TestMongoDBIndices.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QxNDoxOToxM1rOFe6VqA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QxNDoxOToxM1rOFe6VqA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzk1NzQxNg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        assertTrue(cue.getMessage().contains(String.format(\"%s\", DOCUMENT_NAME)));\n          \n          \n            \n                        assertTrue(cue.getMessage().contains(DOCUMENT_NAME));", "url": "https://github.com/nuxeo/nuxeo/pull/3675#discussion_r367957416", "createdAt": "2020-01-17T14:19:13Z", "author": {"login": "ataillefer"}, "path": "nuxeo-core/nuxeo-core-mongodb/src/test/java/org/nuxeo/ecm/core/mongodb/TestMongoDBIndices.java", "diffHunk": "@@ -83,11 +82,9 @@ public void shouldFailWhenCreatingExistingChildNameDocument() {\n             fail(\"should throw a ConcurrentUpdateException\");\n         } catch (ConcurrentUpdateException cue) {\n             assertEquals(SC_CONFLICT, cue.getStatusCode());\n-            assertTrue(\n-                    cue.getMessage()\n-                       .contains(String.format(\n-                               \"E11000 duplicate key error collection: %s.test index: ecm:parentId_1_ecm:name_1 dup key: { : \\\"%s\\\", : \\\"%s\\\" }\",\n-                               DEFAULT_MONGODB_DBNAME, folder.getId(), DOCUMENT_NAME)));\n+            assertTrue(cue.getMessage().contains(\"E11000 duplicate key error collection\"));\n+            assertTrue(cue.getMessage().contains(String.format(\"%s\", DOCUMENT_NAME)));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8b1ce84c5e599875b866e8d0ae374816d32dccb3"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3MzYzNjY4OnYy", "diffSide": "RIGHT", "path": "nuxeo-core/nuxeo-core-mongodb/src/test/java/org/nuxeo/ecm/core/mongodb/TestMongoDBIndices.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QxNDoxOTozMlrOFe6WNQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QxNDoxOTozMlrOFe6WNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzk1NzU1Nw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        assertTrue(cue.getMessage().contains(String.format(\"%s\", folder.getId())));\n          \n          \n            \n                        assertTrue(cue.getMessage().contains(folder.getId()));", "url": "https://github.com/nuxeo/nuxeo/pull/3675#discussion_r367957557", "createdAt": "2020-01-17T14:19:32Z", "author": {"login": "ataillefer"}, "path": "nuxeo-core/nuxeo-core-mongodb/src/test/java/org/nuxeo/ecm/core/mongodb/TestMongoDBIndices.java", "diffHunk": "@@ -83,11 +82,9 @@ public void shouldFailWhenCreatingExistingChildNameDocument() {\n             fail(\"should throw a ConcurrentUpdateException\");\n         } catch (ConcurrentUpdateException cue) {\n             assertEquals(SC_CONFLICT, cue.getStatusCode());\n-            assertTrue(\n-                    cue.getMessage()\n-                       .contains(String.format(\n-                               \"E11000 duplicate key error collection: %s.test index: ecm:parentId_1_ecm:name_1 dup key: { : \\\"%s\\\", : \\\"%s\\\" }\",\n-                               DEFAULT_MONGODB_DBNAME, folder.getId(), DOCUMENT_NAME)));\n+            assertTrue(cue.getMessage().contains(\"E11000 duplicate key error collection\"));\n+            assertTrue(cue.getMessage().contains(String.format(\"%s\", DOCUMENT_NAME)));\n+            assertTrue(cue.getMessage().contains(String.format(\"%s\", folder.getId())));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8b1ce84c5e599875b866e8d0ae374816d32dccb3"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3MzY5OTYxOnYy", "diffSide": "RIGHT", "path": "nuxeo-core/nuxeo-core-mongodb/src/test/java/org/nuxeo/ecm/core/mongodb/TestMongoDBIndices.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QxNDozOTowMlrOFe68yA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QxNDozOTowMlrOFe68yA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzk2NzQzMg==", "bodyText": "Sorry, one last change: please put message as the first argument to assertTrue, so that if there's a mismatch we have the full message in the logs.\nassertTrue(message, message.contains(\"E11000 duplicate key error collection\"));\nassertTrue(message, message.contains(DOCUMENT_NAME));\nassertTrue(message, message.contains(folder.getId()));", "url": "https://github.com/nuxeo/nuxeo/pull/3675#discussion_r367967432", "createdAt": "2020-01-17T14:39:02Z", "author": {"login": "efge"}, "path": "nuxeo-core/nuxeo-core-mongodb/src/test/java/org/nuxeo/ecm/core/mongodb/TestMongoDBIndices.java", "diffHunk": "@@ -83,11 +82,10 @@ public void shouldFailWhenCreatingExistingChildNameDocument() {\n             fail(\"should throw a ConcurrentUpdateException\");\n         } catch (ConcurrentUpdateException cue) {\n             assertEquals(SC_CONFLICT, cue.getStatusCode());\n-            assertTrue(\n-                    cue.getMessage()\n-                       .contains(String.format(\n-                               \"E11000 duplicate key error collection: %s.test index: ecm:parentId_1_ecm:name_1 dup key: { : \\\"%s\\\", : \\\"%s\\\" }\",\n-                               DEFAULT_MONGODB_DBNAME, folder.getId(), DOCUMENT_NAME)));\n+            String message = cue.getMessage();\n+            assertTrue(message.contains(\"E11000 duplicate key error collection\"));\n+            assertTrue(message.contains(DOCUMENT_NAME));\n+            assertTrue(message.contains(folder.getId()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "137540b70c4968a65fd55f8eb1ed8c57959a6707"}, "originalPosition": 20}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4265, "cost": 1, "resetAt": "2021-11-03T18:41:40Z"}}}