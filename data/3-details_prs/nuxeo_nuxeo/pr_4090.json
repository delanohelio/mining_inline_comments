{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI0NjQxNjky", "number": 4090, "title": "NXP-29099: add an orphaned Tasks listener", "bodyText": "", "createdAt": "2020-05-28T17:53:26Z", "url": "https://github.com/nuxeo/nuxeo/pull/4090", "merged": true, "mergeCommit": {"oid": "ab9b52fb19794604445216192355e6382f905453"}, "closed": true, "closedAt": "2020-06-09T19:44:41Z", "author": {"login": "NourNuxeo"}, "timelineItems": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcl0GTtABqjMzODQ1ODEzNzk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcpqcxagFqTQyNzQ4NTU1OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "11ca85cb315728e67468b6dc7eb8cbe5be89e645", "author": {"user": {"login": "NourNuxeo", "name": "Nour AL KOTOB"}}, "url": "https://github.com/nuxeo/nuxeo/commit/11ca85cb315728e67468b6dc7eb8cbe5be89e645", "committedDate": "2020-05-28T17:52:23Z", "message": "NXP-29099: add an orphaned Tasks listener"}, "afterCommit": {"oid": "631bb21b5cd9921f72a7ad285d27b6c013008658", "author": {"user": {"login": "NourNuxeo", "name": "Nour AL KOTOB"}}, "url": "https://github.com/nuxeo/nuxeo/commit/631bb21b5cd9921f72a7ad285d27b6c013008658", "committedDate": "2020-05-28T20:43:07Z", "message": "NXP-29099: add an orphaned Tasks listener"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIyODE3ODk2", "url": "https://github.com/nuxeo/nuxeo/pull/4090#pullrequestreview-422817896", "createdAt": "2020-06-02T15:47:29Z", "commit": {"oid": "631bb21b5cd9921f72a7ad285d27b6c013008658"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQxNTo0OTozMFrOGd4J6Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQxNjoxMTozMFrOGd5Xdg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzk4MTkyOQ==", "bodyText": "You could just use\ntaskDocument.setPropertyValue(TaskConstants.TASK_PROCESS_ID_PROPERTY_NAME, route.getId())", "url": "https://github.com/nuxeo/nuxeo/pull/4090#discussion_r433981929", "createdAt": "2020-06-02T15:49:30Z", "author": {"login": "troger"}, "path": "modules/platform/nuxeo-platform-document-routing/nuxeo-routing-core/src/test/java/org/nuxeo/ecm/platform/routing/test/TestDocumentRoutingService.java", "diffHunk": "@@ -361,6 +367,29 @@ public void testExecuteSimpleRouteWithConditionalStep() {\n         assertEquals(\"canceled\", children.get(2).getCurrentLifeCycleState());\n     }\n \n+    @Test\n+    public void testOrphanTasksDeletion() {\n+        DocumentModel route = session.createDocumentModel(\"/default-domain/workspaces\", \"dummyRoute\",\n+                DOCUMENT_ROUTE_DOCUMENT_TYPE);\n+        route.setPropertyValue(TITLE_PROPERTY_NAME, \"dummyRoute\");\n+        route = session.createDocument(route);\n+\n+        DocumentModel taskDocument = session.createDocumentModel(\"/default-domain/workspaces\", \"dummyTask\",\n+                TASK_TYPE_NAME);\n+        Task task = taskDocument.getAdapter(Task.class);\n+        task.setProcessId(route.getId());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "631bb21b5cd9921f72a7ad285d27b6c013008658"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzk4MzUxNQ==", "bodyText": "What about using session#exists?", "url": "https://github.com/nuxeo/nuxeo/pull/4090#discussion_r433983515", "createdAt": "2020-06-02T15:51:02Z", "author": {"login": "troger"}, "path": "modules/platform/nuxeo-platform-document-routing/nuxeo-routing-core/src/test/java/org/nuxeo/ecm/platform/routing/test/TestDocumentRoutingService.java", "diffHunk": "@@ -361,6 +367,29 @@ public void testExecuteSimpleRouteWithConditionalStep() {\n         assertEquals(\"canceled\", children.get(2).getCurrentLifeCycleState());\n     }\n \n+    @Test\n+    public void testOrphanTasksDeletion() {\n+        DocumentModel route = session.createDocumentModel(\"/default-domain/workspaces\", \"dummyRoute\",\n+                DOCUMENT_ROUTE_DOCUMENT_TYPE);\n+        route.setPropertyValue(TITLE_PROPERTY_NAME, \"dummyRoute\");\n+        route = session.createDocument(route);\n+\n+        DocumentModel taskDocument = session.createDocumentModel(\"/default-domain/workspaces\", \"dummyTask\",\n+                TASK_TYPE_NAME);\n+        Task task = taskDocument.getAdapter(Task.class);\n+        task.setProcessId(route.getId());\n+        taskDocument = session.createDocument(taskDocument);\n+        session.save();\n+        session.removeDocument(route.getRef());\n+        try {\n+            session.getDocument(taskDocument.getRef());\n+            // Orphan tasks should not be found\n+            fail();\n+        } catch (DocumentNotFoundException e) {\n+            // Success\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "631bb21b5cd9921f72a7ad285d27b6c013008658"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzk4NDgzNQ==", "bodyText": "Not needed.", "url": "https://github.com/nuxeo/nuxeo/pull/4090#discussion_r433984835", "createdAt": "2020-06-02T15:52:18Z", "author": {"login": "troger"}, "path": "modules/platform/nuxeo-platform-task/nuxeo-platform-task-core/src/main/java/org/nuxeo/ecm/platform/task/core/listener/DeleteTaskForDeletedDocumentRouteListener.java", "diffHunk": "@@ -0,0 +1,68 @@\n+/*\n+ * (C) Copyright 2020 Nuxeo (http://nuxeo.com/) and others.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ * Contributors:\n+ *     Nour AL KOTOB\n+ */\n+package org.nuxeo.ecm.platform.task.core.listener;\n+\n+import static org.nuxeo.ecm.core.query.sql.NXQL.ECM_UUID;\n+import static org.nuxeo.ecm.platform.routing.api.DocumentRoutingConstants.DOCUMENT_ROUTE_DOCUMENT_TYPE;\n+import static org.nuxeo.ecm.platform.task.TaskConstants.TASK_PROCESS_ID_PROPERTY_NAME;\n+\n+import org.nuxeo.ecm.core.api.CoreSession;\n+import org.nuxeo.ecm.core.api.DocumentModel;\n+import org.nuxeo.ecm.core.api.IdRef;\n+import org.nuxeo.ecm.core.api.event.DocumentEventTypes;\n+import org.nuxeo.ecm.core.event.Event;\n+import org.nuxeo.ecm.core.event.EventListener;\n+import org.nuxeo.ecm.core.event.impl.DocumentEventContext;\n+\n+/**\n+ *", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "631bb21b5cd9921f72a7ad285d27b6c013008658"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzk4NzgwMg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        if (docModel.getType().equals(DOCUMENT_ROUTE_DOCUMENT_TYPE)) {\n          \n          \n            \n                        if (DOCUMENT_ROUTE_DOCUMENT_TYPE.equals(docModel.getType())) {", "url": "https://github.com/nuxeo/nuxeo/pull/4090#discussion_r433987802", "createdAt": "2020-06-02T15:55:14Z", "author": {"login": "troger"}, "path": "modules/platform/nuxeo-platform-task/nuxeo-platform-task-core/src/main/java/org/nuxeo/ecm/platform/task/core/listener/DeleteTaskForDeletedDocumentRouteListener.java", "diffHunk": "@@ -0,0 +1,68 @@\n+/*\n+ * (C) Copyright 2020 Nuxeo (http://nuxeo.com/) and others.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ * Contributors:\n+ *     Nour AL KOTOB\n+ */\n+package org.nuxeo.ecm.platform.task.core.listener;\n+\n+import static org.nuxeo.ecm.core.query.sql.NXQL.ECM_UUID;\n+import static org.nuxeo.ecm.platform.routing.api.DocumentRoutingConstants.DOCUMENT_ROUTE_DOCUMENT_TYPE;\n+import static org.nuxeo.ecm.platform.task.TaskConstants.TASK_PROCESS_ID_PROPERTY_NAME;\n+\n+import org.nuxeo.ecm.core.api.CoreSession;\n+import org.nuxeo.ecm.core.api.DocumentModel;\n+import org.nuxeo.ecm.core.api.IdRef;\n+import org.nuxeo.ecm.core.api.event.DocumentEventTypes;\n+import org.nuxeo.ecm.core.event.Event;\n+import org.nuxeo.ecm.core.event.EventListener;\n+import org.nuxeo.ecm.core.event.impl.DocumentEventContext;\n+\n+/**\n+ *\n+ * @since 11.1\n+ */\n+public class DeleteTaskForDeletedDocumentRouteListener implements EventListener {\n+\n+    protected static final String QUERY_GET_TASKS_RELATED_TO_DOCUMENT_ROUTE = \"SELECT * FROM Document WHERE %s = '%s'\";\n+\n+    @Override\n+    public void handleEvent(Event event) {\n+        if (DocumentEventTypes.ABOUT_TO_REMOVE.equals(event.getName())) {\n+            DocumentEventContext context = (DocumentEventContext) event.getContext();\n+            DocumentModel docModel = context.getSourceDocument();\n+            CoreSession session = context.getCoreSession();\n+            if (docModel.getType().equals(DOCUMENT_ROUTE_DOCUMENT_TYPE)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "631bb21b5cd9921f72a7ad285d27b6c013008658"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzk4ODE3Mg==", "bodyText": "No need to extract it to a var.", "url": "https://github.com/nuxeo/nuxeo/pull/4090#discussion_r433988172", "createdAt": "2020-06-02T15:55:34Z", "author": {"login": "troger"}, "path": "modules/platform/nuxeo-platform-task/nuxeo-platform-task-core/src/main/java/org/nuxeo/ecm/platform/task/core/listener/DeleteTaskForDeletedDocumentRouteListener.java", "diffHunk": "@@ -0,0 +1,68 @@\n+/*\n+ * (C) Copyright 2020 Nuxeo (http://nuxeo.com/) and others.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ * Contributors:\n+ *     Nour AL KOTOB\n+ */\n+package org.nuxeo.ecm.platform.task.core.listener;\n+\n+import static org.nuxeo.ecm.core.query.sql.NXQL.ECM_UUID;\n+import static org.nuxeo.ecm.platform.routing.api.DocumentRoutingConstants.DOCUMENT_ROUTE_DOCUMENT_TYPE;\n+import static org.nuxeo.ecm.platform.task.TaskConstants.TASK_PROCESS_ID_PROPERTY_NAME;\n+\n+import org.nuxeo.ecm.core.api.CoreSession;\n+import org.nuxeo.ecm.core.api.DocumentModel;\n+import org.nuxeo.ecm.core.api.IdRef;\n+import org.nuxeo.ecm.core.api.event.DocumentEventTypes;\n+import org.nuxeo.ecm.core.event.Event;\n+import org.nuxeo.ecm.core.event.EventListener;\n+import org.nuxeo.ecm.core.event.impl.DocumentEventContext;\n+\n+/**\n+ *\n+ * @since 11.1\n+ */\n+public class DeleteTaskForDeletedDocumentRouteListener implements EventListener {\n+\n+    protected static final String QUERY_GET_TASKS_RELATED_TO_DOCUMENT_ROUTE = \"SELECT * FROM Document WHERE %s = '%s'\";\n+\n+    @Override\n+    public void handleEvent(Event event) {\n+        if (DocumentEventTypes.ABOUT_TO_REMOVE.equals(event.getName())) {\n+            DocumentEventContext context = (DocumentEventContext) event.getContext();\n+            DocumentModel docModel = context.getSourceDocument();\n+            CoreSession session = context.getCoreSession();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "631bb21b5cd9921f72a7ad285d27b6c013008658"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzk4ODM3NQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            deleteOrphanTasks(session, docModel.getId());\n          \n          \n            \n                            deleteOrphanTasks(context.getCoreSession(), docModel.getId());", "url": "https://github.com/nuxeo/nuxeo/pull/4090#discussion_r433988375", "createdAt": "2020-06-02T15:55:46Z", "author": {"login": "troger"}, "path": "modules/platform/nuxeo-platform-task/nuxeo-platform-task-core/src/main/java/org/nuxeo/ecm/platform/task/core/listener/DeleteTaskForDeletedDocumentRouteListener.java", "diffHunk": "@@ -0,0 +1,68 @@\n+/*\n+ * (C) Copyright 2020 Nuxeo (http://nuxeo.com/) and others.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ * Contributors:\n+ *     Nour AL KOTOB\n+ */\n+package org.nuxeo.ecm.platform.task.core.listener;\n+\n+import static org.nuxeo.ecm.core.query.sql.NXQL.ECM_UUID;\n+import static org.nuxeo.ecm.platform.routing.api.DocumentRoutingConstants.DOCUMENT_ROUTE_DOCUMENT_TYPE;\n+import static org.nuxeo.ecm.platform.task.TaskConstants.TASK_PROCESS_ID_PROPERTY_NAME;\n+\n+import org.nuxeo.ecm.core.api.CoreSession;\n+import org.nuxeo.ecm.core.api.DocumentModel;\n+import org.nuxeo.ecm.core.api.IdRef;\n+import org.nuxeo.ecm.core.api.event.DocumentEventTypes;\n+import org.nuxeo.ecm.core.event.Event;\n+import org.nuxeo.ecm.core.event.EventListener;\n+import org.nuxeo.ecm.core.event.impl.DocumentEventContext;\n+\n+/**\n+ *\n+ * @since 11.1\n+ */\n+public class DeleteTaskForDeletedDocumentRouteListener implements EventListener {\n+\n+    protected static final String QUERY_GET_TASKS_RELATED_TO_DOCUMENT_ROUTE = \"SELECT * FROM Document WHERE %s = '%s'\";\n+\n+    @Override\n+    public void handleEvent(Event event) {\n+        if (DocumentEventTypes.ABOUT_TO_REMOVE.equals(event.getName())) {\n+            DocumentEventContext context = (DocumentEventContext) event.getContext();\n+            DocumentModel docModel = context.getSourceDocument();\n+            CoreSession session = context.getCoreSession();\n+            if (docModel.getType().equals(DOCUMENT_ROUTE_DOCUMENT_TYPE)) {\n+                deleteOrphanTasks(session, docModel.getId());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "631bb21b5cd9921f72a7ad285d27b6c013008658"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzk4OTg5NQ==", "bodyText": "protected.", "url": "https://github.com/nuxeo/nuxeo/pull/4090#discussion_r433989895", "createdAt": "2020-06-02T15:57:16Z", "author": {"login": "troger"}, "path": "modules/platform/nuxeo-platform-task/nuxeo-platform-task-core/src/main/java/org/nuxeo/ecm/platform/task/core/listener/DeleteTaskForDeletedDocumentRouteListener.java", "diffHunk": "@@ -0,0 +1,68 @@\n+/*\n+ * (C) Copyright 2020 Nuxeo (http://nuxeo.com/) and others.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ * Contributors:\n+ *     Nour AL KOTOB\n+ */\n+package org.nuxeo.ecm.platform.task.core.listener;\n+\n+import static org.nuxeo.ecm.core.query.sql.NXQL.ECM_UUID;\n+import static org.nuxeo.ecm.platform.routing.api.DocumentRoutingConstants.DOCUMENT_ROUTE_DOCUMENT_TYPE;\n+import static org.nuxeo.ecm.platform.task.TaskConstants.TASK_PROCESS_ID_PROPERTY_NAME;\n+\n+import org.nuxeo.ecm.core.api.CoreSession;\n+import org.nuxeo.ecm.core.api.DocumentModel;\n+import org.nuxeo.ecm.core.api.IdRef;\n+import org.nuxeo.ecm.core.api.event.DocumentEventTypes;\n+import org.nuxeo.ecm.core.event.Event;\n+import org.nuxeo.ecm.core.event.EventListener;\n+import org.nuxeo.ecm.core.event.impl.DocumentEventContext;\n+\n+/**\n+ *\n+ * @since 11.1\n+ */\n+public class DeleteTaskForDeletedDocumentRouteListener implements EventListener {\n+\n+    protected static final String QUERY_GET_TASKS_RELATED_TO_DOCUMENT_ROUTE = \"SELECT * FROM Document WHERE %s = '%s'\";\n+\n+    @Override\n+    public void handleEvent(Event event) {\n+        if (DocumentEventTypes.ABOUT_TO_REMOVE.equals(event.getName())) {\n+            DocumentEventContext context = (DocumentEventContext) event.getContext();\n+            DocumentModel docModel = context.getSourceDocument();\n+            CoreSession session = context.getCoreSession();\n+            if (docModel.getType().equals(DOCUMENT_ROUTE_DOCUMENT_TYPE)) {\n+                deleteOrphanTasks(session, docModel.getId());\n+            }\n+        }\n+    }\n+\n+    /**\n+     * Deletes all tasks which processId matches the given id.\n+     *\n+     * @param session the session used to query.\n+     * @param id the deleted DocumentRoute id\n+     * @since 11.1\n+     */\n+    private void deleteOrphanTasks(CoreSession session, String id) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "631bb21b5cd9921f72a7ad285d27b6c013008658"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzk5NDc0MA==", "bodyText": "You could add the constant directly to QUERY_GET_TASKS_RELATED_TO_DOCUMENT_ROUTE, this would avoid to always String.format the same constant \ud83e\udd14", "url": "https://github.com/nuxeo/nuxeo/pull/4090#discussion_r433994740", "createdAt": "2020-06-02T16:02:08Z", "author": {"login": "troger"}, "path": "modules/platform/nuxeo-platform-task/nuxeo-platform-task-core/src/main/java/org/nuxeo/ecm/platform/task/core/listener/DeleteTaskForDeletedDocumentRouteListener.java", "diffHunk": "@@ -0,0 +1,68 @@\n+/*\n+ * (C) Copyright 2020 Nuxeo (http://nuxeo.com/) and others.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ * Contributors:\n+ *     Nour AL KOTOB\n+ */\n+package org.nuxeo.ecm.platform.task.core.listener;\n+\n+import static org.nuxeo.ecm.core.query.sql.NXQL.ECM_UUID;\n+import static org.nuxeo.ecm.platform.routing.api.DocumentRoutingConstants.DOCUMENT_ROUTE_DOCUMENT_TYPE;\n+import static org.nuxeo.ecm.platform.task.TaskConstants.TASK_PROCESS_ID_PROPERTY_NAME;\n+\n+import org.nuxeo.ecm.core.api.CoreSession;\n+import org.nuxeo.ecm.core.api.DocumentModel;\n+import org.nuxeo.ecm.core.api.IdRef;\n+import org.nuxeo.ecm.core.api.event.DocumentEventTypes;\n+import org.nuxeo.ecm.core.event.Event;\n+import org.nuxeo.ecm.core.event.EventListener;\n+import org.nuxeo.ecm.core.event.impl.DocumentEventContext;\n+\n+/**\n+ *\n+ * @since 11.1\n+ */\n+public class DeleteTaskForDeletedDocumentRouteListener implements EventListener {\n+\n+    protected static final String QUERY_GET_TASKS_RELATED_TO_DOCUMENT_ROUTE = \"SELECT * FROM Document WHERE %s = '%s'\";\n+\n+    @Override\n+    public void handleEvent(Event event) {\n+        if (DocumentEventTypes.ABOUT_TO_REMOVE.equals(event.getName())) {\n+            DocumentEventContext context = (DocumentEventContext) event.getContext();\n+            DocumentModel docModel = context.getSourceDocument();\n+            CoreSession session = context.getCoreSession();\n+            if (docModel.getType().equals(DOCUMENT_ROUTE_DOCUMENT_TYPE)) {\n+                deleteOrphanTasks(session, docModel.getId());\n+            }\n+        }\n+    }\n+\n+    /**\n+     * Deletes all tasks which processId matches the given id.\n+     *\n+     * @param session the session used to query.\n+     * @param id the deleted DocumentRoute id\n+     * @since 11.1\n+     */\n+    private void deleteOrphanTasks(CoreSession session, String id) {\n+        String query = String.format(QUERY_GET_TASKS_RELATED_TO_DOCUMENT_ROUTE, TASK_PROCESS_ID_PROPERTY_NAME, id);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "631bb21b5cd9921f72a7ad285d27b6c013008658"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzk5NjM4OQ==", "bodyText": "Could you format it correctly with spaces? (I know the rest of the file is using tabs but for added code use spaces \ud83d\ude03 )\nYou could even correctly format the whole file if you want \ud83d\ude2c", "url": "https://github.com/nuxeo/nuxeo/pull/4090#discussion_r433996389", "createdAt": "2020-06-02T16:03:52Z", "author": {"login": "troger"}, "path": "modules/platform/nuxeo-platform-task/nuxeo-platform-task-core/src/main/resources/OSGI-INF/task-listener-contrib.xml", "diffHunk": "@@ -8,6 +8,11 @@\n \t\t\tname=\"removeProcessForDeletedDocument\">\n \t\t\t<event>aboutToRemove</event>\n \t\t</listener>\n+\t\t<listener async=\"true\" postCommit=\"false\"\n+\t\t\tclass=\"org.nuxeo.ecm.platform.task.core.listener.DeleteTaskForDeletedDocumentRouteListener\"\n+\t\t\tname=\"removeTasksForDeletedDocumentRoute\">\n+\t\t\t<event>aboutToRemove</event>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "631bb21b5cd9921f72a7ad285d27b6c013008658"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzk5OTMxNA==", "bodyText": "Keep it short maybe (like other listener such as DocumentRouteCreationListener):\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            public class DeleteTaskForDeletedDocumentRouteListener implements EventListener {\n          \n          \n            \n            public class DocumentRouteDeletedListener implements EventListener {\n          \n      \n    \n    \n  \n\nAnd explain in the javadoc what the listener is doing.", "url": "https://github.com/nuxeo/nuxeo/pull/4090#discussion_r433999314", "createdAt": "2020-06-02T16:07:51Z", "author": {"login": "troger"}, "path": "modules/platform/nuxeo-platform-task/nuxeo-platform-task-core/src/main/java/org/nuxeo/ecm/platform/task/core/listener/DeleteTaskForDeletedDocumentRouteListener.java", "diffHunk": "@@ -0,0 +1,68 @@\n+/*\n+ * (C) Copyright 2020 Nuxeo (http://nuxeo.com/) and others.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ * Contributors:\n+ *     Nour AL KOTOB\n+ */\n+package org.nuxeo.ecm.platform.task.core.listener;\n+\n+import static org.nuxeo.ecm.core.query.sql.NXQL.ECM_UUID;\n+import static org.nuxeo.ecm.platform.routing.api.DocumentRoutingConstants.DOCUMENT_ROUTE_DOCUMENT_TYPE;\n+import static org.nuxeo.ecm.platform.task.TaskConstants.TASK_PROCESS_ID_PROPERTY_NAME;\n+\n+import org.nuxeo.ecm.core.api.CoreSession;\n+import org.nuxeo.ecm.core.api.DocumentModel;\n+import org.nuxeo.ecm.core.api.IdRef;\n+import org.nuxeo.ecm.core.api.event.DocumentEventTypes;\n+import org.nuxeo.ecm.core.event.Event;\n+import org.nuxeo.ecm.core.event.EventListener;\n+import org.nuxeo.ecm.core.event.impl.DocumentEventContext;\n+\n+/**\n+ *\n+ * @since 11.1\n+ */\n+public class DeleteTaskForDeletedDocumentRouteListener implements EventListener {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "631bb21b5cd9921f72a7ad285d27b6c013008658"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDAwMTI4Mg==", "bodyText": "Routing is using task but not the other way around: the listener should go to nuxeo-routing-core with other DocumentRoute listeners.", "url": "https://github.com/nuxeo/nuxeo/pull/4090#discussion_r434001282", "createdAt": "2020-06-02T16:10:45Z", "author": {"login": "troger"}, "path": "modules/platform/nuxeo-platform-task/nuxeo-platform-task-core/pom.xml", "diffHunk": "@@ -77,6 +77,10 @@\n       <artifactId>nuxeo-platform-userworkspace-types</artifactId>\n       <scope>test</scope>\n     </dependency>\n+    <dependency>\n+        <groupId>org.nuxeo.ecm.routing</groupId>\n+        <artifactId>nuxeo-routing-api</artifactId>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "631bb21b5cd9921f72a7ad285d27b6c013008658"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDAwMTc4Mg==", "bodyText": "Should go to nuxeo-routing-core... where your test lives.", "url": "https://github.com/nuxeo/nuxeo/pull/4090#discussion_r434001782", "createdAt": "2020-06-02T16:11:30Z", "author": {"login": "troger"}, "path": "modules/platform/nuxeo-platform-task/nuxeo-platform-task-core/src/main/java/org/nuxeo/ecm/platform/task/core/listener/DeleteTaskForDeletedDocumentRouteListener.java", "diffHunk": "@@ -0,0 +1,68 @@\n+/*", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "631bb21b5cd9921f72a7ad285d27b6c013008658"}, "originalPosition": 1}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "631bb21b5cd9921f72a7ad285d27b6c013008658", "author": {"user": {"login": "NourNuxeo", "name": "Nour AL KOTOB"}}, "url": "https://github.com/nuxeo/nuxeo/commit/631bb21b5cd9921f72a7ad285d27b6c013008658", "committedDate": "2020-05-28T20:43:07Z", "message": "NXP-29099: add an orphaned Tasks listener"}, "afterCommit": {"oid": "1a350e0a318dd58fb4a47575e442c87a45a920dd", "author": {"user": {"login": "NourNuxeo", "name": "Nour AL KOTOB"}}, "url": "https://github.com/nuxeo/nuxeo/commit/1a350e0a318dd58fb4a47575e442c87a45a920dd", "committedDate": "2020-06-03T11:38:44Z", "message": "NXP-29099: add an orphaned Tasks listener"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI2MzEyMzc1", "url": "https://github.com/nuxeo/nuxeo/pull/4090#pullrequestreview-426312375", "createdAt": "2020-06-08T14:42:13Z", "commit": {"oid": "1a350e0a318dd58fb4a47575e442c87a45a920dd"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxNDo0MjoxNFrOGgh1fQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxNTowMDo1M1rOGgiuzA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjc2MTk4MQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (DocumentEventTypes.ABOUT_TO_REMOVE.equals(event.getName())) {\n          \n          \n            \n                    if (ABOUT_TO_REMOVE.equals(event.getName())) {", "url": "https://github.com/nuxeo/nuxeo/pull/4090#discussion_r436761981", "createdAt": "2020-06-08T14:42:14Z", "author": {"login": "troger"}, "path": "modules/platform/nuxeo-platform-document-routing/nuxeo-routing-core/src/main/java/org/nuxeo/ecm/platform/routing/core/listener/DocumentRouteDeletedListener.java", "diffHunk": "@@ -0,0 +1,69 @@\n+/*\n+ * (C) Copyright 2020 Nuxeo (http://nuxeo.com/) and others.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ * Contributors:\n+ *     Nour AL KOTOB\n+ */\n+package org.nuxeo.ecm.platform.routing.core.listener;\n+\n+import static org.nuxeo.ecm.core.query.sql.NXQL.ECM_UUID;\n+import static org.nuxeo.ecm.platform.routing.api.DocumentRoutingConstants.DOCUMENT_ROUTE_DOCUMENT_TYPE;\n+import static org.nuxeo.ecm.platform.task.TaskConstants.TASK_PROCESS_ID_PROPERTY_NAME;\n+\n+import org.nuxeo.ecm.core.api.CoreSession;\n+import org.nuxeo.ecm.core.api.DocumentModel;\n+import org.nuxeo.ecm.core.api.IdRef;\n+import org.nuxeo.ecm.core.api.event.DocumentEventTypes;\n+import org.nuxeo.ecm.core.event.Event;\n+import org.nuxeo.ecm.core.event.EventListener;\n+import org.nuxeo.ecm.core.event.impl.DocumentEventContext;\n+\n+/**\n+ * Listener that deletes orphan Tasks.\n+ *\n+ * @since 11.1\n+ */\n+public class DocumentRouteDeletedListener implements EventListener {\n+\n+    protected static final String QUERY_GET_TASKS_RELATED_TO_DOCUMENT_ROUTE = \"SELECT * FROM Document WHERE \"\n+            + TASK_PROCESS_ID_PROPERTY_NAME + \" = '%s'\";\n+\n+    @Override\n+    public void handleEvent(Event event) {\n+        if (DocumentEventTypes.ABOUT_TO_REMOVE.equals(event.getName())) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1a350e0a318dd58fb4a47575e442c87a45a920dd"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjc2MjM0Nw==", "bodyText": "Format", "url": "https://github.com/nuxeo/nuxeo/pull/4090#discussion_r436762347", "createdAt": "2020-06-08T14:42:41Z", "author": {"login": "troger"}, "path": "modules/platform/nuxeo-platform-document-routing/nuxeo-routing-core/src/main/java/org/nuxeo/ecm/platform/routing/core/listener/DocumentRouteDeletedListener.java", "diffHunk": "@@ -0,0 +1,69 @@\n+/*\n+ * (C) Copyright 2020 Nuxeo (http://nuxeo.com/) and others.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ * Contributors:\n+ *     Nour AL KOTOB\n+ */\n+package org.nuxeo.ecm.platform.routing.core.listener;\n+\n+import static org.nuxeo.ecm.core.query.sql.NXQL.ECM_UUID;\n+import static org.nuxeo.ecm.platform.routing.api.DocumentRoutingConstants.DOCUMENT_ROUTE_DOCUMENT_TYPE;\n+import static org.nuxeo.ecm.platform.task.TaskConstants.TASK_PROCESS_ID_PROPERTY_NAME;\n+\n+import org.nuxeo.ecm.core.api.CoreSession;\n+import org.nuxeo.ecm.core.api.DocumentModel;\n+import org.nuxeo.ecm.core.api.IdRef;\n+import org.nuxeo.ecm.core.api.event.DocumentEventTypes;\n+import org.nuxeo.ecm.core.event.Event;\n+import org.nuxeo.ecm.core.event.EventListener;\n+import org.nuxeo.ecm.core.event.impl.DocumentEventContext;\n+\n+/**\n+ * Listener that deletes orphan Tasks.\n+ *\n+ * @since 11.1\n+ */\n+public class DocumentRouteDeletedListener implements EventListener {\n+\n+    protected static final String QUERY_GET_TASKS_RELATED_TO_DOCUMENT_ROUTE = \"SELECT * FROM Document WHERE \"\n+            + TASK_PROCESS_ID_PROPERTY_NAME + \" = '%s'\";\n+\n+    @Override\n+    public void handleEvent(Event event) {\n+        if (DocumentEventTypes.ABOUT_TO_REMOVE.equals(event.getName())) {\n+            DocumentEventContext context = (DocumentEventContext) event.getContext();\n+            DocumentModel docModel = context.getSourceDocument();\n+            if (DOCUMENT_ROUTE_DOCUMENT_TYPE.equals(docModel.getType())) {\n+                deleteOrphanTasks(context.getCoreSession()  , docModel.getId());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1a350e0a318dd58fb4a47575e442c87a45a920dd"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjc2MjU1Ng==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * @param session the session used to query.\n          \n          \n            \n                 * @param session the session used to query", "url": "https://github.com/nuxeo/nuxeo/pull/4090#discussion_r436762556", "createdAt": "2020-06-08T14:43:03Z", "author": {"login": "troger"}, "path": "modules/platform/nuxeo-platform-document-routing/nuxeo-routing-core/src/main/java/org/nuxeo/ecm/platform/routing/core/listener/DocumentRouteDeletedListener.java", "diffHunk": "@@ -0,0 +1,69 @@\n+/*\n+ * (C) Copyright 2020 Nuxeo (http://nuxeo.com/) and others.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ * Contributors:\n+ *     Nour AL KOTOB\n+ */\n+package org.nuxeo.ecm.platform.routing.core.listener;\n+\n+import static org.nuxeo.ecm.core.query.sql.NXQL.ECM_UUID;\n+import static org.nuxeo.ecm.platform.routing.api.DocumentRoutingConstants.DOCUMENT_ROUTE_DOCUMENT_TYPE;\n+import static org.nuxeo.ecm.platform.task.TaskConstants.TASK_PROCESS_ID_PROPERTY_NAME;\n+\n+import org.nuxeo.ecm.core.api.CoreSession;\n+import org.nuxeo.ecm.core.api.DocumentModel;\n+import org.nuxeo.ecm.core.api.IdRef;\n+import org.nuxeo.ecm.core.api.event.DocumentEventTypes;\n+import org.nuxeo.ecm.core.event.Event;\n+import org.nuxeo.ecm.core.event.EventListener;\n+import org.nuxeo.ecm.core.event.impl.DocumentEventContext;\n+\n+/**\n+ * Listener that deletes orphan Tasks.\n+ *\n+ * @since 11.1\n+ */\n+public class DocumentRouteDeletedListener implements EventListener {\n+\n+    protected static final String QUERY_GET_TASKS_RELATED_TO_DOCUMENT_ROUTE = \"SELECT * FROM Document WHERE \"\n+            + TASK_PROCESS_ID_PROPERTY_NAME + \" = '%s'\";\n+\n+    @Override\n+    public void handleEvent(Event event) {\n+        if (DocumentEventTypes.ABOUT_TO_REMOVE.equals(event.getName())) {\n+            DocumentEventContext context = (DocumentEventContext) event.getContext();\n+            DocumentModel docModel = context.getSourceDocument();\n+            if (DOCUMENT_ROUTE_DOCUMENT_TYPE.equals(docModel.getType())) {\n+                deleteOrphanTasks(context.getCoreSession()  , docModel.getId());\n+            }\n+        }\n+    }\n+\n+    /**\n+     * Deletes all tasks which processId matches the given id.\n+     *\n+     * @param session the session used to query.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1a350e0a318dd58fb4a47575e442c87a45a920dd"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjc2NjMzMw==", "bodyText": "Should extend PostCommitEventListener  for asynchronous post-commit listeners.", "url": "https://github.com/nuxeo/nuxeo/pull/4090#discussion_r436766333", "createdAt": "2020-06-08T14:48:13Z", "author": {"login": "troger"}, "path": "modules/platform/nuxeo-platform-document-routing/nuxeo-routing-core/src/main/java/org/nuxeo/ecm/platform/routing/core/listener/DocumentRouteDeletedListener.java", "diffHunk": "@@ -0,0 +1,69 @@\n+/*\n+ * (C) Copyright 2020 Nuxeo (http://nuxeo.com/) and others.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ * Contributors:\n+ *     Nour AL KOTOB\n+ */\n+package org.nuxeo.ecm.platform.routing.core.listener;\n+\n+import static org.nuxeo.ecm.core.query.sql.NXQL.ECM_UUID;\n+import static org.nuxeo.ecm.platform.routing.api.DocumentRoutingConstants.DOCUMENT_ROUTE_DOCUMENT_TYPE;\n+import static org.nuxeo.ecm.platform.task.TaskConstants.TASK_PROCESS_ID_PROPERTY_NAME;\n+\n+import org.nuxeo.ecm.core.api.CoreSession;\n+import org.nuxeo.ecm.core.api.DocumentModel;\n+import org.nuxeo.ecm.core.api.IdRef;\n+import org.nuxeo.ecm.core.api.event.DocumentEventTypes;\n+import org.nuxeo.ecm.core.event.Event;\n+import org.nuxeo.ecm.core.event.EventListener;\n+import org.nuxeo.ecm.core.event.impl.DocumentEventContext;\n+\n+/**\n+ * Listener that deletes orphan Tasks.\n+ *\n+ * @since 11.1\n+ */\n+public class DocumentRouteDeletedListener implements EventListener {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1a350e0a318dd58fb4a47575e442c87a45a920dd"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjc2ODYxOA==", "bodyText": "As you are async, use DOCUMENT_REMOVED.", "url": "https://github.com/nuxeo/nuxeo/pull/4090#discussion_r436768618", "createdAt": "2020-06-08T14:51:31Z", "author": {"login": "troger"}, "path": "modules/platform/nuxeo-platform-document-routing/nuxeo-routing-core/src/main/java/org/nuxeo/ecm/platform/routing/core/listener/DocumentRouteDeletedListener.java", "diffHunk": "@@ -0,0 +1,69 @@\n+/*\n+ * (C) Copyright 2020 Nuxeo (http://nuxeo.com/) and others.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ * Contributors:\n+ *     Nour AL KOTOB\n+ */\n+package org.nuxeo.ecm.platform.routing.core.listener;\n+\n+import static org.nuxeo.ecm.core.query.sql.NXQL.ECM_UUID;\n+import static org.nuxeo.ecm.platform.routing.api.DocumentRoutingConstants.DOCUMENT_ROUTE_DOCUMENT_TYPE;\n+import static org.nuxeo.ecm.platform.task.TaskConstants.TASK_PROCESS_ID_PROPERTY_NAME;\n+\n+import org.nuxeo.ecm.core.api.CoreSession;\n+import org.nuxeo.ecm.core.api.DocumentModel;\n+import org.nuxeo.ecm.core.api.IdRef;\n+import org.nuxeo.ecm.core.api.event.DocumentEventTypes;\n+import org.nuxeo.ecm.core.event.Event;\n+import org.nuxeo.ecm.core.event.EventListener;\n+import org.nuxeo.ecm.core.event.impl.DocumentEventContext;\n+\n+/**\n+ * Listener that deletes orphan Tasks.\n+ *\n+ * @since 11.1\n+ */\n+public class DocumentRouteDeletedListener implements EventListener {\n+\n+    protected static final String QUERY_GET_TASKS_RELATED_TO_DOCUMENT_ROUTE = \"SELECT * FROM Document WHERE \"\n+            + TASK_PROCESS_ID_PROPERTY_NAME + \" = '%s'\";\n+\n+    @Override\n+    public void handleEvent(Event event) {\n+        if (DocumentEventTypes.ABOUT_TO_REMOVE.equals(event.getName())) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1a350e0a318dd58fb4a47575e442c87a45a920dd"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjc2OTY2NA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                           .map(m -> m.get(ECM_UUID))\n          \n          \n            \n                           .forEach(s -> session.removeDocument(new IdRef((String) s)));\n          \n          \n            \n                           .map(m -> m.get(ECM_UUID))\n          \n          \n            \n                           .map(id -> new IdRef((String) id))\n          \n          \n            \n                           .forEach(session::removeDocument);", "url": "https://github.com/nuxeo/nuxeo/pull/4090#discussion_r436769664", "createdAt": "2020-06-08T14:52:41Z", "author": {"login": "troger"}, "path": "modules/platform/nuxeo-platform-document-routing/nuxeo-routing-core/src/main/java/org/nuxeo/ecm/platform/routing/core/listener/DocumentRouteDeletedListener.java", "diffHunk": "@@ -0,0 +1,69 @@\n+/*\n+ * (C) Copyright 2020 Nuxeo (http://nuxeo.com/) and others.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ * Contributors:\n+ *     Nour AL KOTOB\n+ */\n+package org.nuxeo.ecm.platform.routing.core.listener;\n+\n+import static org.nuxeo.ecm.core.query.sql.NXQL.ECM_UUID;\n+import static org.nuxeo.ecm.platform.routing.api.DocumentRoutingConstants.DOCUMENT_ROUTE_DOCUMENT_TYPE;\n+import static org.nuxeo.ecm.platform.task.TaskConstants.TASK_PROCESS_ID_PROPERTY_NAME;\n+\n+import org.nuxeo.ecm.core.api.CoreSession;\n+import org.nuxeo.ecm.core.api.DocumentModel;\n+import org.nuxeo.ecm.core.api.IdRef;\n+import org.nuxeo.ecm.core.api.event.DocumentEventTypes;\n+import org.nuxeo.ecm.core.event.Event;\n+import org.nuxeo.ecm.core.event.EventListener;\n+import org.nuxeo.ecm.core.event.impl.DocumentEventContext;\n+\n+/**\n+ * Listener that deletes orphan Tasks.\n+ *\n+ * @since 11.1\n+ */\n+public class DocumentRouteDeletedListener implements EventListener {\n+\n+    protected static final String QUERY_GET_TASKS_RELATED_TO_DOCUMENT_ROUTE = \"SELECT * FROM Document WHERE \"\n+            + TASK_PROCESS_ID_PROPERTY_NAME + \" = '%s'\";\n+\n+    @Override\n+    public void handleEvent(Event event) {\n+        if (DocumentEventTypes.ABOUT_TO_REMOVE.equals(event.getName())) {\n+            DocumentEventContext context = (DocumentEventContext) event.getContext();\n+            DocumentModel docModel = context.getSourceDocument();\n+            if (DOCUMENT_ROUTE_DOCUMENT_TYPE.equals(docModel.getType())) {\n+                deleteOrphanTasks(context.getCoreSession()  , docModel.getId());\n+            }\n+        }\n+    }\n+\n+    /**\n+     * Deletes all tasks which processId matches the given id.\n+     *\n+     * @param session the session used to query.\n+     * @param id the deleted DocumentRoute id\n+     * @since 11.1\n+     */\n+    protected void deleteOrphanTasks(CoreSession session, String id) {\n+        String query = String.format(QUERY_GET_TASKS_RELATED_TO_DOCUMENT_ROUTE, id);\n+        session.queryProjection(query, 0, 0)\n+               .stream()\n+               .map(m -> m.get(ECM_UUID))\n+               .forEach(s -> session.removeDocument(new IdRef((String) s)));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1a350e0a318dd58fb4a47575e442c87a45a920dd"}, "originalPosition": 66}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjc3MDAxNg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                <listener async=\"true\" postCommit=\"false\"\n          \n          \n            \n                <listener async=\"true\" postCommit=\"true\"", "url": "https://github.com/nuxeo/nuxeo/pull/4090#discussion_r436770016", "createdAt": "2020-06-08T14:53:05Z", "author": {"login": "troger"}, "path": "modules/platform/nuxeo-platform-document-routing/nuxeo-routing-core/src/main/resources/OSGI-INF/document-routing-listeners-contrib.xml", "diffHunk": "@@ -47,6 +47,12 @@\n       class=\"org.nuxeo.ecm.platform.routing.core.listener.RoutingTaskDeletedListener\">\n       <event>aboutToRemove</event>\n     </listener>\n+    \n+    <listener async=\"true\" postCommit=\"false\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1a350e0a318dd58fb4a47575e442c87a45a920dd"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjc3MDk4OQ==", "bodyText": "Would put name attribute on the first line with async and postcommit (like other in the file).", "url": "https://github.com/nuxeo/nuxeo/pull/4090#discussion_r436770989", "createdAt": "2020-06-08T14:54:01Z", "author": {"login": "troger"}, "path": "modules/platform/nuxeo-platform-document-routing/nuxeo-routing-core/src/main/resources/OSGI-INF/document-routing-listeners-contrib.xml", "diffHunk": "@@ -47,6 +47,12 @@\n       class=\"org.nuxeo.ecm.platform.routing.core.listener.RoutingTaskDeletedListener\">\n       <event>aboutToRemove</event>\n     </listener>\n+    \n+    <listener async=\"true\" postCommit=\"false\"\n+      class=\"org.nuxeo.ecm.platform.routing.core.listener.DocumentRouteDeletedListener\"\n+      name=\"removeTasksForDeletedDocumentRoute\">", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1a350e0a318dd58fb4a47575e442c87a45a920dd"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjc3MjYzMQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    DocumentModel taskDocument = session.createDocumentModel(\"/default-domain/workspaces\", \"dummyTask\",\n          \n          \n            \n                    DocumentModel task = session.createDocumentModel(\"/default-domain/workspaces\", \"dummyTask\",", "url": "https://github.com/nuxeo/nuxeo/pull/4090#discussion_r436772631", "createdAt": "2020-06-08T14:55:40Z", "author": {"login": "troger"}, "path": "modules/platform/nuxeo-platform-document-routing/nuxeo-routing-core/src/test/java/org/nuxeo/ecm/platform/routing/test/TestDocumentRoutingService.java", "diffHunk": "@@ -361,6 +367,25 @@ public void testExecuteSimpleRouteWithConditionalStep() {\n         assertEquals(\"canceled\", children.get(2).getCurrentLifeCycleState());\n     }\n \n+    @Test\n+    public void testOrphanTasksDeletion() {\n+        DocumentModel route = session.createDocumentModel(\"/default-domain/workspaces\", \"dummyRoute\",\n+                DOCUMENT_ROUTE_DOCUMENT_TYPE);\n+        route.setPropertyValue(TITLE_PROPERTY_NAME, \"dummyRoute\");\n+        route = session.createDocument(route);\n+\n+        DocumentModel taskDocument = session.createDocumentModel(\"/default-domain/workspaces\", \"dummyTask\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1a350e0a318dd58fb4a47575e442c87a45a920dd"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjc3MzI3MA==", "bodyText": "No newline.", "url": "https://github.com/nuxeo/nuxeo/pull/4090#discussion_r436773270", "createdAt": "2020-06-08T14:56:19Z", "author": {"login": "troger"}, "path": "modules/platform/nuxeo-platform-document-routing/nuxeo-routing-core/src/test/java/org/nuxeo/ecm/platform/routing/test/TestDocumentRoutingService.java", "diffHunk": "@@ -361,6 +367,25 @@ public void testExecuteSimpleRouteWithConditionalStep() {\n         assertEquals(\"canceled\", children.get(2).getCurrentLifeCycleState());\n     }\n \n+    @Test\n+    public void testOrphanTasksDeletion() {\n+        DocumentModel route = session.createDocumentModel(\"/default-domain/workspaces\", \"dummyRoute\",\n+                DOCUMENT_ROUTE_DOCUMENT_TYPE);\n+        route.setPropertyValue(TITLE_PROPERTY_NAME, \"dummyRoute\");\n+        route = session.createDocument(route);\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1a350e0a318dd58fb4a47575e442c87a45a920dd"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjc3NDE4MQ==", "bodyText": "Not needed?\nAnd if not needed, transform it to a newline to ease readability between test initialization and actual test.", "url": "https://github.com/nuxeo/nuxeo/pull/4090#discussion_r436774181", "createdAt": "2020-06-08T14:57:28Z", "author": {"login": "troger"}, "path": "modules/platform/nuxeo-platform-document-routing/nuxeo-routing-core/src/test/java/org/nuxeo/ecm/platform/routing/test/TestDocumentRoutingService.java", "diffHunk": "@@ -361,6 +367,25 @@ public void testExecuteSimpleRouteWithConditionalStep() {\n         assertEquals(\"canceled\", children.get(2).getCurrentLifeCycleState());\n     }\n \n+    @Test\n+    public void testOrphanTasksDeletion() {\n+        DocumentModel route = session.createDocumentModel(\"/default-domain/workspaces\", \"dummyRoute\",\n+                DOCUMENT_ROUTE_DOCUMENT_TYPE);\n+        route.setPropertyValue(TITLE_PROPERTY_NAME, \"dummyRoute\");\n+        route = session.createDocument(route);\n+\n+        DocumentModel taskDocument = session.createDocumentModel(\"/default-domain/workspaces\", \"dummyTask\",\n+                TASK_TYPE_NAME);\n+        taskDocument.setPropertyValue(TASK_PROCESS_ID_PROPERTY_NAME, route.getId());\n+        taskDocument = session.createDocument(taskDocument);\n+        session.save();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1a350e0a318dd58fb4a47575e442c87a45a920dd"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjc3NTk5Nw==", "bodyText": "Should use txFeature.nextTransaction ()just after the document removal as the listener is async postcommit, so the transaction needs to be committed.", "url": "https://github.com/nuxeo/nuxeo/pull/4090#discussion_r436775997", "createdAt": "2020-06-08T14:59:58Z", "author": {"login": "troger"}, "path": "modules/platform/nuxeo-platform-document-routing/nuxeo-routing-core/src/test/java/org/nuxeo/ecm/platform/routing/test/TestDocumentRoutingService.java", "diffHunk": "@@ -361,6 +367,25 @@ public void testExecuteSimpleRouteWithConditionalStep() {\n         assertEquals(\"canceled\", children.get(2).getCurrentLifeCycleState());\n     }\n \n+    @Test\n+    public void testOrphanTasksDeletion() {\n+        DocumentModel route = session.createDocumentModel(\"/default-domain/workspaces\", \"dummyRoute\",\n+                DOCUMENT_ROUTE_DOCUMENT_TYPE);\n+        route.setPropertyValue(TITLE_PROPERTY_NAME, \"dummyRoute\");\n+        route = session.createDocument(route);\n+\n+        DocumentModel taskDocument = session.createDocumentModel(\"/default-domain/workspaces\", \"dummyTask\",\n+                TASK_TYPE_NAME);\n+        taskDocument.setPropertyValue(TASK_PROCESS_ID_PROPERTY_NAME, route.getId());\n+        taskDocument = session.createDocument(taskDocument);\n+        session.save();\n+        session.removeDocument(route.getRef());\n+        if (session.exists(taskDocument.getRef())) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1a350e0a318dd58fb4a47575e442c87a45a920dd"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjc3NjY1Mg==", "bodyText": "What about assertFalse? \ud83d\ude04", "url": "https://github.com/nuxeo/nuxeo/pull/4090#discussion_r436776652", "createdAt": "2020-06-08T15:00:53Z", "author": {"login": "troger"}, "path": "modules/platform/nuxeo-platform-document-routing/nuxeo-routing-core/src/test/java/org/nuxeo/ecm/platform/routing/test/TestDocumentRoutingService.java", "diffHunk": "@@ -361,6 +367,25 @@ public void testExecuteSimpleRouteWithConditionalStep() {\n         assertEquals(\"canceled\", children.get(2).getCurrentLifeCycleState());\n     }\n \n+    @Test\n+    public void testOrphanTasksDeletion() {\n+        DocumentModel route = session.createDocumentModel(\"/default-domain/workspaces\", \"dummyRoute\",\n+                DOCUMENT_ROUTE_DOCUMENT_TYPE);\n+        route.setPropertyValue(TITLE_PROPERTY_NAME, \"dummyRoute\");\n+        route = session.createDocument(route);\n+\n+        DocumentModel taskDocument = session.createDocumentModel(\"/default-domain/workspaces\", \"dummyTask\",\n+                TASK_TYPE_NAME);\n+        taskDocument.setPropertyValue(TASK_PROCESS_ID_PROPERTY_NAME, route.getId());\n+        taskDocument = session.createDocument(taskDocument);\n+        session.save();\n+        session.removeDocument(route.getRef());\n+        if (session.exists(taskDocument.getRef())) {\n+            // Orphan tasks should not be found\n+            fail();\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1a350e0a318dd58fb4a47575e442c87a45a920dd"}, "originalPosition": 40}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1a350e0a318dd58fb4a47575e442c87a45a920dd", "author": {"user": {"login": "NourNuxeo", "name": "Nour AL KOTOB"}}, "url": "https://github.com/nuxeo/nuxeo/commit/1a350e0a318dd58fb4a47575e442c87a45a920dd", "committedDate": "2020-06-03T11:38:44Z", "message": "NXP-29099: add an orphaned Tasks listener"}, "afterCommit": {"oid": "8df4f711e9d77b8dfa8cb2c9336f34581e26c3fc", "author": {"user": {"login": "NourNuxeo", "name": "Nour AL KOTOB"}}, "url": "https://github.com/nuxeo/nuxeo/commit/8df4f711e9d77b8dfa8cb2c9336f34581e26c3fc", "committedDate": "2020-06-08T16:19:55Z", "message": "NXP-29099: add an orphaned Tasks listener"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI2NDcxMjAy", "url": "https://github.com/nuxeo/nuxeo/pull/4090#pullrequestreview-426471202", "createdAt": "2020-06-08T17:42:24Z", "commit": {"oid": "8df4f711e9d77b8dfa8cb2c9336f34581e26c3fc"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxNzo0MjoyNVrOGgpMOg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxNzo0MjoyNVrOGgpMOg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjg4MjQ5MA==", "bodyText": "CoreFeature already includes TransactionalFeature, so no need to redefined the @Features annotation.", "url": "https://github.com/nuxeo/nuxeo/pull/4090#discussion_r436882490", "createdAt": "2020-06-08T17:42:25Z", "author": {"login": "troger"}, "path": "modules/platform/nuxeo-platform-document-routing/nuxeo-routing-core/src/test/java/org/nuxeo/ecm/platform/routing/test/TestDocumentRoutingService.java", "diffHunk": "@@ -46,17 +53,24 @@\n import org.nuxeo.ecm.core.api.security.impl.ACPImpl;\n import org.nuxeo.ecm.core.api.security.impl.UserEntryImpl;\n import org.nuxeo.ecm.core.event.EventService;\n+import org.nuxeo.ecm.core.test.CoreFeature;\n import org.nuxeo.ecm.platform.routing.api.DocumentRoute;\n import org.nuxeo.ecm.platform.routing.api.DocumentRouteElement;\n import org.nuxeo.ecm.platform.routing.api.DocumentRouteTableElement;\n import org.nuxeo.ecm.platform.routing.api.DocumentRoutingConstants;\n import org.nuxeo.ecm.platform.routing.api.exception.DocumentRouteAlredayLockedException;\n import org.nuxeo.ecm.platform.routing.api.exception.DocumentRouteNotLockedException;\n import org.nuxeo.runtime.api.Framework;\n+import org.nuxeo.runtime.test.runner.Features;\n+import org.nuxeo.runtime.test.runner.TransactionalFeature;\n import org.nuxeo.runtime.transaction.TransactionHelper;\n \n+@Features({ CoreFeature.class, DirectoryFeature.class, TransactionalFeature.class })", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8df4f711e9d77b8dfa8cb2c9336f34581e26c3fc"}, "originalPosition": 38}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI2ODgzNTAx", "url": "https://github.com/nuxeo/nuxeo/pull/4090#pullrequestreview-426883501", "createdAt": "2020-06-09T08:02:22Z", "commit": {"oid": "8df4f711e9d77b8dfa8cb2c9336f34581e26c3fc"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQwODowMjoyMlrOGg9Vqw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQwODowNzoyMlrOGg9gxg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzIxMjU4Nw==", "bodyText": "This test is not needed since the event bundle is filtered regarding the events defined to trigger the listener in its descriptor.", "url": "https://github.com/nuxeo/nuxeo/pull/4090#discussion_r437212587", "createdAt": "2020-06-09T08:02:22Z", "author": {"login": "ataillefer"}, "path": "modules/platform/nuxeo-platform-document-routing/nuxeo-routing-core/src/main/java/org/nuxeo/ecm/platform/routing/core/listener/DocumentRouteDeletedListener.java", "diffHunk": "@@ -0,0 +1,73 @@\n+/*\n+ * (C) Copyright 2020 Nuxeo (http://nuxeo.com/) and others.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ * Contributors:\n+ *     Nour AL KOTOB\n+ */\n+package org.nuxeo.ecm.platform.routing.core.listener;\n+\n+import static org.nuxeo.ecm.core.api.event.DocumentEventTypes.DOCUMENT_REMOVED;\n+import static org.nuxeo.ecm.core.query.sql.NXQL.ECM_UUID;\n+import static org.nuxeo.ecm.platform.routing.api.DocumentRoutingConstants.DOCUMENT_ROUTE_DOCUMENT_TYPE;\n+import static org.nuxeo.ecm.platform.task.TaskConstants.TASK_PROCESS_ID_PROPERTY_NAME;\n+\n+import org.nuxeo.ecm.core.api.CoreSession;\n+import org.nuxeo.ecm.core.api.DocumentModel;\n+import org.nuxeo.ecm.core.api.IdRef;\n+import org.nuxeo.ecm.core.event.Event;\n+import org.nuxeo.ecm.core.event.EventBundle;\n+import org.nuxeo.ecm.core.event.PostCommitEventListener;\n+import org.nuxeo.ecm.core.event.impl.DocumentEventContext;\n+\n+/**\n+ * Listener that deletes orphan Tasks.\n+ *\n+ * @since 11.1\n+ */\n+public class DocumentRouteDeletedListener implements PostCommitEventListener {\n+\n+    protected static final String QUERY_GET_TASKS_RELATED_TO_DOCUMENT_ROUTE = \"SELECT * FROM Document WHERE \"\n+            + TASK_PROCESS_ID_PROPERTY_NAME + \" = '%s'\";\n+\n+    @Override\n+    public void handleEvent(EventBundle events) {\n+        for (Event event : events) {\n+            if (DOCUMENT_REMOVED.equals(event.getName())) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8df4f711e9d77b8dfa8cb2c9336f34581e26c3fc"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzIxMzc1OQ==", "bodyText": "We often do a check before casting:\nif (!(context instanceof DocumentEventContext)) {\n    return;\n}\n\nbut I'm not sure it's relevant, maybe we can assume the context is always a DocumentEventContext.", "url": "https://github.com/nuxeo/nuxeo/pull/4090#discussion_r437213759", "createdAt": "2020-06-09T08:04:28Z", "author": {"login": "ataillefer"}, "path": "modules/platform/nuxeo-platform-document-routing/nuxeo-routing-core/src/main/java/org/nuxeo/ecm/platform/routing/core/listener/DocumentRouteDeletedListener.java", "diffHunk": "@@ -0,0 +1,73 @@\n+/*\n+ * (C) Copyright 2020 Nuxeo (http://nuxeo.com/) and others.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ * Contributors:\n+ *     Nour AL KOTOB\n+ */\n+package org.nuxeo.ecm.platform.routing.core.listener;\n+\n+import static org.nuxeo.ecm.core.api.event.DocumentEventTypes.DOCUMENT_REMOVED;\n+import static org.nuxeo.ecm.core.query.sql.NXQL.ECM_UUID;\n+import static org.nuxeo.ecm.platform.routing.api.DocumentRoutingConstants.DOCUMENT_ROUTE_DOCUMENT_TYPE;\n+import static org.nuxeo.ecm.platform.task.TaskConstants.TASK_PROCESS_ID_PROPERTY_NAME;\n+\n+import org.nuxeo.ecm.core.api.CoreSession;\n+import org.nuxeo.ecm.core.api.DocumentModel;\n+import org.nuxeo.ecm.core.api.IdRef;\n+import org.nuxeo.ecm.core.event.Event;\n+import org.nuxeo.ecm.core.event.EventBundle;\n+import org.nuxeo.ecm.core.event.PostCommitEventListener;\n+import org.nuxeo.ecm.core.event.impl.DocumentEventContext;\n+\n+/**\n+ * Listener that deletes orphan Tasks.\n+ *\n+ * @since 11.1\n+ */\n+public class DocumentRouteDeletedListener implements PostCommitEventListener {\n+\n+    protected static final String QUERY_GET_TASKS_RELATED_TO_DOCUMENT_ROUTE = \"SELECT * FROM Document WHERE \"\n+            + TASK_PROCESS_ID_PROPERTY_NAME + \" = '%s'\";\n+\n+    @Override\n+    public void handleEvent(EventBundle events) {\n+        for (Event event : events) {\n+            if (DOCUMENT_REMOVED.equals(event.getName())) {\n+                DocumentEventContext context = (DocumentEventContext) event.getContext();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8df4f711e9d77b8dfa8cb2c9336f34581e26c3fc"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzIxNDM0Mg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * Deletes all tasks which processId matches the given id.\n          \n          \n            \n                 * Deletes all tasks whose processId matches the given id.", "url": "https://github.com/nuxeo/nuxeo/pull/4090#discussion_r437214342", "createdAt": "2020-06-09T08:05:24Z", "author": {"login": "ataillefer"}, "path": "modules/platform/nuxeo-platform-document-routing/nuxeo-routing-core/src/main/java/org/nuxeo/ecm/platform/routing/core/listener/DocumentRouteDeletedListener.java", "diffHunk": "@@ -0,0 +1,73 @@\n+/*\n+ * (C) Copyright 2020 Nuxeo (http://nuxeo.com/) and others.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ * Contributors:\n+ *     Nour AL KOTOB\n+ */\n+package org.nuxeo.ecm.platform.routing.core.listener;\n+\n+import static org.nuxeo.ecm.core.api.event.DocumentEventTypes.DOCUMENT_REMOVED;\n+import static org.nuxeo.ecm.core.query.sql.NXQL.ECM_UUID;\n+import static org.nuxeo.ecm.platform.routing.api.DocumentRoutingConstants.DOCUMENT_ROUTE_DOCUMENT_TYPE;\n+import static org.nuxeo.ecm.platform.task.TaskConstants.TASK_PROCESS_ID_PROPERTY_NAME;\n+\n+import org.nuxeo.ecm.core.api.CoreSession;\n+import org.nuxeo.ecm.core.api.DocumentModel;\n+import org.nuxeo.ecm.core.api.IdRef;\n+import org.nuxeo.ecm.core.event.Event;\n+import org.nuxeo.ecm.core.event.EventBundle;\n+import org.nuxeo.ecm.core.event.PostCommitEventListener;\n+import org.nuxeo.ecm.core.event.impl.DocumentEventContext;\n+\n+/**\n+ * Listener that deletes orphan Tasks.\n+ *\n+ * @since 11.1\n+ */\n+public class DocumentRouteDeletedListener implements PostCommitEventListener {\n+\n+    protected static final String QUERY_GET_TASKS_RELATED_TO_DOCUMENT_ROUTE = \"SELECT * FROM Document WHERE \"\n+            + TASK_PROCESS_ID_PROPERTY_NAME + \" = '%s'\";\n+\n+    @Override\n+    public void handleEvent(EventBundle events) {\n+        for (Event event : events) {\n+            if (DOCUMENT_REMOVED.equals(event.getName())) {\n+                DocumentEventContext context = (DocumentEventContext) event.getContext();\n+                DocumentModel docModel = context.getSourceDocument();\n+                if (DOCUMENT_ROUTE_DOCUMENT_TYPE.equals(docModel.getType())) {\n+                    deleteOrphanTasks(context.getCoreSession(), docModel.getId());\n+                }\n+            }\n+        }\n+    }\n+\n+    /**\n+     * Deletes all tasks which processId matches the given id.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8df4f711e9d77b8dfa8cb2c9336f34581e26c3fc"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzIxNTA5MA==", "bodyText": "I would remove the params and say in the main Javadoc \"Deletes all tasks whose process id matches the given DocumentRoute id.\".", "url": "https://github.com/nuxeo/nuxeo/pull/4090#discussion_r437215090", "createdAt": "2020-06-09T08:06:46Z", "author": {"login": "ataillefer"}, "path": "modules/platform/nuxeo-platform-document-routing/nuxeo-routing-core/src/main/java/org/nuxeo/ecm/platform/routing/core/listener/DocumentRouteDeletedListener.java", "diffHunk": "@@ -0,0 +1,73 @@\n+/*\n+ * (C) Copyright 2020 Nuxeo (http://nuxeo.com/) and others.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ * Contributors:\n+ *     Nour AL KOTOB\n+ */\n+package org.nuxeo.ecm.platform.routing.core.listener;\n+\n+import static org.nuxeo.ecm.core.api.event.DocumentEventTypes.DOCUMENT_REMOVED;\n+import static org.nuxeo.ecm.core.query.sql.NXQL.ECM_UUID;\n+import static org.nuxeo.ecm.platform.routing.api.DocumentRoutingConstants.DOCUMENT_ROUTE_DOCUMENT_TYPE;\n+import static org.nuxeo.ecm.platform.task.TaskConstants.TASK_PROCESS_ID_PROPERTY_NAME;\n+\n+import org.nuxeo.ecm.core.api.CoreSession;\n+import org.nuxeo.ecm.core.api.DocumentModel;\n+import org.nuxeo.ecm.core.api.IdRef;\n+import org.nuxeo.ecm.core.event.Event;\n+import org.nuxeo.ecm.core.event.EventBundle;\n+import org.nuxeo.ecm.core.event.PostCommitEventListener;\n+import org.nuxeo.ecm.core.event.impl.DocumentEventContext;\n+\n+/**\n+ * Listener that deletes orphan Tasks.\n+ *\n+ * @since 11.1\n+ */\n+public class DocumentRouteDeletedListener implements PostCommitEventListener {\n+\n+    protected static final String QUERY_GET_TASKS_RELATED_TO_DOCUMENT_ROUTE = \"SELECT * FROM Document WHERE \"\n+            + TASK_PROCESS_ID_PROPERTY_NAME + \" = '%s'\";\n+\n+    @Override\n+    public void handleEvent(EventBundle events) {\n+        for (Event event : events) {\n+            if (DOCUMENT_REMOVED.equals(event.getName())) {\n+                DocumentEventContext context = (DocumentEventContext) event.getContext();\n+                DocumentModel docModel = context.getSourceDocument();\n+                if (DOCUMENT_ROUTE_DOCUMENT_TYPE.equals(docModel.getType())) {\n+                    deleteOrphanTasks(context.getCoreSession(), docModel.getId());\n+                }\n+            }\n+        }\n+    }\n+\n+    /**\n+     * Deletes all tasks which processId matches the given id.\n+     *\n+     * @param session the session used to query\n+     * @param id the deleted DocumentRoute id", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8df4f711e9d77b8dfa8cb2c9336f34581e26c3fc"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzIxNTQzMA==", "bodyText": "Is this needed?", "url": "https://github.com/nuxeo/nuxeo/pull/4090#discussion_r437215430", "createdAt": "2020-06-09T08:07:22Z", "author": {"login": "ataillefer"}, "path": "modules/platform/nuxeo-platform-document-routing/nuxeo-routing-core/src/test/java/org/nuxeo/ecm/platform/routing/test/TestDocumentRoutingService.java", "diffHunk": "@@ -361,6 +375,21 @@ public void testExecuteSimpleRouteWithConditionalStep() {\n         assertEquals(\"canceled\", children.get(2).getCurrentLifeCycleState());\n     }\n \n+    @Test\n+    public void testOrphanTasksDeletion() {\n+        DocumentModel route = session.createDocumentModel(\"/default-domain/workspaces\", \"dummyRoute\",\n+                DOCUMENT_ROUTE_DOCUMENT_TYPE);\n+        route.setPropertyValue(TITLE_PROPERTY_NAME, \"dummyRoute\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8df4f711e9d77b8dfa8cb2c9336f34581e26c3fc"}, "originalPosition": 55}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8df4f711e9d77b8dfa8cb2c9336f34581e26c3fc", "author": {"user": {"login": "NourNuxeo", "name": "Nour AL KOTOB"}}, "url": "https://github.com/nuxeo/nuxeo/commit/8df4f711e9d77b8dfa8cb2c9336f34581e26c3fc", "committedDate": "2020-06-08T16:19:55Z", "message": "NXP-29099: add an orphaned Tasks listener"}, "afterCommit": {"oid": "cb595ba9fac8681d386c1dd0ad79c3be6810343e", "author": {"user": {"login": "NourNuxeo", "name": "Nour AL KOTOB"}}, "url": "https://github.com/nuxeo/nuxeo/commit/cb595ba9fac8681d386c1dd0ad79c3be6810343e", "committedDate": "2020-06-09T10:10:27Z", "message": "NXP-29099: add an orphaned Tasks listener"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI3MTQxOTMw", "url": "https://github.com/nuxeo/nuxeo/pull/4090#pullrequestreview-427141930", "createdAt": "2020-06-09T13:26:45Z", "commit": {"oid": "cb595ba9fac8681d386c1dd0ad79c3be6810343e"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI3MjA5MzI0", "url": "https://github.com/nuxeo/nuxeo/pull/4090#pullrequestreview-427209324", "createdAt": "2020-06-09T14:27:50Z", "commit": {"oid": "cb595ba9fac8681d386c1dd0ad79c3be6810343e"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxNDoyNzo1MVrOGhM1rQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxNDoyNzo1MVrOGhM1rQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzQ2NjU0MQ==", "bodyText": "Why do you need to add @Features? It should not be needed.", "url": "https://github.com/nuxeo/nuxeo/pull/4090#discussion_r437466541", "createdAt": "2020-06-09T14:27:51Z", "author": {"login": "troger"}, "path": "modules/platform/nuxeo-platform-document-routing/nuxeo-routing-core/src/test/java/org/nuxeo/ecm/platform/routing/test/TestDocumentRoutingService.java", "diffHunk": "@@ -46,17 +53,24 @@\n import org.nuxeo.ecm.core.api.security.impl.ACPImpl;\n import org.nuxeo.ecm.core.api.security.impl.UserEntryImpl;\n import org.nuxeo.ecm.core.event.EventService;\n+import org.nuxeo.ecm.core.test.CoreFeature;\n import org.nuxeo.ecm.platform.routing.api.DocumentRoute;\n import org.nuxeo.ecm.platform.routing.api.DocumentRouteElement;\n import org.nuxeo.ecm.platform.routing.api.DocumentRouteTableElement;\n import org.nuxeo.ecm.platform.routing.api.DocumentRoutingConstants;\n import org.nuxeo.ecm.platform.routing.api.exception.DocumentRouteAlredayLockedException;\n import org.nuxeo.ecm.platform.routing.api.exception.DocumentRouteNotLockedException;\n import org.nuxeo.runtime.api.Framework;\n+import org.nuxeo.runtime.test.runner.Features;\n+import org.nuxeo.runtime.test.runner.TransactionalFeature;\n import org.nuxeo.runtime.transaction.TransactionHelper;\n \n+@Features({ CoreFeature.class, DirectoryFeature.class })", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cb595ba9fac8681d386c1dd0ad79c3be6810343e"}, "originalPosition": 38}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9f5a5e8c450b0e310241ca78f7c5c8c709988a2c", "author": {"user": {"login": "NourNuxeo", "name": "Nour AL KOTOB"}}, "url": "https://github.com/nuxeo/nuxeo/commit/9f5a5e8c450b0e310241ca78f7c5c8c709988a2c", "committedDate": "2020-06-09T14:34:20Z", "message": "NXP-29099: add an orphaned Tasks listener"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "cb595ba9fac8681d386c1dd0ad79c3be6810343e", "author": {"user": {"login": "NourNuxeo", "name": "Nour AL KOTOB"}}, "url": "https://github.com/nuxeo/nuxeo/commit/cb595ba9fac8681d386c1dd0ad79c3be6810343e", "committedDate": "2020-06-09T10:10:27Z", "message": "NXP-29099: add an orphaned Tasks listener"}, "afterCommit": {"oid": "9f5a5e8c450b0e310241ca78f7c5c8c709988a2c", "author": {"user": {"login": "NourNuxeo", "name": "Nour AL KOTOB"}}, "url": "https://github.com/nuxeo/nuxeo/commit/9f5a5e8c450b0e310241ca78f7c5c8c709988a2c", "committedDate": "2020-06-09T14:34:20Z", "message": "NXP-29099: add an orphaned Tasks listener"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI3MzIwMzc4", "url": "https://github.com/nuxeo/nuxeo/pull/4090#pullrequestreview-427320378", "createdAt": "2020-06-09T16:07:23Z", "commit": {"oid": "9f5a5e8c450b0e310241ca78f7c5c8c709988a2c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI3NDg1NTU4", "url": "https://github.com/nuxeo/nuxeo/pull/4090#pullrequestreview-427485558", "createdAt": "2020-06-09T19:44:25Z", "commit": {"oid": "9f5a5e8c450b0e310241ca78f7c5c8c709988a2c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4750, "cost": 1, "resetAt": "2021-11-03T18:41:40Z"}}}