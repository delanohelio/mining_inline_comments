{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE2ODU5MjY5", "number": 4444, "title": "NXP-29587: Scroller produces records downstream depending on a thres\u2026", "bodyText": "\u2026hold\nIf the bulk scroller materialize more than 1m ids, records are sent\ndownstream to prevent a possible OOM.", "createdAt": "2020-11-06T16:41:04Z", "url": "https://github.com/nuxeo/nuxeo/pull/4444", "merged": true, "mergeCommit": {"oid": "e4ae3182bdbeac1406713a4dbd4413a504e2a65e"}, "closed": true, "closedAt": "2020-11-09T20:45:12Z", "author": {"login": "bdelbosc"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdZ5vLsABqjM5NjgwMjk2NjA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABda3KUdgFqTUyNjQxMzkwOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "36ba717042d38a906b7e0c2ba60f2192e2d45f58", "author": {"user": {"login": "bdelbosc", "name": "Benoit Delbosc"}}, "url": "https://github.com/nuxeo/nuxeo/commit/36ba717042d38a906b7e0c2ba60f2192e2d45f58", "committedDate": "2020-11-06T16:39:11Z", "message": "NXP-29587: Scroller produces records downstream depending on a threashold\n\nIf the bulk scroller materialize more than 1m ids, records are sent\ndownstream to prevent a possible OOM."}, "afterCommit": {"oid": "cdf3174a2286d338edaad5025e80e2f7b4bfe4b2", "author": {"user": {"login": "bdelbosc", "name": "Benoit Delbosc"}}, "url": "https://github.com/nuxeo/nuxeo/commit/cdf3174a2286d338edaad5025e80e2f7b4bfe4b2", "committedDate": "2020-11-06T16:41:14Z", "message": "NXP-29587: Scroller produces records downstream depending on a threshold\n\nIf the bulk scroller materialize more than 1m ids, records are sent\ndownstream to prevent a possible OOM."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI2MTAzNTk3", "url": "https://github.com/nuxeo/nuxeo/pull/4444#pullrequestreview-526103597", "createdAt": "2020-11-09T10:14:07Z", "commit": {"oid": "cdf3174a2286d338edaad5025e80e2f7b4bfe4b2"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxMDoxNDowN1rOHvnmUg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxMDoxNDowN1rOHvnmUg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTY5MzkwNg==", "bodyText": "This constant isn't used...", "url": "https://github.com/nuxeo/nuxeo/pull/4444#discussion_r519693906", "createdAt": "2020-11-09T10:14:07Z", "author": {"login": "efge"}, "path": "modules/core/nuxeo-core-bulk/src/main/java/org/nuxeo/ecm/core/bulk/BulkAdminServiceImpl.java", "diffHunk": "@@ -47,6 +47,13 @@\n \n     public static final String BULK_SCROLL_PRODUCE_IMMEDIATE_PROPERTY = \"nuxeo.core.bulk.scroller.produceImmediate\";\n \n+    // @since 11.4\n+    public static final String BULK_SCROLL_PRODUCE_IMMEDIATE_THRESHOLD_PROPERTY = \"nuxeo.core.bulk.scroller.produceImmediateThreshold\";\n+\n+    // by default switch to produce immediate when there are more than 1m ids\n+    // @since 11.4\n+    public static final int DEFAULT_PRODUCE_IMMEDIATE_THRESHOLD_PROPERTY = 1_000_000;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cdf3174a2286d338edaad5025e80e2f7b4bfe4b2"}, "originalPosition": 9}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "cdf3174a2286d338edaad5025e80e2f7b4bfe4b2", "author": {"user": {"login": "bdelbosc", "name": "Benoit Delbosc"}}, "url": "https://github.com/nuxeo/nuxeo/commit/cdf3174a2286d338edaad5025e80e2f7b4bfe4b2", "committedDate": "2020-11-06T16:41:14Z", "message": "NXP-29587: Scroller produces records downstream depending on a threshold\n\nIf the bulk scroller materialize more than 1m ids, records are sent\ndownstream to prevent a possible OOM."}, "afterCommit": {"oid": "cc0e27e76576c943ba250f12becbbd0d23b237fa", "author": {"user": {"login": "bdelbosc", "name": "Benoit Delbosc"}}, "url": "https://github.com/nuxeo/nuxeo/commit/cc0e27e76576c943ba250f12becbbd0d23b237fa", "committedDate": "2020-11-09T15:39:28Z", "message": "NXP-29587: Scroller produces records downstream depending on a threshold\n\nIf the bulk scroller materialize more than 1m ids, records are sent\ndownstream to prevent a possible OOM."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "35d169e86307fe2d141b0846460a3ed05ee5d9f7", "author": {"user": {"login": "bdelbosc", "name": "Benoit Delbosc"}}, "url": "https://github.com/nuxeo/nuxeo/commit/35d169e86307fe2d141b0846460a3ed05ee5d9f7", "committedDate": "2020-11-09T15:40:53Z", "message": "NXP-29587: Scroller produces records downstream depending on a threshold\n\nIf the bulk scroller materialize more than 1m ids, records are sent\ndownstream to prevent a possible OOM."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "cc0e27e76576c943ba250f12becbbd0d23b237fa", "author": {"user": {"login": "bdelbosc", "name": "Benoit Delbosc"}}, "url": "https://github.com/nuxeo/nuxeo/commit/cc0e27e76576c943ba250f12becbbd0d23b237fa", "committedDate": "2020-11-09T15:39:28Z", "message": "NXP-29587: Scroller produces records downstream depending on a threshold\n\nIf the bulk scroller materialize more than 1m ids, records are sent\ndownstream to prevent a possible OOM."}, "afterCommit": {"oid": "35d169e86307fe2d141b0846460a3ed05ee5d9f7", "author": {"user": {"login": "bdelbosc", "name": "Benoit Delbosc"}}, "url": "https://github.com/nuxeo/nuxeo/commit/35d169e86307fe2d141b0846460a3ed05ee5d9f7", "committedDate": "2020-11-09T15:40:53Z", "message": "NXP-29587: Scroller produces records downstream depending on a threshold\n\nIf the bulk scroller materialize more than 1m ids, records are sent\ndownstream to prevent a possible OOM."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI2Mzk1ODg2", "url": "https://github.com/nuxeo/nuxeo/pull/4444#pullrequestreview-526395886", "createdAt": "2020-11-09T15:53:20Z", "commit": {"oid": "35d169e86307fe2d141b0846460a3ed05ee5d9f7"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI2NDEzOTA4", "url": "https://github.com/nuxeo/nuxeo/pull/4444#pullrequestreview-526413908", "createdAt": "2020-11-09T16:11:16Z", "commit": {"oid": "35d169e86307fe2d141b0846460a3ed05ee5d9f7"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxNjoxMToxN1rOHv2HHg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxNjoxNTowNFrOHv2Ryw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTkzMTY3OA==", "bodyText": "Isn't it worth considering a builder pattern, given the number of parameters that we now pass at construction?", "url": "https://github.com/nuxeo/nuxeo/pull/4444#discussion_r519931678", "createdAt": "2020-11-09T16:11:17Z", "author": {"login": "efge"}, "path": "modules/core/nuxeo-core-bulk/src/main/java/org/nuxeo/ecm/core/bulk/computation/BulkScrollerComputation.java", "diffHunk": "@@ -111,10 +114,18 @@ public BulkScrollerComputation(String name, int nbOutputStreams, int scrollBatch\n     // @since 11.2\n     public BulkScrollerComputation(String name, int nbOutputStreams, int scrollBatchSize, int scrollKeepAliveSeconds,\n             Duration transactionTimeout, boolean produceImmediate) {\n+        this(name, nbOutputStreams, scrollBatchSize, scrollKeepAliveSeconds, DEFAULT_SCROLL_TRANSACTION_TIMEOUT,\n+                produceImmediate, 0);\n+    }\n+\n+    // @since 11.4\n+    public BulkScrollerComputation(String name, int nbOutputStreams, int scrollBatchSize, int scrollKeepAliveSeconds,\n+            Duration transactionTimeout, boolean produceImmediate, int produceImmediateThreshold) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "35d169e86307fe2d141b0846460a3ed05ee5d9f7"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTkzNDQxMQ==", "bodyText": "Can we put contextImpl.getRecords(actionStream) in a local variable or is the semantic wrong for that?", "url": "https://github.com/nuxeo/nuxeo/pull/4444#discussion_r519934411", "createdAt": "2020-11-09T16:15:04Z", "author": {"login": "efge"}, "path": "modules/core/nuxeo-core-bulk/src/main/java/org/nuxeo/ecm/core/bulk/computation/BulkScrollerComputation.java", "diffHunk": "@@ -272,17 +283,30 @@ protected void updateStatusAfterScroll(ComputationContext context, String comman\n     /**\n      * Produces a bucket as a record to appropriate bulk action stream.\n      */\n-    protected void produceBucket(ComputationContext context, String commandId, int bucketSize, long bucketNumber) {\n+    protected void produceBucket(ComputationContext context, String commandId, int bucketSize, long bucketNumber,\n+            long documentCount) {\n         List<String> ids = documentIds.subList(0, min(bucketSize, documentIds.size()));\n         BulkBucket bucket = new BulkBucket(commandId, ids);\n         String key = commandId + \":\" + Long.toString(bucketNumber);\n         Record record = Record.of(key, BulkCodecs.getBucketCodec().encode(bucket));\n-        if (produceImmediate) {\n-            ((ComputationContextImpl) context).produceRecordImmediate(actionStream, record);\n+        if (produceImmediate || (produceImmediateThreshold > 0 && documentCount > produceImmediateThreshold)) {\n+            ComputationContextImpl contextImpl = (ComputationContextImpl) context;\n+            if (!contextImpl.getRecords(actionStream).isEmpty()) {\n+                flushRecords(contextImpl, commandId);\n+            }\n+            contextImpl.produceRecordImmediate(actionStream, record);\n         } else {\n             context.produceRecord(actionStream, record);\n         }\n         ids.clear(); // this clear the documentIds part that has been sent\n     }\n \n+    protected void flushRecords(ComputationContextImpl contextImpl, String commandId) {\n+        log.warn(\"Scroller records threshold reached ({}) for action: {} on command: {}, flushing records downstream\",\n+                produceImmediateThreshold, actionStream, commandId);\n+        contextImpl.getRecords(actionStream)\n+                   .forEach(record -> contextImpl.produceRecordImmediate(actionStream, record));\n+        contextImpl.getRecords(actionStream).clear();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "35d169e86307fe2d141b0846460a3ed05ee5d9f7"}, "originalPosition": 77}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4952, "cost": 1, "resetAt": "2021-11-03T18:41:40Z"}}}