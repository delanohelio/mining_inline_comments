{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAzNDgwMzUx", "number": 4384, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQxNjoxMjoyMFrOEw14-w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QwODo1MDoxNFrOExHTJg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE5NjUwMDQzOnYy", "diffSide": "RIGHT", "path": "modules/core/nuxeo-core-api/src/main/java/org/nuxeo/ecm/core/api/NuxeoPrincipal.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQxNjoxMjoyMFrOHmpeLg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQxNjoxMzo1OVrOHmpimw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDI4NzQwNg==", "bodyText": "Adding this kind of method on public and important API like that is an architecture change that should be discussed first. Please open a discussion on Slack in #team-platform about this, because I'm really not sure it's the best way to move forward.", "url": "https://github.com/nuxeo/nuxeo/pull/4384#discussion_r510287406", "createdAt": "2020-10-22T16:12:20Z", "author": {"login": "efge"}, "path": "modules/core/nuxeo-core-api/src/main/java/org/nuxeo/ecm/core/api/NuxeoPrincipal.java", "diffHunk": "@@ -163,6 +168,13 @@\n      */\n     boolean isAdministrator();\n \n+    /**\n+     * @since 11.4 Used in the case where we don't want to fetch the references, where we won't be able to return\n+     *        complete informations on this principal (the missing attributes will be if the principal is an\n+     *        Administrator and the groups he is in).\n+     */\n+    boolean isComplete();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bc7dd33c456ea2e79b75ee07db632bf51d8704a0"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDI4ODUzOQ==", "bodyText": "Cc @nuxeo/platform", "url": "https://github.com/nuxeo/nuxeo/pull/4384#discussion_r510288539", "createdAt": "2020-10-22T16:13:59Z", "author": {"login": "efge"}, "path": "modules/core/nuxeo-core-api/src/main/java/org/nuxeo/ecm/core/api/NuxeoPrincipal.java", "diffHunk": "@@ -163,6 +168,13 @@\n      */\n     boolean isAdministrator();\n \n+    /**\n+     * @since 11.4 Used in the case where we don't want to fetch the references, where we won't be able to return\n+     *        complete informations on this principal (the missing attributes will be if the principal is an\n+     *        Administrator and the groups he is in).\n+     */\n+    boolean isComplete();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDI4NzQwNg=="}, "originalCommit": {"oid": "bc7dd33c456ea2e79b75ee07db632bf51d8704a0"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE5OTM1MjcwOnYy", "diffSide": "RIGHT", "path": "modules/platform/nuxeo-platform-document-routing/nuxeo-routing-rest-api/src/test/java/org/nuxeo/ecm/restapi/server/WorkflowEndpointTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QwODo1MDoxNFrOHnEt-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QwODo1MDoxNFrOHnEt-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDczMzgxOA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            assertEquals(0, groups.size());\n          \n          \n            \n                            assertTrue(groups.isEmpty());", "url": "https://github.com/nuxeo/nuxeo/pull/4384#discussion_r510733818", "createdAt": "2020-10-23T08:50:14Z", "author": {"login": "troger"}, "path": "modules/platform/nuxeo-platform-document-routing/nuxeo-routing-rest-api/src/test/java/org/nuxeo/ecm/restapi/server/WorkflowEndpointTest.java", "diffHunk": "@@ -1240,11 +1240,18 @@ public void testTaskWorkflowInfo() throws IOException {\n             JsonNode initiatorNode = taskNode.get(\"workflowInitiator\");\n             assertEquals(\"user\", initiatorNode.get(\"entity-type\").textValue());\n             assertEquals(\"Administrator\", initiatorNode.get(\"id\").textValue());\n-            assertTrue(initiatorNode.get(\"isAdministrator\").booleanValue());\n             JsonNode properties = initiatorNode.get(\"properties\");\n             ArrayNode groups = (ArrayNode) properties.get(\"groups\");\n-            assertEquals(1, groups.size());\n-            assertEquals(\"administrators\", groups.get(0).textValue());\n+\n+            if(initiatorNode.get(\"isComplete\").booleanValue()==true) {\n+                assertTrue(initiatorNode.get(\"isAdministrator\").booleanValue());\n+                assertEquals(1, groups.size());\n+                assertEquals(\"administrators\", groups.get(0).textValue());\n+            }\n+            else {\n+                assertFalse(initiatorNode.get(\"isAdministrator\").booleanValue());\n+                assertEquals(0, groups.size());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bc7dd33c456ea2e79b75ee07db632bf51d8704a0"}, "originalPosition": 17}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4354, "cost": 1, "resetAt": "2021-11-03T18:41:40Z"}}}