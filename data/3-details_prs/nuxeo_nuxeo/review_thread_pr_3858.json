{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkzMDY5NDc0", "number": 3858, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxMzoyODoyNlrODtiDAQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxNDowMzozMlrODtjBpg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5MDcwMzM3OnYy", "diffSide": "RIGHT", "path": "modules/core/nuxeo-core-api/src/main/java/org/nuxeo/ecm/core/api/CoreInstance.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxMzoyODoyNlrOF_AmlA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxNDowNDo0NFrOGAW8qg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTYxNDQ4NA==", "bodyText": "If it's only for unit tests, shouldn't we move that method to test code, such as CoreFeature or something?\nDoes it make sense?", "url": "https://github.com/nuxeo/nuxeo/pull/3858#discussion_r401614484", "createdAt": "2020-04-01T13:28:26Z", "author": {"login": "troger"}, "path": "modules/core/nuxeo-core-api/src/main/java/org/nuxeo/ecm/core/api/CoreInstance.java", "diffHunk": "@@ -38,97 +38,145 @@\n     private CoreInstance() {\n     }\n \n+    /**\n+     * Gets a {@link CoreSession} for the currently logged-in user.\n+     *\n+     * @param repositoryName the repository name, or {@code null} for the default repository\n+     * @return the session\n+     * @since 11.1\n+     */\n+    public static CoreSession getCoreSession(String repositoryName) {\n+        return getCoreSession(repositoryName, getPrincipal(null));\n+    }\n+\n+    /**\n+     * MUST ONLY BE USED IN UNIT TESTS to get a {@link CoreSession} for the given user.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4a0349c9d06d5320d5a6ed3a64140b8a5762bb6a"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzAyOTE2Mg==", "bodyText": "Yes this will have to be cleaned up in the future. For now I'm keeping it also because it's used by the deprecated openCoreSession signature that delegates to it.\nAlso there's still one non-unit-test use in the CMIS code that I need to review.", "url": "https://github.com/nuxeo/nuxeo/pull/3858#discussion_r403029162", "createdAt": "2020-04-03T14:04:44Z", "author": {"login": "efge"}, "path": "modules/core/nuxeo-core-api/src/main/java/org/nuxeo/ecm/core/api/CoreInstance.java", "diffHunk": "@@ -38,97 +38,145 @@\n     private CoreInstance() {\n     }\n \n+    /**\n+     * Gets a {@link CoreSession} for the currently logged-in user.\n+     *\n+     * @param repositoryName the repository name, or {@code null} for the default repository\n+     * @return the session\n+     * @since 11.1\n+     */\n+    public static CoreSession getCoreSession(String repositoryName) {\n+        return getCoreSession(repositoryName, getPrincipal(null));\n+    }\n+\n+    /**\n+     * MUST ONLY BE USED IN UNIT TESTS to get a {@link CoreSession} for the given user.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTYxNDQ4NA=="}, "originalCommit": {"oid": "4a0349c9d06d5320d5a6ed3a64140b8a5762bb6a"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5MDczMDc4OnYy", "diffSide": "LEFT", "path": "modules/core/nuxeo-core-api/src/main/java/org/nuxeo/ecm/core/api/CloseableCoreSession.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxMzozNDo0MFrOF_A38g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxNDoxMzo0MFrOGAXT0Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTYxODkzMA==", "bodyText": "As the whole interface is deprecated, why removing the method?", "url": "https://github.com/nuxeo/nuxeo/pull/3858#discussion_r401618930", "createdAt": "2020-04-01T13:34:40Z", "author": {"login": "troger"}, "path": "modules/core/nuxeo-core-api/src/main/java/org/nuxeo/ecm/core/api/CloseableCoreSession.java", "diffHunk": "@@ -22,22 +22,18 @@\n  * Closeable Core Session.\n  *\n  * @since 10.1\n+ * @deprecated since 11.1, use just {@link CoreSession} instead\n  */\n+@Deprecated\n public interface CloseableCoreSession extends CoreSession, AutoCloseable {\n \n     /**\n-     * Closes this session.\n+     * Does nothing.\n      *\n      * @since 5.9.3\n+     * @deprecated since 11.1\n      */\n     @Override\n     void close();\n \n-    /**\n-     * Destroys any system resources held by this instance.\n-     * <p>\n-     * Called when the instance is no more needed.\n-     */\n-    void destroy();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4a0349c9d06d5320d5a6ed3a64140b8a5762bb6a"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzAzNTA4OQ==", "bodyText": "Yes I'll keep it deprecated doing nothing.", "url": "https://github.com/nuxeo/nuxeo/pull/3858#discussion_r403035089", "createdAt": "2020-04-03T14:13:40Z", "author": {"login": "efge"}, "path": "modules/core/nuxeo-core-api/src/main/java/org/nuxeo/ecm/core/api/CloseableCoreSession.java", "diffHunk": "@@ -22,22 +22,18 @@\n  * Closeable Core Session.\n  *\n  * @since 10.1\n+ * @deprecated since 11.1, use just {@link CoreSession} instead\n  */\n+@Deprecated\n public interface CloseableCoreSession extends CoreSession, AutoCloseable {\n \n     /**\n-     * Closes this session.\n+     * Does nothing.\n      *\n      * @since 5.9.3\n+     * @deprecated since 11.1\n      */\n     @Override\n     void close();\n \n-    /**\n-     * Destroys any system resources held by this instance.\n-     * <p>\n-     * Called when the instance is no more needed.\n-     */\n-    void destroy();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTYxODkzMA=="}, "originalCommit": {"oid": "4a0349c9d06d5320d5a6ed3a64140b8a5762bb6a"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5MDczNTY4OnYy", "diffSide": "RIGHT", "path": "modules/core/nuxeo-core-api/src/main/java/org/nuxeo/ecm/core/api/impl/DocumentModelImpl.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxMzozNTo0NFrOF_A68g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxNDoxNTozOFrOGAXZLg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTYxOTY5OA==", "bodyText": "Quick question, we are assuming that there is only one session (id) per user?", "url": "https://github.com/nuxeo/nuxeo/pull/3858#discussion_r401619698", "createdAt": "2020-04-01T13:35:44Z", "author": {"login": "troger"}, "path": "modules/core/nuxeo-core-api/src/main/java/org/nuxeo/ecm/core/api/impl/DocumentModelImpl.java", "diffHunk": "@@ -320,7 +340,12 @@ public String getTitle() {\n \n     @Override\n     public String getSessionId() {\n-        return sid;\n+        return principal == null ? null : repositoryName + \"/\" + principal;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4a0349c9d06d5320d5a6ed3a64140b8a5762bb6a"}, "originalPosition": 99}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzAzNjQ2Mg==", "bodyText": "There's as many CoreSession as we want per user but they don't hold any state anymore, so are all equivalent. The real state is held by the lower-level Session that is fetched through a ThreadLocal and cleaned up at transaction commit.", "url": "https://github.com/nuxeo/nuxeo/pull/3858#discussion_r403036462", "createdAt": "2020-04-03T14:15:38Z", "author": {"login": "efge"}, "path": "modules/core/nuxeo-core-api/src/main/java/org/nuxeo/ecm/core/api/impl/DocumentModelImpl.java", "diffHunk": "@@ -320,7 +340,12 @@ public String getTitle() {\n \n     @Override\n     public String getSessionId() {\n-        return sid;\n+        return principal == null ? null : repositoryName + \"/\" + principal;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTYxOTY5OA=="}, "originalCommit": {"oid": "4a0349c9d06d5320d5a6ed3a64140b8a5762bb6a"}, "originalPosition": 99}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5MDc2OTY5OnYy", "diffSide": "RIGHT", "path": "modules/core/nuxeo-core-management-jtajca/src/main/java/org/nuxeo/ecm/core/management/jtajca/internal/DefaultMonitorComponent.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxMzo0MzoxMlrOF_BQSw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxNDoxOToyOFrOGAXjIg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTYyNTE2Mw==", "bodyText": "Worth adding a comment if there is any need to call getRootDocument?", "url": "https://github.com/nuxeo/nuxeo/pull/3858#discussion_r401625163", "createdAt": "2020-04-01T13:43:12Z", "author": {"login": "troger"}, "path": "modules/core/nuxeo-core-management-jtajca/src/main/java/org/nuxeo/ecm/core/management/jtajca/internal/DefaultMonitorComponent.java", "diffHunk": "@@ -129,9 +129,8 @@ protected void install() {\n      * Make sure we open the repository, to initialize its connection manager.\n      */\n     protected void activateRepository(String repositoryName) {\n-        try (CloseableCoreSession session = CoreInstance.openCoreSessionSystem(repositoryName)) {\n-            // do nothing, just open and close\n-        }\n+        CoreSession session = CoreInstance.getCoreSessionSystem(repositoryName);\n+        session.getRootDocument();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4a0349c9d06d5320d5a6ed3a64140b8a5762bb6a"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzAzOTAxMA==", "bodyText": "Actually this method activateRepository is unused in our codebase, so I'll just deprecate it.", "url": "https://github.com/nuxeo/nuxeo/pull/3858#discussion_r403039010", "createdAt": "2020-04-03T14:19:28Z", "author": {"login": "efge"}, "path": "modules/core/nuxeo-core-management-jtajca/src/main/java/org/nuxeo/ecm/core/management/jtajca/internal/DefaultMonitorComponent.java", "diffHunk": "@@ -129,9 +129,8 @@ protected void install() {\n      * Make sure we open the repository, to initialize its connection manager.\n      */\n     protected void activateRepository(String repositoryName) {\n-        try (CloseableCoreSession session = CoreInstance.openCoreSessionSystem(repositoryName)) {\n-            // do nothing, just open and close\n-        }\n+        CoreSession session = CoreInstance.getCoreSessionSystem(repositoryName);\n+        session.getRootDocument();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTYyNTE2Mw=="}, "originalCommit": {"oid": "4a0349c9d06d5320d5a6ed3a64140b8a5762bb6a"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5MDg2Mzc0OnYy", "diffSide": "RIGHT", "path": "modules/platform/nuxeo-elasticsearch/nuxeo-elasticsearch-core/src/main/java/org/nuxeo/elasticsearch/commands/IndexingCommandsStacker.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxNDowMzozMlrOF_CL6Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxNDoyMjoxM1rOGAXp8g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTY0MDQyNQ==", "bodyText": "I'm wondering, won't it be an issue? cc @bdelbosc", "url": "https://github.com/nuxeo/nuxeo/pull/3858#discussion_r401640425", "createdAt": "2020-04-01T14:03:32Z", "author": {"login": "troger"}, "path": "modules/platform/nuxeo-elasticsearch/nuxeo-elasticsearch-core/src/main/java/org/nuxeo/elasticsearch/commands/IndexingCommandsStacker.java", "diffHunk": "@@ -212,8 +212,7 @@ protected IndexingCommands getOrCreateCommands(DocumentModel doc) {\n     }\n \n     protected String getDocKey(DocumentModel doc) {\n-        // Don't merge commands with different session, so we work only on attached doc\n-        return doc.getId() + \"#\" + doc.getSessionId();\n+        return doc.getId();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4a0349c9d06d5320d5a6ed3a64140b8a5762bb6a"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzA0MDc1NA==", "bodyText": "I already discussed it with @bdelbosc and we agreed that given that indexing is only done for a single transaction at a time and there's a cleanup of the map for which this is used as the key at the end of the transaction. So not an issue.", "url": "https://github.com/nuxeo/nuxeo/pull/3858#discussion_r403040754", "createdAt": "2020-04-03T14:22:13Z", "author": {"login": "efge"}, "path": "modules/platform/nuxeo-elasticsearch/nuxeo-elasticsearch-core/src/main/java/org/nuxeo/elasticsearch/commands/IndexingCommandsStacker.java", "diffHunk": "@@ -212,8 +212,7 @@ protected IndexingCommands getOrCreateCommands(DocumentModel doc) {\n     }\n \n     protected String getDocKey(DocumentModel doc) {\n-        // Don't merge commands with different session, so we work only on attached doc\n-        return doc.getId() + \"#\" + doc.getSessionId();\n+        return doc.getId();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTY0MDQyNQ=="}, "originalCommit": {"oid": "4a0349c9d06d5320d5a6ed3a64140b8a5762bb6a"}, "originalPosition": 6}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4211, "cost": 1, "resetAt": "2021-11-03T18:41:40Z"}}}