{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk5ODEwNjU5", "number": 3894, "title": "feature-NXP-28604-Prevent-replace-content-of-document-stored-in-S3-Glacier", "bodyText": "PR created from https://qa.nuxeo.org/jenkins/job/TestAndPush/job/ondemand-testandpush-saouana/225/\nI just want to let you know I took into account the Florent suggestion, and I made choice to add more assertions, about the fact that only blob of the main content cannot be updated and the others properties should be.", "createdAt": "2020-04-06T17:59:18Z", "url": "https://github.com/nuxeo/nuxeo/pull/3894", "merged": true, "mergeCommit": {"oid": "a825da2dcf354155b40602ba51c4c50d2e6a3bdb"}, "closed": true, "closedAt": "2020-04-08T09:52:26Z", "author": {"login": "nuxeojenkins"}, "timelineItems": {"totalCount": 18, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcVSMzXAFqTM4OTA1MTU0NQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcVkz17AFqTM4OTgyMTk4NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg5MDUxNTQ1", "url": "https://github.com/nuxeo/nuxeo/pull/3894#pullrequestreview-389051545", "createdAt": "2020-04-07T12:09:42Z", "commit": {"oid": "836e91c3b970f2e0ef9b4a6fbf43082a4d471852"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxMjowOTo0MlrOGCAdYg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxMjowOTo0MlrOGCAdYg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDc1Nzg1OA==", "bodyText": "Could you change \"ColdStored\" to \"InColdStorage\"?", "url": "https://github.com/nuxeo/nuxeo/pull/3894#discussion_r404757858", "createdAt": "2020-04-07T12:09:42Z", "author": {"login": "efge"}, "path": "modules/core/nuxeo-core/src/main/resources/OSGI-INF/coldstorage-contrib.xml", "diffHunk": "@@ -14,6 +14,10 @@\n               class=\"org.nuxeo.ecm.core.coldstorage.CheckColdStorageContentAvailabilityListener\">\n       <event>checkColdStorageContentAvailability</event>\n     </listener>\n+    <listener name=\"checkUpdateMainContentColdStored\"\n+              class=\"org.nuxeo.ecm.core.coldstorage.CheckUpdateMainContentColdStored\">", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "836e91c3b970f2e0ef9b4a6fbf43082a4d471852"}, "originalPosition": 5}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "836e91c3b970f2e0ef9b4a6fbf43082a4d471852", "author": {"user": {"login": "RSalem07", "name": "Salem Aouana"}}, "url": "https://github.com/nuxeo/nuxeo/commit/836e91c3b970f2e0ef9b4a6fbf43082a4d471852", "committedDate": "2020-04-06T12:38:37Z", "message": "NXP-28604: Prevent replace main content document which is stored in cold storage"}, "afterCommit": {"oid": "294e6560a026a9ea83467873b112306cb7fe317e", "author": {"user": {"login": "RSalem07", "name": "Salem Aouana"}}, "url": "https://github.com/nuxeo/nuxeo/commit/294e6560a026a9ea83467873b112306cb7fe317e", "committedDate": "2020-04-07T12:45:01Z", "message": "NXP-28604: Prevent replace main content document which is stored in cold storage"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "294e6560a026a9ea83467873b112306cb7fe317e", "author": {"user": {"login": "RSalem07", "name": "Salem Aouana"}}, "url": "https://github.com/nuxeo/nuxeo/commit/294e6560a026a9ea83467873b112306cb7fe317e", "committedDate": "2020-04-07T12:45:01Z", "message": "NXP-28604: Prevent replace main content document which is stored in cold storage"}, "afterCommit": {"oid": "4a628e8a653096139a08429ca873bf8074f708a2", "author": {"user": {"login": "RSalem07", "name": "Salem Aouana"}}, "url": "https://github.com/nuxeo/nuxeo/commit/4a628e8a653096139a08429ca873bf8074f708a2", "committedDate": "2020-04-07T12:47:03Z", "message": "NXP-28604: Prevent replace main content document which is stored in cold storage"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4a628e8a653096139a08429ca873bf8074f708a2", "author": {"user": {"login": "RSalem07", "name": "Salem Aouana"}}, "url": "https://github.com/nuxeo/nuxeo/commit/4a628e8a653096139a08429ca873bf8074f708a2", "committedDate": "2020-04-07T12:47:03Z", "message": "NXP-28604: Prevent replace main content document which is stored in cold storage"}, "afterCommit": {"oid": "e152f8a21a40fdc4346ce8e14ebf63b72aeb6373", "author": {"user": {"login": "RSalem07", "name": "Salem Aouana"}}, "url": "https://github.com/nuxeo/nuxeo/commit/e152f8a21a40fdc4346ce8e14ebf63b72aeb6373", "committedDate": "2020-04-07T13:13:10Z", "message": "NXP-28604: Prevent replace main content document which is stored in cold storage"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e152f8a21a40fdc4346ce8e14ebf63b72aeb6373", "author": {"user": {"login": "RSalem07", "name": "Salem Aouana"}}, "url": "https://github.com/nuxeo/nuxeo/commit/e152f8a21a40fdc4346ce8e14ebf63b72aeb6373", "committedDate": "2020-04-07T13:13:10Z", "message": "NXP-28604: Prevent replace main content document which is stored in cold storage"}, "afterCommit": {"oid": "f9128ed424f8002e9f671e0d364072b884ce0a68", "author": {"user": {"login": "RSalem07", "name": "Salem Aouana"}}, "url": "https://github.com/nuxeo/nuxeo/commit/f9128ed424f8002e9f671e0d364072b884ce0a68", "committedDate": "2020-04-07T13:19:24Z", "message": "NXP-28604: Prevent replace main content document which is stored in cold storage"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg5MTEwNzcy", "url": "https://github.com/nuxeo/nuxeo/pull/3894#pullrequestreview-389110772", "createdAt": "2020-04-07T13:24:04Z", "commit": {"oid": "f9128ed424f8002e9f671e0d364072b884ce0a68"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg5NzYyODk2", "url": "https://github.com/nuxeo/nuxeo/pull/3894#pullrequestreview-389762896", "createdAt": "2020-04-08T08:35:07Z", "commit": {"oid": "f9128ed424f8002e9f671e0d364072b884ce0a68"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQwODozNTowN1rOGCkuSw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQwODozNTowN1rOGCkuSw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTM1MjAxMQ==", "bodyText": "You could use document instead of its id to log more information.", "url": "https://github.com/nuxeo/nuxeo/pull/3894#discussion_r405352011", "createdAt": "2020-04-08T08:35:07Z", "author": {"login": "ataillefer"}, "path": "modules/core/nuxeo-core/src/main/java/org/nuxeo/ecm/core/coldstorage/CheckUpdateMainContentInColdStorage.java", "diffHunk": "@@ -0,0 +1,66 @@\n+/*\n+ * (C) Copyright 2020 Nuxeo (http://nuxeo.com/) and others.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *  \n+ * Contributors:\n+ *     Salem Aouana\n+ */\n+\n+package org.nuxeo.ecm.core.coldstorage;\n+\n+import static javax.servlet.http.HttpServletResponse.SC_FORBIDDEN;\n+\n+import org.nuxeo.ecm.core.api.DocumentModel;\n+import org.nuxeo.ecm.core.api.NuxeoException;\n+import org.nuxeo.ecm.core.api.event.CoreEventConstants;\n+import org.nuxeo.ecm.core.api.model.Property;\n+import org.nuxeo.ecm.core.blob.ColdStorageHelper;\n+import org.nuxeo.ecm.core.event.Event;\n+import org.nuxeo.ecm.core.event.EventContext;\n+import org.nuxeo.ecm.core.event.EventListener;\n+import org.nuxeo.ecm.core.event.impl.DocumentEventContext;\n+import org.nuxeo.ecm.core.schema.FacetNames;\n+\n+/**\n+ * A synchronous listener that prevents any main content document replacement when it's stored in cold storage.\n+ * \n+ * @since 11.1\n+ */\n+public class CheckUpdateMainContentInColdStorage implements EventListener {\n+\n+    @Override\n+    public void handleEvent(Event event) {\n+        EventContext eventContext = event.getContext();\n+        if (!(eventContext instanceof DocumentEventContext)) {\n+            return;\n+        }\n+\n+        DocumentModel previousDocument = (DocumentModel) eventContext.getProperty(\n+                CoreEventConstants.PREVIOUS_DOCUMENT_MODEL);\n+        if (previousDocument.hasFacet(FacetNames.COLD_STORAGE)) {\n+            if (previousDocument.getPropertyValue(ColdStorageHelper.COLD_STORAGE_CONTENT_PROPERTY) != null) {\n+                DocumentModel document = ((DocumentEventContext) eventContext).getSourceDocument();\n+                Property mainContent = document.getProperty(ColdStorageHelper.FILE_CONTENT_PROPERTY);\n+                if (mainContent.isDirty()) {\n+                    // mark the event to bubble the exception, which results on a TX rollback\n+                    event.markBubbleException();\n+                    throw new NuxeoException(String.format(\n+                            \"The main content of document: %s cannot be updated. It's already in cold storage.\",\n+                            document.getId()), SC_FORBIDDEN);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f9128ed424f8002e9f671e0d364072b884ce0a68"}, "originalPosition": 60}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg5NzY0MTQ4", "url": "https://github.com/nuxeo/nuxeo/pull/3894#pullrequestreview-389764148", "createdAt": "2020-04-08T08:36:44Z", "commit": {"oid": "f9128ed424f8002e9f671e0d364072b884ce0a68"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQwODozNjo0NFrOGCkyIQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQwODozNjo0NFrOGCkyIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTM1Mjk5Mw==", "bodyText": "Don't we want to use DocumentModel#refresh now @efge ?", "url": "https://github.com/nuxeo/nuxeo/pull/3894#discussion_r405352993", "createdAt": "2020-04-08T08:36:44Z", "author": {"login": "ataillefer"}, "path": "modules/core/nuxeo-core-test/src/test/java/org/nuxeo/ecm/core/TestColdStorage.java", "diffHunk": "@@ -244,6 +244,43 @@ public void shouldCheckAvailability() {\n         checkAvailabilityOfDocuments(Arrays.asList(documents.get(1), documents.get(2)), downloadableUntil, 0);\n     }\n \n+    @Test\n+    public void shouldFailUpdateMainContentAlreadyInColdStorage() throws IOException {\n+        // move the main content into the cold storage\n+        DocumentModel documentModel = createFileDocument(DEFAULT_DOC_NAME, true);\n+        moveAndVerifyContent(session, documentModel);\n+\n+        // we cannot update the main content as it is already in cold storage\n+        documentModel = session.getDocument(documentModel.getRef());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f9128ed424f8002e9f671e0d364072b884ce0a68"}, "originalPosition": 11}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg5NzY0NjMz", "url": "https://github.com/nuxeo/nuxeo/pull/3894#pullrequestreview-389764633", "createdAt": "2020-04-08T08:37:26Z", "commit": {"oid": "f9128ed424f8002e9f671e0d364072b884ce0a68"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQwODozNzoyNlrOGCkzqA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQwODozNzoyNlrOGCkzqA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTM1MzM4NA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    // but we should be able to update the others properties even the attachments\n          \n          \n            \n                    // but we should be able to update the other properties, even the attachments", "url": "https://github.com/nuxeo/nuxeo/pull/3894#discussion_r405353384", "createdAt": "2020-04-08T08:37:26Z", "author": {"login": "ataillefer"}, "path": "modules/core/nuxeo-core-test/src/test/java/org/nuxeo/ecm/core/TestColdStorage.java", "diffHunk": "@@ -244,6 +244,43 @@ public void shouldCheckAvailability() {\n         checkAvailabilityOfDocuments(Arrays.asList(documents.get(1), documents.get(2)), downloadableUntil, 0);\n     }\n \n+    @Test\n+    public void shouldFailUpdateMainContentAlreadyInColdStorage() throws IOException {\n+        // move the main content into the cold storage\n+        DocumentModel documentModel = createFileDocument(DEFAULT_DOC_NAME, true);\n+        moveAndVerifyContent(session, documentModel);\n+\n+        // we cannot update the main content as it is already in cold storage\n+        documentModel = session.getDocument(documentModel.getRef());\n+        documentModel.setPropertyValue(ColdStorageHelper.FILE_CONTENT_PROPERTY,\n+                (Serializable) Blobs.createBlob(FILE_CONTENT));\n+        try {\n+            session.saveDocument(documentModel);\n+            fail(\"Should fail because a main content document in cold storage cannot be updated.\");\n+        } catch (NuxeoException e) {\n+            assertEquals(SC_FORBIDDEN, e.getStatusCode());\n+            assertEquals(\n+                    String.format(\"The main content of document: %s cannot be updated. It's already in cold storage.\",\n+                            documentModel.getId()),\n+                    e.getMessage());\n+        }\n+\n+        // but we should be able to update the others properties even the attachments", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f9128ed424f8002e9f671e0d364072b884ce0a68"}, "originalPosition": 25}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg5NzY0OTI4", "url": "https://github.com/nuxeo/nuxeo/pull/3894#pullrequestreview-389764928", "createdAt": "2020-04-08T08:37:50Z", "commit": {"oid": "f9128ed424f8002e9f671e0d364072b884ce0a68"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQwODozNzo1MFrOGCk0pQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQwODozNzo1MFrOGCk0pQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTM1MzYzNw==", "bodyText": "not necessary I believe", "url": "https://github.com/nuxeo/nuxeo/pull/3894#discussion_r405353637", "createdAt": "2020-04-08T08:37:50Z", "author": {"login": "ataillefer"}, "path": "modules/core/nuxeo-core-test/src/test/java/org/nuxeo/ecm/core/TestColdStorage.java", "diffHunk": "@@ -244,6 +244,43 @@ public void shouldCheckAvailability() {\n         checkAvailabilityOfDocuments(Arrays.asList(documents.get(1), documents.get(2)), downloadableUntil, 0);\n     }\n \n+    @Test\n+    public void shouldFailUpdateMainContentAlreadyInColdStorage() throws IOException {\n+        // move the main content into the cold storage\n+        DocumentModel documentModel = createFileDocument(DEFAULT_DOC_NAME, true);\n+        moveAndVerifyContent(session, documentModel);\n+\n+        // we cannot update the main content as it is already in cold storage\n+        documentModel = session.getDocument(documentModel.getRef());\n+        documentModel.setPropertyValue(ColdStorageHelper.FILE_CONTENT_PROPERTY,\n+                (Serializable) Blobs.createBlob(FILE_CONTENT));\n+        try {\n+            session.saveDocument(documentModel);\n+            fail(\"Should fail because a main content document in cold storage cannot be updated.\");\n+        } catch (NuxeoException e) {\n+            assertEquals(SC_FORBIDDEN, e.getStatusCode());\n+            assertEquals(\n+                    String.format(\"The main content of document: %s cannot be updated. It's already in cold storage.\",\n+                            documentModel.getId()),\n+                    e.getMessage());\n+        }\n+\n+        // but we should be able to update the others properties even the attachments\n+        documentModel = session.getDocument(documentModel.getRef());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f9128ed424f8002e9f671e0d364072b884ce0a68"}, "originalPosition": 26}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg5NzY3ODk1", "url": "https://github.com/nuxeo/nuxeo/pull/3894#pullrequestreview-389767895", "createdAt": "2020-04-08T08:41:36Z", "commit": {"oid": "f9128ed424f8002e9f671e0d364072b884ce0a68"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQwODo0MTozNlrOGCk-SA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQwODo0MTozNlrOGCk-SA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTM1NjEwNA==", "bodyText": "Could we use CollecitonUtils.isEqualCollection here?", "url": "https://github.com/nuxeo/nuxeo/pull/3894#discussion_r405356104", "createdAt": "2020-04-08T08:41:36Z", "author": {"login": "ataillefer"}, "path": "modules/core/nuxeo-core-test/src/test/java/org/nuxeo/ecm/core/TestColdStorage.java", "diffHunk": "@@ -244,6 +244,43 @@ public void shouldCheckAvailability() {\n         checkAvailabilityOfDocuments(Arrays.asList(documents.get(1), documents.get(2)), downloadableUntil, 0);\n     }\n \n+    @Test\n+    public void shouldFailUpdateMainContentAlreadyInColdStorage() throws IOException {\n+        // move the main content into the cold storage\n+        DocumentModel documentModel = createFileDocument(DEFAULT_DOC_NAME, true);\n+        moveAndVerifyContent(session, documentModel);\n+\n+        // we cannot update the main content as it is already in cold storage\n+        documentModel = session.getDocument(documentModel.getRef());\n+        documentModel.setPropertyValue(ColdStorageHelper.FILE_CONTENT_PROPERTY,\n+                (Serializable) Blobs.createBlob(FILE_CONTENT));\n+        try {\n+            session.saveDocument(documentModel);\n+            fail(\"Should fail because a main content document in cold storage cannot be updated.\");\n+        } catch (NuxeoException e) {\n+            assertEquals(SC_FORBIDDEN, e.getStatusCode());\n+            assertEquals(\n+                    String.format(\"The main content of document: %s cannot be updated. It's already in cold storage.\",\n+                            documentModel.getId()),\n+                    e.getMessage());\n+        }\n+\n+        // but we should be able to update the others properties even the attachments\n+        documentModel = session.getDocument(documentModel.getRef());\n+        documentModel.setPropertyValue(\"dc:title\", \"I update the title\");\n+        documentModel.setPropertyValue(\"dc:description\", \"I add a description\");\n+        var attachments = List.of(Map.of(\"file\", Blobs.createBlob(\"bar\", \"text/plain\")));\n+        documentModel.setPropertyValue(\"files:files\", (Serializable) attachments);\n+\n+        documentModel = session.saveDocument(documentModel);\n+        assertEquals(\"I update the title\", documentModel.getPropertyValue(\"dc:title\"));\n+        assertEquals(\"I add a description\", documentModel.getPropertyValue(\"dc:description\"));\n+        attachments = (List<Map<String, Blob>>) documentModel.getPropertyValue(\"files:files\");\n+        assertEquals(1, attachments.size());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f9128ed424f8002e9f671e0d364072b884ce0a68"}, "originalPosition": 36}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f9128ed424f8002e9f671e0d364072b884ce0a68", "author": {"user": {"login": "RSalem07", "name": "Salem Aouana"}}, "url": "https://github.com/nuxeo/nuxeo/commit/f9128ed424f8002e9f671e0d364072b884ce0a68", "committedDate": "2020-04-07T13:19:24Z", "message": "NXP-28604: Prevent replace main content document which is stored in cold storage"}, "afterCommit": {"oid": "1a730be05e395fcea5ab92dfca797081ec20b302", "author": {"user": {"login": "RSalem07", "name": "Salem Aouana"}}, "url": "https://github.com/nuxeo/nuxeo/commit/1a730be05e395fcea5ab92dfca797081ec20b302", "committedDate": "2020-04-08T09:14:49Z", "message": "NXP-28604: Prevent replace main content document which is stored in cold storage"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1a730be05e395fcea5ab92dfca797081ec20b302", "author": {"user": {"login": "RSalem07", "name": "Salem Aouana"}}, "url": "https://github.com/nuxeo/nuxeo/commit/1a730be05e395fcea5ab92dfca797081ec20b302", "committedDate": "2020-04-08T09:14:49Z", "message": "NXP-28604: Prevent replace main content document which is stored in cold storage"}, "afterCommit": {"oid": "77d9b81ab84cb759d257eb743bf6d6a913e49522", "author": {"user": {"login": "RSalem07", "name": "Salem Aouana"}}, "url": "https://github.com/nuxeo/nuxeo/commit/77d9b81ab84cb759d257eb743bf6d6a913e49522", "committedDate": "2020-04-08T09:31:29Z", "message": "NXP-28604: Prevent replace main content document which is stored in cold storage"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg5ODAyOTIz", "url": "https://github.com/nuxeo/nuxeo/pull/3894#pullrequestreview-389802923", "createdAt": "2020-04-08T09:26:49Z", "commit": {"oid": "1a730be05e395fcea5ab92dfca797081ec20b302"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQwOToyNjo0OVrOGCmwfQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQwOTo0MDowMFrOGCnRHg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTM4NTM0MQ==", "bodyText": "Those if could be merged.", "url": "https://github.com/nuxeo/nuxeo/pull/3894#discussion_r405385341", "createdAt": "2020-04-08T09:26:49Z", "author": {"login": "troger"}, "path": "modules/core/nuxeo-core/src/main/java/org/nuxeo/ecm/core/coldstorage/CheckUpdateMainContentInColdStorage.java", "diffHunk": "@@ -0,0 +1,66 @@\n+/*\n+ * (C) Copyright 2020 Nuxeo (http://nuxeo.com/) and others.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *  \n+ * Contributors:\n+ *     Salem Aouana\n+ */\n+\n+package org.nuxeo.ecm.core.coldstorage;\n+\n+import static javax.servlet.http.HttpServletResponse.SC_FORBIDDEN;\n+\n+import org.nuxeo.ecm.core.api.DocumentModel;\n+import org.nuxeo.ecm.core.api.NuxeoException;\n+import org.nuxeo.ecm.core.api.event.CoreEventConstants;\n+import org.nuxeo.ecm.core.api.model.Property;\n+import org.nuxeo.ecm.core.blob.ColdStorageHelper;\n+import org.nuxeo.ecm.core.event.Event;\n+import org.nuxeo.ecm.core.event.EventContext;\n+import org.nuxeo.ecm.core.event.EventListener;\n+import org.nuxeo.ecm.core.event.impl.DocumentEventContext;\n+import org.nuxeo.ecm.core.schema.FacetNames;\n+\n+/**\n+ * A synchronous listener that prevents any main content document replacement when it's stored in cold storage.\n+ * \n+ * @since 11.1\n+ */\n+public class CheckUpdateMainContentInColdStorage implements EventListener {\n+\n+    @Override\n+    public void handleEvent(Event event) {\n+        EventContext eventContext = event.getContext();\n+        if (!(eventContext instanceof DocumentEventContext)) {\n+            return;\n+        }\n+\n+        DocumentModel previousDocument = (DocumentModel) eventContext.getProperty(\n+                CoreEventConstants.PREVIOUS_DOCUMENT_MODEL);\n+        if (previousDocument.hasFacet(FacetNames.COLD_STORAGE)) {\n+            if (previousDocument.getPropertyValue(ColdStorageHelper.COLD_STORAGE_CONTENT_PROPERTY) != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1a730be05e395fcea5ab92dfca797081ec20b302"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTM5MzY5NA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * A synchronous listener that prevents any main content document replacement when it's stored in cold storage.\n          \n          \n            \n             * A synchronous listener that prevents any document's main content replacement when it's stored in cold storage.\n          \n      \n    \n    \n  \n\nOr just\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * A synchronous listener that prevents any main content document replacement when it's stored in cold storage.\n          \n          \n            \n             * A synchronous listener that prevents any main content replacement when it's stored in cold storage.", "url": "https://github.com/nuxeo/nuxeo/pull/3894#discussion_r405393694", "createdAt": "2020-04-08T09:40:00Z", "author": {"login": "troger"}, "path": "modules/core/nuxeo-core/src/main/java/org/nuxeo/ecm/core/coldstorage/CheckUpdateMainContentInColdStorage.java", "diffHunk": "@@ -0,0 +1,66 @@\n+/*\n+ * (C) Copyright 2020 Nuxeo (http://nuxeo.com/) and others.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *  \n+ * Contributors:\n+ *     Salem Aouana\n+ */\n+\n+package org.nuxeo.ecm.core.coldstorage;\n+\n+import static javax.servlet.http.HttpServletResponse.SC_FORBIDDEN;\n+\n+import org.nuxeo.ecm.core.api.DocumentModel;\n+import org.nuxeo.ecm.core.api.NuxeoException;\n+import org.nuxeo.ecm.core.api.event.CoreEventConstants;\n+import org.nuxeo.ecm.core.api.model.Property;\n+import org.nuxeo.ecm.core.blob.ColdStorageHelper;\n+import org.nuxeo.ecm.core.event.Event;\n+import org.nuxeo.ecm.core.event.EventContext;\n+import org.nuxeo.ecm.core.event.EventListener;\n+import org.nuxeo.ecm.core.event.impl.DocumentEventContext;\n+import org.nuxeo.ecm.core.schema.FacetNames;\n+\n+/**\n+ * A synchronous listener that prevents any main content document replacement when it's stored in cold storage.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "77d9b81ab84cb759d257eb743bf6d6a913e49522"}, "originalPosition": 36}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6498605d4357834e86fd2c68733fe00a7bc3ecb4", "author": {"user": {"login": "RSalem07", "name": "Salem Aouana"}}, "url": "https://github.com/nuxeo/nuxeo/commit/6498605d4357834e86fd2c68733fe00a7bc3ecb4", "committedDate": "2020-04-08T09:45:51Z", "message": "NXP-28604: Prevent replace main content document which is stored in cold storage"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "77d9b81ab84cb759d257eb743bf6d6a913e49522", "author": {"user": {"login": "RSalem07", "name": "Salem Aouana"}}, "url": "https://github.com/nuxeo/nuxeo/commit/77d9b81ab84cb759d257eb743bf6d6a913e49522", "committedDate": "2020-04-08T09:31:29Z", "message": "NXP-28604: Prevent replace main content document which is stored in cold storage"}, "afterCommit": {"oid": "6498605d4357834e86fd2c68733fe00a7bc3ecb4", "author": {"user": {"login": "RSalem07", "name": "Salem Aouana"}}, "url": "https://github.com/nuxeo/nuxeo/commit/6498605d4357834e86fd2c68733fe00a7bc3ecb4", "committedDate": "2020-04-08T09:45:51Z", "message": "NXP-28604: Prevent replace main content document which is stored in cold storage"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg5ODIxMzY5", "url": "https://github.com/nuxeo/nuxeo/pull/3894#pullrequestreview-389821369", "createdAt": "2020-04-08T09:50:52Z", "commit": {"oid": "6498605d4357834e86fd2c68733fe00a7bc3ecb4"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg5ODIxOTg0", "url": "https://github.com/nuxeo/nuxeo/pull/3894#pullrequestreview-389821984", "createdAt": "2020-04-08T09:51:42Z", "commit": {"oid": "6498605d4357834e86fd2c68733fe00a7bc3ecb4"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4825, "cost": 1, "resetAt": "2021-11-03T18:41:40Z"}}}