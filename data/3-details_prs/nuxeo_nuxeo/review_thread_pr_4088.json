{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI0Mzk4NzY5", "number": 4088, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxMDozODoyNlrOEAc_SQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxMDo0NToxMVrOEAdHPw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4OTEwNDA5OnYy", "diffSide": "RIGHT", "path": "ftests/nuxeo-platform-explorer-ftests/src/test/java/org/nuxeo/functionaltests/explorer/pages/artifacts/BundleArtifactPage.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxMDozODoyNlrOGbvaAw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxMDozODoyNlrOGbvaAw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTc0MTQ0Mw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    checkDeploymentOrder(legacy ? false : true);\n          \n          \n            \n                    checkDeploymentOrder(!legacy);\n          \n      \n    \n    \n  \n\n(same elsewhere)", "url": "https://github.com/nuxeo/nuxeo/pull/4088#discussion_r431741443", "createdAt": "2020-05-28T10:38:26Z", "author": {"login": "efge"}, "path": "ftests/nuxeo-platform-explorer-ftests/src/test/java/org/nuxeo/functionaltests/explorer/pages/artifacts/BundleArtifactPage.java", "diffHunk": "@@ -60,16 +67,18 @@ public void checkReference(boolean partial, boolean legacy) {\n         checkGroupId(\"org.nuxeo.ecm.platform\");\n         checkArtifactId(\"nuxeo-apidoc-core\");\n         checkRequirements(null);\n+        checkDeploymentOrder(legacy ? false : true);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c1d61134fa2748c1a5f3c46ac604dfdf48cf7c9"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4OTExMDE4OnYy", "diffSide": "RIGHT", "path": "ftests/nuxeo-platform-explorer-ftests/src/test/java/org/nuxeo/functionaltests/explorer/pages/artifacts/BundleArtifactPage.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxMDo0MDozMlrOGbveCw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxMDo0MDozMlrOGbveCw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTc0MjQ3NQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (set) {\n          \n          \n            \n                        assertFalse(orderIsBlank);\n          \n          \n            \n                    } else {\n          \n          \n            \n                        assertTrue(orderIsBlank);\n          \n          \n            \n                    }\n          \n          \n            \n                    assertEquals(!set, orderIsBlank);\n          \n      \n    \n    \n  \n\n(same elsewhere)", "url": "https://github.com/nuxeo/nuxeo/pull/4088#discussion_r431742475", "createdAt": "2020-05-28T10:40:32Z", "author": {"login": "efge"}, "path": "ftests/nuxeo-platform-explorer-ftests/src/test/java/org/nuxeo/functionaltests/explorer/pages/artifacts/BundleArtifactPage.java", "diffHunk": "@@ -90,4 +99,13 @@ public void checkArtifactId(String id) {\n         assertEquals(id, artifactId.getText());\n     }\n \n+    public void checkDeploymentOrder(boolean set) {\n+        boolean orderIsBlank = StringUtils.isBlank(deploymentOrder.getText());\n+        if (set) {\n+            assertFalse(orderIsBlank);\n+        } else {\n+            assertTrue(orderIsBlank);\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c1d61134fa2748c1a5f3c46ac604dfdf48cf7c9"}, "originalPosition": 66}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4OTExNDk4OnYy", "diffSide": "RIGHT", "path": "modules/platform/nuxeo-apidoc-server/nuxeo-apidoc-core/src/main/java/org/nuxeo/apidoc/api/ComponentInfo.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxMDo0MjoxNVrOGbvhSg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxMDo0MjoxNVrOGbvhSg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTc0MzMwNg==", "bodyText": "Keep newline at end of file", "url": "https://github.com/nuxeo/nuxeo/pull/4088#discussion_r431743306", "createdAt": "2020-05-28T10:42:15Z", "author": {"login": "efge"}, "path": "modules/platform/nuxeo-apidoc-server/nuxeo-apidoc-core/src/main/java/org/nuxeo/apidoc/api/ComponentInfo.java", "diffHunk": "@@ -89,4 +96,16 @@\n      */\n     List<String> getRequirements();\n \n-}\n+    /**\n+     * Returns the registration order as indicated by {@link ComponentManager}.\n+     *\n+     * @since 11.1\n+     */\n+    Long getRegistrationOrder();\n+\n+    /**\n+     * @since 11.1\n+     */\n+    void setRegistrationOrder(Long order);\n+\n+}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c1d61134fa2748c1a5f3c46ac604dfdf48cf7c9"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4OTExNzEyOnYy", "diffSide": "RIGHT", "path": "modules/platform/nuxeo-apidoc-server/nuxeo-apidoc-core/src/main/java/org/nuxeo/apidoc/api/BundleInfo.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxMDo0Mjo1N1rOGbvitQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxMjoyNzo0OFrOGbyyGw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTc0MzY2OQ==", "bodyText": "Setter could use a @since 11.1 too for consistency.", "url": "https://github.com/nuxeo/nuxeo/pull/4088#discussion_r431743669", "createdAt": "2020-05-28T10:42:57Z", "author": {"login": "efge"}, "path": "modules/platform/nuxeo-apidoc-server/nuxeo-apidoc-core/src/main/java/org/nuxeo/apidoc/api/BundleInfo.java", "diffHunk": "@@ -91,4 +96,13 @@\n      */\n     Blob getParentReadme();\n \n+    /**\n+     * Returns the deployment order as indicated by the runtime context.\n+     *\n+     * @since 11.1\n+     */\n+    Long getDeploymentOrder();\n+\n+    void setDeploymentOrder(Long order);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c1d61134fa2748c1a5f3c46ac604dfdf48cf7c9"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTc5Njc2Mw==", "bodyText": "indeed!", "url": "https://github.com/nuxeo/nuxeo/pull/4088#discussion_r431796763", "createdAt": "2020-05-28T12:27:48Z", "author": {"login": "atchertchian"}, "path": "modules/platform/nuxeo-apidoc-server/nuxeo-apidoc-core/src/main/java/org/nuxeo/apidoc/api/BundleInfo.java", "diffHunk": "@@ -91,4 +96,13 @@\n      */\n     Blob getParentReadme();\n \n+    /**\n+     * Returns the deployment order as indicated by the runtime context.\n+     *\n+     * @since 11.1\n+     */\n+    Long getDeploymentOrder();\n+\n+    void setDeploymentOrder(Long order);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTc0MzY2OQ=="}, "originalCommit": {"oid": "8c1d61134fa2748c1a5f3c46ac604dfdf48cf7c9"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4OTEyMDExOnYy", "diffSide": "RIGHT", "path": "modules/platform/nuxeo-apidoc-server/nuxeo-apidoc-core/src/main/java/org/nuxeo/apidoc/introspection/BundleInfoImpl.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxMDo0Mzo1OVrOGbvkow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxMjoyOToxOVrOGby1kQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTc0NDE2Mw==", "bodyText": "Could be written this way to minimize space taken, especially on a protected member\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                /**\n          \n          \n            \n                 * @since 11.1\n          \n          \n            \n                 */\n          \n          \n            \n                /** @since 11.1 */", "url": "https://github.com/nuxeo/nuxeo/pull/4088#discussion_r431744163", "createdAt": "2020-05-28T10:43:59Z", "author": {"login": "efge"}, "path": "modules/platform/nuxeo-apidoc-server/nuxeo-apidoc-core/src/main/java/org/nuxeo/apidoc/introspection/BundleInfoImpl.java", "diffHunk": "@@ -42,6 +42,9 @@\n \n     protected String manifest;\n \n+    /**\n+     * @since 11.1\n+     */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c1d61134fa2748c1a5f3c46ac604dfdf48cf7c9"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTc5NzY0OQ==", "bodyText": "\ud83d\udc4d i'll probably do that kind of cleanup on others independently, then", "url": "https://github.com/nuxeo/nuxeo/pull/4088#discussion_r431797649", "createdAt": "2020-05-28T12:29:19Z", "author": {"login": "atchertchian"}, "path": "modules/platform/nuxeo-apidoc-server/nuxeo-apidoc-core/src/main/java/org/nuxeo/apidoc/introspection/BundleInfoImpl.java", "diffHunk": "@@ -42,6 +42,9 @@\n \n     protected String manifest;\n \n+    /**\n+     * @since 11.1\n+     */", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTc0NDE2Mw=="}, "originalCommit": {"oid": "8c1d61134fa2748c1a5f3c46ac604dfdf48cf7c9"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4OTEyNDQ3OnYy", "diffSide": "RIGHT", "path": "modules/platform/nuxeo-apidoc-server/nuxeo-apidoc-core/src/main/java/org/nuxeo/apidoc/introspection/ServerInfo.java", "isResolved": true, "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxMDo0NToxMVrOGbvnMQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxMzoxOTowMFrOGb0rUQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTc0NDgxNw==", "bodyText": "If you make registrationOrder a long then autoboxing will allow you to get rid of the Long.valueOf (another instance below for bindex/setDeploymentOrder)", "url": "https://github.com/nuxeo/nuxeo/pull/4088#discussion_r431744817", "createdAt": "2020-05-28T10:45:11Z", "author": {"login": "efge"}, "path": "modules/platform/nuxeo-apidoc-server/nuxeo-apidoc-core/src/main/java/org/nuxeo/apidoc/introspection/ServerInfo.java", "diffHunk": "@@ -352,6 +355,8 @@ public static ServerInfo build(String name, String version) {\n             }\n \n             ComponentInfoImpl component = new ComponentInfoImpl(binfo, cname);\n+            component.setRegistrationOrder(Long.valueOf(registrationOrder++));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c1d61134fa2748c1a5f3c46ac604dfdf48cf7c9"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTgwMDA0NA==", "bodyText": "But what if i needed to be able to keep it null (unset), for legacy persisted distribs, typically?", "url": "https://github.com/nuxeo/nuxeo/pull/4088#discussion_r431800044", "createdAt": "2020-05-28T12:33:43Z", "author": {"login": "atchertchian"}, "path": "modules/platform/nuxeo-apidoc-server/nuxeo-apidoc-core/src/main/java/org/nuxeo/apidoc/introspection/ServerInfo.java", "diffHunk": "@@ -352,6 +355,8 @@ public static ServerInfo build(String name, String version) {\n             }\n \n             ComponentInfoImpl component = new ComponentInfoImpl(binfo, cname);\n+            component.setRegistrationOrder(Long.valueOf(registrationOrder++));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTc0NDgxNw=="}, "originalCommit": {"oid": "8c1d61134fa2748c1a5f3c46ac604dfdf48cf7c9"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTgxMzAwOA==", "bodyText": "Well Long.valueOf(registrationOrder++) is never null, so you might as well take advantage of autoboxing here.", "url": "https://github.com/nuxeo/nuxeo/pull/4088#discussion_r431813008", "createdAt": "2020-05-28T12:55:52Z", "author": {"login": "efge"}, "path": "modules/platform/nuxeo-apidoc-server/nuxeo-apidoc-core/src/main/java/org/nuxeo/apidoc/introspection/ServerInfo.java", "diffHunk": "@@ -352,6 +355,8 @@ public static ServerInfo build(String name, String version) {\n             }\n \n             ComponentInfoImpl component = new ComponentInfoImpl(binfo, cname);\n+            component.setRegistrationOrder(Long.valueOf(registrationOrder++));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTc0NDgxNw=="}, "originalCommit": {"oid": "8c1d61134fa2748c1a5f3c46ac604dfdf48cf7c9"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTgxNjk3Ng==", "bodyText": "This is on the live distrib (and the same interface is shared with persisted ones)", "url": "https://github.com/nuxeo/nuxeo/pull/4088#discussion_r431816976", "createdAt": "2020-05-28T13:02:24Z", "author": {"login": "atchertchian"}, "path": "modules/platform/nuxeo-apidoc-server/nuxeo-apidoc-core/src/main/java/org/nuxeo/apidoc/introspection/ServerInfo.java", "diffHunk": "@@ -352,6 +355,8 @@ public static ServerInfo build(String name, String version) {\n             }\n \n             ComponentInfoImpl component = new ComponentInfoImpl(binfo, cname);\n+            component.setRegistrationOrder(Long.valueOf(registrationOrder++));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTc0NDgxNw=="}, "originalCommit": {"oid": "8c1d61134fa2748c1a5f3c46ac604dfdf48cf7c9"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTgxNzEyMw==", "bodyText": "(for now...)", "url": "https://github.com/nuxeo/nuxeo/pull/4088#discussion_r431817123", "createdAt": "2020-05-28T13:02:38Z", "author": {"login": "atchertchian"}, "path": "modules/platform/nuxeo-apidoc-server/nuxeo-apidoc-core/src/main/java/org/nuxeo/apidoc/introspection/ServerInfo.java", "diffHunk": "@@ -352,6 +355,8 @@ public static ServerInfo build(String name, String version) {\n             }\n \n             ComponentInfoImpl component = new ComponentInfoImpl(binfo, cname);\n+            component.setRegistrationOrder(Long.valueOf(registrationOrder++));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTc0NDgxNw=="}, "originalCommit": {"oid": "8c1d61134fa2748c1a5f3c46ac604dfdf48cf7c9"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTgxOTE1NA==", "bodyText": "I don't get your point.\nMy point is that this:\nint foo = 1;\ncomponent.setRegistrationOrder(Long.valueOf(foo++));\n\nis identical too:\nlong foo = 1;\ncomponent.setRegistrationOrder(foo++);", "url": "https://github.com/nuxeo/nuxeo/pull/4088#discussion_r431819154", "createdAt": "2020-05-28T13:05:52Z", "author": {"login": "efge"}, "path": "modules/platform/nuxeo-apidoc-server/nuxeo-apidoc-core/src/main/java/org/nuxeo/apidoc/introspection/ServerInfo.java", "diffHunk": "@@ -352,6 +355,8 @@ public static ServerInfo build(String name, String version) {\n             }\n \n             ComponentInfoImpl component = new ComponentInfoImpl(binfo, cname);\n+            component.setRegistrationOrder(Long.valueOf(registrationOrder++));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTc0NDgxNw=="}, "originalCommit": {"oid": "8c1d61134fa2748c1a5f3c46ac604dfdf48cf7c9"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTgyNzc5Mw==", "bodyText": "Ah! sorry got confused, will do (i thought you were talking about changing from \"Long\" to \"long\" in the API, nevermind)", "url": "https://github.com/nuxeo/nuxeo/pull/4088#discussion_r431827793", "createdAt": "2020-05-28T13:19:00Z", "author": {"login": "atchertchian"}, "path": "modules/platform/nuxeo-apidoc-server/nuxeo-apidoc-core/src/main/java/org/nuxeo/apidoc/introspection/ServerInfo.java", "diffHunk": "@@ -352,6 +355,8 @@ public static ServerInfo build(String name, String version) {\n             }\n \n             ComponentInfoImpl component = new ComponentInfoImpl(binfo, cname);\n+            component.setRegistrationOrder(Long.valueOf(registrationOrder++));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTc0NDgxNw=="}, "originalCommit": {"oid": "8c1d61134fa2748c1a5f3c46ac604dfdf48cf7c9"}, "originalPosition": 23}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4119, "cost": 1, "resetAt": "2021-11-03T18:41:40Z"}}}