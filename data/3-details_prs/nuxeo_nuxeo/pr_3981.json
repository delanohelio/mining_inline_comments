{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA5NjIzMzI2", "number": 3981, "title": "Simplify core internals", "bodyText": "This PR introduces a set of changes related to the simplification of the internals of connection management in Nuxeo Runtime and Nuxeo Core. By connections, we mean both standard JDBC connections to standard or XA datasources, and the \"connections\" that Nuxeo uses internally to pool instances of the Session interface holding pooled/cached information about data already read from the repository.\nThe main cleanup is to get rid of Apache Geronimo Connector + Tranql and use standard Apache Commons DBCP / Apache Commons Pool to do JDBC pooling and generic pooling. This removes a lot of ad hoc custom code.\nWith the new system, we now have two localized places where we do the pooling now:\n\norg.nuxeo.runtime.datasource.PooledDataSourceRegistry has the JDBC connection pooling logic,\norg.nuxeo.ecm.core.repository.RepositoryService has the Nuxeo Session connection pooling logic.\n\nFor the JDBC datasources, we need two versions: one which obeys all the transaction logic, and is used in most cases, and one which is used in \"noSharing\" mode, which is when we require the underlying connection to be unrelated to the current transaction (used for lock management, database creation and key/value store).\nNXP-29009 uses Apache Commons DBCP instead of JCA (Apache Geronimo Connector + Tranql) for VCS/DBS pooling\nNXP-29010 uses Apache Commons DBCP instead of JCA (Apache Geronimo Connector + Tranql) for JDBC pooling\nNXP-29011 removes use of JNDI when dealing with our datasources\nNXP-28865 has several cleanup commits to simplify low-level core Session internals\nNXP-29654 removes the deprecated LockManager interface", "createdAt": "2020-04-27T16:54:50Z", "url": "https://github.com/nuxeo/nuxeo/pull/3981", "merged": true, "mergeCommit": {"oid": "5b55722f7717d54ba01493e46be09aa3d480a771"}, "closed": true, "closedAt": "2020-09-18T13:01:57Z", "author": {"login": "efge"}, "timelineItems": {"totalCount": 40, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABccHljfgBqjMyODE0NDE0OTU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdKB5uXAFqTQ5MTI4NjAzMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "325caa441ed3765315719ffb0420a7451f758101", "author": {"user": {"login": "efge", "name": "Florent Guillaume"}}, "url": "https://github.com/nuxeo/nuxeo/commit/325caa441ed3765315719ffb0420a7451f758101", "committedDate": "2020-04-27T16:42:29Z", "message": "NXP-29010: remove JCA dependencies (Apache Geronimo Connector + Tranql)"}, "afterCommit": {"oid": "66539c6c1d8a141e78cf7509021b5b7b85ae0fe2", "author": {"user": {"login": "efge", "name": "Florent Guillaume"}}, "url": "https://github.com/nuxeo/nuxeo/commit/66539c6c1d8a141e78cf7509021b5b7b85ae0fe2", "committedDate": "2020-04-28T17:45:27Z", "message": "NXP-29010: remove JCA dependencies (Apache Geronimo Connector + Tranql)"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "66539c6c1d8a141e78cf7509021b5b7b85ae0fe2", "author": {"user": {"login": "efge", "name": "Florent Guillaume"}}, "url": "https://github.com/nuxeo/nuxeo/commit/66539c6c1d8a141e78cf7509021b5b7b85ae0fe2", "committedDate": "2020-04-28T17:45:27Z", "message": "NXP-29010: remove JCA dependencies (Apache Geronimo Connector + Tranql)"}, "afterCommit": {"oid": "70e30d7627e5c7e457161cd17ab851ba422beb3e", "author": {"user": {"login": "efge", "name": "Florent Guillaume"}}, "url": "https://github.com/nuxeo/nuxeo/commit/70e30d7627e5c7e457161cd17ab851ba422beb3e", "committedDate": "2020-04-28T17:59:47Z", "message": "NXP-29010: remove JCA dependencies (Apache Geronimo Connector + Tranql)"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "70e30d7627e5c7e457161cd17ab851ba422beb3e", "author": {"user": {"login": "efge", "name": "Florent Guillaume"}}, "url": "https://github.com/nuxeo/nuxeo/commit/70e30d7627e5c7e457161cd17ab851ba422beb3e", "committedDate": "2020-04-28T17:59:47Z", "message": "NXP-29010: remove JCA dependencies (Apache Geronimo Connector + Tranql)"}, "afterCommit": {"oid": "54cb52c8df49123fb578067915540a811bf2ec76", "author": {"user": {"login": "efge", "name": "Florent Guillaume"}}, "url": "https://github.com/nuxeo/nuxeo/commit/54cb52c8df49123fb578067915540a811bf2ec76", "committedDate": "2020-05-04T00:58:59Z", "message": "NXP-29009: simpler VCS connections; VCS/DBS pooling doesn't need XA"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "54cb52c8df49123fb578067915540a811bf2ec76", "author": {"user": {"login": "efge", "name": "Florent Guillaume"}}, "url": "https://github.com/nuxeo/nuxeo/commit/54cb52c8df49123fb578067915540a811bf2ec76", "committedDate": "2020-05-04T00:58:59Z", "message": "NXP-29009: simpler VCS connections; VCS/DBS pooling doesn't need XA"}, "afterCommit": {"oid": "59be2a29963b7ec3fe41f2bb4ca954492b824f41", "author": {"user": {"login": "efge", "name": "Florent Guillaume"}}, "url": "https://github.com/nuxeo/nuxeo/commit/59be2a29963b7ec3fe41f2bb4ca954492b824f41", "committedDate": "2020-05-04T02:35:17Z", "message": "NXP-29009: simpler VCS connections; VCS/DBS pooling doesn't need XA"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "59be2a29963b7ec3fe41f2bb4ca954492b824f41", "author": {"user": {"login": "efge", "name": "Florent Guillaume"}}, "url": "https://github.com/nuxeo/nuxeo/commit/59be2a29963b7ec3fe41f2bb4ca954492b824f41", "committedDate": "2020-05-04T02:35:17Z", "message": "NXP-29009: simpler VCS connections; VCS/DBS pooling doesn't need XA"}, "afterCommit": {"oid": "eb5b4fc07207f4a9e7dd5110b6d5bfe9e24cf4b4", "author": {"user": {"login": "efge", "name": "Florent Guillaume"}}, "url": "https://github.com/nuxeo/nuxeo/commit/eb5b4fc07207f4a9e7dd5110b6d5bfe9e24cf4b4", "committedDate": "2020-05-06T17:43:18Z", "message": "NXP-28865: use connection in noSharing mode for SQLKeyValueStore\n\nThis is much simpler than running outside a transaction with a standard connection."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "eb5b4fc07207f4a9e7dd5110b6d5bfe9e24cf4b4", "author": {"user": {"login": "efge", "name": "Florent Guillaume"}}, "url": "https://github.com/nuxeo/nuxeo/commit/eb5b4fc07207f4a9e7dd5110b6d5bfe9e24cf4b4", "committedDate": "2020-05-06T17:43:18Z", "message": "NXP-28865: use connection in noSharing mode for SQLKeyValueStore\n\nThis is much simpler than running outside a transaction with a standard connection."}, "afterCommit": {"oid": "decc99f98caa86885d3022fff095ee45391ee23c", "author": {"user": {"login": "efge", "name": "Florent Guillaume"}}, "url": "https://github.com/nuxeo/nuxeo/commit/decc99f98caa86885d3022fff095ee45391ee23c", "committedDate": "2020-05-07T15:46:36Z", "message": "NXP-29009: VCS/DBS pooling cleanup"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "decc99f98caa86885d3022fff095ee45391ee23c", "author": {"user": {"login": "efge", "name": "Florent Guillaume"}}, "url": "https://github.com/nuxeo/nuxeo/commit/decc99f98caa86885d3022fff095ee45391ee23c", "committedDate": "2020-05-07T15:46:36Z", "message": "NXP-29009: VCS/DBS pooling cleanup"}, "afterCommit": {"oid": "23b87fa0a0bacfc4aee0da50cc275e115d21efbd", "author": {"user": {"login": "efge", "name": "Florent Guillaume"}}, "url": "https://github.com/nuxeo/nuxeo/commit/23b87fa0a0bacfc4aee0da50cc275e115d21efbd", "committedDate": "2020-05-12T21:09:57Z", "message": "NXP-29010: fix DBCP bug when acquiring a connection when transaction is rollback-only"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "23b87fa0a0bacfc4aee0da50cc275e115d21efbd", "author": {"user": {"login": "efge", "name": "Florent Guillaume"}}, "url": "https://github.com/nuxeo/nuxeo/commit/23b87fa0a0bacfc4aee0da50cc275e115d21efbd", "committedDate": "2020-05-12T21:09:57Z", "message": "NXP-29010: fix DBCP bug when acquiring a connection when transaction is rollback-only"}, "afterCommit": {"oid": "f7267aeaae6f75a79d4986e7fe348e2f40f37171", "author": {"user": {"login": "efge", "name": "Florent Guillaume"}}, "url": "https://github.com/nuxeo/nuxeo/commit/f7267aeaae6f75a79d4986e7fe348e2f40f37171", "committedDate": "2020-05-13T03:08:17Z", "message": "NXP-29010: fix DBCP bug when acquiring a connection when transaction is rollback-only"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f7267aeaae6f75a79d4986e7fe348e2f40f37171", "author": {"user": {"login": "efge", "name": "Florent Guillaume"}}, "url": "https://github.com/nuxeo/nuxeo/commit/f7267aeaae6f75a79d4986e7fe348e2f40f37171", "committedDate": "2020-05-13T03:08:17Z", "message": "NXP-29010: fix DBCP bug when acquiring a connection when transaction is rollback-only"}, "afterCommit": {"oid": "68de17c2385e57d9fd254bad7cd7b43393bd3532", "author": {"user": {"login": "efge", "name": "Florent Guillaume"}}, "url": "https://github.com/nuxeo/nuxeo/commit/68de17c2385e57d9fd254bad7cd7b43393bd3532", "committedDate": "2020-05-13T18:09:26Z", "message": "NXP-29010: fix DBCP bug when acquiring a connection when transaction is rollback-only"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "68de17c2385e57d9fd254bad7cd7b43393bd3532", "author": {"user": {"login": "efge", "name": "Florent Guillaume"}}, "url": "https://github.com/nuxeo/nuxeo/commit/68de17c2385e57d9fd254bad7cd7b43393bd3532", "committedDate": "2020-05-13T18:09:26Z", "message": "NXP-29010: fix DBCP bug when acquiring a connection when transaction is rollback-only"}, "afterCommit": {"oid": "8d7adf76e8337076b0ff2c661508da5604e53fe7", "author": {"user": {"login": "efge", "name": "Florent Guillaume"}}, "url": "https://github.com/nuxeo/nuxeo/commit/8d7adf76e8337076b0ff2c661508da5604e53fe7", "committedDate": "2020-05-14T00:59:32Z", "message": "NXP-29010: fix DBCP bug when acquiring a connection when transaction is rollback-only"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDExNjM1MDgy", "url": "https://github.com/nuxeo/nuxeo/pull/3981#pullrequestreview-411635082", "createdAt": "2020-05-14T09:40:16Z", "commit": {"oid": "cd86c005bccbce4675b037428f2a66fb53787227"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQwOTo0MDoxNlrOGVURkw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQwOTo0MDoxNlrOGVURkw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTAwNTQ1OQ==", "bodyText": "is the method idempotent?", "url": "https://github.com/nuxeo/nuxeo/pull/3981#discussion_r425005459", "createdAt": "2020-05-14T09:40:16Z", "author": {"login": "bdelbosc"}, "path": "modules/runtime/nuxeo-runtime-jtajca/src/main/java/org/nuxeo/runtime/transaction/TransactionHelper.java", "diffHunk": "@@ -533,6 +534,23 @@ public static void registerSynchronization(Synchronization handler) {\n         }\n     }\n \n+    /**\n+     * Enlists a XA resource in the current transaction.\n+     *", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cd86c005bccbce4675b037428f2a66fb53787227"}, "originalPosition": 14}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDExNjM3NTA3", "url": "https://github.com/nuxeo/nuxeo/pull/3981#pullrequestreview-411637507", "createdAt": "2020-05-14T09:43:12Z", "commit": {"oid": "9840a6aea9bc3efb9fd5bca4f9faa96c554a0b01"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQwOTo0MzoxM1rOGVUZKw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQwOTo0MzoxM1rOGVUZKw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTAwNzQwMw==", "bodyText": "is this required for test purpose?", "url": "https://github.com/nuxeo/nuxeo/pull/3981#discussion_r425007403", "createdAt": "2020-05-14T09:43:13Z", "author": {"login": "bdelbosc"}, "path": "modules/core/nuxeo-core-storage-sql/nuxeo-core-storage-sql/src/main/java/org/nuxeo/ecm/core/storage/sql/jdbc/SQLInfo.java", "diffHunk": "@@ -114,7 +114,7 @@\n \n     private final Map<String, Column> copyIdColumnMap;\n \n-    protected final Map<String, SQLInfoSelect> selectFragmentById;\n+    public final Map<String, SQLInfoSelect> selectFragmentById;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9840a6aea9bc3efb9fd5bca4f9faa96c554a0b01"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDExNjU0NTgz", "url": "https://github.com/nuxeo/nuxeo/pull/3981#pullrequestreview-411654583", "createdAt": "2020-05-14T10:04:42Z", "commit": {"oid": "12aeac8365d3d928409611a0434ec32968a10ff2"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxMDowNDo0MlrOGVVNJg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxMDowNDo0MlrOGVVNJg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTAyMDcxMA==", "bodyText": "Why changing names? maxPoolSize sounds better than maxTotal.", "url": "https://github.com/nuxeo/nuxeo/pull/3981#discussion_r425020710", "createdAt": "2020-05-14T10:04:42Z", "author": {"login": "bdelbosc"}, "path": "modules/core/nuxeo-core-management-jtajca/src/test/resources/ds-contrib-with-fatal.xml", "diffHunk": "@@ -2,11 +2,10 @@\n <component name=\"org.nuxeo.runtime.jtajca.management.test.ds\">\n   <extension target=\"org.nuxeo.runtime.datasource\" point=\"datasources\">\n     <datasource name=\"jdbc/canrollback\" driverClassName=\"${nuxeo.test.vcs.driver}\"\n-      maxPoolSize=\"20\" minPoolSize=\"5\">\n+      maxTotal=\"20\" minTotal=\"5\">", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "12aeac8365d3d928409611a0434ec32968a10ff2"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEyNDU3NTk1", "url": "https://github.com/nuxeo/nuxeo/pull/3981#pullrequestreview-412457595", "createdAt": "2020-05-15T08:42:32Z", "commit": {"oid": "8d7adf76e8337076b0ff2c661508da5604e53fe7"}, "state": "DISMISSED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQwODo0MjozMlrOGV74BA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQwOTo1NjoxMVrOGV-V7A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTY1NDI3Ng==", "bodyText": "Wrong log message stating about geronimo which is removed in this PR.", "url": "https://github.com/nuxeo/nuxeo/pull/3981#discussion_r425654276", "createdAt": "2020-05-15T08:42:32Z", "author": {"login": "kevinleturc"}, "path": "modules/core/nuxeo-core-api/src/main/java/org/nuxeo/ecm/core/api/repository/PoolConfiguration.java", "diffHunk": "@@ -0,0 +1,123 @@\n+/*\n+ * (C) Copyright 2006-2012 Nuxeo SA (http://nuxeo.com/) and others.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ * Contributors:\n+ *     Florent Guillaume\n+ *     Julien Carsique\n+ */\n+package org.nuxeo.ecm.core.api.repository;\n+\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+import org.nuxeo.common.xmap.annotation.XNode;\n+import org.nuxeo.common.xmap.annotation.XObject;\n+\n+/**\n+ * Descriptor of the pool of low-level Nuxeo Sessions.\n+ *\n+ * @since 5.6\n+ */\n+@XObject(\"pool\")\n+public class PoolConfiguration {\n+\n+    private static final Logger log = LogManager.getLogger(PoolConfiguration.class);\n+\n+    public static final int DEFAULT_MAX_POOL_SIZE = 20;\n+\n+    public static final int DEFAULT_MIN_POOL_SIZE = 0;\n+\n+    public static final int DEFAULT_BLOCKING_TIMEOUT_MILLIS = 100;\n+\n+    @XNode(\"@maxPoolSize\")\n+    private Integer maxPoolSize;\n+\n+    @XNode(\"@minPoolSize\")\n+    private Integer minPoolSize;\n+\n+    @XNode(\"@blockingTimeoutMillis\")\n+    private Integer blockingTimeoutMillis;\n+\n+    public PoolConfiguration() {\n+    }\n+\n+    /** Copy constructor. */\n+    public PoolConfiguration(PoolConfiguration other) {\n+        maxPoolSize = other.maxPoolSize;\n+        minPoolSize = other.minPoolSize;\n+        blockingTimeoutMillis = other.blockingTimeoutMillis;\n+    }\n+\n+    public void merge(PoolConfiguration other) {\n+        if (other.maxPoolSize != null) {\n+            maxPoolSize = other.maxPoolSize;\n+        }\n+        if (other.minPoolSize != null) {\n+            minPoolSize = other.minPoolSize;\n+        }\n+        if (other.blockingTimeoutMillis != null) {\n+            blockingTimeoutMillis = other.blockingTimeoutMillis;\n+        }\n+    }\n+\n+    private static int defaultInt(Integer value, int def) {\n+        return value == null ? def : value.intValue();\n+    }\n+\n+    public int getMaxPoolSize() {\n+        return defaultInt(maxPoolSize, DEFAULT_MAX_POOL_SIZE);\n+    }\n+\n+    public int getMinPoolSize() {\n+        return defaultInt(minPoolSize, DEFAULT_MIN_POOL_SIZE);\n+    }\n+\n+    public int getBlockingTimeoutMillis() {\n+        return defaultInt(blockingTimeoutMillis, DEFAULT_BLOCKING_TIMEOUT_MILLIS);\n+    }\n+\n+    public void setMaxPoolSize(int maxPoolSize) {\n+        this.maxPoolSize = Integer.valueOf(maxPoolSize);\n+    }\n+\n+    public void setMinPoolSize(int minPoolSize) {\n+        this.minPoolSize = Integer.valueOf(minPoolSize);\n+    }\n+\n+    public void setBlockingTimeoutMillis(int blockingTimeoutMillis) {\n+        this.blockingTimeoutMillis = Integer.valueOf(blockingTimeoutMillis);\n+    }\n+\n+    @XNode(\"@maxActive\")\n+    public void setMaxActive(int num) {\n+        maxPoolSize = num;\n+        log.warn(\n+                \"maxActive deprecated dbcp pool attribute usage, should use maxPoolSize geronimo pool attribute instead\");\n+    }\n+\n+    @XNode(\"@maxIdle\")\n+    public void setMaxIdle(int num) {\n+        minPoolSize = num;\n+        log.warn(\n+                \"maxIdle deprecated dbcp pool attribute usage, should use minPoolSize geronimo pool attribute instead\");\n+    }\n+\n+    @XNode(\"@maxWait\")\n+    public void setMaxWait(int num) {\n+        blockingTimeoutMillis = num;\n+        log.warn(\n+                \"maxWait deprecated dbcp pool attribute usage, should use blockingTimeoutMillis geronimo pool attribute instead\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8d7adf76e8337076b0ff2c661508da5604e53fe7"}, "originalPosition": 120}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTY4NTk1OQ==", "bodyText": "The ignore now applies to testOptimisticLockingWithExplicitChangeToken which wasn't the case before, is it wanted?", "url": "https://github.com/nuxeo/nuxeo/pull/3981#discussion_r425685959", "createdAt": "2020-05-15T09:39:31Z", "author": {"login": "kevinleturc"}, "path": "modules/core/nuxeo-core-test/src/test/java/org/nuxeo/ecm/core/TestSQLRepositoryAPI.java", "diffHunk": "@@ -5101,109 +5053,6 @@ public void testChangeTokenForProxy() {\n     }\n \n     @ConditionalIgnoreRule.Ignore(condition = IgnorePostgreSQL.class, cause = \"NXP-29039\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8d7adf76e8337076b0ff2c661508da5604e53fe7"}, "originalPosition": 83}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTY5MTYzNg==", "bodyText": "Are such overrides needed?", "url": "https://github.com/nuxeo/nuxeo/pull/3981#discussion_r425691636", "createdAt": "2020-05-15T09:50:18Z", "author": {"login": "kevinleturc"}, "path": "modules/core/nuxeo-core/src/main/java/org/nuxeo/ecm/core/repository/RepositoryService.java", "diffHunk": "@@ -196,7 +261,155 @@ protected RepositoryFactory getFactory(String repositoryName) {\n     }\n \n     public int getActiveSessionsCount() {\n-        return repositories.values().stream().mapToInt(Repository::getActiveSessionsCount).sum();\n+        return pool.getNumActive();\n+    }\n+\n+    public int getActiveSessionsCount(String repositoryName) {\n+        return pool.getNumActive(repositoryName);\n+    }\n+\n+    /**\n+     * Thread-local sessions allocated, per repository.\n+     */\n+    protected static final Map<String, ThreadLocal<Session>> SESSIONS = new ConcurrentHashMap<>(1);\n+\n+    /**\n+     * Gets a session.\n+     * <p>\n+     * The session is first looked up in the current transaction, otherwise fetched from a pool.\n+     *\n+     * @param repositoryName the repository name\n+     * @return the session\n+     * @since 11.1\n+     */\n+    public Session getSession(String repositoryName) {\n+        if (!TransactionHelper.isTransactionActiveOrMarkedRollback()) {\n+            throw new NuxeoException(\"Cannot use a session outside a transaction\");\n+        }\n+        TransactionHelper.checkTransactionTimeout();\n+        ThreadLocal<Session> threadSessions = SESSIONS.computeIfAbsent(repositoryName, r -> new ThreadLocal<>());\n+        Session session = threadSessions.get();\n+        if (session == null) {\n+            if (!TransactionHelper.isTransactionActive()) {\n+                throw new NuxeoException(\"Cannot use a session when transaction is marked rollback-only\");\n+            }\n+            session = getSessionFromPool(repositoryName, threadSessions::remove);\n+            threadSessions.set(session);\n+        }\n+        return session;\n+    }\n+\n+    protected Session getSessionFromPool(String repositoryName, Runnable cleanup) {\n+        Session session;\n+        try {\n+            session = pool.borrowObject(repositoryName);\n+        } catch (NoSuchElementException e) {\n+            String err = String.format(\n+                    \"Connection pool is fully used,\"\n+                            + \" consider increasing nuxeo.vcs.blocking-timeout-millis (currently %s)\"\n+                            + \" or nuxeo.vcs.max-pool-size (currently %s)\",\n+                    poolConfig.getBlockingTimeoutMillis(), poolConfig.getMaxPoolSize());\n+            throw new NuxeoException(err, e);\n+        } catch (RuntimeException e) {\n+            throw e;\n+        } catch (Exception e) {\n+            if (e instanceof InterruptedException) { // NOSONAR\n+                Thread.currentThread().interrupt();\n+            }\n+            throw new NuxeoException(e);\n+        }\n+        // register synchronization for transaction commit/rollback\n+        // and to return to pool and remove from thread-local at end of transaction\n+        TransactionHelper.registerSynchronization(new SessionSynchronization(session, cleanup));\n+        session.start();\n+        return session;\n+    }\n+\n+    /** @since 11.1 */\n+    protected class SessionSynchronization implements Synchronization {\n+\n+        protected final Session session;\n+\n+        protected final Runnable cleanup;\n+\n+        protected SessionSynchronization(Session session, Runnable cleanup) {\n+            this.session = session;\n+            this.cleanup = cleanup;\n+        }\n+\n+        @Override\n+        public void beforeCompletion() {\n+            session.end();\n+        }\n+\n+        @Override\n+        public void afterCompletion(int status) {\n+            boolean completedAbruptly = true;\n+            try {\n+                if (status == STATUS_COMMITTED) {\n+                    session.commit();\n+                } else if (status == STATUS_ROLLEDBACK) {\n+                    session.rollback();\n+                } else {\n+                    log.error(\"Unexpected afterCompletion status: \" + status);\n+                }\n+                completedAbruptly = false;\n+            } finally {\n+                try {\n+                    String repositoryName = session.getRepositoryName();\n+                    if (status == STATUS_COMMITTED && !completedAbruptly) {\n+                        pool.returnObject(repositoryName, session);\n+                    } else {\n+                        pool.invalidateObject(repositoryName, session);\n+                    }\n+                } catch (Exception e) {\n+                    if (e instanceof InterruptedException) { // NOSONAR\n+                        Thread.currentThread().interrupt();\n+                    }\n+                    log.error(e, e);\n+                } finally {\n+                    cleanup.run();\n+                }\n+            }\n+        }\n+    }\n+\n+    /** @since 11.1 */\n+    protected class SessionFactory extends BaseKeyedPooledObjectFactory<String, Session> {\n+\n+        @Override\n+        public Session create(String repositoryName) throws Exception {\n+            Repository repository = getRepository(repositoryName);\n+            if (repository == null) {\n+                throw new DocumentNotFoundException(\"No such repository: \" + repositoryName);\n+            }\n+            return repository.getSession();\n+        }\n+\n+        @Override\n+        public PooledObject<Session> wrap(Session session) {\n+            return new DefaultPooledObject<>(session);\n+        }\n+\n+        @Override\n+        public void activateObject(String repositoryName, PooledObject<Session> p) throws Exception {\n+            super.activateObject(repositoryName, p);\n+        }\n+\n+        @Override\n+        public boolean validateObject(String repositoryName, PooledObject<Session> p) {\n+            return super.validateObject(repositoryName, p);\n+        }\n+\n+        @Override\n+        public void passivateObject(String repositoryName, PooledObject<Session> p) throws Exception {\n+            super.passivateObject(repositoryName, p);\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8d7adf76e8337076b0ff2c661508da5604e53fe7"}, "originalPosition": 259}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTY5NDcwMA==", "bodyText": "Extra line.", "url": "https://github.com/nuxeo/nuxeo/pull/3981#discussion_r425694700", "createdAt": "2020-05-15T09:56:11Z", "author": {"login": "kevinleturc"}, "path": "modules/runtime/nuxeo-runtime-datasource/src/main/java/org/nuxeo/runtime/datasource/PooledDataSourceRegistry.java", "diffHunk": "@@ -13,74 +13,223 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  *\n+ * Contributors:\n+ *     Florent Guillaume\n  */\n package org.nuxeo.runtime.datasource;\n \n-import java.sql.Connection;\n+import static org.apache.commons.lang3.StringUtils.defaultString;\n+\n+import java.lang.reflect.InvocationTargetException;\n import java.sql.SQLException;\n-import java.util.HashMap;\n-import java.util.Hashtable;\n import java.util.Map;\n-import java.util.concurrent.locks.ReentrantReadWriteLock;\n+import java.util.Map.Entry;\n+import java.util.concurrent.ConcurrentHashMap;\n \n-import javax.naming.Context;\n-import javax.naming.Name;\n-import javax.naming.Reference;\n+import javax.naming.NamingException;\n import javax.sql.DataSource;\n+import javax.sql.XADataSource;\n+import javax.transaction.Status;\n+import javax.transaction.Transaction;\n+import javax.transaction.TransactionManager;\n+import javax.transaction.TransactionSynchronizationRegistry;\n+\n+import org.apache.commons.beanutils.BeanUtils;\n+import org.apache.commons.dbcp2.ConnectionFactory;\n+import org.apache.commons.dbcp2.managed.BasicManagedDataSource;\n+import org.apache.commons.dbcp2.managed.TransactionRegistry;\n+import org.apache.commons.lang3.reflect.FieldUtils;\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+import org.nuxeo.runtime.RuntimeServiceException;\n+import org.nuxeo.runtime.transaction.TransactionHelper;\n \n-public class PooledDataSourceRegistry extends ReentrantReadWriteLock {\n+public class PooledDataSourceRegistry {\n \n-    private static final long serialVersionUID = 1L;\n+    protected final Map<String, DataSource> dataSources = new ConcurrentHashMap<>();\n \n-    public interface PooledDataSource extends DataSource {\n-        void dispose();\n+    protected final Map<String, DataSource> dataSourcesNoSharing = new ConcurrentHashMap<>();\n \n-        Connection getConnection(boolean noSharing) throws SQLException;\n+    public <T> T getDataSource(String name, Class<T> type, boolean noSharing) {\n+        Map<String, DataSource> map = noSharing ? dataSourcesNoSharing : dataSources;\n+        return type.cast(map.get(name));\n     }\n \n-    protected final Map<String, PooledDataSource> pools = new HashMap<>();\n+    public void registerPooledDataSource(String name, Map<String, String> properties) {\n+        dataSources.computeIfAbsent(name, k -> createPooledDataSource(properties, false));\n+        dataSourcesNoSharing.computeIfAbsent(name, k -> createPooledDataSource(properties, true));\n+    }\n \n-    protected final PooledDataSourceFactory poolFactory = new org.nuxeo.runtime.datasource.PooledDataSourceFactory();\n+    /**\n+     * A {@link BasicManagedDataSource} that can configure its internal {@link XADataSource}.\n+     *\n+     * @since 11.1\n+     */\n+    public static class ConfigurableManagedDataSource extends BasicManagedDataSource {\n \n-    public <T> T getPool(String name, Class<T> type) {\n-        return type.cast(pools.get(name));\n-    }\n+        private static final Logger log = LogManager.getLogger(ConfigurableManagedDataSource.class);\n+\n+        protected final Map<String, String> properties;\n+\n+        public ConfigurableManagedDataSource(Map<String, String> properties) {\n+            this.properties = properties;\n+        }\n+        @Override\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8d7adf76e8337076b0ff2c661508da5604e53fe7"}, "originalPosition": 90}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8d7adf76e8337076b0ff2c661508da5604e53fe7", "author": {"user": {"login": "efge", "name": "Florent Guillaume"}}, "url": "https://github.com/nuxeo/nuxeo/commit/8d7adf76e8337076b0ff2c661508da5604e53fe7", "committedDate": "2020-05-14T00:59:32Z", "message": "NXP-29010: fix DBCP bug when acquiring a connection when transaction is rollback-only"}, "afterCommit": {"oid": "c3e86c8bb234d8e8d337edeae1b0ba2bba11ad79", "author": {"user": {"login": "efge", "name": "Florent Guillaume"}}, "url": "https://github.com/nuxeo/nuxeo/commit/c3e86c8bb234d8e8d337edeae1b0ba2bba11ad79", "committedDate": "2020-05-16T16:18:07Z", "message": "NXP-29010: fix DBCP bug when acquiring a connection when transaction is rollback-only"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE1MzIwOTk1", "url": "https://github.com/nuxeo/nuxeo/pull/3981#pullrequestreview-415320995", "createdAt": "2020-05-20T13:16:02Z", "commit": {"oid": "c3e86c8bb234d8e8d337edeae1b0ba2bba11ad79"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE1MzU4NTU1", "url": "https://github.com/nuxeo/nuxeo/pull/3981#pullrequestreview-415358555", "createdAt": "2020-05-20T13:53:13Z", "commit": {"oid": "c3e86c8bb234d8e8d337edeae1b0ba2bba11ad79"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxMzo1MzoxM1rOGYM2gA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxNDoyMjoyN1rOGYOUTA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODAyOTU2OA==", "bodyText": "Since 11.1?", "url": "https://github.com/nuxeo/nuxeo/pull/3981#discussion_r428029568", "createdAt": "2020-05-20T13:53:13Z", "author": {"login": "troger"}, "path": "modules/core/nuxeo-core-management-jtajca/src/main/java/org/nuxeo/ecm/core/management/jtajca/ConnectionPoolMonitor.java", "diffHunk": "@@ -37,6 +35,14 @@\n      */\n     String getName();\n \n+    int getConnectionCount();\n+\n+    int getIdleConnectionCount();\n+\n+    int getBlockingTimeoutMilliseconds();\n+\n+    int getIdleTimeoutMinutes();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c3e86c8bb234d8e8d337edeae1b0ba2bba11ad79"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODA1MzU4MA==", "bodyText": "Since 11.1?", "url": "https://github.com/nuxeo/nuxeo/pull/3981#discussion_r428053580", "createdAt": "2020-05-20T14:22:27Z", "author": {"login": "troger"}, "path": "modules/core/nuxeo-core-storage-sql/nuxeo-core-storage-sql/src/main/java/org/nuxeo/ecm/core/storage/sql/VCSRepositoryFactory.java", "diffHunk": "@@ -0,0 +1,43 @@\n+/*\n+ * (C) Copyright 2006-2020 Nuxeo (http://nuxeo.com/) and others.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ * Contributors:\n+ *     Florent Guillaume\n+ */\n+package org.nuxeo.ecm.core.storage.sql;\n+\n+import org.nuxeo.ecm.core.repository.RepositoryFactory;\n+import org.nuxeo.ecm.core.storage.sql.coremodel.SQLRepositoryService;\n+import org.nuxeo.runtime.api.Framework;\n+\n+/**\n+ * Repository factory for VCS, the repository implements internal pooling of sessions.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c3e86c8bb234d8e8d337edeae1b0ba2bba11ad79"}, "originalPosition": 26}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c3e86c8bb234d8e8d337edeae1b0ba2bba11ad79", "author": {"user": {"login": "efge", "name": "Florent Guillaume"}}, "url": "https://github.com/nuxeo/nuxeo/commit/c3e86c8bb234d8e8d337edeae1b0ba2bba11ad79", "committedDate": "2020-05-16T16:18:07Z", "message": "NXP-29010: fix DBCP bug when acquiring a connection when transaction is rollback-only"}, "afterCommit": {"oid": "b36ef575a45c7ee0cd3e58c3688cad09217d74f4", "author": {"user": {"login": "efge", "name": "Florent Guillaume"}}, "url": "https://github.com/nuxeo/nuxeo/commit/b36ef575a45c7ee0cd3e58c3688cad09217d74f4", "committedDate": "2020-05-26T09:38:37Z", "message": "NXP-29010: fix DBCP bug when acquiring a connection when transaction is rollback-only"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b36ef575a45c7ee0cd3e58c3688cad09217d74f4", "author": {"user": {"login": "efge", "name": "Florent Guillaume"}}, "url": "https://github.com/nuxeo/nuxeo/commit/b36ef575a45c7ee0cd3e58c3688cad09217d74f4", "committedDate": "2020-05-26T09:38:37Z", "message": "NXP-29010: fix DBCP bug when acquiring a connection when transaction is rollback-only"}, "afterCommit": {"oid": "05585b09565cf30d555b0686c4401c17d2862dbb", "author": {"user": {"login": "efge", "name": "Florent Guillaume"}}, "url": "https://github.com/nuxeo/nuxeo/commit/05585b09565cf30d555b0686c4401c17d2862dbb", "committedDate": "2020-05-26T09:59:22Z", "message": "NXP-29010: fix DBCP bug when acquiring a connection when transaction is rollback-only"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3fcb1a0c0a9a61ca2509d08bfa1158724acef766", "author": {"user": {"login": "efge", "name": "Florent Guillaume"}}, "url": "https://github.com/nuxeo/nuxeo/commit/3fcb1a0c0a9a61ca2509d08bfa1158724acef766", "committedDate": "2020-05-26T10:56:20Z", "message": "NXP-29159: upgrade to Geronimo Transaction 3.1.4"}, "afterCommit": {"oid": "d9852a9df8b97b58de8762e8be0fc2b74064cf63", "author": {"user": {"login": "efge", "name": "Florent Guillaume"}}, "url": "https://github.com/nuxeo/nuxeo/commit/d9852a9df8b97b58de8762e8be0fc2b74064cf63", "committedDate": "2020-05-26T11:48:33Z", "message": "NXP-29159: upgrade to Geronimo Transaction 3.1.4"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d9852a9df8b97b58de8762e8be0fc2b74064cf63", "author": {"user": {"login": "efge", "name": "Florent Guillaume"}}, "url": "https://github.com/nuxeo/nuxeo/commit/d9852a9df8b97b58de8762e8be0fc2b74064cf63", "committedDate": "2020-05-26T11:48:33Z", "message": "NXP-29159: upgrade to Geronimo Transaction 3.1.4"}, "afterCommit": {"oid": "d4bcef13944577a498b8eb7da9ecdb2808631fae", "author": {"user": {"login": "efge", "name": "Florent Guillaume"}}, "url": "https://github.com/nuxeo/nuxeo/commit/d4bcef13944577a498b8eb7da9ecdb2808631fae", "committedDate": "2020-09-04T15:26:35Z", "message": "NXP-29159: upgrade to Geronimo Transaction 3.1.4"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d4bcef13944577a498b8eb7da9ecdb2808631fae", "author": {"user": {"login": "efge", "name": "Florent Guillaume"}}, "url": "https://github.com/nuxeo/nuxeo/commit/d4bcef13944577a498b8eb7da9ecdb2808631fae", "committedDate": "2020-09-04T15:26:35Z", "message": "NXP-29159: upgrade to Geronimo Transaction 3.1.4"}, "afterCommit": {"oid": "54c16d5432da3ea4be23ed4e7a03896d09fec215", "author": {"user": {"login": "efge", "name": "Florent Guillaume"}}, "url": "https://github.com/nuxeo/nuxeo/commit/54c16d5432da3ea4be23ed4e7a03896d09fec215", "committedDate": "2020-09-15T12:25:51Z", "message": "NXP-29159: upgrade to Geronimo Transaction 3.1.4"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "04348c3de4f110df78f70a484bbfbc60766c5151", "author": {"user": {"login": "efge", "name": "Florent Guillaume"}}, "url": "https://github.com/nuxeo/nuxeo/commit/04348c3de4f110df78f70a484bbfbc60766c5151", "committedDate": "2020-09-17T17:06:24Z", "message": "NXP-28865: remove useless DBS internal session proxying"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0f1a6dd358a65b264ff92ef50bf71f413ea5400e", "author": {"user": {"login": "efge", "name": "Florent Guillaume"}}, "url": "https://github.com/nuxeo/nuxeo/commit/0f1a6dd358a65b264ff92ef50bf71f413ea5400e", "committedDate": "2020-09-17T17:06:24Z", "message": "NXP-29009: use Apache Commons DBCP instead of JCA (Apache Geronimo Connector + Tranql) for VCS/DBS pooling"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f25021cec7b92d1677bd90fdb2961a216dc46d16", "author": {"user": {"login": "efge", "name": "Florent Guillaume"}}, "url": "https://github.com/nuxeo/nuxeo/commit/f25021cec7b92d1677bd90fdb2961a216dc46d16", "committedDate": "2020-09-17T17:06:24Z", "message": "NXP-29009: compute active session count through pool"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2d1037aa834e164ada9417ac85d32d4ee5cd66b3", "author": {"user": {"login": "efge", "name": "Florent Guillaume"}}, "url": "https://github.com/nuxeo/nuxeo/commit/2d1037aa834e164ada9417ac85d32d4ee5cd66b3", "committedDate": "2020-09-17T17:06:24Z", "message": "NXP-28865: add TransactionHelper.enlistResource"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1b85f5ab5eceda78acd5273d1dd2aaa9dc143f10", "author": {"user": {"login": "efge", "name": "Florent Guillaume"}}, "url": "https://github.com/nuxeo/nuxeo/commit/1b85f5ab5eceda78acd5273d1dd2aaa9dc143f10", "committedDate": "2020-09-17T17:06:24Z", "message": "NXP-28865: make VCSLockManager use its own connection"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c6f31cdca84c6c0f746423de8bdb4788d6cf0988", "author": {"user": {"login": "efge", "name": "Florent Guillaume"}}, "url": "https://github.com/nuxeo/nuxeo/commit/c6f31cdca84c6c0f746423de8bdb4788d6cf0988", "committedDate": "2020-09-17T17:06:24Z", "message": "NXP-28865: merge JDBCBackend into RepositoryImpl"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7b9452ac4d26c8ee1e0321b19d9ca665c344b189", "author": {"user": {"login": "efge", "name": "Florent Guillaume"}}, "url": "https://github.com/nuxeo/nuxeo/commit/7b9452ac4d26c8ee1e0321b19d9ca665c344b189", "committedDate": "2020-09-17T17:06:24Z", "message": "NXP-28865: move createDatabase from JDBCMapper to RepositoryImpl"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1d2b861dc48e7eb8689abda9f1b478f6dc53a9a4", "author": {"user": {"login": "efge", "name": "Florent Guillaume"}}, "url": "https://github.com/nuxeo/nuxeo/commit/1d2b861dc48e7eb8689abda9f1b478f6dc53a9a4", "committedDate": "2020-09-17T17:06:24Z", "message": "NXP-29011: don't go through JNDI for Nuxeo datasources"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "19842c9d6d378a6ceeb62879e8cdc8f8bcbb1c95", "author": {"user": {"login": "efge", "name": "Florent Guillaume"}}, "url": "https://github.com/nuxeo/nuxeo/commit/19842c9d6d378a6ceeb62879e8cdc8f8bcbb1c95", "committedDate": "2020-09-17T17:06:24Z", "message": "NXP-29010: use Apache Commons DBCP instead of JCA (Apache Geronimo Connector + Tranql) for JDBC pooling"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "269ebcd081cfe19204bf9c9ecda934535e0ea915", "author": {"user": {"login": "efge", "name": "Florent Guillaume"}}, "url": "https://github.com/nuxeo/nuxeo/commit/269ebcd081cfe19204bf9c9ecda934535e0ea915", "committedDate": "2020-09-17T17:06:25Z", "message": "NXP-29010: remove JCA dependencies (Apache Geronimo Connector + Tranql)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ee26d4553e3e94bf574657929ba177da0beb3970", "author": {"user": {"login": "efge", "name": "Florent Guillaume"}}, "url": "https://github.com/nuxeo/nuxeo/commit/ee26d4553e3e94bf574657929ba177da0beb3970", "committedDate": "2020-09-17T17:06:25Z", "message": "NXP-29009: simpler VCS connections; VCS/DBS pooling doesn't need XA"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "554fc4f3e412312bf39d89d127d0e9c380fdf8da", "author": {"user": {"login": "efge", "name": "Florent Guillaume"}}, "url": "https://github.com/nuxeo/nuxeo/commit/554fc4f3e412312bf39d89d127d0e9c380fdf8da", "committedDate": "2020-09-17T17:06:25Z", "message": "NXP-28865: use connection in noSharing mode for SQLKeyValueStore\n\nThis is much simpler than running outside a transaction with a standard connection."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7aea54a853b7ac12a9efa1639ab9e8400f6d9182", "author": {"user": {"login": "efge", "name": "Florent Guillaume"}}, "url": "https://github.com/nuxeo/nuxeo/commit/7aea54a853b7ac12a9efa1639ab9e8400f6d9182", "committedDate": "2020-09-17T17:06:25Z", "message": "NXP-29009: VCS/DBS pooling cleanup"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6afa4194df0f7644ef3c3ad5c3e31cea099c76fc", "author": {"user": {"login": "efge", "name": "Florent Guillaume"}}, "url": "https://github.com/nuxeo/nuxeo/commit/6afa4194df0f7644ef3c3ad5c3e31cea099c76fc", "committedDate": "2020-09-17T17:06:25Z", "message": "NXP-29010: fix DBCP bug when acquiring a connection when transaction is rollback-only"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "760bfa8c60e1ad0ddcb6a332b0bf3891b73be015", "author": {"user": {"login": "efge", "name": "Florent Guillaume"}}, "url": "https://github.com/nuxeo/nuxeo/commit/760bfa8c60e1ad0ddcb6a332b0bf3891b73be015", "committedDate": "2020-09-17T17:06:25Z", "message": "NXP-29159: upgrade to Geronimo Transaction 3.1.4"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "513925d251aff5bad1215156cb151abf80661f90", "author": {"user": {"login": "efge", "name": "Florent Guillaume"}}, "url": "https://github.com/nuxeo/nuxeo/commit/513925d251aff5bad1215156cb151abf80661f90", "committedDate": "2020-09-17T17:06:25Z", "message": "NXP-29654: remove deprecated org.nuxeo.ecm.core.model.LockManager"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6ea455175d87327fa86a72d69895e18f41e2f3d8", "author": {"user": {"login": "efge", "name": "Florent Guillaume"}}, "url": "https://github.com/nuxeo/nuxeo/commit/6ea455175d87327fa86a72d69895e18f41e2f3d8", "committedDate": "2020-09-15T16:52:37Z", "message": "NXP-29654: remove deprecated org.nuxeo.ecm.core.model.LockManager"}, "afterCommit": {"oid": "513925d251aff5bad1215156cb151abf80661f90", "author": {"user": {"login": "efge", "name": "Florent Guillaume"}}, "url": "https://github.com/nuxeo/nuxeo/commit/513925d251aff5bad1215156cb151abf80661f90", "committedDate": "2020-09-17T17:06:25Z", "message": "NXP-29654: remove deprecated org.nuxeo.ecm.core.model.LockManager"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkxMjg2MDMy", "url": "https://github.com/nuxeo/nuxeo/pull/3981#pullrequestreview-491286032", "createdAt": "2020-09-18T09:09:26Z", "commit": {"oid": "513925d251aff5bad1215156cb151abf80661f90"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4787, "cost": 1, "resetAt": "2021-11-03T18:41:40Z"}}}