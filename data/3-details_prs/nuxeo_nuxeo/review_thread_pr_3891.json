{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk5NzU0NDcz", "number": 3891, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxMDozODo1MlrODyA55w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxMzo0NjozNlrODyFE0A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNzcwMjE1OnYy", "diffSide": "RIGHT", "path": "Jenkinsfile", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxMDozODo1MlrOGFz3zw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxMDozODo1MlrOGFz3zw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODc0NTkzNQ==", "bodyText": "Could it be interesting to have a method for the rollouts? something like waitFor(ns, type, name, timeout)? Or without type as we know all kinds of resources and can do a switch in the method, wdyt?", "url": "https://github.com/nuxeo/nuxeo/pull/3891#discussion_r408745935", "createdAt": "2020-04-15T10:38:52Z", "author": {"login": "kevinleturc"}, "path": "Jenkinsfile", "diffHunk": "@@ -369,28 +396,81 @@ pipeline {\n \n     stage('Run runtime unit tests') {\n       steps {\n-        setGitHubBuildStatus('platform/utests/runtime/dev', 'Unit tests - runtime', 'PENDING')\n         container('maven') {\n-          echo \"\"\"\n-          ----------------------------------------\n-          Run runtime unit tests\n-          ----------------------------------------\"\"\"\n-          dir('modules/runtime') {\n-            sh \"mvn ${MAVEN_ARGS} test\"\n+          script {\n+            setGitHubBuildStatus('platform/utests/runtime', 'Unit tests - runtime', 'PENDING')\n+            def testNamespace = \"${TEST_NAMESPACE_PREFIX}-runtime\"\n+            def redisHost = \"${TEST_REDIS_RESOURCE}.${testNamespace}.${TEST_SERVICE_DOMAIN_SUFFIX}\"\n+            def kafkaHost = \"${TEST_KAFKA_RESOURCE}.${testNamespace}.${TEST_SERVICE_DOMAIN_SUFFIX}:${TEST_KAFKA_PORT}\"\n+            try {\n+              echo \"\"\"\n+              ----------------------------------------\n+              Run runtime unit tests\n+              ----------------------------------------\"\"\"\n+\n+              echo \"runtime unit tests: install external services\"\n+              // initialize Helm without Tiller and add local repository\n+              sh \"\"\"\n+                helm init --client-only\n+                helm repo add ${HELM_CHART_REPOSITORY_NAME} ${HELM_CHART_REPOSITORY_URL}\n+              \"\"\"\n+              // install the nuxeo Helm chart into a dedicated namespace that will be cleaned up afterwards\n+              sh \"\"\"\n+                jx step helm install ${HELM_CHART_REPOSITORY_NAME}/${HELM_CHART_NUXEO} \\\n+                  --name=${TEST_HELM_CHART_RELEASE} \\\n+                  --namespace=${testNamespace} \\\n+                  --set-file=ci/helm/nuxeo-test-base-values.yaml~gen \\\n+                  --set-file=ci/helm/nuxeo-test-kafka-values.yaml~gen\n+              \"\"\"\n+              // wait for Redis to be ready\n+              sh \"\"\"\n+                kubectl rollout status statefulset ${TEST_REDIS_RESOURCE} \\\n+                  --namespace=${testNamespace} \\\n+                  --timeout=${TEST_DEFAULT_ROLLOUT_STATUS_TIMEOUT}\n+              \"\"\"\n+              // wait for Kafka to be ready\n+              sh \"\"\"\n+                kubectl rollout status statefulset ${TEST_KAFKA_RESOURCE} \\\n+                  --namespace=${testNamespace} \\\n+                  --timeout=${TEST_LONG_ROLLOUT_STATUS_TIMEOUT}\n+              \"\"\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "82043e31fa64c09015e819f287530c9f323c8a94"}, "originalPosition": 168}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNzcyMTMyOnYy", "diffSide": "RIGHT", "path": "modules/runtime/nuxeo-runtime-stream/src/test/java/org/nuxeo/runtime/stream/RuntimeStreamFeature.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxMDo0NDoxN1rOGF0DQw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxMDo0NDoxN1rOGF0DQw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODc0ODg2Nw==", "bodyText": "It could be imported statically.", "url": "https://github.com/nuxeo/nuxeo/pull/3891#discussion_r408748867", "createdAt": "2020-04-15T10:44:17Z", "author": {"login": "kevinleturc"}, "path": "modules/runtime/nuxeo-runtime-stream/src/test/java/org/nuxeo/runtime/stream/RuntimeStreamFeature.java", "diffHunk": "@@ -69,6 +74,17 @@\n \n     protected String streamType;\n \n+    public static void assumeKafkaEnabled() {\n+        if (\"true\".equals(System.getProperty(\"kafka\"))// deprecated since 10.3\n+                || STREAM_KAFKA.equals(System.getProperty(STREAM_PROPERTY))) {\n+            if (!KafkaUtils.kafkaDetected()) {\n+                fail(\"Kafka is enabled, but no Kafka server found.\");\n+            }\n+        } else {\n+            Assume.assumeTrue(\"Kafka not enabled\", false);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "82043e31fa64c09015e819f287530c9f323c8a94"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzODM1OTI5OnYy", "diffSide": "RIGHT", "path": "Jenkinsfile", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxMzo0MToxOVrOGF6PNA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNDo1NDoxMFrOGF9qog==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODg1MDIyOA==", "bodyText": "Why replacing dir('modules/runtime') by that?", "url": "https://github.com/nuxeo/nuxeo/pull/3891#discussion_r408850228", "createdAt": "2020-04-15T13:41:19Z", "author": {"login": "troger"}, "path": "Jenkinsfile", "diffHunk": "@@ -369,28 +396,81 @@ pipeline {\n \n     stage('Run runtime unit tests') {\n       steps {\n-        setGitHubBuildStatus('platform/utests/runtime/dev', 'Unit tests - runtime', 'PENDING')\n         container('maven') {\n-          echo \"\"\"\n-          ----------------------------------------\n-          Run runtime unit tests\n-          ----------------------------------------\"\"\"\n-          dir('modules/runtime') {\n-            sh \"mvn ${MAVEN_ARGS} test\"\n+          script {\n+            setGitHubBuildStatus('platform/utests/runtime', 'Unit tests - runtime', 'PENDING')\n+            def testNamespace = \"${TEST_NAMESPACE_PREFIX}-runtime\"\n+            def redisHost = \"${TEST_REDIS_RESOURCE}.${testNamespace}.${TEST_SERVICE_DOMAIN_SUFFIX}\"\n+            def kafkaHost = \"${TEST_KAFKA_RESOURCE}.${testNamespace}.${TEST_SERVICE_DOMAIN_SUFFIX}:${TEST_KAFKA_PORT}\"\n+            try {\n+              echo \"\"\"\n+              ----------------------------------------\n+              Run runtime unit tests\n+              ----------------------------------------\"\"\"\n+\n+              echo \"runtime unit tests: install external services\"\n+              // initialize Helm without Tiller and add local repository\n+              sh \"\"\"\n+                helm init --client-only\n+                helm repo add ${HELM_CHART_REPOSITORY_NAME} ${HELM_CHART_REPOSITORY_URL}\n+              \"\"\"\n+              // install the nuxeo Helm chart into a dedicated namespace that will be cleaned up afterwards\n+              sh \"\"\"\n+                jx step helm install ${HELM_CHART_REPOSITORY_NAME}/${HELM_CHART_NUXEO} \\\n+                  --name=${TEST_HELM_CHART_RELEASE} \\\n+                  --namespace=${testNamespace} \\\n+                  --set-file=ci/helm/nuxeo-test-base-values.yaml~gen \\\n+                  --set-file=ci/helm/nuxeo-test-kafka-values.yaml~gen\n+              \"\"\"\n+              // wait for Redis to be ready\n+              sh \"\"\"\n+                kubectl rollout status statefulset ${TEST_REDIS_RESOURCE} \\\n+                  --namespace=${testNamespace} \\\n+                  --timeout=${TEST_DEFAULT_ROLLOUT_STATUS_TIMEOUT}\n+              \"\"\"\n+              // wait for Kafka to be ready\n+              sh \"\"\"\n+                kubectl rollout status statefulset ${TEST_KAFKA_RESOURCE} \\\n+                  --namespace=${testNamespace} \\\n+                  --timeout=${TEST_LONG_ROLLOUT_STATUS_TIMEOUT}\n+              \"\"\"\n+\n+              echo \"runtime unit tests: run Maven\"\n+              // run unit tests\n+              sh \"\"\"\n+                cd modules/runtime", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "82043e31fa64c09015e819f287530c9f323c8a94"}, "originalPosition": 173}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODg4NDc4MA==", "bodyText": "No specific reason, just to avoid one level of indentation and keep the shell scripts aligned.", "url": "https://github.com/nuxeo/nuxeo/pull/3891#discussion_r408884780", "createdAt": "2020-04-15T14:26:58Z", "author": {"login": "ataillefer"}, "path": "Jenkinsfile", "diffHunk": "@@ -369,28 +396,81 @@ pipeline {\n \n     stage('Run runtime unit tests') {\n       steps {\n-        setGitHubBuildStatus('platform/utests/runtime/dev', 'Unit tests - runtime', 'PENDING')\n         container('maven') {\n-          echo \"\"\"\n-          ----------------------------------------\n-          Run runtime unit tests\n-          ----------------------------------------\"\"\"\n-          dir('modules/runtime') {\n-            sh \"mvn ${MAVEN_ARGS} test\"\n+          script {\n+            setGitHubBuildStatus('platform/utests/runtime', 'Unit tests - runtime', 'PENDING')\n+            def testNamespace = \"${TEST_NAMESPACE_PREFIX}-runtime\"\n+            def redisHost = \"${TEST_REDIS_RESOURCE}.${testNamespace}.${TEST_SERVICE_DOMAIN_SUFFIX}\"\n+            def kafkaHost = \"${TEST_KAFKA_RESOURCE}.${testNamespace}.${TEST_SERVICE_DOMAIN_SUFFIX}:${TEST_KAFKA_PORT}\"\n+            try {\n+              echo \"\"\"\n+              ----------------------------------------\n+              Run runtime unit tests\n+              ----------------------------------------\"\"\"\n+\n+              echo \"runtime unit tests: install external services\"\n+              // initialize Helm without Tiller and add local repository\n+              sh \"\"\"\n+                helm init --client-only\n+                helm repo add ${HELM_CHART_REPOSITORY_NAME} ${HELM_CHART_REPOSITORY_URL}\n+              \"\"\"\n+              // install the nuxeo Helm chart into a dedicated namespace that will be cleaned up afterwards\n+              sh \"\"\"\n+                jx step helm install ${HELM_CHART_REPOSITORY_NAME}/${HELM_CHART_NUXEO} \\\n+                  --name=${TEST_HELM_CHART_RELEASE} \\\n+                  --namespace=${testNamespace} \\\n+                  --set-file=ci/helm/nuxeo-test-base-values.yaml~gen \\\n+                  --set-file=ci/helm/nuxeo-test-kafka-values.yaml~gen\n+              \"\"\"\n+              // wait for Redis to be ready\n+              sh \"\"\"\n+                kubectl rollout status statefulset ${TEST_REDIS_RESOURCE} \\\n+                  --namespace=${testNamespace} \\\n+                  --timeout=${TEST_DEFAULT_ROLLOUT_STATUS_TIMEOUT}\n+              \"\"\"\n+              // wait for Kafka to be ready\n+              sh \"\"\"\n+                kubectl rollout status statefulset ${TEST_KAFKA_RESOURCE} \\\n+                  --namespace=${testNamespace} \\\n+                  --timeout=${TEST_LONG_ROLLOUT_STATUS_TIMEOUT}\n+              \"\"\"\n+\n+              echo \"runtime unit tests: run Maven\"\n+              // run unit tests\n+              sh \"\"\"\n+                cd modules/runtime", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODg1MDIyOA=="}, "originalCommit": {"oid": "82043e31fa64c09015e819f287530c9f323c8a94"}, "originalPosition": 173}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODkwNjQwMg==", "bodyText": "Well, we should probably stick to one or the other but not both, WDYT?", "url": "https://github.com/nuxeo/nuxeo/pull/3891#discussion_r408906402", "createdAt": "2020-04-15T14:54:10Z", "author": {"login": "troger"}, "path": "Jenkinsfile", "diffHunk": "@@ -369,28 +396,81 @@ pipeline {\n \n     stage('Run runtime unit tests') {\n       steps {\n-        setGitHubBuildStatus('platform/utests/runtime/dev', 'Unit tests - runtime', 'PENDING')\n         container('maven') {\n-          echo \"\"\"\n-          ----------------------------------------\n-          Run runtime unit tests\n-          ----------------------------------------\"\"\"\n-          dir('modules/runtime') {\n-            sh \"mvn ${MAVEN_ARGS} test\"\n+          script {\n+            setGitHubBuildStatus('platform/utests/runtime', 'Unit tests - runtime', 'PENDING')\n+            def testNamespace = \"${TEST_NAMESPACE_PREFIX}-runtime\"\n+            def redisHost = \"${TEST_REDIS_RESOURCE}.${testNamespace}.${TEST_SERVICE_DOMAIN_SUFFIX}\"\n+            def kafkaHost = \"${TEST_KAFKA_RESOURCE}.${testNamespace}.${TEST_SERVICE_DOMAIN_SUFFIX}:${TEST_KAFKA_PORT}\"\n+            try {\n+              echo \"\"\"\n+              ----------------------------------------\n+              Run runtime unit tests\n+              ----------------------------------------\"\"\"\n+\n+              echo \"runtime unit tests: install external services\"\n+              // initialize Helm without Tiller and add local repository\n+              sh \"\"\"\n+                helm init --client-only\n+                helm repo add ${HELM_CHART_REPOSITORY_NAME} ${HELM_CHART_REPOSITORY_URL}\n+              \"\"\"\n+              // install the nuxeo Helm chart into a dedicated namespace that will be cleaned up afterwards\n+              sh \"\"\"\n+                jx step helm install ${HELM_CHART_REPOSITORY_NAME}/${HELM_CHART_NUXEO} \\\n+                  --name=${TEST_HELM_CHART_RELEASE} \\\n+                  --namespace=${testNamespace} \\\n+                  --set-file=ci/helm/nuxeo-test-base-values.yaml~gen \\\n+                  --set-file=ci/helm/nuxeo-test-kafka-values.yaml~gen\n+              \"\"\"\n+              // wait for Redis to be ready\n+              sh \"\"\"\n+                kubectl rollout status statefulset ${TEST_REDIS_RESOURCE} \\\n+                  --namespace=${testNamespace} \\\n+                  --timeout=${TEST_DEFAULT_ROLLOUT_STATUS_TIMEOUT}\n+              \"\"\"\n+              // wait for Kafka to be ready\n+              sh \"\"\"\n+                kubectl rollout status statefulset ${TEST_KAFKA_RESOURCE} \\\n+                  --namespace=${testNamespace} \\\n+                  --timeout=${TEST_LONG_ROLLOUT_STATUS_TIMEOUT}\n+              \"\"\"\n+\n+              echo \"runtime unit tests: run Maven\"\n+              // run unit tests\n+              sh \"\"\"\n+                cd modules/runtime", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODg1MDIyOA=="}, "originalCommit": {"oid": "82043e31fa64c09015e819f287530c9f323c8a94"}, "originalPosition": 173}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzODM4NTQ0OnYy", "diffSide": "RIGHT", "path": "modules/core/nuxeo-core-test/src/test/java/org/nuxeo/ecm/core/event/test/WorkTest.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxMzo0NjozNlrOGF6fGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNDo1MzoyN1rOGF9oVQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODg1NDI5Nw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                @Before\n          \n          \n            \n                @BeforeClass\n          \n      \n    \n    \n  \n\n?", "url": "https://github.com/nuxeo/nuxeo/pull/3891#discussion_r408854297", "createdAt": "2020-04-15T13:46:36Z", "author": {"login": "troger"}, "path": "modules/core/nuxeo-core-test/src/test/java/org/nuxeo/ecm/core/event/test/WorkTest.java", "diffHunk": "@@ -60,6 +63,16 @@\n     @Inject\n     protected CoreSession session;\n \n+    @Inject\n+    protected WorkManagerFeature workManagerFeature;\n+\n+    // TODO NXP-28931: remove\n+    @Before", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "82043e31fa64c09015e819f287530c9f323c8a94"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODg4NTI1Mg==", "bodyText": "I can't because I'm using the non static member workManagerFeature, if I'm not mistaken.", "url": "https://github.com/nuxeo/nuxeo/pull/3891#discussion_r408885252", "createdAt": "2020-04-15T14:27:37Z", "author": {"login": "ataillefer"}, "path": "modules/core/nuxeo-core-test/src/test/java/org/nuxeo/ecm/core/event/test/WorkTest.java", "diffHunk": "@@ -60,6 +63,16 @@\n     @Inject\n     protected CoreSession session;\n \n+    @Inject\n+    protected WorkManagerFeature workManagerFeature;\n+\n+    // TODO NXP-28931: remove\n+    @Before", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODg1NDI5Nw=="}, "originalCommit": {"oid": "82043e31fa64c09015e819f287530c9f323c8a94"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODkwNTgxMw==", "bodyText": "Ha... right.", "url": "https://github.com/nuxeo/nuxeo/pull/3891#discussion_r408905813", "createdAt": "2020-04-15T14:53:27Z", "author": {"login": "troger"}, "path": "modules/core/nuxeo-core-test/src/test/java/org/nuxeo/ecm/core/event/test/WorkTest.java", "diffHunk": "@@ -60,6 +63,16 @@\n     @Inject\n     protected CoreSession session;\n \n+    @Inject\n+    protected WorkManagerFeature workManagerFeature;\n+\n+    // TODO NXP-28931: remove\n+    @Before", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODg1NDI5Nw=="}, "originalCommit": {"oid": "82043e31fa64c09015e819f287530c9f323c8a94"}, "originalPosition": 32}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4241, "cost": 1, "resetAt": "2021-11-03T18:41:40Z"}}}