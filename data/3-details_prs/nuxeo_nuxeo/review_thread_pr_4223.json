{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU0NzI0OTY4", "number": 4223, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQwNzo1MTowOVrOEQ7nXw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxMjo1Njo0OFrOERCHpQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2MTg5NDA3OnYy", "diffSide": "RIGHT", "path": "modules/core/nuxeo-core-storage-dbs/src/main/java/org/nuxeo/ecm/core/storage/dbs/DBSRepositoryDescriptor.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQwNzo1MTowOVrOG1W4qw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQwNzo1MTowOVrOG1W4qw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODYwMjY2Nw==", "bodyText": "Worth updating the Javadoc to state that this method can return null, and probably will in most of the cases.", "url": "https://github.com/nuxeo/nuxeo/pull/4223#discussion_r458602667", "createdAt": "2020-07-22T07:51:09Z", "author": {"login": "troger"}, "path": "modules/core/nuxeo-core-storage-dbs/src/main/java/org/nuxeo/ecm/core/storage/dbs/DBSRepositoryDescriptor.java", "diffHunk": "@@ -51,6 +51,18 @@ public Boolean isDefault() {\n         return isDefault;\n     }\n \n+    @XNode(\"@isHeadless\")\n+    protected Boolean isHeadless;\n+\n+    /**\n+     * Returns true if repository is headless.\n+     *\n+     * @since 11.2\n+     */\n+    public Boolean isHeadless() {\n+        return isHeadless;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "21ece77de36f3226ba19024fbe8bf445291dacb0"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2MTkxOTA0OnYy", "diffSide": "RIGHT", "path": "modules/core/nuxeo-core-api/src/main/java/org/nuxeo/ecm/core/api/repository/Repository.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQwNzo1ODowMlrOG1XIGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQwODo1NToyOFrOG1ZORw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODYwNjYxOQ==", "bodyText": "Do we need the @XNode here as this descriptor is only kept for backward-compatibility? Nobody will contribute with this attribute.", "url": "https://github.com/nuxeo/nuxeo/pull/4223#discussion_r458606619", "createdAt": "2020-07-22T07:58:02Z", "author": {"login": "troger"}, "path": "modules/core/nuxeo-core-api/src/main/java/org/nuxeo/ecm/core/api/repository/Repository.java", "diffHunk": "@@ -45,6 +45,9 @@\n     @XNode(\"@isDefault\")\n     private Boolean isDefault;\n \n+    @XNode(\"@headless\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "21ece77de36f3226ba19024fbe8bf445291dacb0"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODY0MDk2Nw==", "bodyText": "we don't, no. I didn't have it initially but added for consistency, will gladly remove it", "url": "https://github.com/nuxeo/nuxeo/pull/4223#discussion_r458640967", "createdAt": "2020-07-22T08:55:28Z", "author": {"login": "nelsonsilva"}, "path": "modules/core/nuxeo-core-api/src/main/java/org/nuxeo/ecm/core/api/repository/Repository.java", "diffHunk": "@@ -45,6 +45,9 @@\n     @XNode(\"@isDefault\")\n     private Boolean isDefault;\n \n+    @XNode(\"@headless\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODYwNjYxOQ=="}, "originalCommit": {"oid": "21ece77de36f3226ba19024fbe8bf445291dacb0"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2Mjk1OTczOnYy", "diffSide": "RIGHT", "path": "modules/core/nuxeo-core-api/src/main/java/org/nuxeo/ecm/core/api/repository/Repository.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxMjo1Njo0OFrOG1hIvw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxMzoxMzowNlrOG1hvuw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODc3MDYyMw==", "bodyText": "Why not:\n    public Boolean isHeadless() {\n        return headless;\n    }\n\nas for the other descriptors?", "url": "https://github.com/nuxeo/nuxeo/pull/4223#discussion_r458770623", "createdAt": "2020-07-22T12:56:48Z", "author": {"login": "ataillefer"}, "path": "modules/core/nuxeo-core-api/src/main/java/org/nuxeo/ecm/core/api/repository/Repository.java", "diffHunk": "@@ -84,6 +88,11 @@ public boolean isDefault() {\n         return Boolean.TRUE.equals(isDefault);\n     }\n \n+    /** @since 11.2 */\n+    public boolean isHeadless() {\n+        return Boolean.TRUE.equals(headless);\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5a1014cd2f17eff73d027de52171f6e3f90d926b"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODc3NjkzMg==", "bodyText": "Probably because this one should really return true or false as it's the object used everywhere :)\n(such as in nuxeo/nuxeo-web-ui#973)", "url": "https://github.com/nuxeo/nuxeo/pull/4223#discussion_r458776932", "createdAt": "2020-07-22T13:07:17Z", "author": {"login": "troger"}, "path": "modules/core/nuxeo-core-api/src/main/java/org/nuxeo/ecm/core/api/repository/Repository.java", "diffHunk": "@@ -84,6 +88,11 @@ public boolean isDefault() {\n         return Boolean.TRUE.equals(isDefault);\n     }\n \n+    /** @since 11.2 */\n+    public boolean isHeadless() {\n+        return Boolean.TRUE.equals(headless);\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODc3MDYyMw=="}, "originalCommit": {"oid": "5a1014cd2f17eff73d027de52171f6e3f90d926b"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODc3OTc5Ng==", "bodyText": "Yes. I need a single point in which to determine the semantics of a null value. Plan is for it to be false in master (repos are not headless by default) but for it to be true when null and not the default repo in 10.10 so that the repository picker is not suddenly shown.", "url": "https://github.com/nuxeo/nuxeo/pull/4223#discussion_r458779796", "createdAt": "2020-07-22T13:11:53Z", "author": {"login": "nelsonsilva"}, "path": "modules/core/nuxeo-core-api/src/main/java/org/nuxeo/ecm/core/api/repository/Repository.java", "diffHunk": "@@ -84,6 +88,11 @@ public boolean isDefault() {\n         return Boolean.TRUE.equals(isDefault);\n     }\n \n+    /** @since 11.2 */\n+    public boolean isHeadless() {\n+        return Boolean.TRUE.equals(headless);\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODc3MDYyMw=="}, "originalCommit": {"oid": "5a1014cd2f17eff73d027de52171f6e3f90d926b"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODc4MDYwMw==", "bodyText": "Also, note we do the same with isDefault()", "url": "https://github.com/nuxeo/nuxeo/pull/4223#discussion_r458780603", "createdAt": "2020-07-22T13:13:06Z", "author": {"login": "nelsonsilva"}, "path": "modules/core/nuxeo-core-api/src/main/java/org/nuxeo/ecm/core/api/repository/Repository.java", "diffHunk": "@@ -84,6 +88,11 @@ public boolean isDefault() {\n         return Boolean.TRUE.equals(isDefault);\n     }\n \n+    /** @since 11.2 */\n+    public boolean isHeadless() {\n+        return Boolean.TRUE.equals(headless);\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODc3MDYyMw=="}, "originalCommit": {"oid": "5a1014cd2f17eff73d027de52171f6e3f90d926b"}, "originalPosition": 30}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4353, "cost": 1, "resetAt": "2021-11-03T18:41:40Z"}}}