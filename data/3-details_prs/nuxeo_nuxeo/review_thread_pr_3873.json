{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk1MTA1MDY1", "number": 3873, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQwOTozMzozOVrODtc87A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQwOTo0NzoyOVrODtdRZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4OTg2ODYwOnYy", "diffSide": "RIGHT", "path": "addons/nuxeo-platform-pdf-utils/src/main/java/org/nuxeo/ecm/platform/pdf/PDFEncryption.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQwOTozMzozOVrOF-4efA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxNDo0NToxOFrOF_EGag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQ4MTM0MA==", "bodyText": "Shouldn't it be ownerPwd here? Like you have password for removeEncryption method.", "url": "https://github.com/nuxeo/nuxeo/pull/3873#discussion_r401481340", "createdAt": "2020-04-01T09:33:39Z", "author": {"login": "troger"}, "path": "addons/nuxeo-platform-pdf-utils/src/main/java/org/nuxeo/ecm/platform/pdf/PDFEncryption.java", "diffHunk": "@@ -142,7 +141,7 @@ public Blob encrypt(AccessPermission inPerm) {\n         try {\n             StandardProtectionPolicy spp = new StandardProtectionPolicy(ownerPwd, userPwd, inPerm);\n             spp.setEncryptionKeyLength(keyLength);\n-            pdfDoc = PDDocument.load(pdfBlob.getFile());\n+            pdfDoc = PDDocument.load(pdfBlob.getFile(), originalOwnerPwd);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "218e599f45aa4fcaa56462f27f6634cf66cf8a7f"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTYzNzA3NQ==", "bodyText": "Unit tests were failing when I used ownerPwd...", "url": "https://github.com/nuxeo/nuxeo/pull/3873#discussion_r401637075", "createdAt": "2020-04-01T13:58:59Z", "author": {"login": "efge"}, "path": "addons/nuxeo-platform-pdf-utils/src/main/java/org/nuxeo/ecm/platform/pdf/PDFEncryption.java", "diffHunk": "@@ -142,7 +141,7 @@ public Blob encrypt(AccessPermission inPerm) {\n         try {\n             StandardProtectionPolicy spp = new StandardProtectionPolicy(ownerPwd, userPwd, inPerm);\n             spp.setEncryptionKeyLength(keyLength);\n-            pdfDoc = PDDocument.load(pdfBlob.getFile());\n+            pdfDoc = PDDocument.load(pdfBlob.getFile(), originalOwnerPwd);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQ4MTM0MA=="}, "originalCommit": {"oid": "218e599f45aa4fcaa56462f27f6634cf66cf8a7f"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTYzOTA2OA==", "bodyText": "I'll double-check", "url": "https://github.com/nuxeo/nuxeo/pull/3873#discussion_r401639068", "createdAt": "2020-04-01T14:01:41Z", "author": {"login": "efge"}, "path": "addons/nuxeo-platform-pdf-utils/src/main/java/org/nuxeo/ecm/platform/pdf/PDFEncryption.java", "diffHunk": "@@ -142,7 +141,7 @@ public Blob encrypt(AccessPermission inPerm) {\n         try {\n             StandardProtectionPolicy spp = new StandardProtectionPolicy(ownerPwd, userPwd, inPerm);\n             spp.setEncryptionKeyLength(keyLength);\n-            pdfDoc = PDDocument.load(pdfBlob.getFile());\n+            pdfDoc = PDDocument.load(pdfBlob.getFile(), originalOwnerPwd);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQ4MTM0MA=="}, "originalCommit": {"oid": "218e599f45aa4fcaa56462f27f6634cf66cf8a7f"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTY3MTc4Ng==", "bodyText": "Yes confirmed ownerPwd really doesn't work", "url": "https://github.com/nuxeo/nuxeo/pull/3873#discussion_r401671786", "createdAt": "2020-04-01T14:45:18Z", "author": {"login": "efge"}, "path": "addons/nuxeo-platform-pdf-utils/src/main/java/org/nuxeo/ecm/platform/pdf/PDFEncryption.java", "diffHunk": "@@ -142,7 +141,7 @@ public Blob encrypt(AccessPermission inPerm) {\n         try {\n             StandardProtectionPolicy spp = new StandardProtectionPolicy(ownerPwd, userPwd, inPerm);\n             spp.setEncryptionKeyLength(keyLength);\n-            pdfDoc = PDDocument.load(pdfBlob.getFile());\n+            pdfDoc = PDDocument.load(pdfBlob.getFile(), originalOwnerPwd);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQ4MTM0MA=="}, "originalCommit": {"oid": "218e599f45aa4fcaa56462f27f6634cf66cf8a7f"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4OTkyMTAwOnYy", "diffSide": "RIGHT", "path": "addons/nuxeo-platform-pdf-utils/src/main/java/org/nuxeo/ecm/platform/pdf/PDFPageNumbering.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQwOTo0NzoyOVrOF-4-9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxNDo0ODoxNlrOF_EPXw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQ4OTY1Mg==", "bodyText": "Why using com.google.common.collect.Lists and not standard JDK stuff?", "url": "https://github.com/nuxeo/nuxeo/pull/3873#discussion_r401489652", "createdAt": "2020-04-01T09:47:29Z", "author": {"login": "troger"}, "path": "addons/nuxeo-platform-pdf-utils/src/main/java/org/nuxeo/ecm/platform/pdf/PDFPageNumbering.java", "diffHunk": "@@ -105,12 +106,12 @@ public Blob addPageNumbers(int inStartAtPage, int inStartAtNumber, String inFont\n             if (StringUtils.isBlank(inFontName)) {\n                 font = PDType1Font.HELVETICA;\n             } else {\n-                font = PDType1Font.getStandardFont(inFontName);\n+                font = PDFUtils.getStandardType1Font(inFontName);\n                 if (font == null) {\n-                    font = new PDType1Font(inFontName);\n+                    throw new NuxeoException(\"Not a standard font: \" + inFontName);\n                 }\n             }\n-            allPages = doc.getDocumentCatalog().getAllPages();\n+            allPages = Lists.newArrayList(doc.getDocumentCatalog().getPages());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "218e599f45aa4fcaa56462f27f6634cf66cf8a7f"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTY0MDIzOA==", "bodyText": "getPages() returns an iterable, and there's no one-method way of doing the conversion to a list in pure Java. But I could use Apache Commons Collections instead of Guava here.\nNote that in this patch I wanted to do the minimum changes possible to separate migration tasks from refactorings/cleanups.", "url": "https://github.com/nuxeo/nuxeo/pull/3873#discussion_r401640238", "createdAt": "2020-04-01T14:03:17Z", "author": {"login": "efge"}, "path": "addons/nuxeo-platform-pdf-utils/src/main/java/org/nuxeo/ecm/platform/pdf/PDFPageNumbering.java", "diffHunk": "@@ -105,12 +106,12 @@ public Blob addPageNumbers(int inStartAtPage, int inStartAtNumber, String inFont\n             if (StringUtils.isBlank(inFontName)) {\n                 font = PDType1Font.HELVETICA;\n             } else {\n-                font = PDType1Font.getStandardFont(inFontName);\n+                font = PDFUtils.getStandardType1Font(inFontName);\n                 if (font == null) {\n-                    font = new PDType1Font(inFontName);\n+                    throw new NuxeoException(\"Not a standard font: \" + inFontName);\n                 }\n             }\n-            allPages = doc.getDocumentCatalog().getAllPages();\n+            allPages = Lists.newArrayList(doc.getDocumentCatalog().getPages());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQ4OTY1Mg=="}, "originalCommit": {"oid": "218e599f45aa4fcaa56462f27f6634cf66cf8a7f"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTY1MDMyOQ==", "bodyText": "Understood, \ud83d\udc4d", "url": "https://github.com/nuxeo/nuxeo/pull/3873#discussion_r401650329", "createdAt": "2020-04-01T14:17:12Z", "author": {"login": "troger"}, "path": "addons/nuxeo-platform-pdf-utils/src/main/java/org/nuxeo/ecm/platform/pdf/PDFPageNumbering.java", "diffHunk": "@@ -105,12 +106,12 @@ public Blob addPageNumbers(int inStartAtPage, int inStartAtNumber, String inFont\n             if (StringUtils.isBlank(inFontName)) {\n                 font = PDType1Font.HELVETICA;\n             } else {\n-                font = PDType1Font.getStandardFont(inFontName);\n+                font = PDFUtils.getStandardType1Font(inFontName);\n                 if (font == null) {\n-                    font = new PDType1Font(inFontName);\n+                    throw new NuxeoException(\"Not a standard font: \" + inFontName);\n                 }\n             }\n-            allPages = doc.getDocumentCatalog().getAllPages();\n+            allPages = Lists.newArrayList(doc.getDocumentCatalog().getPages());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQ4OTY1Mg=="}, "originalCommit": {"oid": "218e599f45aa4fcaa56462f27f6634cf66cf8a7f"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTY3NDA3OQ==", "bodyText": "Updated", "url": "https://github.com/nuxeo/nuxeo/pull/3873#discussion_r401674079", "createdAt": "2020-04-01T14:48:16Z", "author": {"login": "efge"}, "path": "addons/nuxeo-platform-pdf-utils/src/main/java/org/nuxeo/ecm/platform/pdf/PDFPageNumbering.java", "diffHunk": "@@ -105,12 +106,12 @@ public Blob addPageNumbers(int inStartAtPage, int inStartAtNumber, String inFont\n             if (StringUtils.isBlank(inFontName)) {\n                 font = PDType1Font.HELVETICA;\n             } else {\n-                font = PDType1Font.getStandardFont(inFontName);\n+                font = PDFUtils.getStandardType1Font(inFontName);\n                 if (font == null) {\n-                    font = new PDType1Font(inFontName);\n+                    throw new NuxeoException(\"Not a standard font: \" + inFontName);\n                 }\n             }\n-            allPages = doc.getDocumentCatalog().getAllPages();\n+            allPages = Lists.newArrayList(doc.getDocumentCatalog().getPages());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQ4OTY1Mg=="}, "originalCommit": {"oid": "218e599f45aa4fcaa56462f27f6634cf66cf8a7f"}, "originalPosition": 34}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4221, "cost": 1, "resetAt": "2021-11-03T18:41:40Z"}}}