{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIzMzgxODAy", "number": 480, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQxODoyMToxMFrOE6tILA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxMDowMjowNFrOE8oMdQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI5OTkyMjM2OnYy", "diffSide": "RIGHT", "path": "data/src/main/java/com/linkedin/data/schema/validation/ValidateDataAgainstSchema.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQxODoyMToxMFrOH18EjQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQxODozNToyMlrOH18new==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjMyMDc4MQ==", "bodyText": "Do you mind adding a comment here that we allow empty union", "url": "https://github.com/linkedin/rest.li/pull/480#discussion_r526320781", "createdAt": "2020-11-18T18:21:10Z", "author": {"login": "nickibi"}, "path": "data/src/main/java/com/linkedin/data/schema/validation/ValidateDataAgainstSchema.java", "diffHunk": "@@ -505,11 +505,11 @@ else if (object instanceof DataMap)\n       {\n         // Pegasus mode\n         DataMap map = (DataMap) object;\n-        if (map.size() != 1)\n+        if (map.size() > 1)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "77acc20f0a925447dd28e7db7d671fc083616e7b"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjMyOTcyMw==", "bodyText": "Added some comment", "url": "https://github.com/linkedin/rest.li/pull/480#discussion_r526329723", "createdAt": "2020-11-18T18:35:22Z", "author": {"login": "BrianPin"}, "path": "data/src/main/java/com/linkedin/data/schema/validation/ValidateDataAgainstSchema.java", "diffHunk": "@@ -505,11 +505,11 @@ else if (object instanceof DataMap)\n       {\n         // Pegasus mode\n         DataMap map = (DataMap) object;\n-        if (map.size() != 1)\n+        if (map.size() > 1)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjMyMDc4MQ=="}, "originalCommit": {"oid": "77acc20f0a925447dd28e7db7d671fc083616e7b"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI5OTkyNzMxOnYy", "diffSide": "LEFT", "path": "data/src/test/java/com/linkedin/data/schema/validation/TestValidation.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQxODoyMjoyNVrOH18HnQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQxODozNToxNlrOH18nPg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjMyMTU2NQ==", "bodyText": "shall we move this case to goodObjects?", "url": "https://github.com/linkedin/rest.li/pull/480#discussion_r526321565", "createdAt": "2020-11-18T18:22:25Z", "author": {"login": "nickibi"}, "path": "data/src/test/java/com/linkedin/data/schema/validation/TestValidation.java", "diffHunk": "@@ -1111,7 +1111,6 @@ public void testUnionNoCoercionValidation() throws IOException\n         new Double(1),\n         new String(),\n         new DataList(),\n-        new DataMap(),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "77acc20f0a925447dd28e7db7d671fc083616e7b"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjMyOTY2Mg==", "bodyText": "Added to good object", "url": "https://github.com/linkedin/rest.li/pull/480#discussion_r526329662", "createdAt": "2020-11-18T18:35:16Z", "author": {"login": "BrianPin"}, "path": "data/src/test/java/com/linkedin/data/schema/validation/TestValidation.java", "diffHunk": "@@ -1111,7 +1111,6 @@ public void testUnionNoCoercionValidation() throws IOException\n         new Double(1),\n         new String(),\n         new DataList(),\n-        new DataMap(),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjMyMTU2NQ=="}, "originalCommit": {"oid": "77acc20f0a925447dd28e7db7d671fc083616e7b"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwMDA1MTI2OnYy", "diffSide": "RIGHT", "path": "CHANGELOG.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQxODo1MzoyM1rOH19TGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxOTozNzowMlrOH3eRwQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjM0MDg5MQ==", "bodyText": "I would recommend to rephrase this description.", "url": "https://github.com/linkedin/rest.li/pull/480#discussion_r526340891", "createdAt": "2020-11-18T18:53:23Z", "author": {"login": "nickibi"}, "path": "CHANGELOG.md", "diffHunk": "@@ -13,6 +13,7 @@ When updating the changelog, remember to be very clear about what behavior has c\n and what APIs have changed, if applicable.\n \n ## [Unreleased]\n+- Fix the issue when validation on empty union will fail", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "33e0ca8fb692c3bb4bc2416dad438d6a2426fbd8"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzkyOTc5Mw==", "bodyText": "I changed it in different way.", "url": "https://github.com/linkedin/rest.li/pull/480#discussion_r527929793", "createdAt": "2020-11-20T19:37:02Z", "author": {"login": "BrianPin"}, "path": "CHANGELOG.md", "diffHunk": "@@ -13,6 +13,7 @@ When updating the changelog, remember to be very clear about what behavior has c\n and what APIs have changed, if applicable.\n \n ## [Unreleased]\n+- Fix the issue when validation on empty union will fail", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjM0MDg5MQ=="}, "originalCommit": {"oid": "33e0ca8fb692c3bb4bc2416dad438d6a2426fbd8"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMyMDA4NTY1OnYy", "diffSide": "RIGHT", "path": "data/src/main/java/com/linkedin/data/schema/validation/ValidateDataAgainstSchema.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxMDowMjowNFrOH43Ndg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQxNjo0MTo0OFrOH57u0w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTM4Njg3MA==", "bodyText": "This will allow empty unions even if they were not caused by a projection.\nI was thinking we should allow only when the union has projection applied. One option is to add a custom property (e.g, \"$projectedUnion\" = \"true\" ) when we generate the schema from projection and use that to allow empty union here.\nWhat do you think?", "url": "https://github.com/linkedin/rest.li/pull/480#discussion_r529386870", "createdAt": "2020-11-24T10:02:04Z", "author": {"login": "karthikbalasub"}, "path": "data/src/main/java/com/linkedin/data/schema/validation/ValidateDataAgainstSchema.java", "diffHunk": "@@ -505,11 +505,12 @@ else if (object instanceof DataMap)\n       {\n         // Pegasus mode\n         DataMap map = (DataMap) object;\n-        if (map.size() != 1)\n+        // we allow empty union\n+        if (map.size() > 1)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9d0ef746beb5710a33f784e1c3eae66aea9ec934"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDEzMzI4Ng==", "bodyText": "I thought about it when I was working on it (because it was written in the ticket).\nAfter making the change, I did some manual integration test and when there is a projection, there will only contain the projected field. I think the projection happens after validation. I think the projection still comes to the picture.\nI may have probably misunderstood your idea, feel free to comment", "url": "https://github.com/linkedin/rest.li/pull/480#discussion_r530133286", "createdAt": "2020-11-25T06:25:38Z", "author": {"login": "BrianPin"}, "path": "data/src/main/java/com/linkedin/data/schema/validation/ValidateDataAgainstSchema.java", "diffHunk": "@@ -505,11 +505,12 @@ else if (object instanceof DataMap)\n       {\n         // Pegasus mode\n         DataMap map = (DataMap) object;\n-        if (map.size() != 1)\n+        // we allow empty union\n+        if (map.size() > 1)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTM4Njg3MA=="}, "originalCommit": {"oid": "9d0ef746beb5710a33f784e1c3eae66aea9ec934"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDEzMzU5Mw==", "bodyText": "The other thought on it was that to introduce projection into validation seems like bound to make it a miss..but that was probably me.", "url": "https://github.com/linkedin/rest.li/pull/480#discussion_r530133593", "createdAt": "2020-11-25T06:26:36Z", "author": {"login": "BrianPin"}, "path": "data/src/main/java/com/linkedin/data/schema/validation/ValidateDataAgainstSchema.java", "diffHunk": "@@ -505,11 +505,12 @@ else if (object instanceof DataMap)\n       {\n         // Pegasus mode\n         DataMap map = (DataMap) object;\n-        if (map.size() != 1)\n+        // we allow empty union\n+        if (map.size() > 1)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTM4Njg3MA=="}, "originalCommit": {"oid": "9d0ef746beb5710a33f784e1c3eae66aea9ec934"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDUwOTUyMw==", "bodyText": "AFAIK this is the flow today:\nRequest -> 1. Validation Filter (create subset schema from projection) -> 2. Resource -> 3. Apply Projection -> 4. Validation Filter (validate using projection schema)\nSo we can add a flag in the UnionDataSchema created in step 1 using the projection. And then use that flag in the check done in step 4. It is slightly hacky as we are using a property. A cleaner approach would be to add a flag in the union schema to say if empty union data is allowed.", "url": "https://github.com/linkedin/rest.li/pull/480#discussion_r530509523", "createdAt": "2020-11-25T16:41:48Z", "author": {"login": "karthikbalasub"}, "path": "data/src/main/java/com/linkedin/data/schema/validation/ValidateDataAgainstSchema.java", "diffHunk": "@@ -505,11 +505,12 @@ else if (object instanceof DataMap)\n       {\n         // Pegasus mode\n         DataMap map = (DataMap) object;\n-        if (map.size() != 1)\n+        // we allow empty union\n+        if (map.size() > 1)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTM4Njg3MA=="}, "originalCommit": {"oid": "9d0ef746beb5710a33f784e1c3eae66aea9ec934"}, "originalPosition": 6}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 268, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}