{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkwNzAzNDk0", "number": 225, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQyMzo1MDoyOVrODpUSjg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQyMzo1MDo0NFrODpUSxA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0NjUwNjM4OnYy", "diffSide": "RIGHT", "path": "r2-core/src/test/java/test/r2/transport/http/client/TestAsyncPool.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQyMzo1MDoyOVrOF4ay6w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQwMDozMzowNlrOF4b7-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDcwMzU5NQ==", "bodyText": "use DEFAULT_OBJECT_CREATION_TIMEOUT", "url": "https://github.com/linkedin/rest.li/pull/225#discussion_r394703595", "createdAt": "2020-03-18T23:50:29Z", "author": {"login": "cx-super"}, "path": "r2-core/src/test/java/test/r2/transport/http/client/TestAsyncPool.java", "diffHunk": "@@ -822,11 +822,11 @@ public void testCreationTimeout(int poolSize, int concurrency) throws Exception\n \n       // run for the duration of default creation timeout\n       // TODO: parameterize the creation duration when the default creation gets parameterized\n-      clockedExecutor.runFor(2000);\n+      clockedExecutor.runFor(10000);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "66c19ec2256cd28ecf5fafeec0f4a00f3ba432bd"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDcyMjI5Ng==", "bodyText": "Fixed", "url": "https://github.com/linkedin/rest.li/pull/225#discussion_r394722296", "createdAt": "2020-03-19T00:33:06Z", "author": {"login": "nizarm"}, "path": "r2-core/src/test/java/test/r2/transport/http/client/TestAsyncPool.java", "diffHunk": "@@ -822,11 +822,11 @@ public void testCreationTimeout(int poolSize, int concurrency) throws Exception\n \n       // run for the duration of default creation timeout\n       // TODO: parameterize the creation duration when the default creation gets parameterized\n-      clockedExecutor.runFor(2000);\n+      clockedExecutor.runFor(10000);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDcwMzU5NQ=="}, "originalCommit": {"oid": "66c19ec2256cd28ecf5fafeec0f4a00f3ba432bd"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0NjUwNjkyOnYy", "diffSide": "RIGHT", "path": "r2-core/src/test/java/test/r2/transport/http/client/TestAsyncPool.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQyMzo1MDo0NFrOF4azQQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQwMDozMjo1NVrOF4b7xQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDcwMzY4MQ==", "bodyText": "ditto", "url": "https://github.com/linkedin/rest.li/pull/225#discussion_r394703681", "createdAt": "2020-03-18T23:50:44Z", "author": {"login": "cx-super"}, "path": "r2-core/src/test/java/test/r2/transport/http/client/TestAsyncPool.java", "diffHunk": "@@ -822,11 +822,11 @@ public void testCreationTimeout(int poolSize, int concurrency) throws Exception\n \n       // run for the duration of default creation timeout\n       // TODO: parameterize the creation duration when the default creation gets parameterized\n-      clockedExecutor.runFor(2000);\n+      clockedExecutor.runFor(10000);\n     }\n \n     // drain all the pending tasks\n-    clockedExecutor.runFor(2000);\n+    clockedExecutor.runFor(10000);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "66c19ec2256cd28ecf5fafeec0f4a00f3ba432bd"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDcyMjI0NQ==", "bodyText": "Fixed", "url": "https://github.com/linkedin/rest.li/pull/225#discussion_r394722245", "createdAt": "2020-03-19T00:32:55Z", "author": {"login": "nizarm"}, "path": "r2-core/src/test/java/test/r2/transport/http/client/TestAsyncPool.java", "diffHunk": "@@ -822,11 +822,11 @@ public void testCreationTimeout(int poolSize, int concurrency) throws Exception\n \n       // run for the duration of default creation timeout\n       // TODO: parameterize the creation duration when the default creation gets parameterized\n-      clockedExecutor.runFor(2000);\n+      clockedExecutor.runFor(10000);\n     }\n \n     // drain all the pending tasks\n-    clockedExecutor.runFor(2000);\n+    clockedExecutor.runFor(10000);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDcwMzY4MQ=="}, "originalCommit": {"oid": "66c19ec2256cd28ecf5fafeec0f4a00f3ba432bd"}, "originalPosition": 10}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 633, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}