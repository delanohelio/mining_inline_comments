{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDYzODA0NDI4", "number": 369, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxNjo1Nzo1MVrOEXtxoQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxNjo1Nzo1MVrOEXtxoQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzMzAyNjg5OnYy", "diffSide": "RIGHT", "path": "d2/src/main/java/com/linkedin/d2/balancer/D2ClientBuilder.java", "isResolved": false, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxNjo1Nzo1MVrOG_qOXQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QyMjowNjowOFrOHAfUag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTQwNTI3Nw==", "bodyText": "What if enableRelativeLoadBalancer  set to false while the srategyList only have relativeLoadBalancer?\nI guess this option will be removed before full follout?", "url": "https://github.com/linkedin/rest.li/pull/369#discussion_r469405277", "createdAt": "2020-08-12T16:57:51Z", "author": {"login": "cx-super"}, "path": "d2/src/main/java/com/linkedin/d2/balancer/D2ClientBuilder.java", "diffHunk": "@@ -479,6 +480,12 @@ public D2ClientBuilder setD2JmxManagerPrefix(String d2JmxManagerPrefix)\n     return this;\n   }\n \n+  public D2ClientBuilder setEnableRelativeLoadBalancer(boolean enableRelativeLoadBalancer)\n+  {\n+    _config.enableRelativeLoadBalancer = enableRelativeLoadBalancer;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bdf6bde8854000286fdf4c84fbe7ed44e9199086"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTQ5MTg1OQ==", "bodyText": "Yes it will be a problem if server only has \"RELATIVE\" and client set it to enableRelativeLoadBalancer to false. Initially I want server to always set both in the strategy list before we turn on the enableRelativeLoadBalancer to true by default for everyone. So before full rollout, we will enable relative on client as the default behavior.\nBut we still do not have fully control. One thing I can do is to use \"degrader\" as the backup, but if server really removed the degrader support, we may have to read global default degrader config for that case. Let me know what you think.", "url": "https://github.com/linkedin/rest.li/pull/369#discussion_r469491859", "createdAt": "2020-08-12T19:31:52Z", "author": {"login": "rachelhanhan"}, "path": "d2/src/main/java/com/linkedin/d2/balancer/D2ClientBuilder.java", "diffHunk": "@@ -479,6 +480,12 @@ public D2ClientBuilder setD2JmxManagerPrefix(String d2JmxManagerPrefix)\n     return this;\n   }\n \n+  public D2ClientBuilder setEnableRelativeLoadBalancer(boolean enableRelativeLoadBalancer)\n+  {\n+    _config.enableRelativeLoadBalancer = enableRelativeLoadBalancer;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTQwNTI3Nw=="}, "originalCommit": {"oid": "bdf6bde8854000286fdf4c84fbe7ed44e9199086"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTU2MjM5MQ==", "bodyText": "I understand we need this for testing purpose. What I'm expecting is that we remove it before fully roll out.\nIf you look at r2d2 configuration, there are very few properties are overridable from client side. Even if one does, it still needs permissions from the server side. Having this flag makes it implicit if relativeLB is used or not when you investigate a problem. It's probably better have it only enable it from d2 config directly.", "url": "https://github.com/linkedin/rest.li/pull/369#discussion_r469562391", "createdAt": "2020-08-12T21:39:50Z", "author": {"login": "cx-super"}, "path": "d2/src/main/java/com/linkedin/d2/balancer/D2ClientBuilder.java", "diffHunk": "@@ -479,6 +480,12 @@ public D2ClientBuilder setD2JmxManagerPrefix(String d2JmxManagerPrefix)\n     return this;\n   }\n \n+  public D2ClientBuilder setEnableRelativeLoadBalancer(boolean enableRelativeLoadBalancer)\n+  {\n+    _config.enableRelativeLoadBalancer = enableRelativeLoadBalancer;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTQwNTI3Nw=="}, "originalCommit": {"oid": "bdf6bde8854000286fdf4c84fbe7ed44e9199086"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTU3MzAxMg==", "bodyText": "Since the default client-side behavior after rollout would enable the relative strategy, then if a client explicitly calls setEnableRelativeLoadBalancer to disable the relative feature, they probably should have a good reason to do so. If we're adding this client-side tuner, is it more reasonable to use degrader as a backup in this case?", "url": "https://github.com/linkedin/rest.li/pull/369#discussion_r469573012", "createdAt": "2020-08-12T22:05:11Z", "author": {"login": "rickzx"}, "path": "d2/src/main/java/com/linkedin/d2/balancer/D2ClientBuilder.java", "diffHunk": "@@ -479,6 +480,12 @@ public D2ClientBuilder setD2JmxManagerPrefix(String d2JmxManagerPrefix)\n     return this;\n   }\n \n+  public D2ClientBuilder setEnableRelativeLoadBalancer(boolean enableRelativeLoadBalancer)\n+  {\n+    _config.enableRelativeLoadBalancer = enableRelativeLoadBalancer;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTQwNTI3Nw=="}, "originalCommit": {"oid": "bdf6bde8854000286fdf4c84fbe7ed44e9199086"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTYwNjI2Nw==", "bodyText": "Makes sense, to summarize:\n\nWe will only use enableRelativeLoadBalancer for piloting services, after pilot we will turn it on for everyone and rely on server side control.\nIn the short-term, if anyone set the enableRelativeLoadBalancer to false, I will add the backup option.", "url": "https://github.com/linkedin/rest.li/pull/369#discussion_r469606267", "createdAt": "2020-08-12T23:40:26Z", "author": {"login": "rachelhanhan"}, "path": "d2/src/main/java/com/linkedin/d2/balancer/D2ClientBuilder.java", "diffHunk": "@@ -479,6 +480,12 @@ public D2ClientBuilder setD2JmxManagerPrefix(String d2JmxManagerPrefix)\n     return this;\n   }\n \n+  public D2ClientBuilder setEnableRelativeLoadBalancer(boolean enableRelativeLoadBalancer)\n+  {\n+    _config.enableRelativeLoadBalancer = enableRelativeLoadBalancer;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTQwNTI3Nw=="}, "originalCommit": {"oid": "bdf6bde8854000286fdf4c84fbe7ed44e9199086"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDI3NTE3OA==", "bodyText": "Sounds great.", "url": "https://github.com/linkedin/rest.li/pull/369#discussion_r470275178", "createdAt": "2020-08-13T22:06:08Z", "author": {"login": "cx-super"}, "path": "d2/src/main/java/com/linkedin/d2/balancer/D2ClientBuilder.java", "diffHunk": "@@ -479,6 +480,12 @@ public D2ClientBuilder setD2JmxManagerPrefix(String d2JmxManagerPrefix)\n     return this;\n   }\n \n+  public D2ClientBuilder setEnableRelativeLoadBalancer(boolean enableRelativeLoadBalancer)\n+  {\n+    _config.enableRelativeLoadBalancer = enableRelativeLoadBalancer;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTQwNTI3Nw=="}, "originalCommit": {"oid": "bdf6bde8854000286fdf4c84fbe7ed44e9199086"}, "originalPosition": 16}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 547, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}