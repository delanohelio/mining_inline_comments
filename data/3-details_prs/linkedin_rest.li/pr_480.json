{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIzMzgxODAy", "number": 480, "title": "remove empty map as invalid union", "bodyText": "Remove the empty union as invalid map.", "createdAt": "2020-11-18T18:16:11Z", "url": "https://github.com/linkedin/rest.li/pull/480", "merged": true, "mergeCommit": {"oid": "0a4fc1a374725cfe7ea5bb31a5849910441c824d"}, "closed": true, "closedAt": "2020-11-20T21:39:42Z", "author": {"login": "BrianPin"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABddyYJYAFqTUzMzc0OTg2MQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdfmz_WAFqTUzNzMyNjkxNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMzNzQ5ODYx", "url": "https://github.com/linkedin/rest.li/pull/480#pullrequestreview-533749861", "createdAt": "2020-11-18T18:21:09Z", "commit": {"oid": "77acc20f0a925447dd28e7db7d671fc083616e7b"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQxODoyMToxMFrOH18EjQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQxODoyMjoyNVrOH18HnQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjMyMDc4MQ==", "bodyText": "Do you mind adding a comment here that we allow empty union", "url": "https://github.com/linkedin/rest.li/pull/480#discussion_r526320781", "createdAt": "2020-11-18T18:21:10Z", "author": {"login": "nickibi"}, "path": "data/src/main/java/com/linkedin/data/schema/validation/ValidateDataAgainstSchema.java", "diffHunk": "@@ -505,11 +505,11 @@ else if (object instanceof DataMap)\n       {\n         // Pegasus mode\n         DataMap map = (DataMap) object;\n-        if (map.size() != 1)\n+        if (map.size() > 1)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "77acc20f0a925447dd28e7db7d671fc083616e7b"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjMyMTU2NQ==", "bodyText": "shall we move this case to goodObjects?", "url": "https://github.com/linkedin/rest.li/pull/480#discussion_r526321565", "createdAt": "2020-11-18T18:22:25Z", "author": {"login": "nickibi"}, "path": "data/src/test/java/com/linkedin/data/schema/validation/TestValidation.java", "diffHunk": "@@ -1111,7 +1111,6 @@ public void testUnionNoCoercionValidation() throws IOException\n         new Double(1),\n         new String(),\n         new DataList(),\n-        new DataMap(),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "77acc20f0a925447dd28e7db7d671fc083616e7b"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMzNzc0OTQ0", "url": "https://github.com/linkedin/rest.li/pull/480#pullrequestreview-533774944", "createdAt": "2020-11-18T18:53:23Z", "commit": {"oid": "33e0ca8fb692c3bb4bc2416dad438d6a2426fbd8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQxODo1MzoyM1rOH19TGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQxODo1MzoyM1rOH19TGw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjM0MDg5MQ==", "bodyText": "I would recommend to rephrase this description.", "url": "https://github.com/linkedin/rest.li/pull/480#discussion_r526340891", "createdAt": "2020-11-18T18:53:23Z", "author": {"login": "nickibi"}, "path": "CHANGELOG.md", "diffHunk": "@@ -13,6 +13,7 @@ When updating the changelog, remember to be very clear about what behavior has c\n and what APIs have changed, if applicable.\n \n ## [Unreleased]\n+- Fix the issue when validation on empty union will fail", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "33e0ca8fb692c3bb4bc2416dad438d6a2426fbd8"}, "originalPosition": 4}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2c18a52cee8993d78a9a3f5258ea254d56b44d6a", "author": {"user": null}, "url": "https://github.com/linkedin/rest.li/commit/2c18a52cee8993d78a9a3f5258ea254d56b44d6a", "committedDate": "2020-11-20T19:16:52Z", "message": "remove empty map as invalid union"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ffd98b872fed8186ad00a55da92a96390603642b", "author": {"user": null}, "url": "https://github.com/linkedin/rest.li/commit/ffd98b872fed8186ad00a55da92a96390603642b", "committedDate": "2020-11-20T19:16:52Z", "message": "adding comment and good object test case"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "441fc9569f4ad725250dbc1b69320d3a03f83b37", "author": {"user": null}, "url": "https://github.com/linkedin/rest.li/commit/441fc9569f4ad725250dbc1b69320d3a03f83b37", "committedDate": "2020-11-20T19:32:02Z", "message": "update a major version"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "33e0ca8fb692c3bb4bc2416dad438d6a2426fbd8", "author": {"user": null}, "url": "https://github.com/linkedin/rest.li/commit/33e0ca8fb692c3bb4bc2416dad438d6a2426fbd8", "committedDate": "2020-11-18T18:34:24Z", "message": "adding comment and good object test case"}, "afterCommit": {"oid": "441fc9569f4ad725250dbc1b69320d3a03f83b37", "author": {"user": null}, "url": "https://github.com/linkedin/rest.li/commit/441fc9569f4ad725250dbc1b69320d3a03f83b37", "committedDate": "2020-11-20T19:32:02Z", "message": "update a major version"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9d0ef746beb5710a33f784e1c3eae66aea9ec934", "author": {"user": null}, "url": "https://github.com/linkedin/rest.li/commit/9d0ef746beb5710a33f784e1c3eae66aea9ec934", "committedDate": "2020-11-20T19:36:36Z", "message": "rephrase the change log"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM1NzU5ODc1", "url": "https://github.com/linkedin/rest.li/pull/480#pullrequestreview-535759875", "createdAt": "2020-11-20T20:37:28Z", "commit": {"oid": "9d0ef746beb5710a33f784e1c3eae66aea9ec934"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM3MzI2OTE1", "url": "https://github.com/linkedin/rest.li/pull/480#pullrequestreview-537326915", "createdAt": "2020-11-24T10:02:04Z", "commit": {"oid": "9d0ef746beb5710a33f784e1c3eae66aea9ec934"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxMDowMjowNFrOH43Ndg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxMDowMjowNFrOH43Ndg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTM4Njg3MA==", "bodyText": "This will allow empty unions even if they were not caused by a projection.\nI was thinking we should allow only when the union has projection applied. One option is to add a custom property (e.g, \"$projectedUnion\" = \"true\" ) when we generate the schema from projection and use that to allow empty union here.\nWhat do you think?", "url": "https://github.com/linkedin/rest.li/pull/480#discussion_r529386870", "createdAt": "2020-11-24T10:02:04Z", "author": {"login": "karthikbalasub"}, "path": "data/src/main/java/com/linkedin/data/schema/validation/ValidateDataAgainstSchema.java", "diffHunk": "@@ -505,11 +505,12 @@ else if (object instanceof DataMap)\n       {\n         // Pegasus mode\n         DataMap map = (DataMap) object;\n-        if (map.size() != 1)\n+        // we allow empty union\n+        if (map.size() > 1)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9d0ef746beb5710a33f784e1c3eae66aea9ec934"}, "originalPosition": 6}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4577, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}