{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI0MzA4Mzgx", "number": 482, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQyMzo1NjoxOVrOE7Sz8w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQyMzo1NjoxOVrOE7Sz8w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwNjA5NjUxOnYy", "diffSide": "RIGHT", "path": "generator-test/src/test/java/com/linkedin/pegasus/generator/override/TestRecord.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQyMzo1NjoxOVrOH22vpw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQyMzo1NjozNlrOH22wBA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzI4MjA4Nw==", "bodyText": "What about deep copy (if we have any)", "url": "https://github.com/linkedin/rest.li/pull/482#discussion_r527282087", "createdAt": "2020-11-19T23:56:19Z", "author": {"login": "BrianPin"}, "path": "generator-test/src/test/java/com/linkedin/pegasus/generator/override/TestRecord.java", "diffHunk": "@@ -530,4 +530,15 @@ public void testCopyChangeRecordField() throws CloneNotSupportedException\n     assertEquals(record.getRecordOptionalField().getLocation(), \"near\");\n     assertNull(recordCopy.getRecordOptionalField());\n   }\n+\n+  @Test\n+  public void testSetOnRecordWrappingSameMap()\n+  {\n+    RecordBar bar = new RecordBar();\n+    bar.setLocation(\"some\");\n+    RecordBar copy = new RecordBar(bar.data());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "67f1b912975681b97a260de8048677800bff9c12"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzI4MjE4MA==", "bodyText": "Those are already tested via other test cases.", "url": "https://github.com/linkedin/rest.li/pull/482#discussion_r527282180", "createdAt": "2020-11-19T23:56:36Z", "author": {"login": "karthikrg"}, "path": "generator-test/src/test/java/com/linkedin/pegasus/generator/override/TestRecord.java", "diffHunk": "@@ -530,4 +530,15 @@ public void testCopyChangeRecordField() throws CloneNotSupportedException\n     assertEquals(record.getRecordOptionalField().getLocation(), \"near\");\n     assertNull(recordCopy.getRecordOptionalField());\n   }\n+\n+  @Test\n+  public void testSetOnRecordWrappingSameMap()\n+  {\n+    RecordBar bar = new RecordBar();\n+    bar.setLocation(\"some\");\n+    RecordBar copy = new RecordBar(bar.data());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzI4MjA4Nw=="}, "originalCommit": {"oid": "67f1b912975681b97a260de8048677800bff9c12"}, "originalPosition": 10}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 270, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}