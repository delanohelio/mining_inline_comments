{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAzNzI3ODAy", "number": 446, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwODo1NjowNVrOEt5BaA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwOToxMTo1M1rOEt5hSg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2NTU1NjI0OnYy", "diffSide": "RIGHT", "path": "d2/src/main/java/com/linkedin/d2/balancer/strategies/relative/StateUpdater.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwODo1NjowNVrOHh9Rgw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwODo1NjowNVrOHh9Rgw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTM2ODk2Mw==", "bodyText": "getFirstValidPartitionId()?", "url": "https://github.com/linkedin/rest.li/pull/446#discussion_r505368963", "createdAt": "2020-10-15T08:56:05Z", "author": {"login": "rickzx"}, "path": "d2/src/main/java/com/linkedin/d2/balancer/strategies/relative/StateUpdater.java", "diffHunk": "@@ -140,14 +141,19 @@ else if (clusterGenerationId != _partitionLoadBalancerStateMap.get(partitionId).\n         : _partitionLoadBalancerStateMap.get(partitionId).getPointsMap();\n   }\n \n-  /**\n-   * Exposed for testings\n-   */\n   PartitionState getPartitionState(int partitionId)\n   {\n     return _partitionLoadBalancerStateMap.get(partitionId);\n   }\n \n+  /**\n+   * Return the first valid partition id. This is mainly used for monitoring at least one valid partition.\n+   */\n+  int getValidPartitionId()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5dff5aefd1491f2b11fc92b373041a732ec4dd27"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2NTU1NzcwOnYy", "diffSide": "RIGHT", "path": "d2/src/main/java/com/linkedin/d2/balancer/strategies/relative/RelativeLoadBalancerStrategy.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwODo1NjoxOVrOHh9SYg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwODo1NjoxOVrOHh9SYg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTM2OTE4Ng==", "bodyText": "getFirstValidPartitionId()?", "url": "https://github.com/linkedin/rest.li/pull/446#discussion_r505369186", "createdAt": "2020-10-15T08:56:19Z", "author": {"login": "rickzx"}, "path": "d2/src/main/java/com/linkedin/d2/balancer/strategies/relative/RelativeLoadBalancerStrategy.java", "diffHunk": "@@ -96,6 +96,11 @@ public PartitionState getPartitionState(int partitionId)\n     return _stateUpdater.getPartitionState(partitionId);\n   }\n \n+  public int getValidPartitionId()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5dff5aefd1491f2b11fc92b373041a732ec4dd27"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2NTYzNzg2OnYy", "diffSide": "RIGHT", "path": "d2/src/main/java/com/linkedin/d2/jmx/RelativeLoadBalancerStrategyJmx.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwOToxMTo1M1rOHh-GBQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQyMDo0NjozNlrOHiZrWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTM4MjQwNQ==", "bodyText": "Just to confirm, in a real situation, this function should always return true right?", "url": "https://github.com/linkedin/rest.li/pull/446#discussion_r505382405", "createdAt": "2020-10-15T09:11:53Z", "author": {"login": "rickzx"}, "path": "d2/src/main/java/com/linkedin/d2/jmx/RelativeLoadBalancerStrategyJmx.java", "diffHunk": "@@ -98,12 +119,17 @@ public double getMaxLatencyRelativeFactor()\n   @Override\n   public double getNthPercentileLatencyRelativeFactor(double pct)\n   {\n+    if (isPartitionDataUnavailable())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5dff5aefd1491f2b11fc92b373041a732ec4dd27"}, "originalPosition": 81}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTgzMTE1NQ==", "bodyText": "Correct, it will always return false.", "url": "https://github.com/linkedin/rest.li/pull/446#discussion_r505831155", "createdAt": "2020-10-15T20:43:06Z", "author": {"login": "rachelhanhan"}, "path": "d2/src/main/java/com/linkedin/d2/jmx/RelativeLoadBalancerStrategyJmx.java", "diffHunk": "@@ -98,12 +119,17 @@ public double getMaxLatencyRelativeFactor()\n   @Override\n   public double getNthPercentileLatencyRelativeFactor(double pct)\n   {\n+    if (isPartitionDataUnavailable())", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTM4MjQwNQ=="}, "originalCommit": {"oid": "5dff5aefd1491f2b11fc92b373041a732ec4dd27"}, "originalPosition": 81}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTgzNDMzMQ==", "bodyText": "I just realized it can be a NPE if we always pass partition 0, but when it's using the first valid partition, there shouldn't be NPE anymore, but just to be careful I still added this check.", "url": "https://github.com/linkedin/rest.li/pull/446#discussion_r505834331", "createdAt": "2020-10-15T20:46:36Z", "author": {"login": "rachelhanhan"}, "path": "d2/src/main/java/com/linkedin/d2/jmx/RelativeLoadBalancerStrategyJmx.java", "diffHunk": "@@ -98,12 +119,17 @@ public double getMaxLatencyRelativeFactor()\n   @Override\n   public double getNthPercentileLatencyRelativeFactor(double pct)\n   {\n+    if (isPartitionDataUnavailable())", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTM4MjQwNQ=="}, "originalCommit": {"oid": "5dff5aefd1491f2b11fc92b373041a732ec4dd27"}, "originalPosition": 81}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 398, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}