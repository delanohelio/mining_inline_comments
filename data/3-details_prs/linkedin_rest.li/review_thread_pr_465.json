{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTEyMDcyMjgy", "number": 465, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxNzozNToxNFrOEzaISw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxNzozNToxNFrOEzaISw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyMzQwOTM5OnYy", "diffSide": "RIGHT", "path": "restli-server/src/main/java/com/linkedin/restli/server/symbol/RestLiSymbolTableRequestHandler.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxNzozNToxNFrOHqnJWg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQwMTo0MDo1MlrOHq1bZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDQ0MzYxMA==", "bodyText": "I don't like the idea of adding another header for this. It will complicate the exchange protocol further. Is there some other way we can do this? Like say check routing to see if a resource with that name exists or not?\nOr even better add a rule to disallow a rest.li resource from being named symbolTable.\n@kbalasub wdyt?", "url": "https://github.com/linkedin/rest.li/pull/465#discussion_r514443610", "createdAt": "2020-10-29T17:35:14Z", "author": {"login": "karthikrg"}, "path": "restli-server/src/main/java/com/linkedin/restli/server/symbol/RestLiSymbolTableRequestHandler.java", "diffHunk": "@@ -95,13 +97,22 @@ public boolean shouldHandle(Request request)\n     // is in the form of /symbolTable or /symbolTable/<TABLENAME>\n     //\n     boolean isServiceScopedPath = request.getHeaders().containsKey(RestConstants.HEADER_SERVICE_SCOPED_PATH);\n+    boolean isSymbolTableHeaderPresent = request.getHeaders().containsKey(SYMBOL_TABLE_REQUEST_HEADER);\n+    int pathSize = pathSegments.size();\n     if (isServiceScopedPath)\n     {\n-      return (pathSegments.size() == 3 && pathSegments.get(2).getPath().equals(SYMBOL_TABLE_URI_PATH));\n+      return (pathSize == 3 && pathSegments.get(2).getPath().equals(SYMBOL_TABLE_URI_PATH));\n+    }\n+    else if (isSymbolTableHeaderPresent)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ebc7525107c7b916f10b827dcf0195ec3c5f8726"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDQ3OTQ2NQ==", "bodyText": "Having a reserved resource would make sense and seems most straightforward.", "url": "https://github.com/linkedin/rest.li/pull/465#discussion_r514479465", "createdAt": "2020-10-29T18:31:14Z", "author": {"login": "sangm"}, "path": "restli-server/src/main/java/com/linkedin/restli/server/symbol/RestLiSymbolTableRequestHandler.java", "diffHunk": "@@ -95,13 +97,22 @@ public boolean shouldHandle(Request request)\n     // is in the form of /symbolTable or /symbolTable/<TABLENAME>\n     //\n     boolean isServiceScopedPath = request.getHeaders().containsKey(RestConstants.HEADER_SERVICE_SCOPED_PATH);\n+    boolean isSymbolTableHeaderPresent = request.getHeaders().containsKey(SYMBOL_TABLE_REQUEST_HEADER);\n+    int pathSize = pathSegments.size();\n     if (isServiceScopedPath)\n     {\n-      return (pathSegments.size() == 3 && pathSegments.get(2).getPath().equals(SYMBOL_TABLE_URI_PATH));\n+      return (pathSize == 3 && pathSegments.get(2).getPath().equals(SYMBOL_TABLE_URI_PATH));\n+    }\n+    else if (isSymbolTableHeaderPresent)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDQ0MzYxMA=="}, "originalCommit": {"oid": "ebc7525107c7b916f10b827dcf0195ec3c5f8726"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDY3NzYwNw==", "bodyText": "@aman1309 can you please work with @sangm on the best path forward here?", "url": "https://github.com/linkedin/rest.li/pull/465#discussion_r514677607", "createdAt": "2020-10-30T01:40:52Z", "author": {"login": "karthikrg"}, "path": "restli-server/src/main/java/com/linkedin/restli/server/symbol/RestLiSymbolTableRequestHandler.java", "diffHunk": "@@ -95,13 +97,22 @@ public boolean shouldHandle(Request request)\n     // is in the form of /symbolTable or /symbolTable/<TABLENAME>\n     //\n     boolean isServiceScopedPath = request.getHeaders().containsKey(RestConstants.HEADER_SERVICE_SCOPED_PATH);\n+    boolean isSymbolTableHeaderPresent = request.getHeaders().containsKey(SYMBOL_TABLE_REQUEST_HEADER);\n+    int pathSize = pathSegments.size();\n     if (isServiceScopedPath)\n     {\n-      return (pathSegments.size() == 3 && pathSegments.get(2).getPath().equals(SYMBOL_TABLE_URI_PATH));\n+      return (pathSize == 3 && pathSegments.get(2).getPath().equals(SYMBOL_TABLE_URI_PATH));\n+    }\n+    else if (isSymbolTableHeaderPresent)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDQ0MzYxMA=="}, "originalCommit": {"oid": "ebc7525107c7b916f10b827dcf0195ec3c5f8726"}, "originalPosition": 20}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 411, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}