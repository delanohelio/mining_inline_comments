{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEyNTIyOTc0", "number": 282, "title": "Fixed length encoding support for floats and doubles in protobuf", "bodyText": "This PR provides an option to serialize floats and doubles as fixed length values.\nVariable length encoding works well for a vast majority of use cases where float and double data are of limited precision, and hence is a sensible default.\nHowever, there are use cases where we need to encode/decode several full precision float and double values (say tensor data for ML features), where the additional varint overhead (+1 byte for floats, +2 bytes for doubles), actually has a negative impact. In such cases, we want an option to fallback to fixed length encoding.", "createdAt": "2020-05-02T23:37:24Z", "url": "https://github.com/linkedin/rest.li/pull/282", "merged": true, "mergeCommit": {"oid": "1bc870f62bf1c0c158bdb0f8b824ce28700486c5"}, "closed": true, "closedAt": "2020-05-05T00:24:11Z", "author": {"login": "karthikrg"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcdfWkwABqjMyOTY5MTg2MDE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABceJMdhAFqTQwNDU3MTI3MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d9ac5809e183afe53f49f3ee2010c29000e3832c", "author": {"user": {"login": "li-kramgopa", "name": null}}, "url": "https://github.com/linkedin/rest.li/commit/d9ac5809e183afe53f49f3ee2010c29000e3832c", "committedDate": "2020-05-02T23:31:40Z", "message": "Provide an option to serialize floating point values (aka floats and doubles) using fixed size integers."}, "afterCommit": {"oid": "290d0426df4082991c30436f53084a2cc2a84b8a", "author": {"user": {"login": "li-kramgopa", "name": null}}, "url": "https://github.com/linkedin/rest.li/commit/290d0426df4082991c30436f53084a2cc2a84b8a", "committedDate": "2020-05-03T00:01:07Z", "message": "Provide an option to serialize floating point values (aka floats and doubles) using fixed size integers."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA0NTcwMjUz", "url": "https://github.com/linkedin/rest.li/pull/282#pullrequestreview-404570253", "createdAt": "2020-05-03T00:14:39Z", "commit": {"oid": "d9ac5809e183afe53f49f3ee2010c29000e3832c"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wM1QwMDoxNTowOVrOGPnQ_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wM1QwMTozNjoxMlrOGPnrYw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTAyNTE1MA==", "bodyText": "would recommend moving these flags to a Config class and using an instance of it as an argument here. I would avoid this constructor to explode.", "url": "https://github.com/linkedin/rest.li/pull/282#discussion_r419025150", "createdAt": "2020-05-03T00:15:09Z", "author": {"login": "aman1309"}, "path": "data/src/main/java/com/linkedin/data/codec/ProtobufDataCodec.java", "diffHunk": "@@ -78,9 +81,17 @@ public ProtobufDataCodec(SymbolTable symbolTable)\n   }\n \n   public ProtobufDataCodec(SymbolTable symbolTable, boolean supportsASCIIOnlyStrings)\n+  {\n+    this(symbolTable, supportsASCIIOnlyStrings, false);\n+  }\n+\n+  public ProtobufDataCodec(SymbolTable symbolTable,\n+      boolean supportsASCIIOnlyStrings,\n+      boolean useFixedLengthEncodingForFloatingPointValues)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "290d0426df4082991c30436f53084a2cc2a84b8a"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTAyNTI0NA==", "bodyText": "deprecate this if using config class as argument", "url": "https://github.com/linkedin/rest.li/pull/282#discussion_r419025244", "createdAt": "2020-05-03T00:16:29Z", "author": {"login": "aman1309"}, "path": "data/src/main/java/com/linkedin/data/codec/ProtobufDataCodec.java", "diffHunk": "@@ -78,9 +81,17 @@ public ProtobufDataCodec(SymbolTable symbolTable)\n   }\n \n   public ProtobufDataCodec(SymbolTable symbolTable, boolean supportsASCIIOnlyStrings)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "290d0426df4082991c30436f53084a2cc2a84b8a"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTAyODE5Mw==", "bodyText": "this will again be a new content type? that change is will be followed by this one?", "url": "https://github.com/linkedin/rest.li/pull/282#discussion_r419028193", "createdAt": "2020-05-03T00:52:07Z", "author": {"login": "aman1309"}, "path": "data/src/main/java/com/linkedin/data/codec/ProtobufDataCodec.java", "diffHunk": "@@ -62,10 +62,13 @@\n   private static final byte RAW_BYTES_ORDINAL = 10;\n   private static final byte NULL_ORDINAL = 11;\n   private static final byte ASCII_STRING_LITERAL_ORDINAL = 20;\n+  private static final byte FIXED_FLOAT_ORDINAL = 21;\n+  private static final byte FIXED_DOUBLE_ORDINAL = 22;\n \n   protected final SymbolTable _symbolTable;\n \n   protected final boolean _supportsASCIIOnlyStrings;\n+  protected final boolean _useFixedLengthEncodingForFloatingPointValues;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "290d0426df4082991c30436f53084a2cc2a84b8a"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTAzMTYzNw==", "bodyText": "do we need this? writing size can be skipped here right? same with int64", "url": "https://github.com/linkedin/rest.li/pull/282#discussion_r419031637", "createdAt": "2020-05-03T01:32:35Z", "author": {"login": "aman1309"}, "path": "li-protobuf/src/main/java/com/linkedin/data/protobuf/ProtoWriter.java", "diffHunk": "@@ -137,7 +139,19 @@ public void writeBytes(byte[] value, int offset, int length) throws IOException\n   }\n \n   /**\n-   * Write a 32-bit signed integer.\n+   * Write a fixed length 32-bit signed integer.\n+   */\n+  public final void writeFixedInt32(final int value) throws IOException\n+  {\n+    flushIfNotAvailable(FIXED32_SIZE);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "290d0426df4082991c30436f53084a2cc2a84b8a"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTAzMTkwNw==", "bodyText": "can you rename this to something shorter? like useFixedFloatDouble or useFixedDecimalValue etc", "url": "https://github.com/linkedin/rest.li/pull/282#discussion_r419031907", "createdAt": "2020-05-03T01:36:12Z", "author": {"login": "aman1309"}, "path": "data/src/main/java/com/linkedin/data/codec/ProtobufDataCodec.java", "diffHunk": "@@ -62,10 +62,13 @@\n   private static final byte RAW_BYTES_ORDINAL = 10;\n   private static final byte NULL_ORDINAL = 11;\n   private static final byte ASCII_STRING_LITERAL_ORDINAL = 20;\n+  private static final byte FIXED_FLOAT_ORDINAL = 21;\n+  private static final byte FIXED_DOUBLE_ORDINAL = 22;\n \n   protected final SymbolTable _symbolTable;\n \n   protected final boolean _supportsASCIIOnlyStrings;\n+  protected final boolean _useFixedLengthEncodingForFloatingPointValues;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "290d0426df4082991c30436f53084a2cc2a84b8a"}, "originalPosition": 10}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "290d0426df4082991c30436f53084a2cc2a84b8a", "author": {"user": {"login": "li-kramgopa", "name": null}}, "url": "https://github.com/linkedin/rest.li/commit/290d0426df4082991c30436f53084a2cc2a84b8a", "committedDate": "2020-05-03T00:01:07Z", "message": "Provide an option to serialize floating point values (aka floats and doubles) using fixed size integers."}, "afterCommit": {"oid": "2fbe9f8c7db2c1b1b047ec0e3b26d45e8b6b5e69", "author": {"user": {"login": "li-kramgopa", "name": null}}, "url": "https://github.com/linkedin/rest.li/commit/2fbe9f8c7db2c1b1b047ec0e3b26d45e8b6b5e69", "committedDate": "2020-05-03T19:53:20Z", "message": "Provide an option to serialize floating point values (aka floats and doubles) using fixed size integers."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f8fd40a44c84432d5cd3c4f78a3313737b144f5c", "author": {"user": {"login": "li-kramgopa", "name": null}}, "url": "https://github.com/linkedin/rest.li/commit/f8fd40a44c84432d5cd3c4f78a3313737b144f5c", "committedDate": "2020-05-04T22:01:18Z", "message": "Provide an option to serialize floating point values (aka floats and doubles) using fixed size integers."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2fbe9f8c7db2c1b1b047ec0e3b26d45e8b6b5e69", "author": {"user": {"login": "li-kramgopa", "name": null}}, "url": "https://github.com/linkedin/rest.li/commit/2fbe9f8c7db2c1b1b047ec0e3b26d45e8b6b5e69", "committedDate": "2020-05-03T19:53:20Z", "message": "Provide an option to serialize floating point values (aka floats and doubles) using fixed size integers."}, "afterCommit": {"oid": "f8fd40a44c84432d5cd3c4f78a3313737b144f5c", "author": {"user": {"login": "li-kramgopa", "name": null}}, "url": "https://github.com/linkedin/rest.li/commit/f8fd40a44c84432d5cd3c4f78a3313737b144f5c", "committedDate": "2020-05-04T22:01:18Z", "message": "Provide an option to serialize floating point values (aka floats and doubles) using fixed size integers."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA1MzY4Mzk0", "url": "https://github.com/linkedin/rest.li/pull/282#pullrequestreview-405368394", "createdAt": "2020-05-04T21:40:49Z", "commit": {"oid": "290d0426df4082991c30436f53084a2cc2a84b8a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA0NTcxMjcw", "url": "https://github.com/linkedin/rest.li/pull/282#pullrequestreview-404571270", "createdAt": "2020-05-03T00:36:19Z", "commit": {"oid": "290d0426df4082991c30436f53084a2cc2a84b8a"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wM1QwMDozNjoxOVrOGPnXwA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wM1QwMDo0MDowMVrOGPnY6A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTAyNjg4MA==", "bodyText": "What does this condition mean? this readFixedInt32 is not supposed to be invoked? So it is malformat?", "url": "https://github.com/linkedin/rest.li/pull/282#discussion_r419026880", "createdAt": "2020-05-03T00:36:19Z", "author": {"login": "mchen07"}, "path": "li-protobuf/src/main/java/com/linkedin/data/protobuf/ByteArrayReader.java", "diffHunk": "@@ -275,6 +275,36 @@ else if ((x ^= ((long) buffer[tempPos++] << 49)) < 0L)\n     return readRawVarint64SlowPath();\n   }\n \n+  @Override\n+  public int readFixedInt32() throws IOException\n+  {\n+    if (_limit - _pos < ProtoWriter.FIXED32_SIZE) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "290d0426df4082991c30436f53084a2cc2a84b8a"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTAyNzE3Ng==", "bodyText": "so for unsigned integer, you don't need to fixed size version?", "url": "https://github.com/linkedin/rest.li/pull/282#discussion_r419027176", "createdAt": "2020-05-03T00:40:01Z", "author": {"login": "mchen07"}, "path": "li-protobuf/src/main/java/com/linkedin/data/protobuf/ProtoWriter.java", "diffHunk": "@@ -211,7 +241,7 @@ private void flushIfNotAvailable(int requiredSize) throws IOException\n   }\n \n   /**\n-   * Write a 32-bit unsigned integer.\n+   * Write a variable length 32-bit unsigned integer.\n    */\n   public void writeUInt32(int value) throws IOException", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "290d0426df4082991c30436f53084a2cc2a84b8a"}, "originalPosition": 62}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4770, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}