{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk2MTQ5ODQ1", "number": 431, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQxMDo0Nzo1M1rOEpa0QA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQxMDo0Nzo1M1rOEpa0QA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzExODY2NDMyOnYy", "diffSide": "RIGHT", "path": "gradle-plugins/src/main/java/com/linkedin/pegasus/gradle/PegasusPlugin.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQxMDo0Nzo1M1rOHbEzow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQxMDo1MzoxMFrOHbE9vw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODE1MjM1NQ==", "bodyText": "maybe at least logging whether the task is successful?\nPersonally I prefer to log all executed, skipped uptodate status.", "url": "https://github.com/linkedin/rest.li/pull/431#discussion_r498152355", "createdAt": "2020-10-01T10:47:53Z", "author": {"login": "junchuanwang"}, "path": "gradle-plugins/src/main/java/com/linkedin/pegasus/gradle/PegasusPlugin.java", "diffHunk": "@@ -1374,58 +1373,21 @@ protected void configureRestModelGeneration(Project project, SourceSet sourceSet\n             task.setSuffix(IDL_FILE_SUFFIX);\n \n             task.onlyIf(t ->\n-            {\n-              project.getLogger().info(\n-                  \"SKIP_IDL: {}\\n\" +\n-                  \"IDL_NO_PUBLISH: {}\\n\" +\n-                  \"SNAPSHOT_NO_PUBLISH: {}\\n\" +\n-                  \"checkRestModelTask:\" +\n-                  \" Executed: {}\" +\n-                  \", Not Skipped: {}\" +\n-                  \", No Failure: {}\" +\n-                  \", Is Not Equivalent: {}\\n\" +\n-                  \"checkIdlTask:\" +\n-                  \" Executed: {}\" +\n-                  \", Not Skipped: {}\" +\n-                  \", No Failure: {}\" +\n-                  \", Is Not Equivalent: {}\\n\" +\n-                  \"checkSnapshotTask:\" +\n-                  \" Executed: {}\" +\n-                  \", Not Skipped: {}\" +\n-                  \", No Failure: {}\" +\n-                  \", Is RestSpec Not Equivalent: {}\\n\",\n-                  isPropertyTrue(project, SKIP_IDL_CHECK),\n-                  isPropertyTrue(project, IDL_NO_PUBLISH),\n-                  isPropertyTrue(project, SNAPSHOT_NO_PUBLISH),\n-                  checkRestModelTask.getState().getExecuted(),\n-                  !checkRestModelTask.getState().getSkipped(),\n-                  checkRestModelTask.getState().getFailure() == null,\n-                  !checkRestModelTask.isEquivalent(),\n-                  checkIdlTask.getState().getExecuted(),\n-                  !checkIdlTask.getState().getSkipped(),\n-                  checkIdlTask.getState().getFailure() == null,\n-                  !checkIdlTask.isEquivalent(),\n-                  checkSnapshotTask.getState().getExecuted(),\n-                  !checkSnapshotTask.getState().getSkipped(),\n-                  checkSnapshotTask.getState().getFailure() == null,\n-                  !checkSnapshotTask.isEquivalent());\n-\n-              return !isPropertyTrue(project, IDL_NO_PUBLISH) &&\n-              (\n-                (\n-                   isPropertyTrue(project, SKIP_IDL_CHECK) &&\n-                   isTaskSuccessful(checkSnapshotTask) &&\n-                   !(checkSnapshotTask.isRestSpecEquivalent())\n-                ) ||\n-                (\n-                   !isPropertyTrue(project, SKIP_IDL_CHECK) &&\n-                   (\n-                      (isTaskSuccessful(checkRestModelTask) && !(checkRestModelTask.isRestSpecEquivalent())) ||\n-                      (isTaskSuccessful(checkIdlTask) && !(checkIdlTask.isEquivalent()))\n-                   )\n-                )\n-              );\n-            });\n+                    !isPropertyTrue(project, IDL_NO_PUBLISH) &&", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2cf2f5bb0dded572808e469d7bcf53d38ad79401"}, "originalPosition": 163}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODE1NDk0Mw==", "bodyText": "Gradle already logs all these details.", "url": "https://github.com/linkedin/rest.li/pull/431#discussion_r498154943", "createdAt": "2020-10-01T10:53:10Z", "author": {"login": "karthikbalasub"}, "path": "gradle-plugins/src/main/java/com/linkedin/pegasus/gradle/PegasusPlugin.java", "diffHunk": "@@ -1374,58 +1373,21 @@ protected void configureRestModelGeneration(Project project, SourceSet sourceSet\n             task.setSuffix(IDL_FILE_SUFFIX);\n \n             task.onlyIf(t ->\n-            {\n-              project.getLogger().info(\n-                  \"SKIP_IDL: {}\\n\" +\n-                  \"IDL_NO_PUBLISH: {}\\n\" +\n-                  \"SNAPSHOT_NO_PUBLISH: {}\\n\" +\n-                  \"checkRestModelTask:\" +\n-                  \" Executed: {}\" +\n-                  \", Not Skipped: {}\" +\n-                  \", No Failure: {}\" +\n-                  \", Is Not Equivalent: {}\\n\" +\n-                  \"checkIdlTask:\" +\n-                  \" Executed: {}\" +\n-                  \", Not Skipped: {}\" +\n-                  \", No Failure: {}\" +\n-                  \", Is Not Equivalent: {}\\n\" +\n-                  \"checkSnapshotTask:\" +\n-                  \" Executed: {}\" +\n-                  \", Not Skipped: {}\" +\n-                  \", No Failure: {}\" +\n-                  \", Is RestSpec Not Equivalent: {}\\n\",\n-                  isPropertyTrue(project, SKIP_IDL_CHECK),\n-                  isPropertyTrue(project, IDL_NO_PUBLISH),\n-                  isPropertyTrue(project, SNAPSHOT_NO_PUBLISH),\n-                  checkRestModelTask.getState().getExecuted(),\n-                  !checkRestModelTask.getState().getSkipped(),\n-                  checkRestModelTask.getState().getFailure() == null,\n-                  !checkRestModelTask.isEquivalent(),\n-                  checkIdlTask.getState().getExecuted(),\n-                  !checkIdlTask.getState().getSkipped(),\n-                  checkIdlTask.getState().getFailure() == null,\n-                  !checkIdlTask.isEquivalent(),\n-                  checkSnapshotTask.getState().getExecuted(),\n-                  !checkSnapshotTask.getState().getSkipped(),\n-                  checkSnapshotTask.getState().getFailure() == null,\n-                  !checkSnapshotTask.isEquivalent());\n-\n-              return !isPropertyTrue(project, IDL_NO_PUBLISH) &&\n-              (\n-                (\n-                   isPropertyTrue(project, SKIP_IDL_CHECK) &&\n-                   isTaskSuccessful(checkSnapshotTask) &&\n-                   !(checkSnapshotTask.isRestSpecEquivalent())\n-                ) ||\n-                (\n-                   !isPropertyTrue(project, SKIP_IDL_CHECK) &&\n-                   (\n-                      (isTaskSuccessful(checkRestModelTask) && !(checkRestModelTask.isRestSpecEquivalent())) ||\n-                      (isTaskSuccessful(checkIdlTask) && !(checkIdlTask.isEquivalent()))\n-                   )\n-                )\n-              );\n-            });\n+                    !isPropertyTrue(project, IDL_NO_PUBLISH) &&", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODE1MjM1NQ=="}, "originalCommit": {"oid": "2cf2f5bb0dded572808e469d7bcf53d38ad79401"}, "originalPosition": 163}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 370, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}