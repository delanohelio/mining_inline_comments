{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkwNjQyNTM5", "number": 417, "title": "Optimize schema parsing by reusing ParseResult instances", "bodyText": "This is meant to replace PR #416\nPR #376 made schema parsing deterministic in part by sorting parser\nresults. When using DataSchemaParser to parse data schemas from multiple\nsources, a separate ParseResult instance is constructed for each source\nthen ultimately combined into a new singular instance. This introduced a\nperformance regression when parsing from many sources due to unnecessary\nsorting. This change fixes that by allowing FileFormatDataSchemaParser\nto reuse the root instance rather than constructing a new one.\nAlso adds more comments for clarity.", "createdAt": "2020-09-22T01:39:08Z", "url": "https://github.com/linkedin/rest.li/pull/417", "merged": true, "mergeCommit": {"oid": "894952afb12760a6d3cace8ff5a2ae44ed2149d4"}, "closed": true, "closedAt": "2020-09-22T23:32:58Z", "author": {"login": "evanw555"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdLOacAgFqTQ5MzA5MDc5Mw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdLfTEKgBqjM3OTUzNDU3Nzg=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkzMDkwNzkz", "url": "https://github.com/linkedin/rest.li/pull/417#pullrequestreview-493090793", "createdAt": "2020-09-22T02:17:57Z", "commit": {"oid": "939460b48c98f400e7f58b66222d2a2e38ac3d51"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQwMjoxNzo1N1rOHVoQ7Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQwMjoxNzo1N1rOHVoQ7Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjQ0MTgzNw==", "bodyText": "Should this be public since it is meant to be used by others", "url": "https://github.com/linkedin/rest.li/pull/417#discussion_r492441837", "createdAt": "2020-09-22T02:17:57Z", "author": {"login": "BrianPin"}, "path": "generator/src/main/java/com/linkedin/pegasus/generator/FileFormatDataSchemaParser.java", "diffHunk": "@@ -62,10 +63,15 @@ public FileFormatDataSchemaParser(String resolverPath, DataSchemaResolver schema\n     _schemaParserFactory = schemaParserFactory;\n   }\n \n-  public DataSchemaParser.ParseResult parseSources(String sources[]) throws IOException\n+  public DataSchemaParser.ParseResult parseSources(String[] sources) throws IOException\n   {\n     final DataSchemaParser.ParseResult result = new DataSchemaParser.ParseResult();\n+    parseSources(sources, result);\n+    return result;\n+  }\n \n+  void parseSources(String[] sources, DataSchemaParser.ParseResult result) throws IOException", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "939460b48c98f400e7f58b66222d2a2e38ac3d51"}, "originalPosition": 22}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkzMDkwODc0", "url": "https://github.com/linkedin/rest.li/pull/417#pullrequestreview-493090874", "createdAt": "2020-09-22T02:18:17Z", "commit": {"oid": "939460b48c98f400e7f58b66222d2a2e38ac3d51"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkzMDkyOTg1", "url": "https://github.com/linkedin/rest.li/pull/417#pullrequestreview-493092985", "createdAt": "2020-09-22T02:27:53Z", "commit": {"oid": "939460b48c98f400e7f58b66222d2a2e38ac3d51"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQwMjoyNzo1M1rOHVoYqA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQwMjoyNzo1M1rOHVoYqA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjQ0MzgxNg==", "bodyText": "Do you mind removing this unused constant in your PR?", "url": "https://github.com/linkedin/rest.li/pull/417#discussion_r492443816", "createdAt": "2020-09-22T02:27:53Z", "author": {"login": "nickibi"}, "path": "generator/src/main/java/com/linkedin/pegasus/generator/FileFormatDataSchemaParser.java", "diffHunk": "@@ -48,7 +48,8 @@\n  * @author Keren Jin\n  * @author Joe Betz\n  */\n-public class FileFormatDataSchemaParser {\n+public class FileFormatDataSchemaParser\n+{\n   static final String SCHEMA_PATH_PREFIX = SchemaDirectoryName.PEGASUS.getName() + \"/\";\n   static final String EXTENSION_PATH_ENTRY = SchemaDirectoryName.EXTENSIONS.getName() + \"/\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "939460b48c98f400e7f58b66222d2a2e38ac3d51"}, "originalPosition": 8}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkzMDk0MDIx", "url": "https://github.com/linkedin/rest.li/pull/417#pullrequestreview-493094021", "createdAt": "2020-09-22T02:32:31Z", "commit": {"oid": "939460b48c98f400e7f58b66222d2a2e38ac3d51"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQwMjozMjozMVrOHVocMg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQwMjozMjozMVrOHVocMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjQ0NDcyMg==", "bodyText": "The _resolverPath is not used anywhere, but It's an input of this class's constructor. I am thinking about shall we create a new constructor which remove the resolverPath as input. We could deprecate the current constructor later. But it is totally out of the scope of this PR, I just came to know it by reading this PR.", "url": "https://github.com/linkedin/rest.li/pull/417#discussion_r492444722", "createdAt": "2020-09-22T02:32:31Z", "author": {"login": "nickibi"}, "path": "generator/src/main/java/com/linkedin/pegasus/generator/FileFormatDataSchemaParser.java", "diffHunk": "@@ -48,7 +48,8 @@\n  * @author Keren Jin\n  * @author Joe Betz\n  */\n-public class FileFormatDataSchemaParser {\n+public class FileFormatDataSchemaParser\n+{\n   static final String SCHEMA_PATH_PREFIX = SchemaDirectoryName.PEGASUS.getName() + \"/\";\n   static final String EXTENSION_PATH_ENTRY = SchemaDirectoryName.EXTENSIONS.getName() + \"/\";\n   private final String _resolverPath;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "939460b48c98f400e7f58b66222d2a2e38ac3d51"}, "originalPosition": 9}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "939460b48c98f400e7f58b66222d2a2e38ac3d51", "author": {"user": {"login": "evanw555", "name": "Evan Williams"}}, "url": "https://github.com/linkedin/rest.li/commit/939460b48c98f400e7f58b66222d2a2e38ac3d51", "committedDate": "2020-09-22T01:24:49Z", "message": "Optimize schema parsing by reusing ParseResult instances\n\nPR #376 made schema parsing deterministic in part by sorting parser\nresults. When using DataSchemaParser to parse data schemas from multiple\nsources, a separate ParseResult instance is constructed for each source\nthen ultimately combined into a new singular instance. This introduced a\nperformance regression when parsing from many sources due to unnecessary\nsorting. This change fixes that by allowing FileFormatDataSchemaParser\nto reuse the root instance rather than constructing a new one."}, "afterCommit": {"oid": "485eca3b80f4b974a7970529e6777cba7874b023", "author": {"user": {"login": "evanw555", "name": "Evan Williams"}}, "url": "https://github.com/linkedin/rest.li/commit/485eca3b80f4b974a7970529e6777cba7874b023", "committedDate": "2020-09-22T03:43:33Z", "message": "Optimize schema parsing by reusing ParseResult instances\n\nPR #376 made schema parsing deterministic in part by sorting parser\nresults. When using DataSchemaParser to parse data schemas from multiple\nsources, a separate ParseResult instance is constructed for each source\nthen ultimately combined into a new singular instance. This introduced a\nperformance regression when parsing from many sources due to redundant\nsorting done when creating the combined ParseResult. This change fixes\nthat by allowing FileFormatDataSchemaParser to reuse the same instance\nrather than constructing a new one."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkzMTEyMzIy", "url": "https://github.com/linkedin/rest.li/pull/417#pullrequestreview-493112322", "createdAt": "2020-09-22T03:54:28Z", "commit": {"oid": "485eca3b80f4b974a7970529e6777cba7874b023"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkzMTgzMjU4", "url": "https://github.com/linkedin/rest.li/pull/417#pullrequestreview-493183258", "createdAt": "2020-09-22T07:19:51Z", "commit": {"oid": "485eca3b80f4b974a7970529e6777cba7874b023"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "485eca3b80f4b974a7970529e6777cba7874b023", "author": {"user": {"login": "evanw555", "name": "Evan Williams"}}, "url": "https://github.com/linkedin/rest.li/commit/485eca3b80f4b974a7970529e6777cba7874b023", "committedDate": "2020-09-22T03:43:33Z", "message": "Optimize schema parsing by reusing ParseResult instances\n\nPR #376 made schema parsing deterministic in part by sorting parser\nresults. When using DataSchemaParser to parse data schemas from multiple\nsources, a separate ParseResult instance is constructed for each source\nthen ultimately combined into a new singular instance. This introduced a\nperformance regression when parsing from many sources due to redundant\nsorting done when creating the combined ParseResult. This change fixes\nthat by allowing FileFormatDataSchemaParser to reuse the same instance\nrather than constructing a new one."}, "afterCommit": {"oid": "15f716aad324890c0e570e67705abbf7de3a7413", "author": {"user": {"login": "evanw555", "name": "Evan Williams"}}, "url": "https://github.com/linkedin/rest.li/commit/15f716aad324890c0e570e67705abbf7de3a7413", "committedDate": "2020-09-22T20:05:26Z", "message": "Optimize schema parsing by reusing ParseResult instances\n\nPR #376 made schema parsing deterministic in part by sorting parser\nresults. When using DataSchemaParser to parse data schemas from multiple\nsources, a separate ParseResult instance is constructed for each source\nthen ultimately combined into a new singular instance. This introduced a\nperformance regression when parsing from many sources due to redundant\nsorting done when creating the combined ParseResult. This change fixes\nthat by allowing FileFormatDataSchemaParser to reuse the same instance\nrather than constructing a new one."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "58ee644ea3a21900856c4386f17459cb1246fd4a", "author": {"user": {"login": "evanw555", "name": "Evan Williams"}}, "url": "https://github.com/linkedin/rest.li/commit/58ee644ea3a21900856c4386f17459cb1246fd4a", "committedDate": "2020-09-22T21:57:49Z", "message": "Optimize schema parsing by reusing ParseResult instances\n\nPR #376 made schema parsing deterministic in part by sorting parser\nresults. When using DataSchemaParser to parse data schemas from multiple\nsources, a separate ParseResult instance is constructed for each source\nthen ultimately combined into a new singular instance. This introduced a\nperformance regression when parsing from many sources due to redundant\nsorting done when creating the combined ParseResult. This change fixes\nthat by allowing FileFormatDataSchemaParser to reuse the same instance\nrather than constructing a new one."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "849f3039157b17a0b54991344a378332e41cf6ca", "author": {"user": {"login": "evanw555", "name": "Evan Williams"}}, "url": "https://github.com/linkedin/rest.li/commit/849f3039157b17a0b54991344a378332e41cf6ca", "committedDate": "2020-09-22T21:26:08Z", "message": "Merge branch 'master' into fix/parse-result-optimization"}, "afterCommit": {"oid": "58ee644ea3a21900856c4386f17459cb1246fd4a", "author": {"user": {"login": "evanw555", "name": "Evan Williams"}}, "url": "https://github.com/linkedin/rest.li/commit/58ee644ea3a21900856c4386f17459cb1246fd4a", "committedDate": "2020-09-22T21:57:49Z", "message": "Optimize schema parsing by reusing ParseResult instances\n\nPR #376 made schema parsing deterministic in part by sorting parser\nresults. When using DataSchemaParser to parse data schemas from multiple\nsources, a separate ParseResult instance is constructed for each source\nthen ultimately combined into a new singular instance. This introduced a\nperformance regression when parsing from many sources due to redundant\nsorting done when creating the combined ParseResult. This change fixes\nthat by allowing FileFormatDataSchemaParser to reuse the same instance\nrather than constructing a new one."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4671, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}