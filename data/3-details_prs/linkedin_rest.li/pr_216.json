{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg1ODU2ODIx", "number": 216, "title": "pretty print json in pdl builder", "bodyText": "Manually tested JSON indent, can not add those test cases till we have the deterministic ordering of properties.", "createdAt": "2020-03-09T22:57:39Z", "url": "https://github.com/linkedin/rest.li/pull/216", "merged": true, "mergeCommit": {"oid": "ea3cc6ef2b9274d3c48a5aa10a6ddd47af25a82d"}, "closed": true, "closedAt": "2020-03-11T21:44:14Z", "author": {"login": "aman1309"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcMIMzgAFqTM3MTYyNzYxMw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcMs0ldAFqTM3MzA4ODEzMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcxNjI3NjEz", "url": "https://github.com/linkedin/rest.li/pull/216#pullrequestreview-371627613", "createdAt": "2020-03-10T01:26:24Z", "commit": {"oid": "8cb720b06d46c1c2db7ecae86d45b4fe77c43b1e"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b59ffb330a112210d205ad43953b96d6be5a4cde", "author": {"user": {"login": "aman1309", "name": "Aman Gupta"}}, "url": "https://github.com/linkedin/rest.li/commit/b59ffb330a112210d205ad43953b96d6be5a4cde", "committedDate": "2020-03-10T20:59:59Z", "message": "pretty print json in pdl builder"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcyMzE3OTMy", "url": "https://github.com/linkedin/rest.li/pull/216#pullrequestreview-372317932", "createdAt": "2020-03-10T20:59:53Z", "commit": {"oid": "ae2499aeb5c14b5b8a4e6791616830ef9d49c262"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQyMDo1OTo1M1rOF0gyjw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQyMDo1OTo1M1rOF0gyjw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDYwNzUwMw==", "bodyText": "these are not related to your change.. please check", "url": "https://github.com/linkedin/rest.li/pull/216#discussion_r390607503", "createdAt": "2020-03-10T20:59:53Z", "author": {"login": "karthikbalasub"}, "path": "data-avro/src/test/java/com/linkedin/data/avro/TestSchemaTranslator.java", "diffHunk": "@@ -1660,6 +1660,46 @@ public void testToAvroSchema_testTypeRefAnnotationPropagation(String schemaBefor\n               null,\n               null,\n               null\n+          },", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ae2499aeb5c14b5b8a4e6791616830ef9d49c262"}, "originalPosition": 4}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ae2499aeb5c14b5b8a4e6791616830ef9d49c262", "author": {"user": {"login": "aman1309", "name": "Aman Gupta"}}, "url": "https://github.com/linkedin/rest.li/commit/ae2499aeb5c14b5b8a4e6791616830ef9d49c262", "committedDate": "2020-03-10T20:56:34Z", "message": "Merge branch 'prettyprint' of github.com:linkedin/rest.li into prettyprint"}, "afterCommit": {"oid": "b59ffb330a112210d205ad43953b96d6be5a4cde", "author": {"user": {"login": "aman1309", "name": "Aman Gupta"}}, "url": "https://github.com/linkedin/rest.li/commit/b59ffb330a112210d205ad43953b96d6be5a4cde", "committedDate": "2020-03-10T20:59:59Z", "message": "pretty print json in pdl builder"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcyMzg4NjA2", "url": "https://github.com/linkedin/rest.li/pull/216#pullrequestreview-372388606", "createdAt": "2020-03-10T23:28:42Z", "commit": {"oid": "b59ffb330a112210d205ad43953b96d6be5a4cde"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQyMzoyODo0MlrOF0kimw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQyMzozNzowN1rOF0ksgw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDY2ODk1NQ==", "bodyText": "Should this be using two spaces? SPACE * INDENT_WIDTH?", "url": "https://github.com/linkedin/rest.li/pull/216#discussion_r390668955", "createdAt": "2020-03-10T23:28:42Z", "author": {"login": "karthikbalasub"}, "path": "data/src/main/java/com/linkedin/data/schema/IndentedPdlBuilder.java", "diffHunk": "@@ -124,6 +120,15 @@ boolean writeDoc(String doc) throws IOException\n     return false;\n   }\n \n+  @Override\n+  PdlBuilder writeJson(Object value) throws IOException\n+  {\n+    DefaultPrettyPrinter prettyPrinter = new DefaultPrettyPrinter();\n+    prettyPrinter.indentObjectsWith(new DefaultIndenter(\" \", DefaultIndenter.SYS_LF + getIndentSpaces()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b59ffb330a112210d205ad43953b96d6be5a4cde"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDY3MDU3MA==", "bodyText": "Suggest creating a local codec for this.\nThis way of changing the state of a member variable for each function call is not clean.", "url": "https://github.com/linkedin/rest.li/pull/216#discussion_r390670570", "createdAt": "2020-03-10T23:34:06Z", "author": {"login": "karthikbalasub"}, "path": "data/src/main/java/com/linkedin/data/schema/IndentedPdlBuilder.java", "diffHunk": "@@ -124,6 +120,15 @@ boolean writeDoc(String doc) throws IOException\n     return false;\n   }\n \n+  @Override\n+  PdlBuilder writeJson(Object value) throws IOException\n+  {\n+    DefaultPrettyPrinter prettyPrinter = new DefaultPrettyPrinter();\n+    prettyPrinter.indentObjectsWith(new DefaultIndenter(\" \", DefaultIndenter.SYS_LF + getIndentSpaces()));\n+    _jsonCodec.setPrettyPrinter(prettyPrinter);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b59ffb330a112210d205ad43953b96d6be5a4cde"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDY3MTQ5MQ==", "bodyText": "Can you add the testcases you used for testing, but comment them out for now. It would be easier to just enable those tests later.", "url": "https://github.com/linkedin/rest.li/pull/216#discussion_r390671491", "createdAt": "2020-03-10T23:37:07Z", "author": {"login": "karthikbalasub"}, "path": "data/src/test/java/com/linkedin/data/schema/TestPdlBuilder.java", "diffHunk": "@@ -37,31 +39,39 @@\n   private static Object[][] propertiesMapProvider()\n   {\n     DataMap properties1 = new DataMap();\n-    properties1.put(\"empty\", new DataMap());\n+    properties1.put(\"empty\", new DataList(Arrays.asList(1, 2, 3)));\n     DataMap properties2 = new DataMap();\n     properties2.put(\"validate\", properties1);\n     return new Object[][]\n         {\n             {\n               properties1,\n-              \"@empty = {}\\n\"\n+              \"@empty = [ 1, 2, 3 ]\\n\",\n+              \"@empty=[1,2,3]\"\n             },\n             {\n               properties2,\n-              \"@validate.empty = {}\\n\"\n+              \"@validate.empty = [ 1, 2, 3 ]\\n\",\n+              \"@validate.empty=[1,2,3]\"\n             }\n         //TODO Add test case for multiple properties in a map level once iteration logic is fixed to be deterministic", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b59ffb330a112210d205ad43953b96d6be5a4cde"}, "originalPosition": 34}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0d25fd6baed17526daf3e4a98c685ec75e6733c8", "author": {"user": {"login": "aman1309", "name": "Aman Gupta"}}, "url": "https://github.com/linkedin/rest.li/commit/0d25fd6baed17526daf3e4a98c685ec75e6733c8", "committedDate": "2020-03-11T05:19:52Z", "message": "address karthik comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcyNTIxNDUy", "url": "https://github.com/linkedin/rest.li/pull/216#pullrequestreview-372521452", "createdAt": "2020-03-11T07:24:34Z", "commit": {"oid": "0d25fd6baed17526daf3e4a98c685ec75e6733c8"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQwNzoyNDozNVrOF0rhkA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQwNzo0Mjo1MFrOF0r6uw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDc4MzM3Ng==", "bodyText": "I'd suggest adding a map test case with only 1 property per level, along with a TODO saying to add more properties at each level.", "url": "https://github.com/linkedin/rest.li/pull/216#discussion_r390783376", "createdAt": "2020-03-11T07:24:35Z", "author": {"login": "evanw555"}, "path": "data/src/test/java/com/linkedin/data/schema/TestPdlBuilder.java", "diffHunk": "@@ -36,32 +38,57 @@\n   @DataProvider\n   private static Object[][] propertiesMapProvider()\n   {\n-    DataMap properties1 = new DataMap();\n-    properties1.put(\"empty\", new DataMap());\n-    DataMap properties2 = new DataMap();\n-    properties2.put(\"validate\", properties1);\n+    DataMap emptyProperty = new DataMap();\n+    emptyProperty.put(\"empty\", new DataMap());\n+    DataMap arrayValueProperty = new DataMap();\n+    arrayValueProperty.put(\"array\", new DataList(Arrays.asList(1, 2, 3)));\n+    DataMap flattenProperty = new DataMap();\n+    flattenProperty.put(\"flatten\", arrayValueProperty);\n+    DataMap multipleProp = new DataMap();\n+    multipleProp.putAll(emptyProperty);\n+    multipleProp.putAll(arrayValueProperty);\n+    DataMap jsonValueProp = new DataMap();\n+    jsonValueProp.put(\"nested\", multipleProp);\n     return new Object[][]\n         {\n             {\n-              properties1,\n-              \"@empty = {}\\n\"\n+              emptyProperty,\n+              \"@empty = { }\\n\",\n+              \"@empty={}\"\n             },\n             {\n-              properties2,\n-              \"@validate.empty = {}\\n\"\n-            }\n-        //TODO Add test case for multiple properties in a map level once iteration logic is fixed to be deterministic\n+              arrayValueProperty,\n+              \"@`array` = [ 1, 2, 3 ]\\n\",\n+              \"@`array`=[1,2,3]\"\n+            },\n+            {\n+              flattenProperty,\n+              \"@flatten.`array` = [ 1, 2, 3 ]\\n\",\n+              \"@flatten.`array`=[1,2,3]\"\n+            },\n+            /* TODO Add test case for multiple properties in a map level once iteration logic is fixed to be deterministic", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0d25fd6baed17526daf3e4a98c685ec75e6733c8"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDc4Njk3Ng==", "bodyText": "I don't think this method is necessary. You can avoid adding this logic as an overridden method which calls the super method (a little confusing) by just updating the codec's pretty printer on indent change (i.e. #increaseIndent and #decreaseIndent). It seems more intuitive IMO to compute the indent string and update the pretty printer on indent change rather than on each use.", "url": "https://github.com/linkedin/rest.li/pull/216#discussion_r390786976", "createdAt": "2020-03-11T07:34:54Z", "author": {"login": "evanw555"}, "path": "data/src/main/java/com/linkedin/data/schema/IndentedPdlBuilder.java", "diffHunk": "@@ -124,6 +120,16 @@ boolean writeDoc(String doc) throws IOException\n     return false;\n   }\n \n+  @Override\n+  PdlBuilder writeJson(Object value) throws IOException", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0d25fd6baed17526daf3e4a98c685ec75e6733c8"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDc4OTcxOQ==", "bodyText": "I would make this method static, since it's just a helper method to compute indent text. Whether to use static methods when possible or to avoid static methods seems to be a contentious and subjective issue, so it's up to you tbh.", "url": "https://github.com/linkedin/rest.li/pull/216#discussion_r390789719", "createdAt": "2020-03-11T07:42:36Z", "author": {"login": "evanw555"}, "path": "data/src/main/java/com/linkedin/data/schema/IndentedPdlBuilder.java", "diffHunk": "@@ -133,4 +139,15 @@ private void writeLine(String code) throws IOException\n   {\n     indent().write(code).newline();\n   }\n+\n+  private String getIndentSpaces(int indentDepth)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0d25fd6baed17526daf3e4a98c685ec75e6733c8"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDc4OTgxOQ==", "bodyText": "Should be protected.", "url": "https://github.com/linkedin/rest.li/pull/216#discussion_r390789819", "createdAt": "2020-03-11T07:42:50Z", "author": {"login": "evanw555"}, "path": "data/src/main/java/com/linkedin/data/schema/PdlBuilder.java", "diffHunk": "@@ -63,6 +61,7 @@\n   }\n \n   private final Writer _writer;\n+  final JacksonDataCodec _jsonCodec = new JacksonDataCodec();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0d25fd6baed17526daf3e4a98c685ec75e6733c8"}, "originalPosition": 13}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c5b86bb7712c3fe4a4e109a8b58655a44d296d24", "author": {"user": {"login": "aman1309", "name": "Aman Gupta"}}, "url": "https://github.com/linkedin/rest.li/commit/c5b86bb7712c3fe4a4e109a8b58655a44d296d24", "committedDate": "2020-03-11T08:09:51Z", "message": "address evan comment: make codec protected"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcyODc2NTY3", "url": "https://github.com/linkedin/rest.li/pull/216#pullrequestreview-372876567", "createdAt": "2020-03-11T15:36:09Z", "commit": {"oid": "c5b86bb7712c3fe4a4e109a8b58655a44d296d24"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxNTozNjowOVrOF08iYQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxNTozOToyMlrOF08rzg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTA2MjExMw==", "bodyText": "The state is not for the entire PdlBuilder, but only when writeJson is called (ie at a function scope). After this function is completed, the state of _jsonBuilder is invalid. So using a member variable to set the state for a particular function is odd.\nWhat if someone uses the _jsonCodec on some other code path without updating the prettyPrinter?\nIt is not explicit that pretty printer should be updated before the code should be used.\nWhat happens if PdlBuilder stops using _jsonCodec in toJson?\nIt is not explict that PdlBuilder is expecting json to be formatted by custom builders.", "url": "https://github.com/linkedin/rest.li/pull/216#discussion_r391062113", "createdAt": "2020-03-11T15:36:09Z", "author": {"login": "karthikbalasub"}, "path": "data/src/main/java/com/linkedin/data/schema/IndentedPdlBuilder.java", "diffHunk": "@@ -124,6 +120,15 @@ boolean writeDoc(String doc) throws IOException\n     return false;\n   }\n \n+  @Override\n+  PdlBuilder writeJson(Object value) throws IOException\n+  {\n+    DefaultPrettyPrinter prettyPrinter = new DefaultPrettyPrinter();\n+    prettyPrinter.indentObjectsWith(new DefaultIndenter(\" \", DefaultIndenter.SYS_LF + getIndentSpaces()));\n+    _jsonCodec.setPrettyPrinter(prettyPrinter);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDY3MDU3MA=="}, "originalCommit": {"oid": "b59ffb330a112210d205ad43953b96d6be5a4cde"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTA2NDUyNg==", "bodyText": "Cleaner option is to create two protected abstrac methods toJson(DataMap) toJson(DataList) and let concrete implementations decide how the json is generated.", "url": "https://github.com/linkedin/rest.li/pull/216#discussion_r391064526", "createdAt": "2020-03-11T15:39:22Z", "author": {"login": "karthikbalasub"}, "path": "data/src/main/java/com/linkedin/data/schema/PdlBuilder.java", "diffHunk": "@@ -275,11 +274,11 @@ private String toJson(Object value) throws IOException\n   {\n     if (value instanceof DataMap)\n     {\n-      return JSON_CODEC.mapToString((DataMap) value);\n+      return _jsonCodec.mapToString((DataMap) value);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c5b86bb7712c3fe4a4e109a8b58655a44d296d24"}, "originalPosition": 22}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b3b17132f0203e218941c3ca2aa22fd1b962546f", "author": {"user": {"login": "aman1309", "name": "Aman Gupta"}}, "url": "https://github.com/linkedin/rest.li/commit/b3b17132f0203e218941c3ca2aa22fd1b962546f", "committedDate": "2020-03-11T19:48:27Z", "message": "address karthik comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzczMDg4MTMz", "url": "https://github.com/linkedin/rest.li/pull/216#pullrequestreview-373088133", "createdAt": "2020-03-11T20:06:26Z", "commit": {"oid": "b3b17132f0203e218941c3ca2aa22fd1b962546f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4987, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}