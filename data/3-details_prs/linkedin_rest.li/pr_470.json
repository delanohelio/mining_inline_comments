{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE2MzMwNTE5", "number": 470, "title": "Check whether schemas exist or not before running pegasusSchemaSnapshotCheck task", "bodyText": "Check whether schemas exist or not before running pegasusSchemaSnapshotCheck task", "createdAt": "2020-11-05T20:49:38Z", "url": "https://github.com/linkedin/rest.li/pull/470", "merged": true, "mergeCommit": {"oid": "a9aaabbf10a39e7f41fb50db105c75f690f9ee3d"}, "closed": true, "closedAt": "2020-11-05T22:37:19Z", "author": {"login": "nickibi"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdZoxlLAFqTUyNDY1NjMxOQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdZqN5YAFqTUyNDcyNjg4Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI0NjU2MzE5", "url": "https://github.com/linkedin/rest.li/pull/470#pullrequestreview-524656319", "createdAt": "2020-11-05T20:51:48Z", "commit": {"oid": "3e24f1138bf9dab9052a157edb575130e01b9cf8"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQyMDo1MTo0OFrOHuV_5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQyMDo1NTozOFrOHuWH0A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODM1Njk2NA==", "bodyText": "Does changing the ordering here fix the problem we talked about earlier (related to the wrong pegasus version being picked up in the schema annotation handler configuration)?", "url": "https://github.com/linkedin/rest.li/pull/470#discussion_r518356964", "createdAt": "2020-11-05T20:51:48Z", "author": {"login": "evanw555"}, "path": "gradle-plugins/src/main/java/com/linkedin/pegasus/gradle/PegasusPlugin.java", "diffHunk": "@@ -1441,8 +1447,8 @@ protected void configurePegasusSchemaSnapshotGeneration(Project project, SourceS\n           task.dependsOn(generatePegasusSchemaSnapshot);\n           task.setCurrentSnapshotDirectory(publishablePegasusSchemaSnapshotDir.toFile());\n           task.setPreviousSnapshotDirectory(pegasusSchemaSnapshotDir);\n-          task.setCodegenClasspath(project.getConfigurations() .getByName(SCHEMA_ANNOTATION_HANDLER_CONFIGURATION)\n-              .plus(project.getConfigurations().getByName(PEGASUS_PLUGIN_CONFIGURATION))\n+          task.setCodegenClasspath(project.getConfigurations().getByName(PEGASUS_PLUGIN_CONFIGURATION)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3e24f1138bf9dab9052a157edb575130e01b9cf8"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODM1ODk5Mg==", "bodyText": "Looking at other methods like configureRestClientConfiguration, this sort of conditional check is done inside the method. I'd suggest making it consistent.", "url": "https://github.com/linkedin/rest.li/pull/470#discussion_r518358992", "createdAt": "2020-11-05T20:55:38Z", "author": {"login": "evanw555"}, "path": "gradle-plugins/src/main/java/com/linkedin/pegasus/gradle/PegasusPlugin.java", "diffHunk": "@@ -850,7 +850,13 @@ public void apply(Project project)\n         configurePegasusSchemaSnapshotGeneration(project, sourceSet, false);\n       }\n \n-      configurePegasusSchemaSnapshotGeneration(project, sourceSet, true);\n+      // Do compatibility check if there are extension schemas.\n+      if (!SharedFileUtils.getSuffixedFiles(project,  project.file(getExtensionSchemaPath(project, sourceSet)),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3e24f1138bf9dab9052a157edb575130e01b9cf8"}, "originalPosition": 6}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3e24f1138bf9dab9052a157edb575130e01b9cf8", "author": {"user": {"login": "nickibi", "name": "Yingjie Bi"}}, "url": "https://github.com/linkedin/rest.li/commit/3e24f1138bf9dab9052a157edb575130e01b9cf8", "committedDate": "2020-11-05T20:48:27Z", "message": "Only run extensionSchemaSnapshot task when extension schemas exist"}, "afterCommit": {"oid": "6e173170189470f1ab5c5af28dab8280e4167f99", "author": {"user": {"login": "nickibi", "name": "Yingjie Bi"}}, "url": "https://github.com/linkedin/rest.li/commit/6e173170189470f1ab5c5af28dab8280e4167f99", "committedDate": "2020-11-05T21:19:55Z", "message": "Check whether schemas exist or not before running pegasusSchemaSnapshotCheck task"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ab0963909878c2447bab9cbe7606968c041451a0", "author": {"user": {"login": "nickibi", "name": "Yingjie Bi"}}, "url": "https://github.com/linkedin/rest.li/commit/ab0963909878c2447bab9cbe7606968c041451a0", "committedDate": "2020-11-05T21:22:20Z", "message": "Check whether schemas exist or not before running pegasusSchemaSnapshotCheck task"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6e173170189470f1ab5c5af28dab8280e4167f99", "author": {"user": {"login": "nickibi", "name": "Yingjie Bi"}}, "url": "https://github.com/linkedin/rest.li/commit/6e173170189470f1ab5c5af28dab8280e4167f99", "committedDate": "2020-11-05T21:19:55Z", "message": "Check whether schemas exist or not before running pegasusSchemaSnapshotCheck task"}, "afterCommit": {"oid": "ab0963909878c2447bab9cbe7606968c041451a0", "author": {"user": {"login": "nickibi", "name": "Yingjie Bi"}}, "url": "https://github.com/linkedin/rest.li/commit/ab0963909878c2447bab9cbe7606968c041451a0", "committedDate": "2020-11-05T21:22:20Z", "message": "Check whether schemas exist or not before running pegasusSchemaSnapshotCheck task"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI0NzI2ODgy", "url": "https://github.com/linkedin/rest.li/pull/470#pullrequestreview-524726882", "createdAt": "2020-11-05T22:36:32Z", "commit": {"oid": "ab0963909878c2447bab9cbe7606968c041451a0"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4739, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}