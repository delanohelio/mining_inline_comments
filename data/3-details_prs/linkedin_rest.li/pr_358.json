{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU5NTUxODM4", "number": 358, "title": "Implement support for always projecting fields by name.", "bodyText": "", "createdAt": "2020-07-30T19:58:02Z", "url": "https://github.com/linkedin/rest.li/pull/358", "merged": true, "mergeCommit": {"oid": "814b57684432b055ae630256520bb2b10cc0d654"}, "closed": true, "closedAt": "2020-08-04T06:17:41Z", "author": {"login": "karthikbalasub"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc6FRs6gH2gAyNDU5NTUxODM4OmMxNmYxNTAyMTFlODBiNWIwZjhhMTg2ZDdlZjIyZjk3NDkwMmYxMzQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc7fwjLAH2gAyNDU5NTUxODM4OmNjZGNmOWNjNjAwOGQ1MmQyMDM5MDk2N2M3YmI5OGNmOGYxZjgzZDk=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "c16f150211e80b5b0f8a186d7ef22f974902f134", "author": {"user": null}, "url": "https://github.com/linkedin/rest.li/commit/c16f150211e80b5b0f8a186d7ef22f974902f134", "committedDate": "2020-07-30T20:02:33Z", "message": "Implement support for always projecting fields by name."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c5d734a6342d2c3eb4772c2f198d5f54d16cb9bb", "author": {"user": null}, "url": "https://github.com/linkedin/rest.li/commit/c5d734a6342d2c3eb4772c2f198d5f54d16cb9bb", "committedDate": "2020-07-30T19:57:14Z", "message": "Implement support for always projecting fields by name."}, "afterCommit": {"oid": "c16f150211e80b5b0f8a186d7ef22f974902f134", "author": {"user": null}, "url": "https://github.com/linkedin/rest.li/commit/c16f150211e80b5b0f8a186d7ef22f974902f134", "committedDate": "2020-07-30T20:02:33Z", "message": "Implement support for always projecting fields by name."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e23a912cc3834e14581ddbcf0fa497b8f554b783", "author": {"user": null}, "url": "https://github.com/linkedin/rest.li/commit/e23a912cc3834e14581ddbcf0fa497b8f554b783", "committedDate": "2020-07-30T21:47:26Z", "message": "Release 29.4.7"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU4OTI2Mzcz", "url": "https://github.com/linkedin/rest.li/pull/358#pullrequestreview-458926373", "createdAt": "2020-07-31T05:36:03Z", "commit": {"oid": "e23a912cc3834e14581ddbcf0fa497b8f554b783"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQwNTozNjowM1rOG58iuw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQwNTozNjowM1rOG58iuw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzQxMzk0Nw==", "bodyText": "If the name is already escaped(replaced \"$\" to \"$$\"), could it happen to a case that we did a second replaceAll escape to make it un-readable.", "url": "https://github.com/linkedin/rest.li/pull/358#discussion_r463413947", "createdAt": "2020-07-31T05:36:03Z", "author": {"login": "BrianPin"}, "path": "data-transform/src/main/java/com/linkedin/data/transform/filter/AbstractFilter.java", "diffHunk": "@@ -248,21 +260,33 @@ private Object filterDataMap(DataMap opNode,\n     for (Map.Entry<String, Object> entry : valueDataMap.entrySet())\n     {\n       final String name = entry.getKey();\n+      final String nameEscaped = Escaper.replaceAll(name, \"$\", \"$$\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e23a912cc3834e14581ddbcf0fa497b8f554b783"}, "originalPosition": 88}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU4OTM0NzIz", "url": "https://github.com/linkedin/rest.li/pull/358#pullrequestreview-458934723", "createdAt": "2020-07-31T06:03:08Z", "commit": {"oid": "e23a912cc3834e14581ddbcf0fa497b8f554b783"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQwNjowMzowOFrOG58-fg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQwNjowMzowOFrOG58-fg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzQyMTA1NA==", "bodyText": "Do you think since this adding field is in response, maybe this projectFields should be in Response Util class instead of Rest Utils?", "url": "https://github.com/linkedin/rest.li/pull/358#discussion_r463421054", "createdAt": "2020-07-31T06:03:08Z", "author": {"login": "BrianPin"}, "path": "restli-server/src/main/java/com/linkedin/restli/internal/server/util/RestUtils.java", "diffHunk": "@@ -251,6 +250,36 @@ public static String pickBestEncoding(String acceptHeader, Set<String> customMim\n    */\n   public static DataMap projectFields(final DataMap dataMap, final ProjectionMode projectionMode,\n       final MaskTree projectionMask)\n+  {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e23a912cc3834e14581ddbcf0fa497b8f554b783"}, "originalPosition": 12}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU5NDA3NzY1", "url": "https://github.com/linkedin/rest.li/pull/358#pullrequestreview-459407765", "createdAt": "2020-07-31T19:24:19Z", "commit": {"oid": "e23a912cc3834e14581ddbcf0fa497b8f554b783"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ccdcf9cc6008d52d20390967c7bb98cf8f1f83d9", "author": {"user": null}, "url": "https://github.com/linkedin/rest.li/commit/ccdcf9cc6008d52d20390967c7bb98cf8f1f83d9", "committedDate": "2020-08-04T05:27:42Z", "message": "Merge branch 'master' into feature/projection"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4893, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}