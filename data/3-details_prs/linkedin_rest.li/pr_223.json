{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkwMTU2NzU2", "number": 223, "title": "Raise exception in ValidateSchemaAnnotationTask if any handler configured not found.", "bodyText": "In PR: #218\nI made a change to ignore errors if the class failed to be instantiated during search for handlers.\nThe problem with this is that the handlers under the search, might also encounter failure in instantiation and we would accidentally skip any validation to be done by this handler.\nThis PR is to add an exception when we fail to see all configured handlers initialized and found. By doing this, we can ensure that all configured handlers need to be found before we run validation, otherwise the user will see error message.", "createdAt": "2020-03-18T01:06:32Z", "url": "https://github.com/linkedin/rest.li/pull/223", "merged": true, "mergeCommit": {"oid": "e241773c3b551d325a4471c96b81cec745b5388d"}, "closed": true, "closedAt": "2020-03-23T18:45:58Z", "author": {"login": "junchuanwang"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcOsnkiAH2gAyMzkwMTU2NzU2OmJjZDE1MjY5ZmEyZWVmZjY2ZGVlMzkwZjNmMWNjNzMxYTVmYWNlM2E=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcQibePgH2gAyMzkwMTU2NzU2OjM3YmJhMDYyODQ5ZTg1NjI1NTJhMjIwOTllNGM2YjliY2JlMzI4MTg=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "bcd15269fa2eeff66dee390f3f1cc731a5face3a", "author": {"user": null}, "url": "https://github.com/linkedin/rest.li/commit/bcd15269fa2eeff66dee390f3f1cc731a5face3a", "committedDate": "2020-03-18T01:00:04Z", "message": "Raise exception in ValidateSchemaAnnotationTask if any handler configured not found."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b58d96ba46f9b9a87df7f94a3d3f8ecd792e3f28", "author": {"user": null}, "url": "https://github.com/linkedin/rest.li/commit/b58d96ba46f9b9a87df7f94a3d3f8ecd792e3f28", "committedDate": "2020-03-18T01:08:13Z", "message": "Reword error message"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc2NTAzNzA3", "url": "https://github.com/linkedin/rest.li/pull/223#pullrequestreview-376503707", "createdAt": "2020-03-18T01:12:58Z", "commit": {"oid": "b58d96ba46f9b9a87df7f94a3d3f8ecd792e3f28"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQwMToxMjo1OFrOF3zOHA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQwMToxNzoyMlrOF3zR8Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDA1NTE5Ng==", "bodyText": "Is this assuming one handler per jar?", "url": "https://github.com/linkedin/rest.li/pull/223#discussion_r394055196", "createdAt": "2020-03-18T01:12:58Z", "author": {"login": "karthikbalasub"}, "path": "gradle-plugins/src/main/java/com/linkedin/pegasus/gradle/tasks/ValidateSchemaAnnotationTask.java", "diffHunk": "@@ -89,6 +91,15 @@ public void validateSchemaAnnotation() throws IOException\n \n     getProject().getLogger().info(\"started schema annotation validation\");\n \n+    int expectedHandlersNumber = ((DefaultConfiguration) _handlerJarPath).getAllDependencies().size();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b58d96ba46f9b9a87df7f94a3d3f8ecd792e3f28"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDA1NjE3Nw==", "bodyText": "This wouldn't work if one Jar has more than one handle and another fails to load. A better check would be to ensure atleast one handler per jar dependency.\nIdeally, we shouldn't use these heuristics. We should provide a way for users to explicity say which class or package to load and we should error if it cannot be loaded.", "url": "https://github.com/linkedin/rest.li/pull/223#discussion_r394056177", "createdAt": "2020-03-18T01:17:22Z", "author": {"login": "karthikbalasub"}, "path": "gradle-plugins/src/main/java/com/linkedin/pegasus/gradle/tasks/ValidateSchemaAnnotationTask.java", "diffHunk": "@@ -108,12 +119,16 @@ public void validateSchemaAnnotation() throws IOException\n       scanHandlersInClassPathJar(f, foundClassNames, scannedClass);\n     }\n \n-    // skip if no handlers configured or found\n-    if (handlerJarPathUrls.size() == 0 || foundClassNames.size() == 0)\n+    // For now, every schema annotation handler should be in its own module\n+    // if the number of found handlers doesn't match number of configured modules, will throw exception\n+    if (foundClassNames.size() != expectedHandlersNumber)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b58d96ba46f9b9a87df7f94a3d3f8ecd792e3f28"}, "originalPosition": 34}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc2NjAyMTI4", "url": "https://github.com/linkedin/rest.li/pull/223#pullrequestreview-376602128", "createdAt": "2020-03-18T06:55:54Z", "commit": {"oid": "b58d96ba46f9b9a87df7f94a3d3f8ecd792e3f28"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc2OTg3NzU2", "url": "https://github.com/linkedin/rest.li/pull/223#pullrequestreview-376987756", "createdAt": "2020-03-18T15:40:00Z", "commit": {"oid": "b58d96ba46f9b9a87df7f94a3d3f8ecd792e3f28"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "37bba062849e8562552a22099e4c6b9bcbe32818", "author": {"user": {"login": "junchuanwang", "name": "Junchuan Wang"}}, "url": "https://github.com/linkedin/rest.li/commit/37bba062849e8562552a22099e4c6b9bcbe32818", "committedDate": "2020-03-23T18:15:39Z", "message": "Merge branch 'master' into validate_schema_should_fail_on_error"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}