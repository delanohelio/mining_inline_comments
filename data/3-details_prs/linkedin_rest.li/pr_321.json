{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI4MTMzOTUw", "number": 321, "title": "fix dark cluster strategy refresh", "bodyText": "All the properties relevant to the dark cluster strategy is contained within the source d2 cluster properties, which means that the dark cluster properties themselves will not get changed when a strategy property of an existing darkcluster get's changed. For example, if the multiplier gets changed from 0.1 to 1.0, only the source d2 cluster will get changed. This PR fixes the code to only listen to the source d2 cluster, and fixes up the relevant testcases.", "createdAt": "2020-06-04T23:05:26Z", "url": "https://github.com/linkedin/rest.li/pull/321", "merged": true, "mergeCommit": {"oid": "20585817968dfd174b4a19ff71c64da71b4f0bc8"}, "closed": true, "closedAt": "2020-06-10T22:55:36Z", "author": {"login": "davidhoa"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcpVoxXgFqTQyNjUwMjQzMA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcqBKrOAH2gAyNDI4MTMzOTUwOmUwN2YxYmEwNTI2ZDhmNTM3Mjk0NDhjZTVmZDNkNGViNjJkY2QyNzM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI2NTAyNDMw", "url": "https://github.com/linkedin/rest.li/pull/321#pullrequestreview-426502430", "createdAt": "2020-06-08T18:25:42Z", "commit": {"oid": "23ac402e77cd91ac96cad719f641e99d5e9ee0d4"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxODoyNTo0MlrOGgqsRw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxOToyOTowNFrOGgtUfg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjkwNzA3OQ==", "bodyText": "imo comment unnecessary.", "url": "https://github.com/linkedin/rest.li/pull/321#discussion_r436907079", "createdAt": "2020-06-08T18:25:42Z", "author": {"login": "zhang-chris"}, "path": "darkcluster/src/main/java/com/linkedin/darkcluster/impl/DarkClusterStrategyFactoryImpl.java", "diffHunk": "@@ -150,30 +150,34 @@ public void onClusterAdded(String updatedClusterName)\n       // from the source cluster, and that called listenToCluster.\n       // We also will be listening to updates on the dark clusters, because we'll be sending d2 requests\n       // to the dark clusters, and will be listening on the dark cluster znodes.\n-      // It is more precise to update on just dark cluster updates, because listening on the\n-      // source cluster updates might have unrelated changes, whereas when a dark cluster update happens\n-      // we know for sure we need to update that dark cluster.\n-      if (_darkStrategyMap.containsKey(updatedClusterName))\n+\n+      // It should be sufficient to listen to updates on just the source cluster of the dark clusters, because all pertinent dark strategy info\n+      // is contained in the source cluster entries. Source cluster changes will include stuff like dark multiplier changes and dark\n+      // transportClientProperty changes, etc.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "23ac402e77cd91ac96cad719f641e99d5e9ee0d4"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjkwNzc4Mg==", "bodyText": "very minor but I think using _sourceClusterName is clearer.\nand maybe \"updatedDarkConfigMap\" or \"latest...\"?", "url": "https://github.com/linkedin/rest.li/pull/321#discussion_r436907782", "createdAt": "2020-06-08T18:26:57Z", "author": {"login": "zhang-chris"}, "path": "darkcluster/src/main/java/com/linkedin/darkcluster/impl/DarkClusterStrategyFactoryImpl.java", "diffHunk": "@@ -150,30 +150,34 @@ public void onClusterAdded(String updatedClusterName)\n       // from the source cluster, and that called listenToCluster.\n       // We also will be listening to updates on the dark clusters, because we'll be sending d2 requests\n       // to the dark clusters, and will be listening on the dark cluster znodes.\n-      // It is more precise to update on just dark cluster updates, because listening on the\n-      // source cluster updates might have unrelated changes, whereas when a dark cluster update happens\n-      // we know for sure we need to update that dark cluster.\n-      if (_darkStrategyMap.containsKey(updatedClusterName))\n+\n+      // It should be sufficient to listen to updates on just the source cluster of the dark clusters, because all pertinent dark strategy info\n+      // is contained in the source cluster entries. Source cluster changes will include stuff like dark multiplier changes and dark\n+      // transportClientProperty changes, etc.\n+      if (_sourceClusterName.equals(updatedClusterName))\n       {\n-        // this is a dark cluster name. however, to refresh the strategies, we need to pull the\n-        // darkClusterConfigMap on the parent d2 cluster, because that has the properties needed\n-        // to recreate the dark cluster strategies, such as the multiplier.\n-        String darkClusterName = updatedClusterName;\n         try\n         {\n-          DarkClusterConfigMap darkConfigMap = _facilities.getClusterInfoProvider().getDarkClusterConfigMap(_sourceClusterName);\n-          if (darkConfigMap.containsKey(darkClusterName))\n+          DarkClusterConfigMap potentialDarkConfigMap = _facilities.getClusterInfoProvider().getDarkClusterConfigMap(updatedClusterName);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "23ac402e77cd91ac96cad719f641e99d5e9ee0d4"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjkxMTUxMw==", "bodyText": "we also need to handle deletes; this only handles create + update. please add a test for this.", "url": "https://github.com/linkedin/rest.li/pull/321#discussion_r436911513", "createdAt": "2020-06-08T18:33:46Z", "author": {"login": "zhang-chris"}, "path": "darkcluster/src/main/java/com/linkedin/darkcluster/impl/DarkClusterStrategyFactoryImpl.java", "diffHunk": "@@ -150,30 +150,34 @@ public void onClusterAdded(String updatedClusterName)\n       // from the source cluster, and that called listenToCluster.\n       // We also will be listening to updates on the dark clusters, because we'll be sending d2 requests\n       // to the dark clusters, and will be listening on the dark cluster znodes.\n-      // It is more precise to update on just dark cluster updates, because listening on the\n-      // source cluster updates might have unrelated changes, whereas when a dark cluster update happens\n-      // we know for sure we need to update that dark cluster.\n-      if (_darkStrategyMap.containsKey(updatedClusterName))\n+\n+      // It should be sufficient to listen to updates on just the source cluster of the dark clusters, because all pertinent dark strategy info\n+      // is contained in the source cluster entries. Source cluster changes will include stuff like dark multiplier changes and dark\n+      // transportClientProperty changes, etc.\n+      if (_sourceClusterName.equals(updatedClusterName))\n       {\n-        // this is a dark cluster name. however, to refresh the strategies, we need to pull the\n-        // darkClusterConfigMap on the parent d2 cluster, because that has the properties needed\n-        // to recreate the dark cluster strategies, such as the multiplier.\n-        String darkClusterName = updatedClusterName;\n         try\n         {\n-          DarkClusterConfigMap darkConfigMap = _facilities.getClusterInfoProvider().getDarkClusterConfigMap(_sourceClusterName);\n-          if (darkConfigMap.containsKey(darkClusterName))\n+          DarkClusterConfigMap potentialDarkConfigMap = _facilities.getClusterInfoProvider().getDarkClusterConfigMap(updatedClusterName);\n+          for (Map.Entry<String, DarkClusterConfig> entry : potentialDarkConfigMap.entrySet())\n           {\n-            // just update the dark cluster that changed\n-            _darkStrategyMap.put(darkClusterName, createStrategy(darkClusterName,\n-                                                                 darkConfigMap.get(darkClusterName)));\n+            // we need to refresh every dark cluster in this \"source\" cluster, because we don't have an easy way to tell\n+            // what changed in the source cluster. It could have been a dark cluster change, or it could have been an unrelated\n+            // change in the source cluster. Because there are so few changes in cluster znodes, this is not a\n+            // big concern at the moment. If it does become a concern, storing the original darkClusterConfig and comparing with the\n+            // new one is one way to reduce the strategy refreshes. However, since the strategy itself is so lightweight, it probably won't be a\n+            // problem or worth the effort.\n+            String darkClusterName = entry.getKey();\n+            DarkClusterConfig darkClusterConfig = entry.getValue();\n+            _darkStrategyMap.put(darkClusterName, createStrategy(darkClusterName, darkClusterConfig));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "23ac402e77cd91ac96cad719f641e99d5e9ee0d4"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjk1MDE0Mg==", "bodyText": "can be more concise: \"For simplicity, we refresh all strategies since we expect cluster updates to be rare and refresh to be cheap.\"", "url": "https://github.com/linkedin/rest.li/pull/321#discussion_r436950142", "createdAt": "2020-06-08T19:29:04Z", "author": {"login": "zhang-chris"}, "path": "darkcluster/src/main/java/com/linkedin/darkcluster/impl/DarkClusterStrategyFactoryImpl.java", "diffHunk": "@@ -150,30 +150,34 @@ public void onClusterAdded(String updatedClusterName)\n       // from the source cluster, and that called listenToCluster.\n       // We also will be listening to updates on the dark clusters, because we'll be sending d2 requests\n       // to the dark clusters, and will be listening on the dark cluster znodes.\n-      // It is more precise to update on just dark cluster updates, because listening on the\n-      // source cluster updates might have unrelated changes, whereas when a dark cluster update happens\n-      // we know for sure we need to update that dark cluster.\n-      if (_darkStrategyMap.containsKey(updatedClusterName))\n+\n+      // It should be sufficient to listen to updates on just the source cluster of the dark clusters, because all pertinent dark strategy info\n+      // is contained in the source cluster entries. Source cluster changes will include stuff like dark multiplier changes and dark\n+      // transportClientProperty changes, etc.\n+      if (_sourceClusterName.equals(updatedClusterName))\n       {\n-        // this is a dark cluster name. however, to refresh the strategies, we need to pull the\n-        // darkClusterConfigMap on the parent d2 cluster, because that has the properties needed\n-        // to recreate the dark cluster strategies, such as the multiplier.\n-        String darkClusterName = updatedClusterName;\n         try\n         {\n-          DarkClusterConfigMap darkConfigMap = _facilities.getClusterInfoProvider().getDarkClusterConfigMap(_sourceClusterName);\n-          if (darkConfigMap.containsKey(darkClusterName))\n+          DarkClusterConfigMap potentialDarkConfigMap = _facilities.getClusterInfoProvider().getDarkClusterConfigMap(updatedClusterName);\n+          for (Map.Entry<String, DarkClusterConfig> entry : potentialDarkConfigMap.entrySet())\n           {\n-            // just update the dark cluster that changed\n-            _darkStrategyMap.put(darkClusterName, createStrategy(darkClusterName,\n-                                                                 darkConfigMap.get(darkClusterName)));\n+            // we need to refresh every dark cluster in this \"source\" cluster, because we don't have an easy way to tell\n+            // what changed in the source cluster. It could have been a dark cluster change, or it could have been an unrelated\n+            // change in the source cluster. Because there are so few changes in cluster znodes, this is not a\n+            // big concern at the moment. If it does become a concern, storing the original darkClusterConfig and comparing with the\n+            // new one is one way to reduce the strategy refreshes. However, since the strategy itself is so lightweight, it probably won't be a\n+            // problem or worth the effort.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "23ac402e77cd91ac96cad719f641e99d5e9ee0d4"}, "originalPosition": 33}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3e1f7ce39a408a7c0e9fa218b4c0acf33be207f6", "author": {"user": null}, "url": "https://github.com/linkedin/rest.li/commit/3e1f7ce39a408a7c0e9fa218b4c0acf33be207f6", "committedDate": "2020-06-08T22:26:45Z", "message": "fix dark cluster strategy refresh"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "07ae8868df06ee5ca86980cfa0bbc19994d4cec7", "author": {"user": null}, "url": "https://github.com/linkedin/rest.li/commit/07ae8868df06ee5ca86980cfa0bbc19994d4cec7", "committedDate": "2020-06-08T22:25:12Z", "message": "fix updating strategy mechanism"}, "afterCommit": {"oid": "c53a9098594bd80f2a280da90df1d349adb653f9", "author": {"user": null}, "url": "https://github.com/linkedin/rest.li/commit/c53a9098594bd80f2a280da90df1d349adb653f9", "committedDate": "2020-06-08T22:26:46Z", "message": "fix updating strategy mechanism"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7f07b543a7962853c99ee825a17806def1a2b9ca", "author": {"user": null}, "url": "https://github.com/linkedin/rest.li/commit/7f07b543a7962853c99ee825a17806def1a2b9ca", "committedDate": "2020-06-08T22:36:38Z", "message": "fix updating strategy mechanism"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c53a9098594bd80f2a280da90df1d349adb653f9", "author": {"user": null}, "url": "https://github.com/linkedin/rest.li/commit/c53a9098594bd80f2a280da90df1d349adb653f9", "committedDate": "2020-06-08T22:26:46Z", "message": "fix updating strategy mechanism"}, "afterCommit": {"oid": "7f07b543a7962853c99ee825a17806def1a2b9ca", "author": {"user": null}, "url": "https://github.com/linkedin/rest.li/commit/7f07b543a7962853c99ee825a17806def1a2b9ca", "committedDate": "2020-06-08T22:36:38Z", "message": "fix updating strategy mechanism"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI2NjcwMTY1", "url": "https://github.com/linkedin/rest.li/pull/321#pullrequestreview-426670165", "createdAt": "2020-06-08T22:40:08Z", "commit": {"oid": "7f07b543a7962853c99ee825a17806def1a2b9ca"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQyMjo0MDowOFrOGgy0eQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQyMjo0MDowOFrOGgy0eQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzA0MDI0OQ==", "bodyText": "this is not a new change, nothing has changed in this function. I don't know why github shows a diff here, the file looks fine.", "url": "https://github.com/linkedin/rest.li/pull/321#discussion_r437040249", "createdAt": "2020-06-08T22:40:08Z", "author": {"login": "davidhoa"}, "path": "darkcluster/src/test/java/com/linkedin/darkcluster/TestDarkClusterStrategyFactory.java", "diffHunk": "@@ -259,6 +311,18 @@ public void onClusterAdded(String clusterName)\n       // deleting whatever the first cluster listener added. It would have been more straightforward to have\n       // a handle directly to the other clusterListener, but there's no good reason for the StrategyFactory to\n       // expose that or allow it to be passed in, as the clusterListener needs to manipulate internal state.\n+      try", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7f07b543a7962853c99ee825a17806def1a2b9ca"}, "originalPosition": 174}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5b1c36f1716e9a03a2c2d1cc903534aba3911a30", "author": {"user": null}, "url": "https://github.com/linkedin/rest.li/commit/5b1c36f1716e9a03a2c2d1cc903534aba3911a30", "committedDate": "2020-06-09T22:16:15Z", "message": "change getOrCreate to get"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI3NTk4OTM5", "url": "https://github.com/linkedin/rest.li/pull/321#pullrequestreview-427598939", "createdAt": "2020-06-09T22:52:29Z", "commit": {"oid": "5b1c36f1716e9a03a2c2d1cc903534aba3911a30"}, "state": "APPROVED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQyMjo1MjoyOVrOGhfFRg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQyMzowMDo1MFrOGhfQpQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzc2NTQ0Ng==", "bodyText": "-> get", "url": "https://github.com/linkedin/rest.li/pull/321#discussion_r437765446", "createdAt": "2020-06-09T22:52:29Z", "author": {"login": "zhang-chris"}, "path": "darkcluster/src/main/java/com/linkedin/darkcluster/api/DarkClusterStrategyFactory.java", "diffHunk": "@@ -25,13 +25,13 @@\n public interface DarkClusterStrategyFactory\n {\n   /**\n-   * getOrCreate retrieves the {@link DarkClusterStrategy} corresponding to the darkClusterName. If it doesn't exist, create it\n-   * and return the new strategy. The darkClusterConfig is passed in so that it can be easily stored if needed.\n+   * getOrCreate retrieves the {@link DarkClusterStrategy} corresponding to the darkClusterName. The implementation has discretion on what to do", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5b1c36f1716e9a03a2c2d1cc903534aba3911a30"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzc2NTcxOA==", "bodyText": "Can remove darkClusterConfig if it's not used anymore.", "url": "https://github.com/linkedin/rest.li/pull/321#discussion_r437765718", "createdAt": "2020-06-09T22:53:18Z", "author": {"login": "zhang-chris"}, "path": "darkcluster/src/main/java/com/linkedin/darkcluster/api/DarkClusterStrategyFactory.java", "diffHunk": "@@ -25,13 +25,13 @@\n public interface DarkClusterStrategyFactory\n {\n   /**\n-   * getOrCreate retrieves the {@link DarkClusterStrategy} corresponding to the darkClusterName. If it doesn't exist, create it\n-   * and return the new strategy. The darkClusterConfig is passed in so that it can be easily stored if needed.\n+   * getOrCreate retrieves the {@link DarkClusterStrategy} corresponding to the darkClusterName. The implementation has discretion on what to do\n+   * if the strategy doesn't exist. The darkClusterConfig is passed in so that it can be easily stored if needed.\n    * @param darkClusterName darkClusterName to look up\n    * @param darkClusterConfig darkClusterConfig to store, if needed.\n    * @return {@link DarkClusterStrategy}\n    */\n-  DarkClusterStrategy getOrCreate(String darkClusterName, DarkClusterConfig darkClusterConfig);\n+  DarkClusterStrategy get(String darkClusterName, DarkClusterConfig darkClusterConfig);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5b1c36f1716e9a03a2c2d1cc903534aba3911a30"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzc2NjM5Nw==", "bodyText": "Can remove comments from line 149-152", "url": "https://github.com/linkedin/rest.li/pull/321#discussion_r437766397", "createdAt": "2020-06-09T22:55:18Z", "author": {"login": "zhang-chris"}, "path": "darkcluster/src/main/java/com/linkedin/darkcluster/impl/DarkClusterStrategyFactoryImpl.java", "diffHunk": "@@ -150,43 +150,52 @@ public void onClusterAdded(String updatedClusterName)\n       // from the source cluster, and that called listenToCluster.\n       // We also will be listening to updates on the dark clusters, because we'll be sending d2 requests", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5b1c36f1716e9a03a2c2d1cc903534aba3911a30"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzc2NzIwMA==", "bodyText": "can just convert to 1-liner.", "url": "https://github.com/linkedin/rest.li/pull/321#discussion_r437767200", "createdAt": "2020-06-09T22:57:44Z", "author": {"login": "zhang-chris"}, "path": "darkcluster/src/main/java/com/linkedin/darkcluster/impl/DarkClusterStrategyFactoryImpl.java", "diffHunk": "@@ -150,43 +150,52 @@ public void onClusterAdded(String updatedClusterName)\n       // from the source cluster, and that called listenToCluster.\n       // We also will be listening to updates on the dark clusters, because we'll be sending d2 requests\n       // to the dark clusters, and will be listening on the dark cluster znodes.\n-      // It is more precise to update on just dark cluster updates, because listening on the\n-      // source cluster updates might have unrelated changes, whereas when a dark cluster update happens\n-      // we know for sure we need to update that dark cluster.\n-      if (_darkStrategyMap.containsKey(updatedClusterName))\n+      // It is sufficient to listen just to source cluster updates, because all\n+      // pertinent dark cluster strategy properties are contained there.\n+      if (_sourceClusterName.equals(updatedClusterName))\n       {\n-        // this is a dark cluster name. however, to refresh the strategies, we need to pull the\n-        // darkClusterConfigMap on the parent d2 cluster, because that has the properties needed\n-        // to recreate the dark cluster strategies, such as the multiplier.\n-        String darkClusterName = updatedClusterName;\n         try\n         {\n-          DarkClusterConfigMap darkConfigMap = _facilities.getClusterInfoProvider().getDarkClusterConfigMap(_sourceClusterName);\n-          if (darkConfigMap.containsKey(darkClusterName))\n+          DarkClusterConfigMap updatedDarkConfigMap = _facilities.getClusterInfoProvider().getDarkClusterConfigMap(_sourceClusterName);\n+\n+          // get the existing entries in the strategy map\n+          Set<String> oldDarkStrategySet = _darkStrategyMap.keySet();\n+          // get the \"updated\" dark clusters\n+          Set<String> updatedDarkClusterConfigKeySet = updatedDarkConfigMap.keySet();\n+          // Any old strategy entry that isn't in the \"updated\" set should be removed from the strategyMap.\n+          oldDarkStrategySet.removeAll(updatedDarkClusterConfigKeySet);\n+          for (String darkClusterToRemove : oldDarkStrategySet)\n           {\n-            // just update the dark cluster that changed\n-            _darkStrategyMap.put(darkClusterName, createStrategy(darkClusterName,\n-                                                                 darkConfigMap.get(darkClusterName)));\n+            _darkStrategyMap.remove(darkClusterToRemove);\n+          }\n+\n+          // Now update/add the dark clusters.\n+          for (Map.Entry<String, DarkClusterConfig> entry : updatedDarkConfigMap.entrySet())\n+          {\n+            // For simplicity, we refresh all strategies since we expect cluster updates to be rare and refresh to be cheap.\n+            String darkClusterName = entry.getKey();\n+            DarkClusterConfig darkClusterConfig = entry.getValue();\n+            _darkStrategyMap.put(darkClusterName, createStrategy(darkClusterName, darkClusterConfig));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5b1c36f1716e9a03a2c2d1cc903534aba3911a30"}, "originalPosition": 91}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzc2ODM1Nw==", "bodyText": "comments at 161 and 163 can be removed.", "url": "https://github.com/linkedin/rest.li/pull/321#discussion_r437768357", "createdAt": "2020-06-09T23:00:50Z", "author": {"login": "zhang-chris"}, "path": "darkcluster/src/main/java/com/linkedin/darkcluster/impl/DarkClusterStrategyFactoryImpl.java", "diffHunk": "@@ -150,43 +150,52 @@ public void onClusterAdded(String updatedClusterName)\n       // from the source cluster, and that called listenToCluster.\n       // We also will be listening to updates on the dark clusters, because we'll be sending d2 requests\n       // to the dark clusters, and will be listening on the dark cluster znodes.\n-      // It is more precise to update on just dark cluster updates, because listening on the\n-      // source cluster updates might have unrelated changes, whereas when a dark cluster update happens\n-      // we know for sure we need to update that dark cluster.\n-      if (_darkStrategyMap.containsKey(updatedClusterName))\n+      // It is sufficient to listen just to source cluster updates, because all\n+      // pertinent dark cluster strategy properties are contained there.\n+      if (_sourceClusterName.equals(updatedClusterName))\n       {\n-        // this is a dark cluster name. however, to refresh the strategies, we need to pull the\n-        // darkClusterConfigMap on the parent d2 cluster, because that has the properties needed\n-        // to recreate the dark cluster strategies, such as the multiplier.\n-        String darkClusterName = updatedClusterName;\n         try\n         {\n-          DarkClusterConfigMap darkConfigMap = _facilities.getClusterInfoProvider().getDarkClusterConfigMap(_sourceClusterName);\n-          if (darkConfigMap.containsKey(darkClusterName))\n+          DarkClusterConfigMap updatedDarkConfigMap = _facilities.getClusterInfoProvider().getDarkClusterConfigMap(_sourceClusterName);\n+\n+          // get the existing entries in the strategy map", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5b1c36f1716e9a03a2c2d1cc903534aba3911a30"}, "originalPosition": 71}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "46e68db3397811044fd7b2391d558b9d78aea1ed", "author": {"user": null}, "url": "https://github.com/linkedin/rest.li/commit/46e68db3397811044fd7b2391d558b9d78aea1ed", "committedDate": "2020-06-10T01:09:23Z", "message": "addressed comments."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cf6e02abc88acd587abb1551a144aafa53b181b6", "author": {"user": null}, "url": "https://github.com/linkedin/rest.li/commit/cf6e02abc88acd587abb1551a144aafa53b181b6", "committedDate": "2020-06-10T20:04:42Z", "message": "change signature of DarkClusterStrategyFactory.get to remove unused DarkClusterConfig. This is an internal\napi only used within this module, so it's safe to change."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "01ea6a9a195b0c3bca7ec7b67e7608053ce3da2e", "author": {"user": null}, "url": "https://github.com/linkedin/rest.li/commit/01ea6a9a195b0c3bca7ec7b67e7608053ce3da2e", "committedDate": "2020-06-10T20:30:21Z", "message": "additional changes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e07f1ba0526d8f53729448ce5fd3d4eb62dcd273", "author": {"user": null}, "url": "https://github.com/linkedin/rest.li/commit/e07f1ba0526d8f53729448ce5fd3d4eb62dcd273", "committedDate": "2020-06-10T22:12:28Z", "message": "additional changes"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4831, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}