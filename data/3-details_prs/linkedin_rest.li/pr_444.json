{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAyODk5MzAz", "number": 444, "title": "Minimize memory copies and object creation during encoding", "bodyText": "Minimize memory copies and object creation during encoding\nUse String switch instead of map lookup in traverse callback for better performance\nReset isTraversing when cloning\nCache data objects in wrapped mapped/lists lazily on get\nCompute dataComplexHashCode lazily for DataList and DataMap", "createdAt": "2020-10-13T22:03:09Z", "url": "https://github.com/linkedin/rest.li/pull/444", "merged": true, "mergeCommit": {"oid": "bf5693fed8ac4aa3f54b0868583f0558c927bb44"}, "closed": true, "closedAt": "2020-10-16T01:37:02Z", "author": {"login": "karthikrg"}, "timelineItems": {"totalCount": 18, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdSR1SqAFqTUwNzkxMjA1MQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdS7okbgBqjM4ODQxMjM3ODQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA3OTEyMDUx", "url": "https://github.com/linkedin/rest.li/pull/444#pullrequestreview-507912051", "createdAt": "2020-10-14T00:14:27Z", "commit": {"oid": "df81658d53646c99a7e84fd0325400446916b681"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwMDoxNDoyOFrOHg9wqQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwMDoxNDoyOFrOHg9wqQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDMyODM2MQ==", "bodyText": "1\nPreviously it didn't handle the orderedEntrySet is null case, is this condition handling here a bug fix?\n2\nAnd line 490's callback.orderMap(map); is getting the map's entrySet internally and return orderedEntrySet.\nBut here I see we are using map.forEach... is it actually going to do anything in the case that there is no entries?", "url": "https://github.com/linkedin/rest.li/pull/444#discussion_r504328361", "createdAt": "2020-10-14T00:14:28Z", "author": {"login": "BrianPin"}, "path": "data/src/main/java/com/linkedin/data/Data.java", "diffHunk": "@@ -491,11 +488,49 @@ private static void traverse(Object obj, TraverseCallback callback, CycleChecker\n             cycleChecker.startMap(map);\n             callback.startMap(map);\n             Iterable<Map.Entry<String, Object>> orderedEntrySet = callback.orderMap(map);\n-            for (Map.Entry<String, Object> entry : orderedEntrySet)\n+\n+            //\n+            // If the ordered entry set is null, use Java 8 forEach to avoid intermediary object\n+            // creation for better performance.\n+            //\n+            if (orderedEntrySet == null)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "df81658d53646c99a7e84fd0325400446916b681"}, "originalPosition": 40}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA3OTEzNzU3", "url": "https://github.com/linkedin/rest.li/pull/444#pullrequestreview-507913757", "createdAt": "2020-10-14T00:19:49Z", "commit": {"oid": "df81658d53646c99a7e84fd0325400446916b681"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwMDoxOTo0OVrOHg92lQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwMDoxOTo0OVrOHg92lQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDMyOTg3Nw==", "bodyText": "Is it somewhat more visible if we put this two util functions to DataMapUtils.java", "url": "https://github.com/linkedin/rest.li/pull/444#discussion_r504329877", "createdAt": "2020-10-14T00:19:49Z", "author": {"login": "BrianPin"}, "path": "data/src/main/java/com/linkedin/data/codec/DataCodec.java", "diffHunk": "@@ -54,6 +55,34 @@\n    */\n   byte[] listToBytes(DataList list) throws IOException;\n \n+  /**\n+   * Serialize a {@link DataMap} to a {@link ByteString}.\n+   *\n+   * @param map to serialize.\n+   * @return the output serialized from the {@link DataMap}.\n+   * @throws IOException if there is a serialization error.\n+   */\n+  default ByteString mapToByteString(DataMap map) throws IOException", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "df81658d53646c99a7e84fd0325400446916b681"}, "originalPosition": 19}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "df81658d53646c99a7e84fd0325400446916b681", "author": {"user": {"login": "li-kramgopa", "name": null}}, "url": "https://github.com/linkedin/rest.li/commit/df81658d53646c99a7e84fd0325400446916b681", "committedDate": "2020-10-13T21:59:44Z", "message": "Minimize memory copies and object creation during encoding"}, "afterCommit": {"oid": "7f841eab2d6c8abc762ef567da88bd6477ef1977", "author": {"user": {"login": "li-kramgopa", "name": null}}, "url": "https://github.com/linkedin/rest.li/commit/7f841eab2d6c8abc762ef567da88bd6477ef1977", "committedDate": "2020-10-14T00:46:44Z", "message": "Minimize memory copies and object creation during encoding"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7f841eab2d6c8abc762ef567da88bd6477ef1977", "author": {"user": {"login": "li-kramgopa", "name": null}}, "url": "https://github.com/linkedin/rest.li/commit/7f841eab2d6c8abc762ef567da88bd6477ef1977", "committedDate": "2020-10-14T00:46:44Z", "message": "Minimize memory copies and object creation during encoding"}, "afterCommit": {"oid": "c3ab9d9d947ad5b6a2003f07f0607b655378b287", "author": {"user": {"login": "li-kramgopa", "name": null}}, "url": "https://github.com/linkedin/rest.li/commit/c3ab9d9d947ad5b6a2003f07f0607b655378b287", "committedDate": "2020-10-14T03:19:43Z", "message": "Minimize memory copies and object creation during encoding"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c3ab9d9d947ad5b6a2003f07f0607b655378b287", "author": {"user": {"login": "li-kramgopa", "name": null}}, "url": "https://github.com/linkedin/rest.li/commit/c3ab9d9d947ad5b6a2003f07f0607b655378b287", "committedDate": "2020-10-14T03:19:43Z", "message": "Minimize memory copies and object creation during encoding"}, "afterCommit": {"oid": "cafbb183d2e32c938fc84329a572bc2ae6652f66", "author": {"user": {"login": "li-kramgopa", "name": null}}, "url": "https://github.com/linkedin/rest.li/commit/cafbb183d2e32c938fc84329a572bc2ae6652f66", "committedDate": "2020-10-14T05:45:39Z", "message": "Minimize memory copies and object creation during encoding\nUse String switch instead of map lookup in traverse callback for better performance"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "cafbb183d2e32c938fc84329a572bc2ae6652f66", "author": {"user": {"login": "li-kramgopa", "name": null}}, "url": "https://github.com/linkedin/rest.li/commit/cafbb183d2e32c938fc84329a572bc2ae6652f66", "committedDate": "2020-10-14T05:45:39Z", "message": "Minimize memory copies and object creation during encoding\nUse String switch instead of map lookup in traverse callback for better performance"}, "afterCommit": {"oid": "8b33854e649fcf7e8c6348856aff7e272c46a41b", "author": {"user": {"login": "li-kramgopa", "name": null}}, "url": "https://github.com/linkedin/rest.li/commit/8b33854e649fcf7e8c6348856aff7e272c46a41b", "committedDate": "2020-10-15T03:42:33Z", "message": "Minimize memory copies and object creation during encoding\nUse String switch instead of map lookup in traverse callback for better performance\nReset isTraversing when cloning"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8b33854e649fcf7e8c6348856aff7e272c46a41b", "author": {"user": {"login": "li-kramgopa", "name": null}}, "url": "https://github.com/linkedin/rest.li/commit/8b33854e649fcf7e8c6348856aff7e272c46a41b", "committedDate": "2020-10-15T03:42:33Z", "message": "Minimize memory copies and object creation during encoding\nUse String switch instead of map lookup in traverse callback for better performance\nReset isTraversing when cloning"}, "afterCommit": {"oid": "69ea1478d72e41e5ea392edec9bee6468c71c97f", "author": {"user": {"login": "li-kramgopa", "name": null}}, "url": "https://github.com/linkedin/rest.li/commit/69ea1478d72e41e5ea392edec9bee6468c71c97f", "committedDate": "2020-10-15T03:45:16Z", "message": "Minimize memory copies and object creation during encoding\nUse String switch instead of map lookup in traverse callback for better performance\nReset isTraversing when cloning"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "69ea1478d72e41e5ea392edec9bee6468c71c97f", "author": {"user": {"login": "li-kramgopa", "name": null}}, "url": "https://github.com/linkedin/rest.li/commit/69ea1478d72e41e5ea392edec9bee6468c71c97f", "committedDate": "2020-10-15T03:45:16Z", "message": "Minimize memory copies and object creation during encoding\nUse String switch instead of map lookup in traverse callback for better performance\nReset isTraversing when cloning"}, "afterCommit": {"oid": "f729857dd08763310fbb6ac3a9d3844cc53274bd", "author": {"user": {"login": "li-kramgopa", "name": null}}, "url": "https://github.com/linkedin/rest.li/commit/f729857dd08763310fbb6ac3a9d3844cc53274bd", "committedDate": "2020-10-15T06:05:49Z", "message": "Minimize memory copies and object creation during encoding\nUse String switch instead of map lookup in traverse callback for better performance\nReset isTraversing when cloning\nCache data objects in wrapped mapped/lists lazily on get.\nCompute dataComplexHashCode lazily for DataList and DataMap"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA5MjUwOTAy", "url": "https://github.com/linkedin/rest.li/pull/444#pullrequestreview-509250902", "createdAt": "2020-10-15T10:49:25Z", "commit": {"oid": "f729857dd08763310fbb6ac3a9d3844cc53274bd"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA5NDk4NTA1", "url": "https://github.com/linkedin/rest.li/pull/444#pullrequestreview-509498505", "createdAt": "2020-10-15T15:20:59Z", "commit": {"oid": "f729857dd08763310fbb6ac3a9d3844cc53274bd"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxNToyMTowMFrOHiNRFQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxNToyMTowMFrOHiNRFQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTYzMDk5Nw==", "bodyText": "nit: a space after 'String,'", "url": "https://github.com/linkedin/rest.li/pull/444#discussion_r505630997", "createdAt": "2020-10-15T15:21:00Z", "author": {"login": "nickibi"}, "path": "data/src/main/java/com/linkedin/data/DataMap.java", "diffHunk": "@@ -415,17 +428,12 @@ private void instrumentAccess(Object key)\n     }\n   }\n \n-  private final static MapChecker<String,Object> _checker = new MapChecker<String,Object>()\n-  {\n-    @Override\n-    public void checkKeyValue(CommonMap<String, Object> map, String key, Object value)\n+  private final static MapChecker<String,Object> _checker = (map, key, value) -> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f729857dd08763310fbb6ac3a9d3844cc53274bd"}, "originalPosition": 46}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f729857dd08763310fbb6ac3a9d3844cc53274bd", "author": {"user": {"login": "li-kramgopa", "name": null}}, "url": "https://github.com/linkedin/rest.li/commit/f729857dd08763310fbb6ac3a9d3844cc53274bd", "committedDate": "2020-10-15T06:05:49Z", "message": "Minimize memory copies and object creation during encoding\nUse String switch instead of map lookup in traverse callback for better performance\nReset isTraversing when cloning\nCache data objects in wrapped mapped/lists lazily on get.\nCompute dataComplexHashCode lazily for DataList and DataMap"}, "afterCommit": {"oid": "9186badca8dcf0bbe49506d4f5993c383a580b73", "author": {"user": {"login": "li-kramgopa", "name": null}}, "url": "https://github.com/linkedin/rest.li/commit/9186badca8dcf0bbe49506d4f5993c383a580b73", "committedDate": "2020-10-15T17:31:00Z", "message": "Minimize memory copies and object creation during encoding\nUse String switch instead of map lookup in traverse callback for better performance\nReset isTraversing when cloning\nCache data objects in wrapped mapped/lists lazily on get.\nCompute dataComplexHashCode lazily for DataList and DataMap"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9186badca8dcf0bbe49506d4f5993c383a580b73", "author": {"user": {"login": "li-kramgopa", "name": null}}, "url": "https://github.com/linkedin/rest.li/commit/9186badca8dcf0bbe49506d4f5993c383a580b73", "committedDate": "2020-10-15T17:31:00Z", "message": "Minimize memory copies and object creation during encoding\nUse String switch instead of map lookup in traverse callback for better performance\nReset isTraversing when cloning\nCache data objects in wrapped mapped/lists lazily on get.\nCompute dataComplexHashCode lazily for DataList and DataMap"}, "afterCommit": {"oid": "d43a2a9f93a3f2b8a825d232f21ff4d994179ee5", "author": {"user": {"login": "li-kramgopa", "name": null}}, "url": "https://github.com/linkedin/rest.li/commit/d43a2a9f93a3f2b8a825d232f21ff4d994179ee5", "committedDate": "2020-10-15T18:08:01Z", "message": "Minimize memory copies and object creation during encoding\nUse String switch instead of map lookup in traverse callback for better performance\nReset isTraversing when cloning\nCache data objects in wrapped mapped/lists lazily on get.\nCompute dataComplexHashCode lazily for DataList and DataMap"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d43a2a9f93a3f2b8a825d232f21ff4d994179ee5", "author": {"user": {"login": "li-kramgopa", "name": null}}, "url": "https://github.com/linkedin/rest.li/commit/d43a2a9f93a3f2b8a825d232f21ff4d994179ee5", "committedDate": "2020-10-15T18:08:01Z", "message": "Minimize memory copies and object creation during encoding\nUse String switch instead of map lookup in traverse callback for better performance\nReset isTraversing when cloning\nCache data objects in wrapped mapped/lists lazily on get.\nCompute dataComplexHashCode lazily for DataList and DataMap"}, "afterCommit": {"oid": "37212dca1e9ebcf317a00bcdd6a1b4f31c28599c", "author": {"user": {"login": "li-kramgopa", "name": null}}, "url": "https://github.com/linkedin/rest.li/commit/37212dca1e9ebcf317a00bcdd6a1b4f31c28599c", "committedDate": "2020-10-15T20:12:03Z", "message": "Minimize memory copies and object creation during encoding\nUse String switch instead of map lookup in traverse callback for better performance\nReset isTraversing when cloning\nCache data objects in wrapped mapped/lists lazily on get.\nCompute dataComplexHashCode lazily for DataList and DataMap"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "37212dca1e9ebcf317a00bcdd6a1b4f31c28599c", "author": {"user": {"login": "li-kramgopa", "name": null}}, "url": "https://github.com/linkedin/rest.li/commit/37212dca1e9ebcf317a00bcdd6a1b4f31c28599c", "committedDate": "2020-10-15T20:12:03Z", "message": "Minimize memory copies and object creation during encoding\nUse String switch instead of map lookup in traverse callback for better performance\nReset isTraversing when cloning\nCache data objects in wrapped mapped/lists lazily on get.\nCompute dataComplexHashCode lazily for DataList and DataMap"}, "afterCommit": {"oid": "0ba209566c41f13aca5afabecfe54d58f7f3ed64", "author": {"user": {"login": "li-kramgopa", "name": null}}, "url": "https://github.com/linkedin/rest.li/commit/0ba209566c41f13aca5afabecfe54d58f7f3ed64", "committedDate": "2020-10-15T21:01:40Z", "message": "Minimize memory copies and object creation during encoding\nUse String switch instead of map lookup in traverse callback for better performance\nReset isTraversing when cloning\nCache data objects in wrapped mapped/lists lazily on get.\nCompute dataComplexHashCode lazily for DataList and DataMap"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0ba209566c41f13aca5afabecfe54d58f7f3ed64", "author": {"user": {"login": "li-kramgopa", "name": null}}, "url": "https://github.com/linkedin/rest.li/commit/0ba209566c41f13aca5afabecfe54d58f7f3ed64", "committedDate": "2020-10-15T21:01:40Z", "message": "Minimize memory copies and object creation during encoding\nUse String switch instead of map lookup in traverse callback for better performance\nReset isTraversing when cloning\nCache data objects in wrapped mapped/lists lazily on get.\nCompute dataComplexHashCode lazily for DataList and DataMap"}, "afterCommit": {"oid": "2cd9b8fe800d74111d93cc34c455c455c3b1e1c0", "author": {"user": {"login": "li-kramgopa", "name": null}}, "url": "https://github.com/linkedin/rest.li/commit/2cd9b8fe800d74111d93cc34c455c455c3b1e1c0", "committedDate": "2020-10-15T23:26:28Z", "message": "Minimize memory copies and object creation during encoding\nUse String switch instead of map lookup in traverse callback for better performance\nReset isTraversing when cloning\nCache data objects in wrapped mapped/lists lazily on get.\nCompute dataComplexHashCode lazily for DataList and DataMap"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2cd9b8fe800d74111d93cc34c455c455c3b1e1c0", "author": {"user": {"login": "li-kramgopa", "name": null}}, "url": "https://github.com/linkedin/rest.li/commit/2cd9b8fe800d74111d93cc34c455c455c3b1e1c0", "committedDate": "2020-10-15T23:26:28Z", "message": "Minimize memory copies and object creation during encoding\nUse String switch instead of map lookup in traverse callback for better performance\nReset isTraversing when cloning\nCache data objects in wrapped mapped/lists lazily on get.\nCompute dataComplexHashCode lazily for DataList and DataMap"}, "afterCommit": {"oid": "af799ef1278b56c461c761fe826af0720294e0fb", "author": {"user": {"login": "li-kramgopa", "name": null}}, "url": "https://github.com/linkedin/rest.li/commit/af799ef1278b56c461c761fe826af0720294e0fb", "committedDate": "2020-10-15T23:52:16Z", "message": "Minimize memory copies and object creation during encoding\nUse String switch instead of map lookup in traverse callback for better performance\nReset isTraversing when cloning\nCache data objects in wrapped mapped/lists lazily on get.\nCompute dataComplexHashCode lazily for DataList and DataMap"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c50f2ea9be786becb6cd9d3c1affb4e3aa8c1594", "author": {"user": {"login": "li-kramgopa", "name": null}}, "url": "https://github.com/linkedin/rest.li/commit/c50f2ea9be786becb6cd9d3c1affb4e3aa8c1594", "committedDate": "2020-10-16T00:56:22Z", "message": "Minimize memory copies and object creation during encoding\nUse String switch instead of map lookup in traverse callback for better performance\nReset isTraversing when cloning\nCache data objects in wrapped mapped/lists lazily on get.\nCompute dataComplexHashCode lazily for DataList and DataMap"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "af799ef1278b56c461c761fe826af0720294e0fb", "author": {"user": {"login": "li-kramgopa", "name": null}}, "url": "https://github.com/linkedin/rest.li/commit/af799ef1278b56c461c761fe826af0720294e0fb", "committedDate": "2020-10-15T23:52:16Z", "message": "Minimize memory copies and object creation during encoding\nUse String switch instead of map lookup in traverse callback for better performance\nReset isTraversing when cloning\nCache data objects in wrapped mapped/lists lazily on get.\nCompute dataComplexHashCode lazily for DataList and DataMap"}, "afterCommit": {"oid": "c50f2ea9be786becb6cd9d3c1affb4e3aa8c1594", "author": {"user": {"login": "li-kramgopa", "name": null}}, "url": "https://github.com/linkedin/rest.li/commit/c50f2ea9be786becb6cd9d3c1affb4e3aa8c1594", "committedDate": "2020-10-16T00:56:22Z", "message": "Minimize memory copies and object creation during encoding\nUse String switch instead of map lookup in traverse callback for better performance\nReset isTraversing when cloning\nCache data objects in wrapped mapped/lists lazily on get.\nCompute dataComplexHashCode lazily for DataList and DataMap"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4707, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}