{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAzNzI3ODAy", "number": 446, "title": "Add partition support in relative load balancer inGraph", "bodyText": "Background\nFor relative load balancer onboarding, we're trying to find different type of services to onboard, one type is services with partitions. However, one problem with today's inGraph is that we always emit metrics for partition 0, it turns out one of the client that I'm onboarding, they only talk to partition 1, they never talk to partition 0.\nTo perfectly solve this problem, I think we should fire one inGraph for each partition, however, it's really hard since at inGraph registration time, we do not know how many partitions are there, partitions can be very dynamic. So the trick here is to always emit metrics for the 1st added partition, so that at least we have some meaningful data.\nChanges include\n\nEmit metrics for the first added partition\nAdd a small debug log when health score reduces", "createdAt": "2020-10-15T00:29:57Z", "url": "https://github.com/linkedin/rest.li/pull/446", "merged": true, "mergeCommit": {"oid": "2b5666f0afac501d8080ba87834ead4c5e10e16b"}, "closed": true, "closedAt": "2020-10-15T22:54:22Z", "author": {"login": "rachelhanhan"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdSmgxyAH2gAyNTAzNzI3ODAyOjVkZmY1YWVmZDE0OTFmMmIxMWZjOTJiMzczMDQxYTczMmVjNGRkMjc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdS4nNbgFqTUwOTgyMDgyMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "5dff5aefd1491f2b11fc92b373041a732ec4dd27", "author": {"user": {"login": "rachelhanhan", "name": "Ruxin Han"}}, "url": "https://github.com/linkedin/rest.li/commit/5dff5aefd1491f2b11fc92b373041a732ec4dd27", "committedDate": "2020-10-15T00:20:04Z", "message": "Add partition support in relative load balancer inGraph"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA5MTYxNTIy", "url": "https://github.com/linkedin/rest.li/pull/446#pullrequestreview-509161522", "createdAt": "2020-10-15T08:56:05Z", "commit": {"oid": "5dff5aefd1491f2b11fc92b373041a732ec4dd27"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwODo1NjowNVrOHh9Rgw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwOToxMTo1M1rOHh-GBQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTM2ODk2Mw==", "bodyText": "getFirstValidPartitionId()?", "url": "https://github.com/linkedin/rest.li/pull/446#discussion_r505368963", "createdAt": "2020-10-15T08:56:05Z", "author": {"login": "rickzx"}, "path": "d2/src/main/java/com/linkedin/d2/balancer/strategies/relative/StateUpdater.java", "diffHunk": "@@ -140,14 +141,19 @@ else if (clusterGenerationId != _partitionLoadBalancerStateMap.get(partitionId).\n         : _partitionLoadBalancerStateMap.get(partitionId).getPointsMap();\n   }\n \n-  /**\n-   * Exposed for testings\n-   */\n   PartitionState getPartitionState(int partitionId)\n   {\n     return _partitionLoadBalancerStateMap.get(partitionId);\n   }\n \n+  /**\n+   * Return the first valid partition id. This is mainly used for monitoring at least one valid partition.\n+   */\n+  int getValidPartitionId()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5dff5aefd1491f2b11fc92b373041a732ec4dd27"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTM2OTE4Ng==", "bodyText": "getFirstValidPartitionId()?", "url": "https://github.com/linkedin/rest.li/pull/446#discussion_r505369186", "createdAt": "2020-10-15T08:56:19Z", "author": {"login": "rickzx"}, "path": "d2/src/main/java/com/linkedin/d2/balancer/strategies/relative/RelativeLoadBalancerStrategy.java", "diffHunk": "@@ -96,6 +96,11 @@ public PartitionState getPartitionState(int partitionId)\n     return _stateUpdater.getPartitionState(partitionId);\n   }\n \n+  public int getValidPartitionId()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5dff5aefd1491f2b11fc92b373041a732ec4dd27"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTM4MjQwNQ==", "bodyText": "Just to confirm, in a real situation, this function should always return true right?", "url": "https://github.com/linkedin/rest.li/pull/446#discussion_r505382405", "createdAt": "2020-10-15T09:11:53Z", "author": {"login": "rickzx"}, "path": "d2/src/main/java/com/linkedin/d2/jmx/RelativeLoadBalancerStrategyJmx.java", "diffHunk": "@@ -98,12 +119,17 @@ public double getMaxLatencyRelativeFactor()\n   @Override\n   public double getNthPercentileLatencyRelativeFactor(double pct)\n   {\n+    if (isPartitionDataUnavailable())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5dff5aefd1491f2b11fc92b373041a732ec4dd27"}, "originalPosition": 81}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e1eeca07de710bddae135cd7af85ce69bec5591e", "author": {"user": {"login": "rachelhanhan", "name": "Ruxin Han"}}, "url": "https://github.com/linkedin/rest.li/commit/e1eeca07de710bddae135cd7af85ce69bec5591e", "committedDate": "2020-10-15T21:12:03Z", "message": "Address comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA5ODIwODIy", "url": "https://github.com/linkedin/rest.li/pull/446#pullrequestreview-509820822", "createdAt": "2020-10-15T21:25:23Z", "commit": {"oid": "e1eeca07de710bddae135cd7af85ce69bec5591e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4712, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}