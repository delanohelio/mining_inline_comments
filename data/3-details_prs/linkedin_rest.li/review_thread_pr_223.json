{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkwMTU2NzU2", "number": 223, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQwMToxMjo1OFrODo8GOQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQwMToxNzoyMlrODo8IlA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0MjU0MjY1OnYy", "diffSide": "RIGHT", "path": "gradle-plugins/src/main/java/com/linkedin/pegasus/gradle/tasks/ValidateSchemaAnnotationTask.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQwMToxMjo1OFrOF3zOHA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQwMToxMjo1OFrOF3zOHA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDA1NTE5Ng==", "bodyText": "Is this assuming one handler per jar?", "url": "https://github.com/linkedin/rest.li/pull/223#discussion_r394055196", "createdAt": "2020-03-18T01:12:58Z", "author": {"login": "karthikbalasub"}, "path": "gradle-plugins/src/main/java/com/linkedin/pegasus/gradle/tasks/ValidateSchemaAnnotationTask.java", "diffHunk": "@@ -89,6 +91,15 @@ public void validateSchemaAnnotation() throws IOException\n \n     getProject().getLogger().info(\"started schema annotation validation\");\n \n+    int expectedHandlersNumber = ((DefaultConfiguration) _handlerJarPath).getAllDependencies().size();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b58d96ba46f9b9a87df7f94a3d3f8ecd792e3f28"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0MjU0ODY4OnYy", "diffSide": "RIGHT", "path": "gradle-plugins/src/main/java/com/linkedin/pegasus/gradle/tasks/ValidateSchemaAnnotationTask.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQwMToxNzoyMlrOF3zR8Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQwNjo1NDozOFrOF34Lqw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDA1NjE3Nw==", "bodyText": "This wouldn't work if one Jar has more than one handle and another fails to load. A better check would be to ensure atleast one handler per jar dependency.\nIdeally, we shouldn't use these heuristics. We should provide a way for users to explicity say which class or package to load and we should error if it cannot be loaded.", "url": "https://github.com/linkedin/rest.li/pull/223#discussion_r394056177", "createdAt": "2020-03-18T01:17:22Z", "author": {"login": "karthikbalasub"}, "path": "gradle-plugins/src/main/java/com/linkedin/pegasus/gradle/tasks/ValidateSchemaAnnotationTask.java", "diffHunk": "@@ -108,12 +119,16 @@ public void validateSchemaAnnotation() throws IOException\n       scanHandlersInClassPathJar(f, foundClassNames, scannedClass);\n     }\n \n-    // skip if no handlers configured or found\n-    if (handlerJarPathUrls.size() == 0 || foundClassNames.size() == 0)\n+    // For now, every schema annotation handler should be in its own module\n+    // if the number of found handlers doesn't match number of configured modules, will throw exception\n+    if (foundClassNames.size() != expectedHandlersNumber)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b58d96ba46f9b9a87df7f94a3d3f8ecd792e3f28"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDA2MDM3Mg==", "bodyText": "I thought about this, and I know you are referring to something like\nfoundClassNames.size() < expectedHandlersNumber\nThat Is why I mentioned:\n\"every schema annotation handler should be in its own module\". Can we enforce this rule?", "url": "https://github.com/linkedin/rest.li/pull/223#discussion_r394060372", "createdAt": "2020-03-18T01:35:32Z", "author": {"login": "junchuanwang"}, "path": "gradle-plugins/src/main/java/com/linkedin/pegasus/gradle/tasks/ValidateSchemaAnnotationTask.java", "diffHunk": "@@ -108,12 +119,16 @@ public void validateSchemaAnnotation() throws IOException\n       scanHandlersInClassPathJar(f, foundClassNames, scannedClass);\n     }\n \n-    // skip if no handlers configured or found\n-    if (handlerJarPathUrls.size() == 0 || foundClassNames.size() == 0)\n+    // For now, every schema annotation handler should be in its own module\n+    // if the number of found handlers doesn't match number of configured modules, will throw exception\n+    if (foundClassNames.size() != expectedHandlersNumber)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDA1NjE3Nw=="}, "originalCommit": {"oid": "b58d96ba46f9b9a87df7f94a3d3f8ecd792e3f28"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDEzNjQ5MQ==", "bodyText": "It is hard to enforce. I think this change is okay for now, but create a backlog ticket to fix this cleanly. we could discuss during ideas meeting", "url": "https://github.com/linkedin/rest.li/pull/223#discussion_r394136491", "createdAt": "2020-03-18T06:54:38Z", "author": {"login": "karthikbalasub"}, "path": "gradle-plugins/src/main/java/com/linkedin/pegasus/gradle/tasks/ValidateSchemaAnnotationTask.java", "diffHunk": "@@ -108,12 +119,16 @@ public void validateSchemaAnnotation() throws IOException\n       scanHandlersInClassPathJar(f, foundClassNames, scannedClass);\n     }\n \n-    // skip if no handlers configured or found\n-    if (handlerJarPathUrls.size() == 0 || foundClassNames.size() == 0)\n+    // For now, every schema annotation handler should be in its own module\n+    // if the number of found handlers doesn't match number of configured modules, will throw exception\n+    if (foundClassNames.size() != expectedHandlersNumber)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDA1NjE3Nw=="}, "originalCommit": {"oid": "b58d96ba46f9b9a87df7f94a3d3f8ecd792e3f28"}, "originalPosition": 34}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 630, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}