{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQzNjIxMTM1", "number": 346, "title": "Disable string interning in Jackson JSON since it causes GC issues", "bodyText": "Make JsonFactory parameterized so that multiple codec instances can share the same factory if necessary\nMake the default factory a static singleton for factory reuse to minimize garbage\n\nInterning seems to be messing with batch_get where the keys are not schema but are values, resulting in a large number of strings being interned.", "createdAt": "2020-07-02T16:19:50Z", "url": "https://github.com/linkedin/rest.li/pull/346", "merged": true, "mergeCommit": {"oid": "dbc5a1bf60125dda76f37154b12bd13983c9031f"}, "closed": true, "closedAt": "2020-07-02T19:10:12Z", "author": {"login": "karthikrg"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcxBjh2gFqTQ0MTg1NzI0Mw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcxDNMjAFqTQ0MTkzMzczNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQxODU3MjQz", "url": "https://github.com/linkedin/rest.li/pull/346#pullrequestreview-441857243", "createdAt": "2020-07-02T16:37:04Z", "commit": {"oid": "3486986921489a51a50ffb3ccb6e61f71c5bfe1d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxNjozNzowNVrOGsVWCQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxNjozNzowNVrOGsVWCQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTE0MDIzMw==", "bodyText": "this is shouldn't be there in abstract class right? what if someone wants to override it?\nsame for other places", "url": "https://github.com/linkedin/rest.li/pull/346#discussion_r449140233", "createdAt": "2020-07-02T16:37:05Z", "author": {"login": "aman1309"}, "path": "data/src/main/java/com/linkedin/data/codec/entitystream/AbstractJacksonDataEncoder.java", "diffHunk": "@@ -46,12 +46,16 @@ protected AbstractJacksonDataEncoder(JsonFactory jsonFactory, DataMap dataMap, i\n   {\n     super(dataMap, bufferSize);\n     _jsonFactory = jsonFactory;\n+    // Disable field name interning since it causes GC issues.\n+    _jsonFactory.disable(JsonFactory.Feature.INTERN_FIELD_NAMES);\n   }\n \n   protected AbstractJacksonDataEncoder(JsonFactory jsonFactory, DataList dataList, int bufferSize)\n   {\n     super(dataList, bufferSize);\n     _jsonFactory = jsonFactory;\n+    // Disable field name interning since it causes GC issues.\n+    _jsonFactory.disable(JsonFactory.Feature.INTERN_FIELD_NAMES);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3486986921489a51a50ffb3ccb6e61f71c5bfe1d"}, "originalPosition": 13}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQxODU3ODk4", "url": "https://github.com/linkedin/rest.li/pull/346#pullrequestreview-441857898", "createdAt": "2020-07-02T16:38:00Z", "commit": {"oid": "3486986921489a51a50ffb3ccb6e61f71c5bfe1d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxNjozODowMFrOGsVX_Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxNjozODowMFrOGsVX_Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTE0MDczMw==", "bodyText": "not required if you're doing it in abstract classes", "url": "https://github.com/linkedin/rest.li/pull/346#discussion_r449140733", "createdAt": "2020-07-02T16:38:00Z", "author": {"login": "aman1309"}, "path": "data/src/main/java/com/linkedin/data/codec/JacksonDataCodec.java", "diffHunk": "@@ -42,13 +42,24 @@\n  */\n public class JacksonDataCodec extends AbstractJacksonDataCodec implements TextDataCodec\n {\n+  /**\n+   * Default factory to be shared by all codec instances. This is done to maximize factory reuse for\n+   * performance reasons as recommended by Jackson authors.\n+   *\n+   * <a href=\"https://github.com/FasterXML/jackson-docs/wiki/Presentation:-Jackson-Performance\">Jackson Performance</a>\n+   */\n+  private static final JsonFactory JSON_FACTORY = new JsonFactory();\n+  static {\n+    JSON_FACTORY.disable(JsonFactory.Feature.INTERN_FIELD_NAMES);\n+  }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3486986921489a51a50ffb3ccb6e61f71c5bfe1d"}, "originalPosition": 13}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3486986921489a51a50ffb3ccb6e61f71c5bfe1d", "author": {"user": {"login": "li-kramgopa", "name": null}}, "url": "https://github.com/linkedin/rest.li/commit/3486986921489a51a50ffb3ccb6e61f71c5bfe1d", "committedDate": "2020-07-02T16:18:32Z", "message": "Disable string interning in Jackson JSON since it causes GC issues. Make JsonFactory parameterized so that multiple codec instances can share the same factory if necessary"}, "afterCommit": {"oid": "3af70bd4b0c28e5ef5ab9a76b8a7b0c7c98e01ab", "author": {"user": {"login": "li-kramgopa", "name": null}}, "url": "https://github.com/linkedin/rest.li/commit/3af70bd4b0c28e5ef5ab9a76b8a7b0c7c98e01ab", "committedDate": "2020-07-02T16:46:17Z", "message": "Disable string interning in Jackson JSON since it causes GC issues. Make JsonFactory parameterized so that multiple codec instances can share the same factory if necessary"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3af70bd4b0c28e5ef5ab9a76b8a7b0c7c98e01ab", "author": {"user": {"login": "li-kramgopa", "name": null}}, "url": "https://github.com/linkedin/rest.li/commit/3af70bd4b0c28e5ef5ab9a76b8a7b0c7c98e01ab", "committedDate": "2020-07-02T16:46:17Z", "message": "Disable string interning in Jackson JSON since it causes GC issues. Make JsonFactory parameterized so that multiple codec instances can share the same factory if necessary"}, "afterCommit": {"oid": "98b98a7d66a92ad2023c9fc833fc24c5cfab1cb1", "author": {"user": {"login": "li-kramgopa", "name": null}}, "url": "https://github.com/linkedin/rest.li/commit/98b98a7d66a92ad2023c9fc833fc24c5cfab1cb1", "committedDate": "2020-07-02T16:53:48Z", "message": "Disable string interning in Jackson JSON since it causes GC issues. Make JsonFactory parameterized so that multiple codec instances can share the same factory if necessary"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQxODcwNTkz", "url": "https://github.com/linkedin/rest.li/pull/346#pullrequestreview-441870593", "createdAt": "2020-07-02T16:55:54Z", "commit": {"oid": "98b98a7d66a92ad2023c9fc833fc24c5cfab1cb1"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQxODgzNDk4", "url": "https://github.com/linkedin/rest.li/pull/346#pullrequestreview-441883498", "createdAt": "2020-07-02T17:13:09Z", "commit": {"oid": "98b98a7d66a92ad2023c9fc833fc24c5cfab1cb1"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxNzoxMzowOVrOGsWgyg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxNzoxMzo1OFrOGsWi9w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTE1OTM3MA==", "bodyText": "This wouldn't allow someone to override the interning feature. Subclasses cannot override this behavior.\nSame for the decoder.", "url": "https://github.com/linkedin/rest.li/pull/346#discussion_r449159370", "createdAt": "2020-07-02T17:13:09Z", "author": {"login": "karthikbalasub"}, "path": "data/src/main/java/com/linkedin/data/codec/entitystream/AbstractJacksonDataEncoder.java", "diffHunk": "@@ -46,12 +46,16 @@ protected AbstractJacksonDataEncoder(JsonFactory jsonFactory, DataMap dataMap, i\n   {\n     super(dataMap, bufferSize);\n     _jsonFactory = jsonFactory;\n+    // Disable field name interning since it causes GC issues.\n+    _jsonFactory.disable(JsonFactory.Feature.INTERN_FIELD_NAMES);\n   }\n \n   protected AbstractJacksonDataEncoder(JsonFactory jsonFactory, DataList dataList, int bufferSize)\n   {\n     super(dataList, bufferSize);\n     _jsonFactory = jsonFactory;\n+    // Disable field name interning since it causes GC issues.\n+    _jsonFactory.disable(JsonFactory.Feature.INTERN_FIELD_NAMES);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTE0MDIzMw=="}, "originalCommit": {"oid": "3486986921489a51a50ffb3ccb6e61f71c5bfe1d"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTE1OTkyNw==", "bodyText": "This means it wouldn't be possible to override this behavior to enable interning", "url": "https://github.com/linkedin/rest.li/pull/346#discussion_r449159927", "createdAt": "2020-07-02T17:13:58Z", "author": {"login": "karthikbalasub"}, "path": "data/src/main/java/com/linkedin/data/codec/AbstractJacksonDataCodec.java", "diffHunk": "@@ -51,13 +51,26 @@\n  */\n public abstract class AbstractJacksonDataCodec implements DataCodec\n {\n+  /**\n+   * Default factory to be shared between all jackson JSON codec instances. This is done to maximize factory reuse for\n+   * performance reasons as recommended by Jackson authors.\n+   *\n+   * <a href=\"https://github.com/FasterXML/jackson-docs/wiki/Presentation:-Jackson-Performance\">Jackson Performance</a>\n+   */\n+  public static final JsonFactory JSON_FACTORY = new JsonFactory();\n+  static {\n+    JSON_FACTORY.disable(JsonFactory.Feature.INTERN_FIELD_NAMES);\n+  }\n+\n   protected static final int DEFAULT_BUFFER_SIZE = 4096;\n \n   protected final JsonFactory _factory;\n \n   protected AbstractJacksonDataCodec(JsonFactory factory)\n   {\n     _factory = factory;\n+    // Disable string interning since it causes GC issues.\n+    _factory.disable(JsonFactory.Feature.INTERN_FIELD_NAMES);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "98b98a7d66a92ad2023c9fc833fc24c5cfab1cb1"}, "originalPosition": 23}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "873730ea07343380d5d797cd9893b75adb9b06df", "author": {"user": {"login": "li-kramgopa", "name": null}}, "url": "https://github.com/linkedin/rest.li/commit/873730ea07343380d5d797cd9893b75adb9b06df", "committedDate": "2020-07-02T18:29:12Z", "message": "Disable string interning by default in Jackson JSON since it causes GC issues.\nMake JsonFactory parameterized so that multiple codec instances can share the same factory if necessary"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "98b98a7d66a92ad2023c9fc833fc24c5cfab1cb1", "author": {"user": {"login": "li-kramgopa", "name": null}}, "url": "https://github.com/linkedin/rest.li/commit/98b98a7d66a92ad2023c9fc833fc24c5cfab1cb1", "committedDate": "2020-07-02T16:53:48Z", "message": "Disable string interning in Jackson JSON since it causes GC issues. Make JsonFactory parameterized so that multiple codec instances can share the same factory if necessary"}, "afterCommit": {"oid": "873730ea07343380d5d797cd9893b75adb9b06df", "author": {"user": {"login": "li-kramgopa", "name": null}}, "url": "https://github.com/linkedin/rest.li/commit/873730ea07343380d5d797cd9893b75adb9b06df", "committedDate": "2020-07-02T18:29:12Z", "message": "Disable string interning by default in Jackson JSON since it causes GC issues.\nMake JsonFactory parameterized so that multiple codec instances can share the same factory if necessary"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQxOTMzNzM1", "url": "https://github.com/linkedin/rest.li/pull/346#pullrequestreview-441933735", "createdAt": "2020-07-02T18:32:30Z", "commit": {"oid": "873730ea07343380d5d797cd9893b75adb9b06df"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4867, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}