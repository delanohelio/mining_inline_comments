{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkwNjQyNTM5", "number": 417, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQwMjoxNzo1N1rOEl5phA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQwMjozMjozMVrOEl5xWg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4MTc3Mjg0OnYy", "diffSide": "RIGHT", "path": "generator/src/main/java/com/linkedin/pegasus/generator/FileFormatDataSchemaParser.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQwMjoxNzo1N1rOHVoQ7Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQwMjo1ODowOFrOHVovlg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjQ0MTgzNw==", "bodyText": "Should this be public since it is meant to be used by others", "url": "https://github.com/linkedin/rest.li/pull/417#discussion_r492441837", "createdAt": "2020-09-22T02:17:57Z", "author": {"login": "BrianPin"}, "path": "generator/src/main/java/com/linkedin/pegasus/generator/FileFormatDataSchemaParser.java", "diffHunk": "@@ -62,10 +63,15 @@ public FileFormatDataSchemaParser(String resolverPath, DataSchemaResolver schema\n     _schemaParserFactory = schemaParserFactory;\n   }\n \n-  public DataSchemaParser.ParseResult parseSources(String sources[]) throws IOException\n+  public DataSchemaParser.ParseResult parseSources(String[] sources) throws IOException\n   {\n     final DataSchemaParser.ParseResult result = new DataSchemaParser.ParseResult();\n+    parseSources(sources, result);\n+    return result;\n+  }\n \n+  void parseSources(String[] sources, DataSchemaParser.ParseResult result) throws IOException", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "939460b48c98f400e7f58b66222d2a2e38ac3d51"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjQ0MzAyMw==", "bodyText": "I think it is only used in DataSchemaParser, so package private looks like a right approach to me.\n@BrianPin why do you think we need to make a new API of FileFormatDataSchemaParser?", "url": "https://github.com/linkedin/rest.li/pull/417#discussion_r492443023", "createdAt": "2020-09-22T02:24:00Z", "author": {"login": "nickibi"}, "path": "generator/src/main/java/com/linkedin/pegasus/generator/FileFormatDataSchemaParser.java", "diffHunk": "@@ -62,10 +63,15 @@ public FileFormatDataSchemaParser(String resolverPath, DataSchemaResolver schema\n     _schemaParserFactory = schemaParserFactory;\n   }\n \n-  public DataSchemaParser.ParseResult parseSources(String sources[]) throws IOException\n+  public DataSchemaParser.ParseResult parseSources(String[] sources) throws IOException\n   {\n     final DataSchemaParser.ParseResult result = new DataSchemaParser.ParseResult();\n+    parseSources(sources, result);\n+    return result;\n+  }\n \n+  void parseSources(String[] sources, DataSchemaParser.ParseResult result) throws IOException", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjQ0MTgzNw=="}, "originalCommit": {"oid": "939460b48c98f400e7f58b66222d2a2e38ac3d51"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjQ0OTY4Ng==", "bodyText": "+1 on Yingjie's comment. It's not meant for public consumption, at least not yet. Keeping things initially restricted makes it easier to make changes later.", "url": "https://github.com/linkedin/rest.li/pull/417#discussion_r492449686", "createdAt": "2020-09-22T02:58:08Z", "author": {"login": "evanw555"}, "path": "generator/src/main/java/com/linkedin/pegasus/generator/FileFormatDataSchemaParser.java", "diffHunk": "@@ -62,10 +63,15 @@ public FileFormatDataSchemaParser(String resolverPath, DataSchemaResolver schema\n     _schemaParserFactory = schemaParserFactory;\n   }\n \n-  public DataSchemaParser.ParseResult parseSources(String sources[]) throws IOException\n+  public DataSchemaParser.ParseResult parseSources(String[] sources) throws IOException\n   {\n     final DataSchemaParser.ParseResult result = new DataSchemaParser.ParseResult();\n+    parseSources(sources, result);\n+    return result;\n+  }\n \n+  void parseSources(String[] sources, DataSchemaParser.ParseResult result) throws IOException", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjQ0MTgzNw=="}, "originalCommit": {"oid": "939460b48c98f400e7f58b66222d2a2e38ac3d51"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4MTc4Njc3OnYy", "diffSide": "RIGHT", "path": "generator/src/main/java/com/linkedin/pegasus/generator/FileFormatDataSchemaParser.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQwMjoyNzo1M1rOHVoYqA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQwMjo1NTo1M1rOHVotzA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjQ0MzgxNg==", "bodyText": "Do you mind removing this unused constant in your PR?", "url": "https://github.com/linkedin/rest.li/pull/417#discussion_r492443816", "createdAt": "2020-09-22T02:27:53Z", "author": {"login": "nickibi"}, "path": "generator/src/main/java/com/linkedin/pegasus/generator/FileFormatDataSchemaParser.java", "diffHunk": "@@ -48,7 +48,8 @@\n  * @author Keren Jin\n  * @author Joe Betz\n  */\n-public class FileFormatDataSchemaParser {\n+public class FileFormatDataSchemaParser\n+{\n   static final String SCHEMA_PATH_PREFIX = SchemaDirectoryName.PEGASUS.getName() + \"/\";\n   static final String EXTENSION_PATH_ENTRY = SchemaDirectoryName.EXTENSIONS.getName() + \"/\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "939460b48c98f400e7f58b66222d2a2e38ac3d51"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjQ0OTIyOA==", "bodyText": "It's package-private, so theoretically it can be referenced by a subclass. I can open a separate PR and label it as backward-incompatible.", "url": "https://github.com/linkedin/rest.li/pull/417#discussion_r492449228", "createdAt": "2020-09-22T02:55:53Z", "author": {"login": "evanw555"}, "path": "generator/src/main/java/com/linkedin/pegasus/generator/FileFormatDataSchemaParser.java", "diffHunk": "@@ -48,7 +48,8 @@\n  * @author Keren Jin\n  * @author Joe Betz\n  */\n-public class FileFormatDataSchemaParser {\n+public class FileFormatDataSchemaParser\n+{\n   static final String SCHEMA_PATH_PREFIX = SchemaDirectoryName.PEGASUS.getName() + \"/\";\n   static final String EXTENSION_PATH_ENTRY = SchemaDirectoryName.EXTENSIONS.getName() + \"/\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjQ0MzgxNg=="}, "originalCommit": {"oid": "939460b48c98f400e7f58b66222d2a2e38ac3d51"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4MTc5MjkwOnYy", "diffSide": "RIGHT", "path": "generator/src/main/java/com/linkedin/pegasus/generator/FileFormatDataSchemaParser.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQwMjozMjozMVrOHVocMg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQwMzoyMzozMlrOHVpEPQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjQ0NDcyMg==", "bodyText": "The _resolverPath is not used anywhere, but It's an input of this class's constructor. I am thinking about shall we create a new constructor which remove the resolverPath as input. We could deprecate the current constructor later. But it is totally out of the scope of this PR, I just came to know it by reading this PR.", "url": "https://github.com/linkedin/rest.li/pull/417#discussion_r492444722", "createdAt": "2020-09-22T02:32:31Z", "author": {"login": "nickibi"}, "path": "generator/src/main/java/com/linkedin/pegasus/generator/FileFormatDataSchemaParser.java", "diffHunk": "@@ -48,7 +48,8 @@\n  * @author Keren Jin\n  * @author Joe Betz\n  */\n-public class FileFormatDataSchemaParser {\n+public class FileFormatDataSchemaParser\n+{\n   static final String SCHEMA_PATH_PREFIX = SchemaDirectoryName.PEGASUS.getName() + \"/\";\n   static final String EXTENSION_PATH_ENTRY = SchemaDirectoryName.EXTENSIONS.getName() + \"/\";\n   private final String _resolverPath;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "939460b48c98f400e7f58b66222d2a2e38ac3d51"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjQ0OTM4MA==", "bodyText": "Interesting... I didn't notice that \ud83e\udd14  I can make the new constructor.", "url": "https://github.com/linkedin/rest.li/pull/417#discussion_r492449380", "createdAt": "2020-09-22T02:56:39Z", "author": {"login": "evanw555"}, "path": "generator/src/main/java/com/linkedin/pegasus/generator/FileFormatDataSchemaParser.java", "diffHunk": "@@ -48,7 +48,8 @@\n  * @author Keren Jin\n  * @author Joe Betz\n  */\n-public class FileFormatDataSchemaParser {\n+public class FileFormatDataSchemaParser\n+{\n   static final String SCHEMA_PATH_PREFIX = SchemaDirectoryName.PEGASUS.getName() + \"/\";\n   static final String EXTENSION_PATH_ENTRY = SchemaDirectoryName.EXTENSIONS.getName() + \"/\";\n   private final String _resolverPath;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjQ0NDcyMg=="}, "originalCommit": {"oid": "939460b48c98f400e7f58b66222d2a2e38ac3d51"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjQ1NDk3Mw==", "bodyText": "Nevermind, deprecations should be done in minor releases. I'll deprecate it in the other PR.", "url": "https://github.com/linkedin/rest.li/pull/417#discussion_r492454973", "createdAt": "2020-09-22T03:23:32Z", "author": {"login": "evanw555"}, "path": "generator/src/main/java/com/linkedin/pegasus/generator/FileFormatDataSchemaParser.java", "diffHunk": "@@ -48,7 +48,8 @@\n  * @author Keren Jin\n  * @author Joe Betz\n  */\n-public class FileFormatDataSchemaParser {\n+public class FileFormatDataSchemaParser\n+{\n   static final String SCHEMA_PATH_PREFIX = SchemaDirectoryName.PEGASUS.getName() + \"/\";\n   static final String EXTENSION_PATH_ENTRY = SchemaDirectoryName.EXTENSIONS.getName() + \"/\";\n   private final String _resolverPath;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjQ0NDcyMg=="}, "originalCommit": {"oid": "939460b48c98f400e7f58b66222d2a2e38ac3d51"}, "originalPosition": 9}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 355, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}