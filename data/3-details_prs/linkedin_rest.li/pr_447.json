{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAzNzk3NTAw", "number": 447, "title": "Fix the bug so properties for typeref in unionWithAlias should be pro\u2026", "bodyText": "\u2026pagated during pegasus to avro translation\nThe typeref property should be brought to Avro schema translation.\nIt was not previously working with typeref in Union with Alias since typeref in unionwithalias was handled separately in callbacks.\nThis change is bring typeref properties to the union with alias.", "createdAt": "2020-10-15T04:44:53Z", "url": "https://github.com/linkedin/rest.li/pull/447", "merged": true, "mergeCommit": {"oid": "86970b31d6791f5708375a80cf7afc1ed6f0325a"}, "closed": true, "closedAt": "2020-10-21T02:53:51Z", "author": {"login": "junchuanwang"}, "timelineItems": {"totalCount": 15, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdSqRk6gH2gAyNTAzNzk3NTAwOjUzOTVhNTQyOGI3OWI2ZTIyZjIyZmY4NjI0ZWVmM2EyMzlhNjZkMGI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdUjGUbAH2gAyNTAzNzk3NTAwOmMwM2M4M2I3ZTQ0NWM0NDNhMjU4OTAwOWRjMjY4MzA2NmFkMWQ0MzI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "5395a5428b79b6e22f22ff8624eef3a239a66d0b", "author": {"user": null}, "url": "https://github.com/linkedin/rest.li/commit/5395a5428b79b6e22f22ff8624eef3a239a66d0b", "committedDate": "2020-10-15T04:43:05Z", "message": "Fix the bug so properties for typeref in unionWithAlias should be propagated during pegasus to avro\ntranslation"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA4OTM2OTg1", "url": "https://github.com/linkedin/rest.li/pull/447#pullrequestreview-508936985", "createdAt": "2020-10-15T04:58:38Z", "commit": {"oid": "5395a5428b79b6e22f22ff8624eef3a239a66d0b"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwNDo1ODozOFrOHhwx0w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwNToxMTo0OFrOHhw_cg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTE2NDI0Mw==", "bodyText": "Can you please update the javadoc for this new param?", "url": "https://github.com/linkedin/rest.li/pull/447#discussion_r505164243", "createdAt": "2020-10-15T04:58:38Z", "author": {"login": "nickibi"}, "path": "data-avro/src/main/java/com/linkedin/data/avro/PegasusUnionToAvroRecordConvertCallback.java", "diffHunk": "@@ -180,7 +187,7 @@ private DataSchema modifyFieldSchema(RecordDataSchema recordSchema, RecordDataSc\n    * @param modifiedDefaultValue The override default value to use for the specified field\n    */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5395a5428b79b6e22f22ff8624eef3a239a66d0b"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTE2NDU2Nw==", "bodyText": "nit: extra line after previous method.", "url": "https://github.com/linkedin/rest.li/pull/447#discussion_r505164567", "createdAt": "2020-10-15T04:59:40Z", "author": {"login": "nickibi"}, "path": "data-avro/src/test/java/com/linkedin/data/avro/TestSchemaTranslator.java", "diffHunk": "@@ -69,6 +69,217 @@ public void testTranslateDefaultBackwardsCompatibility()\n \n     assertSame(DataToAvroSchemaTranslationOptions.DEFAULT_OPTIONAL_DEFAULT_MODE, OptionalDefaultMode.TRANSLATE_DEFAULT);\n   }\n+  @DataProvider", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5395a5428b79b6e22f22ff8624eef3a239a66d0b"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTE2NTc2OQ==", "bodyText": "Can you please update the test method name to camelcase to follow the method naming style?\nSame as data provider name.", "url": "https://github.com/linkedin/rest.li/pull/447#discussion_r505165769", "createdAt": "2020-10-15T05:04:31Z", "author": {"login": "nickibi"}, "path": "data-avro/src/test/java/com/linkedin/data/avro/TestSchemaTranslator.java", "diffHunk": "@@ -322,6 +533,20 @@ public void testToAvroSchema_testTypeRefAnnotationPropagation(String schemaBefor\n    assertEquals(fieldsPropertiesMap, avroSchemaAsDataMap);\n  }\n \n+  @Test(dataProvider = \"toAvroSchemaData_testTypeRefAnnotationPropagation\")\n+  public void testToAvroSchema_testTypeRefAnnotationPropagation(String schemaBeforeTranslation,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5395a5428b79b6e22f22ff8624eef3a239a66d0b"}, "originalPosition": 238}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTE2NzczMA==", "bodyText": "Please add comment to explain this specific use case.", "url": "https://github.com/linkedin/rest.li/pull/447#discussion_r505167730", "createdAt": "2020-10-15T05:11:48Z", "author": {"login": "nickibi"}, "path": "data-avro/src/main/java/com/linkedin/data/avro/PegasusUnionToAvroRecordConvertCallback.java", "diffHunk": "@@ -62,6 +63,12 @@ public void callback(List<String> path, DataSchema schema)\n     {\n       DataSchema fieldSchema = field.getType().getDereferencedDataSchema();\n \n+      Map<String, Object>  propagatedProperties = new HashMap<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5395a5428b79b6e22f22ff8624eef3a239a66d0b"}, "originalPosition": 12}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "309f679eb8adab01078acf233c3ec81e2d22ba45", "author": {"user": null}, "url": "https://github.com/linkedin/rest.li/commit/309f679eb8adab01078acf233c3ec81e2d22ba45", "committedDate": "2020-10-15T05:24:40Z", "message": "Address yingjie's comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA5MTYwOTQ2", "url": "https://github.com/linkedin/rest.li/pull/447#pullrequestreview-509160946", "createdAt": "2020-10-15T08:55:25Z", "commit": {"oid": "309f679eb8adab01078acf233c3ec81e2d22ba45"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwODo1NToyNlrOHh9O4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwODo1NToyNlrOHh9O4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTM2ODI4OA==", "bodyText": "Suggest to put these test data in a file, and leave the path/file name here for the test function, and then read the file during test, this way, it is easy to see the test data clear and if we want to change it is also easy to change", "url": "https://github.com/linkedin/rest.li/pull/447#discussion_r505368288", "createdAt": "2020-10-15T08:55:26Z", "author": {"login": "BrianPin"}, "path": "data-avro/src/test/java/com/linkedin/data/avro/TestSchemaTranslator.java", "diffHunk": "@@ -70,8 +70,220 @@ public void testTranslateDefaultBackwardsCompatibility()\n     assertSame(DataToAvroSchemaTranslationOptions.DEFAULT_OPTIONAL_DEFAULT_MODE, OptionalDefaultMode.TRANSLATE_DEFAULT);\n   }\n \n+  @DataProvider\n+  public Object[][] toAvroSchemaDataTestTypeRefAnnotationPropagationUnionWithAlias()\n+  {\n+    return new Object[][]\n+        {\n+            {\n+                \"record test {\" +", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "309f679eb8adab01078acf233c3ec81e2d22ba45"}, "originalPosition": 10}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA5MjkwNzQ4", "url": "https://github.com/linkedin/rest.li/pull/447#pullrequestreview-509290748", "createdAt": "2020-10-15T11:46:30Z", "commit": {"oid": "5395a5428b79b6e22f22ff8624eef3a239a66d0b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxMTo0NjozMVrOHiD1lQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxMTo0NjozMVrOHiD1lQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTQ3NjUwMQ==", "bodyText": "nit: would be good to use test annotation instead of compliance here.", "url": "https://github.com/linkedin/rest.li/pull/447#discussion_r505476501", "createdAt": "2020-10-15T11:46:31Z", "author": {"login": "aman1309"}, "path": "data-avro/src/test/java/com/linkedin/data/avro/TestSchemaTranslator.java", "diffHunk": "@@ -69,6 +69,217 @@ public void testTranslateDefaultBackwardsCompatibility()\n \n     assertSame(DataToAvroSchemaTranslationOptions.DEFAULT_OPTIONAL_DEFAULT_MODE, OptionalDefaultMode.TRANSLATE_DEFAULT);\n   }\n+  @DataProvider\n+  public Object[][] toAvroSchemaData_testTypeRefAnnotationPropagationUnionWithAlias()\n+  {\n+    return new Object[][]\n+        {\n+            {\n+                \"record test {\" +\n+                    \"  unionTyperef:\" +\n+                    \"  @compliance = {\" +", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5395a5428b79b6e22f22ff8624eef3a239a66d0b"}, "originalPosition": 12}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA5MjkwODU3", "url": "https://github.com/linkedin/rest.li/pull/447#pullrequestreview-509290857", "createdAt": "2020-10-15T11:46:39Z", "commit": {"oid": "5395a5428b79b6e22f22ff8624eef3a239a66d0b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA5NjY4MDMy", "url": "https://github.com/linkedin/rest.li/pull/447#pullrequestreview-509668032", "createdAt": "2020-10-15T18:41:39Z", "commit": {"oid": "309f679eb8adab01078acf233c3ec81e2d22ba45"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxODo0MTo0MFrOHiVRqQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxODo0MTo0MFrOHiVRqQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTc2MjIxNw==", "bodyText": "Name consistency?  (toAvroSchemaDataTestTypeRefAnnotationPropagationUnionWithAlias)", "url": "https://github.com/linkedin/rest.li/pull/447#discussion_r505762217", "createdAt": "2020-10-15T18:41:40Z", "author": {"login": "BrianPin"}, "path": "data-avro/src/test/java/com/linkedin/data/avro/TestSchemaTranslator.java", "diffHunk": "@@ -308,11 +520,11 @@ public void testTranslateDefaultBackwardsCompatibility()\n \n  }\n \n- @Test(dataProvider = \"toAvroSchemaData_testTypeRefAnnotationPropagation\")\n- public void testToAvroSchema_testTypeRefAnnotationPropagation(String schemaBeforeTranslation,\n+ @Test(dataProvider = \"toAvroSchemaDataTestTypeRefAnnotationPropagationUnionWithAlias\")\n+ public void testToAvroSchema_testTypeRefAnnotationPropagationUnionWithAlias(String schemaBeforeTranslation,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "309f679eb8adab01078acf233c3ec81e2d22ba45"}, "originalPosition": 229}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA5OTkzMDYw", "url": "https://github.com/linkedin/rest.li/pull/447#pullrequestreview-509993060", "createdAt": "2020-10-16T03:53:00Z", "commit": {"oid": "309f679eb8adab01078acf233c3ec81e2d22ba45"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQwMzo1MzowMFrOHil4sA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQwMzo1MzowMFrOHil4sA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjAzNDM1Mg==", "bodyText": "I wonder if you can just call getMergedTyperefProperties\nlike\nMap<String, Object>  propagatedProperties = fieldSchema.getMergedTyperefProperties();\nBecause looking into the getMergedTyperefProperties function it will do the judge for you if it is a TypeRef", "url": "https://github.com/linkedin/rest.li/pull/447#discussion_r506034352", "createdAt": "2020-10-16T03:53:00Z", "author": {"login": "BrianPin"}, "path": "data-avro/src/main/java/com/linkedin/data/avro/PegasusUnionToAvroRecordConvertCallback.java", "diffHunk": "@@ -62,6 +63,14 @@ public void callback(List<String> path, DataSchema schema)\n     {\n       DataSchema fieldSchema = field.getType().getDereferencedDataSchema();\n \n+      Map<String, Object>  propagatedProperties = fieldSchema.getProperties();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "309f679eb8adab01078acf233c3ec81e2d22ba45"}, "originalPosition": 12}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a6f56d54e6aa45ba37846fc64cd88c90be728af1", "author": {"user": null}, "url": "https://github.com/linkedin/rest.li/commit/a6f56d54e6aa45ba37846fc64cd88c90be728af1", "committedDate": "2020-10-19T17:28:07Z", "message": "Update test name"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "84d8836b3acac36af2f30bdd11dd0e5d2d6385fa", "author": {"user": null}, "url": "https://github.com/linkedin/rest.li/commit/84d8836b3acac36af2f30bdd11dd0e5d2d6385fa", "committedDate": "2020-10-19T17:31:54Z", "message": "Update test name"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTExOTk3NTIz", "url": "https://github.com/linkedin/rest.li/pull/447#pullrequestreview-511997523", "createdAt": "2020-10-19T17:33:09Z", "commit": {"oid": "84d8836b3acac36af2f30bdd11dd0e5d2d6385fa"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "606bab99666a87de3924b46d89e7761027c42e29", "author": {"user": null}, "url": "https://github.com/linkedin/rest.li/commit/606bab99666a87de3924b46d89e7761027c42e29", "committedDate": "2020-10-19T23:24:54Z", "message": "Fix another bug (To put the properties back to the record that created by the Union)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "da1cc5328f2b097bbd70010d68a34684576d0f5a", "author": {"user": null}, "url": "https://github.com/linkedin/rest.li/commit/da1cc5328f2b097bbd70010d68a34684576d0f5a", "committedDate": "2020-10-19T23:27:44Z", "message": "Comment back tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3ebf3ab4ba1dd6856a39c05e487aa062ffb1ace0", "author": {"user": {"login": "junchuanwang", "name": "Junchuan Wang"}}, "url": "https://github.com/linkedin/rest.li/commit/3ebf3ab4ba1dd6856a39c05e487aa062ffb1ace0", "committedDate": "2020-10-20T19:36:25Z", "message": "Merge branch 'master' into bug_fix_typeref_unionwithalias"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c03c83b7e445c443a2589009dc2683066ad1d432", "author": {"user": null}, "url": "https://github.com/linkedin/rest.li/commit/c03c83b7e445c443a2589009dc2683066ad1d432", "committedDate": "2020-10-21T01:29:18Z", "message": "Update changelog"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4715, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}