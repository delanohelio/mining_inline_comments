{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM2MDkwOTIz", "number": 328, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QyMDo1Njo1MFrOEGg8aQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QyMTo0MToxNVrOEGhu8Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1MjY2NjY1OnYy", "diffSide": "LEFT", "path": "gradle-plugins/build.gradle", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QyMDo1Njo1MFrOGlXI1A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QyMToyNzoxOVrOGlYBag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTgyOTU4OA==", "bodyText": "NB: compile gradleApi() is applied automatically by the java-gradle-plugin, hence it's correct to remove it here", "url": "https://github.com/linkedin/rest.li/pull/328#discussion_r441829588", "createdAt": "2020-06-17T20:56:50Z", "author": {"login": "DPUkyle"}, "path": "gradle-plugins/build.gradle", "diffHunk": "@@ -1,10 +1,9 @@\n-apply plugin: 'java'\n+// Setup integTests\n+apply from: \"${buildScriptDirPath}/integTest.gradle\"\n \n dependencies {\n-  compile gradleApi()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2a87ed4d165fa4299a0201aad5a9bff7d3776105"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTg0NDA3NA==", "bodyText": "Exactly. That is why i put that note in \"integTest.gradle\"", "url": "https://github.com/linkedin/rest.li/pull/328#discussion_r441844074", "createdAt": "2020-06-17T21:27:19Z", "author": {"login": "Astro03"}, "path": "gradle-plugins/build.gradle", "diffHunk": "@@ -1,10 +1,9 @@\n-apply plugin: 'java'\n+// Setup integTests\n+apply from: \"${buildScriptDirPath}/integTest.gradle\"\n \n dependencies {\n-  compile gradleApi()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTgyOTU4OA=="}, "originalCommit": {"oid": "2a87ed4d165fa4299a0201aad5a9bff7d3776105"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1MjY3MjkxOnYy", "diffSide": "RIGHT", "path": "gradle-plugins/src/integTest/groovy/com/linkedin/pegasus/gradle/PegasusPluginIntegrationTest.groovy", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QyMDo1ODo1M1rOGlXMzw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QyMTozMjo1MFrOGlYLYA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTgzMDYwNw==", "bodyText": "This is implied by invoking GradleRunner#build - an exception is thrown if the build was not successful.\nInstead please change to result.task(': mainDataTemplateJar').outcome == TaskOutcome.SUCCESS", "url": "https://github.com/linkedin/rest.li/pull/328#discussion_r441830607", "createdAt": "2020-06-17T20:58:53Z", "author": {"login": "DPUkyle"}, "path": "gradle-plugins/src/integTest/groovy/com/linkedin/pegasus/gradle/PegasusPluginIntegrationTest.groovy", "diffHunk": "@@ -0,0 +1,28 @@\n+package com.linkedin.pegasus.gradle\n+\n+import org.gradle.testkit.runner.GradleRunner\n+import org.junit.Rule\n+import org.junit.rules.TemporaryFolder\n+import spock.lang.Specification\n+\n+class PegasusPluginIntegrationTest extends Specification {\n+  @Rule\n+  TemporaryFolder tempDir = new TemporaryFolder()\n+\n+  def 'apply pegasus plugin'() {\n+    setup:\n+    def buildFile = tempDir.newFile('build.gradle')\n+    buildFile.text = \"plugins { id 'pegasus' }\"\n+\n+    when:\n+    def result = GradleRunner.create()\n+        .withProjectDir(tempDir.root)\n+        .withPluginClasspath()\n+        .withArguments(\"mainDataTemplateJar\")\n+        .forwardOutput()\n+        .build()\n+\n+    then:\n+    result.output.contains(\"BUILD SUCCESSFUL\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2a87ed4d165fa4299a0201aad5a9bff7d3776105"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTg0NjYyNA==", "bodyText": "done.. thanks", "url": "https://github.com/linkedin/rest.li/pull/328#discussion_r441846624", "createdAt": "2020-06-17T21:32:50Z", "author": {"login": "Astro03"}, "path": "gradle-plugins/src/integTest/groovy/com/linkedin/pegasus/gradle/PegasusPluginIntegrationTest.groovy", "diffHunk": "@@ -0,0 +1,28 @@\n+package com.linkedin.pegasus.gradle\n+\n+import org.gradle.testkit.runner.GradleRunner\n+import org.junit.Rule\n+import org.junit.rules.TemporaryFolder\n+import spock.lang.Specification\n+\n+class PegasusPluginIntegrationTest extends Specification {\n+  @Rule\n+  TemporaryFolder tempDir = new TemporaryFolder()\n+\n+  def 'apply pegasus plugin'() {\n+    setup:\n+    def buildFile = tempDir.newFile('build.gradle')\n+    buildFile.text = \"plugins { id 'pegasus' }\"\n+\n+    when:\n+    def result = GradleRunner.create()\n+        .withProjectDir(tempDir.root)\n+        .withPluginClasspath()\n+        .withArguments(\"mainDataTemplateJar\")\n+        .forwardOutput()\n+        .build()\n+\n+    then:\n+    result.output.contains(\"BUILD SUCCESSFUL\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTgzMDYwNw=="}, "originalCommit": {"oid": "2a87ed4d165fa4299a0201aad5a9bff7d3776105"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1Mjc5NjAxOnYy", "diffSide": "RIGHT", "path": "build.gradle", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QyMTo0MToxNVrOGlYZzw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QyMTo0NDo1OVrOGlYf7A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTg1MDMxOQ==", "bodyText": "I suggest:\nproject.tasks.withType(Test) {\n  if (it.options instanceof TestNGOptions) {\n    it.options.excludeGroups 'ci-flaky'\n    it.systemProperties['test.httpRequestTimeout'] = '20000'\n  }\n}", "url": "https://github.com/linkedin/rest.li/pull/328#discussion_r441850319", "createdAt": "2020-06-17T21:41:15Z", "author": {"login": "DPUkyle"}, "path": "build.gradle", "diffHunk": "@@ -286,10 +287,11 @@ subprojects {\n     }\n   }\n \n-  // Exclude tests which are known to be flaky in the Travis CI environment\n+  // Exclude tests which are known to be flaky in the Travis CI environment. Since all test tasks are TestNG tasks\n+  // EXCEPT the integTest task, exclude the options from being evaluated by travis for the integTest task.\n   if (System.getenv('TRAVIS') == 'true' && System.getenv('USER') == 'travis') {\n     afterEvaluate {\n-      project.tasks.withType(Test).forEach {\n+      project.tasks.withType(Test).matching { it.name != \"integTest\" }.forEach {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8ee37ee1ed56f2a13da79d7bba1298095dbc4ef8"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTg1MTg4NA==", "bodyText": "good idea, it's better than what I was doing.", "url": "https://github.com/linkedin/rest.li/pull/328#discussion_r441851884", "createdAt": "2020-06-17T21:44:59Z", "author": {"login": "Astro03"}, "path": "build.gradle", "diffHunk": "@@ -286,10 +287,11 @@ subprojects {\n     }\n   }\n \n-  // Exclude tests which are known to be flaky in the Travis CI environment\n+  // Exclude tests which are known to be flaky in the Travis CI environment. Since all test tasks are TestNG tasks\n+  // EXCEPT the integTest task, exclude the options from being evaluated by travis for the integTest task.\n   if (System.getenv('TRAVIS') == 'true' && System.getenv('USER') == 'travis') {\n     afterEvaluate {\n-      project.tasks.withType(Test).forEach {\n+      project.tasks.withType(Test).matching { it.name != \"integTest\" }.forEach {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTg1MDMxOQ=="}, "originalCommit": {"oid": "8ee37ee1ed56f2a13da79d7bba1298095dbc4ef8"}, "originalPosition": 18}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 499, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}