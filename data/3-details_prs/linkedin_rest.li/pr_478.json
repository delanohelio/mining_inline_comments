{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE5ODU5NDY5", "number": 478, "title": "Reserve symbol table resource name", "bodyText": "Throw error in API builder if Resource name conflicts with \"symbolTable\"\nAdd symbol-table-request header for requesting symbol table to avoid conflict with resource requests.", "createdAt": "2020-11-12T12:43:30Z", "url": "https://github.com/linkedin/rest.li/pull/478", "merged": true, "mergeCommit": {"oid": "f5857c56aa3322c643cd296c95e29e3a31bdd2bd"}, "closed": true, "closedAt": "2020-12-02T20:28:28Z", "author": {"login": "aman1309"}, "timelineItems": {"totalCount": 16, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdbx-vUABqjM5ODg1MDQyNDU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdhro58ABqjQwNTM4ODYzNTM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a2ab88c6e8d90ad9fcad052fdff3c18c2cc54fc5", "author": {"user": {"login": "aman1309", "name": "Aman Gupta"}}, "url": "https://github.com/linkedin/rest.li/commit/a2ab88c6e8d90ad9fcad052fdff3c18c2cc54fc5", "committedDate": "2020-11-12T12:42:08Z", "message": "Reserve symbol table resource name and fix request symbol table"}, "afterCommit": {"oid": "edc7158e4b97d385996e37bc9e765cc2f44993f4", "author": {"user": {"login": "aman1309", "name": "Aman Gupta"}}, "url": "https://github.com/linkedin/rest.li/commit/edc7158e4b97d385996e37bc9e765cc2f44993f4", "committedDate": "2020-11-12T12:46:46Z", "message": "Reserve symbol table resource name and fix request symbol table"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI5NDE5NDUx", "url": "https://github.com/linkedin/rest.li/pull/478#pullrequestreview-529419451", "createdAt": "2020-11-12T19:23:58Z", "commit": {"oid": "edc7158e4b97d385996e37bc9e765cc2f44993f4"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQxOToyMzo1OVrOHyKOpQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQxOToyNDoxNFrOHyKPRQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjM1ODQzNw==", "bodyText": "Excellent catch! Can you please change this check to checking for scheme instead of startsWith and use the d2 constant please?", "url": "https://github.com/linkedin/rest.li/pull/478#discussion_r522358437", "createdAt": "2020-11-12T19:23:59Z", "author": {"login": "karthikrg"}, "path": "restli-tools/src/main/java/com/linkedin/restli/tools/symbol/RestLiSymbolTableProvider.java", "diffHunk": "@@ -220,6 +220,11 @@ public SymbolTable getSymbolTable(String symbolTableName)\n   @Override\n   public SymbolTable getRequestSymbolTable(URI requestUri)\n   {\n+    if (!requestUri.toString().startsWith(\"d2://\"))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "edc7158e4b97d385996e37bc9e765cc2f44993f4"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjM1ODU5Nw==", "bodyText": "Also may want to add a debug log here.", "url": "https://github.com/linkedin/rest.li/pull/478#discussion_r522358597", "createdAt": "2020-11-12T19:24:14Z", "author": {"login": "karthikrg"}, "path": "restli-tools/src/main/java/com/linkedin/restli/tools/symbol/RestLiSymbolTableProvider.java", "diffHunk": "@@ -220,6 +220,11 @@ public SymbolTable getSymbolTable(String symbolTableName)\n   @Override\n   public SymbolTable getRequestSymbolTable(URI requestUri)\n   {\n+    if (!requestUri.toString().startsWith(\"d2://\"))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjM1ODQzNw=="}, "originalCommit": {"oid": "edc7158e4b97d385996e37bc9e765cc2f44993f4"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI5OTg3MDQz", "url": "https://github.com/linkedin/rest.li/pull/478#pullrequestreview-529987043", "createdAt": "2020-11-13T11:30:10Z", "commit": {"oid": "edc7158e4b97d385996e37bc9e765cc2f44993f4"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QxMTozMDoxMFrOHyq3xA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QxMTozNzoyOFrOHyrEzw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjg5MzI1Mg==", "bodyText": "should it be: startsWith(_uriPrefix) ?", "url": "https://github.com/linkedin/rest.li/pull/478#discussion_r522893252", "createdAt": "2020-11-13T11:30:10Z", "author": {"login": "karthikbalasub"}, "path": "restli-tools/src/main/java/com/linkedin/restli/tools/symbol/RestLiSymbolTableProvider.java", "diffHunk": "@@ -220,6 +220,11 @@ public SymbolTable getSymbolTable(String symbolTableName)\n   @Override\n   public SymbolTable getRequestSymbolTable(URI requestUri)\n   {\n+    if (!requestUri.toString().startsWith(\"d2://\"))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjM1ODQzNw=="}, "originalCommit": {"oid": "edc7158e4b97d385996e37bc9e765cc2f44993f4"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjg5NDk0Mw==", "bodyText": "Also can you cleanup the comment from line 237-238? Looks like this was missed inthe previous PR", "url": "https://github.com/linkedin/rest.li/pull/478#discussion_r522894943", "createdAt": "2020-11-13T11:33:53Z", "author": {"login": "karthikbalasub"}, "path": "restli-tools/src/main/java/com/linkedin/restli/tools/symbol/RestLiSymbolTableProvider.java", "diffHunk": "@@ -220,6 +220,11 @@ public SymbolTable getSymbolTable(String symbolTableName)\n   @Override\n   public SymbolTable getRequestSymbolTable(URI requestUri)\n   {\n+    if (!requestUri.toString().startsWith(\"d2://\"))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjM1ODQzNw=="}, "originalCommit": {"oid": "edc7158e4b97d385996e37bc9e765cc2f44993f4"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjg5NjU5MQ==", "bodyText": "This is not sufficient. If a resource has string Keys and if the key is \"symbolTable\" it can still cause conflict. We might have to revert Sang's commit.", "url": "https://github.com/linkedin/rest.li/pull/478#discussion_r522896591", "createdAt": "2020-11-13T11:37:28Z", "author": {"login": "karthikbalasub"}, "path": "restli-server/src/main/java/com/linkedin/restli/internal/server/model/RestLiApiBuilder.java", "diffHunk": "@@ -119,6 +120,12 @@ private static void processResourceInOrder(Class<?> annotatedClass, Map<Class<?>\n     if (model.isRoot())\n     {\n       String path = \"/\" + model.getName();\n+      if (model.getName().equals(DefaultSymbolTableProvider.SYMBOL_TABLE_URI_PATH))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "edc7158e4b97d385996e37bc9e765cc2f44993f4"}, "originalPosition": 12}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "edc7158e4b97d385996e37bc9e765cc2f44993f4", "author": {"user": {"login": "aman1309", "name": "Aman Gupta"}}, "url": "https://github.com/linkedin/rest.li/commit/edc7158e4b97d385996e37bc9e765cc2f44993f4", "committedDate": "2020-11-12T12:46:46Z", "message": "Reserve symbol table resource name and fix request symbol table"}, "afterCommit": {"oid": "71dbc16cab21b83ef362446660ccd352a04c5c5b", "author": {"user": {"login": "aman1309", "name": "Aman Gupta"}}, "url": "https://github.com/linkedin/rest.li/commit/71dbc16cab21b83ef362446660ccd352a04c5c5b", "committedDate": "2020-11-28T08:38:11Z", "message": "address review comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQxMjE1MTE5", "url": "https://github.com/linkedin/rest.li/pull/478#pullrequestreview-541215119", "createdAt": "2020-11-30T19:15:57Z", "commit": {"oid": "71dbc16cab21b83ef362446660ccd352a04c5c5b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxOToxNTo1N1rOH8J0Vw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxOToxNTo1N1rOH8J0Vw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjgzNzQ2Mw==", "bodyText": "It needs to be \"X-RestLi\", Capitalize L", "url": "https://github.com/linkedin/rest.li/pull/478#discussion_r532837463", "createdAt": "2020-11-30T19:15:57Z", "author": {"login": "junchuanwang"}, "path": "data/src/main/java/com/linkedin/data/codec/symbol/DefaultSymbolTableProvider.java", "diffHunk": "@@ -47,6 +47,11 @@\n    */\n   private static final String ACCEPT_HEADER = \"Accept\";\n \n+  /**\n+   * Symbol table request header\n+   */\n+  private static final String SYMBOL_TABLE_HEADER = \"X-Restli-Symbol-Table-Request\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "71dbc16cab21b83ef362446660ccd352a04c5c5b"}, "originalPosition": 7}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQxMjMwNTYz", "url": "https://github.com/linkedin/rest.li/pull/478#pullrequestreview-541230563", "createdAt": "2020-11-30T19:37:05Z", "commit": {"oid": "71dbc16cab21b83ef362446660ccd352a04c5c5b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxOTozNzowNVrOH8Kl4g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxOTozNzowNVrOH8Kl4g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjg1MDE0Ng==", "bodyText": "why are assuming # of path segments to 2 or 3? I mean the original code seems more natural", "url": "https://github.com/linkedin/rest.li/pull/478#discussion_r532850146", "createdAt": "2020-11-30T19:37:05Z", "author": {"login": "junchuanwang"}, "path": "restli-server/src/main/java/com/linkedin/restli/server/symbol/RestLiSymbolTableRequestHandler.java", "diffHunk": "@@ -90,11 +90,20 @@ public boolean shouldHandle(Request request)\n       return false;\n     }\n \n-    //\n     // When path is service scoped, URI is in the form of /<SERVICE>/symbolTable, else it\n     // is in the form of /symbolTable or /symbolTable/<TABLENAME>\n-    return pathSegments.get(pathSegments.size() - 1).getPath().equals(SYMBOL_TABLE_URI_PATH)\n-        || pathSegments.get(pathSegments.size() - 2).getPath().equals(SYMBOL_TABLE_URI_PATH);\n+    boolean isSymbolTableRequest = request.getHeaders().containsKey(RestConstants.HEADER_FETCH_SYMBOL_TABLE);\n+    if (isSymbolTableRequest)\n+    {\n+      return pathSegments.get(pathSegments.size() - 1).getPath().equals(SYMBOL_TABLE_URI_PATH)\n+              || pathSegments.get(pathSegments.size() - 2).getPath().equals(SYMBOL_TABLE_URI_PATH);\n+    }\n+    boolean isServiceScopedPath = request.getHeaders().containsKey(RestConstants.HEADER_SERVICE_SCOPED_PATH);\n+    if (isServiceScopedPath)\n+    {\n+      return (pathSegments.size() == 3) && pathSegments.get(2).getPath().equals(SYMBOL_TABLE_URI_PATH);\n+    }\n+    return ((pathSegments.size() == 2 || pathSegments.size() == 3) && pathSegments.get(1).getPath().equals(SYMBOL_TABLE_URI_PATH));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "71dbc16cab21b83ef362446660ccd352a04c5c5b"}, "originalPosition": 20}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQxMjI5OTUx", "url": "https://github.com/linkedin/rest.li/pull/478#pullrequestreview-541229951", "createdAt": "2020-11-30T19:36:17Z", "commit": {"oid": "71dbc16cab21b83ef362446660ccd352a04c5c5b"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxOTozNjoxN1rOH8Kj4w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxOTozOToyNVrOH8KrLg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjg0OTYzNQ==", "bodyText": "Did you add this back for compatibility with the old logic?", "url": "https://github.com/linkedin/rest.li/pull/478#discussion_r532849635", "createdAt": "2020-11-30T19:36:17Z", "author": {"login": "karthikbalasub"}, "path": "restli-server/src/main/java/com/linkedin/restli/server/symbol/RestLiSymbolTableRequestHandler.java", "diffHunk": "@@ -90,11 +90,20 @@ public boolean shouldHandle(Request request)\n       return false;\n     }\n \n-    //\n     // When path is service scoped, URI is in the form of /<SERVICE>/symbolTable, else it\n     // is in the form of /symbolTable or /symbolTable/<TABLENAME>\n-    return pathSegments.get(pathSegments.size() - 1).getPath().equals(SYMBOL_TABLE_URI_PATH)\n-        || pathSegments.get(pathSegments.size() - 2).getPath().equals(SYMBOL_TABLE_URI_PATH);\n+    boolean isSymbolTableRequest = request.getHeaders().containsKey(RestConstants.HEADER_FETCH_SYMBOL_TABLE);\n+    if (isSymbolTableRequest)\n+    {\n+      return pathSegments.get(pathSegments.size() - 1).getPath().equals(SYMBOL_TABLE_URI_PATH)\n+              || pathSegments.get(pathSegments.size() - 2).getPath().equals(SYMBOL_TABLE_URI_PATH);\n+    }\n+    boolean isServiceScopedPath = request.getHeaders().containsKey(RestConstants.HEADER_SERVICE_SCOPED_PATH);\n+    if (isServiceScopedPath)\n+    {\n+      return (pathSegments.size() == 3) && pathSegments.get(2).getPath().equals(SYMBOL_TABLE_URI_PATH);\n+    }\n+    return ((pathSegments.size() == 2 || pathSegments.size() == 3) && pathSegments.get(1).getPath().equals(SYMBOL_TABLE_URI_PATH));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "71dbc16cab21b83ef362446660ccd352a04c5c5b"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjg1MTUwMg==", "bodyText": "do you still need this change?", "url": "https://github.com/linkedin/rest.li/pull/478#discussion_r532851502", "createdAt": "2020-11-30T19:39:25Z", "author": {"login": "karthikbalasub"}, "path": "restli-server/src/main/java/com/linkedin/restli/internal/server/model/RestLiApiBuilder.java", "diffHunk": "@@ -119,6 +120,12 @@ private static void processResourceInOrder(Class<?> annotatedClass, Map<Class<?>\n     if (model.isRoot())\n     {\n       String path = \"/\" + model.getName();\n+      if (model.getName().equals(DefaultSymbolTableProvider.SYMBOL_TABLE_URI_PATH))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjg5NjU5MQ=="}, "originalCommit": {"oid": "edc7158e4b97d385996e37bc9e765cc2f44993f4"}, "originalPosition": 12}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7e921a264b4b0c23b0de45d9abbeb8cd3b82d50a", "author": {"user": {"login": "aman1309", "name": "Aman Gupta"}}, "url": "https://github.com/linkedin/rest.li/commit/7e921a264b4b0c23b0de45d9abbeb8cd3b82d50a", "committedDate": "2020-11-30T19:53:09Z", "message": "Reserve symbol table resource name and fix request symbol table"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "070123e2346752e6d86b6b881748175ae8c10b28", "author": {"user": {"login": "aman1309", "name": "Aman Gupta"}}, "url": "https://github.com/linkedin/rest.li/commit/070123e2346752e6d86b6b881748175ae8c10b28", "committedDate": "2020-11-30T19:53:09Z", "message": "address review comments"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "71dbc16cab21b83ef362446660ccd352a04c5c5b", "author": {"user": {"login": "aman1309", "name": "Aman Gupta"}}, "url": "https://github.com/linkedin/rest.li/commit/71dbc16cab21b83ef362446660ccd352a04c5c5b", "committedDate": "2020-11-28T08:38:11Z", "message": "address review comments"}, "afterCommit": {"oid": "63b5d34a9cfeda7bf8d934aeff8183dd6ce86fd2", "author": {"user": {"login": "aman1309", "name": "Aman Gupta"}}, "url": "https://github.com/linkedin/rest.li/commit/63b5d34a9cfeda7bf8d934aeff8183dd6ce86fd2", "committedDate": "2020-11-30T19:54:13Z", "message": "address comments"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "63b5d34a9cfeda7bf8d934aeff8183dd6ce86fd2", "author": {"user": {"login": "aman1309", "name": "Aman Gupta"}}, "url": "https://github.com/linkedin/rest.li/commit/63b5d34a9cfeda7bf8d934aeff8183dd6ce86fd2", "committedDate": "2020-11-30T19:54:13Z", "message": "address comments"}, "afterCommit": {"oid": "64b27145b436dc8a99de824faed72c0556afa3ad", "author": {"user": {"login": "aman1309", "name": "Aman Gupta"}}, "url": "https://github.com/linkedin/rest.li/commit/64b27145b436dc8a99de824faed72c0556afa3ad", "committedDate": "2020-11-30T19:56:55Z", "message": "address comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQxMjQ4MzIw", "url": "https://github.com/linkedin/rest.li/pull/478#pullrequestreview-541248320", "createdAt": "2020-11-30T19:57:58Z", "commit": {"oid": "64b27145b436dc8a99de824faed72c0556afa3ad"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "64b27145b436dc8a99de824faed72c0556afa3ad", "author": {"user": {"login": "aman1309", "name": "Aman Gupta"}}, "url": "https://github.com/linkedin/rest.li/commit/64b27145b436dc8a99de824faed72c0556afa3ad", "committedDate": "2020-11-30T19:56:55Z", "message": "address comments"}, "afterCommit": {"oid": "b1af535414f91be9974b81b1e58f99bb5bb0b524", "author": {"user": {"login": "aman1309", "name": "Aman Gupta"}}, "url": "https://github.com/linkedin/rest.li/commit/b1af535414f91be9974b81b1e58f99bb5bb0b524", "committedDate": "2020-11-30T20:00:59Z", "message": "address comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQxMjYzMzA2", "url": "https://github.com/linkedin/rest.li/pull/478#pullrequestreview-541263306", "createdAt": "2020-11-30T20:20:02Z", "commit": {"oid": "b1af535414f91be9974b81b1e58f99bb5bb0b524"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "90b95a4ac77a5a7625e22e5dd97513fc4ae49276", "author": {"user": {"login": "aman1309", "name": "Aman Gupta"}}, "url": "https://github.com/linkedin/rest.li/commit/90b95a4ac77a5a7625e22e5dd97513fc4ae49276", "committedDate": "2020-11-30T20:46:56Z", "message": "address comments"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b1af535414f91be9974b81b1e58f99bb5bb0b524", "author": {"user": {"login": "aman1309", "name": "Aman Gupta"}}, "url": "https://github.com/linkedin/rest.li/commit/b1af535414f91be9974b81b1e58f99bb5bb0b524", "committedDate": "2020-11-30T20:00:59Z", "message": "address comments"}, "afterCommit": {"oid": "90b95a4ac77a5a7625e22e5dd97513fc4ae49276", "author": {"user": {"login": "aman1309", "name": "Aman Gupta"}}, "url": "https://github.com/linkedin/rest.li/commit/90b95a4ac77a5a7625e22e5dd97513fc4ae49276", "committedDate": "2020-11-30T20:46:56Z", "message": "address comments"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4575, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}