{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ5MTA1MzA3", "number": 347, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxNzo1Mzo1OFrOERJ-yQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxNzo1NjowM1rOERKBjw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2NDI0Nzc3OnYy", "diffSide": "RIGHT", "path": "d2/src/main/java/com/linkedin/d2/balancer/strategies/relative/RelativeLoadBalancerTestHelper.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxNzo1Mzo1OFrOG1tv9w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxOTowMDo0N1rOG1wI9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODk3NzI3MQ==", "bodyText": "Wrap with Collections.unmodifiableMap", "url": "https://github.com/linkedin/rest.li/pull/347#discussion_r458977271", "createdAt": "2020-07-22T17:53:58Z", "author": {"login": "cx-super"}, "path": "d2/src/main/java/com/linkedin/d2/balancer/strategies/relative/RelativeLoadBalancerTestHelper.java", "diffHunk": "@@ -0,0 +1,39 @@\n+/*\n+   Copyright (c) 2020 LinkedIn Corp.\n+\n+   Licensed under the Apache License, Version 2.0 (the \"License\");\n+   you may not use this file except in compliance with the License.\n+   You may obtain a copy of the License at\n+\n+       http://www.apache.org/licenses/LICENSE-2.0\n+\n+   Unless required by applicable law or agreed to in writing, software\n+   distributed under the License is distributed on an \"AS IS\" BASIS,\n+   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+   See the License for the specific language governing permissions and\n+   limitations under the License.\n+*/\n+\n+package com.linkedin.d2.balancer.strategies.relative;\n+\n+import java.net.URI;\n+import java.util.Map;\n+\n+\n+/**\n+ * The helper class for {@link RelativeLoadBalancerStrategy} related tests\n+ */\n+public class RelativeLoadBalancerTestHelper {\n+\n+  /**\n+   * Get points map for a given partition\n+   *\n+   * @param strategy The object of the strategy\n+   * @param partitionId The id of the partition\n+   * @return The points map\n+   */\n+  public static Map<URI, Integer> getPointsMap(RelativeLoadBalancerStrategy strategy, int partitionId)\n+  {\n+    return strategy.getPointsMap(partitionId);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f7e6bf9819f5b37567dc6b0203094d4cb3d4baaa"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTAxMTA3OA==", "bodyText": "Sure.\nAlso replying to the facilities question here: the new relative load balancer is not an actual \"load balancer\" in the implementation, it is just a new strategy, it still uses the existing SimpleLoadBalancer, and I don't think simpleLoadBalancer extends Facilities, but LastSeenLoadBalancer does, and it uses the SimpleLoadBalancer internally.", "url": "https://github.com/linkedin/rest.li/pull/347#discussion_r459011078", "createdAt": "2020-07-22T18:51:34Z", "author": {"login": "rachelhanhan"}, "path": "d2/src/main/java/com/linkedin/d2/balancer/strategies/relative/RelativeLoadBalancerTestHelper.java", "diffHunk": "@@ -0,0 +1,39 @@\n+/*\n+   Copyright (c) 2020 LinkedIn Corp.\n+\n+   Licensed under the Apache License, Version 2.0 (the \"License\");\n+   you may not use this file except in compliance with the License.\n+   You may obtain a copy of the License at\n+\n+       http://www.apache.org/licenses/LICENSE-2.0\n+\n+   Unless required by applicable law or agreed to in writing, software\n+   distributed under the License is distributed on an \"AS IS\" BASIS,\n+   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+   See the License for the specific language governing permissions and\n+   limitations under the License.\n+*/\n+\n+package com.linkedin.d2.balancer.strategies.relative;\n+\n+import java.net.URI;\n+import java.util.Map;\n+\n+\n+/**\n+ * The helper class for {@link RelativeLoadBalancerStrategy} related tests\n+ */\n+public class RelativeLoadBalancerTestHelper {\n+\n+  /**\n+   * Get points map for a given partition\n+   *\n+   * @param strategy The object of the strategy\n+   * @param partitionId The id of the partition\n+   * @return The points map\n+   */\n+  public static Map<URI, Integer> getPointsMap(RelativeLoadBalancerStrategy strategy, int partitionId)\n+  {\n+    return strategy.getPointsMap(partitionId);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODk3NzI3MQ=="}, "originalCommit": {"oid": "f7e6bf9819f5b37567dc6b0203094d4cb3d4baaa"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTAxNjQzOA==", "bodyText": "ok", "url": "https://github.com/linkedin/rest.li/pull/347#discussion_r459016438", "createdAt": "2020-07-22T19:00:47Z", "author": {"login": "cx-super"}, "path": "d2/src/main/java/com/linkedin/d2/balancer/strategies/relative/RelativeLoadBalancerTestHelper.java", "diffHunk": "@@ -0,0 +1,39 @@\n+/*\n+   Copyright (c) 2020 LinkedIn Corp.\n+\n+   Licensed under the Apache License, Version 2.0 (the \"License\");\n+   you may not use this file except in compliance with the License.\n+   You may obtain a copy of the License at\n+\n+       http://www.apache.org/licenses/LICENSE-2.0\n+\n+   Unless required by applicable law or agreed to in writing, software\n+   distributed under the License is distributed on an \"AS IS\" BASIS,\n+   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+   See the License for the specific language governing permissions and\n+   limitations under the License.\n+*/\n+\n+package com.linkedin.d2.balancer.strategies.relative;\n+\n+import java.net.URI;\n+import java.util.Map;\n+\n+\n+/**\n+ * The helper class for {@link RelativeLoadBalancerStrategy} related tests\n+ */\n+public class RelativeLoadBalancerTestHelper {\n+\n+  /**\n+   * Get points map for a given partition\n+   *\n+   * @param strategy The object of the strategy\n+   * @param partitionId The id of the partition\n+   * @return The points map\n+   */\n+  public static Map<URI, Integer> getPointsMap(RelativeLoadBalancerStrategy strategy, int partitionId)\n+  {\n+    return strategy.getPointsMap(partitionId);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODk3NzI3MQ=="}, "originalCommit": {"oid": "f7e6bf9819f5b37567dc6b0203094d4cb3d4baaa"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2NDI1NDg3OnYy", "diffSide": "RIGHT", "path": "d2/src/main/java/com/linkedin/d2/balancer/strategies/relative/RelativeLoadBalancerTestHelper.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxNzo1NjowM1rOG1t0oA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQyMDo1OTo1NFrOG10AyQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODk3ODQ2NA==", "bodyText": "We should have an interface to expose pointsMap (not only for testing) because we'll have MBean to expose the values to inGraphs.", "url": "https://github.com/linkedin/rest.li/pull/347#discussion_r458978464", "createdAt": "2020-07-22T17:56:03Z", "author": {"login": "cx-super"}, "path": "d2/src/main/java/com/linkedin/d2/balancer/strategies/relative/RelativeLoadBalancerTestHelper.java", "diffHunk": "@@ -0,0 +1,39 @@\n+/*\n+   Copyright (c) 2020 LinkedIn Corp.\n+\n+   Licensed under the Apache License, Version 2.0 (the \"License\");\n+   you may not use this file except in compliance with the License.\n+   You may obtain a copy of the License at\n+\n+       http://www.apache.org/licenses/LICENSE-2.0\n+\n+   Unless required by applicable law or agreed to in writing, software\n+   distributed under the License is distributed on an \"AS IS\" BASIS,\n+   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+   See the License for the specific language governing permissions and\n+   limitations under the License.\n+*/\n+\n+package com.linkedin.d2.balancer.strategies.relative;\n+\n+import java.net.URI;\n+import java.util.Map;\n+\n+\n+/**\n+ * The helper class for {@link RelativeLoadBalancerStrategy} related tests\n+ */\n+public class RelativeLoadBalancerTestHelper {\n+\n+  /**\n+   * Get points map for a given partition\n+   *\n+   * @param strategy The object of the strategy\n+   * @param partitionId The id of the partition\n+   * @return The points map\n+   */\n+  public static Map<URI, Integer> getPointsMap(RelativeLoadBalancerStrategy strategy, int partitionId)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f7e6bf9819f5b37567dc6b0203094d4cb3d4baaa"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTAwODczMw==", "bodyText": "I'm actually thinking about if the points are really meaningful to be collected in the inGraph, for now I prefer not adding points into the inGraph any more, simply because I did not see much value to give the total points of a ring. I started a doc to add some new monitors: https://docs.google.com/document/d/19DpiTNuzXpdSaK-kYPRYg9RJenxJfuIy5zYX_l_1gtA/edit#heading=h.r3ucjtwt0vl4, I will spend some time discuss with you and other folks on the inGraphs to be added.\nIf this is only for testing, I don't want to expose it as an interface.", "url": "https://github.com/linkedin/rest.li/pull/347#discussion_r459008733", "createdAt": "2020-07-22T18:47:45Z", "author": {"login": "rachelhanhan"}, "path": "d2/src/main/java/com/linkedin/d2/balancer/strategies/relative/RelativeLoadBalancerTestHelper.java", "diffHunk": "@@ -0,0 +1,39 @@\n+/*\n+   Copyright (c) 2020 LinkedIn Corp.\n+\n+   Licensed under the Apache License, Version 2.0 (the \"License\");\n+   you may not use this file except in compliance with the License.\n+   You may obtain a copy of the License at\n+\n+       http://www.apache.org/licenses/LICENSE-2.0\n+\n+   Unless required by applicable law or agreed to in writing, software\n+   distributed under the License is distributed on an \"AS IS\" BASIS,\n+   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+   See the License for the specific language governing permissions and\n+   limitations under the License.\n+*/\n+\n+package com.linkedin.d2.balancer.strategies.relative;\n+\n+import java.net.URI;\n+import java.util.Map;\n+\n+\n+/**\n+ * The helper class for {@link RelativeLoadBalancerStrategy} related tests\n+ */\n+public class RelativeLoadBalancerTestHelper {\n+\n+  /**\n+   * Get points map for a given partition\n+   *\n+   * @param strategy The object of the strategy\n+   * @param partitionId The id of the partition\n+   * @return The points map\n+   */\n+  public static Map<URI, Integer> getPointsMap(RelativeLoadBalancerStrategy strategy, int partitionId)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODk3ODQ2NA=="}, "originalCommit": {"oid": "f7e6bf9819f5b37567dc6b0203094d4cb3d4baaa"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTAyMTQyNQ==", "bodyText": "If you want to remove this one, it'll still be good to have something to replace.\nThe total points can reflect the internal state changes that we do not necessarily see just from the latency ingraphs. For example, we can see if the client degrades some hosts, or if the servers never got out of slowStart state. Just looking into error rate or latency will not get your idea. Also note that ingraphs has the granularity of 1 min, while d2 update state update every 5s. Some times the difference can reflect some minor changes.", "url": "https://github.com/linkedin/rest.li/pull/347#discussion_r459021425", "createdAt": "2020-07-22T19:09:36Z", "author": {"login": "cx-super"}, "path": "d2/src/main/java/com/linkedin/d2/balancer/strategies/relative/RelativeLoadBalancerTestHelper.java", "diffHunk": "@@ -0,0 +1,39 @@\n+/*\n+   Copyright (c) 2020 LinkedIn Corp.\n+\n+   Licensed under the Apache License, Version 2.0 (the \"License\");\n+   you may not use this file except in compliance with the License.\n+   You may obtain a copy of the License at\n+\n+       http://www.apache.org/licenses/LICENSE-2.0\n+\n+   Unless required by applicable law or agreed to in writing, software\n+   distributed under the License is distributed on an \"AS IS\" BASIS,\n+   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+   See the License for the specific language governing permissions and\n+   limitations under the License.\n+*/\n+\n+package com.linkedin.d2.balancer.strategies.relative;\n+\n+import java.net.URI;\n+import java.util.Map;\n+\n+\n+/**\n+ * The helper class for {@link RelativeLoadBalancerStrategy} related tests\n+ */\n+public class RelativeLoadBalancerTestHelper {\n+\n+  /**\n+   * Get points map for a given partition\n+   *\n+   * @param strategy The object of the strategy\n+   * @param partitionId The id of the partition\n+   * @return The points map\n+   */\n+  public static Map<URI, Integer> getPointsMap(RelativeLoadBalancerStrategy strategy, int partitionId)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODk3ODQ2NA=="}, "originalCommit": {"oid": "f7e6bf9819f5b37567dc6b0203094d4cb3d4baaa"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTAzODAzMQ==", "bodyText": "I'm thinking about adding the number of unhealthy hosts (any host that has health score < 1 would count) in the inGraph.\nPreviously it uses total points in hash ring, which does not tell how many hosts have total points less than 100, the total points just does not make sense to me. We can also discuss more about this offline.", "url": "https://github.com/linkedin/rest.li/pull/347#discussion_r459038031", "createdAt": "2020-07-22T19:40:29Z", "author": {"login": "rachelhanhan"}, "path": "d2/src/main/java/com/linkedin/d2/balancer/strategies/relative/RelativeLoadBalancerTestHelper.java", "diffHunk": "@@ -0,0 +1,39 @@\n+/*\n+   Copyright (c) 2020 LinkedIn Corp.\n+\n+   Licensed under the Apache License, Version 2.0 (the \"License\");\n+   you may not use this file except in compliance with the License.\n+   You may obtain a copy of the License at\n+\n+       http://www.apache.org/licenses/LICENSE-2.0\n+\n+   Unless required by applicable law or agreed to in writing, software\n+   distributed under the License is distributed on an \"AS IS\" BASIS,\n+   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+   See the License for the specific language governing permissions and\n+   limitations under the License.\n+*/\n+\n+package com.linkedin.d2.balancer.strategies.relative;\n+\n+import java.net.URI;\n+import java.util.Map;\n+\n+\n+/**\n+ * The helper class for {@link RelativeLoadBalancerStrategy} related tests\n+ */\n+public class RelativeLoadBalancerTestHelper {\n+\n+  /**\n+   * Get points map for a given partition\n+   *\n+   * @param strategy The object of the strategy\n+   * @param partitionId The id of the partition\n+   * @return The points map\n+   */\n+  public static Map<URI, Integer> getPointsMap(RelativeLoadBalancerStrategy strategy, int partitionId)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODk3ODQ2NA=="}, "originalCommit": {"oid": "f7e6bf9819f5b37567dc6b0203094d4cb3d4baaa"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTA3OTg4MQ==", "bodyText": "Number of unhealthy hosts are good, but it cannot reflect how fast the servers are changing (degrade/recover). You may consider to add those metrics as well.", "url": "https://github.com/linkedin/rest.li/pull/347#discussion_r459079881", "createdAt": "2020-07-22T20:59:54Z", "author": {"login": "cx-super"}, "path": "d2/src/main/java/com/linkedin/d2/balancer/strategies/relative/RelativeLoadBalancerTestHelper.java", "diffHunk": "@@ -0,0 +1,39 @@\n+/*\n+   Copyright (c) 2020 LinkedIn Corp.\n+\n+   Licensed under the Apache License, Version 2.0 (the \"License\");\n+   you may not use this file except in compliance with the License.\n+   You may obtain a copy of the License at\n+\n+       http://www.apache.org/licenses/LICENSE-2.0\n+\n+   Unless required by applicable law or agreed to in writing, software\n+   distributed under the License is distributed on an \"AS IS\" BASIS,\n+   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+   See the License for the specific language governing permissions and\n+   limitations under the License.\n+*/\n+\n+package com.linkedin.d2.balancer.strategies.relative;\n+\n+import java.net.URI;\n+import java.util.Map;\n+\n+\n+/**\n+ * The helper class for {@link RelativeLoadBalancerStrategy} related tests\n+ */\n+public class RelativeLoadBalancerTestHelper {\n+\n+  /**\n+   * Get points map for a given partition\n+   *\n+   * @param strategy The object of the strategy\n+   * @param partitionId The id of the partition\n+   * @return The points map\n+   */\n+  public static Map<URI, Integer> getPointsMap(RelativeLoadBalancerStrategy strategy, int partitionId)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODk3ODQ2NA=="}, "originalCommit": {"oid": "f7e6bf9819f5b37567dc6b0203094d4cb3d4baaa"}, "originalPosition": 35}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 521, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}