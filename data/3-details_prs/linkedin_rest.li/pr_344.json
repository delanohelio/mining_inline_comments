{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQyOTk3NzY5", "number": 344, "title": "Add an option (enabled by default) to gracefully degrade on encountering invalid surrogate pairs during protobuf string serialization", "bodyText": "The graceful degradation is similar to jackson, in the sense that every invalid surrogate is replaced by ?", "createdAt": "2020-07-01T21:23:13Z", "url": "https://github.com/linkedin/rest.li/pull/344", "merged": true, "mergeCommit": {"oid": "f9f1c898e897a18a15bcf04c3abf9c553e5e938a"}, "closed": true, "closedAt": "2020-07-02T05:50:46Z", "author": {"login": "karthikrg"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcwxVPqAFqTQ0MTIwOTI0Mg==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcw3BuzgBqjM1MDUyNzk2MDU=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQxMjA5MjQy", "url": "https://github.com/linkedin/rest.li/pull/344#pullrequestreview-441209242", "createdAt": "2020-07-01T21:29:47Z", "commit": {"oid": "d48fb64e704cde1c766255434495d6b2fafa9bba"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQyMToyOTo0N1rOGr1-iw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQyMToyOTo0N1rOGr1-iw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODYyNjMxNQ==", "bodyText": "add bool param doc", "url": "https://github.com/linkedin/rest.li/pull/344#discussion_r448626315", "createdAt": "2020-07-01T21:29:47Z", "author": {"login": "aman1309"}, "path": "li-protobuf/src/main/java/com/linkedin/data/protobuf/Utf8Utils.java", "diffHunk": "@@ -134,6 +137,40 @@ public static int lookupUtfTable(int initialByte)\n    *                                        {@code bytes.length - offset}\n    */\n   public static int encode(CharSequence in, byte[] out, int offset, int length)\n+  {\n+    return encode(in, out, offset, length, false);\n+  }\n+\n+  /**\n+   * Encodes an input character sequence ({@code in}) to UTF-8 in the target array ({@code out}).\n+   * For a string, this method is similar to\n+   *\n+   * <pre>{@code\n+   * byte[] a = string.getBytes(UTF_8);\n+   * System.arraycopy(a, 0, bytes, offset, a.length);\n+   * return offset + a.length;\n+   * }</pre>\n+   * <p>\n+   * but is more efficient in both time and space. If tolerateInvalidSurrogatePairs is set to true, then\n+   * this method replaces unpaired surrogates with the default replacement character, else\n+   * this method throws {@link IllegalArgumentException}.\n+   *\n+   * <p>To ensure sufficient space in the output buffer, either call {@link #encodedLength} to\n+   * compute the exact amount needed, or leave room for {@code Utf8.MAX_BYTES_PER_CHAR *\n+   * sequence.length()}, which is the largest possible number of bytes that any input can be\n+   * encoded to.\n+   *\n+   * @param in     the input character sequence to be encoded\n+   * @param out    the target array\n+   * @param offset the starting offset in {@code bytes} to start writing at\n+   * @param length the length of the {@code bytes}, starting from {@code offset}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d48fb64e704cde1c766255434495d6b2fafa9bba"}, "originalPosition": 62}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d48fb64e704cde1c766255434495d6b2fafa9bba", "author": {"user": {"login": "li-kramgopa", "name": null}}, "url": "https://github.com/linkedin/rest.li/commit/d48fb64e704cde1c766255434495d6b2fafa9bba", "committedDate": "2020-07-01T21:19:45Z", "message": "Add an option (enabled by default) to gracefully degrade on encountering invalid surrogate pairs during protobuf string serialization"}, "afterCommit": {"oid": "512d246279f6b693303c4d359c42d9238b42db2b", "author": {"user": {"login": "li-kramgopa", "name": null}}, "url": "https://github.com/linkedin/rest.li/commit/512d246279f6b693303c4d359c42d9238b42db2b", "committedDate": "2020-07-01T21:48:17Z", "message": "Add an option (enabled by default) to gracefully degrade on encountering invalid surrogate pairs during protobuf string serialization"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQxMjgyMTYz", "url": "https://github.com/linkedin/rest.li/pull/344#pullrequestreview-441282163", "createdAt": "2020-07-02T00:54:52Z", "commit": {"oid": "512d246279f6b693303c4d359c42d9238b42db2b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQxMzI5MzAw", "url": "https://github.com/linkedin/rest.li/pull/344#pullrequestreview-441329300", "createdAt": "2020-07-02T03:42:21Z", "commit": {"oid": "512d246279f6b693303c4d359c42d9238b42db2b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "512d246279f6b693303c4d359c42d9238b42db2b", "author": {"user": {"login": "li-kramgopa", "name": null}}, "url": "https://github.com/linkedin/rest.li/commit/512d246279f6b693303c4d359c42d9238b42db2b", "committedDate": "2020-07-01T21:48:17Z", "message": "Add an option (enabled by default) to gracefully degrade on encountering invalid surrogate pairs during protobuf string serialization"}, "afterCommit": {"oid": "d3d9eb7a5b50165440eb9548848c24ca0df7b7fe", "author": {"user": {"login": "li-kramgopa", "name": null}}, "url": "https://github.com/linkedin/rest.li/commit/d3d9eb7a5b50165440eb9548848c24ca0df7b7fe", "committedDate": "2020-07-02T03:46:16Z", "message": "Add an option (enabled by default) to gracefully degrade on encountering invalid surrogate pairs during protobuf string serialization"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d3d9eb7a5b50165440eb9548848c24ca0df7b7fe", "author": {"user": {"login": "li-kramgopa", "name": null}}, "url": "https://github.com/linkedin/rest.li/commit/d3d9eb7a5b50165440eb9548848c24ca0df7b7fe", "committedDate": "2020-07-02T03:46:16Z", "message": "Add an option (enabled by default) to gracefully degrade on encountering invalid surrogate pairs during protobuf string serialization"}, "afterCommit": {"oid": "c17874e34de73872ea1e7a3b006144c18c4b5e6a", "author": {"user": {"login": "li-kramgopa", "name": null}}, "url": "https://github.com/linkedin/rest.li/commit/c17874e34de73872ea1e7a3b006144c18c4b5e6a", "committedDate": "2020-07-02T04:13:20Z", "message": "Add an option (enabled by default) to gracefully degrade on encountering invalid surrogate pairs during protobuf string serialization"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c17874e34de73872ea1e7a3b006144c18c4b5e6a", "author": {"user": {"login": "li-kramgopa", "name": null}}, "url": "https://github.com/linkedin/rest.li/commit/c17874e34de73872ea1e7a3b006144c18c4b5e6a", "committedDate": "2020-07-02T04:13:20Z", "message": "Add an option (enabled by default) to gracefully degrade on encountering invalid surrogate pairs during protobuf string serialization"}, "afterCommit": {"oid": "66f86c8a97480d4eee3bfabc30d67534fb644940", "author": {"user": {"login": "li-kramgopa", "name": null}}, "url": "https://github.com/linkedin/rest.li/commit/66f86c8a97480d4eee3bfabc30d67534fb644940", "committedDate": "2020-07-02T04:15:50Z", "message": "Add an option (enabled by default) to gracefully degrade on encountering invalid surrogate pairs during protobuf string serialization"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQxMzM5ODU0", "url": "https://github.com/linkedin/rest.li/pull/344#pullrequestreview-441339854", "createdAt": "2020-07-02T04:20:22Z", "commit": {"oid": "66f86c8a97480d4eee3bfabc30d67534fb644940"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQwNDoyMDoyMlrOGr86bg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQwNDoyMDoyMlrOGr86bg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODczOTk1MA==", "bodyText": "this should be 29.4.3", "url": "https://github.com/linkedin/rest.li/pull/344#discussion_r448739950", "createdAt": "2020-07-02T04:20:22Z", "author": {"login": "karthikbalasub"}, "path": "CHANGELOG.md", "diffHunk": "@@ -14,6 +14,9 @@ and what APIs have changed, if applicable.\n \n ## [Unreleased]\n \n+## [29.4.2] - 2020-07-01", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "66f86c8a97480d4eee3bfabc30d67534fb644940"}, "originalPosition": 4}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "45398da52e1737acc4f36a0801370491d245df32", "author": {"user": {"login": "li-kramgopa", "name": null}}, "url": "https://github.com/linkedin/rest.li/commit/45398da52e1737acc4f36a0801370491d245df32", "committedDate": "2020-07-02T04:20:55Z", "message": "Add an option (enabled by default) to gracefully degrade on encountering invalid surrogate pairs during protobuf string serialization"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "66f86c8a97480d4eee3bfabc30d67534fb644940", "author": {"user": {"login": "li-kramgopa", "name": null}}, "url": "https://github.com/linkedin/rest.li/commit/66f86c8a97480d4eee3bfabc30d67534fb644940", "committedDate": "2020-07-02T04:15:50Z", "message": "Add an option (enabled by default) to gracefully degrade on encountering invalid surrogate pairs during protobuf string serialization"}, "afterCommit": {"oid": "45398da52e1737acc4f36a0801370491d245df32", "author": {"user": {"login": "li-kramgopa", "name": null}}, "url": "https://github.com/linkedin/rest.li/commit/45398da52e1737acc4f36a0801370491d245df32", "committedDate": "2020-07-02T04:20:55Z", "message": "Add an option (enabled by default) to gracefully degrade on encountering invalid surrogate pairs during protobuf string serialization"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4864, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}