{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE4Mjc3NzI3", "number": 296, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQyMjozOTo1MFrOD8rDlw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQyMjozOTo1MFrOD8rDlw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0OTQ2NTgzOnYy", "diffSide": "RIGHT", "path": "r2-netty/src/main/java/com/linkedin/r2/netty/client/http/HttpChannelInitializer.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQyMjozOTo1MFrOGVwnyw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQyMzoyNToyOFrOGVxeOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTQ2OTg5OQ==", "bodyText": "This is in Http2ChannelInitilizer too, should we fix that file as well?", "url": "https://github.com/linkedin/rest.li/pull/296#discussion_r425469899", "createdAt": "2020-05-14T22:39:50Z", "author": {"login": "rachelhanhan"}, "path": "r2-netty/src/main/java/com/linkedin/r2/netty/client/http/HttpChannelInitializer.java", "diffHunk": "@@ -86,7 +86,7 @@\n     _maxInitialLineLength = maxInitialLineLength;\n     _maxHeaderSize = maxHeaderSize;\n     _maxChunkSize = maxChunkSize;\n-    _maxContentLength = maxContentLength > Integer.MAX_VALUE ? Integer.MAX_VALUE : (int) maxContentLength;\n+    _maxContentLength = maxContentLength;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f14dc38d1269ca3907443e9968d600d671d6e197"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTQ3MzAwMA==", "bodyText": "We can't fix it in Http2ChannelInitializer as Netty expects an integer value there and the one in Http2ChannelInitializer is not used in StreamHandler", "url": "https://github.com/linkedin/rest.li/pull/296#discussion_r425473000", "createdAt": "2020-05-14T22:49:38Z", "author": {"login": "nizarm"}, "path": "r2-netty/src/main/java/com/linkedin/r2/netty/client/http/HttpChannelInitializer.java", "diffHunk": "@@ -86,7 +86,7 @@\n     _maxInitialLineLength = maxInitialLineLength;\n     _maxHeaderSize = maxHeaderSize;\n     _maxChunkSize = maxChunkSize;\n-    _maxContentLength = maxContentLength > Integer.MAX_VALUE ? Integer.MAX_VALUE : (int) maxContentLength;\n+    _maxContentLength = maxContentLength;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTQ2OTg5OQ=="}, "originalCommit": {"oid": "f14dc38d1269ca3907443e9968d600d671d6e197"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTQ3NDg2Ng==", "bodyText": "The one used in Http2ChannelInitializer is used for parent channel and it is not used to serve the same purpose in HttpChannelInitializer. The http2 equivalent of the same can be found @ Http2StreamChannelInitializer", "url": "https://github.com/linkedin/rest.li/pull/296#discussion_r425474866", "createdAt": "2020-05-14T22:55:14Z", "author": {"login": "nizarm"}, "path": "r2-netty/src/main/java/com/linkedin/r2/netty/client/http/HttpChannelInitializer.java", "diffHunk": "@@ -86,7 +86,7 @@\n     _maxInitialLineLength = maxInitialLineLength;\n     _maxHeaderSize = maxHeaderSize;\n     _maxChunkSize = maxChunkSize;\n-    _maxContentLength = maxContentLength > Integer.MAX_VALUE ? Integer.MAX_VALUE : (int) maxContentLength;\n+    _maxContentLength = maxContentLength;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTQ2OTg5OQ=="}, "originalCommit": {"oid": "f14dc38d1269ca3907443e9968d600d671d6e197"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTQ4MzgzMw==", "bodyText": "Got it, thanks", "url": "https://github.com/linkedin/rest.li/pull/296#discussion_r425483833", "createdAt": "2020-05-14T23:25:28Z", "author": {"login": "rachelhanhan"}, "path": "r2-netty/src/main/java/com/linkedin/r2/netty/client/http/HttpChannelInitializer.java", "diffHunk": "@@ -86,7 +86,7 @@\n     _maxInitialLineLength = maxInitialLineLength;\n     _maxHeaderSize = maxHeaderSize;\n     _maxChunkSize = maxChunkSize;\n-    _maxContentLength = maxContentLength > Integer.MAX_VALUE ? Integer.MAX_VALUE : (int) maxContentLength;\n+    _maxContentLength = maxContentLength;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTQ2OTg5OQ=="}, "originalCommit": {"oid": "f14dc38d1269ca3907443e9968d600d671d6e197"}, "originalPosition": 15}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 447, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}