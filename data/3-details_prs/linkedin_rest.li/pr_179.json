{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc3NDk1MzAy", "number": 179, "title": "fix template exception while request build init for custom response types", "bodyText": "Test:\nmint build\nwrote an action test to test changes manually.", "createdAt": "2020-02-20T00:56:28Z", "url": "https://github.com/linkedin/rest.li/pull/179", "merged": true, "mergeCommit": {"oid": "58ecfb4f774c67c55f91f62d424457ed45eff115"}, "closed": true, "closedAt": "2020-02-28T00:15:58Z", "author": {"login": "aman1309"}, "timelineItems": {"totalCount": 16, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcGAUxbgH2gAyMzc3NDk1MzAyOmEwODZiNzFhY2IzNWVmMWEzNDZjNWNmNjZhODM5YWQ3NzYzYWMxNzM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcIkhh-gH2gAyMzc3NDk1MzAyOjM1NWM4MGVhM2QxNTc0NjRmNGJhYmNlNjU1ZjkxYzhlNDgyY2ExNDQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "a086b71acb35ef1a346c5cf66a839ad7763ac173", "author": {"user": {"login": "aman1309", "name": "Aman Gupta"}}, "url": "https://github.com/linkedin/rest.li/commit/a086b71acb35ef1a346c5cf66a839ad7763ac173", "committedDate": "2020-02-20T00:52:19Z", "message": "fix template runtime exception while request build init for custom response types"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYxNTcyNjIw", "url": "https://github.com/linkedin/rest.li/pull/179#pullrequestreview-361572620", "createdAt": "2020-02-20T01:13:09Z", "commit": {"oid": "a086b71acb35ef1a346c5cf66a839ad7763ac173"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQwMToxMzowOVrOFr9VNA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQwMToxMzowOVrOFr9VNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTYzNzk0MA==", "bodyText": "Why do you need the non primitive class check?", "url": "https://github.com/linkedin/rest.li/pull/179#discussion_r381637940", "createdAt": "2020-02-20T01:13:09Z", "author": {"login": "karthikbalasub"}, "path": "restli-common/src/main/java/com/linkedin/restli/common/TypeSpec.java", "diffHunk": "@@ -67,7 +68,11 @@ public TypeSpec(Class<T> type)\n   private static DataSchema backfillSchemaIfPossible(Class<?> type)\n   {\n     // These are all the classes used for type specs that are \"schema-less\".\n-    if(type == CompoundKey.class || type == ComplexResourceKey.class || type == Void.class) return null;\n+    if (type == CompoundKey.class || type == ComplexResourceKey.class || type == Void.class\n+        || (!DataSchemaUtil.isPrimitiveClass(type) && DataTemplateUtil.hasCoercer(type)))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a086b71acb35ef1a346c5cf66a839ad7763ac173"}, "originalPosition": 14}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fabf871f9e30ca714414cba9e525a69c976e9066", "author": {"user": {"login": "aman1309", "name": "Aman Gupta"}}, "url": "https://github.com/linkedin/rest.li/commit/fabf871f9e30ca714414cba9e525a69c976e9066", "committedDate": "2020-02-20T04:02:24Z", "message": "Address karthik comment to use resource spec to get response schema"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYyMTIzMDI3", "url": "https://github.com/linkedin/rest.li/pull/179#pullrequestreview-362123027", "createdAt": "2020-02-20T18:13:15Z", "commit": {"oid": "fabf871f9e30ca714414cba9e525a69c976e9066"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxODoxMzoxNVrOFsd4bA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxODoxMzoxNVrOFsd4bA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjE3MTI0NA==", "bodyText": "This is not loading from resourespec?", "url": "https://github.com/linkedin/rest.li/pull/179#discussion_r382171244", "createdAt": "2020-02-20T18:13:15Z", "author": {"login": "karthikbalasub"}, "path": "restli-client/src/main/java/com/linkedin/restli/client/ActionRequestBuilder.java", "diffHunk": "@@ -193,7 +195,10 @@ public ActionRequestBuilder(String baseUriTemplate, TypeSpec<V> elementType, Res\n     if (_resourceSpec.getRequestMetadata(_name) == null) // old builder code in use\n     {\n       requestDataSchema = DynamicRecordMetadata.buildSchema(_name, _actionParams.keySet());\n-\n+      if (_elementType == null)\n+      {\n+        _elementType = new TypeSpec<>(_elementClass);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fabf871f9e30ca714414cba9e525a69c976e9066"}, "originalPosition": 27}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYyMTU5MTUy", "url": "https://github.com/linkedin/rest.li/pull/179#pullrequestreview-362159152", "createdAt": "2020-02-20T19:08:02Z", "commit": {"oid": "fabf871f9e30ca714414cba9e525a69c976e9066"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYyMjE4MTQ5", "url": "https://github.com/linkedin/rest.li/pull/179#pullrequestreview-362218149", "createdAt": "2020-02-20T20:41:47Z", "commit": {"oid": "fabf871f9e30ca714414cba9e525a69c976e9066"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQyMDo0MTo0N1rOFsib-w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQyMDo0MTo0N1rOFsib-w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjI0NTg4Mw==", "bodyText": "Why don't you just keep track of registered custom classes in Custom.java? I think that would be simpler", "url": "https://github.com/linkedin/rest.li/pull/179#discussion_r382245883", "createdAt": "2020-02-20T20:41:47Z", "author": {"login": "evanw555"}, "path": "restli-common/src/main/java/com/linkedin/restli/common/TypeSpec.java", "diffHunk": "@@ -67,7 +68,11 @@ public TypeSpec(Class<T> type)\n   private static DataSchema backfillSchemaIfPossible(Class<?> type)\n   {\n     // These are all the classes used for type specs that are \"schema-less\".\n-    if(type == CompoundKey.class || type == ComplexResourceKey.class || type == Void.class) return null;\n+    if (type == CompoundKey.class || type == ComplexResourceKey.class || type == Void.class\n+        || (!DataSchemaUtil.isPrimitiveClass(type) && DataTemplateUtil.hasCoercer(type)))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fabf871f9e30ca714414cba9e525a69c976e9066"}, "originalPosition": 14}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3cad4e0c7dcfa20cca9e8499a8e0de206883130d", "author": {"user": {"login": "aman1309", "name": "Aman Gupta"}}, "url": "https://github.com/linkedin/rest.li/commit/3cad4e0c7dcfa20cca9e8499a8e0de206883130d", "committedDate": "2020-02-20T21:46:25Z", "message": "abstract custom type identification to Custom.java and use it in typespec"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYyMzIwMDk1", "url": "https://github.com/linkedin/rest.li/pull/179#pullrequestreview-362320095", "createdAt": "2020-02-20T23:57:52Z", "commit": {"oid": "3cad4e0c7dcfa20cca9e8499a8e0de206883130d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQyMzo1Nzo1MlrOFsnYbg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQyMzo1Nzo1MlrOFsnYbg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjMyNjg5NA==", "bodyText": "Thinking about this now. How will this behave for enums? You should test this. It looks like the Enum type has a coercer, yet it's not in the \"primitives\" mapping. Would this method return true?", "url": "https://github.com/linkedin/rest.li/pull/179#discussion_r382326894", "createdAt": "2020-02-20T23:57:52Z", "author": {"login": "evanw555"}, "path": "data/src/main/java/com/linkedin/data/template/Custom.java", "diffHunk": "@@ -149,4 +151,16 @@ public static void initializeCustomClass(Class<?> customClass)\n   {\n     DataTemplateUtil.initializeClass(customClass);\n   }\n+\n+  /**\n+   * Return whether the input class is a Custom type or not\n+   * uses coercer map to identify as each custom type must register a coercer excluding the primitive types.\n+   *\n+   * @param clazz is the class to check.\n+   * @return true if an object of the input class is a Custom type.\n+   */\n+  public static boolean isCustomType(Class<?> clazz)\n+  {\n+    return !DataSchemaUtil.isPrimitiveClass(clazz) && DataTemplateUtil.hasCoercer(clazz);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3cad4e0c7dcfa20cca9e8499a8e0de206883130d"}, "originalPosition": 23}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYyMzIwNTEy", "url": "https://github.com/linkedin/rest.li/pull/179#pullrequestreview-362320512", "createdAt": "2020-02-20T23:59:03Z", "commit": {"oid": "3cad4e0c7dcfa20cca9e8499a8e0de206883130d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQyMzo1OTowM1rOFsnZ1A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQyMzo1OTowM1rOFsnZ1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjMyNzI1Mg==", "bodyText": "I suggest renaming to isCustomClass to be consistent with the other methods in this class. Update the Javadoc to explain that this method checks if a given class is registered as a custom Java binding.", "url": "https://github.com/linkedin/rest.li/pull/179#discussion_r382327252", "createdAt": "2020-02-20T23:59:03Z", "author": {"login": "evanw555"}, "path": "data/src/main/java/com/linkedin/data/template/Custom.java", "diffHunk": "@@ -149,4 +151,16 @@ public static void initializeCustomClass(Class<?> customClass)\n   {\n     DataTemplateUtil.initializeClass(customClass);\n   }\n+\n+  /**\n+   * Return whether the input class is a Custom type or not\n+   * uses coercer map to identify as each custom type must register a coercer excluding the primitive types.\n+   *\n+   * @param clazz is the class to check.\n+   * @return true if an object of the input class is a Custom type.\n+   */\n+  public static boolean isCustomType(Class<?> clazz)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3cad4e0c7dcfa20cca9e8499a8e0de206883130d"}, "originalPosition": 21}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "564041aef98047f084f47118a0a621bfab8e6f40", "author": {"user": {"login": "aman1309", "name": "Aman Gupta"}}, "url": "https://github.com/linkedin/rest.li/commit/564041aef98047f084f47118a0a621bfab8e6f40", "committedDate": "2020-02-21T01:59:42Z", "message": "remove custom type check for typespec, not needed for fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e67ba3e87d0b6e1b6de096ecf194117db70bcdcf", "author": {"user": {"login": "aman1309", "name": "Aman Gupta"}}, "url": "https://github.com/linkedin/rest.li/commit/e67ba3e87d0b6e1b6de096ecf194117db70bcdcf", "committedDate": "2020-02-26T22:40:46Z", "message": "Merge branch 'master' into fix"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY1Mzk3MTQ5", "url": "https://github.com/linkedin/rest.li/pull/179#pullrequestreview-365397149", "createdAt": "2020-02-27T03:41:28Z", "commit": {"oid": "e67ba3e87d0b6e1b6de096ecf194117db70bcdcf"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QwMzo0MToyOFrOFvEUuw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QwMzo0MToyOFrOFvEUuw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDg5ODIzNQ==", "bodyText": "Why are we lazily loading this class-level field in this method? Wouldn't it make more sense to just do so in the constructor?", "url": "https://github.com/linkedin/rest.li/pull/179#discussion_r384898235", "createdAt": "2020-02-27T03:41:28Z", "author": {"login": "evanw555"}, "path": "restli-client/src/main/java/com/linkedin/restli/client/ActionRequestBuilder.java", "diffHunk": "@@ -193,7 +195,10 @@ public ActionRequestBuilder(String baseUriTemplate, TypeSpec<V> elementType, Res\n     if (_resourceSpec.getRequestMetadata(_name) == null) // old builder code in use\n     {\n       requestDataSchema = DynamicRecordMetadata.buildSchema(_name, _actionParams.keySet());\n-\n+      if (_elementType == null)\n+      {\n+        _elementType = new TypeSpec<>(_elementClass);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e67ba3e87d0b6e1b6de096ecf194117db70bcdcf"}, "originalPosition": 27}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "519079f3556f273b73cdf73c09046a9dabf23d60", "author": {"user": {"login": "aman1309", "name": "Aman Gupta"}}, "url": "https://github.com/linkedin/rest.li/commit/519079f3556f273b73cdf73c09046a9dabf23d60", "committedDate": "2020-02-27T18:24:24Z", "message": "Merge branch 'master' into fix"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY2MDI3NzM2", "url": "https://github.com/linkedin/rest.li/pull/179#pullrequestreview-366027736", "createdAt": "2020-02-27T21:55:52Z", "commit": {"oid": "519079f3556f273b73cdf73c09046a9dabf23d60"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d7f2541346fae8676d0b3160f24d8f9146817303", "author": {"user": {"login": "aman1309", "name": "Aman Gupta"}}, "url": "https://github.com/linkedin/rest.li/commit/d7f2541346fae8676d0b3160f24d8f9146817303", "committedDate": "2020-02-28T00:06:52Z", "message": "Merge branch 'master' into fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "355c80ea3d157464f4babce655f91c8e482ca144", "author": {"user": {"login": "aman1309", "name": "Aman Gupta"}}, "url": "https://github.com/linkedin/rest.li/commit/355c80ea3d157464f4babce655f91c8e482ca144", "committedDate": "2020-02-28T00:10:41Z", "message": "Empty commit to trigger build"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4933, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}