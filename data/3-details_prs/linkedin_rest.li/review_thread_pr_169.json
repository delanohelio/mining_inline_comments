{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc0NjU3NjQ4", "number": 169, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QwNjoyMjowMlrODfbeYw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxODo1NDoyMVrODfqRlQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0MjgyNTk1OnYy", "diffSide": "LEFT", "path": "generator-test/src/test/pegasus/com/linkedin/pegasus/generator/test/idl/enums/EscapedSymbols.pdl", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QwNjoyMjowMlrOFpINlQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxODo0NTozMFrOFpfVzA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODY3MDQ4NQ==", "bodyText": "why do we delete this one?", "url": "https://github.com/linkedin/rest.li/pull/169#discussion_r378670485", "createdAt": "2020-02-13T06:22:02Z", "author": {"login": "nickibi"}, "path": "generator-test/src/test/pegasus/com/linkedin/pegasus/generator/test/idl/enums/EscapedSymbols.pdl", "diffHunk": "@@ -5,7 +5,6 @@ namespace com.linkedin.pegasus.generator.test.idl.enums\n  */\n enum EscapedSymbols {\n   ENUM,\n-  `enum`,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "39310c032b48b12d60a9cc67d5e42da179257ab8"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTAyNjUxMQ==", "bodyText": "This was an issue introduced in previous commit. enum cannot be used as it is reserved keyword in java. The template generation step fails for this.", "url": "https://github.com/linkedin/rest.li/pull/169#discussion_r379026511", "createdAt": "2020-02-13T18:01:20Z", "author": {"login": "karthikbalasub"}, "path": "generator-test/src/test/pegasus/com/linkedin/pegasus/generator/test/idl/enums/EscapedSymbols.pdl", "diffHunk": "@@ -5,7 +5,6 @@ namespace com.linkedin.pegasus.generator.test.idl.enums\n  */\n enum EscapedSymbols {\n   ENUM,\n-  `enum`,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODY3MDQ4NQ=="}, "originalCommit": {"oid": "39310c032b48b12d60a9cc67d5e42da179257ab8"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA0OTQyMA==", "bodyText": "Oops", "url": "https://github.com/linkedin/rest.li/pull/169#discussion_r379049420", "createdAt": "2020-02-13T18:45:30Z", "author": {"login": "evanw555"}, "path": "generator-test/src/test/pegasus/com/linkedin/pegasus/generator/test/idl/enums/EscapedSymbols.pdl", "diffHunk": "@@ -5,7 +5,6 @@ namespace com.linkedin.pegasus.generator.test.idl.enums\n  */\n enum EscapedSymbols {\n   ENUM,\n-  `enum`,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODY3MDQ4NQ=="}, "originalCommit": {"oid": "39310c032b48b12d60a9cc67d5e42da179257ab8"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0NTIyOTQzOnYy", "diffSide": "RIGHT", "path": "data/src/main/java/com/linkedin/data/schema/SchemaToPdlEncoder.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxODo0ODoxNFrOFpfbfg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxODo0ODoxNFrOFpfbfg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA1MDg3OA==", "bodyText": "Nice catch.", "url": "https://github.com/linkedin/rest.li/pull/169#discussion_r379050878", "createdAt": "2020-02-13T18:48:14Z", "author": {"login": "evanw555"}, "path": "data/src/main/java/com/linkedin/data/schema/SchemaToPdlEncoder.java", "diffHunk": "@@ -782,7 +782,7 @@ private void gatherTypes(DataSchema schema, boolean isDeclaredInline, Set<Name>\n         }\n         for (NamedDataSchema include : recordSchema.getInclude())\n         {\n-          gatherTypes(include, true, encounteredTypes, inlinedTypes);\n+          gatherTypes(include, recordSchema.isIncludeDeclaredInline(include), encounteredTypes, inlinedTypes);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "39310c032b48b12d60a9cc67d5e42da179257ab8"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0NTIzNTk1OnYy", "diffSide": "RIGHT", "path": "data/src/main/java/com/linkedin/data/schema/SchemaToPdlEncoder.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxODo1MDowOFrOFpffYw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxODo1MDowOFrOFpffYw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA1MTg3NQ==", "bodyText": "We should clarify that this set is a collection of simple names, not full names.", "url": "https://github.com/linkedin/rest.li/pull/169#discussion_r379051875", "createdAt": "2020-02-13T18:50:08Z", "author": {"login": "evanw555"}, "path": "data/src/main/java/com/linkedin/data/schema/SchemaToPdlEncoder.java", "diffHunk": "@@ -756,7 +756,7 @@ private void writeDocAndProperties(RecordDataSchema.Field field) throws IOExcept\n    * @param inlinedTypes cumulative set of all inlined types in this schema (and its descendents).", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "39310c032b48b12d60a9cc67d5e42da179257ab8"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0NTI1MDc3OnYy", "diffSide": "RIGHT", "path": "generator-test/src/test/pegasus/com/linkedin/pegasus/generator/test/idl/imports/InlineTypeConflict.pdl", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxODo1NDoyMVrOFpfopw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxODo1NDoyMVrOFpfopw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA1NDI0Nw==", "bodyText": "nit: reference -> references", "url": "https://github.com/linkedin/rest.li/pull/169#discussion_r379054247", "createdAt": "2020-02-13T18:54:21Z", "author": {"login": "evanw555"}, "path": "generator-test/src/test/pegasus/com/linkedin/pegasus/generator/test/idl/imports/InlineTypeConflict.pdl", "diffHunk": "@@ -0,0 +1,28 @@\n+namespace com.linkedin.pegasus.generator.test.idl.imports\n+\n+/**\n+ * Simple type cannot be imported as it conflicts with an inline type\n+ */\n+record InlineTypeConflict includes com.linkedin.pegasus.generator.test.idl.records.Simple {\n+  /**\n+   * This inline type takes precedence over 'Simple' record from external namespace.\n+   */\n+  inlineType: record Simple {\n+    /**\n+     * Fields with conflicting types should also have fully qualified name.\n+     */\n+    foo: com.linkedin.pegasus.generator.test.idl.records.Simple\n+  }\n+\n+  /**\n+   * Inline type can also conflict with types used for other fields.\n+   */\n+  inlineType2: record Note {\n+    a: int\n+  }\n+\n+  /**\n+   * This field reference a type (Note) that conflicts with Note defined inline, and thus must use fully qualified name.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "39310c032b48b12d60a9cc67d5e42da179257ab8"}, "originalPosition": 25}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 562, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}