{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY4NTQ0MjE0", "number": 385, "title": "add optional set schema path suffix in file resolver", "bodyText": "", "createdAt": "2020-08-17T02:31:33Z", "url": "https://github.com/linkedin/rest.li/pull/385", "merged": true, "mergeCommit": {"oid": "f4d1feb4f9f208d6fbea41ff377acf02681f54a8"}, "closed": true, "closedAt": "2020-08-19T21:05:14Z", "author": {"login": "aman1309"}, "timelineItems": {"totalCount": 27, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc_qxKEgFqTQ2ODE1Njc4NA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdAnuOCgFqTQ3MTEwNTA5NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY4MTU2Nzg0", "url": "https://github.com/linkedin/rest.li/pull/385#pullrequestreview-468156784", "createdAt": "2020-08-17T04:25:35Z", "commit": {"oid": "cc2dc532b2edde189f292ed38b25295646671a53"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QwNDoyNTozNVrOHBZS8A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QwNDoyOTo0NFrOHBZWPA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTIyNTA3Mg==", "bodyText": "It should be \"prefix\" not \"suffix\".", "url": "https://github.com/linkedin/rest.li/pull/385#discussion_r471225072", "createdAt": "2020-08-17T04:25:35Z", "author": {"login": "nickibi"}, "path": "data/src/main/java/com/linkedin/data/schema/resolver/FileDataSchemaResolver.java", "diffHunk": "@@ -68,6 +68,12 @@\n    */\n   public static final String DEFAULT_EXTENSION = SchemaParser.FILE_EXTENSION;\n \n+  /**\n+   * The file path suffix for different types of schemas. Default is {@link InternalConstants#PEGASUS_DIR_IN_JAR}\n+   * Ex \"pegasus\" for data or \"extensions\" for relationship extension schema files\n+   */\n+  private String _schemasPathSuffix = InternalConstants.PEGASUS_DIR_IN_JAR;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc2dc532b2edde189f292ed38b25295646671a53"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTIyNTExNQ==", "bodyText": "I think we should call it \"setSchemasDirectory\", same for get method.", "url": "https://github.com/linkedin/rest.li/pull/385#discussion_r471225115", "createdAt": "2020-08-17T04:25:48Z", "author": {"login": "nickibi"}, "path": "data/src/main/java/com/linkedin/data/schema/resolver/FileDataSchemaResolver.java", "diffHunk": "@@ -184,6 +190,24 @@ public void setPaths(List<String> paths)\n     return _paths;\n   }\n \n+  /**\n+   * Return the current file path suffix for schemas location dir\n+   *\n+   * @return the current search paths.\n+   */\n+  public String getSchemasPathSuffix() {\n+    return _schemasPathSuffix;\n+  }\n+\n+  /**\n+   * Sets the file path suffix for schemas location dir\n+   *\n+   * @param schemasPathSuffix path suffix.\n+   */\n+  public void setSchemasPathSuffix(String schemasPathSuffix) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc2dc532b2edde189f292ed38b25295646671a53"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTIyNTgzMw==", "bodyText": "Add some comment for this use case. Also update the test comment - (line 73-76)", "url": "https://github.com/linkedin/rest.li/pull/385#discussion_r471225833", "createdAt": "2020-08-17T04:29:17Z", "author": {"login": "nickibi"}, "path": "data/src/test/java/com/linkedin/data/schema/resolver/TestFileDataSchemaResolver.java", "diffHunk": "@@ -83,6 +85,12 @@ public void testJarResolution() throws IOException\n     Assert.assertNotNull(schema);\n     Assert.assertTrue(schema.getProperties().containsKey(\"legit\"));\n     Assert.assertFalse(schema.getProperties().containsKey(\"impostor\"));\n+    // Assert extension schemas are not searched.\n+    Assert.assertNull(resolver.findDataSchema(\"com.example.models.FooExtension\", new StringBuilder()));\n+\n+    resolver.setSchemasPathSuffix(InternalConstants.PEGASUS_EXTENSIONS_DIR_IN_JAR);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc2dc532b2edde189f292ed38b25295646671a53"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTIyNTkxNg==", "bodyText": "We support /pegasus directory by default. Now we also want to support /extensions directory if configuration is provided. What will happen if user pass neither \"pegasus\" nor \"extensions\" in the set method? Shall we provide some check here? Also we should update this information in the set method java doc, so users could know what directories are supported.", "url": "https://github.com/linkedin/rest.li/pull/385#discussion_r471225916", "createdAt": "2020-08-17T04:29:44Z", "author": {"login": "nickibi"}, "path": "data/src/main/java/com/linkedin/data/schema/resolver/FileDataSchemaResolver.java", "diffHunk": "@@ -241,7 +265,7 @@ protected DataSchemaLocation transform(String path)\n           StringBuilder builder = new StringBuilder();\n           // within a JAR file, files are treated as resources. Thus, we should lookup using the resource separator\n           // character, which is '/'\n-          builder.append(InternalConstants.PEGASUS_DIR_IN_JAR)\n+          builder.append(_schemasPathSuffix)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc2dc532b2edde189f292ed38b25295646671a53"}, "originalPosition": 43}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY4ODMyMTkx", "url": "https://github.com/linkedin/rest.li/pull/385#pullrequestreview-468832191", "createdAt": "2020-08-17T21:05:22Z", "commit": {"oid": "061fcfca8f9839d72bea450e90f723be92761d06"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QyMTowNToyMlrOHB62AQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QyMTowNToyMlrOHB62AQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTc3NDcyMQ==", "bodyText": "Lets do restli coding convention?\nLeft curl -brace at new line", "url": "https://github.com/linkedin/rest.li/pull/385#discussion_r471774721", "createdAt": "2020-08-17T21:05:22Z", "author": {"login": "BrianPin"}, "path": "data/src/main/java/com/linkedin/data/schema/resolver/FileDataSchemaResolver.java", "diffHunk": "@@ -184,6 +190,25 @@ public void setPaths(List<String> paths)\n     return _paths;\n   }\n \n+  /**\n+   * Return the current file path suffix for schemas location dir\n+   *\n+   * @return the current search paths.\n+   */\n+  public String getSchemasDirPathSuffix() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "061fcfca8f9839d72bea450e90f723be92761d06"}, "originalPosition": 22}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY4ODM3ODU2", "url": "https://github.com/linkedin/rest.li/pull/385#pullrequestreview-468837856", "createdAt": "2020-08-17T21:15:20Z", "commit": {"oid": "061fcfca8f9839d72bea450e90f723be92761d06"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QyMToxNToyMFrOHB7HNg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QyMToxNToyMFrOHB7HNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTc3OTEyNg==", "bodyText": "if it is the first part of the string, the variable _schemasDirPathSuffix seems to be suitable by calling pathPrefix?", "url": "https://github.com/linkedin/rest.li/pull/385#discussion_r471779126", "createdAt": "2020-08-17T21:15:20Z", "author": {"login": "BrianPin"}, "path": "data/src/main/java/com/linkedin/data/schema/resolver/FileDataSchemaResolver.java", "diffHunk": "@@ -241,7 +266,7 @@ protected DataSchemaLocation transform(String path)\n           StringBuilder builder = new StringBuilder();\n           // within a JAR file, files are treated as resources. Thus, we should lookup using the resource separator\n           // character, which is '/'\n-          builder.append(InternalConstants.PEGASUS_DIR_IN_JAR)\n+          builder.append(_schemasDirPathSuffix)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "061fcfca8f9839d72bea450e90f723be92761d06"}, "originalPosition": 44}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9262075c95af50249c1c6b22b7be8540a614402e", "author": {"user": {"login": "aman1309", "name": "Aman Gupta"}}, "url": "https://github.com/linkedin/rest.li/commit/9262075c95af50249c1c6b22b7be8540a614402e", "committedDate": "2020-08-17T23:36:25Z", "message": "address comments 2"}, "afterCommit": {"oid": "ea54079d66947e632330c72f613749a05cf6920e", "author": {"user": {"login": "aman1309", "name": "Aman Gupta"}}, "url": "https://github.com/linkedin/rest.li/commit/ea54079d66947e632330c72f613749a05cf6920e", "committedDate": "2020-08-17T23:41:53Z", "message": "address comments 2"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY4OTAxMzc1", "url": "https://github.com/linkedin/rest.li/pull/385#pullrequestreview-468901375", "createdAt": "2020-08-17T23:44:22Z", "commit": {"oid": "ea54079d66947e632330c72f613749a05cf6920e"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QyMzo0NDoyMlrOHB-cLA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QyMzo0NzoxMFrOHB-fZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTgzMzY0NA==", "bodyText": "For proper formatting, we should probably have the enums upper-case (PEGASUS, EXTENSIONS), with string parameters referring to the directory name. The usage above would call SchemaDirLocation#getName or something like that.", "url": "https://github.com/linkedin/rest.li/pull/385#discussion_r471833644", "createdAt": "2020-08-17T23:44:22Z", "author": {"login": "evanw555"}, "path": "pegasus-common/src/main/java/com/linkedin/internal/common/SchemaDirLocation.java", "diffHunk": "@@ -0,0 +1,36 @@\n+/*\n+   Copyright (c) 2020 LinkedIn Corp.\n+\n+   Licensed under the Apache License, Version 2.0 (the \"License\");\n+   you may not use this file except in compliance with the License.\n+   You may obtain a copy of the License at\n+\n+       http://www.apache.org/licenses/LICENSE-2.0\n+\n+   Unless required by applicable law or agreed to in writing, software\n+   distributed under the License is distributed on an \"AS IS\" BASIS,\n+   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+   See the License for the specific language governing permissions and\n+   limitations under the License.\n+*/\n+\n+package com.linkedin.internal.common;\n+\n+/**\n+ * Directories within resource jar file that holds different types of pegasus schemas. Ex. Data or Extensions\n+ *\n+ * @author Aman Gupta\n+ */\n+public enum SchemaDirLocation\n+{\n+  /**\n+   * Directory holds the pegasus schemas. Pegasus parsers and resolvers look for pegasus\n+   * files(*.pdl, *.pdsc) only within this directory.\n+   */\n+  pegasus,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ea54079d66947e632330c72f613749a05cf6920e"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTgzNDQ3MQ==", "bodyText": "\"Schema dir location\" seems a little confusing and kinda redundant. It seems to me that it's more of a schema dir \"type\" or schema dir \"name\". Also, I would prefer that the class name contains the word \"Directory\" rather than the abbreviated \"Dir\"\nSo perhaps something like:\n\nSchemaDirectory\nSchemaDirectoryType\nSchemaDirectoryName", "url": "https://github.com/linkedin/rest.li/pull/385#discussion_r471834471", "createdAt": "2020-08-17T23:47:10Z", "author": {"login": "evanw555"}, "path": "pegasus-common/src/main/java/com/linkedin/internal/common/SchemaDirLocation.java", "diffHunk": "@@ -0,0 +1,36 @@\n+/*\n+   Copyright (c) 2020 LinkedIn Corp.\n+\n+   Licensed under the Apache License, Version 2.0 (the \"License\");\n+   you may not use this file except in compliance with the License.\n+   You may obtain a copy of the License at\n+\n+       http://www.apache.org/licenses/LICENSE-2.0\n+\n+   Unless required by applicable law or agreed to in writing, software\n+   distributed under the License is distributed on an \"AS IS\" BASIS,\n+   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+   See the License for the specific language governing permissions and\n+   limitations under the License.\n+*/\n+\n+package com.linkedin.internal.common;\n+\n+/**\n+ * Directories within resource jar file that holds different types of pegasus schemas. Ex. Data or Extensions\n+ *\n+ * @author Aman Gupta\n+ */\n+public enum SchemaDirLocation", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ea54079d66947e632330c72f613749a05cf6920e"}, "originalPosition": 24}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY4OTAzMjI5", "url": "https://github.com/linkedin/rest.li/pull/385#pullrequestreview-468903229", "createdAt": "2020-08-17T23:50:05Z", "commit": {"oid": "ea54079d66947e632330c72f613749a05cf6920e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6b3d79ee826da461127a6be8d028e6587b46f437", "author": {"user": {"login": "aman1309", "name": "Aman Gupta"}}, "url": "https://github.com/linkedin/rest.li/commit/6b3d79ee826da461127a6be8d028e6587b46f437", "committedDate": "2020-08-17T23:59:39Z", "message": "refactor"}, "afterCommit": {"oid": "a5793e68d07612750380ad8a622eca82eb285e1f", "author": {"user": {"login": "aman1309", "name": "Aman Gupta"}}, "url": "https://github.com/linkedin/rest.li/commit/a5793e68d07612750380ad8a622eca82eb285e1f", "committedDate": "2020-08-18T00:01:34Z", "message": "refactor"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY4OTIwNTk2", "url": "https://github.com/linkedin/rest.li/pull/385#pullrequestreview-468920596", "createdAt": "2020-08-18T00:47:56Z", "commit": {"oid": "a5793e68d07612750380ad8a622eca82eb285e1f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQwMDo0Nzo1NlrOHB_fxA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQwMDo0Nzo1NlrOHB_fxA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTg1MDk0OA==", "bodyText": "I am wondering why it is in the internal common package? Users will use it to set up the resolver schema directory name, so it is not for internal using purpose. Do you think we should move this enum to the same package as SchemaResolver?", "url": "https://github.com/linkedin/rest.li/pull/385#discussion_r471850948", "createdAt": "2020-08-18T00:47:56Z", "author": {"login": "nickibi"}, "path": "pegasus-common/src/main/java/com/linkedin/internal/common/SchemaDirectoryName.java", "diffHunk": "@@ -0,0 +1,47 @@\n+/*\n+   Copyright (c) 2020 LinkedIn Corp.\n+\n+   Licensed under the Apache License, Version 2.0 (the \"License\");\n+   you may not use this file except in compliance with the License.\n+   You may obtain a copy of the License at\n+\n+       http://www.apache.org/licenses/LICENSE-2.0\n+\n+   Unless required by applicable law or agreed to in writing, software\n+   distributed under the License is distributed on an \"AS IS\" BASIS,\n+   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+   See the License for the specific language governing permissions and\n+   limitations under the License.\n+*/\n+\n+package com.linkedin.internal.common;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a5793e68d07612750380ad8a622eca82eb285e1f"}, "originalPosition": 17}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY5MDc1OTc0", "url": "https://github.com/linkedin/rest.li/pull/385#pullrequestreview-469075974", "createdAt": "2020-08-18T07:50:14Z", "commit": {"oid": "a5793e68d07612750380ad8a622eca82eb285e1f"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY5Njk3Mzk4", "url": "https://github.com/linkedin/rest.li/pull/385#pullrequestreview-469697398", "createdAt": "2020-08-18T17:59:38Z", "commit": {"oid": "a5b81eae5aa4995502a998ef6f0eea2562b21e91"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxNzo1OTozOFrOHCf5nw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxNzo1OTozOFrOHCf5nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjM4MTg1NQ==", "bodyText": "please rebase master, this file is out of date.", "url": "https://github.com/linkedin/rest.li/pull/385#discussion_r472381855", "createdAt": "2020-08-18T17:59:38Z", "author": {"login": "nickibi"}, "path": "CHANGELOG.md", "diffHunk": "@@ -18,6 +18,7 @@ and what APIs have changed, if applicable.\n - Allow publishing unstable release candidate versions of Rest.li (e.g. `1.2.3-rc.1`) from non-master branches.\n     - It's _strongly_ suggested to only use a release candidate version if you have a specific reason to do so.\n - Put extension schemas into the dataTemplate jar under /extensions path instead of putting them into the extensionSchema jar.\n+    - Updated `FileDataSchemaResolver` to resolve extension schemas from /extensions directory if specified.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a5b81eae5aa4995502a998ef6f0eea2562b21e91"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY5Njk3NDQz", "url": "https://github.com/linkedin/rest.li/pull/385#pullrequestreview-469697443", "createdAt": "2020-08-18T17:59:41Z", "commit": {"oid": "a5b81eae5aa4995502a998ef6f0eea2562b21e91"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1f67dabd3ab82a17a896d39a5fb1984a69d9fd3e", "author": {"user": {"login": "aman1309", "name": "Aman Gupta"}}, "url": "https://github.com/linkedin/rest.li/commit/1f67dabd3ab82a17a896d39a5fb1984a69d9fd3e", "committedDate": "2020-08-18T18:36:14Z", "message": "add optional set schema path suffix in file resolver"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e8b1c5a27c8cb1c9bcf388c13e7cd77009012a3c", "author": {"user": {"login": "aman1309", "name": "Aman Gupta"}}, "url": "https://github.com/linkedin/rest.li/commit/e8b1c5a27c8cb1c9bcf388c13e7cd77009012a3c", "committedDate": "2020-08-18T18:36:14Z", "message": "address comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ea54ee7368dba7d3653c7f68ba7bdce545ee782c", "author": {"user": {"login": "aman1309", "name": "Aman Gupta"}}, "url": "https://github.com/linkedin/rest.li/commit/ea54ee7368dba7d3653c7f68ba7bdce545ee782c", "committedDate": "2020-08-18T18:37:23Z", "message": "address comments 2"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b882f8f13b81d14985f2c6a81d851f1a73dd86f6", "author": {"user": {"login": "aman1309", "name": "Aman Gupta"}}, "url": "https://github.com/linkedin/rest.li/commit/b882f8f13b81d14985f2c6a81d851f1a73dd86f6", "committedDate": "2020-08-18T18:37:29Z", "message": "refactor"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a5b81eae5aa4995502a998ef6f0eea2562b21e91", "author": {"user": {"login": "aman1309", "name": "Aman Gupta"}}, "url": "https://github.com/linkedin/rest.li/commit/a5b81eae5aa4995502a998ef6f0eea2562b21e91", "committedDate": "2020-08-18T17:21:51Z", "message": "address review comments"}, "afterCommit": {"oid": "8df65de4b5ac6fe8d9c8cf4c185c7cd3e62e9962", "author": {"user": {"login": "aman1309", "name": "Aman Gupta"}}, "url": "https://github.com/linkedin/rest.li/commit/8df65de4b5ac6fe8d9c8cf4c185c7cd3e62e9962", "committedDate": "2020-08-18T18:39:01Z", "message": "address review comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f797103b190ba57e29f1ace1e2b5ea2727cf4f4d", "author": {"user": {"login": "aman1309", "name": "Aman Gupta"}}, "url": "https://github.com/linkedin/rest.li/commit/f797103b190ba57e29f1ace1e2b5ea2727cf4f4d", "committedDate": "2020-08-18T19:13:58Z", "message": "address review comments"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8df65de4b5ac6fe8d9c8cf4c185c7cd3e62e9962", "author": {"user": {"login": "aman1309", "name": "Aman Gupta"}}, "url": "https://github.com/linkedin/rest.li/commit/8df65de4b5ac6fe8d9c8cf4c185c7cd3e62e9962", "committedDate": "2020-08-18T18:39:01Z", "message": "address review comments"}, "afterCommit": {"oid": "f797103b190ba57e29f1ace1e2b5ea2727cf4f4d", "author": {"user": {"login": "aman1309", "name": "Aman Gupta"}}, "url": "https://github.com/linkedin/rest.li/commit/f797103b190ba57e29f1ace1e2b5ea2727cf4f4d", "committedDate": "2020-08-18T19:13:58Z", "message": "address review comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY5NzYzMzEz", "url": "https://github.com/linkedin/rest.li/pull/385#pullrequestreview-469763313", "createdAt": "2020-08-18T19:34:58Z", "commit": {"oid": "f797103b190ba57e29f1ace1e2b5ea2727cf4f4d"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY5NzY4OTgy", "url": "https://github.com/linkedin/rest.li/pull/385#pullrequestreview-469768982", "createdAt": "2020-08-18T19:44:09Z", "commit": {"oid": "f797103b190ba57e29f1ace1e2b5ea2727cf4f4d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxOTo0NDoxMFrOHCjUkw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxOTo0NDoxMFrOHCjUkw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjQzNzkwNw==", "bodyText": "For \"/extensions\", we have to support loading from both /pegasus and /extensions paths. Because extension schema includes base schema in /pegasus. If we do not load both paths, the extension schemas can not be resolved.", "url": "https://github.com/linkedin/rest.li/pull/385#discussion_r472437907", "createdAt": "2020-08-18T19:44:10Z", "author": {"login": "nickibi"}, "path": "data/src/main/java/com/linkedin/data/schema/resolver/FileDataSchemaResolver.java", "diffHunk": "@@ -241,7 +266,7 @@ protected DataSchemaLocation transform(String path)\n           StringBuilder builder = new StringBuilder();\n           // within a JAR file, files are treated as resources. Thus, we should lookup using the resource separator\n           // character, which is '/'\n-          builder.append(InternalConstants.PEGASUS_DIR_IN_JAR)\n+          builder.append(_schemasDirectoryName.getName())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f797103b190ba57e29f1ace1e2b5ea2727cf4f4d"}, "originalPosition": 61}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "17ec6cd83f0bb4adcad930c19e3f2d9465302012", "author": {"user": {"login": "aman1309", "name": "Aman Gupta"}}, "url": "https://github.com/linkedin/rest.li/commit/17ec6cd83f0bb4adcad930c19e3f2d9465302012", "committedDate": "2020-08-19T12:19:35Z", "message": "add extension multi path file resolver"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f73407697b9cd3be7712c545bb466c2d7af46da2", "author": {"user": {"login": "aman1309", "name": "Aman Gupta"}}, "url": "https://github.com/linkedin/rest.li/commit/f73407697b9cd3be7712c545bb466c2d7af46da2", "committedDate": "2020-08-19T12:14:17Z", "message": "add extension multi path file resolver"}, "afterCommit": {"oid": "17ec6cd83f0bb4adcad930c19e3f2d9465302012", "author": {"user": {"login": "aman1309", "name": "Aman Gupta"}}, "url": "https://github.com/linkedin/rest.li/commit/17ec6cd83f0bb4adcad930c19e3f2d9465302012", "committedDate": "2020-08-19T12:19:35Z", "message": "add extension multi path file resolver"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcwNjM4NzU3", "url": "https://github.com/linkedin/rest.li/pull/385#pullrequestreview-470638757", "createdAt": "2020-08-19T16:30:29Z", "commit": {"oid": "17ec6cd83f0bb4adcad930c19e3f2d9465302012"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQxNjozMDoyOVrOHDPmaw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQxNjozMDoyOVrOHDPmaw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzE2MzM3MQ==", "bodyText": "conventions of left brace", "url": "https://github.com/linkedin/rest.li/pull/385#discussion_r473163371", "createdAt": "2020-08-19T16:30:29Z", "author": {"login": "BrianPin"}, "path": "data/src/main/java/com/linkedin/data/schema/resolver/ClasspathResourceDataSchemaResolver.java", "diffHunk": "@@ -106,9 +130,19 @@ public SingleFormatClasspathSchemaResolver(DataSchemaParserFactory parserFactory\n       this._extension = \".\" + parserFactory.getLanguageExtension();\n     }\n \n+    /**\n+     * Construct a new instance that uses the {@link Thread#getContextClassLoader()} for the current thread.\n+     */\n+    public SingleFormatClasspathSchemaResolver(DataSchemaParserFactory parserFactory,\n+        SchemaDirectoryName schemaDirectoryName) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "17ec6cd83f0bb4adcad930c19e3f2d9465302012"}, "originalPosition": 64}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcwNjYwNDc5", "url": "https://github.com/linkedin/rest.li/pull/385#pullrequestreview-470660479", "createdAt": "2020-08-19T16:53:58Z", "commit": {"oid": "17ec6cd83f0bb4adcad930c19e3f2d9465302012"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQxNjo1Mzo1OFrOHDQlIg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQxNjo1Mzo1OFrOHDQlIg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzE3OTQyNg==", "bodyText": "So for our case, the resolver we use should be this one and only one right?\nAnd this is the resolver that be passed to the parser.", "url": "https://github.com/linkedin/rest.li/pull/385#discussion_r473179426", "createdAt": "2020-08-19T16:53:58Z", "author": {"login": "BrianPin"}, "path": "data/src/main/java/com/linkedin/data/schema/resolver/ClasspathResourceDataSchemaResolver.java", "diffHunk": "@@ -80,6 +79,26 @@ public ClasspathResourceDataSchemaResolver(ClassLoader classLoader)\n     _classLoader = classLoader;\n   }\n \n+  /**\n+   * Construct a new instance that uses the specified {@link ClassLoader}.\n+   *\n+   * @param classLoader provides the {@link ClassLoader}.\n+   * @param schemaDirectoryName The file directory name for different types of schemas.\n+   *                            Default is {@link SchemaDirectoryName#PEGASUS}\n+   */\n+  public ClasspathResourceDataSchemaResolver(ClassLoader classLoader, SchemaDirectoryName schemaDirectoryName)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "17ec6cd83f0bb4adcad930c19e3f2d9465302012"}, "originalPosition": 28}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3c4cb35bdcd2237337b37454b95779e808641285", "author": {"user": {"login": "aman1309", "name": "Aman Gupta"}}, "url": "https://github.com/linkedin/rest.li/commit/3c4cb35bdcd2237337b37454b95779e808641285", "committedDate": "2020-08-19T19:47:25Z", "message": "review comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcwOTU2ODU4", "url": "https://github.com/linkedin/rest.li/pull/385#pullrequestreview-470956858", "createdAt": "2020-08-19T21:00:55Z", "commit": {"oid": "3c4cb35bdcd2237337b37454b95779e808641285"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcxMTA1MDk1", "url": "https://github.com/linkedin/rest.li/pull/385#pullrequestreview-471105095", "createdAt": "2020-08-20T03:34:00Z", "commit": {"oid": "3c4cb35bdcd2237337b37454b95779e808641285"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQwMzozNDowMFrOHDoQlw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQwMzozNDowMFrOHDoQlw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzU2NzM4Mw==", "bodyText": "Should here be the input schemaDirectoryName?", "url": "https://github.com/linkedin/rest.li/pull/385#discussion_r473567383", "createdAt": "2020-08-20T03:34:00Z", "author": {"login": "BrianPin"}, "path": "data/src/main/java/com/linkedin/data/schema/resolver/ExtensionsDataSchemaResolver.java", "diffHunk": "@@ -0,0 +1,58 @@\n+/*\n+   Copyright (c) 2020 LinkedIn Corp.\n+\n+   Licensed under the Apache License, Version 2.0 (the \"License\");\n+   you may not use this file except in compliance with the License.\n+   You may obtain a copy of the License at\n+\n+       http://www.apache.org/licenses/LICENSE-2.0\n+\n+   Unless required by applicable law or agreed to in writing, software\n+   distributed under the License is distributed on an \"AS IS\" BASIS,\n+   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+   See the License for the specific language governing permissions and\n+   limitations under the License.\n+*/\n+\n+package com.linkedin.data.schema.resolver;\n+\n+import com.linkedin.data.schema.DataSchemaResolver;\n+import com.linkedin.data.schema.grammar.PdlSchemaParser;\n+import com.linkedin.data.schema.grammar.PdlSchemaParserFactory;\n+\n+\n+/**\n+ * Combines schema resolver for pegasus data and extensions schema directory.\n+ *\n+ * @author Aman Gupta\n+ */\n+public class ExtensionsDataSchemaResolver extends AbstractMultiFormatDataSchemaResolver\n+{\n+  public ExtensionsDataSchemaResolver(String resolverPath)\n+  {\n+    addResolver(createSchemaResolver(resolverPath, SchemaDirectoryName.PEGASUS, this));\n+    addResolver(createSchemaResolver(resolverPath, SchemaDirectoryName.EXTENSIONS, this));\n+  }\n+\n+  public ExtensionsDataSchemaResolver(String resolverPath, DataSchemaResolver dependencyResolver)\n+  {\n+    addResolver(createSchemaResolver(resolverPath, SchemaDirectoryName.PEGASUS, dependencyResolver));\n+    addResolver(createSchemaResolver(resolverPath, SchemaDirectoryName.EXTENSIONS, dependencyResolver));\n+  }\n+\n+  private FileDataSchemaResolver createSchemaResolver(String resolverPath, SchemaDirectoryName schemaDirectoryName,\n+      DataSchemaResolver dependencyResolver)\n+  {\n+    FileDataSchemaResolver resolver =\n+        new FileDataSchemaResolver(PdlSchemaParserFactory.instance(), resolverPath, dependencyResolver);\n+    resolver.setExtension(PdlSchemaParser.FILE_EXTENSION);\n+    resolver.setSchemasDirectoryName(SchemaDirectoryName.EXTENSIONS);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3c4cb35bdcd2237337b37454b95779e808641285"}, "originalPosition": 49}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4624, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}