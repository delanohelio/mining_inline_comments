{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk4Mzg2NTM1", "number": 250, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QyMToyODoyMFrODumWLA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNFQwNTo0NTowMFrODuqLEA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwMTg5MzU2OnYy", "diffSide": "RIGHT", "path": "data/src/main/java/com/linkedin/data/schema/grammar/PdlSchemaParser.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QyMToyODoyMFrOGAqOhw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNFQwNTo0ODoxN1rOGAvZYQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzM0NTAzMQ==", "bodyText": "can setDocAndProperties reuse this?", "url": "https://github.com/linkedin/rest.li/pull/250#discussion_r403345031", "createdAt": "2020-04-03T21:28:20Z", "author": {"login": "junchuanwang"}, "path": "data/src/main/java/com/linkedin/data/schema/grammar/PdlSchemaParser.java", "diffHunk": "@@ -756,6 +760,26 @@ private RecordDataSchema parseRecord(\n     return properties;\n   }\n \n+  /**\n+   * Sets properties on the provided {@link ComplexDataSchema} using data parsed from the provided\n+   * {@link AnonymousTypeDeclarationContext}.\n+   *\n+   * @param source source to read properties from\n+   * @param target target on which to set properties\n+   */\n+  private void setProperties(AnonymousTypeDeclarationContext source, ComplexDataSchema target)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dee9d18c97b4e39ab54c916aced8e7bc9aa7ea09"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQyOTcyOQ==", "bodyText": "@junchuanwang No, since AnonymousTypeDeclarationContext and NamedTypeDeclarationContext are separate classes with no inheritance relationship. The only other option would be to pass in the parent TypeDeclarationContext object, but that would still require that the anonymous and named types have their properties extracted separately.", "url": "https://github.com/linkedin/rest.li/pull/250#discussion_r403429729", "createdAt": "2020-04-04T05:48:17Z", "author": {"login": "evanw555"}, "path": "data/src/main/java/com/linkedin/data/schema/grammar/PdlSchemaParser.java", "diffHunk": "@@ -756,6 +760,26 @@ private RecordDataSchema parseRecord(\n     return properties;\n   }\n \n+  /**\n+   * Sets properties on the provided {@link ComplexDataSchema} using data parsed from the provided\n+   * {@link AnonymousTypeDeclarationContext}.\n+   *\n+   * @param source source to read properties from\n+   * @param target target on which to set properties\n+   */\n+  private void setProperties(AnonymousTypeDeclarationContext source, ComplexDataSchema target)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzM0NTAzMQ=="}, "originalCommit": {"oid": "dee9d18c97b4e39ab54c916aced8e7bc9aa7ea09"}, "originalPosition": 49}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwMjUyMDQ4OnYy", "diffSide": "RIGHT", "path": "data/src/test/java/com/linkedin/data/schema/grammar/TestPdlSchemaParser.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNFQwNTo0NTowMFrOGAvYew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QwNTozNzozNFrOGBzj9A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQyOTQ5OQ==", "bodyText": "Might be overkill, but I'd test to make sure the fields themselves have no properties.", "url": "https://github.com/linkedin/rest.li/pull/250#discussion_r403429499", "createdAt": "2020-04-04T05:45:00Z", "author": {"login": "evanw555"}, "path": "data/src/test/java/com/linkedin/data/schema/grammar/TestPdlSchemaParser.java", "diffHunk": "@@ -237,6 +236,32 @@ public void testNamedDataSchemaWithAliases()\n \n   }\n \n+  @Test\n+  public void testComplexTypeWithProperties()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dee9d18c97b4e39ab54c916aced8e7bc9aa7ea09"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDU0NjU0OA==", "bodyText": "done", "url": "https://github.com/linkedin/rest.li/pull/250#discussion_r404546548", "createdAt": "2020-04-07T05:37:34Z", "author": {"login": "karthikbalasub"}, "path": "data/src/test/java/com/linkedin/data/schema/grammar/TestPdlSchemaParser.java", "diffHunk": "@@ -237,6 +236,32 @@ public void testNamedDataSchemaWithAliases()\n \n   }\n \n+  @Test\n+  public void testComplexTypeWithProperties()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQyOTQ5OQ=="}, "originalCommit": {"oid": "dee9d18c97b4e39ab54c916aced8e7bc9aa7ea09"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 662, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}