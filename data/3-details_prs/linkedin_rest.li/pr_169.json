{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc0NjU3NjQ4", "number": 169, "title": "Fix bug that would cause pdl encoder to import types conflicting with inline types.", "bodyText": "Also improves how imports for includes are handled.", "createdAt": "2020-02-13T04:03:21Z", "url": "https://github.com/linkedin/rest.li/pull/169", "merged": true, "mergeCommit": {"oid": "87ee2d0b61e96ff245199ddb1de124d984f47553"}, "closed": true, "closedAt": "2020-02-13T20:59:00Z", "author": {"login": "karthikbalasub"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcDyWBrAH2gAyMzc0NjU3NjQ4OjM5MzEwYzAzMmI0OGIxMmQ2MGE5Y2M2N2Q1ZTQyZGExNzkyNTdhYjg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcEAowpAFqTM1ODUxNDg2Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "39310c032b48b12d60a9cc67d5e42da179257ab8", "author": {"user": null}, "url": "https://github.com/linkedin/rest.li/commit/39310c032b48b12d60a9cc67d5e42da179257ab8", "committedDate": "2020-02-13T03:27:10Z", "message": "Fix bug that would cause pdl encoder to import types conflicting with\ninline types.\nAlso improves how imports for includes are handled."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU3OTc3NTcy", "url": "https://github.com/linkedin/rest.li/pull/169#pullrequestreview-357977572", "createdAt": "2020-02-13T06:22:02Z", "commit": {"oid": "39310c032b48b12d60a9cc67d5e42da179257ab8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QwNjoyMjowMlrOFpINlQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QwNjoyMjowMlrOFpINlQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODY3MDQ4NQ==", "bodyText": "why do we delete this one?", "url": "https://github.com/linkedin/rest.li/pull/169#discussion_r378670485", "createdAt": "2020-02-13T06:22:02Z", "author": {"login": "nickibi"}, "path": "generator-test/src/test/pegasus/com/linkedin/pegasus/generator/test/idl/enums/EscapedSymbols.pdl", "diffHunk": "@@ -5,7 +5,6 @@ namespace com.linkedin.pegasus.generator.test.idl.enums\n  */\n enum EscapedSymbols {\n   ENUM,\n-  `enum`,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "39310c032b48b12d60a9cc67d5e42da179257ab8"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU4NDYzODIx", "url": "https://github.com/linkedin/rest.li/pull/169#pullrequestreview-358463821", "createdAt": "2020-02-13T18:47:35Z", "commit": {"oid": "39310c032b48b12d60a9cc67d5e42da179257ab8"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU4NDY0MjMz", "url": "https://github.com/linkedin/rest.li/pull/169#pullrequestreview-358464233", "createdAt": "2020-02-13T18:48:14Z", "commit": {"oid": "39310c032b48b12d60a9cc67d5e42da179257ab8"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxODo0ODoxNFrOFpfbfg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxODo1NDoyMVrOFpfopw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA1MDg3OA==", "bodyText": "Nice catch.", "url": "https://github.com/linkedin/rest.li/pull/169#discussion_r379050878", "createdAt": "2020-02-13T18:48:14Z", "author": {"login": "evanw555"}, "path": "data/src/main/java/com/linkedin/data/schema/SchemaToPdlEncoder.java", "diffHunk": "@@ -782,7 +782,7 @@ private void gatherTypes(DataSchema schema, boolean isDeclaredInline, Set<Name>\n         }\n         for (NamedDataSchema include : recordSchema.getInclude())\n         {\n-          gatherTypes(include, true, encounteredTypes, inlinedTypes);\n+          gatherTypes(include, recordSchema.isIncludeDeclaredInline(include), encounteredTypes, inlinedTypes);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "39310c032b48b12d60a9cc67d5e42da179257ab8"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA1MTg3NQ==", "bodyText": "We should clarify that this set is a collection of simple names, not full names.", "url": "https://github.com/linkedin/rest.li/pull/169#discussion_r379051875", "createdAt": "2020-02-13T18:50:08Z", "author": {"login": "evanw555"}, "path": "data/src/main/java/com/linkedin/data/schema/SchemaToPdlEncoder.java", "diffHunk": "@@ -756,7 +756,7 @@ private void writeDocAndProperties(RecordDataSchema.Field field) throws IOExcept\n    * @param inlinedTypes cumulative set of all inlined types in this schema (and its descendents).", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "39310c032b48b12d60a9cc67d5e42da179257ab8"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA1NDI0Nw==", "bodyText": "nit: reference -> references", "url": "https://github.com/linkedin/rest.li/pull/169#discussion_r379054247", "createdAt": "2020-02-13T18:54:21Z", "author": {"login": "evanw555"}, "path": "generator-test/src/test/pegasus/com/linkedin/pegasus/generator/test/idl/imports/InlineTypeConflict.pdl", "diffHunk": "@@ -0,0 +1,28 @@\n+namespace com.linkedin.pegasus.generator.test.idl.imports\n+\n+/**\n+ * Simple type cannot be imported as it conflicts with an inline type\n+ */\n+record InlineTypeConflict includes com.linkedin.pegasus.generator.test.idl.records.Simple {\n+  /**\n+   * This inline type takes precedence over 'Simple' record from external namespace.\n+   */\n+  inlineType: record Simple {\n+    /**\n+     * Fields with conflicting types should also have fully qualified name.\n+     */\n+    foo: com.linkedin.pegasus.generator.test.idl.records.Simple\n+  }\n+\n+  /**\n+   * Inline type can also conflict with types used for other fields.\n+   */\n+  inlineType2: record Note {\n+    a: int\n+  }\n+\n+  /**\n+   * This field reference a type (Note) that conflicts with Note defined inline, and thus must use fully qualified name.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "39310c032b48b12d60a9cc67d5e42da179257ab8"}, "originalPosition": 25}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU4NDc2NTcw", "url": "https://github.com/linkedin/rest.li/pull/169#pullrequestreview-358476570", "createdAt": "2020-02-13T19:06:44Z", "commit": {"oid": "39310c032b48b12d60a9cc67d5e42da179257ab8"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3894a5755537501ab021f98a60d4cd831e7eeb85", "author": {"user": null}, "url": "https://github.com/linkedin/rest.li/commit/3894a5755537501ab021f98a60d4cd831e7eeb85", "committedDate": "2020-02-13T19:38:49Z", "message": "Addressing Evan's review comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU4NTE0ODY3", "url": "https://github.com/linkedin/rest.li/pull/169#pullrequestreview-358514867", "createdAt": "2020-02-13T20:06:18Z", "commit": {"oid": "3894a5755537501ab021f98a60d4cd831e7eeb85"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4916, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}