{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY3NzAwMzA3", "number": 381, "title": "Put extension schemas into the dataTemplate jar under /extensions path", "bodyText": "Before we put extension schemas into the extensionSchema jar.\nNow we would like to put the extension schemas into the same jar as base schema but under /extensions path.", "createdAt": "2020-08-14T00:15:07Z", "url": "https://github.com/linkedin/rest.li/pull/381", "merged": true, "mergeCommit": {"oid": "df6a4f8d759182c648255e5c23ad1158369f3588"}, "closed": true, "closedAt": "2020-08-17T00:44:25Z", "author": {"login": "nickibi"}, "timelineItems": {"totalCount": 17, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc-p0RDgFqTQ2NzI0MzMyNg==", "endCursor": "Y3Vyc29yOnYyOpPPAAABc_m6SRABqjM2NTk3NDcxNjg=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY3MjQzMzI2", "url": "https://github.com/linkedin/rest.li/pull/381#pullrequestreview-467243326", "createdAt": "2020-08-14T00:49:17Z", "commit": {"oid": "4df68aee6e917cf095bd08e6a07c6cf52d801cdd"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQwMDo0OToxOFrOHAjazg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQwMDo1MToxNFrOHAjgAA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDM0MjM1MA==", "bodyText": "It would make more sense if it was called validateExtensionSchemas IMO", "url": "https://github.com/linkedin/rest.li/pull/381#discussion_r470342350", "createdAt": "2020-08-14T00:49:18Z", "author": {"login": "evanw555"}, "path": "gradle-plugins/src/main/java/com/linkedin/pegasus/gradle/PegasusPlugin.java", "diffHunk": "@@ -1693,6 +1646,34 @@ protected GenerateDataTemplateTask configureDataTemplateGeneration(Project proje\n     prepareLegacySchemasForPublishTask.dependsOn(destroyStaleFiles);\n     dataTemplateJarDepends.add(prepareLegacySchemasForPublishTask);\n \n+    // extension schema directory\n+    File extensionSchemaDir = project.file(getExtensionSchemaPath(project, sourceSet));\n+\n+    if (!SharedFileUtils.getSuffixedFiles(project, extensionSchemaDir, PDL_FILE_SUFFIX).isEmpty()) {\n+      // Validate extension schemas if extension schemas are provided.\n+      ValidateExtensionSchemaTask validateExtensionSchemaTask = project.getTasks()\n+          .create(sourceSet.getTaskName(\"validate\", \"ExtensionSchema\"), ValidateExtensionSchemaTask.class, task -> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4df68aee6e917cf095bd08e6a07c6cf52d801cdd"}, "originalPosition": 89}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDM0MzY4MA==", "bodyText": "So we're only supporting extensions as PDLs from the get-go? Good \ud83d\ude03", "url": "https://github.com/linkedin/rest.li/pull/381#discussion_r470343680", "createdAt": "2020-08-14T00:51:14Z", "author": {"login": "evanw555"}, "path": "gradle-plugins/src/main/java/com/linkedin/pegasus/gradle/PegasusPlugin.java", "diffHunk": "@@ -1693,6 +1646,34 @@ protected GenerateDataTemplateTask configureDataTemplateGeneration(Project proje\n     prepareLegacySchemasForPublishTask.dependsOn(destroyStaleFiles);\n     dataTemplateJarDepends.add(prepareLegacySchemasForPublishTask);\n \n+    // extension schema directory\n+    File extensionSchemaDir = project.file(getExtensionSchemaPath(project, sourceSet));\n+\n+    if (!SharedFileUtils.getSuffixedFiles(project, extensionSchemaDir, PDL_FILE_SUFFIX).isEmpty()) {\n+      // Validate extension schemas if extension schemas are provided.\n+      ValidateExtensionSchemaTask validateExtensionSchemaTask = project.getTasks()\n+          .create(sourceSet.getTaskName(\"validate\", \"ExtensionSchema\"), ValidateExtensionSchemaTask.class, task -> {\n+            task.setInputDir(extensionSchemaDir);\n+            task.setResolverPath(\n+                getDataModelConfig(project, sourceSet).plus(project.files(getDataSchemaPath(project, sourceSet))));\n+            task.setClassPath(project.getConfigurations().getByName(\"pegasusPlugin\"));\n+            if (isPropertyTrue(project, ENABLE_ARG_FILE)) {\n+              task.setEnableArgFile(true);\n+            }\n+          });\n+\n+      Task prepareExtensionSchemasForPublishTask = project.getTasks()\n+          .create(sourceSet.getName() + \"CopyExtensionSchemas\", Sync.class, task ->\n+          {\n+            task.from(extensionSchemaDir, syncSpec -> syncSpec.include(\"**/*\" + PDL_FILE_SUFFIX));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4df68aee6e917cf095bd08e6a07c6cf52d801cdd"}, "originalPosition": 102}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4df68aee6e917cf095bd08e6a07c6cf52d801cdd", "author": {"user": {"login": "nickibi", "name": "Yingjie Bi"}}, "url": "https://github.com/linkedin/rest.li/commit/4df68aee6e917cf095bd08e6a07c6cf52d801cdd", "committedDate": "2020-08-13T23:43:42Z", "message": "Put extension schemas into the dataTemplate jar under /extensions path  instead of putting them into the extensionSchema jar"}, "afterCommit": {"oid": "8572cface14bf50b2065789632647e177022d73b", "author": {"user": {"login": "nickibi", "name": "Yingjie Bi"}}, "url": "https://github.com/linkedin/rest.li/commit/8572cface14bf50b2065789632647e177022d73b", "committedDate": "2020-08-14T01:10:31Z", "message": "Put extension schemas into the dataTemplate jar under /extensions path  instead of putting them into the extensionSchema jar"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY3MjczNDQ2", "url": "https://github.com/linkedin/rest.li/pull/381#pullrequestreview-467273446", "createdAt": "2020-08-14T02:45:10Z", "commit": {"oid": "8572cface14bf50b2065789632647e177022d73b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQwMjo0NToxMVrOHAlsbw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQwMjo0NToxMVrOHAlsbw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDM3OTYzMQ==", "bodyText": "nit: move \"pegasusPlugin\" to constants", "url": "https://github.com/linkedin/rest.li/pull/381#discussion_r470379631", "createdAt": "2020-08-14T02:45:11Z", "author": {"login": "aman1309"}, "path": "gradle-plugins/src/main/java/com/linkedin/pegasus/gradle/PegasusPlugin.java", "diffHunk": "@@ -1693,6 +1646,34 @@ protected GenerateDataTemplateTask configureDataTemplateGeneration(Project proje\n     prepareLegacySchemasForPublishTask.dependsOn(destroyStaleFiles);\n     dataTemplateJarDepends.add(prepareLegacySchemasForPublishTask);\n \n+    // extension schema directory\n+    File extensionSchemaDir = project.file(getExtensionSchemaPath(project, sourceSet));\n+\n+    if (!SharedFileUtils.getSuffixedFiles(project, extensionSchemaDir, PDL_FILE_SUFFIX).isEmpty()) {\n+      // Validate extension schemas if extension schemas are provided.\n+      ValidateExtensionSchemaTask validateExtensionSchemaTask = project.getTasks()\n+          .create(sourceSet.getTaskName(\"validate\", \"ExtensionSchemas\"), ValidateExtensionSchemaTask.class, task -> {\n+            task.setInputDir(extensionSchemaDir);\n+            task.setResolverPath(\n+                getDataModelConfig(project, sourceSet).plus(project.files(getDataSchemaPath(project, sourceSet))));\n+            task.setClassPath(project.getConfigurations().getByName(\"pegasusPlugin\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8572cface14bf50b2065789632647e177022d73b"}, "originalPosition": 93}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY3MjczNjYw", "url": "https://github.com/linkedin/rest.li/pull/381#pullrequestreview-467273660", "createdAt": "2020-08-14T02:46:05Z", "commit": {"oid": "8572cface14bf50b2065789632647e177022d73b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY3MzE0NTI5", "url": "https://github.com/linkedin/rest.li/pull/381#pullrequestreview-467314529", "createdAt": "2020-08-14T05:25:19Z", "commit": {"oid": "8572cface14bf50b2065789632647e177022d73b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQwNToyNToxOVrOHAn9rg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQwNToyNToxOVrOHAn9rg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDQxNjgxNA==", "bodyText": "I think in rest.li the left curly brace is in next line", "url": "https://github.com/linkedin/rest.li/pull/381#discussion_r470416814", "createdAt": "2020-08-14T05:25:19Z", "author": {"login": "BrianPin"}, "path": "gradle-plugins/src/main/java/com/linkedin/pegasus/gradle/PegasusPlugin.java", "diffHunk": "@@ -1693,6 +1646,34 @@ protected GenerateDataTemplateTask configureDataTemplateGeneration(Project proje\n     prepareLegacySchemasForPublishTask.dependsOn(destroyStaleFiles);\n     dataTemplateJarDepends.add(prepareLegacySchemasForPublishTask);\n \n+    // extension schema directory\n+    File extensionSchemaDir = project.file(getExtensionSchemaPath(project, sourceSet));\n+\n+    if (!SharedFileUtils.getSuffixedFiles(project, extensionSchemaDir, PDL_FILE_SUFFIX).isEmpty()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8572cface14bf50b2065789632647e177022d73b"}, "originalPosition": 86}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY3MzE1NDE1", "url": "https://github.com/linkedin/rest.li/pull/381#pullrequestreview-467315415", "createdAt": "2020-08-14T05:28:15Z", "commit": {"oid": "8572cface14bf50b2065789632647e177022d73b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQwNToyODoxNVrOHAoAmQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQwNToyODoxNVrOHAoAmQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDQxNzU2MQ==", "bodyText": "Question, what is the previous task of task: prepareExtensionSchemasForPublishTask and what is the next task?\nI feel prepare should be part of some task, not itself a task. But let me know if I miss understand something.", "url": "https://github.com/linkedin/rest.li/pull/381#discussion_r470417561", "createdAt": "2020-08-14T05:28:15Z", "author": {"login": "BrianPin"}, "path": "gradle-plugins/src/main/java/com/linkedin/pegasus/gradle/PegasusPlugin.java", "diffHunk": "@@ -1693,6 +1646,34 @@ protected GenerateDataTemplateTask configureDataTemplateGeneration(Project proje\n     prepareLegacySchemasForPublishTask.dependsOn(destroyStaleFiles);\n     dataTemplateJarDepends.add(prepareLegacySchemasForPublishTask);\n \n+    // extension schema directory\n+    File extensionSchemaDir = project.file(getExtensionSchemaPath(project, sourceSet));\n+\n+    if (!SharedFileUtils.getSuffixedFiles(project, extensionSchemaDir, PDL_FILE_SUFFIX).isEmpty()) {\n+      // Validate extension schemas if extension schemas are provided.\n+      ValidateExtensionSchemaTask validateExtensionSchemaTask = project.getTasks()\n+          .create(sourceSet.getTaskName(\"validate\", \"ExtensionSchemas\"), ValidateExtensionSchemaTask.class, task -> {\n+            task.setInputDir(extensionSchemaDir);\n+            task.setResolverPath(\n+                getDataModelConfig(project, sourceSet).plus(project.files(getDataSchemaPath(project, sourceSet))));\n+            task.setClassPath(project.getConfigurations().getByName(\"pegasusPlugin\"));\n+            if (isPropertyTrue(project, ENABLE_ARG_FILE)) {\n+              task.setEnableArgFile(true);\n+            }\n+          });\n+\n+      Task prepareExtensionSchemasForPublishTask = project.getTasks()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8572cface14bf50b2065789632647e177022d73b"}, "originalPosition": 99}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY3OTM5ODYx", "url": "https://github.com/linkedin/rest.li/pull/381#pullrequestreview-467939861", "createdAt": "2020-08-15T02:13:43Z", "commit": {"oid": "8572cface14bf50b2065789632647e177022d73b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8572cface14bf50b2065789632647e177022d73b", "author": {"user": {"login": "nickibi", "name": "Yingjie Bi"}}, "url": "https://github.com/linkedin/rest.li/commit/8572cface14bf50b2065789632647e177022d73b", "committedDate": "2020-08-14T01:10:31Z", "message": "Put extension schemas into the dataTemplate jar under /extensions path  instead of putting them into the extensionSchema jar"}, "afterCommit": {"oid": "a927a2fa11fdec9076a0496be86cdb6880ca7b9c", "author": {"user": {"login": "nickibi", "name": "Yingjie Bi"}}, "url": "https://github.com/linkedin/rest.li/commit/a927a2fa11fdec9076a0496be86cdb6880ca7b9c", "committedDate": "2020-08-15T04:09:13Z", "message": "Put extension schemas into the dataTemplate jar under /extensions path instead of putting them into the extensionSchema jar"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY3OTUxODA3", "url": "https://github.com/linkedin/rest.li/pull/381#pullrequestreview-467951807", "createdAt": "2020-08-15T06:23:46Z", "commit": {"oid": "a927a2fa11fdec9076a0496be86cdb6880ca7b9c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY4MDIxMjY4", "url": "https://github.com/linkedin/rest.li/pull/381#pullrequestreview-468021268", "createdAt": "2020-08-15T22:36:52Z", "commit": {"oid": "a927a2fa11fdec9076a0496be86cdb6880ca7b9c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNVQyMjozNjo1MlrOHBOBpA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNVQyMjozNjo1MlrOHBOBpA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTA0MDQyMA==", "bodyText": "There is a hardcoded \"extensions\"  literal in the function getExtensionSchemaPath, I feel it will be left alone if we somehow decide to refactor all the extension schema path to something else. And there is probably somewhere else use the same purpose identifier \"extensions\" , if we can create or find existing identifier that represent \"extensions\" path then it will be ideal.", "url": "https://github.com/linkedin/rest.li/pull/381#discussion_r471040420", "createdAt": "2020-08-15T22:36:52Z", "author": {"login": "BrianPin"}, "path": "gradle-plugins/src/main/java/com/linkedin/pegasus/gradle/PegasusPlugin.java", "diffHunk": "@@ -1693,6 +1648,37 @@ protected GenerateDataTemplateTask configureDataTemplateGeneration(Project proje\n     prepareLegacySchemasForPublishTask.dependsOn(destroyStaleFiles);\n     dataTemplateJarDepends.add(prepareLegacySchemasForPublishTask);\n \n+    // extension schema directory\n+    File extensionSchemaDir = project.file(getExtensionSchemaPath(project, sourceSet));\n+\n+    if (!SharedFileUtils.getSuffixedFiles(project, extensionSchemaDir, PDL_FILE_SUFFIX).isEmpty())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a927a2fa11fdec9076a0496be86cdb6880ca7b9c"}, "originalPosition": 220}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY4MDIyMTMz", "url": "https://github.com/linkedin/rest.li/pull/381#pullrequestreview-468022133", "createdAt": "2020-08-15T23:04:43Z", "commit": {"oid": "a927a2fa11fdec9076a0496be86cdb6880ca7b9c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNVQyMzowNDo0M1rOHBOI4g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNVQyMzowNDo0M1rOHBOI4g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTA0MjI3NA==", "bodyText": "in gradle, copy and sync task are alike except sync will remove existing files in the destination dir.\nI think maybe in this we should use sync task instead of copy to remove existing data template to keep the destination dir clean?", "url": "https://github.com/linkedin/rest.li/pull/381#discussion_r471042274", "createdAt": "2020-08-15T23:04:43Z", "author": {"login": "BrianPin"}, "path": "gradle-plugins/src/main/java/com/linkedin/pegasus/gradle/PegasusPlugin.java", "diffHunk": "@@ -1710,6 +1696,11 @@ protected GenerateDataTemplateTask configureDataTemplateGeneration(Project proje\n               copySpec.eachFile(fileCopyDetails ->\n                   fileCopyDetails.setPath(TRANSLATED_SCHEMAS_DIR + File.separatorChar + fileCopyDetails.getPath())));\n \n+          // Copy all extension schemas as-is into the root extensions directory in the JAR\n+          task.from(publishableExtensionSchemasBuildDir, copySpec ->", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a927a2fa11fdec9076a0496be86cdb6880ca7b9c"}, "originalPosition": 256}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY4MDIyNDk0", "url": "https://github.com/linkedin/rest.li/pull/381#pullrequestreview-468022494", "createdAt": "2020-08-15T23:15:43Z", "commit": {"oid": "a927a2fa11fdec9076a0496be86cdb6880ca7b9c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a927a2fa11fdec9076a0496be86cdb6880ca7b9c", "author": {"user": {"login": "nickibi", "name": "Yingjie Bi"}}, "url": "https://github.com/linkedin/rest.li/commit/a927a2fa11fdec9076a0496be86cdb6880ca7b9c", "committedDate": "2020-08-15T04:09:13Z", "message": "Put extension schemas into the dataTemplate jar under /extensions path instead of putting them into the extensionSchema jar"}, "afterCommit": {"oid": "12d03d284e5a746c22a6fd6df14760d7f50d7a15", "author": {"user": {"login": "nickibi", "name": "Yingjie Bi"}}, "url": "https://github.com/linkedin/rest.li/commit/12d03d284e5a746c22a6fd6df14760d7f50d7a15", "committedDate": "2020-08-16T21:58:27Z", "message": "Put extension schemas into the dataTemplate jar under /extensions path instead of putting them into the extensionSchema jar"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY4MDk4MTY5", "url": "https://github.com/linkedin/rest.li/pull/381#pullrequestreview-468098169", "createdAt": "2020-08-16T21:57:13Z", "commit": {"oid": "a927a2fa11fdec9076a0496be86cdb6880ca7b9c"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNlQyMTo1NzoxM1rOHBVi-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNlQyMTo1NzoxM1rOHBVi-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTE2MzY0MA==", "bodyText": "Do you think using this chance you can edit this comment to explain this configuration better? It doesn not look very intuitive to let the user know what classes should be added to this configuration and when they are used (one needs to check the code)", "url": "https://github.com/linkedin/rest.li/pull/381#discussion_r471163640", "createdAt": "2020-08-16T21:57:13Z", "author": {"login": "junchuanwang"}, "path": "gradle-plugins/src/main/java/com/linkedin/pegasus/gradle/PegasusPlugin.java", "diffHunk": "@@ -669,7 +671,7 @@ public void apply(Project project)\n     ConfigurationContainer configurations = project.getConfigurations();\n \n     // configuration for getting the required classes to make pegasus call main methods", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a927a2fa11fdec9076a0496be86cdb6880ca7b9c"}, "originalPosition": 12}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "12d03d284e5a746c22a6fd6df14760d7f50d7a15", "author": {"user": {"login": "nickibi", "name": "Yingjie Bi"}}, "url": "https://github.com/linkedin/rest.li/commit/12d03d284e5a746c22a6fd6df14760d7f50d7a15", "committedDate": "2020-08-16T21:58:27Z", "message": "Put extension schemas into the dataTemplate jar under /extensions path instead of putting them into the extensionSchema jar"}, "afterCommit": {"oid": "2e065b40253be5218caf93d40d86711ef4588172", "author": {"user": {"login": "nickibi", "name": "Yingjie Bi"}}, "url": "https://github.com/linkedin/rest.li/commit/2e065b40253be5218caf93d40d86711ef4588172", "committedDate": "2020-08-16T22:31:06Z", "message": "Put extension schemas into the dataTemplate jar under /extensions path instead of putting them into the extensionSchema jar"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "63149513e904237b7ce027d4b65b7ecbb1177bef", "author": {"user": {"login": "nickibi", "name": "Yingjie Bi"}}, "url": "https://github.com/linkedin/rest.li/commit/63149513e904237b7ce027d4b65b7ecbb1177bef", "committedDate": "2020-08-16T23:45:15Z", "message": "Put extension schemas into the dataTemplate jar under /extensions path instead of putting them into the extensionSchema jar"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2e065b40253be5218caf93d40d86711ef4588172", "author": {"user": {"login": "nickibi", "name": "Yingjie Bi"}}, "url": "https://github.com/linkedin/rest.li/commit/2e065b40253be5218caf93d40d86711ef4588172", "committedDate": "2020-08-16T22:31:06Z", "message": "Put extension schemas into the dataTemplate jar under /extensions path instead of putting them into the extensionSchema jar"}, "afterCommit": {"oid": "63149513e904237b7ce027d4b65b7ecbb1177bef", "author": {"user": {"login": "nickibi", "name": "Yingjie Bi"}}, "url": "https://github.com/linkedin/rest.li/commit/63149513e904237b7ce027d4b65b7ecbb1177bef", "committedDate": "2020-08-16T23:45:15Z", "message": "Put extension schemas into the dataTemplate jar under /extensions path instead of putting them into the extensionSchema jar"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4616, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}