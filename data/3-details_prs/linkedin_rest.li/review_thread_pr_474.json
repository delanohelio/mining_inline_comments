{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE4MDcwNzY4", "number": 474, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxNTozMzoxMlrOE3SDww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxNTozMzoxMlrOE3SDww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2NDAzMDExOnYy", "diffSide": "RIGHT", "path": "restli-tools/src/test/java/com/linkedin/restli/tools/clientgen/TestRestRequestBuilderGenerator.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxNTozMzoxMlrOHwiREw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQyMTo0NzowMVrOHww4Iw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDY1NTEyMw==", "bodyText": "Can you also add a simple test to show that your change only affect \"package\" name, but not the root directory (because some user uses custom root directory instead of the sourceSet directory <module>/src/main", "url": "https://github.com/linkedin/rest.li/pull/474#discussion_r520655123", "createdAt": "2020-11-10T15:33:12Z", "author": {"login": "junchuanwang"}, "path": "restli-tools/src/test/java/com/linkedin/restli/tools/clientgen/TestRestRequestBuilderGenerator.java", "diffHunk": "@@ -121,6 +134,89 @@ public void testGeneration(RestliVersion version, String ABuildersName, String B\n     Assert.assertTrue(bBuilderFileContent.contains(\"Generated from \" + RESOURCES_DIR + FS + \"idls\" + FS + \"arrayDuplicateB.restspec.json\"));\n   }\n \n+  /**\n+   * Testing case sensitivity of generated files. Typically a Mac/Windows system will have a case insensitive file\n+   * system, whereas a Linux system will have a case sensitive file system. For a case insensitive file system,\n+   * \"~/com/astro\" and \"~/com/ASTRO\" point to the same folder. For a case sensitive file system, \"~/com/astro\" and \"~/com/ASTRO\"\n+   * will be different folders.\n+   *\n+   * Example:\n+   *   File1: namespace = com.astro.file1\n+   *   File2: namespace = com.aSTRo.file2\n+   *\n+   *   The following files would be generated with the path specified.\n+   *   1) Case insensitive (if file1 is generated first):\n+   *       com/astro/file1\n+   *                /file2\n+   *   2) Case insensitive (if file2 is generated first):\n+   *       com/aSTRo/file1\n+   *                /file2\n+   *   3) Case sensitive:\n+   *       com/astro/file1\n+   *           aSTRo/file2\n+   *\n+   * @param version RestLi version\n+   * @param restspec1 First restli spec to generate\n+   * @param restspec2 Second restli spec to generate\n+   * @param generateLowercasePath True, generate path lowercase; False, generate path as spec specifies.\n+   */\n+  @Test(dataProvider = \"arrayDuplicateDataProvider2\")\n+  public void testGenerationPathOrder(RestliVersion version, String restspec1, String restspec2, boolean generateLowercasePath) throws Exception", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "459092abe43d90d62138b309e1b05fb449d7ecee"}, "originalPosition": 72}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDg5NDQ5OQ==", "bodyText": "Added new test.", "url": "https://github.com/linkedin/rest.li/pull/474#discussion_r520894499", "createdAt": "2020-11-10T21:47:01Z", "author": {"login": "Astro03"}, "path": "restli-tools/src/test/java/com/linkedin/restli/tools/clientgen/TestRestRequestBuilderGenerator.java", "diffHunk": "@@ -121,6 +134,89 @@ public void testGeneration(RestliVersion version, String ABuildersName, String B\n     Assert.assertTrue(bBuilderFileContent.contains(\"Generated from \" + RESOURCES_DIR + FS + \"idls\" + FS + \"arrayDuplicateB.restspec.json\"));\n   }\n \n+  /**\n+   * Testing case sensitivity of generated files. Typically a Mac/Windows system will have a case insensitive file\n+   * system, whereas a Linux system will have a case sensitive file system. For a case insensitive file system,\n+   * \"~/com/astro\" and \"~/com/ASTRO\" point to the same folder. For a case sensitive file system, \"~/com/astro\" and \"~/com/ASTRO\"\n+   * will be different folders.\n+   *\n+   * Example:\n+   *   File1: namespace = com.astro.file1\n+   *   File2: namespace = com.aSTRo.file2\n+   *\n+   *   The following files would be generated with the path specified.\n+   *   1) Case insensitive (if file1 is generated first):\n+   *       com/astro/file1\n+   *                /file2\n+   *   2) Case insensitive (if file2 is generated first):\n+   *       com/aSTRo/file1\n+   *                /file2\n+   *   3) Case sensitive:\n+   *       com/astro/file1\n+   *           aSTRo/file2\n+   *\n+   * @param version RestLi version\n+   * @param restspec1 First restli spec to generate\n+   * @param restspec2 Second restli spec to generate\n+   * @param generateLowercasePath True, generate path lowercase; False, generate path as spec specifies.\n+   */\n+  @Test(dataProvider = \"arrayDuplicateDataProvider2\")\n+  public void testGenerationPathOrder(RestliVersion version, String restspec1, String restspec2, boolean generateLowercasePath) throws Exception", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDY1NTEyMw=="}, "originalCommit": {"oid": "459092abe43d90d62138b309e1b05fb449d7ecee"}, "originalPosition": 72}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 416, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}