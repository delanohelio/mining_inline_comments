{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg3MDYxODkx", "number": 218, "title": "Change ValidateSchemaAnnotationTask to ignore exception or errors durng initializaing class by classLoader", "bodyText": "Current in ValidateSchemaAnnotationTask, we try to find annotation handler by searching a class with certain java annotation (\"RestLiSchemaAnnotationHandler\") inside the dependencies. Therefore we need to use \"Class.forName()}\" methods.\nHowever there might be exception/errors raised during this period of time, such as java.lang.NoClassDefFoundError, java.lang.IllegalAccessError, java.lang.IllegalAccessError\nThis is mostly likely due to the fact the the user didn't config the grade dependencies properly. For those classes that failed to be instantiated, they will be ignored.", "createdAt": "2020-03-12T06:20:41Z", "url": "https://github.com/linkedin/rest.li/pull/218", "merged": true, "mergeCommit": {"oid": "179392ccbae113673b538ed4d96111ed01ffb547"}, "closed": true, "closedAt": "2020-03-17T17:56:35Z", "author": {"login": "junchuanwang"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcM1exOgH2gAyMzg3MDYxODkxOjdiYjY4YWI1YTNlMjY2ZDg2NGQyMGUxNDIzZGI0YjQ0NTBhODlkMTc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcOmtr9gFqTM3NjI4MzQ0Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "7bb68ab5a3e266d864d20e1423db4b4450a89d17", "author": {"user": null}, "url": "https://github.com/linkedin/rest.li/commit/7bb68ab5a3e266d864d20e1423db4b4450a89d17", "committedDate": "2020-03-12T06:11:45Z", "message": "Change ValidateSchemaAnnotationTask to ignore exception or errors during initializaing class by classLoader"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc0NTMyNzI0", "url": "https://github.com/linkedin/rest.li/pull/218#pullrequestreview-374532724", "createdAt": "2020-03-13T18:42:43Z", "commit": {"oid": "7bb68ab5a3e266d864d20e1423db4b4450a89d17"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxODo0Mjo0NFrOF2OqUw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxODo0MzowNFrOF2Oq4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjQwNzYzNQ==", "bodyText": "Why do we need both info and debug logs? One is not enough?", "url": "https://github.com/linkedin/rest.li/pull/218#discussion_r392407635", "createdAt": "2020-03-13T18:42:44Z", "author": {"login": "nickibi"}, "path": "gradle-plugins/src/main/java/com/linkedin/pegasus/gradle/tasks/ValidateSchemaAnnotationTask.java", "diffHunk": "@@ -173,34 +173,36 @@ private String toNativePath(final String path)\n    * This method will check the java class annotation on the class instantiated by a className;\n    * It will search if that class has an annotation matching {@link SCHEMA_HANDLER_JAVA_ANNOTATION},\n    * if found, this class name will be added to \"foundClasses\" list.\n+   * if exceptions or error detected during instantiation of the class, this method will return without doing anything.\n    *\n    * @param name the name of class to be search annotation from.\n    * @param foundClasses a list of class names of the classes that contains {@link SCHEMA_HANDLER_JAVA_ANNOTATION}\n-   * @return whether this\n-   * @throws IOException\n    */\n-  private void checkHandlerAnnotation(String name, List<String> foundClasses) throws IOException\n+  private void checkHandlerAnnotation(String name, List<String> foundClasses)\n   {\n     if (name.endsWith(CLASS_SUFFIX))\n     {\n       int end = name.lastIndexOf(CLASS_SUFFIX);\n       String clazzPath = name.substring(0, end);\n       String clazzName = pathToName(clazzPath);\n \n+      Class<?> clazz = null;\n       try\n       {\n-        Class<?> clazz = classForName(clazzName);\n-        for (Annotation a : clazz.getAnnotations())\n+        clazz = classForName(clazzName);\n+      } catch (Exception | Error e)\n+      {\n+        getProject().getLogger().info(\"Unexpected exceptions or errors [{}] found during instantiating the class, will skip this class: [{}]\", e.getClass(), clazzName);\n+        getProject().getLogger().debug(\"Unexpected exceptions or errors found during instantiating the class [{}], detailed error: \", clazzName, e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7bb68ab5a3e266d864d20e1423db4b4450a89d17"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjQwNzc3Ng==", "bodyText": "nit: errors", "url": "https://github.com/linkedin/rest.li/pull/218#discussion_r392407776", "createdAt": "2020-03-13T18:43:04Z", "author": {"login": "nickibi"}, "path": "gradle-plugins/src/main/java/com/linkedin/pegasus/gradle/tasks/ValidateSchemaAnnotationTask.java", "diffHunk": "@@ -173,34 +173,36 @@ private String toNativePath(final String path)\n    * This method will check the java class annotation on the class instantiated by a className;\n    * It will search if that class has an annotation matching {@link SCHEMA_HANDLER_JAVA_ANNOTATION},\n    * if found, this class name will be added to \"foundClasses\" list.\n+   * if exceptions or error detected during instantiation of the class, this method will return without doing anything.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7bb68ab5a3e266d864d20e1423db4b4450a89d17"}, "originalPosition": 4}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f07d577d83bb2db4e977c70b9a2fb019644d0398", "author": {"user": null}, "url": "https://github.com/linkedin/rest.li/commit/f07d577d83bb2db4e977c70b9a2fb019644d0398", "committedDate": "2020-03-17T16:54:45Z", "message": "Address ybi's comment"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc2MjI3NDIx", "url": "https://github.com/linkedin/rest.li/pull/218#pullrequestreview-376227421", "createdAt": "2020-03-17T16:58:14Z", "commit": {"oid": "f07d577d83bb2db4e977c70b9a2fb019644d0398"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5e43c2cdaf01736d1aa73dc10ed79bbbeaa09bf5", "author": {"user": {"login": "junchuanwang", "name": "Junchuan Wang"}}, "url": "https://github.com/linkedin/rest.li/commit/5e43c2cdaf01736d1aa73dc10ed79bbbeaa09bf5", "committedDate": "2020-03-17T17:03:48Z", "message": "Merge branch 'master' into validation_schema"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6f361610a56fa886f3bdcdb85c0c1834e8406773", "author": {"user": null}, "url": "https://github.com/linkedin/rest.li/commit/6f361610a56fa886f3bdcdb85c0c1834e8406773", "committedDate": "2020-03-17T17:12:04Z", "message": "release 28.1.29"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc2MjgzNDQ2", "url": "https://github.com/linkedin/rest.li/pull/218#pullrequestreview-376283446", "createdAt": "2020-03-17T18:07:19Z", "commit": {"oid": "6f361610a56fa886f3bdcdb85c0c1834e8406773"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4993, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}