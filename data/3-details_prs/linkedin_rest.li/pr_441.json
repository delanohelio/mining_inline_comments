{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAwOTM5MDU5", "number": 441, "title": "Encoding performance improvements", "bodyText": "Get rid of DataComplexIdentitySet. Instead implement default cycle check using placeholder ThreadLocal instances on DataMap and DataList\nProvide an API to customize the default cycle checker\nUse LinkedList instead of ArrayList to avoid resizing if multiple datatemplates wrap a map since we anyways iterate linearly\nAvoid unnecessary number conversion when using input coercers", "createdAt": "2020-10-10T08:42:01Z", "url": "https://github.com/linkedin/rest.li/pull/441", "merged": true, "mergeCommit": {"oid": "5b871d762984a1209afa87f9d23bdd886a1a3648"}, "closed": true, "closedAt": "2020-10-12T19:40:31Z", "author": {"login": "karthikrg"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdRG_RIgBqjM4NjI1NTEzMTQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdR3qTcABqjM4Njc2ODI3MjA=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3d9db29d2b2249854e80ebc74fcfc51a7946283d", "author": {"user": {"login": "li-kramgopa", "name": null}}, "url": "https://github.com/linkedin/rest.li/commit/3d9db29d2b2249854e80ebc74fcfc51a7946283d", "committedDate": "2020-10-10T08:41:11Z", "message": "Get rid of DataComplexIdentitySet. Instead implement cycle check using placeholder booleans on DataMap and DataList"}, "afterCommit": {"oid": "cd16fcc5296379af1ef6899ec7f3884543b681ae", "author": {"user": {"login": "li-kramgopa", "name": null}}, "url": "https://github.com/linkedin/rest.li/commit/cd16fcc5296379af1ef6899ec7f3884543b681ae", "committedDate": "2020-10-10T09:01:46Z", "message": "Performance improvements\n\nGet rid of DataComplexIdentitySet. Instead implement cycle check using placeholder booleans on DataMap and DataList\nUse LinkedList instead of ArrayList to avoid resizing if multiple datatemplates wrap a map since we anyways iterate linearly\nAvoid unnecessary number conversion when using input coercers"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA2MDg2Nzk4", "url": "https://github.com/linkedin/rest.li/pull/441#pullrequestreview-506086798", "createdAt": "2020-10-10T10:27:41Z", "commit": {"oid": "cd16fcc5296379af1ef6899ec7f3884543b681ae"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMFQxMDoyNzo0MVrOHfe9CQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMFQxMDoyNzo0MVrOHfe9CQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjc3NTA0OQ==", "bodyText": "We have to be careful with this change. This would fail if a DataMap is traversed in multiple threads concurrently. I'm sure there are apps that do concurrent traversals. This might even happen within the context of a single request also.\nAlso, this might happen more often in tests sharing a common test input and run in parallel.\nI was thinking we should keep the existing algo, and provide a config for services to disable the cycle check (or use a count based check)", "url": "https://github.com/linkedin/rest.li/pull/441#discussion_r502775049", "createdAt": "2020-10-10T10:27:41Z", "author": {"login": "karthikbalasub"}, "path": "data/src/main/java/com/linkedin/data/Data.java", "diffHunk": "@@ -372,18 +353,27 @@ private static void traverse(Object obj, TraverseCallback callback,\n         }\n         else\n         {\n-          checkForCyclesAndAdd(map, ancestorSet, pathList);\n-          callback.startMap(map);\n-          Iterable<Map.Entry<String, Object>> orderedEntrySet = callback.orderMap(map);\n-          for (Map.Entry<String, Object> entry : orderedEntrySet)\n+          try\n+          {\n+            if (map._isTraversing)\n+            {\n+              throw new IOException(\"Cycle detected.\");\n+            }\n+\n+            map._isTraversing = true;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cd16fcc5296379af1ef6899ec7f3884543b681ae"}, "originalPosition": 41}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "cd16fcc5296379af1ef6899ec7f3884543b681ae", "author": {"user": {"login": "li-kramgopa", "name": null}}, "url": "https://github.com/linkedin/rest.li/commit/cd16fcc5296379af1ef6899ec7f3884543b681ae", "committedDate": "2020-10-10T09:01:46Z", "message": "Performance improvements\n\nGet rid of DataComplexIdentitySet. Instead implement cycle check using placeholder booleans on DataMap and DataList\nUse LinkedList instead of ArrayList to avoid resizing if multiple datatemplates wrap a map since we anyways iterate linearly\nAvoid unnecessary number conversion when using input coercers"}, "afterCommit": {"oid": "304b8fba5216e168057c10250ec35b5e65975df0", "author": {"user": {"login": "li-kramgopa", "name": null}}, "url": "https://github.com/linkedin/rest.li/commit/304b8fba5216e168057c10250ec35b5e65975df0", "committedDate": "2020-10-11T02:22:26Z", "message": "Performance improvements\n\nGet rid of DataComplexIdentitySet. Instead implement default cycle check using placeholder ThreadLocal instances on DataMap and DataList\nProvide an API to customize the default cycle checker\nUse LinkedList instead of ArrayList to avoid resizing if multiple datatemplates wrap a map since we anyways iterate linearly\nAvoid unnecessary number conversion when using input coercers"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "304b8fba5216e168057c10250ec35b5e65975df0", "author": {"user": {"login": "li-kramgopa", "name": null}}, "url": "https://github.com/linkedin/rest.li/commit/304b8fba5216e168057c10250ec35b5e65975df0", "committedDate": "2020-10-11T02:22:26Z", "message": "Performance improvements\n\nGet rid of DataComplexIdentitySet. Instead implement default cycle check using placeholder ThreadLocal instances on DataMap and DataList\nProvide an API to customize the default cycle checker\nUse LinkedList instead of ArrayList to avoid resizing if multiple datatemplates wrap a map since we anyways iterate linearly\nAvoid unnecessary number conversion when using input coercers"}, "afterCommit": {"oid": "b7304ab5611758b381a8a3585461f33690e3f039", "author": {"user": {"login": "li-kramgopa", "name": null}}, "url": "https://github.com/linkedin/rest.li/commit/b7304ab5611758b381a8a3585461f33690e3f039", "committedDate": "2020-10-11T02:28:02Z", "message": "Performance improvements\n\nGet rid of DataComplexIdentitySet. Instead implement default cycle check using placeholder ThreadLocal instances on DataMap and DataList\nProvide an API to customize the default cycle checker\nUse LinkedList instead of ArrayList to avoid resizing if multiple datatemplates wrap a map since we anyways iterate linearly\nAvoid unnecessary number conversion when using input coercers"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b7304ab5611758b381a8a3585461f33690e3f039", "author": {"user": {"login": "li-kramgopa", "name": null}}, "url": "https://github.com/linkedin/rest.li/commit/b7304ab5611758b381a8a3585461f33690e3f039", "committedDate": "2020-10-11T02:28:02Z", "message": "Performance improvements\n\nGet rid of DataComplexIdentitySet. Instead implement default cycle check using placeholder ThreadLocal instances on DataMap and DataList\nProvide an API to customize the default cycle checker\nUse LinkedList instead of ArrayList to avoid resizing if multiple datatemplates wrap a map since we anyways iterate linearly\nAvoid unnecessary number conversion when using input coercers"}, "afterCommit": {"oid": "f5bd240c08e2961cc98821192ead287a13435d6e", "author": {"user": {"login": "li-kramgopa", "name": null}}, "url": "https://github.com/linkedin/rest.li/commit/f5bd240c08e2961cc98821192ead287a13435d6e", "committedDate": "2020-10-11T02:29:03Z", "message": "Performance improvements\n\nGet rid of DataComplexIdentitySet. Instead implement default cycle check using placeholder ThreadLocal instances on DataMap and DataList\nProvide an API to customize the default cycle checker\nUse LinkedList instead of ArrayList to avoid resizing if multiple datatemplates wrap a map since we anyways iterate linearly\nAvoid unnecessary number conversion when using input coercers"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f5bd240c08e2961cc98821192ead287a13435d6e", "author": {"user": {"login": "li-kramgopa", "name": null}}, "url": "https://github.com/linkedin/rest.li/commit/f5bd240c08e2961cc98821192ead287a13435d6e", "committedDate": "2020-10-11T02:29:03Z", "message": "Performance improvements\n\nGet rid of DataComplexIdentitySet. Instead implement default cycle check using placeholder ThreadLocal instances on DataMap and DataList\nProvide an API to customize the default cycle checker\nUse LinkedList instead of ArrayList to avoid resizing if multiple datatemplates wrap a map since we anyways iterate linearly\nAvoid unnecessary number conversion when using input coercers"}, "afterCommit": {"oid": "d7ed3fbfbed0a204be57addba3615013935da4c1", "author": {"user": {"login": "li-kramgopa", "name": null}}, "url": "https://github.com/linkedin/rest.li/commit/d7ed3fbfbed0a204be57addba3615013935da4c1", "committedDate": "2020-10-11T19:22:34Z", "message": "Performance improvements\n\nGet rid of DataComplexIdentitySet. Instead implement default cycle check using placeholder ThreadLocal instances on DataMap and DataList\nProvide an API to customize the default cycle checker\nUse LinkedList instead of ArrayList to avoid resizing if multiple datatemplates wrap a map since we anyways iterate linearly\nAvoid unnecessary number conversion when using input coercers"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA2Mzc5Mzg0", "url": "https://github.com/linkedin/rest.li/pull/441#pullrequestreview-506379384", "createdAt": "2020-10-12T07:59:48Z", "commit": {"oid": "d7ed3fbfbed0a204be57addba3615013935da4c1"}, "state": "APPROVED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQwNzo1OTo0OFrOHfzOhg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQwODowMjowN1rOHfzUCA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzEwNzIwNg==", "bodyText": "typo: supplier", "url": "https://github.com/linkedin/rest.li/pull/441#discussion_r503107206", "createdAt": "2020-10-12T07:59:48Z", "author": {"login": "karthikbalasub"}, "path": "data/src/main/java/com/linkedin/data/Data.java", "diffHunk": "@@ -103,6 +104,37 @@\n  */\n public class Data\n {\n+  /**\n+   * Placeholder object populated inside {@link DataList#_isTraversing} or {@link DataMap#_isTraversing} by the\n+   * default implementation of {@link CycleChecker} to indicate that the given {@link DataList} or {@link DataMap}\n+   * is being traversed.\n+   */\n+  private static final Object TRAVERSAL_INDICATOR = new Object();\n+\n+  /**\n+   * Supplier for cycle checker used when traversing instances using a {@link Data.TraverseCallback}. Applications can\n+   * choose to replace this with a supplier vending custom implementations, at their own risk of ensuring correctness.\n+   */\n+  private static Supplier<CycleChecker> CYCLE_CHECKER_SUPPLIER = DefaultCycleChecker::new;\n+\n+  /**\n+   * Override the default cycle checker supplier. Applications using this assume responsibility for correctness of their\n+   * {@link CycleChecker} implementations provided by this supplierr.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d7ed3fbfbed0a204be57addba3615013935da4c1"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzEwODEwOQ==", "bodyText": "nit: space between DataMap} to", "url": "https://github.com/linkedin/rest.li/pull/441#discussion_r503108109", "createdAt": "2020-10-12T08:01:14Z", "author": {"login": "karthikbalasub"}, "path": "data/src/main/java/com/linkedin/data/Data.java", "diffHunk": "@@ -130,6 +162,89 @@\n     TYPE_MAP.put(ByteString.class, (byte) 9);\n   }\n \n+  /**\n+   * Interface to be implemented by cycle checkers.\n+   */\n+  public interface CycleChecker\n+  {\n+    /**\n+     * Invoked when the start of {@link DataMap} is traversed.\n+     *\n+     * @param map provides the {@link DataMap}to be traversed.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d7ed3fbfbed0a204be57addba3615013935da4c1"}, "originalPosition": 76}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzEwODQ0MA==", "bodyText": "{@link DataMap} that ended traversal.", "url": "https://github.com/linkedin/rest.li/pull/441#discussion_r503108440", "createdAt": "2020-10-12T08:01:48Z", "author": {"login": "karthikbalasub"}, "path": "data/src/main/java/com/linkedin/data/Data.java", "diffHunk": "@@ -130,6 +162,89 @@\n     TYPE_MAP.put(ByteString.class, (byte) 9);\n   }\n \n+  /**\n+   * Interface to be implemented by cycle checkers.\n+   */\n+  public interface CycleChecker\n+  {\n+    /**\n+     * Invoked when the start of {@link DataMap} is traversed.\n+     *\n+     * @param map provides the {@link DataMap}to be traversed.\n+     *\n+     * @throws IOException If a cycle was detected when processing this.\n+     */\n+    void startMap(DataMap map) throws IOException;\n+\n+    /**\n+     * Invoked when the end of {@link DataMap} is traversed.\n+     *\n+     * @param map provides the {@link DataMap}to be traversed.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d7ed3fbfbed0a204be57addba3615013935da4c1"}, "originalPosition": 85}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzEwODYxNg==", "bodyText": "{@link DataList} that ended traversal.", "url": "https://github.com/linkedin/rest.li/pull/441#discussion_r503108616", "createdAt": "2020-10-12T08:02:07Z", "author": {"login": "karthikbalasub"}, "path": "data/src/main/java/com/linkedin/data/Data.java", "diffHunk": "@@ -130,6 +162,89 @@\n     TYPE_MAP.put(ByteString.class, (byte) 9);\n   }\n \n+  /**\n+   * Interface to be implemented by cycle checkers.\n+   */\n+  public interface CycleChecker\n+  {\n+    /**\n+     * Invoked when the start of {@link DataMap} is traversed.\n+     *\n+     * @param map provides the {@link DataMap}to be traversed.\n+     *\n+     * @throws IOException If a cycle was detected when processing this.\n+     */\n+    void startMap(DataMap map) throws IOException;\n+\n+    /**\n+     * Invoked when the end of {@link DataMap} is traversed.\n+     *\n+     * @param map provides the {@link DataMap}to be traversed.\n+     *\n+     * @throws IOException If a cycle was detected when processing this.\n+     */\n+    void endMap(DataMap map) throws IOException;\n+\n+    /**\n+     * Invoked when the start of {@link DataList} is traversed.\n+     *\n+     * @param list provides the {@link DataList}to be traversed.\n+     *\n+     * @throws IOException If a cycle was detected when processing this.\n+     */\n+    void startList(DataList list) throws IOException;\n+\n+    /**\n+     * Invoked when the end of {@link DataList} is traversed.\n+     *\n+     * @param list provides the {@link DataList}to be traversed.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d7ed3fbfbed0a204be57addba3615013935da4c1"}, "originalPosition": 103}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "163429c450227e8f72a7b471ab17246d3641f1ec", "author": {"user": {"login": "li-kramgopa", "name": null}}, "url": "https://github.com/linkedin/rest.li/commit/163429c450227e8f72a7b471ab17246d3641f1ec", "committedDate": "2020-10-12T17:44:15Z", "message": "Performance improvements\n\nGet rid of DataComplexIdentitySet. Instead implement default cycle check using placeholder ThreadLocal instances on DataMap and DataList\nProvide an API to customize the default cycle checker\nUse LinkedList instead of ArrayList to avoid resizing if multiple datatemplates wrap a map since we anyways iterate linearly\nAvoid unnecessary number conversion when using input coercers"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d7ed3fbfbed0a204be57addba3615013935da4c1", "author": {"user": {"login": "li-kramgopa", "name": null}}, "url": "https://github.com/linkedin/rest.li/commit/d7ed3fbfbed0a204be57addba3615013935da4c1", "committedDate": "2020-10-11T19:22:34Z", "message": "Performance improvements\n\nGet rid of DataComplexIdentitySet. Instead implement default cycle check using placeholder ThreadLocal instances on DataMap and DataList\nProvide an API to customize the default cycle checker\nUse LinkedList instead of ArrayList to avoid resizing if multiple datatemplates wrap a map since we anyways iterate linearly\nAvoid unnecessary number conversion when using input coercers"}, "afterCommit": {"oid": "163429c450227e8f72a7b471ab17246d3641f1ec", "author": {"user": {"login": "li-kramgopa", "name": null}}, "url": "https://github.com/linkedin/rest.li/commit/163429c450227e8f72a7b471ab17246d3641f1ec", "committedDate": "2020-10-12T17:44:15Z", "message": "Performance improvements\n\nGet rid of DataComplexIdentitySet. Instead implement default cycle check using placeholder ThreadLocal instances on DataMap and DataList\nProvide an API to customize the default cycle checker\nUse LinkedList instead of ArrayList to avoid resizing if multiple datatemplates wrap a map since we anyways iterate linearly\nAvoid unnecessary number conversion when using input coercers"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4701, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}