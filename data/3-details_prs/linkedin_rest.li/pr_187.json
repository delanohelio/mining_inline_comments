{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc5MzExNDEx", "number": 187, "title": "Fix issues when encoding/parsing custom properties in PDL.", "bodyText": "Allow PDL parser and encoder to support property keys with special characters.\nAlso sort properties by key before encoding them to ensure ordering consistency.", "createdAt": "2020-02-25T01:08:35Z", "url": "https://github.com/linkedin/rest.li/pull/187", "merged": true, "mergeCommit": {"oid": "8ada11feaf9cf7ff3ce8c84f18fd2cc65168663a"}, "closed": true, "closedAt": "2020-02-25T19:02:51Z", "author": {"login": "karthikbalasub"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcHnCmCgH2gAyMzc5MzExNDExOjg4YmI1Y2I3ODYzYmI4ZGY3OTI1ZTdhN2ViMmE5ZDUyNDZlM2EyNWM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcH2kddgH2gAyMzc5MzExNDExOjc3NzNhNzUxZWUzNDJmZmVlZDA1ZDEzMWJjMDY1Yjk4OGM4M2M3Mzg=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "88bb5cb7863bb8df7925e7a7eb2a9d5246e3a25c", "author": {"user": null}, "url": "https://github.com/linkedin/rest.li/commit/88bb5cb7863bb8df7925e7a7eb2a9d5246e3a25c", "committedDate": "2020-02-25T00:32:41Z", "message": "Allow PDL parser and encoder to support property keys with special\ncharacters.\nAlso sort properties by key before encoding them to ensure ordering\nconsistency."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYzODM0Nzk4", "url": "https://github.com/linkedin/rest.li/pull/187#pullrequestreview-363834798", "createdAt": "2020-02-25T02:32:07Z", "commit": {"oid": "88bb5cb7863bb8df7925e7a7eb2a9d5246e3a25c"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQwMjozMjowOFrOFt2weg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQwMjo0ODo1MFrOFt3ADw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzYyNzM4Ng==", "bodyText": "I'd avoid packing this stream builder chain into the for-loop statement. Either construct the list on its own line, or use Stream#forEach", "url": "https://github.com/linkedin/rest.li/pull/187#discussion_r383627386", "createdAt": "2020-02-25T02:32:08Z", "author": {"login": "evanw555"}, "path": "data/src/main/java/com/linkedin/data/schema/PdlBuilder.java", "diffHunk": "@@ -127,14 +129,17 @@ PdlBuilder writeSpace() throws IOException\n   abstract boolean writeDoc(String doc) throws IOException;\n \n   /**\n-   * Writes a set of schema properties that share a common prefix to .pdl.\n+   * Writes a set of schema properties that share a common prefix to .pdl. Sorts the properties by key before writing.\n    *\n    * @param prefix provides the common prefix of all the properties.\n    * @param properties provides the properties to write.\n    */\n   PdlBuilder writeProperties(List<String> prefix, Map<String, Object> properties) throws IOException\n   {\n-    for (Map.Entry<String, Object> entry : properties.entrySet())\n+    for (Map.Entry<String, Object> entry :\n+        properties.entrySet().stream()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "88bb5cb7863bb8df7925e7a7eb2a9d5246e3a25c"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzYyOTMwNA==", "bodyText": "I'd suggest buffing this test case up a little bit to test the following things:\n\nAll types of comments (e.g. single-line, javadoc):\n\n@`//`.`/**`.`*/`.`/*.*/`\n\n\nTest the encoder pattern you just added (Pattern.compile(\".*[^0-9a-zA-Z_-].*\")):\n\n@shouldNotBeEscaped.abc_XYZ-123", "url": "https://github.com/linkedin/rest.li/pull/187#discussion_r383629304", "createdAt": "2020-02-25T02:40:25Z", "author": {"login": "evanw555"}, "path": "generator-test/src/test/pegasus/com/linkedin/pegasus/generator/test/idl/escaping/PropertyKeyEscaping.pdl", "diffHunk": "@@ -2,6 +2,7 @@ namespace com.linkedin.pegasus.generator.test.idl.escaping\n \n record PropertyKeyEscaping {\n   @`namespace` = \"foo.bar\"\n+  @path.`/*.*/`", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "88bb5cb7863bb8df7925e7a7eb2a9d5246e3a25c"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzYzMTM3NQ==", "bodyText": "Tbh this is kind of confusing, it took me a minute to realize why this also contains .*...\nPerhaps it would make more sense to use the inverse:\nIDENTIFIER_CHARS = Pattern.compile(\"[0-9a-zA-Z_-]+\")\n\nThen do...\n!IDENTIFIER_CHARS.matcher(propertyKey).matches()", "url": "https://github.com/linkedin/rest.li/pull/187#discussion_r383631375", "createdAt": "2020-02-25T02:48:50Z", "author": {"login": "evanw555"}, "path": "data/src/main/java/com/linkedin/data/schema/PdlBuilder.java", "diffHunk": "@@ -51,6 +52,7 @@\n       \"record\", \"typeref\", \"union\", \"null\", \"true\", \"false\"\n   ));\n   private static final char ESCAPE_CHAR = '`';\n+  private static final Pattern NON_IDENTIFIER_CHARS = Pattern.compile(\".*[^0-9a-zA-Z_-].*\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "88bb5cb7863bb8df7925e7a7eb2a9d5246e3a25c"}, "originalPosition": 12}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f0379a7723b9962d107c600813621ce280af4342", "author": {"user": null}, "url": "https://github.com/linkedin/rest.li/commit/f0379a7723b9962d107c600813621ce280af4342", "committedDate": "2020-02-25T04:15:57Z", "message": "Address Evan's review comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYzODg4OTUx", "url": "https://github.com/linkedin/rest.li/pull/187#pullrequestreview-363888951", "createdAt": "2020-02-25T06:05:45Z", "commit": {"oid": "f0379a7723b9962d107c600813621ce280af4342"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYzODExMzk2", "url": "https://github.com/linkedin/rest.li/pull/187#pullrequestreview-363811396", "createdAt": "2020-02-25T01:12:19Z", "commit": {"oid": "88bb5cb7863bb8df7925e7a7eb2a9d5246e3a25c"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQwMToxMjoxOVrOFt1g7A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQwMToxMjoxOVrOFt1g7A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzYwNzAyMA==", "bodyText": "nit: remove extra line.", "url": "https://github.com/linkedin/rest.li/pull/187#discussion_r383607020", "createdAt": "2020-02-25T01:12:19Z", "author": {"login": "nickibi"}, "path": "data/src/test/java/com/linkedin/data/schema/grammar/TestPdlSchemaParser.java", "diffHunk": "@@ -85,6 +87,14 @@ public void testParseNestedProperties() throws IOException\n     expected.put(\"validate\", validate);\n     expected.put(\"com.linkedin.CustomValidator\", \"abc\");\n \n+    DataMap propertyWithPath = new DataMap();\n+    DataMap propertyWithSpecialChars = new DataMap();\n+    propertyWithPath.put(\"/*\", propertyWithSpecialChars);\n+    propertyWithSpecialChars.put(\"*/.$\", false);\n+    expected.put(\"pathProp\", propertyWithPath);\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "88bb5cb7863bb8df7925e7a7eb2a9d5246e3a25c"}, "originalPosition": 18}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a814adac5caeb851b27fa3000fe4849908a73580", "author": {"user": null}, "url": "https://github.com/linkedin/rest.li/commit/a814adac5caeb851b27fa3000fe4849908a73580", "committedDate": "2020-02-25T18:33:37Z", "message": "Added unit tests to cover escaping of grammar characters in property\nkeys"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "acd99744f9415de66cdfc26dbcaa001a1366d534", "author": {"user": null}, "url": "https://github.com/linkedin/rest.li/commit/acd99744f9415de66cdfc26dbcaa001a1366d534", "committedDate": "2020-02-25T18:35:09Z", "message": "Release 28.1.19"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7773a751ee342ffeed05d131bc065b988c83c738", "author": {"user": null}, "url": "https://github.com/linkedin/rest.li/commit/7773a751ee342ffeed05d131bc065b988c83c738", "committedDate": "2020-02-25T18:38:15Z", "message": "Merge branch 'master' into bug/pdl_prop"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4948, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}