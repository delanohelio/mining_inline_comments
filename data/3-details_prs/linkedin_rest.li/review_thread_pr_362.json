{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDYyNDEzNzA3", "number": 362, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QyMzozMjo0NlrOEUyoMw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QyMzozMjo0NlrOEUyoMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwMjM2NDY3OnYy", "diffSide": "RIGHT", "path": "gradle-plugins/src/main/java/com/linkedin/pegasus/gradle/PegasusPlugin.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QyMzozMjo0NlrOG7L96Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QyMzo0ODo1OFrOG7MQWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDcxNTI0MQ==", "bodyText": "Would this automatically skip the checkRestModel task as it depends on this?", "url": "https://github.com/linkedin/rest.li/pull/362#discussion_r464715241", "createdAt": "2020-08-03T23:32:46Z", "author": {"login": "karthikbalasub"}, "path": "gradle-plugins/src/main/java/com/linkedin/pegasus/gradle/PegasusPlugin.java", "diffHunk": "@@ -1226,6 +1229,8 @@ protected void configureRestModelGeneration(Project project, SourceSet sourceSet\n               task.setEnableArgFile(true);\n             }\n \n+            task.onlyIf(t -> !isPropertyTrue(project, SKIP_GENERATE_REST_MODEL));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cd21df22aacbab46546b0834cd40343e448e1957"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDcxNTcyOQ==", "bodyText": "It will not ( I tested with --rerun-tasks)\n> Task :datarealm-restaurants-codegen:generateRestModel SKIPPED\nSkipping task ':datarealm-restaurants-codegen:generateRestModel' as task onlyIf is false.\n:datarealm-restaurants-codegen:generateRestModel (Thread[Execution worker for ':' Thread 7,5,main]) completed. Took 0.0 secs.\n:datarealm-restaurants-codegen:checkIdl (Thread[Execution worker for ':' Thread 7,5,main]) started.\n\n> Task :datarealm-restaurants-codegen:checkIdl SKIPPED\nSkipping task ':datarealm-restaurants-codegen:checkIdl' as task onlyIf is false.\n:datarealm-restaurants-codegen:checkIdl (Thread[Execution worker for ':' Thread 7,5,main]) completed. Took 0.0 secs.\n:datarealm-restaurants-codegen:checkRestModel (Thread[Execution worker for ':' Thread 7,5,main]) started.\n\n> Task :datarealm-restaurants-codegen:checkRestModel\nCustom actions are attached to task ':datarealm-restaurants-codegen:checkRestModel'.\nBuild cache key for task ':datarealm-restaurants-codegen:checkRestModel' is 1c367c32613257037a337f7ab4000298\nTask ':datarealm-restaurants-codegen:checkRestModel' is not up-to-date because:\n  Executed with '--rerun-tasks'.\nChecking interface compatibility with API ...\nStarting process 'command '/export/apps/jdk/JDK-1_8_0_172/bin/java''. Working directory: /home/juncwang/ws/oncall/datarealm-restaurants_trunk/datarealm-restaurants-codegen Command: /export/apps/jdk/JDK-1_8_0_172/bin/java -Dfile.encoding=UTF-8 -Duser.country=US -Duser.language=en -Duser.variant -cp /home/juncwang/ws/oncall/datarealm-restaurants_trunk/build/datarealm-restaurants-codegen/checkRestModel/datarealm-restaurants-codegen-pathing.jar com.linkedin.restli.tools.snapshot.check.RestLiSnapshotCompatibilityChecker --compat backwards --report /home/juncwang/ws/oncall/datarealm-restaurants_trunk/datarealm-restaurants-models/src/main/snapshot/com.linkedin.datarealm.reviews.snapshot.json /home/juncwang/ws/oncall/datarealm-restaurants_trunk/datarealm-restaurants-codegen/src/mainGeneratedRest/snapshot/com.linkedin.datarealm.reviews.snapshot.json /home/juncwang/ws/oncall/datarealm-restaurants_trunk/datarealm-restaurants-models/src/main/snapshot/com.linkedin.datarealm.entityMedias.snapshot.json /home/juncwang/ws/oncall/datarealm-restaurants_trunk/datarealm-restaurants-codegen/src/mainGeneratedRest/snapshot/com.linkedin.datarealm.entityMedias.snapshot.json /home/juncwang/ws/oncall/datarealm-restaurants_trunk/datarealm-restaurants-models/src/main/snapshot/com.linkedin.datarealm.ingredients.snapshot.json /home/juncwang/ws/oncall/datarealm-restaurants_trunk/datarealm-restaurants-codegen/src/mainGeneratedRest/snapshot/com.linkedin.datarealm.ingredients.snapshot.json /home/juncwang/ws/oncall/datarealm-restaurants_trunk/datarealm-restaurants-models/src/main/snapshot/com.linkedin.datarealm.restaurants.snapshot.json /home/juncwang/ws/oncall/datarealm-restaurants_trunk/datarealm-restaurants-codegen/src/mainGeneratedRest/snapshot/com.linkedin.datarealm.restaurants.snapshot.json /home/juncwang/ws/oncall/datarealm-restaurants_trunk/datarealm-restaurants-models/src/main/snapshot/com.linkedin.datarealm.members.snapshot.json /home/juncwang/ws/oncall/datarealm-restaurants_trunk/datarealm-restaurants-codegen/src/mainGeneratedRest/snapshot/com.linkedin.datarealm.members.snapshot.json /home/juncwang/ws/oncall/datarealm-restaurants_trunk/datarealm-restaurants-models/src/main/snapshot/com.linkedin.datarealm.menuItems.snapshot.json /home/juncwang/ws/oncall/datarealm-restaurants_trunk/datarealm-restaurants-codegen/src/mainGeneratedRest/snapshot/com.linkedin.datarealm.menuItems.snapshot.json /home/juncwang/ws/oncall/datarealm-restaurants_trunk/datarealm-restaurants-models/src/main/snapshot/com.linkedin.datarealm.miniMenuItems.snapshot.json /home/juncwang/ws/oncall/datarealm-restaurants_trunk/datarealm-restaurants-codegen/src/mainGeneratedRest/snapshot/com.linkedin.datarealm.miniMenuItems.snapshot.json /home/juncwang/ws/oncall/datarealm-restaurants_trunk/datarealm-restaurants-models/src/main/snapshot/com.linkedin.datarealm.chefs.snapshot.json /home/juncwang/ws/oncall/datarealm-restaurants_trunk/datarealm-restaurants-codegen/src/mainGeneratedRest/snapshot/com.linkedin.datarealm.chefs.snapshot.json /home/juncwang/ws/oncall/datarealm-restaurants_trunk/datarealm-restaurants-models/src/main/snapshot/com.linkedin.datarealm.orders.snapshot.json /home/juncwang/ws/oncall/datarealm-restaurants_trunk/datarealm-restaurants-codegen/src/mainGeneratedRest/snapshot/com.linkedin.datarealm.orders.snapshot.json\nSuccessfully started process 'command '/export/apps/jdk/JDK-1_8_0_172/bin/java''\nANTLR Tool version 4.5 used for code generation does not match the current runtime version 4.7.2ANTLR Runtime version 4.5 used for parser compilation does not match the current runtime version 4.7.2ANTLR Tool version 4.5 used for code generation does not match the current runtime version 4.7.2ANTLR Runtime version 4.5 used for parser compilation does not match the current runtime version 4.7.2[checker] [RS-COMPAT]: true\n[checker] [MD-COMPAT]: true\n[checker]\nStored cache entry for task ':datarealm-restaurants-codegen:checkRestModel' with cache key 1c367c32613257037a337f7ab4000298\n:datarealm-restaurants-codegen:checkRestModel (Thread[Execution worker for ':' Thread 7,5,main]) completed. Took 0.618 secs.\n:datarealm-restaurants-codegen:checkSnapshot (Thread[Execution worker for ':' Thread 7,5,main]) started.", "url": "https://github.com/linkedin/rest.li/pull/362#discussion_r464715729", "createdAt": "2020-08-03T23:34:25Z", "author": {"login": "junchuanwang"}, "path": "gradle-plugins/src/main/java/com/linkedin/pegasus/gradle/PegasusPlugin.java", "diffHunk": "@@ -1226,6 +1229,8 @@ protected void configureRestModelGeneration(Project project, SourceSet sourceSet\n               task.setEnableArgFile(true);\n             }\n \n+            task.onlyIf(t -> !isPropertyTrue(project, SKIP_GENERATE_REST_MODEL));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDcxNTI0MQ=="}, "originalCommit": {"oid": "cd21df22aacbab46546b0834cd40343e448e1957"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDcxODEzNw==", "bodyText": "I think we need a flag to disable the entire chain of tasks starting from generate -> check -> publish. Otherwise, it can result in unpredictable results. Also, since this flag is needed for improving build speed, skipping these additional tasks would make it better.", "url": "https://github.com/linkedin/rest.li/pull/362#discussion_r464718137", "createdAt": "2020-08-03T23:42:14Z", "author": {"login": "karthikbalasub"}, "path": "gradle-plugins/src/main/java/com/linkedin/pegasus/gradle/PegasusPlugin.java", "diffHunk": "@@ -1226,6 +1229,8 @@ protected void configureRestModelGeneration(Project project, SourceSet sourceSet\n               task.setEnableArgFile(true);\n             }\n \n+            task.onlyIf(t -> !isPropertyTrue(project, SKIP_GENERATE_REST_MODEL));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDcxNTI0MQ=="}, "originalCommit": {"oid": "cd21df22aacbab46546b0834cd40343e448e1957"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDcxOTU3NA==", "bodyText": "Do you mean one additional flag to actually combines SKIP_IDL_CHECK && IDL_NO_PUBLISH && SNAPSHOT_NO_PUBLISH && SKIP_GENERATE_REST_MODEL? But one can do this on his own through combination of existing flags.\nRight now, there are already SKIP_IDL_CHECK, IDL_NO_PUBLISH, SNAPSHOT_NO_PUBLISH three Flags\nIf we want to keep the current noPublish flag behaving the same as before, and also add another flags, I am just afraid there will be too many flags.", "url": "https://github.com/linkedin/rest.li/pull/362#discussion_r464719574", "createdAt": "2020-08-03T23:47:27Z", "author": {"login": "junchuanwang"}, "path": "gradle-plugins/src/main/java/com/linkedin/pegasus/gradle/PegasusPlugin.java", "diffHunk": "@@ -1226,6 +1229,8 @@ protected void configureRestModelGeneration(Project project, SourceSet sourceSet\n               task.setEnableArgFile(true);\n             }\n \n+            task.onlyIf(t -> !isPropertyTrue(project, SKIP_GENERATE_REST_MODEL));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDcxNTI0MQ=="}, "originalCommit": {"oid": "cd21df22aacbab46546b0834cd40343e448e1957"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDcxOTk2Mw==", "bodyText": "Okay, good point.", "url": "https://github.com/linkedin/rest.li/pull/362#discussion_r464719963", "createdAt": "2020-08-03T23:48:58Z", "author": {"login": "karthikbalasub"}, "path": "gradle-plugins/src/main/java/com/linkedin/pegasus/gradle/PegasusPlugin.java", "diffHunk": "@@ -1226,6 +1229,8 @@ protected void configureRestModelGeneration(Project project, SourceSet sourceSet\n               task.setEnableArgFile(true);\n             }\n \n+            task.onlyIf(t -> !isPropertyTrue(project, SKIP_GENERATE_REST_MODEL));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDcxNTI0MQ=="}, "originalCommit": {"oid": "cd21df22aacbab46546b0834cd40343e448e1957"}, "originalPosition": 14}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 543, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}