{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDYzNjg2Nzg0", "number": 365, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQwMTowODoyOVrOEVoSwA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxNjoyNjozMlrOEV5s4w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxMTE1NzEyOnYy", "diffSide": "RIGHT", "path": "restli-common/src/main/java/com/linkedin/restli/common/validation/RestLiDataValidator.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQwMTowODoyOVrOG8fspA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQwNzo1MzowN1rOG8ndJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjA4NzA3Ng==", "bodyText": "Is this mapping even needed anymore? If you look at the logic path, #validateInput(RecordTemplate) already has a switch to check that the resource method is one of [create, batch_create, update, batch_update], so it seems like the \"read-only optional\" logic is applied for all \"input\" method types. partial_update and delete have their own separate code paths.", "url": "https://github.com/linkedin/rest.li/pull/365#discussion_r466087076", "createdAt": "2020-08-06T01:08:29Z", "author": {"login": "evanw555"}, "path": "restli-common/src/main/java/com/linkedin/restli/common/validation/RestLiDataValidator.java", "diffHunk": "@@ -106,7 +106,7 @@\n \n   // ReadOnly fields are treated as optional for these types of requests\n   private static final Set<ResourceMethod> readOnlyOptional = new HashSet<>(Arrays.asList(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4196962b4305676b08246657c0b58863cfa45d9e"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjIxNDE4MQ==", "bodyText": "Ack, fixed it.", "url": "https://github.com/linkedin/rest.li/pull/365#discussion_r466214181", "createdAt": "2020-08-06T07:53:07Z", "author": {"login": "karthikbalasub"}, "path": "restli-common/src/main/java/com/linkedin/restli/common/validation/RestLiDataValidator.java", "diffHunk": "@@ -106,7 +106,7 @@\n \n   // ReadOnly fields are treated as optional for these types of requests\n   private static final Set<ResourceMethod> readOnlyOptional = new HashSet<>(Arrays.asList(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjA4NzA3Ng=="}, "originalCommit": {"oid": "4196962b4305676b08246657c0b58863cfa45d9e"}, "originalPosition": 3}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxMTE1ODI4OnYy", "diffSide": "RIGHT", "path": "restli-common/src/main/java/com/linkedin/restli/common/validation/RestLiDataValidator.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQwMTowOToxMFrOG8ftTQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQwNzo1MzoxNFrOG8ndcw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjA4NzI0NQ==", "bodyText": "Should you also make the same change for the following if-statement (for createOnly) so that the way these predicates are constructed is consistent?", "url": "https://github.com/linkedin/rest.li/pull/365#discussion_r466087245", "createdAt": "2020-08-06T01:09:10Z", "author": {"login": "evanw555"}, "path": "restli-common/src/main/java/com/linkedin/restli/common/validation/RestLiDataValidator.java", "diffHunk": "@@ -247,8 +250,7 @@ public RestLiDataValidator(Map<String, List<String>> annotations,\n       for (Map.Entry<String, List<String>> entry : annotations.entrySet())\n       {\n         String annotationName = entry.getKey();\n-        if (annotationName.equals(ReadOnly.class.getAnnotation(RestSpecAnnotation.class).name())\n-            && readOnlyRestrictedMethods.contains(resourceMethod))\n+        if (annotationName.equals(ReadOnly.class.getAnnotation(RestSpecAnnotation.class).name()))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4196962b4305676b08246657c0b58863cfa45d9e"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjEyMTY2Nw==", "bodyText": "Should you also make the same change for the following if-statement (for createOnly) so that the way these predicates are constructed is consistent?\n\n+1", "url": "https://github.com/linkedin/rest.li/pull/365#discussion_r466121667", "createdAt": "2020-08-06T03:20:08Z", "author": {"login": "nickibi"}, "path": "restli-common/src/main/java/com/linkedin/restli/common/validation/RestLiDataValidator.java", "diffHunk": "@@ -247,8 +250,7 @@ public RestLiDataValidator(Map<String, List<String>> annotations,\n       for (Map.Entry<String, List<String>> entry : annotations.entrySet())\n       {\n         String annotationName = entry.getKey();\n-        if (annotationName.equals(ReadOnly.class.getAnnotation(RestSpecAnnotation.class).name())\n-            && readOnlyRestrictedMethods.contains(resourceMethod))\n+        if (annotationName.equals(ReadOnly.class.getAnnotation(RestSpecAnnotation.class).name()))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjA4NzI0NQ=="}, "originalCommit": {"oid": "4196962b4305676b08246657c0b58863cfa45d9e"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjIxNDI1OQ==", "bodyText": "Done", "url": "https://github.com/linkedin/rest.li/pull/365#discussion_r466214259", "createdAt": "2020-08-06T07:53:14Z", "author": {"login": "karthikbalasub"}, "path": "restli-common/src/main/java/com/linkedin/restli/common/validation/RestLiDataValidator.java", "diffHunk": "@@ -247,8 +250,7 @@ public RestLiDataValidator(Map<String, List<String>> annotations,\n       for (Map.Entry<String, List<String>> entry : annotations.entrySet())\n       {\n         String annotationName = entry.getKey();\n-        if (annotationName.equals(ReadOnly.class.getAnnotation(RestSpecAnnotation.class).name())\n-            && readOnlyRestrictedMethods.contains(resourceMethod))\n+        if (annotationName.equals(ReadOnly.class.getAnnotation(RestSpecAnnotation.class).name()))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjA4NzI0NQ=="}, "originalCommit": {"oid": "4196962b4305676b08246657c0b58863cfa45d9e"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxNDAwOTMxOnYy", "diffSide": "RIGHT", "path": "CHANGELOG.md", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxNjoyNjozMlrOG87Amg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxNjoyNjozMlrOG87Amg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjUzNDU1NA==", "bodyText": "I would recommend to add PR# in the changelog, it will be easier for us to look back the history.", "url": "https://github.com/linkedin/rest.li/pull/365#discussion_r466534554", "createdAt": "2020-08-06T16:26:32Z", "author": {"login": "nickibi"}, "path": "CHANGELOG.md", "diffHunk": "@@ -13,6 +13,7 @@ When updating the changelog, remember to be very clear about what behavior has c\n and what APIs have changed, if applicable.\n \n ## [Unreleased]\n+- Relax validation of read-only fields for upsert usecase: UPDATE used for create or update. Fields marked as ReadOnly will be treated as optional for UPDATE methods.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c203902f5695cca43877f02c846cabe1fb6a4ccc"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 545, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}