{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI0MTE0MDkz", "number": 1863, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QyMToxMDowN1rOEARrSw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QyMTo0OToxM1rOEASX_Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4NzI1MDY3OnYy", "diffSide": "RIGHT", "path": "http-clients/apache-client/src/main/java/software/amazon/awssdk/http/apache/ApacheHttpClient.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QyMToxMDowN1rOGbdQbg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QyMzoyNTozNFrOGbgkDQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTQ0NDA3OA==", "bodyText": "nit, no final on local variable \ud83d\ude1b", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1863#discussion_r431444078", "createdAt": "2020-05-27T21:10:07Z", "author": {"login": "zoewangg"}, "path": "http-clients/apache-client/src/main/java/software/amazon/awssdk/http/apache/ApacheHttpClient.java", "diffHunk": "@@ -206,11 +214,15 @@ private boolean isProxyEnabled(ProxyConfiguration proxyConfiguration) {\n \n     @Override\n     public ExecutableHttpRequest prepareRequest(HttpExecuteRequest request) {\n+        final MetricCollector metricCollector = request.metricCollector().orElseGet(NoOpMetricCollector::create);\n+        metricCollector.reportMetric(HTTP_CLIENT_NAME, clientName());\n         HttpRequestBase apacheRequest = toApacheRequest(request);\n         return new ExecutableHttpRequest() {\n             @Override\n             public HttpExecuteResponse call() throws IOException {\n-                return execute(apacheRequest);\n+                final HttpExecuteResponse executeResponse = execute(apacheRequest);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cac6868c4eb2bbe12921122ac54f2883fc2fe00a"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTQ5ODI1Mw==", "bodyText": "Ooops, this was Intellij's fault!", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1863#discussion_r431498253", "createdAt": "2020-05-27T23:25:34Z", "author": {"login": "dagnir"}, "path": "http-clients/apache-client/src/main/java/software/amazon/awssdk/http/apache/ApacheHttpClient.java", "diffHunk": "@@ -206,11 +214,15 @@ private boolean isProxyEnabled(ProxyConfiguration proxyConfiguration) {\n \n     @Override\n     public ExecutableHttpRequest prepareRequest(HttpExecuteRequest request) {\n+        final MetricCollector metricCollector = request.metricCollector().orElseGet(NoOpMetricCollector::create);\n+        metricCollector.reportMetric(HTTP_CLIENT_NAME, clientName());\n         HttpRequestBase apacheRequest = toApacheRequest(request);\n         return new ExecutableHttpRequest() {\n             @Override\n             public HttpExecuteResponse call() throws IOException {\n-                return execute(apacheRequest);\n+                final HttpExecuteResponse executeResponse = execute(apacheRequest);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTQ0NDA3OA=="}, "originalCommit": {"oid": "cac6868c4eb2bbe12921122ac54f2883fc2fe00a"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4NzI1NzI1OnYy", "diffSide": "RIGHT", "path": "http-client-spi/src/main/java/software/amazon/awssdk/http/HttpMetrics.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QyMToxMjoxN1rOGbdUlA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QyMzoyNzoxM1rOGbgmCA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTQ0NTE0MA==", "bodyText": "PENDING_CONNECTION_REQUESTS or PENDING_CONNECTIONS?", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1863#discussion_r431445140", "createdAt": "2020-05-27T21:12:17Z", "author": {"login": "zoewangg"}, "path": "http-client-spi/src/main/java/software/amazon/awssdk/http/HttpMetrics.java", "diffHunk": "@@ -0,0 +1,56 @@\n+/*\n+ * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.awssdk.http;\n+\n+import software.amazon.awssdk.metrics.MetricCategory;\n+import software.amazon.awssdk.metrics.SdkMetric;\n+\n+/**\n+ * Metrics collected by HTTP clients.\n+ */\n+public final class HttpMetrics {\n+    /**\n+     * The name of the HTTP client.\n+     */\n+    public static final SdkMetric<String> HTTP_CLIENT_NAME = metric(\"HttpClientName\", String.class);\n+\n+    /**\n+     * The maximum number of connections that will be pooled by the HTTP client.\n+     */\n+    public static final SdkMetric<Integer> MAX_CONNECTIONS = metric(\"MaxConnections\", Integer.class);\n+\n+    /**\n+     * The number of idle connections in the connection pool that are ready to serve a request.\n+     */\n+    public static final SdkMetric<Integer> AVAILABLE_CONNECTIONS = metric(\"AvailableConnections\", Integer.class);\n+\n+    /**\n+     * The number of connections from the connection pool that are busy serving requests.\n+     */\n+    public static final SdkMetric<Integer> LEASED_CONNECTIONS = metric(\"LeasedConnections\", Integer.class);\n+\n+    /**\n+     * The number of requests awaiting a free connection from the pool.\n+     */\n+    public static final SdkMetric<Integer> PENDING_REQUESTS = metric(\"PendingRequests\", Integer.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cac6868c4eb2bbe12921122ac54f2883fc2fe00a"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTQ5ODc2MA==", "bodyText": "Yeah I'm not married to these names. Howe about PENDING_CONNECTION_ACQUIRES?", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1863#discussion_r431498760", "createdAt": "2020-05-27T23:27:13Z", "author": {"login": "dagnir"}, "path": "http-client-spi/src/main/java/software/amazon/awssdk/http/HttpMetrics.java", "diffHunk": "@@ -0,0 +1,56 @@\n+/*\n+ * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.awssdk.http;\n+\n+import software.amazon.awssdk.metrics.MetricCategory;\n+import software.amazon.awssdk.metrics.SdkMetric;\n+\n+/**\n+ * Metrics collected by HTTP clients.\n+ */\n+public final class HttpMetrics {\n+    /**\n+     * The name of the HTTP client.\n+     */\n+    public static final SdkMetric<String> HTTP_CLIENT_NAME = metric(\"HttpClientName\", String.class);\n+\n+    /**\n+     * The maximum number of connections that will be pooled by the HTTP client.\n+     */\n+    public static final SdkMetric<Integer> MAX_CONNECTIONS = metric(\"MaxConnections\", Integer.class);\n+\n+    /**\n+     * The number of idle connections in the connection pool that are ready to serve a request.\n+     */\n+    public static final SdkMetric<Integer> AVAILABLE_CONNECTIONS = metric(\"AvailableConnections\", Integer.class);\n+\n+    /**\n+     * The number of connections from the connection pool that are busy serving requests.\n+     */\n+    public static final SdkMetric<Integer> LEASED_CONNECTIONS = metric(\"LeasedConnections\", Integer.class);\n+\n+    /**\n+     * The number of requests awaiting a free connection from the pool.\n+     */\n+    public static final SdkMetric<Integer> PENDING_REQUESTS = metric(\"PendingRequests\", Integer.class);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTQ0NTE0MA=="}, "originalCommit": {"oid": "cac6868c4eb2bbe12921122ac54f2883fc2fe00a"}, "originalPosition": 48}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4NzI1ODAzOnYy", "diffSide": "RIGHT", "path": "http-client-spi/src/main/java/software/amazon/awssdk/http/HttpMetrics.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QyMToxMjozMlrOGbdVEA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QyMzoyOToxOFrOGbgocQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTQ0NTI2NA==", "bodyText": "Do we need to namespace all sdk metrics?", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1863#discussion_r431445264", "createdAt": "2020-05-27T21:12:32Z", "author": {"login": "zoewangg"}, "path": "http-client-spi/src/main/java/software/amazon/awssdk/http/HttpMetrics.java", "diffHunk": "@@ -0,0 +1,56 @@\n+/*\n+ * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.awssdk.http;\n+\n+import software.amazon.awssdk.metrics.MetricCategory;\n+import software.amazon.awssdk.metrics.SdkMetric;\n+\n+/**\n+ * Metrics collected by HTTP clients.\n+ */\n+public final class HttpMetrics {\n+    /**\n+     * The name of the HTTP client.\n+     */\n+    public static final SdkMetric<String> HTTP_CLIENT_NAME = metric(\"HttpClientName\", String.class);\n+\n+    /**\n+     * The maximum number of connections that will be pooled by the HTTP client.\n+     */\n+    public static final SdkMetric<Integer> MAX_CONNECTIONS = metric(\"MaxConnections\", Integer.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cac6868c4eb2bbe12921122ac54f2883fc2fe00a"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTQ5OTM3Nw==", "bodyText": "I think the issue with that is if you want to \"pretty print\" the metrics, or write your own publisher, there's no easy way to just get the metric name", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1863#discussion_r431499377", "createdAt": "2020-05-27T23:29:18Z", "author": {"login": "dagnir"}, "path": "http-client-spi/src/main/java/software/amazon/awssdk/http/HttpMetrics.java", "diffHunk": "@@ -0,0 +1,56 @@\n+/*\n+ * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.awssdk.http;\n+\n+import software.amazon.awssdk.metrics.MetricCategory;\n+import software.amazon.awssdk.metrics.SdkMetric;\n+\n+/**\n+ * Metrics collected by HTTP clients.\n+ */\n+public final class HttpMetrics {\n+    /**\n+     * The name of the HTTP client.\n+     */\n+    public static final SdkMetric<String> HTTP_CLIENT_NAME = metric(\"HttpClientName\", String.class);\n+\n+    /**\n+     * The maximum number of connections that will be pooled by the HTTP client.\n+     */\n+    public static final SdkMetric<Integer> MAX_CONNECTIONS = metric(\"MaxConnections\", Integer.class);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTQ0NTI2NA=="}, "originalCommit": {"oid": "cac6868c4eb2bbe12921122ac54f2883fc2fe00a"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4NzM2NTA5OnYy", "diffSide": "RIGHT", "path": "http-client-spi/src/main/java/software/amazon/awssdk/http/HttpMetrics.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QyMTo0OToxM1rOGbeYiQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QyMzozMDowOFrOGbgpjA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTQ2MjUzNw==", "bodyText": "Do we want to differentiate h2 max connection from it? Is it worth creating a new class for all h2 http metrics such as window size, max streams, etc?", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1863#discussion_r431462537", "createdAt": "2020-05-27T21:49:13Z", "author": {"login": "zoewangg"}, "path": "http-client-spi/src/main/java/software/amazon/awssdk/http/HttpMetrics.java", "diffHunk": "@@ -0,0 +1,56 @@\n+/*\n+ * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.awssdk.http;\n+\n+import software.amazon.awssdk.metrics.MetricCategory;\n+import software.amazon.awssdk.metrics.SdkMetric;\n+\n+/**\n+ * Metrics collected by HTTP clients.\n+ */\n+public final class HttpMetrics {\n+    /**\n+     * The name of the HTTP client.\n+     */\n+    public static final SdkMetric<String> HTTP_CLIENT_NAME = metric(\"HttpClientName\", String.class);\n+\n+    /**\n+     * The maximum number of connections that will be pooled by the HTTP client.\n+     */\n+    public static final SdkMetric<Integer> MAX_CONNECTIONS = metric(\"MaxConnections\", Integer.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cac6868c4eb2bbe12921122ac54f2883fc2fe00a"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTQ5OTY2MA==", "bodyText": "Yeah I think we should create additional metrics for H2 specific things; perhaps per-connection metrics?", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1863#discussion_r431499660", "createdAt": "2020-05-27T23:30:08Z", "author": {"login": "dagnir"}, "path": "http-client-spi/src/main/java/software/amazon/awssdk/http/HttpMetrics.java", "diffHunk": "@@ -0,0 +1,56 @@\n+/*\n+ * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.awssdk.http;\n+\n+import software.amazon.awssdk.metrics.MetricCategory;\n+import software.amazon.awssdk.metrics.SdkMetric;\n+\n+/**\n+ * Metrics collected by HTTP clients.\n+ */\n+public final class HttpMetrics {\n+    /**\n+     * The name of the HTTP client.\n+     */\n+    public static final SdkMetric<String> HTTP_CLIENT_NAME = metric(\"HttpClientName\", String.class);\n+\n+    /**\n+     * The maximum number of connections that will be pooled by the HTTP client.\n+     */\n+    public static final SdkMetric<Integer> MAX_CONNECTIONS = metric(\"MaxConnections\", Integer.class);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTQ2MjUzNw=="}, "originalCommit": {"oid": "cac6868c4eb2bbe12921122ac54f2883fc2fe00a"}, "originalPosition": 33}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4129, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}