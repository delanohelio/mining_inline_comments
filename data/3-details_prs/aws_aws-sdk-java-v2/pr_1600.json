{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY1MDM4MDEz", "number": 1600, "title": "DynamoDb mapper: non-blocking asynchronous support for all operations", "bodyText": "Description\nAdded asynchronous implementations and interfaces for all mapper classes: DynamoDbAsyncMappedDatabase, DynamoDbAsyncMappedTable and DynamoDbAsyncMappedIndex. All operations support both modes: synchronous and non-blocking asynchronous.\nMotivation and Context\nSome customers like to make use of our non-blocking asynchronous SDK libraries. This introduces support for non-blocking asynchronous use of the DynamoDb Mapper which is really just an extension of the DynamoDb module in the SDK.\nTesting\nUnit tests and functional tests were added and all pass.\nScreenshots (if appropriate)\nTypes of changes\n\n\n Bug fix (non-breaking change which fixes an issue)\n New feature (non-breaking change which adds functionality)\n\nChecklist\n\n\n\n I have read the CONTRIBUTING document\n Local run of mvn install succeeds\n My code follows the code style of this project\n My change requires a change to the Javadoc documentation\n I have updated the Javadoc documentation accordingly\n I have read the README document\n I have added tests to cover my changes\n All new and existing tests passed\n A short description of the change has been added to the CHANGELOG\n My change is to implement 1.11 parity feature and I have updated LaunchChangelog\n\nLicense\n\n\n\n\n I confirm that this pull request can be released under the Apache 2 license", "createdAt": "2020-01-20T23:40:37Z", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1600", "merged": true, "mergeCommit": {"oid": "027f677375f5e87009aed3fe5fc6a57c552bdc3f"}, "closed": true, "closedAt": "2020-01-23T17:32:19Z", "author": {"login": "bmaizels"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb8VWWMABqjI5NjQ0NDM4MDU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb9NlWIABqjI5NzQ1NjI5NTA=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ca97f41cdb31cf617ac21d571ee096856f93ab49", "author": {"user": {"login": "bmaizels", "name": "Benjamin Maizels"}}, "url": "https://github.com/aws/aws-sdk-java-v2/commit/ca97f41cdb31cf617ac21d571ee096856f93ab49", "committedDate": "2020-01-20T23:35:29Z", "message": "DynamoDb mapper: non-blocking asynchronous support for all operations"}, "afterCommit": {"oid": "a3449765210c1397a891ec5fb48ead0465865822", "author": {"user": {"login": "bmaizels", "name": "Benjamin Maizels"}}, "url": "https://github.com/aws/aws-sdk-java-v2/commit/a3449765210c1397a891ec5fb48ead0465865822", "committedDate": "2020-01-20T23:42:28Z", "message": "DynamoDb mapper: non-blocking asynchronous support for all operations"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a3449765210c1397a891ec5fb48ead0465865822", "author": {"user": {"login": "bmaizels", "name": "Benjamin Maizels"}}, "url": "https://github.com/aws/aws-sdk-java-v2/commit/a3449765210c1397a891ec5fb48ead0465865822", "committedDate": "2020-01-20T23:42:28Z", "message": "DynamoDb mapper: non-blocking asynchronous support for all operations"}, "afterCommit": {"oid": "5bb5ee928820fc30362e6df452ccfe6470471a57", "author": {"user": {"login": "bmaizels", "name": "Benjamin Maizels"}}, "url": "https://github.com/aws/aws-sdk-java-v2/commit/5bb5ee928820fc30362e6df452ccfe6470471a57", "committedDate": "2020-01-20T23:45:08Z", "message": "DynamoDb mapper: non-blocking asynchronous support for all operations"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ2MDQ1NTQ1", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1600#pullrequestreview-346045545", "createdAt": "2020-01-21T17:08:51Z", "commit": {"oid": "5bb5ee928820fc30362e6df452ccfe6470471a57"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQxNzowODo1MVrOFgB6WQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQxODowNToyNFrOFgDmDw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTEzMDA3Mw==", "bodyText": "In the current version of the interface AsyncMappedDatabase, the table method takes a table name and a schema. I don't think there is a table(schema) method?", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1600#discussion_r369130073", "createdAt": "2020-01-21T17:08:51Z", "author": {"login": "cenedhryn"}, "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/AsyncMappedIndex.java", "diffHunk": "@@ -0,0 +1,89 @@\n+/*\n+ * Copyright 2010-2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.awssdk.extensions.dynamodb.mappingclient;\n+\n+import java.util.concurrent.CompletableFuture;\n+\n+import software.amazon.awssdk.annotations.SdkPublicApi;\n+import software.amazon.awssdk.core.async.SdkPublisher;\n+\n+/**\n+ * Asynchronous interface for running commands against an object that is linked to a specific DynamoDb secondary index\n+ * and knows how to map records from the table that index is linked to into a modelled object.\n+ *\n+ * Typically an implementation for this interface can be obtained from a {@link AsyncMappedTable} which in turn can be\n+ * obtained from a {@link AsyncMappedDatabase}:\n+ *\n+ * mappedIndex = mappedDatabase.table(tableSchema).index(\"gsi_1\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5bb5ee928820fc30362e6df452ccfe6470471a57"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTEzMDUxNw==", "bodyText": "Same as above, reference to table method should have two parameters.", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1600#discussion_r369130517", "createdAt": "2020-01-21T17:09:44Z", "author": {"login": "cenedhryn"}, "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/AsyncMappedTable.java", "diffHunk": "@@ -0,0 +1,68 @@\n+/*\n+ * Copyright 2010-2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.awssdk.extensions.dynamodb.mappingclient;\n+\n+import java.util.concurrent.CompletableFuture;\n+\n+import software.amazon.awssdk.annotations.SdkPublicApi;\n+import software.amazon.awssdk.core.async.SdkPublisher;\n+\n+/**\n+ * Asynchronous interface for running commands against an object that is linked to a specific DynamoDb table resource\n+ * and therefore knows how to map records from that table into a modelled object.\n+ *\n+ * Typically an implementation for this interface can be obtained from a {@link AsyncMappedDatabase}:\n+ *\n+ * asyncMappedTable = asyncMappedDatabase.table(tableSchema);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5bb5ee928820fc30362e6df452ccfe6470471a57"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTE1NzY0Nw==", "bodyText": "InjectMocks is new to me, pretty neat. It seems to be not loved by everyone (whatever is), this is an interesting read: https://tedvinke.wordpress.com/2014/02/13/mockito-why-you-should-not-use-injectmocks-annotation-to-autowire-fields/", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1600#discussion_r369157647", "createdAt": "2020-01-21T18:05:24Z", "author": {"login": "cenedhryn"}, "path": "services-custom/dynamodb-enhanced/src/test/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/core/DynamoDbAsyncMappedDatabaseTest.java", "diffHunk": "@@ -0,0 +1,116 @@\n+/*\n+ * Copyright 2010-2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.awssdk.extensions.dynamodb.mappingclient.core;\n+\n+import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.hamcrest.Matchers.is;\n+import static org.hamcrest.Matchers.nullValue;\n+import static org.mockito.ArgumentMatchers.any;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.verify;\n+import static org.mockito.Mockito.when;\n+\n+import java.util.concurrent.CompletableFuture;\n+\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.mockito.InjectMocks;\n+import org.mockito.Mock;\n+import org.mockito.junit.MockitoJUnitRunner;\n+\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.DatabaseOperation;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.MapperExtension;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.TableSchema;\n+import software.amazon.awssdk.services.dynamodb.DynamoDbAsyncClient;\n+\n+@RunWith(MockitoJUnitRunner.class)\n+public class DynamoDbAsyncMappedDatabaseTest {\n+    @Mock\n+    private DynamoDbAsyncClient mockDynamoDbAsyncClient;\n+    @Mock\n+    private MapperExtension mockMapperExtension;\n+    @Mock\n+    private DatabaseOperation<?, ?, String> mockDatabaseOperation;\n+    @Mock\n+    private TableSchema<Object> mockTableSchema;\n+\n+    @InjectMocks", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5bb5ee928820fc30362e6df452ccfe6470471a57"}, "originalPosition": 50}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5bb5ee928820fc30362e6df452ccfe6470471a57", "author": {"user": {"login": "bmaizels", "name": "Benjamin Maizels"}}, "url": "https://github.com/aws/aws-sdk-java-v2/commit/5bb5ee928820fc30362e6df452ccfe6470471a57", "committedDate": "2020-01-20T23:45:08Z", "message": "DynamoDb mapper: non-blocking asynchronous support for all operations"}, "afterCommit": {"oid": "b7e6776b95bf59e2bbd116d270d240dc495a066e", "author": {"user": {"login": "bmaizels", "name": "Benjamin Maizels"}}, "url": "https://github.com/aws/aws-sdk-java-v2/commit/b7e6776b95bf59e2bbd116d270d240dc495a066e", "committedDate": "2020-01-21T23:32:46Z", "message": "DynamoDb mapper: non-blocking asynchronous support for all operations"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ2Mjc0ODkw", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1600#pullrequestreview-346274890", "createdAt": "2020-01-22T00:06:29Z", "commit": {"oid": "b7e6776b95bf59e2bbd116d270d240dc495a066e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b7e6776b95bf59e2bbd116d270d240dc495a066e", "author": {"user": {"login": "bmaizels", "name": "Benjamin Maizels"}}, "url": "https://github.com/aws/aws-sdk-java-v2/commit/b7e6776b95bf59e2bbd116d270d240dc495a066e", "committedDate": "2020-01-21T23:32:46Z", "message": "DynamoDb mapper: non-blocking asynchronous support for all operations"}, "afterCommit": {"oid": "247f8555b51210f0a3b964b1145d9bf3fa5bf1ff", "author": {"user": {"login": "bmaizels", "name": "Benjamin Maizels"}}, "url": "https://github.com/aws/aws-sdk-java-v2/commit/247f8555b51210f0a3b964b1145d9bf3fa5bf1ff", "committedDate": "2020-01-22T00:29:01Z", "message": "DynamoDb mapper: non-blocking asynchronous support for all operations"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ1NTg2NTU2", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1600#pullrequestreview-345586556", "createdAt": "2020-01-21T00:54:12Z", "commit": {"oid": "5bb5ee928820fc30362e6df452ccfe6470471a57"}, "state": "COMMENTED", "comments": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQwMDo1NDoxMlrOFfr9Mg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQwMjoyMTozNFrOFgO3DA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODc3MDM1NA==", "bodyText": "The javadocs will not render as nicely as this on javadocs site without html tags such as <ol> <li>. :)\nI noticed <p> is missing in other places as well.", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1600#discussion_r368770354", "createdAt": "2020-01-21T00:54:12Z", "author": {"login": "zoewangg"}, "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/CommonOperation.java", "diffHunk": "@@ -92,4 +106,30 @@ default ResultT execute(TableSchema<ItemT> tableSchema,\n         ResponseT response = serviceCall(dynamoDbClient).apply(request);\n         return transformResponse(response, tableSchema, context, mapperExtension);\n     }\n+\n+    /**\n+     * Default implementation of a complete non-blocking asynchronous execution of this operation against either the\n+     * primary or a secondary index.\n+     * It performs three steps:\n+     * 1) Call generateRequest() to get the request object.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5bb5ee928820fc30362e6df452ccfe6470471a57"}, "originalPosition": 80}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODc3MTY5Nw==", "bodyText": "I think the naming convention for the static factor method is create.https://github.com/aws/aws-sdk-java-v2/blob/master/docs/design/FavorStaticFactoryMethods.md#naming-conventions", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1600#discussion_r368771697", "createdAt": "2020-01-21T01:02:25Z", "author": {"login": "zoewangg"}, "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/core/TransformPublisher.java", "diffHunk": "@@ -0,0 +1,73 @@\n+/*\n+ * Copyright 2010-2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.awssdk.extensions.dynamodb.mappingclient.core;\n+\n+import java.util.function.Function;\n+\n+import org.reactivestreams.Subscriber;\n+import org.reactivestreams.Subscription;\n+\n+import software.amazon.awssdk.annotations.SdkInternalApi;\n+import software.amazon.awssdk.core.async.SdkPublisher;\n+\n+@SdkInternalApi\n+public class TransformPublisher<T, R> implements SdkPublisher<R> {\n+    private final SdkPublisher<T> wrappedPublisher;\n+    private final Function<T, R> transformFunction;\n+\n+    public TransformPublisher(SdkPublisher<T> wrappedPublisher, Function<T, R> transformFunction) {\n+        this.wrappedPublisher = wrappedPublisher;\n+        this.transformFunction = transformFunction;\n+    }\n+\n+    public static <T, R> TransformPublisher<T, R> of(SdkPublisher<T> publisher, Function<T, R> transformFunction) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5bb5ee928820fc30362e6df452ccfe6470471a57"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODc3MTc0OA==", "bodyText": "private?", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1600#discussion_r368771748", "createdAt": "2020-01-21T01:02:40Z", "author": {"login": "zoewangg"}, "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/core/TransformPublisher.java", "diffHunk": "@@ -0,0 +1,73 @@\n+/*\n+ * Copyright 2010-2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.awssdk.extensions.dynamodb.mappingclient.core;\n+\n+import java.util.function.Function;\n+\n+import org.reactivestreams.Subscriber;\n+import org.reactivestreams.Subscription;\n+\n+import software.amazon.awssdk.annotations.SdkInternalApi;\n+import software.amazon.awssdk.core.async.SdkPublisher;\n+\n+@SdkInternalApi\n+public class TransformPublisher<T, R> implements SdkPublisher<R> {\n+    private final SdkPublisher<T> wrappedPublisher;\n+    private final Function<T, R> transformFunction;\n+\n+    public TransformPublisher(SdkPublisher<T> wrappedPublisher, Function<T, R> transformFunction) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5bb5ee928820fc30362e6df452ccfe6470471a57"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODc3MjA5Mw==", "bodyText": "As discussed offline, I'd prefer wrapping the Function with a class to make it more readable. Fine with it since this will be an internal api.", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1600#discussion_r368772093", "createdAt": "2020-01-21T01:04:50Z", "author": {"login": "zoewangg"}, "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/operations/CreateTable.java", "diffHunk": "@@ -159,6 +161,13 @@ public CreateTableRequest generateRequest(TableSchema<T> tableSchema,\n         return dynamoDbClient::createTable;\n     }\n \n+    @Override\n+    public Function<CreateTableRequest, CompletableFuture<CreateTableResponse>> asyncServiceCall(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5bb5ee928820fc30362e6df452ccfe6470471a57"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTI5NDIwNw==", "bodyText": "final.\nCan also we add javadocs to all public apis?", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1600#discussion_r369294207", "createdAt": "2020-01-21T23:13:01Z", "author": {"login": "zoewangg"}, "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/core/DynamoDbAsyncMappedDatabase.java", "diffHunk": "@@ -0,0 +1,120 @@\n+/*\n+ * Copyright 2010-2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.awssdk.extensions.dynamodb.mappingclient.core;\n+\n+import java.util.concurrent.CompletableFuture;\n+\n+import software.amazon.awssdk.annotations.SdkPublicApi;\n+import software.amazon.awssdk.annotations.ThreadSafe;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.AsyncMappedDatabase;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.DatabaseOperation;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.MapperExtension;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.TableSchema;\n+import software.amazon.awssdk.services.dynamodb.DynamoDbAsyncClient;\n+\n+@SdkPublicApi\n+@ThreadSafe\n+public class DynamoDbAsyncMappedDatabase implements AsyncMappedDatabase {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5bb5ee928820fc30362e6df452ccfe6470471a57"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTI5NDU1MA==", "bodyText": "missing private ctor", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1600#discussion_r369294550", "createdAt": "2020-01-21T23:14:11Z", "author": {"login": "zoewangg"}, "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/core/DynamoDbAsyncMappedDatabase.java", "diffHunk": "@@ -0,0 +1,120 @@\n+/*\n+ * Copyright 2010-2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.awssdk.extensions.dynamodb.mappingclient.core;\n+\n+import java.util.concurrent.CompletableFuture;\n+\n+import software.amazon.awssdk.annotations.SdkPublicApi;\n+import software.amazon.awssdk.annotations.ThreadSafe;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.AsyncMappedDatabase;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.DatabaseOperation;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.MapperExtension;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.TableSchema;\n+import software.amazon.awssdk.services.dynamodb.DynamoDbAsyncClient;\n+\n+@SdkPublicApi\n+@ThreadSafe\n+public class DynamoDbAsyncMappedDatabase implements AsyncMappedDatabase {\n+    private final DynamoDbAsyncClient dynamoDbAsyncClient;\n+    private final MapperExtension mapperExtension;\n+\n+    private DynamoDbAsyncMappedDatabase(DynamoDbAsyncClient dynamoDbAsyncClient, MapperExtension mapperExtension) {\n+        this.dynamoDbAsyncClient = dynamoDbAsyncClient;\n+        this.mapperExtension = mapperExtension;\n+    }\n+\n+    public static Builder builder() {\n+        return new Builder();\n+    }\n+\n+    @Override\n+    public <T> CompletableFuture<T> execute(DatabaseOperation<?, ?, T> operation) {\n+        return operation.executeAsync(dynamoDbAsyncClient, mapperExtension);\n+    }\n+\n+    @Override\n+    public <T> DynamoDbAsyncMappedTable<T> table(String tableName, TableSchema<T> tableSchema) {\n+        return new DynamoDbAsyncMappedTable<>(dynamoDbAsyncClient, mapperExtension, tableSchema, tableName);\n+    }\n+\n+    public DynamoDbAsyncClient dynamoDbAsyncClient() {\n+        return dynamoDbAsyncClient;\n+    }\n+\n+    public MapperExtension mapperExtension() {\n+        return mapperExtension;\n+    }\n+\n+    public Builder toBuilder() {\n+        return builder().dynamoDbAsyncClient(this.dynamoDbAsyncClient).extendWith(this.mapperExtension);\n+    }\n+\n+    @Override\n+    public boolean equals(Object o) {\n+        if (this == o) {\n+            return true;\n+        }\n+        if (o == null || getClass() != o.getClass()) {\n+            return false;\n+        }\n+\n+        DynamoDbAsyncMappedDatabase that = (DynamoDbAsyncMappedDatabase) o;\n+\n+        if (dynamoDbAsyncClient != null ? !dynamoDbAsyncClient.equals(that.dynamoDbAsyncClient)\n+            : that.dynamoDbAsyncClient != null) {\n+\n+            return false;\n+        }\n+        return mapperExtension != null ? mapperExtension.equals(that.mapperExtension) : that.mapperExtension == null;\n+    }\n+\n+    @Override\n+    public int hashCode() {\n+        int result = dynamoDbAsyncClient != null ? dynamoDbAsyncClient.hashCode() : 0;\n+        result = 31 * result + (mapperExtension != null ? mapperExtension.hashCode() : 0);\n+        return result;\n+    }\n+\n+    public static final class Builder {\n+        private DynamoDbAsyncClient dynamoDbAsyncClient;\n+        private MapperExtension mapperExtension;\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5bb5ee928820fc30362e6df452ccfe6470471a57"}, "originalPosition": 94}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTI5NTQ2NQ==", "bodyText": "nit: We can use Validate.mutuallyExclusive for this", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1600#discussion_r369295465", "createdAt": "2020-01-21T23:17:06Z", "author": {"login": "zoewangg"}, "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/core/DynamoDbAsyncMappedDatabase.java", "diffHunk": "@@ -0,0 +1,120 @@\n+/*\n+ * Copyright 2010-2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.awssdk.extensions.dynamodb.mappingclient.core;\n+\n+import java.util.concurrent.CompletableFuture;\n+\n+import software.amazon.awssdk.annotations.SdkPublicApi;\n+import software.amazon.awssdk.annotations.ThreadSafe;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.AsyncMappedDatabase;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.DatabaseOperation;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.MapperExtension;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.TableSchema;\n+import software.amazon.awssdk.services.dynamodb.DynamoDbAsyncClient;\n+\n+@SdkPublicApi\n+@ThreadSafe\n+public class DynamoDbAsyncMappedDatabase implements AsyncMappedDatabase {\n+    private final DynamoDbAsyncClient dynamoDbAsyncClient;\n+    private final MapperExtension mapperExtension;\n+\n+    private DynamoDbAsyncMappedDatabase(DynamoDbAsyncClient dynamoDbAsyncClient, MapperExtension mapperExtension) {\n+        this.dynamoDbAsyncClient = dynamoDbAsyncClient;\n+        this.mapperExtension = mapperExtension;\n+    }\n+\n+    public static Builder builder() {\n+        return new Builder();\n+    }\n+\n+    @Override\n+    public <T> CompletableFuture<T> execute(DatabaseOperation<?, ?, T> operation) {\n+        return operation.executeAsync(dynamoDbAsyncClient, mapperExtension);\n+    }\n+\n+    @Override\n+    public <T> DynamoDbAsyncMappedTable<T> table(String tableName, TableSchema<T> tableSchema) {\n+        return new DynamoDbAsyncMappedTable<>(dynamoDbAsyncClient, mapperExtension, tableSchema, tableName);\n+    }\n+\n+    public DynamoDbAsyncClient dynamoDbAsyncClient() {\n+        return dynamoDbAsyncClient;\n+    }\n+\n+    public MapperExtension mapperExtension() {\n+        return mapperExtension;\n+    }\n+\n+    public Builder toBuilder() {\n+        return builder().dynamoDbAsyncClient(this.dynamoDbAsyncClient).extendWith(this.mapperExtension);\n+    }\n+\n+    @Override\n+    public boolean equals(Object o) {\n+        if (this == o) {\n+            return true;\n+        }\n+        if (o == null || getClass() != o.getClass()) {\n+            return false;\n+        }\n+\n+        DynamoDbAsyncMappedDatabase that = (DynamoDbAsyncMappedDatabase) o;\n+\n+        if (dynamoDbAsyncClient != null ? !dynamoDbAsyncClient.equals(that.dynamoDbAsyncClient)\n+            : that.dynamoDbAsyncClient != null) {\n+\n+            return false;\n+        }\n+        return mapperExtension != null ? mapperExtension.equals(that.mapperExtension) : that.mapperExtension == null;\n+    }\n+\n+    @Override\n+    public int hashCode() {\n+        int result = dynamoDbAsyncClient != null ? dynamoDbAsyncClient.hashCode() : 0;\n+        result = 31 * result + (mapperExtension != null ? mapperExtension.hashCode() : 0);\n+        return result;\n+    }\n+\n+    public static final class Builder {\n+        private DynamoDbAsyncClient dynamoDbAsyncClient;\n+        private MapperExtension mapperExtension;\n+\n+        public DynamoDbAsyncMappedDatabase build() {\n+            if (dynamoDbAsyncClient == null) {\n+                throw new IllegalArgumentException(\"You must provide a DynamoDbClient to build a \"\n+                                                   + \"DynamoDbMappedDatabase.\");\n+            }\n+\n+            return new DynamoDbAsyncMappedDatabase(dynamoDbAsyncClient, mapperExtension);\n+        }\n+\n+        public Builder dynamoDbAsyncClient(DynamoDbAsyncClient dynamoDbAsyncClient) {\n+            this.dynamoDbAsyncClient = dynamoDbAsyncClient;\n+            return this;\n+        }\n+\n+        public Builder extendWith(MapperExtension mapperExtension) {\n+            if (mapperExtension != null && this.mapperExtension != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5bb5ee928820fc30362e6df452ccfe6470471a57"}, "originalPosition": 110}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTMzOTA1Ng==", "bodyText": "Seems a bit verbose. How about just dynamoDbClient?\nFor SDK http client builder method, we don't have async or sync on the method name; they both are #httpClient", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1600#discussion_r369339056", "createdAt": "2020-01-22T02:06:53Z", "author": {"login": "zoewangg"}, "path": "services-custom/dynamodb-enhanced/README.md", "diffHunk": "@@ -123,6 +123,42 @@ index. Here's an example of how to do this:\n    Iterable<Page<Customer>> customersWithName = customersByName.query(equalTo(Key.of(stringValue(\"Smith\"))));\n    ```\n \n+### Non-blocking asynchronous operations\n+If your application requires non-blocking asynchronous calls to\n+DynamoDb, then you can use the asynchronous implementation of the\n+mapper. It's very similar to the synchronous implementation with a few\n+key differences:\n+\n+1. When instantiating the mapped database, use the asynchronous version\n+   of the library instead of the synchronous one (you will need to use\n+   an asynchronous DynamoDb client from the SDK as well):\n+   ```java\n+    AsyncMappedDatabase database = DynamoDbAsyncMappedDatabase.builder()\n+                                                              .dynamoDbAsyncClient(dynamoDbAsyncClient)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "247f8555b51210f0a3b964b1145d9bf3fa5bf1ff"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTM0MDEyMg==", "bodyText": "Is this class a public api? Asking because the ctor is not public and has multiple parameters.", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1600#discussion_r369340122", "createdAt": "2020-01-22T02:11:26Z", "author": {"login": "zoewangg"}, "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/core/DynamoDbAsyncMappedTable.java", "diffHunk": "@@ -0,0 +1,132 @@\n+/*\n+ * Copyright 2010-2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.awssdk.extensions.dynamodb.mappingclient.core;\n+\n+import static software.amazon.awssdk.extensions.dynamodb.mappingclient.core.Utils.createKeyFromItem;\n+\n+import java.util.concurrent.CompletableFuture;\n+\n+import software.amazon.awssdk.annotations.SdkPublicApi;\n+import software.amazon.awssdk.annotations.ThreadSafe;\n+import software.amazon.awssdk.core.async.SdkPublisher;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.AsyncMappedTable;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.Key;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.MapperExtension;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.PaginatedTableOperation;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.TableMetadata;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.TableOperation;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.TableSchema;\n+import software.amazon.awssdk.services.dynamodb.DynamoDbAsyncClient;\n+\n+@SdkPublicApi\n+@ThreadSafe\n+public class DynamoDbAsyncMappedTable<T> implements AsyncMappedTable<T> {\n+    private final DynamoDbAsyncClient dynamoDbAsyncClient;\n+    private final MapperExtension mapperExtension;\n+    private final TableSchema<T> tableSchema;\n+    private final String tableName;\n+\n+    DynamoDbAsyncMappedTable(DynamoDbAsyncClient dynamoDbAsyncClient,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "247f8555b51210f0a3b964b1145d9bf3fa5bf1ff"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTM0MDQ0NQ==", "bodyText": "We should probably move it to internal package.", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1600#discussion_r369340445", "createdAt": "2020-01-22T02:13:02Z", "author": {"login": "zoewangg"}, "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/core/TransformPublisher.java", "diffHunk": "@@ -0,0 +1,73 @@\n+/*\n+ * Copyright 2010-2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.awssdk.extensions.dynamodb.mappingclient.core;\n+\n+import java.util.function.Function;\n+\n+import org.reactivestreams.Subscriber;\n+import org.reactivestreams.Subscription;\n+\n+import software.amazon.awssdk.annotations.SdkInternalApi;\n+import software.amazon.awssdk.core.async.SdkPublisher;\n+\n+@SdkInternalApi", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "247f8555b51210f0a3b964b1145d9bf3fa5bf1ff"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTM0MDg5Mw==", "bodyText": "Can we add some javadocs to this class?\nIt seems like this is a generic publisher; should we move it to core?", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1600#discussion_r369340893", "createdAt": "2020-01-22T02:14:57Z", "author": {"login": "zoewangg"}, "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/core/TransformPublisher.java", "diffHunk": "@@ -0,0 +1,73 @@\n+/*\n+ * Copyright 2010-2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.awssdk.extensions.dynamodb.mappingclient.core;\n+\n+import java.util.function.Function;\n+\n+import org.reactivestreams.Subscriber;\n+import org.reactivestreams.Subscription;\n+\n+import software.amazon.awssdk.annotations.SdkInternalApi;\n+import software.amazon.awssdk.core.async.SdkPublisher;\n+\n+@SdkInternalApi", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "247f8555b51210f0a3b964b1145d9bf3fa5bf1ff"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTM0MjE1Mw==", "bodyText": "Same question, will this class directly be used by customers? the ctor is not public", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1600#discussion_r369342153", "createdAt": "2020-01-22T02:21:19Z", "author": {"login": "zoewangg"}, "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/core/DynamoDbAsyncMappedIndex.java", "diffHunk": "@@ -0,0 +1,136 @@\n+/*\n+ * Copyright 2010-2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.awssdk.extensions.dynamodb.mappingclient.core;\n+\n+import static software.amazon.awssdk.extensions.dynamodb.mappingclient.core.Utils.createKeyFromItem;\n+\n+import java.util.concurrent.CompletableFuture;\n+\n+import software.amazon.awssdk.annotations.SdkPublicApi;\n+import software.amazon.awssdk.annotations.ThreadSafe;\n+import software.amazon.awssdk.core.async.SdkPublisher;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.AsyncMappedIndex;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.IndexOperation;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.Key;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.MapperExtension;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.PaginatedIndexOperation;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.TableSchema;\n+import software.amazon.awssdk.services.dynamodb.DynamoDbAsyncClient;\n+\n+@SdkPublicApi\n+@ThreadSafe\n+public class DynamoDbAsyncMappedIndex<T> implements AsyncMappedIndex<T> {\n+    private final DynamoDbAsyncClient dynamoDbAsyncClient;\n+    private final MapperExtension mapperExtension;\n+    private final TableSchema<T> tableSchema;\n+    private final String tableName;\n+    private final String indexName;\n+\n+    DynamoDbAsyncMappedIndex(DynamoDbAsyncClient dynamoDbAsyncClient,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "247f8555b51210f0a3b964b1145d9bf3fa5bf1ff"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTM0MjIyMA==", "bodyText": "final", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1600#discussion_r369342220", "createdAt": "2020-01-22T02:21:34Z", "author": {"login": "zoewangg"}, "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/core/DynamoDbAsyncMappedTable.java", "diffHunk": "@@ -0,0 +1,132 @@\n+/*\n+ * Copyright 2010-2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.awssdk.extensions.dynamodb.mappingclient.core;\n+\n+import static software.amazon.awssdk.extensions.dynamodb.mappingclient.core.Utils.createKeyFromItem;\n+\n+import java.util.concurrent.CompletableFuture;\n+\n+import software.amazon.awssdk.annotations.SdkPublicApi;\n+import software.amazon.awssdk.annotations.ThreadSafe;\n+import software.amazon.awssdk.core.async.SdkPublisher;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.AsyncMappedTable;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.Key;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.MapperExtension;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.PaginatedTableOperation;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.TableMetadata;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.TableOperation;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.TableSchema;\n+import software.amazon.awssdk.services.dynamodb.DynamoDbAsyncClient;\n+\n+@SdkPublicApi\n+@ThreadSafe\n+public class DynamoDbAsyncMappedTable<T> implements AsyncMappedTable<T> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "247f8555b51210f0a3b964b1145d9bf3fa5bf1ff"}, "originalPosition": 36}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "23e1120c47e46a56237e0df98d22812e54abd42b", "author": {"user": {"login": "bmaizels", "name": "Benjamin Maizels"}}, "url": "https://github.com/aws/aws-sdk-java-v2/commit/23e1120c47e46a56237e0df98d22812e54abd42b", "committedDate": "2020-01-23T17:13:07Z", "message": "DynamoDb mapper: non-blocking asynchronous support for all operations"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "247f8555b51210f0a3b964b1145d9bf3fa5bf1ff", "author": {"user": {"login": "bmaizels", "name": "Benjamin Maizels"}}, "url": "https://github.com/aws/aws-sdk-java-v2/commit/247f8555b51210f0a3b964b1145d9bf3fa5bf1ff", "committedDate": "2020-01-22T00:29:01Z", "message": "DynamoDb mapper: non-blocking asynchronous support for all operations"}, "afterCommit": {"oid": "23e1120c47e46a56237e0df98d22812e54abd42b", "author": {"user": {"login": "bmaizels", "name": "Benjamin Maizels"}}, "url": "https://github.com/aws/aws-sdk-java-v2/commit/23e1120c47e46a56237e0df98d22812e54abd42b", "committedDate": "2020-01-23T17:13:07Z", "message": "DynamoDb mapper: non-blocking asynchronous support for all operations"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2787, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}