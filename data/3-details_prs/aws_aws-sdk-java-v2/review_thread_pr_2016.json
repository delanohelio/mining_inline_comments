{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc3OTY5MjQ3", "number": 2016, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxODoxOTozN1rOEfk2uA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxODoyOToxOVrOEflMUA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAxNTQ1MTQ0OnYy", "diffSide": "RIGHT", "path": "http-clients/aws-crt-client/src/test/java/software/amazon/awssdk/http/crt/internal/CrtRequestExecutorTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxODoxOTozN1rOHL7qww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQyMDo0NzoyNlrOHMGEHA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjI3Mzk4Nw==", "bodyText": "Do we need a WireMock test here to test the situation when the request is executed successfully?", "url": "https://github.com/aws/aws-sdk-java-v2/pull/2016#discussion_r482273987", "createdAt": "2020-09-02T18:19:37Z", "author": {"login": "Quanzzzz"}, "path": "http-clients/aws-crt-client/src/test/java/software/amazon/awssdk/http/crt/internal/CrtRequestExecutorTest.java", "diffHunk": "@@ -0,0 +1,113 @@\n+/*\n+ * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.awssdk.http.crt.internal;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static software.amazon.awssdk.http.HttpTestUtils.createProvider;\n+import static software.amazon.awssdk.http.crt.CrtHttpClientTestUtils.createRequest;\n+\n+import java.io.IOException;\n+import java.net.URI;\n+import java.util.concurrent.CompletableFuture;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.mockito.ArgumentCaptor;\n+import org.mockito.Mock;\n+import org.mockito.Mockito;\n+import org.mockito.runners.MockitoJUnitRunner;\n+import software.amazon.awssdk.crt.CrtRuntimeException;\n+import software.amazon.awssdk.crt.http.HttpClientConnection;\n+import software.amazon.awssdk.crt.http.HttpClientConnectionManager;\n+import software.amazon.awssdk.crt.http.HttpRequest;\n+import software.amazon.awssdk.http.SdkHttpFullRequest;\n+import software.amazon.awssdk.http.async.AsyncExecuteRequest;\n+import software.amazon.awssdk.http.async.SdkAsyncHttpResponseHandler;\n+\n+@RunWith(MockitoJUnitRunner.class)\n+public class CrtRequestExecutorTest {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4af5ed659b41b421e9e3acb3ea439b064d082226"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjQ0NDMxNg==", "bodyText": "This test is not using wiremock, but yeah, I can add a test for happy path", "url": "https://github.com/aws/aws-sdk-java-v2/pull/2016#discussion_r482444316", "createdAt": "2020-09-02T20:47:26Z", "author": {"login": "zoewangg"}, "path": "http-clients/aws-crt-client/src/test/java/software/amazon/awssdk/http/crt/internal/CrtRequestExecutorTest.java", "diffHunk": "@@ -0,0 +1,113 @@\n+/*\n+ * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.awssdk.http.crt.internal;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static software.amazon.awssdk.http.HttpTestUtils.createProvider;\n+import static software.amazon.awssdk.http.crt.CrtHttpClientTestUtils.createRequest;\n+\n+import java.io.IOException;\n+import java.net.URI;\n+import java.util.concurrent.CompletableFuture;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.mockito.ArgumentCaptor;\n+import org.mockito.Mock;\n+import org.mockito.Mockito;\n+import org.mockito.runners.MockitoJUnitRunner;\n+import software.amazon.awssdk.crt.CrtRuntimeException;\n+import software.amazon.awssdk.crt.http.HttpClientConnection;\n+import software.amazon.awssdk.crt.http.HttpClientConnectionManager;\n+import software.amazon.awssdk.crt.http.HttpRequest;\n+import software.amazon.awssdk.http.SdkHttpFullRequest;\n+import software.amazon.awssdk.http.async.AsyncExecuteRequest;\n+import software.amazon.awssdk.http.async.SdkAsyncHttpResponseHandler;\n+\n+@RunWith(MockitoJUnitRunner.class)\n+public class CrtRequestExecutorTest {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjI3Mzk4Nw=="}, "originalCommit": {"oid": "4af5ed659b41b421e9e3acb3ea439b064d082226"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAxNTUwNDk5OnYy", "diffSide": "RIGHT", "path": "test/http-client-tests/src/main/java/software/amazon/awssdk/http/RecordingNetworkTrafficListener.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxODoyODo1OFrOHL8M5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQyMDo0ODozOVrOHMGKWA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjI4MjcyNA==", "bodyText": "Question: Where do we use these two classes: RecordingNetworkTrafficListener and RecordingResponseHandler? Are they for the normal case test?", "url": "https://github.com/aws/aws-sdk-java-v2/pull/2016#discussion_r482282724", "createdAt": "2020-09-02T18:28:58Z", "author": {"login": "Quanzzzz"}, "path": "test/http-client-tests/src/main/java/software/amazon/awssdk/http/RecordingNetworkTrafficListener.java", "diffHunk": "@@ -0,0 +1,58 @@\n+/*\n+ * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.awssdk.http;\n+\n+import com.github.tomakehurst.wiremock.http.trafficlistener.WiremockNetworkTrafficListener;\n+import java.net.Socket;\n+import java.nio.ByteBuffer;\n+import java.nio.charset.StandardCharsets;\n+\n+/**\n+ * Simple implementation of {@link WiremockNetworkTrafficListener} to record all requests received as a string for later\n+ * verification.\n+ */\n+public class RecordingNetworkTrafficListener implements WiremockNetworkTrafficListener {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4af5ed659b41b421e9e3acb3ea439b064d082226"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjQ0NTkxMg==", "bodyText": "Yeah, they are used in the wiremock tests.", "url": "https://github.com/aws/aws-sdk-java-v2/pull/2016#discussion_r482445912", "createdAt": "2020-09-02T20:48:39Z", "author": {"login": "zoewangg"}, "path": "test/http-client-tests/src/main/java/software/amazon/awssdk/http/RecordingNetworkTrafficListener.java", "diffHunk": "@@ -0,0 +1,58 @@\n+/*\n+ * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.awssdk.http;\n+\n+import com.github.tomakehurst.wiremock.http.trafficlistener.WiremockNetworkTrafficListener;\n+import java.net.Socket;\n+import java.nio.ByteBuffer;\n+import java.nio.charset.StandardCharsets;\n+\n+/**\n+ * Simple implementation of {@link WiremockNetworkTrafficListener} to record all requests received as a string for later\n+ * verification.\n+ */\n+public class RecordingNetworkTrafficListener implements WiremockNetworkTrafficListener {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjI4MjcyNA=="}, "originalCommit": {"oid": "4af5ed659b41b421e9e3acb3ea439b064d082226"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAxNTUwNjcyOnYy", "diffSide": "RIGHT", "path": "test/http-client-tests/src/main/java/software/amazon/awssdk/http/RecordingResponseHandler.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxODoyOToxOVrOHL8OFA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQyMDo0ODo1NlrOHMGL7A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjI4MzAyOA==", "bodyText": "Same question as above.", "url": "https://github.com/aws/aws-sdk-java-v2/pull/2016#discussion_r482283028", "createdAt": "2020-09-02T18:29:19Z", "author": {"login": "Quanzzzz"}, "path": "test/http-client-tests/src/main/java/software/amazon/awssdk/http/RecordingResponseHandler.java", "diffHunk": "@@ -0,0 +1,86 @@\n+/*\n+ * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.awssdk.http;\n+\n+import java.nio.ByteBuffer;\n+import java.nio.charset.StandardCharsets;\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.concurrent.CompletableFuture;\n+import org.reactivestreams.Publisher;\n+import software.amazon.awssdk.http.async.SdkAsyncHttpResponseHandler;\n+import software.amazon.awssdk.http.async.SimpleSubscriber;\n+import software.amazon.awssdk.metrics.MetricCollector;\n+\n+public final class RecordingResponseHandler implements SdkAsyncHttpResponseHandler {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4af5ed659b41b421e9e3acb3ea439b064d082226"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjQ0NjMxNg==", "bodyText": "Yeah, they are only used in tests.", "url": "https://github.com/aws/aws-sdk-java-v2/pull/2016#discussion_r482446316", "createdAt": "2020-09-02T20:48:56Z", "author": {"login": "zoewangg"}, "path": "test/http-client-tests/src/main/java/software/amazon/awssdk/http/RecordingResponseHandler.java", "diffHunk": "@@ -0,0 +1,86 @@\n+/*\n+ * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.awssdk.http;\n+\n+import java.nio.ByteBuffer;\n+import java.nio.charset.StandardCharsets;\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.concurrent.CompletableFuture;\n+import org.reactivestreams.Publisher;\n+import software.amazon.awssdk.http.async.SdkAsyncHttpResponseHandler;\n+import software.amazon.awssdk.http.async.SimpleSubscriber;\n+import software.amazon.awssdk.metrics.MetricCollector;\n+\n+public final class RecordingResponseHandler implements SdkAsyncHttpResponseHandler {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjI4MzAyOA=="}, "originalCommit": {"oid": "4af5ed659b41b421e9e3acb3ea439b064d082226"}, "originalPosition": 28}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4014, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}