{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc0NDY1Mzg2", "number": 1645, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQxODo1OToyNlrODfS65w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQxOTowMzozMFrODfS_3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0MTQyNDM5OnYy", "diffSide": "RIGHT", "path": "http-clients/netty-nio-client/src/main/java/software/amazon/awssdk/http/nio/netty/internal/http2/Http2StreamExceptionHandler.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQxODo1OToyNlrOFo6u0A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQxODo1OToyNlrOFo6u0A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODQ0OTYxNg==", "bodyText": "Nit: space after channel", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1645#discussion_r378449616", "createdAt": "2020-02-12T18:59:26Z", "author": {"login": "millems"}, "path": "http-clients/netty-nio-client/src/main/java/software/amazon/awssdk/http/nio/netty/internal/http2/Http2StreamExceptionHandler.java", "diffHunk": "@@ -0,0 +1,61 @@\n+/*\n+ * Copyright 2010-2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.awssdk.http.nio.netty.internal.http2;\n+\n+import io.netty.channel.Channel;\n+import io.netty.channel.ChannelHandler;\n+import io.netty.channel.ChannelHandlerContext;\n+import io.netty.channel.ChannelInboundHandlerAdapter;\n+import io.netty.handler.codec.http2.Http2Stream;\n+import io.netty.handler.timeout.TimeoutException;\n+import java.io.IOException;\n+import software.amazon.awssdk.annotations.SdkInternalApi;\n+import software.amazon.awssdk.utils.Logger;\n+\n+/**\n+ * Exception Handler for errors on the Http2 streams.\n+ */\n+@ChannelHandler.Sharable\n+@SdkInternalApi\n+public final class Http2StreamExceptionHandler extends ChannelInboundHandlerAdapter {\n+    private static final Logger log = Logger.loggerFor(Http2Stream.class);\n+    private static final Http2StreamExceptionHandler INSTANCE = new Http2StreamExceptionHandler();\n+\n+    private Http2StreamExceptionHandler() {\n+    }\n+\n+    public static Http2StreamExceptionHandler create() {\n+        return INSTANCE;\n+    }\n+\n+    @Override\n+    public void exceptionCaught(ChannelHandlerContext ctx, Throwable cause) {\n+        if ((cause instanceof TimeoutException || cause instanceof IOException) && ctx.channel().parent() != null) {\n+            Channel parent = ctx.channel().parent();\n+            log.debug(() -> \"An I/O error occurred on an Http2 stream, notifying the connection channel\" + parent);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2d6163720d4e6f762b8576d4d9c1e083920aff31"}, "originalPosition": 48}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0MTQyOTk2OnYy", "diffSide": "RIGHT", "path": "http-clients/netty-nio-client/src/main/java/software/amazon/awssdk/http/nio/netty/internal/http2/Http2StreamExceptionHandler.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQxOTowMToxMlrOFo6ycw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQxOToxNzoxN1rOFo7Ttg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODQ1MDU0Nw==", "bodyText": "Nit: can we put the instanceof checks in a separate method so that this line is easier to read? I struggled a little.", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1645#discussion_r378450547", "createdAt": "2020-02-12T19:01:12Z", "author": {"login": "millems"}, "path": "http-clients/netty-nio-client/src/main/java/software/amazon/awssdk/http/nio/netty/internal/http2/Http2StreamExceptionHandler.java", "diffHunk": "@@ -0,0 +1,61 @@\n+/*\n+ * Copyright 2010-2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.awssdk.http.nio.netty.internal.http2;\n+\n+import io.netty.channel.Channel;\n+import io.netty.channel.ChannelHandler;\n+import io.netty.channel.ChannelHandlerContext;\n+import io.netty.channel.ChannelInboundHandlerAdapter;\n+import io.netty.handler.codec.http2.Http2Stream;\n+import io.netty.handler.timeout.TimeoutException;\n+import java.io.IOException;\n+import software.amazon.awssdk.annotations.SdkInternalApi;\n+import software.amazon.awssdk.utils.Logger;\n+\n+/**\n+ * Exception Handler for errors on the Http2 streams.\n+ */\n+@ChannelHandler.Sharable\n+@SdkInternalApi\n+public final class Http2StreamExceptionHandler extends ChannelInboundHandlerAdapter {\n+    private static final Logger log = Logger.loggerFor(Http2Stream.class);\n+    private static final Http2StreamExceptionHandler INSTANCE = new Http2StreamExceptionHandler();\n+\n+    private Http2StreamExceptionHandler() {\n+    }\n+\n+    public static Http2StreamExceptionHandler create() {\n+        return INSTANCE;\n+    }\n+\n+    @Override\n+    public void exceptionCaught(ChannelHandlerContext ctx, Throwable cause) {\n+        if ((cause instanceof TimeoutException || cause instanceof IOException) && ctx.channel().parent() != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2d6163720d4e6f762b8576d4d9c1e083920aff31"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODQ1OTA2Mg==", "bodyText": "Sounds good. Updated", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1645#discussion_r378459062", "createdAt": "2020-02-12T19:17:17Z", "author": {"login": "zoewangg"}, "path": "http-clients/netty-nio-client/src/main/java/software/amazon/awssdk/http/nio/netty/internal/http2/Http2StreamExceptionHandler.java", "diffHunk": "@@ -0,0 +1,61 @@\n+/*\n+ * Copyright 2010-2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.awssdk.http.nio.netty.internal.http2;\n+\n+import io.netty.channel.Channel;\n+import io.netty.channel.ChannelHandler;\n+import io.netty.channel.ChannelHandlerContext;\n+import io.netty.channel.ChannelInboundHandlerAdapter;\n+import io.netty.handler.codec.http2.Http2Stream;\n+import io.netty.handler.timeout.TimeoutException;\n+import java.io.IOException;\n+import software.amazon.awssdk.annotations.SdkInternalApi;\n+import software.amazon.awssdk.utils.Logger;\n+\n+/**\n+ * Exception Handler for errors on the Http2 streams.\n+ */\n+@ChannelHandler.Sharable\n+@SdkInternalApi\n+public final class Http2StreamExceptionHandler extends ChannelInboundHandlerAdapter {\n+    private static final Logger log = Logger.loggerFor(Http2Stream.class);\n+    private static final Http2StreamExceptionHandler INSTANCE = new Http2StreamExceptionHandler();\n+\n+    private Http2StreamExceptionHandler() {\n+    }\n+\n+    public static Http2StreamExceptionHandler create() {\n+        return INSTANCE;\n+    }\n+\n+    @Override\n+    public void exceptionCaught(ChannelHandlerContext ctx, Throwable cause) {\n+        if ((cause instanceof TimeoutException || cause instanceof IOException) && ctx.channel().parent() != null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODQ1MDU0Nw=="}, "originalCommit": {"oid": "2d6163720d4e6f762b8576d4d9c1e083920aff31"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0MTQzNzA5OnYy", "diffSide": "RIGHT", "path": "http-clients/netty-nio-client/src/main/java/software/amazon/awssdk/http/nio/netty/internal/http2/MultiplexedChannelRecord.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQxOTowMzozMFrOFo63Iw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQxOToxNzoyN1rOFo7T-w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODQ1MTc0Nw==", "bodyText": "Nit: closeToNewStreams()? The other methods refer to them as 'streams', so that'd be more consistent.", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1645#discussion_r378451747", "createdAt": "2020-02-12T19:03:30Z", "author": {"login": "millems"}, "path": "http-clients/netty-nio-client/src/main/java/software/amazon/awssdk/http/nio/netty/internal/http2/MultiplexedChannelRecord.java", "diffHunk": "@@ -175,6 +175,17 @@ void handleGoAway(int lastStreamId, GoAwayException exception) {\n         });\n     }\n \n+    /**\n+     * Prevent new streams from being acquired from the existing connection.\n+     */\n+    void closeToNew() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2d6163720d4e6f762b8576d4d9c1e083920aff31"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODQ1OTEzMQ==", "bodyText": "Sounds good. Updated", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1645#discussion_r378459131", "createdAt": "2020-02-12T19:17:27Z", "author": {"login": "zoewangg"}, "path": "http-clients/netty-nio-client/src/main/java/software/amazon/awssdk/http/nio/netty/internal/http2/MultiplexedChannelRecord.java", "diffHunk": "@@ -175,6 +175,17 @@ void handleGoAway(int lastStreamId, GoAwayException exception) {\n         });\n     }\n \n+    /**\n+     * Prevent new streams from being acquired from the existing connection.\n+     */\n+    void closeToNew() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODQ1MTc0Nw=="}, "originalCommit": {"oid": "2d6163720d4e6f762b8576d4d9c1e083920aff31"}, "originalPosition": 7}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4208, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}