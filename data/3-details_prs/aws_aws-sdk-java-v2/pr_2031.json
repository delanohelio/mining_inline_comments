{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg0NTIwNTc3", "number": 2031, "title": "Update codegen module to generate service waiter implementation classes", "bodyText": "Description\nUpdate codegen module to generate service waiter implementation classes\nNote that it currently only has one WaiterAcceptor and we will add more once waiterAcceptor generation part is done.\nMore waiter tests will be added as well after we have the complete waiter code\nMotivation and Context\n\n\nTesting\n\n\n\nScreenshots (if appropriate)\nTypes of changes\n\n\n Bug fix (non-breaking change which fixes an issue)\n New feature (non-breaking change which adds functionality)\n\nChecklist\n\n\n\n I have read the CONTRIBUTING document\n Local run of mvn install succeeds\n My code follows the code style of this project\n My change requires a change to the Javadoc documentation\n I have updated the Javadoc documentation accordingly\n I have read the README document\n I have added tests to cover my changes\n All new and existing tests passed\n A short description of the change has been added to the CHANGELOG\n My change is to implement 1.11 parity feature and I have updated LaunchChangelog\n\nLicense\n\n\n\n\n I confirm that this pull request can be released under the Apache 2 license", "createdAt": "2020-09-11T01:35:41Z", "url": "https://github.com/aws/aws-sdk-java-v2/pull/2031", "merged": true, "mergeCommit": {"oid": "5dd15f74beb6b5e50a22de26355047b80bf170c3"}, "closed": true, "closedAt": "2020-09-11T20:53:32Z", "author": {"login": "zoewangg"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdHrTNIABqjM3NTM4ODkxNjM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdH7oKFAFqTQ4NzExMjUwMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "032d91e49fe523890191cb9b139f1ce73893d6b7", "author": {"user": {"login": "zoewangg", "name": "Zoe Wang"}}, "url": "https://github.com/aws/aws-sdk-java-v2/commit/032d91e49fe523890191cb9b139f1ce73893d6b7", "committedDate": "2020-09-11T01:34:11Z", "message": "Update codegen module to generate service waiter implementation classes"}, "afterCommit": {"oid": "7320ba13961d6b7c364c2d4b996003b252769a2b", "author": {"user": {"login": "zoewangg", "name": "Zoe Wang"}}, "url": "https://github.com/aws/aws-sdk-java-v2/commit/7320ba13961d6b7c364c2d4b996003b252769a2b", "committedDate": "2020-09-11T01:41:24Z", "message": "Update codegen module to generate service waiter implementation classes"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7320ba13961d6b7c364c2d4b996003b252769a2b", "author": {"user": {"login": "zoewangg", "name": "Zoe Wang"}}, "url": "https://github.com/aws/aws-sdk-java-v2/commit/7320ba13961d6b7c364c2d4b996003b252769a2b", "committedDate": "2020-09-11T01:41:24Z", "message": "Update codegen module to generate service waiter implementation classes"}, "afterCommit": {"oid": "beaa43c44fad5c6269d2b0b5b0ebaaaad9f57f81", "author": {"user": {"login": "zoewangg", "name": "Zoe Wang"}}, "url": "https://github.com/aws/aws-sdk-java-v2/commit/beaa43c44fad5c6269d2b0b5b0ebaaaad9f57f81", "committedDate": "2020-09-11T04:05:40Z", "message": "Update codegen module to generate service waiter implementation classes"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "beaa43c44fad5c6269d2b0b5b0ebaaaad9f57f81", "author": {"user": {"login": "zoewangg", "name": "Zoe Wang"}}, "url": "https://github.com/aws/aws-sdk-java-v2/commit/beaa43c44fad5c6269d2b0b5b0ebaaaad9f57f81", "committedDate": "2020-09-11T04:05:40Z", "message": "Update codegen module to generate service waiter implementation classes"}, "afterCommit": {"oid": "4c38a5594d4d1d9a0c61b691e30f928cfa24ed57", "author": {"user": {"login": "zoewangg", "name": "Zoe Wang"}}, "url": "https://github.com/aws/aws-sdk-java-v2/commit/4c38a5594d4d1d9a0c61b691e30f928cfa24ed57", "committedDate": "2020-09-11T17:23:52Z", "message": "Update codegen module to generate service waiter implementation classes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg3MDM1NzAx", "url": "https://github.com/aws/aws-sdk-java-v2/pull/2031#pullrequestreview-487035701", "createdAt": "2020-09-11T18:36:09Z", "commit": {"oid": "4c38a5594d4d1d9a0c61b691e30f928cfa24ed57"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQxODozNjowOVrOHQpnqw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQxODo0MTo0OFrOHQpyHg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzIyMTE2Mw==", "bodyText": "minor: use $S here so you don't need to escape the quotes", "url": "https://github.com/aws/aws-sdk-java-v2/pull/2031#discussion_r487221163", "createdAt": "2020-09-11T18:36:09Z", "author": {"login": "dagnir"}, "path": "codegen/src/main/java/software/amazon/awssdk/codegen/poet/waiters/AsyncWaiterClassSpec.java", "diffHunk": "@@ -0,0 +1,122 @@\n+/*\n+ * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.awssdk.codegen.poet.waiters;\n+\n+import static javax.lang.model.element.Modifier.FINAL;\n+import static javax.lang.model.element.Modifier.PRIVATE;\n+import static javax.lang.model.element.Modifier.STATIC;\n+\n+import com.squareup.javapoet.ClassName;\n+import com.squareup.javapoet.FieldSpec;\n+import com.squareup.javapoet.MethodSpec;\n+import com.squareup.javapoet.ParameterizedTypeName;\n+import com.squareup.javapoet.TypeSpec;\n+import java.util.Optional;\n+import java.util.concurrent.CompletableFuture;\n+import java.util.concurrent.Executors;\n+import java.util.concurrent.ScheduledExecutorService;\n+import javax.lang.model.element.Modifier;\n+import software.amazon.awssdk.codegen.model.intermediate.IntermediateModel;\n+import software.amazon.awssdk.codegen.model.intermediate.OperationModel;\n+import software.amazon.awssdk.codegen.poet.PoetExtensions;\n+import software.amazon.awssdk.core.internal.waiters.WaiterAttribute;\n+import software.amazon.awssdk.core.waiters.AsyncWaiter;\n+import software.amazon.awssdk.core.waiters.WaiterResponse;\n+import software.amazon.awssdk.utils.ThreadFactoryBuilder;\n+\n+public class AsyncWaiterClassSpec extends BaseWaiterClassSpec {\n+\n+    private final PoetExtensions poetExtensions;\n+    private final ClassName className;\n+    private final IntermediateModel model;\n+    private final String modelPackage;\n+\n+    public AsyncWaiterClassSpec(IntermediateModel model) {\n+        super(model, ClassName.get(AsyncWaiter.class));\n+        this.model = model;\n+        this.modelPackage = model.getMetadata().getFullModelPackageName();\n+        this.poetExtensions = new PoetExtensions(model);\n+        this.className = poetExtensions.getAsyncWaiterClass();\n+    }\n+\n+    @Override\n+    public ClassName className() {\n+        return className;\n+    }\n+\n+    @Override\n+    protected ClassName clientClassName() {\n+        return poetExtensions.getClientClass(model.getMetadata().getAsyncInterface());\n+    }\n+\n+    @Override\n+    protected ParameterizedTypeName getWaiterResponseType(OperationModel opModel) {\n+        ClassName pojoResponse = ClassName.get(modelPackage, opModel.getReturnType().getReturnType());\n+        ParameterizedTypeName waiterResponse = ParameterizedTypeName.get(ClassName.get(WaiterResponse.class), pojoResponse);\n+\n+        return ParameterizedTypeName.get(ClassName.get(CompletableFuture.class),\n+                                         waiterResponse);\n+    }\n+\n+    @Override\n+    protected ClassName interfaceClassName() {\n+        return poetExtensions.getAsyncWaiterInterface();\n+    }\n+\n+    @Override\n+    protected Optional<String> additionalWaiterConfig() {\n+        return Optional.of(\".scheduledExecutorService(executorService)\");\n+    }\n+\n+    @Override\n+    protected void additionalConstructorInitialization(MethodSpec.Builder method) {\n+        method.beginControlFlow(\"if (builder.executorService == null)\")\n+              .addStatement(\"this.executorService = $T.newScheduledThreadPool(5, new $T().threadNamePrefix\"\n+                            + \"(\\\"waiters-ScheduledExecutor\\\").build())\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c38a5594d4d1d9a0c61b691e30f928cfa24ed57"}, "originalPosition": 88}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzIyMzAxOQ==", "bodyText": "Should we have provider overload, where the returned executors are managed by the SDK?", "url": "https://github.com/aws/aws-sdk-java-v2/pull/2031#discussion_r487223019", "createdAt": "2020-09-11T18:40:03Z", "author": {"login": "dagnir"}, "path": "codegen/src/test/resources/software/amazon/awssdk/codegen/poet/waiters/query-async-waiter-interface.java", "diffHunk": "@@ -35,11 +37,23 @@\n      *\n      * @return a builder\n      */\n-    static void builder() {\n-        throw new UnsupportedOperationException();\n+    static Builder builder() {\n+        return DefaultQueryAsyncWaiter.builder();\n     }\n \n     interface Builder {\n+        /**\n+         * Sets a custom {@link ScheduledExecutorService} that will be used to schedule async polling attempts\n+         * <p>\n+         * This executorService must be closed by the caller when it is ready to be disposed. The SDK will not close the\n+         * executorService when the waiter is closed\n+         *\n+         * @param executorService\n+         *        the executorService to set\n+         * @return a reference to this object so that method calls can be chained together.\n+         */\n+        Builder executorService(ScheduledExecutorService executorService);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c38a5594d4d1d9a0c61b691e30f928cfa24ed57"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzIyMzgzOA==", "bodyText": "Hmm why does the async waiter need a threadpool? Would it be enough to just rely on the async client?", "url": "https://github.com/aws/aws-sdk-java-v2/pull/2031#discussion_r487223838", "createdAt": "2020-09-11T18:41:48Z", "author": {"login": "dagnir"}, "path": "codegen/src/main/java/software/amazon/awssdk/codegen/poet/waiters/AsyncWaiterClassSpec.java", "diffHunk": "@@ -0,0 +1,122 @@\n+/*\n+ * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.awssdk.codegen.poet.waiters;\n+\n+import static javax.lang.model.element.Modifier.FINAL;\n+import static javax.lang.model.element.Modifier.PRIVATE;\n+import static javax.lang.model.element.Modifier.STATIC;\n+\n+import com.squareup.javapoet.ClassName;\n+import com.squareup.javapoet.FieldSpec;\n+import com.squareup.javapoet.MethodSpec;\n+import com.squareup.javapoet.ParameterizedTypeName;\n+import com.squareup.javapoet.TypeSpec;\n+import java.util.Optional;\n+import java.util.concurrent.CompletableFuture;\n+import java.util.concurrent.Executors;\n+import java.util.concurrent.ScheduledExecutorService;\n+import javax.lang.model.element.Modifier;\n+import software.amazon.awssdk.codegen.model.intermediate.IntermediateModel;\n+import software.amazon.awssdk.codegen.model.intermediate.OperationModel;\n+import software.amazon.awssdk.codegen.poet.PoetExtensions;\n+import software.amazon.awssdk.core.internal.waiters.WaiterAttribute;\n+import software.amazon.awssdk.core.waiters.AsyncWaiter;\n+import software.amazon.awssdk.core.waiters.WaiterResponse;\n+import software.amazon.awssdk.utils.ThreadFactoryBuilder;\n+\n+public class AsyncWaiterClassSpec extends BaseWaiterClassSpec {\n+\n+    private final PoetExtensions poetExtensions;\n+    private final ClassName className;\n+    private final IntermediateModel model;\n+    private final String modelPackage;\n+\n+    public AsyncWaiterClassSpec(IntermediateModel model) {\n+        super(model, ClassName.get(AsyncWaiter.class));\n+        this.model = model;\n+        this.modelPackage = model.getMetadata().getFullModelPackageName();\n+        this.poetExtensions = new PoetExtensions(model);\n+        this.className = poetExtensions.getAsyncWaiterClass();\n+    }\n+\n+    @Override\n+    public ClassName className() {\n+        return className;\n+    }\n+\n+    @Override\n+    protected ClassName clientClassName() {\n+        return poetExtensions.getClientClass(model.getMetadata().getAsyncInterface());\n+    }\n+\n+    @Override\n+    protected ParameterizedTypeName getWaiterResponseType(OperationModel opModel) {\n+        ClassName pojoResponse = ClassName.get(modelPackage, opModel.getReturnType().getReturnType());\n+        ParameterizedTypeName waiterResponse = ParameterizedTypeName.get(ClassName.get(WaiterResponse.class), pojoResponse);\n+\n+        return ParameterizedTypeName.get(ClassName.get(CompletableFuture.class),\n+                                         waiterResponse);\n+    }\n+\n+    @Override\n+    protected ClassName interfaceClassName() {\n+        return poetExtensions.getAsyncWaiterInterface();\n+    }\n+\n+    @Override\n+    protected Optional<String> additionalWaiterConfig() {\n+        return Optional.of(\".scheduledExecutorService(executorService)\");\n+    }\n+\n+    @Override\n+    protected void additionalConstructorInitialization(MethodSpec.Builder method) {\n+        method.beginControlFlow(\"if (builder.executorService == null)\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c38a5594d4d1d9a0c61b691e30f928cfa24ed57"}, "originalPosition": 86}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f48a0868c082fe9e956aa5137c50dcc53210e324", "author": {"user": {"login": "zoewangg", "name": "Zoe Wang"}}, "url": "https://github.com/aws/aws-sdk-java-v2/commit/f48a0868c082fe9e956aa5137c50dcc53210e324", "committedDate": "2020-09-11T20:03:16Z", "message": "Update codegen module to generate service waiter implementation classes"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4c38a5594d4d1d9a0c61b691e30f928cfa24ed57", "author": {"user": {"login": "zoewangg", "name": "Zoe Wang"}}, "url": "https://github.com/aws/aws-sdk-java-v2/commit/4c38a5594d4d1d9a0c61b691e30f928cfa24ed57", "committedDate": "2020-09-11T17:23:52Z", "message": "Update codegen module to generate service waiter implementation classes"}, "afterCommit": {"oid": "f48a0868c082fe9e956aa5137c50dcc53210e324", "author": {"user": {"login": "zoewangg", "name": "Zoe Wang"}}, "url": "https://github.com/aws/aws-sdk-java-v2/commit/f48a0868c082fe9e956aa5137c50dcc53210e324", "committedDate": "2020-09-11T20:03:16Z", "message": "Update codegen module to generate service waiter implementation classes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg3MTEyNTAy", "url": "https://github.com/aws/aws-sdk-java-v2/pull/2031#pullrequestreview-487112502", "createdAt": "2020-09-11T20:42:58Z", "commit": {"oid": "f48a0868c082fe9e956aa5137c50dcc53210e324"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2455, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}