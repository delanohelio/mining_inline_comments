{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY1MDM4MDEz", "number": 1600, "reviewThreads": {"totalCount": 16, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQwMDo1NDoxMlrODZWarA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQwMjoyMTozNFrODZsoYQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3OTA4MjY4OnYy", "diffSide": "RIGHT", "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/CommonOperation.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQwMDo1NDoxMlrOFfr9Mg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQyMDoxOTozOFrOFgptdg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODc3MDM1NA==", "bodyText": "The javadocs will not render as nicely as this on javadocs site without html tags such as <ol> <li>. :)\nI noticed <p> is missing in other places as well.", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1600#discussion_r368770354", "createdAt": "2020-01-21T00:54:12Z", "author": {"login": "zoewangg"}, "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/CommonOperation.java", "diffHunk": "@@ -92,4 +106,30 @@ default ResultT execute(TableSchema<ItemT> tableSchema,\n         ResponseT response = serviceCall(dynamoDbClient).apply(request);\n         return transformResponse(response, tableSchema, context, mapperExtension);\n     }\n+\n+    /**\n+     * Default implementation of a complete non-blocking asynchronous execution of this operation against either the\n+     * primary or a secondary index.\n+     * It performs three steps:\n+     * 1) Call generateRequest() to get the request object.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5bb5ee928820fc30362e6df452ccfe6470471a57"}, "originalPosition": 80}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTc3MjI1NQ==", "bodyText": "Honestly all the javadocs need a final look/touchup and review. We have a separate task for that. I'd rather tackle it there than in a piecemeal fashion as a lot of these new classes are mirrored by their sync versions.", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1600#discussion_r369772255", "createdAt": "2020-01-22T19:57:30Z", "author": {"login": "bmaizels"}, "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/CommonOperation.java", "diffHunk": "@@ -92,4 +106,30 @@ default ResultT execute(TableSchema<ItemT> tableSchema,\n         ResponseT response = serviceCall(dynamoDbClient).apply(request);\n         return transformResponse(response, tableSchema, context, mapperExtension);\n     }\n+\n+    /**\n+     * Default implementation of a complete non-blocking asynchronous execution of this operation against either the\n+     * primary or a secondary index.\n+     * It performs three steps:\n+     * 1) Call generateRequest() to get the request object.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODc3MDM1NA=="}, "originalCommit": {"oid": "5bb5ee928820fc30362e6df452ccfe6470471a57"}, "originalPosition": 80}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTc3NjY4NQ==", "bodyText": "I'd prefer making it right while we are at it because it's really easy to miss when we do it afterwards. This is not blocker of this PR if we can make sure we go over all of them later.", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1600#discussion_r369776685", "createdAt": "2020-01-22T20:07:19Z", "author": {"login": "zoewangg"}, "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/CommonOperation.java", "diffHunk": "@@ -92,4 +106,30 @@ default ResultT execute(TableSchema<ItemT> tableSchema,\n         ResponseT response = serviceCall(dynamoDbClient).apply(request);\n         return transformResponse(response, tableSchema, context, mapperExtension);\n     }\n+\n+    /**\n+     * Default implementation of a complete non-blocking asynchronous execution of this operation against either the\n+     * primary or a secondary index.\n+     * It performs three steps:\n+     * 1) Call generateRequest() to get the request object.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODc3MDM1NA=="}, "originalCommit": {"oid": "5bb5ee928820fc30362e6df452ccfe6470471a57"}, "originalPosition": 80}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTc4MjEzNA==", "bodyText": "Given that we have a task already in our backlog specifically for this, I'm going to defer for now so as not to hold up this change.", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1600#discussion_r369782134", "createdAt": "2020-01-22T20:19:38Z", "author": {"login": "bmaizels"}, "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/CommonOperation.java", "diffHunk": "@@ -92,4 +106,30 @@ default ResultT execute(TableSchema<ItemT> tableSchema,\n         ResponseT response = serviceCall(dynamoDbClient).apply(request);\n         return transformResponse(response, tableSchema, context, mapperExtension);\n     }\n+\n+    /**\n+     * Default implementation of a complete non-blocking asynchronous execution of this operation against either the\n+     * primary or a secondary index.\n+     * It performs three steps:\n+     * 1) Call generateRequest() to get the request object.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODc3MDM1NA=="}, "originalCommit": {"oid": "5bb5ee928820fc30362e6df452ccfe6470471a57"}, "originalPosition": 80}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3OTA5MTcwOnYy", "diffSide": "RIGHT", "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/core/TransformPublisher.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQwMTowMjoyNVrOFfsCcQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQxOTo0NDo1M1rOFgovFQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODc3MTY5Nw==", "bodyText": "I think the naming convention for the static factor method is create.https://github.com/aws/aws-sdk-java-v2/blob/master/docs/design/FavorStaticFactoryMethods.md#naming-conventions", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1600#discussion_r368771697", "createdAt": "2020-01-21T01:02:25Z", "author": {"login": "zoewangg"}, "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/core/TransformPublisher.java", "diffHunk": "@@ -0,0 +1,73 @@\n+/*\n+ * Copyright 2010-2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.awssdk.extensions.dynamodb.mappingclient.core;\n+\n+import java.util.function.Function;\n+\n+import org.reactivestreams.Subscriber;\n+import org.reactivestreams.Subscription;\n+\n+import software.amazon.awssdk.annotations.SdkInternalApi;\n+import software.amazon.awssdk.core.async.SdkPublisher;\n+\n+@SdkInternalApi\n+public class TransformPublisher<T, R> implements SdkPublisher<R> {\n+    private final SdkPublisher<T> wrappedPublisher;\n+    private final Function<T, R> transformFunction;\n+\n+    public TransformPublisher(SdkPublisher<T> wrappedPublisher, Function<T, R> transformFunction) {\n+        this.wrappedPublisher = wrappedPublisher;\n+        this.transformFunction = transformFunction;\n+    }\n+\n+    public static <T, R> TransformPublisher<T, R> of(SdkPublisher<T> publisher, Function<T, R> transformFunction) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5bb5ee928820fc30362e6df452ccfe6470471a57"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTc2NjE2NQ==", "bodyText": "We have a separate backlog task to fix this. Right now the goal of this change is to remain consistent with what's already there.", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1600#discussion_r369766165", "createdAt": "2020-01-22T19:44:53Z", "author": {"login": "bmaizels"}, "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/core/TransformPublisher.java", "diffHunk": "@@ -0,0 +1,73 @@\n+/*\n+ * Copyright 2010-2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.awssdk.extensions.dynamodb.mappingclient.core;\n+\n+import java.util.function.Function;\n+\n+import org.reactivestreams.Subscriber;\n+import org.reactivestreams.Subscription;\n+\n+import software.amazon.awssdk.annotations.SdkInternalApi;\n+import software.amazon.awssdk.core.async.SdkPublisher;\n+\n+@SdkInternalApi\n+public class TransformPublisher<T, R> implements SdkPublisher<R> {\n+    private final SdkPublisher<T> wrappedPublisher;\n+    private final Function<T, R> transformFunction;\n+\n+    public TransformPublisher(SdkPublisher<T> wrappedPublisher, Function<T, R> transformFunction) {\n+        this.wrappedPublisher = wrappedPublisher;\n+        this.transformFunction = transformFunction;\n+    }\n+\n+    public static <T, R> TransformPublisher<T, R> of(SdkPublisher<T> publisher, Function<T, R> transformFunction) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODc3MTY5Nw=="}, "originalCommit": {"oid": "5bb5ee928820fc30362e6df452ccfe6470471a57"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3OTA5MjEwOnYy", "diffSide": "RIGHT", "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/core/TransformPublisher.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQwMTowMjo0MFrOFfsCpA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQxOTo0NTozM1rOFgowIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODc3MTc0OA==", "bodyText": "private?", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1600#discussion_r368771748", "createdAt": "2020-01-21T01:02:40Z", "author": {"login": "zoewangg"}, "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/core/TransformPublisher.java", "diffHunk": "@@ -0,0 +1,73 @@\n+/*\n+ * Copyright 2010-2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.awssdk.extensions.dynamodb.mappingclient.core;\n+\n+import java.util.function.Function;\n+\n+import org.reactivestreams.Subscriber;\n+import org.reactivestreams.Subscription;\n+\n+import software.amazon.awssdk.annotations.SdkInternalApi;\n+import software.amazon.awssdk.core.async.SdkPublisher;\n+\n+@SdkInternalApi\n+public class TransformPublisher<T, R> implements SdkPublisher<R> {\n+    private final SdkPublisher<T> wrappedPublisher;\n+    private final Function<T, R> transformFunction;\n+\n+    public TransformPublisher(SdkPublisher<T> wrappedPublisher, Function<T, R> transformFunction) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5bb5ee928820fc30362e6df452ccfe6470471a57"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTc2NjQzMw==", "bodyText": "Will fix.", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1600#discussion_r369766433", "createdAt": "2020-01-22T19:45:33Z", "author": {"login": "bmaizels"}, "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/core/TransformPublisher.java", "diffHunk": "@@ -0,0 +1,73 @@\n+/*\n+ * Copyright 2010-2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.awssdk.extensions.dynamodb.mappingclient.core;\n+\n+import java.util.function.Function;\n+\n+import org.reactivestreams.Subscriber;\n+import org.reactivestreams.Subscription;\n+\n+import software.amazon.awssdk.annotations.SdkInternalApi;\n+import software.amazon.awssdk.core.async.SdkPublisher;\n+\n+@SdkInternalApi\n+public class TransformPublisher<T, R> implements SdkPublisher<R> {\n+    private final SdkPublisher<T> wrappedPublisher;\n+    private final Function<T, R> transformFunction;\n+\n+    public TransformPublisher(SdkPublisher<T> wrappedPublisher, Function<T, R> transformFunction) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODc3MTc0OA=="}, "originalCommit": {"oid": "5bb5ee928820fc30362e6df452ccfe6470471a57"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3OTA5NDU4OnYy", "diffSide": "RIGHT", "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/operations/CreateTable.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQwMTowNDo1MFrOFfsD_Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQxOTo0NjowMlrOFgow_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODc3MjA5Mw==", "bodyText": "As discussed offline, I'd prefer wrapping the Function with a class to make it more readable. Fine with it since this will be an internal api.", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1600#discussion_r368772093", "createdAt": "2020-01-21T01:04:50Z", "author": {"login": "zoewangg"}, "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/operations/CreateTable.java", "diffHunk": "@@ -159,6 +161,13 @@ public CreateTableRequest generateRequest(TableSchema<T> tableSchema,\n         return dynamoDbClient::createTable;\n     }\n \n+    @Override\n+    public Function<CreateTableRequest, CompletableFuture<CreateTableResponse>> asyncServiceCall(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5bb5ee928820fc30362e6df452ccfe6470471a57"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTc2NjY1NA==", "bodyText": "Going to table this for now on the understanding that the future of this interface is to be internal.", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1600#discussion_r369766654", "createdAt": "2020-01-22T19:46:02Z", "author": {"login": "bmaizels"}, "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/operations/CreateTable.java", "diffHunk": "@@ -159,6 +161,13 @@ public CreateTableRequest generateRequest(TableSchema<T> tableSchema,\n         return dynamoDbClient::createTable;\n     }\n \n+    @Override\n+    public Function<CreateTableRequest, CompletableFuture<CreateTableResponse>> asyncServiceCall(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODc3MjA5Mw=="}, "originalCommit": {"oid": "5bb5ee928820fc30362e6df452ccfe6470471a57"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4MTM4Mjg4OnYy", "diffSide": "RIGHT", "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/AsyncMappedIndex.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQxNzowODo1MVrOFgB6WQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQyMzoyMDo0MVrOFgMEuQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTEzMDA3Mw==", "bodyText": "In the current version of the interface AsyncMappedDatabase, the table method takes a table name and a schema. I don't think there is a table(schema) method?", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1600#discussion_r369130073", "createdAt": "2020-01-21T17:08:51Z", "author": {"login": "cenedhryn"}, "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/AsyncMappedIndex.java", "diffHunk": "@@ -0,0 +1,89 @@\n+/*\n+ * Copyright 2010-2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.awssdk.extensions.dynamodb.mappingclient;\n+\n+import java.util.concurrent.CompletableFuture;\n+\n+import software.amazon.awssdk.annotations.SdkPublicApi;\n+import software.amazon.awssdk.core.async.SdkPublisher;\n+\n+/**\n+ * Asynchronous interface for running commands against an object that is linked to a specific DynamoDb secondary index\n+ * and knows how to map records from the table that index is linked to into a modelled object.\n+ *\n+ * Typically an implementation for this interface can be obtained from a {@link AsyncMappedTable} which in turn can be\n+ * obtained from a {@link AsyncMappedDatabase}:\n+ *\n+ * mappedIndex = mappedDatabase.table(tableSchema).index(\"gsi_1\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5bb5ee928820fc30362e6df452ccfe6470471a57"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTI5NjU2OQ==", "bodyText": "I'm going to remove the code examples, because it's too difficult to keep them up to date as we iterate on usability. Maybe we will add them back in once we've locked the interface.", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1600#discussion_r369296569", "createdAt": "2020-01-21T23:20:41Z", "author": {"login": "bmaizels"}, "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/AsyncMappedIndex.java", "diffHunk": "@@ -0,0 +1,89 @@\n+/*\n+ * Copyright 2010-2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.awssdk.extensions.dynamodb.mappingclient;\n+\n+import java.util.concurrent.CompletableFuture;\n+\n+import software.amazon.awssdk.annotations.SdkPublicApi;\n+import software.amazon.awssdk.core.async.SdkPublisher;\n+\n+/**\n+ * Asynchronous interface for running commands against an object that is linked to a specific DynamoDb secondary index\n+ * and knows how to map records from the table that index is linked to into a modelled object.\n+ *\n+ * Typically an implementation for this interface can be obtained from a {@link AsyncMappedTable} which in turn can be\n+ * obtained from a {@link AsyncMappedDatabase}:\n+ *\n+ * mappedIndex = mappedDatabase.table(tableSchema).index(\"gsi_1\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTEzMDA3Mw=="}, "originalCommit": {"oid": "5bb5ee928820fc30362e6df452ccfe6470471a57"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4MTM4NTg0OnYy", "diffSide": "RIGHT", "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/AsyncMappedTable.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQxNzowOTo0NFrOFgB8FQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQyMzoyMDo1N1rOFgMFUQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTEzMDUxNw==", "bodyText": "Same as above, reference to table method should have two parameters.", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1600#discussion_r369130517", "createdAt": "2020-01-21T17:09:44Z", "author": {"login": "cenedhryn"}, "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/AsyncMappedTable.java", "diffHunk": "@@ -0,0 +1,68 @@\n+/*\n+ * Copyright 2010-2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.awssdk.extensions.dynamodb.mappingclient;\n+\n+import java.util.concurrent.CompletableFuture;\n+\n+import software.amazon.awssdk.annotations.SdkPublicApi;\n+import software.amazon.awssdk.core.async.SdkPublisher;\n+\n+/**\n+ * Asynchronous interface for running commands against an object that is linked to a specific DynamoDb table resource\n+ * and therefore knows how to map records from that table into a modelled object.\n+ *\n+ * Typically an implementation for this interface can be obtained from a {@link AsyncMappedDatabase}:\n+ *\n+ * asyncMappedTable = asyncMappedDatabase.table(tableSchema);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5bb5ee928820fc30362e6df452ccfe6470471a57"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTI5NjcyMQ==", "bodyText": "Will remove the code example.", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1600#discussion_r369296721", "createdAt": "2020-01-21T23:20:57Z", "author": {"login": "bmaizels"}, "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/AsyncMappedTable.java", "diffHunk": "@@ -0,0 +1,68 @@\n+/*\n+ * Copyright 2010-2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.awssdk.extensions.dynamodb.mappingclient;\n+\n+import java.util.concurrent.CompletableFuture;\n+\n+import software.amazon.awssdk.annotations.SdkPublicApi;\n+import software.amazon.awssdk.core.async.SdkPublisher;\n+\n+/**\n+ * Asynchronous interface for running commands against an object that is linked to a specific DynamoDb table resource\n+ * and therefore knows how to map records from that table into a modelled object.\n+ *\n+ * Typically an implementation for this interface can be obtained from a {@link AsyncMappedDatabase}:\n+ *\n+ * asyncMappedTable = asyncMappedDatabase.table(tableSchema);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTEzMDUxNw=="}, "originalCommit": {"oid": "5bb5ee928820fc30362e6df452ccfe6470471a57"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4MTU1NzIzOnYy", "diffSide": "RIGHT", "path": "services-custom/dynamodb-enhanced/src/test/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/core/DynamoDbAsyncMappedDatabaseTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQxODowNToyNFrOFgDmDw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQyMzoyMzozOVrOFgMJOw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTE1NzY0Nw==", "bodyText": "InjectMocks is new to me, pretty neat. It seems to be not loved by everyone (whatever is), this is an interesting read: https://tedvinke.wordpress.com/2014/02/13/mockito-why-you-should-not-use-injectmocks-annotation-to-autowire-fields/", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1600#discussion_r369157647", "createdAt": "2020-01-21T18:05:24Z", "author": {"login": "cenedhryn"}, "path": "services-custom/dynamodb-enhanced/src/test/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/core/DynamoDbAsyncMappedDatabaseTest.java", "diffHunk": "@@ -0,0 +1,116 @@\n+/*\n+ * Copyright 2010-2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.awssdk.extensions.dynamodb.mappingclient.core;\n+\n+import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.hamcrest.Matchers.is;\n+import static org.hamcrest.Matchers.nullValue;\n+import static org.mockito.ArgumentMatchers.any;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.verify;\n+import static org.mockito.Mockito.when;\n+\n+import java.util.concurrent.CompletableFuture;\n+\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.mockito.InjectMocks;\n+import org.mockito.Mock;\n+import org.mockito.junit.MockitoJUnitRunner;\n+\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.DatabaseOperation;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.MapperExtension;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.TableSchema;\n+import software.amazon.awssdk.services.dynamodb.DynamoDbAsyncClient;\n+\n+@RunWith(MockitoJUnitRunner.class)\n+public class DynamoDbAsyncMappedDatabaseTest {\n+    @Mock\n+    private DynamoDbAsyncClient mockDynamoDbAsyncClient;\n+    @Mock\n+    private MapperExtension mockMapperExtension;\n+    @Mock\n+    private DatabaseOperation<?, ?, String> mockDatabaseOperation;\n+    @Mock\n+    private TableSchema<Object> mockTableSchema;\n+\n+    @InjectMocks", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5bb5ee928820fc30362e6df452ccfe6470471a57"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTI5NzcyMw==", "bodyText": "I use it when it's convenient, when it breaks (because you add a new dependency without mocking it in your test) in TDD you normally write a test first for that new dependency and so the silent failure hazard doesn't really apply. I'm going to leave as-is, but it's a good call-out and something to be aware of when using it.", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1600#discussion_r369297723", "createdAt": "2020-01-21T23:23:39Z", "author": {"login": "bmaizels"}, "path": "services-custom/dynamodb-enhanced/src/test/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/core/DynamoDbAsyncMappedDatabaseTest.java", "diffHunk": "@@ -0,0 +1,116 @@\n+/*\n+ * Copyright 2010-2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.awssdk.extensions.dynamodb.mappingclient.core;\n+\n+import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.hamcrest.Matchers.is;\n+import static org.hamcrest.Matchers.nullValue;\n+import static org.mockito.ArgumentMatchers.any;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.verify;\n+import static org.mockito.Mockito.when;\n+\n+import java.util.concurrent.CompletableFuture;\n+\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.mockito.InjectMocks;\n+import org.mockito.Mock;\n+import org.mockito.junit.MockitoJUnitRunner;\n+\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.DatabaseOperation;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.MapperExtension;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.TableSchema;\n+import software.amazon.awssdk.services.dynamodb.DynamoDbAsyncClient;\n+\n+@RunWith(MockitoJUnitRunner.class)\n+public class DynamoDbAsyncMappedDatabaseTest {\n+    @Mock\n+    private DynamoDbAsyncClient mockDynamoDbAsyncClient;\n+    @Mock\n+    private MapperExtension mockMapperExtension;\n+    @Mock\n+    private DatabaseOperation<?, ?, String> mockDatabaseOperation;\n+    @Mock\n+    private TableSchema<Object> mockTableSchema;\n+\n+    @InjectMocks", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTE1NzY0Nw=="}, "originalCommit": {"oid": "5bb5ee928820fc30362e6df452ccfe6470471a57"}, "originalPosition": 50}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4MjQxMDQ2OnYy", "diffSide": "RIGHT", "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/core/DynamoDbAsyncMappedDatabase.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQyMzoxMzowMVrOFgL7fw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQxOTo0NjoxMlrOFgoxTw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTI5NDIwNw==", "bodyText": "final.\nCan also we add javadocs to all public apis?", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1600#discussion_r369294207", "createdAt": "2020-01-21T23:13:01Z", "author": {"login": "zoewangg"}, "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/core/DynamoDbAsyncMappedDatabase.java", "diffHunk": "@@ -0,0 +1,120 @@\n+/*\n+ * Copyright 2010-2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.awssdk.extensions.dynamodb.mappingclient.core;\n+\n+import java.util.concurrent.CompletableFuture;\n+\n+import software.amazon.awssdk.annotations.SdkPublicApi;\n+import software.amazon.awssdk.annotations.ThreadSafe;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.AsyncMappedDatabase;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.DatabaseOperation;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.MapperExtension;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.TableSchema;\n+import software.amazon.awssdk.services.dynamodb.DynamoDbAsyncClient;\n+\n+@SdkPublicApi\n+@ThreadSafe\n+public class DynamoDbAsyncMappedDatabase implements AsyncMappedDatabase {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5bb5ee928820fc30362e6df452ccfe6470471a57"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTc2NjczNQ==", "bodyText": "Will fix.", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1600#discussion_r369766735", "createdAt": "2020-01-22T19:46:12Z", "author": {"login": "bmaizels"}, "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/core/DynamoDbAsyncMappedDatabase.java", "diffHunk": "@@ -0,0 +1,120 @@\n+/*\n+ * Copyright 2010-2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.awssdk.extensions.dynamodb.mappingclient.core;\n+\n+import java.util.concurrent.CompletableFuture;\n+\n+import software.amazon.awssdk.annotations.SdkPublicApi;\n+import software.amazon.awssdk.annotations.ThreadSafe;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.AsyncMappedDatabase;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.DatabaseOperation;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.MapperExtension;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.TableSchema;\n+import software.amazon.awssdk.services.dynamodb.DynamoDbAsyncClient;\n+\n+@SdkPublicApi\n+@ThreadSafe\n+public class DynamoDbAsyncMappedDatabase implements AsyncMappedDatabase {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTI5NDIwNw=="}, "originalCommit": {"oid": "5bb5ee928820fc30362e6df452ccfe6470471a57"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4MjQxMjcwOnYy", "diffSide": "RIGHT", "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/core/DynamoDbAsyncMappedDatabase.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQyMzoxNDoxMVrOFgL81g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQxOTo0ODozOFrOFgo1-w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTI5NDU1MA==", "bodyText": "missing private ctor", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1600#discussion_r369294550", "createdAt": "2020-01-21T23:14:11Z", "author": {"login": "zoewangg"}, "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/core/DynamoDbAsyncMappedDatabase.java", "diffHunk": "@@ -0,0 +1,120 @@\n+/*\n+ * Copyright 2010-2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.awssdk.extensions.dynamodb.mappingclient.core;\n+\n+import java.util.concurrent.CompletableFuture;\n+\n+import software.amazon.awssdk.annotations.SdkPublicApi;\n+import software.amazon.awssdk.annotations.ThreadSafe;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.AsyncMappedDatabase;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.DatabaseOperation;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.MapperExtension;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.TableSchema;\n+import software.amazon.awssdk.services.dynamodb.DynamoDbAsyncClient;\n+\n+@SdkPublicApi\n+@ThreadSafe\n+public class DynamoDbAsyncMappedDatabase implements AsyncMappedDatabase {\n+    private final DynamoDbAsyncClient dynamoDbAsyncClient;\n+    private final MapperExtension mapperExtension;\n+\n+    private DynamoDbAsyncMappedDatabase(DynamoDbAsyncClient dynamoDbAsyncClient, MapperExtension mapperExtension) {\n+        this.dynamoDbAsyncClient = dynamoDbAsyncClient;\n+        this.mapperExtension = mapperExtension;\n+    }\n+\n+    public static Builder builder() {\n+        return new Builder();\n+    }\n+\n+    @Override\n+    public <T> CompletableFuture<T> execute(DatabaseOperation<?, ?, T> operation) {\n+        return operation.executeAsync(dynamoDbAsyncClient, mapperExtension);\n+    }\n+\n+    @Override\n+    public <T> DynamoDbAsyncMappedTable<T> table(String tableName, TableSchema<T> tableSchema) {\n+        return new DynamoDbAsyncMappedTable<>(dynamoDbAsyncClient, mapperExtension, tableSchema, tableName);\n+    }\n+\n+    public DynamoDbAsyncClient dynamoDbAsyncClient() {\n+        return dynamoDbAsyncClient;\n+    }\n+\n+    public MapperExtension mapperExtension() {\n+        return mapperExtension;\n+    }\n+\n+    public Builder toBuilder() {\n+        return builder().dynamoDbAsyncClient(this.dynamoDbAsyncClient).extendWith(this.mapperExtension);\n+    }\n+\n+    @Override\n+    public boolean equals(Object o) {\n+        if (this == o) {\n+            return true;\n+        }\n+        if (o == null || getClass() != o.getClass()) {\n+            return false;\n+        }\n+\n+        DynamoDbAsyncMappedDatabase that = (DynamoDbAsyncMappedDatabase) o;\n+\n+        if (dynamoDbAsyncClient != null ? !dynamoDbAsyncClient.equals(that.dynamoDbAsyncClient)\n+            : that.dynamoDbAsyncClient != null) {\n+\n+            return false;\n+        }\n+        return mapperExtension != null ? mapperExtension.equals(that.mapperExtension) : that.mapperExtension == null;\n+    }\n+\n+    @Override\n+    public int hashCode() {\n+        int result = dynamoDbAsyncClient != null ? dynamoDbAsyncClient.hashCode() : 0;\n+        result = 31 * result + (mapperExtension != null ? mapperExtension.hashCode() : 0);\n+        return result;\n+    }\n+\n+    public static final class Builder {\n+        private DynamoDbAsyncClient dynamoDbAsyncClient;\n+        private MapperExtension mapperExtension;\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5bb5ee928820fc30362e6df452ccfe6470471a57"}, "originalPosition": 94}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTc2NzkzMQ==", "bodyText": "Will fix.", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1600#discussion_r369767931", "createdAt": "2020-01-22T19:48:38Z", "author": {"login": "bmaizels"}, "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/core/DynamoDbAsyncMappedDatabase.java", "diffHunk": "@@ -0,0 +1,120 @@\n+/*\n+ * Copyright 2010-2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.awssdk.extensions.dynamodb.mappingclient.core;\n+\n+import java.util.concurrent.CompletableFuture;\n+\n+import software.amazon.awssdk.annotations.SdkPublicApi;\n+import software.amazon.awssdk.annotations.ThreadSafe;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.AsyncMappedDatabase;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.DatabaseOperation;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.MapperExtension;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.TableSchema;\n+import software.amazon.awssdk.services.dynamodb.DynamoDbAsyncClient;\n+\n+@SdkPublicApi\n+@ThreadSafe\n+public class DynamoDbAsyncMappedDatabase implements AsyncMappedDatabase {\n+    private final DynamoDbAsyncClient dynamoDbAsyncClient;\n+    private final MapperExtension mapperExtension;\n+\n+    private DynamoDbAsyncMappedDatabase(DynamoDbAsyncClient dynamoDbAsyncClient, MapperExtension mapperExtension) {\n+        this.dynamoDbAsyncClient = dynamoDbAsyncClient;\n+        this.mapperExtension = mapperExtension;\n+    }\n+\n+    public static Builder builder() {\n+        return new Builder();\n+    }\n+\n+    @Override\n+    public <T> CompletableFuture<T> execute(DatabaseOperation<?, ?, T> operation) {\n+        return operation.executeAsync(dynamoDbAsyncClient, mapperExtension);\n+    }\n+\n+    @Override\n+    public <T> DynamoDbAsyncMappedTable<T> table(String tableName, TableSchema<T> tableSchema) {\n+        return new DynamoDbAsyncMappedTable<>(dynamoDbAsyncClient, mapperExtension, tableSchema, tableName);\n+    }\n+\n+    public DynamoDbAsyncClient dynamoDbAsyncClient() {\n+        return dynamoDbAsyncClient;\n+    }\n+\n+    public MapperExtension mapperExtension() {\n+        return mapperExtension;\n+    }\n+\n+    public Builder toBuilder() {\n+        return builder().dynamoDbAsyncClient(this.dynamoDbAsyncClient).extendWith(this.mapperExtension);\n+    }\n+\n+    @Override\n+    public boolean equals(Object o) {\n+        if (this == o) {\n+            return true;\n+        }\n+        if (o == null || getClass() != o.getClass()) {\n+            return false;\n+        }\n+\n+        DynamoDbAsyncMappedDatabase that = (DynamoDbAsyncMappedDatabase) o;\n+\n+        if (dynamoDbAsyncClient != null ? !dynamoDbAsyncClient.equals(that.dynamoDbAsyncClient)\n+            : that.dynamoDbAsyncClient != null) {\n+\n+            return false;\n+        }\n+        return mapperExtension != null ? mapperExtension.equals(that.mapperExtension) : that.mapperExtension == null;\n+    }\n+\n+    @Override\n+    public int hashCode() {\n+        int result = dynamoDbAsyncClient != null ? dynamoDbAsyncClient.hashCode() : 0;\n+        result = 31 * result + (mapperExtension != null ? mapperExtension.hashCode() : 0);\n+        return result;\n+    }\n+\n+    public static final class Builder {\n+        private DynamoDbAsyncClient dynamoDbAsyncClient;\n+        private MapperExtension mapperExtension;\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTI5NDU1MA=="}, "originalCommit": {"oid": "5bb5ee928820fc30362e6df452ccfe6470471a57"}, "originalPosition": 94}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4MjQxODUyOnYy", "diffSide": "RIGHT", "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/core/DynamoDbAsyncMappedDatabase.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQyMzoxNzowNlrOFgMAaQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QxNzowNzoxN1rOFhF7jg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTI5NTQ2NQ==", "bodyText": "nit: We can use Validate.mutuallyExclusive for this", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1600#discussion_r369295465", "createdAt": "2020-01-21T23:17:06Z", "author": {"login": "zoewangg"}, "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/core/DynamoDbAsyncMappedDatabase.java", "diffHunk": "@@ -0,0 +1,120 @@\n+/*\n+ * Copyright 2010-2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.awssdk.extensions.dynamodb.mappingclient.core;\n+\n+import java.util.concurrent.CompletableFuture;\n+\n+import software.amazon.awssdk.annotations.SdkPublicApi;\n+import software.amazon.awssdk.annotations.ThreadSafe;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.AsyncMappedDatabase;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.DatabaseOperation;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.MapperExtension;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.TableSchema;\n+import software.amazon.awssdk.services.dynamodb.DynamoDbAsyncClient;\n+\n+@SdkPublicApi\n+@ThreadSafe\n+public class DynamoDbAsyncMappedDatabase implements AsyncMappedDatabase {\n+    private final DynamoDbAsyncClient dynamoDbAsyncClient;\n+    private final MapperExtension mapperExtension;\n+\n+    private DynamoDbAsyncMappedDatabase(DynamoDbAsyncClient dynamoDbAsyncClient, MapperExtension mapperExtension) {\n+        this.dynamoDbAsyncClient = dynamoDbAsyncClient;\n+        this.mapperExtension = mapperExtension;\n+    }\n+\n+    public static Builder builder() {\n+        return new Builder();\n+    }\n+\n+    @Override\n+    public <T> CompletableFuture<T> execute(DatabaseOperation<?, ?, T> operation) {\n+        return operation.executeAsync(dynamoDbAsyncClient, mapperExtension);\n+    }\n+\n+    @Override\n+    public <T> DynamoDbAsyncMappedTable<T> table(String tableName, TableSchema<T> tableSchema) {\n+        return new DynamoDbAsyncMappedTable<>(dynamoDbAsyncClient, mapperExtension, tableSchema, tableName);\n+    }\n+\n+    public DynamoDbAsyncClient dynamoDbAsyncClient() {\n+        return dynamoDbAsyncClient;\n+    }\n+\n+    public MapperExtension mapperExtension() {\n+        return mapperExtension;\n+    }\n+\n+    public Builder toBuilder() {\n+        return builder().dynamoDbAsyncClient(this.dynamoDbAsyncClient).extendWith(this.mapperExtension);\n+    }\n+\n+    @Override\n+    public boolean equals(Object o) {\n+        if (this == o) {\n+            return true;\n+        }\n+        if (o == null || getClass() != o.getClass()) {\n+            return false;\n+        }\n+\n+        DynamoDbAsyncMappedDatabase that = (DynamoDbAsyncMappedDatabase) o;\n+\n+        if (dynamoDbAsyncClient != null ? !dynamoDbAsyncClient.equals(that.dynamoDbAsyncClient)\n+            : that.dynamoDbAsyncClient != null) {\n+\n+            return false;\n+        }\n+        return mapperExtension != null ? mapperExtension.equals(that.mapperExtension) : that.mapperExtension == null;\n+    }\n+\n+    @Override\n+    public int hashCode() {\n+        int result = dynamoDbAsyncClient != null ? dynamoDbAsyncClient.hashCode() : 0;\n+        result = 31 * result + (mapperExtension != null ? mapperExtension.hashCode() : 0);\n+        return result;\n+    }\n+\n+    public static final class Builder {\n+        private DynamoDbAsyncClient dynamoDbAsyncClient;\n+        private MapperExtension mapperExtension;\n+\n+        public DynamoDbAsyncMappedDatabase build() {\n+            if (dynamoDbAsyncClient == null) {\n+                throw new IllegalArgumentException(\"You must provide a DynamoDbClient to build a \"\n+                                                   + \"DynamoDbMappedDatabase.\");\n+            }\n+\n+            return new DynamoDbAsyncMappedDatabase(dynamoDbAsyncClient, mapperExtension);\n+        }\n+\n+        public Builder dynamoDbAsyncClient(DynamoDbAsyncClient dynamoDbAsyncClient) {\n+            this.dynamoDbAsyncClient = dynamoDbAsyncClient;\n+            return this;\n+        }\n+\n+        public Builder extendWith(MapperExtension mapperExtension) {\n+            if (mapperExtension != null && this.mapperExtension != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5bb5ee928820fc30362e6df452ccfe6470471a57"}, "originalPosition": 110}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTc2ODA3MA==", "bodyText": "I'll look into that, sounds very fixable.", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1600#discussion_r369768070", "createdAt": "2020-01-22T19:48:56Z", "author": {"login": "bmaizels"}, "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/core/DynamoDbAsyncMappedDatabase.java", "diffHunk": "@@ -0,0 +1,120 @@\n+/*\n+ * Copyright 2010-2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.awssdk.extensions.dynamodb.mappingclient.core;\n+\n+import java.util.concurrent.CompletableFuture;\n+\n+import software.amazon.awssdk.annotations.SdkPublicApi;\n+import software.amazon.awssdk.annotations.ThreadSafe;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.AsyncMappedDatabase;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.DatabaseOperation;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.MapperExtension;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.TableSchema;\n+import software.amazon.awssdk.services.dynamodb.DynamoDbAsyncClient;\n+\n+@SdkPublicApi\n+@ThreadSafe\n+public class DynamoDbAsyncMappedDatabase implements AsyncMappedDatabase {\n+    private final DynamoDbAsyncClient dynamoDbAsyncClient;\n+    private final MapperExtension mapperExtension;\n+\n+    private DynamoDbAsyncMappedDatabase(DynamoDbAsyncClient dynamoDbAsyncClient, MapperExtension mapperExtension) {\n+        this.dynamoDbAsyncClient = dynamoDbAsyncClient;\n+        this.mapperExtension = mapperExtension;\n+    }\n+\n+    public static Builder builder() {\n+        return new Builder();\n+    }\n+\n+    @Override\n+    public <T> CompletableFuture<T> execute(DatabaseOperation<?, ?, T> operation) {\n+        return operation.executeAsync(dynamoDbAsyncClient, mapperExtension);\n+    }\n+\n+    @Override\n+    public <T> DynamoDbAsyncMappedTable<T> table(String tableName, TableSchema<T> tableSchema) {\n+        return new DynamoDbAsyncMappedTable<>(dynamoDbAsyncClient, mapperExtension, tableSchema, tableName);\n+    }\n+\n+    public DynamoDbAsyncClient dynamoDbAsyncClient() {\n+        return dynamoDbAsyncClient;\n+    }\n+\n+    public MapperExtension mapperExtension() {\n+        return mapperExtension;\n+    }\n+\n+    public Builder toBuilder() {\n+        return builder().dynamoDbAsyncClient(this.dynamoDbAsyncClient).extendWith(this.mapperExtension);\n+    }\n+\n+    @Override\n+    public boolean equals(Object o) {\n+        if (this == o) {\n+            return true;\n+        }\n+        if (o == null || getClass() != o.getClass()) {\n+            return false;\n+        }\n+\n+        DynamoDbAsyncMappedDatabase that = (DynamoDbAsyncMappedDatabase) o;\n+\n+        if (dynamoDbAsyncClient != null ? !dynamoDbAsyncClient.equals(that.dynamoDbAsyncClient)\n+            : that.dynamoDbAsyncClient != null) {\n+\n+            return false;\n+        }\n+        return mapperExtension != null ? mapperExtension.equals(that.mapperExtension) : that.mapperExtension == null;\n+    }\n+\n+    @Override\n+    public int hashCode() {\n+        int result = dynamoDbAsyncClient != null ? dynamoDbAsyncClient.hashCode() : 0;\n+        result = 31 * result + (mapperExtension != null ? mapperExtension.hashCode() : 0);\n+        return result;\n+    }\n+\n+    public static final class Builder {\n+        private DynamoDbAsyncClient dynamoDbAsyncClient;\n+        private MapperExtension mapperExtension;\n+\n+        public DynamoDbAsyncMappedDatabase build() {\n+            if (dynamoDbAsyncClient == null) {\n+                throw new IllegalArgumentException(\"You must provide a DynamoDbClient to build a \"\n+                                                   + \"DynamoDbMappedDatabase.\");\n+            }\n+\n+            return new DynamoDbAsyncMappedDatabase(dynamoDbAsyncClient, mapperExtension);\n+        }\n+\n+        public Builder dynamoDbAsyncClient(DynamoDbAsyncClient dynamoDbAsyncClient) {\n+            this.dynamoDbAsyncClient = dynamoDbAsyncClient;\n+            return this;\n+        }\n+\n+        public Builder extendWith(MapperExtension mapperExtension) {\n+            if (mapperExtension != null && this.mapperExtension != null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTI5NTQ2NQ=="}, "originalCommit": {"oid": "5bb5ee928820fc30362e6df452ccfe6470471a57"}, "originalPosition": 110}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDI0NDQ5NA==", "bodyText": "Decided not to do this after looking at the implementation of mutuallyExclusive. I think it's overkill for just checking two things.", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1600#discussion_r370244494", "createdAt": "2020-01-23T17:07:17Z", "author": {"login": "bmaizels"}, "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/core/DynamoDbAsyncMappedDatabase.java", "diffHunk": "@@ -0,0 +1,120 @@\n+/*\n+ * Copyright 2010-2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.awssdk.extensions.dynamodb.mappingclient.core;\n+\n+import java.util.concurrent.CompletableFuture;\n+\n+import software.amazon.awssdk.annotations.SdkPublicApi;\n+import software.amazon.awssdk.annotations.ThreadSafe;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.AsyncMappedDatabase;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.DatabaseOperation;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.MapperExtension;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.TableSchema;\n+import software.amazon.awssdk.services.dynamodb.DynamoDbAsyncClient;\n+\n+@SdkPublicApi\n+@ThreadSafe\n+public class DynamoDbAsyncMappedDatabase implements AsyncMappedDatabase {\n+    private final DynamoDbAsyncClient dynamoDbAsyncClient;\n+    private final MapperExtension mapperExtension;\n+\n+    private DynamoDbAsyncMappedDatabase(DynamoDbAsyncClient dynamoDbAsyncClient, MapperExtension mapperExtension) {\n+        this.dynamoDbAsyncClient = dynamoDbAsyncClient;\n+        this.mapperExtension = mapperExtension;\n+    }\n+\n+    public static Builder builder() {\n+        return new Builder();\n+    }\n+\n+    @Override\n+    public <T> CompletableFuture<T> execute(DatabaseOperation<?, ?, T> operation) {\n+        return operation.executeAsync(dynamoDbAsyncClient, mapperExtension);\n+    }\n+\n+    @Override\n+    public <T> DynamoDbAsyncMappedTable<T> table(String tableName, TableSchema<T> tableSchema) {\n+        return new DynamoDbAsyncMappedTable<>(dynamoDbAsyncClient, mapperExtension, tableSchema, tableName);\n+    }\n+\n+    public DynamoDbAsyncClient dynamoDbAsyncClient() {\n+        return dynamoDbAsyncClient;\n+    }\n+\n+    public MapperExtension mapperExtension() {\n+        return mapperExtension;\n+    }\n+\n+    public Builder toBuilder() {\n+        return builder().dynamoDbAsyncClient(this.dynamoDbAsyncClient).extendWith(this.mapperExtension);\n+    }\n+\n+    @Override\n+    public boolean equals(Object o) {\n+        if (this == o) {\n+            return true;\n+        }\n+        if (o == null || getClass() != o.getClass()) {\n+            return false;\n+        }\n+\n+        DynamoDbAsyncMappedDatabase that = (DynamoDbAsyncMappedDatabase) o;\n+\n+        if (dynamoDbAsyncClient != null ? !dynamoDbAsyncClient.equals(that.dynamoDbAsyncClient)\n+            : that.dynamoDbAsyncClient != null) {\n+\n+            return false;\n+        }\n+        return mapperExtension != null ? mapperExtension.equals(that.mapperExtension) : that.mapperExtension == null;\n+    }\n+\n+    @Override\n+    public int hashCode() {\n+        int result = dynamoDbAsyncClient != null ? dynamoDbAsyncClient.hashCode() : 0;\n+        result = 31 * result + (mapperExtension != null ? mapperExtension.hashCode() : 0);\n+        return result;\n+    }\n+\n+    public static final class Builder {\n+        private DynamoDbAsyncClient dynamoDbAsyncClient;\n+        private MapperExtension mapperExtension;\n+\n+        public DynamoDbAsyncMappedDatabase build() {\n+            if (dynamoDbAsyncClient == null) {\n+                throw new IllegalArgumentException(\"You must provide a DynamoDbClient to build a \"\n+                                                   + \"DynamoDbMappedDatabase.\");\n+            }\n+\n+            return new DynamoDbAsyncMappedDatabase(dynamoDbAsyncClient, mapperExtension);\n+        }\n+\n+        public Builder dynamoDbAsyncClient(DynamoDbAsyncClient dynamoDbAsyncClient) {\n+            this.dynamoDbAsyncClient = dynamoDbAsyncClient;\n+            return this;\n+        }\n+\n+        public Builder extendWith(MapperExtension mapperExtension) {\n+            if (mapperExtension != null && this.mapperExtension != null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTI5NTQ2NQ=="}, "originalCommit": {"oid": "5bb5ee928820fc30362e6df452ccfe6470471a57"}, "originalPosition": 110}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4MjcwMTg3OnYy", "diffSide": "RIGHT", "path": "services-custom/dynamodb-enhanced/README.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQwMjowNjo1M1rOFgOqsA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQxOTo0OTozNVrOFgo3yA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTMzOTA1Ng==", "bodyText": "Seems a bit verbose. How about just dynamoDbClient?\nFor SDK http client builder method, we don't have async or sync on the method name; they both are #httpClient", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1600#discussion_r369339056", "createdAt": "2020-01-22T02:06:53Z", "author": {"login": "zoewangg"}, "path": "services-custom/dynamodb-enhanced/README.md", "diffHunk": "@@ -123,6 +123,42 @@ index. Here's an example of how to do this:\n    Iterable<Page<Customer>> customersWithName = customersByName.query(equalTo(Key.of(stringValue(\"Smith\"))));\n    ```\n \n+### Non-blocking asynchronous operations\n+If your application requires non-blocking asynchronous calls to\n+DynamoDb, then you can use the asynchronous implementation of the\n+mapper. It's very similar to the synchronous implementation with a few\n+key differences:\n+\n+1. When instantiating the mapped database, use the asynchronous version\n+   of the library instead of the synchronous one (you will need to use\n+   an asynchronous DynamoDb client from the SDK as well):\n+   ```java\n+    AsyncMappedDatabase database = DynamoDbAsyncMappedDatabase.builder()\n+                                                              .dynamoDbAsyncClient(dynamoDbAsyncClient)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "247f8555b51210f0a3b964b1145d9bf3fa5bf1ff"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTc2ODM5Mg==", "bodyText": "Okay. I'll change the name of the member variable too then.", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1600#discussion_r369768392", "createdAt": "2020-01-22T19:49:35Z", "author": {"login": "bmaizels"}, "path": "services-custom/dynamodb-enhanced/README.md", "diffHunk": "@@ -123,6 +123,42 @@ index. Here's an example of how to do this:\n    Iterable<Page<Customer>> customersWithName = customersByName.query(equalTo(Key.of(stringValue(\"Smith\"))));\n    ```\n \n+### Non-blocking asynchronous operations\n+If your application requires non-blocking asynchronous calls to\n+DynamoDb, then you can use the asynchronous implementation of the\n+mapper. It's very similar to the synchronous implementation with a few\n+key differences:\n+\n+1. When instantiating the mapped database, use the asynchronous version\n+   of the library instead of the synchronous one (you will need to use\n+   an asynchronous DynamoDb client from the SDK as well):\n+   ```java\n+    AsyncMappedDatabase database = DynamoDbAsyncMappedDatabase.builder()\n+                                                              .dynamoDbAsyncClient(dynamoDbAsyncClient)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTMzOTA1Ng=="}, "originalCommit": {"oid": "247f8555b51210f0a3b964b1145d9bf3fa5bf1ff"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4MjcwODgwOnYy", "diffSide": "RIGHT", "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/core/DynamoDbAsyncMappedTable.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQwMjoxMToyNlrOFgOu2g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQxOTo0ODoyNFrOFgo1iQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTM0MDEyMg==", "bodyText": "Is this class a public api? Asking because the ctor is not public and has multiple parameters.", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1600#discussion_r369340122", "createdAt": "2020-01-22T02:11:26Z", "author": {"login": "zoewangg"}, "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/core/DynamoDbAsyncMappedTable.java", "diffHunk": "@@ -0,0 +1,132 @@\n+/*\n+ * Copyright 2010-2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.awssdk.extensions.dynamodb.mappingclient.core;\n+\n+import static software.amazon.awssdk.extensions.dynamodb.mappingclient.core.Utils.createKeyFromItem;\n+\n+import java.util.concurrent.CompletableFuture;\n+\n+import software.amazon.awssdk.annotations.SdkPublicApi;\n+import software.amazon.awssdk.annotations.ThreadSafe;\n+import software.amazon.awssdk.core.async.SdkPublisher;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.AsyncMappedTable;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.Key;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.MapperExtension;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.PaginatedTableOperation;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.TableMetadata;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.TableOperation;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.TableSchema;\n+import software.amazon.awssdk.services.dynamodb.DynamoDbAsyncClient;\n+\n+@SdkPublicApi\n+@ThreadSafe\n+public class DynamoDbAsyncMappedTable<T> implements AsyncMappedTable<T> {\n+    private final DynamoDbAsyncClient dynamoDbAsyncClient;\n+    private final MapperExtension mapperExtension;\n+    private final TableSchema<T> tableSchema;\n+    private final String tableName;\n+\n+    DynamoDbAsyncMappedTable(DynamoDbAsyncClient dynamoDbAsyncClient,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "247f8555b51210f0a3b964b1145d9bf3fa5bf1ff"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTc2NzgxNw==", "bodyText": "It has a builder, and it's implementing a public interface. We should iron this out either in the builder style task or the overall surface area audit we plan to do. I don't think we should tackle it here and now as part of the async change (this class just mirrors the existing sync version)", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1600#discussion_r369767817", "createdAt": "2020-01-22T19:48:24Z", "author": {"login": "bmaizels"}, "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/core/DynamoDbAsyncMappedTable.java", "diffHunk": "@@ -0,0 +1,132 @@\n+/*\n+ * Copyright 2010-2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.awssdk.extensions.dynamodb.mappingclient.core;\n+\n+import static software.amazon.awssdk.extensions.dynamodb.mappingclient.core.Utils.createKeyFromItem;\n+\n+import java.util.concurrent.CompletableFuture;\n+\n+import software.amazon.awssdk.annotations.SdkPublicApi;\n+import software.amazon.awssdk.annotations.ThreadSafe;\n+import software.amazon.awssdk.core.async.SdkPublisher;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.AsyncMappedTable;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.Key;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.MapperExtension;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.PaginatedTableOperation;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.TableMetadata;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.TableOperation;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.TableSchema;\n+import software.amazon.awssdk.services.dynamodb.DynamoDbAsyncClient;\n+\n+@SdkPublicApi\n+@ThreadSafe\n+public class DynamoDbAsyncMappedTable<T> implements AsyncMappedTable<T> {\n+    private final DynamoDbAsyncClient dynamoDbAsyncClient;\n+    private final MapperExtension mapperExtension;\n+    private final TableSchema<T> tableSchema;\n+    private final String tableName;\n+\n+    DynamoDbAsyncMappedTable(DynamoDbAsyncClient dynamoDbAsyncClient,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTM0MDEyMg=="}, "originalCommit": {"oid": "247f8555b51210f0a3b964b1145d9bf3fa5bf1ff"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4MjcxMTAxOnYy", "diffSide": "RIGHT", "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/core/TransformPublisher.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQwMjoxMzowMlrOFgOwHQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQyMDoxNDo0M1rOFgpklQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTM0MDQ0NQ==", "bodyText": "We should probably move it to internal package.", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1600#discussion_r369340445", "createdAt": "2020-01-22T02:13:02Z", "author": {"login": "zoewangg"}, "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/core/TransformPublisher.java", "diffHunk": "@@ -0,0 +1,73 @@\n+/*\n+ * Copyright 2010-2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.awssdk.extensions.dynamodb.mappingclient.core;\n+\n+import java.util.function.Function;\n+\n+import org.reactivestreams.Subscriber;\n+import org.reactivestreams.Subscription;\n+\n+import software.amazon.awssdk.annotations.SdkInternalApi;\n+import software.amazon.awssdk.core.async.SdkPublisher;\n+\n+@SdkInternalApi", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "247f8555b51210f0a3b964b1145d9bf3fa5bf1ff"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTc2ODg3Mg==", "bodyText": "I don't want to tackle that as part of this change. This class is in the right place based on the current structure of the package (it's a kind of mirror of the pre-existing TransformIterator), but I agree that we should eventually refactor these package names once we have finalized what's internal and not.", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1600#discussion_r369768872", "createdAt": "2020-01-22T19:50:35Z", "author": {"login": "bmaizels"}, "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/core/TransformPublisher.java", "diffHunk": "@@ -0,0 +1,73 @@\n+/*\n+ * Copyright 2010-2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.awssdk.extensions.dynamodb.mappingclient.core;\n+\n+import java.util.function.Function;\n+\n+import org.reactivestreams.Subscriber;\n+import org.reactivestreams.Subscription;\n+\n+import software.amazon.awssdk.annotations.SdkInternalApi;\n+import software.amazon.awssdk.core.async.SdkPublisher;\n+\n+@SdkInternalApi", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTM0MDQ0NQ=="}, "originalCommit": {"oid": "247f8555b51210f0a3b964b1145d9bf3fa5bf1ff"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTc3OTg2MQ==", "bodyText": "Sounds good.", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1600#discussion_r369779861", "createdAt": "2020-01-22T20:14:43Z", "author": {"login": "zoewangg"}, "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/core/TransformPublisher.java", "diffHunk": "@@ -0,0 +1,73 @@\n+/*\n+ * Copyright 2010-2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.awssdk.extensions.dynamodb.mappingclient.core;\n+\n+import java.util.function.Function;\n+\n+import org.reactivestreams.Subscriber;\n+import org.reactivestreams.Subscription;\n+\n+import software.amazon.awssdk.annotations.SdkInternalApi;\n+import software.amazon.awssdk.core.async.SdkPublisher;\n+\n+@SdkInternalApi", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTM0MDQ0NQ=="}, "originalCommit": {"oid": "247f8555b51210f0a3b964b1145d9bf3fa5bf1ff"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4MjcxMzkyOnYy", "diffSide": "RIGHT", "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/core/TransformPublisher.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQwMjoxNDo1N1rOFgOx3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQyMDoyMDoyMFrOFgpung==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTM0MDg5Mw==", "bodyText": "Can we add some javadocs to this class?\nIt seems like this is a generic publisher; should we move it to core?", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1600#discussion_r369340893", "createdAt": "2020-01-22T02:14:57Z", "author": {"login": "zoewangg"}, "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/core/TransformPublisher.java", "diffHunk": "@@ -0,0 +1,73 @@\n+/*\n+ * Copyright 2010-2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.awssdk.extensions.dynamodb.mappingclient.core;\n+\n+import java.util.function.Function;\n+\n+import org.reactivestreams.Subscriber;\n+import org.reactivestreams.Subscription;\n+\n+import software.amazon.awssdk.annotations.SdkInternalApi;\n+import software.amazon.awssdk.core.async.SdkPublisher;\n+\n+@SdkInternalApi", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "247f8555b51210f0a3b964b1145d9bf3fa5bf1ff"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTc2OTI5Mw==", "bodyText": "If we move this to core, I don't think it can be internal anymore? I'll add javadoc.", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1600#discussion_r369769293", "createdAt": "2020-01-22T19:51:24Z", "author": {"login": "bmaizels"}, "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/core/TransformPublisher.java", "diffHunk": "@@ -0,0 +1,73 @@\n+/*\n+ * Copyright 2010-2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.awssdk.extensions.dynamodb.mappingclient.core;\n+\n+import java.util.function.Function;\n+\n+import org.reactivestreams.Subscriber;\n+import org.reactivestreams.Subscription;\n+\n+import software.amazon.awssdk.annotations.SdkInternalApi;\n+import software.amazon.awssdk.core.async.SdkPublisher;\n+\n+@SdkInternalApi", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTM0MDg5Mw=="}, "originalCommit": {"oid": "247f8555b51210f0a3b964b1145d9bf3fa5bf1ff"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTc3OTUzMg==", "bodyText": "I'd vote for moving it to core and making it protected api. Not a blocker of this PR. We can probably add a todo there", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1600#discussion_r369779532", "createdAt": "2020-01-22T20:13:56Z", "author": {"login": "zoewangg"}, "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/core/TransformPublisher.java", "diffHunk": "@@ -0,0 +1,73 @@\n+/*\n+ * Copyright 2010-2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.awssdk.extensions.dynamodb.mappingclient.core;\n+\n+import java.util.function.Function;\n+\n+import org.reactivestreams.Subscriber;\n+import org.reactivestreams.Subscription;\n+\n+import software.amazon.awssdk.annotations.SdkInternalApi;\n+import software.amazon.awssdk.core.async.SdkPublisher;\n+\n+@SdkInternalApi", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTM0MDg5Mw=="}, "originalCommit": {"oid": "247f8555b51210f0a3b964b1145d9bf3fa5bf1ff"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTc4MjQzMA==", "bodyText": "I'll add a todo.", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1600#discussion_r369782430", "createdAt": "2020-01-22T20:20:20Z", "author": {"login": "bmaizels"}, "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/core/TransformPublisher.java", "diffHunk": "@@ -0,0 +1,73 @@\n+/*\n+ * Copyright 2010-2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.awssdk.extensions.dynamodb.mappingclient.core;\n+\n+import java.util.function.Function;\n+\n+import org.reactivestreams.Subscriber;\n+import org.reactivestreams.Subscription;\n+\n+import software.amazon.awssdk.annotations.SdkInternalApi;\n+import software.amazon.awssdk.core.async.SdkPublisher;\n+\n+@SdkInternalApi", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTM0MDg5Mw=="}, "originalCommit": {"oid": "247f8555b51210f0a3b964b1145d9bf3fa5bf1ff"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4MjcyMTgyOnYy", "diffSide": "RIGHT", "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/core/DynamoDbAsyncMappedIndex.java", "isResolved": true, "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQwMjoyMToxOVrOFgO2yQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQyMDoyODo1MVrOFgp9FA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTM0MjE1Mw==", "bodyText": "Same question, will this class directly be used by customers? the ctor is not public", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1600#discussion_r369342153", "createdAt": "2020-01-22T02:21:19Z", "author": {"login": "zoewangg"}, "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/core/DynamoDbAsyncMappedIndex.java", "diffHunk": "@@ -0,0 +1,136 @@\n+/*\n+ * Copyright 2010-2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.awssdk.extensions.dynamodb.mappingclient.core;\n+\n+import static software.amazon.awssdk.extensions.dynamodb.mappingclient.core.Utils.createKeyFromItem;\n+\n+import java.util.concurrent.CompletableFuture;\n+\n+import software.amazon.awssdk.annotations.SdkPublicApi;\n+import software.amazon.awssdk.annotations.ThreadSafe;\n+import software.amazon.awssdk.core.async.SdkPublisher;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.AsyncMappedIndex;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.IndexOperation;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.Key;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.MapperExtension;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.PaginatedIndexOperation;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.TableSchema;\n+import software.amazon.awssdk.services.dynamodb.DynamoDbAsyncClient;\n+\n+@SdkPublicApi\n+@ThreadSafe\n+public class DynamoDbAsyncMappedIndex<T> implements AsyncMappedIndex<T> {\n+    private final DynamoDbAsyncClient dynamoDbAsyncClient;\n+    private final MapperExtension mapperExtension;\n+    private final TableSchema<T> tableSchema;\n+    private final String tableName;\n+    private final String indexName;\n+\n+    DynamoDbAsyncMappedIndex(DynamoDbAsyncClient dynamoDbAsyncClient,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "247f8555b51210f0a3b964b1145d9bf3fa5bf1ff"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTc2OTg2NA==", "bodyText": "It's implementing a public interface. The class itself doesn't need to be public. We should review all the classes in one go as a separate task for surface area, I'd like to defer on this for now.", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1600#discussion_r369769864", "createdAt": "2020-01-22T19:52:29Z", "author": {"login": "bmaizels"}, "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/core/DynamoDbAsyncMappedIndex.java", "diffHunk": "@@ -0,0 +1,136 @@\n+/*\n+ * Copyright 2010-2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.awssdk.extensions.dynamodb.mappingclient.core;\n+\n+import static software.amazon.awssdk.extensions.dynamodb.mappingclient.core.Utils.createKeyFromItem;\n+\n+import java.util.concurrent.CompletableFuture;\n+\n+import software.amazon.awssdk.annotations.SdkPublicApi;\n+import software.amazon.awssdk.annotations.ThreadSafe;\n+import software.amazon.awssdk.core.async.SdkPublisher;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.AsyncMappedIndex;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.IndexOperation;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.Key;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.MapperExtension;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.PaginatedIndexOperation;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.TableSchema;\n+import software.amazon.awssdk.services.dynamodb.DynamoDbAsyncClient;\n+\n+@SdkPublicApi\n+@ThreadSafe\n+public class DynamoDbAsyncMappedIndex<T> implements AsyncMappedIndex<T> {\n+    private final DynamoDbAsyncClient dynamoDbAsyncClient;\n+    private final MapperExtension mapperExtension;\n+    private final TableSchema<T> tableSchema;\n+    private final String tableName;\n+    private final String indexName;\n+\n+    DynamoDbAsyncMappedIndex(DynamoDbAsyncClient dynamoDbAsyncClient,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTM0MjE1Mw=="}, "originalCommit": {"oid": "247f8555b51210f0a3b964b1145d9bf3fa5bf1ff"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTc3ODk4MQ==", "bodyText": "I see, so this is more like a test api? Can we annotate it with @SdkTestInternalApi to make it more clear?", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1600#discussion_r369778981", "createdAt": "2020-01-22T20:12:43Z", "author": {"login": "zoewangg"}, "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/core/DynamoDbAsyncMappedIndex.java", "diffHunk": "@@ -0,0 +1,136 @@\n+/*\n+ * Copyright 2010-2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.awssdk.extensions.dynamodb.mappingclient.core;\n+\n+import static software.amazon.awssdk.extensions.dynamodb.mappingclient.core.Utils.createKeyFromItem;\n+\n+import java.util.concurrent.CompletableFuture;\n+\n+import software.amazon.awssdk.annotations.SdkPublicApi;\n+import software.amazon.awssdk.annotations.ThreadSafe;\n+import software.amazon.awssdk.core.async.SdkPublisher;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.AsyncMappedIndex;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.IndexOperation;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.Key;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.MapperExtension;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.PaginatedIndexOperation;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.TableSchema;\n+import software.amazon.awssdk.services.dynamodb.DynamoDbAsyncClient;\n+\n+@SdkPublicApi\n+@ThreadSafe\n+public class DynamoDbAsyncMappedIndex<T> implements AsyncMappedIndex<T> {\n+    private final DynamoDbAsyncClient dynamoDbAsyncClient;\n+    private final MapperExtension mapperExtension;\n+    private final TableSchema<T> tableSchema;\n+    private final String tableName;\n+    private final String indexName;\n+\n+    DynamoDbAsyncMappedIndex(DynamoDbAsyncClient dynamoDbAsyncClient,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTM0MjE1Mw=="}, "originalCommit": {"oid": "247f8555b51210f0a3b964b1145d9bf3fa5bf1ff"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTc4MjkyMw==", "bodyText": "No, definitely not a test class, it's roughly analogous to DefaultS3Client implementing S3Client. We'll correctly categorize it when we execute the backlog item to audit surface area of all classes.", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1600#discussion_r369782923", "createdAt": "2020-01-22T20:21:20Z", "author": {"login": "bmaizels"}, "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/core/DynamoDbAsyncMappedIndex.java", "diffHunk": "@@ -0,0 +1,136 @@\n+/*\n+ * Copyright 2010-2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.awssdk.extensions.dynamodb.mappingclient.core;\n+\n+import static software.amazon.awssdk.extensions.dynamodb.mappingclient.core.Utils.createKeyFromItem;\n+\n+import java.util.concurrent.CompletableFuture;\n+\n+import software.amazon.awssdk.annotations.SdkPublicApi;\n+import software.amazon.awssdk.annotations.ThreadSafe;\n+import software.amazon.awssdk.core.async.SdkPublisher;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.AsyncMappedIndex;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.IndexOperation;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.Key;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.MapperExtension;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.PaginatedIndexOperation;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.TableSchema;\n+import software.amazon.awssdk.services.dynamodb.DynamoDbAsyncClient;\n+\n+@SdkPublicApi\n+@ThreadSafe\n+public class DynamoDbAsyncMappedIndex<T> implements AsyncMappedIndex<T> {\n+    private final DynamoDbAsyncClient dynamoDbAsyncClient;\n+    private final MapperExtension mapperExtension;\n+    private final TableSchema<T> tableSchema;\n+    private final String tableName;\n+    private final String indexName;\n+\n+    DynamoDbAsyncMappedIndex(DynamoDbAsyncClient dynamoDbAsyncClient,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTM0MjE1Mw=="}, "originalCommit": {"oid": "247f8555b51210f0a3b964b1145d9bf3fa5bf1ff"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTc4NDE1Mg==", "bodyText": "I meant adding the annotation on the ctor if it is only used for testing.", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1600#discussion_r369784152", "createdAt": "2020-01-22T20:24:01Z", "author": {"login": "zoewangg"}, "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/core/DynamoDbAsyncMappedIndex.java", "diffHunk": "@@ -0,0 +1,136 @@\n+/*\n+ * Copyright 2010-2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.awssdk.extensions.dynamodb.mappingclient.core;\n+\n+import static software.amazon.awssdk.extensions.dynamodb.mappingclient.core.Utils.createKeyFromItem;\n+\n+import java.util.concurrent.CompletableFuture;\n+\n+import software.amazon.awssdk.annotations.SdkPublicApi;\n+import software.amazon.awssdk.annotations.ThreadSafe;\n+import software.amazon.awssdk.core.async.SdkPublisher;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.AsyncMappedIndex;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.IndexOperation;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.Key;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.MapperExtension;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.PaginatedIndexOperation;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.TableSchema;\n+import software.amazon.awssdk.services.dynamodb.DynamoDbAsyncClient;\n+\n+@SdkPublicApi\n+@ThreadSafe\n+public class DynamoDbAsyncMappedIndex<T> implements AsyncMappedIndex<T> {\n+    private final DynamoDbAsyncClient dynamoDbAsyncClient;\n+    private final MapperExtension mapperExtension;\n+    private final TableSchema<T> tableSchema;\n+    private final String tableName;\n+    private final String indexName;\n+\n+    DynamoDbAsyncMappedIndex(DynamoDbAsyncClient dynamoDbAsyncClient,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTM0MjE1Mw=="}, "originalCommit": {"oid": "247f8555b51210f0a3b964b1145d9bf3fa5bf1ff"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTc4NTk3NQ==", "bodyText": "Oh no sorry I was looking at the wrong thing. This object is created by a DynamoDbAsyncMappedTable when table(...) is called. The constructor is package protected to prevent direct instantiation from outside of that.", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1600#discussion_r369785975", "createdAt": "2020-01-22T20:28:32Z", "author": {"login": "bmaizels"}, "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/core/DynamoDbAsyncMappedIndex.java", "diffHunk": "@@ -0,0 +1,136 @@\n+/*\n+ * Copyright 2010-2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.awssdk.extensions.dynamodb.mappingclient.core;\n+\n+import static software.amazon.awssdk.extensions.dynamodb.mappingclient.core.Utils.createKeyFromItem;\n+\n+import java.util.concurrent.CompletableFuture;\n+\n+import software.amazon.awssdk.annotations.SdkPublicApi;\n+import software.amazon.awssdk.annotations.ThreadSafe;\n+import software.amazon.awssdk.core.async.SdkPublisher;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.AsyncMappedIndex;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.IndexOperation;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.Key;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.MapperExtension;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.PaginatedIndexOperation;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.TableSchema;\n+import software.amazon.awssdk.services.dynamodb.DynamoDbAsyncClient;\n+\n+@SdkPublicApi\n+@ThreadSafe\n+public class DynamoDbAsyncMappedIndex<T> implements AsyncMappedIndex<T> {\n+    private final DynamoDbAsyncClient dynamoDbAsyncClient;\n+    private final MapperExtension mapperExtension;\n+    private final TableSchema<T> tableSchema;\n+    private final String tableName;\n+    private final String indexName;\n+\n+    DynamoDbAsyncMappedIndex(DynamoDbAsyncClient dynamoDbAsyncClient,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTM0MjE1Mw=="}, "originalCommit": {"oid": "247f8555b51210f0a3b964b1145d9bf3fa5bf1ff"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTc4NjEzMg==", "bodyText": "Sorry when index(...) is called (not table)", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1600#discussion_r369786132", "createdAt": "2020-01-22T20:28:51Z", "author": {"login": "bmaizels"}, "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/core/DynamoDbAsyncMappedIndex.java", "diffHunk": "@@ -0,0 +1,136 @@\n+/*\n+ * Copyright 2010-2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.awssdk.extensions.dynamodb.mappingclient.core;\n+\n+import static software.amazon.awssdk.extensions.dynamodb.mappingclient.core.Utils.createKeyFromItem;\n+\n+import java.util.concurrent.CompletableFuture;\n+\n+import software.amazon.awssdk.annotations.SdkPublicApi;\n+import software.amazon.awssdk.annotations.ThreadSafe;\n+import software.amazon.awssdk.core.async.SdkPublisher;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.AsyncMappedIndex;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.IndexOperation;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.Key;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.MapperExtension;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.PaginatedIndexOperation;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.TableSchema;\n+import software.amazon.awssdk.services.dynamodb.DynamoDbAsyncClient;\n+\n+@SdkPublicApi\n+@ThreadSafe\n+public class DynamoDbAsyncMappedIndex<T> implements AsyncMappedIndex<T> {\n+    private final DynamoDbAsyncClient dynamoDbAsyncClient;\n+    private final MapperExtension mapperExtension;\n+    private final TableSchema<T> tableSchema;\n+    private final String tableName;\n+    private final String indexName;\n+\n+    DynamoDbAsyncMappedIndex(DynamoDbAsyncClient dynamoDbAsyncClient,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTM0MjE1Mw=="}, "originalCommit": {"oid": "247f8555b51210f0a3b964b1145d9bf3fa5bf1ff"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4MjcyMjI1OnYy", "diffSide": "RIGHT", "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/core/DynamoDbAsyncMappedTable.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQwMjoyMTozNFrOFgO3DA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQxOTo1Mjo0MVrOFgo92Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTM0MjIyMA==", "bodyText": "final", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1600#discussion_r369342220", "createdAt": "2020-01-22T02:21:34Z", "author": {"login": "zoewangg"}, "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/core/DynamoDbAsyncMappedTable.java", "diffHunk": "@@ -0,0 +1,132 @@\n+/*\n+ * Copyright 2010-2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.awssdk.extensions.dynamodb.mappingclient.core;\n+\n+import static software.amazon.awssdk.extensions.dynamodb.mappingclient.core.Utils.createKeyFromItem;\n+\n+import java.util.concurrent.CompletableFuture;\n+\n+import software.amazon.awssdk.annotations.SdkPublicApi;\n+import software.amazon.awssdk.annotations.ThreadSafe;\n+import software.amazon.awssdk.core.async.SdkPublisher;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.AsyncMappedTable;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.Key;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.MapperExtension;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.PaginatedTableOperation;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.TableMetadata;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.TableOperation;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.TableSchema;\n+import software.amazon.awssdk.services.dynamodb.DynamoDbAsyncClient;\n+\n+@SdkPublicApi\n+@ThreadSafe\n+public class DynamoDbAsyncMappedTable<T> implements AsyncMappedTable<T> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "247f8555b51210f0a3b964b1145d9bf3fa5bf1ff"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTc2OTk0NQ==", "bodyText": "Will fix.", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1600#discussion_r369769945", "createdAt": "2020-01-22T19:52:41Z", "author": {"login": "bmaizels"}, "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/core/DynamoDbAsyncMappedTable.java", "diffHunk": "@@ -0,0 +1,132 @@\n+/*\n+ * Copyright 2010-2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.awssdk.extensions.dynamodb.mappingclient.core;\n+\n+import static software.amazon.awssdk.extensions.dynamodb.mappingclient.core.Utils.createKeyFromItem;\n+\n+import java.util.concurrent.CompletableFuture;\n+\n+import software.amazon.awssdk.annotations.SdkPublicApi;\n+import software.amazon.awssdk.annotations.ThreadSafe;\n+import software.amazon.awssdk.core.async.SdkPublisher;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.AsyncMappedTable;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.Key;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.MapperExtension;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.PaginatedTableOperation;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.TableMetadata;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.TableOperation;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.TableSchema;\n+import software.amazon.awssdk.services.dynamodb.DynamoDbAsyncClient;\n+\n+@SdkPublicApi\n+@ThreadSafe\n+public class DynamoDbAsyncMappedTable<T> implements AsyncMappedTable<T> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTM0MjIyMA=="}, "originalCommit": {"oid": "247f8555b51210f0a3b964b1145d9bf3fa5bf1ff"}, "originalPosition": 36}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4317, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}