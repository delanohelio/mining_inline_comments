{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA4NzYwNzU4", "number": 1791, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQyMTo1MjozMFrOD1-H4Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQyMjoxMToyNlrOD1-btA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3OTE4OTQ1OnYy", "diffSide": "RIGHT", "path": "core/auth/src/main/java/software/amazon/awssdk/auth/signer/internal/AbstractAws4Signer.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQyMTo1MjozMFrOGLqiLA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQyMjozNTowM1rOGLrfqA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDg4NDM5Ng==", "bodyText": "NIT: it's easier to read if canonicalizeSigningHeaders is nearer to getCanonicalizedHeaderString and getSignedHeadersString. Found myself scrolling up and down.", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1791#discussion_r414884396", "createdAt": "2020-04-24T21:52:30Z", "author": {"login": "cenedhryn"}, "path": "core/auth/src/main/java/software/amazon/awssdk/auth/signer/internal/AbstractAws4Signer.java", "diffHunk": "@@ -191,26 +204,42 @@ protected abstract void processRequestPayload(SdkHttpFullRequest.Builder mutable\n      * generate the canonical request.\n      */\n     private String createCanonicalRequest(SdkHttpFullRequest.Builder request,\n+                                          Map<String, List<String>> canonicalHeaders,\n+                                          String signedHeadersString,\n                                           String contentSha256,\n                                           boolean doubleUrlEncode) {\n-\n         String canonicalRequest = request.method().toString() +\n                                   SignerConstant.LINE_SEPARATOR +\n                                   // This would optionally double url-encode the resource path\n                                   getCanonicalizedResourcePath(request.encodedPath(), doubleUrlEncode) +\n                                   SignerConstant.LINE_SEPARATOR +\n                                   getCanonicalizedQueryString(request.rawQueryParameters()) +\n                                   SignerConstant.LINE_SEPARATOR +\n-                                  getCanonicalizedHeaderString(request.headers()) +\n+                                  getCanonicalizedHeaderString(canonicalHeaders) +\n                                   SignerConstant.LINE_SEPARATOR +\n-                                  getSignedHeadersString(request.headers()) +\n+                                  signedHeadersString +\n                                   SignerConstant.LINE_SEPARATOR +\n                                   contentSha256;\n \n         LOG.trace(() -> \"AWS4 Canonical Request: \" + canonicalRequest);\n         return canonicalRequest;\n     }\n \n+    private Map<String, List<String>> canonicalizeSigningHeaders(Map<String, List<String>> headers) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e36c6c3c9a4285d7d6422259b6dd283713c589a8"}, "originalPosition": 80}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDkwMDEzNg==", "bodyText": "Fixed!", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1791#discussion_r414900136", "createdAt": "2020-04-24T22:35:03Z", "author": {"login": "millems"}, "path": "core/auth/src/main/java/software/amazon/awssdk/auth/signer/internal/AbstractAws4Signer.java", "diffHunk": "@@ -191,26 +204,42 @@ protected abstract void processRequestPayload(SdkHttpFullRequest.Builder mutable\n      * generate the canonical request.\n      */\n     private String createCanonicalRequest(SdkHttpFullRequest.Builder request,\n+                                          Map<String, List<String>> canonicalHeaders,\n+                                          String signedHeadersString,\n                                           String contentSha256,\n                                           boolean doubleUrlEncode) {\n-\n         String canonicalRequest = request.method().toString() +\n                                   SignerConstant.LINE_SEPARATOR +\n                                   // This would optionally double url-encode the resource path\n                                   getCanonicalizedResourcePath(request.encodedPath(), doubleUrlEncode) +\n                                   SignerConstant.LINE_SEPARATOR +\n                                   getCanonicalizedQueryString(request.rawQueryParameters()) +\n                                   SignerConstant.LINE_SEPARATOR +\n-                                  getCanonicalizedHeaderString(request.headers()) +\n+                                  getCanonicalizedHeaderString(canonicalHeaders) +\n                                   SignerConstant.LINE_SEPARATOR +\n-                                  getSignedHeadersString(request.headers()) +\n+                                  signedHeadersString +\n                                   SignerConstant.LINE_SEPARATOR +\n                                   contentSha256;\n \n         LOG.trace(() -> \"AWS4 Canonical Request: \" + canonicalRequest);\n         return canonicalRequest;\n     }\n \n+    private Map<String, List<String>> canonicalizeSigningHeaders(Map<String, List<String>> headers) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDg4NDM5Ng=="}, "originalCommit": {"oid": "e36c6c3c9a4285d7d6422259b6dd283713c589a8"}, "originalPosition": 80}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3OTI0MDIwOnYy", "diffSide": "RIGHT", "path": "http-client-spi/src/main/java/software/amazon/awssdk/http/DefaultSdkHttpFullRequest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQyMjoxMToyNlrOGLq-bA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQyMjozMzoxOVrOGLrdYg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDg5MTYyOA==", "bodyText": "Substance over beauty!", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1791#discussion_r414891628", "createdAt": "2020-04-24T22:11:26Z", "author": {"login": "cenedhryn"}, "path": "http-client-spi/src/main/java/software/amazon/awssdk/http/DefaultSdkHttpFullRequest.java", "diffHunk": "@@ -172,12 +169,35 @@ public String toString() {\n         private String host;\n         private Integer port;\n         private String path;\n-        private Map<String, List<String>> queryParameters = new LinkedHashMap<>();\n+\n+        private boolean queryParametersAreFromToBuilder;\n+        private Map<String, List<String>> queryParameters;\n+\n         private SdkHttpMethod httpMethod;\n-        private Map<String, List<String>> headers = new LinkedHashMap<>();\n+\n+        private boolean headersAreFromToBuilder;\n+        private Map<String, List<String>> headers;\n+\n         private ContentStreamProvider contentStreamProvider;\n \n         Builder() {\n+            queryParameters = new LinkedHashMap<>();\n+            queryParametersAreFromToBuilder = false;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e36c6c3c9a4285d7d6422259b6dd283713c589a8"}, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDg5OTU1NA==", "bodyText": "Hah, I wrote a class to do this originally, but it just made things harder to read. If we find ourselves doing this a lot we can put it somewhere else...", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1791#discussion_r414899554", "createdAt": "2020-04-24T22:33:19Z", "author": {"login": "millems"}, "path": "http-client-spi/src/main/java/software/amazon/awssdk/http/DefaultSdkHttpFullRequest.java", "diffHunk": "@@ -172,12 +169,35 @@ public String toString() {\n         private String host;\n         private Integer port;\n         private String path;\n-        private Map<String, List<String>> queryParameters = new LinkedHashMap<>();\n+\n+        private boolean queryParametersAreFromToBuilder;\n+        private Map<String, List<String>> queryParameters;\n+\n         private SdkHttpMethod httpMethod;\n-        private Map<String, List<String>> headers = new LinkedHashMap<>();\n+\n+        private boolean headersAreFromToBuilder;\n+        private Map<String, List<String>> headers;\n+\n         private ContentStreamProvider contentStreamProvider;\n \n         Builder() {\n+            queryParameters = new LinkedHashMap<>();\n+            queryParametersAreFromToBuilder = false;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDg5MTYyOA=="}, "originalCommit": {"oid": "e36c6c3c9a4285d7d6422259b6dd283713c589a8"}, "originalPosition": 63}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4089, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}