{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY4MzU4NzQ2", "number": 1622, "title": "h2 connection exception handling ", "bodyText": "Description\n\n\nFix the issue where publisher signals onComplete if the stream is closed as a result of outbound GOAWAY. The root cause is that when PingFailedException is fired, UnusedChannelExceptionHandler is handling it instead of ReleaseOnExceptionHandler. UnusedChannelExceptionHandler only closes h2 connections. As a result, the exception would not be delivered to child channels as expected.\n\n\nChange UnusedChannelExceptionHandler to a per-request handler because it doesn't really make sense to attach it to connection channel pipeline since we never set IN_USE attribute key on it. Only attach UnusedChannelExceptionHandler to h2 stream channels and h1 channels.\n\n\nWhen delivering a connection exception to a child channel, wrap it with a more descriptive exception.\n\n\nPreviously, if a channel gets closed because of PingFailedException:\nIt could complete successfully or throw the following exception depending on the operation.\njava.util.concurrent.CompletionException: java.io.IOException: Server failed to send complete response\n\nNow it would throw the following exception:\njava.util.concurrent.CompletionException: java.lang.IOException: An exception occurred on the connection: Server did not respond to PING after 487ms (limit: 200ms)\nCaused by: software.amazon.awssdk.http.nio.netty.internal.http2.PingFailedException: Server did not respond to PING after 487ms (limit: 200ms)\n\nTesting\nAdded functional tests and unit tests.\nScreenshots (if appropriate)\nTypes of changes\n\n\n Bug fix (non-breaking change which fixes an issue)\n New feature (non-breaking change which adds functionality)\n\nChecklist\n\n\n\n I have read the CONTRIBUTING document\n Local run of mvn install succeeds\n My code follows the code style of this project\n My change requires a change to the Javadoc documentation\n I have updated the Javadoc documentation accordingly\n I have read the README document\n I have added tests to cover my changes\n All new and existing tests passed\n A short description of the change has been added to the CHANGELOG\n My change is to implement 1.11 parity feature and I have updated LaunchChangelog\n\nLicense\n\n\n\n\n I confirm that this pull request can be released under the Apache 2 license", "createdAt": "2020-01-29T04:06:45Z", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1622", "merged": true, "mergeCommit": {"oid": "fa71024f972738e101a6403dd2bab8b693fc5040"}, "closed": true, "closedAt": "2020-02-04T18:38:32Z", "author": {"login": "zoewangg"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb_KISwAFqTM1MDMyMzU1Ng==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcA3yvagBqjMwMDQ0NTg5Njc=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUwMzIzNTU2", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1622#pullrequestreview-350323556", "createdAt": "2020-01-29T18:20:16Z", "commit": {"oid": "ab03e4ae7276a66d9eec88c62abffac83d289653"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQxODoyMDoxNlrOFjSryA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQxODoyMDoxNlrOFjSryA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjU1MDYwMA==", "bodyText": "RuntimeException might not be the best exception to be wrapped with. The reason I didn't use IOException is because I figured not all exceptions thrown on connection are retryable, but is that true?", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1622#discussion_r372550600", "createdAt": "2020-01-29T18:20:16Z", "author": {"login": "zoewangg"}, "path": "http-clients/netty-nio-client/src/main/java/software/amazon/awssdk/http/nio/netty/internal/http2/MultiplexedChannelRecord.java", "diffHunk": "@@ -184,7 +185,19 @@ void closeChildChannels() {\n      * Delivers the exception to all registered child channels, and prohibits new streams being created on this connection.\n      */\n     void closeChildChannels(Throwable t) {\n-        closeAndExecuteOnChildChannels(ch -> ch.pipeline().fireExceptionCaught(t));\n+        closeAndExecuteOnChildChannels(ch -> {\n+            RuntimeException ioException = new RuntimeException(\"An exception occurred on the connection \", t);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ab03e4ae7276a66d9eec88c62abffac83d289653"}, "originalPosition": 14}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUwMzI5ODMz", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1622#pullrequestreview-350329833", "createdAt": "2020-01-29T18:30:03Z", "commit": {"oid": "ab03e4ae7276a66d9eec88c62abffac83d289653"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQxODozMDowM1rOFjS_0Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQxODozMDowM1rOFjS_0Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjU1NTcyOQ==", "bodyText": "Do we still need the IN_USE checks in the handler if we are removing it?", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1622#discussion_r372555729", "createdAt": "2020-01-29T18:30:03Z", "author": {"login": "millems"}, "path": "http-clients/netty-nio-client/src/main/java/software/amazon/awssdk/http/nio/netty/internal/HandlerRemovingChannelPool.java", "diffHunk": "@@ -83,7 +83,8 @@ private void removePerRequestHandlers(Channel channel) {\n                            FlushOnReadHandler.class,\n                            ResponseHandler.class,\n                            ReadTimeoutHandler.class,\n-                           WriteTimeoutHandler.class);\n+                           WriteTimeoutHandler.class,\n+                           UnusedChannelExceptionHandler.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ab03e4ae7276a66d9eec88c62abffac83d289653"}, "originalPosition": 6}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUwMzMxMzU0", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1622#pullrequestreview-350331354", "createdAt": "2020-01-29T18:32:29Z", "commit": {"oid": "ab03e4ae7276a66d9eec88c62abffac83d289653"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQxODozMjoyOVrOFjTEkA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQxODozMjoyOVrOFjTEkA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjU1Njk0NA==", "bodyText": "This seems super fragile. Can we just have a handler at the end of every pipeline that closes on exception?", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1622#discussion_r372556944", "createdAt": "2020-01-29T18:32:29Z", "author": {"login": "millems"}, "path": "http-clients/netty-nio-client/src/main/java/software/amazon/awssdk/http/nio/netty/internal/http2/MultiplexedChannelRecord.java", "diffHunk": "@@ -184,7 +185,19 @@ void closeChildChannels() {\n      * Delivers the exception to all registered child channels, and prohibits new streams being created on this connection.\n      */\n     void closeChildChannels(Throwable t) {\n-        closeAndExecuteOnChildChannels(ch -> ch.pipeline().fireExceptionCaught(t));\n+        closeAndExecuteOnChildChannels(ch -> {\n+            RuntimeException ioException = new RuntimeException(\"An exception occurred on the connection \", t);\n+\n+            // Deliver the exception only if the channel knows to handle the exception\n+            if (ch.pipeline().get(ResponseHandler.class) != null) {\n+                log.debug(() -> \"Delivering exception to child channel \" + ch + ioException);\n+                ch.pipeline().fireExceptionCaught(ioException);\n+            } else {\n+                log.debug(() -> \"Closing child channel \" + ch + ioException);\n+                ch.close();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ab03e4ae7276a66d9eec88c62abffac83d289653"}, "originalPosition": 22}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUwNDM2MTUw", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1622#pullrequestreview-350436150", "createdAt": "2020-01-29T21:27:38Z", "commit": {"oid": "3bfe6ae35ad04070bdcab5961d6e29a8c16434cd"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQyMToyNzozOFrOFjYFpA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQyMToyNzozOFrOFjYFpA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjYzOTE0MA==", "bodyText": "What happens when an exception is fired on a parent H2 channel after this change?", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1622#discussion_r372639140", "createdAt": "2020-01-29T21:27:38Z", "author": {"login": "millems"}, "path": "http-clients/netty-nio-client/src/main/java/software/amazon/awssdk/http/nio/netty/internal/ChannelPipelineInitializer.java", "diffHunk": "@@ -109,7 +109,14 @@ public void channelCreated(Channel ch) {\n         }\n \n         pipeline.addLast(FutureCancelHandler.getInstance());\n-        pipeline.addLast(UnusedChannelExceptionHandler.getInstance());\n+\n+        // Only add it for h1 channel because it does not apply to\n+        // h2 connection channel. It will be attached\n+        // to stream channels when they are created.\n+        if (protocol == Protocol.HTTP1_1) {\n+            pipeline.addLast(UnusedChannelExceptionHandler.getInstance());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3bfe6ae35ad04070bdcab5961d6e29a8c16434cd"}, "originalPosition": 10}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUwNDQyOTgw", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1622#pullrequestreview-350442980", "createdAt": "2020-01-29T21:39:29Z", "commit": {"oid": "3bfe6ae35ad04070bdcab5961d6e29a8c16434cd"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUxMTMzMzUz", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1622#pullrequestreview-351133353", "createdAt": "2020-01-30T20:52:35Z", "commit": {"oid": "3bfe6ae35ad04070bdcab5961d6e29a8c16434cd"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQyMDo1MjozNVrOFj5i7Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQyMDo1MzoyOVrOFj5kbg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzE4NzMwOQ==", "bodyText": "minor: instanceof here is more concise", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1622#discussion_r373187309", "createdAt": "2020-01-30T20:52:35Z", "author": {"login": "dagnir"}, "path": "http-clients/netty-nio-client/src/main/java/software/amazon/awssdk/http/nio/netty/internal/http2/MultiplexedChannelRecord.java", "diffHunk": "@@ -184,7 +186,16 @@ void closeChildChannels() {\n      * Delivers the exception to all registered child channels, and prohibits new streams being created on this connection.\n      */\n     void closeChildChannels(Throwable t) {\n-        closeAndExecuteOnChildChannels(ch -> ch.pipeline().fireExceptionCaught(t));\n+        closeAndExecuteOnChildChannels(ch -> ch.pipeline().fireExceptionCaught(decorateConnectionException(t)));\n+    }\n+\n+    private Throwable decorateConnectionException(Throwable t) {\n+        String message = \"An error occurred on the connection: \" + t.getMessage();\n+        if (IOException.class.isAssignableFrom(t.getClass())) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3bfe6ae35ad04070bdcab5961d6e29a8c16434cd"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzE4NzY5NA==", "bodyText": "nit: space in \"connection.This\"", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1622#discussion_r373187694", "createdAt": "2020-01-30T20:53:29Z", "author": {"login": "dagnir"}, "path": ".changes/next-release/bugfix-NettyNIOHTTPClient-dba3e80.json", "diffHunk": "@@ -0,0 +1,5 @@\n+{\n+    \"category\": \"Netty NIO HTTP Client\", \n+    \"type\": \"bugfix\", \n+    \"description\": \"Deliver exceptions to stream channels correctly if there's an exception thrown on connection.This also fixes a bug where publisher signals onComplete if the stream is closed as a result of outbound GOAWAY.\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3bfe6ae35ad04070bdcab5961d6e29a8c16434cd"}, "originalPosition": 4}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3bfe6ae35ad04070bdcab5961d6e29a8c16434cd", "author": {"user": {"login": "zoewangg", "name": "Zoe Wang"}}, "url": "https://github.com/aws/aws-sdk-java-v2/commit/3bfe6ae35ad04070bdcab5961d6e29a8c16434cd", "committedDate": "2020-01-29T21:19:03Z", "message": "Address feedback"}, "afterCommit": {"oid": "2ebb967c6a21eeac07440c5f578985291b34d2d8", "author": {"user": {"login": "zoewangg", "name": "Zoe Wang"}}, "url": "https://github.com/aws/aws-sdk-java-v2/commit/2ebb967c6a21eeac07440c5f578985291b34d2d8", "committedDate": "2020-01-30T21:44:42Z", "message": "Update UnusedExceptionHandler to a per-request handler. Wrapps a connection thrown from a connection with more information before delivering to stream channels."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUxMTY5MTcx", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1622#pullrequestreview-351169171", "createdAt": "2020-01-30T21:54:51Z", "commit": {"oid": "2ebb967c6a21eeac07440c5f578985291b34d2d8"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "43c3aa1a0fa788dbc73bb8d05a8aafee9e97700b", "author": {"user": {"login": "zoewangg", "name": "Zoe Wang"}}, "url": "https://github.com/aws/aws-sdk-java-v2/commit/43c3aa1a0fa788dbc73bb8d05a8aafee9e97700b", "committedDate": "2020-02-04T02:06:07Z", "message": "Fix the issue where the publisher signals onComplete if the stream is closed as a result of outbound of GOAWAY."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2ebb967c6a21eeac07440c5f578985291b34d2d8", "author": {"user": {"login": "zoewangg", "name": "Zoe Wang"}}, "url": "https://github.com/aws/aws-sdk-java-v2/commit/2ebb967c6a21eeac07440c5f578985291b34d2d8", "committedDate": "2020-01-30T21:44:42Z", "message": "Update UnusedExceptionHandler to a per-request handler. Wrapps a connection thrown from a connection with more information before delivering to stream channels."}, "afterCommit": {"oid": "43c3aa1a0fa788dbc73bb8d05a8aafee9e97700b", "author": {"user": {"login": "zoewangg", "name": "Zoe Wang"}}, "url": "https://github.com/aws/aws-sdk-java-v2/commit/43c3aa1a0fa788dbc73bb8d05a8aafee9e97700b", "committedDate": "2020-02-04T02:06:07Z", "message": "Fix the issue where the publisher signals onComplete if the stream is closed as a result of outbound of GOAWAY."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2643, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}