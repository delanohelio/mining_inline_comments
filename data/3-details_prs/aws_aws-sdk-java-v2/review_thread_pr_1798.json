{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEwOTM4MzAz", "number": 1798, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QyMDoxMjo1OFrOD8OH-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QyMDoxMjo1OFrOD8OH-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0NDcyNTcwOnYy", "diffSide": "RIGHT", "path": "core/aws-core/src/main/java/software/amazon/awssdk/awscore/exception/AwsServiceException.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QyMDoxMjo1OFrOGVB2dg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QyMDozMjowMlrOGVCdog==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDcwMzYwNg==", "bodyText": "I realize it's actually DRYer to do this here, but for consistency can we set the extendedRequestId the same way we set the requestId: when the exception is created? (And maybe just print null instead of not available)\nWe can add a getter for retrieving it (that sometimes returns null).", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1798#discussion_r424703606", "createdAt": "2020-05-13T20:12:58Z", "author": {"login": "millems"}, "path": "core/aws-core/src/main/java/software/amazon/awssdk/awscore/exception/AwsServiceException.java", "diffHunk": "@@ -62,10 +62,13 @@ public AwsErrorDetails awsErrorDetails() {\n     @Override\n     public String getMessage() {\n         if (awsErrorDetails != null) {\n+            String extendedRequestId =\n+                awsErrorDetails().sdkHttpResponse().firstMatchingHeader(\"x-amz-id-2\").orElse(\"not available\");\n             return awsErrorDetails().errorMessage() +\n                     \" (Service: \" + awsErrorDetails().serviceName() +\n                     \", Status Code: \" + statusCode() +\n-                    \", Request ID: \" + requestId() + \")\";\n+                    \", Request ID: \" + requestId() +\n+                    \", Extended Request ID: \" + extendedRequestId + \")\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a62869263ce708e2607124875c10d2d8b883761e"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDcxMzYzNA==", "bodyText": "Yep, that's actually how I initially implemented this, but I was trying to make this simpler because I was worried the change would be too complicated.  I'll put out the original version today.", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1798#discussion_r424713634", "createdAt": "2020-05-13T20:32:02Z", "author": {"login": "Sarev0k"}, "path": "core/aws-core/src/main/java/software/amazon/awssdk/awscore/exception/AwsServiceException.java", "diffHunk": "@@ -62,10 +62,13 @@ public AwsErrorDetails awsErrorDetails() {\n     @Override\n     public String getMessage() {\n         if (awsErrorDetails != null) {\n+            String extendedRequestId =\n+                awsErrorDetails().sdkHttpResponse().firstMatchingHeader(\"x-amz-id-2\").orElse(\"not available\");\n             return awsErrorDetails().errorMessage() +\n                     \" (Service: \" + awsErrorDetails().serviceName() +\n                     \", Status Code: \" + statusCode() +\n-                    \", Request ID: \" + requestId() + \")\";\n+                    \", Request ID: \" + requestId() +\n+                    \", Extended Request ID: \" + extendedRequestId + \")\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDcwMzYwNg=="}, "originalCommit": {"oid": "a62869263ce708e2607124875c10d2d8b883761e"}, "originalPosition": 11}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4095, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}