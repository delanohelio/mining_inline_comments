{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA2OTcyMDMx", "number": 2103, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxNzozNTo0M1rOEv5s9Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QyMjoxNDoxOVrOExY4jw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4NjYzOTI1OnYy", "diffSide": "RIGHT", "path": "codegen/src/test/resources/software/amazon/awssdk/codegen/poet/model/eventone.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxNzozNTo0M1rOHlJefg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxNzozNTo0M1rOHlJefg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODcxNDYyMg==", "bodyText": "Uhhh I need to fix this!", "url": "https://github.com/aws/aws-sdk-java-v2/pull/2103#discussion_r508714622", "createdAt": "2020-10-20T17:35:43Z", "author": {"login": "dagnir"}, "path": "codegen/src/test/resources/software/amazon/awssdk/codegen/poet/model/eventone.java", "diffHunk": "@@ -164,7 +164,7 @@ public final void setFoo(String foo) {\n \n         @Override\n         public EventOne build() {\n-            return new EventOne(this);\n+            throw new UnsupportedOperationException();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7e254a8fe1d4ca0820721ea04f80615ca87d6027"}, "originalPosition": 85}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIwMTIzMDk4OnYy", "diffSide": "RIGHT", "path": "codegen/src/test/resources/software/amazon/awssdk/codegen/poet/model/eventone.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QxNzoxOTo1MFrOHnWsug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QxODozMjoyNlrOHnZGFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTAyODQxMA==", "bodyText": "Can we add sdk internal api annotation and javadocs?", "url": "https://github.com/aws/aws-sdk-java-v2/pull/2103#discussion_r511028410", "createdAt": "2020-10-23T17:19:50Z", "author": {"login": "zoewangg"}, "path": "codegen/src/test/resources/software/amazon/awssdk/codegen/poet/model/eventone.java", "diffHunk": "@@ -21,24 +21,24 @@\n /**\n  */\n @Generated(\"software.amazon.awssdk:codegen\")\n-public final class EventOne implements SdkPojo, Serializable, ToCopyableBuilder<EventOne.Builder, EventOne>, EventStream {\n+public class EventOne implements SdkPojo, Serializable, ToCopyableBuilder<EventOne.Builder, EventOne>, EventStream {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ebd81f79382e44a9449c170494378546b49797e6"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTA2NzY3MQ==", "bodyText": "I don't think it would make sense to make these internal because they're used as the return type of static builder methods on the event stream interface. Also seems like it's possible that an event shape can be used in a non event stream context, like a member on a non eventstream structure.", "url": "https://github.com/aws/aws-sdk-java-v2/pull/2103#discussion_r511067671", "createdAt": "2020-10-23T18:32:26Z", "author": {"login": "dagnir"}, "path": "codegen/src/test/resources/software/amazon/awssdk/codegen/poet/model/eventone.java", "diffHunk": "@@ -21,24 +21,24 @@\n /**\n  */\n @Generated(\"software.amazon.awssdk:codegen\")\n-public final class EventOne implements SdkPojo, Serializable, ToCopyableBuilder<EventOne.Builder, EventOne>, EventStream {\n+public class EventOne implements SdkPojo, Serializable, ToCopyableBuilder<EventOne.Builder, EventOne>, EventStream {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTAyODQxMA=="}, "originalCommit": {"oid": "ebd81f79382e44a9449c170494378546b49797e6"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIwMTI0OTEzOnYy", "diffSide": "RIGHT", "path": "codegen/src/test/resources/software/amazon/awssdk/codegen/poet/eventstream/eventone_.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QxNzoyNToxN1rOHnW3yg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QyMjoxMDoxMVrOHnfwxw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTAzMTI0Mg==", "bodyText": "Hmm, not a big fan of the underscore in the end. Can we use something else? Or rename the base class to BaseEventOne?", "url": "https://github.com/aws/aws-sdk-java-v2/pull/2103#discussion_r511031242", "createdAt": "2020-10-23T17:25:17Z", "author": {"login": "zoewangg"}, "path": "codegen/src/test/resources/software/amazon/awssdk/codegen/poet/eventstream/eventone_.java", "diffHunk": "@@ -0,0 +1,55 @@\n+package software.amazon.awssdk.services.jsonprotocoltests.model.eventstream;\n+\n+import software.amazon.awssdk.annotations.Generated;\n+import software.amazon.awssdk.annotations.SdkInternalApi;\n+import software.amazon.awssdk.services.jsonprotocoltests.model.EventOne;\n+import software.amazon.awssdk.services.jsonprotocoltests.model.EventStreamOperationResponseHandler;\n+\n+/**\n+ * A specialization of {@code software.amazon.awssdk.services.jsonprotocoltests.model.EventOne} that represents the\n+ * {@code EventStream#EventOne} event. Do not use this class directly. Instead, use the static builder methods on\n+ * {@link software.amazon.awssdk.services.jsonprotocoltests.model.EventStream}.\n+ */\n+@SdkInternalApi\n+@Generated(\"software.amazon.awssdk:codegen\")\n+public final class EventOne_ extends EventOne {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ebd81f79382e44a9449c170494378546b49797e6"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTA2NTg0Mw==", "bodyText": "Hmm have a suggestion for an alternative suffix/prefix?", "url": "https://github.com/aws/aws-sdk-java-v2/pull/2103#discussion_r511065843", "createdAt": "2020-10-23T18:30:27Z", "author": {"login": "dagnir"}, "path": "codegen/src/test/resources/software/amazon/awssdk/codegen/poet/eventstream/eventone_.java", "diffHunk": "@@ -0,0 +1,55 @@\n+package software.amazon.awssdk.services.jsonprotocoltests.model.eventstream;\n+\n+import software.amazon.awssdk.annotations.Generated;\n+import software.amazon.awssdk.annotations.SdkInternalApi;\n+import software.amazon.awssdk.services.jsonprotocoltests.model.EventOne;\n+import software.amazon.awssdk.services.jsonprotocoltests.model.EventStreamOperationResponseHandler;\n+\n+/**\n+ * A specialization of {@code software.amazon.awssdk.services.jsonprotocoltests.model.EventOne} that represents the\n+ * {@code EventStream#EventOne} event. Do not use this class directly. Instead, use the static builder methods on\n+ * {@link software.amazon.awssdk.services.jsonprotocoltests.model.EventStream}.\n+ */\n+@SdkInternalApi\n+@Generated(\"software.amazon.awssdk:codegen\")\n+public final class EventOne_ extends EventOne {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTAzMTI0Mg=="}, "originalCommit": {"oid": "ebd81f79382e44a9449c170494378546b49797e6"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTE3NjkwMw==", "bodyText": "Settled on \"Default\" as a prefix", "url": "https://github.com/aws/aws-sdk-java-v2/pull/2103#discussion_r511176903", "createdAt": "2020-10-23T22:10:11Z", "author": {"login": "dagnir"}, "path": "codegen/src/test/resources/software/amazon/awssdk/codegen/poet/eventstream/eventone_.java", "diffHunk": "@@ -0,0 +1,55 @@\n+package software.amazon.awssdk.services.jsonprotocoltests.model.eventstream;\n+\n+import software.amazon.awssdk.annotations.Generated;\n+import software.amazon.awssdk.annotations.SdkInternalApi;\n+import software.amazon.awssdk.services.jsonprotocoltests.model.EventOne;\n+import software.amazon.awssdk.services.jsonprotocoltests.model.EventStreamOperationResponseHandler;\n+\n+/**\n+ * A specialization of {@code software.amazon.awssdk.services.jsonprotocoltests.model.EventOne} that represents the\n+ * {@code EventStream#EventOne} event. Do not use this class directly. Instead, use the static builder methods on\n+ * {@link software.amazon.awssdk.services.jsonprotocoltests.model.EventStream}.\n+ */\n+@SdkInternalApi\n+@Generated(\"software.amazon.awssdk:codegen\")\n+public final class EventOne_ extends EventOne {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTAzMTI0Mg=="}, "originalCommit": {"oid": "ebd81f79382e44a9449c170494378546b49797e6"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIwMTUyMzAwOnYy", "diffSide": "RIGHT", "path": "codegen/src/test/resources/software/amazon/awssdk/codegen/poet/model/eventone.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QxODo0MDowNlrOHnZg9Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QyMTozMDoyN1rOHne-FA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTA3NDU0OQ==", "bodyText": "Can we mark all methods that are not intended to be overridden final?", "url": "https://github.com/aws/aws-sdk-java-v2/pull/2103#discussion_r511074549", "createdAt": "2020-10-23T18:40:06Z", "author": {"login": "zoewangg"}, "path": "codegen/src/test/resources/software/amazon/awssdk/codegen/poet/model/eventone.java", "diffHunk": "@@ -21,24 +21,24 @@\n /**\n  */\n @Generated(\"software.amazon.awssdk:codegen\")\n-public final class EventOne implements SdkPojo, Serializable, ToCopyableBuilder<EventOne.Builder, EventOne>, EventStream {\n+public class EventOne implements SdkPojo, Serializable, ToCopyableBuilder<EventOne.Builder, EventOne>, EventStream {\n     private static final SdkField<String> FOO_FIELD = SdkField.<String> builder(MarshallingType.STRING).memberName(\"Foo\")\n-                                                                                                       .getter(getter(EventOne::foo)).setter(setter(Builder::foo))\n-                                                                                                       .traits(LocationTrait.builder().location(MarshallLocation.PAYLOAD).locationName(\"Foo\").build()).build();\n+            .getter(getter(EventOne::foo)).setter(setter(Builder::foo))\n+            .traits(LocationTrait.builder().location(MarshallLocation.PAYLOAD).locationName(\"Foo\").build()).build();\n \n     private static final List<SdkField<?>> SDK_FIELDS = Collections.unmodifiableList(Arrays.asList(FOO_FIELD));\n \n     private static final long serialVersionUID = 1L;\n \n     private final String foo;\n \n-    private EventOne(BuilderImpl builder) {\n+    protected EventOne(BuilderImpl builder) {\n         this.foo = builder.foo;\n     }\n \n     /**\n      * Returns the value of the Foo property for this object.\n-     *\n+     * \n      * @return The value of the Foo property for this object.\n      */\n     public String foo() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ebd81f79382e44a9449c170494378546b49797e6"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTE2MzkyNA==", "bodyText": "Done", "url": "https://github.com/aws/aws-sdk-java-v2/pull/2103#discussion_r511163924", "createdAt": "2020-10-23T21:30:27Z", "author": {"login": "dagnir"}, "path": "codegen/src/test/resources/software/amazon/awssdk/codegen/poet/model/eventone.java", "diffHunk": "@@ -21,24 +21,24 @@\n /**\n  */\n @Generated(\"software.amazon.awssdk:codegen\")\n-public final class EventOne implements SdkPojo, Serializable, ToCopyableBuilder<EventOne.Builder, EventOne>, EventStream {\n+public class EventOne implements SdkPojo, Serializable, ToCopyableBuilder<EventOne.Builder, EventOne>, EventStream {\n     private static final SdkField<String> FOO_FIELD = SdkField.<String> builder(MarshallingType.STRING).memberName(\"Foo\")\n-                                                                                                       .getter(getter(EventOne::foo)).setter(setter(Builder::foo))\n-                                                                                                       .traits(LocationTrait.builder().location(MarshallLocation.PAYLOAD).locationName(\"Foo\").build()).build();\n+            .getter(getter(EventOne::foo)).setter(setter(Builder::foo))\n+            .traits(LocationTrait.builder().location(MarshallLocation.PAYLOAD).locationName(\"Foo\").build()).build();\n \n     private static final List<SdkField<?>> SDK_FIELDS = Collections.unmodifiableList(Arrays.asList(FOO_FIELD));\n \n     private static final long serialVersionUID = 1L;\n \n     private final String foo;\n \n-    private EventOne(BuilderImpl builder) {\n+    protected EventOne(BuilderImpl builder) {\n         this.foo = builder.foo;\n     }\n \n     /**\n      * Returns the value of the Foo property for this object.\n-     *\n+     * \n      * @return The value of the Foo property for this object.\n      */\n     public String foo() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTA3NDU0OQ=="}, "originalCommit": {"oid": "ebd81f79382e44a9449c170494378546b49797e6"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIwMjIzMzc1OnYy", "diffSide": "RIGHT", "path": "codegen/src/test/resources/software/amazon/awssdk/codegen/poet/model/alltypesrequest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QyMjoxNDoxOVrOHnf1Hg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNFQwMDoyMToxNVrOHnhsPg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTE3ODAxNA==", "bodyText": "It'd nice if we can only add final to non-final model classes, but I guess it's not trivial to do so with the current implementation of the model codegen class spec.", "url": "https://github.com/aws/aws-sdk-java-v2/pull/2103#discussion_r511178014", "createdAt": "2020-10-23T22:14:19Z", "author": {"login": "zoewangg"}, "path": "codegen/src/test/resources/software/amazon/awssdk/codegen/poet/model/alltypesrequest.java", "diffHunk": "@@ -495,63 +495,63 @@ private AllTypesRequest(BuilderImpl builder) {\n \n     /**\n      * Returns the value of the StringMember property for this object.\n-     *\n+     * \n      * @return The value of the StringMember property for this object.\n      */\n-    public String stringMember() {\n+    public final String stringMember() {\n         return stringMember;\n     }\n \n     /**\n      * Returns the value of the IntegerMember property for this object.\n-     *\n+     * \n      * @return The value of the IntegerMember property for this object.\n      */\n-    public Integer integerMember() {\n+    public final Integer integerMember() {\n         return integerMember;\n     }\n \n     /**\n      * Returns the value of the BooleanMember property for this object.\n-     *\n+     * \n      * @return The value of the BooleanMember property for this object.\n      */\n-    public Boolean booleanMember() {\n+    public final Boolean booleanMember() {\n         return booleanMember;\n     }\n \n     /**\n      * Returns the value of the FloatMember property for this object.\n-     *\n+     * \n      * @return The value of the FloatMember property for this object.\n      */\n-    public Float floatMember() {\n+    public final Float floatMember() {\n         return floatMember;\n     }\n \n     /**\n      * Returns the value of the DoubleMember property for this object.\n-     *\n+     * \n      * @return The value of the DoubleMember property for this object.\n      */\n-    public Double doubleMember() {\n+    public final Double doubleMember() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8906af94f1227762d8fad05c03b99fc9113d9b64"}, "originalPosition": 719}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTIwODUxMA==", "bodyText": "Yeah special casing events would make AwsServieModel even more complicated. Since they're final classes we can always remove the final on the methods at a later time without breaking binary compatibility.", "url": "https://github.com/aws/aws-sdk-java-v2/pull/2103#discussion_r511208510", "createdAt": "2020-10-24T00:21:15Z", "author": {"login": "dagnir"}, "path": "codegen/src/test/resources/software/amazon/awssdk/codegen/poet/model/alltypesrequest.java", "diffHunk": "@@ -495,63 +495,63 @@ private AllTypesRequest(BuilderImpl builder) {\n \n     /**\n      * Returns the value of the StringMember property for this object.\n-     *\n+     * \n      * @return The value of the StringMember property for this object.\n      */\n-    public String stringMember() {\n+    public final String stringMember() {\n         return stringMember;\n     }\n \n     /**\n      * Returns the value of the IntegerMember property for this object.\n-     *\n+     * \n      * @return The value of the IntegerMember property for this object.\n      */\n-    public Integer integerMember() {\n+    public final Integer integerMember() {\n         return integerMember;\n     }\n \n     /**\n      * Returns the value of the BooleanMember property for this object.\n-     *\n+     * \n      * @return The value of the BooleanMember property for this object.\n      */\n-    public Boolean booleanMember() {\n+    public final Boolean booleanMember() {\n         return booleanMember;\n     }\n \n     /**\n      * Returns the value of the FloatMember property for this object.\n-     *\n+     * \n      * @return The value of the FloatMember property for this object.\n      */\n-    public Float floatMember() {\n+    public final Float floatMember() {\n         return floatMember;\n     }\n \n     /**\n      * Returns the value of the DoubleMember property for this object.\n-     *\n+     * \n      * @return The value of the DoubleMember property for this object.\n      */\n-    public Double doubleMember() {\n+    public final Double doubleMember() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTE3ODAxNA=="}, "originalCommit": {"oid": "8906af94f1227762d8fad05c03b99fc9113d9b64"}, "originalPosition": 719}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3916, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}