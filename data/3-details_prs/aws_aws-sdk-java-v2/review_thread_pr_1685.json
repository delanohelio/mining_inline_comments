{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg0MDE0MTY1", "number": 1685, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQwMToyMDo1OFrODlponw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQyMzoxNTo1NFrODl-D3g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwODA2MDQ3OnYy", "diffSide": "RIGHT", "path": "utils/src/main/java/software/amazon/awssdk/utils/http/SdkHttpUtils.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQwMToyMDo1OFrOFyqR0Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQwMTozMDo0MlrOFyqcUw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODY2NTgwOQ==", "bodyText": "Is this needed?", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1685#discussion_r388665809", "createdAt": "2020-03-06T01:20:58Z", "author": {"login": "spfink"}, "path": "utils/src/main/java/software/amazon/awssdk/utils/http/SdkHttpUtils.java", "diffHunk": "@@ -297,4 +307,12 @@ public static String appendUri(String baseUri, String path) {\n     public static Optional<String> firstMatchingHeader(Map<String, List<String>> headers, String header) {\n         return allMatchingHeaders(headers, header).findFirst();\n     }\n+\n+    public static Set<String> singleHeaders() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b84bbc3167074a987fa007c590e078694ecee62f"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODY2ODQ5OQ==", "bodyText": "Not really needed, I just needed to able access the list from the tests, but I can just copy them there.", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1685#discussion_r388668499", "createdAt": "2020-03-06T01:30:42Z", "author": {"login": "dagnir"}, "path": "utils/src/main/java/software/amazon/awssdk/utils/http/SdkHttpUtils.java", "diffHunk": "@@ -297,4 +307,12 @@ public static String appendUri(String baseUri, String path) {\n     public static Optional<String> firstMatchingHeader(Map<String, List<String>> headers, String header) {\n         return allMatchingHeaders(headers, header).findFirst();\n     }\n+\n+    public static Set<String> singleHeaders() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODY2NTgwOQ=="}, "originalCommit": {"oid": "b84bbc3167074a987fa007c590e078694ecee62f"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxMTQwNDI2OnYy", "diffSide": "LEFT", "path": "core/sdk-core/src/main/java/software/amazon/awssdk/core/internal/http/pipeline/stages/MergeCustomHeadersStage.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQyMzoxNDoxMVrOFzKLyA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQyMzo0MToyMVrOFzKlPg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTE4ODU1Mg==", "bodyText": "We're now introducing an implicit 'priority' in the sense that the last header 'wins'. Can we add a comment about that?", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1685#discussion_r389188552", "createdAt": "2020-03-06T23:14:11Z", "author": {"login": "millems"}, "path": "core/sdk-core/src/main/java/software/amazon/awssdk/core/internal/http/pipeline/stages/MergeCustomHeadersStage.java", "diffHunk": "@@ -52,7 +54,15 @@ public MergeCustomHeadersStage(HttpClientDependencies dependencies) {\n     private final Map<String, List<String>> mergeHeaders(Map<String, List<String>>... headers) {\n         Map<String, List<String>> result = new LinkedHashMap<>();\n         for (Map<String, List<String>> header : headers) {\n-            header.forEach((k, v) -> result.computeIfAbsent(k, ignored -> new ArrayList<>()).addAll(v));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5e5eb53d78d31a9a596bc4f0ed12134368ff60e4"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTE5NTA3MA==", "bodyText": "Sure, i'll add a note on the setters in the Client/Request override configuration.", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1685#discussion_r389195070", "createdAt": "2020-03-06T23:41:21Z", "author": {"login": "dagnir"}, "path": "core/sdk-core/src/main/java/software/amazon/awssdk/core/internal/http/pipeline/stages/MergeCustomHeadersStage.java", "diffHunk": "@@ -52,7 +54,15 @@ public MergeCustomHeadersStage(HttpClientDependencies dependencies) {\n     private final Map<String, List<String>> mergeHeaders(Map<String, List<String>>... headers) {\n         Map<String, List<String>> result = new LinkedHashMap<>();\n         for (Map<String, List<String>> header : headers) {\n-            header.forEach((k, v) -> result.computeIfAbsent(k, ignored -> new ArrayList<>()).addAll(v));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTE4ODU1Mg=="}, "originalCommit": {"oid": "5e5eb53d78d31a9a596bc4f0ed12134368ff60e4"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxMTQwNzAyOnYy", "diffSide": "RIGHT", "path": "core/sdk-core/src/main/java/software/amazon/awssdk/core/internal/http/pipeline/stages/MergeCustomHeadersStage.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQyMzoxNTo1NFrOFzKNaQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQyMzo1MToyNlrOFzKtoA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTE4ODk2OQ==", "bodyText": "Should we disallow (or log) when there are multiple values specified in the same headerValues for a single-header?\nIt's a bit weird if I add multiple content-types at the request level, but it just takes the last one.", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1685#discussion_r389188969", "createdAt": "2020-03-06T23:15:54Z", "author": {"login": "millems"}, "path": "core/sdk-core/src/main/java/software/amazon/awssdk/core/internal/http/pipeline/stages/MergeCustomHeadersStage.java", "diffHunk": "@@ -52,7 +54,15 @@ public MergeCustomHeadersStage(HttpClientDependencies dependencies) {\n     private final Map<String, List<String>> mergeHeaders(Map<String, List<String>>... headers) {\n         Map<String, List<String>> result = new LinkedHashMap<>();\n         for (Map<String, List<String>> header : headers) {\n-            header.forEach((k, v) -> result.computeIfAbsent(k, ignored -> new ArrayList<>()).addAll(v));\n+            header.forEach((headerName, headerValues) -> {\n+                List<String> resultHeaderValues = result.computeIfAbsent(headerName, ignored -> new ArrayList<>());\n+                if (SdkHttpUtils.isSingleHeader(headerName)) {\n+                    resultHeaderValues.clear();\n+                    resultHeaderValues.add(CollectionUtils.lastElement(headerValues));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5e5eb53d78d31a9a596bc4f0ed12134368ff60e4"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTE5NTgzOA==", "bodyText": "I went back and forth with this. Alternatively what do you think about keeping all the values in the current list, but not merging them with the previously seen list?\ne.g.\n\"FooHeader\" set by marshaller -> \"a\"\n\"FooHeader\" override on client -> [\"b\", \"c\"]\n\"FooHeader\" override on request -> [\"d\", \"e\", \"f\"]\n\"FooHeader\" on the wire -> [\"d\", \"e\", \"f\"]", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1685#discussion_r389195838", "createdAt": "2020-03-06T23:44:54Z", "author": {"login": "dagnir"}, "path": "core/sdk-core/src/main/java/software/amazon/awssdk/core/internal/http/pipeline/stages/MergeCustomHeadersStage.java", "diffHunk": "@@ -52,7 +54,15 @@ public MergeCustomHeadersStage(HttpClientDependencies dependencies) {\n     private final Map<String, List<String>> mergeHeaders(Map<String, List<String>>... headers) {\n         Map<String, List<String>> result = new LinkedHashMap<>();\n         for (Map<String, List<String>> header : headers) {\n-            header.forEach((k, v) -> result.computeIfAbsent(k, ignored -> new ArrayList<>()).addAll(v));\n+            header.forEach((headerName, headerValues) -> {\n+                List<String> resultHeaderValues = result.computeIfAbsent(headerName, ignored -> new ArrayList<>());\n+                if (SdkHttpUtils.isSingleHeader(headerName)) {\n+                    resultHeaderValues.clear();\n+                    resultHeaderValues.add(CollectionUtils.lastElement(headerValues));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTE4ODk2OQ=="}, "originalCommit": {"oid": "5e5eb53d78d31a9a596bc4f0ed12134368ff60e4"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTE5NzIxNg==", "bodyText": "After discussing offline, went with the above solution.", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1685#discussion_r389197216", "createdAt": "2020-03-06T23:51:26Z", "author": {"login": "dagnir"}, "path": "core/sdk-core/src/main/java/software/amazon/awssdk/core/internal/http/pipeline/stages/MergeCustomHeadersStage.java", "diffHunk": "@@ -52,7 +54,15 @@ public MergeCustomHeadersStage(HttpClientDependencies dependencies) {\n     private final Map<String, List<String>> mergeHeaders(Map<String, List<String>>... headers) {\n         Map<String, List<String>> result = new LinkedHashMap<>();\n         for (Map<String, List<String>> header : headers) {\n-            header.forEach((k, v) -> result.computeIfAbsent(k, ignored -> new ArrayList<>()).addAll(v));\n+            header.forEach((headerName, headerValues) -> {\n+                List<String> resultHeaderValues = result.computeIfAbsent(headerName, ignored -> new ArrayList<>());\n+                if (SdkHttpUtils.isSingleHeader(headerName)) {\n+                    resultHeaderValues.clear();\n+                    resultHeaderValues.add(CollectionUtils.lastElement(headerValues));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTE4ODk2OQ=="}, "originalCommit": {"oid": "5e5eb53d78d31a9a596bc4f0ed12134368ff60e4"}, "originalPosition": 18}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4245, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}