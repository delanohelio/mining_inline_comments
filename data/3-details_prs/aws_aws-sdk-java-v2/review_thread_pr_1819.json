{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE0NDAwMzQ0", "number": 1819, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxODozNjo0NVrOD7xuRw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxODozNjo1OFrOD7xuhg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0MDA3MjM5OnYy", "diffSide": "RIGHT", "path": "codegen/src/test/java/software/amazon/awssdk/codegen/model/intermediate/IntermediateModelTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxODozNjo0NVrOGUT34g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMTo1MDoyM1rOGUaOvA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzk1MDMwNg==", "bodyText": "assertThatThrownBy(() -> testModel.getShapeByNameAndC2jName(\"AnyShape\", \"AnyShape\"))\n    .isInstanceOf(IllegalArgumentException.class)\n    .hasMessage(\"C2J shape AnyShape with shape name AnyShape does not exist in the intermediate model\").\n?", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1819#discussion_r423950306", "createdAt": "2020-05-12T18:36:45Z", "author": {"login": "millems"}, "path": "codegen/src/test/java/software/amazon/awssdk/codegen/model/intermediate/IntermediateModelTest.java", "diffHunk": "@@ -0,0 +1,73 @@\n+/*\n+ * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.awssdk.codegen.model.intermediate;\n+\n+import java.io.File;\n+import java.util.Collections;\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.junit.rules.ExpectedException;\n+import software.amazon.awssdk.codegen.C2jModels;\n+import software.amazon.awssdk.codegen.IntermediateModelBuilder;\n+import software.amazon.awssdk.codegen.model.config.customization.CustomizationConfig;\n+import software.amazon.awssdk.codegen.model.service.ServiceMetadata;\n+import software.amazon.awssdk.codegen.model.service.ServiceModel;\n+import software.amazon.awssdk.codegen.utils.ModelLoaderUtils;\n+\n+public class IntermediateModelTest {\n+\n+    @Rule\n+    public ExpectedException exception = ExpectedException.none();\n+\n+    @Test\n+    public void cannotFindShapeWhenNoShapesExist() {\n+        exception.expect(IllegalArgumentException.class);\n+        exception.expectMessage(\"C2J shape AnyShape with shape name AnyShape does not exist in the intermediate model\");\n+\n+        ServiceMetadata metadata = new ServiceMetadata();\n+        metadata.setProtocol(Protocol.REST_JSON.getValue());\n+        metadata.setServiceId(\"empty-service\");\n+        metadata.setSignatureVersion(\"V4\");\n+\n+        IntermediateModel testModel = new IntermediateModelBuilder(\n+            C2jModels.builder()\n+                     .serviceModel(new ServiceModel(metadata,\n+                                                    Collections.emptyMap(),\n+                                                    Collections.emptyMap(),\n+                                                    Collections.emptyMap()))\n+                     .customizationConfig(CustomizationConfig.create())\n+                     .build())\n+            .build();\n+        testModel.getShapeByNameAndC2jName(\"AnyShape\", \"AnyShape\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "df1cdf4be99197cc3d75852e679f4c81f01d43c6"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA1NDQ2MA==", "bodyText": "Didn't notice these tests were using AssertJ.  Updated.", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1819#discussion_r424054460", "createdAt": "2020-05-12T21:50:23Z", "author": {"login": "adamthom-amzn"}, "path": "codegen/src/test/java/software/amazon/awssdk/codegen/model/intermediate/IntermediateModelTest.java", "diffHunk": "@@ -0,0 +1,73 @@\n+/*\n+ * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.awssdk.codegen.model.intermediate;\n+\n+import java.io.File;\n+import java.util.Collections;\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.junit.rules.ExpectedException;\n+import software.amazon.awssdk.codegen.C2jModels;\n+import software.amazon.awssdk.codegen.IntermediateModelBuilder;\n+import software.amazon.awssdk.codegen.model.config.customization.CustomizationConfig;\n+import software.amazon.awssdk.codegen.model.service.ServiceMetadata;\n+import software.amazon.awssdk.codegen.model.service.ServiceModel;\n+import software.amazon.awssdk.codegen.utils.ModelLoaderUtils;\n+\n+public class IntermediateModelTest {\n+\n+    @Rule\n+    public ExpectedException exception = ExpectedException.none();\n+\n+    @Test\n+    public void cannotFindShapeWhenNoShapesExist() {\n+        exception.expect(IllegalArgumentException.class);\n+        exception.expectMessage(\"C2J shape AnyShape with shape name AnyShape does not exist in the intermediate model\");\n+\n+        ServiceMetadata metadata = new ServiceMetadata();\n+        metadata.setProtocol(Protocol.REST_JSON.getValue());\n+        metadata.setServiceId(\"empty-service\");\n+        metadata.setSignatureVersion(\"V4\");\n+\n+        IntermediateModel testModel = new IntermediateModelBuilder(\n+            C2jModels.builder()\n+                     .serviceModel(new ServiceModel(metadata,\n+                                                    Collections.emptyMap(),\n+                                                    Collections.emptyMap(),\n+                                                    Collections.emptyMap()))\n+                     .customizationConfig(CustomizationConfig.create())\n+                     .build())\n+            .build();\n+        testModel.getShapeByNameAndC2jName(\"AnyShape\", \"AnyShape\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzk1MDMwNg=="}, "originalCommit": {"oid": "df1cdf4be99197cc3d75852e679f4c81f01d43c6"}, "originalPosition": 54}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0MDA3MzAyOnYy", "diffSide": "RIGHT", "path": "codegen/src/test/java/software/amazon/awssdk/codegen/model/intermediate/IntermediateModelTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxODozNjo1OFrOGUT4TA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMTo1MDozMFrOGUaO8g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzk1MDQxMg==", "bodyText": "Same here.", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1819#discussion_r423950412", "createdAt": "2020-05-12T18:36:58Z", "author": {"login": "millems"}, "path": "codegen/src/test/java/software/amazon/awssdk/codegen/model/intermediate/IntermediateModelTest.java", "diffHunk": "@@ -0,0 +1,73 @@\n+/*\n+ * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.awssdk.codegen.model.intermediate;\n+\n+import java.io.File;\n+import java.util.Collections;\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.junit.rules.ExpectedException;\n+import software.amazon.awssdk.codegen.C2jModels;\n+import software.amazon.awssdk.codegen.IntermediateModelBuilder;\n+import software.amazon.awssdk.codegen.model.config.customization.CustomizationConfig;\n+import software.amazon.awssdk.codegen.model.service.ServiceMetadata;\n+import software.amazon.awssdk.codegen.model.service.ServiceModel;\n+import software.amazon.awssdk.codegen.utils.ModelLoaderUtils;\n+\n+public class IntermediateModelTest {\n+\n+    @Rule\n+    public ExpectedException exception = ExpectedException.none();\n+\n+    @Test\n+    public void cannotFindShapeWhenNoShapesExist() {\n+        exception.expect(IllegalArgumentException.class);\n+        exception.expectMessage(\"C2J shape AnyShape with shape name AnyShape does not exist in the intermediate model\");\n+\n+        ServiceMetadata metadata = new ServiceMetadata();\n+        metadata.setProtocol(Protocol.REST_JSON.getValue());\n+        metadata.setServiceId(\"empty-service\");\n+        metadata.setSignatureVersion(\"V4\");\n+\n+        IntermediateModel testModel = new IntermediateModelBuilder(\n+            C2jModels.builder()\n+                     .serviceModel(new ServiceModel(metadata,\n+                                                    Collections.emptyMap(),\n+                                                    Collections.emptyMap(),\n+                                                    Collections.emptyMap()))\n+                     .customizationConfig(CustomizationConfig.create())\n+                     .build())\n+            .build();\n+        testModel.getShapeByNameAndC2jName(\"AnyShape\", \"AnyShape\");\n+    }\n+\n+    @Test\n+    public void getShapeByNameAndC2jNameVerifiesC2JName() {\n+        final File modelFile = new File(IntermediateModelTest.class\n+                                            .getResource(\"../../poet/client/c2j/shared-output/service-2.json\").getFile());\n+        IntermediateModel testModel = new IntermediateModelBuilder(\n+            C2jModels.builder()\n+                     .serviceModel(ModelLoaderUtils.loadModel(ServiceModel.class, modelFile))\n+                     .customizationConfig(CustomizationConfig.create())\n+                     .build())\n+            .build();\n+\n+        exception.expect(IllegalArgumentException.class);\n+        exception.expectMessage(\"C2J shape AnyShape with shape name PingResponse does not exist in the intermediate model\");\n+\n+        testModel.getShapeByNameAndC2jName(\"PingResponse\", \"AnyShape\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "df1cdf4be99197cc3d75852e679f4c81f01d43c6"}, "originalPosition": 71}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA1NDUxNA==", "bodyText": "Also updated this.", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1819#discussion_r424054514", "createdAt": "2020-05-12T21:50:30Z", "author": {"login": "adamthom-amzn"}, "path": "codegen/src/test/java/software/amazon/awssdk/codegen/model/intermediate/IntermediateModelTest.java", "diffHunk": "@@ -0,0 +1,73 @@\n+/*\n+ * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.awssdk.codegen.model.intermediate;\n+\n+import java.io.File;\n+import java.util.Collections;\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.junit.rules.ExpectedException;\n+import software.amazon.awssdk.codegen.C2jModels;\n+import software.amazon.awssdk.codegen.IntermediateModelBuilder;\n+import software.amazon.awssdk.codegen.model.config.customization.CustomizationConfig;\n+import software.amazon.awssdk.codegen.model.service.ServiceMetadata;\n+import software.amazon.awssdk.codegen.model.service.ServiceModel;\n+import software.amazon.awssdk.codegen.utils.ModelLoaderUtils;\n+\n+public class IntermediateModelTest {\n+\n+    @Rule\n+    public ExpectedException exception = ExpectedException.none();\n+\n+    @Test\n+    public void cannotFindShapeWhenNoShapesExist() {\n+        exception.expect(IllegalArgumentException.class);\n+        exception.expectMessage(\"C2J shape AnyShape with shape name AnyShape does not exist in the intermediate model\");\n+\n+        ServiceMetadata metadata = new ServiceMetadata();\n+        metadata.setProtocol(Protocol.REST_JSON.getValue());\n+        metadata.setServiceId(\"empty-service\");\n+        metadata.setSignatureVersion(\"V4\");\n+\n+        IntermediateModel testModel = new IntermediateModelBuilder(\n+            C2jModels.builder()\n+                     .serviceModel(new ServiceModel(metadata,\n+                                                    Collections.emptyMap(),\n+                                                    Collections.emptyMap(),\n+                                                    Collections.emptyMap()))\n+                     .customizationConfig(CustomizationConfig.create())\n+                     .build())\n+            .build();\n+        testModel.getShapeByNameAndC2jName(\"AnyShape\", \"AnyShape\");\n+    }\n+\n+    @Test\n+    public void getShapeByNameAndC2jNameVerifiesC2JName() {\n+        final File modelFile = new File(IntermediateModelTest.class\n+                                            .getResource(\"../../poet/client/c2j/shared-output/service-2.json\").getFile());\n+        IntermediateModel testModel = new IntermediateModelBuilder(\n+            C2jModels.builder()\n+                     .serviceModel(ModelLoaderUtils.loadModel(ServiceModel.class, modelFile))\n+                     .customizationConfig(CustomizationConfig.create())\n+                     .build())\n+            .build();\n+\n+        exception.expect(IllegalArgumentException.class);\n+        exception.expectMessage(\"C2J shape AnyShape with shape name PingResponse does not exist in the intermediate model\");\n+\n+        testModel.getShapeByNameAndC2jName(\"PingResponse\", \"AnyShape\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzk1MDQxMg=="}, "originalCommit": {"oid": "df1cdf4be99197cc3d75852e679f4c81f01d43c6"}, "originalPosition": 71}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4101, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}