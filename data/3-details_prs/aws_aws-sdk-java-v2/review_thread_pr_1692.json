{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg1MDMyMzU2", "number": 1692, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxNjo1NDowMlrODnKW8w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQxNzoyNzo0NFrODpm09w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyMzkwNzcxOnYy", "diffSide": "RIGHT", "path": "http-clients/netty-nio-client/src/test/java/software/amazon/awssdk/http/nio/netty/fault/GoAwayTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxNjo1NDowMlrOF0_8Pw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxNjo1NDowMlrOF0_8Pw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTExNzg4Nw==", "bodyText": "Can we delegate instead of copy+paste?", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1692#discussion_r391117887", "createdAt": "2020-03-11T16:54:02Z", "author": {"login": "millems"}, "path": "http-clients/netty-nio-client/src/test/java/software/amazon/awssdk/http/nio/netty/fault/GoAwayTest.java", "diffHunk": "@@ -97,6 +97,21 @@ public void goAwayCanCloseAllStreams() throws InterruptedException {\n \n         CountDownLatch allRequestsReceived = new CountDownLatch(2);\n         Supplier<Http2FrameListener> frameListenerSupplier = () -> new TestFrameListener() {\n+            @Override\n+            public void onHeadersRead(ChannelHandlerContext ctx, int streamId, Http2Headers headers, int padding, boolean endStream) {\n+                serverChannels.add(ctx.channel().id().asShortText());\n+\n+                Http2Headers outboundHeaders = new DefaultHttp2Headers()\n+                    .status(\"200\")\n+                    .add(\"content-type\", \"text/plain\")\n+                    .addInt(\"content-length\", 5);\n+\n+                frameWriter().writeHeaders(ctx, streamId, outboundHeaders, 0, false, ctx.newPromise());\n+                ctx.flush();\n+\n+                allRequestsReceived.countDown();\n+            }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0dae562898b869ef0fafce40f6dc24b2344cef34"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyMzkwODU3OnYy", "diffSide": "RIGHT", "path": "http-clients/netty-nio-client/src/test/java/software/amazon/awssdk/http/nio/netty/fault/GoAwayTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxNjo1NDoxN1rOF0_8zQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxNjo1NDoxN1rOF0_8zQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTExODAyOQ==", "bodyText": "Can we delegate instead of copy+paste?", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1692#discussion_r391118029", "createdAt": "2020-03-11T16:54:17Z", "author": {"login": "millems"}, "path": "http-clients/netty-nio-client/src/test/java/software/amazon/awssdk/http/nio/netty/fault/GoAwayTest.java", "diffHunk": "@@ -146,6 +161,12 @@ public void onHeadersRead(ChannelHandlerContext ctx, int streamId, Http2Headers\n     public void execute_goAwayReceived_existingChannelsNotReused() throws InterruptedException {\n         // Frame listener supplier for each connection\n         Supplier<Http2FrameListener> frameListenerSupplier = () -> new TestFrameListener() {\n+            @Override\n+            public void onHeadersRead(ChannelHandlerContext ctx, int streamId, Http2Headers headers, int padding, boolean endStream) {\n+                frameWriter().writeHeaders(ctx, streamId, new DefaultHttp2Headers().add(\"content-length\", \"0\").status(\"204\"), 0, true, ctx.newPromise());\n+                ctx.flush();\n+            }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0dae562898b869ef0fafce40f6dc24b2344cef34"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyMzkwOTQ0OnYy", "diffSide": "RIGHT", "path": "http-clients/netty-nio-client/src/test/java/software/amazon/awssdk/http/nio/netty/fault/GoAwayTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxNjo1NDoyOVrOF0_9Xw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxNjo1NDoyOVrOF0_9Xw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTExODE3NQ==", "bodyText": "Can we delegate instead of copy+paste?", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1692#discussion_r391118175", "createdAt": "2020-03-11T16:54:29Z", "author": {"login": "millems"}, "path": "http-clients/netty-nio-client/src/test/java/software/amazon/awssdk/http/nio/netty/fault/GoAwayTest.java", "diffHunk": "@@ -188,6 +209,27 @@ public void execute_goAwayReceived_lastStreamId_lowerStreamsNotClosed() throws I\n         CountDownLatch allRequestsReceived = new CountDownLatch(2);\n         byte[] getPayload = \"go away!\".getBytes(StandardCharsets.UTF_8);\n         Supplier<Http2FrameListener> frameListenerSupplier = () -> new TestFrameListener() {\n+            @Override\n+            public void onHeadersRead(ChannelHandlerContext ctx, int streamId, Http2Headers headers, int padding, boolean endStream) {\n+                channelToStreams.computeIfAbsent(ctx.channel().id().asShortText(), (k) -> Collections.newSetFromMap(new ConcurrentHashMap<>())).add(streamId);\n+\n+                if (streamId == 3) {\n+                    stream3Received.complete(null);\n+                }\n+\n+                if (streamId < 5) {\n+                    Http2Headers outboundHeaders = new DefaultHttp2Headers()\n+                        .status(\"200\")\n+                        .add(\"content-type\", \"text/plain\")\n+                        .addInt(\"content-length\", getPayload.length);\n+\n+                    frameWriter().writeHeaders(ctx, streamId, outboundHeaders, 0, false, ctx.newPromise());\n+                    ctx.flush();\n+                }\n+\n+                allRequestsReceived.countDown();\n+            }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0dae562898b869ef0fafce40f6dc24b2344cef34"}, "originalPosition": 58}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0OTUyMjIzOnYy", "diffSide": "RIGHT", "path": "http-clients/netty-nio-client/src/main/java/software/amazon/awssdk/http/nio/netty/internal/ChannelPipelineInitializer.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQxNzoyMjozNFrOF44wJg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQxNzoyMjozNFrOF44wJg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTE5NDQwNg==", "bodyText": "Can we add a comment here to explain why we are setting this?\nProbably something like this:\n// Use unpooled allocator to avoid increased heap memory usage from Netty 4.1.43. See https://github.com/netty/netty/issues/9768", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1692#discussion_r395194406", "createdAt": "2020-03-19T17:22:34Z", "author": {"login": "zoewangg"}, "path": "http-clients/netty-nio-client/src/main/java/software/amazon/awssdk/http/nio/netty/internal/ChannelPipelineInitializer.java", "diffHunk": "@@ -94,6 +96,8 @@ public void channelCreated(Channel ch) {\n \n             pipeline.addLast(sslHandler);\n             pipeline.addLast(SslCloseCompletionEventHandler.getInstance());\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d1f335f8141d2e3d0ac1cd56b859898b55744ecd"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0OTU0MzU5OnYy", "diffSide": "RIGHT", "path": "http-clients/netty-nio-client/src/main/java/software/amazon/awssdk/http/nio/netty/internal/ChannelPipelineInitializer.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQxNzoyNzo0NFrOF4496Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQxODoxMzo1MVrOF46t5A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTE5NzkyOQ==", "bodyText": "Should we only set this for JDK SsLProvider since the issue only affects customers using JDK SSL engine?", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1692#discussion_r395197929", "createdAt": "2020-03-19T17:27:44Z", "author": {"login": "zoewangg"}, "path": "http-clients/netty-nio-client/src/main/java/software/amazon/awssdk/http/nio/netty/internal/ChannelPipelineInitializer.java", "diffHunk": "@@ -94,6 +96,8 @@ public void channelCreated(Channel ch) {\n \n             pipeline.addLast(sslHandler);\n             pipeline.addLast(SslCloseCompletionEventHandler.getInstance());\n+\n+            ch.config().setOption(ChannelOption.ALLOCATOR, UnpooledByteBufAllocator.DEFAULT);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d1f335f8141d2e3d0ac1cd56b859898b55744ecd"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTIxNjkyOQ==", "bodyText": "@dagnir @millems WDUT?", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1692#discussion_r395216929", "createdAt": "2020-03-19T17:57:26Z", "author": {"login": "zoewangg"}, "path": "http-clients/netty-nio-client/src/main/java/software/amazon/awssdk/http/nio/netty/internal/ChannelPipelineInitializer.java", "diffHunk": "@@ -94,6 +96,8 @@ public void channelCreated(Channel ch) {\n \n             pipeline.addLast(sslHandler);\n             pipeline.addLast(SslCloseCompletionEventHandler.getInstance());\n+\n+            ch.config().setOption(ChannelOption.ALLOCATOR, UnpooledByteBufAllocator.DEFAULT);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTE5NzkyOQ=="}, "originalCommit": {"oid": "d1f335f8141d2e3d0ac1cd56b859898b55744ecd"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTIyNTU0NQ==", "bodyText": "+1", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1692#discussion_r395225545", "createdAt": "2020-03-19T18:12:03Z", "author": {"login": "dagnir"}, "path": "http-clients/netty-nio-client/src/main/java/software/amazon/awssdk/http/nio/netty/internal/ChannelPipelineInitializer.java", "diffHunk": "@@ -94,6 +96,8 @@ public void channelCreated(Channel ch) {\n \n             pipeline.addLast(sslHandler);\n             pipeline.addLast(SslCloseCompletionEventHandler.getInstance());\n+\n+            ch.config().setOption(ChannelOption.ALLOCATOR, UnpooledByteBufAllocator.DEFAULT);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTE5NzkyOQ=="}, "originalCommit": {"oid": "d1f335f8141d2e3d0ac1cd56b859898b55744ecd"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTIyNTg5NQ==", "bodyText": "+1, smallest blast-radius is better. Easier to expand later if it causes problems.", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1692#discussion_r395225895", "createdAt": "2020-03-19T18:12:41Z", "author": {"login": "millems"}, "path": "http-clients/netty-nio-client/src/main/java/software/amazon/awssdk/http/nio/netty/internal/ChannelPipelineInitializer.java", "diffHunk": "@@ -94,6 +96,8 @@ public void channelCreated(Channel ch) {\n \n             pipeline.addLast(sslHandler);\n             pipeline.addLast(SslCloseCompletionEventHandler.getInstance());\n+\n+            ch.config().setOption(ChannelOption.ALLOCATOR, UnpooledByteBufAllocator.DEFAULT);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTE5NzkyOQ=="}, "originalCommit": {"oid": "d1f335f8141d2e3d0ac1cd56b859898b55744ecd"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTIyNjU5Ng==", "bodyText": "Got it, will do!", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1692#discussion_r395226596", "createdAt": "2020-03-19T18:13:51Z", "author": {"login": "Quanzzzz"}, "path": "http-clients/netty-nio-client/src/main/java/software/amazon/awssdk/http/nio/netty/internal/ChannelPipelineInitializer.java", "diffHunk": "@@ -94,6 +96,8 @@ public void channelCreated(Channel ch) {\n \n             pipeline.addLast(sslHandler);\n             pipeline.addLast(SslCloseCompletionEventHandler.getInstance());\n+\n+            ch.config().setOption(ChannelOption.ALLOCATOR, UnpooledByteBufAllocator.DEFAULT);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTE5NzkyOQ=="}, "originalCommit": {"oid": "d1f335f8141d2e3d0ac1cd56b859898b55744ecd"}, "originalPosition": 16}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4255, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}