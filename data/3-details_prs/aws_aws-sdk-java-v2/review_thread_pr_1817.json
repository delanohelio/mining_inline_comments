{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE0MjgxOTg3", "number": 1817, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxODoyOTo0NlrOD7xlGA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxODoyOTo0NlrOD7xlGA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0MDA0ODg4OnYy", "diffSide": "RIGHT", "path": "codegen/src/test/java/software/amazon/awssdk/codegen/IntermediateModelBuilderTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxODoyOTo0NlrOGUToYg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMTo1NDo1N1rOGUaWwQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzk0NjMzOA==", "bodyText": "assertThat(testModel.getShapes().values())\n    .extracting(ShapeModel::getShapeName)\n    .containsExactlyInAnyOrder(\"DefaultCollisionException\", \"DefaultCollisionRequest\", \"DefaultCollisionResponse\");\n?", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1817#discussion_r423946338", "createdAt": "2020-05-12T18:29:46Z", "author": {"login": "millems"}, "path": "codegen/src/test/java/software/amazon/awssdk/codegen/IntermediateModelBuilderTest.java", "diffHunk": "@@ -0,0 +1,47 @@\n+/*\n+ * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.awssdk.codegen;\n+\n+import static org.junit.Assert.assertEquals;\n+\n+import java.io.File;\n+import java.util.Arrays;\n+import java.util.HashSet;\n+import java.util.stream.Collectors;\n+import org.junit.Test;\n+import software.amazon.awssdk.codegen.model.config.customization.CustomizationConfig;\n+import software.amazon.awssdk.codegen.model.intermediate.IntermediateModel;\n+import software.amazon.awssdk.codegen.model.service.ServiceModel;\n+import software.amazon.awssdk.codegen.utils.ModelLoaderUtils;\n+\n+public class IntermediateModelBuilderTest {\n+\n+    @Test\n+    public void testServiceAndShapeNameCollisions() throws Exception {\n+        final File modelFile = new File(IntermediateModelBuilderTest.class\n+                                            .getResource(\"poet/client/c2j/collision/service-2.json\").getFile());\n+        IntermediateModel testModel = new IntermediateModelBuilder(\n+            C2jModels.builder()\n+                     .serviceModel(ModelLoaderUtils.loadModel(ServiceModel.class, modelFile))\n+                     .customizationConfig(CustomizationConfig.create())\n+                     .build())\n+            .build();\n+\n+        assertEquals(new HashSet<>(Arrays.asList(\"DefaultCollisionException\", \"DefaultCollisionRequest\", \"DefaultCollisionResponse\")),\n+                     testModel.getShapes().values().stream().map(s -> s.getShapeName()).collect(Collectors.toSet()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "12c1b8f767e807fac62f05e5725eda4482b12100"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA1NjUxMw==", "bodyText": "Changed.", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1817#discussion_r424056513", "createdAt": "2020-05-12T21:54:57Z", "author": {"login": "adamthom-amzn"}, "path": "codegen/src/test/java/software/amazon/awssdk/codegen/IntermediateModelBuilderTest.java", "diffHunk": "@@ -0,0 +1,47 @@\n+/*\n+ * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.awssdk.codegen;\n+\n+import static org.junit.Assert.assertEquals;\n+\n+import java.io.File;\n+import java.util.Arrays;\n+import java.util.HashSet;\n+import java.util.stream.Collectors;\n+import org.junit.Test;\n+import software.amazon.awssdk.codegen.model.config.customization.CustomizationConfig;\n+import software.amazon.awssdk.codegen.model.intermediate.IntermediateModel;\n+import software.amazon.awssdk.codegen.model.service.ServiceModel;\n+import software.amazon.awssdk.codegen.utils.ModelLoaderUtils;\n+\n+public class IntermediateModelBuilderTest {\n+\n+    @Test\n+    public void testServiceAndShapeNameCollisions() throws Exception {\n+        final File modelFile = new File(IntermediateModelBuilderTest.class\n+                                            .getResource(\"poet/client/c2j/collision/service-2.json\").getFile());\n+        IntermediateModel testModel = new IntermediateModelBuilder(\n+            C2jModels.builder()\n+                     .serviceModel(ModelLoaderUtils.loadModel(ServiceModel.class, modelFile))\n+                     .customizationConfig(CustomizationConfig.create())\n+                     .build())\n+            .build();\n+\n+        assertEquals(new HashSet<>(Arrays.asList(\"DefaultCollisionException\", \"DefaultCollisionRequest\", \"DefaultCollisionResponse\")),\n+                     testModel.getShapes().values().stream().map(s -> s.getShapeName()).collect(Collectors.toSet()));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzk0NjMzOA=="}, "originalCommit": {"oid": "12c1b8f767e807fac62f05e5725eda4482b12100"}, "originalPosition": 44}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4098, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}