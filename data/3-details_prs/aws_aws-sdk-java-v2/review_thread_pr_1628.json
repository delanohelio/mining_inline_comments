{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY5NzEwNzgw", "number": 1628, "reviewThreads": {"totalCount": 35, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQxODozMToyM1rODcUh8A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQxOToxNjo1MlrODdc06g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxMDIzMDg4OnYy", "diffSide": "RIGHT", "path": ".changes/next-release/feature-AmazonDynamoDBEnhancedClientPreview-c0a1314.json", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQxODozMToyM1rOFkUFKQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQyMTozMToyOFrOFkYg4Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzYyMjA1Nw==", "bodyText": "Can we take out the bit about 'there will be a corresponding....' I don't think the release notes is the place to communicate future intentions.", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1628#discussion_r373622057", "createdAt": "2020-01-31T18:31:23Z", "author": {"login": "bmaizels"}, "path": ".changes/next-release/feature-AmazonDynamoDBEnhancedClientPreview-c0a1314.json", "diffHunk": "@@ -0,0 +1,5 @@\n+{\n+    \"type\": \"feature\",\n+    \"category\": \"Amazon DynamoDB Enhanced Client [Preview]\",\n+    \"description\": \"Adds specific operation methods to the enhanced client inteface, which take a request object as parameter. The execute() method is removed. There will be a corresponding refactoring for all enhanced table operations.\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "86d01628cc2d63b075ae4851496ad4ca6366d2df"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzYyMjM2Nw==", "bodyText": "In fact I'd rewrite this more to orient towards the goal of the change which is 'Make operations more easily discoverable by an IDE'.", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1628#discussion_r373622367", "createdAt": "2020-01-31T18:32:11Z", "author": {"login": "bmaizels"}, "path": ".changes/next-release/feature-AmazonDynamoDBEnhancedClientPreview-c0a1314.json", "diffHunk": "@@ -0,0 +1,5 @@\n+{\n+    \"type\": \"feature\",\n+    \"category\": \"Amazon DynamoDB Enhanced Client [Preview]\",\n+    \"description\": \"Adds specific operation methods to the enhanced client inteface, which take a request object as parameter. The execute() method is removed. There will be a corresponding refactoring for all enhanced table operations.\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzYyMjA1Nw=="}, "originalCommit": {"oid": "86d01628cc2d63b075ae4851496ad4ca6366d2df"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY3ODM1MA==", "bodyText": "How about \"In order to make operations more easily discoverable by an IDE, specific operation methods have been added to the enhanced client interface. An operation method takes a corresponding request object as parameter. The execute() method is removed.\"", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1628#discussion_r373678350", "createdAt": "2020-01-31T20:47:25Z", "author": {"login": "cenedhryn"}, "path": ".changes/next-release/feature-AmazonDynamoDBEnhancedClientPreview-c0a1314.json", "diffHunk": "@@ -0,0 +1,5 @@\n+{\n+    \"type\": \"feature\",\n+    \"category\": \"Amazon DynamoDB Enhanced Client [Preview]\",\n+    \"description\": \"Adds specific operation methods to the enhanced client inteface, which take a request object as parameter. The execute() method is removed. There will be a corresponding refactoring for all enhanced table operations.\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzYyMjA1Nw=="}, "originalCommit": {"oid": "86d01628cc2d63b075ae4851496ad4ca6366d2df"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY5NDY4OQ==", "bodyText": "If we make it clear it's just for database level operations, then it's good.", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1628#discussion_r373694689", "createdAt": "2020-01-31T21:31:28Z", "author": {"login": "bmaizels"}, "path": ".changes/next-release/feature-AmazonDynamoDBEnhancedClientPreview-c0a1314.json", "diffHunk": "@@ -0,0 +1,5 @@\n+{\n+    \"type\": \"feature\",\n+    \"category\": \"Amazon DynamoDB Enhanced Client [Preview]\",\n+    \"description\": \"Adds specific operation methods to the enhanced client inteface, which take a request object as parameter. The execute() method is removed. There will be a corresponding refactoring for all enhanced table operations.\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzYyMjA1Nw=="}, "originalCommit": {"oid": "86d01628cc2d63b075ae4851496ad4ca6366d2df"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxMDIzNzY3OnYy", "diffSide": "RIGHT", "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/DynamoDbEnhancedAsyncClient.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQxODozNDowMlrOFkUJXg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQxOTozOTo0MVrOFkV5HA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzYyMzEzNA==", "bodyText": "Maybe this should return CompletableFuture<List<TransactGetResultPage>> for consistency. Seems to really poke out seeing it side-by-side here.", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1628#discussion_r373623134", "createdAt": "2020-01-31T18:34:02Z", "author": {"login": "bmaizels"}, "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/DynamoDbEnhancedAsyncClient.java", "diffHunk": "@@ -47,6 +45,22 @@\n      */\n     <T> AsyncMappedTable<T> table(String tableName, TableSchema<T> tableSchema);\n \n+    default SdkPublisher<BatchGetResultPage> batchGetItem(BatchGetItemEnhancedRequest request) {\n+        throw new UnsupportedOperationException();\n+    }\n+\n+    default CompletableFuture<BatchWriteResult> batchWriteItem(BatchWriteItemEnhancedRequest request) {\n+        throw new UnsupportedOperationException();\n+    }\n+\n+    default CompletableFuture<List<UnmappedItem>> transactGetItems(TransactGetItemsEnhancedRequest request) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "86d01628cc2d63b075ae4851496ad4ca6366d2df"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY1MTc0MA==", "bodyText": "Agree", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1628#discussion_r373651740", "createdAt": "2020-01-31T19:39:41Z", "author": {"login": "cenedhryn"}, "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/DynamoDbEnhancedAsyncClient.java", "diffHunk": "@@ -47,6 +45,22 @@\n      */\n     <T> AsyncMappedTable<T> table(String tableName, TableSchema<T> tableSchema);\n \n+    default SdkPublisher<BatchGetResultPage> batchGetItem(BatchGetItemEnhancedRequest request) {\n+        throw new UnsupportedOperationException();\n+    }\n+\n+    default CompletableFuture<BatchWriteResult> batchWriteItem(BatchWriteItemEnhancedRequest request) {\n+        throw new UnsupportedOperationException();\n+    }\n+\n+    default CompletableFuture<List<UnmappedItem>> transactGetItems(TransactGetItemsEnhancedRequest request) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzYyMzEzNA=="}, "originalCommit": {"oid": "86d01628cc2d63b075ae4851496ad4ca6366d2df"}, "originalPosition": 49}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxMDIzOTgzOnYy", "diffSide": "RIGHT", "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/DynamoDbEnhancedClient.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQxODozNDo0OVrOFkUKoA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQyMDo0OTo0NVrOFkXkHQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzYyMzQ1Ng==", "bodyText": "Same comment as previous one regarding the naming of UnmappedItem.", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1628#discussion_r373623456", "createdAt": "2020-01-31T18:34:49Z", "author": {"login": "bmaizels"}, "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/DynamoDbEnhancedClient.java", "diffHunk": "@@ -44,6 +44,22 @@\n      */\n     <T> MappedTable<T> table(String tableName, TableSchema<T> tableSchema);\n \n+    default SdkIterable<BatchGetResultPage> batchGetItem(BatchGetItemEnhancedRequest request) {\n+        throw new UnsupportedOperationException();\n+    }\n+\n+    default BatchWriteResult batchWriteItem(BatchWriteItemEnhancedRequest request) {\n+        throw new UnsupportedOperationException();\n+    }\n+\n+    default List<UnmappedItem> transactGetItems(TransactGetItemsEnhancedRequest request) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "86d01628cc2d63b075ae4851496ad4ca6366d2df"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY3OTEzMw==", "bodyText": "check", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1628#discussion_r373679133", "createdAt": "2020-01-31T20:49:45Z", "author": {"login": "cenedhryn"}, "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/DynamoDbEnhancedClient.java", "diffHunk": "@@ -44,6 +44,22 @@\n      */\n     <T> MappedTable<T> table(String tableName, TableSchema<T> tableSchema);\n \n+    default SdkIterable<BatchGetResultPage> batchGetItem(BatchGetItemEnhancedRequest request) {\n+        throw new UnsupportedOperationException();\n+    }\n+\n+    default BatchWriteResult batchWriteItem(BatchWriteItemEnhancedRequest request) {\n+        throw new UnsupportedOperationException();\n+    }\n+\n+    default List<UnmappedItem> transactGetItems(TransactGetItemsEnhancedRequest request) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzYyMzQ1Ng=="}, "originalCommit": {"oid": "86d01628cc2d63b075ae4851496ad4ca6366d2df"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxMDI0MTQ3OnYy", "diffSide": "RIGHT", "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/DynamoDbEnhancedAsyncClient.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQxODozNToyNlrOFkULpQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQyMDo0Nzo1M1rOFkXhsg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzYyMzcxNw==", "bodyText": "Can we copy parts of the operation javadocs here as applicable.", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1628#discussion_r373623717", "createdAt": "2020-01-31T18:35:26Z", "author": {"login": "bmaizels"}, "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/DynamoDbEnhancedAsyncClient.java", "diffHunk": "@@ -47,6 +45,22 @@\n      */\n     <T> AsyncMappedTable<T> table(String tableName, TableSchema<T> tableSchema);\n \n+    default SdkPublisher<BatchGetResultPage> batchGetItem(BatchGetItemEnhancedRequest request) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "86d01628cc2d63b075ae4851496ad4ca6366d2df"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY3ODUxNA==", "bodyText": "No, because there aren't any.", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1628#discussion_r373678514", "createdAt": "2020-01-31T20:47:53Z", "author": {"login": "cenedhryn"}, "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/DynamoDbEnhancedAsyncClient.java", "diffHunk": "@@ -47,6 +45,22 @@\n      */\n     <T> AsyncMappedTable<T> table(String tableName, TableSchema<T> tableSchema);\n \n+    default SdkPublisher<BatchGetResultPage> batchGetItem(BatchGetItemEnhancedRequest request) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzYyMzcxNw=="}, "originalCommit": {"oid": "86d01628cc2d63b075ae4851496ad4ca6366d2df"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxMDI0NjE1OnYy", "diffSide": "RIGHT", "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/core/DefaultDynamoDbEnhancedClient.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQxODozNzowM1rOFkUOhA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQyMTozMjozOVrOFkYijg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzYyNDQ1Mg==", "bodyText": "We should drop this annotation.", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1628#discussion_r373624452", "createdAt": "2020-01-31T18:37:03Z", "author": {"login": "bmaizels"}, "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/core/DefaultDynamoDbEnhancedClient.java", "diffHunk": "@@ -15,17 +15,29 @@\n \n package software.amazon.awssdk.extensions.dynamodb.mappingclient.core;\n \n+import java.util.List;\n import software.amazon.awssdk.annotations.SdkInternalApi;\n import software.amazon.awssdk.annotations.ThreadSafe;\n-import software.amazon.awssdk.extensions.dynamodb.mappingclient.DatabaseOperation;\n+import software.amazon.awssdk.core.pagination.sync.SdkIterable;\n import software.amazon.awssdk.extensions.dynamodb.mappingclient.DynamoDbEnhancedClient;\n import software.amazon.awssdk.extensions.dynamodb.mappingclient.MapperExtension;\n import software.amazon.awssdk.extensions.dynamodb.mappingclient.TableSchema;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.model.BatchGetItemEnhancedRequest;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.model.BatchGetResultPage;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.model.BatchWriteItemEnhancedRequest;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.model.BatchWriteResult;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.model.TransactGetItemsEnhancedRequest;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.model.TransactWriteItemsEnhancedRequest;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.model.UnmappedItem;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.operations.BatchGetItemOperation;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.operations.BatchWriteItemOperation;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.operations.TransactGetItemsOperation;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.operations.TransactWriteItemsOperation;\n import software.amazon.awssdk.services.dynamodb.DynamoDbClient;\n \n @SdkInternalApi\n @ThreadSafe", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "86d01628cc2d63b075ae4851496ad4ca6366d2df"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY1MTg4Nw==", "bodyText": "ok", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1628#discussion_r373651887", "createdAt": "2020-01-31T19:40:02Z", "author": {"login": "cenedhryn"}, "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/core/DefaultDynamoDbEnhancedClient.java", "diffHunk": "@@ -15,17 +15,29 @@\n \n package software.amazon.awssdk.extensions.dynamodb.mappingclient.core;\n \n+import java.util.List;\n import software.amazon.awssdk.annotations.SdkInternalApi;\n import software.amazon.awssdk.annotations.ThreadSafe;\n-import software.amazon.awssdk.extensions.dynamodb.mappingclient.DatabaseOperation;\n+import software.amazon.awssdk.core.pagination.sync.SdkIterable;\n import software.amazon.awssdk.extensions.dynamodb.mappingclient.DynamoDbEnhancedClient;\n import software.amazon.awssdk.extensions.dynamodb.mappingclient.MapperExtension;\n import software.amazon.awssdk.extensions.dynamodb.mappingclient.TableSchema;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.model.BatchGetItemEnhancedRequest;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.model.BatchGetResultPage;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.model.BatchWriteItemEnhancedRequest;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.model.BatchWriteResult;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.model.TransactGetItemsEnhancedRequest;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.model.TransactWriteItemsEnhancedRequest;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.model.UnmappedItem;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.operations.BatchGetItemOperation;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.operations.BatchWriteItemOperation;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.operations.TransactGetItemsOperation;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.operations.TransactWriteItemsOperation;\n import software.amazon.awssdk.services.dynamodb.DynamoDbClient;\n \n @SdkInternalApi\n @ThreadSafe", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzYyNDQ1Mg=="}, "originalCommit": {"oid": "86d01628cc2d63b075ae4851496ad4ca6366d2df"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY3OTY3Nw==", "bodyText": "Should we drop it wherever it's used in the enhanced client?", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1628#discussion_r373679677", "createdAt": "2020-01-31T20:51:24Z", "author": {"login": "cenedhryn"}, "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/core/DefaultDynamoDbEnhancedClient.java", "diffHunk": "@@ -15,17 +15,29 @@\n \n package software.amazon.awssdk.extensions.dynamodb.mappingclient.core;\n \n+import java.util.List;\n import software.amazon.awssdk.annotations.SdkInternalApi;\n import software.amazon.awssdk.annotations.ThreadSafe;\n-import software.amazon.awssdk.extensions.dynamodb.mappingclient.DatabaseOperation;\n+import software.amazon.awssdk.core.pagination.sync.SdkIterable;\n import software.amazon.awssdk.extensions.dynamodb.mappingclient.DynamoDbEnhancedClient;\n import software.amazon.awssdk.extensions.dynamodb.mappingclient.MapperExtension;\n import software.amazon.awssdk.extensions.dynamodb.mappingclient.TableSchema;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.model.BatchGetItemEnhancedRequest;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.model.BatchGetResultPage;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.model.BatchWriteItemEnhancedRequest;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.model.BatchWriteResult;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.model.TransactGetItemsEnhancedRequest;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.model.TransactWriteItemsEnhancedRequest;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.model.UnmappedItem;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.operations.BatchGetItemOperation;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.operations.BatchWriteItemOperation;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.operations.TransactGetItemsOperation;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.operations.TransactWriteItemsOperation;\n import software.amazon.awssdk.services.dynamodb.DynamoDbClient;\n \n @SdkInternalApi\n @ThreadSafe", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzYyNDQ1Mg=="}, "originalCommit": {"oid": "86d01628cc2d63b075ae4851496ad4ca6366d2df"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY5NTExOA==", "bodyText": "Not necessarily, if it's a class that is likely to be re-used in different ways, and it needs to be threadsafe to be used safely with multiple threads then we should annotate. Just in this instance it seems worthless.", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1628#discussion_r373695118", "createdAt": "2020-01-31T21:32:39Z", "author": {"login": "bmaizels"}, "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/core/DefaultDynamoDbEnhancedClient.java", "diffHunk": "@@ -15,17 +15,29 @@\n \n package software.amazon.awssdk.extensions.dynamodb.mappingclient.core;\n \n+import java.util.List;\n import software.amazon.awssdk.annotations.SdkInternalApi;\n import software.amazon.awssdk.annotations.ThreadSafe;\n-import software.amazon.awssdk.extensions.dynamodb.mappingclient.DatabaseOperation;\n+import software.amazon.awssdk.core.pagination.sync.SdkIterable;\n import software.amazon.awssdk.extensions.dynamodb.mappingclient.DynamoDbEnhancedClient;\n import software.amazon.awssdk.extensions.dynamodb.mappingclient.MapperExtension;\n import software.amazon.awssdk.extensions.dynamodb.mappingclient.TableSchema;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.model.BatchGetItemEnhancedRequest;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.model.BatchGetResultPage;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.model.BatchWriteItemEnhancedRequest;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.model.BatchWriteResult;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.model.TransactGetItemsEnhancedRequest;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.model.TransactWriteItemsEnhancedRequest;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.model.UnmappedItem;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.operations.BatchGetItemOperation;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.operations.BatchWriteItemOperation;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.operations.TransactGetItemsOperation;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.operations.TransactWriteItemsOperation;\n import software.amazon.awssdk.services.dynamodb.DynamoDbClient;\n \n @SdkInternalApi\n @ThreadSafe", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzYyNDQ1Mg=="}, "originalCommit": {"oid": "86d01628cc2d63b075ae4851496ad4ca6366d2df"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxMDI0NzgxOnYy", "diffSide": "RIGHT", "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/core/DefaultDynamoDbEnhancedClient.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQxODozNzo0M1rOFkUPqw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQxOTo0MDoxMVrOFkV58A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzYyNDc0Nw==", "bodyText": "Nit: extraneous linebreak.", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1628#discussion_r373624747", "createdAt": "2020-01-31T18:37:43Z", "author": {"login": "bmaizels"}, "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/core/DefaultDynamoDbEnhancedClient.java", "diffHunk": "@@ -60,6 +91,7 @@ public Builder toBuilder() {\n         return builder().dynamoDbClient(this.dynamoDbClient).extendWith(this.mapperExtension);\n     }\n \n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "86d01628cc2d63b075ae4851496ad4ca6366d2df"}, "originalPosition": 72}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY1MTk1Mg==", "bodyText": "ok", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1628#discussion_r373651952", "createdAt": "2020-01-31T19:40:11Z", "author": {"login": "cenedhryn"}, "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/core/DefaultDynamoDbEnhancedClient.java", "diffHunk": "@@ -60,6 +91,7 @@ public Builder toBuilder() {\n         return builder().dynamoDbClient(this.dynamoDbClient).extendWith(this.mapperExtension);\n     }\n \n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzYyNDc0Nw=="}, "originalCommit": {"oid": "86d01628cc2d63b075ae4851496ad4ca6366d2df"}, "originalPosition": 72}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxMDI1MTc5OnYy", "diffSide": "RIGHT", "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/model/BatchGetItemEnhancedRequest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQxODozOTowNFrOFkUSKw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQxOTo0MToyNVrOFkV75A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzYyNTM4Nw==", "bodyText": "Looks out of order, maybe place this one next to the other readBatches implementation.", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1628#discussion_r373625387", "createdAt": "2020-01-31T18:39:04Z", "author": {"login": "bmaizels"}, "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/model/BatchGetItemEnhancedRequest.java", "diffHunk": "@@ -0,0 +1,92 @@\n+/*\n+ * Copyright 2010-2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.awssdk.extensions.dynamodb.mappingclient.model;\n+\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.Collection;\n+import software.amazon.awssdk.annotations.SdkPublicApi;\n+\n+@SdkPublicApi\n+public class BatchGetItemEnhancedRequest {\n+\n+    private final Collection<ReadBatch> readBatches;\n+\n+    private BatchGetItemEnhancedRequest(Builder builder) {\n+        this.readBatches = builder.readBatches;\n+    }\n+\n+    public static Builder builder() {\n+        return new Builder();\n+    }\n+\n+    public Builder toBuilder() {\n+        return new Builder().readBatches(readBatches);\n+    }\n+\n+    public Collection<ReadBatch> readBatches() {\n+        return readBatches;\n+    }\n+\n+    @Override\n+    public boolean equals(Object o) {\n+        if (this == o) {\n+            return true;\n+        }\n+        if (o == null || getClass() != o.getClass()) {\n+            return false;\n+        }\n+\n+        BatchGetItemEnhancedRequest that = (BatchGetItemEnhancedRequest) o;\n+\n+        return readBatches != null ? readBatches.equals(that.readBatches) : that.readBatches == null;\n+    }\n+\n+    @Override\n+    public int hashCode() {\n+        return readBatches != null ? readBatches.hashCode() : 0;\n+    }\n+\n+    public static final class Builder {\n+        private Collection<ReadBatch> readBatches;\n+\n+        private Builder() {\n+        }\n+\n+        public Builder readBatches(Collection<ReadBatch> readBatches) {\n+            this.readBatches = readBatches;\n+            return this;\n+        }\n+\n+        public Builder addReadBatch(ReadBatch readBatch) {\n+            if (readBatches == null) {\n+                readBatches = new ArrayList<>();\n+            }\n+            readBatches.add(readBatch);\n+            return this;\n+        }\n+\n+        public Builder readBatches(ReadBatch... readBatches) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "86d01628cc2d63b075ae4851496ad4ca6366d2df"}, "originalPosition": 82}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY1MjQ1Mg==", "bodyText": "ok", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1628#discussion_r373652452", "createdAt": "2020-01-31T19:41:25Z", "author": {"login": "cenedhryn"}, "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/model/BatchGetItemEnhancedRequest.java", "diffHunk": "@@ -0,0 +1,92 @@\n+/*\n+ * Copyright 2010-2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.awssdk.extensions.dynamodb.mappingclient.model;\n+\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.Collection;\n+import software.amazon.awssdk.annotations.SdkPublicApi;\n+\n+@SdkPublicApi\n+public class BatchGetItemEnhancedRequest {\n+\n+    private final Collection<ReadBatch> readBatches;\n+\n+    private BatchGetItemEnhancedRequest(Builder builder) {\n+        this.readBatches = builder.readBatches;\n+    }\n+\n+    public static Builder builder() {\n+        return new Builder();\n+    }\n+\n+    public Builder toBuilder() {\n+        return new Builder().readBatches(readBatches);\n+    }\n+\n+    public Collection<ReadBatch> readBatches() {\n+        return readBatches;\n+    }\n+\n+    @Override\n+    public boolean equals(Object o) {\n+        if (this == o) {\n+            return true;\n+        }\n+        if (o == null || getClass() != o.getClass()) {\n+            return false;\n+        }\n+\n+        BatchGetItemEnhancedRequest that = (BatchGetItemEnhancedRequest) o;\n+\n+        return readBatches != null ? readBatches.equals(that.readBatches) : that.readBatches == null;\n+    }\n+\n+    @Override\n+    public int hashCode() {\n+        return readBatches != null ? readBatches.hashCode() : 0;\n+    }\n+\n+    public static final class Builder {\n+        private Collection<ReadBatch> readBatches;\n+\n+        private Builder() {\n+        }\n+\n+        public Builder readBatches(Collection<ReadBatch> readBatches) {\n+            this.readBatches = readBatches;\n+            return this;\n+        }\n+\n+        public Builder addReadBatch(ReadBatch readBatch) {\n+            if (readBatches == null) {\n+                readBatches = new ArrayList<>();\n+            }\n+            readBatches.add(readBatch);\n+            return this;\n+        }\n+\n+        public Builder readBatches(ReadBatch... readBatches) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzYyNTM4Nw=="}, "originalCommit": {"oid": "86d01628cc2d63b075ae4851496ad4ca6366d2df"}, "originalPosition": 82}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxMDI1NDc0OnYy", "diffSide": "RIGHT", "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/model/BatchGetItemEnhancedRequest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQxODo0MDowOFrOFkUT9w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQxOTo0MTowM1rOFkV7YA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzYyNTg0Nw==", "bodyText": "I think we should use List here as we should (see other comment below) be controlling what implementation is used here.", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1628#discussion_r373625847", "createdAt": "2020-01-31T18:40:08Z", "author": {"login": "bmaizels"}, "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/model/BatchGetItemEnhancedRequest.java", "diffHunk": "@@ -0,0 +1,92 @@\n+/*\n+ * Copyright 2010-2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.awssdk.extensions.dynamodb.mappingclient.model;\n+\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.Collection;\n+import software.amazon.awssdk.annotations.SdkPublicApi;\n+\n+@SdkPublicApi\n+public class BatchGetItemEnhancedRequest {\n+\n+    private final Collection<ReadBatch> readBatches;\n+\n+    private BatchGetItemEnhancedRequest(Builder builder) {\n+        this.readBatches = builder.readBatches;\n+    }\n+\n+    public static Builder builder() {\n+        return new Builder();\n+    }\n+\n+    public Builder toBuilder() {\n+        return new Builder().readBatches(readBatches);\n+    }\n+\n+    public Collection<ReadBatch> readBatches() {\n+        return readBatches;\n+    }\n+\n+    @Override\n+    public boolean equals(Object o) {\n+        if (this == o) {\n+            return true;\n+        }\n+        if (o == null || getClass() != o.getClass()) {\n+            return false;\n+        }\n+\n+        BatchGetItemEnhancedRequest that = (BatchGetItemEnhancedRequest) o;\n+\n+        return readBatches != null ? readBatches.equals(that.readBatches) : that.readBatches == null;\n+    }\n+\n+    @Override\n+    public int hashCode() {\n+        return readBatches != null ? readBatches.hashCode() : 0;\n+    }\n+\n+    public static final class Builder {\n+        private Collection<ReadBatch> readBatches;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "86d01628cc2d63b075ae4851496ad4ca6366d2df"}, "originalPosition": 64}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY1MjMyMA==", "bodyText": "ok", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1628#discussion_r373652320", "createdAt": "2020-01-31T19:41:03Z", "author": {"login": "cenedhryn"}, "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/model/BatchGetItemEnhancedRequest.java", "diffHunk": "@@ -0,0 +1,92 @@\n+/*\n+ * Copyright 2010-2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.awssdk.extensions.dynamodb.mappingclient.model;\n+\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.Collection;\n+import software.amazon.awssdk.annotations.SdkPublicApi;\n+\n+@SdkPublicApi\n+public class BatchGetItemEnhancedRequest {\n+\n+    private final Collection<ReadBatch> readBatches;\n+\n+    private BatchGetItemEnhancedRequest(Builder builder) {\n+        this.readBatches = builder.readBatches;\n+    }\n+\n+    public static Builder builder() {\n+        return new Builder();\n+    }\n+\n+    public Builder toBuilder() {\n+        return new Builder().readBatches(readBatches);\n+    }\n+\n+    public Collection<ReadBatch> readBatches() {\n+        return readBatches;\n+    }\n+\n+    @Override\n+    public boolean equals(Object o) {\n+        if (this == o) {\n+            return true;\n+        }\n+        if (o == null || getClass() != o.getClass()) {\n+            return false;\n+        }\n+\n+        BatchGetItemEnhancedRequest that = (BatchGetItemEnhancedRequest) o;\n+\n+        return readBatches != null ? readBatches.equals(that.readBatches) : that.readBatches == null;\n+    }\n+\n+    @Override\n+    public int hashCode() {\n+        return readBatches != null ? readBatches.hashCode() : 0;\n+    }\n+\n+    public static final class Builder {\n+        private Collection<ReadBatch> readBatches;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzYyNTg0Nw=="}, "originalCommit": {"oid": "86d01628cc2d63b075ae4851496ad4ca6366d2df"}, "originalPosition": 64}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxMDI1NzA4OnYy", "diffSide": "RIGHT", "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/model/BatchGetItemEnhancedRequest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQxODo0MDo1NlrOFkUVcA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQxOTo0MToxMlrOFkV7mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzYyNjIyNA==", "bodyText": "This is dangerous. I think we should take a copy of their collection at this point rather than risk mutating it unexpectedly later.\nthis.readBatches = new ArrayList<>(readBatches);", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1628#discussion_r373626224", "createdAt": "2020-01-31T18:40:56Z", "author": {"login": "bmaizels"}, "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/model/BatchGetItemEnhancedRequest.java", "diffHunk": "@@ -0,0 +1,92 @@\n+/*\n+ * Copyright 2010-2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.awssdk.extensions.dynamodb.mappingclient.model;\n+\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.Collection;\n+import software.amazon.awssdk.annotations.SdkPublicApi;\n+\n+@SdkPublicApi\n+public class BatchGetItemEnhancedRequest {\n+\n+    private final Collection<ReadBatch> readBatches;\n+\n+    private BatchGetItemEnhancedRequest(Builder builder) {\n+        this.readBatches = builder.readBatches;\n+    }\n+\n+    public static Builder builder() {\n+        return new Builder();\n+    }\n+\n+    public Builder toBuilder() {\n+        return new Builder().readBatches(readBatches);\n+    }\n+\n+    public Collection<ReadBatch> readBatches() {\n+        return readBatches;\n+    }\n+\n+    @Override\n+    public boolean equals(Object o) {\n+        if (this == o) {\n+            return true;\n+        }\n+        if (o == null || getClass() != o.getClass()) {\n+            return false;\n+        }\n+\n+        BatchGetItemEnhancedRequest that = (BatchGetItemEnhancedRequest) o;\n+\n+        return readBatches != null ? readBatches.equals(that.readBatches) : that.readBatches == null;\n+    }\n+\n+    @Override\n+    public int hashCode() {\n+        return readBatches != null ? readBatches.hashCode() : 0;\n+    }\n+\n+    public static final class Builder {\n+        private Collection<ReadBatch> readBatches;\n+\n+        private Builder() {\n+        }\n+\n+        public Builder readBatches(Collection<ReadBatch> readBatches) {\n+            this.readBatches = readBatches;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "86d01628cc2d63b075ae4851496ad4ca6366d2df"}, "originalPosition": 70}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY1MjM3OQ==", "bodyText": "yes.", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1628#discussion_r373652379", "createdAt": "2020-01-31T19:41:12Z", "author": {"login": "cenedhryn"}, "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/model/BatchGetItemEnhancedRequest.java", "diffHunk": "@@ -0,0 +1,92 @@\n+/*\n+ * Copyright 2010-2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.awssdk.extensions.dynamodb.mappingclient.model;\n+\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.Collection;\n+import software.amazon.awssdk.annotations.SdkPublicApi;\n+\n+@SdkPublicApi\n+public class BatchGetItemEnhancedRequest {\n+\n+    private final Collection<ReadBatch> readBatches;\n+\n+    private BatchGetItemEnhancedRequest(Builder builder) {\n+        this.readBatches = builder.readBatches;\n+    }\n+\n+    public static Builder builder() {\n+        return new Builder();\n+    }\n+\n+    public Builder toBuilder() {\n+        return new Builder().readBatches(readBatches);\n+    }\n+\n+    public Collection<ReadBatch> readBatches() {\n+        return readBatches;\n+    }\n+\n+    @Override\n+    public boolean equals(Object o) {\n+        if (this == o) {\n+            return true;\n+        }\n+        if (o == null || getClass() != o.getClass()) {\n+            return false;\n+        }\n+\n+        BatchGetItemEnhancedRequest that = (BatchGetItemEnhancedRequest) o;\n+\n+        return readBatches != null ? readBatches.equals(that.readBatches) : that.readBatches == null;\n+    }\n+\n+    @Override\n+    public int hashCode() {\n+        return readBatches != null ? readBatches.hashCode() : 0;\n+    }\n+\n+    public static final class Builder {\n+        private Collection<ReadBatch> readBatches;\n+\n+        private Builder() {\n+        }\n+\n+        public Builder readBatches(Collection<ReadBatch> readBatches) {\n+            this.readBatches = readBatches;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzYyNjIyNA=="}, "originalCommit": {"oid": "86d01628cc2d63b075ae4851496ad4ca6366d2df"}, "originalPosition": 70}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxMDI2NDA2OnYy", "diffSide": "RIGHT", "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/model/BatchGetItemEnhancedRequest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQxODo0MzoyNFrOFkUZxQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQxOTo0MDozMFrOFkV6dQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzYyNzMzMw==", "bodyText": "I think we should use List here as I have suggested you change the Builder to do the same.", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1628#discussion_r373627333", "createdAt": "2020-01-31T18:43:24Z", "author": {"login": "bmaizels"}, "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/model/BatchGetItemEnhancedRequest.java", "diffHunk": "@@ -0,0 +1,92 @@\n+/*\n+ * Copyright 2010-2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.awssdk.extensions.dynamodb.mappingclient.model;\n+\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.Collection;\n+import software.amazon.awssdk.annotations.SdkPublicApi;\n+\n+@SdkPublicApi\n+public class BatchGetItemEnhancedRequest {\n+\n+    private final Collection<ReadBatch> readBatches;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "86d01628cc2d63b075ae4851496ad4ca6366d2df"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY1MjA4NQ==", "bodyText": "ok", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1628#discussion_r373652085", "createdAt": "2020-01-31T19:40:30Z", "author": {"login": "cenedhryn"}, "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/model/BatchGetItemEnhancedRequest.java", "diffHunk": "@@ -0,0 +1,92 @@\n+/*\n+ * Copyright 2010-2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.awssdk.extensions.dynamodb.mappingclient.model;\n+\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.Collection;\n+import software.amazon.awssdk.annotations.SdkPublicApi;\n+\n+@SdkPublicApi\n+public class BatchGetItemEnhancedRequest {\n+\n+    private final Collection<ReadBatch> readBatches;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzYyNzMzMw=="}, "originalCommit": {"oid": "86d01628cc2d63b075ae4851496ad4ca6366d2df"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxMDI2NjA5OnYy", "diffSide": "RIGHT", "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/model/BatchGetItemEnhancedRequest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQxODo0NDoxMFrOFkUbEA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQxOTo0MDo1NVrOFkV7HA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzYyNzY2NA==", "bodyText": "Best practice is to render this immutable : this.readBatches = Collections.unmodifiableList(builder.readBatches);", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1628#discussion_r373627664", "createdAt": "2020-01-31T18:44:10Z", "author": {"login": "bmaizels"}, "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/model/BatchGetItemEnhancedRequest.java", "diffHunk": "@@ -0,0 +1,92 @@\n+/*\n+ * Copyright 2010-2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.awssdk.extensions.dynamodb.mappingclient.model;\n+\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.Collection;\n+import software.amazon.awssdk.annotations.SdkPublicApi;\n+\n+@SdkPublicApi\n+public class BatchGetItemEnhancedRequest {\n+\n+    private final Collection<ReadBatch> readBatches;\n+\n+    private BatchGetItemEnhancedRequest(Builder builder) {\n+        this.readBatches = builder.readBatches;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "86d01628cc2d63b075ae4851496ad4ca6366d2df"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY1MjI1Mg==", "bodyText": "good point, will update", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1628#discussion_r373652252", "createdAt": "2020-01-31T19:40:55Z", "author": {"login": "cenedhryn"}, "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/model/BatchGetItemEnhancedRequest.java", "diffHunk": "@@ -0,0 +1,92 @@\n+/*\n+ * Copyright 2010-2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.awssdk.extensions.dynamodb.mappingclient.model;\n+\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.Collection;\n+import software.amazon.awssdk.annotations.SdkPublicApi;\n+\n+@SdkPublicApi\n+public class BatchGetItemEnhancedRequest {\n+\n+    private final Collection<ReadBatch> readBatches;\n+\n+    private BatchGetItemEnhancedRequest(Builder builder) {\n+        this.readBatches = builder.readBatches;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzYyNzY2NA=="}, "originalCommit": {"oid": "86d01628cc2d63b075ae4851496ad4ca6366d2df"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxMDI2ODE0OnYy", "diffSide": "RIGHT", "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/model/BatchWriteItemEnhancedRequest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQxODo0NDo1NVrOFkUcYQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQyMTowNDowOFrOFkX4zA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzYyODAwMQ==", "bodyText": "Let's use List here.", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1628#discussion_r373628001", "createdAt": "2020-01-31T18:44:55Z", "author": {"login": "bmaizels"}, "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/model/BatchWriteItemEnhancedRequest.java", "diffHunk": "@@ -0,0 +1,92 @@\n+/*\n+ * Copyright 2010-2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.awssdk.extensions.dynamodb.mappingclient.model;\n+\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.Collection;\n+import software.amazon.awssdk.annotations.SdkPublicApi;\n+\n+@SdkPublicApi\n+public class BatchWriteItemEnhancedRequest {\n+\n+    private final Collection<WriteBatch> writeBatches;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "86d01628cc2d63b075ae4851496ad4ca6366d2df"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY4NDQyOA==", "bodyText": "ok", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1628#discussion_r373684428", "createdAt": "2020-01-31T21:04:08Z", "author": {"login": "cenedhryn"}, "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/model/BatchWriteItemEnhancedRequest.java", "diffHunk": "@@ -0,0 +1,92 @@\n+/*\n+ * Copyright 2010-2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.awssdk.extensions.dynamodb.mappingclient.model;\n+\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.Collection;\n+import software.amazon.awssdk.annotations.SdkPublicApi;\n+\n+@SdkPublicApi\n+public class BatchWriteItemEnhancedRequest {\n+\n+    private final Collection<WriteBatch> writeBatches;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzYyODAwMQ=="}, "originalCommit": {"oid": "86d01628cc2d63b075ae4851496ad4ca6366d2df"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxMDI2ODk4OnYy", "diffSide": "RIGHT", "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/model/BatchWriteItemEnhancedRequest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQxODo0NToxMFrOFkUc3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQyMTowNDoxM1rOFkX44g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzYyODEyNQ==", "bodyText": "this.writeBatches = Collections.unmodifiableList(builder.writeBatches);", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1628#discussion_r373628125", "createdAt": "2020-01-31T18:45:10Z", "author": {"login": "bmaizels"}, "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/model/BatchWriteItemEnhancedRequest.java", "diffHunk": "@@ -0,0 +1,92 @@\n+/*\n+ * Copyright 2010-2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.awssdk.extensions.dynamodb.mappingclient.model;\n+\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.Collection;\n+import software.amazon.awssdk.annotations.SdkPublicApi;\n+\n+@SdkPublicApi\n+public class BatchWriteItemEnhancedRequest {\n+\n+    private final Collection<WriteBatch> writeBatches;\n+\n+    private BatchWriteItemEnhancedRequest(Builder builder) {\n+        this.writeBatches = builder.writeBatches;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "86d01628cc2d63b075ae4851496ad4ca6366d2df"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY4NDQ1MA==", "bodyText": "ok", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1628#discussion_r373684450", "createdAt": "2020-01-31T21:04:13Z", "author": {"login": "cenedhryn"}, "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/model/BatchWriteItemEnhancedRequest.java", "diffHunk": "@@ -0,0 +1,92 @@\n+/*\n+ * Copyright 2010-2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.awssdk.extensions.dynamodb.mappingclient.model;\n+\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.Collection;\n+import software.amazon.awssdk.annotations.SdkPublicApi;\n+\n+@SdkPublicApi\n+public class BatchWriteItemEnhancedRequest {\n+\n+    private final Collection<WriteBatch> writeBatches;\n+\n+    private BatchWriteItemEnhancedRequest(Builder builder) {\n+        this.writeBatches = builder.writeBatches;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzYyODEyNQ=="}, "originalCommit": {"oid": "86d01628cc2d63b075ae4851496ad4ca6366d2df"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxMDMyNDI3OnYy", "diffSide": "RIGHT", "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/model/BatchWriteItemEnhancedRequest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQxOTowNjoyNFrOFkVAgg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQyMTowNDoxN1rOFkX4-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzYzNzI1MA==", "bodyText": "Can we use List here", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1628#discussion_r373637250", "createdAt": "2020-01-31T19:06:24Z", "author": {"login": "bmaizels"}, "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/model/BatchWriteItemEnhancedRequest.java", "diffHunk": "@@ -0,0 +1,92 @@\n+/*\n+ * Copyright 2010-2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.awssdk.extensions.dynamodb.mappingclient.model;\n+\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.Collection;\n+import software.amazon.awssdk.annotations.SdkPublicApi;\n+\n+@SdkPublicApi\n+public class BatchWriteItemEnhancedRequest {\n+\n+    private final Collection<WriteBatch> writeBatches;\n+\n+    private BatchWriteItemEnhancedRequest(Builder builder) {\n+        this.writeBatches = builder.writeBatches;\n+    }\n+\n+    public static Builder builder() {\n+        return new Builder();\n+    }\n+\n+    public Builder toBuilder() {\n+        return new Builder().writeBatches(writeBatches);\n+    }\n+\n+    public Collection<WriteBatch> writeBatches() {\n+        return writeBatches;\n+    }\n+\n+    @Override\n+    public boolean equals(Object o) {\n+        if (this == o) {\n+            return true;\n+        }\n+        if (o == null || getClass() != o.getClass()) {\n+            return false;\n+        }\n+\n+        BatchWriteItemEnhancedRequest that = (BatchWriteItemEnhancedRequest) o;\n+\n+        return writeBatches != null ? writeBatches.equals(that.writeBatches) : that.writeBatches == null;\n+    }\n+\n+    @Override\n+    public int hashCode() {\n+        return writeBatches != null ? writeBatches.hashCode() : 0;\n+    }\n+\n+    public static final class Builder {\n+        private Collection<WriteBatch> writeBatches;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "86d01628cc2d63b075ae4851496ad4ca6366d2df"}, "originalPosition": 64}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY4NDQ3NA==", "bodyText": "ok", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1628#discussion_r373684474", "createdAt": "2020-01-31T21:04:17Z", "author": {"login": "cenedhryn"}, "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/model/BatchWriteItemEnhancedRequest.java", "diffHunk": "@@ -0,0 +1,92 @@\n+/*\n+ * Copyright 2010-2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.awssdk.extensions.dynamodb.mappingclient.model;\n+\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.Collection;\n+import software.amazon.awssdk.annotations.SdkPublicApi;\n+\n+@SdkPublicApi\n+public class BatchWriteItemEnhancedRequest {\n+\n+    private final Collection<WriteBatch> writeBatches;\n+\n+    private BatchWriteItemEnhancedRequest(Builder builder) {\n+        this.writeBatches = builder.writeBatches;\n+    }\n+\n+    public static Builder builder() {\n+        return new Builder();\n+    }\n+\n+    public Builder toBuilder() {\n+        return new Builder().writeBatches(writeBatches);\n+    }\n+\n+    public Collection<WriteBatch> writeBatches() {\n+        return writeBatches;\n+    }\n+\n+    @Override\n+    public boolean equals(Object o) {\n+        if (this == o) {\n+            return true;\n+        }\n+        if (o == null || getClass() != o.getClass()) {\n+            return false;\n+        }\n+\n+        BatchWriteItemEnhancedRequest that = (BatchWriteItemEnhancedRequest) o;\n+\n+        return writeBatches != null ? writeBatches.equals(that.writeBatches) : that.writeBatches == null;\n+    }\n+\n+    @Override\n+    public int hashCode() {\n+        return writeBatches != null ? writeBatches.hashCode() : 0;\n+    }\n+\n+    public static final class Builder {\n+        private Collection<WriteBatch> writeBatches;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzYzNzI1MA=="}, "originalCommit": {"oid": "86d01628cc2d63b075ae4851496ad4ca6366d2df"}, "originalPosition": 64}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxMDMyNjEyOnYy", "diffSide": "RIGHT", "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/model/BatchWriteItemEnhancedRequest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQxOTowNzoxMFrOFkVBtg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQyMTowNDoyMVrOFkX5Gg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzYzNzU1OA==", "bodyText": "this.writeBatches = new ArrayList<>(writeBatches);", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1628#discussion_r373637558", "createdAt": "2020-01-31T19:07:10Z", "author": {"login": "bmaizels"}, "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/model/BatchWriteItemEnhancedRequest.java", "diffHunk": "@@ -0,0 +1,92 @@\n+/*\n+ * Copyright 2010-2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.awssdk.extensions.dynamodb.mappingclient.model;\n+\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.Collection;\n+import software.amazon.awssdk.annotations.SdkPublicApi;\n+\n+@SdkPublicApi\n+public class BatchWriteItemEnhancedRequest {\n+\n+    private final Collection<WriteBatch> writeBatches;\n+\n+    private BatchWriteItemEnhancedRequest(Builder builder) {\n+        this.writeBatches = builder.writeBatches;\n+    }\n+\n+    public static Builder builder() {\n+        return new Builder();\n+    }\n+\n+    public Builder toBuilder() {\n+        return new Builder().writeBatches(writeBatches);\n+    }\n+\n+    public Collection<WriteBatch> writeBatches() {\n+        return writeBatches;\n+    }\n+\n+    @Override\n+    public boolean equals(Object o) {\n+        if (this == o) {\n+            return true;\n+        }\n+        if (o == null || getClass() != o.getClass()) {\n+            return false;\n+        }\n+\n+        BatchWriteItemEnhancedRequest that = (BatchWriteItemEnhancedRequest) o;\n+\n+        return writeBatches != null ? writeBatches.equals(that.writeBatches) : that.writeBatches == null;\n+    }\n+\n+    @Override\n+    public int hashCode() {\n+        return writeBatches != null ? writeBatches.hashCode() : 0;\n+    }\n+\n+    public static final class Builder {\n+        private Collection<WriteBatch> writeBatches;\n+\n+        private Builder() {\n+        }\n+\n+        public Builder writeBatches(Collection<WriteBatch> writeBatches) {\n+            this.writeBatches = writeBatches;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "86d01628cc2d63b075ae4851496ad4ca6366d2df"}, "originalPosition": 70}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY4NDUwNg==", "bodyText": "ok", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1628#discussion_r373684506", "createdAt": "2020-01-31T21:04:21Z", "author": {"login": "cenedhryn"}, "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/model/BatchWriteItemEnhancedRequest.java", "diffHunk": "@@ -0,0 +1,92 @@\n+/*\n+ * Copyright 2010-2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.awssdk.extensions.dynamodb.mappingclient.model;\n+\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.Collection;\n+import software.amazon.awssdk.annotations.SdkPublicApi;\n+\n+@SdkPublicApi\n+public class BatchWriteItemEnhancedRequest {\n+\n+    private final Collection<WriteBatch> writeBatches;\n+\n+    private BatchWriteItemEnhancedRequest(Builder builder) {\n+        this.writeBatches = builder.writeBatches;\n+    }\n+\n+    public static Builder builder() {\n+        return new Builder();\n+    }\n+\n+    public Builder toBuilder() {\n+        return new Builder().writeBatches(writeBatches);\n+    }\n+\n+    public Collection<WriteBatch> writeBatches() {\n+        return writeBatches;\n+    }\n+\n+    @Override\n+    public boolean equals(Object o) {\n+        if (this == o) {\n+            return true;\n+        }\n+        if (o == null || getClass() != o.getClass()) {\n+            return false;\n+        }\n+\n+        BatchWriteItemEnhancedRequest that = (BatchWriteItemEnhancedRequest) o;\n+\n+        return writeBatches != null ? writeBatches.equals(that.writeBatches) : that.writeBatches == null;\n+    }\n+\n+    @Override\n+    public int hashCode() {\n+        return writeBatches != null ? writeBatches.hashCode() : 0;\n+    }\n+\n+    public static final class Builder {\n+        private Collection<WriteBatch> writeBatches;\n+\n+        private Builder() {\n+        }\n+\n+        public Builder writeBatches(Collection<WriteBatch> writeBatches) {\n+            this.writeBatches = writeBatches;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzYzNzU1OA=="}, "originalCommit": {"oid": "86d01628cc2d63b075ae4851496ad4ca6366d2df"}, "originalPosition": 70}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxMDMzMDQ2OnYy", "diffSide": "RIGHT", "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/model/BatchWriteResult.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQxOTowODo0M1rOFkVEdQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQyMTowNToxN1rOFkX6iQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzYzODI2MQ==", "bodyText": "this.unprocessedRequests = new HashMap<>(unprocessedRequests);", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1628#discussion_r373638261", "createdAt": "2020-01-31T19:08:43Z", "author": {"login": "bmaizels"}, "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/model/BatchWriteResult.java", "diffHunk": "@@ -0,0 +1,87 @@\n+/*\n+ * Copyright 2010-2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.awssdk.extensions.dynamodb.mappingclient.model;\n+\n+import static software.amazon.awssdk.extensions.dynamodb.mappingclient.core.Utils.readAndTransformSingleItem;\n+\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.stream.Collectors;\n+import software.amazon.awssdk.annotations.SdkPublicApi;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.MappedTable;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.OperationContext;\n+import software.amazon.awssdk.services.dynamodb.model.DeleteRequest;\n+import software.amazon.awssdk.services.dynamodb.model.PutRequest;\n+import software.amazon.awssdk.services.dynamodb.model.WriteRequest;\n+\n+@SdkPublicApi\n+public class BatchWriteResult {\n+    private final Map<String, List<WriteRequest>> unprocessedRequests;\n+\n+    private BatchWriteResult(Builder builder) {\n+        this.unprocessedRequests = builder.unprocessedRequests;\n+    }\n+\n+    public static Builder builder() {\n+        return new Builder();\n+    }\n+\n+    public <T> List<T> unprocessedPutItemsForTable(MappedTable<T> mappedTable) {\n+        List<WriteRequest> writeRequests =\n+            unprocessedRequests.getOrDefault(mappedTable.tableName(),\n+                                             Collections.emptyList());\n+\n+        return writeRequests.stream()\n+                            .filter(writeRequest -> writeRequest.putRequest() != null)\n+                            .map(WriteRequest::putRequest)\n+                            .map(PutRequest::item)\n+                            .map(item -> readAndTransformSingleItem(item,\n+                                                                    mappedTable.tableSchema(),\n+                                                                    OperationContext.create(mappedTable.tableName()),\n+                                                                    mappedTable.mapperExtension()))\n+                            .collect(Collectors.toList());\n+    }\n+\n+    public <T> List<T> unprocessedDeleteItemsForTable(MappedTable<T> mappedTable) {\n+        List<WriteRequest> writeRequests =\n+            unprocessedRequests.getOrDefault(mappedTable.tableName(),\n+                                             Collections.emptyList());\n+\n+        return writeRequests.stream()\n+                            .filter(writeRequest -> writeRequest.deleteRequest() != null)\n+                            .map(WriteRequest::deleteRequest)\n+                            .map(DeleteRequest::key)\n+                            .map(itemMap -> mappedTable.tableSchema().mapToItem(itemMap))\n+                            .collect(Collectors.toList());\n+    }\n+\n+    public static final class Builder {\n+        private Map<String, List<WriteRequest>> unprocessedRequests;\n+\n+        private Builder() {\n+        }\n+\n+        public Builder unprocessedRequests(Map<String, List<WriteRequest>> unprocessedRequests) {\n+            this.unprocessedRequests = unprocessedRequests;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "86d01628cc2d63b075ae4851496ad4ca6366d2df"}, "originalPosition": 79}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY4NDg3Mw==", "bodyText": "ok", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1628#discussion_r373684873", "createdAt": "2020-01-31T21:05:17Z", "author": {"login": "cenedhryn"}, "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/model/BatchWriteResult.java", "diffHunk": "@@ -0,0 +1,87 @@\n+/*\n+ * Copyright 2010-2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.awssdk.extensions.dynamodb.mappingclient.model;\n+\n+import static software.amazon.awssdk.extensions.dynamodb.mappingclient.core.Utils.readAndTransformSingleItem;\n+\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.stream.Collectors;\n+import software.amazon.awssdk.annotations.SdkPublicApi;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.MappedTable;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.OperationContext;\n+import software.amazon.awssdk.services.dynamodb.model.DeleteRequest;\n+import software.amazon.awssdk.services.dynamodb.model.PutRequest;\n+import software.amazon.awssdk.services.dynamodb.model.WriteRequest;\n+\n+@SdkPublicApi\n+public class BatchWriteResult {\n+    private final Map<String, List<WriteRequest>> unprocessedRequests;\n+\n+    private BatchWriteResult(Builder builder) {\n+        this.unprocessedRequests = builder.unprocessedRequests;\n+    }\n+\n+    public static Builder builder() {\n+        return new Builder();\n+    }\n+\n+    public <T> List<T> unprocessedPutItemsForTable(MappedTable<T> mappedTable) {\n+        List<WriteRequest> writeRequests =\n+            unprocessedRequests.getOrDefault(mappedTable.tableName(),\n+                                             Collections.emptyList());\n+\n+        return writeRequests.stream()\n+                            .filter(writeRequest -> writeRequest.putRequest() != null)\n+                            .map(WriteRequest::putRequest)\n+                            .map(PutRequest::item)\n+                            .map(item -> readAndTransformSingleItem(item,\n+                                                                    mappedTable.tableSchema(),\n+                                                                    OperationContext.create(mappedTable.tableName()),\n+                                                                    mappedTable.mapperExtension()))\n+                            .collect(Collectors.toList());\n+    }\n+\n+    public <T> List<T> unprocessedDeleteItemsForTable(MappedTable<T> mappedTable) {\n+        List<WriteRequest> writeRequests =\n+            unprocessedRequests.getOrDefault(mappedTable.tableName(),\n+                                             Collections.emptyList());\n+\n+        return writeRequests.stream()\n+                            .filter(writeRequest -> writeRequest.deleteRequest() != null)\n+                            .map(WriteRequest::deleteRequest)\n+                            .map(DeleteRequest::key)\n+                            .map(itemMap -> mappedTable.tableSchema().mapToItem(itemMap))\n+                            .collect(Collectors.toList());\n+    }\n+\n+    public static final class Builder {\n+        private Map<String, List<WriteRequest>> unprocessedRequests;\n+\n+        private Builder() {\n+        }\n+\n+        public Builder unprocessedRequests(Map<String, List<WriteRequest>> unprocessedRequests) {\n+            this.unprocessedRequests = unprocessedRequests;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzYzODI2MQ=="}, "originalCommit": {"oid": "86d01628cc2d63b075ae4851496ad4ca6366d2df"}, "originalPosition": 79}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxMDMzMTY5OnYy", "diffSide": "RIGHT", "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/model/BatchWriteResult.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQxOTowOToxNlrOFkVFSw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQyMTowNToyMlrOFkX6qA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzYzODQ3NQ==", "bodyText": "this.unprocessedRequests = Collections.unmodifiableMap(builder.unprocessedRequests);", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1628#discussion_r373638475", "createdAt": "2020-01-31T19:09:16Z", "author": {"login": "bmaizels"}, "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/model/BatchWriteResult.java", "diffHunk": "@@ -0,0 +1,87 @@\n+/*\n+ * Copyright 2010-2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.awssdk.extensions.dynamodb.mappingclient.model;\n+\n+import static software.amazon.awssdk.extensions.dynamodb.mappingclient.core.Utils.readAndTransformSingleItem;\n+\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.stream.Collectors;\n+import software.amazon.awssdk.annotations.SdkPublicApi;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.MappedTable;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.OperationContext;\n+import software.amazon.awssdk.services.dynamodb.model.DeleteRequest;\n+import software.amazon.awssdk.services.dynamodb.model.PutRequest;\n+import software.amazon.awssdk.services.dynamodb.model.WriteRequest;\n+\n+@SdkPublicApi\n+public class BatchWriteResult {\n+    private final Map<String, List<WriteRequest>> unprocessedRequests;\n+\n+    private BatchWriteResult(Builder builder) {\n+        this.unprocessedRequests = builder.unprocessedRequests;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "86d01628cc2d63b075ae4851496ad4ca6366d2df"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY4NDkwNA==", "bodyText": "ok", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1628#discussion_r373684904", "createdAt": "2020-01-31T21:05:22Z", "author": {"login": "cenedhryn"}, "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/model/BatchWriteResult.java", "diffHunk": "@@ -0,0 +1,87 @@\n+/*\n+ * Copyright 2010-2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.awssdk.extensions.dynamodb.mappingclient.model;\n+\n+import static software.amazon.awssdk.extensions.dynamodb.mappingclient.core.Utils.readAndTransformSingleItem;\n+\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.stream.Collectors;\n+import software.amazon.awssdk.annotations.SdkPublicApi;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.MappedTable;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.OperationContext;\n+import software.amazon.awssdk.services.dynamodb.model.DeleteRequest;\n+import software.amazon.awssdk.services.dynamodb.model.PutRequest;\n+import software.amazon.awssdk.services.dynamodb.model.WriteRequest;\n+\n+@SdkPublicApi\n+public class BatchWriteResult {\n+    private final Map<String, List<WriteRequest>> unprocessedRequests;\n+\n+    private BatchWriteResult(Builder builder) {\n+        this.unprocessedRequests = builder.unprocessedRequests;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzYzODQ3NQ=="}, "originalCommit": {"oid": "86d01628cc2d63b075ae4851496ad4ca6366d2df"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxMDM0NDg0OnYy", "diffSide": "RIGHT", "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/model/ReadBatch.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQxOToxNDoxN1rOFkVNdQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQxOToxNDoxN1rOFkVNdQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY0MDU2NQ==", "bodyText": "Let's use List here.", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1628#discussion_r373640565", "createdAt": "2020-01-31T19:14:17Z", "author": {"login": "bmaizels"}, "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/model/ReadBatch.java", "diffHunk": "@@ -0,0 +1,79 @@\n+/*\n+ * Copyright 2010-2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.awssdk.extensions.dynamodb.mappingclient.model;\n+\n+import java.util.Arrays;\n+import java.util.Collection;\n+\n+import software.amazon.awssdk.annotations.SdkPublicApi;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.BatchableReadOperation;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.MappedTableResource;\n+\n+@SdkPublicApi\n+public class ReadBatch<T> {\n+    private final MappedTableResource<T> mappedTableResource;\n+    private final Collection<BatchableReadOperation> readOperations;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "86d01628cc2d63b075ae4851496ad4ca6366d2df"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxMDM0NjYxOnYy", "diffSide": "RIGHT", "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/model/ReadBatch.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQxOToxNDo1OFrOFkVOnQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQyMToxNTowM1rOFkYJFg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY0MDg2MQ==", "bodyText": "this.readOperations = Collections.unmodifiableList(readOperations);", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1628#discussion_r373640861", "createdAt": "2020-01-31T19:14:58Z", "author": {"login": "bmaizels"}, "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/model/ReadBatch.java", "diffHunk": "@@ -0,0 +1,79 @@\n+/*\n+ * Copyright 2010-2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.awssdk.extensions.dynamodb.mappingclient.model;\n+\n+import java.util.Arrays;\n+import java.util.Collection;\n+\n+import software.amazon.awssdk.annotations.SdkPublicApi;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.BatchableReadOperation;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.MappedTableResource;\n+\n+@SdkPublicApi\n+public class ReadBatch<T> {\n+    private final MappedTableResource<T> mappedTableResource;\n+    private final Collection<BatchableReadOperation> readOperations;\n+\n+    private ReadBatch(MappedTableResource<T> mappedTableResource, Collection<BatchableReadOperation> readOperations) {\n+        this.mappedTableResource = mappedTableResource;\n+        this.readOperations = readOperations;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "86d01628cc2d63b075ae4851496ad4ca6366d2df"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY4ODU5OA==", "bodyText": "ok.", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1628#discussion_r373688598", "createdAt": "2020-01-31T21:15:03Z", "author": {"login": "cenedhryn"}, "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/model/ReadBatch.java", "diffHunk": "@@ -0,0 +1,79 @@\n+/*\n+ * Copyright 2010-2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.awssdk.extensions.dynamodb.mappingclient.model;\n+\n+import java.util.Arrays;\n+import java.util.Collection;\n+\n+import software.amazon.awssdk.annotations.SdkPublicApi;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.BatchableReadOperation;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.MappedTableResource;\n+\n+@SdkPublicApi\n+public class ReadBatch<T> {\n+    private final MappedTableResource<T> mappedTableResource;\n+    private final Collection<BatchableReadOperation> readOperations;\n+\n+    private ReadBatch(MappedTableResource<T> mappedTableResource, Collection<BatchableReadOperation> readOperations) {\n+        this.mappedTableResource = mappedTableResource;\n+        this.readOperations = readOperations;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY0MDg2MQ=="}, "originalCommit": {"oid": "86d01628cc2d63b075ae4851496ad4ca6366d2df"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxMDM1MDM0OnYy", "diffSide": "RIGHT", "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/model/TransactGetItemsEnhancedRequest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQxOToxNjoxMFrOFkVQ0w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQxOToxNjoxMFrOFkVQ0w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY0MTQyNw==", "bodyText": "this.readTransactions = Collections.unmodifiableList(readTransactions);", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1628#discussion_r373641427", "createdAt": "2020-01-31T19:16:10Z", "author": {"login": "bmaizels"}, "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/model/TransactGetItemsEnhancedRequest.java", "diffHunk": "@@ -0,0 +1,95 @@\n+/*\n+ * Copyright 2010-2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.awssdk.extensions.dynamodb.mappingclient.model;\n+\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.List;\n+import software.amazon.awssdk.annotations.SdkPublicApi;\n+\n+@SdkPublicApi\n+public class TransactGetItemsEnhancedRequest {\n+\n+    private final List<ReadTransaction> readTransactions;\n+\n+    private TransactGetItemsEnhancedRequest(List<ReadTransaction> readTransactions) {\n+        this.readTransactions = readTransactions;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "86d01628cc2d63b075ae4851496ad4ca6366d2df"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxMDM1MTg3OnYy", "diffSide": "RIGHT", "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/model/TransactGetItemsEnhancedRequest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQxOToxNjo0MlrOFkVR3w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQyMToxODoxMVrOFkYNeA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY0MTY5NQ==", "bodyText": "this.readTransactions = new ArrayList<>(readTransactions);", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1628#discussion_r373641695", "createdAt": "2020-01-31T19:16:42Z", "author": {"login": "bmaizels"}, "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/model/TransactGetItemsEnhancedRequest.java", "diffHunk": "@@ -0,0 +1,95 @@\n+/*\n+ * Copyright 2010-2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.awssdk.extensions.dynamodb.mappingclient.model;\n+\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.List;\n+import software.amazon.awssdk.annotations.SdkPublicApi;\n+\n+@SdkPublicApi\n+public class TransactGetItemsEnhancedRequest {\n+\n+    private final List<ReadTransaction> readTransactions;\n+\n+    private TransactGetItemsEnhancedRequest(List<ReadTransaction> readTransactions) {\n+        this.readTransactions = readTransactions;\n+    }\n+\n+    public static TransactGetItemsEnhancedRequest create(List<ReadTransaction> transactGetRequests) {\n+        return new TransactGetItemsEnhancedRequest(transactGetRequests);\n+    }\n+\n+    public static Builder builder() {\n+        return new Builder();\n+    }\n+\n+    public Builder toBuilder() {\n+        return new Builder().readTransactions(readTransactions);\n+    }\n+\n+    public List<ReadTransaction> readTransactions() {\n+        return readTransactions;\n+    }\n+\n+    @Override\n+    public boolean equals(Object o) {\n+        if (this == o) {\n+            return true;\n+        }\n+        if (o == null || getClass() != o.getClass()) {\n+            return false;\n+        }\n+\n+        TransactGetItemsEnhancedRequest that = (TransactGetItemsEnhancedRequest) o;\n+\n+        return readTransactions != null ? readTransactions.equals(that.readTransactions) : that.readTransactions == null;\n+    }\n+\n+    @Override\n+    public int hashCode() {\n+        return readTransactions != null ? readTransactions.hashCode() : 0;\n+    }\n+\n+    public static final class Builder {\n+        private List<ReadTransaction> readTransactions;\n+\n+        private Builder() {\n+        }\n+\n+        public Builder readTransactions(List<ReadTransaction> readTransactions) {\n+            this.readTransactions = readTransactions;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "86d01628cc2d63b075ae4851496ad4ca6366d2df"}, "originalPosition": 74}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY4OTcyMA==", "bodyText": "ok", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1628#discussion_r373689720", "createdAt": "2020-01-31T21:18:11Z", "author": {"login": "cenedhryn"}, "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/model/TransactGetItemsEnhancedRequest.java", "diffHunk": "@@ -0,0 +1,95 @@\n+/*\n+ * Copyright 2010-2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.awssdk.extensions.dynamodb.mappingclient.model;\n+\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.List;\n+import software.amazon.awssdk.annotations.SdkPublicApi;\n+\n+@SdkPublicApi\n+public class TransactGetItemsEnhancedRequest {\n+\n+    private final List<ReadTransaction> readTransactions;\n+\n+    private TransactGetItemsEnhancedRequest(List<ReadTransaction> readTransactions) {\n+        this.readTransactions = readTransactions;\n+    }\n+\n+    public static TransactGetItemsEnhancedRequest create(List<ReadTransaction> transactGetRequests) {\n+        return new TransactGetItemsEnhancedRequest(transactGetRequests);\n+    }\n+\n+    public static Builder builder() {\n+        return new Builder();\n+    }\n+\n+    public Builder toBuilder() {\n+        return new Builder().readTransactions(readTransactions);\n+    }\n+\n+    public List<ReadTransaction> readTransactions() {\n+        return readTransactions;\n+    }\n+\n+    @Override\n+    public boolean equals(Object o) {\n+        if (this == o) {\n+            return true;\n+        }\n+        if (o == null || getClass() != o.getClass()) {\n+            return false;\n+        }\n+\n+        TransactGetItemsEnhancedRequest that = (TransactGetItemsEnhancedRequest) o;\n+\n+        return readTransactions != null ? readTransactions.equals(that.readTransactions) : that.readTransactions == null;\n+    }\n+\n+    @Override\n+    public int hashCode() {\n+        return readTransactions != null ? readTransactions.hashCode() : 0;\n+    }\n+\n+    public static final class Builder {\n+        private List<ReadTransaction> readTransactions;\n+\n+        private Builder() {\n+        }\n+\n+        public Builder readTransactions(List<ReadTransaction> readTransactions) {\n+            this.readTransactions = readTransactions;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY0MTY5NQ=="}, "originalCommit": {"oid": "86d01628cc2d63b075ae4851496ad4ca6366d2df"}, "originalPosition": 74}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxMDM1MjkxOnYy", "diffSide": "RIGHT", "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/model/TransactWriteItemsEnhancedRequest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQxOToxNzoxMVrOFkVSmg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQyMToxODo1OVrOFkYOow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY0MTg4Mg==", "bodyText": "this.writeTransactions = Collections.unmodifiableList(writeTransactions);", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1628#discussion_r373641882", "createdAt": "2020-01-31T19:17:11Z", "author": {"login": "bmaizels"}, "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/model/TransactWriteItemsEnhancedRequest.java", "diffHunk": "@@ -0,0 +1,91 @@\n+/*\n+ * Copyright 2010-2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.awssdk.extensions.dynamodb.mappingclient.model;\n+\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.List;\n+import software.amazon.awssdk.annotations.SdkPublicApi;\n+\n+@SdkPublicApi\n+public class TransactWriteItemsEnhancedRequest {\n+\n+    private final List<WriteTransaction> writeTransactions;\n+\n+    private TransactWriteItemsEnhancedRequest(List<WriteTransaction> writeTransactions) {\n+        this.writeTransactions = writeTransactions;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "86d01628cc2d63b075ae4851496ad4ca6366d2df"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY5MDAxOQ==", "bodyText": "ok", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1628#discussion_r373690019", "createdAt": "2020-01-31T21:18:59Z", "author": {"login": "cenedhryn"}, "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/model/TransactWriteItemsEnhancedRequest.java", "diffHunk": "@@ -0,0 +1,91 @@\n+/*\n+ * Copyright 2010-2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.awssdk.extensions.dynamodb.mappingclient.model;\n+\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.List;\n+import software.amazon.awssdk.annotations.SdkPublicApi;\n+\n+@SdkPublicApi\n+public class TransactWriteItemsEnhancedRequest {\n+\n+    private final List<WriteTransaction> writeTransactions;\n+\n+    private TransactWriteItemsEnhancedRequest(List<WriteTransaction> writeTransactions) {\n+        this.writeTransactions = writeTransactions;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY0MTg4Mg=="}, "originalCommit": {"oid": "86d01628cc2d63b075ae4851496ad4ca6366d2df"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxMDM1Mzg5OnYy", "diffSide": "RIGHT", "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/model/TransactWriteItemsEnhancedRequest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQxOToxNzozOFrOFkVTTw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQxOToxNzozOFrOFkVTTw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY0MjA2Mw==", "bodyText": "this.writeTransactions = new ArrayList<>(writeTransactions);", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1628#discussion_r373642063", "createdAt": "2020-01-31T19:17:38Z", "author": {"login": "bmaizels"}, "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/model/TransactWriteItemsEnhancedRequest.java", "diffHunk": "@@ -0,0 +1,91 @@\n+/*\n+ * Copyright 2010-2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.awssdk.extensions.dynamodb.mappingclient.model;\n+\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.List;\n+import software.amazon.awssdk.annotations.SdkPublicApi;\n+\n+@SdkPublicApi\n+public class TransactWriteItemsEnhancedRequest {\n+\n+    private final List<WriteTransaction> writeTransactions;\n+\n+    private TransactWriteItemsEnhancedRequest(List<WriteTransaction> writeTransactions) {\n+        this.writeTransactions = writeTransactions;\n+    }\n+\n+    public static Builder builder() {\n+        return new Builder();\n+    }\n+\n+    public Builder toBuilder() {\n+        return new Builder().writeTransactions(this.writeTransactions);\n+    }\n+\n+    public List<WriteTransaction> writeTransactions() {\n+        return writeTransactions;\n+    }\n+\n+    @Override\n+    public boolean equals(Object o) {\n+        if (this == o) {\n+            return true;\n+        }\n+        if (o == null || getClass() != o.getClass()) {\n+            return false;\n+        }\n+\n+        TransactWriteItemsEnhancedRequest that = (TransactWriteItemsEnhancedRequest) o;\n+\n+        return writeTransactions != null ? writeTransactions.equals(that.writeTransactions) : that.writeTransactions == null;\n+    }\n+\n+    @Override\n+    public int hashCode() {\n+        return writeTransactions != null ? writeTransactions.hashCode() : 0;\n+    }\n+\n+    public static final class Builder {\n+        private List<WriteTransaction> writeTransactions;\n+\n+        private Builder() {\n+        }\n+\n+        public Builder writeTransactions(List<WriteTransaction> writeTransactions) {\n+            this.writeTransactions = writeTransactions;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "86d01628cc2d63b075ae4851496ad4ca6366d2df"}, "originalPosition": 70}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxMDM2Mzg5OnYy", "diffSide": "RIGHT", "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/operations/BatchGetItemOperation.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQxOToyMToxNlrOFkVZiA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQxOToxODowOVrOFmEALg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY0MzY1Ng==", "bodyText": "This can be rewritten to not suck anymore. It was only written this way due to a nuance in Java around raw type erasure, but now you've refactored it that no longer applies. We should just map it straight into requestItems.", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1628#discussion_r373643656", "createdAt": "2020-01-31T19:21:16Z", "author": {"login": "bmaizels"}, "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/operations/BatchGetItemOperation.java", "diffHunk": "@@ -15,65 +15,97 @@\n \n package software.amazon.awssdk.extensions.dynamodb.mappingclient.operations;\n \n-import java.util.Arrays;\n import java.util.Collection;\n+import java.util.Collections;\n+import java.util.HashMap;\n import java.util.List;\n import java.util.Map;\n import java.util.concurrent.atomic.AtomicBoolean;\n import java.util.concurrent.atomic.AtomicReference;\n+import java.util.function.Function;\n import java.util.stream.Collectors;\n import java.util.stream.Stream;\n-\n-import software.amazon.awssdk.annotations.SdkPublicApi;\n+import software.amazon.awssdk.annotations.SdkInternalApi;\n+import software.amazon.awssdk.core.async.SdkPublisher;\n+import software.amazon.awssdk.core.pagination.sync.SdkIterable;\n import software.amazon.awssdk.extensions.dynamodb.mappingclient.BatchableReadOperation;\n-import software.amazon.awssdk.extensions.dynamodb.mappingclient.MappedTableResource;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.MapperExtension;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.PaginatedDatabaseOperation;\n import software.amazon.awssdk.extensions.dynamodb.mappingclient.TableMetadata;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.model.BatchGetItemEnhancedRequest;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.model.BatchGetResultPage;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.model.ReadBatch;\n+import software.amazon.awssdk.services.dynamodb.DynamoDbAsyncClient;\n+import software.amazon.awssdk.services.dynamodb.DynamoDbClient;\n import software.amazon.awssdk.services.dynamodb.model.AttributeValue;\n+import software.amazon.awssdk.services.dynamodb.model.BatchGetItemRequest;\n+import software.amazon.awssdk.services.dynamodb.model.BatchGetItemResponse;\n import software.amazon.awssdk.services.dynamodb.model.KeysAndAttributes;\n \n-@SdkPublicApi\n-public class ReadBatch<T> {\n-    private final MappedTableResource<T> mappedTableResource;\n-    private final Collection<BatchableReadOperation> readOperations;\n+@SdkInternalApi\n+public class BatchGetItemOperation\n+    implements PaginatedDatabaseOperation<BatchGetItemRequest, BatchGetItemResponse, BatchGetResultPage> {\n+\n+    private final BatchGetItemEnhancedRequest request;\n+\n+    private BatchGetItemOperation(BatchGetItemEnhancedRequest request) {\n+        this.request = request;\n+    }\n+\n+    public static BatchGetItemOperation create(BatchGetItemEnhancedRequest request) {\n+        return new BatchGetItemOperation(request);\n+    }\n+\n+    @Override\n+    public BatchGetItemRequest generateRequest(MapperExtension mapperExtension) {\n+        Map<String, KeysAndAttributes> requestItems = new HashMap<>();\n+        request.readBatches().forEach(readBatch -> addReadRequestsToMap(readBatch, requestItems));\n \n-    private ReadBatch(MappedTableResource<T> mappedTableResource, Collection<BatchableReadOperation> readOperations) {\n-        this.mappedTableResource = mappedTableResource;\n-        this.readOperations = readOperations;\n+        return BatchGetItemRequest.builder()\n+                                  .requestItems(Collections.unmodifiableMap(requestItems))\n+                                  .build();\n     }\n \n-    public static <T> ReadBatch<T> create(MappedTableResource<T> mappedTableResource,\n-                                      Collection<BatchableReadOperation> readOperations) {\n-        return new ReadBatch<>(mappedTableResource, readOperations);\n+    @Override\n+    public BatchGetResultPage transformResponse(BatchGetItemResponse response, MapperExtension mapperExtension) {\n+        return BatchGetResultPage.builder().batchGetItemResponse(response).mapperExtension(mapperExtension).build();\n     }\n \n-    public static <T> ReadBatch<T> create(MappedTableResource<T> mappedTableResource,\n-                                      BatchableReadOperation... readOperations) {\n-        return new ReadBatch<>(mappedTableResource, Arrays.asList(readOperations));\n+    @Override\n+    public Function<BatchGetItemRequest, SdkIterable<BatchGetItemResponse>> serviceCall(DynamoDbClient dynamoDbClient) {\n+        return dynamoDbClient::batchGetItemPaginator;\n+    }\n+\n+    @Override\n+    public Function<BatchGetItemRequest, SdkPublisher<BatchGetItemResponse>> asyncServiceCall(\n+        DynamoDbAsyncClient dynamoDbAsyncClient) {\n+\n+        return dynamoDbAsyncClient::batchGetItemPaginator;\n     }\n \n-    void addReadRequestsToMap(Map<String, KeysAndAttributes> readRequestMap) {\n-        KeysAndAttributes newKeysAndAttributes = generateKeysAndAttributes();\n-        KeysAndAttributes existingKeysAndAttributes = readRequestMap.get(tableName());\n+    private void addReadRequestsToMap(ReadBatch readBatch, Map<String, KeysAndAttributes> readRequestMap) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "86d01628cc2d63b075ae4851496ad4ca6366d2df"}, "originalPosition": 92}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY1Mjg4Ng==", "bodyText": "ok", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1628#discussion_r373652886", "createdAt": "2020-01-31T19:42:25Z", "author": {"login": "cenedhryn"}, "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/operations/BatchGetItemOperation.java", "diffHunk": "@@ -15,65 +15,97 @@\n \n package software.amazon.awssdk.extensions.dynamodb.mappingclient.operations;\n \n-import java.util.Arrays;\n import java.util.Collection;\n+import java.util.Collections;\n+import java.util.HashMap;\n import java.util.List;\n import java.util.Map;\n import java.util.concurrent.atomic.AtomicBoolean;\n import java.util.concurrent.atomic.AtomicReference;\n+import java.util.function.Function;\n import java.util.stream.Collectors;\n import java.util.stream.Stream;\n-\n-import software.amazon.awssdk.annotations.SdkPublicApi;\n+import software.amazon.awssdk.annotations.SdkInternalApi;\n+import software.amazon.awssdk.core.async.SdkPublisher;\n+import software.amazon.awssdk.core.pagination.sync.SdkIterable;\n import software.amazon.awssdk.extensions.dynamodb.mappingclient.BatchableReadOperation;\n-import software.amazon.awssdk.extensions.dynamodb.mappingclient.MappedTableResource;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.MapperExtension;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.PaginatedDatabaseOperation;\n import software.amazon.awssdk.extensions.dynamodb.mappingclient.TableMetadata;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.model.BatchGetItemEnhancedRequest;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.model.BatchGetResultPage;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.model.ReadBatch;\n+import software.amazon.awssdk.services.dynamodb.DynamoDbAsyncClient;\n+import software.amazon.awssdk.services.dynamodb.DynamoDbClient;\n import software.amazon.awssdk.services.dynamodb.model.AttributeValue;\n+import software.amazon.awssdk.services.dynamodb.model.BatchGetItemRequest;\n+import software.amazon.awssdk.services.dynamodb.model.BatchGetItemResponse;\n import software.amazon.awssdk.services.dynamodb.model.KeysAndAttributes;\n \n-@SdkPublicApi\n-public class ReadBatch<T> {\n-    private final MappedTableResource<T> mappedTableResource;\n-    private final Collection<BatchableReadOperation> readOperations;\n+@SdkInternalApi\n+public class BatchGetItemOperation\n+    implements PaginatedDatabaseOperation<BatchGetItemRequest, BatchGetItemResponse, BatchGetResultPage> {\n+\n+    private final BatchGetItemEnhancedRequest request;\n+\n+    private BatchGetItemOperation(BatchGetItemEnhancedRequest request) {\n+        this.request = request;\n+    }\n+\n+    public static BatchGetItemOperation create(BatchGetItemEnhancedRequest request) {\n+        return new BatchGetItemOperation(request);\n+    }\n+\n+    @Override\n+    public BatchGetItemRequest generateRequest(MapperExtension mapperExtension) {\n+        Map<String, KeysAndAttributes> requestItems = new HashMap<>();\n+        request.readBatches().forEach(readBatch -> addReadRequestsToMap(readBatch, requestItems));\n \n-    private ReadBatch(MappedTableResource<T> mappedTableResource, Collection<BatchableReadOperation> readOperations) {\n-        this.mappedTableResource = mappedTableResource;\n-        this.readOperations = readOperations;\n+        return BatchGetItemRequest.builder()\n+                                  .requestItems(Collections.unmodifiableMap(requestItems))\n+                                  .build();\n     }\n \n-    public static <T> ReadBatch<T> create(MappedTableResource<T> mappedTableResource,\n-                                      Collection<BatchableReadOperation> readOperations) {\n-        return new ReadBatch<>(mappedTableResource, readOperations);\n+    @Override\n+    public BatchGetResultPage transformResponse(BatchGetItemResponse response, MapperExtension mapperExtension) {\n+        return BatchGetResultPage.builder().batchGetItemResponse(response).mapperExtension(mapperExtension).build();\n     }\n \n-    public static <T> ReadBatch<T> create(MappedTableResource<T> mappedTableResource,\n-                                      BatchableReadOperation... readOperations) {\n-        return new ReadBatch<>(mappedTableResource, Arrays.asList(readOperations));\n+    @Override\n+    public Function<BatchGetItemRequest, SdkIterable<BatchGetItemResponse>> serviceCall(DynamoDbClient dynamoDbClient) {\n+        return dynamoDbClient::batchGetItemPaginator;\n+    }\n+\n+    @Override\n+    public Function<BatchGetItemRequest, SdkPublisher<BatchGetItemResponse>> asyncServiceCall(\n+        DynamoDbAsyncClient dynamoDbAsyncClient) {\n+\n+        return dynamoDbAsyncClient::batchGetItemPaginator;\n     }\n \n-    void addReadRequestsToMap(Map<String, KeysAndAttributes> readRequestMap) {\n-        KeysAndAttributes newKeysAndAttributes = generateKeysAndAttributes();\n-        KeysAndAttributes existingKeysAndAttributes = readRequestMap.get(tableName());\n+    private void addReadRequestsToMap(ReadBatch readBatch, Map<String, KeysAndAttributes> readRequestMap) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY0MzY1Ng=="}, "originalCommit": {"oid": "86d01628cc2d63b075ae4851496ad4ca6366d2df"}, "originalPosition": 92}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTQ1NTc5MA==", "bodyText": "What did we ultimately decide to do about this?", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1628#discussion_r375455790", "createdAt": "2020-02-05T19:18:09Z", "author": {"login": "bmaizels"}, "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/operations/BatchGetItemOperation.java", "diffHunk": "@@ -15,65 +15,97 @@\n \n package software.amazon.awssdk.extensions.dynamodb.mappingclient.operations;\n \n-import java.util.Arrays;\n import java.util.Collection;\n+import java.util.Collections;\n+import java.util.HashMap;\n import java.util.List;\n import java.util.Map;\n import java.util.concurrent.atomic.AtomicBoolean;\n import java.util.concurrent.atomic.AtomicReference;\n+import java.util.function.Function;\n import java.util.stream.Collectors;\n import java.util.stream.Stream;\n-\n-import software.amazon.awssdk.annotations.SdkPublicApi;\n+import software.amazon.awssdk.annotations.SdkInternalApi;\n+import software.amazon.awssdk.core.async.SdkPublisher;\n+import software.amazon.awssdk.core.pagination.sync.SdkIterable;\n import software.amazon.awssdk.extensions.dynamodb.mappingclient.BatchableReadOperation;\n-import software.amazon.awssdk.extensions.dynamodb.mappingclient.MappedTableResource;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.MapperExtension;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.PaginatedDatabaseOperation;\n import software.amazon.awssdk.extensions.dynamodb.mappingclient.TableMetadata;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.model.BatchGetItemEnhancedRequest;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.model.BatchGetResultPage;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.model.ReadBatch;\n+import software.amazon.awssdk.services.dynamodb.DynamoDbAsyncClient;\n+import software.amazon.awssdk.services.dynamodb.DynamoDbClient;\n import software.amazon.awssdk.services.dynamodb.model.AttributeValue;\n+import software.amazon.awssdk.services.dynamodb.model.BatchGetItemRequest;\n+import software.amazon.awssdk.services.dynamodb.model.BatchGetItemResponse;\n import software.amazon.awssdk.services.dynamodb.model.KeysAndAttributes;\n \n-@SdkPublicApi\n-public class ReadBatch<T> {\n-    private final MappedTableResource<T> mappedTableResource;\n-    private final Collection<BatchableReadOperation> readOperations;\n+@SdkInternalApi\n+public class BatchGetItemOperation\n+    implements PaginatedDatabaseOperation<BatchGetItemRequest, BatchGetItemResponse, BatchGetResultPage> {\n+\n+    private final BatchGetItemEnhancedRequest request;\n+\n+    private BatchGetItemOperation(BatchGetItemEnhancedRequest request) {\n+        this.request = request;\n+    }\n+\n+    public static BatchGetItemOperation create(BatchGetItemEnhancedRequest request) {\n+        return new BatchGetItemOperation(request);\n+    }\n+\n+    @Override\n+    public BatchGetItemRequest generateRequest(MapperExtension mapperExtension) {\n+        Map<String, KeysAndAttributes> requestItems = new HashMap<>();\n+        request.readBatches().forEach(readBatch -> addReadRequestsToMap(readBatch, requestItems));\n \n-    private ReadBatch(MappedTableResource<T> mappedTableResource, Collection<BatchableReadOperation> readOperations) {\n-        this.mappedTableResource = mappedTableResource;\n-        this.readOperations = readOperations;\n+        return BatchGetItemRequest.builder()\n+                                  .requestItems(Collections.unmodifiableMap(requestItems))\n+                                  .build();\n     }\n \n-    public static <T> ReadBatch<T> create(MappedTableResource<T> mappedTableResource,\n-                                      Collection<BatchableReadOperation> readOperations) {\n-        return new ReadBatch<>(mappedTableResource, readOperations);\n+    @Override\n+    public BatchGetResultPage transformResponse(BatchGetItemResponse response, MapperExtension mapperExtension) {\n+        return BatchGetResultPage.builder().batchGetItemResponse(response).mapperExtension(mapperExtension).build();\n     }\n \n-    public static <T> ReadBatch<T> create(MappedTableResource<T> mappedTableResource,\n-                                      BatchableReadOperation... readOperations) {\n-        return new ReadBatch<>(mappedTableResource, Arrays.asList(readOperations));\n+    @Override\n+    public Function<BatchGetItemRequest, SdkIterable<BatchGetItemResponse>> serviceCall(DynamoDbClient dynamoDbClient) {\n+        return dynamoDbClient::batchGetItemPaginator;\n+    }\n+\n+    @Override\n+    public Function<BatchGetItemRequest, SdkPublisher<BatchGetItemResponse>> asyncServiceCall(\n+        DynamoDbAsyncClient dynamoDbAsyncClient) {\n+\n+        return dynamoDbAsyncClient::batchGetItemPaginator;\n     }\n \n-    void addReadRequestsToMap(Map<String, KeysAndAttributes> readRequestMap) {\n-        KeysAndAttributes newKeysAndAttributes = generateKeysAndAttributes();\n-        KeysAndAttributes existingKeysAndAttributes = readRequestMap.get(tableName());\n+    private void addReadRequestsToMap(ReadBatch readBatch, Map<String, KeysAndAttributes> readRequestMap) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY0MzY1Ng=="}, "originalCommit": {"oid": "86d01628cc2d63b075ae4851496ad4ca6366d2df"}, "originalPosition": 92}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxMDM3MDExOnYy", "diffSide": "RIGHT", "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/operations/BatchWriteItemOperation.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQxOToyMzo0N1rOFkVdog==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQxOToyMzo0N1rOFkVdog==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY0NDcwNg==", "bodyText": "The type erasure problem no longer exists due to this refactor, therefore we should be able to do a straight map into WriteRequests", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1628#discussion_r373644706", "createdAt": "2020-01-31T19:23:47Z", "author": {"login": "bmaizels"}, "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/operations/BatchWriteItemOperation.java", "diffHunk": "@@ -0,0 +1,98 @@\n+/*\n+ * Copyright 2010-2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.awssdk.extensions.dynamodb.mappingclient.operations;\n+\n+import java.util.ArrayList;\n+import java.util.Collection;\n+import java.util.Collections;\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.concurrent.CompletableFuture;\n+import java.util.function.Function;\n+import java.util.stream.Collectors;\n+import software.amazon.awssdk.annotations.SdkInternalApi;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.BatchableWriteOperation;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.DatabaseOperation;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.MappedTableResource;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.MapperExtension;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.OperationContext;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.model.BatchWriteItemEnhancedRequest;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.model.BatchWriteResult;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.model.WriteBatch;\n+import software.amazon.awssdk.services.dynamodb.DynamoDbAsyncClient;\n+import software.amazon.awssdk.services.dynamodb.DynamoDbClient;\n+import software.amazon.awssdk.services.dynamodb.model.BatchWriteItemRequest;\n+import software.amazon.awssdk.services.dynamodb.model.BatchWriteItemResponse;\n+import software.amazon.awssdk.services.dynamodb.model.WriteRequest;\n+\n+@SdkInternalApi\n+public class BatchWriteItemOperation implements DatabaseOperation<BatchWriteItemRequest,\n+                                 BatchWriteItemResponse, BatchWriteResult> {\n+\n+    private final BatchWriteItemEnhancedRequest request;\n+\n+    private BatchWriteItemOperation(BatchWriteItemEnhancedRequest request) {\n+        this.request = request;\n+    }\n+\n+    public static BatchWriteItemOperation create(BatchWriteItemEnhancedRequest request) {\n+        return new BatchWriteItemOperation(request);\n+    }\n+\n+    @Override\n+    public BatchWriteItemRequest generateRequest(MapperExtension mapperExtension) {\n+        Map<String, Collection<WriteRequest>> requestItems = new HashMap<>();\n+        request.writeBatches().forEach(writeBatch -> addWriteRequestsToMap(writeBatch, requestItems));\n+        return BatchWriteItemRequest.builder()\n+                                    .requestItems(Collections.unmodifiableMap(requestItems))\n+                                    .build();\n+    }\n+\n+    @Override\n+    public BatchWriteResult transformResponse(BatchWriteItemResponse response, MapperExtension mapperExtension) {\n+        return BatchWriteResult.builder().unprocessedRequests(response.unprocessedItems()).build();\n+    }\n+\n+    @Override\n+    public Function<BatchWriteItemRequest, BatchWriteItemResponse> serviceCall(DynamoDbClient dynamoDbClient) {\n+        return dynamoDbClient::batchWriteItem;\n+    }\n+\n+    @Override\n+    public Function<BatchWriteItemRequest, CompletableFuture<BatchWriteItemResponse>> asyncServiceCall(\n+        DynamoDbAsyncClient dynamoDbAsyncClient) {\n+\n+        return dynamoDbAsyncClient::batchWriteItem;\n+    }\n+\n+    // Due to raw-type erasure, it's necessary to pass a map in to be mutated rather than try and extract the write\n+    // requests which would be more straight forward but Collection<WriteRequest> becomes Collection when you try and\n+    // exfiltrate the objects from a raw-typed WriteBatch.\n+    private void addWriteRequestsToMap(WriteBatch writeBatch, Map<String, Collection<WriteRequest>> writeRequestMap) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "86d01628cc2d63b075ae4851496ad4ca6366d2df"}, "originalPosition": 84}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxMDM4MTE5OnYy", "diffSide": "LEFT", "path": "services-custom/dynamodb-enhanced/src/test/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/functionaltests/AsyncBatchWriteItemOperationTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQxOToyODowMFrOFkVk5Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQyMToyNzoyMVrOFkYa1g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY0NjU2NQ==", "bodyText": "Did we get rid of create? I think we agreed that every enhanced request should have a create(...) method that made the most sense for the most likely/simply use-cases. Eg: PutItemEnhancedRequest.create(myItem);", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1628#discussion_r373646565", "createdAt": "2020-01-31T19:28:00Z", "author": {"login": "bmaizels"}, "path": "services-custom/dynamodb-enhanced/src/test/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/functionaltests/AsyncBatchWriteItemOperationTest.java", "diffHunk": "@@ -187,7 +187,10 @@ public void singlePut() {\n         List<WriteTransaction> writeTransactions =\n             singletonList(WriteTransaction.create(mappedTable1, PutItem.create(RECORDS_1.get(0))));\n \n-        enhancedAsyncClient.execute(TransactWriteItems.create(writeTransactions)).join();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "86d01628cc2d63b075ae4851496ad4ca6366d2df"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY5MzE0Mg==", "bodyText": "I think that one went out the window for 3 of the 4 operations. I will put it back in.", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1628#discussion_r373693142", "createdAt": "2020-01-31T21:27:21Z", "author": {"login": "cenedhryn"}, "path": "services-custom/dynamodb-enhanced/src/test/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/functionaltests/AsyncBatchWriteItemOperationTest.java", "diffHunk": "@@ -187,7 +187,10 @@ public void singlePut() {\n         List<WriteTransaction> writeTransactions =\n             singletonList(WriteTransaction.create(mappedTable1, PutItem.create(RECORDS_1.get(0))));\n \n-        enhancedAsyncClient.execute(TransactWriteItems.create(writeTransactions)).join();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY0NjU2NQ=="}, "originalCommit": {"oid": "86d01628cc2d63b075ae4851496ad4ca6366d2df"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxMDM4ODEwOnYy", "diffSide": "RIGHT", "path": "services-custom/dynamodb-enhanced/src/test/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/functionaltests/BatchWriteItemOperationTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQxOTozMDozMVrOFkVpZg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQyMTozMzo0M1rOFkYkJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY0NzcxOA==", "bodyText": "execute?", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1628#discussion_r373647718", "createdAt": "2020-01-31T19:30:31Z", "author": {"login": "bmaizels"}, "path": "services-custom/dynamodb-enhanced/src/test/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/functionaltests/BatchWriteItemOperationTest.java", "diffHunk": "@@ -0,0 +1,258 @@\n+/*\n+ * Copyright 2010-2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.awssdk.extensions.dynamodb.mappingclient.functionaltests;\n+\n+import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.hamcrest.Matchers.is;\n+import static org.hamcrest.Matchers.nullValue;\n+import static software.amazon.awssdk.extensions.dynamodb.mappingclient.AttributeValues.numberValue;\n+import static software.amazon.awssdk.extensions.dynamodb.mappingclient.staticmapper.AttributeTags.primaryPartitionKey;\n+import static software.amazon.awssdk.extensions.dynamodb.mappingclient.staticmapper.Attributes.integerNumberAttribute;\n+import static software.amazon.awssdk.extensions.dynamodb.mappingclient.staticmapper.Attributes.stringAttribute;\n+\n+import java.util.List;\n+import java.util.Objects;\n+import java.util.stream.Collectors;\n+import java.util.stream.IntStream;\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.Test;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.DynamoDbEnhancedClient;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.Key;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.MappedTable;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.TableSchema;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.model.BatchWriteItemEnhancedRequest;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.model.WriteBatch;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.operations.CreateTable;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.operations.DeleteItem;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.operations.GetItem;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.operations.PutItem;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.staticmapper.StaticTableSchema;\n+import software.amazon.awssdk.services.dynamodb.model.DeleteTableRequest;\n+\n+public class BatchWriteItemOperationTest extends LocalDynamoDbSyncTestBase {\n+    private static class Record1 {\n+        private Integer id;\n+        private String attribute;\n+\n+        private Integer getId() {\n+            return id;\n+        }\n+\n+        private Record1 setId(Integer id) {\n+            this.id = id;\n+            return this;\n+        }\n+\n+        private String getAttribute() {\n+            return attribute;\n+        }\n+\n+        private Record1 setAttribute(String attribute) {\n+            this.attribute = attribute;\n+            return this;\n+        }\n+\n+        @Override\n+        public boolean equals(Object o) {\n+            if (this == o) return true;\n+            if (o == null || getClass() != o.getClass()) return false;\n+            Record1 record1 = (Record1) o;\n+            return Objects.equals(id, record1.id) &&\n+                   Objects.equals(attribute, record1.attribute);\n+        }\n+\n+        @Override\n+        public int hashCode() {\n+            return Objects.hash(id, attribute);\n+        }\n+    }\n+\n+    private static class Record2 {\n+        private Integer id;\n+        private String attribute;\n+\n+        private Integer getId() {\n+            return id;\n+        }\n+\n+        private Record2 setId(Integer id) {\n+            this.id = id;\n+            return this;\n+        }\n+\n+        private String getAttribute() {\n+            return attribute;\n+        }\n+\n+        private Record2 setAttribute(String attribute) {\n+            this.attribute = attribute;\n+            return this;\n+        }\n+\n+        @Override\n+        public boolean equals(Object o) {\n+            if (this == o) return true;\n+            if (o == null || getClass() != o.getClass()) return false;\n+            Record2 record2 = (Record2) o;\n+            return Objects.equals(id, record2.id) &&\n+                   Objects.equals(attribute, record2.attribute);\n+        }\n+\n+        @Override\n+        public int hashCode() {\n+            return Objects.hash(id, attribute);\n+        }\n+    }\n+\n+    private static final TableSchema<Record1> TABLE_SCHEMA_1 =\n+        StaticTableSchema.builder(Record1.class)\n+                         .newItemSupplier(Record1::new)\n+                         .attributes(\n+                             integerNumberAttribute(\"id_1\", Record1::getId, Record1::setId).as(primaryPartitionKey()),\n+                             stringAttribute(\"attribute\", Record1::getAttribute, Record1::setAttribute))\n+                         .build();\n+\n+    private static final TableSchema<Record2> TABLE_SCHEMA_2 =\n+        StaticTableSchema.builder(Record2.class)\n+                         .newItemSupplier(Record2::new)\n+                         .attributes(\n+                             integerNumberAttribute(\"id_2\", Record2::getId, Record2::setId).as(primaryPartitionKey()),\n+                             stringAttribute(\"attribute\", Record2::getAttribute, Record2::setAttribute))\n+                         .build();\n+\n+    private DynamoDbEnhancedClient enhancedClient = DynamoDbEnhancedClient.builder()\n+                                                                          .dynamoDbClient(getDynamoDbClient())\n+                                                                          .build();\n+\n+    private MappedTable<Record1> mappedTable1 = enhancedClient.table(getConcreteTableName(\"table-name-1\"), TABLE_SCHEMA_1);\n+    private MappedTable<Record2> mappedTable2 = enhancedClient.table(getConcreteTableName(\"table-name-2\"), TABLE_SCHEMA_2);\n+\n+    private static final List<Record1> RECORDS_1 =\n+        IntStream.range(0, 2)\n+                 .mapToObj(i -> new Record1().setId(i).setAttribute(Integer.toString(i)))\n+                 .collect(Collectors.toList());\n+\n+    private static final List<Record2> RECORDS_2 =\n+        IntStream.range(0, 2)\n+                 .mapToObj(i -> new Record2().setId(i).setAttribute(Integer.toString(i)))\n+                 .collect(Collectors.toList());\n+\n+    @Before\n+    public void createTable() {\n+        mappedTable1.execute(CreateTable.create(getDefaultProvisionedThroughput()));\n+        mappedTable2.execute(CreateTable.create(getDefaultProvisionedThroughput()));\n+    }\n+\n+    @After\n+    public void deleteTable() {\n+        getDynamoDbClient().deleteTable(DeleteTableRequest.builder()\n+                                                          .tableName(getConcreteTableName(\"table-name-1\"))\n+                                                          .build());\n+        getDynamoDbClient().deleteTable(DeleteTableRequest.builder()\n+                                                          .tableName(getConcreteTableName(\"table-name-2\"))\n+                                                          .build());\n+    }\n+\n+    @Test\n+    public void singlePut() {\n+        BatchWriteItemEnhancedRequest batchWriteItemEnhancedRequest =\n+            BatchWriteItemEnhancedRequest.builder()\n+                                         .addWriteBatch(WriteBatch.create(mappedTable1, PutItem.create(RECORDS_1.get(0))))\n+                                         .build();\n+\n+        enhancedClient.batchWriteItem(batchWriteItemEnhancedRequest);\n+\n+        Record1 record = mappedTable1.execute(GetItem.create(Key.create(numberValue(0))));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "86d01628cc2d63b075ae4851496ad4ca6366d2df"}, "originalPosition": 179}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY5NTUyNQ==", "bodyText": "oh right we haven't done GetItem yet I remember!", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1628#discussion_r373695525", "createdAt": "2020-01-31T21:33:43Z", "author": {"login": "bmaizels"}, "path": "services-custom/dynamodb-enhanced/src/test/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/functionaltests/BatchWriteItemOperationTest.java", "diffHunk": "@@ -0,0 +1,258 @@\n+/*\n+ * Copyright 2010-2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.awssdk.extensions.dynamodb.mappingclient.functionaltests;\n+\n+import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.hamcrest.Matchers.is;\n+import static org.hamcrest.Matchers.nullValue;\n+import static software.amazon.awssdk.extensions.dynamodb.mappingclient.AttributeValues.numberValue;\n+import static software.amazon.awssdk.extensions.dynamodb.mappingclient.staticmapper.AttributeTags.primaryPartitionKey;\n+import static software.amazon.awssdk.extensions.dynamodb.mappingclient.staticmapper.Attributes.integerNumberAttribute;\n+import static software.amazon.awssdk.extensions.dynamodb.mappingclient.staticmapper.Attributes.stringAttribute;\n+\n+import java.util.List;\n+import java.util.Objects;\n+import java.util.stream.Collectors;\n+import java.util.stream.IntStream;\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.Test;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.DynamoDbEnhancedClient;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.Key;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.MappedTable;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.TableSchema;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.model.BatchWriteItemEnhancedRequest;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.model.WriteBatch;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.operations.CreateTable;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.operations.DeleteItem;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.operations.GetItem;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.operations.PutItem;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.staticmapper.StaticTableSchema;\n+import software.amazon.awssdk.services.dynamodb.model.DeleteTableRequest;\n+\n+public class BatchWriteItemOperationTest extends LocalDynamoDbSyncTestBase {\n+    private static class Record1 {\n+        private Integer id;\n+        private String attribute;\n+\n+        private Integer getId() {\n+            return id;\n+        }\n+\n+        private Record1 setId(Integer id) {\n+            this.id = id;\n+            return this;\n+        }\n+\n+        private String getAttribute() {\n+            return attribute;\n+        }\n+\n+        private Record1 setAttribute(String attribute) {\n+            this.attribute = attribute;\n+            return this;\n+        }\n+\n+        @Override\n+        public boolean equals(Object o) {\n+            if (this == o) return true;\n+            if (o == null || getClass() != o.getClass()) return false;\n+            Record1 record1 = (Record1) o;\n+            return Objects.equals(id, record1.id) &&\n+                   Objects.equals(attribute, record1.attribute);\n+        }\n+\n+        @Override\n+        public int hashCode() {\n+            return Objects.hash(id, attribute);\n+        }\n+    }\n+\n+    private static class Record2 {\n+        private Integer id;\n+        private String attribute;\n+\n+        private Integer getId() {\n+            return id;\n+        }\n+\n+        private Record2 setId(Integer id) {\n+            this.id = id;\n+            return this;\n+        }\n+\n+        private String getAttribute() {\n+            return attribute;\n+        }\n+\n+        private Record2 setAttribute(String attribute) {\n+            this.attribute = attribute;\n+            return this;\n+        }\n+\n+        @Override\n+        public boolean equals(Object o) {\n+            if (this == o) return true;\n+            if (o == null || getClass() != o.getClass()) return false;\n+            Record2 record2 = (Record2) o;\n+            return Objects.equals(id, record2.id) &&\n+                   Objects.equals(attribute, record2.attribute);\n+        }\n+\n+        @Override\n+        public int hashCode() {\n+            return Objects.hash(id, attribute);\n+        }\n+    }\n+\n+    private static final TableSchema<Record1> TABLE_SCHEMA_1 =\n+        StaticTableSchema.builder(Record1.class)\n+                         .newItemSupplier(Record1::new)\n+                         .attributes(\n+                             integerNumberAttribute(\"id_1\", Record1::getId, Record1::setId).as(primaryPartitionKey()),\n+                             stringAttribute(\"attribute\", Record1::getAttribute, Record1::setAttribute))\n+                         .build();\n+\n+    private static final TableSchema<Record2> TABLE_SCHEMA_2 =\n+        StaticTableSchema.builder(Record2.class)\n+                         .newItemSupplier(Record2::new)\n+                         .attributes(\n+                             integerNumberAttribute(\"id_2\", Record2::getId, Record2::setId).as(primaryPartitionKey()),\n+                             stringAttribute(\"attribute\", Record2::getAttribute, Record2::setAttribute))\n+                         .build();\n+\n+    private DynamoDbEnhancedClient enhancedClient = DynamoDbEnhancedClient.builder()\n+                                                                          .dynamoDbClient(getDynamoDbClient())\n+                                                                          .build();\n+\n+    private MappedTable<Record1> mappedTable1 = enhancedClient.table(getConcreteTableName(\"table-name-1\"), TABLE_SCHEMA_1);\n+    private MappedTable<Record2> mappedTable2 = enhancedClient.table(getConcreteTableName(\"table-name-2\"), TABLE_SCHEMA_2);\n+\n+    private static final List<Record1> RECORDS_1 =\n+        IntStream.range(0, 2)\n+                 .mapToObj(i -> new Record1().setId(i).setAttribute(Integer.toString(i)))\n+                 .collect(Collectors.toList());\n+\n+    private static final List<Record2> RECORDS_2 =\n+        IntStream.range(0, 2)\n+                 .mapToObj(i -> new Record2().setId(i).setAttribute(Integer.toString(i)))\n+                 .collect(Collectors.toList());\n+\n+    @Before\n+    public void createTable() {\n+        mappedTable1.execute(CreateTable.create(getDefaultProvisionedThroughput()));\n+        mappedTable2.execute(CreateTable.create(getDefaultProvisionedThroughput()));\n+    }\n+\n+    @After\n+    public void deleteTable() {\n+        getDynamoDbClient().deleteTable(DeleteTableRequest.builder()\n+                                                          .tableName(getConcreteTableName(\"table-name-1\"))\n+                                                          .build());\n+        getDynamoDbClient().deleteTable(DeleteTableRequest.builder()\n+                                                          .tableName(getConcreteTableName(\"table-name-2\"))\n+                                                          .build());\n+    }\n+\n+    @Test\n+    public void singlePut() {\n+        BatchWriteItemEnhancedRequest batchWriteItemEnhancedRequest =\n+            BatchWriteItemEnhancedRequest.builder()\n+                                         .addWriteBatch(WriteBatch.create(mappedTable1, PutItem.create(RECORDS_1.get(0))))\n+                                         .build();\n+\n+        enhancedClient.batchWriteItem(batchWriteItemEnhancedRequest);\n+\n+        Record1 record = mappedTable1.execute(GetItem.create(Key.create(numberValue(0))));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY0NzcxOA=="}, "originalCommit": {"oid": "86d01628cc2d63b075ae4851496ad4ca6366d2df"}, "originalPosition": 179}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyMjAyMzI1OnYy", "diffSide": "RIGHT", "path": "services-custom/dynamodb-enhanced/README.md", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQxOTowMDozMlrOFmDcgg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQxOToyNTowMFrOFmEOqg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTQ0NjY1OA==", "bodyText": "There should be no open reference to Default*. DynamoDbEnhancedClient.builder() needs to work, if it doesn't we need to fix that too.", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1628#discussion_r375446658", "createdAt": "2020-02-05T19:00:32Z", "author": {"login": "bmaizels"}, "path": "services-custom/dynamodb-enhanced/README.md", "diffHunk": "@@ -64,18 +64,18 @@ values used are also completely arbitrary.\n        .build();\n    ```\n    \n-3. Create a MappedDatabase object that you will use to repeatedly\n+3. Create a DynamoDbEnhancedClient object that you will use to repeatedly\n    execute operations against all your tables :- \n    ```java\n-   MappedDatabase database = DynamoDbMappedDatabase.builder()\n-                                                   .dynamoDbClient(dynamoDbClient)\n-                                                   .build();\n+   DynamoDbEnhancedClient enhancedClient = DefaultDynamoDbEnhancedClient.builder()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "359d9fa57bdf7edc3059e6612473c40bd89f2908"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTQ1OTQ5OA==", "bodyText": "Yes, I did a direct name translation of these statements without switching over to the new paradigm. Will fix", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1628#discussion_r375459498", "createdAt": "2020-02-05T19:25:00Z", "author": {"login": "cenedhryn"}, "path": "services-custom/dynamodb-enhanced/README.md", "diffHunk": "@@ -64,18 +64,18 @@ values used are also completely arbitrary.\n        .build();\n    ```\n    \n-3. Create a MappedDatabase object that you will use to repeatedly\n+3. Create a DynamoDbEnhancedClient object that you will use to repeatedly\n    execute operations against all your tables :- \n    ```java\n-   MappedDatabase database = DynamoDbMappedDatabase.builder()\n-                                                   .dynamoDbClient(dynamoDbClient)\n-                                                   .build();\n+   DynamoDbEnhancedClient enhancedClient = DefaultDynamoDbEnhancedClient.builder()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTQ0NjY1OA=="}, "originalCommit": {"oid": "359d9fa57bdf7edc3059e6612473c40bd89f2908"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyMjAyNTA2OnYy", "diffSide": "RIGHT", "path": "services-custom/dynamodb-enhanced/README.md", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQxOTowMDo1OFrOFmDdhg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQxOTowMDo1OFrOFmDdhg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTQ0NjkxOA==", "bodyText": "Can we remove reference to internal implementation class.", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1628#discussion_r375446918", "createdAt": "2020-02-05T19:00:58Z", "author": {"login": "bmaizels"}, "path": "services-custom/dynamodb-enhanced/README.md", "diffHunk": "@@ -155,7 +155,7 @@ key differences:\n    of the library instead of the synchronous one (you will need to use\n    an asynchronous DynamoDb client from the SDK as well):\n    ```java\n-    AsyncMappedDatabase database = DynamoDbAsyncMappedDatabase.builder()\n+    DynamoDbEnhancedAsyncClient enhancedClient = DefaultDynamoDbEnhancedAsyncClient.builder()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "359d9fa57bdf7edc3059e6612473c40bd89f2908"}, "originalPosition": 73}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyMjAyNjczOnYy", "diffSide": "RIGHT", "path": "services-custom/dynamodb-enhanced/README.md", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQxOTowMToyOVrOFmDelw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQxOTowMToyOVrOFmDelw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTQ0NzE5MQ==", "bodyText": "Can we remove reference to internal implementation class.", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1628#discussion_r375447191", "createdAt": "2020-02-05T19:01:29Z", "author": {"login": "bmaizels"}, "path": "services-custom/dynamodb-enhanced/README.md", "diffHunk": "@@ -205,9 +205,9 @@ that write will fail.\n \n To load the extension:\n ```java\n-MappedDatabase database = \n-  DynamoDbMappedDatabase.builder()\n-                        .dynamoDbClient(dynbamoDbClient)\n+DynamoDbEnhancedClient enhancedClient = \n+  DefaultDynamoDbEnhancedClient.builder()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "359d9fa57bdf7edc3059e6612473c40bd89f2908"}, "originalPosition": 94}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyMjA0NzAyOnYy", "diffSide": "RIGHT", "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/model/BatchWriteResult.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQxOTowNzo1M1rOFmDrNw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQxOTowNzo1M1rOFmDrNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTQ1MDQyMw==", "bodyText": "I think we should take an immutable copy of the list value for each key.", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1628#discussion_r375450423", "createdAt": "2020-02-05T19:07:53Z", "author": {"login": "bmaizels"}, "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/model/BatchWriteResult.java", "diffHunk": "@@ -0,0 +1,88 @@\n+/*\n+ * Copyright 2010-2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.awssdk.extensions.dynamodb.mappingclient.model;\n+\n+import static software.amazon.awssdk.extensions.dynamodb.mappingclient.core.Utils.readAndTransformSingleItem;\n+\n+import java.util.Collections;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.stream.Collectors;\n+import software.amazon.awssdk.annotations.SdkPublicApi;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.MappedTable;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.OperationContext;\n+import software.amazon.awssdk.services.dynamodb.model.DeleteRequest;\n+import software.amazon.awssdk.services.dynamodb.model.PutRequest;\n+import software.amazon.awssdk.services.dynamodb.model.WriteRequest;\n+\n+@SdkPublicApi\n+public class BatchWriteResult {\n+    private final Map<String, List<WriteRequest>> unprocessedRequests;\n+\n+    private BatchWriteResult(Builder builder) {\n+        this.unprocessedRequests = Collections.unmodifiableMap(builder.unprocessedRequests);\n+    }\n+\n+    public static Builder builder() {\n+        return new Builder();\n+    }\n+\n+    public <T> List<T> unprocessedPutItemsForTable(MappedTable<T> mappedTable) {\n+        List<WriteRequest> writeRequests =\n+            unprocessedRequests.getOrDefault(mappedTable.tableName(),\n+                                             Collections.emptyList());\n+\n+        return writeRequests.stream()\n+                            .filter(writeRequest -> writeRequest.putRequest() != null)\n+                            .map(WriteRequest::putRequest)\n+                            .map(PutRequest::item)\n+                            .map(item -> readAndTransformSingleItem(item,\n+                                                                    mappedTable.tableSchema(),\n+                                                                    OperationContext.create(mappedTable.tableName()),\n+                                                                    mappedTable.mapperExtension()))\n+                            .collect(Collectors.toList());\n+    }\n+\n+    public <T> List<T> unprocessedDeleteItemsForTable(MappedTable<T> mappedTable) {\n+        List<WriteRequest> writeRequests =\n+            unprocessedRequests.getOrDefault(mappedTable.tableName(),\n+                                             Collections.emptyList());\n+\n+        return writeRequests.stream()\n+                            .filter(writeRequest -> writeRequest.deleteRequest() != null)\n+                            .map(WriteRequest::deleteRequest)\n+                            .map(DeleteRequest::key)\n+                            .map(itemMap -> mappedTable.tableSchema().mapToItem(itemMap))\n+                            .collect(Collectors.toList());\n+    }\n+\n+    public static final class Builder {\n+        private Map<String, List<WriteRequest>> unprocessedRequests;\n+\n+        private Builder() {\n+        }\n+\n+        public Builder unprocessedRequests(Map<String, List<WriteRequest>> unprocessedRequests) {\n+            this.unprocessedRequests = new HashMap<>(unprocessedRequests);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "359d9fa57bdf7edc3059e6612473c40bd89f2908"}, "originalPosition": 80}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyMjA1NTQ3OnYy", "diffSide": "RIGHT", "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/model/ReadBatch.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQxOToxMDo0OFrOFmDwtQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQxOTozNjo0NlrOFmEnEg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTQ1MTgyOQ==", "bodyText": "Can we update this to builder style?", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1628#discussion_r375451829", "createdAt": "2020-02-05T19:10:48Z", "author": {"login": "bmaizels"}, "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/model/ReadBatch.java", "diffHunk": "@@ -13,67 +13,87 @@\n  * permissions and limitations under the License.\n  */\n \n-package software.amazon.awssdk.extensions.dynamodb.mappingclient.operations;\n+package software.amazon.awssdk.extensions.dynamodb.mappingclient.model;\n \n+import java.util.ArrayList;\n import java.util.Arrays;\n import java.util.Collection;\n+import java.util.Collections;\n import java.util.List;\n import java.util.Map;\n import java.util.concurrent.atomic.AtomicBoolean;\n import java.util.concurrent.atomic.AtomicReference;\n import java.util.stream.Collectors;\n-import java.util.stream.Stream;\n-\n import software.amazon.awssdk.annotations.SdkPublicApi;\n import software.amazon.awssdk.extensions.dynamodb.mappingclient.BatchableReadOperation;\n import software.amazon.awssdk.extensions.dynamodb.mappingclient.MappedTableResource;\n import software.amazon.awssdk.extensions.dynamodb.mappingclient.TableMetadata;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.operations.GetItem;\n import software.amazon.awssdk.services.dynamodb.model.AttributeValue;\n import software.amazon.awssdk.services.dynamodb.model.KeysAndAttributes;\n \n+/**\n+ * Encapsulates a single write transaction that can form a list of transactions that go into a\n+ * {@link BatchGetItemEnhancedRequest}.\n+ * Example:\n+ *\n+ * {@code\n+ * ReadBatch.create(myTable, putItem(myItem));\n+ * ReadBatch.createf(myTable, deleteItem(Key.create(stringValue(\"id123\"))));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "359d9fa57bdf7edc3059e6612473c40bd89f2908"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTQ1MjIxMQ==", "bodyText": "Create needs to go away in fact, it doesn't have a place in the new order. Since we have a builder in this version not sure there's any justification to delay that.", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1628#discussion_r375452211", "createdAt": "2020-02-05T19:11:29Z", "author": {"login": "bmaizels"}, "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/model/ReadBatch.java", "diffHunk": "@@ -13,67 +13,87 @@\n  * permissions and limitations under the License.\n  */\n \n-package software.amazon.awssdk.extensions.dynamodb.mappingclient.operations;\n+package software.amazon.awssdk.extensions.dynamodb.mappingclient.model;\n \n+import java.util.ArrayList;\n import java.util.Arrays;\n import java.util.Collection;\n+import java.util.Collections;\n import java.util.List;\n import java.util.Map;\n import java.util.concurrent.atomic.AtomicBoolean;\n import java.util.concurrent.atomic.AtomicReference;\n import java.util.stream.Collectors;\n-import java.util.stream.Stream;\n-\n import software.amazon.awssdk.annotations.SdkPublicApi;\n import software.amazon.awssdk.extensions.dynamodb.mappingclient.BatchableReadOperation;\n import software.amazon.awssdk.extensions.dynamodb.mappingclient.MappedTableResource;\n import software.amazon.awssdk.extensions.dynamodb.mappingclient.TableMetadata;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.operations.GetItem;\n import software.amazon.awssdk.services.dynamodb.model.AttributeValue;\n import software.amazon.awssdk.services.dynamodb.model.KeysAndAttributes;\n \n+/**\n+ * Encapsulates a single write transaction that can form a list of transactions that go into a\n+ * {@link BatchGetItemEnhancedRequest}.\n+ * Example:\n+ *\n+ * {@code\n+ * ReadBatch.create(myTable, putItem(myItem));\n+ * ReadBatch.createf(myTable, deleteItem(Key.create(stringValue(\"id123\"))));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTQ1MTgyOQ=="}, "originalCommit": {"oid": "359d9fa57bdf7edc3059e6612473c40bd89f2908"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTQ2MDkyNA==", "bodyText": "I thought we had said there would be both a builder and a create, but perhaps that was only for the requests?", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1628#discussion_r375460924", "createdAt": "2020-02-05T19:27:37Z", "author": {"login": "cenedhryn"}, "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/model/ReadBatch.java", "diffHunk": "@@ -13,67 +13,87 @@\n  * permissions and limitations under the License.\n  */\n \n-package software.amazon.awssdk.extensions.dynamodb.mappingclient.operations;\n+package software.amazon.awssdk.extensions.dynamodb.mappingclient.model;\n \n+import java.util.ArrayList;\n import java.util.Arrays;\n import java.util.Collection;\n+import java.util.Collections;\n import java.util.List;\n import java.util.Map;\n import java.util.concurrent.atomic.AtomicBoolean;\n import java.util.concurrent.atomic.AtomicReference;\n import java.util.stream.Collectors;\n-import java.util.stream.Stream;\n-\n import software.amazon.awssdk.annotations.SdkPublicApi;\n import software.amazon.awssdk.extensions.dynamodb.mappingclient.BatchableReadOperation;\n import software.amazon.awssdk.extensions.dynamodb.mappingclient.MappedTableResource;\n import software.amazon.awssdk.extensions.dynamodb.mappingclient.TableMetadata;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.operations.GetItem;\n import software.amazon.awssdk.services.dynamodb.model.AttributeValue;\n import software.amazon.awssdk.services.dynamodb.model.KeysAndAttributes;\n \n+/**\n+ * Encapsulates a single write transaction that can form a list of transactions that go into a\n+ * {@link BatchGetItemEnhancedRequest}.\n+ * Example:\n+ *\n+ * {@code\n+ * ReadBatch.create(myTable, putItem(myItem));\n+ * ReadBatch.createf(myTable, deleteItem(Key.create(stringValue(\"id123\"))));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTQ1MTgyOQ=="}, "originalCommit": {"oid": "359d9fa57bdf7edc3059e6612473c40bd89f2908"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTQ2NTc0Ng==", "bodyText": "Since one of the main drivers for removing the create is the still-to-come atomic operation split this change is deferred.", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1628#discussion_r375465746", "createdAt": "2020-02-05T19:36:46Z", "author": {"login": "cenedhryn"}, "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/model/ReadBatch.java", "diffHunk": "@@ -13,67 +13,87 @@\n  * permissions and limitations under the License.\n  */\n \n-package software.amazon.awssdk.extensions.dynamodb.mappingclient.operations;\n+package software.amazon.awssdk.extensions.dynamodb.mappingclient.model;\n \n+import java.util.ArrayList;\n import java.util.Arrays;\n import java.util.Collection;\n+import java.util.Collections;\n import java.util.List;\n import java.util.Map;\n import java.util.concurrent.atomic.AtomicBoolean;\n import java.util.concurrent.atomic.AtomicReference;\n import java.util.stream.Collectors;\n-import java.util.stream.Stream;\n-\n import software.amazon.awssdk.annotations.SdkPublicApi;\n import software.amazon.awssdk.extensions.dynamodb.mappingclient.BatchableReadOperation;\n import software.amazon.awssdk.extensions.dynamodb.mappingclient.MappedTableResource;\n import software.amazon.awssdk.extensions.dynamodb.mappingclient.TableMetadata;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.operations.GetItem;\n import software.amazon.awssdk.services.dynamodb.model.AttributeValue;\n import software.amazon.awssdk.services.dynamodb.model.KeysAndAttributes;\n \n+/**\n+ * Encapsulates a single write transaction that can form a list of transactions that go into a\n+ * {@link BatchGetItemEnhancedRequest}.\n+ * Example:\n+ *\n+ * {@code\n+ * ReadBatch.create(myTable, putItem(myItem));\n+ * ReadBatch.createf(myTable, deleteItem(Key.create(stringValue(\"id123\"))));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTQ1MTgyOQ=="}, "originalCommit": {"oid": "359d9fa57bdf7edc3059e6612473c40bd89f2908"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyMjA2NDE3OnYy", "diffSide": "RIGHT", "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/model/ReadTransaction.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQxOToxMzoyMVrOFmD2Gw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQxOToxMzoyMVrOFmD2Gw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTQ1MzIxMQ==", "bodyText": "Can we change this to builder style and get rid of create?", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1628#discussion_r375453211", "createdAt": "2020-02-05T19:13:21Z", "author": {"login": "bmaizels"}, "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/model/ReadTransaction.java", "diffHunk": "@@ -13,28 +13,49 @@\n  * permissions and limitations under the License.\n  */\n \n-package software.amazon.awssdk.extensions.dynamodb.mappingclient.operations;\n+package software.amazon.awssdk.extensions.dynamodb.mappingclient.model;\n \n import software.amazon.awssdk.annotations.SdkPublicApi;\n import software.amazon.awssdk.extensions.dynamodb.mappingclient.MappedTableResource;\n import software.amazon.awssdk.extensions.dynamodb.mappingclient.OperationContext;\n import software.amazon.awssdk.extensions.dynamodb.mappingclient.TransactableReadOperation;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.operations.GetItem;\n import software.amazon.awssdk.services.dynamodb.model.TransactGetItem;\n \n+/**\n+ * Encapsulates a single read transaction that can form a list of transactions that go into a\n+ * {@link TransactGetItemsEnhancedRequest}.\n+ * Example:\n+ *\n+ * {@code\n+ * ReadTransaction.create(table1, GetItem.create(Key.create(stringValue(\"id123\"))));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "359d9fa57bdf7edc3059e6612473c40bd89f2908"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyMjA2ODY5OnYy", "diffSide": "RIGHT", "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/model/WriteBatch.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQxOToxNDo0NlrOFmD5BQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQxOToxNDo0NlrOFmD5BQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTQ1Mzk1Nw==", "bodyText": "Can we switch this to builder style and remove create implementation?", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1628#discussion_r375453957", "createdAt": "2020-02-05T19:14:46Z", "author": {"login": "bmaizels"}, "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/model/WriteBatch.java", "diffHunk": "@@ -0,0 +1,163 @@\n+/*\n+ * Copyright 2010-2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.awssdk.extensions.dynamodb.mappingclient.model;\n+\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.Collection;\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.stream.Collectors;\n+import software.amazon.awssdk.annotations.SdkPublicApi;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.BatchableWriteOperation;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.MappedTableResource;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.OperationContext;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.operations.PutItem;\n+import software.amazon.awssdk.services.dynamodb.model.WriteRequest;\n+\n+/**\n+ * Encapsulates a single write batch that can form a list of write batches that go into a {@link BatchWriteItemEnhancedRequest}.\n+ * Example:\n+ *\n+ * {@code\n+ * WriteBatch.create(myTable, putItem.create(myItem));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "359d9fa57bdf7edc3059e6612473c40bd89f2908"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyMjA3NTk0OnYy", "diffSide": "RIGHT", "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/model/WriteTransaction.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQxOToxNjo1MlrOFmD9eA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQxOToxNjo1MlrOFmD9eA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTQ1NTA5Ng==", "bodyText": "Can we switch this to builder style and remove create implementation? (I don't think it has a future).", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1628#discussion_r375455096", "createdAt": "2020-02-05T19:16:52Z", "author": {"login": "bmaizels"}, "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/model/WriteTransaction.java", "diffHunk": "@@ -13,21 +13,23 @@\n  * permissions and limitations under the License.\n  */\n \n-package software.amazon.awssdk.extensions.dynamodb.mappingclient.operations;\n+package software.amazon.awssdk.extensions.dynamodb.mappingclient.model;\n \n import software.amazon.awssdk.annotations.SdkPublicApi;\n import software.amazon.awssdk.extensions.dynamodb.mappingclient.MappedTableResource;\n import software.amazon.awssdk.extensions.dynamodb.mappingclient.OperationContext;\n import software.amazon.awssdk.extensions.dynamodb.mappingclient.TransactableWriteOperation;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.operations.PutItem;\n import software.amazon.awssdk.services.dynamodb.model.TransactWriteItem;\n \n /**\n- * Encapsulates a single write transaction that can form a list of transactions that go into a TransactWriteItems\n- * operation. Example:\n+ * Encapsulates a single write transaction that can form a list of transactions that go into a\n+ * {@link TransactWriteItemsEnhancedRequest}.\n+ * Example:\n  *\n  * {@code\n- * WriteTransaction.of(myTable, putItem(myItem));\n- * WriteTransaction.of(myTable, deleteItem(Key.of(stringValue(\"id123\"))));\n+ * WriteTransaction.create(myTable, putItem.create(myItem));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "359d9fa57bdf7edc3059e6612473c40bd89f2908"}, "originalPosition": 24}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4191, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}