{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY2MTEzNjky", "number": 1608, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QyMzo0Njo0OFrODaWQyQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQxNzo1ODoxNFrODcUAiw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4OTU0MzEzOnYy", "diffSide": "RIGHT", "path": "http-clients/netty-nio-client/src/main/java/software/amazon/awssdk/http/nio/netty/internal/NettyConfiguration.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QyMzo0Njo0OFrOFhQRDg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQyMzowMjo0MFrOFhsr9A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDQxMzgzOA==", "bodyText": "Not directly related to your change, but can you make static vs not static import consistent?", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1608#discussion_r370413838", "createdAt": "2020-01-23T23:46:48Z", "author": {"login": "spfink"}, "path": "http-clients/netty-nio-client/src/main/java/software/amazon/awssdk/http/nio/netty/internal/NettyConfiguration.java", "diffHunk": "@@ -92,4 +89,12 @@ public boolean reapIdleConnections() {\n     public TlsKeyManagersProvider tlsKeyManagersProvider() {\n         return configuration.get(SdkHttpConfigurationOption.TLS_KEY_MANAGERS_PROVIDER);\n     }\n+\n+    public TlsTrustManagersProvider tlsTrustManagersProvider() {\n+        return configuration.get(SdkHttpConfigurationOption.TLS_TRUST_MANAGERS_PROVIDER);\n+    }\n+\n+    public boolean trustAllCertificates() {\n+        return configuration.get(TRUST_ALL_CERTIFICATES);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "34b6f242cc6a25e21775572b4ad9bf84c812c746"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDg3OTQ3Ng==", "bodyText": "Done", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1608#discussion_r370879476", "createdAt": "2020-01-24T23:02:40Z", "author": {"login": "abrooksv"}, "path": "http-clients/netty-nio-client/src/main/java/software/amazon/awssdk/http/nio/netty/internal/NettyConfiguration.java", "diffHunk": "@@ -92,4 +89,12 @@ public boolean reapIdleConnections() {\n     public TlsKeyManagersProvider tlsKeyManagersProvider() {\n         return configuration.get(SdkHttpConfigurationOption.TLS_KEY_MANAGERS_PROVIDER);\n     }\n+\n+    public TlsTrustManagersProvider tlsTrustManagersProvider() {\n+        return configuration.get(SdkHttpConfigurationOption.TLS_TRUST_MANAGERS_PROVIDER);\n+    }\n+\n+    public boolean trustAllCertificates() {\n+        return configuration.get(TRUST_ALL_CERTIFICATES);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDQxMzgzOA=="}, "originalCommit": {"oid": "34b6f242cc6a25e21775572b4ad9bf84c812c746"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4OTU0NjUzOnYy", "diffSide": "RIGHT", "path": "http-clients/apache-client/src/main/java/software/amazon/awssdk/http/apache/ApacheHttpClient.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QyMzo0ODo1M1rOFhQTKQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQyMzowMjo0NFrOFhssAA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDQxNDM3Nw==", "bodyText": "Add validation here (and other clients) that both this and trust all can't both be set?", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1608#discussion_r370414377", "createdAt": "2020-01-23T23:48:53Z", "author": {"login": "spfink"}, "path": "http-clients/apache-client/src/main/java/software/amazon/awssdk/http/apache/ApacheHttpClient.java", "diffHunk": "@@ -581,6 +599,10 @@ private HostnameVerifier getHostNameVerifier(AttributeMap standardOptions) {\n \n         private SSLContext getSslContext(AttributeMap standardOptions) {\n             TrustManager[] trustManagers = null;\n+            if (standardOptions.containsKey(SdkHttpConfigurationOption.TLS_TRUST_MANAGERS_PROVIDER)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "34b6f242cc6a25e21775572b4ad9bf84c812c746"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDg3OTQ4OA==", "bodyText": "Done", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1608#discussion_r370879488", "createdAt": "2020-01-24T23:02:44Z", "author": {"login": "abrooksv"}, "path": "http-clients/apache-client/src/main/java/software/amazon/awssdk/http/apache/ApacheHttpClient.java", "diffHunk": "@@ -581,6 +599,10 @@ private HostnameVerifier getHostNameVerifier(AttributeMap standardOptions) {\n \n         private SSLContext getSslContext(AttributeMap standardOptions) {\n             TrustManager[] trustManagers = null;\n+            if (standardOptions.containsKey(SdkHttpConfigurationOption.TLS_TRUST_MANAGERS_PROVIDER)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDQxNDM3Nw=="}, "originalCommit": {"oid": "34b6f242cc6a25e21775572b4ad9bf84c812c746"}, "originalPosition": 61}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxMDEzNzkwOnYy", "diffSide": "RIGHT", "path": "http-clients/netty-nio-client/src/main/java/software/amazon/awssdk/http/nio/netty/NettyNioAsyncHttpClient.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQxNzo1NToyOFrOFkTJkg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQxODowNDozNFrOFkTYWQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzYwNjgwMg==", "bodyText": "This formatting is weird", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1608#discussion_r373606802", "createdAt": "2020-01-31T17:55:28Z", "author": {"login": "spfink"}, "path": "http-clients/netty-nio-client/src/main/java/software/amazon/awssdk/http/nio/netty/NettyNioAsyncHttpClient.java", "diffHunk": "@@ -82,9 +73,13 @@\n \n     // Override connection idle timeout for Netty http client to reduce the frequency of \"server failed to complete the\n     // response error\". see https://github.com/aws/aws-sdk-java-v2/issues/1122\n+    // CHECKSTYLE:OFF - Lines are too long\n     private static final AttributeMap NETTY_HTTP_DEFAULTS = AttributeMap.builder()\n-                                                                        .put(CONNECTION_MAX_IDLE_TIMEOUT, Duration.ofSeconds(5))\n+                                                                        .put(\n+                                                                            SdkHttpConfigurationOption.CONNECTION_MAX_IDLE_TIMEOUT,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "137692e4e1059f4d48d880d76a3625d78feb96f0"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzYwODU3Mw==", "bodyText": "Yaaa, normal format puts it past the line limit. Disable Checkstyle for this block?", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1608#discussion_r373608573", "createdAt": "2020-01-31T17:59:33Z", "author": {"login": "abrooksv"}, "path": "http-clients/netty-nio-client/src/main/java/software/amazon/awssdk/http/nio/netty/NettyNioAsyncHttpClient.java", "diffHunk": "@@ -82,9 +73,13 @@\n \n     // Override connection idle timeout for Netty http client to reduce the frequency of \"server failed to complete the\n     // response error\". see https://github.com/aws/aws-sdk-java-v2/issues/1122\n+    // CHECKSTYLE:OFF - Lines are too long\n     private static final AttributeMap NETTY_HTTP_DEFAULTS = AttributeMap.builder()\n-                                                                        .put(CONNECTION_MAX_IDLE_TIMEOUT, Duration.ofSeconds(5))\n+                                                                        .put(\n+                                                                            SdkHttpConfigurationOption.CONNECTION_MAX_IDLE_TIMEOUT,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzYwNjgwMg=="}, "originalCommit": {"oid": "137692e4e1059f4d48d880d76a3625d78feb96f0"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzYwODk0Mw==", "bodyText": "New line AttributeMap.builder()?", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1608#discussion_r373608943", "createdAt": "2020-01-31T18:00:28Z", "author": {"login": "spfink"}, "path": "http-clients/netty-nio-client/src/main/java/software/amazon/awssdk/http/nio/netty/NettyNioAsyncHttpClient.java", "diffHunk": "@@ -82,9 +73,13 @@\n \n     // Override connection idle timeout for Netty http client to reduce the frequency of \"server failed to complete the\n     // response error\". see https://github.com/aws/aws-sdk-java-v2/issues/1122\n+    // CHECKSTYLE:OFF - Lines are too long\n     private static final AttributeMap NETTY_HTTP_DEFAULTS = AttributeMap.builder()\n-                                                                        .put(CONNECTION_MAX_IDLE_TIMEOUT, Duration.ofSeconds(5))\n+                                                                        .put(\n+                                                                            SdkHttpConfigurationOption.CONNECTION_MAX_IDLE_TIMEOUT,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzYwNjgwMg=="}, "originalCommit": {"oid": "137692e4e1059f4d48d880d76a3625d78feb96f0"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzYxMDU4NQ==", "bodyText": "Works for me!", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1608#discussion_r373610585", "createdAt": "2020-01-31T18:04:34Z", "author": {"login": "abrooksv"}, "path": "http-clients/netty-nio-client/src/main/java/software/amazon/awssdk/http/nio/netty/NettyNioAsyncHttpClient.java", "diffHunk": "@@ -82,9 +73,13 @@\n \n     // Override connection idle timeout for Netty http client to reduce the frequency of \"server failed to complete the\n     // response error\". see https://github.com/aws/aws-sdk-java-v2/issues/1122\n+    // CHECKSTYLE:OFF - Lines are too long\n     private static final AttributeMap NETTY_HTTP_DEFAULTS = AttributeMap.builder()\n-                                                                        .put(CONNECTION_MAX_IDLE_TIMEOUT, Duration.ofSeconds(5))\n+                                                                        .put(\n+                                                                            SdkHttpConfigurationOption.CONNECTION_MAX_IDLE_TIMEOUT,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzYwNjgwMg=="}, "originalCommit": {"oid": "137692e4e1059f4d48d880d76a3625d78feb96f0"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxMDE0NTM5OnYy", "diffSide": "RIGHT", "path": "http-clients/apache-client/src/main/java/software/amazon/awssdk/http/apache/ApacheHttpClient.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQxNzo1ODoxNFrOFkTOQQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQxNzo1ODoxNFrOFkTOQQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzYwODAwMQ==", "bodyText": "A TlsTrustManagerProvider can't be provided if TrustAllCertificates is also set", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1608#discussion_r373608001", "createdAt": "2020-01-31T17:58:14Z", "author": {"login": "spfink"}, "path": "http-clients/apache-client/src/main/java/software/amazon/awssdk/http/apache/ApacheHttpClient.java", "diffHunk": "@@ -580,14 +590,22 @@ private HostnameVerifier getHostNameVerifier(AttributeMap standardOptions) {\n         }\n \n         private SSLContext getSslContext(AttributeMap standardOptions) {\n+            Validate.isTrue(standardOptions.get(SdkHttpConfigurationOption.TLS_TRUST_MANAGERS_PROVIDER) == null ||\n+                            !standardOptions.get(SdkHttpConfigurationOption.TRUST_ALL_CERTIFICATES),\n+                            \"The tlsTrustManagersProvider and trust all can't both be configured.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "137692e4e1059f4d48d880d76a3625d78feb96f0"}, "originalPosition": 168}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4326, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}