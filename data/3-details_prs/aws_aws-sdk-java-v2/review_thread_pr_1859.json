{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIxNTczODY1", "number": 1859, "reviewThreads": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQyMzozMTowM1rOD-yGdQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQyMDowNjo1N1rOD_1GUA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3MTU5MTU3OnYy", "diffSide": "RIGHT", "path": "core/metrics-spi/src/main/java/software/amazon/awssdk/metrics/MetricCollection.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQyMzozMTowM1rOGZGJLw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQyMToyOTozN1rOGaw_IQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODk2ODIzOQ==", "bodyText": "Is there any reason we use wild card?", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1859#discussion_r428968239", "createdAt": "2020-05-21T23:31:03Z", "author": {"login": "zoewangg"}, "path": "core/metrics-spi/src/main/java/software/amazon/awssdk/metrics/MetricCollection.java", "diffHunk": "@@ -0,0 +1,45 @@\n+/*\n+ * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.awssdk.metrics;\n+\n+import java.util.Collection;\n+import java.util.List;\n+import software.amazon.awssdk.annotations.SdkPublicApi;\n+\n+/**\n+ * An immutable collection of metrics.\n+ */\n+@SdkPublicApi\n+public interface MetricCollection extends Iterable<MetricRecord<?>> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f43a15041d7aaa42f1496ca95b2c4c3fc2f161da"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDcxODc1Mw==", "bodyText": "We can't bind MetricRecord to a type since the collection can contain metric values of any type.", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1859#discussion_r430718753", "createdAt": "2020-05-26T21:29:37Z", "author": {"login": "dagnir"}, "path": "core/metrics-spi/src/main/java/software/amazon/awssdk/metrics/MetricCollection.java", "diffHunk": "@@ -0,0 +1,45 @@\n+/*\n+ * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.awssdk.metrics;\n+\n+import java.util.Collection;\n+import java.util.List;\n+import software.amazon.awssdk.annotations.SdkPublicApi;\n+\n+/**\n+ * An immutable collection of metrics.\n+ */\n+@SdkPublicApi\n+public interface MetricCollection extends Iterable<MetricRecord<?>> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODk2ODIzOQ=="}, "originalCommit": {"oid": "f43a15041d7aaa42f1496ca95b2c4c3fc2f161da"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3MTU5MjQyOnYy", "diffSide": "RIGHT", "path": "core/metrics-spi/src/main/java/software/amazon/awssdk/metrics/MetricCollector.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQyMzozMTozNFrOGZGJuA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQyMTozMjo1OFrOGaxEwQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODk2ODM3Ng==", "bodyText": "nit: can we add some javadocs", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1859#discussion_r428968376", "createdAt": "2020-05-21T23:31:34Z", "author": {"login": "zoewangg"}, "path": "core/metrics-spi/src/main/java/software/amazon/awssdk/metrics/MetricCollector.java", "diffHunk": "@@ -0,0 +1,56 @@\n+/*\n+ * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.awssdk.metrics;\n+\n+import software.amazon.awssdk.annotations.NotThreadSafe;\n+import software.amazon.awssdk.annotations.SdkPublicApi;\n+import software.amazon.awssdk.metrics.internal.DefaultMetricCollector;\n+\n+/**\n+ * Used to collect metrics collected by the SDK.\n+ */\n+@NotThreadSafe\n+@SdkPublicApi\n+public interface MetricCollector {\n+    /**\n+     * @return The name of this collector.\n+     */\n+    String name();\n+\n+    /**\n+     * Report a metric.\n+     */\n+    <T> void reportMetric(SdkMetric<T> metric, T data);\n+\n+    /**\n+     *", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f43a15041d7aaa42f1496ca95b2c4c3fc2f161da"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDcyMDE5Mw==", "bodyText": "Oops yes, that's a miss.", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1859#discussion_r430720193", "createdAt": "2020-05-26T21:32:58Z", "author": {"login": "dagnir"}, "path": "core/metrics-spi/src/main/java/software/amazon/awssdk/metrics/MetricCollector.java", "diffHunk": "@@ -0,0 +1,56 @@\n+/*\n+ * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.awssdk.metrics;\n+\n+import software.amazon.awssdk.annotations.NotThreadSafe;\n+import software.amazon.awssdk.annotations.SdkPublicApi;\n+import software.amazon.awssdk.metrics.internal.DefaultMetricCollector;\n+\n+/**\n+ * Used to collect metrics collected by the SDK.\n+ */\n+@NotThreadSafe\n+@SdkPublicApi\n+public interface MetricCollector {\n+    /**\n+     * @return The name of this collector.\n+     */\n+    String name();\n+\n+    /**\n+     * Report a metric.\n+     */\n+    <T> void reportMetric(SdkMetric<T> metric, T data);\n+\n+    /**\n+     *", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODk2ODM3Ng=="}, "originalCommit": {"oid": "f43a15041d7aaa42f1496ca95b2c4c3fc2f161da"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3MTU5NDUzOnYy", "diffSide": "RIGHT", "path": "core/metrics-spi/src/main/java/software/amazon/awssdk/metrics/SdkMetric.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQyMzozMjo1M1rOGZGLBA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQyMToyODo0MVrOGaw9lA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODk2ODcwOA==", "bodyText": "oops", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1859#discussion_r428968708", "createdAt": "2020-05-21T23:32:53Z", "author": {"login": "zoewangg"}, "path": "core/metrics-spi/src/main/java/software/amazon/awssdk/metrics/SdkMetric.java", "diffHunk": "@@ -0,0 +1,100 @@\n+/*\n+ * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.awssdk.metrics;\n+\n+/*\n+ * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f43a15041d7aaa42f1496ca95b2c4c3fc2f161da"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDcxODM1Ng==", "bodyText": "!! nice catch", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1859#discussion_r430718356", "createdAt": "2020-05-26T21:28:41Z", "author": {"login": "dagnir"}, "path": "core/metrics-spi/src/main/java/software/amazon/awssdk/metrics/SdkMetric.java", "diffHunk": "@@ -0,0 +1,100 @@\n+/*\n+ * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.awssdk.metrics;\n+\n+/*\n+ * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODk2ODcwOA=="}, "originalCommit": {"oid": "f43a15041d7aaa42f1496ca95b2c4c3fc2f161da"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3MTYwNDcyOnYy", "diffSide": "RIGHT", "path": "core/metrics-spi/src/main/java/software/amazon/awssdk/metrics/internal/util/MetricUtil.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQyMzozODo1N1rOGZGRSQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQyMTozNDoyNFrOGaxHLA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODk3MDMxMw==", "bodyText": "Where's this method being used?", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1859#discussion_r428970313", "createdAt": "2020-05-21T23:38:57Z", "author": {"login": "zoewangg"}, "path": "core/metrics-spi/src/main/java/software/amazon/awssdk/metrics/internal/util/MetricUtil.java", "diffHunk": "@@ -0,0 +1,44 @@\n+/*\n+ * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.awssdk.metrics.internal.util;\n+\n+import java.time.Duration;\n+import java.util.concurrent.Callable;\n+import software.amazon.awssdk.annotations.SdkInternalApi;\n+import software.amazon.awssdk.utils.Pair;\n+\n+@SdkInternalApi\n+public final class MetricUtil {\n+\n+    private MetricUtil() {\n+    }\n+\n+    public static <T> Pair<T, Duration> measureDuration(Callable<T> c) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f43a15041d7aaa42f1496ca95b2c4c3fc2f161da"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDcyMDgxMg==", "bodyText": "This class is used in my follow up PR to this to add metrics. I figured it's better to include it with this PR so that the following tasks to implement metrics in various places can use (and add features to) this.", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1859#discussion_r430720812", "createdAt": "2020-05-26T21:34:24Z", "author": {"login": "dagnir"}, "path": "core/metrics-spi/src/main/java/software/amazon/awssdk/metrics/internal/util/MetricUtil.java", "diffHunk": "@@ -0,0 +1,44 @@\n+/*\n+ * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.awssdk.metrics.internal.util;\n+\n+import java.time.Duration;\n+import java.util.concurrent.Callable;\n+import software.amazon.awssdk.annotations.SdkInternalApi;\n+import software.amazon.awssdk.utils.Pair;\n+\n+@SdkInternalApi\n+public final class MetricUtil {\n+\n+    private MetricUtil() {\n+    }\n+\n+    public static <T> Pair<T, Duration> measureDuration(Callable<T> c) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODk3MDMxMw=="}, "originalCommit": {"oid": "f43a15041d7aaa42f1496ca95b2c4c3fc2f161da"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3MTYwNjE4OnYy", "diffSide": "RIGHT", "path": "core/metrics-spi/src/main/java/software/amazon/awssdk/metrics/internal/DefaultSdkMetric.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQyMzozOTo1N1rOGZGSMQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQyMTozMDoxMFrOGaw_-w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODk3MDU0NQ==", "bodyText": "SdkMetric<?> -> SdkMetric<T>?", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1859#discussion_r428970545", "createdAt": "2020-05-21T23:39:57Z", "author": {"login": "zoewangg"}, "path": "core/metrics-spi/src/main/java/software/amazon/awssdk/metrics/internal/DefaultSdkMetric.java", "diffHunk": "@@ -0,0 +1,137 @@\n+/*\n+ * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.awssdk.metrics.internal;\n+\n+import java.util.Collections;\n+import java.util.EnumSet;\n+import java.util.Set;\n+import java.util.concurrent.ConcurrentHashMap;\n+import java.util.stream.Collectors;\n+import java.util.stream.Stream;\n+import software.amazon.awssdk.annotations.SdkInternalApi;\n+import software.amazon.awssdk.annotations.SdkTestInternalApi;\n+import software.amazon.awssdk.metrics.MetricCategory;\n+import software.amazon.awssdk.metrics.SdkMetric;\n+import software.amazon.awssdk.utils.AttributeMap;\n+import software.amazon.awssdk.utils.Validate;\n+\n+@SdkInternalApi\n+public final class DefaultSdkMetric<T> extends AttributeMap.Key<T> implements SdkMetric<T> {\n+    private static final ConcurrentHashMap<SdkMetric<?>, Boolean> SDK_METRICS = new ConcurrentHashMap<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f43a15041d7aaa42f1496ca95b2c4c3fc2f161da"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDcxODk3MQ==", "bodyText": "Similar comment to MetricCollection above. We can't bind to a specific type since this is a collection of all metrics.", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1859#discussion_r430718971", "createdAt": "2020-05-26T21:30:10Z", "author": {"login": "dagnir"}, "path": "core/metrics-spi/src/main/java/software/amazon/awssdk/metrics/internal/DefaultSdkMetric.java", "diffHunk": "@@ -0,0 +1,137 @@\n+/*\n+ * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.awssdk.metrics.internal;\n+\n+import java.util.Collections;\n+import java.util.EnumSet;\n+import java.util.Set;\n+import java.util.concurrent.ConcurrentHashMap;\n+import java.util.stream.Collectors;\n+import java.util.stream.Stream;\n+import software.amazon.awssdk.annotations.SdkInternalApi;\n+import software.amazon.awssdk.annotations.SdkTestInternalApi;\n+import software.amazon.awssdk.metrics.MetricCategory;\n+import software.amazon.awssdk.metrics.SdkMetric;\n+import software.amazon.awssdk.utils.AttributeMap;\n+import software.amazon.awssdk.utils.Validate;\n+\n+@SdkInternalApi\n+public final class DefaultSdkMetric<T> extends AttributeMap.Key<T> implements SdkMetric<T> {\n+    private static final ConcurrentHashMap<SdkMetric<?>, Boolean> SDK_METRICS = new ConcurrentHashMap<>();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODk3MDU0NQ=="}, "originalCommit": {"oid": "f43a15041d7aaa42f1496ca95b2c4c3fc2f161da"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3MTYyMjcyOnYy", "diffSide": "RIGHT", "path": "core/metrics-spi/src/main/java/software/amazon/awssdk/metrics/MetricCategory.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQyMzo0OToyM1rOGZGcMw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQyMzoxNDozNVrOGazXYA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODk3MzEwNw==", "bodyText": "So the string pattern is all lower case?", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1859#discussion_r428973107", "createdAt": "2020-05-21T23:49:23Z", "author": {"login": "zoewangg"}, "path": "core/metrics-spi/src/main/java/software/amazon/awssdk/metrics/MetricCategory.java", "diffHunk": "@@ -0,0 +1,82 @@\n+/*\n+ * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.awssdk.metrics;\n+\n+import software.amazon.awssdk.annotations.SdkPublicApi;\n+\n+/**\n+ * A enum class representing the different types of metric categories in the SDK.\n+ * <p>\n+ * A metric can be tagged with multiple categories. Clients can enable/disable metric collection\n+ * at a {@link MetricCategory} level.\n+ */\n+@SdkPublicApi\n+public enum MetricCategory {\n+\n+    /**\n+     * All metrics defined by the SDK are classified under this category at a minimum. If the metrics feature is enabled\n+     * but the category to collect is not, only metrics that are classified under this category are collected by the SDK\n+     */\n+    DEFAULT(\"default\"),\n+\n+    /**\n+     * Metrics collected at the http client level are classified under this category.\n+     */\n+    HTTP_CLIENT(\"httpclient\"),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aacca6fc1eabcc1d6188bbf79f69e3f41f8cb881"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDcxOTUzNw==", "bodyText": "I took this class straight from the original metrics work. I think we should pascal case the enum and string value. WDYT?", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1859#discussion_r430719537", "createdAt": "2020-05-26T21:31:26Z", "author": {"login": "dagnir"}, "path": "core/metrics-spi/src/main/java/software/amazon/awssdk/metrics/MetricCategory.java", "diffHunk": "@@ -0,0 +1,82 @@\n+/*\n+ * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.awssdk.metrics;\n+\n+import software.amazon.awssdk.annotations.SdkPublicApi;\n+\n+/**\n+ * A enum class representing the different types of metric categories in the SDK.\n+ * <p>\n+ * A metric can be tagged with multiple categories. Clients can enable/disable metric collection\n+ * at a {@link MetricCategory} level.\n+ */\n+@SdkPublicApi\n+public enum MetricCategory {\n+\n+    /**\n+     * All metrics defined by the SDK are classified under this category at a minimum. If the metrics feature is enabled\n+     * but the category to collect is not, only metrics that are classified under this category are collected by the SDK\n+     */\n+    DEFAULT(\"default\"),\n+\n+    /**\n+     * Metrics collected at the http client level are classified under this category.\n+     */\n+    HTTP_CLIENT(\"httpclient\"),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODk3MzEwNw=="}, "originalCommit": {"oid": "aacca6fc1eabcc1d6188bbf79f69e3f41f8cb881"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDc1NzcyOA==", "bodyText": "Pascal case for the string value sounds good to me because we might have a category that has multiple words in it in the future.", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1859#discussion_r430757728", "createdAt": "2020-05-26T23:14:35Z", "author": {"login": "zoewangg"}, "path": "core/metrics-spi/src/main/java/software/amazon/awssdk/metrics/MetricCategory.java", "diffHunk": "@@ -0,0 +1,82 @@\n+/*\n+ * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.awssdk.metrics;\n+\n+import software.amazon.awssdk.annotations.SdkPublicApi;\n+\n+/**\n+ * A enum class representing the different types of metric categories in the SDK.\n+ * <p>\n+ * A metric can be tagged with multiple categories. Clients can enable/disable metric collection\n+ * at a {@link MetricCategory} level.\n+ */\n+@SdkPublicApi\n+public enum MetricCategory {\n+\n+    /**\n+     * All metrics defined by the SDK are classified under this category at a minimum. If the metrics feature is enabled\n+     * but the category to collect is not, only metrics that are classified under this category are collected by the SDK\n+     */\n+    DEFAULT(\"default\"),\n+\n+    /**\n+     * Metrics collected at the http client level are classified under this category.\n+     */\n+    HTTP_CLIENT(\"httpclient\"),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODk3MzEwNw=="}, "originalCommit": {"oid": "aacca6fc1eabcc1d6188bbf79f69e3f41f8cb881"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3MTYyNTMzOnYy", "diffSide": "RIGHT", "path": "core/metrics-spi/src/main/java/software/amazon/awssdk/metrics/MetricCollection.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQyMzo1MDo1M1rOGZGd3A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxOTo1NToyN1rOGauGtg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODk3MzUzMg==", "bodyText": "childCollection? it's a bit verbose but more straightforward imo.\nmetricCollection.children\nmetricCollection.childCollection", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1859#discussion_r428973532", "createdAt": "2020-05-21T23:50:53Z", "author": {"login": "zoewangg"}, "path": "core/metrics-spi/src/main/java/software/amazon/awssdk/metrics/MetricCollection.java", "diffHunk": "@@ -0,0 +1,45 @@\n+/*\n+ * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.awssdk.metrics;\n+\n+import java.util.Collection;\n+import java.util.List;\n+import software.amazon.awssdk.annotations.SdkPublicApi;\n+\n+/**\n+ * An immutable collection of metrics.\n+ */\n+@SdkPublicApi\n+public interface MetricCollection extends Iterable<MetricRecord<?>> {\n+    /**\n+     * @return The name of this metric collection.\n+     */\n+    String name();\n+\n+    /**\n+     * Return all the values of the given metric.\n+     *\n+     * @param metric The metric.\n+     * @param <T> The type of the value.\n+     * @return All of the values of this metric.\n+     */\n+    <T> List<T> metricValues(SdkMetric<T> metric);\n+\n+    /**\n+     * @return The child metric collections.\n+     */\n+    Collection<MetricCollection> children();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aacca6fc1eabcc1d6188bbf79f69e3f41f8cb881"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDY3MTU0Mg==", "bodyText": "Nvm. It seems we are using children elsewhere.", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1859#discussion_r430671542", "createdAt": "2020-05-26T19:55:27Z", "author": {"login": "zoewangg"}, "path": "core/metrics-spi/src/main/java/software/amazon/awssdk/metrics/MetricCollection.java", "diffHunk": "@@ -0,0 +1,45 @@\n+/*\n+ * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.awssdk.metrics;\n+\n+import java.util.Collection;\n+import java.util.List;\n+import software.amazon.awssdk.annotations.SdkPublicApi;\n+\n+/**\n+ * An immutable collection of metrics.\n+ */\n+@SdkPublicApi\n+public interface MetricCollection extends Iterable<MetricRecord<?>> {\n+    /**\n+     * @return The name of this metric collection.\n+     */\n+    String name();\n+\n+    /**\n+     * Return all the values of the given metric.\n+     *\n+     * @param metric The metric.\n+     * @param <T> The type of the value.\n+     * @return All of the values of this metric.\n+     */\n+    <T> List<T> metricValues(SdkMetric<T> metric);\n+\n+    /**\n+     * @return The child metric collections.\n+     */\n+    Collection<MetricCollection> children();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODk3MzUzMg=="}, "originalCommit": {"oid": "aacca6fc1eabcc1d6188bbf79f69e3f41f8cb881"}, "originalPosition": 44}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4MjM5Mjc2OnYy", "diffSide": "RIGHT", "path": "core/metrics-spi/src/main/java/software/amazon/awssdk/metrics/MetricPublisher.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxOToxODo0OVrOGasufQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxOToxODo0OVrOGasufQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDY0ODk1Nw==", "bodyText": "Having second thought about the naming... I feel this is more of a notifying method and publish might not be accurate here. For example, a logging publisher might not publish and just log the data. How about onMetric  or onMetricCollection?", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1859#discussion_r430648957", "createdAt": "2020-05-26T19:18:49Z", "author": {"login": "zoewangg"}, "path": "core/metrics-spi/src/main/java/software/amazon/awssdk/metrics/MetricPublisher.java", "diffHunk": "@@ -0,0 +1,68 @@\n+/*\n+ * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.awssdk.metrics;\n+\n+import software.amazon.awssdk.annotations.SdkPublicApi;\n+import software.amazon.awssdk.annotations.ThreadSafe;\n+import software.amazon.awssdk.metrics.MetricCollection;\n+import software.amazon.awssdk.utils.SdkAutoCloseable;\n+\n+/**\n+ * Interface to report and publish the collected SDK metric events to external\n+ * sources.\n+ * <p>\n+ * Conceptually, a publisher receives a stream of {@link MetricCollection} objects\n+ * overs its lifetime through its {@link #publish(MetricCollection)} )} method.\n+ * Implementations are then free further aggregate these events into sets of\n+ * metrics that are then published to some external system for further use.\n+ * As long as a publisher is not closed, then it can receive {@code\n+ * MetricCollection} objects at any time. In addition, as the SDK makes use of\n+ * multithreading, it's possible that the publisher is shared concurrently by\n+ * multiple threads, and necessitates that all implementations are threadsafe.\n+ * <p>\n+ * The SDK may invoke methods on the interface from multiple threads\n+ * concurrently so implementations must be threadsafe.\n+ */\n+@ThreadSafe\n+@SdkPublicApi\n+public interface MetricPublisher extends SdkAutoCloseable {\n+    /**\n+     * Notify the publisher of new metric data. After this call returns, the\n+     * caller can safely discard the given {@code metricCollection} instance if it\n+     * no longer needs it. Implementations are strongly encouraged to complete\n+     * any further aggregation and publishing of metrics in an asynchronous manner to\n+     * avoid blocking the calling thread.\n+     * <p>\n+     * With the exception of a {@code null} {@code metricCollection}, all\n+     * invocations of this method must return normally. This\n+     * is to ensure that callers of the publisher can safely assume that even\n+     * in situations where an error happens during publishing that it will not\n+     * interrupt the calling thread.\n+     *\n+     * @param metricCollection The collection of metrics.\n+     * @throws IllegalArgumentException If {@code metricCollection} is {@code null}.\n+     */\n+    void publish(MetricCollection metricCollection);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aacca6fc1eabcc1d6188bbf79f69e3f41f8cb881"}, "originalPosition": 58}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4MjUyODk3OnYy", "diffSide": "RIGHT", "path": "core/metrics-spi/src/test/java/software/amazon/awssdk/metrics/internal/DefaultMetricCollectorTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxOTo1NDoyNFrOGauEWw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxOTo1NDoyNFrOGauEWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDY3MDkzOQ==", "bodyText": "Can we validate the exception message here? In case it's actually other IllegalStateException that's thrown here.", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1859#discussion_r430670939", "createdAt": "2020-05-26T19:54:24Z", "author": {"login": "zoewangg"}, "path": "core/metrics-spi/src/test/java/software/amazon/awssdk/metrics/internal/DefaultMetricCollectorTest.java", "diffHunk": "@@ -0,0 +1,80 @@\n+/*\n+ * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.awssdk.metrics.internal;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+import java.util.stream.Stream;\n+import org.junit.AfterClass;\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.junit.rules.ExpectedException;\n+import software.amazon.awssdk.metrics.MetricCategory;\n+import software.amazon.awssdk.metrics.MetricCollection;\n+import software.amazon.awssdk.metrics.MetricCollector;\n+import software.amazon.awssdk.metrics.SdkMetric;\n+\n+public class DefaultMetricCollectorTest {\n+    private static final SdkMetric<Integer> M1 = SdkMetric.of(\"m1\", Integer.class, MetricCategory.DEFAULT);\n+\n+    @Rule\n+    public ExpectedException thrown = ExpectedException.none();\n+\n+    @AfterClass\n+    public static void teardown() {\n+        DefaultSdkMetric.clearDeclaredMetrics();\n+    }\n+\n+    @Test\n+    public void testName_returnsName() {\n+        MetricCollector collector = MetricCollector.create(\"collector\");\n+        assertThat(collector.name()).isEqualTo(\"collector\");\n+    }\n+\n+    @Test\n+    public void testCreateChild_returnsChildWithCorrectName() {\n+        MetricCollector parent = MetricCollector.create(\"parent\");\n+        MetricCollector child = parent.createChild(\"child\");\n+\n+        assertThat(child.name()).isEqualTo(\"child\");\n+    }\n+\n+    @Test\n+    public void testCollect_allReportedMetricsInCollection() {\n+        MetricCollector collector = MetricCollector.create(\"collector\");\n+        Integer[] values = {1, 2, 3};\n+        Stream.of(values).forEach(v -> collector.reportMetric(M1, v));\n+        MetricCollection collect = collector.collect();\n+        assertThat(collect.metricValues(M1)).containsExactly(values);\n+    }\n+\n+    @Test\n+    public void testCollect_returnedCollectionContainsAllChildren() {\n+        MetricCollector parent = MetricCollector.create(\"parent\");\n+        String[] childNames = {\"c1\", \"c2\", \"c3\" };\n+        Stream.of(childNames).forEach(parent::createChild);\n+        MetricCollection collected = parent.collect();\n+        assertThat(collected.children().stream().map(MetricCollection::name)).containsExactly(childNames);\n+    }\n+\n+    @Test\n+    public void testReportMetric_collected_throws() {\n+        thrown.expect(IllegalStateException.class);\n+\n+        MetricCollector collector = MetricCollector.create(\"collector\");\n+        collector.collect();\n+        collector.reportMetric(M1, 42);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aacca6fc1eabcc1d6188bbf79f69e3f41f8cb881"}, "originalPosition": 78}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4MjUzNzU4OnYy", "diffSide": "RIGHT", "path": "core/metrics-spi/src/main/java/software/amazon/awssdk/metrics/MetricCollector.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxOTo1Njo0NFrOGauJ2g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQyMTozNToyOVrOGaxJBA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDY3MjM0Ng==", "bodyText": "nit: maybe collect metrics reported by the SDK?", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1859#discussion_r430672346", "createdAt": "2020-05-26T19:56:44Z", "author": {"login": "zoewangg"}, "path": "core/metrics-spi/src/main/java/software/amazon/awssdk/metrics/MetricCollector.java", "diffHunk": "@@ -0,0 +1,56 @@\n+/*\n+ * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.awssdk.metrics;\n+\n+import software.amazon.awssdk.annotations.NotThreadSafe;\n+import software.amazon.awssdk.annotations.SdkPublicApi;\n+import software.amazon.awssdk.metrics.internal.DefaultMetricCollector;\n+\n+/**\n+ * Used to collect metrics collected by the SDK.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aacca6fc1eabcc1d6188bbf79f69e3f41f8cb881"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDcyMTI4NA==", "bodyText": "nice catch yeah that wording is better", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1859#discussion_r430721284", "createdAt": "2020-05-26T21:35:29Z", "author": {"login": "dagnir"}, "path": "core/metrics-spi/src/main/java/software/amazon/awssdk/metrics/MetricCollector.java", "diffHunk": "@@ -0,0 +1,56 @@\n+/*\n+ * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.awssdk.metrics;\n+\n+import software.amazon.awssdk.annotations.NotThreadSafe;\n+import software.amazon.awssdk.annotations.SdkPublicApi;\n+import software.amazon.awssdk.metrics.internal.DefaultMetricCollector;\n+\n+/**\n+ * Used to collect metrics collected by the SDK.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDY3MjM0Ng=="}, "originalCommit": {"oid": "aacca6fc1eabcc1d6188bbf79f69e3f41f8cb881"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4MjU2ODQ4OnYy", "diffSide": "RIGHT", "path": "core/metrics-spi/src/main/java/software/amazon/awssdk/metrics/SdkMetric.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQyMDowNjo1N1rOGaud7w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxNToyMDowN1rOGbP1Yg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDY3NzQ4Nw==", "bodyText": "Is there any reason we use of here instead of create? Just a sanity check, are we sure we won't add more parameters in the future?", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1859#discussion_r430677487", "createdAt": "2020-05-26T20:06:57Z", "author": {"login": "zoewangg"}, "path": "core/metrics-spi/src/main/java/software/amazon/awssdk/metrics/SdkMetric.java", "diffHunk": "@@ -0,0 +1,100 @@\n+/*\n+ * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.awssdk.metrics;\n+\n+/*\n+ * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+import java.util.Set;\n+import software.amazon.awssdk.annotations.SdkPublicApi;\n+import software.amazon.awssdk.metrics.internal.DefaultSdkMetric;\n+\n+/**\n+ * A specific SDK metric.\n+ *\n+ * @param <T> The type for values of this metric.\n+ */\n+@SdkPublicApi\n+public interface SdkMetric<T> {\n+\n+    /**\n+     * @return The name of this metric.\n+     */\n+    String name();\n+\n+    /**\n+     * @return The categories of this metric.\n+     */\n+    Set<MetricCategory> categories();\n+\n+    /**\n+     * @return The class of the value associated with this metric.\n+     */\n+    Class<T> valueClass();\n+\n+    /**\n+     * Cast the given object to the value class associated with this event.\n+     *\n+     * @param o The object.\n+     * @return The cast object.\n+     * @throws ClassCastException If {@code o} is not an instance of type {@code\n+     * T}.\n+     */\n+    T convertValue(Object o);\n+\n+    /**\n+     * Create a new metric.\n+     *\n+     * @param name The name of this metric.\n+     * @param clzz The class of the object containing the associated value for this metric.\n+     * @param c1 A category associated with this metric.\n+     * @param cn Additional categories associated with this metric.\n+     * @param <T> The type of the object containing the associated value for this metric.\n+     * @return The created metric.\n+     *\n+     * @throws IllegalArgumentException If a metric of the same name has already been created.\n+     */\n+    static <T> SdkMetric<T> of(String name, Class<T> clzz, MetricCategory c1, MetricCategory... cn) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aacca6fc1eabcc1d6188bbf79f69e3f41f8cb881"}, "originalPosition": 82}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTIyNDE2Mg==", "bodyText": "No particular reason, I can change to create. I don't anticipate we'd include other parameters here.", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1859#discussion_r431224162", "createdAt": "2020-05-27T15:20:07Z", "author": {"login": "dagnir"}, "path": "core/metrics-spi/src/main/java/software/amazon/awssdk/metrics/SdkMetric.java", "diffHunk": "@@ -0,0 +1,100 @@\n+/*\n+ * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.awssdk.metrics;\n+\n+/*\n+ * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+import java.util.Set;\n+import software.amazon.awssdk.annotations.SdkPublicApi;\n+import software.amazon.awssdk.metrics.internal.DefaultSdkMetric;\n+\n+/**\n+ * A specific SDK metric.\n+ *\n+ * @param <T> The type for values of this metric.\n+ */\n+@SdkPublicApi\n+public interface SdkMetric<T> {\n+\n+    /**\n+     * @return The name of this metric.\n+     */\n+    String name();\n+\n+    /**\n+     * @return The categories of this metric.\n+     */\n+    Set<MetricCategory> categories();\n+\n+    /**\n+     * @return The class of the value associated with this metric.\n+     */\n+    Class<T> valueClass();\n+\n+    /**\n+     * Cast the given object to the value class associated with this event.\n+     *\n+     * @param o The object.\n+     * @return The cast object.\n+     * @throws ClassCastException If {@code o} is not an instance of type {@code\n+     * T}.\n+     */\n+    T convertValue(Object o);\n+\n+    /**\n+     * Create a new metric.\n+     *\n+     * @param name The name of this metric.\n+     * @param clzz The class of the object containing the associated value for this metric.\n+     * @param c1 A category associated with this metric.\n+     * @param cn Additional categories associated with this metric.\n+     * @param <T> The type of the object containing the associated value for this metric.\n+     * @return The created metric.\n+     *\n+     * @throws IllegalArgumentException If a metric of the same name has already been created.\n+     */\n+    static <T> SdkMetric<T> of(String name, Class<T> clzz, MetricCategory c1, MetricCategory... cn) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDY3NzQ4Nw=="}, "originalCommit": {"oid": "aacca6fc1eabcc1d6188bbf79f69e3f41f8cb881"}, "originalPosition": 82}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4127, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}