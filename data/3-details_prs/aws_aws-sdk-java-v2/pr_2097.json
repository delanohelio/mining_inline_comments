{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA1MDM4NjYw", "number": 2097, "title": "Added support for the \"contentMd5Required\" C2J trait, which will inject the \"Content-MD5\" header when an operation requires it.", "bodyText": "This functionality was previously hard-coded to certain operations within S3. It's now driven by a trait, so that Content-MD5 does not get calculated when it isn't needed.\nOther changes in this commit:\n\nCleaned up some of the code generation poet code around the content-md5-related logic.\nAdded support for empty async XML responses without content-lengths. These would previously throw an exception that they're invalid XML.\nFixed an issue where requestBody and asyncRequestBody were not visible in ExecutionInterceptor.afterMarshalling.", "createdAt": "2020-10-16T18:56:34Z", "url": "https://github.com/aws/aws-sdk-java-v2/pull/2097", "merged": true, "mergeCommit": {"oid": "9cb352e43d72eca4bb64254577a1ae039b9affd8"}, "closed": true, "closedAt": "2020-10-19T18:25:58Z", "author": {"login": "millems"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdTLtj5gFqTUxMDcyODIzOA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdUH6rggH2gAyNTA1MDM4NjYwOmY0NGRhYmRlODBlMTc2Yjc3ZTc5NTk4YzdlOGQ2ZTlkOTZhMGU3NWM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEwNzI4MjM4", "url": "https://github.com/aws/aws-sdk-java-v2/pull/2097#pullrequestreview-510728238", "createdAt": "2020-10-16T18:58:53Z", "commit": {"oid": "f010be60c292149bb0586e8d54378895c7ed8f03"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQxODo1ODo1M1rOHjMgRw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQxOTowODo1NVrOHjMykg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjY2NzA3OQ==", "bodyText": "YES! Thank you for refactoring these", "url": "https://github.com/aws/aws-sdk-java-v2/pull/2097#discussion_r506667079", "createdAt": "2020-10-16T18:58:53Z", "author": {"login": "dagnir"}, "path": "codegen/src/main/java/software/amazon/awssdk/codegen/poet/client/specs/JsonProtocolSpec.java", "diffHunk": "@@ -235,36 +225,23 @@ public CodeBlock asyncExecutionHandler(IntermediateModel intermediateModel, Oper\n                                                                               : pojoResponseType;\n         TypeName executeFutureValueType = executeFutureValueType(opModel, poetExtensions);\n \n-        builder.add(\"\\n\\n$T<$T> executeFuture = clientHandler.execute(new $T<$T, $T>()\\n\" +\n-                    \".withOperationName(\\\"$N\\\")\\n\" +\n-                    \".withMarshaller($L)\\n\" +\n-                    \"$L\" +\n-                    \"$L\" +\n-                    \".withResponseHandler($L)\\n\" +\n-                    \".withErrorResponseHandler(errorResponseHandler)\\n\" +\n-                    \".withMetricCollector(apiCallMetricCollector)\\n\" +\n-                    hostPrefixExpression(opModel) +\n-                    discoveredEndpoint(opModel) +\n-                    asyncRequestBody +\n-                    \".withInput($L)$L);\",\n-                    CompletableFuture.class,\n-                    executeFutureValueType,\n-                    ClientExecutionParams.class,\n-                    requestType,\n-                    responseType,\n-                    opModel.getOperationName(),\n-                    asyncMarshaller(model, opModel, marshaller, protocolFactory),\n-                    opModel.hasEventStreamInput() ? CodeBlock.builder()\n-                                                             .add(\".withAsyncRequestBody($T.fromPublisher(adapted))\",\n-                                                                  AsyncRequestBody.class)\n-                                                             .build()\n-                                                             .toString()\n-                                                  : \"\",\n-                    opModel.hasEventStreamInput() && opModel.hasEventStreamOutput() ? CodeBlock\n-                        .builder().add(\".withFullDuplex(true)\").build() : \"\",\n-                    opModel.hasEventStreamOutput() && !isRestJson ? \"voidResponseHandler\" : \"responseHandler\",\n-                    opModel.getInput().getVariableName(),\n-                    asyncResponseTransformerVariable(isStreaming, isRestJson, opModel));\n+        builder.add(\"\\n\\n$T<$T> executeFuture = clientHandler.execute(new $T<$T, $T>()\\n\",\n+                    CompletableFuture.class, executeFutureValueType, ClientExecutionParams.class, requestType, responseType)\n+               .add(\".withOperationName(\\\"$N\\\")\\n\", opModel.getOperationName())\n+               .add(\".withMarshaller($L)\\n\", asyncMarshaller(model, opModel, marshaller, protocolFactory))\n+               .add(asyncRequestBody(opModel))\n+               .add(fullDuplex(opModel))\n+               .add(\".withResponseHandler($L)\\n\", responseHandlerName(opModel, isRestJson))\n+               .add(\".withErrorResponseHandler(errorResponseHandler)\\n\")\n+               .add(\".withMetricCollector(apiCallMetricCollector)\\n\")\n+               .add(hostPrefixExpression(opModel))\n+               .add(discoveredEndpoint(opModel))\n+               .add(asyncRequestBody)\n+               .add(HttpChecksumRequiredTrait.putHttpChecksumAttribute(opModel))\n+               .add(\".withInput($L)$L);\",\n+                    opModel.getInput().getVariableName(), asyncResponseTransformerVariable(isStreaming, isRestJson, opModel));\n+\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f010be60c292149bb0586e8d54378895c7ed8f03"}, "originalPosition": 185}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjY3MTc2Mg==", "bodyText": "Can we include a test for the case where an async content is provided?", "url": "https://github.com/aws/aws-sdk-java-v2/pull/2097#discussion_r506671762", "createdAt": "2020-10-16T19:08:55Z", "author": {"login": "dagnir"}, "path": "test/codegen-generated-classes-test/src/test/java/software/amazon/awssdk/services/HttpChecksumRequiredTest.java", "diffHunk": "@@ -0,0 +1,119 @@\n+/*\n+ * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.awssdk.services;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static org.mockito.Matchers.any;\n+\n+import io.reactivex.Flowable;\n+import java.io.IOException;\n+import java.util.concurrent.CompletableFuture;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.mockito.ArgumentCaptor;\n+import org.mockito.Mockito;\n+import software.amazon.awssdk.http.ExecutableHttpRequest;\n+import software.amazon.awssdk.http.HttpExecuteRequest;\n+import software.amazon.awssdk.http.HttpExecuteResponse;\n+import software.amazon.awssdk.http.SdkHttpClient;\n+import software.amazon.awssdk.http.SdkHttpFullResponse;\n+import software.amazon.awssdk.http.SdkHttpRequest;\n+import software.amazon.awssdk.http.SdkHttpResponse;\n+import software.amazon.awssdk.http.async.AsyncExecuteRequest;\n+import software.amazon.awssdk.http.async.SdkAsyncHttpClient;\n+import software.amazon.awssdk.services.protocolrestjson.ProtocolRestJsonAsyncClient;\n+import software.amazon.awssdk.services.protocolrestjson.ProtocolRestJsonClient;\n+import software.amazon.awssdk.services.protocolrestxml.ProtocolRestXmlAsyncClient;\n+import software.amazon.awssdk.services.protocolrestxml.ProtocolRestXmlClient;\n+\n+/**\n+ * Verify that the \"httpChecksumRequired\" C2J trait results in a valid MD5 checksum of the payload being included in the HTTP\n+ * request.\n+ */\n+public class HttpChecksumRequiredTest {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f010be60c292149bb0586e8d54378895c7ed8f03"}, "originalPosition": 46}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f010be60c292149bb0586e8d54378895c7ed8f03", "author": {"user": {"login": "millems", "name": "Matthew Miller"}}, "url": "https://github.com/aws/aws-sdk-java-v2/commit/f010be60c292149bb0586e8d54378895c7ed8f03", "committedDate": "2020-10-16T18:53:52Z", "message": "Added support for the \"contentMd5Required\" C2J trait, which will inject the \"Content-MD5\" header when an operation requires it.\n\nThis functionality was previously hard-coded to certain operations within S3. It's now driven by a trait, so that Content-MD5 does not get\ncalculated when it isn't needed.\n\nOther changes in this commit:\n1. Cleaned up some of the code generation poet code around the content-md5-related logic.\n2. Added support for empty async XML responses without content-lengths. These would previously throw an exception that they're invalid XML.\n3. Fixed an issue where requestBody and asyncRequestBody were not visible in ExecutionInterceptor.afterMarshalling."}, "afterCommit": {"oid": "8cda01e61329ba4b572cd97a8bb657f6ca9ccdc7", "author": {"user": {"login": "millems", "name": "Matthew Miller"}}, "url": "https://github.com/aws/aws-sdk-java-v2/commit/8cda01e61329ba4b572cd97a8bb657f6ca9ccdc7", "committedDate": "2020-10-16T20:43:30Z", "message": "Added support for the \"contentMd5Required\" C2J trait, which will inject the \"Content-MD5\" header when an operation requires it.\n\nThis functionality was previously hard-coded to certain operations within S3. It's now driven by a trait, so that Content-MD5 does not get\ncalculated when it isn't needed.\n\nOther changes in this commit:\n1. Cleaned up some of the code generation poet code around the content-md5-related logic.\n2. Added support for empty async XML responses without content-lengths. These would previously throw an exception that they're invalid XML.\n3. Fixed an issue where requestBody and asyncRequestBody were not visible in ExecutionInterceptor.afterMarshalling."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEwNzk0MDE2", "url": "https://github.com/aws/aws-sdk-java-v2/pull/2097#pullrequestreview-510794016", "createdAt": "2020-10-16T20:57:31Z", "commit": {"oid": "8cda01e61329ba4b572cd97a8bb657f6ca9ccdc7"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3596a97b7f27af358804ff2981664780f850cd75", "author": {"user": {"login": "millems", "name": "Matthew Miller"}}, "url": "https://github.com/aws/aws-sdk-java-v2/commit/3596a97b7f27af358804ff2981664780f850cd75", "committedDate": "2020-10-16T21:33:10Z", "message": "Added support for the \"contentMd5Required\" C2J trait, which will inject the \"Content-MD5\" header when an operation requires it.\n\nThis functionality was previously hard-coded to certain operations within S3. It's now driven by a trait, so that Content-MD5 does not get\ncalculated when it isn't needed.\n\nOther changes in this commit:\n1. Cleaned up some of the code generation poet code around the content-md5-related logic.\n2. Added support for empty async XML responses without content-lengths. These would previously throw an exception that they're invalid XML.\n3. Fixed an issue where requestBody and asyncRequestBody were not visible in ExecutionInterceptor.afterMarshalling."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8cda01e61329ba4b572cd97a8bb657f6ca9ccdc7", "author": {"user": {"login": "millems", "name": "Matthew Miller"}}, "url": "https://github.com/aws/aws-sdk-java-v2/commit/8cda01e61329ba4b572cd97a8bb657f6ca9ccdc7", "committedDate": "2020-10-16T20:43:30Z", "message": "Added support for the \"contentMd5Required\" C2J trait, which will inject the \"Content-MD5\" header when an operation requires it.\n\nThis functionality was previously hard-coded to certain operations within S3. It's now driven by a trait, so that Content-MD5 does not get\ncalculated when it isn't needed.\n\nOther changes in this commit:\n1. Cleaned up some of the code generation poet code around the content-md5-related logic.\n2. Added support for empty async XML responses without content-lengths. These would previously throw an exception that they're invalid XML.\n3. Fixed an issue where requestBody and asyncRequestBody were not visible in ExecutionInterceptor.afterMarshalling."}, "afterCommit": {"oid": "3596a97b7f27af358804ff2981664780f850cd75", "author": {"user": {"login": "millems", "name": "Matthew Miller"}}, "url": "https://github.com/aws/aws-sdk-java-v2/commit/3596a97b7f27af358804ff2981664780f850cd75", "committedDate": "2020-10-16T21:33:10Z", "message": "Added support for the \"contentMd5Required\" C2J trait, which will inject the \"Content-MD5\" header when an operation requires it.\n\nThis functionality was previously hard-coded to certain operations within S3. It's now driven by a trait, so that Content-MD5 does not get\ncalculated when it isn't needed.\n\nOther changes in this commit:\n1. Cleaned up some of the code generation poet code around the content-md5-related logic.\n2. Added support for empty async XML responses without content-lengths. These would previously throw an exception that they're invalid XML.\n3. Fixed an issue where requestBody and asyncRequestBody were not visible in ExecutionInterceptor.afterMarshalling."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f44dabde80e176b77e79598c7e8d6e9d96a0e75c", "author": {"user": {"login": "millems", "name": "Matthew Miller"}}, "url": "https://github.com/aws/aws-sdk-java-v2/commit/f44dabde80e176b77e79598c7e8d6e9d96a0e75c", "committedDate": "2020-10-19T17:49:09Z", "message": "Merge branch 'master' into millem/md5-checksums"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2367, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}