{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDczNTYzODc4", "number": 2004, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQxOTozMDowMFrOEct8CQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQyMTozODoxMlrOEcweBg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk4NTQ4MjMzOnYy", "diffSide": "RIGHT", "path": "codegen/src/main/java/software/amazon/awssdk/codegen/poet/client/SyncClientClass.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQxOTozMDowMFrOHHariA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQyMTowMzo0NVrOHHdprA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzUzOTIwOA==", "bodyText": "Is this statement correct? I don't know the existing code around endpoint discovery well; when I read this code, I read it as:\n\"If the model has an endpoint discovery operation AND allowEndpointOverrideForEndpointDiscoveryRequiredOperations is true, then check the ENDPOINT_OVERRIDDEN flag.\"\nI can't see ENDPOINT_DISCOVERY_ENABLED being involved in the logic; is it then correct to say that Endpoint discovery is enabled for this client? Or am I missing something?", "url": "https://github.com/aws/aws-sdk-java-v2/pull/2004#discussion_r477539208", "createdAt": "2020-08-26T19:30:00Z", "author": {"login": "cenedhryn"}, "path": "codegen/src/main/java/software/amazon/awssdk/codegen/poet/client/SyncClientClass.java", "diffHunk": "@@ -154,6 +162,17 @@ private MethodSpec constructor() {\n                                  EndpointDiscoveryRefreshCache.class,\n                                  poetExtensions.getClientClass(model.getNamingStrategy().getServiceName() +\n                                                                \"EndpointDiscoveryCacheLoader\"));\n+\n+            if (model.getCustomizationConfig().allowEndpointOverrideForEndpointDiscoveryRequiredOperations()) {\n+                builder.beginControlFlow(\"if (clientConfiguration.option(SdkClientOption.ENDPOINT_OVERRIDDEN) == \"\n+                                         + \"Boolean.TRUE)\");\n+                builder.addStatement(\"log.warn(() -> $S)\",\n+                                     \"Endpoint discovery is enabled for this client, and an endpoint override was also \"\n+                                     + \"specified. This will disable endpoint discovery for methods that require it, instead \"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eb360c72316717b2697e555ac42fc42603dd8562"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzU2NjM1OQ==", "bodyText": "if (clientConfiguration.option(SdkClientOption.ENDPOINT_DISCOVERY_ENABLED)) is specified above on line 160, so we know that endpoint discovery is enabled here.", "url": "https://github.com/aws/aws-sdk-java-v2/pull/2004#discussion_r477566359", "createdAt": "2020-08-26T20:22:06Z", "author": {"login": "millems"}, "path": "codegen/src/main/java/software/amazon/awssdk/codegen/poet/client/SyncClientClass.java", "diffHunk": "@@ -154,6 +162,17 @@ private MethodSpec constructor() {\n                                  EndpointDiscoveryRefreshCache.class,\n                                  poetExtensions.getClientClass(model.getNamingStrategy().getServiceName() +\n                                                                \"EndpointDiscoveryCacheLoader\"));\n+\n+            if (model.getCustomizationConfig().allowEndpointOverrideForEndpointDiscoveryRequiredOperations()) {\n+                builder.beginControlFlow(\"if (clientConfiguration.option(SdkClientOption.ENDPOINT_OVERRIDDEN) == \"\n+                                         + \"Boolean.TRUE)\");\n+                builder.addStatement(\"log.warn(() -> $S)\",\n+                                     \"Endpoint discovery is enabled for this client, and an endpoint override was also \"\n+                                     + \"specified. This will disable endpoint discovery for methods that require it, instead \"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzUzOTIwOA=="}, "originalCommit": {"oid": "eb360c72316717b2697e555ac42fc42603dd8562"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzU4Nzg4NA==", "bodyText": "I didn't see before that the new if statement is within the flow of the ENDPOINT_DISCOVERY_ENABLED codegen-if, which it is. So that's fine, it's\nendpoint discovery operation AND ENDPOINT_DISCOVERY_ENABLED and ENDPOINT_OVERRIDDEN allowEndpointOverrideForEndpointDiscoveryRequiredOperations which will trigger the log warning. Many ifs :-(", "url": "https://github.com/aws/aws-sdk-java-v2/pull/2004#discussion_r477587884", "createdAt": "2020-08-26T21:03:45Z", "author": {"login": "cenedhryn"}, "path": "codegen/src/main/java/software/amazon/awssdk/codegen/poet/client/SyncClientClass.java", "diffHunk": "@@ -154,6 +162,17 @@ private MethodSpec constructor() {\n                                  EndpointDiscoveryRefreshCache.class,\n                                  poetExtensions.getClientClass(model.getNamingStrategy().getServiceName() +\n                                                                \"EndpointDiscoveryCacheLoader\"));\n+\n+            if (model.getCustomizationConfig().allowEndpointOverrideForEndpointDiscoveryRequiredOperations()) {\n+                builder.beginControlFlow(\"if (clientConfiguration.option(SdkClientOption.ENDPOINT_OVERRIDDEN) == \"\n+                                         + \"Boolean.TRUE)\");\n+                builder.addStatement(\"log.warn(() -> $S)\",\n+                                     \"Endpoint discovery is enabled for this client, and an endpoint override was also \"\n+                                     + \"specified. This will disable endpoint discovery for methods that require it, instead \"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzUzOTIwOA=="}, "originalCommit": {"oid": "eb360c72316717b2697e555ac42fc42603dd8562"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk4NTUzODk1OnYy", "diffSide": "RIGHT", "path": "codegen/src/main/java/software/amazon/awssdk/codegen/poet/client/SyncClientClass.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQxOTo0NjozOVrOHHbOGg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQyMToyMzo0MFrOHHeP9A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzU0ODA1OA==", "bodyText": "Should the message tell the user about the allowEndpointOverrideForEndpointDiscoveryRequiredOperations flag?", "url": "https://github.com/aws/aws-sdk-java-v2/pull/2004#discussion_r477548058", "createdAt": "2020-08-26T19:46:39Z", "author": {"login": "cenedhryn"}, "path": "codegen/src/main/java/software/amazon/awssdk/codegen/poet/client/SyncClientClass.java", "diffHunk": "@@ -181,8 +200,37 @@ private MethodSpec constructor() {\n         protocolSpec.errorResponseHandler(opModel).ifPresent(method::addCode);\n \n         if (opModel.getEndpointDiscovery() != null) {\n+            method.addStatement(\"boolean endpointDiscoveryEnabled = \"\n+                                + \"clientConfiguration.option(SdkClientOption.ENDPOINT_DISCOVERY_ENABLED)\");\n+\n+            if (opModel.getEndpointDiscovery().isRequired()) {\n+                method.beginControlFlow(\"if (!endpointDiscoveryEnabled)\");\n+                method.addStatement(\"throw new $T($S)\", IllegalStateException.class,\n+                                    \"This operation requires endpoint discovery, but endpoint discovery was disabled on the \"\n+                                    + \"client.\");\n+                method.endControlFlow();\n+\n+\n+                method.addStatement(\"boolean endpointOverridden = \"\n+                                    + \"clientConfiguration.option(SdkClientOption.ENDPOINT_OVERRIDDEN) == Boolean.TRUE\");\n+                method.beginControlFlow(\"if (endpointOverridden)\");\n+\n+                if (!model.getCustomizationConfig()\n+                          .allowEndpointOverrideForEndpointDiscoveryRequiredOperations()) {\n+                    method.addStatement(\"throw new $T($S)\", IllegalStateException.class,\n+                                        \"This operation requires endpoint discovery, but an endpoint override was specified when \"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eb360c72316717b2697e555ac42fc42603dd8562"}, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzU2NjYzNA==", "bodyText": "allowEndpointOverrideForEndpointDiscoveryRequiredOperations is a customization flag, not one that customer's are allowed to specify.", "url": "https://github.com/aws/aws-sdk-java-v2/pull/2004#discussion_r477566634", "createdAt": "2020-08-26T20:22:40Z", "author": {"login": "millems"}, "path": "codegen/src/main/java/software/amazon/awssdk/codegen/poet/client/SyncClientClass.java", "diffHunk": "@@ -181,8 +200,37 @@ private MethodSpec constructor() {\n         protocolSpec.errorResponseHandler(opModel).ifPresent(method::addCode);\n \n         if (opModel.getEndpointDiscovery() != null) {\n+            method.addStatement(\"boolean endpointDiscoveryEnabled = \"\n+                                + \"clientConfiguration.option(SdkClientOption.ENDPOINT_DISCOVERY_ENABLED)\");\n+\n+            if (opModel.getEndpointDiscovery().isRequired()) {\n+                method.beginControlFlow(\"if (!endpointDiscoveryEnabled)\");\n+                method.addStatement(\"throw new $T($S)\", IllegalStateException.class,\n+                                    \"This operation requires endpoint discovery, but endpoint discovery was disabled on the \"\n+                                    + \"client.\");\n+                method.endControlFlow();\n+\n+\n+                method.addStatement(\"boolean endpointOverridden = \"\n+                                    + \"clientConfiguration.option(SdkClientOption.ENDPOINT_OVERRIDDEN) == Boolean.TRUE\");\n+                method.beginControlFlow(\"if (endpointOverridden)\");\n+\n+                if (!model.getCustomizationConfig()\n+                          .allowEndpointOverrideForEndpointDiscoveryRequiredOperations()) {\n+                    method.addStatement(\"throw new $T($S)\", IllegalStateException.class,\n+                                        \"This operation requires endpoint discovery, but an endpoint override was specified when \"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzU0ODA1OA=="}, "originalCommit": {"oid": "eb360c72316717b2697e555ac42fc42603dd8562"}, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzU5NzY4NA==", "bodyText": "Got it!", "url": "https://github.com/aws/aws-sdk-java-v2/pull/2004#discussion_r477597684", "createdAt": "2020-08-26T21:23:40Z", "author": {"login": "cenedhryn"}, "path": "codegen/src/main/java/software/amazon/awssdk/codegen/poet/client/SyncClientClass.java", "diffHunk": "@@ -181,8 +200,37 @@ private MethodSpec constructor() {\n         protocolSpec.errorResponseHandler(opModel).ifPresent(method::addCode);\n \n         if (opModel.getEndpointDiscovery() != null) {\n+            method.addStatement(\"boolean endpointDiscoveryEnabled = \"\n+                                + \"clientConfiguration.option(SdkClientOption.ENDPOINT_DISCOVERY_ENABLED)\");\n+\n+            if (opModel.getEndpointDiscovery().isRequired()) {\n+                method.beginControlFlow(\"if (!endpointDiscoveryEnabled)\");\n+                method.addStatement(\"throw new $T($S)\", IllegalStateException.class,\n+                                    \"This operation requires endpoint discovery, but endpoint discovery was disabled on the \"\n+                                    + \"client.\");\n+                method.endControlFlow();\n+\n+\n+                method.addStatement(\"boolean endpointOverridden = \"\n+                                    + \"clientConfiguration.option(SdkClientOption.ENDPOINT_OVERRIDDEN) == Boolean.TRUE\");\n+                method.beginControlFlow(\"if (endpointOverridden)\");\n+\n+                if (!model.getCustomizationConfig()\n+                          .allowEndpointOverrideForEndpointDiscoveryRequiredOperations()) {\n+                    method.addStatement(\"throw new $T($S)\", IllegalStateException.class,\n+                                        \"This operation requires endpoint discovery, but an endpoint override was specified when \"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzU0ODA1OA=="}, "originalCommit": {"oid": "eb360c72316717b2697e555ac42fc42603dd8562"}, "originalPosition": 69}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk4NTg5NzAyOnYy", "diffSide": "RIGHT", "path": "codegen/src/main/java/software/amazon/awssdk/codegen/poet/client/SyncClientClass.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQyMTozODoxMlrOHHeptQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QyMDozMToyMFrOHIgNKw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzYwNDI3Nw==", "bodyText": "This is complicated, but I'll have another go at the logic.\nThe requirements state that for the values of the three flags (ED Required - ED enabled - Endpoint Overridden), 1. The general behavior when ED Required == TRUE is as follows:\nIf Endpoint Overridden == TRUE, there shall always be an exception\nIf ED enabled == FALSE there will also always be an exception\n2. The customized flag allowEndpointOverrideForEndpointDiscoveryRequiredOperations should change the default behavior so that when Endpoint Overridden == TRUE instead of an exception we'll use the custom endpoint (by disabling the endpoint discovery...)\nHowever, in the code below the Endpoint Overridden logic comes after ED enabled logic, so that if the values are FALSE - TRUE for ED enabled - Endpoint Overridden, we'll throw an exception even though it seems the requirement says we should use custom endpoints for all cases where it's specified (and the flag with the really long name is used).\nIf I understood everything correct, either the requirement is incorrect, or we should switch places of these if statements and give endpoint overridden a higher priority.", "url": "https://github.com/aws/aws-sdk-java-v2/pull/2004#discussion_r477604277", "createdAt": "2020-08-26T21:38:12Z", "author": {"login": "cenedhryn"}, "path": "codegen/src/main/java/software/amazon/awssdk/codegen/poet/client/SyncClientClass.java", "diffHunk": "@@ -181,8 +200,37 @@ private MethodSpec constructor() {\n         protocolSpec.errorResponseHandler(opModel).ifPresent(method::addCode);\n \n         if (opModel.getEndpointDiscovery() != null) {\n+            method.addStatement(\"boolean endpointDiscoveryEnabled = \"\n+                                + \"clientConfiguration.option(SdkClientOption.ENDPOINT_DISCOVERY_ENABLED)\");\n+\n+            if (opModel.getEndpointDiscovery().isRequired()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eb360c72316717b2697e555ac42fc42603dd8562"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzYxMzU0Ng==", "bodyText": "All of your assertions are correct except:\n\nHowever, in the code below the Endpoint Overridden logic comes after ED enabled logic, so that if the values are FALSE - TRUE for ED enabled - Endpoint Overridden, we'll throw an exception even though it seems the requirement says we should use custom endpoints for all cases where it's specified (and the flag with the really long name is used).\n\nWhen ED enabled = false, we must ALWAYS throw an exception. The only case that allowEndpointOverrideForEndpointDiscoveryRequiredOperations should apply is the ED enabled = true case.", "url": "https://github.com/aws/aws-sdk-java-v2/pull/2004#discussion_r477613546", "createdAt": "2020-08-26T21:59:43Z", "author": {"login": "millems"}, "path": "codegen/src/main/java/software/amazon/awssdk/codegen/poet/client/SyncClientClass.java", "diffHunk": "@@ -181,8 +200,37 @@ private MethodSpec constructor() {\n         protocolSpec.errorResponseHandler(opModel).ifPresent(method::addCode);\n \n         if (opModel.getEndpointDiscovery() != null) {\n+            method.addStatement(\"boolean endpointDiscoveryEnabled = \"\n+                                + \"clientConfiguration.option(SdkClientOption.ENDPOINT_DISCOVERY_ENABLED)\");\n+\n+            if (opModel.getEndpointDiscovery().isRequired()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzYwNDI3Nw=="}, "originalCommit": {"oid": "eb360c72316717b2697e555ac42fc42603dd8562"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODY2ODUzOA==", "bodyText": "Discussed offline, the spec changed a bit and we want to support what Anna-Karin asserted. Good catch.", "url": "https://github.com/aws/aws-sdk-java-v2/pull/2004#discussion_r478668538", "createdAt": "2020-08-27T20:11:42Z", "author": {"login": "millems"}, "path": "codegen/src/main/java/software/amazon/awssdk/codegen/poet/client/SyncClientClass.java", "diffHunk": "@@ -181,8 +200,37 @@ private MethodSpec constructor() {\n         protocolSpec.errorResponseHandler(opModel).ifPresent(method::addCode);\n \n         if (opModel.getEndpointDiscovery() != null) {\n+            method.addStatement(\"boolean endpointDiscoveryEnabled = \"\n+                                + \"clientConfiguration.option(SdkClientOption.ENDPOINT_DISCOVERY_ENABLED)\");\n+\n+            if (opModel.getEndpointDiscovery().isRequired()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzYwNDI3Nw=="}, "originalCommit": {"oid": "eb360c72316717b2697e555ac42fc42603dd8562"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODY3ODMxNQ==", "bodyText": "The refactored code is much easier to read, too!", "url": "https://github.com/aws/aws-sdk-java-v2/pull/2004#discussion_r478678315", "createdAt": "2020-08-27T20:31:20Z", "author": {"login": "cenedhryn"}, "path": "codegen/src/main/java/software/amazon/awssdk/codegen/poet/client/SyncClientClass.java", "diffHunk": "@@ -181,8 +200,37 @@ private MethodSpec constructor() {\n         protocolSpec.errorResponseHandler(opModel).ifPresent(method::addCode);\n \n         if (opModel.getEndpointDiscovery() != null) {\n+            method.addStatement(\"boolean endpointDiscoveryEnabled = \"\n+                                + \"clientConfiguration.option(SdkClientOption.ENDPOINT_DISCOVERY_ENABLED)\");\n+\n+            if (opModel.getEndpointDiscovery().isRequired()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzYwNDI3Nw=="}, "originalCommit": {"oid": "eb360c72316717b2697e555ac42fc42603dd8562"}, "originalPosition": 54}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3995, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}