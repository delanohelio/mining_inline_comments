{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE0NDAwMzQ0", "number": 1819, "title": "Fix generation for operations that share an output shape.", "bodyText": "Description\nTwo shapes can have the same C2J name but different intermediate model names.  This seems to work fine for request types, but not response types, where the lookups were done by C2J name only.\nThis also appears to have fixed an issue in javadoc generation.  To be quite honest, I'm not really sure how.\nMotivation and Context\nSome services share output types as a convenience.  The generator generates operation-specific request/response types that are linked to the C2J structures; without this fix, the first SDK type is used for a conflicting C2J shape name.\nTesting\nI added a unit test, and verified with an integration test offline in an isolated service that was impacted by this.\nTypes of changes\n\n\n Bug fix (non-breaking change which fixes an issue)\n New feature (non-breaking change which adds functionality)\n\nChecklist\n\n\n\n I have read the CONTRIBUTING document\n Local run of mvn install succeeds\n My code follows the code style of this project\n My change requires a change to the Javadoc documentation\n I have updated the Javadoc documentation accordingly\n I have read the README document\n I have added tests to cover my changes\n All new and existing tests passed\n A short description of the change has been added to the CHANGELOG\n My change is to implement 1.11 parity feature and I have updated LaunchChangelog\n\nLicense\n\n\n\n\n I confirm that this pull request can be released under the Apache 2 license", "createdAt": "2020-05-07T00:35:42Z", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1819", "merged": true, "mergeCommit": {"oid": "5b1a1d1f28471936fe6c874ec47da1bae1e4e64e"}, "closed": true, "closedAt": "2020-05-13T19:59:58Z", "author": {"login": "adamthom-amzn"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcfAEk6ABqjMzMTM3NDYwOTI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcg99M7gH2gAyNDE0NDAwMzQ0OmE2NjA4NTc3MzRmZTgwZDA0M2NlMGI2YTBkYmY5YWFhNmZmNzgwMjE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "954bbba3a48280de2ad4d7c925f5730fb134008a", "author": {"user": {"login": "adamthom-amzn", "name": "Adam Thomas"}}, "url": "https://github.com/aws/aws-sdk-java-v2/commit/954bbba3a48280de2ad4d7c925f5730fb134008a", "committedDate": "2020-05-07T00:34:17Z", "message": "Fix generation for operations that share an output shape.\n\nTwo shapes can have the same C2J name but different intermediate model names.  This seems to work fine for request types, but not response types, where the lookups were done by C2J name only."}, "afterCommit": {"oid": "df1cdf4be99197cc3d75852e679f4c81f01d43c6", "author": {"user": {"login": "adamthom-amzn", "name": "Adam Thomas"}}, "url": "https://github.com/aws/aws-sdk-java-v2/commit/df1cdf4be99197cc3d75852e679f4c81f01d43c6", "committedDate": "2020-05-07T16:41:53Z", "message": "Fix generation for operations that share an output shape.\n\nTwo shapes can have the same C2J name but different intermediate model names.  This seems to work fine for request types, but not response types, where the lookups were done by C2J name only."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEwMzE4NTg1", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1819#pullrequestreview-410318585", "createdAt": "2020-05-12T18:36:45Z", "commit": {"oid": "df1cdf4be99197cc3d75852e679f4c81f01d43c6"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxODozNjo0NVrOGUT34g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxODozNjo1OFrOGUT4TA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzk1MDMwNg==", "bodyText": "assertThatThrownBy(() -> testModel.getShapeByNameAndC2jName(\"AnyShape\", \"AnyShape\"))\n    .isInstanceOf(IllegalArgumentException.class)\n    .hasMessage(\"C2J shape AnyShape with shape name AnyShape does not exist in the intermediate model\").\n?", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1819#discussion_r423950306", "createdAt": "2020-05-12T18:36:45Z", "author": {"login": "millems"}, "path": "codegen/src/test/java/software/amazon/awssdk/codegen/model/intermediate/IntermediateModelTest.java", "diffHunk": "@@ -0,0 +1,73 @@\n+/*\n+ * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.awssdk.codegen.model.intermediate;\n+\n+import java.io.File;\n+import java.util.Collections;\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.junit.rules.ExpectedException;\n+import software.amazon.awssdk.codegen.C2jModels;\n+import software.amazon.awssdk.codegen.IntermediateModelBuilder;\n+import software.amazon.awssdk.codegen.model.config.customization.CustomizationConfig;\n+import software.amazon.awssdk.codegen.model.service.ServiceMetadata;\n+import software.amazon.awssdk.codegen.model.service.ServiceModel;\n+import software.amazon.awssdk.codegen.utils.ModelLoaderUtils;\n+\n+public class IntermediateModelTest {\n+\n+    @Rule\n+    public ExpectedException exception = ExpectedException.none();\n+\n+    @Test\n+    public void cannotFindShapeWhenNoShapesExist() {\n+        exception.expect(IllegalArgumentException.class);\n+        exception.expectMessage(\"C2J shape AnyShape with shape name AnyShape does not exist in the intermediate model\");\n+\n+        ServiceMetadata metadata = new ServiceMetadata();\n+        metadata.setProtocol(Protocol.REST_JSON.getValue());\n+        metadata.setServiceId(\"empty-service\");\n+        metadata.setSignatureVersion(\"V4\");\n+\n+        IntermediateModel testModel = new IntermediateModelBuilder(\n+            C2jModels.builder()\n+                     .serviceModel(new ServiceModel(metadata,\n+                                                    Collections.emptyMap(),\n+                                                    Collections.emptyMap(),\n+                                                    Collections.emptyMap()))\n+                     .customizationConfig(CustomizationConfig.create())\n+                     .build())\n+            .build();\n+        testModel.getShapeByNameAndC2jName(\"AnyShape\", \"AnyShape\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "df1cdf4be99197cc3d75852e679f4c81f01d43c6"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzk1MDQxMg==", "bodyText": "Same here.", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1819#discussion_r423950412", "createdAt": "2020-05-12T18:36:58Z", "author": {"login": "millems"}, "path": "codegen/src/test/java/software/amazon/awssdk/codegen/model/intermediate/IntermediateModelTest.java", "diffHunk": "@@ -0,0 +1,73 @@\n+/*\n+ * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.awssdk.codegen.model.intermediate;\n+\n+import java.io.File;\n+import java.util.Collections;\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.junit.rules.ExpectedException;\n+import software.amazon.awssdk.codegen.C2jModels;\n+import software.amazon.awssdk.codegen.IntermediateModelBuilder;\n+import software.amazon.awssdk.codegen.model.config.customization.CustomizationConfig;\n+import software.amazon.awssdk.codegen.model.service.ServiceMetadata;\n+import software.amazon.awssdk.codegen.model.service.ServiceModel;\n+import software.amazon.awssdk.codegen.utils.ModelLoaderUtils;\n+\n+public class IntermediateModelTest {\n+\n+    @Rule\n+    public ExpectedException exception = ExpectedException.none();\n+\n+    @Test\n+    public void cannotFindShapeWhenNoShapesExist() {\n+        exception.expect(IllegalArgumentException.class);\n+        exception.expectMessage(\"C2J shape AnyShape with shape name AnyShape does not exist in the intermediate model\");\n+\n+        ServiceMetadata metadata = new ServiceMetadata();\n+        metadata.setProtocol(Protocol.REST_JSON.getValue());\n+        metadata.setServiceId(\"empty-service\");\n+        metadata.setSignatureVersion(\"V4\");\n+\n+        IntermediateModel testModel = new IntermediateModelBuilder(\n+            C2jModels.builder()\n+                     .serviceModel(new ServiceModel(metadata,\n+                                                    Collections.emptyMap(),\n+                                                    Collections.emptyMap(),\n+                                                    Collections.emptyMap()))\n+                     .customizationConfig(CustomizationConfig.create())\n+                     .build())\n+            .build();\n+        testModel.getShapeByNameAndC2jName(\"AnyShape\", \"AnyShape\");\n+    }\n+\n+    @Test\n+    public void getShapeByNameAndC2jNameVerifiesC2JName() {\n+        final File modelFile = new File(IntermediateModelTest.class\n+                                            .getResource(\"../../poet/client/c2j/shared-output/service-2.json\").getFile());\n+        IntermediateModel testModel = new IntermediateModelBuilder(\n+            C2jModels.builder()\n+                     .serviceModel(ModelLoaderUtils.loadModel(ServiceModel.class, modelFile))\n+                     .customizationConfig(CustomizationConfig.create())\n+                     .build())\n+            .build();\n+\n+        exception.expect(IllegalArgumentException.class);\n+        exception.expectMessage(\"C2J shape AnyShape with shape name PingResponse does not exist in the intermediate model\");\n+\n+        testModel.getShapeByNameAndC2jName(\"PingResponse\", \"AnyShape\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "df1cdf4be99197cc3d75852e679f4c81f01d43c6"}, "originalPosition": 71}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "abcd9a4023265b8d04343e8eef033cbd389c619c", "author": {"user": {"login": "adamthom-amzn", "name": "Adam Thomas"}}, "url": "https://github.com/aws/aws-sdk-java-v2/commit/abcd9a4023265b8d04343e8eef033cbd389c619c", "committedDate": "2020-05-12T21:48:53Z", "message": "Fix generation for operations that share an output shape.\n\nTwo shapes can have the same C2J name but different intermediate model names.  This seems to work fine for request types, but not response types, where the lookups were done by C2J name only."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "df1cdf4be99197cc3d75852e679f4c81f01d43c6", "author": {"user": {"login": "adamthom-amzn", "name": "Adam Thomas"}}, "url": "https://github.com/aws/aws-sdk-java-v2/commit/df1cdf4be99197cc3d75852e679f4c81f01d43c6", "committedDate": "2020-05-07T16:41:53Z", "message": "Fix generation for operations that share an output shape.\n\nTwo shapes can have the same C2J name but different intermediate model names.  This seems to work fine for request types, but not response types, where the lookups were done by C2J name only."}, "afterCommit": {"oid": "abcd9a4023265b8d04343e8eef033cbd389c619c", "author": {"user": {"login": "adamthom-amzn", "name": "Adam Thomas"}}, "url": "https://github.com/aws/aws-sdk-java-v2/commit/abcd9a4023265b8d04343e8eef033cbd389c619c", "committedDate": "2020-05-12T21:48:53Z", "message": "Fix generation for operations that share an output shape.\n\nTwo shapes can have the same C2J name but different intermediate model names.  This seems to work fine for request types, but not response types, where the lookups were done by C2J name only."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEwNDUwMzM5", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1819#pullrequestreview-410450339", "createdAt": "2020-05-12T21:54:04Z", "commit": {"oid": "abcd9a4023265b8d04343e8eef033cbd389c619c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a660857734fe80d043ce0b6a0dbf9aaa6ff78021", "author": {"user": {"login": "millems", "name": "Matthew Miller"}}, "url": "https://github.com/aws/aws-sdk-java-v2/commit/a660857734fe80d043ce0b6a0dbf9aaa6ff78021", "committedDate": "2020-05-13T19:22:43Z", "message": "Merge branch 'master' into output-sharing"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2544, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}