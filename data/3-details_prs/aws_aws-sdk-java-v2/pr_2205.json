{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQwOTMyMjU2", "number": 2205, "title": "Adding Crosslink redirect for API reference document", "bodyText": "Description\n\n\nAdding Crosslink redirect for API reference document\n\nMotivation and Context\n\n\n\nAs of now we donot have Links to Java Doc link for API reference\nThis PR will will create a static page which will extract the ClientName and service name from the API refenence and redirect to the s3 location where we have Java V2 docs,\n\ngenerate_cross_link_data.py\n\nthis loops through all the services service-2.json  and gets the service name and client name\nThe python code is same as Java code where we generate the DefaultNamingStrategy-Link\n\ncrosslink_redirect.html\n\nThis will redirect the SPI refernced link via Java Scripts the maps are populated during publish java docs from above python scripts.\n\nrelease-javadoc.yml\n\nThis will create the static redirect html  in the S3 Java while releasing Java docs.\n\nTesting\n\n\n\n\nTested end to end by running publish-javadoc builds\nTested error cases when incorrect redirect in this case it will land to index.html\n\nScreenshots (if appropriate)\nTypes of changes\n\n\n Bug fix (non-breaking change which fixes an issue)\n New feature (non-breaking change which adds functionality)\n\nChecklist\n\n\n\n I have read the CONTRIBUTING document\n Local run of mvn install succeeds\n My code follows the code style of this project\n My change requires a change to the Javadoc documentation\n I have updated the Javadoc documentation accordingly\n I have read the README document\n I have added tests to cover my changes\n All new and existing tests passed\n A short description of the change has been added to the CHANGELOG\n My change is to implement 1.11 parity feature and I have updated LaunchChangelog\n\nLicense\n\n\n\n\n I confirm that this pull request can be released under the Apache 2 license", "createdAt": "2020-12-16T06:40:24Z", "url": "https://github.com/aws/aws-sdk-java-v2/pull/2205", "merged": true, "mergeCommit": {"oid": "522da318a5c2a6ea08a819ae089bbde2eb4ec49d"}, "closed": true, "closedAt": "2020-12-17T18:36:02Z", "author": {"login": "joviegas"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdm7thsgFqTU1NDI2ODMxNw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdnH4MqAFqTU1NDg3NzIwOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU0MjY4MzE3", "url": "https://github.com/aws/aws-sdk-java-v2/pull/2205#pullrequestreview-554268317", "createdAt": "2020-12-17T04:16:08Z", "commit": {"oid": "f3b6ba7e3e89b19e434b1aaa1445854ea0404c74"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QwNDoxNjozM1rOIHj8yQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QwNDoyMDoyNFrOIHkBZQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDc5OTk0NQ==", "bodyText": "Are templatePath and outputPath always supposed to reference files, rather than a directory path?\nIf so\n\nCould there be more natural defaults than ./ or /?\nIt'd be nice if the names of these two arguments differed from the previous, to distinguish their type", "url": "https://github.com/aws/aws-sdk-java-v2/pull/2205#discussion_r544799945", "createdAt": "2020-12-17T04:16:33Z", "author": {"login": "cenedhryn"}, "path": "scripts/doc_crosslinks/generate_cross_link_data.py", "diffHunk": "@@ -0,0 +1,120 @@\n+import os\n+import argparse\n+import io\n+import codecs\n+import json\n+import re\n+# import requests\n+from os import listdir\n+from os.path import isdir, exists, join\n+from re import split\n+\n+sdks = {}\n+clientClass = {}\n+\n+def generateDocsMap(apiDefinitionsPath, apiDefinitionsRelativePath):\n+\n+    filesInDir = [f for f in listdir(apiDefinitionsPath) if isdir(join(apiDefinitionsPath, f))]\n+    for file in filesInDir :\n+        serviceJsonFileName = join(apiDefinitionsPath, join(file, apiDefinitionsRelativePath))\n+\n+        if(exists(serviceJsonFileName)) :\n+            with codecs.open(serviceJsonFileName, 'rb', 'utf-8') as api_definition:\n+                api_content = json.loads(api_definition.read())\n+                if \"uid\" in api_content[\"metadata\"].keys():\n+                    sdks[api_content[\"metadata\"][\"uid\"]] = file\n+                clientClass[api_content[\"metadata\"][\"uid\"]] = getClientClassNameFromMetadata(api_content[\"metadata\"])\n+\n+#                 # Below  code can be used for debugging  failing clients\n+#                 str  = \"https://sdk.amazonaws.com/java/api/latest/software/amazon/awssdk/services/\"+ file +\"/\"+getClientClassNameFromMetadata(api_content[\"metadata\"])+\".html\"+\"#validateTemplate--\"\n+#                 ret = requests.head(str)\n+#                 if( ret.status_code != 200 ):\n+#                     print(str)\n+\n+    return sdks\n+\n+def splitOnWordBoundaries(toSplit) :\n+    result = toSplit\n+    result = re.sub(r'[^A-Za-z0-9]+', \" \", result)\n+    result = re.sub(r'([^a-z]{2,})v([0-9]+)', r'\\g<1> v\\g<2>' , result)\n+    result = re.sub(r'([^A-Z]{2,})V([0-9]+)', r'\\g<1> V\\g<2>', result)\n+    result = re.sub(r'(?<=[a-z])(?=[A-Z]([a-zA-Z]|[0-9]))', r' ', result)\n+    result = re.sub(r'([A-Z]+)([A-Z][a-z])', r'\\g<1> \\g<2>', result)\n+    result = re.sub(r'([0-9])([a-zA-Z])', r'\\g<1> \\g<2>', result)\n+    result = re.sub(r' +', ' ', result)\n+    return result.split(\" \");\n+\n+\n+def capitalize(str):\n+    if(str is None or len(str) == 0):\n+        return str\n+    strFirstCaps = str[0].title() + str[1:]\n+    return strFirstCaps\n+\n+\n+def lowerCase(str):\n+    if(str is None or len(str) == 0):\n+        return str\n+    return str.lower()\n+\n+def pascalCase(str):\n+    splits = splitOnWordBoundaries(str)\n+    modifiedStr = \"\"\n+    for i in range(0, len(splits)) :\n+        modifiedStr += capitalize(lowerCase(splits[i]))\n+    return modifiedStr\n+\n+def getClientClassNameFromMetadata(metadataNode):\n+    toSanitize = \"\"\n+    if \"serviceId\" in metadataNode.keys():\n+        toSanitize = metadataNode[\"serviceId\"]\n+    clientName = pascalCase(toSanitize)\n+    clientName =  removeLeading(clientName , \"Amazon\")\n+    clientName =  removeLeading(clientName, \"Aws\")\n+    clientName = removeTrailing(clientName, \"Service\" )\n+    return   clientName + \"Client\"\n+\n+\n+def removeLeading(str, toRemove) :\n+    if(str is None) :\n+        return str\n+    if(str.startswith(toRemove)):\n+        return str.replace(toRemove, \"\")\n+    return str\n+\n+def removeTrailing(str, toRemove) :\n+    if(str is None) :\n+        return str\n+    if(str.endswith(toRemove)):\n+        return str.replace(toRemove, \"\")\n+    return str\n+\n+def insertDocsMapToRedirect(apiDefinitionsBasePath, apiDefinitionsRelativePath, templatePath, outputPath):\n+    generateDocsMap(apiDefinitionsBasePath, apiDefinitionsRelativePath)\n+    output = \"\"\n+    with codecs.open(templatePath, 'rb', 'utf-8') as redirect_template:\n+        current_template = redirect_template.read();\n+        output = current_template.replace(\"${UID_SERVICE_MAPPING}\", json.dumps(sdks, ensure_ascii=False))\n+        output = output.replace(\"${UID_CLIENT_CLASS_MAPPING}\", json.dumps(clientClass, ensure_ascii=False))\n+    with open(outputPath, 'w') as redirect_output:\n+        redirect_output.write(output)\n+\n+def Main():\n+    parser = argparse.ArgumentParser(description=\"Generates a Cross-link redirect file.\")\n+    parser.add_argument(\"--apiDefinitionsBasePath\", action=\"store\")\n+    parser.add_argument(\"--apiDefinitionsRelativePath\", action=\"store\")\n+    parser.add_argument(\"--templatePath\", action=\"store\")\n+    parser.add_argument(\"--outputPath\", action=\"store\")\n+    \n+    args = vars( parser.parse_args() )\n+    argMap = {}\n+    argMap[ \"apiDefinitionsBasePath\" ] = args[ \"apiDefinitionsBasePath\" ] or \"./../services/\"\n+    argMap[ \"apiDefinitionsRelativePath\" ] = args[ \"apiDefinitionsRelativePath\" ] or \"/src/main/resources/codegen-resources/service-2.json\"\n+    argMap[ \"templatePath\" ] = args[ \"templatePath\" ] or \"./\"\n+    argMap[ \"outputPath\" ] = args[ \"outputPath\" ] or \"/\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "013a82fc66fbb3508fdeda8898e42ec0691e59e1"}, "originalPosition": 114}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDgwMTEyNQ==", "bodyText": "Are there any alternative folders for the source of the template html file and the output? Especially the output doesn't seem like it belongs in the scripts folder, but if there is no other logical place to put them, it may be unnecessary to create a new folder.", "url": "https://github.com/aws/aws-sdk-java-v2/pull/2205#discussion_r544801125", "createdAt": "2020-12-17T04:20:24Z", "author": {"login": "cenedhryn"}, "path": "buildspecs/release-javadoc.yml", "diffHunk": "@@ -22,3 +22,5 @@ phases:\n     - aws s3 sync $DOC_PATH/$RELEASE_VERSION/ $DOC_PATH/latest/ --acl=public-read --delete\n     - jar cf aws-java-sdk-v2-docs.jar -C target/site/apidocs .\n     - aws s3 cp aws-java-sdk-v2-docs.jar $DOC_PATH/ --acl=\"public-read\"\n+    - python ./scripts/doc_crosslinks/generate_cross_link_data.py --apiDefinitionsBasePath ./services/ --apiDefinitionsRelativePath src/main/resources/codegen-resources/service-2.json  --templatePath ./scripts/doc_crosslinks/crosslink_redirect.html --outputPath ./scripts/crosslink_redirect.html", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "013a82fc66fbb3508fdeda8898e42ec0691e59e1"}, "originalPosition": 4}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ea78ac294eba941e8bf214ea16f3865a9fc61843", "author": {"user": null}, "url": "https://github.com/aws/aws-sdk-java-v2/commit/ea78ac294eba941e8bf214ea16f3865a9fc61843", "committedDate": "2020-12-17T18:23:08Z", "message": "Adding Crosslink redirect for API reference document"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU0ODc3MjA5", "url": "https://github.com/aws/aws-sdk-java-v2/pull/2205#pullrequestreview-554877209", "createdAt": "2020-12-17T18:31:00Z", "commit": {"oid": "ea78ac294eba941e8bf214ea16f3865a9fc61843"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2398, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}