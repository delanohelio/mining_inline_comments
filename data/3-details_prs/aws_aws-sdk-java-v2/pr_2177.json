{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMwNzgzNTYx", "number": 2177, "title": "Fixing Integration Test failure for cancelledSubscription_doesNotCall\u2026", "bodyText": "\u2026TerminalMethods\n\nDescription\n\nIntegration test was failing for cancelledSubscription_doesNotCallTerminalMethods.\nMotivation and Context\n\n\n\nIntegration Test failure.\n\n       assertThat(terminalMethodsCalled).isFalse();\nHowever, terminalMethodsCalled was True and causing Test to fail.\nRoot Cause\ncancelledSubscription_doesNotCallTerminalMethods test was relying on Limit function just to cancel the subscription. A bug was fixed in LimitSubscriber where the Subscription was marked as complete with PR#2116. This caused the setting of terminalMethodsCalled once limit is reached.\nFix\n\nUpdated the Test case to do explicit cancel subscription as soon as one event is received.\n\nTesting\n\n\n\nTested by running integration test locally\n sudo mvn clean install -pl :kinesis  -Dskip.unit.tests  -P integration-tests -Dfindbugs.skip -Dcheckstyle.skip -T4C\n\nScreenshots (if appropriate)\nTypes of changes\n\n\n Bug fix (non-breaking change which fixes an issue)\n New feature (non-breaking change which adds functionality)\n\nChecklist\n\n\n\n I have read the CONTRIBUTING document\n Local run of mvn install succeeds\n My code follows the code style of this project\n My change requires a change to the Javadoc documentation\n I have updated the Javadoc documentation accordingly\n I have read the README document\n I have added tests to cover my changes\n All new and existing tests passed\n A short description of the change has been added to the CHANGELOG\n My change is to implement 1.11 parity feature and I have updated LaunchChangelog\n\nLicense\n\n\n\n\n I confirm that this pull request can be released under the Apache 2 license", "createdAt": "2020-12-02T06:27:40Z", "url": "https://github.com/aws/aws-sdk-java-v2/pull/2177", "merged": true, "mergeCommit": {"oid": "3b98711a5904c29814ec993f3bdb10ce84dfc56b"}, "closed": true, "closedAt": "2020-12-04T23:19:48Z", "author": {"login": "joviegas"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdiWJeJgFqTU0MzI4NDg0Mw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdi-vQ8AFqTU0NTMxMjE1NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQzMjg0ODQz", "url": "https://github.com/aws/aws-sdk-java-v2/pull/2177#pullrequestreview-543284843", "createdAt": "2020-12-02T22:18:55Z", "commit": {"oid": "8992d43718df10fdcdd04675870b70c0547787b8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQyMjoxODo1NVrOH9wf9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQyMjoxODo1NVrOH9wf9A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDUxOTc5Ng==", "bodyText": "As discussed offline, we'll remove the terminalMethodsCalled.set(true) from onComplete because with the latest change, onComplete will be invoked. We will also add an assertion to verify onComplete is invoked.\nIn addition, we should add a Thread.sleep(1000) before assertThat(terminalMethodsCalled).isFalse(); because onComplete and complete is called by another thread. Adding the sleep will avoid the race condition.", "url": "https://github.com/aws/aws-sdk-java-v2/pull/2177#discussion_r534519796", "createdAt": "2020-12-02T22:18:55Z", "author": {"login": "zoewangg"}, "path": "services/kinesis/src/it/java/software/amazon/awssdk/services/kinesis/SubscribeToShardIntegrationTest.java", "diffHunk": "@@ -162,14 +162,18 @@ public void responseReceived(SubscribeToShardResponse response) {\n                                          @Override\n                                          public void onEventStream(SdkPublisher<SubscribeToShardEventStream> publisher) {\n                                              publisher.limit(3).subscribe(new Subscriber<SubscribeToShardEventStream>() {\n+                                                 private Subscription subscription;\n                                                  @Override\n                                                  public void onSubscribe(Subscription subscription) {\n-                                                     subscription.request(10);\n+                                                     this.subscription = subscription;\n+                                                     subscription.request(1);\n                                                  }\n \n                                                  @Override\n                                                  public void onNext(SubscribeToShardEventStream subscribeToShardEventStream) {\n                                                      events.add(subscribeToShardEventStream);\n+                                                     //Cancel on first event.\n+                                                     subscription.cancel();\n                                                  }\n \n                                                  @Override", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8992d43718df10fdcdd04675870b70c0547787b8"}, "originalPosition": 19}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ1Mjg4NDEy", "url": "https://github.com/aws/aws-sdk-java-v2/pull/2177#pullrequestreview-545288412", "createdAt": "2020-12-04T20:52:40Z", "commit": {"oid": "23c7f3d60c4517b6c356a54d1f5845f3be6007c7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQyMDo1Mjo0MVrOH_hmvQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQyMDo1Mjo0MVrOH_hmvQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjM3MjkyNQ==", "bodyText": "Duplicate line. Do you mean assertThat(onCompleteSubsMethodsCalled).isTrue()?", "url": "https://github.com/aws/aws-sdk-java-v2/pull/2177#discussion_r536372925", "createdAt": "2020-12-04T20:52:41Z", "author": {"login": "zoewangg"}, "path": "services/kinesis/src/it/java/software/amazon/awssdk/services/kinesis/SubscribeToShardIntegrationTest.java", "diffHunk": "@@ -146,8 +147,75 @@ public void subscribeToShard_ReceivesAllData() {\n     }\n \n     @Test\n-    public void cancelledSubscription_doesNotCallTerminalMethods() {\n-        AtomicBoolean terminalMethodsCalled = new AtomicBoolean(false);\n+    public void limitedSubscription_callCompleteMethodOfSubs_whenLimitsReached() {\n+        AtomicBoolean onCompleteSubsMethodsCalled = new AtomicBoolean(false);\n+        AtomicBoolean completeMethodOfHandlerCalled = new AtomicBoolean(false);\n+        AtomicBoolean errorOccurred = new AtomicBoolean(false);\n+        List<SubscribeToShardEventStream> events = new ArrayList<>();\n+        asyncClient.subscribeToShard(r -> r.consumerARN(consumerArn)\n+                        .shardId(shardId)\n+                        .startingPosition(s -> s.type(ShardIteratorType.LATEST)),\n+                new SubscribeToShardResponseHandler() {\n+                    @Override\n+                    public void responseReceived(SubscribeToShardResponse response) {\n+                        verifyHttpMetadata(response);\n+                    }\n+\n+                    @Override\n+                    public void onEventStream(SdkPublisher<SubscribeToShardEventStream> publisher) {\n+                        publisher.limit(3).subscribe(new Subscriber<SubscribeToShardEventStream>() {\n+                            private Subscription subscription;\n+                            @Override\n+                            public void onSubscribe(Subscription subscription) {\n+                                this.subscription = subscription;\n+                                subscription.request(10);\n+                            }\n+\n+                            @Override\n+                            public void onNext(SubscribeToShardEventStream subscribeToShardEventStream) {\n+                                events.add(subscribeToShardEventStream);\n+                            }\n+\n+                            @Override\n+                            public void onError(Throwable throwable) {\n+                                errorOccurred.set(true);\n+                            }\n+\n+                            @Override\n+                            public void onComplete() {\n+                                onCompleteSubsMethodsCalled.set(true);\n+                            }\n+                        });\n+                    }\n+\n+                    @Override\n+                    public void exceptionOccurred(Throwable throwable) {\n+                        errorOccurred.set(true);\n+                    }\n+\n+                    @Override\n+                    public void complete() {\n+                        completeMethodOfHandlerCalled.set(true);\n+                    }\n+                }).join();\n+\n+        try {\n+            Thread.sleep(WAIT_TIME_FOR_SUBSCRIPTION_COMPLETION);\n+        } catch (InterruptedException e) {\n+            e.printStackTrace();\n+        }\n+\n+        assertThat(completeMethodOfHandlerCalled).isFalse();\n+        assertThat(completeMethodOfHandlerCalled).isFalse();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "23c7f3d60c4517b6c356a54d1f5845f3be6007c7"}, "originalPosition": 73}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "efdaa1a4ff8db27108ec5727f56f30258aba8804", "author": {"user": null}, "url": "https://github.com/aws/aws-sdk-java-v2/commit/efdaa1a4ff8db27108ec5727f56f30258aba8804", "committedDate": "2020-12-04T21:33:56Z", "message": "Fixing Integration Test failure for cancelledSubscription_doesNotCallTerminalMethods"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ1MzEyMTU0", "url": "https://github.com/aws/aws-sdk-java-v2/pull/2177#pullrequestreview-545312154", "createdAt": "2020-12-04T21:36:24Z", "commit": {"oid": "efdaa1a4ff8db27108ec5727f56f30258aba8804"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2386, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}