{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg4ODA0MzMx", "number": 2041, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxODoyNzoxMFrOEkq4cg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QyMjo0NToxOFrOEkwGIw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2ODg2NzcwOnYy", "diffSide": "RIGHT", "path": "services/s3control/src/main/resources/log4j.properties", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxODoyNzoxMFrOHTv1Ng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QyMDo1Mjo1NFrOHT1IOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDQ2ODY2Mg==", "bodyText": "We shouldn't add log4j.properties in the main resources", "url": "https://github.com/aws/aws-sdk-java-v2/pull/2041#discussion_r490468662", "createdAt": "2020-09-17T18:27:10Z", "author": {"login": "dagnir"}, "path": "services/s3control/src/main/resources/log4j.properties", "diffHunk": "@@ -0,0 +1,33 @@\n+#", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c969c0e4b9ec01e891f129cb4e6c589c4442224"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDU1NTQ0OA==", "bodyText": "I thought I added it in the test directory, will move it.", "url": "https://github.com/aws/aws-sdk-java-v2/pull/2041#discussion_r490555448", "createdAt": "2020-09-17T20:52:54Z", "author": {"login": "cenedhryn"}, "path": "services/s3control/src/main/resources/log4j.properties", "diffHunk": "@@ -0,0 +1,33 @@\n+#", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDQ2ODY2Mg=="}, "originalCommit": {"oid": "4c969c0e4b9ec01e891f129cb4e6c589c4442224"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2ODkzNDQ4OnYy", "diffSide": "RIGHT", "path": "services/s3control/src/main/java/software/amazon/awssdk/services/s3control/internal/interceptors/EndpointAddressInterceptor.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxODo0NjoyOVrOHTwe8g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QyMDo1MjozOVrOHT1HzQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDQ3OTM0Ng==", "bodyText": "Thinking about this some more, I'm not sure that this is the right behavior; it's possible that the user could still want this behavior even with an endpoint override.\nCan we leave this change out of the client for now? For testing, we can we can just add a new client interceptor that changes the request URL to the WireMock host before it's sent.", "url": "https://github.com/aws/aws-sdk-java-v2/pull/2041#discussion_r490479346", "createdAt": "2020-09-17T18:46:29Z", "author": {"login": "dagnir"}, "path": "services/s3control/src/main/java/software/amazon/awssdk/services/s3control/internal/interceptors/EndpointAddressInterceptor.java", "diffHunk": "@@ -81,7 +86,7 @@ private String resolveHost(SdkHttpRequest request, String accountId, S3ControlCo\n \n         }\n         validateComponentIsHostnameCompliant(accountId, \"account id\");\n-        return String.format(\"%s.%s\", accountId, host);\n+        return hasEndpointOverride ? host : String.format(\"%s.%s\", accountId, host);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c969c0e4b9ec01e891f129cb4e6c589c4442224"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDU1NTM0MQ==", "bodyText": "Yes, that sounds like a less intrusive change.", "url": "https://github.com/aws/aws-sdk-java-v2/pull/2041#discussion_r490555341", "createdAt": "2020-09-17T20:52:39Z", "author": {"login": "cenedhryn"}, "path": "services/s3control/src/main/java/software/amazon/awssdk/services/s3control/internal/interceptors/EndpointAddressInterceptor.java", "diffHunk": "@@ -81,7 +86,7 @@ private String resolveHost(SdkHttpRequest request, String accountId, S3ControlCo\n \n         }\n         validateComponentIsHostnameCompliant(accountId, \"account id\");\n-        return String.format(\"%s.%s\", accountId, host);\n+        return hasEndpointOverride ? host : String.format(\"%s.%s\", accountId, host);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDQ3OTM0Ng=="}, "originalCommit": {"oid": "4c969c0e4b9ec01e891f129cb4e6c589c4442224"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2OTcyMTk1OnYy", "diffSide": "RIGHT", "path": "services/s3control/src/main/java/software/amazon/awssdk/services/s3control/internal/interceptors/EndpointAddressInterceptor.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QyMjo0NToxOFrOHT4CCg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QyMjo0NToxOFrOHT4CCg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDYwMzAxOA==", "bodyText": "New changes look good, but looks like this still needs to be reverted along with the accompanying test.", "url": "https://github.com/aws/aws-sdk-java-v2/pull/2041#discussion_r490603018", "createdAt": "2020-09-17T22:45:18Z", "author": {"login": "dagnir"}, "path": "services/s3control/src/main/java/software/amazon/awssdk/services/s3control/internal/interceptors/EndpointAddressInterceptor.java", "diffHunk": "@@ -81,7 +86,7 @@ private String resolveHost(SdkHttpRequest request, String accountId, S3ControlCo\n \n         }\n         validateComponentIsHostnameCompliant(accountId, \"account id\");\n-        return String.format(\"%s.%s\", accountId, host);\n+        return hasEndpointOverride ? host : String.format(\"%s.%s\", accountId, host);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4ef8508945adef1bbb0f59809432835e56e85cb5"}, "originalPosition": 34}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4040, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}