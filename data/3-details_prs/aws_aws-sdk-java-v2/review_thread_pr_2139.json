{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE3MDgzODA0", "number": 2139, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxODoxNjo1NlrOE25Fpw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxODoxODowMVrOE25HKw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI1OTkzODk1OnYy", "diffSide": "RIGHT", "path": "build-tools/src/main/resources/software/amazon/awssdk/checkstyle.xml", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxODoxNjo1NlrOHv7gHQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQyMDozMDo1NVrOHwAddw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDAxOTk5Nw==", "bodyText": "Can we use Regexp instead?  That way, we don't need to add another dependency\nExample: \n  \n    \n      aws-sdk-java-v2/build-tools/src/main/resources/software/amazon/awssdk/checkstyle.xml\n    \n    \n        Lines 361 to 365\n      in\n      8f361fd\n    \n    \n    \n    \n\n        \n          \n           <module name=\"Regexp\"> \n        \n\n        \n          \n               <property name=\"format\" value=\"\\bObjects.hash\\b\"/> \n        \n\n        \n          \n               <property name=\"illegalPattern\" value=\"true\"/> \n        \n\n        \n          \n               <property name=\"message\" value=\"Don't use Objects.hash, use Objects.hashCode instead\"/> \n        \n\n        \n          \n               <property name=\"ignoreComments\" value=\"true\"/>", "url": "https://github.com/aws/aws-sdk-java-v2/pull/2139#discussion_r520019997", "createdAt": "2020-11-09T18:16:56Z", "author": {"login": "zoewangg"}, "path": "build-tools/src/main/resources/software/amazon/awssdk/checkstyle.xml", "diffHunk": "@@ -387,6 +387,11 @@\n \n         <!-- Checks that no 'final' are added on local variables -->\n         <module name=\"software.amazon.awssdk.buildtools.checkstyle.UnnecessaryFinalOnLocalVariableCheck\" />\n+\n+        <!-- Checks that no forbidden methods are used in implementation -->\n+        <module name=\"com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck\">", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cf5b110353d2a0ddc5ae7ce334e0eec70d92f1b2"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDEwMTIzOQ==", "bodyText": "Thanks for the reference. Changes done.", "url": "https://github.com/aws/aws-sdk-java-v2/pull/2139#discussion_r520101239", "createdAt": "2020-11-09T20:30:55Z", "author": {"login": "joviegas"}, "path": "build-tools/src/main/resources/software/amazon/awssdk/checkstyle.xml", "diffHunk": "@@ -387,6 +387,11 @@\n \n         <!-- Checks that no 'final' are added on local variables -->\n         <module name=\"software.amazon.awssdk.buildtools.checkstyle.UnnecessaryFinalOnLocalVariableCheck\" />\n+\n+        <!-- Checks that no forbidden methods are used in implementation -->\n+        <module name=\"com.github.sevntu.checkstyle.checks.coding.ForbidCertainMethodCheck\">", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDAxOTk5Nw=="}, "originalCommit": {"oid": "cf5b110353d2a0ddc5ae7ce334e0eec70d92f1b2"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI1OTk0MjgzOnYy", "diffSide": "RIGHT", "path": "services/sts/src/test/java/software/amazon/awssdk/services/sts/internal/StsWebIdentityCredentialsProviderFactoryTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxODoxODowMVrOHv7iZA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQyMDozMTowNVrOHwAdvg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDAyMDU4MA==", "bodyText": "nit: we don't use final on local variables. We have a checkstyle for it, but it doesn't apply to tests", "url": "https://github.com/aws/aws-sdk-java-v2/pull/2139#discussion_r520020580", "createdAt": "2020-11-09T18:18:01Z", "author": {"login": "zoewangg"}, "path": "services/sts/src/test/java/software/amazon/awssdk/services/sts/internal/StsWebIdentityCredentialsProviderFactoryTest.java", "diffHunk": "@@ -0,0 +1,35 @@\n+/*\n+ * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.awssdk.services.sts.internal;\n+\n+import org.junit.Assert;\n+import org.junit.Test;\n+import software.amazon.awssdk.auth.credentials.WebIdentityTokenCredentialsProviderFactory;\n+import software.amazon.awssdk.auth.credentials.internal.WebIdentityCredentialsUtils;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static org.assertj.core.api.Assertions.assertThatCode;\n+\n+public class StsWebIdentityCredentialsProviderFactoryTest {\n+\n+\n+    @Test\n+    public void stsWebIdentityCredentialsProviderFactory_with_webIdentityCredentialsUtils(){\n+        final WebIdentityTokenCredentialsProviderFactory factory = WebIdentityCredentialsUtils.factory();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cf5b110353d2a0ddc5ae7ce334e0eec70d92f1b2"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDEwMTMxMA==", "bodyText": "done.", "url": "https://github.com/aws/aws-sdk-java-v2/pull/2139#discussion_r520101310", "createdAt": "2020-11-09T20:31:05Z", "author": {"login": "joviegas"}, "path": "services/sts/src/test/java/software/amazon/awssdk/services/sts/internal/StsWebIdentityCredentialsProviderFactoryTest.java", "diffHunk": "@@ -0,0 +1,35 @@\n+/*\n+ * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.awssdk.services.sts.internal;\n+\n+import org.junit.Assert;\n+import org.junit.Test;\n+import software.amazon.awssdk.auth.credentials.WebIdentityTokenCredentialsProviderFactory;\n+import software.amazon.awssdk.auth.credentials.internal.WebIdentityCredentialsUtils;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static org.assertj.core.api.Assertions.assertThatCode;\n+\n+public class StsWebIdentityCredentialsProviderFactoryTest {\n+\n+\n+    @Test\n+    public void stsWebIdentityCredentialsProviderFactory_with_webIdentityCredentialsUtils(){\n+        final WebIdentityTokenCredentialsProviderFactory factory = WebIdentityCredentialsUtils.factory();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDAyMDU4MA=="}, "originalCommit": {"oid": "cf5b110353d2a0ddc5ae7ce334e0eec70d92f1b2"}, "originalPosition": 31}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3934, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}