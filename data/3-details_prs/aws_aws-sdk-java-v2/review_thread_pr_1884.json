{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMyMDI3MTA4", "number": 1884, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxOTo1Mjo1MVrOEECArA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQyMjo0MDoxOFrOEEFIRw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNjYyNzAwOnYy", "diffSide": "RIGHT", "path": "codegen/src/test/resources/software/amazon/awssdk/codegen/poet/client/test-endpoint-discovery-async.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxOTo1Mjo1MVrOGhZ26A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxOTo1NjoyOVrOGhZ-Xw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzY3OTg0OA==", "bodyText": "Publishing needs to happen after execution so we would need to add a completion stage to the future instead of publishing here", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1884#discussion_r437679848", "createdAt": "2020-06-09T19:52:51Z", "author": {"login": "dagnir"}, "path": "codegen/src/test/resources/software/amazon/awssdk/codegen/poet/client/test-endpoint-discovery-async.java", "diffHunk": "@@ -264,6 +288,10 @@ public final String serviceName() {\n             return executeFuture;\n         } catch (Throwable t) {\n             return CompletableFutureUtils.failedFuture(t);\n+        } finally {\n+            Optional<MetricPublisher> metricPublisher = MetricUtils.resolvePublisher(clientConfiguration,\n+                    testDiscoveryRequiredRequest);\n+            metricPublisher.ifPresent(p -> p.publish(apiCallMetricCollector.collect()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f10bd22855ea90c7d15665c038e613c6cdcedd22"}, "originalPosition": 107}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzY4MTc1OQ==", "bodyText": "oh yeah, I guess I just blindly copied the sync change \ud83d\ude05", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1884#discussion_r437681759", "createdAt": "2020-06-09T19:56:29Z", "author": {"login": "zoewangg"}, "path": "codegen/src/test/resources/software/amazon/awssdk/codegen/poet/client/test-endpoint-discovery-async.java", "diffHunk": "@@ -264,6 +288,10 @@ public final String serviceName() {\n             return executeFuture;\n         } catch (Throwable t) {\n             return CompletableFutureUtils.failedFuture(t);\n+        } finally {\n+            Optional<MetricPublisher> metricPublisher = MetricUtils.resolvePublisher(clientConfiguration,\n+                    testDiscoveryRequiredRequest);\n+            metricPublisher.ifPresent(p -> p.publish(apiCallMetricCollector.collect()));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzY3OTg0OA=="}, "originalCommit": {"oid": "f10bd22855ea90c7d15665c038e613c6cdcedd22"}, "originalPosition": 107}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNzEzNzk5OnYy", "diffSide": "RIGHT", "path": "core/sdk-core/src/main/java/software/amazon/awssdk/core/internal/util/MetricUtils.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQyMjo0MDoxOFrOGhe1nA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxNzowODowNFrOGh-gLA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzc2MTQzNg==", "bodyText": "I created this overload because for some operations, the input request is modified (eg: applySignerOverride), so the request variable is not final. As a result, we can't use the input request parameter in the whenComplete block because variables used in lambda should be final or effectively final", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1884#discussion_r437761436", "createdAt": "2020-06-09T22:40:18Z", "author": {"login": "zoewangg"}, "path": "core/sdk-core/src/main/java/software/amazon/awssdk/core/internal/util/MetricUtils.java", "diffHunk": "@@ -54,6 +56,19 @@ private MetricUtils() {\n         return Optional.ofNullable(clientConfig.option(METRIC_PUBLISHER));\n     }\n \n+    /**\n+     * Resolve the correct metric publisher to use. The publisher set on the request always takes precedence.\n+     *\n+     * @param clientConfig The client configuration.\n+     * @param requestConfig The request override configuration.\n+     * @return The metric publisher to use.\n+     */\n+    public static Optional<MetricPublisher> resolvePublisher(SdkClientConfiguration clientConfig,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f9280eedd6d776388dd2921f858259e1fd6b91b"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzc2OTgyMQ==", "bodyText": "Not a fan of using Optional as a method parameter. Can we change to so it takes an override config, and change the operation code:\nMetricUtils.resolvePublisher(clientConfig, overrideConfig.orElse(null));", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1884#discussion_r437769821", "createdAt": "2020-06-09T23:05:10Z", "author": {"login": "dagnir"}, "path": "core/sdk-core/src/main/java/software/amazon/awssdk/core/internal/util/MetricUtils.java", "diffHunk": "@@ -54,6 +56,19 @@ private MetricUtils() {\n         return Optional.ofNullable(clientConfig.option(METRIC_PUBLISHER));\n     }\n \n+    /**\n+     * Resolve the correct metric publisher to use. The publisher set on the request always takes precedence.\n+     *\n+     * @param clientConfig The client configuration.\n+     * @param requestConfig The request override configuration.\n+     * @return The metric publisher to use.\n+     */\n+    public static Optional<MetricPublisher> resolvePublisher(SdkClientConfiguration clientConfig,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzc2MTQzNg=="}, "originalCommit": {"oid": "8f9280eedd6d776388dd2921f858259e1fd6b91b"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzc3NjM0Mw==", "bodyText": "In most cases, I'd agree on the use of optional as a method parameter, but I can't find a better way to handle it in this case.\nMetricUtils.resolvePublisher(clientConfig, overrideConfig.orElse(null)); seems a bit code smell to me.\nIdeally, we should create another overload which doesn't take a requestOverrideConfig, but it seems overkill here.\nMetricUtils.resolvePublisher(SdkClientConfiguration clientConfig, AwsRequestOverrideConfiguration overrideConfig)\nMetricUtils.resolvePublisher(SdkClientConfiguration clientConfig)", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1884#discussion_r437776343", "createdAt": "2020-06-09T23:25:30Z", "author": {"login": "zoewangg"}, "path": "core/sdk-core/src/main/java/software/amazon/awssdk/core/internal/util/MetricUtils.java", "diffHunk": "@@ -54,6 +56,19 @@ private MetricUtils() {\n         return Optional.ofNullable(clientConfig.option(METRIC_PUBLISHER));\n     }\n \n+    /**\n+     * Resolve the correct metric publisher to use. The publisher set on the request always takes precedence.\n+     *\n+     * @param clientConfig The client configuration.\n+     * @param requestConfig The request override configuration.\n+     * @return The metric publisher to use.\n+     */\n+    public static Optional<MetricPublisher> resolvePublisher(SdkClientConfiguration clientConfig,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzc2MTQzNg=="}, "originalCommit": {"oid": "8f9280eedd6d776388dd2921f858259e1fd6b91b"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODI4MDIzNg==", "bodyText": "Per offline discussion, changed to use nullable argument instead.", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1884#discussion_r438280236", "createdAt": "2020-06-10T17:08:04Z", "author": {"login": "zoewangg"}, "path": "core/sdk-core/src/main/java/software/amazon/awssdk/core/internal/util/MetricUtils.java", "diffHunk": "@@ -54,6 +56,19 @@ private MetricUtils() {\n         return Optional.ofNullable(clientConfig.option(METRIC_PUBLISHER));\n     }\n \n+    /**\n+     * Resolve the correct metric publisher to use. The publisher set on the request always takes precedence.\n+     *\n+     * @param clientConfig The client configuration.\n+     * @param requestConfig The request override configuration.\n+     * @return The metric publisher to use.\n+     */\n+    public static Optional<MetricPublisher> resolvePublisher(SdkClientConfiguration clientConfig,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzc2MTQzNg=="}, "originalCommit": {"oid": "8f9280eedd6d776388dd2921f858259e1fd6b91b"}, "originalPosition": 27}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4143, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}