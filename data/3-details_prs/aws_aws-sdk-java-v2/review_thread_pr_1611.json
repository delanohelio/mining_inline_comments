{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY2NTk2ODY0", "number": 1611, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QyMjozMDowMlrODaVT8w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QyMjozMDowMlrODaVT8w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4OTM4NzM5OnYy", "diffSide": "RIGHT", "path": "http-clients/netty-nio-client/src/main/java/software/amazon/awssdk/http/nio/netty/internal/AwaitCloseChannelPoolMap.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QyMjozMDowMlrOFhOxtQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QyMjo0NTozM1rOFhPHgw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDM4OTQyOQ==", "bodyText": "Does this break customers using already-resolved IPs, like 127.0.0.1?", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1611#discussion_r370389429", "createdAt": "2020-01-23T22:30:02Z", "author": {"login": "millems"}, "path": "http-clients/netty-nio-client/src/main/java/software/amazon/awssdk/http/nio/netty/internal/AwaitCloseChannelPoolMap.java", "diffHunk": "@@ -178,7 +178,7 @@ private Bootstrap createBootstrap(URI poolKey) {\n                         .channelFactory(sdkEventLoopGroup.channelFactory())\n                         .option(ChannelOption.CONNECT_TIMEOUT_MILLIS, configuration.connectTimeoutMillis())\n                         // TODO run some performance tests with and without this.\n-                        .remoteAddress(new InetSocketAddress(host, port));\n+                        .remoteAddress(InetSocketAddress.createUnresolved(host, port));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f256fc31cef7968deca90ba6833970c32a17331e"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDM5NTAxMQ==", "bodyText": "Verified this doesn't break IP's given as the host:\n        SdkAsyncHttpClient netty = NettyNioAsyncHttpClient.builder()\n                .build();\n\n        SdkHttpFullRequest sdkRequest = SdkHttpFullRequest.builder()\n                .method(SdkHttpMethod.GET)\n                .protocol(\"http\")\n                .host(\"52.216.179.173\") // s3.amazonaws.com\n                .port(80)\n                .encodedPath(\"/\")\n                .build();\n\n        AsyncExecuteRequest request = AsyncExecuteRequest.builder()\n                .requestContentPublisher(new EmptyPublisher())\n                .request(sdkRequest)\n                .responseHandler(new SdkAsyncHttpResponseHandler() {\n                    @Override\n                    public void onHeaders(SdkHttpResponse headers) {\n                        System.out.println(headers.headers());\n                    }\n\n                    @Override\n                    public void onStream(Publisher<ByteBuffer> stream) {\n                    }\n\n                    @Override\n                    public void onError(Throwable error) {\n                    }\n                })\n                .build();\n\n        netty.execute(request).join();\nOutput:\n{Content-Length=[0], Date=[Thu, 23 Jan 2020 22:44:57 GMT], Location=[https://aws.amazon.com/s3/], Server=[AmazonS3], x-amz-id-2=[vH+t2xruaRBuhxVk//+lRRmf9Nk55Hv8jht7/37/j+3hHyiXBCDngKZaG8bepYJrRjatmthNOLA=], x-amz-request-id=[1ACB290645C7D6E1]}", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1611#discussion_r370395011", "createdAt": "2020-01-23T22:45:33Z", "author": {"login": "dagnir"}, "path": "http-clients/netty-nio-client/src/main/java/software/amazon/awssdk/http/nio/netty/internal/AwaitCloseChannelPoolMap.java", "diffHunk": "@@ -178,7 +178,7 @@ private Bootstrap createBootstrap(URI poolKey) {\n                         .channelFactory(sdkEventLoopGroup.channelFactory())\n                         .option(ChannelOption.CONNECT_TIMEOUT_MILLIS, configuration.connectTimeoutMillis())\n                         // TODO run some performance tests with and without this.\n-                        .remoteAddress(new InetSocketAddress(host, port));\n+                        .remoteAddress(InetSocketAddress.createUnresolved(host, port));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDM4OTQyOQ=="}, "originalCommit": {"oid": "f256fc31cef7968deca90ba6833970c32a17331e"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4178, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}