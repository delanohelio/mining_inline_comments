{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQ1NDg1NzE5", "number": 2220, "title": "Fix for Issue #1684 Changes in handleTimeoutCausedException in Timeou\u2026", "bodyText": "\u2026tExceptionHandlingStage\n\nDescription\n\nSome of the Retry attempts which failed due to the API TimeOuts did not successfully retried but ended up with AbortedException.\nMotivation and Context\n\n\nRefer Issue 1684\nRoot Cause\n\nThis is intermittent timing issue.\n-Occurs in below scenario\n\n\nApiCallTimeoutTrackingStage Times out as its not getting the response. This Interrupts the thread.\nRequest is still in progress but in some places we check the Thread interrupt status it then fails because the Thread is interrupted and throws Aborted Exception which is then thrown with SDKCLient Exception\nNow ApiCallTimeoutTrackingStage's handleInterruptedException resets the interrupt flag.\nAnd when the TimeoutExceptionHandlingStage resumes and tries to translatePipelineException() it fails to handle the exception because thread Interrupt is RESET and its SdkClientException (Hadled ones are InterruptedException, AbortedException, IOException)\nThus fails to handle the Exception\n\nFix Options\n\n\nDo changes in ApiCallTimeoutTrackingStage's handleInterruptedException() not to clear the interrupt .\nCons :- However this fix doesnot looks feasible since as per ApiCallTimeoutTrackingStage it rightly resets the Interrupt of the current Thread as part of had handleInterruptedException\n\n\ntranslatePipelineException  of TimeoutExceptionHandlingStage should check (e.getCause instance of AbortedException)\nCons :- We are getting too specifics to AbortedException and assuming that all the APIs fail with AbortedException whenever the request is aborted due to TimeOuts. So this looks we might miss some other exceptions or new exception added in future/\n\n\nIn translatePipelineException check if the isCausedByApiCallAttemptTimeout and its SdkClientException\nPros : This handles all the cases also in handleTimeoutCausedException we have if clauses which does the filtering.\nCons : not aware.\n\n\nTesting\n\n\n\n\nAdded Junits\nInteg Test added and Integ Testing done\n\nScreenshots (if appropriate)\nTypes of changes\n\n\n Bug fix (non-breaking change which fixes an issue)\n New feature (non-breaking change which adds functionality)\n\nChecklist\n\n\n\n I have read the CONTRIBUTING document\n Local run of mvn install succeeds\n My code follows the code style of this project\n My change requires a change to the Javadoc documentation\n I have updated the Javadoc documentation accordingly\n I have read the README document\n I have added tests to cover my changes\n All new and existing tests passed\n A short description of the change has been added to the CHANGELOG\n My change is to implement 1.11 parity feature and I have updated LaunchChangelog\n\nLicense\n\n\n\n\n I confirm that this pull request can be released under the Apache 2 license", "createdAt": "2020-12-25T00:29:07Z", "url": "https://github.com/aws/aws-sdk-java-v2/pull/2220", "merged": true, "mergeCommit": {"oid": "885192e61faacc078425889e5d64ea25725487cb"}, "closed": true, "closedAt": "2021-01-04T18:42:58Z", "author": {"login": "joviegas"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdrXMRcAFqTU2MDIyMDU1MA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABds6MfBAH2gAyNTQ1NDg1NzE5OjUxODY4M2UyZGM5MTlkM2JkMmMyNTI4YzY2MWJkYTdmYWFiYjZjN2Q=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYwMjIwNTUw", "url": "https://github.com/aws/aws-sdk-java-v2/pull/2220#pullrequestreview-560220550", "createdAt": "2020-12-30T22:37:11Z", "commit": {"oid": "209764f246a19185a65e51dc6dd60c1b9d110ba0"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMFQyMjozNzoxMVrOIM2fFg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMFQyMjozNzoxMVrOIM2fFg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDM0NjUxOA==", "bodyText": "We check isCausedByApiCallAttemptTimeout but can this be caused by the API call timer as well?", "url": "https://github.com/aws/aws-sdk-java-v2/pull/2220#discussion_r550346518", "createdAt": "2020-12-30T22:37:11Z", "author": {"login": "dagnir"}, "path": "core/sdk-core/src/main/java/software/amazon/awssdk/core/internal/http/pipeline/stages/TimeoutExceptionHandlingStage.java", "diffHunk": "@@ -90,7 +91,8 @@ public TimeoutExceptionHandlingStage(HttpClientDependencies dependencies, Reques\n      */\n     private Exception translatePipelineException(RequestExecutionContext context, Exception e) {\n         if (e instanceof InterruptedException || e instanceof IOException ||\n-            e instanceof AbortedException || Thread.currentThread().isInterrupted()) {\n+                e instanceof AbortedException || Thread.currentThread().isInterrupted()\n+                || (e instanceof SdkClientException && isCausedByApiCallAttemptTimeout(context))) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "209764f246a19185a65e51dc6dd60c1b9d110ba0"}, "originalPosition": 14}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYwNTM0ODU0", "url": "https://github.com/aws/aws-sdk-java-v2/pull/2220#pullrequestreview-560534854", "createdAt": "2020-12-31T18:58:12Z", "commit": {"oid": "209764f246a19185a65e51dc6dd60c1b9d110ba0"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "518683e2dc919d3bd2c2528c661bda7faabb6c7d", "author": {"user": null}, "url": "https://github.com/aws/aws-sdk-java-v2/commit/518683e2dc919d3bd2c2528c661bda7faabb6c7d", "committedDate": "2021-01-04T17:58:02Z", "message": "Fix for Issue #1684 Changes in handleTimeoutCausedException in TimeoutExceptionHandlingStage"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2405, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}