{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk5OTQ4MjAz", "number": 1769, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxOTozMjozOVrODvtdxA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxOTozNzoyOVrODvtjzg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxMzU0NTY0OnYy", "diffSide": "RIGHT", "path": "http-clients/aws-crt-client/src/it/java/software/amazon/awssdk/http/crt/AwsCrtClientKmsIntegrationTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxOTozMjozOVrOGCS9Vw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxOTo0OTozMlrOGCTg1Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTA2MDk1MQ==", "bodyText": "I\"m not sure what the purposes of these changes is. Care to enlighten me?", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1769#discussion_r405060951", "createdAt": "2020-04-07T19:32:39Z", "author": {"login": "JonathanHenson"}, "path": "http-clients/aws-crt-client/src/it/java/software/amazon/awssdk/http/crt/AwsCrtClientKmsIntegrationTest.java", "diffHunk": "@@ -43,9 +47,13 @@ public void setup() {\n                 continue;\n             }\n \n+            int numThreads = 1;\n+            eventLoopGroup = new EventLoopGroup(numThreads);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "45ceea3cbe11210295353cdefc9984fca378bfac"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTA3MDAzNw==", "bodyText": "The client doesn't create its own event loop group anymore, as people felt it was a bit awkward for them to create such a heavy object.  Because of that, we don't have the .eventLoopSize(1) builder change that we used to have on the client, and this is meant to be the replacement of that.  (The numThreads variable is just meant to be more explicit about what's being passed in, and could arguably be taken out or made final.)", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1769#discussion_r405070037", "createdAt": "2020-04-07T19:49:32Z", "author": {"login": "rccarper"}, "path": "http-clients/aws-crt-client/src/it/java/software/amazon/awssdk/http/crt/AwsCrtClientKmsIntegrationTest.java", "diffHunk": "@@ -43,9 +47,13 @@ public void setup() {\n                 continue;\n             }\n \n+            int numThreads = 1;\n+            eventLoopGroup = new EventLoopGroup(numThreads);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTA2MDk1MQ=="}, "originalCommit": {"oid": "45ceea3cbe11210295353cdefc9984fca378bfac"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxMzU0OTM5OnYy", "diffSide": "RIGHT", "path": "http-clients/aws-crt-client/src/main/java/software/amazon/awssdk/http/crt/AwsCrtAsyncHttpClient.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxOTozMzo0MlrOGCS_jA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxOTo1NjoxNFrOGCTv4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTA2MTUxNg==", "bodyText": "create is a wierd verb for a builder pattern", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1769#discussion_r405061516", "createdAt": "2020-04-07T19:33:42Z", "author": {"login": "JonathanHenson"}, "path": "http-clients/aws-crt-client/src/main/java/software/amazon/awssdk/http/crt/AwsCrtAsyncHttpClient.java", "diffHunk": "@@ -135,9 +146,16 @@ private HttpClientConnectionManager createConnectionPool(URI uri) {\n         Validate.notNull(uri, \"URI must not be null\");\n         log.debug(() -> \"Creating ConnectionPool for: URI:\" + uri + \", MaxConns: \" + maxConnectionsPerEndpoint);\n \n-        return new HttpClientConnectionManager(bootstrap, socketOptions, tlsContext, uri,\n-                                                HttpClientConnectionManager.DEFAULT_MAX_BUFFER_SIZE, windowSize,\n-                                                maxConnectionsPerEndpoint);\n+        HttpClientConnectionManagerOptions options = new HttpClientConnectionManagerOptions()\n+                .withClientBootstrap(bootstrap)\n+                .withSocketOptions(socketOptions)\n+                .withTlsContext(tlsContext)\n+                .withUri(uri)\n+                .withWindowSize(windowSize)\n+                .withMaxConnections(maxConnectionsPerEndpoint)\n+                .withManualWindowManagement(manualWindowManagement);\n+\n+        return HttpClientConnectionManager.create(options);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "45ceea3cbe11210295353cdefc9984fca378bfac"}, "originalPosition": 75}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTA3Mzg4OA==", "bodyText": "Wouldn't that be a change we would have to make on the CRT side?", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1769#discussion_r405073888", "createdAt": "2020-04-07T19:56:14Z", "author": {"login": "rccarper"}, "path": "http-clients/aws-crt-client/src/main/java/software/amazon/awssdk/http/crt/AwsCrtAsyncHttpClient.java", "diffHunk": "@@ -135,9 +146,16 @@ private HttpClientConnectionManager createConnectionPool(URI uri) {\n         Validate.notNull(uri, \"URI must not be null\");\n         log.debug(() -> \"Creating ConnectionPool for: URI:\" + uri + \", MaxConns: \" + maxConnectionsPerEndpoint);\n \n-        return new HttpClientConnectionManager(bootstrap, socketOptions, tlsContext, uri,\n-                                                HttpClientConnectionManager.DEFAULT_MAX_BUFFER_SIZE, windowSize,\n-                                                maxConnectionsPerEndpoint);\n+        HttpClientConnectionManagerOptions options = new HttpClientConnectionManagerOptions()\n+                .withClientBootstrap(bootstrap)\n+                .withSocketOptions(socketOptions)\n+                .withTlsContext(tlsContext)\n+                .withUri(uri)\n+                .withWindowSize(windowSize)\n+                .withMaxConnections(maxConnectionsPerEndpoint)\n+                .withManualWindowManagement(manualWindowManagement);\n+\n+        return HttpClientConnectionManager.create(options);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTA2MTUxNg=="}, "originalCommit": {"oid": "45ceea3cbe11210295353cdefc9984fca378bfac"}, "originalPosition": 75}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxMzU2MTEwOnYy", "diffSide": "RIGHT", "path": "http-clients/aws-crt-client/src/main/java/software/amazon/awssdk/http/crt/AwsCrtAsyncHttpClient.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxOTozNzoyOVrOGCTHIA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxOTo1Njo0OVrOGCTxPg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTA2MzQ1Ng==", "bodyText": "make sure to call out if this is ever set to true the user is responsible for calling updateWindow on the stream object.", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1769#discussion_r405063456", "createdAt": "2020-04-07T19:37:29Z", "author": {"login": "JonathanHenson"}, "path": "http-clients/aws-crt-client/src/main/java/software/amazon/awssdk/http/crt/AwsCrtAsyncHttpClient.java", "diffHunk": "@@ -264,36 +281,50 @@ public void close() {\n      */\n     public interface Builder extends SdkAsyncHttpClient.Builder<AwsCrtAsyncHttpClient.Builder> {\n \n-        /**\n-         * The number of Threads to use in the EventLoop.\n-         * @param eventLoopSize The number of Threads to use in the EventLoop.\n-         * @return the builder of the method chaining.\n-         */\n-        Builder eventLoopSize(int eventLoopSize);\n-\n         /**\n          * The AWS CRT TlsCipherPreference to use for this Client\n          * @param tlsCipherPreference The AWS Common Runtime TlsCipherPreference\n-         * @return the builder of the method chaining.\n+         * @return The builder of the method chaining.\n          */\n         Builder tlsCipherPreference(TlsCipherPreference tlsCipherPreference);\n \n         /**\n          * Whether or not to Verify the Peer's TLS Certificate Chain.\n          * @param verifyPeer true if the Certificate Chain should be validated, false if validation should be skipped.\n-         * @return the builder of the method chaining.\n+         * @return The builder of the method chaining.\n          */\n         Builder verifyPeer(boolean verifyPeer);\n \n+        /**\n+         * If set to true, then the TCP read back pressure mechanism will be enabled.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "45ceea3cbe11210295353cdefc9984fca378bfac"}, "originalPosition": 146}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTA2NDgzNQ==", "bodyText": "sorry, incrementWindow()", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1769#discussion_r405064835", "createdAt": "2020-04-07T19:39:54Z", "author": {"login": "JonathanHenson"}, "path": "http-clients/aws-crt-client/src/main/java/software/amazon/awssdk/http/crt/AwsCrtAsyncHttpClient.java", "diffHunk": "@@ -264,36 +281,50 @@ public void close() {\n      */\n     public interface Builder extends SdkAsyncHttpClient.Builder<AwsCrtAsyncHttpClient.Builder> {\n \n-        /**\n-         * The number of Threads to use in the EventLoop.\n-         * @param eventLoopSize The number of Threads to use in the EventLoop.\n-         * @return the builder of the method chaining.\n-         */\n-        Builder eventLoopSize(int eventLoopSize);\n-\n         /**\n          * The AWS CRT TlsCipherPreference to use for this Client\n          * @param tlsCipherPreference The AWS Common Runtime TlsCipherPreference\n-         * @return the builder of the method chaining.\n+         * @return The builder of the method chaining.\n          */\n         Builder tlsCipherPreference(TlsCipherPreference tlsCipherPreference);\n \n         /**\n          * Whether or not to Verify the Peer's TLS Certificate Chain.\n          * @param verifyPeer true if the Certificate Chain should be validated, false if validation should be skipped.\n-         * @return the builder of the method chaining.\n+         * @return The builder of the method chaining.\n          */\n         Builder verifyPeer(boolean verifyPeer);\n \n+        /**\n+         * If set to true, then the TCP read back pressure mechanism will be enabled.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTA2MzQ1Ng=="}, "originalCommit": {"oid": "45ceea3cbe11210295353cdefc9984fca378bfac"}, "originalPosition": 146}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTA3NDIzOA==", "bodyText": "I'll update the comment!", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1769#discussion_r405074238", "createdAt": "2020-04-07T19:56:49Z", "author": {"login": "rccarper"}, "path": "http-clients/aws-crt-client/src/main/java/software/amazon/awssdk/http/crt/AwsCrtAsyncHttpClient.java", "diffHunk": "@@ -264,36 +281,50 @@ public void close() {\n      */\n     public interface Builder extends SdkAsyncHttpClient.Builder<AwsCrtAsyncHttpClient.Builder> {\n \n-        /**\n-         * The number of Threads to use in the EventLoop.\n-         * @param eventLoopSize The number of Threads to use in the EventLoop.\n-         * @return the builder of the method chaining.\n-         */\n-        Builder eventLoopSize(int eventLoopSize);\n-\n         /**\n          * The AWS CRT TlsCipherPreference to use for this Client\n          * @param tlsCipherPreference The AWS Common Runtime TlsCipherPreference\n-         * @return the builder of the method chaining.\n+         * @return The builder of the method chaining.\n          */\n         Builder tlsCipherPreference(TlsCipherPreference tlsCipherPreference);\n \n         /**\n          * Whether or not to Verify the Peer's TLS Certificate Chain.\n          * @param verifyPeer true if the Certificate Chain should be validated, false if validation should be skipped.\n-         * @return the builder of the method chaining.\n+         * @return The builder of the method chaining.\n          */\n         Builder verifyPeer(boolean verifyPeer);\n \n+        /**\n+         * If set to true, then the TCP read back pressure mechanism will be enabled.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTA2MzQ1Ng=="}, "originalCommit": {"oid": "45ceea3cbe11210295353cdefc9984fca378bfac"}, "originalPosition": 146}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4073, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}