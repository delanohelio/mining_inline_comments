{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk5NDExMzk0", "number": 663, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQwNjo0NjozNFrOEreCoA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwOToxOTozN1rOEtZN3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0MDE2NDE2OnYy", "diffSide": "RIGHT", "path": "opensrp-app/src/main/java/org/smartregister/sync/helper/LocationServiceHelper.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQwNjo0NjozNFrOHeQIkw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQwNzoxNjoyOVrOHeQ-QA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTQ4MzY2Nw==", "bodyText": "Could we use StringUtils.isNotBlank(parentId) instead?", "url": "https://github.com/opensrp/opensrp-client-core/pull/663#discussion_r501483667", "createdAt": "2020-10-08T06:46:34Z", "author": {"login": "vincent-karuri"}, "path": "opensrp-app/src/main/java/org/smartregister/sync/helper/LocationServiceHelper.java", "diffHunk": "@@ -405,6 +411,9 @@ public void fetchAllLocations() {\n             JSONObject request = new JSONObject();\n             request.put(IS_JURISDICTION, true);\n             request.put(AllConstants.SERVER_VERSION, 0);\n+            if (parentId != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b12ee3634e43a849c8a1bc972f30d39e852441d0"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTQ5NzQwOA==", "bodyText": "fixed.", "url": "https://github.com/opensrp/opensrp-client-core/pull/663#discussion_r501497408", "createdAt": "2020-10-08T07:16:29Z", "author": {"login": "owais-vd"}, "path": "opensrp-app/src/main/java/org/smartregister/sync/helper/LocationServiceHelper.java", "diffHunk": "@@ -405,6 +411,9 @@ public void fetchAllLocations() {\n             JSONObject request = new JSONObject();\n             request.put(IS_JURISDICTION, true);\n             request.put(AllConstants.SERVER_VERSION, 0);\n+            if (parentId != null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTQ4MzY2Nw=="}, "originalCommit": {"oid": "b12ee3634e43a849c8a1bc972f30d39e852441d0"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0MDE2NTYwOnYy", "diffSide": "RIGHT", "path": "opensrp-app/src/main/java/org/smartregister/sync/helper/LocationServiceHelper.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQwNjo0NzowNlrOHeQJdw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQwNjo0NzowNlrOHeQJdw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTQ4Mzg5NQ==", "bodyText": "Please fix the typo here fetchAllLocation to fetchAllLocations.", "url": "https://github.com/opensrp/opensrp-client-core/pull/663#discussion_r501483895", "createdAt": "2020-10-08T06:47:06Z", "author": {"login": "vincent-karuri"}, "path": "opensrp-app/src/main/java/org/smartregister/sync/helper/LocationServiceHelper.java", "diffHunk": "@@ -394,6 +395,11 @@ public String getFormattedBaseUrl() {\n     }\n \n     public void fetchAllLocations() {\n+        fetchAllLocation(null);\n+    }\n+\n+    public void fetchAllLocation(@Nullable String parentId) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b12ee3634e43a849c8a1bc972f30d39e852441d0"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2MDMzOTY5OnYy", "diffSide": "RIGHT", "path": "opensrp-app/src/test/java/org/smartregister/sync/helper/LocationServiceHelperTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwOToxODoxOFrOHhJ80w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwOToxODoxOFrOHhJ80w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDUyODA4Mw==", "bodyText": "You can use stringArgumentCaptor.getValue() here and in the other places.", "url": "https://github.com/opensrp/opensrp-client-core/pull/663#discussion_r504528083", "createdAt": "2020-10-14T09:18:18Z", "author": {"login": "vincent-karuri"}, "path": "opensrp-app/src/test/java/org/smartregister/sync/helper/LocationServiceHelperTest.java", "diffHunk": "@@ -274,4 +290,70 @@ public void testFetchAllLocations() {\n         String requestString = stringArgumentCaptor.getAllValues().get(1);\n         assertEquals(\"{\\\"is_jurisdiction\\\":true,\\\"serverVersion\\\":0}\", requestString);\n     }\n+\n+    @Test\n+    public void testGetFormattedBaseUrlStripsEndingSlashDelimiter() {\n+        String url = \"https://base.url/\";\n+\n+        ReflectionHelpers.setStaticField(CoreLibrary.class, \"instance\", coreLibrary);\n+        Mockito.doReturn(context).when(coreLibrary).context();\n+        Mockito.doReturn(configuration).when(context).configuration();\n+        Mockito.doReturn(url).when(configuration).dristhiBaseURL();\n+\n+        LocationServiceHelper spyLocationServiceHelper = Mockito.spy(locationServiceHelper);\n+        String baseUrl = spyLocationServiceHelper.getFormattedBaseUrl();\n+        assertNotNull(baseUrl);\n+        assertEquals(url.substring(0, url.length() - 1), baseUrl);\n+    }\n+\n+    @Test\n+    public void testGetLocationHierarchyReturnsNullWhenRequestFails() {\n+        String parentLocation = \"1c7ba751-35e8-4b46-9e53-3cb8fd193697\";\n+\n+        Mockito.doReturn(new Response<>(ResponseStatus.failure, \"\"))\n+                .when(httpAgent).fetch(stringArgumentCaptor.capture());\n+\n+        LocationTree tree = locationServiceHelper.getLocationHierarchy(parentLocation);\n+\n+        String expectedUrl = MessageFormat.format(\"{0}{1}{2}\", locationServiceHelper.getFormattedBaseUrl(), LocationServiceHelper.LOCATION_HIERARCHY_URL, parentLocation);\n+        assertEquals(expectedUrl, stringArgumentCaptor.getAllValues().get(0));\n+        assertNull(tree);\n+    }\n+\n+    @Test\n+    public void testGetLocationHierarchyReturnsNullForInvalidParentLocationId() {\n+        String parentLocation = \"1c7ba751-35e8-4b46-9e53-3cb8fd193697\";\n+\n+        Mockito.doReturn(new Response<>(ResponseStatus.success, \"{}\"))\n+                .when(httpAgent).fetch(stringArgumentCaptor.capture());\n+\n+        LocationTree tree = locationServiceHelper.getLocationHierarchy(parentLocation);\n+\n+        String expectedUrl = MessageFormat.format(\"{0}{1}{2}\", locationServiceHelper.getFormattedBaseUrl(), LocationServiceHelper.LOCATION_HIERARCHY_URL, parentLocation);\n+        assertEquals(expectedUrl, stringArgumentCaptor.getAllValues().get(0));\n+        assertNotNull(tree);\n+        assertEquals(0, tree.getLocationsHierarchy().size());\n+    }\n+\n+    @Test\n+    public void testGetLocationHierarchyReturnsTreeForValidParentLocationId() {\n+        String parentLocation = \"1c7ba751-35e8-4b46-9e53-3cb8fd193697\";\n+        String hierarchy = \"{\\\"locationsHierarchy\\\":{\\\"map\\\":{\\\"1c7ba751-35e8-4b46-9e53-3cb8fd193697\\\":{\\\"id\\\":\\\"1c7ba751-35e8-4b46-9e53-3cb8fd193697\\\",\\\"label\\\":\\\"Indonesia Division 1\\\",\\\"node\\\":{\\\"locationId\\\":\\\"1c7ba751-35e8-4b46-9e53-3cb8fd193697\\\",\\\"name\\\":\\\"Indonesia Division 1\\\",\\\"attributes\\\":{\\\"geographicLevel\\\":0},\\\"voided\\\":false},\\\"children\\\":{\\\"2c7ba751-35e8-4b46-9e53-3cb8fd193697\\\":{\\\"id\\\":\\\"2c7ba751-35e8-4b46-9e53-3cb8fd193697\\\",\\\"label\\\":\\\"Indonesia Location 1\\\",\\\"node\\\":{\\\"locationId\\\":\\\"2c7ba751-35e8-4b46-9e53-3cb8fd193697\\\",\\\"name\\\":\\\"Indonesia Location 1\\\",\\\"parentLocation\\\":{\\\"locationId\\\":\\\"1c7ba751-35e8-4b46-9e53-3cb8fd193697\\\",\\\"voided\\\":false},\\\"attributes\\\":{\\\"geographicLevel\\\":0},\\\"voided\\\":false},\\\"parent\\\":\\\"1c7ba751-35e8-4b46-9e53-3cb8fd193697\\\"},\\\"3c7ba751-35e8-4b46-9e53-3cb8fd193697\\\":{\\\"id\\\":\\\"3c7ba751-35e8-4b46-9e53-3cb8fd193697\\\",\\\"label\\\":\\\"Indonesia Location 2\\\",\\\"node\\\":{\\\"locationId\\\":\\\"3c7ba751-35e8-4b46-9e53-3cb8fd193697\\\",\\\"name\\\":\\\"Indonesia Location 2\\\",\\\"parentLocation\\\":{\\\"locationId\\\":\\\"1c7ba751-35e8-4b46-9e53-3cb8fd193697\\\",\\\"voided\\\":false},\\\"attributes\\\":{\\\"geographicLevel\\\":0},\\\"voided\\\":false},\\\"parent\\\":\\\"1c7ba751-35e8-4b46-9e53-3cb8fd193697\\\"},\\\"4c7ba751-35e8-4b46-9e53-3cb8fd193697\\\":{\\\"id\\\":\\\"4c7ba751-35e8-4b46-9e53-3cb8fd193697\\\",\\\"label\\\":\\\"Indonesia Location 3\\\",\\\"node\\\":{\\\"locationId\\\":\\\"4c7ba751-35e8-4b46-9e53-3cb8fd193697\\\",\\\"name\\\":\\\"Indonesia Location 3\\\",\\\"parentLocation\\\":{\\\"locationId\\\":\\\"1c7ba751-35e8-4b46-9e53-3cb8fd193697\\\",\\\"voided\\\":false},\\\"attributes\\\":{\\\"geographicLevel\\\":0},\\\"voided\\\":false},\\\"parent\\\":\\\"1c7ba751-35e8-4b46-9e53-3cb8fd193697\\\"}}}},\\\"parentChildren\\\":{\\\"1c7ba751-35e8-4b46-9e53-3cb8fd193697\\\":[\\\"2c7ba751-35e8-4b46-9e53-3cb8fd193697\\\",\\\"3c7ba751-35e8-4b46-9e53-3cb8fd193697\\\",\\\"4c7ba751-35e8-4b46-9e53-3cb8fd193697\\\"]}}}\";\n+\n+        Mockito.doReturn(new Response<>(ResponseStatus.success, hierarchy))\n+                .when(httpAgent).fetch(stringArgumentCaptor.capture());\n+\n+        LocationTree tree = locationServiceHelper.getLocationHierarchy(parentLocation);\n+\n+        String expectedUrl = MessageFormat.format(\"{0}{1}{2}\", locationServiceHelper.getFormattedBaseUrl(), LocationServiceHelper.LOCATION_HIERARCHY_URL, parentLocation);\n+        assertEquals(expectedUrl, stringArgumentCaptor.getAllValues().get(0));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "53469448b1469aa4fe716d01ebfa4ad81062f9be"}, "originalPosition": 118}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2MDM0NTI1OnYy", "diffSide": "RIGHT", "path": "opensrp-app/src/test/java/org/smartregister/sync/helper/LocationServiceHelperTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwOToxOTozN1rOHhKAPw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwOToyNDowNVrOHhKL_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDUyODk1OQ==", "bodyText": "Doesn't seem like the method returns null for invalid parent location id? https://github.com/OpenSRP/opensrp-client-core/pull/663/files#diff-7d2c1e8994b4bf118233996655641ad90f6f71d2f8145fcea0e1bf67136a37e7R334", "url": "https://github.com/opensrp/opensrp-client-core/pull/663#discussion_r504528959", "createdAt": "2020-10-14T09:19:37Z", "author": {"login": "vincent-karuri"}, "path": "opensrp-app/src/test/java/org/smartregister/sync/helper/LocationServiceHelperTest.java", "diffHunk": "@@ -274,4 +290,70 @@ public void testFetchAllLocations() {\n         String requestString = stringArgumentCaptor.getAllValues().get(1);\n         assertEquals(\"{\\\"is_jurisdiction\\\":true,\\\"serverVersion\\\":0}\", requestString);\n     }\n+\n+    @Test\n+    public void testGetFormattedBaseUrlStripsEndingSlashDelimiter() {\n+        String url = \"https://base.url/\";\n+\n+        ReflectionHelpers.setStaticField(CoreLibrary.class, \"instance\", coreLibrary);\n+        Mockito.doReturn(context).when(coreLibrary).context();\n+        Mockito.doReturn(configuration).when(context).configuration();\n+        Mockito.doReturn(url).when(configuration).dristhiBaseURL();\n+\n+        LocationServiceHelper spyLocationServiceHelper = Mockito.spy(locationServiceHelper);\n+        String baseUrl = spyLocationServiceHelper.getFormattedBaseUrl();\n+        assertNotNull(baseUrl);\n+        assertEquals(url.substring(0, url.length() - 1), baseUrl);\n+    }\n+\n+    @Test\n+    public void testGetLocationHierarchyReturnsNullWhenRequestFails() {\n+        String parentLocation = \"1c7ba751-35e8-4b46-9e53-3cb8fd193697\";\n+\n+        Mockito.doReturn(new Response<>(ResponseStatus.failure, \"\"))\n+                .when(httpAgent).fetch(stringArgumentCaptor.capture());\n+\n+        LocationTree tree = locationServiceHelper.getLocationHierarchy(parentLocation);\n+\n+        String expectedUrl = MessageFormat.format(\"{0}{1}{2}\", locationServiceHelper.getFormattedBaseUrl(), LocationServiceHelper.LOCATION_HIERARCHY_URL, parentLocation);\n+        assertEquals(expectedUrl, stringArgumentCaptor.getAllValues().get(0));\n+        assertNull(tree);\n+    }\n+\n+    @Test\n+    public void testGetLocationHierarchyReturnsNullForInvalidParentLocationId() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "53469448b1469aa4fe716d01ebfa4ad81062f9be"}, "originalPosition": 93}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDUzMTk2Ng==", "bodyText": "Updated test method name to reflect the actual test", "url": "https://github.com/opensrp/opensrp-client-core/pull/663#discussion_r504531966", "createdAt": "2020-10-14T09:24:05Z", "author": {"login": "qiarie"}, "path": "opensrp-app/src/test/java/org/smartregister/sync/helper/LocationServiceHelperTest.java", "diffHunk": "@@ -274,4 +290,70 @@ public void testFetchAllLocations() {\n         String requestString = stringArgumentCaptor.getAllValues().get(1);\n         assertEquals(\"{\\\"is_jurisdiction\\\":true,\\\"serverVersion\\\":0}\", requestString);\n     }\n+\n+    @Test\n+    public void testGetFormattedBaseUrlStripsEndingSlashDelimiter() {\n+        String url = \"https://base.url/\";\n+\n+        ReflectionHelpers.setStaticField(CoreLibrary.class, \"instance\", coreLibrary);\n+        Mockito.doReturn(context).when(coreLibrary).context();\n+        Mockito.doReturn(configuration).when(context).configuration();\n+        Mockito.doReturn(url).when(configuration).dristhiBaseURL();\n+\n+        LocationServiceHelper spyLocationServiceHelper = Mockito.spy(locationServiceHelper);\n+        String baseUrl = spyLocationServiceHelper.getFormattedBaseUrl();\n+        assertNotNull(baseUrl);\n+        assertEquals(url.substring(0, url.length() - 1), baseUrl);\n+    }\n+\n+    @Test\n+    public void testGetLocationHierarchyReturnsNullWhenRequestFails() {\n+        String parentLocation = \"1c7ba751-35e8-4b46-9e53-3cb8fd193697\";\n+\n+        Mockito.doReturn(new Response<>(ResponseStatus.failure, \"\"))\n+                .when(httpAgent).fetch(stringArgumentCaptor.capture());\n+\n+        LocationTree tree = locationServiceHelper.getLocationHierarchy(parentLocation);\n+\n+        String expectedUrl = MessageFormat.format(\"{0}{1}{2}\", locationServiceHelper.getFormattedBaseUrl(), LocationServiceHelper.LOCATION_HIERARCHY_URL, parentLocation);\n+        assertEquals(expectedUrl, stringArgumentCaptor.getAllValues().get(0));\n+        assertNull(tree);\n+    }\n+\n+    @Test\n+    public void testGetLocationHierarchyReturnsNullForInvalidParentLocationId() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDUyODk1OQ=="}, "originalCommit": {"oid": "53469448b1469aa4fe716d01ebfa4ad81062f9be"}, "originalPosition": 93}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2114, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}