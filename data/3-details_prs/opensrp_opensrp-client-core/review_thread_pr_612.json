{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU3NjI0NTgw", "number": 612, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxMTo1NTozMlrOEYBOOQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxMTo1NTo0MFrOEYBOXg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzNjIxMzA1OnYy", "diffSide": "RIGHT", "path": "opensrp-app/src/test/java/org/smartregister/sync/intent/SyncIntentServiceTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxMTo1NTozMlrOHAIL-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxMTo1NTozMlrOHAIL-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTg5NjE4Ng==", "bodyText": "call pullECFromServer() since it's protected. Otherwise the rest is OK", "url": "https://github.com/opensrp/opensrp-client-core/pull/612#discussion_r469896186", "createdAt": "2020-08-13T11:55:32Z", "author": {"login": "ekigamba"}, "path": "opensrp-app/src/test/java/org/smartregister/sync/intent/SyncIntentServiceTest.java", "diffHunk": "@@ -84,4 +85,64 @@ public void testHandleSyncCallsLogoutUserIfHasValidAuthorizationIsFalse() {\n         verify(syncUtils).logoutUser();\n     }\n \n+    @Test\n+    public void testHandleSyncCallsLogOutUserIfAppVersionIsNotAllowedAnd() {\n+        syncIntentService = spy(syncIntentService);\n+        Whitebox.setInternalState(syncIntentService, \"syncUtils\", syncUtils);\n+        when(syncUtils.verifyAuthorization()).thenReturn(true);\n+        when(syncConfiguration.disableSyncToServerIfUserIsDisabled()).thenReturn(true);\n+        syncIntentService.handleSync();\n+        verify(syncUtils).logoutUser();\n+    }\n+\n+    @Test\n+    public void testHandleSyncCallsPullECFromServerIfHasValidAuthorizationAndIsAppVersionAllowed() throws PackageManager.NameNotFoundException {\n+        syncIntentService = spy(syncIntentService);\n+        Whitebox.setInternalState(syncIntentService, \"syncUtils\", syncUtils);\n+        when(syncUtils.verifyAuthorization()).thenReturn(true);\n+        when(syncUtils.isAppVersionAllowed()).thenReturn(true);\n+        when(syncConfiguration.disableSyncToServerIfUserIsDisabled()).thenReturn(true);\n+        syncIntentService.handleSync();\n+        verify(syncIntentService).pullECFromServer();\n+    }\n+\n+    @Test\n+    public void testPullEcFromServerWhenSyncFilterParamIsNull() throws PackageManager.NameNotFoundException {\n+        initMocksForPullECFromServer();\n+        syncIntentService.handleSync();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "78ab3493af06b54ae8093a3d7247dc30c00bd027"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzNjIxMzQyOnYy", "diffSide": "RIGHT", "path": "opensrp-app/src/test/java/org/smartregister/sync/intent/SyncIntentServiceTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxMTo1NTo0MFrOHAIMMw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxMTo1NTo0MFrOHAIMMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTg5NjI0Mw==", "bodyText": "call pullECFromServer() since it's protected. Otherwise the rest is OK", "url": "https://github.com/opensrp/opensrp-client-core/pull/612#discussion_r469896243", "createdAt": "2020-08-13T11:55:40Z", "author": {"login": "ekigamba"}, "path": "opensrp-app/src/test/java/org/smartregister/sync/intent/SyncIntentServiceTest.java", "diffHunk": "@@ -84,4 +85,64 @@ public void testHandleSyncCallsLogoutUserIfHasValidAuthorizationIsFalse() {\n         verify(syncUtils).logoutUser();\n     }\n \n+    @Test\n+    public void testHandleSyncCallsLogOutUserIfAppVersionIsNotAllowedAnd() {\n+        syncIntentService = spy(syncIntentService);\n+        Whitebox.setInternalState(syncIntentService, \"syncUtils\", syncUtils);\n+        when(syncUtils.verifyAuthorization()).thenReturn(true);\n+        when(syncConfiguration.disableSyncToServerIfUserIsDisabled()).thenReturn(true);\n+        syncIntentService.handleSync();\n+        verify(syncUtils).logoutUser();\n+    }\n+\n+    @Test\n+    public void testHandleSyncCallsPullECFromServerIfHasValidAuthorizationAndIsAppVersionAllowed() throws PackageManager.NameNotFoundException {\n+        syncIntentService = spy(syncIntentService);\n+        Whitebox.setInternalState(syncIntentService, \"syncUtils\", syncUtils);\n+        when(syncUtils.verifyAuthorization()).thenReturn(true);\n+        when(syncUtils.isAppVersionAllowed()).thenReturn(true);\n+        when(syncConfiguration.disableSyncToServerIfUserIsDisabled()).thenReturn(true);\n+        syncIntentService.handleSync();\n+        verify(syncIntentService).pullECFromServer();\n+    }\n+\n+    @Test\n+    public void testPullEcFromServerWhenSyncFilterParamIsNull() throws PackageManager.NameNotFoundException {\n+        initMocksForPullECFromServer();\n+        syncIntentService.handleSync();\n+        verify(syncIntentService, times(2)).sendBroadcast(intentArgumentCaptor.capture());\n+        // sync fetch started broadcast sent\n+        assertEquals(SyncStatusBroadcastReceiver.ACTION_SYNC_STATUS, intentArgumentCaptor.getAllValues().get(0).getAction());\n+        assertEquals(FetchStatus.fetchStarted, intentArgumentCaptor.getAllValues().get(0).getSerializableExtra(SyncStatusBroadcastReceiver.EXTRA_FETCH_STATUS));\n+\n+        // sync fetch failed broadcast sent\n+        assertEquals(SyncStatusBroadcastReceiver.ACTION_SYNC_STATUS, intentArgumentCaptor.getAllValues().get(1).getAction());\n+        assertEquals(FetchStatus.fetchedFailed, intentArgumentCaptor.getAllValues().get(1).getSerializableExtra(SyncStatusBroadcastReceiver.EXTRA_FETCH_STATUS));\n+\n+    }\n+\n+    @Test\n+    public void testPullEcFromServerWhenSyncFilterValueIsNull() throws PackageManager.NameNotFoundException {\n+        initMocksForPullECFromServer();\n+        when(syncConfiguration.getSyncFilterParam()).thenReturn(SyncFilter.LOCATION);\n+        syncIntentService.handleSync();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "78ab3493af06b54ae8093a3d7247dc30c00bd027"}, "originalPosition": 62}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2095, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}