{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDYyMDg5MTk4", "number": 617, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QxMToxNToxMVrOEUkKgg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QxMToyMDowMlrOEUkPxQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5OTk5NDkwOnYy", "diffSide": "RIGHT", "path": "opensrp-app/src/main/java/org/smartregister/repository/P2PSenderTransferDao.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QxMToxNToxMVrOG61m5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QxMToxNToxMVrOG61m5A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDM0ODkwMA==", "bodyText": "refactor so that CoreLibrary.getInstance().context().hasForeignEvents() is at the start", "url": "https://github.com/opensrp/opensrp-client-core/pull/617#discussion_r464348900", "createdAt": "2020-08-03T11:15:11Z", "author": {"login": "githengi"}, "path": "opensrp-app/src/main/java/org/smartregister/repository/P2PSenderTransferDao.java", "diffHunk": "@@ -53,10 +53,10 @@ public JsonData getJsonData(@NonNull DataType dataType, long l, int i) {\n         } else if (dataType.getName().equals(task.getName())) {\n             return CoreLibrary.getInstance().context()\n                     .getTaskRepository().getTasks(l, i);\n-        } else if (dataType.getName().equals(foreignClient.getName())) {\n+        } else if (dataType.getName().equals(foreignClient.getName()) && CoreLibrary.getInstance().context().hasForeignEvents()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "90a02ae92d5a136d758a1f295fe835b55f1cd87a"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5OTk5NTEzOnYy", "diffSide": "RIGHT", "path": "opensrp-app/src/main/java/org/smartregister/repository/P2PSenderTransferDao.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QxMToxNToxNVrOG61nAQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QxMToxNToxNVrOG61nAQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDM0ODkyOQ==", "bodyText": "refactor so that CoreLibrary.getInstance().context().hasForeignEvents() is at the start", "url": "https://github.com/opensrp/opensrp-client-core/pull/617#discussion_r464348929", "createdAt": "2020-08-03T11:15:15Z", "author": {"login": "githengi"}, "path": "opensrp-app/src/main/java/org/smartregister/repository/P2PSenderTransferDao.java", "diffHunk": "@@ -53,10 +53,10 @@ public JsonData getJsonData(@NonNull DataType dataType, long l, int i) {\n         } else if (dataType.getName().equals(task.getName())) {\n             return CoreLibrary.getInstance().context()\n                     .getTaskRepository().getTasks(l, i);\n-        } else if (dataType.getName().equals(foreignClient.getName())) {\n+        } else if (dataType.getName().equals(foreignClient.getName()) && CoreLibrary.getInstance().context().hasForeignEvents()) {\n             return CoreLibrary.getInstance().context()\n                     .getForeignEventClientRepository().getClients(l, i);\n-        } else if (dataType.getName().equals(foreignEvent.getName())) {\n+        } else if (dataType.getName().equals(foreignEvent.getName()) && CoreLibrary.getInstance().context().hasForeignEvents()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "90a02ae92d5a136d758a1f295fe835b55f1cd87a"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5OTk5NzkzOnYy", "diffSide": "RIGHT", "path": "opensrp-app/src/main/java/org/smartregister/repository/P2PReceiverTransferDao.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QxMToxNjoxNlrOG61ooQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QxMToxNjoxNlrOG61ooQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDM0OTM0NQ==", "bodyText": "could you use CoreLibrary.getInstance().context().hasForeignEvents() for consistency", "url": "https://github.com/opensrp/opensrp-client-core/pull/617#discussion_r464349345", "createdAt": "2020-08-03T11:16:16Z", "author": {"login": "githengi"}, "path": "opensrp-app/src/main/java/org/smartregister/repository/P2PReceiverTransferDao.java", "diffHunk": "@@ -49,7 +49,7 @@ public long receiveJson(@NonNull DataType dataType, @NonNull JSONArray jsonArray\n         EventClientRepository foreignEventClientRepository = CoreLibrary.getInstance().context().getForeignEventClientRepository();\n \n         int eventsMaxRowId = eventClientRepository.getMaxRowId(eventClientRepository.getEventTable());\n-        int foreignEventsMaxRowId = foreignEventClientRepository.getMaxRowId(foreignEventClientRepository.getEventTable());\n+        int foreignEventsMaxRowId = (getP2PClassifier() == null) ? 0 : foreignEventClientRepository.getMaxRowId(foreignEventClientRepository.getEventTable());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "90a02ae92d5a136d758a1f295fe835b55f1cd87a"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwMDAwODM3OnYy", "diffSide": "RIGHT", "path": "opensrp-app/src/main/java/org/smartregister/sync/intent/SyncIntentService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QxMToyMDowMlrOG61usw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QxMToyMDowMlrOG61usw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDM1MDg5OQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (!CoreLibrary.getInstance().context().hasForeignEvents())\n          \n          \n            \n                        return pushECToServer(CoreLibrary.getInstance().context().getEventClientRepository());\n          \n          \n            \n            \n          \n          \n            \n                    return pushECToServer(CoreLibrary.getInstance().context().getEventClientRepository()) &&\n          \n          \n            \n                            pushECToServer(CoreLibrary.getInstance().context().getForeignEventClientRepository());\n          \n          \n            \n                    return pushECToServer(CoreLibrary.getInstance().context().getEventClientRepository()) &&\n          \n          \n            \n                            (!CoreLibrary.getInstance().context().hasForeignEvents() || pushECToServer(CoreLibrary.getInstance().context().getForeignEventClientRepository()));", "url": "https://github.com/opensrp/opensrp-client-core/pull/617#discussion_r464350899", "createdAt": "2020-08-03T11:20:02Z", "author": {"login": "githengi"}, "path": "opensrp-app/src/main/java/org/smartregister/sync/intent/SyncIntentService.java", "diffHunk": "@@ -229,6 +229,9 @@ protected void processClient(Pair<Long, Long> serverVersionPair) {\n \n     // PUSH TO SERVER\n     private boolean pushToServer() {\n+        if (!CoreLibrary.getInstance().context().hasForeignEvents())\n+            return pushECToServer(CoreLibrary.getInstance().context().getEventClientRepository());\n+\n         return pushECToServer(CoreLibrary.getInstance().context().getEventClientRepository()) &&\n                 pushECToServer(CoreLibrary.getInstance().context().getForeignEventClientRepository());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "90a02ae92d5a136d758a1f295fe835b55f1cd87a"}, "originalPosition": 17}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2099, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}