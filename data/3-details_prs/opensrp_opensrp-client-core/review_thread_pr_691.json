{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIxMzk3NzI3", "number": 691, "reviewThreads": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxMToyNDoxNlrOE5a43A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxMToyNzozN1rOE7gKUQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI4NjQ0ODI4OnYy", "diffSide": "RIGHT", "path": "opensrp-app/src/main/java/org/smartregister/repository/TaskRepository.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxMToyNDoxNlrOHz3kQg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxMToyNDoxNlrOHz3kQg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDE0OTgyNg==", "bodyText": "Fix this to restriction_end", "url": "https://github.com/opensrp/opensrp-client-core/pull/691#discussion_r524149826", "createdAt": "2020-11-16T11:24:16Z", "author": {"login": "ekigamba"}, "path": "opensrp-app/src/main/java/org/smartregister/repository/TaskRepository.java", "diffHunk": "@@ -69,10 +72,13 @@\n     private static final String REASON_REFERENCE = \"reason_reference\";\n     private static final String LOCATION = \"location\";\n     private static final String REQUESTER = \"requester\";\n+    private static final String RESTRICTION_REPEAT = \"restriction_repeat\";\n+    private static final String RESTRICTION_START = \"restriction_start\";\n+    private static final String RESTRICTION_END = \"restriction_start\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2df464ea50fe50d5ac38780d8879130698da130c"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI4NjQ3NzI1OnYy", "diffSide": "RIGHT", "path": "opensrp-app/src/main/java/org/smartregister/repository/TaskRepository.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxMToyODowN1rOHz31xw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxMTozMzoxOFrOH3MF4Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDE1NDMxMQ==", "bodyText": "I think  this query is wrong\nHave you tested this out and line 132?", "url": "https://github.com/opensrp/opensrp-client-core/pull/691#discussion_r524154311", "createdAt": "2020-11-16T11:28:07Z", "author": {"login": "ekigamba"}, "path": "opensrp-app/src/main/java/org/smartregister/repository/TaskRepository.java", "diffHunk": "@@ -112,6 +121,17 @@ public static void createTable(SQLiteDatabase database) {\n         database.execSQL(CREATE_TASK_PLAN_GROUP_INDEX);\n     }\n \n+    /**\n+     * Migrate the older database by add restriction columns and changing of priority to enum\n+     * @param database the database being upgraded\n+     */\n+    public static void updatePriorityToEnumAndAddRestrictions(@NonNull SQLiteDatabase database) {\n+        DatabaseMigrationUtils.addColumnIfNotExists(database, TASK_TABLE, RESTRICTION_REPEAT, VARCHAR);\n+        DatabaseMigrationUtils.addColumnIfNotExists(database, TASK_TABLE, RESTRICTION_START, VARCHAR);\n+        DatabaseMigrationUtils.addColumnIfNotExists(database, TASK_TABLE, RESTRICTION_END, VARCHAR);\n+        DatabaseMigrationUtils.recreateSyncTableWithExistingColumnsOnly(database, TASK_TABLE, COLUMNS, CREATE_TASK_TABLE);\n+        database.execSQL(String.format(\"UPDATE %s SET %s=? WHERE %s =? \", TASK_TABLE, PRIORITY, PRIORITY), new Object[]{\"3\", \"3\"});", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2df464ea50fe50d5ac38780d8879130698da130c"}, "originalPosition": 72}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzYzMTg0MQ==", "bodyText": "Yes tested and now it works", "url": "https://github.com/opensrp/opensrp-client-core/pull/691#discussion_r527631841", "createdAt": "2020-11-20T11:33:18Z", "author": {"login": "githengi"}, "path": "opensrp-app/src/main/java/org/smartregister/repository/TaskRepository.java", "diffHunk": "@@ -112,6 +121,17 @@ public static void createTable(SQLiteDatabase database) {\n         database.execSQL(CREATE_TASK_PLAN_GROUP_INDEX);\n     }\n \n+    /**\n+     * Migrate the older database by add restriction columns and changing of priority to enum\n+     * @param database the database being upgraded\n+     */\n+    public static void updatePriorityToEnumAndAddRestrictions(@NonNull SQLiteDatabase database) {\n+        DatabaseMigrationUtils.addColumnIfNotExists(database, TASK_TABLE, RESTRICTION_REPEAT, VARCHAR);\n+        DatabaseMigrationUtils.addColumnIfNotExists(database, TASK_TABLE, RESTRICTION_START, VARCHAR);\n+        DatabaseMigrationUtils.addColumnIfNotExists(database, TASK_TABLE, RESTRICTION_END, VARCHAR);\n+        DatabaseMigrationUtils.recreateSyncTableWithExistingColumnsOnly(database, TASK_TABLE, COLUMNS, CREATE_TASK_TABLE);\n+        database.execSQL(String.format(\"UPDATE %s SET %s=? WHERE %s =? \", TASK_TABLE, PRIORITY, PRIORITY), new Object[]{\"3\", \"3\"});", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDE1NDMxMQ=="}, "originalCommit": {"oid": "2df464ea50fe50d5ac38780d8879130698da130c"}, "originalPosition": 72}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI4NjUwOTUxOnYy", "diffSide": "RIGHT", "path": "opensrp-app/src/main/java/org/smartregister/repository/TaskRepository.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxMTozMzowM1rOHz4Kmg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQxNToxODo1MFrOH2josA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDE1OTY0Mg==", "bodyText": "Is the task.restriction supposed to be saved here also?", "url": "https://github.com/opensrp/opensrp-client-core/pull/691#discussion_r524159642", "createdAt": "2020-11-16T11:33:03Z", "author": {"login": "ekigamba"}, "path": "opensrp-app/src/main/java/org/smartregister/repository/TaskRepository.java", "diffHunk": "@@ -139,13 +159,15 @@ public void addOrUpdate(Task task, boolean updateOnly) {\n             contentValues.put(STATUS, task.getStatus().name());\n         }\n         contentValues.put(BUSINESS_STATUS, task.getBusinessStatus());\n-        contentValues.put(PRIORITY, task.getPriority());\n+        contentValues.put(PRIORITY, task.getPriority().name());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2df464ea50fe50d5ac38780d8879130698da130c"}, "originalPosition": 82}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjk2OTAwOA==", "bodyText": "yes, added saving logic from line 168", "url": "https://github.com/opensrp/opensrp-client-core/pull/691#discussion_r526969008", "createdAt": "2020-11-19T15:18:50Z", "author": {"login": "githengi"}, "path": "opensrp-app/src/main/java/org/smartregister/repository/TaskRepository.java", "diffHunk": "@@ -139,13 +159,15 @@ public void addOrUpdate(Task task, boolean updateOnly) {\n             contentValues.put(STATUS, task.getStatus().name());\n         }\n         contentValues.put(BUSINESS_STATUS, task.getBusinessStatus());\n-        contentValues.put(PRIORITY, task.getPriority());\n+        contentValues.put(PRIORITY, task.getPriority().name());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDE1OTY0Mg=="}, "originalCommit": {"oid": "2df464ea50fe50d5ac38780d8879130698da130c"}, "originalPosition": 82}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI4NjUyOTg4OnYy", "diffSide": "RIGHT", "path": "opensrp-app/src/main/java/org/smartregister/util/DatabaseMigrationUtils.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxMTozNjoxOFrOHz4YAg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQxNToyOTozMVrOH2kKHQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDE2MzA3NA==", "bodyText": "should be columns and not table here", "url": "https://github.com/opensrp/opensrp-client-core/pull/691#discussion_r524163074", "createdAt": "2020-11-16T11:36:18Z", "author": {"login": "ekigamba"}, "path": "opensrp-app/src/main/java/org/smartregister/util/DatabaseMigrationUtils.java", "diffHunk": "@@ -156,6 +156,32 @@ public static void recreateSyncTableWithExistingColumnsOnly(SQLiteDatabase datab\n     }\n \n \n+    public static void recreateSyncTableWithExistingColumnsOnly(SQLiteDatabase database, String table ,String[] columns, String createTableDDL) {\n+        database.beginTransaction();\n+        //rename original table\n+        database.execSQL(\"ALTER TABLE \" + table + \" RENAME TO \" + TABLE_PREFIX + table);\n+        //recreate table\n+        database.execSQL(createTableDDL);\n+        //\n+        String insertQuery = \"INSERT INTO \"\n+                + table\n+                + \" (\" + StringUtils.join(table, \", \") + \")\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2df464ea50fe50d5ac38780d8879130698da130c"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjk3NzU2NQ==", "bodyText": "nice catch, updated", "url": "https://github.com/opensrp/opensrp-client-core/pull/691#discussion_r526977565", "createdAt": "2020-11-19T15:29:31Z", "author": {"login": "githengi"}, "path": "opensrp-app/src/main/java/org/smartregister/util/DatabaseMigrationUtils.java", "diffHunk": "@@ -156,6 +156,32 @@ public static void recreateSyncTableWithExistingColumnsOnly(SQLiteDatabase datab\n     }\n \n \n+    public static void recreateSyncTableWithExistingColumnsOnly(SQLiteDatabase database, String table ,String[] columns, String createTableDDL) {\n+        database.beginTransaction();\n+        //rename original table\n+        database.execSQL(\"ALTER TABLE \" + table + \" RENAME TO \" + TABLE_PREFIX + table);\n+        //recreate table\n+        database.execSQL(createTableDDL);\n+        //\n+        String insertQuery = \"INSERT INTO \"\n+                + table\n+                + \" (\" + StringUtils.join(table, \", \") + \")\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDE2MzA3NA=="}, "originalCommit": {"oid": "2df464ea50fe50d5ac38780d8879130698da130c"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwODIzNjcwOnYy", "diffSide": "RIGHT", "path": "opensrp-app/src/main/java/org/smartregister/repository/TaskRepository.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxMToxMzoyN1rOH3LfLg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxMTozMDo1MVrOH3MBkw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzYyMTkzNA==", "bodyText": "Isn't this an Integer field as declared on line 108?", "url": "https://github.com/opensrp/opensrp-client-core/pull/691#discussion_r527621934", "createdAt": "2020-11-20T11:13:27Z", "author": {"login": "Rkareko"}, "path": "opensrp-app/src/main/java/org/smartregister/repository/TaskRepository.java", "diffHunk": "@@ -112,6 +121,18 @@ public static void createTable(SQLiteDatabase database) {\n         database.execSQL(CREATE_TASK_PLAN_GROUP_INDEX);\n     }\n \n+    /**\n+     * Migrate the older database by add restriction columns and changing of priority to enum\n+     *\n+     * @param database the database being upgraded\n+     */\n+    public static void updatePriorityToEnumAndAddRestrictions(@NonNull SQLiteDatabase database) {\n+        DatabaseMigrationUtils.addColumnIfNotExists(database, TASK_TABLE, RESTRICTION_REPEAT, VARCHAR);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "35144dd34a5110f0b137bab68389febbf3b5b6ec"}, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzYzMDczOQ==", "bodyText": "Corrected", "url": "https://github.com/opensrp/opensrp-client-core/pull/691#discussion_r527630739", "createdAt": "2020-11-20T11:30:51Z", "author": {"login": "githengi"}, "path": "opensrp-app/src/main/java/org/smartregister/repository/TaskRepository.java", "diffHunk": "@@ -112,6 +121,18 @@ public static void createTable(SQLiteDatabase database) {\n         database.execSQL(CREATE_TASK_PLAN_GROUP_INDEX);\n     }\n \n+    /**\n+     * Migrate the older database by add restriction columns and changing of priority to enum\n+     *\n+     * @param database the database being upgraded\n+     */\n+    public static void updatePriorityToEnumAndAddRestrictions(@NonNull SQLiteDatabase database) {\n+        DatabaseMigrationUtils.addColumnIfNotExists(database, TASK_TABLE, RESTRICTION_REPEAT, VARCHAR);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzYyMTkzNA=="}, "originalCommit": {"oid": "35144dd34a5110f0b137bab68389febbf3b5b6ec"}, "originalPosition": 69}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwODI1MDYxOnYy", "diffSide": "RIGHT", "path": "opensrp-app/src/main/java/org/smartregister/repository/TaskRepository.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxMToxNzozN1rOH3Lnkg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxMToyNjoxNlrOH3L4gg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzYyNDA4Mg==", "bodyText": "on line 92 Priority has been changed from an integer field to a varchar. Do we need a migration for that?", "url": "https://github.com/opensrp/opensrp-client-core/pull/691#discussion_r527624082", "createdAt": "2020-11-20T11:17:37Z", "author": {"login": "Rkareko"}, "path": "opensrp-app/src/main/java/org/smartregister/repository/TaskRepository.java", "diffHunk": "@@ -112,6 +121,18 @@ public static void createTable(SQLiteDatabase database) {\n         database.execSQL(CREATE_TASK_PLAN_GROUP_INDEX);\n     }\n \n+    /**\n+     * Migrate the older database by add restriction columns and changing of priority to enum\n+     *\n+     * @param database the database being upgraded\n+     */\n+    public static void updatePriorityToEnumAndAddRestrictions(@NonNull SQLiteDatabase database) {\n+        DatabaseMigrationUtils.addColumnIfNotExists(database, TASK_TABLE, RESTRICTION_REPEAT, VARCHAR);\n+        DatabaseMigrationUtils.addColumnIfNotExists(database, TASK_TABLE, RESTRICTION_START, VARCHAR);\n+        DatabaseMigrationUtils.addColumnIfNotExists(database, TASK_TABLE, RESTRICTION_END, VARCHAR);\n+        DatabaseMigrationUtils.recreateSyncTableWithExistingColumnsOnly(database, TASK_TABLE, COLUMNS, CREATE_TASK_TABLE);\n+        database.execSQL(String.format(\"UPDATE %s SET %s=?\", TASK_TABLE, PRIORITY), new Object[]{Task.TaskPriority.ROUTINE.name()});", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "35144dd34a5110f0b137bab68389febbf3b5b6ec"}, "originalPosition": 73}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzYyODQxOA==", "bodyText": "The table is being recreated using DatabaseMigrationUtils.recreateSyncTableWithExistingColumnsOnly above, this is because sqlite does not support alter column data types or dropping columns, the table must be recreated", "url": "https://github.com/opensrp/opensrp-client-core/pull/691#discussion_r527628418", "createdAt": "2020-11-20T11:26:16Z", "author": {"login": "githengi"}, "path": "opensrp-app/src/main/java/org/smartregister/repository/TaskRepository.java", "diffHunk": "@@ -112,6 +121,18 @@ public static void createTable(SQLiteDatabase database) {\n         database.execSQL(CREATE_TASK_PLAN_GROUP_INDEX);\n     }\n \n+    /**\n+     * Migrate the older database by add restriction columns and changing of priority to enum\n+     *\n+     * @param database the database being upgraded\n+     */\n+    public static void updatePriorityToEnumAndAddRestrictions(@NonNull SQLiteDatabase database) {\n+        DatabaseMigrationUtils.addColumnIfNotExists(database, TASK_TABLE, RESTRICTION_REPEAT, VARCHAR);\n+        DatabaseMigrationUtils.addColumnIfNotExists(database, TASK_TABLE, RESTRICTION_START, VARCHAR);\n+        DatabaseMigrationUtils.addColumnIfNotExists(database, TASK_TABLE, RESTRICTION_END, VARCHAR);\n+        DatabaseMigrationUtils.recreateSyncTableWithExistingColumnsOnly(database, TASK_TABLE, COLUMNS, CREATE_TASK_TABLE);\n+        database.execSQL(String.format(\"UPDATE %s SET %s=?\", TASK_TABLE, PRIORITY), new Object[]{Task.TaskPriority.ROUTINE.name()});", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzYyNDA4Mg=="}, "originalCommit": {"oid": "35144dd34a5110f0b137bab68389febbf3b5b6ec"}, "originalPosition": 73}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwODI1NTM3OnYy", "diffSide": "RIGHT", "path": "opensrp-app/src/main/java/org/smartregister/repository/TaskRepository.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxMToxOToxOFrOH3Lqjw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxMjoxMToxMFrOH3NP3g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzYyNDg0Nw==", "bodyText": "Drop priority column and readd it as varchar column type", "url": "https://github.com/opensrp/opensrp-client-core/pull/691#discussion_r527624847", "createdAt": "2020-11-20T11:19:18Z", "author": {"login": "ekigamba"}, "path": "opensrp-app/src/main/java/org/smartregister/repository/TaskRepository.java", "diffHunk": "@@ -112,6 +121,18 @@ public static void createTable(SQLiteDatabase database) {\n         database.execSQL(CREATE_TASK_PLAN_GROUP_INDEX);\n     }\n \n+    /**\n+     * Migrate the older database by add restriction columns and changing of priority to enum\n+     *\n+     * @param database the database being upgraded\n+     */\n+    public static void updatePriorityToEnumAndAddRestrictions(@NonNull SQLiteDatabase database) {\n+        DatabaseMigrationUtils.addColumnIfNotExists(database, TASK_TABLE, RESTRICTION_REPEAT, VARCHAR);\n+        DatabaseMigrationUtils.addColumnIfNotExists(database, TASK_TABLE, RESTRICTION_START, VARCHAR);\n+        DatabaseMigrationUtils.addColumnIfNotExists(database, TASK_TABLE, RESTRICTION_END, VARCHAR);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "35144dd34a5110f0b137bab68389febbf3b5b6ec"}, "originalPosition": 71}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzYzMTI4OQ==", "bodyText": "I have updated this to Integer", "url": "https://github.com/opensrp/opensrp-client-core/pull/691#discussion_r527631289", "createdAt": "2020-11-20T11:32:06Z", "author": {"login": "githengi"}, "path": "opensrp-app/src/main/java/org/smartregister/repository/TaskRepository.java", "diffHunk": "@@ -112,6 +121,18 @@ public static void createTable(SQLiteDatabase database) {\n         database.execSQL(CREATE_TASK_PLAN_GROUP_INDEX);\n     }\n \n+    /**\n+     * Migrate the older database by add restriction columns and changing of priority to enum\n+     *\n+     * @param database the database being upgraded\n+     */\n+    public static void updatePriorityToEnumAndAddRestrictions(@NonNull SQLiteDatabase database) {\n+        DatabaseMigrationUtils.addColumnIfNotExists(database, TASK_TABLE, RESTRICTION_REPEAT, VARCHAR);\n+        DatabaseMigrationUtils.addColumnIfNotExists(database, TASK_TABLE, RESTRICTION_START, VARCHAR);\n+        DatabaseMigrationUtils.addColumnIfNotExists(database, TASK_TABLE, RESTRICTION_END, VARCHAR);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzYyNDg0Nw=="}, "originalCommit": {"oid": "35144dd34a5110f0b137bab68389febbf3b5b6ec"}, "originalPosition": 71}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzY0OTc2Mw==", "bodyText": "Migration of priority column since on running apps its an integer", "url": "https://github.com/opensrp/opensrp-client-core/pull/691#discussion_r527649763", "createdAt": "2020-11-20T12:08:58Z", "author": {"login": "ekigamba"}, "path": "opensrp-app/src/main/java/org/smartregister/repository/TaskRepository.java", "diffHunk": "@@ -112,6 +121,18 @@ public static void createTable(SQLiteDatabase database) {\n         database.execSQL(CREATE_TASK_PLAN_GROUP_INDEX);\n     }\n \n+    /**\n+     * Migrate the older database by add restriction columns and changing of priority to enum\n+     *\n+     * @param database the database being upgraded\n+     */\n+    public static void updatePriorityToEnumAndAddRestrictions(@NonNull SQLiteDatabase database) {\n+        DatabaseMigrationUtils.addColumnIfNotExists(database, TASK_TABLE, RESTRICTION_REPEAT, VARCHAR);\n+        DatabaseMigrationUtils.addColumnIfNotExists(database, TASK_TABLE, RESTRICTION_START, VARCHAR);\n+        DatabaseMigrationUtils.addColumnIfNotExists(database, TASK_TABLE, RESTRICTION_END, VARCHAR);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzYyNDg0Nw=="}, "originalCommit": {"oid": "35144dd34a5110f0b137bab68389febbf3b5b6ec"}, "originalPosition": 71}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzY1MDc4Mg==", "bodyText": "That is is being done as explained #691 (comment)", "url": "https://github.com/opensrp/opensrp-client-core/pull/691#discussion_r527650782", "createdAt": "2020-11-20T12:11:10Z", "author": {"login": "githengi"}, "path": "opensrp-app/src/main/java/org/smartregister/repository/TaskRepository.java", "diffHunk": "@@ -112,6 +121,18 @@ public static void createTable(SQLiteDatabase database) {\n         database.execSQL(CREATE_TASK_PLAN_GROUP_INDEX);\n     }\n \n+    /**\n+     * Migrate the older database by add restriction columns and changing of priority to enum\n+     *\n+     * @param database the database being upgraded\n+     */\n+    public static void updatePriorityToEnumAndAddRestrictions(@NonNull SQLiteDatabase database) {\n+        DatabaseMigrationUtils.addColumnIfNotExists(database, TASK_TABLE, RESTRICTION_REPEAT, VARCHAR);\n+        DatabaseMigrationUtils.addColumnIfNotExists(database, TASK_TABLE, RESTRICTION_START, VARCHAR);\n+        DatabaseMigrationUtils.addColumnIfNotExists(database, TASK_TABLE, RESTRICTION_END, VARCHAR);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzYyNDg0Nw=="}, "originalCommit": {"oid": "35144dd34a5110f0b137bab68389febbf3b5b6ec"}, "originalPosition": 71}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwODI2NTQ2OnYy", "diffSide": "RIGHT", "path": "opensrp-app/src/main/java/org/smartregister/repository/TaskRepository.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxMToyMjoxNlrOH3LwfQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxMTozMTo0NVrOH3MDJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzYyNjM2NQ==", "bodyText": "Change this type to INTEGER and the restriction_end type also. This is queried as long on line 313. Similar changes on line 131 for migration scripts. Also when saving in the ContentValue", "url": "https://github.com/opensrp/opensrp-client-core/pull/691#discussion_r527626365", "createdAt": "2020-11-20T11:22:16Z", "author": {"login": "ekigamba"}, "path": "opensrp-app/src/main/java/org/smartregister/repository/TaskRepository.java", "diffHunk": "@@ -98,7 +104,10 @@\n                     STRUCTURE_ID + \" VARCHAR, \" +\n                     REASON_REFERENCE + \" VARCHAR, \" +\n                     LOCATION + \" VARCHAR, \" +\n-                    REQUESTER + \" VARCHAR  )\";\n+                    REQUESTER + \" VARCHAR,  \" +\n+                    RESTRICTION_REPEAT + \" INTEGER,  \" +\n+                    RESTRICTION_START + \" VARCHAR,  \" +", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "35144dd34a5110f0b137bab68389febbf3b5b6ec"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzYzMTE0MQ==", "bodyText": "Changed", "url": "https://github.com/opensrp/opensrp-client-core/pull/691#discussion_r527631141", "createdAt": "2020-11-20T11:31:45Z", "author": {"login": "githengi"}, "path": "opensrp-app/src/main/java/org/smartregister/repository/TaskRepository.java", "diffHunk": "@@ -98,7 +104,10 @@\n                     STRUCTURE_ID + \" VARCHAR, \" +\n                     REASON_REFERENCE + \" VARCHAR, \" +\n                     LOCATION + \" VARCHAR, \" +\n-                    REQUESTER + \" VARCHAR  )\";\n+                    REQUESTER + \" VARCHAR,  \" +\n+                    RESTRICTION_REPEAT + \" INTEGER,  \" +\n+                    RESTRICTION_START + \" VARCHAR,  \" +", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzYyNjM2NQ=="}, "originalCommit": {"oid": "35144dd34a5110f0b137bab68389febbf3b5b6ec"}, "originalPosition": 54}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwODI4MzY5OnYy", "diffSide": "RIGHT", "path": "opensrp-app/src/main/java/org/smartregister/sync/helper/PlanIntentServiceHelper.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxMToyNzozN1rOH3L7TQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxMjowMTo0OVrOH3M-mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzYyOTEzMw==", "bodyText": "Not sure how this works with 2019-03-31T0000. Could you confirm? Is the T0000 part essential and/or ignored during conversion?\nFound the format in CampaignTest", "url": "https://github.com/opensrp/opensrp-client-core/pull/691#discussion_r527629133", "createdAt": "2020-11-20T11:27:37Z", "author": {"login": "ekigamba"}, "path": "opensrp-app/src/main/java/org/smartregister/sync/helper/PlanIntentServiceHelper.java", "diffHunk": "@@ -38,7 +40,10 @@\n \n     private final PlanDefinitionRepository planDefinitionRepository;\n     private final AllSharedPreferences allSharedPreferences;\n-    protected static final Gson gson = new GsonBuilder().registerTypeAdapter(LocalDate.class, new DateTypeConverter()).create();\n+    protected static Gson gson = new GsonBuilder().registerTypeAdapter(DateTime.class, new DateTimeTypeConverter(\"yyyy-MM-dd\"))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "35144dd34a5110f0b137bab68389febbf3b5b6ec"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzYzMjgzNQ==", "bodyText": "This for plans serialization, and deserialization, plans use Dates and thus dont need the time part. Since the execution period was changed from Localdate to DateTime, this is necessary to avoid side effects", "url": "https://github.com/opensrp/opensrp-client-core/pull/691#discussion_r527632835", "createdAt": "2020-11-20T11:35:26Z", "author": {"login": "githengi"}, "path": "opensrp-app/src/main/java/org/smartregister/sync/helper/PlanIntentServiceHelper.java", "diffHunk": "@@ -38,7 +40,10 @@\n \n     private final PlanDefinitionRepository planDefinitionRepository;\n     private final AllSharedPreferences allSharedPreferences;\n-    protected static final Gson gson = new GsonBuilder().registerTypeAdapter(LocalDate.class, new DateTypeConverter()).create();\n+    protected static Gson gson = new GsonBuilder().registerTypeAdapter(DateTime.class, new DateTimeTypeConverter(\"yyyy-MM-dd\"))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzYyOTEzMw=="}, "originalCommit": {"oid": "35144dd34a5110f0b137bab68389febbf3b5b6ec"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzY0NjM2Mw==", "bodyText": "Cool", "url": "https://github.com/opensrp/opensrp-client-core/pull/691#discussion_r527646363", "createdAt": "2020-11-20T12:01:49Z", "author": {"login": "ekigamba"}, "path": "opensrp-app/src/main/java/org/smartregister/sync/helper/PlanIntentServiceHelper.java", "diffHunk": "@@ -38,7 +40,10 @@\n \n     private final PlanDefinitionRepository planDefinitionRepository;\n     private final AllSharedPreferences allSharedPreferences;\n-    protected static final Gson gson = new GsonBuilder().registerTypeAdapter(LocalDate.class, new DateTypeConverter()).create();\n+    protected static Gson gson = new GsonBuilder().registerTypeAdapter(DateTime.class, new DateTimeTypeConverter(\"yyyy-MM-dd\"))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzYyOTEzMw=="}, "originalCommit": {"oid": "35144dd34a5110f0b137bab68389febbf3b5b6ec"}, "originalPosition": 21}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2130, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}