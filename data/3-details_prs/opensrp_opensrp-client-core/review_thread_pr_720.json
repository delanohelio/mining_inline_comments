{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM5Mjg5NDI0", "number": 720, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxMDowODozMFrOFE5yWw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wN1QwNzozODoyNVrOFMBm7w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQwNjg1NDAzOnYy", "diffSide": "RIGHT", "path": "opensrp-app/src/main/java/org/smartregister/repository/PlanDefinitionSearchRepository.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxMDowODozMFrOIFJAiA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxMTozNjo0N1rOIFMbbA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjI2MTM4NA==", "bodyText": "Is the intention to return jurisdiction Ids and plan ids, as a search on plan table would be ideal if the whole plan should be retrieved", "url": "https://github.com/opensrp/opensrp-client-core/pull/720#discussion_r542261384", "createdAt": "2020-12-14T10:08:30Z", "author": {"login": "githengi"}, "path": "opensrp-app/src/main/java/org/smartregister/repository/PlanDefinitionSearchRepository.java", "diffHunk": "@@ -95,19 +95,35 @@ public void addOrUpdate(PlanDefinition planDefinition, String jurisdiction) {\n     }\n \n     public List<PlanDefinitionSearch> findPlanDefinitionSearchByPlanId(@NonNull String planId) {\n-        List<PlanDefinitionSearch> planDefinitionSearchSet = new ArrayList<>();\n-        String query = String.format(\"SELECT %s FROM %s WHERE %s=? \", \n-        StringUtils.join(COLUMNS, \",\"), PLAN_DEFINITION_SEARCH_TABLE, PLAN_ID);\n+        List<PlanDefinitionSearch> planDefinitionSearchList = new ArrayList<>();\n+        String query = String.format(\"SELECT %s FROM %s WHERE %s=? \",\n+                StringUtils.join(COLUMNS, \",\"), PLAN_DEFINITION_SEARCH_TABLE, PLAN_ID);\n         try (Cursor cursor = getReadableDatabase().rawQuery(query, new String[]{planId})) {\n             if (cursor != null) {\n                 while (cursor.moveToNext()) {\n-                    planDefinitionSearchSet.add(readCursor(cursor));\n+                    planDefinitionSearchList.add(readCursor(cursor));\n                 }\n             }\n         } catch (SQLiteException e) {\n             Timber.e(e);\n         }\n-        return planDefinitionSearchSet;\n+        return planDefinitionSearchList;\n+    }\n+\n+    public List<PlanDefinitionSearch> findPlanDefinitionSearchByPlanStatus(@NonNull PlanDefinition.PlanStatus status) {\n+        List<PlanDefinitionSearch> planDefinitionSearchList = new ArrayList<>();\n+        String query = String.format(\"SELECT %s FROM %s WHERE %s=? \",\n+                StringUtils.join(COLUMNS, \",\"), PLAN_DEFINITION_SEARCH_TABLE, STATUS);\n+        try (Cursor cursor = getReadableDatabase().rawQuery(query, new String[]{status.value()})) {\n+            if (cursor != null) {\n+                while (cursor.moveToNext()) {\n+                    planDefinitionSearchList.add(readCursor(cursor));\n+                }\n+            }\n+        } catch (SQLiteException e) {\n+            Timber.e(e);\n+        }\n+        return planDefinitionSearchList;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a8dfc78de65f1409caed585f2cadca86302d8137"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjMxNzQyMA==", "bodyText": "yeah i mainly wanted the jurisdiction ids", "url": "https://github.com/opensrp/opensrp-client-core/pull/720#discussion_r542317420", "createdAt": "2020-12-14T11:36:47Z", "author": {"login": "bennsimon"}, "path": "opensrp-app/src/main/java/org/smartregister/repository/PlanDefinitionSearchRepository.java", "diffHunk": "@@ -95,19 +95,35 @@ public void addOrUpdate(PlanDefinition planDefinition, String jurisdiction) {\n     }\n \n     public List<PlanDefinitionSearch> findPlanDefinitionSearchByPlanId(@NonNull String planId) {\n-        List<PlanDefinitionSearch> planDefinitionSearchSet = new ArrayList<>();\n-        String query = String.format(\"SELECT %s FROM %s WHERE %s=? \", \n-        StringUtils.join(COLUMNS, \",\"), PLAN_DEFINITION_SEARCH_TABLE, PLAN_ID);\n+        List<PlanDefinitionSearch> planDefinitionSearchList = new ArrayList<>();\n+        String query = String.format(\"SELECT %s FROM %s WHERE %s=? \",\n+                StringUtils.join(COLUMNS, \",\"), PLAN_DEFINITION_SEARCH_TABLE, PLAN_ID);\n         try (Cursor cursor = getReadableDatabase().rawQuery(query, new String[]{planId})) {\n             if (cursor != null) {\n                 while (cursor.moveToNext()) {\n-                    planDefinitionSearchSet.add(readCursor(cursor));\n+                    planDefinitionSearchList.add(readCursor(cursor));\n                 }\n             }\n         } catch (SQLiteException e) {\n             Timber.e(e);\n         }\n-        return planDefinitionSearchSet;\n+        return planDefinitionSearchList;\n+    }\n+\n+    public List<PlanDefinitionSearch> findPlanDefinitionSearchByPlanStatus(@NonNull PlanDefinition.PlanStatus status) {\n+        List<PlanDefinitionSearch> planDefinitionSearchList = new ArrayList<>();\n+        String query = String.format(\"SELECT %s FROM %s WHERE %s=? \",\n+                StringUtils.join(COLUMNS, \",\"), PLAN_DEFINITION_SEARCH_TABLE, STATUS);\n+        try (Cursor cursor = getReadableDatabase().rawQuery(query, new String[]{status.value()})) {\n+            if (cursor != null) {\n+                while (cursor.moveToNext()) {\n+                    planDefinitionSearchList.add(readCursor(cursor));\n+                }\n+            }\n+        } catch (SQLiteException e) {\n+            Timber.e(e);\n+        }\n+        return planDefinitionSearchList;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjI2MTM4NA=="}, "originalCommit": {"oid": "a8dfc78de65f1409caed585f2cadca86302d8137"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ4MTUzNTYxOnYy", "diffSide": "RIGHT", "path": "opensrp-app/src/main/java/org/smartregister/repository/PlanDefinitionSearchRepository.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wN1QwNzozODoxOFrOIPh8Yg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xMVQwNjo1NToxM1rOIRG33w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzE1NTY4Mg==", "bodyText": "shouldn't you select * instead of passing in columns as you are querying all columns", "url": "https://github.com/opensrp/opensrp-client-core/pull/720#discussion_r553155682", "createdAt": "2021-01-07T07:38:18Z", "author": {"login": "githengi"}, "path": "opensrp-app/src/main/java/org/smartregister/repository/PlanDefinitionSearchRepository.java", "diffHunk": "@@ -95,19 +95,35 @@ public void addOrUpdate(PlanDefinition planDefinition, String jurisdiction) {\n     }\n \n     public List<PlanDefinitionSearch> findPlanDefinitionSearchByPlanId(@NonNull String planId) {\n-        List<PlanDefinitionSearch> planDefinitionSearchSet = new ArrayList<>();\n-        String query = String.format(\"SELECT %s FROM %s WHERE %s=? \", \n-        StringUtils.join(COLUMNS, \",\"), PLAN_DEFINITION_SEARCH_TABLE, PLAN_ID);\n+        List<PlanDefinitionSearch> planDefinitionSearchList = new ArrayList<>();\n+        String query = String.format(\"SELECT %s FROM %s WHERE %s=? \",\n+                StringUtils.join(COLUMNS, \",\"), PLAN_DEFINITION_SEARCH_TABLE, PLAN_ID);\n         try (Cursor cursor = getReadableDatabase().rawQuery(query, new String[]{planId})) {\n             if (cursor != null) {\n                 while (cursor.moveToNext()) {\n-                    planDefinitionSearchSet.add(readCursor(cursor));\n+                    planDefinitionSearchList.add(readCursor(cursor));\n                 }\n             }\n         } catch (SQLiteException e) {\n             Timber.e(e);\n         }\n-        return planDefinitionSearchSet;\n+        return planDefinitionSearchList;\n+    }\n+\n+    public List<PlanDefinitionSearch> findPlanDefinitionSearchByPlanStatus(@NonNull PlanDefinition.PlanStatus status) {\n+        List<PlanDefinitionSearch> planDefinitionSearchList = new ArrayList<>();\n+        String query = String.format(\"SELECT %s FROM %s WHERE %s=? \",\n+                StringUtils.join(COLUMNS, \",\"), PLAN_DEFINITION_SEARCH_TABLE, STATUS);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a761cd6435a1b77dae2571199f7a705e0b9a3b1f"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NDgwOTMxMQ==", "bodyText": "okay updating", "url": "https://github.com/opensrp/opensrp-client-core/pull/720#discussion_r554809311", "createdAt": "2021-01-11T06:55:13Z", "author": {"login": "bennsimon"}, "path": "opensrp-app/src/main/java/org/smartregister/repository/PlanDefinitionSearchRepository.java", "diffHunk": "@@ -95,19 +95,35 @@ public void addOrUpdate(PlanDefinition planDefinition, String jurisdiction) {\n     }\n \n     public List<PlanDefinitionSearch> findPlanDefinitionSearchByPlanId(@NonNull String planId) {\n-        List<PlanDefinitionSearch> planDefinitionSearchSet = new ArrayList<>();\n-        String query = String.format(\"SELECT %s FROM %s WHERE %s=? \", \n-        StringUtils.join(COLUMNS, \",\"), PLAN_DEFINITION_SEARCH_TABLE, PLAN_ID);\n+        List<PlanDefinitionSearch> planDefinitionSearchList = new ArrayList<>();\n+        String query = String.format(\"SELECT %s FROM %s WHERE %s=? \",\n+                StringUtils.join(COLUMNS, \",\"), PLAN_DEFINITION_SEARCH_TABLE, PLAN_ID);\n         try (Cursor cursor = getReadableDatabase().rawQuery(query, new String[]{planId})) {\n             if (cursor != null) {\n                 while (cursor.moveToNext()) {\n-                    planDefinitionSearchSet.add(readCursor(cursor));\n+                    planDefinitionSearchList.add(readCursor(cursor));\n                 }\n             }\n         } catch (SQLiteException e) {\n             Timber.e(e);\n         }\n-        return planDefinitionSearchSet;\n+        return planDefinitionSearchList;\n+    }\n+\n+    public List<PlanDefinitionSearch> findPlanDefinitionSearchByPlanStatus(@NonNull PlanDefinition.PlanStatus status) {\n+        List<PlanDefinitionSearch> planDefinitionSearchList = new ArrayList<>();\n+        String query = String.format(\"SELECT %s FROM %s WHERE %s=? \",\n+                StringUtils.join(COLUMNS, \",\"), PLAN_DEFINITION_SEARCH_TABLE, STATUS);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzE1NTY4Mg=="}, "originalCommit": {"oid": "a761cd6435a1b77dae2571199f7a705e0b9a3b1f"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ4MTUzNTgzOnYy", "diffSide": "RIGHT", "path": "opensrp-app/src/main/java/org/smartregister/repository/PlanDefinitionSearchRepository.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wN1QwNzozODoyNVrOIPh8iA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xMVQwNjo1NToxNlrOIRG4Cg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzE1NTcyMA==", "bodyText": "shouldn't you select * instead of passing in columns as you are querying all columns", "url": "https://github.com/opensrp/opensrp-client-core/pull/720#discussion_r553155720", "createdAt": "2021-01-07T07:38:25Z", "author": {"login": "githengi"}, "path": "opensrp-app/src/main/java/org/smartregister/repository/PlanDefinitionSearchRepository.java", "diffHunk": "@@ -95,19 +95,35 @@ public void addOrUpdate(PlanDefinition planDefinition, String jurisdiction) {\n     }\n \n     public List<PlanDefinitionSearch> findPlanDefinitionSearchByPlanId(@NonNull String planId) {\n-        List<PlanDefinitionSearch> planDefinitionSearchSet = new ArrayList<>();\n-        String query = String.format(\"SELECT %s FROM %s WHERE %s=? \", \n-        StringUtils.join(COLUMNS, \",\"), PLAN_DEFINITION_SEARCH_TABLE, PLAN_ID);\n+        List<PlanDefinitionSearch> planDefinitionSearchList = new ArrayList<>();\n+        String query = String.format(\"SELECT %s FROM %s WHERE %s=? \",\n+                StringUtils.join(COLUMNS, \",\"), PLAN_DEFINITION_SEARCH_TABLE, PLAN_ID);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a761cd6435a1b77dae2571199f7a705e0b9a3b1f"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NDgwOTM1NA==", "bodyText": "okay updating", "url": "https://github.com/opensrp/opensrp-client-core/pull/720#discussion_r554809354", "createdAt": "2021-01-11T06:55:16Z", "author": {"login": "bennsimon"}, "path": "opensrp-app/src/main/java/org/smartregister/repository/PlanDefinitionSearchRepository.java", "diffHunk": "@@ -95,19 +95,35 @@ public void addOrUpdate(PlanDefinition planDefinition, String jurisdiction) {\n     }\n \n     public List<PlanDefinitionSearch> findPlanDefinitionSearchByPlanId(@NonNull String planId) {\n-        List<PlanDefinitionSearch> planDefinitionSearchSet = new ArrayList<>();\n-        String query = String.format(\"SELECT %s FROM %s WHERE %s=? \", \n-        StringUtils.join(COLUMNS, \",\"), PLAN_DEFINITION_SEARCH_TABLE, PLAN_ID);\n+        List<PlanDefinitionSearch> planDefinitionSearchList = new ArrayList<>();\n+        String query = String.format(\"SELECT %s FROM %s WHERE %s=? \",\n+                StringUtils.join(COLUMNS, \",\"), PLAN_DEFINITION_SEARCH_TABLE, PLAN_ID);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzE1NTcyMA=="}, "originalCommit": {"oid": "a761cd6435a1b77dae2571199f7a705e0b9a3b1f"}, "originalPosition": 9}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2087, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}