{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkwMTQ1NzE2", "number": 647, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQwNzo0MTozNVrOEnWC4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQwODowNzoxMlrOEnWkKw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5NjkxMTA0OnYy", "diffSide": "RIGHT", "path": "opensrp-app/src/main/java/org/smartregister/domain/jsonmapping/util/Tree.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQwNzo0MTozNVrOHX4jbw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQwODo0MjowMVrOHX6i2g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDgwNTg3MQ==", "bodyText": "I think the parent might be null\nThis is a question. I see that we delete  the parent also if the node id was it's only child. I am not sure why that is?", "url": "https://github.com/opensrp/opensrp-client-core/pull/647#discussion_r494805871", "createdAt": "2020-09-25T07:41:35Z", "author": {"login": "ekigamba"}, "path": "opensrp-app/src/main/java/org/smartregister/domain/jsonmapping/util/Tree.java", "diffHunk": "@@ -112,6 +112,23 @@ public void addNode(K id, String label, T node, K parentId) {\n         return null;\n     }\n \n+    /**\n+     * Delete nodes from location hierarchy\n+     *\n+     * @param id the id of the node to remove\n+     */\n+    public void deleteNode(K id) {\n+        TreeNode<K, T> node = getNode(id);\n+        removeNode(id);\n+        parentChildren.remove(id);\n+        LinkedHashSet<K> parent = parentChildren.get(node.getParent());\n+        if (parent != null && parent.size() == 1) {\n+            deleteNode(node.getParent());\n+        } else {\n+            parent.remove(id);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4b89e5a05d1c79e4cbf83ac61163bc9ece2469e6"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDgzNzQzMQ==", "bodyText": "This is so that we don't have orphaned nodes. In the location tree we usually get the assigned locations and build the higher nodes, so if a lower node is removed, then its logical the the parent should be removed", "url": "https://github.com/opensrp/opensrp-client-core/pull/647#discussion_r494837431", "createdAt": "2020-09-25T08:40:08Z", "author": {"login": "githengi"}, "path": "opensrp-app/src/main/java/org/smartregister/domain/jsonmapping/util/Tree.java", "diffHunk": "@@ -112,6 +112,23 @@ public void addNode(K id, String label, T node, K parentId) {\n         return null;\n     }\n \n+    /**\n+     * Delete nodes from location hierarchy\n+     *\n+     * @param id the id of the node to remove\n+     */\n+    public void deleteNode(K id) {\n+        TreeNode<K, T> node = getNode(id);\n+        removeNode(id);\n+        parentChildren.remove(id);\n+        LinkedHashSet<K> parent = parentChildren.get(node.getParent());\n+        if (parent != null && parent.size() == 1) {\n+            deleteNode(node.getParent());\n+        } else {\n+            parent.remove(id);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDgwNTg3MQ=="}, "originalCommit": {"oid": "4b89e5a05d1c79e4cbf83ac61163bc9ece2469e6"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDgzODQ5MA==", "bodyText": "Cool", "url": "https://github.com/opensrp/opensrp-client-core/pull/647#discussion_r494838490", "createdAt": "2020-09-25T08:42:01Z", "author": {"login": "ekigamba"}, "path": "opensrp-app/src/main/java/org/smartregister/domain/jsonmapping/util/Tree.java", "diffHunk": "@@ -112,6 +112,23 @@ public void addNode(K id, String label, T node, K parentId) {\n         return null;\n     }\n \n+    /**\n+     * Delete nodes from location hierarchy\n+     *\n+     * @param id the id of the node to remove\n+     */\n+    public void deleteNode(K id) {\n+        TreeNode<K, T> node = getNode(id);\n+        removeNode(id);\n+        parentChildren.remove(id);\n+        LinkedHashSet<K> parent = parentChildren.get(node.getParent());\n+        if (parent != null && parent.size() == 1) {\n+            deleteNode(node.getParent());\n+        } else {\n+            parent.remove(id);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDgwNTg3MQ=="}, "originalCommit": {"oid": "4b89e5a05d1c79e4cbf83ac61163bc9ece2469e6"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5Njk3NzcxOnYy", "diffSide": "RIGHT", "path": "opensrp-app/src/main/java/org/smartregister/receiver/ValidateAssignmentReceiver.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQwODowMTozNVrOHX5Mjg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQwODowMTozNVrOHX5Mjg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDgxNjM5OA==", "bodyText": "Nice catch", "url": "https://github.com/opensrp/opensrp-client-core/pull/647#discussion_r494816398", "createdAt": "2020-09-25T08:01:35Z", "author": {"login": "ekigamba"}, "path": "opensrp-app/src/main/java/org/smartregister/receiver/ValidateAssignmentReceiver.java", "diffHunk": "@@ -0,0 +1,83 @@\n+package org.smartregister.receiver;\n+\n+import android.content.BroadcastReceiver;\n+import android.content.Context;\n+import android.content.Intent;\n+import android.content.IntentFilter;\n+import android.os.Bundle;\n+\n+import org.smartregister.dto.UserAssignmentDTO;\n+import org.smartregister.sync.helper.ValidateAssignmentHelper;\n+\n+import java.io.Serializable;\n+import java.util.LinkedHashSet;\n+import java.util.Set;\n+\n+import timber.log.Timber;\n+\n+/**\n+ * Created by samuelgithengi on 9/21/20.\n+ */\n+public class ValidateAssignmentReceiver extends BroadcastReceiver {\n+\n+    private static ValidateAssignmentReceiver instance;\n+\n+    private Set<UserAssignmentListener> userAssignmentListeners;\n+\n+    public static void init(Context context) {\n+        if (instance != null) {\n+            destroy(context);\n+        }\n+        instance = new ValidateAssignmentReceiver();\n+        context.registerReceiver(instance,\n+                new IntentFilter(ValidateAssignmentHelper.ACTION_ASSIGNMENT_REMOVED));\n+    }\n+\n+    public static void destroy(Context context) {\n+        try {\n+            if (instance != null) {\n+                context.unregisterReceiver(instance);\n+                instance = null;\n+            }\n+        } catch (IllegalArgumentException e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4b89e5a05d1c79e4cbf83ac61163bc9ece2469e6"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5Njk5NjI3OnYy", "diffSide": "RIGHT", "path": "opensrp-app/src/main/java/org/smartregister/sync/helper/LocationServiceHelper.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQwODowNzoxMlrOHX5X4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQwODowNzoxMlrOHX5X4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDgxOTI5Ng==", "bodyText": "Could we make this location_ids a constant", "url": "https://github.com/opensrp/opensrp-client-core/pull/647#discussion_r494819296", "createdAt": "2020-09-25T08:07:12Z", "author": {"login": "Rkareko"}, "path": "opensrp-app/src/main/java/org/smartregister/sync/helper/LocationServiceHelper.java", "diffHunk": "@@ -161,6 +162,11 @@ private String fetchLocationsOrStructures(boolean isJurisdiction, Long serverVer\n         if (isJurisdiction) {\n             String preferenceLocationNames = allSharedPreferences.getPreference(OPERATIONAL_AREAS);\n             request.put(\"location_names\", new JSONArray(Arrays.asList(preferenceLocationNames.split(\",\"))));\n+\n+            String preferenceLocationIds = allSharedPreferences.getPreference(JURISDICTION_IDS);\n+            if (StringUtils.isNotBlank(preferenceLocationIds)) {\n+                request.put(\"location_ids\", new JSONArray(Arrays.asList(preferenceLocationIds.split(\",\"))));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4b89e5a05d1c79e4cbf83ac61163bc9ece2469e6"}, "originalPosition": 15}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2110, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}