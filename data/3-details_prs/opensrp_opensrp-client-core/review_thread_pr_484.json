{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAxMzI0NjM1", "number": 484, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxMDowMjozMVrOD2mMZA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQwOTo1NToyOVrOD3jmKQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU4NTc1NDYwOnYy", "diffSide": "RIGHT", "path": "opensrp-app/src/main/java/org/smartregister/executor/CoreLibraryExecutors.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxMDowMjozMVrOGMbD9g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQxMjozNjoyMlrOGNR0aw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTY3OTQ3OA==", "bodyText": "There is already existing class org.smartregister.util.AppExecutors", "url": "https://github.com/opensrp/opensrp-client-core/pull/484#discussion_r415679478", "createdAt": "2020-04-27T10:02:31Z", "author": {"login": "githengi"}, "path": "opensrp-app/src/main/java/org/smartregister/executor/CoreLibraryExecutors.java", "diffHunk": "@@ -0,0 +1,77 @@\n+package org.smartregister.executor;\n+\n+import android.os.Handler;\n+import android.os.Looper;\n+import android.support.annotation.NonNull;\n+\n+import java.util.concurrent.Executor;\n+import java.util.concurrent.Executors;\n+\n+/**\n+ * <p>\n+ * Global executor pools for plug-and-play CoreLibrary operations.\n+ * <p>\n+ * Grouping tasks like this avoids the effects of task starvation (e.g. disk reads don't wait behind\n+ * webservice requests).\n+ *\n+ * Created by Ephraim Kigamba - nek.eam@gmail.com on 09-04-2020.\n+ */\n+public class CoreLibraryExecutors {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0a7a3dd7c872902a7ae11ba3dc118b3105310de3"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjU3NjYxOQ==", "bodyText": "Fixed", "url": "https://github.com/opensrp/opensrp-client-core/pull/484#discussion_r416576619", "createdAt": "2020-04-28T12:36:22Z", "author": {"login": "ekigamba"}, "path": "opensrp-app/src/main/java/org/smartregister/executor/CoreLibraryExecutors.java", "diffHunk": "@@ -0,0 +1,77 @@\n+package org.smartregister.executor;\n+\n+import android.os.Handler;\n+import android.os.Looper;\n+import android.support.annotation.NonNull;\n+\n+import java.util.concurrent.Executor;\n+import java.util.concurrent.Executors;\n+\n+/**\n+ * <p>\n+ * Global executor pools for plug-and-play CoreLibrary operations.\n+ * <p>\n+ * Grouping tasks like this avoids the effects of task starvation (e.g. disk reads don't wait behind\n+ * webservice requests).\n+ *\n+ * Created by Ephraim Kigamba - nek.eam@gmail.com on 09-04-2020.\n+ */\n+public class CoreLibraryExecutors {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTY3OTQ3OA=="}, "originalCommit": {"oid": "0a7a3dd7c872902a7ae11ba3dc118b3105310de3"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU4NTc2NzczOnYy", "diffSide": "RIGHT", "path": "opensrp-app/src/main/java/org/smartregister/multitenant/ResetAppHelper.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxMDowNToyN1rOGMbLkg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQwNzoxMTowMVrOGNF5Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTY4MTQyNg==", "bodyText": "Maybe this should be warning, if the intention is to send to crashlytics", "url": "https://github.com/opensrp/opensrp-client-core/pull/484#discussion_r415681426", "createdAt": "2020-04-27T10:05:27Z", "author": {"login": "githengi"}, "path": "opensrp-app/src/main/java/org/smartregister/multitenant/ResetAppHelper.java", "diffHunk": "@@ -0,0 +1,232 @@\n+package org.smartregister.multitenant;\n+\n+import android.content.SharedPreferences;\n+import android.support.annotation.AnyThread;\n+import android.support.annotation.NonNull;\n+import android.support.annotation.Nullable;\n+import android.support.v7.app.AppCompatActivity;\n+import android.widget.Toast;\n+\n+import com.evernote.android.job.JobManager;\n+\n+import org.smartregister.CoreLibrary;\n+import org.smartregister.P2POptions;\n+import org.smartregister.R;\n+import org.smartregister.exception.AppResetException;\n+import org.smartregister.multitenant.check.EventClientSyncedCheck;\n+import org.smartregister.multitenant.check.PreResetAppCheck;\n+import org.smartregister.multitenant.check.SettingsSyncedCheck;\n+import org.smartregister.multitenant.check.StructureSyncedCheck;\n+import org.smartregister.multitenant.check.TaskSyncedCheck;\n+import org.smartregister.exception.PreResetAppOperationException;\n+import org.smartregister.executor.CoreLibraryExecutors;\n+import org.smartregister.view.dialog.ResetAppDialog;\n+import org.smartregister.p2p.P2PLibrary;\n+import org.smartregister.p2p.model.AppDatabase;\n+import org.smartregister.util.NetworkUtils;\n+import org.smartregister.util.Utils;\n+import org.smartregister.view.activity.DrishtiApplication;\n+\n+import java.security.KeyStore;\n+import java.security.KeyStoreException;\n+import java.util.ArrayList;\n+import java.util.Enumeration;\n+\n+import timber.log.Timber;\n+\n+/**\n+ * Created by Ephraim Kigamba - nek.eam@gmail.com on 09-04-2020.\n+ */\n+public class ResetAppHelper {\n+\n+    private DrishtiApplication application;\n+    private CoreLibraryExecutors coreLibraryExecutors;\n+    private ArrayList<PreResetAppCheck> preResetAppChecks = new ArrayList<>();\n+    private ResetAppDialog resetAppDialog;\n+    private boolean resetCancelled = false;\n+\n+    public ResetAppHelper(@NonNull DrishtiApplication drishtiApplication) {\n+        this.application = drishtiApplication;\n+        coreLibraryExecutors = new CoreLibraryExecutors();\n+        preResetAppChecks.add(new EventClientSyncedCheck());\n+        preResetAppChecks.add(new SettingsSyncedCheck());\n+        preResetAppChecks.add(new StructureSyncedCheck());\n+        preResetAppChecks.add(new TaskSyncedCheck());\n+    }\n+\n+    public void startResetProcess(@NonNull AppCompatActivity activity) {\n+        resetCancelled = false;\n+        // Show some UI here to display the reset progress\n+        resetAppDialog = ResetAppDialog.newInstance();\n+        resetAppDialog.show(activity.getSupportFragmentManager(), \"rest-app-dialog\");\n+        resetAppDialog.setOnCancelListener((dialogInterface) -> {\n+            showProgressText(activity.getString(R.string.cancelling));\n+            resetCancelled = true;\n+        });\n+\n+        resetAppDialog.showText(activity.getString(R.string.stopping_services));\n+        JobManager.create(application).cancelAll();\n+\n+        resetAppDialog.showText(activity.getString(R.string.performing_data_checks));\n+\n+        if (!resetCancelled) {\n+            performPreResetChecks();\n+        }\n+    }\n+\n+    public void performPreResetChecks() {\n+        // Should be handled in the background\n+        coreLibraryExecutors.diskIO()\n+                .execute(() -> {\n+                    try {\n+                        for (PreResetAppCheck preResetAppCheck : preResetAppChecks) {\n+                            if (!preResetAppCheck.isCheckOk(application)) {\n+                                if (resetCancelled) {\n+                                    dismissDialog();\n+                                    return;\n+                                }\n+\n+                                if (!NetworkUtils.isNetworkAvailable()) {\n+                                    dismissDialog();\n+                                    coreLibraryExecutors.mainThread().execute(new Runnable() {\n+                                        @Override\n+                                        public void run() {\n+                                            Toast.makeText(application, \"No Internet Connection Available\", Toast.LENGTH_LONG)\n+                                                    .show();\n+                                        }\n+                                    });\n+\n+                                    resetCancelled = true;\n+                                    return;\n+                                }\n+\n+                                performPreResetOperations(preResetAppCheck);\n+                            }\n+                        }\n+\n+                        if (resetCancelled) {\n+                            dismissDialog();\n+                            return;\n+                        }\n+\n+                        showProgressText(application.getString(R.string.clearing_application_data));\n+\n+                        if (resetCancelled) {\n+                            dismissDialog();\n+                            return;\n+                        }\n+\n+                        Timber.e(\"User %s has completely reset the app\", application.getUsername());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0a7a3dd7c872902a7ae11ba3dc118b3105310de3"}, "originalPosition": 119}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjM4MTIzOA==", "bodyText": "I'll change that", "url": "https://github.com/opensrp/opensrp-client-core/pull/484#discussion_r416381238", "createdAt": "2020-04-28T07:11:01Z", "author": {"login": "ekigamba"}, "path": "opensrp-app/src/main/java/org/smartregister/multitenant/ResetAppHelper.java", "diffHunk": "@@ -0,0 +1,232 @@\n+package org.smartregister.multitenant;\n+\n+import android.content.SharedPreferences;\n+import android.support.annotation.AnyThread;\n+import android.support.annotation.NonNull;\n+import android.support.annotation.Nullable;\n+import android.support.v7.app.AppCompatActivity;\n+import android.widget.Toast;\n+\n+import com.evernote.android.job.JobManager;\n+\n+import org.smartregister.CoreLibrary;\n+import org.smartregister.P2POptions;\n+import org.smartregister.R;\n+import org.smartregister.exception.AppResetException;\n+import org.smartregister.multitenant.check.EventClientSyncedCheck;\n+import org.smartregister.multitenant.check.PreResetAppCheck;\n+import org.smartregister.multitenant.check.SettingsSyncedCheck;\n+import org.smartregister.multitenant.check.StructureSyncedCheck;\n+import org.smartregister.multitenant.check.TaskSyncedCheck;\n+import org.smartregister.exception.PreResetAppOperationException;\n+import org.smartregister.executor.CoreLibraryExecutors;\n+import org.smartregister.view.dialog.ResetAppDialog;\n+import org.smartregister.p2p.P2PLibrary;\n+import org.smartregister.p2p.model.AppDatabase;\n+import org.smartregister.util.NetworkUtils;\n+import org.smartregister.util.Utils;\n+import org.smartregister.view.activity.DrishtiApplication;\n+\n+import java.security.KeyStore;\n+import java.security.KeyStoreException;\n+import java.util.ArrayList;\n+import java.util.Enumeration;\n+\n+import timber.log.Timber;\n+\n+/**\n+ * Created by Ephraim Kigamba - nek.eam@gmail.com on 09-04-2020.\n+ */\n+public class ResetAppHelper {\n+\n+    private DrishtiApplication application;\n+    private CoreLibraryExecutors coreLibraryExecutors;\n+    private ArrayList<PreResetAppCheck> preResetAppChecks = new ArrayList<>();\n+    private ResetAppDialog resetAppDialog;\n+    private boolean resetCancelled = false;\n+\n+    public ResetAppHelper(@NonNull DrishtiApplication drishtiApplication) {\n+        this.application = drishtiApplication;\n+        coreLibraryExecutors = new CoreLibraryExecutors();\n+        preResetAppChecks.add(new EventClientSyncedCheck());\n+        preResetAppChecks.add(new SettingsSyncedCheck());\n+        preResetAppChecks.add(new StructureSyncedCheck());\n+        preResetAppChecks.add(new TaskSyncedCheck());\n+    }\n+\n+    public void startResetProcess(@NonNull AppCompatActivity activity) {\n+        resetCancelled = false;\n+        // Show some UI here to display the reset progress\n+        resetAppDialog = ResetAppDialog.newInstance();\n+        resetAppDialog.show(activity.getSupportFragmentManager(), \"rest-app-dialog\");\n+        resetAppDialog.setOnCancelListener((dialogInterface) -> {\n+            showProgressText(activity.getString(R.string.cancelling));\n+            resetCancelled = true;\n+        });\n+\n+        resetAppDialog.showText(activity.getString(R.string.stopping_services));\n+        JobManager.create(application).cancelAll();\n+\n+        resetAppDialog.showText(activity.getString(R.string.performing_data_checks));\n+\n+        if (!resetCancelled) {\n+            performPreResetChecks();\n+        }\n+    }\n+\n+    public void performPreResetChecks() {\n+        // Should be handled in the background\n+        coreLibraryExecutors.diskIO()\n+                .execute(() -> {\n+                    try {\n+                        for (PreResetAppCheck preResetAppCheck : preResetAppChecks) {\n+                            if (!preResetAppCheck.isCheckOk(application)) {\n+                                if (resetCancelled) {\n+                                    dismissDialog();\n+                                    return;\n+                                }\n+\n+                                if (!NetworkUtils.isNetworkAvailable()) {\n+                                    dismissDialog();\n+                                    coreLibraryExecutors.mainThread().execute(new Runnable() {\n+                                        @Override\n+                                        public void run() {\n+                                            Toast.makeText(application, \"No Internet Connection Available\", Toast.LENGTH_LONG)\n+                                                    .show();\n+                                        }\n+                                    });\n+\n+                                    resetCancelled = true;\n+                                    return;\n+                                }\n+\n+                                performPreResetOperations(preResetAppCheck);\n+                            }\n+                        }\n+\n+                        if (resetCancelled) {\n+                            dismissDialog();\n+                            return;\n+                        }\n+\n+                        showProgressText(application.getString(R.string.clearing_application_data));\n+\n+                        if (resetCancelled) {\n+                            dismissDialog();\n+                            return;\n+                        }\n+\n+                        Timber.e(\"User %s has completely reset the app\", application.getUsername());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTY4MTQyNg=="}, "originalCommit": {"oid": "0a7a3dd7c872902a7ae11ba3dc118b3105310de3"}, "originalPosition": 119}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU4NjgwNjg3OnYy", "diffSide": "RIGHT", "path": "opensrp-app/src/main/java/org/smartregister/util/Utils.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxMzo1NjozNFrOGMkh1Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQxMjozNjoxNVrOGNR0DA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTgzNDU4MQ==", "bodyText": "Maybe this can be a function for deleting journal, shm and wal", "url": "https://github.com/opensrp/opensrp-client-core/pull/484#discussion_r415834581", "createdAt": "2020-04-27T13:56:34Z", "author": {"login": "githengi"}, "path": "opensrp-app/src/main/java/org/smartregister/util/Utils.java", "diffHunk": "@@ -793,4 +793,56 @@ public static void copyDatabase(String dbName, String copyDbName, Context contex\n     public static Locale getDefaultLocale() {\n         return Locale.getDefault().toString().startsWith(\"ar\") ? Locale.ENGLISH : Locale.getDefault();\n     }\n+\n+    public static boolean deleteRoomDb(@NonNull Context context, @NonNull String databaseName) {\n+        File databases = new File(context.getApplicationInfo().dataDir + \"/databases\");\n+        File db = new File(databases, databaseName);\n+        if (!db.exists()) {\n+            Timber.i(\"Room database %s does not exist\", databaseName);\n+            return false;\n+        }\n+\n+        if (db.delete()) {\n+            Timber.i(\"Room database %s deleted\", databaseName);\n+        } else {\n+            Timber.i(\"Failed to delete database %s\", databaseName);\n+            return false;\n+        }\n+\n+        // Delete the journal file\n+        File journal = new File(databases, databaseName + \"-journal\");\n+        if (journal.exists()) {\n+            if (journal.delete()) {\n+                Timber.i(\"Database %s journal deleted\", databaseName);\n+            } else {\n+                Timber.e(\"Failed to delete database %s journal\", databaseName);\n+                return false;\n+            }\n+        }\n+\n+        // Delete the journal shm file\n+        File shmFile = new File(databases, databaseName + \"-shm\");\n+        if (shmFile.exists()) {\n+            if (shmFile.delete()) {\n+                Timber.i(\"Database %s-shm deleted\", databaseName);\n+            } else {\n+                Timber.e(\"Failed to delete database %s-shm\", databaseName);\n+                return false;\n+            }\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0a7a3dd7c872902a7ae11ba3dc118b3105310de3"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjU3NjUyNA==", "bodyText": "Fixed", "url": "https://github.com/opensrp/opensrp-client-core/pull/484#discussion_r416576524", "createdAt": "2020-04-28T12:36:15Z", "author": {"login": "ekigamba"}, "path": "opensrp-app/src/main/java/org/smartregister/util/Utils.java", "diffHunk": "@@ -793,4 +793,56 @@ public static void copyDatabase(String dbName, String copyDbName, Context contex\n     public static Locale getDefaultLocale() {\n         return Locale.getDefault().toString().startsWith(\"ar\") ? Locale.ENGLISH : Locale.getDefault();\n     }\n+\n+    public static boolean deleteRoomDb(@NonNull Context context, @NonNull String databaseName) {\n+        File databases = new File(context.getApplicationInfo().dataDir + \"/databases\");\n+        File db = new File(databases, databaseName);\n+        if (!db.exists()) {\n+            Timber.i(\"Room database %s does not exist\", databaseName);\n+            return false;\n+        }\n+\n+        if (db.delete()) {\n+            Timber.i(\"Room database %s deleted\", databaseName);\n+        } else {\n+            Timber.i(\"Failed to delete database %s\", databaseName);\n+            return false;\n+        }\n+\n+        // Delete the journal file\n+        File journal = new File(databases, databaseName + \"-journal\");\n+        if (journal.exists()) {\n+            if (journal.delete()) {\n+                Timber.i(\"Database %s journal deleted\", databaseName);\n+            } else {\n+                Timber.e(\"Failed to delete database %s journal\", databaseName);\n+                return false;\n+            }\n+        }\n+\n+        // Delete the journal shm file\n+        File shmFile = new File(databases, databaseName + \"-shm\");\n+        if (shmFile.exists()) {\n+            if (shmFile.delete()) {\n+                Timber.i(\"Database %s-shm deleted\", databaseName);\n+            } else {\n+                Timber.e(\"Failed to delete database %s-shm\", databaseName);\n+                return false;\n+            }\n+        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTgzNDU4MQ=="}, "originalCommit": {"oid": "0a7a3dd7c872902a7ae11ba3dc118b3105310de3"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU4NjgxMTk1OnYy", "diffSide": "RIGHT", "path": "opensrp-app/src/main/java/org/smartregister/util/Utils.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxMzo1Nzo0M1rOGMklIA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQwNzowNToyMVrOGNFtmw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTgzNTQyNA==", "bodyText": "This would leave the shm and wal which can lead to inconsistencies", "url": "https://github.com/opensrp/opensrp-client-core/pull/484#discussion_r415835424", "createdAt": "2020-04-27T13:57:43Z", "author": {"login": "githengi"}, "path": "opensrp-app/src/main/java/org/smartregister/util/Utils.java", "diffHunk": "@@ -793,4 +793,56 @@ public static void copyDatabase(String dbName, String copyDbName, Context contex\n     public static Locale getDefaultLocale() {\n         return Locale.getDefault().toString().startsWith(\"ar\") ? Locale.ENGLISH : Locale.getDefault();\n     }\n+\n+    public static boolean deleteRoomDb(@NonNull Context context, @NonNull String databaseName) {\n+        File databases = new File(context.getApplicationInfo().dataDir + \"/databases\");\n+        File db = new File(databases, databaseName);\n+        if (!db.exists()) {\n+            Timber.i(\"Room database %s does not exist\", databaseName);\n+            return false;\n+        }\n+\n+        if (db.delete()) {\n+            Timber.i(\"Room database %s deleted\", databaseName);\n+        } else {\n+            Timber.i(\"Failed to delete database %s\", databaseName);\n+            return false;\n+        }\n+\n+        // Delete the journal file\n+        File journal = new File(databases, databaseName + \"-journal\");\n+        if (journal.exists()) {\n+            if (journal.delete()) {\n+                Timber.i(\"Database %s journal deleted\", databaseName);\n+            } else {\n+                Timber.e(\"Failed to delete database %s journal\", databaseName);\n+                return false;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0a7a3dd7c872902a7ae11ba3dc118b3105310de3"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjM3ODI2Nw==", "bodyText": "I will change this to perform the other operations but return the correct status", "url": "https://github.com/opensrp/opensrp-client-core/pull/484#discussion_r416378267", "createdAt": "2020-04-28T07:05:21Z", "author": {"login": "ekigamba"}, "path": "opensrp-app/src/main/java/org/smartregister/util/Utils.java", "diffHunk": "@@ -793,4 +793,56 @@ public static void copyDatabase(String dbName, String copyDbName, Context contex\n     public static Locale getDefaultLocale() {\n         return Locale.getDefault().toString().startsWith(\"ar\") ? Locale.ENGLISH : Locale.getDefault();\n     }\n+\n+    public static boolean deleteRoomDb(@NonNull Context context, @NonNull String databaseName) {\n+        File databases = new File(context.getApplicationInfo().dataDir + \"/databases\");\n+        File db = new File(databases, databaseName);\n+        if (!db.exists()) {\n+            Timber.i(\"Room database %s does not exist\", databaseName);\n+            return false;\n+        }\n+\n+        if (db.delete()) {\n+            Timber.i(\"Room database %s deleted\", databaseName);\n+        } else {\n+            Timber.i(\"Failed to delete database %s\", databaseName);\n+            return false;\n+        }\n+\n+        // Delete the journal file\n+        File journal = new File(databases, databaseName + \"-journal\");\n+        if (journal.exists()) {\n+            if (journal.delete()) {\n+                Timber.i(\"Database %s journal deleted\", databaseName);\n+            } else {\n+                Timber.e(\"Failed to delete database %s journal\", databaseName);\n+                return false;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTgzNTQyNA=="}, "originalCommit": {"oid": "0a7a3dd7c872902a7ae11ba3dc118b3105310de3"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5NTgxNDgxOnYy", "diffSide": "RIGHT", "path": "opensrp-app/res/values/strings.xml", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQwOTo1NToyOVrOGN3ufA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQxMjoyNTozN1rOGN8ZKw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzE5NzY5Mg==", "bodyText": "Use passive tense for this message also mention the actual team/username that would be cleared", "url": "https://github.com/opensrp/opensrp-client-core/pull/484#discussion_r417197692", "createdAt": "2020-04-29T09:55:29Z", "author": {"login": "githengi"}, "path": "opensrp-app/res/values/strings.xml", "diffHunk": "@@ -414,5 +414,13 @@\n     <string name=\"sync_failed_timeout_error\">Sync Failed. Could not connect to the server.</string>\n \n     <string name=\"outdated_app\">This is an outdated app. Please update to the latest version to continue.</string>\n+    <string name=\"sync_upload_progress_float\">Sync upload progress %d%%</string>\n+    <string name=\"cancelling\">Cancelling...</string>\n+    <string name=\"stopping_services\">Stopping services..</string>\n+    <string name=\"performing_data_checks\">Performing data checks...</string>\n+    <string name=\"app_reset_status\">App Reset Status</string>\n+    <string name=\"clearing_application_data\">Clearing application data...</string>\n+    <string name=\"clear_data_dialog_title\">Do you want to clear data to login with a different team/location</string>\n+    <string name=\"clear_data_dialog_message\">You are trying to login with a user in a different team/location. This will require as to upload any pending data and clear the data for the current user. Do you want to continue?</string>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d92a5a49322efde2f7d5cd016f203ab46e3eea2d"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzI3NDE1NQ==", "bodyText": "Fixed", "url": "https://github.com/opensrp/opensrp-client-core/pull/484#discussion_r417274155", "createdAt": "2020-04-29T12:25:37Z", "author": {"login": "ekigamba"}, "path": "opensrp-app/res/values/strings.xml", "diffHunk": "@@ -414,5 +414,13 @@\n     <string name=\"sync_failed_timeout_error\">Sync Failed. Could not connect to the server.</string>\n \n     <string name=\"outdated_app\">This is an outdated app. Please update to the latest version to continue.</string>\n+    <string name=\"sync_upload_progress_float\">Sync upload progress %d%%</string>\n+    <string name=\"cancelling\">Cancelling...</string>\n+    <string name=\"stopping_services\">Stopping services..</string>\n+    <string name=\"performing_data_checks\">Performing data checks...</string>\n+    <string name=\"app_reset_status\">App Reset Status</string>\n+    <string name=\"clearing_application_data\">Clearing application data...</string>\n+    <string name=\"clear_data_dialog_title\">Do you want to clear data to login with a different team/location</string>\n+    <string name=\"clear_data_dialog_message\">You are trying to login with a user in a different team/location. This will require as to upload any pending data and clear the data for the current user. Do you want to continue?</string>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzE5NzY5Mg=="}, "originalCommit": {"oid": "d92a5a49322efde2f7d5cd016f203ab46e3eea2d"}, "originalPosition": 11}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2150, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}