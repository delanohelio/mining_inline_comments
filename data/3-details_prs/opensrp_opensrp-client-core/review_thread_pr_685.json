{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE5MDAwODUw", "number": 685, "reviewThreads": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQwODoyOTo1OFrOE3msLA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxNToxMjowNVrOE5iFkg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2NzQxMDM2OnYy", "diffSide": "RIGHT", "path": "opensrp-app/src/main/java/org/smartregister/repository/EventClientRepository.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQwODoyOTo1OFrOHxDJkA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQwOToyMTozNFrOHxE5YQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTE5Mzg3Mg==", "bodyText": "this should be checking the form submission ids  from the events in the JSONArray", "url": "https://github.com/opensrp/opensrp-client-core/pull/685#discussion_r521193872", "createdAt": "2020-11-11T08:29:58Z", "author": {"login": "githengi"}, "path": "opensrp-app/src/main/java/org/smartregister/repository/EventClientRepository.java", "diffHunk": "@@ -532,14 +569,17 @@ public boolean batchInsertEvents(JSONArray array, long serverVersion) {\n         return batchInsertEvents(array, serverVersion, getWritableDatabase());\n     }\n \n-    public boolean batchInsertEvents(JSONArray array, long serverVersion, SQLiteDatabase sqLiteDatabase) {\n+    public boolean batchInsertEvents(JSONArray array, long serverVersion, SQLiteDatabase\n+            sqLiteDatabase) {\n         if (array == null || array.length() == 0) {\n             return false;\n         }\n \n         SQLiteStatement insertStatement = null;\n         SQLiteStatement updateStatement = null;\n \n+        populateFormSubmissionIds();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9d08cbec07e2c2468376e6edb1cf3252e643b8c2"}, "originalPosition": 81}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTIwMzEzNA==", "bodyText": "What if there are other events already saved?", "url": "https://github.com/opensrp/opensrp-client-core/pull/685#discussion_r521203134", "createdAt": "2020-11-11T08:47:20Z", "author": {"login": "bennsimon"}, "path": "opensrp-app/src/main/java/org/smartregister/repository/EventClientRepository.java", "diffHunk": "@@ -532,14 +569,17 @@ public boolean batchInsertEvents(JSONArray array, long serverVersion) {\n         return batchInsertEvents(array, serverVersion, getWritableDatabase());\n     }\n \n-    public boolean batchInsertEvents(JSONArray array, long serverVersion, SQLiteDatabase sqLiteDatabase) {\n+    public boolean batchInsertEvents(JSONArray array, long serverVersion, SQLiteDatabase\n+            sqLiteDatabase) {\n         if (array == null || array.length() == 0) {\n             return false;\n         }\n \n         SQLiteStatement insertStatement = null;\n         SQLiteStatement updateStatement = null;\n \n+        populateFormSubmissionIds();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTE5Mzg3Mg=="}, "originalCommit": {"oid": "9d08cbec07e2c2468376e6edb1cf3252e643b8c2"}, "originalPosition": 81}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTIyMjQ5Nw==", "bodyText": "this is to check the new events if they are already saved on the database. What other events are you referring to", "url": "https://github.com/opensrp/opensrp-client-core/pull/685#discussion_r521222497", "createdAt": "2020-11-11T09:21:34Z", "author": {"login": "githengi"}, "path": "opensrp-app/src/main/java/org/smartregister/repository/EventClientRepository.java", "diffHunk": "@@ -532,14 +569,17 @@ public boolean batchInsertEvents(JSONArray array, long serverVersion) {\n         return batchInsertEvents(array, serverVersion, getWritableDatabase());\n     }\n \n-    public boolean batchInsertEvents(JSONArray array, long serverVersion, SQLiteDatabase sqLiteDatabase) {\n+    public boolean batchInsertEvents(JSONArray array, long serverVersion, SQLiteDatabase\n+            sqLiteDatabase) {\n         if (array == null || array.length() == 0) {\n             return false;\n         }\n \n         SQLiteStatement insertStatement = null;\n         SQLiteStatement updateStatement = null;\n \n+        populateFormSubmissionIds();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTE5Mzg3Mg=="}, "originalCommit": {"oid": "9d08cbec07e2c2468376e6edb1cf3252e643b8c2"}, "originalPosition": 81}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2NzQxMjYxOnYy", "diffSide": "RIGHT", "path": "opensrp-app/src/main/java/org/smartregister/repository/EventClientRepository.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQwODozMDoyOFrOHxDKzw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQwODo0NTo1MlrOHxDqYw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTE5NDE5MQ==", "bodyText": "This should check for submissionids from those passed in the array. Also return the set in this method", "url": "https://github.com/opensrp/opensrp-client-core/pull/685#discussion_r521194191", "createdAt": "2020-11-11T08:30:28Z", "author": {"login": "githengi"}, "path": "opensrp-app/src/main/java/org/smartregister/repository/EventClientRepository.java", "diffHunk": "@@ -255,11 +257,45 @@ public Boolean checkIfExists(Table table, String baseEntityId, SQLiteDatabase sq\n         return false;\n     }\n \n+    public void populateFormSubmissionIds() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9d08cbec07e2c2468376e6edb1cf3252e643b8c2"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTIwMjI3NQ==", "bodyText": "What if there are events already saved?", "url": "https://github.com/opensrp/opensrp-client-core/pull/685#discussion_r521202275", "createdAt": "2020-11-11T08:45:52Z", "author": {"login": "bennsimon"}, "path": "opensrp-app/src/main/java/org/smartregister/repository/EventClientRepository.java", "diffHunk": "@@ -255,11 +257,45 @@ public Boolean checkIfExists(Table table, String baseEntityId, SQLiteDatabase sq\n         return false;\n     }\n \n+    public void populateFormSubmissionIds() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTE5NDE5MQ=="}, "originalCommit": {"oid": "9d08cbec07e2c2468376e6edb1cf3252e643b8c2"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2NzQxMzMyOnYy", "diffSide": "RIGHT", "path": "opensrp-app/src/main/java/org/smartregister/repository/EventClientRepository.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQwODozMDo0MFrOHxDLOw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQwODozMDo0MFrOHxDLOw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTE5NDI5OQ==", "bodyText": "use try with resources", "url": "https://github.com/opensrp/opensrp-client-core/pull/685#discussion_r521194299", "createdAt": "2020-11-11T08:30:40Z", "author": {"login": "githengi"}, "path": "opensrp-app/src/main/java/org/smartregister/repository/EventClientRepository.java", "diffHunk": "@@ -255,11 +257,45 @@ public Boolean checkIfExists(Table table, String baseEntityId, SQLiteDatabase sq\n         return false;\n     }\n \n+    public void populateFormSubmissionIds() {\n+        Cursor mCursor = null;\n+        if (formSubmissionIds == null)\n+            formSubmissionIds = new HashSet<>();\n+\n+        try {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9d08cbec07e2c2468376e6edb1cf3252e643b8c2"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2NzQyMTU2OnYy", "diffSide": "RIGHT", "path": "opensrp-app/src/main/java/org/smartregister/repository/EventClientRepository.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQwODozMzowMVrOHxDQBQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQwODozMzowMVrOHxDQBQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTE5NTUyNQ==", "bodyText": "This should be returned in the method and should not be an instance variable so that its reclaimed after batchInsert completes", "url": "https://github.com/opensrp/opensrp-client-core/pull/685#discussion_r521195525", "createdAt": "2020-11-11T08:33:01Z", "author": {"login": "githengi"}, "path": "opensrp-app/src/main/java/org/smartregister/repository/EventClientRepository.java", "diffHunk": "@@ -63,6 +63,8 @@\n     protected Table clientTable;\n     protected Table eventTable;\n \n+    private Set<String> formSubmissionIds;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9d08cbec07e2c2468376e6edb1cf3252e643b8c2"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2NzQyNTgyOnYy", "diffSide": "RIGHT", "path": "opensrp-app/src/main/java/org/smartregister/repository/EventClientRepository.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQwODozNDoyM1rOHxDSoQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQwOTo0MToyNlrOHxFnKQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTE5NjE5Mw==", "bodyText": "Not sure of this, can this just be formSubmissionIds.contains(formSubmissionId)", "url": "https://github.com/opensrp/opensrp-client-core/pull/685#discussion_r521196193", "createdAt": "2020-11-11T08:34:23Z", "author": {"login": "githengi"}, "path": "opensrp-app/src/main/java/org/smartregister/repository/EventClientRepository.java", "diffHunk": "@@ -255,11 +257,45 @@ public Boolean checkIfExists(Table table, String baseEntityId, SQLiteDatabase sq\n         return false;\n     }\n \n+    public void populateFormSubmissionIds() {\n+        Cursor mCursor = null;\n+        if (formSubmissionIds == null)\n+            formSubmissionIds = new HashSet<>();\n+\n+        try {\n+            String query = \"SELECT \"\n+                    + event_column.formSubmissionId\n+                    + \" FROM \"\n+                    + eventTable.name();\n+            mCursor = getReadableDatabase().rawQuery(query, new String[]{});\n+            if (mCursor != null) {\n+                while (mCursor.moveToNext()) {\n+                    formSubmissionIds.add(mCursor.getString(0));\n+                }\n+            }\n+        } catch (Exception e) {\n+            Timber.e(e);\n+        } finally {\n+            if (mCursor != null) {\n+                mCursor.close();\n+            }\n+        }\n+\n+    }\n+\n+    public Boolean checkIfExistsByFormSubmissionId(String formSubmissionId) {\n+        if (formSubmissionIds != null && StringUtils.isNotBlank(formSubmissionId)) {\n+            return !formSubmissionIds.add(formSubmissionId);\n+        }\n+        return false;\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9d08cbec07e2c2468376e6edb1cf3252e643b8c2"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTIwMjc1Ng==", "bodyText": ".add returns true if id does not exist ... i also need to insert the ids to the set when this happens", "url": "https://github.com/opensrp/opensrp-client-core/pull/685#discussion_r521202756", "createdAt": "2020-11-11T08:46:47Z", "author": {"login": "bennsimon"}, "path": "opensrp-app/src/main/java/org/smartregister/repository/EventClientRepository.java", "diffHunk": "@@ -255,11 +257,45 @@ public Boolean checkIfExists(Table table, String baseEntityId, SQLiteDatabase sq\n         return false;\n     }\n \n+    public void populateFormSubmissionIds() {\n+        Cursor mCursor = null;\n+        if (formSubmissionIds == null)\n+            formSubmissionIds = new HashSet<>();\n+\n+        try {\n+            String query = \"SELECT \"\n+                    + event_column.formSubmissionId\n+                    + \" FROM \"\n+                    + eventTable.name();\n+            mCursor = getReadableDatabase().rawQuery(query, new String[]{});\n+            if (mCursor != null) {\n+                while (mCursor.moveToNext()) {\n+                    formSubmissionIds.add(mCursor.getString(0));\n+                }\n+            }\n+        } catch (Exception e) {\n+            Timber.e(e);\n+        } finally {\n+            if (mCursor != null) {\n+                mCursor.close();\n+            }\n+        }\n+\n+    }\n+\n+    public Boolean checkIfExistsByFormSubmissionId(String formSubmissionId) {\n+        if (formSubmissionIds != null && StringUtils.isNotBlank(formSubmissionId)) {\n+            return !formSubmissionIds.add(formSubmissionId);\n+        }\n+        return false;\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTE5NjE5Mw=="}, "originalCommit": {"oid": "9d08cbec07e2c2468376e6edb1cf3252e643b8c2"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTIyMzg5OQ==", "bodyText": "Assuming the set has all the ids that already exist, I don't see the need to add to this list here", "url": "https://github.com/opensrp/opensrp-client-core/pull/685#discussion_r521223899", "createdAt": "2020-11-11T09:23:48Z", "author": {"login": "githengi"}, "path": "opensrp-app/src/main/java/org/smartregister/repository/EventClientRepository.java", "diffHunk": "@@ -255,11 +257,45 @@ public Boolean checkIfExists(Table table, String baseEntityId, SQLiteDatabase sq\n         return false;\n     }\n \n+    public void populateFormSubmissionIds() {\n+        Cursor mCursor = null;\n+        if (formSubmissionIds == null)\n+            formSubmissionIds = new HashSet<>();\n+\n+        try {\n+            String query = \"SELECT \"\n+                    + event_column.formSubmissionId\n+                    + \" FROM \"\n+                    + eventTable.name();\n+            mCursor = getReadableDatabase().rawQuery(query, new String[]{});\n+            if (mCursor != null) {\n+                while (mCursor.moveToNext()) {\n+                    formSubmissionIds.add(mCursor.getString(0));\n+                }\n+            }\n+        } catch (Exception e) {\n+            Timber.e(e);\n+        } finally {\n+            if (mCursor != null) {\n+                mCursor.close();\n+            }\n+        }\n+\n+    }\n+\n+    public Boolean checkIfExistsByFormSubmissionId(String formSubmissionId) {\n+        if (formSubmissionIds != null && StringUtils.isNotBlank(formSubmissionId)) {\n+            return !formSubmissionIds.add(formSubmissionId);\n+        }\n+        return false;\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTE5NjE5Mw=="}, "originalCommit": {"oid": "9d08cbec07e2c2468376e6edb1cf3252e643b8c2"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTIzNDIxNw==", "bodyText": "If i remove this i will need to add a separate .add after .contains  ... .add already tells me if it exists in the set", "url": "https://github.com/opensrp/opensrp-client-core/pull/685#discussion_r521234217", "createdAt": "2020-11-11T09:41:26Z", "author": {"login": "bennsimon"}, "path": "opensrp-app/src/main/java/org/smartregister/repository/EventClientRepository.java", "diffHunk": "@@ -255,11 +257,45 @@ public Boolean checkIfExists(Table table, String baseEntityId, SQLiteDatabase sq\n         return false;\n     }\n \n+    public void populateFormSubmissionIds() {\n+        Cursor mCursor = null;\n+        if (formSubmissionIds == null)\n+            formSubmissionIds = new HashSet<>();\n+\n+        try {\n+            String query = \"SELECT \"\n+                    + event_column.formSubmissionId\n+                    + \" FROM \"\n+                    + eventTable.name();\n+            mCursor = getReadableDatabase().rawQuery(query, new String[]{});\n+            if (mCursor != null) {\n+                while (mCursor.moveToNext()) {\n+                    formSubmissionIds.add(mCursor.getString(0));\n+                }\n+            }\n+        } catch (Exception e) {\n+            Timber.e(e);\n+        } finally {\n+            if (mCursor != null) {\n+                mCursor.close();\n+            }\n+        }\n+\n+    }\n+\n+    public Boolean checkIfExistsByFormSubmissionId(String formSubmissionId) {\n+        if (formSubmissionIds != null && StringUtils.isNotBlank(formSubmissionId)) {\n+            return !formSubmissionIds.add(formSubmissionId);\n+        }\n+        return false;\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTE5NjE5Mw=="}, "originalCommit": {"oid": "9d08cbec07e2c2468376e6edb1cf3252e643b8c2"}, "originalPosition": 44}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2NzQyNzYzOnYy", "diffSide": "RIGHT", "path": "opensrp-app/src/main/java/org/smartregister/repository/EventClientRepository.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQwODozNDo1N1rOHxDTuA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQwODo0NzoyNlrOHxDuCA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTE5NjQ3Mg==", "bodyText": "check formatting here", "url": "https://github.com/opensrp/opensrp-client-core/pull/685#discussion_r521196472", "createdAt": "2020-11-11T08:34:57Z", "author": {"login": "githengi"}, "path": "opensrp-app/src/main/java/org/smartregister/repository/EventClientRepository.java", "diffHunk": "@@ -1467,7 +1508,8 @@ public JSONObject getEventsByBaseEntityIdAndEventType(String baseEntityId, Strin\n         return null;\n     }\n \n-    public List<EventClient> getEventsByBaseEntityIdsAndSyncStatus(String syncStatus, List<String> baseEntityIds) {\n+    public List<EventClient> getEventsByBaseEntityIdsAndSyncStatus(String\n+                                                                           syncStatus, List<String> baseEntityIds) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9d08cbec07e2c2468376e6edb1cf3252e643b8c2"}, "originalPosition": 111}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTIwMzIwOA==", "bodyText": "changing", "url": "https://github.com/opensrp/opensrp-client-core/pull/685#discussion_r521203208", "createdAt": "2020-11-11T08:47:26Z", "author": {"login": "bennsimon"}, "path": "opensrp-app/src/main/java/org/smartregister/repository/EventClientRepository.java", "diffHunk": "@@ -1467,7 +1508,8 @@ public JSONObject getEventsByBaseEntityIdAndEventType(String baseEntityId, Strin\n         return null;\n     }\n \n-    public List<EventClient> getEventsByBaseEntityIdsAndSyncStatus(String syncStatus, List<String> baseEntityIds) {\n+    public List<EventClient> getEventsByBaseEntityIdsAndSyncStatus(String\n+                                                                           syncStatus, List<String> baseEntityIds) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTE5NjQ3Mg=="}, "originalCommit": {"oid": "9d08cbec07e2c2468376e6edb1cf3252e643b8c2"}, "originalPosition": 111}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI3OTE0Njk0OnYy", "diffSide": "RIGHT", "path": "opensrp-app/src/main/java/org/smartregister/repository/EventClientRepository.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QxNjowMjo1MFrOHy0LBw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QxNjowMjo1MFrOHy0LBw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzA0NTYzOQ==", "bodyText": "use ? i.e    StringUtils.repeat(\"?\",tempList.length) and pass the formsubmissions in rawQuery as second args. This is a safer database operation", "url": "https://github.com/opensrp/opensrp-client-core/pull/685#discussion_r523045639", "createdAt": "2020-11-13T16:02:50Z", "author": {"login": "githengi"}, "path": "opensrp-app/src/main/java/org/smartregister/repository/EventClientRepository.java", "diffHunk": "@@ -255,11 +259,78 @@ public Boolean checkIfExists(Table table, String baseEntityId, SQLiteDatabase sq\n         return false;\n     }\n \n+    private List<String> getFormSubmissionIdsFromJsonArray(JSONArray array) {\n+        if (array != null && array.length() != 0) {\n+            List<String> stringList = new ArrayList<>();\n+            for (int i = 0; i < array.length(); i++) {\n+                JSONObject jsonObject = array.optJSONObject(i);\n+                if (jsonObject != null) {\n+                    String formSubmissionId = jsonObject.optString(event_column.formSubmissionId.name());\n+                    if (StringUtils.isNotBlank(formSubmissionId)) {\n+                        stringList.add(formSubmissionId);\n+                    }\n+                }\n+            }\n+            return stringList;\n+        }\n+        return new ArrayList<>();\n+    }\n+\n+    protected void populateFormSubmissionIds(@NonNull List<String> formSubmissionIdsList,\n+                                             Set<String> formSubmissionIds) {\n+        populateFormSubmissionIds(formSubmissionIdsList, formSubmissionIds, null);\n+    }\n+\n+    protected void populateFormSubmissionIds(@NonNull List<String> formSubmissionIdsList,\n+                                             Set<String> formSubmissionIds, @Nullable Integer pageSize) {\n+        Integer pageSizeInteger = pageSize;\n+\n+        if (pageSizeInteger == null) {\n+            pageSizeInteger = FORM_SUBMISSION_IDS_PAGE_SIZE;\n+        }\n+\n+        String query = \"SELECT \"\n+                + EventClientRepository.event_column.formSubmissionId\n+                + \" FROM event\";\n+\n+        List<String> tempList;\n+\n+        boolean shouldEnd = false;\n+\n+        if (formSubmissionIdsList.size() <= pageSizeInteger) {\n+            tempList = formSubmissionIdsList;\n+            shouldEnd = true;\n+        } else {\n+            tempList = formSubmissionIdsList.subList(0, pageSizeInteger);\n+        }\n+\n+        int limit = formSubmissionIdsList.size() - pageSizeInteger;\n+\n+        query += \" WHERE \" + EventClientRepository.event_column.formSubmissionId + \" IN ('\" + StringUtils.join(tempList, \"','\") + \"')\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1007d874e3d27cc203bf05055c252118670c1139"}, "originalPosition": 78}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI3OTE1OTI2OnYy", "diffSide": "RIGHT", "path": "opensrp-app/src/main/java/org/smartregister/repository/EventClientRepository.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QxNjowNTo1NFrOHy0ScQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QxNjowNTo1NFrOHy0ScQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzA0NzUzNw==", "bodyText": "This should return formSubmissionIds as this is a recursive function", "url": "https://github.com/opensrp/opensrp-client-core/pull/685#discussion_r523047537", "createdAt": "2020-11-13T16:05:54Z", "author": {"login": "githengi"}, "path": "opensrp-app/src/main/java/org/smartregister/repository/EventClientRepository.java", "diffHunk": "@@ -255,11 +259,78 @@ public Boolean checkIfExists(Table table, String baseEntityId, SQLiteDatabase sq\n         return false;\n     }\n \n+    private List<String> getFormSubmissionIdsFromJsonArray(JSONArray array) {\n+        if (array != null && array.length() != 0) {\n+            List<String> stringList = new ArrayList<>();\n+            for (int i = 0; i < array.length(); i++) {\n+                JSONObject jsonObject = array.optJSONObject(i);\n+                if (jsonObject != null) {\n+                    String formSubmissionId = jsonObject.optString(event_column.formSubmissionId.name());\n+                    if (StringUtils.isNotBlank(formSubmissionId)) {\n+                        stringList.add(formSubmissionId);\n+                    }\n+                }\n+            }\n+            return stringList;\n+        }\n+        return new ArrayList<>();\n+    }\n+\n+    protected void populateFormSubmissionIds(@NonNull List<String> formSubmissionIdsList,\n+                                             Set<String> formSubmissionIds) {\n+        populateFormSubmissionIds(formSubmissionIdsList, formSubmissionIds, null);\n+    }\n+\n+    protected void populateFormSubmissionIds(@NonNull List<String> formSubmissionIdsList,\n+                                             Set<String> formSubmissionIds, @Nullable Integer pageSize) {\n+        Integer pageSizeInteger = pageSize;\n+\n+        if (pageSizeInteger == null) {\n+            pageSizeInteger = FORM_SUBMISSION_IDS_PAGE_SIZE;\n+        }\n+\n+        String query = \"SELECT \"\n+                + EventClientRepository.event_column.formSubmissionId\n+                + \" FROM event\";\n+\n+        List<String> tempList;\n+\n+        boolean shouldEnd = false;\n+\n+        if (formSubmissionIdsList.size() <= pageSizeInteger) {\n+            tempList = formSubmissionIdsList;\n+            shouldEnd = true;\n+        } else {\n+            tempList = formSubmissionIdsList.subList(0, pageSizeInteger);\n+        }\n+\n+        int limit = formSubmissionIdsList.size() - pageSizeInteger;\n+\n+        query += \" WHERE \" + EventClientRepository.event_column.formSubmissionId + \" IN ('\" + StringUtils.join(tempList, \"','\") + \"')\";\n+\n+        try (Cursor mCursor = getReadableDatabase().rawQuery(query, null)) {\n+            if (mCursor != null) {\n+                while (mCursor.moveToNext()) {\n+                    formSubmissionIds.add(mCursor.getString(0));\n+                }\n+            }\n+        } catch (SQLException e) {\n+            Timber.e(e);\n+        }\n+\n+        if (shouldEnd) {\n+            return;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1007d874e3d27cc203bf05055c252118670c1139"}, "originalPosition": 91}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI3OTE2OTEwOnYy", "diffSide": "RIGHT", "path": "opensrp-app/src/main/java/org/smartregister/repository/EventClientRepository.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QxNjowODozMFrOHy0Yhw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QxNjowODozMFrOHy0Yhw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzA0OTA5NQ==", "bodyText": "can be properly named", "url": "https://github.com/opensrp/opensrp-client-core/pull/685#discussion_r523049095", "createdAt": "2020-11-13T16:08:30Z", "author": {"login": "githengi"}, "path": "opensrp-app/src/main/java/org/smartregister/repository/EventClientRepository.java", "diffHunk": "@@ -255,11 +259,78 @@ public Boolean checkIfExists(Table table, String baseEntityId, SQLiteDatabase sq\n         return false;\n     }\n \n+    private List<String> getFormSubmissionIdsFromJsonArray(JSONArray array) {\n+        if (array != null && array.length() != 0) {\n+            List<String> stringList = new ArrayList<>();\n+            for (int i = 0; i < array.length(); i++) {\n+                JSONObject jsonObject = array.optJSONObject(i);\n+                if (jsonObject != null) {\n+                    String formSubmissionId = jsonObject.optString(event_column.formSubmissionId.name());\n+                    if (StringUtils.isNotBlank(formSubmissionId)) {\n+                        stringList.add(formSubmissionId);\n+                    }\n+                }\n+            }\n+            return stringList;\n+        }\n+        return new ArrayList<>();\n+    }\n+\n+    protected void populateFormSubmissionIds(@NonNull List<String> formSubmissionIdsList,\n+                                             Set<String> formSubmissionIds) {\n+        populateFormSubmissionIds(formSubmissionIdsList, formSubmissionIds, null);\n+    }\n+\n+    protected void populateFormSubmissionIds(@NonNull List<String> formSubmissionIdsList,\n+                                             Set<String> formSubmissionIds, @Nullable Integer pageSize) {\n+        Integer pageSizeInteger = pageSize;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1007d874e3d27cc203bf05055c252118670c1139"}, "originalPosition": 55}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI4NzU5NzQ3OnYy", "diffSide": "RIGHT", "path": "opensrp-app/src/main/java/org/smartregister/repository/EventClientRepository.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxNTowNToyOVrOH0C5cA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxNTowNToyOVrOH0C5cA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDMzNTQ3Mg==", "bodyText": "limit = formSubmissionIdsList.size() - tempPageSize;\nand we are passing tempPageSize + limit which is simplified to formSubmissionIdsList.size()", "url": "https://github.com/opensrp/opensrp-client-core/pull/685#discussion_r524335472", "createdAt": "2020-11-16T15:05:29Z", "author": {"login": "githengi"}, "path": "opensrp-app/src/main/java/org/smartregister/repository/EventClientRepository.java", "diffHunk": "@@ -255,11 +259,78 @@ public Boolean checkIfExists(Table table, String baseEntityId, SQLiteDatabase sq\n         return false;\n     }\n \n+    private List<String> getFormSubmissionIdsFromJsonArray(JSONArray array) {\n+        if (array != null && array.length() != 0) {\n+            List<String> stringList = new ArrayList<>();\n+            for (int i = 0; i < array.length(); i++) {\n+                JSONObject jsonObject = array.optJSONObject(i);\n+                if (jsonObject != null) {\n+                    String formSubmissionId = jsonObject.optString(event_column.formSubmissionId.name());\n+                    if (StringUtils.isNotBlank(formSubmissionId)) {\n+                        stringList.add(formSubmissionId);\n+                    }\n+                }\n+            }\n+            return stringList;\n+        }\n+        return new ArrayList<>();\n+    }\n+\n+    protected void populateFormSubmissionIds(@NonNull List<String> formSubmissionIdsList,\n+                                             Set<String> formSubmissionIds) {\n+        populateFormSubmissionIds(formSubmissionIdsList, formSubmissionIds, null);\n+    }\n+\n+    protected void populateFormSubmissionIds(@NonNull List<String> formSubmissionIdsList,\n+                                             Set<String> formSubmissionIds, @Nullable Integer pageSize) {\n+        Integer tempPageSize = pageSize;\n+\n+        if (tempPageSize == null) {\n+            tempPageSize = FORM_SUBMISSION_IDS_PAGE_SIZE;\n+        }\n+\n+        String query = \"SELECT \"\n+                + EventClientRepository.event_column.formSubmissionId\n+                + \" FROM event\";\n+\n+        List<String> tempList;\n+\n+        boolean shouldEnd = false;\n+\n+        if (formSubmissionIdsList.size() <= tempPageSize) {\n+            tempList = formSubmissionIdsList;\n+            shouldEnd = true;\n+        } else {\n+            tempList = formSubmissionIdsList.subList(0, tempPageSize);\n+        }\n+\n+        int limit = formSubmissionIdsList.size() - tempPageSize;\n+\n+        query += \" WHERE \" + EventClientRepository.event_column.formSubmissionId + \" IN ( \" + StringUtils.repeat(\"?\", \", \", tempList.size()) + \")\";\n+\n+        try (Cursor mCursor = getReadableDatabase().rawQuery(query, tempList.toArray(new String[0]))) {\n+            if (mCursor != null) {\n+                while (mCursor.moveToNext()) {\n+                    formSubmissionIds.add(mCursor.getString(0));\n+                }\n+            }\n+        } catch (SQLException e) {\n+            Timber.e(e);\n+        }\n+\n+        if (shouldEnd) {\n+            return;\n+        }\n+\n+        populateFormSubmissionIds(formSubmissionIdsList.subList(tempPageSize, tempPageSize + limit), formSubmissionIds, tempPageSize);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "71213bb121415192f6598db6ddba9ad8d61a26a8"}, "originalPosition": 94}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI4NzYxNTIyOnYy", "diffSide": "RIGHT", "path": "opensrp-app/src/main/java/org/smartregister/repository/EventClientRepository.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxNTowOToyMlrOH0DEHg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxNTowOToyMlrOH0DEHg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDMzODIwNg==", "bodyText": "Can we just remove creation of additional variables and just use FORM_SUBMISSION_IDS_PAGE_SIZE", "url": "https://github.com/opensrp/opensrp-client-core/pull/685#discussion_r524338206", "createdAt": "2020-11-16T15:09:22Z", "author": {"login": "githengi"}, "path": "opensrp-app/src/main/java/org/smartregister/repository/EventClientRepository.java", "diffHunk": "@@ -255,11 +259,78 @@ public Boolean checkIfExists(Table table, String baseEntityId, SQLiteDatabase sq\n         return false;\n     }\n \n+    private List<String> getFormSubmissionIdsFromJsonArray(JSONArray array) {\n+        if (array != null && array.length() != 0) {\n+            List<String> stringList = new ArrayList<>();\n+            for (int i = 0; i < array.length(); i++) {\n+                JSONObject jsonObject = array.optJSONObject(i);\n+                if (jsonObject != null) {\n+                    String formSubmissionId = jsonObject.optString(event_column.formSubmissionId.name());\n+                    if (StringUtils.isNotBlank(formSubmissionId)) {\n+                        stringList.add(formSubmissionId);\n+                    }\n+                }\n+            }\n+            return stringList;\n+        }\n+        return new ArrayList<>();\n+    }\n+\n+    protected void populateFormSubmissionIds(@NonNull List<String> formSubmissionIdsList,\n+                                             Set<String> formSubmissionIds) {\n+        populateFormSubmissionIds(formSubmissionIdsList, formSubmissionIds, null);\n+    }\n+\n+    protected void populateFormSubmissionIds(@NonNull List<String> formSubmissionIdsList,\n+                                             Set<String> formSubmissionIds, @Nullable Integer pageSize) {\n+        Integer tempPageSize = pageSize;\n+\n+        if (tempPageSize == null) {\n+            tempPageSize = FORM_SUBMISSION_IDS_PAGE_SIZE;\n+        }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "71213bb121415192f6598db6ddba9ad8d61a26a8"}, "originalPosition": 60}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI4NzYxNzg3OnYy", "diffSide": "RIGHT", "path": "opensrp-app/src/main/java/org/smartregister/repository/EventClientRepository.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxNTowOTo1NlrOH0DFyQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxNTowOTo1NlrOH0DFyQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDMzODYzMw==", "bodyText": "not sure can we remove parameter @Nullable Integer pageSize and use FORM_SUBMISSION_IDS_PAGE_SIZE", "url": "https://github.com/opensrp/opensrp-client-core/pull/685#discussion_r524338633", "createdAt": "2020-11-16T15:09:56Z", "author": {"login": "githengi"}, "path": "opensrp-app/src/main/java/org/smartregister/repository/EventClientRepository.java", "diffHunk": "@@ -255,11 +259,78 @@ public Boolean checkIfExists(Table table, String baseEntityId, SQLiteDatabase sq\n         return false;\n     }\n \n+    private List<String> getFormSubmissionIdsFromJsonArray(JSONArray array) {\n+        if (array != null && array.length() != 0) {\n+            List<String> stringList = new ArrayList<>();\n+            for (int i = 0; i < array.length(); i++) {\n+                JSONObject jsonObject = array.optJSONObject(i);\n+                if (jsonObject != null) {\n+                    String formSubmissionId = jsonObject.optString(event_column.formSubmissionId.name());\n+                    if (StringUtils.isNotBlank(formSubmissionId)) {\n+                        stringList.add(formSubmissionId);\n+                    }\n+                }\n+            }\n+            return stringList;\n+        }\n+        return new ArrayList<>();\n+    }\n+\n+    protected void populateFormSubmissionIds(@NonNull List<String> formSubmissionIdsList,\n+                                             Set<String> formSubmissionIds) {\n+        populateFormSubmissionIds(formSubmissionIdsList, formSubmissionIds, null);\n+    }\n+\n+    protected void populateFormSubmissionIds(@NonNull List<String> formSubmissionIdsList,\n+                                             Set<String> formSubmissionIds, @Nullable Integer pageSize) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "71213bb121415192f6598db6ddba9ad8d61a26a8"}, "originalPosition": 54}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI4NzYyNzcwOnYy", "diffSide": "RIGHT", "path": "opensrp-app/src/main/java/org/smartregister/repository/EventClientRepository.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxNToxMjowNVrOH0DLzg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxNToxMjowNVrOH0DLzg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDM0MDE3NA==", "bodyText": "Can we define the whole query variable here", "url": "https://github.com/opensrp/opensrp-client-core/pull/685#discussion_r524340174", "createdAt": "2020-11-16T15:12:05Z", "author": {"login": "githengi"}, "path": "opensrp-app/src/main/java/org/smartregister/repository/EventClientRepository.java", "diffHunk": "@@ -255,11 +259,78 @@ public Boolean checkIfExists(Table table, String baseEntityId, SQLiteDatabase sq\n         return false;\n     }\n \n+    private List<String> getFormSubmissionIdsFromJsonArray(JSONArray array) {\n+        if (array != null && array.length() != 0) {\n+            List<String> stringList = new ArrayList<>();\n+            for (int i = 0; i < array.length(); i++) {\n+                JSONObject jsonObject = array.optJSONObject(i);\n+                if (jsonObject != null) {\n+                    String formSubmissionId = jsonObject.optString(event_column.formSubmissionId.name());\n+                    if (StringUtils.isNotBlank(formSubmissionId)) {\n+                        stringList.add(formSubmissionId);\n+                    }\n+                }\n+            }\n+            return stringList;\n+        }\n+        return new ArrayList<>();\n+    }\n+\n+    protected void populateFormSubmissionIds(@NonNull List<String> formSubmissionIdsList,\n+                                             Set<String> formSubmissionIds) {\n+        populateFormSubmissionIds(formSubmissionIdsList, formSubmissionIds, null);\n+    }\n+\n+    protected void populateFormSubmissionIds(@NonNull List<String> formSubmissionIdsList,\n+                                             Set<String> formSubmissionIds, @Nullable Integer pageSize) {\n+        Integer tempPageSize = pageSize;\n+\n+        if (tempPageSize == null) {\n+            tempPageSize = FORM_SUBMISSION_IDS_PAGE_SIZE;\n+        }\n+\n+        String query = \"SELECT \"\n+                + EventClientRepository.event_column.formSubmissionId\n+                + \" FROM event\";\n+\n+        List<String> tempList;\n+\n+        boolean shouldEnd = false;\n+\n+        if (formSubmissionIdsList.size() <= tempPageSize) {\n+            tempList = formSubmissionIdsList;\n+            shouldEnd = true;\n+        } else {\n+            tempList = formSubmissionIdsList.subList(0, tempPageSize);\n+        }\n+\n+        int limit = formSubmissionIdsList.size() - tempPageSize;\n+\n+        query += \" WHERE \" + EventClientRepository.event_column.formSubmissionId + \" IN ( \" + StringUtils.repeat(\"?\", \", \", tempList.size()) + \")\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "71213bb121415192f6598db6ddba9ad8d61a26a8"}, "originalPosition": 78}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2125, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}