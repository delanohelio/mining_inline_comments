{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU0NDQ5MzI1", "number": 4531, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxNjozMDo0MFrOERhqdA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxNjozMDo0MFrOERhqdA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2ODEyNzg4OnYy", "diffSide": "RIGHT", "path": "core-common/src/main/java/org/glassfish/jersey/logging/LoggingInterceptor.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxNjozMDo0MFrOG2SZkA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQwNzoxNDozNlrOG2lTwA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTU3Nzc0NA==", "bodyText": "is there any objection to rewrite it like this:\n        @Override\n        public void write(byte[] ba, int off, int len) throws IOException {\n            if ((off | len | ba.length - (len + off) | off + len) < 0) {\n                throw new IndexOutOfBoundsException();\n            }\n            if ((baos.size() + len) <= maxEntitySize) {\n                baos.write(ba, off, len);\n            } \n            out.write(ba, off, len);\n        }\n\n?", "url": "https://github.com/eclipse-ee4j/jersey/pull/4531#discussion_r459577744", "createdAt": "2020-07-23T16:30:40Z", "author": {"login": "senivam"}, "path": "core-common/src/main/java/org/glassfish/jersey/logging/LoggingInterceptor.java", "diffHunk": "@@ -285,6 +285,24 @@ public void write(final int i) throws IOException {\n             }\n             out.write(i);\n         }\n+\n+        @Override\n+        public void write(byte[] ba, int off, int len) throws IOException {\n+            if ((off | len | ba.length - (len + off) | off + len) < 0) {\n+                throw new IndexOutOfBoundsException();\n+            } else {\n+                if ((baos.size() + len) <= maxEntitySize) {\n+                    for (int i = 0; i < len; ++i) {\n+                        baos.write(ba[off + i]);\n+                        out.write(ba[off + i]);\n+                    }\n+                } else {\n+                    for (int i = 0; i < len; ++i) {\n+                        out.write(ba[off + i]);\n+                    }\n+                }\n+            }\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "51f906798c55688949f91e0c2ea9a2903aaca5c3"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTg4NzU1Mg==", "bodyText": "No objection, thanks for the tips !", "url": "https://github.com/eclipse-ee4j/jersey/pull/4531#discussion_r459887552", "createdAt": "2020-07-24T07:14:36Z", "author": {"login": "tvallin"}, "path": "core-common/src/main/java/org/glassfish/jersey/logging/LoggingInterceptor.java", "diffHunk": "@@ -285,6 +285,24 @@ public void write(final int i) throws IOException {\n             }\n             out.write(i);\n         }\n+\n+        @Override\n+        public void write(byte[] ba, int off, int len) throws IOException {\n+            if ((off | len | ba.length - (len + off) | off + len) < 0) {\n+                throw new IndexOutOfBoundsException();\n+            } else {\n+                if ((baos.size() + len) <= maxEntitySize) {\n+                    for (int i = 0; i < len; ++i) {\n+                        baos.write(ba[off + i]);\n+                        out.write(ba[off + i]);\n+                    }\n+                } else {\n+                    for (int i = 0; i < len; ++i) {\n+                        out.write(ba[off + i]);\n+                    }\n+                }\n+            }\n+        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTU3Nzc0NA=="}, "originalCommit": {"oid": "51f906798c55688949f91e0c2ea9a2903aaca5c3"}, "originalPosition": 28}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1347, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}