{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI5NDk1MzQw", "number": 4647, "title": "Add support RFC 5987 for attribute filename* in HTTP header Content-Disposition", "bodyText": "Add support RFC 5987 for attribute filename* in HTTP header Content-Disposition", "createdAt": "2020-11-30T11:50:20Z", "url": "https://github.com/eclipse-ee4j/jersey/pull/4647", "merged": true, "mergeCommit": {"oid": "830db2e818e7fb074657e71f2c82d43cccaa5226"}, "closed": true, "closedAt": "2021-01-14T12:24:03Z", "author": {"login": "aserkes"}, "timelineItems": {"totalCount": 17, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdhj5HeAH2gAyNTI5NDk1MzQwOjQ1MjJkOTRjNGE2ZDg5MmUwMTk0ZGVmZjQ2OGRjMjFkMDMxYTY4MDE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdvuM6ogFqTU2NzE0MDI1Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "4522d94c4a6d892e0194deff468dc21d031a6801", "author": {"user": {"login": "aserkes", "name": "Andrii Serkes"}}, "url": "https://github.com/eclipse-ee4j/jersey/commit/4522d94c4a6d892e0194deff468dc21d031a6801", "committedDate": "2020-11-30T11:45:48Z", "message": "Add support RFC 5987 for attribute filename* in HTTP header Content-Disposition\n\nSigned-off-by: Andrii Serkes <andrii.serkes@oracle.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9c1437bd5e84f9778435051e0ef94e98662e0579", "author": {"user": {"login": "aserkes", "name": "Andrii Serkes"}}, "url": "https://github.com/eclipse-ee4j/jersey/commit/9c1437bd5e84f9778435051e0ef94e98662e0579", "committedDate": "2020-11-30T11:47:13Z", "message": "Update year in Copyright comments\n\nSigned-off-by: Andrii Serkes <andrii.serkes@oracle.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQzOTI4OTk2", "url": "https://github.com/eclipse-ee4j/jersey/pull/4647#pullrequestreview-543928996", "createdAt": "2020-12-03T13:01:48Z", "commit": {"oid": "9c1437bd5e84f9778435051e0ef94e98662e0579"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxMzowMTo0OFrOH-ahjw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxMzowMTo0OFrOH-ahjw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTIwODMzNQ==", "bodyText": "I am not expert on RFC 5987 but for example this (ISO-8859-1 in lower case) will not match:\niso-8859-1'language-us'abc%a1abc%a2%b1!#$&+.^_`|~-\nIt would be good to pick many examples of valid strings for testing.", "url": "https://github.com/eclipse-ee4j/jersey/pull/4647#discussion_r535208335", "createdAt": "2020-12-03T13:01:48Z", "author": {"login": "jbescos"}, "path": "media/multipart/src/main/java/org/glassfish/jersey/media/multipart/ContentDisposition.java", "diffHunk": "@@ -40,6 +41,8 @@\n     private Date modificationDate;\n     private Date readDate;\n     private long size;\n+    private static final Pattern FILENAME_EXT_VALUE_PATTERN =\n+            Pattern.compile(\"(UTF-8|ISO-8859-1)'([a-z]{2,8}(-[a-z0-9]+)?)?'(%[a-f0-9]{2}|[a-z0-9!#$&+.^_`|~-])+\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9c1437bd5e84f9778435051e0ef94e98662e0579"}, "originalPosition": 20}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3089053bbc186c6ea6ed0fecd02cc8c864b521bc", "author": {"user": {"login": "aserkes", "name": "Andrii Serkes"}}, "url": "https://github.com/eclipse-ee4j/jersey/commit/3089053bbc186c6ea6ed0fecd02cc8c864b521bc", "committedDate": "2020-12-05T19:17:28Z", "message": "Fix problem with capital letters, add more filename patterns for tests\n\nSigned-off-by: Andrii Serkes <andrii.serkes@oracle.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ1NjQ5NDgx", "url": "https://github.com/eclipse-ee4j/jersey/pull/4647#pullrequestreview-545649481", "createdAt": "2020-12-05T21:02:47Z", "commit": {"oid": "3089053bbc186c6ea6ed0fecd02cc8c864b521bc"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNVQyMTowMjo0N1rOIABTOw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNVQyMTowMjo0N1rOIABTOw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjg5MjIxOQ==", "bodyText": "regarding those tests - it would be good to extract duplicated code into some method and call it only with those parameters which differs.", "url": "https://github.com/eclipse-ee4j/jersey/pull/4647#discussion_r536892219", "createdAt": "2020-12-05T21:02:47Z", "author": {"login": "senivam"}, "path": "tests/e2e/src/test/java/org/glassfish/jersey/tests/api/ContentDispositionTest.java", "diffHunk": "@@ -97,6 +97,136 @@ public void testToString() {\n         assertEquals(header, contentDisposition.toString());\n     }\n \n+    @Test\n+    public void testFileNameExt() {\n+        final Date date = new Date();\n+        final String dateString = HttpDateFormat.getPreferredDateFormat().format(date);\n+        final String fileName = \"test.file\";\n+\n+        try {\n+            //correct fileNameExt\n+            String fileNameExt = \"testExt.file\";\n+            final String prefixHeader = contentDispositionType + \";filename=\\\"\" + fileName + \"\\\";\"\n+                    + \"creation-date=\\\"\" + dateString + \"\\\";modification-date=\\\"\" + dateString + \"\\\";read-date=\\\"\"\n+                    + dateString + \"\\\";size=1222\" + \";name=\\\"testData\\\";\" + \"filename*=\\\"\";\n+            String header = prefixHeader + fileNameExt + \"\\\"\";\n+            ContentDisposition contentDisposition =\n+                    new ContentDisposition(HttpHeaderReader.newInstance(header), true);\n+            assertEquals(fileName, contentDisposition.getFileName());\n+\n+            //correct fileNameExt\n+            fileNameExt = \"ISO-8859-1'language-us'abc%a1abc%a2%b1!#$&+.^_`|~-\";\n+            header = prefixHeader + fileNameExt + \"\\\"\";\n+            contentDisposition = new ContentDisposition(HttpHeaderReader.newInstance(header), true);\n+            assertEquals(fileNameExt, contentDisposition.getFileName());\n+\n+            //correct fileNameExt\n+            fileNameExt = \"UTF-8'us'fileName.txt\";\n+            header = prefixHeader + fileNameExt + \"\\\"\";\n+            contentDisposition = new ContentDisposition(HttpHeaderReader.newInstance(header), true);\n+            assertEquals(fileNameExt, contentDisposition.getFileName());\n+\n+            //incorrect fileNameExt\n+            fileNameExt = \"utf-8'languageTooLong'fileName.txt\";\n+            header = prefixHeader + fileNameExt + \"\\\"\";\n+            contentDisposition = new ContentDisposition(HttpHeaderReader.newInstance(header), true);\n+            assertEquals(fileName, contentDisposition.getFileName());\n+\n+            //correct fileNameExt\n+            fileNameExt = \"utf-8''a\";\n+            header = prefixHeader + fileNameExt + \"\\\"\";\n+            contentDisposition = new ContentDisposition(HttpHeaderReader.newInstance(header), true);\n+            assertEquals(fileNameExt, contentDisposition.getFileName());\n+\n+            //incorrect fileNameExt\n+            fileNameExt = \"utf-8'lang-'a\";\n+            header = prefixHeader + fileNameExt + \"\\\"\";\n+            contentDisposition = new ContentDisposition(HttpHeaderReader.newInstance(header), true);\n+            assertEquals(fileName, contentDisposition.getFileName());\n+\n+            //correct fileNameExt\n+            fileNameExt = \"ISO-8859-1'language-us'a\";\n+            header = prefixHeader + fileNameExt + \"\\\"\";\n+            contentDisposition = new ContentDisposition(HttpHeaderReader.newInstance(header), true);\n+            assertEquals(fileNameExt, contentDisposition.getFileName());\n+\n+            //correct fileNameExt\n+            fileNameExt = \"ISO-8859-1'language-us'a%a1\";\n+            header = prefixHeader + fileNameExt + \"\\\"\";\n+            contentDisposition = new ContentDisposition(HttpHeaderReader.newInstance(header), true);\n+            assertEquals(fileNameExt, contentDisposition.getFileName());\n+\n+            //incorrect fileNameExt\n+            fileNameExt = \"ISO-8859-1'language-us'a%z1\";\n+            header = prefixHeader + fileNameExt + \"\\\"\";\n+            contentDisposition = new ContentDisposition(HttpHeaderReader.newInstance(header), true);\n+            assertEquals(fileName, contentDisposition.getFileName());\n+\n+            //correct fileNameExt\n+            fileNameExt = \"ISO-8859-1'language-us'abc%a1abc%a2%b1\";\n+            header = prefixHeader + fileNameExt + \"\\\"\";\n+            contentDisposition = new ContentDisposition(HttpHeaderReader.newInstance(header), true);\n+            assertEquals(fileNameExt, contentDisposition.getFileName());\n+\n+            //incorrect fileNameExt\n+            fileNameExt = \"ISO-8859-1'language-us'a%\";\n+            header = prefixHeader + fileNameExt + \"\\\"\";\n+            contentDisposition = new ContentDisposition(HttpHeaderReader.newInstance(header), true);\n+            assertEquals(fileName, contentDisposition.getFileName());\n+\n+            //correct fileNameExt\n+            fileNameExt = \"ISO-8859-1'language-us'abc%a1abc%a2%b1!#$&+.^_`|~-\";\n+            header = prefixHeader + fileNameExt + \"\\\"\";\n+            contentDisposition = new ContentDisposition(HttpHeaderReader.newInstance(header), true);\n+            assertEquals(fileNameExt, contentDisposition.getFileName());\n+\n+            //correct fileNameExt\n+            fileNameExt = \"ISO-8859-1'language-us'abc%a1abc%a2%b1!#$&+.^_`|~-\";\n+            header = prefixHeader + fileNameExt + \"\\\"\";\n+            contentDisposition = new ContentDisposition(HttpHeaderReader.newInstance(header), true);\n+            assertEquals(fileNameExt, contentDisposition.getFileName());\n+\n+            //correct fileNameExt\n+            fileNameExt = \"iso-8859-1'language-us'abc.TXT\";\n+            header = prefixHeader + fileNameExt + \"\\\"\";\n+            contentDisposition = new ContentDisposition(HttpHeaderReader.newInstance(header), true);\n+            assertEquals(fileNameExt, contentDisposition.getFileName());\n+\n+            //incorrect fileNameExt\n+            fileNameExt = \"ISO-8859-1'language-us'\";\n+            header = prefixHeader + fileNameExt + \"\\\"\";\n+            contentDisposition = new ContentDisposition(HttpHeaderReader.newInstance(header), true);\n+            assertEquals(fileName, contentDisposition.getFileName());\n+\n+            //incorrect fileNameExt\n+            fileNameExt = \"ISO-8859-1'language-us'c:\\\\file.txt\";\n+            header = prefixHeader + fileNameExt + \"\\\"\";\n+            contentDisposition = new ContentDisposition(HttpHeaderReader.newInstance(header), true);\n+            assertEquals(fileName, contentDisposition.getFileName());\n+\n+            //incorrect fileNameExt\n+            fileNameExt = \"ISO-8859-1'language-us'home/file.txt\";\n+            header = prefixHeader + fileNameExt + \"\\\"\";\n+            contentDisposition = new ContentDisposition(HttpHeaderReader.newInstance(header), true);\n+            assertEquals(fileName, contentDisposition.getFileName());\n+\n+            //incorrect fileNameExt\n+            fileNameExt = \"ISO-8859-1'language-us'\u674e.txt\";\n+            header = prefixHeader + fileNameExt + \"\\\"\";\n+            contentDisposition = new ContentDisposition(HttpHeaderReader.newInstance(header), true);\n+            assertEquals(fileName, contentDisposition.getFileName());\n+\n+            //correct fileNameExt\n+            fileNameExt = \"ISO-8859-1'language-us'FILEname.tXt\";\n+            header = prefixHeader + fileNameExt + \"\\\"\";\n+            contentDisposition = new ContentDisposition(HttpHeaderReader.newInstance(header), true);\n+            assertEquals(fileNameExt, contentDisposition.getFileName());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3089053bbc186c6ea6ed0fecd02cc8c864b521bc"}, "originalPosition": 134}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "109e685d99d2458f18c5629af8521095b960625c", "author": {"user": {"login": "aserkes", "name": "Andrii Serkes"}}, "url": "https://github.com/eclipse-ee4j/jersey/commit/109e685d99d2458f18c5629af8521095b960625c", "committedDate": "2020-12-07T11:42:19Z", "message": "code refactoring\n\nSigned-off-by: Andrii Serkes <andrii.serkes@oracle.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b8fac127278365f5de870fc43f6ff3b1c34a0c27", "author": {"user": {"login": "aserkes", "name": "Andrii Serkes"}}, "url": "https://github.com/eclipse-ee4j/jersey/commit/b8fac127278365f5de870fc43f6ff3b1c34a0c27", "committedDate": "2021-01-04T09:02:13Z", "message": "Encode a filename parameter if it is not encoded, throw an exception if a filename parameter is not valid\n\nSigned-off-by: aserkes <andrii.serkes@oracle.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "83d048ed93217c0f9554f215a065ffc808e2b53e", "author": {"user": {"login": "aserkes", "name": "Andrii Serkes"}}, "url": "https://github.com/eclipse-ee4j/jersey/commit/83d048ed93217c0f9554f215a065ffc808e2b53e", "committedDate": "2021-01-04T08:42:42Z", "message": "Encode a filename parameter if it is not encoded, throw an exception if a filename parameter is not valid"}, "afterCommit": {"oid": "b8fac127278365f5de870fc43f6ff3b1c34a0c27", "author": {"user": {"login": "aserkes", "name": "Andrii Serkes"}}, "url": "https://github.com/eclipse-ee4j/jersey/commit/b8fac127278365f5de870fc43f6ff3b1c34a0c27", "committedDate": "2021-01-04T09:02:13Z", "message": "Encode a filename parameter if it is not encoded, throw an exception if a filename parameter is not valid\n\nSigned-off-by: aserkes <andrii.serkes@oracle.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYyMjAyODcw", "url": "https://github.com/eclipse-ee4j/jersey/pull/4647#pullrequestreview-562202870", "createdAt": "2021-01-05T23:09:33Z", "commit": {"oid": "b8fac127278365f5de870fc43f6ff3b1c34a0c27"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQyMzowOTozM1rOIOq2PA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQyMzowOTozM1rOIOq2PA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjI1Mjk4OA==", "bodyText": "This never happens in your tests, since isEncodedInUriFormat(fileNameExt) always fail on '. Perhaps you meant if (isEncodedInUriFormat(matcher.group(FILENAME_GROUP_NAME)))?\nBut then again, why you do if (matcher.matches()) ? If isEncodedInUriFormat(matcher.group(FILENAME_GROUP_NAME)) is true, we likely should not care about the charset. You are right, the obsolete RFC 5987 requires UTF-8 or ISO-8859-1, but then new RFC 8187 changes the charset to UTF-8, but then next month another RFC supporting UTF-16 can arise - do you see a reason for not supporting it at the moment when it is already encoded by the user?", "url": "https://github.com/eclipse-ee4j/jersey/pull/4647#discussion_r552252988", "createdAt": "2021-01-05T23:09:33Z", "author": {"login": "jansupol"}, "path": "media/multipart/src/main/java/org/glassfish/jersey/media/multipart/ContentDisposition.java", "diffHunk": "@@ -192,6 +205,42 @@ private void createParameters() throws ParseException {\n         size = createLong(\"size\");\n     }\n \n+    private String defineFileName() throws ParseException {\n+        final String fileName = parameters.get(\"filename\");\n+\n+        final String fileNameExt = parameters.get(\"filename*\");\n+        if (fileNameExt == null) {\n+            return fileName;\n+        }\n+\n+        final Matcher matcher = FILENAME_EXT_VALUE_PATTERN.matcher(fileNameExt);\n+        if (matcher.matches()) {\n+            if (isEncodedInUriFormat(fileNameExt)) {\n+                return fileNameExt;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b8fac127278365f5de870fc43f6ff3b1c34a0c27"}, "originalPosition": 61}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7d4d5d588055c7fd62b5d47940c3a3daa24d1bb3", "author": {"user": {"login": "aserkes", "name": "Andrii Serkes"}}, "url": "https://github.com/eclipse-ee4j/jersey/commit/7d4d5d588055c7fd62b5d47940c3a3daa24d1bb3", "committedDate": "2021-01-07T14:20:17Z", "message": "All charsets for the filename* parameter are permitted\n\nSigned-off-by: aserkes <andrii.serkes@oracle.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e502bb46baa153287170a771f3f58046a598ad76", "author": {"user": {"login": "aserkes", "name": "Andrii Serkes"}}, "url": "https://github.com/eclipse-ee4j/jersey/commit/e502bb46baa153287170a771f3f58046a598ad76", "committedDate": "2021-01-07T14:12:47Z", "message": "All charsets for the filename* parameter are permitted"}, "afterCommit": {"oid": "7d4d5d588055c7fd62b5d47940c3a3daa24d1bb3", "author": {"user": {"login": "aserkes", "name": "Andrii Serkes"}}, "url": "https://github.com/eclipse-ee4j/jersey/commit/7d4d5d588055c7fd62b5d47940c3a3daa24d1bb3", "committedDate": "2021-01-07T14:20:17Z", "message": "All charsets for the filename* parameter are permitted\n\nSigned-off-by: aserkes <andrii.serkes@oracle.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYzODgzODAz", "url": "https://github.com/eclipse-ee4j/jersey/pull/4647#pullrequestreview-563883803", "createdAt": "2021-01-07T22:45:07Z", "commit": {"oid": "7d4d5d588055c7fd62b5d47940c3a3daa24d1bb3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wN1QyMjo0NTowN1rOIP_T4g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wN1QyMjo0NTowN1rOIP_T4g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzYzNjgzNA==", "bodyText": "Regexps are possibly not the fastest piece of code. Can you store the result of matcher.group(LANG_GROUP_NAME) and reuse?", "url": "https://github.com/eclipse-ee4j/jersey/pull/4647#discussion_r553636834", "createdAt": "2021-01-07T22:45:07Z", "author": {"login": "jansupol"}, "path": "media/multipart/src/main/java/org/glassfish/jersey/media/multipart/ContentDisposition.java", "diffHunk": "@@ -192,6 +207,47 @@ private void createParameters() throws ParseException {\n         size = createLong(\"size\");\n     }\n \n+    private String defineFileName() throws ParseException {\n+\n+        final String fileName = parameters.get(\"filename\");\n+        final String fileNameExt = parameters.get(\"filename*\");\n+\n+        if (fileNameExt == null) {\n+            return fileName;\n+        }\n+\n+        final Matcher matcher = FILENAME_EXT_VALUE_PATTERN.matcher(fileNameExt);\n+\n+        if (matcher.matches()) {\n+\n+            final String fileNameValueChars = matcher.group(FILENAME_GROUP_NAME);\n+            if (isFilenameValueCharsEncoded(fileNameValueChars)) {\n+                return fileNameExt;\n+            }\n+\n+            if (matcher.group(CHARSET_GROUP_NAME).equalsIgnoreCase(\"UTF-8\")) {\n+                return new StringBuilder(matcher.group(CHARSET_GROUP_NAME))\n+                        .append(\"'\")\n+                        .append(matcher.group(LANG_GROUP_NAME) == null ? \"\" : matcher.group(LANG_GROUP_NAME))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7d4d5d588055c7fd62b5d47940c3a3daa24d1bb3"}, "originalPosition": 73}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b523c015e32be84362493f939233ddeda0cb6f9f", "author": {"user": {"login": "aserkes", "name": "Andrii Serkes"}}, "url": "https://github.com/eclipse-ee4j/jersey/commit/b523c015e32be84362493f939233ddeda0cb6f9f", "committedDate": "2021-01-09T17:06:06Z", "message": "Refactoring\n\nSigned-off-by: aserkes <andrii.serkes@oracle.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a22ff7ffbc5e89c4df649c258d079e71ad4e5836", "author": {"user": {"login": "aserkes", "name": "Andrii Serkes"}}, "url": "https://github.com/eclipse-ee4j/jersey/commit/a22ff7ffbc5e89c4df649c258d079e71ad4e5836", "committedDate": "2021-01-08T13:30:20Z", "message": "Refactoring\n\nSigned-off-by: aserkes <andrii.serkes@oracle.com>"}, "afterCommit": {"oid": "b523c015e32be84362493f939233ddeda0cb6f9f", "author": {"user": {"login": "aserkes", "name": "Andrii Serkes"}}, "url": "https://github.com/eclipse-ee4j/jersey/commit/b523c015e32be84362493f939233ddeda0cb6f9f", "committedDate": "2021-01-09T17:06:06Z", "message": "Refactoring\n\nSigned-off-by: aserkes <andrii.serkes@oracle.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTY1MjM1MTIz", "url": "https://github.com/eclipse-ee4j/jersey/pull/4647#pullrequestreview-565235123", "createdAt": "2021-01-11T10:40:57Z", "commit": {"oid": "b523c015e32be84362493f939233ddeda0cb6f9f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "10ca1544160d98ecb4a1a943d562478ced07bc55", "author": {"user": {"login": "aserkes", "name": "Andrii Serkes"}}, "url": "https://github.com/eclipse-ee4j/jersey/commit/10ca1544160d98ecb4a1a943d562478ced07bc55", "committedDate": "2021-01-13T10:10:43Z", "message": "Update year in Copyright comments\n\nSigned-off-by: aserkes <andrii.serkes@oracle.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTY3MTQwMjUz", "url": "https://github.com/eclipse-ee4j/jersey/pull/4647#pullrequestreview-567140253", "createdAt": "2021-01-13T11:41:25Z", "commit": {"oid": "10ca1544160d98ecb4a1a943d562478ced07bc55"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1205, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}