{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkwODc3MDcw", "number": 4576, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQxMjoxNzoyMlrOEmDhxg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQxMjozMzoyMFrOEmD6dA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4MzM5MTQyOnYy", "diffSide": "RIGHT", "path": "core-client/src/main/java/org/glassfish/jersey/client/internal/HttpUrlConnector.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQxMjoxNzoyMlrOHV3KQw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxNjo0OTozM1rOHW3nuQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjY4NTg5MQ==", "bodyText": "Use ClientRequest#resolveProperty", "url": "https://github.com/eclipse-ee4j/jersey/pull/4576#discussion_r492685891", "createdAt": "2020-09-22T12:17:22Z", "author": {"login": "jansupol"}, "path": "core-client/src/main/java/org/glassfish/jersey/client/internal/HttpUrlConnector.java", "diffHunk": "@@ -527,6 +536,20 @@ public Object run() throws NoSuchFieldException,\n         }\n     }\n \n+    private void processExpect100Continue(ClientRequest request, HttpURLConnection uc, boolean allowStreaming) {\n+\n+        final Boolean expectContinueActivated = ClientProperties.getValue(request.getConfiguration().getProperties(),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f941d24a8de6614f742138cead420fd046ea69b2"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzE5NDE4NQ==", "bodyText": "for now this is being investigated because ClientRequest#resolveProperty does not resolve those properties which are put to clientConfiguration by the feature", "url": "https://github.com/eclipse-ee4j/jersey/pull/4576#discussion_r493194185", "createdAt": "2020-09-23T04:45:22Z", "author": {"login": "senivam"}, "path": "core-client/src/main/java/org/glassfish/jersey/client/internal/HttpUrlConnector.java", "diffHunk": "@@ -527,6 +536,20 @@ public Object run() throws NoSuchFieldException,\n         }\n     }\n \n+    private void processExpect100Continue(ClientRequest request, HttpURLConnection uc, boolean allowStreaming) {\n+\n+        final Boolean expectContinueActivated = ClientProperties.getValue(request.getConfiguration().getProperties(),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjY4NTg5MQ=="}, "originalCommit": {"oid": "f941d24a8de6614f742138cead420fd046ea69b2"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzc0MjAwOQ==", "bodyText": "shall be fixed...", "url": "https://github.com/eclipse-ee4j/jersey/pull/4576#discussion_r493742009", "createdAt": "2020-09-23T16:49:33Z", "author": {"login": "senivam"}, "path": "core-client/src/main/java/org/glassfish/jersey/client/internal/HttpUrlConnector.java", "diffHunk": "@@ -527,6 +536,20 @@ public Object run() throws NoSuchFieldException,\n         }\n     }\n \n+    private void processExpect100Continue(ClientRequest request, HttpURLConnection uc, boolean allowStreaming) {\n+\n+        final Boolean expectContinueActivated = ClientProperties.getValue(request.getConfiguration().getProperties(),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjY4NTg5MQ=="}, "originalCommit": {"oid": "f941d24a8de6614f742138cead420fd046ea69b2"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4MzQ0MjY5OnYy", "diffSide": "RIGHT", "path": "core-client/src/main/java/org/glassfish/jersey/client/http/Expect100ContinueFeature.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQxMjozMDoxMFrOHV3pAA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QwNDo0Mjo1NlrOHWWJZg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjY5Mzc2MA==", "bodyText": "Could you please use the builder pattern?", "url": "https://github.com/eclipse-ee4j/jersey/pull/4576#discussion_r492693760", "createdAt": "2020-09-22T12:30:10Z", "author": {"login": "jansupol"}, "path": "core-client/src/main/java/org/glassfish/jersey/client/http/Expect100ContinueFeature.java", "diffHunk": "@@ -0,0 +1,50 @@\n+/*\n+ * Copyright (c) 2020 Oracle and/or its affiliates. All rights reserved.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License v. 2.0, which is available at\n+ * http://www.eclipse.org/legal/epl-2.0.\n+ *\n+ * This Source Code may also be made available under the following Secondary\n+ * Licenses when the conditions for such availability set forth in the\n+ * Eclipse Public License v. 2.0 are satisfied: GNU General Public License,\n+ * version 2 with the GNU Classpath Exception, which is available at\n+ * https://www.gnu.org/software/classpath/license.html.\n+ *\n+ * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n+ */\n+\n+package org.glassfish.jersey.client.http;\n+\n+import org.glassfish.jersey.client.ClientProperties;\n+\n+import javax.ws.rs.core.Feature;\n+import javax.ws.rs.core.FeatureContext;\n+\n+public class Expect100ContinueFeature implements Feature {\n+\n+    private long thresholdSize;\n+\n+    public Expect100ContinueFeature() {\n+        this(ClientProperties.DEFAULT_EXPECT_100_CONTINUE_THRESHOLD_SIZE);\n+    }\n+    public Expect100ContinueFeature(long thresholdSize) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f941d24a8de6614f742138cead420fd046ea69b2"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzE5MzU3NA==", "bodyText": "applied", "url": "https://github.com/eclipse-ee4j/jersey/pull/4576#discussion_r493193574", "createdAt": "2020-09-23T04:42:56Z", "author": {"login": "senivam"}, "path": "core-client/src/main/java/org/glassfish/jersey/client/http/Expect100ContinueFeature.java", "diffHunk": "@@ -0,0 +1,50 @@\n+/*\n+ * Copyright (c) 2020 Oracle and/or its affiliates. All rights reserved.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License v. 2.0, which is available at\n+ * http://www.eclipse.org/legal/epl-2.0.\n+ *\n+ * This Source Code may also be made available under the following Secondary\n+ * Licenses when the conditions for such availability set forth in the\n+ * Eclipse Public License v. 2.0 are satisfied: GNU General Public License,\n+ * version 2 with the GNU Classpath Exception, which is available at\n+ * https://www.gnu.org/software/classpath/license.html.\n+ *\n+ * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n+ */\n+\n+package org.glassfish.jersey.client.http;\n+\n+import org.glassfish.jersey.client.ClientProperties;\n+\n+import javax.ws.rs.core.Feature;\n+import javax.ws.rs.core.FeatureContext;\n+\n+public class Expect100ContinueFeature implements Feature {\n+\n+    private long thresholdSize;\n+\n+    public Expect100ContinueFeature() {\n+        this(ClientProperties.DEFAULT_EXPECT_100_CONTINUE_THRESHOLD_SIZE);\n+    }\n+    public Expect100ContinueFeature(long thresholdSize) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjY5Mzc2MA=="}, "originalCommit": {"oid": "f941d24a8de6614f742138cead420fd046ea69b2"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4MzQ1NDYwOnYy", "diffSide": "RIGHT", "path": "core-client/src/main/java/org/glassfish/jersey/client/ClientProperties.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQxMjozMzoyMFrOHV3wUg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QwNDo0MzowNlrOHWWJhg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjY5NTYzNA==", "bodyText": "Allows for HTTP Expect:100-Continue being handled by the HttpUrlConnector", "url": "https://github.com/eclipse-ee4j/jersey/pull/4576#discussion_r492695634", "createdAt": "2020-09-22T12:33:20Z", "author": {"login": "jansupol"}, "path": "core-client/src/main/java/org/glassfish/jersey/client/ClientProperties.java", "diffHunk": "@@ -405,6 +405,31 @@\n      */\n     public static final String REQUEST_ENTITY_PROCESSING = \"jersey.config.client.request.entity.processing\";\n \n+    /**\n+     * Registers 100-Continue value for Expect header processing to be set in HttpUrlConnector (default Jersey", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f941d24a8de6614f742138cead420fd046ea69b2"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzE5MzYwNg==", "bodyText": "applied", "url": "https://github.com/eclipse-ee4j/jersey/pull/4576#discussion_r493193606", "createdAt": "2020-09-23T04:43:06Z", "author": {"login": "senivam"}, "path": "core-client/src/main/java/org/glassfish/jersey/client/ClientProperties.java", "diffHunk": "@@ -405,6 +405,31 @@\n      */\n     public static final String REQUEST_ENTITY_PROCESSING = \"jersey.config.client.request.entity.processing\";\n \n+    /**\n+     * Registers 100-Continue value for Expect header processing to be set in HttpUrlConnector (default Jersey", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjY5NTYzNA=="}, "originalCommit": {"oid": "f941d24a8de6614f742138cead420fd046ea69b2"}, "originalPosition": 12}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1291, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}