{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcyNDM2MjE3", "number": 4390, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQxNjowOTo1N1rODfPRKw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QwNzo0NDo1MFrODfcfCg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0MDgyNjAzOnYy", "diffSide": "RIGHT", "path": "tests/e2e-core-common/src/test/java/org/glassfish/jersey/tests/e2e/common/message/internal/HeaderUtilsTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQxNjowOTo1N1rOFo0z3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQxNjowOTo1N1rOFo0z3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODM1MjYwNQ==", "bodyText": "Please use Calendar or LocalDateTime to set the dates you want, to prevent parsing exception with foreign locales", "url": "https://github.com/eclipse-ee4j/jersey/pull/4390#discussion_r378352605", "createdAt": "2020-02-12T16:09:57Z", "author": {"login": "jansupol"}, "path": "tests/e2e-core-common/src/test/java/org/glassfish/jersey/tests/e2e/common/message/internal/HeaderUtilsTest.java", "diffHunk": "@@ -180,4 +184,97 @@ public void testAsHeaderString() throws Exception {\n         final String result = HeaderUtils.asHeaderString(values, null);\n         assertEquals(\"value,[null],\" + uri.toASCIIString(), result);\n     }\n+\n+    @Test\n+    public void testgetPreferedNewCookie(){\n+\n+        Date earliestDate;\n+        Date latestDate;\n+\n+        try {\n+            earliestDate = HttpDateFormat.readDate(\"Fri, 1 Jan 2020 00:00:00 GMT\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "392a1c0ecc84f9f619b1f18211b0e45f5353a073"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0Mjk4ODg2OnYy", "diffSide": "RIGHT", "path": "core-common/src/main/java/org/glassfish/jersey/message/internal/HeaderUtils.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QwNzo0MzozNVrOFpJs8A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxMTowMTozMFrOFpPnFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODY5NDg5Ng==", "bodyText": "expiry date can be NULL. Isn't it better to use maxAge value?", "url": "https://github.com/eclipse-ee4j/jersey/pull/4390#discussion_r378694896", "createdAt": "2020-02-13T07:43:35Z", "author": {"login": "senivam"}, "path": "core-common/src/main/java/org/glassfish/jersey/message/internal/HeaderUtils.java", "diffHunk": "@@ -298,6 +299,24 @@ public static void checkHeaderChanges(final Map<String, String> headersSnapshot,\n         }\n     }\n \n+    /**\n+     * Compare two NewCookies having the same name. See documentation RFC.\n+     *\n+     * @param one    NewCookie to be compared.\n+     * @param second NewCookie to be compared.\n+     * @return the prefered NewCookie according to rules :\n+     *              - the latest expiration date.\n+     *              - if same expiration date, the longest path.\n+     */\n+    public static NewCookie getPreferedNewCookie(NewCookie one, NewCookie second) {\n+\n+        if (!one.getExpiry().equals(second.getExpiry())){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "392a1c0ecc84f9f619b1f18211b0e45f5353a073"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODc3NDUwNA==", "bodyText": "There is a difference between expiry and maxAge.\nIE does not support maxAge, so most of the servers set expiry rather than maxAge. It is possible to set one or the other.\nNewCookie is what comes from the server, and even though maxAge is recommended, expires seems to be more often. But it seems to be one or the other, so we should compare the later from both.\nBut yes, we should check for NULL, too.", "url": "https://github.com/eclipse-ee4j/jersey/pull/4390#discussion_r378774504", "createdAt": "2020-02-13T10:29:57Z", "author": {"login": "jansupol"}, "path": "core-common/src/main/java/org/glassfish/jersey/message/internal/HeaderUtils.java", "diffHunk": "@@ -298,6 +299,24 @@ public static void checkHeaderChanges(final Map<String, String> headersSnapshot,\n         }\n     }\n \n+    /**\n+     * Compare two NewCookies having the same name. See documentation RFC.\n+     *\n+     * @param one    NewCookie to be compared.\n+     * @param second NewCookie to be compared.\n+     * @return the prefered NewCookie according to rules :\n+     *              - the latest expiration date.\n+     *              - if same expiration date, the longest path.\n+     */\n+    public static NewCookie getPreferedNewCookie(NewCookie one, NewCookie second) {\n+\n+        if (!one.getExpiry().equals(second.getExpiry())){", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODY5NDg5Ng=="}, "originalCommit": {"oid": "392a1c0ecc84f9f619b1f18211b0e45f5353a073"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODc5MTcwMw==", "bodyText": "Well ,regarding check of expiry VS max-age it's good to check them both :)\nRegarding setting one or another attribute in request - actually server shall put both. For now I've found that the only browser which does not support max-age attribute is IE.\nPer RFC 6265 max-age attribute has precedence over expiry attribute if both are present in request. In my opinion this shall be respected while choosing preferred cookie.", "url": "https://github.com/eclipse-ee4j/jersey/pull/4390#discussion_r378791703", "createdAt": "2020-02-13T11:01:30Z", "author": {"login": "senivam"}, "path": "core-common/src/main/java/org/glassfish/jersey/message/internal/HeaderUtils.java", "diffHunk": "@@ -298,6 +299,24 @@ public static void checkHeaderChanges(final Map<String, String> headersSnapshot,\n         }\n     }\n \n+    /**\n+     * Compare two NewCookies having the same name. See documentation RFC.\n+     *\n+     * @param one    NewCookie to be compared.\n+     * @param second NewCookie to be compared.\n+     * @return the prefered NewCookie according to rules :\n+     *              - the latest expiration date.\n+     *              - if same expiration date, the longest path.\n+     */\n+    public static NewCookie getPreferedNewCookie(NewCookie one, NewCookie second) {\n+\n+        if (!one.getExpiry().equals(second.getExpiry())){", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODY5NDg5Ng=="}, "originalCommit": {"oid": "392a1c0ecc84f9f619b1f18211b0e45f5353a073"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0Mjk5MTQ2OnYy", "diffSide": "RIGHT", "path": "core-common/src/main/java/org/glassfish/jersey/message/internal/HeaderUtils.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QwNzo0NDo1MFrOFpJukg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QwNzo0NDo1MFrOFpJukg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODY5NTMxNA==", "bodyText": "Preferred ? may be rename the whole method to getPreferredCookie?", "url": "https://github.com/eclipse-ee4j/jersey/pull/4390#discussion_r378695314", "createdAt": "2020-02-13T07:44:50Z", "author": {"login": "senivam"}, "path": "core-common/src/main/java/org/glassfish/jersey/message/internal/HeaderUtils.java", "diffHunk": "@@ -298,6 +299,24 @@ public static void checkHeaderChanges(final Map<String, String> headersSnapshot,\n         }\n     }\n \n+    /**\n+     * Compare two NewCookies having the same name. See documentation RFC.\n+     *\n+     * @param one    NewCookie to be compared.\n+     * @param second NewCookie to be compared.\n+     * @return the prefered NewCookie according to rules :\n+     *              - the latest expiration date.\n+     *              - if same expiration date, the longest path.\n+     */\n+    public static NewCookie getPreferedNewCookie(NewCookie one, NewCookie second) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "392a1c0ecc84f9f619b1f18211b0e45f5353a073"}, "originalPosition": 28}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1363, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}