{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDUzNzM2Mjg2", "number": 3692, "title": "CATROID-569 REFACTOR DeleteItemOfUserListAction to Kotlin", "bodyText": "Please enter a short description of your pull request and add a reference to the Jira ticket.\nYour checklist for this pull request\nPlease review the contributing guidelines and wiki pages of this repository.\n\n Include the name of the Jira ticket in the PR\u2019s title\n Include a summary of the changes plus the relevant context\n Choose the proper base branch (develop)\n Confirm that the changes follow the project\u2019s coding guidelines\n Verify that the changes generate no compiler or linter warnings\n Perform a self-review of the changes\n Verify to commit no other files than the intentionally changed ones\n Include reasonable and readable tests verifying the added or changed behavior\n Confirm that new and existing unit tests pass locally\n Check that the commits\u2019 message style matches the project\u2019s guideline\n Stick to the project\u2019s gitflow workflow\n Verify that your changes do not have any conflicts with the base branch\n After the PR, verify that all CI checks have passed\n Post a message in the catroid-stage or catroid-ide Slack channel and ask for a code reviewer", "createdAt": "2020-07-20T18:55:27Z", "url": "https://github.com/Catrobat/Catroid/pull/3692", "merged": true, "mergeCommit": {"oid": "f9380db1d977ae64e48dec242f16a7df41825cd2"}, "closed": true, "closedAt": "2020-07-31T09:34:44Z", "author": {"login": "Rawbat"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc22tUbABqjM1Njc0NTI2OTA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc3b4aJAFqTQ1MzM4NTYzNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUyNjYyMDU5", "url": "https://github.com/Catrobat/Catroid/pull/3692#pullrequestreview-452662059", "createdAt": "2020-07-21T17:07:25Z", "commit": null, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxNzowNzoyNVrOG1Bp3g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxNzoyMjozOFrOG1CNuw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODI1NDgxNA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (userList == null) {\n          \n          \n            \n                        return\n          \n          \n            \n                    }\n          \n          \n            \n                    if (userList!!.value.size == 0) {\n          \n          \n            \n                        return\n          \n          \n            \n                    }\n          \n          \n            \n                    val listSize = userList?.value?.size.takeUnless { it == 0 } ?: return\n          \n      \n    \n    \n  \n\nNull safety is Kotlin's biggest strength. Java style checks defeat its purpose. Also see below.", "url": "https://github.com/Catrobat/Catroid/pull/3692#discussion_r458254814", "createdAt": "2020-07-21T17:07:25Z", "author": {"login": "lweitzendorf"}, "path": "catroid/src/main/java/org/catrobat/catroid/content/actions/DeleteItemOfUserListAction.kt", "diffHunk": "@@ -0,0 +1,78 @@\n+/*\n+ * Catroid: An on-device visual programming system for Android devices\n+ * Copyright (C) 2010-2018 The Catrobat Team\n+ * (<http://developer.catrobat.org/credits>)\n+ *\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU Affero General Public License as\n+ * published by the Free Software Foundation, either version 3 of the\n+ * License, or (at your option) any later version.\n+ *\n+ * An additional term exception under section 7 of the GNU Affero\n+ * General Public License, version 3, is available at\n+ * http://developer.catrobat.org/license_additional_term\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU Affero General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Affero General Public License\n+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+package org.catrobat.catroid.content.actions\n+\n+import android.util.Log\n+import com.badlogic.gdx.scenes.scene2d.actions.TemporalAction\n+import org.catrobat.catroid.content.Sprite\n+import org.catrobat.catroid.formulaeditor.Formula\n+import org.catrobat.catroid.formulaeditor.InterpretationException\n+import org.catrobat.catroid.formulaeditor.UserList\n+import java.util.ArrayList\n+\n+class DeleteItemOfUserListAction : TemporalAction() {\n+    private var sprite: Sprite? = null\n+    private var formulaIndexToDelete: Formula? = null\n+    private var userList: UserList? = null\n+\n+    override fun update(percent: Float) {\n+        if (userList == null) {\n+            return\n+        }\n+        if (userList!!.value.size == 0) {\n+            return\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODI1NjA5Mg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    var indexToDelete: Int = try {\n          \n          \n            \n                        if (formulaIndexToDelete == null) {\n          \n          \n            \n                            1\n          \n          \n            \n                        } else {\n          \n          \n            \n                            formulaIndexToDelete!!.interpretInteger(sprite)\n          \n          \n            \n                        }\n          \n          \n            \n                    } catch (interpretationException: InterpretationException) {\n          \n          \n            \n                        Log.e(DeleteItemOfUserListAction::class.java.simpleName,\n          \n          \n            \n                            \"Interpreting sprite as integer failed : \" + sprite.toString(), interpretationException)\n          \n          \n            \n                        1\n          \n          \n            \n                    }\n          \n          \n            \n            \n          \n          \n            \n                    indexToDelete--\n          \n          \n            \n                    val indexToDelete = try {\n          \n          \n            \n                        formulaIndexToDelete?.interpretInteger(sprite)?.minus(1) ?: 0\n          \n          \n            \n                    } catch (exception: InterpretationException) {\n          \n          \n            \n                        Log.e(javaClass.simpleName, \"Interpreting formula as integer failed\", exception)\n          \n          \n            \n                        0\n          \n          \n            \n                    }", "url": "https://github.com/Catrobat/Catroid/pull/3692#discussion_r458256092", "createdAt": "2020-07-21T17:09:36Z", "author": {"login": "lweitzendorf"}, "path": "catroid/src/main/java/org/catrobat/catroid/content/actions/DeleteItemOfUserListAction.kt", "diffHunk": "@@ -0,0 +1,78 @@\n+/*\n+ * Catroid: An on-device visual programming system for Android devices\n+ * Copyright (C) 2010-2018 The Catrobat Team\n+ * (<http://developer.catrobat.org/credits>)\n+ *\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU Affero General Public License as\n+ * published by the Free Software Foundation, either version 3 of the\n+ * License, or (at your option) any later version.\n+ *\n+ * An additional term exception under section 7 of the GNU Affero\n+ * General Public License, version 3, is available at\n+ * http://developer.catrobat.org/license_additional_term\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU Affero General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Affero General Public License\n+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+package org.catrobat.catroid.content.actions\n+\n+import android.util.Log\n+import com.badlogic.gdx.scenes.scene2d.actions.TemporalAction\n+import org.catrobat.catroid.content.Sprite\n+import org.catrobat.catroid.formulaeditor.Formula\n+import org.catrobat.catroid.formulaeditor.InterpretationException\n+import org.catrobat.catroid.formulaeditor.UserList\n+import java.util.ArrayList\n+\n+class DeleteItemOfUserListAction : TemporalAction() {\n+    private var sprite: Sprite? = null\n+    private var formulaIndexToDelete: Formula? = null\n+    private var userList: UserList? = null\n+\n+    override fun update(percent: Float) {\n+        if (userList == null) {\n+            return\n+        }\n+        if (userList!!.value.size == 0) {\n+            return\n+        }\n+\n+        var indexToDelete: Int = try {\n+            if (formulaIndexToDelete == null) {\n+                1\n+            } else {\n+                formulaIndexToDelete!!.interpretInteger(sprite)\n+            }\n+        } catch (interpretationException: InterpretationException) {\n+            Log.e(DeleteItemOfUserListAction::class.java.simpleName,\n+                \"Interpreting sprite as integer failed : \" + sprite.toString(), interpretationException)\n+            1\n+        }\n+\n+        indexToDelete--", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODI2MjAzNA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (indexToDelete >= userList!!.value.size || indexToDelete < 0) {\n          \n          \n            \n                        return\n          \n          \n            \n                    }\n          \n          \n            \n            \n          \n          \n            \n                    (userList!!.value as ArrayList<Object?>).removeAt(indexToDelete)\n          \n          \n            \n                    if (indexToDelete in 0 until listSize) {\n          \n          \n            \n                        userList!!.value.removeAt(indexToDelete)\n          \n          \n            \n                    }", "url": "https://github.com/Catrobat/Catroid/pull/3692#discussion_r458262034", "createdAt": "2020-07-21T17:19:24Z", "author": {"login": "lweitzendorf"}, "path": "catroid/src/main/java/org/catrobat/catroid/content/actions/DeleteItemOfUserListAction.kt", "diffHunk": "@@ -0,0 +1,78 @@\n+/*\n+ * Catroid: An on-device visual programming system for Android devices\n+ * Copyright (C) 2010-2018 The Catrobat Team\n+ * (<http://developer.catrobat.org/credits>)\n+ *\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU Affero General Public License as\n+ * published by the Free Software Foundation, either version 3 of the\n+ * License, or (at your option) any later version.\n+ *\n+ * An additional term exception under section 7 of the GNU Affero\n+ * General Public License, version 3, is available at\n+ * http://developer.catrobat.org/license_additional_term\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU Affero General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Affero General Public License\n+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+package org.catrobat.catroid.content.actions\n+\n+import android.util.Log\n+import com.badlogic.gdx.scenes.scene2d.actions.TemporalAction\n+import org.catrobat.catroid.content.Sprite\n+import org.catrobat.catroid.formulaeditor.Formula\n+import org.catrobat.catroid.formulaeditor.InterpretationException\n+import org.catrobat.catroid.formulaeditor.UserList\n+import java.util.ArrayList\n+\n+class DeleteItemOfUserListAction : TemporalAction() {\n+    private var sprite: Sprite? = null\n+    private var formulaIndexToDelete: Formula? = null\n+    private var userList: UserList? = null\n+\n+    override fun update(percent: Float) {\n+        if (userList == null) {\n+            return\n+        }\n+        if (userList!!.value.size == 0) {\n+            return\n+        }\n+\n+        var indexToDelete: Int = try {\n+            if (formulaIndexToDelete == null) {\n+                1\n+            } else {\n+                formulaIndexToDelete!!.interpretInteger(sprite)\n+            }\n+        } catch (interpretationException: InterpretationException) {\n+            Log.e(DeleteItemOfUserListAction::class.java.simpleName,\n+                \"Interpreting sprite as integer failed : \" + sprite.toString(), interpretationException)\n+            1\n+        }\n+\n+        indexToDelete--\n+\n+        if (indexToDelete >= userList!!.value.size || indexToDelete < 0) {\n+            return\n+        }\n+\n+        (userList!!.value as ArrayList<Object?>).removeAt(indexToDelete)", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 64}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODI2MzcwMg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                fun setUserList(userVariable: UserList?) {\n          \n          \n            \n                    this.userList = userVariable\n          \n          \n            \n                }\n          \n          \n            \n            \n          \n          \n            \n                fun setFormulaIndexToDelete(formulaIndexToDelete: Formula?) {\n          \n          \n            \n                    this.formulaIndexToDelete = formulaIndexToDelete\n          \n          \n            \n                }\n          \n          \n            \n            \n          \n          \n            \n                fun setSprite(sprite: Sprite?) {\n          \n          \n            \n                    this.sprite = sprite\n          \n          \n            \n                }\n          \n      \n    \n    \n  \n\nYou can delete all of these. Kotlin will generate them automatically based on member visibility. Also, setters should not accept null.", "url": "https://github.com/Catrobat/Catroid/pull/3692#discussion_r458263702", "createdAt": "2020-07-21T17:22:05Z", "author": {"login": "lweitzendorf"}, "path": "catroid/src/main/java/org/catrobat/catroid/content/actions/DeleteItemOfUserListAction.kt", "diffHunk": "@@ -0,0 +1,78 @@\n+/*\n+ * Catroid: An on-device visual programming system for Android devices\n+ * Copyright (C) 2010-2018 The Catrobat Team\n+ * (<http://developer.catrobat.org/credits>)\n+ *\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU Affero General Public License as\n+ * published by the Free Software Foundation, either version 3 of the\n+ * License, or (at your option) any later version.\n+ *\n+ * An additional term exception under section 7 of the GNU Affero\n+ * General Public License, version 3, is available at\n+ * http://developer.catrobat.org/license_additional_term\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU Affero General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Affero General Public License\n+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+package org.catrobat.catroid.content.actions\n+\n+import android.util.Log\n+import com.badlogic.gdx.scenes.scene2d.actions.TemporalAction\n+import org.catrobat.catroid.content.Sprite\n+import org.catrobat.catroid.formulaeditor.Formula\n+import org.catrobat.catroid.formulaeditor.InterpretationException\n+import org.catrobat.catroid.formulaeditor.UserList\n+import java.util.ArrayList\n+\n+class DeleteItemOfUserListAction : TemporalAction() {\n+    private var sprite: Sprite? = null\n+    private var formulaIndexToDelete: Formula? = null\n+    private var userList: UserList? = null\n+\n+    override fun update(percent: Float) {\n+        if (userList == null) {\n+            return\n+        }\n+        if (userList!!.value.size == 0) {\n+            return\n+        }\n+\n+        var indexToDelete: Int = try {\n+            if (formulaIndexToDelete == null) {\n+                1\n+            } else {\n+                formulaIndexToDelete!!.interpretInteger(sprite)\n+            }\n+        } catch (interpretationException: InterpretationException) {\n+            Log.e(DeleteItemOfUserListAction::class.java.simpleName,\n+                \"Interpreting sprite as integer failed : \" + sprite.toString(), interpretationException)\n+            1\n+        }\n+\n+        indexToDelete--\n+\n+        if (indexToDelete >= userList!!.value.size || indexToDelete < 0) {\n+            return\n+        }\n+\n+        (userList!!.value as ArrayList<Object?>).removeAt(indexToDelete)\n+    }\n+\n+    fun setUserList(userVariable: UserList?) {\n+        this.userList = userVariable\n+    }\n+\n+    fun setFormulaIndexToDelete(formulaIndexToDelete: Formula?) {\n+        this.formulaIndexToDelete = formulaIndexToDelete\n+    }\n+\n+    fun setSprite(sprite: Sprite?) {\n+        this.sprite = sprite\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 77}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODI2Mzk5NQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private var sprite: Sprite? = null\n          \n          \n            \n                private var formulaIndexToDelete: Formula? = null\n          \n          \n            \n                private var userList: UserList? = null\n          \n          \n            \n                var sprite: Sprite? = null\n          \n          \n            \n                var formulaIndexToDelete: Formula? = null\n          \n          \n            \n                var userList: UserList? = null\n          \n      \n    \n    \n  \n\nSee setters below", "url": "https://github.com/Catrobat/Catroid/pull/3692#discussion_r458263995", "createdAt": "2020-07-21T17:22:38Z", "author": {"login": "lweitzendorf"}, "path": "catroid/src/main/java/org/catrobat/catroid/content/actions/DeleteItemOfUserListAction.kt", "diffHunk": "@@ -0,0 +1,78 @@\n+/*\n+ * Catroid: An on-device visual programming system for Android devices\n+ * Copyright (C) 2010-2018 The Catrobat Team\n+ * (<http://developer.catrobat.org/credits>)\n+ *\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU Affero General Public License as\n+ * published by the Free Software Foundation, either version 3 of the\n+ * License, or (at your option) any later version.\n+ *\n+ * An additional term exception under section 7 of the GNU Affero\n+ * General Public License, version 3, is available at\n+ * http://developer.catrobat.org/license_additional_term\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU Affero General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Affero General Public License\n+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+package org.catrobat.catroid.content.actions\n+\n+import android.util.Log\n+import com.badlogic.gdx.scenes.scene2d.actions.TemporalAction\n+import org.catrobat.catroid.content.Sprite\n+import org.catrobat.catroid.formulaeditor.Formula\n+import org.catrobat.catroid.formulaeditor.InterpretationException\n+import org.catrobat.catroid.formulaeditor.UserList\n+import java.util.ArrayList\n+\n+class DeleteItemOfUserListAction : TemporalAction() {\n+    private var sprite: Sprite? = null\n+    private var formulaIndexToDelete: Formula? = null\n+    private var userList: UserList? = null", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 36}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestCommit", "commit": {"oid": "49e97dc7f62323bef5aac38168ece30eeb66dd5a", "author": {"user": null}, "url": "https://github.com/Catrobat/Catroid/commit/49e97dc7f62323bef5aac38168ece30eeb66dd5a", "committedDate": "2020-07-22T09:08:22Z", "message": "CATROID-569 REFACTOR DeleteItemOfUserListAction to Kotlin\n\nAdditionaly added a log message in the catch section to avoid\nexception swallowing."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "49e97dc7f62323bef5aac38168ece30eeb66dd5a", "author": {"user": null}, "url": "https://github.com/Catrobat/Catroid/commit/49e97dc7f62323bef5aac38168ece30eeb66dd5a", "committedDate": "2020-07-22T09:08:22Z", "message": "CATROID-569 REFACTOR DeleteItemOfUserListAction to Kotlin\n\nAdditionaly added a log message in the catch section to avoid\nexception swallowing."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUzMzg1NjM2", "url": "https://github.com/Catrobat/Catroid/pull/3692#pullrequestreview-453385636", "createdAt": "2020-07-22T14:40:58Z", "commit": {"oid": "49e97dc7f62323bef5aac38168ece30eeb66dd5a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1849, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}