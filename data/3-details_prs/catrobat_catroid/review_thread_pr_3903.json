{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQzNTgxMDE0", "number": 3903, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMFQxNDoyNDowMFrOFKGE0w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMFQxNDo1MzozNVrOFKGffA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ2MTI5NjE5OnYy", "diffSide": "RIGHT", "path": "catroid/src/main/java/org/catrobat/catroid/ui/fragment/AddUserDataToUserDefinedBrickFragment.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMFQxNDoyNDowMFrOIMuPWg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMFQxNDoyNDowMFrOIMuPWg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDIxMTQxOA==", "bodyText": "I think you don't need to override this function, as the same functionality is already provided by the base class.", "url": "https://github.com/Catrobat/Catroid/pull/3903#discussion_r550211418", "createdAt": "2020-12-30T14:24:00Z", "author": {"login": "mstoeg"}, "path": "catroid/src/main/java/org/catrobat/catroid/ui/fragment/AddUserDataToUserDefinedBrickFragment.java", "diffHunk": "@@ -95,8 +95,32 @@ public View onCreateView(@NotNull LayoutInflater inflater, ViewGroup container,\n \t\tTextView addUserDataUserBrickTextView = view.findViewById(R.id.brick_user_defined_add_user_data_description);\n \n \t\taddUserDataUserBrickEditText.setText(userBrickTextView.getText());\n+\t\tInputWatcher.TextWatcher textWatcher = new InputWatcher.TextWatcher() {\n+\t\t\t@Override\n+\t\t\tprotected boolean isNameUnique(String name) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2b091118a9a4ea2e6a387abff008e7f702ed281c"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ2MTMwMzk3OnYy", "diffSide": "RIGHT", "path": "catroid/src/main/java/org/catrobat/catroid/ui/recyclerview/dialog/textwatcher/DuplicateInputTextwatcher.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMFQxNDoyNjo1NlrOIMuTdA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMFQxNDoyNjo1NlrOIMuTdA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDIxMjQ2OA==", "bodyText": "Could you please use camelCase for TextWatcher to stay consistent here.", "url": "https://github.com/Catrobat/Catroid/pull/3903#discussion_r550212468", "createdAt": "2020-12-30T14:26:56Z", "author": {"login": "mstoeg"}, "path": "catroid/src/main/java/org/catrobat/catroid/ui/recyclerview/dialog/textwatcher/DuplicateInputTextwatcher.java", "diffHunk": "@@ -23,30 +23,27 @@\n \n package org.catrobat.catroid.ui.recyclerview.dialog.textwatcher;\n \n-import android.content.Context;\n+import org.catrobat.catroid.common.Nameable;\n \n-import org.catrobat.catroid.R;\n-import org.catrobat.catroid.ui.recyclerview.dialog.TextInputDialog;\n+import java.util.List;\n \n-import androidx.annotation.Nullable;\n+public class DuplicateInputTextwatcher<T extends Nameable> extends InputWatcher.TextWatcher {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2b091118a9a4ea2e6a387abff008e7f702ed281c"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ2MTMxMTMwOnYy", "diffSide": "RIGHT", "path": "catroid/src/main/java/org/catrobat/catroid/ui/recyclerview/dialog/textwatcher/DuplicateInputTextwatcher.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMFQxNDozMDoxMlrOIMuXmg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMFQxNDozMDoxMlrOIMuXmg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDIxMzUzMA==", "bodyText": "Also please use camelCase here for OriginalScope.", "url": "https://github.com/Catrobat/Catroid/pull/3903#discussion_r550213530", "createdAt": "2020-12-30T14:30:12Z", "author": {"login": "mstoeg"}, "path": "catroid/src/main/java/org/catrobat/catroid/ui/recyclerview/dialog/textwatcher/DuplicateInputTextwatcher.java", "diffHunk": "@@ -23,30 +23,27 @@\n \n package org.catrobat.catroid.ui.recyclerview.dialog.textwatcher;\n \n-import android.content.Context;\n+import org.catrobat.catroid.common.Nameable;\n \n-import org.catrobat.catroid.R;\n-import org.catrobat.catroid.ui.recyclerview.dialog.TextInputDialog;\n+import java.util.List;\n \n-import androidx.annotation.Nullable;\n+public class DuplicateInputTextwatcher<T extends Nameable> extends InputWatcher.TextWatcher {\n \n-public class NonEmptyStringTextWatcher extends TextInputDialog.TextWatcher {\n+\tprivate List<T> originalScope;\n \n-\t@Nullable\n-\t@Override\n-\tpublic String validateInput(String input, Context context) {\n-\t\tString error = null;\n-\n-\t\tif (input.isEmpty()) {\n-\t\t\treturn context.getString(R.string.name_empty);\n-\t\t}\n-\n-\t\tinput = input.trim();\n-\n-\t\tif (input.isEmpty()) {\n-\t\t\terror = context.getString(R.string.name_consists_of_spaces_only);\n+\tpublic DuplicateInputTextwatcher(List<T> originalScope) {\n+\t\tthis.originalScope = originalScope;\n+\t\tgetScopeFromoriginalScope();\n+\t}\n+\tpublic void setOriginalScope(List<T> scope) {\n+\t\tthis.originalScope = scope;\n+\t\tgetScopeFromoriginalScope();\n+\t}\n+\tprivate void getScopeFromoriginalScope() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2b091118a9a4ea2e6a387abff008e7f702ed281c"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ2MTM2NDQ0OnYy", "diffSide": "RIGHT", "path": "catroid/src/main/java/org/catrobat/catroid/merge/NewProjectNameTextWatcher.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMFQxNDo1MzozNVrOIMu1zg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMFQxNDo1MzozNVrOIMu1zg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDIyMTI2Mg==", "bodyText": "I think there is some kind of logic inversion here, which also leads to the failing testcases. If a project does exist it is NOT unique.", "url": "https://github.com/Catrobat/Catroid/pull/3903#discussion_r550221262", "createdAt": "2020-12-30T14:53:35Z", "author": {"login": "mstoeg"}, "path": "catroid/src/main/java/org/catrobat/catroid/merge/NewProjectNameTextWatcher.java", "diffHunk": "@@ -22,34 +22,14 @@\n  */\n package org.catrobat.catroid.merge;\n \n-import android.content.Context;\n-\n-import org.catrobat.catroid.R;\n import org.catrobat.catroid.common.Nameable;\n import org.catrobat.catroid.ui.recyclerview.dialog.ReplaceExistingProjectDialogFragment;\n-import org.catrobat.catroid.ui.recyclerview.dialog.TextInputDialog;\n-\n-import androidx.annotation.Nullable;\n+import org.catrobat.catroid.ui.recyclerview.dialog.textwatcher.InputWatcher;\n \n-public class NewProjectNameTextWatcher<T extends Nameable> extends TextInputDialog.TextWatcher {\n+public class NewProjectNameTextWatcher<T extends Nameable> extends InputWatcher.TextWatcher {\n \n-\t@Nullable\n \t@Override\n-\tpublic String validateInput(String input, Context context) {\n-\t\tString error = null;\n-\n-\t\tif (input.isEmpty()) {\n-\t\t\treturn context.getString(R.string.name_empty);\n-\t\t}\n-\n-\t\tinput = input.trim();\n-\n-\t\tif (input.isEmpty()) {\n-\t\t\terror = context.getString(R.string.name_consists_of_spaces_only);\n-\t\t} else if (ReplaceExistingProjectDialogFragment.projectExistsInDirectory(input)) {\n-\t\t\terror = context.getString(R.string.name_already_exists);\n-\t\t}\n-\n-\t\treturn error;\n+\tprotected boolean isNameUnique(String name) {\n+\t\treturn ReplaceExistingProjectDialogFragment.projectExistsInDirectory(name);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2b091118a9a4ea2e6a387abff008e7f702ed281c"}, "originalPosition": 36}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3725, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}