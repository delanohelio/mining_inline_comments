{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIxMDYzNTgw", "number": 3871, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQxNTowMzoyMlrOE9q9cQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yN1QxNToyMDoyMlrOE-CA9w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMzMTAyNDQ5OnYy", "diffSide": "RIGHT", "path": "catroid/build.gradle", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQxNTowMzoyMlrOH6e_Bg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQxNTowMzoyMlrOH6e_Bg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTA4NzExMA==", "bodyText": "Delete this if already set by default config", "url": "https://github.com/Catrobat/Catroid/pull/3871#discussion_r531087110", "createdAt": "2020-11-26T15:03:22Z", "author": {"login": "juliajulie95"}, "path": "catroid/build.gradle", "diffHunk": "@@ -241,11 +243,14 @@ android {\n         debug {\n             buildConfigField \"boolean\", \"USE_ANDROID_LOCALES_FOR_SCREENSHOTS\", useAndroidLocales()\n             resValue \"string\", \"DEBUG_MODE\", \"true\"\n+            buildConfigField \"boolean\", \"FEATURE_CATBLOCKS_ENABLED\", \"true\"\n+            buildConfigField \"boolean\", \"FEATURE_CATBLOCKS_DEBUGABLE\", \"true\"\n             testCoverageEnabled = rootProject.hasProperty('enableCoverage')\n             signingConfig signingConfigs.debug\n         }\n \n         release {\n+            buildConfigField \"boolean\", \"FEATURE_CATBLOCKS_DEBUGABLE\", \"false\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a48ae5c6b8bebc0904113ec601bb82da897254fb"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMzMTAzMzcxOnYy", "diffSide": "RIGHT", "path": "catroid/src/main/java/org/catrobat/catroid/ui/recyclerview/fragment/ScriptFragment.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQxNTowNTo1MFrOH6fEmw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQxNTowNTo1MFrOH6fEmw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTA4ODUzOQ==", "bodyText": "Hide action mode in looks and sounds", "url": "https://github.com/Catrobat/Catroid/pull/3871#discussion_r531088539", "createdAt": "2020-11-26T15:05:50Z", "author": {"login": "juliajulie95"}, "path": "catroid/src/main/java/org/catrobat/catroid/ui/recyclerview/fragment/ScriptFragment.java", "diffHunk": "@@ -263,6 +277,10 @@ public void onPause() {\n \tpublic void onPrepareOptionsMenu(Menu menu) {\n \t\tmenu.findItem(R.id.show_details).setVisible(false);\n \t\tmenu.findItem(R.id.rename).setVisible(false);\n+\t\tmenu.findItem(R.id.catblocks_reorder_scripts).setVisible(false);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a48ae5c6b8bebc0904113ec601bb82da897254fb"}, "originalPosition": 70}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMzMTAzNjkxOnYy", "diffSide": "RIGHT", "path": "catroid/src/main/java/org/catrobat/catroid/ui/recyclerview/fragment/CatblocksScriptFragment.kt", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQxNTowNjo1MFrOH6fGtA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQxNTowNjo1MFrOH6fGtA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTA4OTA3Ng==", "bodyText": "deprecated, use getParentFragmentManager() if possible", "url": "https://github.com/Catrobat/Catroid/pull/3871#discussion_r531089076", "createdAt": "2020-11-26T15:06:50Z", "author": {"login": "juliajulie95"}, "path": "catroid/src/main/java/org/catrobat/catroid/ui/recyclerview/fragment/CatblocksScriptFragment.kt", "diffHunk": "@@ -0,0 +1,252 @@\n+/*\n+ * Catroid: An on-device visual programming system for Android devices\n+ * Copyright (C) 2010-2020 The Catrobat Team\n+ * (<http://developer.catrobat.org/credits>)\n+ *\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU Affero General Public License as\n+ * published by the Free Software Foundation, either version 3 of the\n+ * License, or (at your option) any later version.\n+ *\n+ * An additional term exception under section 7 of the GNU Affero\n+ * General Public License, version 3, is available at\n+ * http://developer.catrobat.org/license_additional_term\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU Affero General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Affero General Public License\n+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+\n+package org.catrobat.catroid.ui.recyclerview.fragment\n+\n+import android.annotation.SuppressLint\n+import android.os.Build\n+import android.os.Bundle\n+import android.view.LayoutInflater\n+import android.view.Menu\n+import android.view.MenuItem\n+import android.view.View\n+import android.view.ViewGroup\n+import android.webkit.JavascriptInterface\n+import android.webkit.ValueCallback\n+import android.webkit.WebResourceRequest\n+import android.webkit.WebResourceResponse\n+import android.webkit.WebView\n+import android.webkit.WebViewClient\n+import androidx.annotation.RequiresApi\n+import androidx.appcompat.app.AppCompatActivity\n+import androidx.fragment.app.Fragment\n+import androidx.webkit.WebViewAssetLoader\n+import org.catrobat.catroid.BuildConfig\n+import org.catrobat.catroid.R\n+import org.catrobat.catroid.content.Project\n+import org.catrobat.catroid.content.Scene\n+import org.catrobat.catroid.content.Sprite\n+import org.catrobat.catroid.io.XstreamSerializer\n+import org.catrobat.catroid.ui.BottomBar\n+import org.catrobat.catroid.ui.settingsfragments.SettingsFragment\n+import java.util.Locale\n+import java.util.UUID\n+\n+class CatblocksScriptFragment(\n+    private val currentProject: Project?,\n+    private val currentScene: Scene?,\n+    private val currentSprite: Sprite?,\n+    private val currentScriptIndex: Int\n+) : Fragment() {\n+\n+    private var webview: WebView? = null\n+\n+    companion object {\n+        val TAG: String = CatblocksScriptFragment::class.java.simpleName\n+    }\n+\n+    override fun onPrepareOptionsMenu(menu: Menu) {\n+        super.onPrepareOptionsMenu(menu)\n+        menu.removeItem(R.id.backpack)\n+        menu.removeItem(R.id.copy)\n+        menu.removeItem(R.id.delete)\n+        menu.removeItem(R.id.rename)\n+        menu.removeItem(R.id.show_details)\n+    }\n+\n+    override fun onOptionsItemSelected(item: MenuItem): Boolean {\n+        if (item.itemId == R.id.catblocks) {\n+            SettingsFragment.setUseCatBlocks(context, false)\n+\n+            val fragmentTransaction = fragmentManager?.beginTransaction()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a48ae5c6b8bebc0904113ec601bb82da897254fb"}, "originalPosition": 81}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMzMTA0NDMwOnYy", "diffSide": "RIGHT", "path": "catroid/src/main/java/org/catrobat/catroid/ui/recyclerview/fragment/CatblocksScriptFragment.kt", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQxNTowODo0NlrOH6fLKw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQxNTowODo0NlrOH6fLKw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTA5MDIxOQ==", "bodyText": "Naming", "url": "https://github.com/Catrobat/Catroid/pull/3871#discussion_r531090219", "createdAt": "2020-11-26T15:08:46Z", "author": {"login": "juliajulie95"}, "path": "catroid/src/main/java/org/catrobat/catroid/ui/recyclerview/fragment/CatblocksScriptFragment.kt", "diffHunk": "@@ -0,0 +1,252 @@\n+/*\n+ * Catroid: An on-device visual programming system for Android devices\n+ * Copyright (C) 2010-2020 The Catrobat Team\n+ * (<http://developer.catrobat.org/credits>)\n+ *\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU Affero General Public License as\n+ * published by the Free Software Foundation, either version 3 of the\n+ * License, or (at your option) any later version.\n+ *\n+ * An additional term exception under section 7 of the GNU Affero\n+ * General Public License, version 3, is available at\n+ * http://developer.catrobat.org/license_additional_term\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU Affero General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Affero General Public License\n+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+\n+package org.catrobat.catroid.ui.recyclerview.fragment\n+\n+import android.annotation.SuppressLint\n+import android.os.Build\n+import android.os.Bundle\n+import android.view.LayoutInflater\n+import android.view.Menu\n+import android.view.MenuItem\n+import android.view.View\n+import android.view.ViewGroup\n+import android.webkit.JavascriptInterface\n+import android.webkit.ValueCallback\n+import android.webkit.WebResourceRequest\n+import android.webkit.WebResourceResponse\n+import android.webkit.WebView\n+import android.webkit.WebViewClient\n+import androidx.annotation.RequiresApi\n+import androidx.appcompat.app.AppCompatActivity\n+import androidx.fragment.app.Fragment\n+import androidx.webkit.WebViewAssetLoader\n+import org.catrobat.catroid.BuildConfig\n+import org.catrobat.catroid.R\n+import org.catrobat.catroid.content.Project\n+import org.catrobat.catroid.content.Scene\n+import org.catrobat.catroid.content.Sprite\n+import org.catrobat.catroid.io.XstreamSerializer\n+import org.catrobat.catroid.ui.BottomBar\n+import org.catrobat.catroid.ui.settingsfragments.SettingsFragment\n+import java.util.Locale\n+import java.util.UUID\n+\n+class CatblocksScriptFragment(\n+    private val currentProject: Project?,\n+    private val currentScene: Scene?,\n+    private val currentSprite: Sprite?,\n+    private val currentScriptIndex: Int\n+) : Fragment() {\n+\n+    private var webview: WebView? = null\n+\n+    companion object {\n+        val TAG: String = CatblocksScriptFragment::class.java.simpleName\n+    }\n+\n+    override fun onPrepareOptionsMenu(menu: Menu) {\n+        super.onPrepareOptionsMenu(menu)\n+        menu.removeItem(R.id.backpack)\n+        menu.removeItem(R.id.copy)\n+        menu.removeItem(R.id.delete)\n+        menu.removeItem(R.id.rename)\n+        menu.removeItem(R.id.show_details)\n+    }\n+\n+    override fun onOptionsItemSelected(item: MenuItem): Boolean {\n+        if (item.itemId == R.id.catblocks) {\n+            SettingsFragment.setUseCatBlocks(context, false)\n+\n+            val fragmentTransaction = fragmentManager?.beginTransaction()\n+            fragmentTransaction?.replace(\n+                R.id.fragment_container, ScriptFragment(currentProject),\n+                ScriptFragment.TAG\n+            )\n+            fragmentTransaction?.commit()\n+\n+            return true\n+        } else if (item.itemId == R.id.catblocks_reorder_scripts) {\n+            val callback = ReorderCallback()\n+            webview!!.evaluateJavascript(\"javascript:CatBlocks.reorderCurrentScripts();\", callback)\n+        }\n+        return super.onOptionsItemSelected(item)\n+    }\n+\n+    override fun onResume() {\n+        super.onResume()\n+\n+        val actionBar = (activity as AppCompatActivity?)!!.supportActionBar\n+        actionBar?.title = currentProject?.name\n+    }\n+\n+    override fun onCreateView(\n+        inflater: LayoutInflater,\n+        container: ViewGroup?,\n+        savedInstanceState: Bundle?\n+    ): View? {\n+        BottomBar.showBottomBar(activity)\n+        BottomBar.showPlayButton(activity)\n+        BottomBar.hideAddButton(activity)\n+\n+        setHasOptionsMenu(true)\n+\n+        val view = View.inflate(activity, R.layout.fragment_catblocks, null)\n+        val webView = view.findViewById<WebView>(R.id.catblocksWebView)\n+        initWebView(webView)\n+        this.webview = webView\n+        return view\n+    }\n+\n+    @SuppressLint(\"SetJavaScriptEnabled\")\n+    private fun initWebView(catblocksWebview: WebView) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a48ae5c6b8bebc0904113ec601bb82da897254fb"}, "originalPosition": 122}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMzMTA1MjY0OnYy", "diffSide": "RIGHT", "path": "catroid/src/main/java/org/catrobat/catroid/ui/recyclerview/fragment/CatblocksScriptFragment.kt", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQxNToxMDo1MFrOH6fQMQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQxNToxMDo1MFrOH6fQMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTA5MTUwNQ==", "bodyText": "Do we need this? Else disable catblocks for lower android versions", "url": "https://github.com/Catrobat/Catroid/pull/3871#discussion_r531091505", "createdAt": "2020-11-26T15:10:50Z", "author": {"login": "juliajulie95"}, "path": "catroid/src/main/java/org/catrobat/catroid/ui/recyclerview/fragment/CatblocksScriptFragment.kt", "diffHunk": "@@ -0,0 +1,252 @@\n+/*\n+ * Catroid: An on-device visual programming system for Android devices\n+ * Copyright (C) 2010-2020 The Catrobat Team\n+ * (<http://developer.catrobat.org/credits>)\n+ *\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU Affero General Public License as\n+ * published by the Free Software Foundation, either version 3 of the\n+ * License, or (at your option) any later version.\n+ *\n+ * An additional term exception under section 7 of the GNU Affero\n+ * General Public License, version 3, is available at\n+ * http://developer.catrobat.org/license_additional_term\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU Affero General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Affero General Public License\n+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+\n+package org.catrobat.catroid.ui.recyclerview.fragment\n+\n+import android.annotation.SuppressLint\n+import android.os.Build\n+import android.os.Bundle\n+import android.view.LayoutInflater\n+import android.view.Menu\n+import android.view.MenuItem\n+import android.view.View\n+import android.view.ViewGroup\n+import android.webkit.JavascriptInterface\n+import android.webkit.ValueCallback\n+import android.webkit.WebResourceRequest\n+import android.webkit.WebResourceResponse\n+import android.webkit.WebView\n+import android.webkit.WebViewClient\n+import androidx.annotation.RequiresApi\n+import androidx.appcompat.app.AppCompatActivity\n+import androidx.fragment.app.Fragment\n+import androidx.webkit.WebViewAssetLoader\n+import org.catrobat.catroid.BuildConfig\n+import org.catrobat.catroid.R\n+import org.catrobat.catroid.content.Project\n+import org.catrobat.catroid.content.Scene\n+import org.catrobat.catroid.content.Sprite\n+import org.catrobat.catroid.io.XstreamSerializer\n+import org.catrobat.catroid.ui.BottomBar\n+import org.catrobat.catroid.ui.settingsfragments.SettingsFragment\n+import java.util.Locale\n+import java.util.UUID\n+\n+class CatblocksScriptFragment(\n+    private val currentProject: Project?,\n+    private val currentScene: Scene?,\n+    private val currentSprite: Sprite?,\n+    private val currentScriptIndex: Int\n+) : Fragment() {\n+\n+    private var webview: WebView? = null\n+\n+    companion object {\n+        val TAG: String = CatblocksScriptFragment::class.java.simpleName\n+    }\n+\n+    override fun onPrepareOptionsMenu(menu: Menu) {\n+        super.onPrepareOptionsMenu(menu)\n+        menu.removeItem(R.id.backpack)\n+        menu.removeItem(R.id.copy)\n+        menu.removeItem(R.id.delete)\n+        menu.removeItem(R.id.rename)\n+        menu.removeItem(R.id.show_details)\n+    }\n+\n+    override fun onOptionsItemSelected(item: MenuItem): Boolean {\n+        if (item.itemId == R.id.catblocks) {\n+            SettingsFragment.setUseCatBlocks(context, false)\n+\n+            val fragmentTransaction = fragmentManager?.beginTransaction()\n+            fragmentTransaction?.replace(\n+                R.id.fragment_container, ScriptFragment(currentProject),\n+                ScriptFragment.TAG\n+            )\n+            fragmentTransaction?.commit()\n+\n+            return true\n+        } else if (item.itemId == R.id.catblocks_reorder_scripts) {\n+            val callback = ReorderCallback()\n+            webview!!.evaluateJavascript(\"javascript:CatBlocks.reorderCurrentScripts();\", callback)\n+        }\n+        return super.onOptionsItemSelected(item)\n+    }\n+\n+    override fun onResume() {\n+        super.onResume()\n+\n+        val actionBar = (activity as AppCompatActivity?)!!.supportActionBar\n+        actionBar?.title = currentProject?.name\n+    }\n+\n+    override fun onCreateView(\n+        inflater: LayoutInflater,\n+        container: ViewGroup?,\n+        savedInstanceState: Bundle?\n+    ): View? {\n+        BottomBar.showBottomBar(activity)\n+        BottomBar.showPlayButton(activity)\n+        BottomBar.hideAddButton(activity)\n+\n+        setHasOptionsMenu(true)\n+\n+        val view = View.inflate(activity, R.layout.fragment_catblocks, null)\n+        val webView = view.findViewById<WebView>(R.id.catblocksWebView)\n+        initWebView(webView)\n+        this.webview = webView\n+        return view\n+    }\n+\n+    @SuppressLint(\"SetJavaScriptEnabled\")\n+    private fun initWebView(catblocksWebview: WebView) {\n+        catblocksWebview.settings.javaScriptEnabled = true\n+\n+        if (BuildConfig.FEATURE_CATBLOCKS_DEBUGABLE) {\n+            WebView.setWebContentsDebuggingEnabled(true)\n+        }\n+\n+        val assetLoader: WebViewAssetLoader = WebViewAssetLoader.Builder()\n+            .addPathHandler(\"/assets/\", WebViewAssetLoader.AssetsPathHandler(requireActivity()))\n+            .addPathHandler(\"/res/\", WebViewAssetLoader.ResourcesPathHandler(requireActivity()))\n+            .build()\n+\n+        catblocksWebview.addJavascriptInterface(\n+            JSInterface(\n+                currentProject,\n+                currentScene,\n+                currentSprite,\n+                currentScriptIndex\n+            ), \"Android\"\n+        )\n+\n+        catblocksWebview.webViewClient = object : WebViewClient() {\n+            @RequiresApi(Build.VERSION_CODES.LOLLIPOP)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a48ae5c6b8bebc0904113ec601bb82da897254fb"}, "originalPosition": 144}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMzNDgwMTQ0OnYy", "diffSide": "RIGHT", "path": "catroid/src/main/java/org/catrobat/catroid/ui/recyclerview/fragment/CatblocksScriptFragment.kt", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yN1QxNToyMDoxNFrOH7B17w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yN1QxNToyMDoxNFrOH7B17w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTY1ODIyMw==", "bodyText": "Unused import", "url": "https://github.com/Catrobat/Catroid/pull/3871#discussion_r531658223", "createdAt": "2020-11-27T15:20:14Z", "author": {"login": "juliajulie95"}, "path": "catroid/src/main/java/org/catrobat/catroid/ui/recyclerview/fragment/CatblocksScriptFragment.kt", "diffHunk": "@@ -0,0 +1,251 @@\n+/*\n+ * Catroid: An on-device visual programming system for Android devices\n+ * Copyright (C) 2010-2020 The Catrobat Team\n+ * (<http://developer.catrobat.org/credits>)\n+ *\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU Affero General Public License as\n+ * published by the Free Software Foundation, either version 3 of the\n+ * License, or (at your option) any later version.\n+ *\n+ * An additional term exception under section 7 of the GNU Affero\n+ * General Public License, version 3, is available at\n+ * http://developer.catrobat.org/license_additional_term\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU Affero General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Affero General Public License\n+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+\n+package org.catrobat.catroid.ui.recyclerview.fragment\n+\n+import android.annotation.SuppressLint\n+import android.os.Build", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "46177a2e352cf259d25404ff4ddf404b65e4b2f4"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMzNDgwMTgzOnYy", "diffSide": "RIGHT", "path": "catroid/src/main/java/org/catrobat/catroid/ui/recyclerview/fragment/CatblocksScriptFragment.kt", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yN1QxNToyMDoyMlrOH7B2KQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yN1QxNToyMDoyMlrOH7B2KQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTY1ODI4MQ==", "bodyText": "Unused import", "url": "https://github.com/Catrobat/Catroid/pull/3871#discussion_r531658281", "createdAt": "2020-11-27T15:20:22Z", "author": {"login": "juliajulie95"}, "path": "catroid/src/main/java/org/catrobat/catroid/ui/recyclerview/fragment/CatblocksScriptFragment.kt", "diffHunk": "@@ -0,0 +1,251 @@\n+/*\n+ * Catroid: An on-device visual programming system for Android devices\n+ * Copyright (C) 2010-2020 The Catrobat Team\n+ * (<http://developer.catrobat.org/credits>)\n+ *\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU Affero General Public License as\n+ * published by the Free Software Foundation, either version 3 of the\n+ * License, or (at your option) any later version.\n+ *\n+ * An additional term exception under section 7 of the GNU Affero\n+ * General Public License, version 3, is available at\n+ * http://developer.catrobat.org/license_additional_term\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU Affero General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Affero General Public License\n+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+\n+package org.catrobat.catroid.ui.recyclerview.fragment\n+\n+import android.annotation.SuppressLint\n+import android.os.Build\n+import android.os.Bundle\n+import android.view.LayoutInflater\n+import android.view.Menu\n+import android.view.MenuItem\n+import android.view.View\n+import android.view.ViewGroup\n+import android.webkit.JavascriptInterface\n+import android.webkit.ValueCallback\n+import android.webkit.WebResourceRequest\n+import android.webkit.WebResourceResponse\n+import android.webkit.WebView\n+import android.webkit.WebViewClient\n+import androidx.annotation.RequiresApi", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "46177a2e352cf259d25404ff4ddf404b65e4b2f4"}, "originalPosition": 40}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3688, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}