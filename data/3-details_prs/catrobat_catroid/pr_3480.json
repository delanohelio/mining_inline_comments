{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc1ODU4MTgw", "number": 3480, "title": "CATROID-374 Implement sharing WebView Login automatically", "bodyText": "", "createdAt": "2020-02-16T18:42:54Z", "url": "https://github.com/Catrobat/Catroid/pull/3480", "merged": true, "mergeCommit": {"oid": "77ff5fd6e1fdeda32fd626f3d0aa4644171afdaf"}, "closed": true, "closedAt": "2020-02-19T17:01:33Z", "author": {"login": "mstoeg"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcE9WbQgBqjMwNDE3NTY1Mjg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcF5RwMgFqTM2MTIxOTk4MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestCommit", "commit": {"oid": "ab9fc19834f5e1388f91871825af9be15db4cb54", "author": {"user": {"login": "mstoeg", "name": "Martin St\u00f6glehner"}}, "url": "https://github.com/Catrobat/Catroid/commit/ab9fc19834f5e1388f91871825af9be15db4cb54", "committedDate": "2020-02-16T19:20:34Z", "message": "CATROID-374 Implement sharing WebView Login automatically"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "ab9fc19834f5e1388f91871825af9be15db4cb54", "author": {"user": {"login": "mstoeg", "name": "Martin St\u00f6glehner"}}, "url": "https://github.com/Catrobat/Catroid/commit/ab9fc19834f5e1388f91871825af9be15db4cb54", "committedDate": "2020-02-16T19:20:34Z", "message": "CATROID-374 Implement sharing WebView Login automatically"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYxMjE5OTgx", "url": "https://github.com/Catrobat/Catroid/pull/3480#pullrequestreview-361219981", "createdAt": "2020-02-19T16:07:57Z", "commit": {"oid": "ab9fc19834f5e1388f91871825af9be15db4cb54"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxNjoxNjo0MFrOFrtpyA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxNjoxNzo1MlrOFrttIA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTM4MTA2NA==", "bodyText": "If you declare sharedPreferences and cookieManager as a parameter, you'll be able to test the method. (Hint: mock it)", "url": "https://github.com/Catrobat/Catroid/pull/3480#discussion_r381381064", "createdAt": "2020-02-19T16:16:40Z", "author": {"login": "gPathpp"}, "path": "catroid/src/main/java/org/catrobat/catroid/ui/WebViewActivity.java", "diffHunk": "@@ -249,6 +255,29 @@ private String getExtensionFromContentDisposition(String contentDisposition) {\n \t\treturn extension;\n \t}\n \n+\tpublic void setLoginCookies(String url) {\n+\t\tSharedPreferences sharedPreferences =\n+\t\t\t\tPreferenceManager.getDefaultSharedPreferences(getApplicationContext());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ab9fc19834f5e1388f91871825af9be15db4cb54"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTM4MTkyMA==", "bodyText": "Please add a test.", "url": "https://github.com/Catrobat/Catroid/pull/3480#discussion_r381381920", "createdAt": "2020-02-19T16:17:52Z", "author": {"login": "gPathpp"}, "path": "catroid/src/main/java/org/catrobat/catroid/ui/WebViewActivity.java", "diffHunk": "@@ -249,6 +255,29 @@ private String getExtensionFromContentDisposition(String contentDisposition) {\n \t\treturn extension;\n \t}\n \n+\tpublic void setLoginCookies(String url) {\n+\t\tSharedPreferences sharedPreferences =\n+\t\t\t\tPreferenceManager.getDefaultSharedPreferences(getApplicationContext());\n+\t\tString username = sharedPreferences.getString(Constants.USERNAME, Constants.NO_USERNAME);\n+\t\tString token = sharedPreferences.getString(Constants.TOKEN, Constants.NO_TOKEN);\n+\n+\t\tif (username.equals(Constants.NO_USERNAME) || token.equals(Constants.NO_TOKEN)) {\n+\t\t\treturn;\n+\t\t}\n+\n+\t\tString encodedUsername = null;\n+\t\ttry {\n+\t\t\tencodedUsername = URLEncoder.encode(username, \"UTF-8\");\n+\t\t} catch (UnsupportedEncodingException e) {\n+\t\t\tLog.e(TAG, Log.getStackTraceString(e));\n+\t\t}\n+\n+\t\tCookie usernameCookie = new Cookie(Cookie.USERNAME_COOKIE, encodedUsername);\n+\t\tCookie tokenCookie = new Cookie(Cookie.TOKEN_COOKIE, token);\n+\t\tCookieManager.getInstance().setCookie(url, usernameCookie.generateCookieString());\n+\t\tCookieManager.getInstance().setCookie(url, tokenCookie.generateCookieString());\n+\t}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ab9fc19834f5e1388f91871825af9be15db4cb54"}, "originalPosition": 61}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1985, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}