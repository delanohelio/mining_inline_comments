{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI0MjY4MTA1", "number": 3617, "title": "CATROID-218 Enable definition of a user brick", "bodyText": "Add necessary .png and .9 files for viewing both the \"Define\" and \"as\" bricks\nAdd new classes for the UserDefinedReceiverBrick and the UserDefinedScript\nChange all variable names form UserBrick to UserDefinedBrick for consistency\nChange UserDefinedLabels/Inputs from Nameables to Strings (-> as it is easier to serialize them this way)\nImplement https://jira.catrob.at/browse/CATROID-304 as well, as it was necessary for XMLSerialization of the UserDefinedBrick\nXML Change: UserDefinedBricks of the Sprite are now saved within the XML as well (as it is the case for UserVariables, UserLists, etc.)\nMake BackpackBrickSerializerandDeserializer generic so that it can be used for UserDefinedBrickData as well\nThe behavior of backpacking UserDefinedBricks is aligned with Scratch\nAdd a simple testcase for adding a UserDefinedBrick and a UserDefinedRecevierBrick to the ScriptFragment. More complex tests have to be implemented with https://jira.catrob.at/browse/CATROID-18 when the bricks are actually executed\n\nhttps://jira.catrob.at/browse/CATROID-218\nYour checklist for this pull request\nPlease review the contributing guidelines and wiki pages of this repository.\n\n Include the name of the Jira ticket in the PR\u2019s title\n Include a summary of the changes plus the relevant context\n Choose the proper base branch (develop)\n Confirm that the changes follow the project\u2019s coding guidelines\n Verify that the changes generate no compiler or linter warnings\n Perform a self-review of the changes\n Verify to commit no other files than the intentionally changed ones\n Include reasonable and readable tests verifying the added or changed behavior\n Confirm that new and existing unit tests pass locally\n Check that the commits\u2019 message style matches the project\u2019s guideline\n Stick to the project\u2019s gitflow workflow\n Verify that your changes do not have any conflicts with the base branch\n After the PR, verify that all CI checks have passed\n Post a message in the catroid-stage or catroid-ide Slack channel and ask for a code reviewer", "createdAt": "2020-05-28T06:02:49Z", "url": "https://github.com/Catrobat/Catroid/pull/3617", "merged": true, "mergeCommit": {"oid": "33041a4d1f1d575ad261e444de9a9769203971d7"}, "closed": true, "closedAt": "2020-07-01T10:20:40Z", "author": {"login": "mstoeg"}, "timelineItems": {"totalCount": 21, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcmGSvJABqjMzODgyMzQyMDE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABctw2UhgFqTQzNDkyMTExMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMyMzY2OTA3", "url": "https://github.com/Catrobat/Catroid/pull/3617#pullrequestreview-432366907", "createdAt": "2020-06-17T12:51:15Z", "commit": null, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxMjo1MToxNVrOGlEOgA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxMzoyNDowN1rOGlFi-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTUxOTc0NA==", "bodyText": "Please do a rebase and check for earlier increase", "url": "https://github.com/Catrobat/Catroid/pull/3617#discussion_r441519744", "createdAt": "2020-06-17T12:51:15Z", "author": {"login": "DinosaurierRex"}, "path": "catroid/src/main/java/org/catrobat/catroid/common/Constants.java", "diffHunk": "@@ -38,7 +38,7 @@\n \n public final class Constants {\n \n-\tpublic static final float CURRENT_CATROBAT_LANGUAGE_VERSION = 0.999993f;\n+\tpublic static final float CURRENT_CATROBAT_LANGUAGE_VERSION = 0.999994f;", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTUyNzc3OA==", "bodyText": "Maybe you could try to do this in a more generic way, because these three functions are nearly duplicate code", "url": "https://github.com/Catrobat/Catroid/pull/3617#discussion_r441527778", "createdAt": "2020-06-17T13:03:57Z", "author": {"login": "DinosaurierRex"}, "path": "catroid/src/main/java/org/catrobat/catroid/content/Sprite.java", "diffHunk": "@@ -139,6 +141,39 @@ public int hashCode() {\n \t\treturn userDefinedBrickList;\n \t}\n \n+\tpublic UserDefinedBrick getUserDefinedBrick(UserDefinedBrick userDefinedBrick) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTUzMDA3Mw==", "bodyText": "Please rewrite this in a more clean code style. Early returning, dont use too much nested blocks", "url": "https://github.com/Catrobat/Catroid/pull/3617#discussion_r441530073", "createdAt": "2020-06-17T13:07:26Z", "author": {"login": "DinosaurierRex"}, "path": "catroid/src/main/java/org/catrobat/catroid/content/bricks/UserDefinedBrick.java", "diffHunk": "@@ -55,144 +55,176 @@\n \tpublic static final boolean INPUT = true;\n \tpublic static final boolean LABEL = false;\n \n-\tprivate List<UserBrickData> userBrickDataList;\n-\tprivate BrickLayout userBrickContentLayout;\n-\tpublic TextView currentUserDataEditText;\n+\t@XStreamAlias(\"userDefinedBrickDataList\")\n+\tprivate List<UserDefinedBrickData> userDefinedBrickDataList;\n+\n+\t@XStreamAlias(\"userDefinedBrickID\")\n+\tprivate UUID userDefinedBrickID;\n+\n+\tprivate transient BrickLayout userDefinedBrickLayout;\n+\tpublic transient TextView currentUserDefinedDataTextView;\n \n \tpublic UserDefinedBrick() {\n-\t\tuserBrickDataList = new ArrayList<>();\n+\t\tuserDefinedBrickDataList = new ArrayList<>();\n+\t\tuserDefinedBrickID = UUID.randomUUID();\n+\t}\n+\n+\tpublic UserDefinedBrick(List<UserDefinedBrickData> userBrickDataList) {\n+\t\tthis.userDefinedBrickDataList = userBrickDataList;\n+\t\tthis.userDefinedBrickID = UUID.randomUUID();\n+\t}\n+\n+\tpublic UserDefinedBrick(UserDefinedBrick userDefinedBrick) {\n+\t\tcopyUserDefinedDataList(userDefinedBrick);\n+\t\tthis.userDefinedBrickID = UUID.randomUUID();\n+\t}\n+\n+\tprivate void copyUserDefinedDataList(UserDefinedBrick userDefinedBrick) {\n+\t\tthis.userDefinedBrickDataList = new ArrayList<>();\n+\t\tfor (UserDefinedBrickData data : userDefinedBrick.getUserDefinedBrickDataList()) {\n+\t\t\tif (data instanceof UserDefinedBrickInput) {\n+\t\t\t\tuserDefinedBrickDataList.add(new UserDefinedBrickInput((UserDefinedBrickInput) data));\n+\t\t\t} else {\n+\t\t\t\tuserDefinedBrickDataList.add(new UserDefinedBrickLabel((UserDefinedBrickLabel) data));\n+\t\t\t}\n+\t\t}\n \t}\n \n-\tpublic UserDefinedBrick(List<UserBrickData> userBrickDataList) {\n-\t\tthis.userBrickDataList = userBrickDataList;\n+\tpublic UUID getUserDefinedBrickID() {\n+\t\treturn userDefinedBrickID;\n \t}\n \n-\tpublic void addLabel(Nameable label) {\n+\tpublic void addLabel(String label) {\n \t\tremoveLastLabel();\n-\t\tuserBrickDataList.add(new UserBrickLabel(label));\n+\t\tuserDefinedBrickDataList.add(new UserDefinedBrickLabel(label));\n \t}\n \n \tpublic void removeLastLabel() {\n \t\tif (lastContentIsLabel()) {\n-\t\t\tuserBrickDataList.remove(userBrickDataList.size() - 1);\n+\t\t\tuserDefinedBrickDataList.remove(userDefinedBrickDataList.size() - 1);\n \t\t}\n \t}\n \n-\tpublic void addInput(Nameable input) {\n-\t\tuserBrickDataList.add(new UserBrickInput(input));\n+\tpublic void addInput(String input) {\n+\t\tuserDefinedBrickDataList.add(new UserDefinedBrickInput(input));\n \t}\n \n \tpublic boolean isEmpty() {\n-\t\treturn userBrickDataList.isEmpty();\n+\t\treturn userDefinedBrickDataList.isEmpty();\n \t}\n \n-\tpublic List<Nameable> getUserDataList(boolean inputOrLabel) {\n-\t\tList<Nameable> userDataList = new ArrayList<>();\n+\tpublic List<UserDefinedBrickData> getUserDefinedBrickDataList() {\n+\t\treturn this.userDefinedBrickDataList;\n+\t}\n+\n+\tpublic List<String> getUserDataList(boolean inputOrLabel) {\n+\t\tList<String> userDataList = new ArrayList<>();\n \t\tif (inputOrLabel) {\n-\t\t\tfor (UserBrickData userBrickData : userBrickDataList) {\n-\t\t\t\tif (userBrickData instanceof UserBrickInput) {\n-\t\t\t\t\tuserDataList.add(((UserBrickInput) userBrickData).getInput());\n+\t\t\tfor (UserDefinedBrickData userDefinedBrickData : userDefinedBrickDataList) {\n+\t\t\t\tif (userDefinedBrickData instanceof UserDefinedBrickInput) {\n+\t\t\t\t\tuserDataList.add(((UserDefinedBrickInput) userDefinedBrickData).getInput());\n \t\t\t\t}\n \t\t\t}\n \t\t} else {\n-\t\t\tfor (UserBrickData userBrickData : userBrickDataList) {\n-\t\t\t\tif (userBrickData instanceof UserBrickLabel) {\n-\t\t\t\t\tuserDataList.add(((UserBrickLabel) userBrickData).getLabel());\n+\t\t\tfor (UserDefinedBrickData userDefinedBrickData : userDefinedBrickDataList) {\n+\t\t\t\tif (userDefinedBrickData instanceof UserDefinedBrickLabel) {\n+\t\t\t\t\tuserDataList.add(((UserDefinedBrickLabel) userDefinedBrickData).getLabel());\n \t\t\t\t}\n \t\t\t}\n \t\t}\n \t\treturn userDataList;\n \t}\n \n \tprivate boolean lastContentIsLabel() {\n-\t\tif (userBrickDataList.isEmpty()) {\n+\t\tif (userDefinedBrickDataList.isEmpty()) {\n \t\t\treturn false;\n \t\t}\n-\t\treturn userBrickDataList.get(userBrickDataList.size() - 1) instanceof UserBrickLabel;\n+\t\treturn userDefinedBrickDataList.get(userDefinedBrickDataList.size() - 1) instanceof UserDefinedBrickLabel;\n+\t}\n+\n+\tpublic boolean isUserDefinedBrickDataEqual(UserDefinedBrick other) {\n+\t\tif (userDefinedBrickDataList.size() == other.userDefinedBrickDataList.size()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 144}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTUzODAxMA==", "bodyText": "Please rethink structure of this function, too many lines \"outsourcing\" to own function.", "url": "https://github.com/Catrobat/Catroid/pull/3617#discussion_r441538010", "createdAt": "2020-06-17T13:19:29Z", "author": {"login": "DinosaurierRex"}, "path": "catroid/src/main/java/org/catrobat/catroid/ui/recyclerview/controller/ScriptController.java", "diffHunk": "@@ -59,6 +62,30 @@ public Script copy(Script scriptToCopy, Project dstProject, Scene dstScene, Spri\n \t\t\tthrows IOException, CloneNotSupportedException {\n \n \t\tScript script = scriptToCopy.clone();\n+\n+\t\tif (script instanceof UserDefinedScript) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTU0MTA5MA==", "bodyText": "Please rewrite to support collection adding.", "url": "https://github.com/Catrobat/Catroid/pull/3617#discussion_r441541090", "createdAt": "2020-06-17T13:23:47Z", "author": {"login": "DinosaurierRex"}, "path": "catroid/src/main/java/org/catrobat/catroid/ui/recyclerview/backpack/BackpackScriptFragment.java", "diffHunk": "@@ -54,12 +56,23 @@ protected void initializeAdapter() {\n \tprotected void unpackItems(List<String> selectedItems) {\n \t\tsetShowProgressBar(true);\n \t\tint unpackedItemCnt = 0;\n+\t\tSprite sprite = ProjectManager.getInstance().getCurrentSprite();\n \n \t\tfor (String item : selectedItems) {\n \t\t\tList<Script> scripts = BackpackListManager.getInstance().getBackpackedScripts().get(item);\n+\t\t\tList<UserDefinedBrick> userDefinedBricks = BackpackListManager.getInstance().getBackpackedUserDefinedBricks().get(item);\n+\t\t\tfor (UserDefinedBrick userDefinedBrick : userDefinedBricks) {\n+\t\t\t\tif (!sprite.containsUserDefinedBrick(userDefinedBrick)) {\n+\t\t\t\t\ttry {\n+\t\t\t\t\t\tsprite.addUserDefinedBrick((UserDefinedBrick) userDefinedBrick.clone());", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTU0MTM2OA==", "bodyText": "same as above", "url": "https://github.com/Catrobat/Catroid/pull/3617#discussion_r441541368", "createdAt": "2020-06-17T13:24:07Z", "author": {"login": "DinosaurierRex"}, "path": "catroid/src/main/java/org/catrobat/catroid/ui/recyclerview/controller/ScriptController.java", "diffHunk": "@@ -59,6 +62,30 @@ public Script copy(Script scriptToCopy, Project dstProject, Scene dstScene, Spri\n \t\t\tthrows IOException, CloneNotSupportedException {\n \n \t\tScript script = scriptToCopy.clone();\n+\n+\t\tif (script instanceof UserDefinedScript) {\n+\t\t\tUserDefinedBrick userDefinedBrickToCopy = ((UserDefinedReceiverBrick) scriptToCopy.getScriptBrick()).getUserDefinedBrick();\n+\t\t\tUserDefinedBrick copiedUserDefinedBrick = dstSprite.getUserDefinedBrick(userDefinedBrickToCopy);\n+\t\t\tif (copiedUserDefinedBrick != null && userDefinedBrickToCopy.getUserDefinedBrickID() != copiedUserDefinedBrick.getUserDefinedBrickID()) {\n+\t\t\t\tUserDefinedReceiverBrick userDefinedReceiverBrick = new UserDefinedReceiverBrick(copiedUserDefinedBrick);\n+\t\t\t\tfor (Brick brick : script.getBrickList()) {\n+\t\t\t\t\tuserDefinedReceiverBrick.getScript().addBrick(brick);\n+\t\t\t\t}\n+\t\t\t\tscript = userDefinedReceiverBrick.getScript();\n+\t\t\t}\n+\t\t}\n+\n+\t\tfor (int brickIndex = 0; brickIndex < script.getBrickList().size(); brickIndex++) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 32}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM0ODYzNzM4", "url": "https://github.com/Catrobat/Catroid/pull/3617#pullrequestreview-434863738", "createdAt": "2020-06-22T12:13:47Z", "commit": null, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQxMjoxMzo0N1rOGm9-Yg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQxMjoxMzo0N1rOGm9-Yg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzUxNDQ2Ng==", "bodyText": "The List of the clone will point to the list of the original object. If only the clones are present anymore, the list wont", "url": "https://github.com/Catrobat/Catroid/pull/3617#discussion_r443514466", "createdAt": "2020-06-22T12:13:47Z", "author": {"login": "DinosaurierRex"}, "path": "catroid/src/main/java/org/catrobat/catroid/content/bricks/UserDefinedBrick.java", "diffHunk": "@@ -55,144 +55,175 @@\n \tpublic static final boolean INPUT = true;\n \tpublic static final boolean LABEL = false;\n \n-\tprivate List<UserBrickData> userBrickDataList;\n-\tprivate BrickLayout userBrickContentLayout;\n-\tpublic TextView currentUserDataEditText;\n+\t@XStreamAlias(\"userDefinedBrickDataList\")\n+\tprivate List<UserDefinedBrickData> userDefinedBrickDataList;\n+\n+\t@XStreamAlias(\"userDefinedBrickID\")\n+\tprivate UUID userDefinedBrickID;\n+\n+\tprivate transient BrickLayout userDefinedBrickLayout;\n+\tpublic transient TextView currentUserDefinedDataTextView;\n \n \tpublic UserDefinedBrick() {\n-\t\tuserBrickDataList = new ArrayList<>();\n+\t\tuserDefinedBrickDataList = new ArrayList<>();\n+\t\tuserDefinedBrickID = UUID.randomUUID();\n+\t}\n+\n+\tpublic UserDefinedBrick(List<UserDefinedBrickData> userBrickDataList) {\n+\t\tthis.userDefinedBrickDataList = userBrickDataList;\n+\t\tthis.userDefinedBrickID = UUID.randomUUID();\n \t}\n \n-\tpublic UserDefinedBrick(List<UserBrickData> userBrickDataList) {\n-\t\tthis.userBrickDataList = userBrickDataList;\n+\tpublic UserDefinedBrick(UserDefinedBrick userDefinedBrick) {\n+\t\tcopyUserDefinedDataList(userDefinedBrick);\n+\t\tthis.userDefinedBrickID = UUID.randomUUID();\n+\t}\n+\n+\tprivate void copyUserDefinedDataList(UserDefinedBrick userDefinedBrick) {\n+\t\tthis.userDefinedBrickDataList = new ArrayList<>();\n+\t\tfor (UserDefinedBrickData data : userDefinedBrick.getUserDefinedBrickDataList()) {\n+\t\t\tif (data instanceof UserDefinedBrickInput) {\n+\t\t\t\tuserDefinedBrickDataList.add(new UserDefinedBrickInput((UserDefinedBrickInput) data));\n+\t\t\t} else {\n+\t\t\t\tuserDefinedBrickDataList.add(new UserDefinedBrickLabel((UserDefinedBrickLabel) data));\n+\t\t\t}\n+\t\t}\n \t}\n \n-\tpublic void addLabel(Nameable label) {\n+\tpublic UUID getUserDefinedBrickID() {\n+\t\treturn userDefinedBrickID;\n+\t}\n+\n+\tpublic void addLabel(String label) {\n \t\tremoveLastLabel();\n-\t\tuserBrickDataList.add(new UserBrickLabel(label));\n+\t\tuserDefinedBrickDataList.add(new UserDefinedBrickLabel(label));\n \t}\n \n \tpublic void removeLastLabel() {\n \t\tif (lastContentIsLabel()) {\n-\t\t\tuserBrickDataList.remove(userBrickDataList.size() - 1);\n+\t\t\tuserDefinedBrickDataList.remove(userDefinedBrickDataList.size() - 1);\n \t\t}\n \t}\n \n-\tpublic void addInput(Nameable input) {\n-\t\tuserBrickDataList.add(new UserBrickInput(input));\n+\tpublic void addInput(String input) {\n+\t\tuserDefinedBrickDataList.add(new UserDefinedBrickInput(input));\n \t}\n \n \tpublic boolean isEmpty() {\n-\t\treturn userBrickDataList.isEmpty();\n+\t\treturn userDefinedBrickDataList.isEmpty();\n+\t}\n+\n+\tpublic List<UserDefinedBrickData> getUserDefinedBrickDataList() {\n+\t\treturn this.userDefinedBrickDataList;\n \t}\n \n-\tpublic List<Nameable> getUserDataList(boolean inputOrLabel) {\n-\t\tList<Nameable> userDataList = new ArrayList<>();\n-\t\tif (inputOrLabel) {\n-\t\t\tfor (UserBrickData userBrickData : userBrickDataList) {\n-\t\t\t\tif (userBrickData instanceof UserBrickInput) {\n-\t\t\t\t\tuserDataList.add(((UserBrickInput) userBrickData).getInput());\n+\tpublic List<String> getUserDataList(boolean isInput) {\n+\t\tList<String> userDataList = new ArrayList<>();\n+\t\tif (isInput) {\n+\t\t\tfor (UserDefinedBrickData userDefinedBrickData : userDefinedBrickDataList) {\n+\t\t\t\tif (userDefinedBrickData instanceof UserDefinedBrickInput) {\n+\t\t\t\t\tuserDataList.add(((UserDefinedBrickInput) userDefinedBrickData).getInput());\n \t\t\t\t}\n \t\t\t}\n \t\t} else {\n-\t\t\tfor (UserBrickData userBrickData : userBrickDataList) {\n-\t\t\t\tif (userBrickData instanceof UserBrickLabel) {\n-\t\t\t\t\tuserDataList.add(((UserBrickLabel) userBrickData).getLabel());\n+\t\t\tfor (UserDefinedBrickData userDefinedBrickData : userDefinedBrickDataList) {\n+\t\t\t\tif (userDefinedBrickData instanceof UserDefinedBrickLabel) {\n+\t\t\t\t\tuserDataList.add(((UserDefinedBrickLabel) userDefinedBrickData).getLabel());\n \t\t\t\t}\n \t\t\t}\n \t\t}\n \t\treturn userDataList;\n \t}\n \n \tprivate boolean lastContentIsLabel() {\n-\t\tif (userBrickDataList.isEmpty()) {\n+\t\tif (userDefinedBrickDataList.isEmpty()) {\n \t\t\treturn false;\n \t\t}\n-\t\treturn userBrickDataList.get(userBrickDataList.size() - 1) instanceof UserBrickLabel;\n+\t\treturn userDefinedBrickDataList.get(userDefinedBrickDataList.size() - 1) instanceof UserDefinedBrickLabel;\n+\t}\n+\n+\tpublic boolean isUserDefinedBrickDataEqual(UserDefinedBrick other) {\n+\t\tif (userDefinedBrickDataList.size() != other.userDefinedBrickDataList.size()) {\n+\t\t\treturn false;\n+\t\t}\n+\t\tfor (int dataIndex = 0; dataIndex < userDefinedBrickDataList.size(); dataIndex++) {\n+\t\t\tUserDefinedBrickData thisData = userDefinedBrickDataList.get(dataIndex);\n+\t\t\tUserDefinedBrickData otherData = other.userDefinedBrickDataList.get(dataIndex);\n+\n+\t\t\tif (!thisData.getClass().equals(otherData.getClass())) {\n+\t\t\t\treturn false;\n+\t\t\t}\n+\t\t\tif (thisData instanceof UserDefinedBrickLabel && !thisData.equals(otherData)) {\n+\t\t\t\treturn false;\n+\t\t\t}\n+\t\t}\n+\t\treturn true;\n+\t}\n+\n+\t@Override\n+\tpublic Brick clone() throws CloneNotSupportedException {\n+\t\tUserDefinedBrick clone = (UserDefinedBrick) super.clone();\n+\t\tclone.userDefinedBrickDataList = this.getUserDefinedBrickDataList();", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 165}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "46985d0a9a424059b55bf3ebee3290e282f502e2", "author": {"user": {"login": "mstoeg", "name": "Martin St\u00f6glehner"}}, "url": "https://github.com/Catrobat/Catroid/commit/46985d0a9a424059b55bf3ebee3290e282f502e2", "committedDate": "2020-06-22T12:58:00Z", "message": "CATROID-218 Enable definition of a user brick"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "46985d0a9a424059b55bf3ebee3290e282f502e2", "author": {"user": {"login": "mstoeg", "name": "Martin St\u00f6glehner"}}, "url": "https://github.com/Catrobat/Catroid/commit/46985d0a9a424059b55bf3ebee3290e282f502e2", "committedDate": "2020-06-22T12:58:00Z", "message": "CATROID-218 Enable definition of a user brick"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM0OTIxMTEw", "url": "https://github.com/Catrobat/Catroid/pull/3617#pullrequestreview-434921110", "createdAt": "2020-06-22T13:27:27Z", "commit": {"oid": "46985d0a9a424059b55bf3ebee3290e282f502e2"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1953, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}