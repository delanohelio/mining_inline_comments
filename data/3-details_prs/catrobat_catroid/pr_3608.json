{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE4OTc4Mjgz", "number": 3608, "title": "CATROID-476 Line gets drawn between successive layers", "bodyText": "Fixes bug where stitches from different embroidery needles would be connected.\nYour checklist for this pull request\nPlease review the contributing guidelines and wiki pages of this repository.\n\n Include the name of the Jira ticket in the PR\u2019s title\n Include a summary of the changes plus the relevant context\n Choose the proper base branch (develop)\n Confirm that the changes follow the project\u2019s coding guidelines\n Verify that the changes generate no compiler or linter warnings\n Perform a self-review of the changes\n Verify to commit no other files than the intentionally changed ones\n Include reasonable and readable tests verifying the added or changed behavior\n Confirm that new and existing unit tests pass locally\n Check that the commits\u2019 message style matches the project\u2019s guideline\n Stick to the project\u2019s gitflow workflow\n Verify that your changes do not have any conflicts with the base branch\n After the PR, verify that all CI checks have passed\n Post a message in the catroid-stage or catroid-ide Slack channel and ask for a code reviewer", "createdAt": "2020-05-16T14:50:57Z", "url": "https://github.com/Catrobat/Catroid/pull/3608", "merged": true, "mergeCommit": {"oid": "846cfe4cb4cd9e2842874bc681d4cead437ed6aa"}, "closed": true, "closedAt": "2020-05-17T05:33:26Z", "author": {"login": "lweitzendorf"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABch5SpEABqjMzNDM3NTEyODg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABch964DAFqTQxMzExMTAyNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestCommit", "commit": {"oid": "6ca8d656b9d4b2e011f2a2accbf3209450abd5a8", "author": {"user": null}, "url": "https://github.com/Catrobat/Catroid/commit/6ca8d656b9d4b2e011f2a2accbf3209450abd5a8", "committedDate": "2020-05-16T21:50:05Z", "message": "CATROID-476 Line gets drawn between successive layers\n\nFixes bug where stitches from different embroidery needles would be connected."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "6ca8d656b9d4b2e011f2a2accbf3209450abd5a8", "author": {"user": null}, "url": "https://github.com/Catrobat/Catroid/commit/6ca8d656b9d4b2e011f2a2accbf3209450abd5a8", "committedDate": "2020-05-16T21:50:05Z", "message": "CATROID-476 Line gets drawn between successive layers\n\nFixes bug where stitches from different embroidery needles would be connected."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEzMTExMDI0", "url": "https://github.com/Catrobat/Catroid/pull/3608#pullrequestreview-413111024", "createdAt": "2020-05-16T21:51:32Z", "commit": null, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNlQyMTo1MTo0OFrOGWc1pw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNlQyMTo1MTo0OFrOGWc1pw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjE5NDM0Mw==", "bodyText": "Nice!", "url": "https://github.com/Catrobat/Catroid/pull/3608#discussion_r426194343", "createdAt": "2020-05-16T21:51:48Z", "author": {"login": "adnaribo"}, "path": "catroid/src/test/java/org/catrobat/catroid/stage/EmbroideryActorCircleTest.java", "diffHunk": "@@ -52,12 +52,20 @@\n \t@Parameters(name = \"{0}\")\n \tpublic static Iterable<Object[]> data() {\n \t\treturn asList(new Object[][] {\n-\t\t\t\t{\"Test JumpPoint after ChangePoint\", asList(getChangePointMock(), getJumpPointMock()), false, true},\n-\t\t\t\t{\"Test Connecting Points\", asList(getConnectingPointMock(), getConnectingPointMock()), true, true},\n-\t\t\t\t{\"Test Changing Points\", asList(getChangePointMock(), getChangePointMock()), false, true},\n-\t\t\t\t{\"Test ChangePoint after JumpPoint\", asList(getJumpPointMock(), getChangePointMock()), false, true},\n-\t\t\t\t{\"Test JumpPoint after ConnectingPoint\", asList(getConnectingPointMock(), getJumpPointMock()), true, true},\n-\t\t\t\t{\"Test Jumping Points\", asList(getJumpPointMock(), getJumpPointMock()), false, true},\n+\t\t\t\t{\"Test ConnectingPoints\", asList(getConnectingPointMock(),\n+\t\t\t\t\t\tgetConnectingPointMock(), getConnectingPointMock()), true, true},\n+\t\t\t\t{\"Test JumpPoints\", asList(getConnectingPointMock(),\n+\t\t\t\t\t\tgetJumpPointMock(), getJumpPointMock()), false, false},\n+\t\t\t\t{\"Test ChangePoints\", asList(getConnectingPointMock(),\n+\t\t\t\t\t\tgetColorChangePointMock(), getColorChangePointMock()), false, false},\n+\t\t\t\t{\"Test JumpPoint after ChangePoint\", asList(getConnectingPointMock(),\n+\t\t\t\t\t\tgetColorChangePointMock(), getJumpPointMock()), false, false},\n+\t\t\t\t{\"Test ConnectingPoint after JumpPoint\", asList(getConnectingPointMock(),\n+\t\t\t\t\t\tgetJumpPointMock(), getConnectingPointMock()), false, true},\n+\t\t\t\t{\"Test ChangePoint after JumpPoint\", asList(getConnectingPointMock(),\n+\t\t\t\t\t\tgetJumpPointMock(), getColorChangePointMock()), false, false},\n+\t\t\t\t{\"Test JumpPoint after ConnectingPoint\", asList(getConnectingPointMock(),\n+\t\t\t\t\t\tgetConnectingPointMock(), getJumpPointMock()), true, false}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6ca8d656b9d4b2e011f2a2accbf3209450abd5a8"}, "originalPosition": 23}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1941, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}