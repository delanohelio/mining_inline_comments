{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMxMTU1MzI0", "number": 3888, "title": "CATROID-833 Missing tests for Catblocks integration", "bodyText": "Add some basic tests for Catblocks in Catroid.\nhttps://jira.catrob.at/browse/CATROID-833\nYour checklist for this pull request\nPlease review the contributing guidelines and wiki pages of this repository.\n\n Include the name of the Jira ticket in the PR\u2019s title\n Include a summary of the changes plus the relevant context\n Choose the proper base branch (develop)\n Confirm that the changes follow the project\u2019s coding guidelines\n Verify that the changes generate no compiler or linter warnings\n Perform a self-review of the changes\n Verify to commit no other files than the intentionally changed ones\n Include reasonable and readable tests verifying the added or changed behavior\n Confirm that new and existing unit tests pass locally\n Check that the commits\u2019 message style matches the project\u2019s guideline\n Stick to the project\u2019s gitflow workflow\n Verify that your changes do not have any conflicts with the base branch\n After the PR, verify that all CI checks have passed\n Post a message in the catroid-stage or catroid-ide Slack channel and ask for a code reviewer", "createdAt": "2020-12-02T16:57:13Z", "url": "https://github.com/Catrobat/Catroid/pull/3888", "merged": true, "mergeCommit": {"oid": "1fcacc9c306b7290895c258a54ff50bd1692a13f"}, "closed": true, "closedAt": "2021-01-18T20:01:44Z", "author": {"login": "bprattes"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdshnDzAFqTU2MDY5NTg2Mg==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdxcUuNAFqTU3MDc1MTA3Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYwNjk1ODYy", "url": "https://github.com/Catrobat/Catroid/pull/3888#pullrequestreview-560695862", "createdAt": "2021-01-03T13:16:38Z", "commit": {"oid": "fbaebc741822f70b763c957afa6c50c08e02a85a"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wM1QxMzoxNjozOFrOINeq2A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wM1QxMzoxOToxNVrOINesCA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTAwNDg4OA==", "bodyText": "Typo \"Dispayed\"", "url": "https://github.com/Catrobat/Catroid/pull/3888#discussion_r551004888", "createdAt": "2021-01-03T13:16:38Z", "author": {"login": "juliajulie95"}, "path": "catroid/src/androidTest/java/org/catrobat/catroid/uiespresso/ui/fragment/CatblocksScriptFragmentTest.java", "diffHunk": "@@ -0,0 +1,204 @@\n+/*\n+ * Catroid: An on-device visual programming system for Android devices\n+ * Copyright (C) 2010-2020 The Catrobat Team\n+ * (<http://developer.catrobat.org/credits>)\n+ *\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU Affero General Public License as\n+ * published by the Free Software Foundation, either version 3 of the\n+ * License, or (at your option) any later version.\n+ *\n+ * An additional term exception under section 7 of the GNU Affero\n+ * General Public License, version 3, is available at\n+ * http://developer.catrobat.org/license_additional_term\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU Affero General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Affero General Public License\n+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+\n+package org.catrobat.catroid.uiespresso.ui.fragment;\n+\n+import org.catrobat.catroid.ProjectManager;\n+import org.catrobat.catroid.R;\n+import org.catrobat.catroid.content.Project;\n+import org.catrobat.catroid.content.Script;\n+import org.catrobat.catroid.content.Sprite;\n+import org.catrobat.catroid.content.StartScript;\n+import org.catrobat.catroid.content.bricks.ChangeXByNBrick;\n+import org.catrobat.catroid.content.bricks.IfLogicBeginBrick;\n+import org.catrobat.catroid.content.bricks.SetXBrick;\n+import org.catrobat.catroid.ui.SpriteActivity;\n+import org.catrobat.catroid.ui.settingsfragments.SettingsFragment;\n+import org.catrobat.catroid.uiespresso.util.rules.FragmentActivityTestRule;\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+\n+import androidx.test.core.app.ApplicationProvider;\n+import androidx.test.ext.junit.runners.AndroidJUnit4;\n+\n+import static junit.framework.TestCase.assertEquals;\n+\n+import static androidx.test.espresso.Espresso.onView;\n+import static androidx.test.espresso.Espresso.openContextualActionModeOverflowMenu;\n+import static androidx.test.espresso.action.ViewActions.click;\n+import static androidx.test.espresso.assertion.ViewAssertions.doesNotExist;\n+import static androidx.test.espresso.assertion.ViewAssertions.matches;\n+import static androidx.test.espresso.matcher.ViewMatchers.isDisplayed;\n+import static androidx.test.espresso.matcher.ViewMatchers.withText;\n+import static androidx.test.espresso.web.assertion.WebViewAssertions.webContent;\n+import static androidx.test.espresso.web.matcher.DomMatchers.hasElementWithXpath;\n+import static androidx.test.espresso.web.sugar.Web.onWebView;\n+\n+@RunWith(AndroidJUnit4.class)\n+public class CatblocksScriptFragmentTest {\n+\n+\t@Rule\n+\tpublic FragmentActivityTestRule<SpriteActivity> baseActivityTestRule = new\n+\t\t\tFragmentActivityTestRule<>(SpriteActivity.class, SpriteActivity.EXTRA_FRAGMENT_POSITION,\n+\t\t\tSpriteActivity.FRAGMENT_SCRIPTS);\n+\n+\t@Before\n+\tpublic void setUp() throws Exception {\n+\t\tSettingsFragment.setUseCatBlocks(ApplicationProvider.getApplicationContext(), false);\n+\t\tcreateProject();\n+\t\tbaseActivityTestRule.launchActivity();\n+\t}\n+\n+\t@After\n+\tpublic void tearDown() {\n+\t\tbaseActivityTestRule.getActivity().finish();\n+\t}\n+\n+\t@Test\n+\tpublic void testContextMenuItems() {\n+\n+\t\topenContextualActionModeOverflowMenu();\n+\n+\t\t// default is 1D view -> reorder not visible\n+\t\tonView(withText(R.string.catblocks_reorder)).check(doesNotExist());\n+\n+\t\tonView(withText(R.string.catblocks)).perform(click());\n+\n+\t\t// in Catblocks reorder should be visible\n+\t\topenContextualActionModeOverflowMenu();\n+\n+\t\tonView(withText(R.string.catblocks_reorder)).check(matches(isDisplayed()));\n+\n+\t\tonView(withText(R.string.undo)).check(doesNotExist());\n+\t\tonView(withText(R.string.backpack)).check(doesNotExist());\n+\t\tonView(withText(R.string.copy)).check(doesNotExist());\n+\t\tonView(withText(R.string.delete)).check(doesNotExist());\n+\t\tonView(withText(R.string.rename)).check(doesNotExist());\n+\t\tonView(withText(R.string.show_details)).check(doesNotExist());\n+\t\tonView(withText(R.string.comment_in_out)).check(doesNotExist());\n+\n+\t\tonView(withText(R.string.catblocks)).perform(click());\n+\n+\t\t// change back to 1D and check for existing menu items\n+\t\topenContextualActionModeOverflowMenu();\n+\n+\t\tonView(withText(R.string.catblocks_reorder)).check(doesNotExist());\n+\n+\t\tonView(withText(R.string.backpack)).check(matches(isDisplayed()));\n+\t\tonView(withText(R.string.copy)).check(matches(isDisplayed()));\n+\t\tonView(withText(R.string.comment_in_out)).check(matches(isDisplayed()));\n+\t\tonView(withText(R.string.catblocks)).check(matches(isDisplayed()));\n+\t}\n+\n+\t@Test\n+\tpublic void testCorrect2DObjectDispayed() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fbaebc741822f70b763c957afa6c50c08e02a85a"}, "originalPosition": 117}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTAwNTE5Mg==", "bodyText": "While loop is duplicate of test above. Do we need to check this again? Maybe delete in this test, else delete test above.", "url": "https://github.com/Catrobat/Catroid/pull/3888#discussion_r551005192", "createdAt": "2021-01-03T13:19:15Z", "author": {"login": "juliajulie95"}, "path": "catroid/src/androidTest/java/org/catrobat/catroid/uiespresso/ui/fragment/CatblocksScriptFragmentTest.java", "diffHunk": "@@ -0,0 +1,204 @@\n+/*\n+ * Catroid: An on-device visual programming system for Android devices\n+ * Copyright (C) 2010-2020 The Catrobat Team\n+ * (<http://developer.catrobat.org/credits>)\n+ *\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU Affero General Public License as\n+ * published by the Free Software Foundation, either version 3 of the\n+ * License, or (at your option) any later version.\n+ *\n+ * An additional term exception under section 7 of the GNU Affero\n+ * General Public License, version 3, is available at\n+ * http://developer.catrobat.org/license_additional_term\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU Affero General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Affero General Public License\n+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+\n+package org.catrobat.catroid.uiespresso.ui.fragment;\n+\n+import org.catrobat.catroid.ProjectManager;\n+import org.catrobat.catroid.R;\n+import org.catrobat.catroid.content.Project;\n+import org.catrobat.catroid.content.Script;\n+import org.catrobat.catroid.content.Sprite;\n+import org.catrobat.catroid.content.StartScript;\n+import org.catrobat.catroid.content.bricks.ChangeXByNBrick;\n+import org.catrobat.catroid.content.bricks.IfLogicBeginBrick;\n+import org.catrobat.catroid.content.bricks.SetXBrick;\n+import org.catrobat.catroid.ui.SpriteActivity;\n+import org.catrobat.catroid.ui.settingsfragments.SettingsFragment;\n+import org.catrobat.catroid.uiespresso.util.rules.FragmentActivityTestRule;\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+\n+import androidx.test.core.app.ApplicationProvider;\n+import androidx.test.ext.junit.runners.AndroidJUnit4;\n+\n+import static junit.framework.TestCase.assertEquals;\n+\n+import static androidx.test.espresso.Espresso.onView;\n+import static androidx.test.espresso.Espresso.openContextualActionModeOverflowMenu;\n+import static androidx.test.espresso.action.ViewActions.click;\n+import static androidx.test.espresso.assertion.ViewAssertions.doesNotExist;\n+import static androidx.test.espresso.assertion.ViewAssertions.matches;\n+import static androidx.test.espresso.matcher.ViewMatchers.isDisplayed;\n+import static androidx.test.espresso.matcher.ViewMatchers.withText;\n+import static androidx.test.espresso.web.assertion.WebViewAssertions.webContent;\n+import static androidx.test.espresso.web.matcher.DomMatchers.hasElementWithXpath;\n+import static androidx.test.espresso.web.sugar.Web.onWebView;\n+\n+@RunWith(AndroidJUnit4.class)\n+public class CatblocksScriptFragmentTest {\n+\n+\t@Rule\n+\tpublic FragmentActivityTestRule<SpriteActivity> baseActivityTestRule = new\n+\t\t\tFragmentActivityTestRule<>(SpriteActivity.class, SpriteActivity.EXTRA_FRAGMENT_POSITION,\n+\t\t\tSpriteActivity.FRAGMENT_SCRIPTS);\n+\n+\t@Before\n+\tpublic void setUp() throws Exception {\n+\t\tSettingsFragment.setUseCatBlocks(ApplicationProvider.getApplicationContext(), false);\n+\t\tcreateProject();\n+\t\tbaseActivityTestRule.launchActivity();\n+\t}\n+\n+\t@After\n+\tpublic void tearDown() {\n+\t\tbaseActivityTestRule.getActivity().finish();\n+\t}\n+\n+\t@Test\n+\tpublic void testContextMenuItems() {\n+\n+\t\topenContextualActionModeOverflowMenu();\n+\n+\t\t// default is 1D view -> reorder not visible\n+\t\tonView(withText(R.string.catblocks_reorder)).check(doesNotExist());\n+\n+\t\tonView(withText(R.string.catblocks)).perform(click());\n+\n+\t\t// in Catblocks reorder should be visible\n+\t\topenContextualActionModeOverflowMenu();\n+\n+\t\tonView(withText(R.string.catblocks_reorder)).check(matches(isDisplayed()));\n+\n+\t\tonView(withText(R.string.undo)).check(doesNotExist());\n+\t\tonView(withText(R.string.backpack)).check(doesNotExist());\n+\t\tonView(withText(R.string.copy)).check(doesNotExist());\n+\t\tonView(withText(R.string.delete)).check(doesNotExist());\n+\t\tonView(withText(R.string.rename)).check(doesNotExist());\n+\t\tonView(withText(R.string.show_details)).check(doesNotExist());\n+\t\tonView(withText(R.string.comment_in_out)).check(doesNotExist());\n+\n+\t\tonView(withText(R.string.catblocks)).perform(click());\n+\n+\t\t// change back to 1D and check for existing menu items\n+\t\topenContextualActionModeOverflowMenu();\n+\n+\t\tonView(withText(R.string.catblocks_reorder)).check(doesNotExist());\n+\n+\t\tonView(withText(R.string.backpack)).check(matches(isDisplayed()));\n+\t\tonView(withText(R.string.copy)).check(matches(isDisplayed()));\n+\t\tonView(withText(R.string.comment_in_out)).check(matches(isDisplayed()));\n+\t\tonView(withText(R.string.catblocks)).check(matches(isDisplayed()));\n+\t}\n+\n+\t@Test\n+\tpublic void testCorrect2DObjectDispayed() {\n+\t\topenContextualActionModeOverflowMenu();\n+\t\tonView(withText(R.string.catblocks)).perform(click());\n+\n+\t\tint loadCounter = 0;\n+\t\t// since rendering may take some time: try multiple times\n+\t\twhile (true) {\n+\t\t\tloadCounter++;\n+\t\t\ttry {\n+\t\t\t\tonWebView().check(webContent(hasElementWithXpath(\"//*[@data-object=\\\"testSprite\\\" \"\n+\t\t\t\t\t\t+ \"and contains(@class,'catblocks-script-container') \"\n+\t\t\t\t\t\t+ \"and contains(@class,'collapse') \"\n+\t\t\t\t\t\t+ \"and contains(@class,'show')\"\n+\t\t\t\t\t\t+ \"]\")));\n+\t\t\t\tbreak;\n+\t\t\t} catch (Throwable e) {\n+\t\t\t\t// max. 2.5 seconds - then timeout\n+\t\t\t\tif (loadCounter >= 25) {\n+\t\t\t\t\tthrow e;\n+\t\t\t\t}\n+\t\t\t\ttry {\n+\t\t\t\t\tThread.sleep(100);\n+\t\t\t\t} catch (InterruptedException ex) {\n+\t\t\t\t\t// ignore\n+\t\t\t\t}\n+\t\t\t}\n+\t\t}\n+\t}\n+\n+\t@Test\n+\tpublic void testReorderScript() {\n+\t\topenContextualActionModeOverflowMenu();\n+\t\tonView(withText(R.string.catblocks)).perform(click());\n+\n+\t\tint loadCounter = 0;\n+\t\t// since rendering may take some time: try multiple times if finished\n+\t\twhile (true) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fbaebc741822f70b763c957afa6c50c08e02a85a"}, "originalPosition": 153}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "fbaebc741822f70b763c957afa6c50c08e02a85a", "author": {"user": {"login": "bprattes", "name": "Bernhard Prattes"}}, "url": "https://github.com/Catrobat/Catroid/commit/fbaebc741822f70b763c957afa6c50c08e02a85a", "committedDate": "2020-12-02T16:54:50Z", "message": "CATROID-833 add Catblocks tests"}, "afterCommit": {"oid": "987a312c4f7c7410b47f1ca46f4f96f3ec19077e", "author": {"user": {"login": "bprattes", "name": "Bernhard Prattes"}}, "url": "https://github.com/Catrobat/Catroid/commit/987a312c4f7c7410b47f1ca46f4f96f3ec19077e", "committedDate": "2021-01-03T19:53:49Z", "message": "CATROID-833 add Catblocks tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYwOTAxNzYx", "url": "https://github.com/Catrobat/Catroid/pull/3888#pullrequestreview-560901761", "createdAt": "2021-01-04T09:56:11Z", "commit": {"oid": "987a312c4f7c7410b47f1ca46f4f96f3ec19077e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTY0NDI0NDMy", "url": "https://github.com/Catrobat/Catroid/pull/3888#pullrequestreview-564424432", "createdAt": "2021-01-08T16:56:19Z", "commit": {"oid": "987a312c4f7c7410b47f1ca46f4f96f3ec19077e"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wOFQxNjo1NjoxOVrOIQZtxg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wOFQxNjo1NjoxOVrOIQZtxg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NDA2OTQ0Ng==", "bodyText": "This results in a lint warning =>\n\nhttps://jenkins.catrob.at/job/Catroid/job/PR-3888/14/analysis/\nhttps://jenkins.catrob.at/job/Catroid/job/PR-3888/14/analysis/source.01d88343-443b-496d-90eb-a6ac09189969/#140", "url": "https://github.com/Catrobat/Catroid/pull/3888#discussion_r554069446", "createdAt": "2021-01-08T16:56:19Z", "author": {"login": "wslany"}, "path": "catroid/src/androidTest/java/org/catrobat/catroid/uiespresso/ui/fragment/CatblocksScriptFragmentTest.java", "diffHunk": "@@ -0,0 +1,175 @@\n+/*\n+ * Catroid: An on-device visual programming system for Android devices\n+ * Copyright (C) 2010-2020 The Catrobat Team\n+ * (<http://developer.catrobat.org/credits>)\n+ *\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU Affero General Public License as\n+ * published by the Free Software Foundation, either version 3 of the\n+ * License, or (at your option) any later version.\n+ *\n+ * An additional term exception under section 7 of the GNU Affero\n+ * General Public License, version 3, is available at\n+ * http://developer.catrobat.org/license_additional_term\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU Affero General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Affero General Public License\n+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+\n+package org.catrobat.catroid.uiespresso.ui.fragment;\n+\n+import org.catrobat.catroid.ProjectManager;\n+import org.catrobat.catroid.R;\n+import org.catrobat.catroid.content.Project;\n+import org.catrobat.catroid.content.Script;\n+import org.catrobat.catroid.content.Sprite;\n+import org.catrobat.catroid.content.StartScript;\n+import org.catrobat.catroid.content.bricks.ChangeXByNBrick;\n+import org.catrobat.catroid.content.bricks.IfLogicBeginBrick;\n+import org.catrobat.catroid.content.bricks.SetXBrick;\n+import org.catrobat.catroid.ui.SpriteActivity;\n+import org.catrobat.catroid.ui.settingsfragments.SettingsFragment;\n+import org.catrobat.catroid.uiespresso.util.rules.FragmentActivityTestRule;\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+\n+import androidx.test.core.app.ApplicationProvider;\n+import androidx.test.ext.junit.runners.AndroidJUnit4;\n+\n+import static junit.framework.TestCase.assertEquals;\n+\n+import static androidx.test.espresso.Espresso.onView;\n+import static androidx.test.espresso.Espresso.openContextualActionModeOverflowMenu;\n+import static androidx.test.espresso.action.ViewActions.click;\n+import static androidx.test.espresso.assertion.ViewAssertions.doesNotExist;\n+import static androidx.test.espresso.assertion.ViewAssertions.matches;\n+import static androidx.test.espresso.matcher.ViewMatchers.isDisplayed;\n+import static androidx.test.espresso.matcher.ViewMatchers.withText;\n+import static androidx.test.espresso.web.assertion.WebViewAssertions.webContent;\n+import static androidx.test.espresso.web.matcher.DomMatchers.hasElementWithXpath;\n+import static androidx.test.espresso.web.sugar.Web.onWebView;\n+\n+@RunWith(AndroidJUnit4.class)\n+public class CatblocksScriptFragmentTest {\n+\n+\t@Rule\n+\tpublic FragmentActivityTestRule<SpriteActivity> baseActivityTestRule = new\n+\t\t\tFragmentActivityTestRule<>(SpriteActivity.class, SpriteActivity.EXTRA_FRAGMENT_POSITION,\n+\t\t\tSpriteActivity.FRAGMENT_SCRIPTS);\n+\n+\t@Before\n+\tpublic void setUp() throws Exception {\n+\t\tSettingsFragment.setUseCatBlocks(ApplicationProvider.getApplicationContext(), false);\n+\t\tcreateProject();\n+\t\tbaseActivityTestRule.launchActivity();\n+\t}\n+\n+\t@After\n+\tpublic void tearDown() {\n+\t\tbaseActivityTestRule.getActivity().finish();\n+\t}\n+\n+\t@Test\n+\tpublic void testContextMenuItems() {\n+\n+\t\topenContextualActionModeOverflowMenu();\n+\n+\t\t// default is 1D view -> reorder not visible\n+\t\tonView(withText(R.string.catblocks_reorder)).check(doesNotExist());\n+\n+\t\tonView(withText(R.string.catblocks)).perform(click());\n+\n+\t\t// in Catblocks reorder should be visible\n+\t\topenContextualActionModeOverflowMenu();\n+\n+\t\tonView(withText(R.string.catblocks_reorder)).check(matches(isDisplayed()));\n+\n+\t\tonView(withText(R.string.undo)).check(doesNotExist());\n+\t\tonView(withText(R.string.backpack)).check(doesNotExist());\n+\t\tonView(withText(R.string.copy)).check(doesNotExist());\n+\t\tonView(withText(R.string.delete)).check(doesNotExist());\n+\t\tonView(withText(R.string.rename)).check(doesNotExist());\n+\t\tonView(withText(R.string.show_details)).check(doesNotExist());\n+\t\tonView(withText(R.string.comment_in_out)).check(doesNotExist());\n+\n+\t\tonView(withText(R.string.catblocks)).perform(click());\n+\n+\t\t// change back to 1D and check for existing menu items\n+\t\topenContextualActionModeOverflowMenu();\n+\n+\t\tonView(withText(R.string.catblocks_reorder)).check(doesNotExist());\n+\n+\t\tonView(withText(R.string.backpack)).check(matches(isDisplayed()));\n+\t\tonView(withText(R.string.copy)).check(matches(isDisplayed()));\n+\t\tonView(withText(R.string.comment_in_out)).check(matches(isDisplayed()));\n+\t\tonView(withText(R.string.catblocks)).check(matches(isDisplayed()));\n+\t}\n+\n+\t@Test\n+\tpublic void testReorderScript() {\n+\t\topenContextualActionModeOverflowMenu();\n+\t\tonView(withText(R.string.catblocks)).perform(click());\n+\n+\t\tint loadCounter = 0;\n+\t\t// since rendering may take some time: try multiple times if finished\n+\t\t// checks if the correct 2D object is displayed\n+\t\twhile (true) {\n+\t\t\tloadCounter++;\n+\t\t\ttry {\n+\t\t\t\tonWebView().check(webContent(hasElementWithXpath(\"//*[@data-object=\\\"testSprite\\\" \"\n+\t\t\t\t\t\t+ \"and contains(@class,'catblocks-script-container') \"\n+\t\t\t\t\t\t+ \"and contains(@class,'collapse') \"\n+\t\t\t\t\t\t+ \"and contains(@class,'show')\"\n+\t\t\t\t\t\t+ \"]\")));\n+\t\t\t\tbreak;\n+\t\t\t} catch (Throwable e) {\n+\t\t\t\t// max. 2.5 seconds - then timeout\n+\t\t\t\tif (loadCounter >= 25) {\n+\t\t\t\t\tthrow e;\n+\t\t\t\t}\n+\t\t\t\ttry {\n+\t\t\t\t\tThread.sleep(100);\n+\t\t\t\t} catch (InterruptedException ex) {\n+\t\t\t\t\t// ignore\n+\t\t\t\t}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "987a312c4f7c7410b47f1ca46f4f96f3ec19077e"}, "originalPosition": 142}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "987a312c4f7c7410b47f1ca46f4f96f3ec19077e", "author": {"user": {"login": "bprattes", "name": "Bernhard Prattes"}}, "url": "https://github.com/Catrobat/Catroid/commit/987a312c4f7c7410b47f1ca46f4f96f3ec19077e", "committedDate": "2021-01-03T19:53:49Z", "message": "CATROID-833 add Catblocks tests"}, "afterCommit": {"oid": "f0cf7c6ed5850615dc674c592ededfc498623b99", "author": {"user": {"login": "bprattes", "name": "Bernhard Prattes"}}, "url": "https://github.com/Catrobat/Catroid/commit/f0cf7c6ed5850615dc674c592ededfc498623b99", "committedDate": "2021-01-09T14:50:53Z", "message": "CATROID-833 add Catblocks tests"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f0cf7c6ed5850615dc674c592ededfc498623b99", "author": {"user": {"login": "bprattes", "name": "Bernhard Prattes"}}, "url": "https://github.com/Catrobat/Catroid/commit/f0cf7c6ed5850615dc674c592ededfc498623b99", "committedDate": "2021-01-09T14:50:53Z", "message": "CATROID-833 add Catblocks tests"}, "afterCommit": {"oid": "833919d9fef435cb2ac29ce43b792dfd1a38ee7c", "author": {"user": {"login": "bprattes", "name": "Bernhard Prattes"}}, "url": "https://github.com/Catrobat/Catroid/commit/833919d9fef435cb2ac29ce43b792dfd1a38ee7c", "committedDate": "2021-01-09T15:02:32Z", "message": "CATROID-833 add Catblocks tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0c8779d24562da5cc7790112c183ece344d9b617", "author": {"user": {"login": "bprattes", "name": "Bernhard Prattes"}}, "url": "https://github.com/Catrobat/Catroid/commit/0c8779d24562da5cc7790112c183ece344d9b617", "committedDate": "2021-01-09T15:03:06Z", "message": "CATROID-833 add Catblocks tests"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "833919d9fef435cb2ac29ce43b792dfd1a38ee7c", "author": {"user": {"login": "bprattes", "name": "Bernhard Prattes"}}, "url": "https://github.com/Catrobat/Catroid/commit/833919d9fef435cb2ac29ce43b792dfd1a38ee7c", "committedDate": "2021-01-09T15:02:32Z", "message": "CATROID-833 add Catblocks tests"}, "afterCommit": {"oid": "0c8779d24562da5cc7790112c183ece344d9b617", "author": {"user": {"login": "bprattes", "name": "Bernhard Prattes"}}, "url": "https://github.com/Catrobat/Catroid/commit/0c8779d24562da5cc7790112c183ece344d9b617", "committedDate": "2021-01-09T15:03:06Z", "message": "CATROID-833 add Catblocks tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTY1NDgxNjE4", "url": "https://github.com/Catrobat/Catroid/pull/3888#pullrequestreview-565481618", "createdAt": "2021-01-11T15:45:08Z", "commit": {"oid": "0c8779d24562da5cc7790112c183ece344d9b617"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTcwNzUxMDc3", "url": "https://github.com/Catrobat/Catroid/pull/3888#pullrequestreview-570751077", "createdAt": "2021-01-18T19:59:30Z", "commit": {"oid": "0c8779d24562da5cc7790112c183ece344d9b617"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2075, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}