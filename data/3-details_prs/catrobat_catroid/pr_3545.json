{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkzMDY5NzUz", "number": 3545, "title": "Catroid 510 - Correction of ZigZag Stitch", "bodyText": "The implemented ZigZag Stitch was not really a ZigZag Stitch. It was a Z Stitch. This ticket fixed it. https://jira.catrob.at/browse/CATROID-510\nYour checklist for this pull request\nPlease review the contributing guidelines and wiki pages of this repository.\n\n[ x] Include the name of the Jira ticket in the PR\u2019s title\n[ x] Include a summary of the changes plus the relevant context\n[ x] Choose the proper base branch (develop)\n[ x] Confirm that the changes follow the project\u2019s coding guidelines\n[ x] Verify that the changes generate no compiler or linter warnings\n[ x] Perform a self-review of the changes\n[ x] Verify to commit no other files than the intentionally changed ones\n[ x] Include reasonable and readable tests verifying the added or changed behavior\n[ x] Confirm that new and existing unit tests pass locally\n[ x] Check that the commits\u2019 message style matches the project\u2019s guideline\n[ x] Stick to the project\u2019s gitflow workflow\n[ x] Verify that your changes do not have any conflicts with the base branch\n[ x] After the PR, verify that all CI checks have passed\n[ x] Post a message in the catroid-stage or catroid-ide Slack channel and ask for a code reviewer", "createdAt": "2020-03-24T15:40:06Z", "url": "https://github.com/Catrobat/Catroid/pull/3545", "merged": true, "mergeCommit": {"oid": "7192a1014c495b1eb62c0634332c91db7441ba9b"}, "closed": true, "closedAt": "2020-03-26T13:17:22Z", "author": {"login": "adnaribo"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcQ1U4lgFqTM4MDQ1NTM0Nw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcRFfcgABqjMxNjM0OTE2ODQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgwNDU1MzQ3", "url": "https://github.com/Catrobat/Catroid/pull/3545#pullrequestreview-380455347", "createdAt": "2020-03-24T15:58:59Z", "commit": null, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQxNTo1ODo1OVrOF63RTw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQxNjoxMDo0OVrOF631qg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzI2NzI3OQ==", "bodyText": "Nice!", "url": "https://github.com/Catrobat/Catroid/pull/3545#discussion_r397267279", "createdAt": "2020-03-24T15:58:59Z", "author": {"login": "gPathpp"}, "path": "catroid/src/main/java/org/catrobat/catroid/embroidery/RunningStitchType.java", "diffHunk": "@@ -23,7 +23,17 @@\n \n package org.catrobat.catroid.embroidery;\n \n-public interface RunningStitchType {\n-\tvoid setStartCoordinates(float x, float y);\n-\tvoid update(float currentX, float currentY);\n+public abstract class RunningStitchType {\n+\tabstract public void setStartCoordinates(float x, float y);\n+\tabstract public void update(float currentX, float currentY);\n+\n+\tfloat interpolate(float endValue, float startValue, float percentage) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzI3NjM0NA==", "bodyText": "Please find a better solution. Thanks!", "url": "https://github.com/Catrobat/Catroid/pull/3545#discussion_r397276344", "createdAt": "2020-03-24T16:10:30Z", "author": {"login": "gPathpp"}, "path": "catroid/src/main/java/org/catrobat/catroid/embroidery/ZigZagRunningStitch.java", "diffHunk": "@@ -72,38 +81,28 @@ private void interpolateStitches(int interpolationCount, float currentX, float c\n \t\tif (first) {\n \t\t\tfirst = false;\n \t\t\taddPointInDirection(firstX, firstY, degrees);\n-\t\t\taddPointInDirection(firstX, firstY, degrees);\n \t\t}\n \n \t\tfor (int count = 1; count < interpolationCount; count++) {\n \t\t\tfloat splitFactor = (float) count / interpolationCount;\n \t\t\tfloat x = interpolate(currentX, firstX, splitFactor);\n \t\t\tfloat y = interpolate(currentY, firstY, splitFactor);\n \t\t\taddPointInDirection(x, y, degrees);\n-\t\t\taddPointInDirection(x, y, degrees);\n \t\t}\n-\n-\t\taddPointInDirection(currentX, currentY, degrees);\n \t\taddPointInDirection(currentX, currentY, degrees);\n \t}\n \n \tprivate void addPointInDirection(float x, float y, float degrees) {\n-\t\tfloat xCoord = (float) (x + (width / 2) * Math.sin(Math.toRadians(degrees + 90)) * direction);\n-\t\tfloat yCoord = (float) (y + (width / 2) * Math.cos(Math.toRadians(degrees + 90)) * direction);\n+\t\tfloat xCoord = (float) (x - (width / 2) * Math.sin(Math.toRadians(degrees + 90)) * direction);\n+\t\tfloat yCoord = (float) (y - (width / 2) * Math.cos(Math.toRadians(degrees + 90)) * direction);\n \t\tdirection *= (-1);\n-\t\tStageActivity.stageListener.embroideryPatternManager.addStitchCommand(new DSTStitchCommand(xCoord, yCoord,\n-\t\t\t\tsprite.look.getZIndex(), sprite));\n-\t}\n-\n-\tprivate float interpolate(float endValue, float startValue, float percentage) {\n-\t\tfloat value = Math.round(startValue + percentage * (endValue - startValue));\n-\t\treturn value;\n+\t\tStageActivity.stageListener.embroideryPatternManager.addStitchCommand(new DSTStitchCommand(xCoord,\n+\t\t\t\tyCoord, sprite.look.getZIndex(), sprite));\n+\t\taddStitchesToList(xCoord, yCoord);\n \t}\n \n-\tprivate float getDistanceToPoint(float currentX, float currentY) {\n-\t\tdouble xDistance = Math.pow(currentX - firstX, 2);\n-\t\tdouble yDistance = Math.pow(currentY - firstY, 2);\n-\t\tdouble difference = Math.sqrt(xDistance + yDistance);\n-\t\treturn (float) difference;\n+\tprivate void addStitchesToList(float x, float y) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 77}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzI3NjU4Ng==", "bodyText": "Please add more tests, thanks!", "url": "https://github.com/Catrobat/Catroid/pull/3545#discussion_r397276586", "createdAt": "2020-03-24T16:10:49Z", "author": {"login": "gPathpp"}, "path": "catroid/src/androidTest/java/org/catrobat/catroid/test/embroidery/ZigZagParametrizedTest.java", "diffHunk": "@@ -0,0 +1,104 @@\n+/*\n+ * Catroid: An on-device visual programming system for Android devices\n+ * Copyright (C) 2010-2020 The Catrobat Team\n+ * (<http://developer.catrobat.org/credits>)\n+ *\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU Affero General Public License as\n+ * published by the Free Software Foundation, either version 3 of the\n+ * License, or (at your option) any later version.\n+ *\n+ * An additional term exception under section 7 of the GNU Affero\n+ * General Public License, version 3, is available at\n+ * http://developer.catrobat.org/license_additional_term\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU Affero General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Affero General Public License\n+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+\n+package org.catrobat.catroid.test.embroidery;\n+\n+import org.catrobat.catroid.content.Look;\n+import org.catrobat.catroid.content.Sprite;\n+import org.catrobat.catroid.embroidery.EmbroideryPatternManager;\n+import org.catrobat.catroid.embroidery.ZigZagRunningStitch;\n+import org.catrobat.catroid.stage.StageActivity;\n+import org.catrobat.catroid.stage.StageListener;\n+import org.junit.After;\n+import org.junit.Assert;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.junit.runners.Parameterized;\n+import org.mockito.Mockito;\n+\n+import java.util.List;\n+\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.when;\n+\n+import static java.util.Arrays.asList;\n+\n+@RunWith(Parameterized.class)\n+public class ZigZagParametrizedTest {\n+\t@Parameterized.Parameters(name = \"{0}\")\n+\tpublic static Iterable<Object[]> data() {\n+\t\treturn asList(new Object[][] {\n+\t\t\t\t{\"Test ZigZagPoints\", 10.F, 5.F, asList(10.0F, 20.F, 30.F), asList(2.5F,-2.5F, 2.5F)}", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 52}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgxMDAwMjU5", "url": "https://github.com/Catrobat/Catroid/pull/3545#pullrequestreview-381000259", "createdAt": "2020-03-25T09:58:28Z", "commit": null, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestCommit", "commit": {"oid": "a400c4921ff1fc97ea0853c8d7f6a84534e08a58", "author": {"user": null}, "url": "https://github.com/Catrobat/Catroid/commit/a400c4921ff1fc97ea0853c8d7f6a84534e08a58", "committedDate": "2020-03-25T11:05:49Z", "message": "CATROID-510 Correction of ZigZag Stitch"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "a400c4921ff1fc97ea0853c8d7f6a84534e08a58", "author": {"user": null}, "url": "https://github.com/Catrobat/Catroid/commit/a400c4921ff1fc97ea0853c8d7f6a84534e08a58", "committedDate": "2020-03-25T11:05:49Z", "message": "CATROID-510 Correction of ZigZag Stitch"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1897, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}