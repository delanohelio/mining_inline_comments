{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc0MjQ0MDk4", "number": 3475, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxNjowMToyNVrODfmjWA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxNjowMToyNVrODfmjWA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0NDY0MDg4OnYy", "diffSide": "RIGHT", "path": "catroid/src/androidTest/java/org/catrobat/catroid/test/embroidery/ZigZagRunningStitchTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxNjowMToyNVrOFpZltw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxNjowMToyNVrOFpZltw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODk1NTE5MQ==", "bodyText": "Since further usages call this \"width\" Please also rename this.", "url": "https://github.com/Catrobat/Catroid/pull/3475#discussion_r378955191", "createdAt": "2020-02-13T16:01:25Z", "author": {"login": "DinosaurierRex"}, "path": "catroid/src/androidTest/java/org/catrobat/catroid/test/embroidery/ZigZagRunningStitchTest.java", "diffHunk": "@@ -0,0 +1,91 @@\n+/*\n+ * Catroid: An on-device visual programming system for Android devices\n+ * Copyright (C) 2010-2019 The Catrobat Team\n+ * (<http://developer.catrobat.org/credits>)\n+ *\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU Affero General Public License as\n+ * published by the Free Software Foundation, either version 3 of the\n+ * License, or (at your option) any later version.\n+ *\n+ * An additional term exception under section 7 of the GNU Affero\n+ * General Public License, version 3, is available at\n+ * http://developer.catrobat.org/license_additional_term\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU Affero General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Affero General Public License\n+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+\n+package org.catrobat.catroid.test.embroidery;\n+\n+import org.catrobat.catroid.content.Look;\n+import org.catrobat.catroid.content.Sprite;\n+import org.catrobat.catroid.embroidery.EmbroideryPatternManager;\n+import org.catrobat.catroid.embroidery.ZigZagRunningStitch;\n+import org.catrobat.catroid.stage.StageActivity;\n+import org.catrobat.catroid.stage.StageListener;\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.mockito.Mockito;\n+\n+import androidx.test.ext.junit.runners.AndroidJUnit4;\n+\n+import static org.mockito.ArgumentMatchers.any;\n+import static org.mockito.Mockito.times;\n+import static org.mockito.Mockito.verify;\n+\n+@RunWith(AndroidJUnit4.class)\n+public class ZigZagRunningStitchTest {\n+\n+\tprivate Sprite sprite;\n+\tprivate Look spriteLook;\n+\tprivate ZigZagRunningStitch zigZagRunningStitch;\n+\tprivate EmbroideryPatternManager embroideryPatternManager;\n+\n+\t@Before\n+\tpublic void setUp() {\n+\t\tsprite = Mockito.mock(Sprite.class);\n+\t\tspriteLook = Mockito.mock(Look.class);\n+\t\tsprite.look = spriteLook;\n+\t\tembroideryPatternManager = Mockito.mock(EmbroideryPatternManager.class);\n+\t\tStageActivity.stageListener = Mockito.mock(StageListener.class);\n+\t\tStageActivity.stageListener.embroideryPatternManager = embroideryPatternManager;\n+\t\tfinal int density = 5;", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 60}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3984, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}