{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDYyMjcwMTI3", "number": 3730, "reviewThreads": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QyMzozNDoyNlrOEWY6tw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxMjo1OTo0NlrOEYCpTA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxOTEyMzc1OnYy", "diffSide": "RIGHT", "path": "catroid/src/main/res/layout/brick_set_instrument.xml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QyMzozNDoyNlrOG9raWw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QyMzozNDoyNlrOG9raWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzMyNzU3OQ==", "bodyText": "please change to style=\"@style/BrickContainer.Sound.Medium", "url": "https://github.com/Catrobat/Catroid/pull/3730#discussion_r467327579", "createdAt": "2020-08-07T23:34:26Z", "author": {"login": "ndrnour"}, "path": "catroid/src/main/res/layout/brick_set_instrument.xml", "diffHunk": "@@ -0,0 +1,58 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<!--\n+  ~ Catroid: An on-device visual programming system for Android devices\n+  ~ Copyright (C) 2010-2018 The Catrobat Team\n+  ~ (<http://developer.catrobat.org/credits>)\n+  ~\n+  ~ This program is free software: you can redistribute it and/or modify\n+  ~ it under the terms of the GNU Affero General Public License as\n+  ~ published by the Free Software Foundation, either version 3 of the\n+  ~ License, or (at your option) any later version.\n+  ~\n+  ~ An additional term exception under section 7 of the GNU Affero\n+  ~ General Public License, version 3, is available at\n+  ~ http://developer.catrobat.org/license_additional_term\n+  ~\n+  ~ This program is distributed in the hope that it will be useful,\n+  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of\n+  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+  ~ GNU Affero General Public License for more details.\n+  ~\n+  ~ You should have received a copy of the GNU Affero General Public License\n+  ~ along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+  -->\n+\n+<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n+    android:layout_width=\"match_parent\"\n+    android:layout_height=\"wrap_content\"\n+    android:gravity=\"center_vertical\"\n+    android:orientation=\"horizontal\">\n+\n+    <CheckBox\n+        android:id=\"@+id/brick_checkbox\"\n+        android:layout_width=\"wrap_content\"\n+        android:layout_height=\"wrap_content\"\n+        android:gravity=\"center_vertical\"\n+        android:visibility=\"gone\" />\n+\n+    <org.catrobat.catroid.ui.BrickLayout\n+        android:id=\"@+id/brick_set_instrument_layout\"\n+        style=\"@style/BrickContainer.Sound.Small\">", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2f37be1f9fbb6045e5e7091b21a940002d23a60a"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxOTEyNTMxOnYy", "diffSide": "RIGHT", "path": "catroid/src/main/res/layout/brick_set_instrument.xml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QyMzozNToyMlrOG9rbMQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QyMzozNToyMlrOG9rbMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzMyNzc5Mw==", "bodyText": "please remove this line android:id=\"@+id/brick_set_instrument_to_label\"", "url": "https://github.com/Catrobat/Catroid/pull/3730#discussion_r467327793", "createdAt": "2020-08-07T23:35:22Z", "author": {"login": "ndrnour"}, "path": "catroid/src/main/res/layout/brick_set_instrument.xml", "diffHunk": "@@ -0,0 +1,58 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<!--\n+  ~ Catroid: An on-device visual programming system for Android devices\n+  ~ Copyright (C) 2010-2018 The Catrobat Team\n+  ~ (<http://developer.catrobat.org/credits>)\n+  ~\n+  ~ This program is free software: you can redistribute it and/or modify\n+  ~ it under the terms of the GNU Affero General Public License as\n+  ~ published by the Free Software Foundation, either version 3 of the\n+  ~ License, or (at your option) any later version.\n+  ~\n+  ~ An additional term exception under section 7 of the GNU Affero\n+  ~ General Public License, version 3, is available at\n+  ~ http://developer.catrobat.org/license_additional_term\n+  ~\n+  ~ This program is distributed in the hope that it will be useful,\n+  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of\n+  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+  ~ GNU Affero General Public License for more details.\n+  ~\n+  ~ You should have received a copy of the GNU Affero General Public License\n+  ~ along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+  -->\n+\n+<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n+    android:layout_width=\"match_parent\"\n+    android:layout_height=\"wrap_content\"\n+    android:gravity=\"center_vertical\"\n+    android:orientation=\"horizontal\">\n+\n+    <CheckBox\n+        android:id=\"@+id/brick_checkbox\"\n+        android:layout_width=\"wrap_content\"\n+        android:layout_height=\"wrap_content\"\n+        android:gravity=\"center_vertical\"\n+        android:visibility=\"gone\" />\n+\n+    <org.catrobat.catroid.ui.BrickLayout\n+        android:id=\"@+id/brick_set_instrument_layout\"\n+        style=\"@style/BrickContainer.Sound.Small\">\n+\n+        <include layout=\"@layout/icon_brick_category_sound\" />\n+\n+        <TextView\n+            android:id=\"@+id/brick_set_instrument_to_label\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2f37be1f9fbb6045e5e7091b21a940002d23a60a"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxOTE2MzgwOnYy", "diffSide": "RIGHT", "path": "catroid/src/main/java/org/catrobat/catroid/content/bricks/SetInstrumentBrick.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wOFQwMDowMzo1MVrOG9rwBg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wOFQwMDowMzo1MVrOG9rwBg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzMzMzEyNg==", "bodyText": "please avoid creating nested classes in Bricks,\n\nmove PickableMusicalInstrument to org.catrobat.catroid.content.bricks.brickspinner; and make it class instead of enum, which implements Nameable & Serializable\nlet this brick implement BrickSpinner.OnItemSelectedListener<PickableMusicalInstrument>", "url": "https://github.com/Catrobat/Catroid/pull/3730#discussion_r467333126", "createdAt": "2020-08-08T00:03:51Z", "author": {"login": "ndrnour"}, "path": "catroid/src/main/java/org/catrobat/catroid/content/bricks/SetInstrumentBrick.java", "diffHunk": "@@ -0,0 +1,220 @@\n+/*\n+ * Catroid: An on-device visual programming system for Android devices\n+ * Copyright (C) 2010-2020 The Catrobat Team\n+ * (<http://developer.catrobat.org/credits>)\n+ *\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU Affero General Public License as\n+ * published by the Free Software Foundation, either version 3 of the\n+ * License, or (at your option) any later version.\n+ *\n+ * An additional term exception under section 7 of the GNU Affero\n+ * General Public License, version 3, is available at\n+ * http://developer.catrobat.org/license_additional_term\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU Affero General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Affero General Public License\n+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+\n+package org.catrobat.catroid.content.bricks;\n+\n+import android.content.Context;\n+import android.view.View;\n+\n+import org.catrobat.catroid.R;\n+import org.catrobat.catroid.common.Nameable;\n+import org.catrobat.catroid.content.Sprite;\n+import org.catrobat.catroid.content.actions.ScriptSequenceAction;\n+import org.catrobat.catroid.content.bricks.brickspinner.BrickSpinner;\n+import org.catrobat.catroid.pocketmusic.note.MusicalInstrument;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+import androidx.annotation.Nullable;\n+\n+public class SetInstrumentBrick extends BrickBaseType {\n+\n+\tpublic enum PickableMusicalInstrument implements Nameable {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2f37be1f9fbb6045e5e7091b21a940002d23a60a"}, "originalPosition": 43}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxOTE3NDYxOnYy", "diffSide": "RIGHT", "path": "catroid/src/main/java/org/catrobat/catroid/content/bricks/SetInstrumentBrick.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wOFQwMDoxMjo0N1rOG9r1zg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wOFQwMDoxMjo0N1rOG9r1zg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzMzNDYwNg==", "bodyText": "using an integer is going to be misleading when reading the code.xml file, please change it to an object of the newly defined type PickableMusicalInstrument  cause now it looks like:\n<brick type=\"SetInstrumentBrick\"> <commentedOut>false</commentedOut> <instrumentSelection>44</instrumentSelection> </brick>\nwhich give zero information what instrument is this.", "url": "https://github.com/Catrobat/Catroid/pull/3730#discussion_r467334606", "createdAt": "2020-08-08T00:12:47Z", "author": {"login": "ndrnour"}, "path": "catroid/src/main/java/org/catrobat/catroid/content/bricks/SetInstrumentBrick.java", "diffHunk": "@@ -0,0 +1,220 @@\n+/*\n+ * Catroid: An on-device visual programming system for Android devices\n+ * Copyright (C) 2010-2020 The Catrobat Team\n+ * (<http://developer.catrobat.org/credits>)\n+ *\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU Affero General Public License as\n+ * published by the Free Software Foundation, either version 3 of the\n+ * License, or (at your option) any later version.\n+ *\n+ * An additional term exception under section 7 of the GNU Affero\n+ * General Public License, version 3, is available at\n+ * http://developer.catrobat.org/license_additional_term\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU Affero General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Affero General Public License\n+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+\n+package org.catrobat.catroid.content.bricks;\n+\n+import android.content.Context;\n+import android.view.View;\n+\n+import org.catrobat.catroid.R;\n+import org.catrobat.catroid.common.Nameable;\n+import org.catrobat.catroid.content.Sprite;\n+import org.catrobat.catroid.content.actions.ScriptSequenceAction;\n+import org.catrobat.catroid.content.bricks.brickspinner.BrickSpinner;\n+import org.catrobat.catroid.pocketmusic.note.MusicalInstrument;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+import androidx.annotation.Nullable;\n+\n+public class SetInstrumentBrick extends BrickBaseType {\n+\n+\tpublic enum PickableMusicalInstrument implements Nameable {\n+\t\tACOUSTIC_GRAND_PIANO(\"Acoustic Grand Piano\", 1),\n+\t\tBRIGHT_ACOUSTIC_PIANO(\"Bright Acoustic Piano\", 2),\n+\t\tELECTRIC_GRAND_PIANO(\"Electric Grand Piano\", 3),\n+\t\tHONKY_TONK_PIANO(\"Honky-tonk Piano\", 4),\n+\t\tELECTRIC_PIANO_1(\"Rhodes Piano\", 5),\n+\t\tELECTRIC_PIANO_2(\"Chorused Piano\", 6),\n+\t\tHARPSICHORD(\"Harpsichord\", 7),\n+\t\tCLAVI(\"Clavinet\", 8),\n+\t\tCELESTA(\"Celesta\", 9),\n+\t\tDRAWBAR_ORGAN(\"Drawbar Organ\", 17),\n+\t\tPERCUSSIVE_ORGAN(\"Percussive Organ\", 18),\n+\t\tROCK_ORGAN(\"Rock Organ\", 19),\n+\t\tCHURCH_ORGAN(\"Church Organ\", 20),\n+\t\tREED_ORGAN(\"Reed Organ\", 21),\n+\t\tACOUSTIC_GUITAR_NYLON(\"Acoustic Guitar\", 25),\n+\t\tACOUSTIC_GUITAR_STEEL(\"Acoustic Guitar Steel\", 26),\n+\t\tELECTRIC_GUITAR_JAZZ(\"Electric Guitar\", 27),\n+\t\tELECTRIC_GUITAR_CLEAN(\"Electric Guitar Clean\", 28),\n+\t\tELECTRIC_GUITAR_MUTED(\"Electric Guitar Muted\", 29),\n+\t\tOVERDRIVEN_GUITAR(\"Overdriven Guitar\", 30),\n+\t\tDISTORTION_GUITAR(\"Distortion Guitar\", 31),\n+\t\tGUITAR_HARMONICS(\"Guitar Harmonics\", 32),\n+\t\tACOUSTIC_BASS(\"Acoustic Bass\", 33),\n+\t\tELECTRIC_BASS_FINGER(\"Electric Bass Finger\", 34),\n+\t\tELECTRIC_BASS_PICK(\"Electric Bass Pick\", 35),\n+\t\tFRETLESS_BASS(\"Fretless Bass\", 36),\n+\t\tSLAP_BASS_1(\"Slap Bass 1\", 37),\n+\t\tSLAP_BASS_2(\"Slap Bass 2\", 38),\n+\t\tSYNTH_BASS_1(\"Synth Bass 1\", 39),\n+\t\tSYNTH_BASS_2(\"Synth Bass 2\", 40),\n+\t\tCONTRABASS(\"Contrabass\", 44),\n+\t\tTREMOLO_STRINGS(\"Tremolo Strings\", 45),\n+\t\tPIZZICATO_STRINGS(\"Pizzicato\", 46),\n+\t\tORCHESTRAL_HARP(\"Orchestral Harp\", 47),\n+\t\tTIMPANI(\"Timpani\", 48),\n+\t\tSTRING_ENSEMBLE_1(\"Strings\", 49),\n+\t\tSTRING_ENSEMBLE_2(\"Slow Strings\", 50),\n+\t\tSYNTH_STRINGS_1(\"Synth Strings 1\", 51),\n+\t\tSYNTH_STRINGS_2(\"Synth Strings 2\", 52),\n+\t\tVOICE_AAHS(\"Choir Aahs\", 53),\n+\t\tVOICE_OOHS(\"Voice Oohs\", 54),\n+\t\tSYNTH_VOICE(\"Synth Voice\", 55),\n+\t\tORCHESTRA_HIT(\"Orchestra Hit\", 56),\n+\t\tTRUMPET(\"Trumpet\", 57),\n+\t\tTROMBONE(\"Trombone\", 58),\n+\t\tTUBA(\"Tuba\", 59),\n+\t\tFRENCH_HORN(\"French Horn\", 61),\n+\t\tBRASS_SECTION(\"Brass Section\", 62),\n+\t\tSYNTH_BRASS_1(\"Synth Brass 1\", 63),\n+\t\tSYNTH_BRASS_2(\"Synth Brass 2\", 64),\n+\t\tSOPRANO_SAX(\"Soprano Sax\", 65),\n+\t\tALTO_SAX(\"Alto Sax\", 66),\n+\t\tTENOR_SAX(\"Tenor Sax\", 67),\n+\t\tBARITONE_SAX(\"Baritone Sax\", 68),\n+\t\tOBOE(\"Oboe\", 69),\n+\t\tENGLISH_HORN(\"English Horn\", 70),\n+\t\tBASSOON(\"Bassoon\", 71),\n+\t\tCLARINET(\"Clarinet\", 72),\n+\t\tLEAD_1_SQUARE(\"Lead Square Wave\", 81),\n+\t\tLEAD_2_SAWTOOTH(\"Lead Sawtooth Wave\", 82),\n+\t\tLEAD_3_CALLIOPE(\"Lead Calliope\", 83),\n+\t\tLEAD_4_CHIFF(\"Lead Chiffer\", 84),\n+\t\tLEAD_5_CHARANG(\"Lead Charang\", 85),\n+\t\tLEAD_6_VOICE(\"Lead Voice Solo\", 86),\n+\t\tLEAD_7_FIFTHS(\"Lead Fifths\", 87),\n+\t\tLEAD_8_BASS_AND_LEAD(\"Lead Bass and Lead\", 88),\n+\t\tPAD_1_NEW_AGE(\"Pad New Age Fantasia\", 89),\n+\t\tPAD_2_WARM(\"Pad Warm\", 90),\n+\t\tPAD_3_POLYSYNTH(\"Pad Polysinth\", 91),\n+\t\tPAD_4_CHOIR(\"Pad Choir Space Voice\", 92),\n+\t\tPAD_5_BOWED(\"Pad Bowed Glass\", 93),\n+\t\tPAD_6_METALLIC(\"Pad Metallic Pro\", 94),\n+\t\tPAD_7_HALO(\"Pad Halo\", 95),\n+\t\tPAD_8_SWEEP(\"Pad Sweep\", 96),\n+\t\tFX_1_RAIN(\"FX Rain\", 97),\n+\t\tFX_2_SOUNDTRACK(\"FX Soundtrack\", 98),\n+\t\tFX_3_CRYSTAL(\"FX Crystal\", 99),\n+\t\tFX_4_ATMOSPHERE(\"FX Atmosphere\", 100),\n+\t\tFX_5_BRIGHTNESS(\"FX Brightness\", 101),\n+\t\tFX_6_GOBLINS(\"FX Goblins\", 102),\n+\t\tFX_7_ECHOES(\"FX 7 Echoes, Drops\", 103),\n+\t\tFX_8_SCI_FI(\"FX Sci-fi\", 104),\n+\t\tSITAR(\"Sitar\", 105),\n+\t\tBANJO(\"Banjo\", 106),\n+\t\tSHAMISEN(\"Shamisen\", 107),\n+\t\tKOTO(\"Koto\", 108),\n+\t\tKALIMBA(\"Kalimba\", 109),\n+\t\tBAGPIPE(\"Bagpipe\", 110),\n+\t\tSHANAI(\"Shanai\", 112),\n+\t\tTINKLE_BELL(\"Tinkle bell\", 113);\n+\n+\t\tprivate String name;\n+\t\tprivate int value;\n+\t\tPickableMusicalInstrument(String name, int value) {\n+\t\t\tthis.name = name;\n+\t\t\tthis.value = value;\n+\t\t}\n+\n+\t\tpublic static int getIndexByValue(int value) {\n+\t\t\tint index = 0;\n+\t\t\tfor (PickableMusicalInstrument instrument : PickableMusicalInstrument.values()) {\n+\t\t\t\tif (instrument.getValue() == value) {\n+\t\t\t\t\treturn index;\n+\t\t\t\t}\n+\t\t\t\tindex++;\n+\t\t\t}\n+\t\t\treturn -1;\n+\t\t}\n+\n+\t\t@Override\n+\t\tpublic String getName() {\n+\t\t\treturn name;\n+\t\t}\n+\n+\t\tpublic int getValue() {\n+\t\t\treturn value;\n+\t\t}\n+\n+\t\t@Override\n+\t\tpublic void setName(String name) {\n+\t\t\tthis.name = name;\n+\t\t}\n+\n+\t\tpublic void setValue(int value) {\n+\t\t\tthis.value = value;\n+\t\t}\n+\t}\n+\n+\tpublic int instrumentSelection = PickableMusicalInstrument.values()[0].getValue();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2f37be1f9fbb6045e5e7091b21a940002d23a60a"}, "originalPosition": 172}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxOTE3OTA4OnYy", "diffSide": "RIGHT", "path": "catroid/src/main/java/org/catrobat/catroid/content/bricks/SetInstrumentBrick.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wOFQwMDoxNjo0OVrOG9r4MQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxNjoxNjozNVrOG-V0Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzMzNTIxNw==", "bodyText": "add a new function in org.catrobat.catroid.utils.java which returns a list of the constants defined from line 44 to line 133.", "url": "https://github.com/Catrobat/Catroid/pull/3730#discussion_r467335217", "createdAt": "2020-08-08T00:16:49Z", "author": {"login": "ndrnour"}, "path": "catroid/src/main/java/org/catrobat/catroid/content/bricks/SetInstrumentBrick.java", "diffHunk": "@@ -0,0 +1,220 @@\n+/*\n+ * Catroid: An on-device visual programming system for Android devices\n+ * Copyright (C) 2010-2020 The Catrobat Team\n+ * (<http://developer.catrobat.org/credits>)\n+ *\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU Affero General Public License as\n+ * published by the Free Software Foundation, either version 3 of the\n+ * License, or (at your option) any later version.\n+ *\n+ * An additional term exception under section 7 of the GNU Affero\n+ * General Public License, version 3, is available at\n+ * http://developer.catrobat.org/license_additional_term\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU Affero General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Affero General Public License\n+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+\n+package org.catrobat.catroid.content.bricks;\n+\n+import android.content.Context;\n+import android.view.View;\n+\n+import org.catrobat.catroid.R;\n+import org.catrobat.catroid.common.Nameable;\n+import org.catrobat.catroid.content.Sprite;\n+import org.catrobat.catroid.content.actions.ScriptSequenceAction;\n+import org.catrobat.catroid.content.bricks.brickspinner.BrickSpinner;\n+import org.catrobat.catroid.pocketmusic.note.MusicalInstrument;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+import androidx.annotation.Nullable;\n+\n+public class SetInstrumentBrick extends BrickBaseType {\n+\n+\tpublic enum PickableMusicalInstrument implements Nameable {\n+\t\tACOUSTIC_GRAND_PIANO(\"Acoustic Grand Piano\", 1),\n+\t\tBRIGHT_ACOUSTIC_PIANO(\"Bright Acoustic Piano\", 2),\n+\t\tELECTRIC_GRAND_PIANO(\"Electric Grand Piano\", 3),\n+\t\tHONKY_TONK_PIANO(\"Honky-tonk Piano\", 4),\n+\t\tELECTRIC_PIANO_1(\"Rhodes Piano\", 5),\n+\t\tELECTRIC_PIANO_2(\"Chorused Piano\", 6),\n+\t\tHARPSICHORD(\"Harpsichord\", 7),\n+\t\tCLAVI(\"Clavinet\", 8),\n+\t\tCELESTA(\"Celesta\", 9),\n+\t\tDRAWBAR_ORGAN(\"Drawbar Organ\", 17),\n+\t\tPERCUSSIVE_ORGAN(\"Percussive Organ\", 18),\n+\t\tROCK_ORGAN(\"Rock Organ\", 19),\n+\t\tCHURCH_ORGAN(\"Church Organ\", 20),\n+\t\tREED_ORGAN(\"Reed Organ\", 21),\n+\t\tACOUSTIC_GUITAR_NYLON(\"Acoustic Guitar\", 25),\n+\t\tACOUSTIC_GUITAR_STEEL(\"Acoustic Guitar Steel\", 26),\n+\t\tELECTRIC_GUITAR_JAZZ(\"Electric Guitar\", 27),\n+\t\tELECTRIC_GUITAR_CLEAN(\"Electric Guitar Clean\", 28),\n+\t\tELECTRIC_GUITAR_MUTED(\"Electric Guitar Muted\", 29),\n+\t\tOVERDRIVEN_GUITAR(\"Overdriven Guitar\", 30),\n+\t\tDISTORTION_GUITAR(\"Distortion Guitar\", 31),\n+\t\tGUITAR_HARMONICS(\"Guitar Harmonics\", 32),\n+\t\tACOUSTIC_BASS(\"Acoustic Bass\", 33),\n+\t\tELECTRIC_BASS_FINGER(\"Electric Bass Finger\", 34),\n+\t\tELECTRIC_BASS_PICK(\"Electric Bass Pick\", 35),\n+\t\tFRETLESS_BASS(\"Fretless Bass\", 36),\n+\t\tSLAP_BASS_1(\"Slap Bass 1\", 37),\n+\t\tSLAP_BASS_2(\"Slap Bass 2\", 38),\n+\t\tSYNTH_BASS_1(\"Synth Bass 1\", 39),\n+\t\tSYNTH_BASS_2(\"Synth Bass 2\", 40),\n+\t\tCONTRABASS(\"Contrabass\", 44),\n+\t\tTREMOLO_STRINGS(\"Tremolo Strings\", 45),\n+\t\tPIZZICATO_STRINGS(\"Pizzicato\", 46),\n+\t\tORCHESTRAL_HARP(\"Orchestral Harp\", 47),\n+\t\tTIMPANI(\"Timpani\", 48),\n+\t\tSTRING_ENSEMBLE_1(\"Strings\", 49),\n+\t\tSTRING_ENSEMBLE_2(\"Slow Strings\", 50),\n+\t\tSYNTH_STRINGS_1(\"Synth Strings 1\", 51),\n+\t\tSYNTH_STRINGS_2(\"Synth Strings 2\", 52),\n+\t\tVOICE_AAHS(\"Choir Aahs\", 53),\n+\t\tVOICE_OOHS(\"Voice Oohs\", 54),\n+\t\tSYNTH_VOICE(\"Synth Voice\", 55),\n+\t\tORCHESTRA_HIT(\"Orchestra Hit\", 56),\n+\t\tTRUMPET(\"Trumpet\", 57),\n+\t\tTROMBONE(\"Trombone\", 58),\n+\t\tTUBA(\"Tuba\", 59),\n+\t\tFRENCH_HORN(\"French Horn\", 61),\n+\t\tBRASS_SECTION(\"Brass Section\", 62),\n+\t\tSYNTH_BRASS_1(\"Synth Brass 1\", 63),\n+\t\tSYNTH_BRASS_2(\"Synth Brass 2\", 64),\n+\t\tSOPRANO_SAX(\"Soprano Sax\", 65),\n+\t\tALTO_SAX(\"Alto Sax\", 66),\n+\t\tTENOR_SAX(\"Tenor Sax\", 67),\n+\t\tBARITONE_SAX(\"Baritone Sax\", 68),\n+\t\tOBOE(\"Oboe\", 69),\n+\t\tENGLISH_HORN(\"English Horn\", 70),\n+\t\tBASSOON(\"Bassoon\", 71),\n+\t\tCLARINET(\"Clarinet\", 72),\n+\t\tLEAD_1_SQUARE(\"Lead Square Wave\", 81),\n+\t\tLEAD_2_SAWTOOTH(\"Lead Sawtooth Wave\", 82),\n+\t\tLEAD_3_CALLIOPE(\"Lead Calliope\", 83),\n+\t\tLEAD_4_CHIFF(\"Lead Chiffer\", 84),\n+\t\tLEAD_5_CHARANG(\"Lead Charang\", 85),\n+\t\tLEAD_6_VOICE(\"Lead Voice Solo\", 86),\n+\t\tLEAD_7_FIFTHS(\"Lead Fifths\", 87),\n+\t\tLEAD_8_BASS_AND_LEAD(\"Lead Bass and Lead\", 88),\n+\t\tPAD_1_NEW_AGE(\"Pad New Age Fantasia\", 89),\n+\t\tPAD_2_WARM(\"Pad Warm\", 90),\n+\t\tPAD_3_POLYSYNTH(\"Pad Polysinth\", 91),\n+\t\tPAD_4_CHOIR(\"Pad Choir Space Voice\", 92),\n+\t\tPAD_5_BOWED(\"Pad Bowed Glass\", 93),\n+\t\tPAD_6_METALLIC(\"Pad Metallic Pro\", 94),\n+\t\tPAD_7_HALO(\"Pad Halo\", 95),\n+\t\tPAD_8_SWEEP(\"Pad Sweep\", 96),\n+\t\tFX_1_RAIN(\"FX Rain\", 97),\n+\t\tFX_2_SOUNDTRACK(\"FX Soundtrack\", 98),\n+\t\tFX_3_CRYSTAL(\"FX Crystal\", 99),\n+\t\tFX_4_ATMOSPHERE(\"FX Atmosphere\", 100),\n+\t\tFX_5_BRIGHTNESS(\"FX Brightness\", 101),\n+\t\tFX_6_GOBLINS(\"FX Goblins\", 102),\n+\t\tFX_7_ECHOES(\"FX 7 Echoes, Drops\", 103),\n+\t\tFX_8_SCI_FI(\"FX Sci-fi\", 104),\n+\t\tSITAR(\"Sitar\", 105),\n+\t\tBANJO(\"Banjo\", 106),\n+\t\tSHAMISEN(\"Shamisen\", 107),\n+\t\tKOTO(\"Koto\", 108),\n+\t\tKALIMBA(\"Kalimba\", 109),\n+\t\tBAGPIPE(\"Bagpipe\", 110),\n+\t\tSHANAI(\"Shanai\", 112),\n+\t\tTINKLE_BELL(\"Tinkle bell\", 113);\n+\n+\t\tprivate String name;\n+\t\tprivate int value;\n+\t\tPickableMusicalInstrument(String name, int value) {\n+\t\t\tthis.name = name;\n+\t\t\tthis.value = value;\n+\t\t}\n+\n+\t\tpublic static int getIndexByValue(int value) {\n+\t\t\tint index = 0;\n+\t\t\tfor (PickableMusicalInstrument instrument : PickableMusicalInstrument.values()) {\n+\t\t\t\tif (instrument.getValue() == value) {\n+\t\t\t\t\treturn index;\n+\t\t\t\t}\n+\t\t\t\tindex++;\n+\t\t\t}\n+\t\t\treturn -1;\n+\t\t}\n+\n+\t\t@Override\n+\t\tpublic String getName() {\n+\t\t\treturn name;\n+\t\t}\n+\n+\t\tpublic int getValue() {\n+\t\t\treturn value;\n+\t\t}\n+\n+\t\t@Override\n+\t\tpublic void setName(String name) {\n+\t\t\tthis.name = name;\n+\t\t}\n+\n+\t\tpublic void setValue(int value) {\n+\t\t\tthis.value = value;\n+\t\t}\n+\t}\n+\n+\tpublic int instrumentSelection = PickableMusicalInstrument.values()[0].getValue();\n+\n+\t@Override\n+\tpublic int getViewResource() {\n+\t\treturn R.layout.brick_set_instrument;\n+\t}\n+\n+\tprotected int getSpinnerId() {\n+\t\treturn R.id.set_instrument_spinner;\n+\t}\n+\n+\t@Override\n+\tpublic View getView(Context context) {\n+\t\tsuper.getView(context);\n+\t\tList<Nameable> items = new ArrayList<>();\n+\n+\t\tfor (PickableMusicalInstrument instrument : PickableMusicalInstrument.values()) {\n+\t\t\titems.add(instrument);\n+\t\t}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2f37be1f9fbb6045e5e7091b21a940002d23a60a"}, "originalPosition": 190}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzgyMzUyMA==", "bodyText": "Because PickableMusicalInstrument is now a class I just create objects of it with the right strings and values, put them all in a list and return it, right?", "url": "https://github.com/Catrobat/Catroid/pull/3730#discussion_r467823520", "createdAt": "2020-08-10T10:48:42Z", "author": {"login": "Rawbat"}, "path": "catroid/src/main/java/org/catrobat/catroid/content/bricks/SetInstrumentBrick.java", "diffHunk": "@@ -0,0 +1,220 @@\n+/*\n+ * Catroid: An on-device visual programming system for Android devices\n+ * Copyright (C) 2010-2020 The Catrobat Team\n+ * (<http://developer.catrobat.org/credits>)\n+ *\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU Affero General Public License as\n+ * published by the Free Software Foundation, either version 3 of the\n+ * License, or (at your option) any later version.\n+ *\n+ * An additional term exception under section 7 of the GNU Affero\n+ * General Public License, version 3, is available at\n+ * http://developer.catrobat.org/license_additional_term\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU Affero General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Affero General Public License\n+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+\n+package org.catrobat.catroid.content.bricks;\n+\n+import android.content.Context;\n+import android.view.View;\n+\n+import org.catrobat.catroid.R;\n+import org.catrobat.catroid.common.Nameable;\n+import org.catrobat.catroid.content.Sprite;\n+import org.catrobat.catroid.content.actions.ScriptSequenceAction;\n+import org.catrobat.catroid.content.bricks.brickspinner.BrickSpinner;\n+import org.catrobat.catroid.pocketmusic.note.MusicalInstrument;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+import androidx.annotation.Nullable;\n+\n+public class SetInstrumentBrick extends BrickBaseType {\n+\n+\tpublic enum PickableMusicalInstrument implements Nameable {\n+\t\tACOUSTIC_GRAND_PIANO(\"Acoustic Grand Piano\", 1),\n+\t\tBRIGHT_ACOUSTIC_PIANO(\"Bright Acoustic Piano\", 2),\n+\t\tELECTRIC_GRAND_PIANO(\"Electric Grand Piano\", 3),\n+\t\tHONKY_TONK_PIANO(\"Honky-tonk Piano\", 4),\n+\t\tELECTRIC_PIANO_1(\"Rhodes Piano\", 5),\n+\t\tELECTRIC_PIANO_2(\"Chorused Piano\", 6),\n+\t\tHARPSICHORD(\"Harpsichord\", 7),\n+\t\tCLAVI(\"Clavinet\", 8),\n+\t\tCELESTA(\"Celesta\", 9),\n+\t\tDRAWBAR_ORGAN(\"Drawbar Organ\", 17),\n+\t\tPERCUSSIVE_ORGAN(\"Percussive Organ\", 18),\n+\t\tROCK_ORGAN(\"Rock Organ\", 19),\n+\t\tCHURCH_ORGAN(\"Church Organ\", 20),\n+\t\tREED_ORGAN(\"Reed Organ\", 21),\n+\t\tACOUSTIC_GUITAR_NYLON(\"Acoustic Guitar\", 25),\n+\t\tACOUSTIC_GUITAR_STEEL(\"Acoustic Guitar Steel\", 26),\n+\t\tELECTRIC_GUITAR_JAZZ(\"Electric Guitar\", 27),\n+\t\tELECTRIC_GUITAR_CLEAN(\"Electric Guitar Clean\", 28),\n+\t\tELECTRIC_GUITAR_MUTED(\"Electric Guitar Muted\", 29),\n+\t\tOVERDRIVEN_GUITAR(\"Overdriven Guitar\", 30),\n+\t\tDISTORTION_GUITAR(\"Distortion Guitar\", 31),\n+\t\tGUITAR_HARMONICS(\"Guitar Harmonics\", 32),\n+\t\tACOUSTIC_BASS(\"Acoustic Bass\", 33),\n+\t\tELECTRIC_BASS_FINGER(\"Electric Bass Finger\", 34),\n+\t\tELECTRIC_BASS_PICK(\"Electric Bass Pick\", 35),\n+\t\tFRETLESS_BASS(\"Fretless Bass\", 36),\n+\t\tSLAP_BASS_1(\"Slap Bass 1\", 37),\n+\t\tSLAP_BASS_2(\"Slap Bass 2\", 38),\n+\t\tSYNTH_BASS_1(\"Synth Bass 1\", 39),\n+\t\tSYNTH_BASS_2(\"Synth Bass 2\", 40),\n+\t\tCONTRABASS(\"Contrabass\", 44),\n+\t\tTREMOLO_STRINGS(\"Tremolo Strings\", 45),\n+\t\tPIZZICATO_STRINGS(\"Pizzicato\", 46),\n+\t\tORCHESTRAL_HARP(\"Orchestral Harp\", 47),\n+\t\tTIMPANI(\"Timpani\", 48),\n+\t\tSTRING_ENSEMBLE_1(\"Strings\", 49),\n+\t\tSTRING_ENSEMBLE_2(\"Slow Strings\", 50),\n+\t\tSYNTH_STRINGS_1(\"Synth Strings 1\", 51),\n+\t\tSYNTH_STRINGS_2(\"Synth Strings 2\", 52),\n+\t\tVOICE_AAHS(\"Choir Aahs\", 53),\n+\t\tVOICE_OOHS(\"Voice Oohs\", 54),\n+\t\tSYNTH_VOICE(\"Synth Voice\", 55),\n+\t\tORCHESTRA_HIT(\"Orchestra Hit\", 56),\n+\t\tTRUMPET(\"Trumpet\", 57),\n+\t\tTROMBONE(\"Trombone\", 58),\n+\t\tTUBA(\"Tuba\", 59),\n+\t\tFRENCH_HORN(\"French Horn\", 61),\n+\t\tBRASS_SECTION(\"Brass Section\", 62),\n+\t\tSYNTH_BRASS_1(\"Synth Brass 1\", 63),\n+\t\tSYNTH_BRASS_2(\"Synth Brass 2\", 64),\n+\t\tSOPRANO_SAX(\"Soprano Sax\", 65),\n+\t\tALTO_SAX(\"Alto Sax\", 66),\n+\t\tTENOR_SAX(\"Tenor Sax\", 67),\n+\t\tBARITONE_SAX(\"Baritone Sax\", 68),\n+\t\tOBOE(\"Oboe\", 69),\n+\t\tENGLISH_HORN(\"English Horn\", 70),\n+\t\tBASSOON(\"Bassoon\", 71),\n+\t\tCLARINET(\"Clarinet\", 72),\n+\t\tLEAD_1_SQUARE(\"Lead Square Wave\", 81),\n+\t\tLEAD_2_SAWTOOTH(\"Lead Sawtooth Wave\", 82),\n+\t\tLEAD_3_CALLIOPE(\"Lead Calliope\", 83),\n+\t\tLEAD_4_CHIFF(\"Lead Chiffer\", 84),\n+\t\tLEAD_5_CHARANG(\"Lead Charang\", 85),\n+\t\tLEAD_6_VOICE(\"Lead Voice Solo\", 86),\n+\t\tLEAD_7_FIFTHS(\"Lead Fifths\", 87),\n+\t\tLEAD_8_BASS_AND_LEAD(\"Lead Bass and Lead\", 88),\n+\t\tPAD_1_NEW_AGE(\"Pad New Age Fantasia\", 89),\n+\t\tPAD_2_WARM(\"Pad Warm\", 90),\n+\t\tPAD_3_POLYSYNTH(\"Pad Polysinth\", 91),\n+\t\tPAD_4_CHOIR(\"Pad Choir Space Voice\", 92),\n+\t\tPAD_5_BOWED(\"Pad Bowed Glass\", 93),\n+\t\tPAD_6_METALLIC(\"Pad Metallic Pro\", 94),\n+\t\tPAD_7_HALO(\"Pad Halo\", 95),\n+\t\tPAD_8_SWEEP(\"Pad Sweep\", 96),\n+\t\tFX_1_RAIN(\"FX Rain\", 97),\n+\t\tFX_2_SOUNDTRACK(\"FX Soundtrack\", 98),\n+\t\tFX_3_CRYSTAL(\"FX Crystal\", 99),\n+\t\tFX_4_ATMOSPHERE(\"FX Atmosphere\", 100),\n+\t\tFX_5_BRIGHTNESS(\"FX Brightness\", 101),\n+\t\tFX_6_GOBLINS(\"FX Goblins\", 102),\n+\t\tFX_7_ECHOES(\"FX 7 Echoes, Drops\", 103),\n+\t\tFX_8_SCI_FI(\"FX Sci-fi\", 104),\n+\t\tSITAR(\"Sitar\", 105),\n+\t\tBANJO(\"Banjo\", 106),\n+\t\tSHAMISEN(\"Shamisen\", 107),\n+\t\tKOTO(\"Koto\", 108),\n+\t\tKALIMBA(\"Kalimba\", 109),\n+\t\tBAGPIPE(\"Bagpipe\", 110),\n+\t\tSHANAI(\"Shanai\", 112),\n+\t\tTINKLE_BELL(\"Tinkle bell\", 113);\n+\n+\t\tprivate String name;\n+\t\tprivate int value;\n+\t\tPickableMusicalInstrument(String name, int value) {\n+\t\t\tthis.name = name;\n+\t\t\tthis.value = value;\n+\t\t}\n+\n+\t\tpublic static int getIndexByValue(int value) {\n+\t\t\tint index = 0;\n+\t\t\tfor (PickableMusicalInstrument instrument : PickableMusicalInstrument.values()) {\n+\t\t\t\tif (instrument.getValue() == value) {\n+\t\t\t\t\treturn index;\n+\t\t\t\t}\n+\t\t\t\tindex++;\n+\t\t\t}\n+\t\t\treturn -1;\n+\t\t}\n+\n+\t\t@Override\n+\t\tpublic String getName() {\n+\t\t\treturn name;\n+\t\t}\n+\n+\t\tpublic int getValue() {\n+\t\t\treturn value;\n+\t\t}\n+\n+\t\t@Override\n+\t\tpublic void setName(String name) {\n+\t\t\tthis.name = name;\n+\t\t}\n+\n+\t\tpublic void setValue(int value) {\n+\t\t\tthis.value = value;\n+\t\t}\n+\t}\n+\n+\tpublic int instrumentSelection = PickableMusicalInstrument.values()[0].getValue();\n+\n+\t@Override\n+\tpublic int getViewResource() {\n+\t\treturn R.layout.brick_set_instrument;\n+\t}\n+\n+\tprotected int getSpinnerId() {\n+\t\treturn R.id.set_instrument_spinner;\n+\t}\n+\n+\t@Override\n+\tpublic View getView(Context context) {\n+\t\tsuper.getView(context);\n+\t\tList<Nameable> items = new ArrayList<>();\n+\n+\t\tfor (PickableMusicalInstrument instrument : PickableMusicalInstrument.values()) {\n+\t\t\titems.add(instrument);\n+\t\t}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzMzNTIxNw=="}, "originalCommit": {"oid": "2f37be1f9fbb6045e5e7091b21a940002d23a60a"}, "originalPosition": 190}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODAyMjMyNw==", "bodyText": "Exactly", "url": "https://github.com/Catrobat/Catroid/pull/3730#discussion_r468022327", "createdAt": "2020-08-10T16:16:35Z", "author": {"login": "ndrnour"}, "path": "catroid/src/main/java/org/catrobat/catroid/content/bricks/SetInstrumentBrick.java", "diffHunk": "@@ -0,0 +1,220 @@\n+/*\n+ * Catroid: An on-device visual programming system for Android devices\n+ * Copyright (C) 2010-2020 The Catrobat Team\n+ * (<http://developer.catrobat.org/credits>)\n+ *\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU Affero General Public License as\n+ * published by the Free Software Foundation, either version 3 of the\n+ * License, or (at your option) any later version.\n+ *\n+ * An additional term exception under section 7 of the GNU Affero\n+ * General Public License, version 3, is available at\n+ * http://developer.catrobat.org/license_additional_term\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU Affero General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Affero General Public License\n+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+\n+package org.catrobat.catroid.content.bricks;\n+\n+import android.content.Context;\n+import android.view.View;\n+\n+import org.catrobat.catroid.R;\n+import org.catrobat.catroid.common.Nameable;\n+import org.catrobat.catroid.content.Sprite;\n+import org.catrobat.catroid.content.actions.ScriptSequenceAction;\n+import org.catrobat.catroid.content.bricks.brickspinner.BrickSpinner;\n+import org.catrobat.catroid.pocketmusic.note.MusicalInstrument;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+import androidx.annotation.Nullable;\n+\n+public class SetInstrumentBrick extends BrickBaseType {\n+\n+\tpublic enum PickableMusicalInstrument implements Nameable {\n+\t\tACOUSTIC_GRAND_PIANO(\"Acoustic Grand Piano\", 1),\n+\t\tBRIGHT_ACOUSTIC_PIANO(\"Bright Acoustic Piano\", 2),\n+\t\tELECTRIC_GRAND_PIANO(\"Electric Grand Piano\", 3),\n+\t\tHONKY_TONK_PIANO(\"Honky-tonk Piano\", 4),\n+\t\tELECTRIC_PIANO_1(\"Rhodes Piano\", 5),\n+\t\tELECTRIC_PIANO_2(\"Chorused Piano\", 6),\n+\t\tHARPSICHORD(\"Harpsichord\", 7),\n+\t\tCLAVI(\"Clavinet\", 8),\n+\t\tCELESTA(\"Celesta\", 9),\n+\t\tDRAWBAR_ORGAN(\"Drawbar Organ\", 17),\n+\t\tPERCUSSIVE_ORGAN(\"Percussive Organ\", 18),\n+\t\tROCK_ORGAN(\"Rock Organ\", 19),\n+\t\tCHURCH_ORGAN(\"Church Organ\", 20),\n+\t\tREED_ORGAN(\"Reed Organ\", 21),\n+\t\tACOUSTIC_GUITAR_NYLON(\"Acoustic Guitar\", 25),\n+\t\tACOUSTIC_GUITAR_STEEL(\"Acoustic Guitar Steel\", 26),\n+\t\tELECTRIC_GUITAR_JAZZ(\"Electric Guitar\", 27),\n+\t\tELECTRIC_GUITAR_CLEAN(\"Electric Guitar Clean\", 28),\n+\t\tELECTRIC_GUITAR_MUTED(\"Electric Guitar Muted\", 29),\n+\t\tOVERDRIVEN_GUITAR(\"Overdriven Guitar\", 30),\n+\t\tDISTORTION_GUITAR(\"Distortion Guitar\", 31),\n+\t\tGUITAR_HARMONICS(\"Guitar Harmonics\", 32),\n+\t\tACOUSTIC_BASS(\"Acoustic Bass\", 33),\n+\t\tELECTRIC_BASS_FINGER(\"Electric Bass Finger\", 34),\n+\t\tELECTRIC_BASS_PICK(\"Electric Bass Pick\", 35),\n+\t\tFRETLESS_BASS(\"Fretless Bass\", 36),\n+\t\tSLAP_BASS_1(\"Slap Bass 1\", 37),\n+\t\tSLAP_BASS_2(\"Slap Bass 2\", 38),\n+\t\tSYNTH_BASS_1(\"Synth Bass 1\", 39),\n+\t\tSYNTH_BASS_2(\"Synth Bass 2\", 40),\n+\t\tCONTRABASS(\"Contrabass\", 44),\n+\t\tTREMOLO_STRINGS(\"Tremolo Strings\", 45),\n+\t\tPIZZICATO_STRINGS(\"Pizzicato\", 46),\n+\t\tORCHESTRAL_HARP(\"Orchestral Harp\", 47),\n+\t\tTIMPANI(\"Timpani\", 48),\n+\t\tSTRING_ENSEMBLE_1(\"Strings\", 49),\n+\t\tSTRING_ENSEMBLE_2(\"Slow Strings\", 50),\n+\t\tSYNTH_STRINGS_1(\"Synth Strings 1\", 51),\n+\t\tSYNTH_STRINGS_2(\"Synth Strings 2\", 52),\n+\t\tVOICE_AAHS(\"Choir Aahs\", 53),\n+\t\tVOICE_OOHS(\"Voice Oohs\", 54),\n+\t\tSYNTH_VOICE(\"Synth Voice\", 55),\n+\t\tORCHESTRA_HIT(\"Orchestra Hit\", 56),\n+\t\tTRUMPET(\"Trumpet\", 57),\n+\t\tTROMBONE(\"Trombone\", 58),\n+\t\tTUBA(\"Tuba\", 59),\n+\t\tFRENCH_HORN(\"French Horn\", 61),\n+\t\tBRASS_SECTION(\"Brass Section\", 62),\n+\t\tSYNTH_BRASS_1(\"Synth Brass 1\", 63),\n+\t\tSYNTH_BRASS_2(\"Synth Brass 2\", 64),\n+\t\tSOPRANO_SAX(\"Soprano Sax\", 65),\n+\t\tALTO_SAX(\"Alto Sax\", 66),\n+\t\tTENOR_SAX(\"Tenor Sax\", 67),\n+\t\tBARITONE_SAX(\"Baritone Sax\", 68),\n+\t\tOBOE(\"Oboe\", 69),\n+\t\tENGLISH_HORN(\"English Horn\", 70),\n+\t\tBASSOON(\"Bassoon\", 71),\n+\t\tCLARINET(\"Clarinet\", 72),\n+\t\tLEAD_1_SQUARE(\"Lead Square Wave\", 81),\n+\t\tLEAD_2_SAWTOOTH(\"Lead Sawtooth Wave\", 82),\n+\t\tLEAD_3_CALLIOPE(\"Lead Calliope\", 83),\n+\t\tLEAD_4_CHIFF(\"Lead Chiffer\", 84),\n+\t\tLEAD_5_CHARANG(\"Lead Charang\", 85),\n+\t\tLEAD_6_VOICE(\"Lead Voice Solo\", 86),\n+\t\tLEAD_7_FIFTHS(\"Lead Fifths\", 87),\n+\t\tLEAD_8_BASS_AND_LEAD(\"Lead Bass and Lead\", 88),\n+\t\tPAD_1_NEW_AGE(\"Pad New Age Fantasia\", 89),\n+\t\tPAD_2_WARM(\"Pad Warm\", 90),\n+\t\tPAD_3_POLYSYNTH(\"Pad Polysinth\", 91),\n+\t\tPAD_4_CHOIR(\"Pad Choir Space Voice\", 92),\n+\t\tPAD_5_BOWED(\"Pad Bowed Glass\", 93),\n+\t\tPAD_6_METALLIC(\"Pad Metallic Pro\", 94),\n+\t\tPAD_7_HALO(\"Pad Halo\", 95),\n+\t\tPAD_8_SWEEP(\"Pad Sweep\", 96),\n+\t\tFX_1_RAIN(\"FX Rain\", 97),\n+\t\tFX_2_SOUNDTRACK(\"FX Soundtrack\", 98),\n+\t\tFX_3_CRYSTAL(\"FX Crystal\", 99),\n+\t\tFX_4_ATMOSPHERE(\"FX Atmosphere\", 100),\n+\t\tFX_5_BRIGHTNESS(\"FX Brightness\", 101),\n+\t\tFX_6_GOBLINS(\"FX Goblins\", 102),\n+\t\tFX_7_ECHOES(\"FX 7 Echoes, Drops\", 103),\n+\t\tFX_8_SCI_FI(\"FX Sci-fi\", 104),\n+\t\tSITAR(\"Sitar\", 105),\n+\t\tBANJO(\"Banjo\", 106),\n+\t\tSHAMISEN(\"Shamisen\", 107),\n+\t\tKOTO(\"Koto\", 108),\n+\t\tKALIMBA(\"Kalimba\", 109),\n+\t\tBAGPIPE(\"Bagpipe\", 110),\n+\t\tSHANAI(\"Shanai\", 112),\n+\t\tTINKLE_BELL(\"Tinkle bell\", 113);\n+\n+\t\tprivate String name;\n+\t\tprivate int value;\n+\t\tPickableMusicalInstrument(String name, int value) {\n+\t\t\tthis.name = name;\n+\t\t\tthis.value = value;\n+\t\t}\n+\n+\t\tpublic static int getIndexByValue(int value) {\n+\t\t\tint index = 0;\n+\t\t\tfor (PickableMusicalInstrument instrument : PickableMusicalInstrument.values()) {\n+\t\t\t\tif (instrument.getValue() == value) {\n+\t\t\t\t\treturn index;\n+\t\t\t\t}\n+\t\t\t\tindex++;\n+\t\t\t}\n+\t\t\treturn -1;\n+\t\t}\n+\n+\t\t@Override\n+\t\tpublic String getName() {\n+\t\t\treturn name;\n+\t\t}\n+\n+\t\tpublic int getValue() {\n+\t\t\treturn value;\n+\t\t}\n+\n+\t\t@Override\n+\t\tpublic void setName(String name) {\n+\t\t\tthis.name = name;\n+\t\t}\n+\n+\t\tpublic void setValue(int value) {\n+\t\t\tthis.value = value;\n+\t\t}\n+\t}\n+\n+\tpublic int instrumentSelection = PickableMusicalInstrument.values()[0].getValue();\n+\n+\t@Override\n+\tpublic int getViewResource() {\n+\t\treturn R.layout.brick_set_instrument;\n+\t}\n+\n+\tprotected int getSpinnerId() {\n+\t\treturn R.id.set_instrument_spinner;\n+\t}\n+\n+\t@Override\n+\tpublic View getView(Context context) {\n+\t\tsuper.getView(context);\n+\t\tList<Nameable> items = new ArrayList<>();\n+\n+\t\tfor (PickableMusicalInstrument instrument : PickableMusicalInstrument.values()) {\n+\t\t\titems.add(instrument);\n+\t\t}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzMzNTIxNw=="}, "originalCommit": {"oid": "2f37be1f9fbb6045e5e7091b21a940002d23a60a"}, "originalPosition": 190}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxOTE5MDEyOnYy", "diffSide": "RIGHT", "path": "catroid/src/main/java/org/catrobat/catroid/content/bricks/SetInstrumentBrick.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wOFQwMDoyNjo0MVrOG9r-Gw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wOFQwMDoyNjo0MVrOG9r-Gw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzMzNjczMQ==", "bodyText": "since MusicalInstrument.getInstrumentFromProgram() is public static, please call it from the action.\nonce requested changes are implemented, no need to -1 anymore", "url": "https://github.com/Catrobat/Catroid/pull/3730#discussion_r467336731", "createdAt": "2020-08-08T00:26:41Z", "author": {"login": "ndrnour"}, "path": "catroid/src/main/java/org/catrobat/catroid/content/bricks/SetInstrumentBrick.java", "diffHunk": "@@ -0,0 +1,220 @@\n+/*\n+ * Catroid: An on-device visual programming system for Android devices\n+ * Copyright (C) 2010-2020 The Catrobat Team\n+ * (<http://developer.catrobat.org/credits>)\n+ *\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU Affero General Public License as\n+ * published by the Free Software Foundation, either version 3 of the\n+ * License, or (at your option) any later version.\n+ *\n+ * An additional term exception under section 7 of the GNU Affero\n+ * General Public License, version 3, is available at\n+ * http://developer.catrobat.org/license_additional_term\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU Affero General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Affero General Public License\n+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+\n+package org.catrobat.catroid.content.bricks;\n+\n+import android.content.Context;\n+import android.view.View;\n+\n+import org.catrobat.catroid.R;\n+import org.catrobat.catroid.common.Nameable;\n+import org.catrobat.catroid.content.Sprite;\n+import org.catrobat.catroid.content.actions.ScriptSequenceAction;\n+import org.catrobat.catroid.content.bricks.brickspinner.BrickSpinner;\n+import org.catrobat.catroid.pocketmusic.note.MusicalInstrument;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+import androidx.annotation.Nullable;\n+\n+public class SetInstrumentBrick extends BrickBaseType {\n+\n+\tpublic enum PickableMusicalInstrument implements Nameable {\n+\t\tACOUSTIC_GRAND_PIANO(\"Acoustic Grand Piano\", 1),\n+\t\tBRIGHT_ACOUSTIC_PIANO(\"Bright Acoustic Piano\", 2),\n+\t\tELECTRIC_GRAND_PIANO(\"Electric Grand Piano\", 3),\n+\t\tHONKY_TONK_PIANO(\"Honky-tonk Piano\", 4),\n+\t\tELECTRIC_PIANO_1(\"Rhodes Piano\", 5),\n+\t\tELECTRIC_PIANO_2(\"Chorused Piano\", 6),\n+\t\tHARPSICHORD(\"Harpsichord\", 7),\n+\t\tCLAVI(\"Clavinet\", 8),\n+\t\tCELESTA(\"Celesta\", 9),\n+\t\tDRAWBAR_ORGAN(\"Drawbar Organ\", 17),\n+\t\tPERCUSSIVE_ORGAN(\"Percussive Organ\", 18),\n+\t\tROCK_ORGAN(\"Rock Organ\", 19),\n+\t\tCHURCH_ORGAN(\"Church Organ\", 20),\n+\t\tREED_ORGAN(\"Reed Organ\", 21),\n+\t\tACOUSTIC_GUITAR_NYLON(\"Acoustic Guitar\", 25),\n+\t\tACOUSTIC_GUITAR_STEEL(\"Acoustic Guitar Steel\", 26),\n+\t\tELECTRIC_GUITAR_JAZZ(\"Electric Guitar\", 27),\n+\t\tELECTRIC_GUITAR_CLEAN(\"Electric Guitar Clean\", 28),\n+\t\tELECTRIC_GUITAR_MUTED(\"Electric Guitar Muted\", 29),\n+\t\tOVERDRIVEN_GUITAR(\"Overdriven Guitar\", 30),\n+\t\tDISTORTION_GUITAR(\"Distortion Guitar\", 31),\n+\t\tGUITAR_HARMONICS(\"Guitar Harmonics\", 32),\n+\t\tACOUSTIC_BASS(\"Acoustic Bass\", 33),\n+\t\tELECTRIC_BASS_FINGER(\"Electric Bass Finger\", 34),\n+\t\tELECTRIC_BASS_PICK(\"Electric Bass Pick\", 35),\n+\t\tFRETLESS_BASS(\"Fretless Bass\", 36),\n+\t\tSLAP_BASS_1(\"Slap Bass 1\", 37),\n+\t\tSLAP_BASS_2(\"Slap Bass 2\", 38),\n+\t\tSYNTH_BASS_1(\"Synth Bass 1\", 39),\n+\t\tSYNTH_BASS_2(\"Synth Bass 2\", 40),\n+\t\tCONTRABASS(\"Contrabass\", 44),\n+\t\tTREMOLO_STRINGS(\"Tremolo Strings\", 45),\n+\t\tPIZZICATO_STRINGS(\"Pizzicato\", 46),\n+\t\tORCHESTRAL_HARP(\"Orchestral Harp\", 47),\n+\t\tTIMPANI(\"Timpani\", 48),\n+\t\tSTRING_ENSEMBLE_1(\"Strings\", 49),\n+\t\tSTRING_ENSEMBLE_2(\"Slow Strings\", 50),\n+\t\tSYNTH_STRINGS_1(\"Synth Strings 1\", 51),\n+\t\tSYNTH_STRINGS_2(\"Synth Strings 2\", 52),\n+\t\tVOICE_AAHS(\"Choir Aahs\", 53),\n+\t\tVOICE_OOHS(\"Voice Oohs\", 54),\n+\t\tSYNTH_VOICE(\"Synth Voice\", 55),\n+\t\tORCHESTRA_HIT(\"Orchestra Hit\", 56),\n+\t\tTRUMPET(\"Trumpet\", 57),\n+\t\tTROMBONE(\"Trombone\", 58),\n+\t\tTUBA(\"Tuba\", 59),\n+\t\tFRENCH_HORN(\"French Horn\", 61),\n+\t\tBRASS_SECTION(\"Brass Section\", 62),\n+\t\tSYNTH_BRASS_1(\"Synth Brass 1\", 63),\n+\t\tSYNTH_BRASS_2(\"Synth Brass 2\", 64),\n+\t\tSOPRANO_SAX(\"Soprano Sax\", 65),\n+\t\tALTO_SAX(\"Alto Sax\", 66),\n+\t\tTENOR_SAX(\"Tenor Sax\", 67),\n+\t\tBARITONE_SAX(\"Baritone Sax\", 68),\n+\t\tOBOE(\"Oboe\", 69),\n+\t\tENGLISH_HORN(\"English Horn\", 70),\n+\t\tBASSOON(\"Bassoon\", 71),\n+\t\tCLARINET(\"Clarinet\", 72),\n+\t\tLEAD_1_SQUARE(\"Lead Square Wave\", 81),\n+\t\tLEAD_2_SAWTOOTH(\"Lead Sawtooth Wave\", 82),\n+\t\tLEAD_3_CALLIOPE(\"Lead Calliope\", 83),\n+\t\tLEAD_4_CHIFF(\"Lead Chiffer\", 84),\n+\t\tLEAD_5_CHARANG(\"Lead Charang\", 85),\n+\t\tLEAD_6_VOICE(\"Lead Voice Solo\", 86),\n+\t\tLEAD_7_FIFTHS(\"Lead Fifths\", 87),\n+\t\tLEAD_8_BASS_AND_LEAD(\"Lead Bass and Lead\", 88),\n+\t\tPAD_1_NEW_AGE(\"Pad New Age Fantasia\", 89),\n+\t\tPAD_2_WARM(\"Pad Warm\", 90),\n+\t\tPAD_3_POLYSYNTH(\"Pad Polysinth\", 91),\n+\t\tPAD_4_CHOIR(\"Pad Choir Space Voice\", 92),\n+\t\tPAD_5_BOWED(\"Pad Bowed Glass\", 93),\n+\t\tPAD_6_METALLIC(\"Pad Metallic Pro\", 94),\n+\t\tPAD_7_HALO(\"Pad Halo\", 95),\n+\t\tPAD_8_SWEEP(\"Pad Sweep\", 96),\n+\t\tFX_1_RAIN(\"FX Rain\", 97),\n+\t\tFX_2_SOUNDTRACK(\"FX Soundtrack\", 98),\n+\t\tFX_3_CRYSTAL(\"FX Crystal\", 99),\n+\t\tFX_4_ATMOSPHERE(\"FX Atmosphere\", 100),\n+\t\tFX_5_BRIGHTNESS(\"FX Brightness\", 101),\n+\t\tFX_6_GOBLINS(\"FX Goblins\", 102),\n+\t\tFX_7_ECHOES(\"FX 7 Echoes, Drops\", 103),\n+\t\tFX_8_SCI_FI(\"FX Sci-fi\", 104),\n+\t\tSITAR(\"Sitar\", 105),\n+\t\tBANJO(\"Banjo\", 106),\n+\t\tSHAMISEN(\"Shamisen\", 107),\n+\t\tKOTO(\"Koto\", 108),\n+\t\tKALIMBA(\"Kalimba\", 109),\n+\t\tBAGPIPE(\"Bagpipe\", 110),\n+\t\tSHANAI(\"Shanai\", 112),\n+\t\tTINKLE_BELL(\"Tinkle bell\", 113);\n+\n+\t\tprivate String name;\n+\t\tprivate int value;\n+\t\tPickableMusicalInstrument(String name, int value) {\n+\t\t\tthis.name = name;\n+\t\t\tthis.value = value;\n+\t\t}\n+\n+\t\tpublic static int getIndexByValue(int value) {\n+\t\t\tint index = 0;\n+\t\t\tfor (PickableMusicalInstrument instrument : PickableMusicalInstrument.values()) {\n+\t\t\t\tif (instrument.getValue() == value) {\n+\t\t\t\t\treturn index;\n+\t\t\t\t}\n+\t\t\t\tindex++;\n+\t\t\t}\n+\t\t\treturn -1;\n+\t\t}\n+\n+\t\t@Override\n+\t\tpublic String getName() {\n+\t\t\treturn name;\n+\t\t}\n+\n+\t\tpublic int getValue() {\n+\t\t\treturn value;\n+\t\t}\n+\n+\t\t@Override\n+\t\tpublic void setName(String name) {\n+\t\t\tthis.name = name;\n+\t\t}\n+\n+\t\tpublic void setValue(int value) {\n+\t\t\tthis.value = value;\n+\t\t}\n+\t}\n+\n+\tpublic int instrumentSelection = PickableMusicalInstrument.values()[0].getValue();\n+\n+\t@Override\n+\tpublic int getViewResource() {\n+\t\treturn R.layout.brick_set_instrument;\n+\t}\n+\n+\tprotected int getSpinnerId() {\n+\t\treturn R.id.set_instrument_spinner;\n+\t}\n+\n+\t@Override\n+\tpublic View getView(Context context) {\n+\t\tsuper.getView(context);\n+\t\tList<Nameable> items = new ArrayList<>();\n+\n+\t\tfor (PickableMusicalInstrument instrument : PickableMusicalInstrument.values()) {\n+\t\t\titems.add(instrument);\n+\t\t}\n+\n+\t\tBrickSpinner<PickableMusicalInstrument> spinner = new BrickSpinner<>(R.id.set_instrument_spinner, view, items);\n+\t\tspinner.setSelection(PickableMusicalInstrument.getIndexByValue(instrumentSelection));\n+\t\tspinner.setOnItemSelectedListener(new BrickSpinner.OnItemSelectedListener<PickableMusicalInstrument>() {\n+\n+\t\t\t@Override\n+\t\t\tpublic void onStringOptionSelected(Integer spinnerId, String string) {\n+\t\t\t}\n+\n+\t\t\t@Override\n+\t\t\tpublic void onItemSelected(Integer spinnerId, @Nullable PickableMusicalInstrument item) {\n+\t\t\t\tif (item != null) {\n+\t\t\t\t\tinstrumentSelection = item.getValue();\n+\t\t\t\t}\n+\t\t\t}\n+\n+\t\t\t@Override\n+\t\t\tpublic void onNewOptionSelected(Integer spinnerId) {\n+\t\t\t}\n+\t\t});\n+\t\treturn view;\n+\t}\n+\n+\t@Override\n+\tpublic void addActionToSequence(Sprite sprite, ScriptSequenceAction sequence) {\n+\t\tMusicalInstrument instrument =\n+\t\t\t\tMusicalInstrument.getInstrumentFromProgram(instrumentSelection - 1);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2f37be1f9fbb6045e5e7091b21a940002d23a60a"}, "originalPosition": 217}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxOTIwMDk2OnYy", "diffSide": "RIGHT", "path": "catroid/src/main/java/org/catrobat/catroid/pocketmusic/note/MusicalInstrument.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wOFQwMDozNzoyM1rOG9sD5w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wOFQwMDozNzoyM1rOG9sD5w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzMzODIxNQ==", "bodyText": "I'm confused, why?", "url": "https://github.com/Catrobat/Catroid/pull/3730#discussion_r467338215", "createdAt": "2020-08-08T00:37:23Z", "author": {"login": "ndrnour"}, "path": "catroid/src/main/java/org/catrobat/catroid/pocketmusic/note/MusicalInstrument.java", "diffHunk": "@@ -171,6 +171,6 @@ public static MusicalInstrument getInstrumentFromProgram(int program) {\n \t}\n \n \tpublic int getProgram() {\n-\t\treturn program;\n+\t\treturn program - 1;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2f37be1f9fbb6045e5e7091b21a940002d23a60a"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzNjQ0NjIwOnYy", "diffSide": "RIGHT", "path": "catroid/src/main/java/org/catrobat/catroid/content/bricks/brickspinner/PickableMusicalInstrument.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxMjo1OTo0NlrOHAKYYQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxNDowMzowM1rOHANAEA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTkzMjEyOQ==", "bodyText": "you missed to add serialVersionUID attribute for this class, please just add this line\nprivate static final long serialVersionUID = 1L;", "url": "https://github.com/Catrobat/Catroid/pull/3730#discussion_r469932129", "createdAt": "2020-08-13T12:59:46Z", "author": {"login": "ndrnour"}, "path": "catroid/src/main/java/org/catrobat/catroid/content/bricks/brickspinner/PickableMusicalInstrument.java", "diffHunk": "@@ -0,0 +1,69 @@\n+/*\n+ * Catroid: An on-device visual programming system for Android devices\n+ * Copyright (C) 2010-2020 The Catrobat Team\n+ * (<http://developer.catrobat.org/credits>)\n+ *\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU Affero General Public License as\n+ * published by the Free Software Foundation, either version 3 of the\n+ * License, or (at your option) any later version.\n+ *\n+ * An additional term exception under section 7 of the GNU Affero\n+ * General Public License, version 3, is available at\n+ * http://developer.catrobat.org/license_additional_term\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU Affero General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Affero General Public License\n+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+\n+package org.catrobat.catroid.content.bricks.brickspinner;\n+\n+import org.catrobat.catroid.common.Nameable;\n+import org.catrobat.catroid.utils.Utils;\n+\n+import java.io.Serializable;\n+\n+public class PickableMusicalInstrument implements Nameable, Serializable {\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "92bdc196693317db656f6bcfade407be8c6ca2aa"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTk3NTA1Ng==", "bodyText": "done, thanks for the review :)", "url": "https://github.com/Catrobat/Catroid/pull/3730#discussion_r469975056", "createdAt": "2020-08-13T14:03:03Z", "author": {"login": "Rawbat"}, "path": "catroid/src/main/java/org/catrobat/catroid/content/bricks/brickspinner/PickableMusicalInstrument.java", "diffHunk": "@@ -0,0 +1,69 @@\n+/*\n+ * Catroid: An on-device visual programming system for Android devices\n+ * Copyright (C) 2010-2020 The Catrobat Team\n+ * (<http://developer.catrobat.org/credits>)\n+ *\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU Affero General Public License as\n+ * published by the Free Software Foundation, either version 3 of the\n+ * License, or (at your option) any later version.\n+ *\n+ * An additional term exception under section 7 of the GNU Affero\n+ * General Public License, version 3, is available at\n+ * http://developer.catrobat.org/license_additional_term\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU Affero General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Affero General Public License\n+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+\n+package org.catrobat.catroid.content.bricks.brickspinner;\n+\n+import org.catrobat.catroid.common.Nameable;\n+import org.catrobat.catroid.utils.Utils;\n+\n+import java.io.Serializable;\n+\n+public class PickableMusicalInstrument implements Nameable, Serializable {\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTkzMjEyOQ=="}, "originalCommit": {"oid": "92bdc196693317db656f6bcfade407be8c6ca2aa"}, "originalPosition": 32}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3826, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}