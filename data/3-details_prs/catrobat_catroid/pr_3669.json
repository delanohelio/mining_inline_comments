{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ5NTY4NTI4", "number": 3669, "title": "CATROID-541 ParameterizedTestBrick", "bodyText": "new ListSelectorFragment to enable selection of List of Lists\nnew ParameterizedBrick & ParameterizedEndBrick with corresponding Actions\nmoved functionality of rename/delete of variables & lists\nrefactor AssertActions to Kotlin\nadded CatrobatLanguageTests\nPlease enter a short description of your pull request and add a reference to the Jira ticket.\nYour checklist for this pull request\nPlease review the contributing guidelines and wiki pages of this repository.\n\n Include the name of the Jira ticket in the PR\u2019s title\n Include a summary of the changes plus the relevant context\n Choose the proper base branch (develop)\n Confirm that the changes follow the project\u2019s coding guidelines\n Verify that the changes generate no compiler or linter warnings\n Perform a self-review of the changes\n Verify to commit no other files than the intentionally changed ones\n Include reasonable and readable tests verifying the added or changed behavior\n Confirm that new and existing unit tests pass locally\n Check that the commits\u2019 message style matches the project\u2019s guideline\n Stick to the project\u2019s gitflow workflow\n Verify that your changes do not have any conflicts with the base branch\n After the PR, verify that all CI checks have passed\n Post a message in the catroid-stage or catroid-ide Slack channel and ask for a code reviewer", "createdAt": "2020-07-15T15:44:29Z", "url": "https://github.com/Catrobat/Catroid/pull/3669", "merged": true, "mergeCommit": {"oid": "abfc38c3b41316c03a7cd7e8960a38b8e888c35c"}, "closed": true, "closedAt": "2020-07-27T15:49:11Z", "author": {"login": "Koell"}, "timelineItems": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc1NSATABqjM1NDkzMTAwOTI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc4w_VqABqjM1ODcyNzYwODY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "403dfbd090957f643cf92c8ac4b05429caff0fef", "author": {"user": {"login": "Koell", "name": null}}, "url": "https://github.com/Catrobat/Catroid/commit/403dfbd090957f643cf92c8ac4b05429caff0fef", "committedDate": "2020-07-13T09:37:44Z", "message": "CATROID-541 ParameterizedTestBrick\n\nnew ListSelectorFragment to enable selection of List of Lists\nnew ParameterizedBrick & ParameterizedEndBrick with corresponding Actions\nmoved functionality of rename/delete of variables & lists\nadded CatrobatLanguageTests"}, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU1MzgwNDQy", "url": "https://github.com/Catrobat/Catroid/pull/3669#pullrequestreview-455380442", "createdAt": "2020-07-26T17:06:55Z", "commit": null, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNlQxNzowNjo1NlrOG3NyRA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNlQxNzowNjo1NlrOG3NyRA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU1MDcyNA==", "bodyText": "parameterizedData can't hold a null reference, ? isn't needed", "url": "https://github.com/Catrobat/Catroid/pull/3669#discussion_r460550724", "createdAt": "2020-07-26T17:06:56Z", "author": {"login": "maxf24"}, "path": "catroid/src/main/java/org/catrobat/catroid/content/bricks/ParameterizedBrick.kt", "diffHunk": "@@ -0,0 +1,197 @@\n+/*\n+ * Catroid: An on-device visual programming system for Android devices\n+ * Copyright (C) 2010-2018 The Catrobat Team\n+ * (<http://developer.catrobat.org/credits>)\n+ *\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU Affero General Public License as\n+ * published by the Free Software Foundation, either version 3 of the\n+ * License, or (at your option) any later version.\n+ *\n+ * An additional term exception under section 7 of the GNU Affero\n+ * General Public License, version 3, is available at\n+ * http://developer.catrobat.org/license_additional_term\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU Affero General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Affero General Public License\n+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+package org.catrobat.catroid.content.bricks\n+\n+import android.widget.TextView\n+import com.thoughtworks.xstream.annotations.XStreamOmitField\n+import org.catrobat.catroid.ProjectManager\n+import org.catrobat.catroid.R\n+import org.catrobat.catroid.common.ParameterizedData\n+import org.catrobat.catroid.content.ActionFactory\n+import org.catrobat.catroid.content.Sprite\n+import org.catrobat.catroid.content.actions.ScriptSequenceAction\n+import org.catrobat.catroid.content.bricks.Brick.ResourcesSet\n+import org.catrobat.catroid.formulaeditor.UserList\n+import org.catrobat.catroid.formulaeditor.UserVariable\n+\n+class ParameterizedBrick : ListSelectorBrick(), CompositeBrick {\n+    private var loopBricks = mutableListOf<Brick>()\n+    private var endBrick = ParameterizedEndBrick(this)\n+\n+    @Transient\n+    @XStreamOmitField\n+    var parameterizedData: ParameterizedData = ParameterizedData()\n+\n+    override val selectorId: Int\n+        get() = R.id.brick_param_list_of_list_text\n+\n+    override fun hasSecondaryList(): Boolean = false\n+\n+    override fun getNestedBricks(): List<Brick> = loopBricks\n+\n+    override fun getSecondaryNestedBricks(): List<Brick>? = null\n+\n+    fun addBrick(brick: Brick): Boolean = loopBricks.add(brick)\n+\n+    override fun updateSelectorText() {\n+        super.updateSelectorText()\n+        val listSize = userLists.size\n+        val firstLabel = view.findViewById<TextView>(R.id.brick_param_first_label)\n+        firstLabel.text = view.resources.getQuantityString(\n+            R.plurals.brick_parameterized_foreach_plural,\n+            listSize, listSize\n+        )\n+        val secondLabel = view.findViewById<TextView>(R.id.brick_param_second_label)\n+        secondLabel.text = view.resources.getQuantityString(\n+            R.plurals.brick_parameterized_stored_plural,\n+            listSize, listSize\n+        )\n+    }\n+\n+    override fun setCommentedOut(commentedOut: Boolean) {\n+        super.setCommentedOut(commentedOut)\n+        for (brick in loopBricks) {\n+            brick.isCommentedOut = commentedOut\n+        }\n+        endBrick.isCommentedOut = commentedOut\n+    }\n+\n+    @Throws(CloneNotSupportedException::class)\n+    override fun clone(): Brick {\n+        val clone = super.clone() as ParameterizedBrick\n+        clone.endBrick = ParameterizedEndBrick(clone)\n+        clone.loopBricks = mutableListOf()\n+        clone.parameterizedData = ParameterizedData()\n+        for (brick in loopBricks) {\n+            clone.addBrick(brick.clone())\n+        }\n+        return clone\n+    }\n+\n+    override fun consistsOfMultipleParts(): Boolean = true\n+\n+    override fun getAllParts(): List<Brick> {\n+        val bricks = mutableListOf<Brick>()\n+        bricks.add(this)\n+        bricks.add(endBrick)\n+        return bricks\n+    }\n+\n+    override fun addToFlatList(bricks: MutableList<Brick>) {\n+        super.addToFlatList(bricks)\n+        for (brick in loopBricks) {\n+            brick.addToFlatList(bricks)\n+        }\n+        bricks.add(endBrick)\n+    }\n+\n+    override fun setParent(parent: Brick) {\n+        super.setParent(parent)\n+        for (brick in loopBricks) {\n+            brick.parent = this\n+        }\n+        endBrick.parent = this\n+    }\n+\n+    override fun getDragAndDropTargetList(): List<Brick> = loopBricks\n+\n+    override fun removeChild(brick: Brick): Boolean {\n+        if (loopBricks.remove(brick)) {\n+            return true\n+        }\n+\n+        for (childBrick in loopBricks) {\n+            if (childBrick.removeChild(brick)) {\n+                return true\n+            }\n+        }\n+        return false\n+    }\n+\n+    override fun getViewResource(): Int = R.layout.brick_parameterized_input\n+\n+    override fun addActionToSequence(sprite: Sprite, sequence: ScriptSequenceAction) {\n+        val repeatSequence =\n+            ActionFactory.eventSequence(sequence.script) as ScriptSequenceAction\n+        loopBricks.filterNot { brick -> brick.isCommentedOut }.forEach {\n+            it.addActionToSequence(sprite, repeatSequence)\n+        }\n+        endBrick.addActionToSequence(sprite, repeatSequence)\n+        parameterizedData?.reset()", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 140}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9708685b7757186853e29c82d0f08b0f108f1d85", "author": {"user": {"login": "Koell", "name": null}}, "url": "https://github.com/Catrobat/Catroid/commit/9708685b7757186853e29c82d0f08b0f108f1d85", "committedDate": "2020-07-26T17:50:14Z", "message": "CATROID-541 ParameterizedTestBrick\n\nnew ListSelectorFragment to enable selection of List of Lists\nnew ParameterizedBrick & ParameterizedEndBrick with corresponding Actions\nmoved functionality of rename/delete of variables & lists\nrefactor AssertActions to Kotlin\nadded CatrobatLanguageTests"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "9708685b7757186853e29c82d0f08b0f108f1d85", "author": {"user": {"login": "Koell", "name": null}}, "url": "https://github.com/Catrobat/Catroid/commit/9708685b7757186853e29c82d0f08b0f108f1d85", "committedDate": "2020-07-26T17:50:14Z", "message": "CATROID-541 ParameterizedTestBrick\n\nnew ListSelectorFragment to enable selection of List of Lists\nnew ParameterizedBrick & ParameterizedEndBrick with corresponding Actions\nmoved functionality of rename/delete of variables & lists\nrefactor AssertActions to Kotlin\nadded CatrobatLanguageTests"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1844, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}