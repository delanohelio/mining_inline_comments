{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg1NDUzNjE3", "number": 3510, "title": "CATROID-404 Insert existing user list as parameter of list functions", "bodyText": "Refactor/Move tests out of FormulaEditorFunctionListTest\nAdd UI espresso test to check if the last user list is inserted correctly.\nAdd Unit test to check if Dialog pops up when there is no current user list.\n\nhttps://jira.catrob.at/browse/CATROID-404\nYour checklist for this pull request\nPlease review the contributing guidelines and wiki pages of this repository.\n\n Include the name of the Jira ticket in the PR\u2019s title\n Include a summary of the changes plus the relevant context\n Choose the proper base branch (develop)\n Confirm that the changes follow the project\u2019s coding guidelines\n Verify that the changes generate no compiler or linter warnings\n Perform a self-review of the changes\n Verify to commit no other files than the intentionally changed ones\n Include reasonable and readable tests verifying the added or changed behavior\n Confirm that new and existing unit tests pass locally\n Check that the commits\u2019 message style matches the project\u2019s guideline\n Stick to the project\u2019s gitflow workflow\n Verify that your changes do not have any conflicts with the base branch\n After the PR, verify that all CI checks have passed\n Post a message in the catroid-stage or catroid-ide Slack channel and ask for a code reviewer", "createdAt": "2020-03-09T08:45:00Z", "url": "https://github.com/Catrobat/Catroid/pull/3510", "merged": true, "mergeCommit": {"oid": "7b2105e600e494e105dbed0691331b449fb447ba"}, "closed": true, "closedAt": "2020-03-28T13:44:25Z", "author": {"login": "mstoeg"}, "timelineItems": {"totalCount": 15, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcL6kF_ABqjMxMDk4MTY3ODQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcSFiPvgFqTM4MzMxNDMwNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc1MTIxNjcz", "url": "https://github.com/Catrobat/Catroid/pull/3510#pullrequestreview-375121673", "createdAt": "2020-03-16T11:27:20Z", "commit": null, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxMToyNzoyMFrOF2vwmg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxNToyOTozOFrOF25kHw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mjk0OTkxNA==", "bodyText": "Please try with dagger and dependency injection.", "url": "https://github.com/Catrobat/Catroid/pull/3510#discussion_r392949914", "createdAt": "2020-03-16T11:27:20Z", "author": {"login": "gPathpp"}, "path": "catroid/src/main/java/org/catrobat/catroid/ui/recyclerview/fragment/CategoryListFragment.java", "diffHunk": "@@ -238,47 +243,115 @@ public void onItemClick(CategoryListItem item) {\n \t\t\t\tshowSelectSpriteDialog();\n \t\t\t\tbreak;\n \t\t\tcase CategoryListRVAdapter.DEFAULT:\n-\t\t\t\t((FormulaEditorFragment) getFragmentManager()\n-\t\t\t\t\t\t.findFragmentByTag(FormulaEditorFragment.FORMULA_EDITOR_FRAGMENT_TAG))\n-\t\t\t\t\t\t.addResourceToActiveFormula(item.nameResId);\n-\t\t\t\tgetActivity().onBackPressed();\n+\t\t\t\tif (LIST_FUNCTIONS.contains(item.nameResId)) {\n+\t\t\t\t\tonUserListFunctionSelected(item);\n+\t\t\t\t} else {\n+\t\t\t\t\taddResourceToActiveFormulaInFormulaEditor(item);\n+\t\t\t\t\tgetActivity().onBackPressed();\n+\t\t\t\t}\n \t\t\t\tbreak;\n \t\t}\n \t}\n \n+\tprivate FormulaEditorFragment addResourceToActiveFormulaInFormulaEditor(CategoryListItem categoryListItem) {\n+\t\tFormulaEditorFragment formulaEditorFragment = ((FormulaEditorFragment) getFragmentManager()\n+\t\t\t\t.findFragmentByTag(FormulaEditorFragment.FORMULA_EDITOR_FRAGMENT_TAG));\n+\t\tformulaEditorFragment.addResourceToActiveFormula(categoryListItem.nameResId);\n+\t\treturn formulaEditorFragment;\n+\t}\n+\n+\tprivate void addResourceToActiveFormulaInFormulaEditor(CategoryListItem categoryListItem, UserList lastUserList) {\n+\t\taddResourceToActiveFormulaInFormulaEditor(categoryListItem).addUserListToActiveFormula(lastUserList.getName());\n+\t\tgetActivity().onBackPressed();\n+\t}\n+\n+\tprivate void onUserListFunctionSelected(CategoryListItem item) {\n+\t\tFragmentActivity activity = getActivity();\n+\t\tTextInputDialog.Builder builder = new TextInputDialog.Builder(activity);\n+\t\tfinal List<UserList> projectUserList =\n+\t\t\t\tProjectManager.getInstance().getCurrentProject().getUserLists();", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 76}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mjk1MTM2MA==", "bodyText": "PLEASE_EXPLAIN: Why are these tests not necessary anymore?", "url": "https://github.com/Catrobat/Catroid/pull/3510#discussion_r392951360", "createdAt": "2020-03-16T11:30:12Z", "author": {"login": "gPathpp"}, "path": "catroid/src/androidTest/java/org/catrobat/catroid/uiespresso/formulaeditor/FormulaEditorFunctionListTest.java", "diffHunk": "@@ -92,12 +92,6 @@\n \t\t\t\t{R.string.formula_editor_function_join, R.string.formula_editor_function_join_parameter, \"join\"},\n \t\t\t\t{R.string.formula_editor_function_regex, R.string.formula_editor_function_regex_parameter,\n \t\t\t\t\t\t\"regular expression\"},\n-\t\t\t\t{R.string.formula_editor_function_number_of_items, R.string", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mjk1MTg1Mg==", "bodyText": "Great! That's way more readable.", "url": "https://github.com/Catrobat/Catroid/pull/3510#discussion_r392951852", "createdAt": "2020-03-16T11:31:09Z", "author": {"login": "gPathpp"}, "path": "catroid/src/main/java/org/catrobat/catroid/content/bricks/UserListBrick.java", "diffHunk": "@@ -105,44 +104,31 @@ public void onNewOptionSelected() {\n \n \t\tbuilder.setHint(activity.getString(R.string.data_label))\n \t\t\t\t.setTextWatcher(new NewItemTextWatcher<>(spinner.getItems()))\n-\t\t\t\t.setPositiveButton(activity.getString(R.string.ok), new TextInputDialog.OnClickListener() {\n-\t\t\t\t\t@Override\n-\t\t\t\t\tpublic void onPositiveButtonClick(DialogInterface dialog, String textInput) {\n-\t\t\t\t\t\tUserList userList = new UserList(textInput);\n-\n-\t\t\t\t\t\tRadioButton addToProjectListsRadioButton = ((Dialog) dialog).findViewById(R.id.global);\n-\t\t\t\t\t\tboolean addToProjectLists = addToProjectListsRadioButton.isChecked();\n-\n-\t\t\t\t\t\tif (addToProjectLists) {\n-\t\t\t\t\t\t\tcurrentProject.addUserList(userList);\n-\t\t\t\t\t\t} else {\n-\t\t\t\t\t\t\tcurrentSprite.addUserList(userList);\n-\t\t\t\t\t\t}\n-\t\t\t\t\t\tspinner.add(userList);\n-\t\t\t\t\t\tspinner.setSelection(userList);\n-\n-\t\t\t\t\t\tScriptFragment parentFragment = (ScriptFragment) activity\n-\t\t\t\t\t\t\t\t.getSupportFragmentManager().findFragmentByTag(ScriptFragment.TAG);\n-\t\t\t\t\t\tif (parentFragment != null) {\n-\t\t\t\t\t\t\tparentFragment.notifyDataSetChanged();\n-\t\t\t\t\t\t}\n+\t\t\t\t.setPositiveButton(activity.getString(R.string.ok), (TextInputDialog.OnClickListener) (dialog, textInput) -> {\n+\t\t\t\t\tUserList userList = new UserList(textInput);\n+\n+\t\t\t\t\tRadioButton addToProjectListsRadioButton = ((Dialog) dialog).findViewById(R.id.global);\n+\t\t\t\t\tboolean addToProjectLists = addToProjectListsRadioButton.isChecked();\n+\n+\t\t\t\t\tif (addToProjectLists) {\n+\t\t\t\t\t\tcurrentProject.addUserList(userList);\n+\t\t\t\t\t} else {\n+\t\t\t\t\t\tcurrentSprite.addUserList(userList);\n+\t\t\t\t\t}\n+\t\t\t\t\tspinner.add(userList);\n+\t\t\t\t\tspinner.setSelection(userList);\n+\n+\t\t\t\t\tScriptFragment parentFragment = (ScriptFragment) activity\n+\t\t\t\t\t\t\t.getSupportFragmentManager().findFragmentByTag(ScriptFragment.TAG);\n+\t\t\t\t\tif (parentFragment != null) {\n+\t\t\t\t\t\tparentFragment.notifyDataSetChanged();\n \t\t\t\t\t}\n \t\t\t\t});\n \n \t\tbuilder.setTitle(R.string.formula_editor_list_dialog_title)\n \t\t\t\t.setView(R.layout.dialog_new_user_data)\n-\t\t\t\t.setNegativeButton(R.string.cancel, new DialogInterface.OnClickListener() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mjk1MjE1Ng==", "bodyText": "Nice!", "url": "https://github.com/Catrobat/Catroid/pull/3510#discussion_r392952156", "createdAt": "2020-03-16T11:31:44Z", "author": {"login": "gPathpp"}, "path": "catroid/src/main/java/org/catrobat/catroid/ui/fragment/FormulaEditorFragment.java", "diffHunk": "@@ -365,12 +364,7 @@ private void showNewStringDialog() {\n \n \t\tbuilder.setHint(getString(R.string.string_label))\n \t\t\t\t.setText(selectedFormulaText)\n-\t\t\t\t.setPositiveButton(getString(R.string.ok), new TextInputDialog.OnClickListener() {\n-\t\t\t\t\t@Override\n-\t\t\t\t\tpublic void onPositiveButtonClick(DialogInterface dialog, String textInput) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mjk1NTA5MQ==", "bodyText": "Please check if the fragment exists. It could lead to a null-pointer exception.", "url": "https://github.com/Catrobat/Catroid/pull/3510#discussion_r392955091", "createdAt": "2020-03-16T11:37:21Z", "author": {"login": "gPathpp"}, "path": "catroid/src/main/java/org/catrobat/catroid/ui/recyclerview/fragment/CategoryListFragment.java", "diffHunk": "@@ -238,47 +243,115 @@ public void onItemClick(CategoryListItem item) {\n \t\t\t\tshowSelectSpriteDialog();\n \t\t\t\tbreak;\n \t\t\tcase CategoryListRVAdapter.DEFAULT:\n-\t\t\t\t((FormulaEditorFragment) getFragmentManager()\n-\t\t\t\t\t\t.findFragmentByTag(FormulaEditorFragment.FORMULA_EDITOR_FRAGMENT_TAG))\n-\t\t\t\t\t\t.addResourceToActiveFormula(item.nameResId);\n-\t\t\t\tgetActivity().onBackPressed();\n+\t\t\t\tif (LIST_FUNCTIONS.contains(item.nameResId)) {\n+\t\t\t\t\tonUserListFunctionSelected(item);\n+\t\t\t\t} else {\n+\t\t\t\t\taddResourceToActiveFormulaInFormulaEditor(item);\n+\t\t\t\t\tgetActivity().onBackPressed();\n+\t\t\t\t}\n \t\t\t\tbreak;\n \t\t}\n \t}\n \n+\tprivate FormulaEditorFragment addResourceToActiveFormulaInFormulaEditor(CategoryListItem categoryListItem) {\n+\t\tFormulaEditorFragment formulaEditorFragment = ((FormulaEditorFragment) getFragmentManager()\n+\t\t\t\t.findFragmentByTag(FormulaEditorFragment.FORMULA_EDITOR_FRAGMENT_TAG));\n+\t\tformulaEditorFragment.addResourceToActiveFormula(categoryListItem.nameResId);", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mjk1NjU4Mw==", "bodyText": "Nice!", "url": "https://github.com/Catrobat/Catroid/pull/3510#discussion_r392956583", "createdAt": "2020-03-16T11:40:18Z", "author": {"login": "gPathpp"}, "path": "catroid/src/main/java/org/catrobat/catroid/ui/recyclerview/fragment/CategoryListFragment.java", "diffHunk": "@@ -447,11 +517,11 @@ private void initializeAdapter() {\n \n \t\tSensorHandler sensorHandler = SensorHandler.getInstance(getActivity());\n \t\tdeviceSensorItems.addAll(sensorHandler.accelerationAvailable() ? toCategoryListItems(SENSORS_ACCELERATION)\n-\t\t\t\t: Collections.<CategoryListItem>emptyList());\n+\t\t\t\t: Collections.emptyList());", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 224}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzExMDU1OQ==", "bodyText": "Please make a util method/class, or something else for this task. Because there are already two places where the user-list is added to the project.", "url": "https://github.com/Catrobat/Catroid/pull/3510#discussion_r393110559", "createdAt": "2020-03-16T15:29:38Z", "author": {"login": "gPathpp"}, "path": "catroid/src/main/java/org/catrobat/catroid/ui/recyclerview/fragment/CategoryListFragment.java", "diffHunk": "@@ -238,47 +243,115 @@ public void onItemClick(CategoryListItem item) {\n \t\t\t\tshowSelectSpriteDialog();\n \t\t\t\tbreak;\n \t\t\tcase CategoryListRVAdapter.DEFAULT:\n-\t\t\t\t((FormulaEditorFragment) getFragmentManager()\n-\t\t\t\t\t\t.findFragmentByTag(FormulaEditorFragment.FORMULA_EDITOR_FRAGMENT_TAG))\n-\t\t\t\t\t\t.addResourceToActiveFormula(item.nameResId);\n-\t\t\t\tgetActivity().onBackPressed();\n+\t\t\t\tif (LIST_FUNCTIONS.contains(item.nameResId)) {\n+\t\t\t\t\tonUserListFunctionSelected(item);\n+\t\t\t\t} else {\n+\t\t\t\t\taddResourceToActiveFormulaInFormulaEditor(item);\n+\t\t\t\t\tgetActivity().onBackPressed();\n+\t\t\t\t}\n \t\t\t\tbreak;\n \t\t}\n \t}\n \n+\tprivate FormulaEditorFragment addResourceToActiveFormulaInFormulaEditor(CategoryListItem categoryListItem) {\n+\t\tFormulaEditorFragment formulaEditorFragment = ((FormulaEditorFragment) getFragmentManager()\n+\t\t\t\t.findFragmentByTag(FormulaEditorFragment.FORMULA_EDITOR_FRAGMENT_TAG));\n+\t\tformulaEditorFragment.addResourceToActiveFormula(categoryListItem.nameResId);\n+\t\treturn formulaEditorFragment;\n+\t}\n+\n+\tprivate void addResourceToActiveFormulaInFormulaEditor(CategoryListItem categoryListItem, UserList lastUserList) {\n+\t\taddResourceToActiveFormulaInFormulaEditor(categoryListItem).addUserListToActiveFormula(lastUserList.getName());\n+\t\tgetActivity().onBackPressed();\n+\t}\n+\n+\tprivate void onUserListFunctionSelected(CategoryListItem item) {\n+\t\tFragmentActivity activity = getActivity();\n+\t\tTextInputDialog.Builder builder = new TextInputDialog.Builder(activity);\n+\t\tfinal List<UserList> projectUserList =\n+\t\t\t\tProjectManager.getInstance().getCurrentProject().getUserLists();\n+\t\tfinal List<UserList> spriteUserList =\n+\t\t\t\tProjectManager.getInstance().getCurrentSprite().getUserLists();\n+\t\tinsertLastUserListToActiveFormula(item, projectUserList, spriteUserList,\n+\t\t\t\tactivity, builder);\n+\t}\n+\n+\t@VisibleForTesting\n+\tpublic void insertLastUserListToActiveFormula(CategoryListItem categoryListItem,\n+\t\t\tList<UserList> projectUserList, List<UserList> spriteUserList,\n+\t\t\tFragmentActivity activity,\n+\t\t\tTextInputDialog.Builder builder) {\n+\n+\t\tif (spriteUserList.isEmpty() && projectUserList.isEmpty()) {\n+\t\t\tshowNewUserListDialog(categoryListItem, projectUserList, spriteUserList,\n+\t\t\t\t\tactivity, builder);\n+\t\t\treturn;\n+\t\t}\n+\n+\t\tif (!spriteUserList.isEmpty()) {\n+\t\t\taddResourceToActiveFormulaInFormulaEditor(categoryListItem, spriteUserList.get(spriteUserList.size() - 1));\n+\t\t\treturn;\n+\t\t}\n+\t\taddResourceToActiveFormulaInFormulaEditor(categoryListItem, projectUserList.get(projectUserList.size() - 1));\n+\t}\n+\n+\tprivate void showNewUserListDialog(CategoryListItem categoryListItem, List<UserList> projectUserList, List<UserList> spriteUserList,\n+\t\t\tFragmentActivity activity, TextInputDialog.Builder builder) {\n+\t\tbuilder.setHint(activity.getString(R.string.data_label))\n+\t\t\t\t.setPositiveButton(activity.getString(R.string.ok), (TextInputDialog.OnClickListener) (dialog, textInput) -> {\n+\t\t\t\t\tif (textInput.isEmpty()) {\n+\t\t\t\t\t\tactivity.onBackPressed();\n+\t\t\t\t\t\treturn;\n+\t\t\t\t\t}\n+\t\t\t\t\tUserList userList = new UserList(textInput);\n+\n+\t\t\t\t\tRadioButton addToProjectListsRadioButton = ((Dialog) dialog).findViewById(R.id.global);\n+\t\t\t\t\tboolean addToProjectLists = addToProjectListsRadioButton.isChecked();\n+\n+\t\t\t\t\tif (addToProjectLists) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 115}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc4OTA3NzY3", "url": "https://github.com/Catrobat/Catroid/pull/3510#pullrequestreview-378907767", "createdAt": "2020-03-21T10:14:24Z", "commit": null, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMVQxMDoxNDoyNFrOF5ot4g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMVQxMDoxOTowMVrOF5ovCQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTk4MDI1OA==", "bodyText": "Please add a test.", "url": "https://github.com/Catrobat/Catroid/pull/3510#discussion_r395980258", "createdAt": "2020-03-21T10:14:24Z", "author": {"login": "gPathpp"}, "path": "catroid/src/main/java/org/catrobat/catroid/formulaeditor/InternFormula.java", "diffHunk": "@@ -726,6 +726,11 @@ private CursorTokenPropertiesAfterModification setCursorPositionAndSelectionAfte\n \t\t\t\t\t\t.getFunctionParameterInternTokensAsLists(functionInternTokenList);\n \t\t\t\tList<InternToken> functionFirstParameter = functionParameters.get(0);\n \n+\t\t\t\tif (functionInternTokenList.get(0).getTokenStringValue().equals(Functions.LIST_ITEM.name()) && !functionFirstParameter.get(0).isUserList()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTk4MDI2Nw==", "bodyText": "Nice!", "url": "https://github.com/Catrobat/Catroid/pull/3510#discussion_r395980267", "createdAt": "2020-03-21T10:14:40Z", "author": {"login": "gPathpp"}, "path": "catroid/src/main/java/org/catrobat/catroid/ui/recyclerview/adapter/CategoryListRVAdapter.java", "diffHunk": "@@ -89,12 +89,7 @@ public void onBindViewHolder(@NonNull ViewHolder holder, final int position) {\n \t\t}\n \n \t\tholder.title.setText(item.text);\n-\t\tholder.itemView.setOnClickListener(new View.OnClickListener() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTk4MDU1Mw==", "bodyText": "Please remove the activity and pass the strings instead.", "url": "https://github.com/Catrobat/Catroid/pull/3510#discussion_r395980553", "createdAt": "2020-03-21T10:19:01Z", "author": {"login": "gPathpp"}, "path": "catroid/src/main/java/org/catrobat/catroid/utils/AddUserListDialog.java", "diffHunk": "@@ -0,0 +1,89 @@\n+/*\n+ * Catroid: An on-device visual programming system for Android devices\n+ * Copyright (C) 2010-2020 The Catrobat Team\n+ * (<http://developer.catrobat.org/credits>)\n+ *\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU Affero General Public License as\n+ * published by the Free Software Foundation, either version 3 of the\n+ * License, or (at your option) any later version.\n+ *\n+ * An additional term exception under section 7 of the GNU Affero\n+ * General Public License, version 3, is available at\n+ * http://developer.catrobat.org/license_additional_term\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU Affero General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Affero General Public License\n+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+\n+package org.catrobat.catroid.utils;\n+\n+import android.app.Activity;\n+import android.app.Dialog;\n+import android.content.DialogInterface;\n+import android.widget.RadioButton;\n+\n+import org.catrobat.catroid.R;\n+import org.catrobat.catroid.content.bricks.brickspinner.BrickSpinner;\n+import org.catrobat.catroid.formulaeditor.UserList;\n+import org.catrobat.catroid.ui.recyclerview.dialog.TextInputDialog;\n+import org.catrobat.catroid.ui.recyclerview.dialog.textwatcher.NewItemTextWatcher;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+public class AddUserListDialog {\n+\tprivate Activity activity;\n+\tprivate TextInputDialog.Builder builder;\n+\tprivate BrickSpinner<UserList> spinner;\n+\tprivate List<UserList> existingUserLists;\n+\n+\tpublic AddUserListDialog(Activity activity, TextInputDialog.Builder builder, BrickSpinner<UserList> spinner) {\n+\t\tthis.activity = activity;\n+\t\tthis.builder = builder;\n+\t\tthis.spinner = spinner;\n+\t\texistingUserLists = spinner.getItems();\n+\t}\n+\n+\tpublic AddUserListDialog(Activity activity, TextInputDialog.Builder builder) {\n+\t\tthis.activity = activity;\n+\t\tthis.builder = builder;\n+\t\texistingUserLists = new ArrayList<>();\n+\t}\n+\n+\tpublic void show(Callback callback) {\n+\t\tbuilder.setHint(activity.getString(R.string.data_label))", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 60}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc4OTE4NzU4", "url": "https://github.com/Catrobat/Catroid/pull/3510#pullrequestreview-378918758", "createdAt": "2020-03-21T13:28:31Z", "commit": null, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgyMTE4MDc3", "url": "https://github.com/Catrobat/Catroid/pull/3510#pullrequestreview-382118077", "createdAt": "2020-03-26T15:21:17Z", "commit": null, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8dde0454fca5f7224eab23d20be1d71f0fa98d6d", "author": {"user": {"login": "mstoeg", "name": "Martin St\u00f6glehner"}}, "url": "https://github.com/Catrobat/Catroid/commit/8dde0454fca5f7224eab23d20be1d71f0fa98d6d", "committedDate": "2020-03-26T16:57:36Z", "message": "CATROID-404 Insert existing user list as parameter of list functions\n\n- Refactor/Move tests out of FormulaEditorFunctionListTest\n- Add UI espresso test to check if the last user list is inserted correctly.\n- Add Unit test to check if Dialog pops up when there is no current user list."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "8dde0454fca5f7224eab23d20be1d71f0fa98d6d", "author": {"user": {"login": "mstoeg", "name": "Martin St\u00f6glehner"}}, "url": "https://github.com/Catrobat/Catroid/commit/8dde0454fca5f7224eab23d20be1d71f0fa98d6d", "committedDate": "2020-03-26T16:57:36Z", "message": "CATROID-404 Insert existing user list as parameter of list functions\n\n- Refactor/Move tests out of FormulaEditorFunctionListTest\n- Add UI espresso test to check if the last user list is inserted correctly.\n- Add Unit test to check if Dialog pops up when there is no current user list."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgyOTQ2ODky", "url": "https://github.com/Catrobat/Catroid/pull/3510#pullrequestreview-382946892", "createdAt": "2020-03-27T15:10:57Z", "commit": {"oid": "8dde0454fca5f7224eab23d20be1d71f0fa98d6d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgzMzE0MzA2", "url": "https://github.com/Catrobat/Catroid/pull/3510#pullrequestreview-383314306", "createdAt": "2020-03-28T13:43:39Z", "commit": {"oid": "8dde0454fca5f7224eab23d20be1d71f0fa98d6d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2012, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}