{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDcxNjg2NzI3", "number": 3761, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQxNzozNTo1MlrOEcraqg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQwNToyODoxNlrOEh9LDA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk4NTA2OTIyOnYy", "diffSide": "RIGHT", "path": "catroid/src/main/java/org/catrobat/catroid/content/actions/PlayDrumForBeatsAction.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQxNzozNTo1MlrOHHWn7A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQxNzozNTo1MlrOHHWn7A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzQ3Mjc0OA==", "bodyText": "these variables should be private right?", "url": "https://github.com/Catrobat/Catroid/pull/3761#discussion_r477472748", "createdAt": "2020-08-26T17:35:52Z", "author": {"login": "ndrnour"}, "path": "catroid/src/main/java/org/catrobat/catroid/content/actions/PlayDrumForBeatsAction.java", "diffHunk": "@@ -0,0 +1,64 @@\n+/*\n+ * Catroid: An on-device visual programming system for Android devices\n+ * Copyright (C) 2010-2018 The Catrobat Team\n+ * (<http://developer.catrobat.org/credits>)\n+ *\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU Affero General Public License as\n+ * published by the Free Software Foundation, either version 3 of the\n+ * License, or (at your option) any later version.\n+ *\n+ * An additional term exception under section 7 of the GNU Affero\n+ * General Public License, version 3, is available at\n+ * http://developer.catrobat.org/license_additional_term\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU Affero General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Affero General Public License\n+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+package org.catrobat.catroid.content.actions;\n+\n+import android.util.Log;\n+\n+import com.badlogic.gdx.scenes.scene2d.actions.TemporalAction;\n+\n+import org.catrobat.catroid.content.Sprite;\n+import org.catrobat.catroid.content.bricks.brickspinner.PickableDrum;\n+import org.catrobat.catroid.formulaeditor.Formula;\n+import org.catrobat.catroid.formulaeditor.InterpretationException;\n+import org.catrobat.catroid.pocketmusic.mididriver.MidiSoundManager;\n+import org.catrobat.catroid.pocketmusic.note.Drum;\n+\n+public class PlayDrumForBeatsAction extends TemporalAction {\n+\n+\tSprite sprite;\n+\tPickableDrum selectedDrum;\n+\tFormula beats;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a3b0cfcbe76a4be139f94dfa34ed7ffba14b4351"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk4NTA3NTkxOnYy", "diffSide": "RIGHT", "path": "catroid/src/main/java/org/catrobat/catroid/content/bricks/PlayDrumForBeatsBrick.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQxNzozNzo0OVrOHHWsYg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQxNzozNzo0OVrOHHWsYg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzQ3Mzg5MA==", "bodyText": "no need for serialVersionUID it's already declared in the parent class BrickBaseType.java.\nplease just remove it", "url": "https://github.com/Catrobat/Catroid/pull/3761#discussion_r477473890", "createdAt": "2020-08-26T17:37:49Z", "author": {"login": "ndrnour"}, "path": "catroid/src/main/java/org/catrobat/catroid/content/bricks/PlayDrumForBeatsBrick.java", "diffHunk": "@@ -0,0 +1,106 @@\n+/*\n+ * Catroid: An on-device visual programming system for Android devices\n+ * Copyright (C) 2010-2018 The Catrobat Team\n+ * (<http://developer.catrobat.org/credits>)\n+ *\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU Affero General Public License as\n+ * published by the Free Software Foundation, either version 3 of the\n+ * License, or (at your option) any later version.\n+ *\n+ * An additional term exception under section 7 of the GNU Affero\n+ * General Public License, version 3, is available at\n+ * http://developer.catrobat.org/license_additional_term\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU Affero General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Affero General Public License\n+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+package org.catrobat.catroid.content.bricks;\n+\n+import android.content.Context;\n+import android.view.View;\n+\n+import org.catrobat.catroid.R;\n+import org.catrobat.catroid.common.Nameable;\n+import org.catrobat.catroid.content.Sprite;\n+import org.catrobat.catroid.content.actions.ScriptSequenceAction;\n+import org.catrobat.catroid.content.bricks.brickspinner.BrickSpinner;\n+import org.catrobat.catroid.content.bricks.brickspinner.PickableDrum;\n+import org.catrobat.catroid.formulaeditor.Formula;\n+import org.catrobat.catroid.utils.Utils;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+import androidx.annotation.Nullable;\n+\n+public class PlayDrumForBeatsBrick extends FormulaBrick implements BrickSpinner.OnItemSelectedListener<PickableDrum> {\n+\n+\tprivate static final long serialVersionUID = 1L;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a3b0cfcbe76a4be139f94dfa34ed7ffba14b4351"}, "originalPosition": 44}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk4NTA3OTM2OnYy", "diffSide": "RIGHT", "path": "catroid/src/main/java/org/catrobat/catroid/content/bricks/PlayDrumForBeatsBrick.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQxNzozODo1MlrOHHWutQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQxNzozODo1MlrOHHWutQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzQ3NDQ4NQ==", "bodyText": "please change it to private", "url": "https://github.com/Catrobat/Catroid/pull/3761#discussion_r477474485", "createdAt": "2020-08-26T17:38:52Z", "author": {"login": "ndrnour"}, "path": "catroid/src/main/java/org/catrobat/catroid/content/bricks/PlayDrumForBeatsBrick.java", "diffHunk": "@@ -0,0 +1,106 @@\n+/*\n+ * Catroid: An on-device visual programming system for Android devices\n+ * Copyright (C) 2010-2018 The Catrobat Team\n+ * (<http://developer.catrobat.org/credits>)\n+ *\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU Affero General Public License as\n+ * published by the Free Software Foundation, either version 3 of the\n+ * License, or (at your option) any later version.\n+ *\n+ * An additional term exception under section 7 of the GNU Affero\n+ * General Public License, version 3, is available at\n+ * http://developer.catrobat.org/license_additional_term\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU Affero General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Affero General Public License\n+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+package org.catrobat.catroid.content.bricks;\n+\n+import android.content.Context;\n+import android.view.View;\n+\n+import org.catrobat.catroid.R;\n+import org.catrobat.catroid.common.Nameable;\n+import org.catrobat.catroid.content.Sprite;\n+import org.catrobat.catroid.content.actions.ScriptSequenceAction;\n+import org.catrobat.catroid.content.bricks.brickspinner.BrickSpinner;\n+import org.catrobat.catroid.content.bricks.brickspinner.PickableDrum;\n+import org.catrobat.catroid.formulaeditor.Formula;\n+import org.catrobat.catroid.utils.Utils;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+import androidx.annotation.Nullable;\n+\n+public class PlayDrumForBeatsBrick extends FormulaBrick implements BrickSpinner.OnItemSelectedListener<PickableDrum> {\n+\n+\tprivate static final long serialVersionUID = 1L;\n+\n+\tpublic PickableDrum drumSelection = Utils.getPickableDrums().get(0);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a3b0cfcbe76a4be139f94dfa34ed7ffba14b4351"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk4NTA4OTg4OnYy", "diffSide": "RIGHT", "path": "catroid/src/main/java/org/catrobat/catroid/utils/Utils.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQxNzo0MTo0OFrOHHW1Vg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQxNzo0MTo0OFrOHHW1Vg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzQ3NjE4Mg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\tList drums = new ArrayList<PickableDrum>();\n          \n          \n            \n            \t\tList<PickableDrum> drums = new ArrayList<>();", "url": "https://github.com/Catrobat/Catroid/pull/3761#discussion_r477476182", "createdAt": "2020-08-26T17:41:48Z", "author": {"login": "ndrnour"}, "path": "catroid/src/main/java/org/catrobat/catroid/utils/Utils.java", "diffHunk": "@@ -594,4 +595,58 @@ public static int getBit(int number, int index) {\n \n \t\treturn instruments;\n \t}\n+\n+\tpublic static List<PickableDrum> getPickableDrums() {\n+\t\tList drums = new ArrayList<PickableDrum>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a3b0cfcbe76a4be139f94dfa34ed7ffba14b4351"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA0MDM1NjY5OnYy", "diffSide": "RIGHT", "path": "catroid/src/main/java/org/catrobat/catroid/utils/Utils.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQwNTowNjoyMVrOHPjIaw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQwNTowNjoyMVrOHPjIaw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjA2NjI4Mw==", "bodyText": "All these English names of the instruments (down to line 693) should be in strings.xml so that they can be translated via CrowdIn on https://translate.catrobat.org/ by our translators.", "url": "https://github.com/Catrobat/Catroid/pull/3761#discussion_r486066283", "createdAt": "2020-09-10T05:06:21Z", "author": {"login": "wslany"}, "path": "catroid/src/main/java/org/catrobat/catroid/utils/Utils.java", "diffHunk": "@@ -639,4 +640,58 @@ public void onReceive(Context context, Intent intent) {\n \t\t\t}\n \t\t}, null, Activity.RESULT_OK, null, null);\n \t}\n+\n+\tpublic static List<PickableDrum> getPickableDrums() {\n+\t\tList<PickableDrum> drums = new ArrayList<PickableDrum>();\n+\n+\t\tdrums.add(new PickableDrum(\"Acoustic Bass Drum\", 35));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f618f292e5ae57521f2d51b33f3d704f0c4b010c"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA0MDM4ODM1OnYy", "diffSide": "RIGHT", "path": "catroid/src/main/java/org/catrobat/catroid/pocketmusic/note/Drum.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQwNToxODoxMlrOHPjbAA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQwNToxODoxMlrOHPjbAA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjA3MTA0MA==", "bodyText": "Same as discussed with @m-herold for normal instruments: please restrict it to the set from Scratch, in the same order.", "url": "https://github.com/Catrobat/Catroid/pull/3761#discussion_r486071040", "createdAt": "2020-09-10T05:18:12Z", "author": {"login": "wslany"}, "path": "catroid/src/main/java/org/catrobat/catroid/pocketmusic/note/Drum.java", "diffHunk": "@@ -0,0 +1,95 @@\n+/*\n+ * Catroid: An on-device visual programming system for Android devices\n+ * Copyright (C) 2010-2018 The Catrobat Team\n+ * (<http://developer.catrobat.org/credits>)\n+ *\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU Affero General Public License as\n+ * published by the Free Software Foundation, either version 3 of the\n+ * License, or (at your option) any later version.\n+ *\n+ * An additional term exception under section 7 of the GNU Affero\n+ * General Public License, version 3, is available at\n+ * http://developer.catrobat.org/license_additional_term\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU Affero General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Affero General Public License\n+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+package org.catrobat.catroid.pocketmusic.note;\n+\n+public enum Drum {\n+\tACOUSTIC_BASS_DRUM(35),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f618f292e5ae57521f2d51b33f3d704f0c4b010c"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA0MDQwNzE2OnYy", "diffSide": "RIGHT", "path": "catroid/src/main/java/org/catrobat/catroid/io/XstreamSerializer.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQwNToyODoxNlrOHPjmNw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQwNToyODoxNlrOHPjmNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjA3MzkxMQ==", "bodyText": "Same as discussed with @m-herold for normal instruments: please make a token based serialization, something like:\n<brick type=\"SetInstrumentBrick\">\n  <commentedOut>false</commentedOut>\n  <drumSelection>TRIANGLE</instrumentSelection>\n</brick>\n\nand so on.", "url": "https://github.com/Catrobat/Catroid/pull/3761#discussion_r486073911", "createdAt": "2020-09-10T05:28:16Z", "author": {"login": "wslany"}, "path": "catroid/src/main/java/org/catrobat/catroid/io/XstreamSerializer.java", "diffHunk": "@@ -460,6 +461,7 @@ private void prepareXstream(Class projectClass, Class sceneClass) {\n \t\txstream.alias(\"brick\", SetBackgroundAndWaitBrick.class);\n \t\txstream.alias(\"brick\", SetBackgroundByIndexAndWaitBrick.class);\n \t\txstream.alias(\"brick\", SetInstrumentBrick.class);\n+\t\txstream.alias(\"brick\", PlayDrumForBeatsBrick.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f618f292e5ae57521f2d51b33f3d704f0c4b010c"}, "originalPosition": 12}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3753, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}