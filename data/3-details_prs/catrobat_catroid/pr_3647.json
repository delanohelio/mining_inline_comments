{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQxMjU4MjI2", "number": 3647, "title": "CATROID-565 refactor AskAction.java  to AskAction.kt", "bodyText": "Please enter a short description of your pull request and add a reference to the Jira ticket.\nYour checklist for this pull request\nPlease review the contributing guidelines and wiki pages of this repository.\n\n Include the name of the Jira ticket in the PR\u2019s title\n Include a summary of the changes plus the relevant context\n Choose the proper base branch (develop)\n Confirm that the changes follow the project\u2019s coding guidelines\n Verify that the changes generate no compiler or linter warnings\n Perform a self-review of the changes\n Verify to commit no other files than the intentionally changed ones\n Include reasonable and readable tests verifying the added or changed behavior\n Confirm that new and existing unit tests pass locally\n Check that the commits\u2019 message style matches the project\u2019s guideline\n Stick to the project\u2019s gitflow workflow\n Verify that your changes do not have any conflicts with the base branch\n After the PR, verify that all CI checks have passed\n Post a message in the catroid-stage or catroid-ide Slack channel and ask for a code reviewer", "createdAt": "2020-06-29T07:38:29Z", "url": "https://github.com/Catrobat/Catroid/pull/3647", "merged": true, "mergeCommit": {"oid": "019a5e6a4a7df72847f72600aa7d1ee10d10acfb"}, "closed": true, "closedAt": "2020-06-29T14:30:48Z", "author": {"login": "PlantinumX"}, "timelineItems": {"totalCount": 21, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcv8U7QgFqTQzODk1NjY0NA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcwB7sMgFqTQzOTIwMjE0MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM4OTU2NjQ0", "url": "https://github.com/Catrobat/Catroid/pull/3647#pullrequestreview-438956644", "createdAt": "2020-06-29T07:41:15Z", "commit": null, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQwNzo0MzoyNFrOGqIeEQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQwNzo1NzoyMlrOGqI75Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjgzMjE0NQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    val params = ArrayList<Any>()\n          \n          \n            \n                    params.add(this)\n          \n          \n            \n                    params.add(question)\n          \n          \n            \n                    val params = arrayListOf<Any>(this, question)", "url": "https://github.com/Catrobat/Catroid/pull/3647#discussion_r446832145", "createdAt": "2020-06-29T07:43:24Z", "author": {"login": "lweitzendorf"}, "path": "catroid/src/main/java/org/catrobat/catroid/content/actions/AskAction.kt", "diffHunk": "@@ -0,0 +1,99 @@\n+/*\n+ * Catroid: An on-device visual programming system for Android devices\n+ * Copyright (C) 2010-2018 The Catrobat Team\n+ * (<http://developer.catrobat.org/credits>)\n+ *\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU Affero General Public License as\n+ * published by the Free Software Foundation, either version 3 of the\n+ * License, or (at your option) any later version.\n+ *\n+ * An additional term exception under section 7 of the GNU Affero\n+ * General Public License, version 3, is available at\n+ * http://developer.catrobat.org/license_additional_term\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU Affero General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Affero General Public License\n+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+package org.catrobat.catroid.content.actions\n+\n+import android.util.Log\n+import com.badlogic.gdx.scenes.scene2d.Action\n+import org.catrobat.catroid.content.Sprite\n+import org.catrobat.catroid.formulaeditor.Formula\n+import org.catrobat.catroid.formulaeditor.InterpretationException\n+import org.catrobat.catroid.formulaeditor.UserVariable\n+import org.catrobat.catroid.stage.StageActivity\n+import java.util.ArrayList\n+\n+class AskAction : Action() {\n+    private var sprite: Sprite? = null\n+    private var questionFormula: Formula? = null\n+    private var answerVariable: UserVariable? = null\n+    private var questionAsked = false\n+    private var answerReceived = false\n+    private fun askQuestion() {\n+        if (StageActivity.messageHandler == null) {\n+            return\n+        }\n+        var question = \"\"\n+        try {\n+            if (questionFormula != null) {\n+                question = questionFormula!!.interpretString(sprite)\n+            }\n+        } catch (e: InterpretationException) {\n+            Log.e(\n+                javaClass.simpleName,\n+                \"formula interpretation in ask brick failed\"\n+            )\n+        }\n+        val params = ArrayList<Any>()\n+        params.add(this)\n+        params.add(question)", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjgzNDA2OA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                fun setAnswerText(answer: String?) {\n          \n          \n            \n                    if (answerVariable == null) {\n          \n          \n            \n                        return\n          \n          \n            \n                    }\n          \n          \n            \n                    answerVariable!!.value = answer\n          \n          \n            \n                    answerReceived = true\n          \n          \n            \n                }\n          \n          \n            \n                fun setAnswerText(answer: String) {\n          \n          \n            \n                    answerVariable?.value?.let {\n          \n          \n            \n                        it = answer\n          \n          \n            \n                        answerReceived = true\n          \n          \n            \n                    }\n          \n          \n            \n                }", "url": "https://github.com/Catrobat/Catroid/pull/3647#discussion_r446834068", "createdAt": "2020-06-29T07:47:15Z", "author": {"login": "lweitzendorf"}, "path": "catroid/src/main/java/org/catrobat/catroid/content/actions/AskAction.kt", "diffHunk": "@@ -0,0 +1,99 @@\n+/*\n+ * Catroid: An on-device visual programming system for Android devices\n+ * Copyright (C) 2010-2018 The Catrobat Team\n+ * (<http://developer.catrobat.org/credits>)\n+ *\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU Affero General Public License as\n+ * published by the Free Software Foundation, either version 3 of the\n+ * License, or (at your option) any later version.\n+ *\n+ * An additional term exception under section 7 of the GNU Affero\n+ * General Public License, version 3, is available at\n+ * http://developer.catrobat.org/license_additional_term\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU Affero General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Affero General Public License\n+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+package org.catrobat.catroid.content.actions\n+\n+import android.util.Log\n+import com.badlogic.gdx.scenes.scene2d.Action\n+import org.catrobat.catroid.content.Sprite\n+import org.catrobat.catroid.formulaeditor.Formula\n+import org.catrobat.catroid.formulaeditor.InterpretationException\n+import org.catrobat.catroid.formulaeditor.UserVariable\n+import org.catrobat.catroid.stage.StageActivity\n+import java.util.ArrayList\n+\n+class AskAction : Action() {\n+    private var sprite: Sprite? = null\n+    private var questionFormula: Formula? = null\n+    private var answerVariable: UserVariable? = null\n+    private var questionAsked = false\n+    private var answerReceived = false\n+    private fun askQuestion() {\n+        if (StageActivity.messageHandler == null) {\n+            return\n+        }\n+        var question = \"\"\n+        try {\n+            if (questionFormula != null) {\n+                question = questionFormula!!.interpretString(sprite)\n+            }\n+        } catch (e: InterpretationException) {\n+            Log.e(\n+                javaClass.simpleName,\n+                \"formula interpretation in ask brick failed\"\n+            )\n+        }\n+        val params = ArrayList<Any>()\n+        params.add(this)\n+        params.add(question)\n+        val message =\n+            StageActivity.messageHandler.obtainMessage(StageActivity.ASK_MESSAGE, params)\n+        message.sendToTarget()\n+        questionAsked = true\n+    }\n+\n+    fun setAnswerText(answer: String?) {\n+        if (answerVariable == null) {\n+            return\n+        }\n+        answerVariable!!.value = answer\n+        answerReceived = true\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 70}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjgzNTAwMw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                fun setAnswerVariable(answerVariable: UserVariable?) {\n          \n          \n            \n                    if (answerVariable == null) {\n          \n          \n            \n                        return\n          \n          \n            \n                    }\n          \n          \n            \n                    this.answerVariable = answerVariable\n          \n          \n            \n                }\n          \n          \n            \n                fun setAnswerVariable(answerVariable: UserVariable) {\n          \n          \n            \n                    this.answerVariable = answerVariable\n          \n          \n            \n                }", "url": "https://github.com/Catrobat/Catroid/pull/3647#discussion_r446835003", "createdAt": "2020-06-29T07:48:58Z", "author": {"login": "lweitzendorf"}, "path": "catroid/src/main/java/org/catrobat/catroid/content/actions/AskAction.kt", "diffHunk": "@@ -0,0 +1,99 @@\n+/*\n+ * Catroid: An on-device visual programming system for Android devices\n+ * Copyright (C) 2010-2018 The Catrobat Team\n+ * (<http://developer.catrobat.org/credits>)\n+ *\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU Affero General Public License as\n+ * published by the Free Software Foundation, either version 3 of the\n+ * License, or (at your option) any later version.\n+ *\n+ * An additional term exception under section 7 of the GNU Affero\n+ * General Public License, version 3, is available at\n+ * http://developer.catrobat.org/license_additional_term\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU Affero General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Affero General Public License\n+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+package org.catrobat.catroid.content.actions\n+\n+import android.util.Log\n+import com.badlogic.gdx.scenes.scene2d.Action\n+import org.catrobat.catroid.content.Sprite\n+import org.catrobat.catroid.formulaeditor.Formula\n+import org.catrobat.catroid.formulaeditor.InterpretationException\n+import org.catrobat.catroid.formulaeditor.UserVariable\n+import org.catrobat.catroid.stage.StageActivity\n+import java.util.ArrayList\n+\n+class AskAction : Action() {\n+    private var sprite: Sprite? = null\n+    private var questionFormula: Formula? = null\n+    private var answerVariable: UserVariable? = null\n+    private var questionAsked = false\n+    private var answerReceived = false\n+    private fun askQuestion() {\n+        if (StageActivity.messageHandler == null) {\n+            return\n+        }\n+        var question = \"\"\n+        try {\n+            if (questionFormula != null) {\n+                question = questionFormula!!.interpretString(sprite)\n+            }\n+        } catch (e: InterpretationException) {\n+            Log.e(\n+                javaClass.simpleName,\n+                \"formula interpretation in ask brick failed\"\n+            )\n+        }\n+        val params = ArrayList<Any>()\n+        params.add(this)\n+        params.add(question)\n+        val message =\n+            StageActivity.messageHandler.obtainMessage(StageActivity.ASK_MESSAGE, params)\n+        message.sendToTarget()\n+        questionAsked = true\n+    }\n+\n+    fun setAnswerText(answer: String?) {\n+        if (answerVariable == null) {\n+            return\n+        }\n+        answerVariable!!.value = answer\n+        answerReceived = true\n+    }\n+\n+    fun setAnswerVariable(answerVariable: UserVariable?) {\n+        if (answerVariable == null) {\n+            return\n+        }\n+        this.answerVariable = answerVariable\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 77}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjgzNTE5NQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                fun setQuestionFormula(questionFormula: Formula?) {\n          \n          \n            \n                fun setQuestionFormula(questionFormula: Formula) {", "url": "https://github.com/Catrobat/Catroid/pull/3647#discussion_r446835195", "createdAt": "2020-06-29T07:49:20Z", "author": {"login": "lweitzendorf"}, "path": "catroid/src/main/java/org/catrobat/catroid/content/actions/AskAction.kt", "diffHunk": "@@ -0,0 +1,99 @@\n+/*\n+ * Catroid: An on-device visual programming system for Android devices\n+ * Copyright (C) 2010-2018 The Catrobat Team\n+ * (<http://developer.catrobat.org/credits>)\n+ *\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU Affero General Public License as\n+ * published by the Free Software Foundation, either version 3 of the\n+ * License, or (at your option) any later version.\n+ *\n+ * An additional term exception under section 7 of the GNU Affero\n+ * General Public License, version 3, is available at\n+ * http://developer.catrobat.org/license_additional_term\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU Affero General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Affero General Public License\n+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+package org.catrobat.catroid.content.actions\n+\n+import android.util.Log\n+import com.badlogic.gdx.scenes.scene2d.Action\n+import org.catrobat.catroid.content.Sprite\n+import org.catrobat.catroid.formulaeditor.Formula\n+import org.catrobat.catroid.formulaeditor.InterpretationException\n+import org.catrobat.catroid.formulaeditor.UserVariable\n+import org.catrobat.catroid.stage.StageActivity\n+import java.util.ArrayList\n+\n+class AskAction : Action() {\n+    private var sprite: Sprite? = null\n+    private var questionFormula: Formula? = null\n+    private var answerVariable: UserVariable? = null\n+    private var questionAsked = false\n+    private var answerReceived = false\n+    private fun askQuestion() {\n+        if (StageActivity.messageHandler == null) {\n+            return\n+        }\n+        var question = \"\"\n+        try {\n+            if (questionFormula != null) {\n+                question = questionFormula!!.interpretString(sprite)\n+            }\n+        } catch (e: InterpretationException) {\n+            Log.e(\n+                javaClass.simpleName,\n+                \"formula interpretation in ask brick failed\"\n+            )\n+        }\n+        val params = ArrayList<Any>()\n+        params.add(this)\n+        params.add(question)\n+        val message =\n+            StageActivity.messageHandler.obtainMessage(StageActivity.ASK_MESSAGE, params)\n+        message.sendToTarget()\n+        questionAsked = true\n+    }\n+\n+    fun setAnswerText(answer: String?) {\n+        if (answerVariable == null) {\n+            return\n+        }\n+        answerVariable!!.value = answer\n+        answerReceived = true\n+    }\n+\n+    fun setAnswerVariable(answerVariable: UserVariable?) {\n+        if (answerVariable == null) {\n+            return\n+        }\n+        this.answerVariable = answerVariable\n+    }\n+\n+    fun setQuestionFormula(questionFormula: Formula?) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 79}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjgzNTM4MQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                fun setSprite(sprite: Sprite?) {\n          \n          \n            \n                fun setSprite(sprite: Sprite) {", "url": "https://github.com/Catrobat/Catroid/pull/3647#discussion_r446835381", "createdAt": "2020-06-29T07:49:37Z", "author": {"login": "lweitzendorf"}, "path": "catroid/src/main/java/org/catrobat/catroid/content/actions/AskAction.kt", "diffHunk": "@@ -0,0 +1,99 @@\n+/*\n+ * Catroid: An on-device visual programming system for Android devices\n+ * Copyright (C) 2010-2018 The Catrobat Team\n+ * (<http://developer.catrobat.org/credits>)\n+ *\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU Affero General Public License as\n+ * published by the Free Software Foundation, either version 3 of the\n+ * License, or (at your option) any later version.\n+ *\n+ * An additional term exception under section 7 of the GNU Affero\n+ * General Public License, version 3, is available at\n+ * http://developer.catrobat.org/license_additional_term\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU Affero General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Affero General Public License\n+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+package org.catrobat.catroid.content.actions\n+\n+import android.util.Log\n+import com.badlogic.gdx.scenes.scene2d.Action\n+import org.catrobat.catroid.content.Sprite\n+import org.catrobat.catroid.formulaeditor.Formula\n+import org.catrobat.catroid.formulaeditor.InterpretationException\n+import org.catrobat.catroid.formulaeditor.UserVariable\n+import org.catrobat.catroid.stage.StageActivity\n+import java.util.ArrayList\n+\n+class AskAction : Action() {\n+    private var sprite: Sprite? = null\n+    private var questionFormula: Formula? = null\n+    private var answerVariable: UserVariable? = null\n+    private var questionAsked = false\n+    private var answerReceived = false\n+    private fun askQuestion() {\n+        if (StageActivity.messageHandler == null) {\n+            return\n+        }\n+        var question = \"\"\n+        try {\n+            if (questionFormula != null) {\n+                question = questionFormula!!.interpretString(sprite)\n+            }\n+        } catch (e: InterpretationException) {\n+            Log.e(\n+                javaClass.simpleName,\n+                \"formula interpretation in ask brick failed\"\n+            )\n+        }\n+        val params = ArrayList<Any>()\n+        params.add(this)\n+        params.add(question)\n+        val message =\n+            StageActivity.messageHandler.obtainMessage(StageActivity.ASK_MESSAGE, params)\n+        message.sendToTarget()\n+        questionAsked = true\n+    }\n+\n+    fun setAnswerText(answer: String?) {\n+        if (answerVariable == null) {\n+            return\n+        }\n+        answerVariable!!.value = answer\n+        answerReceived = true\n+    }\n+\n+    fun setAnswerVariable(answerVariable: UserVariable?) {\n+        if (answerVariable == null) {\n+            return\n+        }\n+        this.answerVariable = answerVariable\n+    }\n+\n+    fun setQuestionFormula(questionFormula: Formula?) {\n+        this.questionFormula = questionFormula\n+    }\n+\n+    fun setSprite(sprite: Sprite?) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 83}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjgzNjk4OQ==", "bodyText": "The setter probably shouldn't allow null. Also see below", "url": "https://github.com/Catrobat/Catroid/pull/3647#discussion_r446836989", "createdAt": "2020-06-29T07:52:29Z", "author": {"login": "lweitzendorf"}, "path": "catroid/src/main/java/org/catrobat/catroid/content/actions/AskAction.kt", "diffHunk": "@@ -0,0 +1,99 @@\n+/*\n+ * Catroid: An on-device visual programming system for Android devices\n+ * Copyright (C) 2010-2018 The Catrobat Team\n+ * (<http://developer.catrobat.org/credits>)\n+ *\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU Affero General Public License as\n+ * published by the Free Software Foundation, either version 3 of the\n+ * License, or (at your option) any later version.\n+ *\n+ * An additional term exception under section 7 of the GNU Affero\n+ * General Public License, version 3, is available at\n+ * http://developer.catrobat.org/license_additional_term\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU Affero General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Affero General Public License\n+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+package org.catrobat.catroid.content.actions\n+\n+import android.util.Log\n+import com.badlogic.gdx.scenes.scene2d.Action\n+import org.catrobat.catroid.content.Sprite\n+import org.catrobat.catroid.formulaeditor.Formula\n+import org.catrobat.catroid.formulaeditor.InterpretationException\n+import org.catrobat.catroid.formulaeditor.UserVariable\n+import org.catrobat.catroid.stage.StageActivity\n+import java.util.ArrayList\n+\n+class AskAction : Action() {\n+    private var sprite: Sprite? = null\n+    private var questionFormula: Formula? = null\n+    private var answerVariable: UserVariable? = null\n+    private var questionAsked = false\n+    private var answerReceived = false\n+    private fun askQuestion() {\n+        if (StageActivity.messageHandler == null) {\n+            return\n+        }\n+        var question = \"\"\n+        try {\n+            if (questionFormula != null) {\n+                question = questionFormula!!.interpretString(sprite)\n+            }\n+        } catch (e: InterpretationException) {\n+            Log.e(\n+                javaClass.simpleName,\n+                \"formula interpretation in ask brick failed\"\n+            )\n+        }\n+        val params = ArrayList<Any>()\n+        params.add(this)\n+        params.add(question)\n+        val message =\n+            StageActivity.messageHandler.obtainMessage(StageActivity.ASK_MESSAGE, params)\n+        message.sendToTarget()\n+        questionAsked = true\n+    }\n+\n+    fun setAnswerText(answer: String?) {\n+        if (answerVariable == null) {\n+            return\n+        }\n+        answerVariable!!.value = answer\n+        answerReceived = true\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjgzNDA2OA=="}, "originalCommit": null, "originalPosition": 70}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjgzOTc4MQ==", "bodyText": "If null is required for some reason, you can just delete these simple setters and declare the member as var instead of private var. Kotlin will create implicit setters and getters.", "url": "https://github.com/Catrobat/Catroid/pull/3647#discussion_r446839781", "createdAt": "2020-06-29T07:57:22Z", "author": {"login": "lweitzendorf"}, "path": "catroid/src/main/java/org/catrobat/catroid/content/actions/AskAction.kt", "diffHunk": "@@ -0,0 +1,99 @@\n+/*\n+ * Catroid: An on-device visual programming system for Android devices\n+ * Copyright (C) 2010-2018 The Catrobat Team\n+ * (<http://developer.catrobat.org/credits>)\n+ *\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU Affero General Public License as\n+ * published by the Free Software Foundation, either version 3 of the\n+ * License, or (at your option) any later version.\n+ *\n+ * An additional term exception under section 7 of the GNU Affero\n+ * General Public License, version 3, is available at\n+ * http://developer.catrobat.org/license_additional_term\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU Affero General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Affero General Public License\n+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+package org.catrobat.catroid.content.actions\n+\n+import android.util.Log\n+import com.badlogic.gdx.scenes.scene2d.Action\n+import org.catrobat.catroid.content.Sprite\n+import org.catrobat.catroid.formulaeditor.Formula\n+import org.catrobat.catroid.formulaeditor.InterpretationException\n+import org.catrobat.catroid.formulaeditor.UserVariable\n+import org.catrobat.catroid.stage.StageActivity\n+import java.util.ArrayList\n+\n+class AskAction : Action() {\n+    private var sprite: Sprite? = null\n+    private var questionFormula: Formula? = null\n+    private var answerVariable: UserVariable? = null\n+    private var questionAsked = false\n+    private var answerReceived = false\n+    private fun askQuestion() {\n+        if (StageActivity.messageHandler == null) {\n+            return\n+        }\n+        var question = \"\"\n+        try {\n+            if (questionFormula != null) {\n+                question = questionFormula!!.interpretString(sprite)\n+            }\n+        } catch (e: InterpretationException) {\n+            Log.e(\n+                javaClass.simpleName,\n+                \"formula interpretation in ask brick failed\"\n+            )\n+        }\n+        val params = ArrayList<Any>()\n+        params.add(this)\n+        params.add(question)\n+        val message =\n+            StageActivity.messageHandler.obtainMessage(StageActivity.ASK_MESSAGE, params)\n+        message.sendToTarget()\n+        questionAsked = true\n+    }\n+\n+    fun setAnswerText(answer: String?) {\n+        if (answerVariable == null) {\n+            return\n+        }\n+        answerVariable!!.value = answer\n+        answerReceived = true\n+    }\n+\n+    fun setAnswerVariable(answerVariable: UserVariable?) {\n+        if (answerVariable == null) {\n+            return\n+        }\n+        this.answerVariable = answerVariable\n+    }\n+\n+    fun setQuestionFormula(questionFormula: Formula?) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjgzNTE5NQ=="}, "originalCommit": null, "originalPosition": 79}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM4OTcwODE4", "url": "https://github.com/Catrobat/Catroid/pull/3647#pullrequestreview-438970818", "createdAt": "2020-06-29T08:02:30Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQwODowMjozMFrOGqJG_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQwODowMjozMFrOGqJG_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njg0MjYyMg==", "bodyText": "You could just do\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        if (questionFormula != null) {\n          \n          \n            \n                            question = questionFormula!!.interpretString(sprite)\n          \n          \n            \n                        }\n          \n          \n            \n                        question = questionFormula?.interpretString(sprite) ?: \"\"\n          \n      \n    \n    \n  \n\nand leave out the initial assignment", "url": "https://github.com/Catrobat/Catroid/pull/3647#discussion_r446842622", "createdAt": "2020-06-29T08:02:30Z", "author": {"login": "lweitzendorf"}, "path": "catroid/src/main/java/org/catrobat/catroid/content/actions/AskAction.kt", "diffHunk": "@@ -0,0 +1,99 @@\n+/*\n+ * Catroid: An on-device visual programming system for Android devices\n+ * Copyright (C) 2010-2018 The Catrobat Team\n+ * (<http://developer.catrobat.org/credits>)\n+ *\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU Affero General Public License as\n+ * published by the Free Software Foundation, either version 3 of the\n+ * License, or (at your option) any later version.\n+ *\n+ * An additional term exception under section 7 of the GNU Affero\n+ * General Public License, version 3, is available at\n+ * http://developer.catrobat.org/license_additional_term\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU Affero General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Affero General Public License\n+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+package org.catrobat.catroid.content.actions\n+\n+import android.util.Log\n+import com.badlogic.gdx.scenes.scene2d.Action\n+import org.catrobat.catroid.content.Sprite\n+import org.catrobat.catroid.formulaeditor.Formula\n+import org.catrobat.catroid.formulaeditor.InterpretationException\n+import org.catrobat.catroid.formulaeditor.UserVariable\n+import org.catrobat.catroid.stage.StageActivity\n+import java.util.ArrayList\n+\n+class AskAction : Action() {\n+    private var sprite: Sprite? = null\n+    private var questionFormula: Formula? = null\n+    private var answerVariable: UserVariable? = null\n+    private var questionAsked = false\n+    private var answerReceived = false\n+    private fun askQuestion() {\n+        if (StageActivity.messageHandler == null) {\n+            return\n+        }\n+        var question = \"\"\n+        try {\n+            if (questionFormula != null) {\n+                question = questionFormula!!.interpretString(sprite)\n+            }", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 48}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM5MDA5Mzk2", "url": "https://github.com/Catrobat/Catroid/pull/3647#pullrequestreview-439009396", "createdAt": "2020-06-29T08:56:09Z", "commit": null, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM5MTE2ODY5", "url": "https://github.com/Catrobat/Catroid/pull/3647#pullrequestreview-439116869", "createdAt": "2020-06-29T12:59:52Z", "commit": null, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM5MTMyNDQ0", "url": "https://github.com/Catrobat/Catroid/pull/3647#pullrequestreview-439132444", "createdAt": "2020-06-29T13:17:38Z", "commit": null, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQxMzoxNzozOFrOGqQeMw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQxMzoxNzozOFrOGqQeMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njk2MzI1MQ==", "bodyText": "These should always be initialized. Other tests also use lateinit\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private var testSprite: Sprite? = null\n          \n          \n            \n                private var project: Project? = null\n          \n          \n            \n                private var userVariableForAnswer: UserVariable? = null\n          \n          \n            \n                private lateinit var testSprite: Sprite\n          \n          \n            \n                private lateinit var project: Project\n          \n          \n            \n                private lateinit var userVariableForAnswer: UserVariable", "url": "https://github.com/Catrobat/Catroid/pull/3647#discussion_r446963251", "createdAt": "2020-06-29T13:17:38Z", "author": {"login": "lweitzendorf"}, "path": "catroid/src/test/java/org/catrobat/catroid/test/content/actions/AskActionTest.kt", "diffHunk": "@@ -0,0 +1,82 @@\n+/*\n+ * Catroid: An on-device visual programming system for Android devices\n+ * Copyright (C) 2010-2018 The Catrobat Team\n+ * (<http://developer.catrobat.org/credits>)\n+ *\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU Affero General Public License as\n+ * published by the Free Software Foundation, either version 3 of the\n+ * License, or (at your option) any later version.\n+ *\n+ * An additional term exception under section 7 of the GNU Affero\n+ * General Public License, version 3, is available at\n+ * http://developer.catrobat.org/license_additional_term\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU Affero General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Affero General Public License\n+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+package org.catrobat.catroid.test.content.actions\n+\n+import com.badlogic.gdx.utils.GdxNativesLoader\n+import junit.framework.Assert\n+import org.catrobat.catroid.ProjectManager\n+import org.catrobat.catroid.content.Project\n+import org.catrobat.catroid.content.Sprite\n+import org.catrobat.catroid.content.actions.AskAction\n+import org.catrobat.catroid.formulaeditor.Formula\n+import org.catrobat.catroid.formulaeditor.UserVariable\n+import org.catrobat.catroid.test.MockUtil\n+import org.junit.Before\n+import org.junit.Test\n+import org.junit.runner.RunWith\n+import org.powermock.api.mockito.PowerMockito\n+import org.powermock.core.classloader.annotations.PrepareForTest\n+import org.powermock.modules.junit4.PowerMockRunner\n+\n+@RunWith(PowerMockRunner::class)\n+@PrepareForTest(GdxNativesLoader::class)\n+class AskActionTest {\n+    private var testSprite: Sprite? = null\n+    private var project: Project? = null\n+    private var userVariableForAnswer: UserVariable? = null", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 46}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestCommit", "commit": {"oid": "4a9dc0ff56ddfafe746988d083d8fe55c48c64ef", "author": {"user": {"login": "PlantinumX", "name": "\u00d6mer Faruk Halici"}}, "url": "https://github.com/Catrobat/Catroid/commit/4a9dc0ff56ddfafe746988d083d8fe55c48c64ef", "committedDate": "2020-06-29T14:02:58Z", "message": "CATROID-565 refactor AskAction.java  to AskAction.kt.\nRefactor AskActionTest.java to AskActionTest.kt"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "4a9dc0ff56ddfafe746988d083d8fe55c48c64ef", "author": {"user": {"login": "PlantinumX", "name": "\u00d6mer Faruk Halici"}}, "url": "https://github.com/Catrobat/Catroid/commit/4a9dc0ff56ddfafe746988d083d8fe55c48c64ef", "committedDate": "2020-06-29T14:02:58Z", "message": "CATROID-565 refactor AskAction.java  to AskAction.kt.\nRefactor AskActionTest.java to AskActionTest.kt"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM5MTc2NTEw", "url": "https://github.com/Catrobat/Catroid/pull/3647#pullrequestreview-439176510", "createdAt": "2020-06-29T14:03:48Z", "commit": {"oid": "4a9dc0ff56ddfafe746988d083d8fe55c48c64ef"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM5MjAyMTQw", "url": "https://github.com/Catrobat/Catroid/pull/3647#pullrequestreview-439202140", "createdAt": "2020-06-29T14:29:33Z", "commit": {"oid": "4a9dc0ff56ddfafe746988d083d8fe55c48c64ef"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1832, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}