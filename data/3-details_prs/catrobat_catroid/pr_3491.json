{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc5NDU5NDU2", "number": 3491, "title": "CATROID-469 Stitching brick behaves incorrectly over 60 steps", "bodyText": "", "createdAt": "2020-02-25T09:23:27Z", "url": "https://github.com/Catrobat/Catroid/pull/3491", "merged": true, "mergeCommit": {"oid": "6d1cefa44852812d53776c85d310eae394e0c3b2"}, "closed": true, "closedAt": "2020-03-17T10:10:07Z", "author": {"login": "adnaribo"}, "timelineItems": {"totalCount": 17, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcHxeRfABqjMwNjkyODI3NjE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcN9RU_AFqTM3NDgxOTY1Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcxMjQyOTc3", "url": "https://github.com/Catrobat/Catroid/pull/3491#pullrequestreview-371242977", "createdAt": "2020-03-09T14:43:10Z", "commit": null, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzczMzM3MjM3", "url": "https://github.com/Catrobat/Catroid/pull/3491#pullrequestreview-373337237", "createdAt": "2020-03-12T07:53:00Z", "commit": null, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQwNzo1MzowMVrOF1UKuA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQwNzo1MzowMVrOF1UKuA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQ0OTI3Mg==", "bodyText": "Please verify (maybe in an extra test method) that the second stitch-point is always drawn.", "url": "https://github.com/Catrobat/Catroid/pull/3491#discussion_r391449272", "createdAt": "2020-03-12T07:53:01Z", "author": {"login": "gPathpp"}, "path": "catroid/src/test/java/org/catrobat/catroid/stage/EmbroideryActorCircleTest.java", "diffHunk": "@@ -0,0 +1,108 @@\n+/*\n+ * Catroid: An on-device visual programming system for Android devices\n+ * Copyright (C) 2010-2020 The Catrobat Team\n+ * (<http://developer.catrobat.org/credits>)\n+ *\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU Affero General Public License as\n+ * published by the Free Software Foundation, either version 3 of the\n+ * License, or (at your option) any later version.\n+ *\n+ * An additional term exception under section 7 of the GNU Affero\n+ * General Public License, version 3, is available at\n+ * http://developer.catrobat.org/license_additional_term\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU Affero General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Affero General Public License\n+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+\n+package org.catrobat.catroid.stage;\n+\n+import com.badlogic.gdx.graphics.g2d.Batch;\n+import com.badlogic.gdx.graphics.glutils.ShapeRenderer;\n+\n+import org.catrobat.catroid.embroidery.EmbroideryPatternManager;\n+import org.catrobat.catroid.embroidery.StitchPoint;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.junit.runners.Parameterized;\n+import org.junit.runners.Parameterized.Parameter;\n+import org.junit.runners.Parameterized.Parameters;\n+import org.mockito.verification.VerificationMode;\n+\n+import java.util.List;\n+\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.never;\n+import static org.mockito.Mockito.spy;\n+import static org.mockito.Mockito.times;\n+import static org.mockito.Mockito.verify;\n+import static org.mockito.Mockito.when;\n+\n+import static java.util.Arrays.asList;\n+\n+@RunWith(Parameterized.class)\n+public class EmbroideryActorCircleTest {\n+\t@Parameters(name = \"{0}\")\n+\tpublic static Iterable<Object[]> data() {\n+\t\treturn asList(new Object[][] {\n+\t\t\t\t{\"Test JumpPoint after ChangePoint\", asList(getChangePointMock(), getJumpPointMock()), false},\n+\t\t\t\t{\"Test Connecting Points\", asList(getConnectingPointMock(), getConnectingPointMock()), true},\n+\t\t\t\t{\"Test Changing Points\", asList(getChangePointMock(), getChangePointMock()), false},\n+\t\t\t\t{\"Test ChangePoint after JumpPoint\", asList(getJumpPointMock(), getChangePointMock()), false},\n+\t\t\t\t{\"Test JumpPoint after ConnectingPoint\", asList(getConnectingPointMock(), getJumpPointMock()), true},\n+\t\t\t\t{\"Test Jumping Points\", asList(getJumpPointMock(), getJumpPointMock()), false},\n+\t\t});\n+\t}\n+\n+\t@Parameter\n+\tpublic String name;\n+\n+\t@Parameter(1)\n+\tpublic List<StitchPoint> stitchPoints;\n+\n+\t@Parameter(2)\n+\tpublic boolean firstPointDrawn;\n+\n+\tprivate EmbroideryActor embroideryActorSpy;\n+\n+\t@Before\n+\tpublic void setUp() throws Exception {\n+\t\tEmbroideryPatternManager embroideryPatternManager = mock(EmbroideryPatternManager.class);\n+\t\twhen(embroideryPatternManager.getEmbroideryPatternList()).thenReturn(stitchPoints);\n+\t\tShapeRenderer renderer = mock(ShapeRenderer.class);\n+\t\tembroideryActorSpy = spy(new EmbroideryActor(1.0f, embroideryPatternManager, renderer));\n+\t}\n+\n+\t@Test\n+\tpublic void testDraw() {\n+\t\tembroideryActorSpy.draw(mock(Batch.class), 1.0F);\n+\n+\t\tVerificationMode mode = firstPointDrawn ? times(1) : never();\n+\t\tverify(embroideryActorSpy, mode).drawCircle(stitchPoints.get(0));", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 88}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestCommit", "commit": {"oid": "26f643ce223b5791c1d005f041184fbb71a42959", "author": {"user": null}, "url": "https://github.com/Catrobat/Catroid/commit/26f643ce223b5791c1d005f041184fbb71a42959", "committedDate": "2020-03-15T17:21:02Z", "message": "CATROID-469 Stitching brick behaves incorrectly over 60 steps"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "26f643ce223b5791c1d005f041184fbb71a42959", "author": {"user": null}, "url": "https://github.com/Catrobat/Catroid/commit/26f643ce223b5791c1d005f041184fbb71a42959", "committedDate": "2020-03-15T17:21:02Z", "message": "CATROID-469 Stitching brick behaves incorrectly over 60 steps"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc0ODE5NjU2", "url": "https://github.com/Catrobat/Catroid/pull/3491#pullrequestreview-374819656", "createdAt": "2020-03-15T17:50:14Z", "commit": {"oid": "26f643ce223b5791c1d005f041184fbb71a42959"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1990, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}