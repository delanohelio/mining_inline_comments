{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMzNzU4Njk1", "number": 3633, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQxMTowNzo1MFrOEHFFFw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQxMTowNzo1MFrOEHFFFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1ODU4NzExOnYy", "diffSide": "RIGHT", "path": "catroid/src/androidTest/java/org/catrobat/catroid/uiespresso/ui/actionbar/ActionBarTitleFullyDisplayedTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQxMTowNzo1MFrOGmRD1Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQxMTowNzo1MFrOGmRD1Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjc3ODU4MQ==", "bodyText": "Please rename it to assertTextCompletelyDisplayed.", "url": "https://github.com/Catrobat/Catroid/pull/3633#discussion_r442778581", "createdAt": "2020-06-19T11:07:50Z", "author": {"login": "gPathpp"}, "path": "catroid/src/androidTest/java/org/catrobat/catroid/uiespresso/ui/actionbar/ActionBarTitleFullyDisplayedTest.java", "diffHunk": "@@ -0,0 +1,112 @@\n+/*\n+ * Catroid: An on-device visual programming system for Android devices\n+ * Copyright (C) 2010-2020 The Catrobat Team\n+ * (<http://developer.catrobat.org/credits>)\n+ *\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU Affero General Public License as\n+ * published by the Free Software Foundation, either version 3 of the\n+ * License, or (at your option) any later version.\n+ *\n+ * An additional term exception under section 7 of the GNU Affero\n+ * General Public License, version 3, is available at\n+ * http://developer.catrobat.org/license_additional_term\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU Affero General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Affero General Public License\n+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+\n+package org.catrobat.catroid.uiespresso.ui.actionbar;\n+\n+import android.widget.TextView;\n+\n+import org.catrobat.catroid.ProjectManager;\n+import org.catrobat.catroid.R;\n+import org.catrobat.catroid.content.Project;\n+import org.catrobat.catroid.content.Scene;\n+import org.catrobat.catroid.io.asynctask.ProjectSaveTask;\n+import org.catrobat.catroid.testsuites.annotations.Cat;\n+import org.catrobat.catroid.testsuites.annotations.Level;\n+import org.catrobat.catroid.ui.ProjectActivity;\n+import org.catrobat.catroid.uiespresso.util.UiTestUtils;\n+import org.catrobat.catroid.uiespresso.util.rules.BaseActivityTestRule;\n+import org.junit.Assert;\n+import org.junit.Before;\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.junit.experimental.categories.Category;\n+\n+import androidx.test.core.app.ApplicationProvider;\n+\n+import static org.catrobat.catroid.uiespresso.ui.actionbar.utils.ActionBarWrapper.onActionBar;\n+import static org.catrobat.catroid.uiespresso.ui.actionbar.utils.ActionModeWrapper.onActionMode;\n+\n+import static androidx.test.InstrumentationRegistry.getInstrumentation;\n+import static androidx.test.espresso.Espresso.onView;\n+import static androidx.test.espresso.Espresso.openActionBarOverflowOrOptionsMenu;\n+import static androidx.test.espresso.action.ViewActions.click;\n+import static androidx.test.espresso.matcher.ViewMatchers.withId;\n+import static androidx.test.espresso.matcher.ViewMatchers.withText;\n+\n+public class ActionBarTitleFullyDisplayedTest {\n+\t@Rule\n+\tpublic BaseActivityTestRule<ProjectActivity> baseActivityTestRule = new\n+\t\t\tBaseActivityTestRule<>(ProjectActivity.class, false, false);\n+\n+\t@Before\n+\tpublic void setUp() throws Exception {\n+\t\tcreateTestProject(\"ActionBarTitleFullyDisplayedTest\");\n+\t\tbaseActivityTestRule.launchActivity(null);\n+\t}\n+\n+\t@Category({Cat.AppUi.class, Level.Smoke.class})\n+\t@Test\n+\tpublic void actionBarTitleFullyDisplayedTest() {\n+\t\tString currentProjectName = ProjectManager.getInstance().getCurrentProject().getName();\n+\n+\t\tonActionBar()\n+\t\t\t\t.checkTitleMatches(currentProjectName);\n+\n+\t\topenActionBarOverflowOrOptionsMenu(getInstrumentation().getTargetContext());\n+\t\tonView(withText(R.string.delete))\n+\t\t\t\t.perform(click());\n+\n+\t\tcheckIsTextCompletelyDisplayed(baseActivityTestRule);\n+\n+\t\tonView(withId(R.id.overflow))\n+\t\t\t\t.perform(click());\n+\n+\t\tonView(withText(\"Select all\"))\n+\t\t\t\t.perform(click());\n+\n+\t\tcheckIsTextCompletelyDisplayed(baseActivityTestRule);\n+\t\tonActionMode()\n+\t\t\t\t.checkTitleMatches(String.format(UiTestUtils\n+\t\t\t\t\t\t.getResourcesString(R.string.action_mode_title, 4), 4));\n+\t}\n+\n+\tprivate void createTestProject(String projectName) {\n+\t\tProject project = new Project(ApplicationProvider.getApplicationContext(), projectName);\n+\t\tScene sceneOne = new Scene(\"testScene1\", project);\n+\t\tScene sceneTwo = new Scene(\"testScene2\", project);\n+\t\tScene sceneThree = new Scene(\"testScene2\", project);\n+\n+\t\tproject.addScene(sceneOne);\n+\t\tproject.addScene(sceneTwo);\n+\t\tproject.addScene(sceneThree);\n+\n+\t\tProjectManager.getInstance().setCurrentProject(project);\n+\t\tProjectSaveTask\n+\t\t\t\t.task(project, ApplicationProvider.getApplicationContext());\n+\t}\n+\n+\tpublic void checkIsTextCompletelyDisplayed(BaseActivityTestRule<ProjectActivity> activity) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 108}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3848, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}