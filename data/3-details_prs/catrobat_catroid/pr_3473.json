{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzczNjQ5MjI0", "number": 3473, "title": "CATROID-387 Show messages of BroadcastMessageBricks in lexicographic order", "bodyText": "Add a UI test for correct lexicographic order\nRename createNewBroadcastMessageOnBrick() and withNameableValues() as there were spelling mistakes.\nRename BroadcastMessageBrickUtils to BroadcastMessageBrickTestUtils to prevent misleading.", "createdAt": "2020-02-11T13:08:51Z", "url": "https://github.com/Catrobat/Catroid/pull/3473", "merged": true, "mergeCommit": {"oid": "27c02ee36931716dacdb0e28018ebc6fc35a883e"}, "closed": true, "closedAt": "2020-02-28T05:34:20Z", "author": {"login": "mstoeg"}, "timelineItems": {"totalCount": 18, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcDRgODABqjMwMjY0Nzc4NjA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcIo_V-AFqTM2NjE2NjUxNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU3NjIwNjI1", "url": "https://github.com/Catrobat/Catroid/pull/3473#pullrequestreview-357620625", "createdAt": "2020-02-12T16:54:30Z", "commit": null, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU3OTI3ODQy", "url": "https://github.com/Catrobat/Catroid/pull/3473#pullrequestreview-357927842", "createdAt": "2020-02-13T03:01:55Z", "commit": null, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU4NDE5OTAw", "url": "https://github.com/Catrobat/Catroid/pull/3473#pullrequestreview-358419900", "createdAt": "2020-02-13T17:41:42Z", "commit": null, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY0ODk1ODQ4", "url": "https://github.com/Catrobat/Catroid/pull/3473#pullrequestreview-364895848", "createdAt": "2020-02-26T13:29:12Z", "commit": null, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxMzoyOToxM1rOFureHw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxMzo0NTo1NVrOFusCDA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDQ5MTAzOQ==", "bodyText": "Please rename class to ..TestUtils.", "url": "https://github.com/Catrobat/Catroid/pull/3473#discussion_r384491039", "createdAt": "2020-02-26T13:29:13Z", "author": {"login": "gPathpp"}, "path": "catroid/src/androidTest/java/org/catrobat/catroid/uiespresso/content/messagecontainer/BroadcastMessageBrickUtils.java", "diffHunk": "@@ -37,18 +39,19 @@ private BroadcastMessageBrickUtils() {\n \t\tthrow new AssertionError();\n \t}\n \n-\tpublic static void createNewBroadCastMessageOnBrick(final String message, final BroadcastMessageBrick brick,\n+\tpublic static void createNewBroadcastMessageOnBrick(final String message, final BroadcastMessageBrick brick,", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDUwMDIzNg==", "bodyText": "Please make it to a unit test.", "url": "https://github.com/Catrobat/Catroid/pull/3473#discussion_r384500236", "createdAt": "2020-02-26T13:45:55Z", "author": {"login": "gPathpp"}, "path": "catroid/src/androidTest/java/org/catrobat/catroid/uiespresso/content/brick/app/BroadcastMessageBricksTest.java", "diffHunk": "@@ -32,82 +32,102 @@\n import org.catrobat.catroid.content.bricks.BroadcastBrick;\n import org.catrobat.catroid.content.bricks.BroadcastReceiverBrick;\n import org.catrobat.catroid.content.bricks.BroadcastWaitBrick;\n+import org.catrobat.catroid.test.utils.TestUtils;\n import org.catrobat.catroid.ui.SpriteActivity;\n import org.catrobat.catroid.uiespresso.util.UiTestUtils;\n import org.catrobat.catroid.uiespresso.util.rules.FragmentActivityTestRule;\n+import org.junit.After;\n import org.junit.Before;\n import org.junit.Rule;\n import org.junit.Test;\n import org.junit.runner.RunWith;\n \n+import java.io.IOException;\n+import java.util.ArrayList;\n import java.util.Arrays;\n import java.util.List;\n \n import androidx.test.core.app.ApplicationProvider;\n import androidx.test.ext.junit.runners.AndroidJUnit4;\n \n import static org.catrobat.catroid.uiespresso.content.brick.utils.BrickDataInteractionWrapper.onBrickAtPosition;\n-import static org.catrobat.catroid.uiespresso.content.messagecontainer.BroadcastMessageBrickUtils.createNewBroadCastMessageOnBrick;\n+import static org.catrobat.catroid.uiespresso.content.messagecontainer.BroadcastMessageBrickUtils.createNewBroadcastMessageOnBrick;\n+import static org.catrobat.catroid.uiespresso.content.messagecontainer.BroadcastMessageBrickUtils.createNewBroadcastMessagesOnBrick;\n \n @RunWith(AndroidJUnit4.class)\n-public class BroadcastBrickMessageUpdateTest {\n+public class BroadcastMessageBricksTest {\n \tprivate String defaultMessage = \"defaultMessage\";\n-\tString message = \"Oida!\";\n+\tString message = \"newAddedMessage\";\n+\tList<String> broadcastMessages = new ArrayList<>(Arrays.asList(\"abc\", \"RST\", \"xyz\", \"uvw\",\n+\t\t\t\"def\", \"123\"));\n \tBroadcastReceiverBrick firstBroadcastBrick;\n \n \t@Rule\n \tpublic FragmentActivityTestRule<SpriteActivity> baseActivityTestRule = new\n \t\t\tFragmentActivityTestRule<>(SpriteActivity.class, SpriteActivity.EXTRA_FRAGMENT_POSITION, SpriteActivity.FRAGMENT_SCRIPTS);\n \n+\t@After\n+\tpublic void tearDown() throws IOException {\n+\t\tbaseActivityTestRule.finishActivity();\n+\t\tTestUtils.deleteProjects(BroadcastMessageBricksTest.class.getSimpleName());\n+\t}\n+\n \t@Before\n \tpublic void setUp() throws Exception {\n-\t\tcreateProject(this.getClass().getSimpleName());\n+\t\tcreateTestProjectWithBricks(BroadcastMessageBricksTest.class.getSimpleName());\n \t\tbaseActivityTestRule.launchActivity();\n \t}\n \n \t@Test\n \tpublic void testAllBroadcastBricksSpinnersShowTheNewAddedMessage() {\n-\t\tcreateNewBroadCastMessageOnBrick(message, firstBroadcastBrick,\n-\t\t\t\t(SpriteActivity) baseActivityTestRule.getActivity());\n+\t\tcreateNewBroadcastMessageOnBrick(message, firstBroadcastBrick,\n+\t\t\t\tbaseActivityTestRule.getActivity());\n \n \t\tList<String> spinnerValues = Arrays.asList(\n \t\t\t\tUiTestUtils.getResourcesString(R.string.new_option),\n \t\t\t\tdefaultMessage,\n \t\t\t\tmessage);\n \n-\t\tonBrickAtPosition(1)\n-\t\t\t\t.onSpinner(R.id.brick_broadcast_spinner)\n-\t\t\t\t.checkNameableValuesAvailable(spinnerValues);\n-\t\tonBrickAtPosition(2)\n-\t\t\t\t.onSpinner(R.id.brick_broadcast_spinner)\n-\t\t\t\t.checkNameableValuesAvailable(spinnerValues);\n-\t\tonBrickAtPosition(3)\n-\t\t\t\t.onSpinner(R.id.brick_broadcast_spinner)\n-\t\t\t\t.checkNameableValuesAvailable(spinnerValues);\n-\t\tonBrickAtPosition(4)\n-\t\t\t\t.onSpinner(R.id.brick_broadcast_spinner)\n-\t\t\t\t.checkNameableValuesAvailable(spinnerValues);\n-\t\tonBrickAtPosition(5)\n-\t\t\t\t.onSpinner(R.id.brick_broadcast_spinner)\n-\t\t\t\t.checkNameableValuesAvailable(spinnerValues);\n+\t\tint numberOfBroadcastBricks = 6;\n+\t\tfor (int brickIndex = 0; brickIndex < numberOfBroadcastBricks; brickIndex++) {\n+\t\t\tonBrickAtPosition(brickIndex)\n+\t\t\t\t\t.onSpinner(R.id.brick_broadcast_spinner)\n+\t\t\t\t\t.checkNameableValuesAvailable(spinnerValues);\n+\t\t}\n+\t}\n+\n+\t@Test\n+\tpublic void testLexicographicOrderOfBroadcastMessages() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 90}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY1NTAyMDEz", "url": "https://github.com/Catrobat/Catroid/pull/3473#pullrequestreview-365502013", "createdAt": "2020-02-27T08:51:41Z", "commit": null, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY1NTM1NTU0", "url": "https://github.com/Catrobat/Catroid/pull/3473#pullrequestreview-365535554", "createdAt": "2020-02-27T09:41:15Z", "commit": null, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QwOTo0MToxNVrOFvLP2Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QwOTo0MToxNVrOFvLP2Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTAxMTY3Mw==", "bodyText": "Please remove this.", "url": "https://github.com/Catrobat/Catroid/pull/3473#discussion_r385011673", "createdAt": "2020-02-27T09:41:15Z", "author": {"login": "gPathpp"}, "path": "catroid/src/test/java/org/catrobat/catroid/test/content/bricks/BroadcastMessageBrickTest.java", "diffHunk": "@@ -0,0 +1,94 @@\n+/*\n+ * Catroid: An on-device visual programming system for Android devices\n+ * Copyright (C) 2010-2020 The Catrobat Team\n+ * (<http://developer.catrobat.org/credits>)\n+ *\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU Affero General Public License as\n+ * published by the Free Software Foundation, either version 3 of the\n+ * License, or (at your option) any later version.\n+ *\n+ * An additional term exception under section 7 of the GNU Affero\n+ * General Public License, version 3, is available at\n+ * http://developer.catrobat.org/license_additional_term\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU Affero General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Affero General Public License\n+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+\n+package org.catrobat.catroid.test.content.bricks;\n+\n+import android.content.Context;\n+\n+import org.catrobat.catroid.R;\n+import org.catrobat.catroid.common.Nameable;\n+import org.catrobat.catroid.content.bricks.BroadcastMessageBrick;\n+import org.hamcrest.CoreMatchers;\n+import org.junit.After;\n+import org.junit.Assert;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.junit.runners.Parameterized;\n+import org.junit.runners.Parameterized.Parameter;\n+import org.junit.runners.Parameterized.Parameters;\n+import org.mockito.Mockito;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+import static org.mockito.ArgumentMatchers.eq;\n+\n+import static java.util.Arrays.asList;\n+import static java.util.Collections.singletonList;\n+\n+@RunWith(Parameterized.class)\n+public class BroadcastMessageBrickTest {\n+\n+\tprivate static String defaultValueString = \"defaultString\";\n+\tprivate static String newOptionString = \"newOption\";\n+\tprivate Context context;\n+\n+\t@Parameters(name = \"{0}\")\n+\tpublic static Iterable<Object[]> data() {\n+\t\treturn asList(new Object[][] {\n+\t\t\t\t{\"MultipleCharsWithDifferentCase\", asList(\"a\", \"R\", \"x\"), asList(newOptionString, \"a\", \"R\", \"x\")},\n+\t\t\t\t{\"MultipleNumbers\", asList(\"50\", \"3\", \"12\"), asList(newOptionString, \"12\", \"3\", \"50\")},\n+\t\t\t\t{\"WithSpecialCharacters\", asList(\".\", \"a\", \":\", \"_b\", \"c\"), asList(newOptionString, \".\", \":\", \"_b\", \"a\", \"c\")},\n+\t\t\t\t{\"NoMessage\", new ArrayList<>(), singletonList(defaultValueString)},\n+\t\t});\n+\t}\n+\n+\t@Parameterized.Parameter\n+\tpublic String name;\n+\n+\t@Parameter(1)\n+\tpublic List<String> messages;\n+\n+\t@Parameter(2)\n+\tpublic List<String> expectedOutput;\n+\n+\t@Before\n+\tpublic void setUp() throws Exception {\n+\t\tcontext = Mockito.mock(Context.class);\n+\t\tMockito.when(context.getString(eq(R.string.brick_broadcast_default_value))).thenReturn(defaultValueString);\n+\t\tMockito.when(context.getString(eq(R.string.new_option))).thenReturn(newOptionString);\n+\t}\n+\n+\t@After\n+\tpublic void tearDown() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 85}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b10880f9cab5bc4db6d60713b34a351ccdb3d1dc", "author": {"user": {"login": "mstoeg", "name": "Martin St\u00f6glehner"}}, "url": "https://github.com/Catrobat/Catroid/commit/b10880f9cab5bc4db6d60713b34a351ccdb3d1dc", "committedDate": "2020-02-27T12:33:48Z", "message": "CATROID-387 Show messages of BroadcastMessageBricks in lexicographic order\n\n- Add a UI test for correct lexicographic order\n- Rename createNewBroadcastMessageOnBrick() and withNameableValues() as there were spelling mistakes.\n- Rename BroadcastMessageBrickUtils to BroadcastMessageBrickTestUtils to prevent misleading."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "b10880f9cab5bc4db6d60713b34a351ccdb3d1dc", "author": {"user": {"login": "mstoeg", "name": "Martin St\u00f6glehner"}}, "url": "https://github.com/Catrobat/Catroid/commit/b10880f9cab5bc4db6d60713b34a351ccdb3d1dc", "committedDate": "2020-02-27T12:33:48Z", "message": "CATROID-387 Show messages of BroadcastMessageBricks in lexicographic order\n\n- Add a UI test for correct lexicographic order\n- Rename createNewBroadcastMessageOnBrick() and withNameableValues() as there were spelling mistakes.\n- Rename BroadcastMessageBrickUtils to BroadcastMessageBrickTestUtils to prevent misleading."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY1NjUzNjM0", "url": "https://github.com/Catrobat/Catroid/pull/3473#pullrequestreview-365653634", "createdAt": "2020-02-27T12:50:34Z", "commit": {"oid": "b10880f9cab5bc4db6d60713b34a351ccdb3d1dc"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY2MTY2NTE1", "url": "https://github.com/Catrobat/Catroid/pull/3473#pullrequestreview-366166515", "createdAt": "2020-02-28T05:22:52Z", "commit": {"oid": "b10880f9cab5bc4db6d60713b34a351ccdb3d1dc"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1980, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}