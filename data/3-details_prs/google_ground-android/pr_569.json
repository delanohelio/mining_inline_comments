{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDczMjQyOTY4", "number": 569, "title": "Adding UI tests for adding a feature", "bodyText": "Fixes #120\nAdds an instrumented test for adding a feature. Tests are constructed using the GivenWhenThen style. For example:\n\nTest name: Add a feature\nGiven: a logged in user - with an active project which doesn't direct the user to add an observation when adding a feature.\nWhen: they tap the \"Add feature\" FAB and choose a feature type.\nThen: the observation marker is displayed in the center of the map screen.\n\nImplementation details\n\n Refactor the authentication process so that a FakeAuthenticationManager can provide a fake user during tests\n Create a FakeRemoteDataStore to provide fake Project and Layer objects to tests\n Use trampoline as the io and ui Rx schedulers\n Add RxIdler\n Add databinding idling resource\n\nTests:\n\n Verify that tapping on the map does nothing when initially loaded\n Verify that adding a feature adds a map pin at the current crosshair position, and that tapping on that feature loads its details\n\nVerification steps\n\nRun the tests on an emulator or real device\n\n@gino-m @shobhitagarwal1612 @scolsen PTAL.", "createdAt": "2020-08-25T14:27:15Z", "url": "https://github.com/google/ground-android/pull/569", "merged": true, "mergeCommit": {"oid": "2136deb2e4a3232845e25665638c27be9d1f93be"}, "closed": true, "closedAt": "2020-09-24T05:57:49Z", "author": {"login": "dturner"}, "timelineItems": {"totalCount": 28, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdCYYDugBqjM2OTA0OTAyMDU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdL6wQIAFqTQ5NTI0MDA0Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b5465f3525c1e7b18af81e33368b9eddd534d619", "author": {"user": {"login": "dturner", "name": "Don Turner"}}, "url": "https://github.com/google/ground-android/commit/b5465f3525c1e7b18af81e33368b9eddd534d619", "committedDate": "2020-08-25T14:04:38Z", "message": "Refactor test data into own class. Tidy up."}, "afterCommit": {"oid": "6fba2a175151d91d2fc2e23403008dcb3155d13a", "author": {"user": {"login": "dturner", "name": "Don Turner"}}, "url": "https://github.com/google/ground-android/commit/6fba2a175151d91d2fc2e23403008dcb3155d13a", "committedDate": "2020-08-25T14:48:43Z", "message": "Refactor test data into own class. Tidy up."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc1MjIwMjg0", "url": "https://github.com/google/ground-android/pull/569#pullrequestreview-475220284", "createdAt": "2020-08-26T07:27:17Z", "commit": {"oid": "6fba2a175151d91d2fc2e23403008dcb3155d13a"}, "state": "COMMENTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQwNzoyNzoxN1rOHG_SBg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQwNzo0NDowNFrOHG_1og==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzA5MDMxMA==", "bodyText": "Close parenthesis at the same level as the first character of the line that opens it. Not a hard rule but I think it's the trend now.\nTo avoid bikeshedding like this I recommend you install spotless. It's 10 lines in your build.gradle file that will save a lot of time.", "url": "https://github.com/google/ground-android/pull/569#discussion_r477090310", "createdAt": "2020-08-26T07:27:17Z", "author": {"login": "JoseAlcerreca"}, "path": "gnd/src/androidTest/java/com/google/android/gnd/AddFeatureTest.java", "diffHunk": "@@ -0,0 +1,152 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.android.gnd;\n+\n+import static androidx.test.espresso.Espresso.onData;\n+import static androidx.test.espresso.Espresso.onView;\n+import static androidx.test.espresso.action.ViewActions.click;\n+import static androidx.test.espresso.assertion.ViewAssertions.matches;\n+import static androidx.test.espresso.matcher.ViewMatchers.isCompletelyDisplayed;\n+import static androidx.test.espresso.matcher.ViewMatchers.withId;\n+import static androidx.test.espresso.matcher.ViewMatchers.withText;\n+import static org.hamcrest.CoreMatchers.allOf;\n+import static org.hamcrest.CoreMatchers.is;\n+import static org.hamcrest.Matchers.instanceOf;\n+import static org.hamcrest.Matchers.not;\n+\n+import android.content.Context;\n+import androidx.room.Room;\n+import androidx.test.core.app.ActivityScenario;\n+import androidx.test.ext.junit.rules.ActivityScenarioRule;\n+import com.google.android.gnd.persistence.local.LocalDatabaseModule;\n+import com.google.android.gnd.persistence.local.room.LocalDatabase;\n+import com.google.android.gnd.persistence.remote.FakeRemoteDataStore;\n+import com.google.android.gnd.persistence.remote.FakeRemoteStorageManager;\n+import com.google.android.gnd.persistence.remote.RemoteDataStore;\n+import com.google.android.gnd.persistence.remote.RemoteStorageManager;\n+import com.google.android.gnd.persistence.remote.RemoteStorageModule;\n+import com.google.android.gnd.persistence.uuid.FakeUuidGenerator;\n+import com.google.android.gnd.persistence.uuid.OfflineUuidGenerator;\n+import com.google.android.gnd.system.auth.AuthenticationManager;\n+import com.google.android.gnd.system.auth.AuthenticationModule;\n+import com.google.android.gnd.system.auth.FakeAuthenticationManager;\n+import dagger.Binds;\n+import dagger.Module;\n+import dagger.Provides;\n+import dagger.hilt.InstallIn;\n+import dagger.hilt.android.components.ApplicationComponent;\n+import dagger.hilt.android.qualifiers.ApplicationContext;\n+import dagger.hilt.android.testing.HiltAndroidRule;\n+import dagger.hilt.android.testing.HiltAndroidTest;\n+import dagger.hilt.android.testing.UninstallModules;\n+import javax.inject.Singleton;\n+import org.junit.Rule;\n+import org.junit.Test;\n+\n+@UninstallModules({AuthenticationModule.class, RemoteStorageModule.class,\n+  LocalDatabaseModule.class})\n+@HiltAndroidTest\n+public class AddFeatureTest {\n+\n+  // Ensures that the Hilt component is initialized before running the ActivityScenarioRule.\n+  public @Rule(order = 0)\n+  HiltAndroidRule hiltRule = new HiltAndroidRule(this);\n+\n+  // Sets the preferences so no login is required and an active project is selected.\n+  public @Rule(order = 1)\n+  SetPreferencesRule preferencesRule = new SetPreferencesRule();\n+\n+  public @Rule(order = 2)\n+  ActivityScenarioRule scenarioRule =\n+    new ActivityScenarioRule(MainActivity.class);\n+\n+  @Module\n+  @InstallIn(ApplicationComponent.class)\n+  abstract class TestDependenciesModule {\n+\n+    @Binds\n+    @Singleton\n+    abstract AuthenticationManager bindAuthenticationManager(\n+      FakeAuthenticationManager authenticationManager);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6fba2a175151d91d2fc2e23403008dcb3155d13a"}, "originalPosition": 84}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzA5MTAzMQ==", "bodyText": "I don't think this is super idiomatic. I would move these modules to their own files or put them at the bottom of this file. I've opened this file to read the tests, not to read the setup. The only reason you would put a class inside another class is if you need to access the parent from the child.", "url": "https://github.com/google/ground-android/pull/569#discussion_r477091031", "createdAt": "2020-08-26T07:28:40Z", "author": {"login": "JoseAlcerreca"}, "path": "gnd/src/androidTest/java/com/google/android/gnd/AddFeatureTest.java", "diffHunk": "@@ -0,0 +1,152 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.android.gnd;\n+\n+import static androidx.test.espresso.Espresso.onData;\n+import static androidx.test.espresso.Espresso.onView;\n+import static androidx.test.espresso.action.ViewActions.click;\n+import static androidx.test.espresso.assertion.ViewAssertions.matches;\n+import static androidx.test.espresso.matcher.ViewMatchers.isCompletelyDisplayed;\n+import static androidx.test.espresso.matcher.ViewMatchers.withId;\n+import static androidx.test.espresso.matcher.ViewMatchers.withText;\n+import static org.hamcrest.CoreMatchers.allOf;\n+import static org.hamcrest.CoreMatchers.is;\n+import static org.hamcrest.Matchers.instanceOf;\n+import static org.hamcrest.Matchers.not;\n+\n+import android.content.Context;\n+import androidx.room.Room;\n+import androidx.test.core.app.ActivityScenario;\n+import androidx.test.ext.junit.rules.ActivityScenarioRule;\n+import com.google.android.gnd.persistence.local.LocalDatabaseModule;\n+import com.google.android.gnd.persistence.local.room.LocalDatabase;\n+import com.google.android.gnd.persistence.remote.FakeRemoteDataStore;\n+import com.google.android.gnd.persistence.remote.FakeRemoteStorageManager;\n+import com.google.android.gnd.persistence.remote.RemoteDataStore;\n+import com.google.android.gnd.persistence.remote.RemoteStorageManager;\n+import com.google.android.gnd.persistence.remote.RemoteStorageModule;\n+import com.google.android.gnd.persistence.uuid.FakeUuidGenerator;\n+import com.google.android.gnd.persistence.uuid.OfflineUuidGenerator;\n+import com.google.android.gnd.system.auth.AuthenticationManager;\n+import com.google.android.gnd.system.auth.AuthenticationModule;\n+import com.google.android.gnd.system.auth.FakeAuthenticationManager;\n+import dagger.Binds;\n+import dagger.Module;\n+import dagger.Provides;\n+import dagger.hilt.InstallIn;\n+import dagger.hilt.android.components.ApplicationComponent;\n+import dagger.hilt.android.qualifiers.ApplicationContext;\n+import dagger.hilt.android.testing.HiltAndroidRule;\n+import dagger.hilt.android.testing.HiltAndroidTest;\n+import dagger.hilt.android.testing.UninstallModules;\n+import javax.inject.Singleton;\n+import org.junit.Rule;\n+import org.junit.Test;\n+\n+@UninstallModules({AuthenticationModule.class, RemoteStorageModule.class,\n+  LocalDatabaseModule.class})\n+@HiltAndroidTest\n+public class AddFeatureTest {\n+\n+  // Ensures that the Hilt component is initialized before running the ActivityScenarioRule.\n+  public @Rule(order = 0)\n+  HiltAndroidRule hiltRule = new HiltAndroidRule(this);\n+\n+  // Sets the preferences so no login is required and an active project is selected.\n+  public @Rule(order = 1)\n+  SetPreferencesRule preferencesRule = new SetPreferencesRule();\n+\n+  public @Rule(order = 2)\n+  ActivityScenarioRule scenarioRule =\n+    new ActivityScenarioRule(MainActivity.class);\n+\n+  @Module\n+  @InstallIn(ApplicationComponent.class)\n+  abstract class TestDependenciesModule {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6fba2a175151d91d2fc2e23403008dcb3155d13a"}, "originalPosition": 79}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzA5MTg4Mw==", "bodyText": "Weird throws here, is it needed?", "url": "https://github.com/google/ground-android/pull/569#discussion_r477091883", "createdAt": "2020-08-26T07:30:11Z", "author": {"login": "JoseAlcerreca"}, "path": "gnd/src/androidTest/java/com/google/android/gnd/AddFeatureTest.java", "diffHunk": "@@ -0,0 +1,152 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.android.gnd;\n+\n+import static androidx.test.espresso.Espresso.onData;\n+import static androidx.test.espresso.Espresso.onView;\n+import static androidx.test.espresso.action.ViewActions.click;\n+import static androidx.test.espresso.assertion.ViewAssertions.matches;\n+import static androidx.test.espresso.matcher.ViewMatchers.isCompletelyDisplayed;\n+import static androidx.test.espresso.matcher.ViewMatchers.withId;\n+import static androidx.test.espresso.matcher.ViewMatchers.withText;\n+import static org.hamcrest.CoreMatchers.allOf;\n+import static org.hamcrest.CoreMatchers.is;\n+import static org.hamcrest.Matchers.instanceOf;\n+import static org.hamcrest.Matchers.not;\n+\n+import android.content.Context;\n+import androidx.room.Room;\n+import androidx.test.core.app.ActivityScenario;\n+import androidx.test.ext.junit.rules.ActivityScenarioRule;\n+import com.google.android.gnd.persistence.local.LocalDatabaseModule;\n+import com.google.android.gnd.persistence.local.room.LocalDatabase;\n+import com.google.android.gnd.persistence.remote.FakeRemoteDataStore;\n+import com.google.android.gnd.persistence.remote.FakeRemoteStorageManager;\n+import com.google.android.gnd.persistence.remote.RemoteDataStore;\n+import com.google.android.gnd.persistence.remote.RemoteStorageManager;\n+import com.google.android.gnd.persistence.remote.RemoteStorageModule;\n+import com.google.android.gnd.persistence.uuid.FakeUuidGenerator;\n+import com.google.android.gnd.persistence.uuid.OfflineUuidGenerator;\n+import com.google.android.gnd.system.auth.AuthenticationManager;\n+import com.google.android.gnd.system.auth.AuthenticationModule;\n+import com.google.android.gnd.system.auth.FakeAuthenticationManager;\n+import dagger.Binds;\n+import dagger.Module;\n+import dagger.Provides;\n+import dagger.hilt.InstallIn;\n+import dagger.hilt.android.components.ApplicationComponent;\n+import dagger.hilt.android.qualifiers.ApplicationContext;\n+import dagger.hilt.android.testing.HiltAndroidRule;\n+import dagger.hilt.android.testing.HiltAndroidTest;\n+import dagger.hilt.android.testing.UninstallModules;\n+import javax.inject.Singleton;\n+import org.junit.Rule;\n+import org.junit.Test;\n+\n+@UninstallModules({AuthenticationModule.class, RemoteStorageModule.class,\n+  LocalDatabaseModule.class})\n+@HiltAndroidTest\n+public class AddFeatureTest {\n+\n+  // Ensures that the Hilt component is initialized before running the ActivityScenarioRule.\n+  public @Rule(order = 0)\n+  HiltAndroidRule hiltRule = new HiltAndroidRule(this);\n+\n+  // Sets the preferences so no login is required and an active project is selected.\n+  public @Rule(order = 1)\n+  SetPreferencesRule preferencesRule = new SetPreferencesRule();\n+\n+  public @Rule(order = 2)\n+  ActivityScenarioRule scenarioRule =\n+    new ActivityScenarioRule(MainActivity.class);\n+\n+  @Module\n+  @InstallIn(ApplicationComponent.class)\n+  abstract class TestDependenciesModule {\n+\n+    @Binds\n+    @Singleton\n+    abstract AuthenticationManager bindAuthenticationManager(\n+      FakeAuthenticationManager authenticationManager);\n+\n+    @Binds\n+    @Singleton\n+    abstract RemoteDataStore bindRemoteDataStore(FakeRemoteDataStore remoteDataStore);\n+\n+    @Binds\n+    @Singleton\n+    abstract RemoteStorageManager bindRemoteStorageManager(\n+      FakeRemoteStorageManager remoteStorageManager);\n+\n+    @Binds\n+    @Singleton\n+    abstract OfflineUuidGenerator offlineUuidGenerator(FakeUuidGenerator uuidGenerator);\n+  }\n+\n+  @InstallIn(ApplicationComponent.class)\n+  @Module\n+  public class LocalDatabaseModule {\n+\n+    @Provides\n+    @Singleton\n+    LocalDatabase localDatabase(@ApplicationContext Context context) {\n+      return Room.inMemoryDatabaseBuilder(context, LocalDatabase.class).build();\n+    }\n+  }\n+\n+  // Given: a logged in user - with an active project with no map markers.\n+  // When: they tap on the centre of the map.\n+  // Then: nothing happens - the feature fragment is not displayed.\n+  @Test\n+  public void tappingCrosshairOnEmptyMapDoesNothing() throws InterruptedException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6fba2a175151d91d2fc2e23403008dcb3155d13a"}, "originalPosition": 115}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzA5ODgxMw==", "bodyText": "Have you tried idling resources? Given you're dealing with maps and fragments it might be tricky", "url": "https://github.com/google/ground-android/pull/569#discussion_r477098813", "createdAt": "2020-08-26T07:42:57Z", "author": {"login": "JoseAlcerreca"}, "path": "gnd/src/androidTest/java/com/google/android/gnd/AddFeatureTest.java", "diffHunk": "@@ -0,0 +1,152 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.android.gnd;\n+\n+import static androidx.test.espresso.Espresso.onData;\n+import static androidx.test.espresso.Espresso.onView;\n+import static androidx.test.espresso.action.ViewActions.click;\n+import static androidx.test.espresso.assertion.ViewAssertions.matches;\n+import static androidx.test.espresso.matcher.ViewMatchers.isCompletelyDisplayed;\n+import static androidx.test.espresso.matcher.ViewMatchers.withId;\n+import static androidx.test.espresso.matcher.ViewMatchers.withText;\n+import static org.hamcrest.CoreMatchers.allOf;\n+import static org.hamcrest.CoreMatchers.is;\n+import static org.hamcrest.Matchers.instanceOf;\n+import static org.hamcrest.Matchers.not;\n+\n+import android.content.Context;\n+import androidx.room.Room;\n+import androidx.test.core.app.ActivityScenario;\n+import androidx.test.ext.junit.rules.ActivityScenarioRule;\n+import com.google.android.gnd.persistence.local.LocalDatabaseModule;\n+import com.google.android.gnd.persistence.local.room.LocalDatabase;\n+import com.google.android.gnd.persistence.remote.FakeRemoteDataStore;\n+import com.google.android.gnd.persistence.remote.FakeRemoteStorageManager;\n+import com.google.android.gnd.persistence.remote.RemoteDataStore;\n+import com.google.android.gnd.persistence.remote.RemoteStorageManager;\n+import com.google.android.gnd.persistence.remote.RemoteStorageModule;\n+import com.google.android.gnd.persistence.uuid.FakeUuidGenerator;\n+import com.google.android.gnd.persistence.uuid.OfflineUuidGenerator;\n+import com.google.android.gnd.system.auth.AuthenticationManager;\n+import com.google.android.gnd.system.auth.AuthenticationModule;\n+import com.google.android.gnd.system.auth.FakeAuthenticationManager;\n+import dagger.Binds;\n+import dagger.Module;\n+import dagger.Provides;\n+import dagger.hilt.InstallIn;\n+import dagger.hilt.android.components.ApplicationComponent;\n+import dagger.hilt.android.qualifiers.ApplicationContext;\n+import dagger.hilt.android.testing.HiltAndroidRule;\n+import dagger.hilt.android.testing.HiltAndroidTest;\n+import dagger.hilt.android.testing.UninstallModules;\n+import javax.inject.Singleton;\n+import org.junit.Rule;\n+import org.junit.Test;\n+\n+@UninstallModules({AuthenticationModule.class, RemoteStorageModule.class,\n+  LocalDatabaseModule.class})\n+@HiltAndroidTest\n+public class AddFeatureTest {\n+\n+  // Ensures that the Hilt component is initialized before running the ActivityScenarioRule.\n+  public @Rule(order = 0)\n+  HiltAndroidRule hiltRule = new HiltAndroidRule(this);\n+\n+  // Sets the preferences so no login is required and an active project is selected.\n+  public @Rule(order = 1)\n+  SetPreferencesRule preferencesRule = new SetPreferencesRule();\n+\n+  public @Rule(order = 2)\n+  ActivityScenarioRule scenarioRule =\n+    new ActivityScenarioRule(MainActivity.class);\n+\n+  @Module\n+  @InstallIn(ApplicationComponent.class)\n+  abstract class TestDependenciesModule {\n+\n+    @Binds\n+    @Singleton\n+    abstract AuthenticationManager bindAuthenticationManager(\n+      FakeAuthenticationManager authenticationManager);\n+\n+    @Binds\n+    @Singleton\n+    abstract RemoteDataStore bindRemoteDataStore(FakeRemoteDataStore remoteDataStore);\n+\n+    @Binds\n+    @Singleton\n+    abstract RemoteStorageManager bindRemoteStorageManager(\n+      FakeRemoteStorageManager remoteStorageManager);\n+\n+    @Binds\n+    @Singleton\n+    abstract OfflineUuidGenerator offlineUuidGenerator(FakeUuidGenerator uuidGenerator);\n+  }\n+\n+  @InstallIn(ApplicationComponent.class)\n+  @Module\n+  public class LocalDatabaseModule {\n+\n+    @Provides\n+    @Singleton\n+    LocalDatabase localDatabase(@ApplicationContext Context context) {\n+      return Room.inMemoryDatabaseBuilder(context, LocalDatabase.class).build();\n+    }\n+  }\n+\n+  // Given: a logged in user - with an active project with no map markers.\n+  // When: they tap on the centre of the map.\n+  // Then: nothing happens - the feature fragment is not displayed.\n+  @Test\n+  public void tappingCrosshairOnEmptyMapDoesNothing() throws InterruptedException {\n+    ActivityScenario<MainActivity> scenario = scenarioRule.getScenario();\n+\n+    // Tap on the crosshair at the centre of the map.\n+    onView(withId(R.id.map_crosshairs)).perform(click());\n+\n+    // Verify that the title is not displayed.\n+    onView(withId(R.id.feature_title)).check(matches(not(isCompletelyDisplayed())));\n+  }\n+\n+  // Given: a logged in user - with an active project which doesn't direct the user to add an\n+  // observation when adding a feature.\n+  // When: they tap the \"Add feature\" FAB and choose a feature type.\n+  // Then: the observation marker is displayed on the map screen.\n+  @Test\n+  public void addFeatureWithNoFields() throws InterruptedException {\n+    ActivityScenario<MainActivity> scenario = scenarioRule.getScenario();\n+\n+    // Tap on the \"Add feature\" button.\n+    onView(withId(R.id.add_feature_btn)).perform(click());\n+\n+    // Tap on the layer type.\n+    onData(allOf(is(instanceOf(String.class)), is(FakeData.LAYER_NO_FIELDS_NAME))).perform(click());\n+\n+    // Tap on the crosshair at the centre of the map.\n+    onView(withId(R.id.map_crosshairs)).perform(click());\n+\n+    // TODO: figure out how to remove this\n+    //  It's probably because the feature fragment animation does not block the test and the\n+    //  feature title isn't updated until the animation has completed (and it isn't disabled by the\n+    //  normal `transition_animation_scale 0` etc commands).\n+    Thread.sleep(100);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6fba2a175151d91d2fc2e23403008dcb3155d13a"}, "originalPosition": 146}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzA5OTA2OA==", "bodyText": "Was this kind of indentation allowed in Java? D:", "url": "https://github.com/google/ground-android/pull/569#discussion_r477099068", "createdAt": "2020-08-26T07:43:26Z", "author": {"login": "JoseAlcerreca"}, "path": "gnd/src/androidTest/java/com/google/android/gnd/CustomTestRunner.java", "diffHunk": "@@ -0,0 +1,36 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.android.gnd;\n+\n+import android.app.Application;\n+import android.content.Context;\n+import androidx.test.runner.AndroidJUnitRunner;\n+import dagger.hilt.android.testing.HiltTestApplication;\n+import timber.log.Timber;\n+import timber.log.Timber.DebugTree;\n+\n+public class CustomTestRunner extends AndroidJUnitRunner {\n+\n+  @Override\n+  public Application newApplication(ClassLoader cl, String className,\n+    Context context)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6fba2a175151d91d2fc2e23403008dcb3155d13a"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzA5OTQyNg==", "bodyText": "same line", "url": "https://github.com/google/ground-android/pull/569#discussion_r477099426", "createdAt": "2020-08-26T07:44:04Z", "author": {"login": "JoseAlcerreca"}, "path": "gnd/src/androidTest/java/com/google/android/gnd/persistence/remote/FakeRemoteDataStore.java", "diffHunk": "@@ -0,0 +1,87 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.android.gnd.persistence.remote;\n+\n+import com.google.android.gnd.FakeData;\n+import com.google.android.gnd.model.Mutation;\n+import com.google.android.gnd.model.Project;\n+import com.google.android.gnd.model.User;\n+import com.google.android.gnd.model.feature.Feature;\n+import com.google.android.gnd.model.layer.Layer;\n+import com.google.android.gnd.model.layer.Style;\n+import com.google.android.gnd.model.observation.Observation;\n+import com.google.android.gnd.rx.ValueOrError;\n+import com.google.common.collect.ImmutableCollection;\n+import com.google.common.collect.ImmutableList;\n+import io.reactivex.Completable;\n+import io.reactivex.Flowable;\n+import io.reactivex.Single;\n+import java.util.Collections;\n+import java.util.List;\n+import javax.inject.Inject;\n+\n+public class FakeRemoteDataStore implements RemoteDataStore {\n+\n+  private final Layer layerWithNoFields = Layer.newBuilder()\n+    .setId(FakeData.LAYER_NO_FIELDS_ID)\n+    .setName(FakeData.LAYER_NO_FIELDS_NAME)\n+    .setDefaultStyle(Style.builder()\n+      .setColor(FakeData.LAYER_NO_FIELDS_COLOR)\n+      .build())\n+    .build();\n+\n+  private final Project testProject = Project.newBuilder()\n+    .setId(FakeData.PROJECT_ID)\n+    .setTitle(FakeData.PROJECT_TITLE)\n+    .setDescription(FakeData.PROJECT_DESCRIPTION)\n+    .putLayer(FakeData.LAYER_NO_FIELDS_ID, layerWithNoFields)\n+    .build();\n+\n+  @Inject\n+  FakeRemoteDataStore() {\n+  }\n+\n+  @Override\n+  public Single<List<Project>> loadProjectSummaries(\n+    User user) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6fba2a175151d91d2fc2e23403008dcb3155d13a"}, "originalPosition": 60}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "09258abf3c395a616635d37acaccc0bf971ee91f", "author": {"user": {"login": "dturner", "name": "Don Turner"}}, "url": "https://github.com/google/ground-android/commit/09258abf3c395a616635d37acaccc0bf971ee91f", "committedDate": "2020-08-27T16:18:33Z", "message": "Fix PMD error"}, "afterCommit": {"oid": "d1dcac7b1a521da35cd7e134ef129d7f9630679a", "author": {"user": {"login": "dturner", "name": "Don Turner"}}, "url": "https://github.com/google/ground-android/commit/d1dcac7b1a521da35cd7e134ef129d7f9630679a", "committedDate": "2020-09-08T12:47:07Z", "message": "Fix PMD error"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6a498fff43fe91050b1d336242425067ea7690d8", "author": {"user": {"login": "gino-m", "name": "Gino Miceli"}}, "url": "https://github.com/google/ground-android/commit/6a498fff43fe91050b1d336242425067ea7690d8", "committedDate": "2020-09-21T18:35:34Z", "message": "Merge branch 'master' into ui-tests"}, "afterCommit": {"oid": "82bd42f8401a531beab46ff39fdfe1fd78d28262", "author": {"user": {"login": "dturner", "name": "Don Turner"}}, "url": "https://github.com/google/ground-android/commit/82bd42f8401a531beab46ff39fdfe1fd78d28262", "committedDate": "2020-09-22T16:07:07Z", "message": "Remove custom BottomSheetBehavior. Add back sleep. Tidy up code"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4f2ffbc265ab9c73763f048a0b18b752a65ffff8", "author": {"user": {"login": "dturner", "name": "Don Turner"}}, "url": "https://github.com/google/ground-android/commit/4f2ffbc265ab9c73763f048a0b18b752a65ffff8", "committedDate": "2020-09-22T16:08:14Z", "message": "Adding test dependencies and basic UI test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1b776fbb0d93aea2e7962cc792f0b64d3bdbcd07", "author": {"user": {"login": "dturner", "name": "Don Turner"}}, "url": "https://github.com/google/ground-android/commit/1b776fbb0d93aea2e7962cc792f0b64d3bdbcd07", "committedDate": "2020-09-22T16:08:14Z", "message": "Refactor AuthenticationManager into interface and implementation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8ee3b69cd61d333eeebaf06b5f4dcf464532c140", "author": {"user": {"login": "dturner", "name": "Don Turner"}}, "url": "https://github.com/google/ground-android/commit/8ee3b69cd61d333eeebaf06b5f4dcf464532c140", "committedDate": "2020-09-22T16:08:14Z", "message": "Fix checkstyle issues"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d138fcfd9e7d2e30091202645a48497886c21428", "author": {"user": {"login": "dturner", "name": "Don Turner"}}, "url": "https://github.com/google/ground-android/commit/d138fcfd9e7d2e30091202645a48497886c21428", "committedDate": "2020-09-22T16:08:14Z", "message": "Move authentication clases into auth package"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e8feb8b929c3ab52c8004dd8a3205d2bbc2e2d4e", "author": {"user": {"login": "dturner", "name": "Don Turner"}}, "url": "https://github.com/google/ground-android/commit/e8feb8b929c3ab52c8004dd8a3205d2bbc2e2d4e", "committedDate": "2020-09-22T16:08:14Z", "message": "Create AuthenticationModule which can be uninstalled for tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8ed5b9bb7ddcaa23a11ee37ee291fc41eebfb1be", "author": {"user": {"login": "dturner", "name": "Don Turner"}}, "url": "https://github.com/google/ground-android/commit/8ed5b9bb7ddcaa23a11ee37ee291fc41eebfb1be", "committedDate": "2020-09-22T16:08:14Z", "message": "Add minimum code for FakeAuthMgr to facilitate sign in"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "860380b3cced590c64662e05e2089edad70cc0c2", "author": {"user": {"login": "dturner", "name": "Don Turner"}}, "url": "https://github.com/google/ground-android/commit/860380b3cced590c64662e05e2089edad70cc0c2", "committedDate": "2020-09-22T16:08:14Z", "message": "Allow Timber output from tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "de34924a82ad3fa074cce9e060acdf2daef1f926", "author": {"user": {"login": "dturner", "name": "Don Turner"}}, "url": "https://github.com/google/ground-android/commit/de34924a82ad3fa074cce9e060acdf2daef1f926", "committedDate": "2020-09-22T16:08:14Z", "message": "Move remote storage dependencies into new module"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "34be340b4c0f0494cdd63bdc65dfd63d428fe98c", "author": {"user": {"login": "dturner", "name": "Don Turner"}}, "url": "https://github.com/google/ground-android/commit/34be340b4c0f0494cdd63bdc65dfd63d428fe98c", "committedDate": "2020-09-22T16:08:14Z", "message": "Hacky version of UI tests working"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dce4998bba8a2fd9ee04b954c95409b80e5252de", "author": {"user": {"login": "dturner", "name": "Don Turner"}}, "url": "https://github.com/google/ground-android/commit/dce4998bba8a2fd9ee04b954c95409b80e5252de", "committedDate": "2020-09-22T16:08:14Z", "message": "Refactor test data into own class. Tidy up."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3a1707625c64e64157d196204dcf1b3587c6c411", "author": {"user": {"login": "dturner", "name": "Don Turner"}}, "url": "https://github.com/google/ground-android/commit/3a1707625c64e64157d196204dcf1b3587c6c411", "committedDate": "2020-09-22T16:08:14Z", "message": "Fix checkstyle issues. Also fixes #570 and #571"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fa5b8d1f850178af2052192fa24abb35cc48d4f4", "author": {"user": {"login": "dturner", "name": "Don Turner"}}, "url": "https://github.com/google/ground-android/commit/fa5b8d1f850178af2052192fa24abb35cc48d4f4", "committedDate": "2020-09-22T16:08:14Z", "message": "Refactor test modules into own classes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e3e140f667e13a03bfadb2ee42621318713cb337", "author": {"user": {"login": "dturner", "name": "Don Turner"}}, "url": "https://github.com/google/ground-android/commit/e3e140f667e13a03bfadb2ee42621318713cb337", "committedDate": "2020-09-22T16:08:14Z", "message": "Remove InterruptedException"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e3996a6e502d7bcdcce547421fa747f24ac36ebc", "author": {"user": {"login": "dturner", "name": "Don Turner"}}, "url": "https://github.com/google/ground-android/commit/e3996a6e502d7bcdcce547421fa747f24ac36ebc", "committedDate": "2020-09-22T16:08:14Z", "message": "Make instrumented tests use same (synchronous) scheduler as host tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0485da93af869f18d9e27e4c6e5f50990c11e5c8", "author": {"user": {"login": "dturner", "name": "Don Turner"}}, "url": "https://github.com/google/ground-android/commit/0485da93af869f18d9e27e4c6e5f50990c11e5c8", "committedDate": "2020-09-22T16:08:14Z", "message": "Fix PMD error"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7b4e8dd9bf0d05a1053f70176e6692e95f5f6e29", "author": {"user": {"login": "dturner", "name": "Don Turner"}}, "url": "https://github.com/google/ground-android/commit/7b4e8dd9bf0d05a1053f70176e6692e95f5f6e29", "committedDate": "2020-09-22T16:08:14Z", "message": "Attempt to remove Thread.sleep by disabling bottom sheet animations, adding RxIdler and adding databinding idling resource"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a30a1bfaef71d69aa7c08b1fee77412c9b73ff78", "author": {"user": {"login": "dturner", "name": "Don Turner"}}, "url": "https://github.com/google/ground-android/commit/a30a1bfaef71d69aa7c08b1fee77412c9b73ff78", "committedDate": "2020-09-22T16:08:14Z", "message": "Change postValue to setValue"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "80064895e9d09a6010576ee91a846392972a706d", "author": {"user": {"login": "dturner", "name": "Don Turner"}}, "url": "https://github.com/google/ground-android/commit/80064895e9d09a6010576ee91a846392972a706d", "committedDate": "2020-09-22T16:08:15Z", "message": "Add back in code which shouldn't have been commented out"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bda7c8390058d9066613e9892ffc79f2fc1a20d8", "author": {"user": {"login": "dturner", "name": "Don Turner"}}, "url": "https://github.com/google/ground-android/commit/bda7c8390058d9066613e9892ffc79f2fc1a20d8", "committedDate": "2020-09-22T16:08:15Z", "message": "Remove custom BottomSheetBehavior. Add back sleep. Tidy up code"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "82bd42f8401a531beab46ff39fdfe1fd78d28262", "author": {"user": {"login": "dturner", "name": "Don Turner"}}, "url": "https://github.com/google/ground-android/commit/82bd42f8401a531beab46ff39fdfe1fd78d28262", "committedDate": "2020-09-22T16:07:07Z", "message": "Remove custom BottomSheetBehavior. Add back sleep. Tidy up code"}, "afterCommit": {"oid": "bda7c8390058d9066613e9892ffc79f2fc1a20d8", "author": {"user": {"login": "dturner", "name": "Don Turner"}}, "url": "https://github.com/google/ground-android/commit/bda7c8390058d9066613e9892ffc79f2fc1a20d8", "committedDate": "2020-09-22T16:08:15Z", "message": "Remove custom BottomSheetBehavior. Add back sleep. Tidy up code"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e7120e27f61ad53c10436dc81bfbc323c079a322", "author": {"user": {"login": "dturner", "name": "Don Turner"}}, "url": "https://github.com/google/ground-android/commit/e7120e27f61ad53c10436dc81bfbc323c079a322", "committedDate": "2020-09-22T19:26:17Z", "message": "Some final tidy up and refactoring"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "809208b50aef2deaee8f0f520691a9a0c3fc6aa9", "author": {"user": {"login": "dturner", "name": "Don Turner"}}, "url": "https://github.com/google/ground-android/commit/809208b50aef2deaee8f0f520691a9a0c3fc6aa9", "committedDate": "2020-09-22T19:54:33Z", "message": "Fix checkstyle errors"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk1MTM5Nzg1", "url": "https://github.com/google/ground-android/pull/569#pullrequestreview-495139785", "createdAt": "2020-09-24T00:17:47Z", "commit": {"oid": "809208b50aef2deaee8f0f520691a9a0c3fc6aa9"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk1MjQwMDQ3", "url": "https://github.com/google/ground-android/pull/569#pullrequestreview-495240047", "createdAt": "2020-09-24T05:57:36Z", "commit": {"oid": "809208b50aef2deaee8f0f520691a9a0c3fc6aa9"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1613, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}