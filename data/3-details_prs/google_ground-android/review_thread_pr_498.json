{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMzMTgxMjg4", "number": 498, "reviewThreads": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQyMjo0ODoyOVrOEE38pQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxNjowNDowN1rOEG0RiA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczNTQ2NDA1OnYy", "diffSide": "RIGHT", "path": "gnd/src/main/java/com/google/android/gnd/ui/offlinearea/viewer/OfflineAreaViewerFragment.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQyMjo0ODoyOVrOGixSXQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxNTowODoyOFrOGlz0XQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTExMjI4NQ==", "bodyText": "Please add class and public method Javadoc where not 100% obvious throughout.", "url": "https://github.com/google/ground-android/pull/498#discussion_r439112285", "createdAt": "2020-06-11T22:48:29Z", "author": {"login": "gino-m"}, "path": "gnd/src/main/java/com/google/android/gnd/ui/offlinearea/viewer/OfflineAreaViewerFragment.java", "diffHunk": "@@ -0,0 +1,108 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.android.gnd.ui.offlinearea.viewer;\n+\n+import static com.google.android.gnd.rx.RxAutoDispose.autoDisposable;\n+\n+import android.os.Bundle;\n+import android.view.LayoutInflater;\n+import android.view.View;\n+import android.view.ViewGroup;\n+import androidx.annotation.NonNull;\n+import androidx.annotation.Nullable;\n+import butterknife.OnClick;\n+import com.google.android.gnd.MainActivity;\n+import com.google.android.gnd.R;\n+import com.google.android.gnd.databinding.OfflineAreaViewerFragBinding;\n+import com.google.android.gnd.model.basemap.OfflineArea;\n+import com.google.android.gnd.model.feature.Point;\n+import com.google.android.gnd.ui.common.AbstractFragment;\n+import com.google.android.gnd.ui.map.MapAdapter;\n+import com.google.android.gnd.ui.map.MapProvider;\n+import io.reactivex.Single;\n+import javax.inject.Inject;\n+\n+public class OfflineAreaViewerFragment extends AbstractFragment {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5201ecd6209a578a73a745530b3b8ce56955d565"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjI5OTQ4NQ==", "bodyText": "a61f53b", "url": "https://github.com/google/ground-android/pull/498#discussion_r442299485", "createdAt": "2020-06-18T15:08:28Z", "author": {"login": "scolsen"}, "path": "gnd/src/main/java/com/google/android/gnd/ui/offlinearea/viewer/OfflineAreaViewerFragment.java", "diffHunk": "@@ -0,0 +1,108 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.android.gnd.ui.offlinearea.viewer;\n+\n+import static com.google.android.gnd.rx.RxAutoDispose.autoDisposable;\n+\n+import android.os.Bundle;\n+import android.view.LayoutInflater;\n+import android.view.View;\n+import android.view.ViewGroup;\n+import androidx.annotation.NonNull;\n+import androidx.annotation.Nullable;\n+import butterknife.OnClick;\n+import com.google.android.gnd.MainActivity;\n+import com.google.android.gnd.R;\n+import com.google.android.gnd.databinding.OfflineAreaViewerFragBinding;\n+import com.google.android.gnd.model.basemap.OfflineArea;\n+import com.google.android.gnd.model.feature.Point;\n+import com.google.android.gnd.ui.common.AbstractFragment;\n+import com.google.android.gnd.ui.map.MapAdapter;\n+import com.google.android.gnd.ui.map.MapProvider;\n+import io.reactivex.Single;\n+import javax.inject.Inject;\n+\n+public class OfflineAreaViewerFragment extends AbstractFragment {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTExMjI4NQ=="}, "originalCommit": {"oid": "5201ecd6209a578a73a745530b3b8ce56955d565"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczNTQ2NzQwOnYy", "diffSide": "RIGHT", "path": "gnd/src/main/java/com/google/android/gnd/ui/offlinearea/viewer/OfflineAreaViewerFragment.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQyMjo1MDoxNVrOGixUaA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxNTowNzo0NVrOGlzyYQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTExMjgwOA==", "bodyText": "Can we use Dagger to instantiate this instead? Injecting Provider<OfflineAreaViewerFragment> into the class where it's needed should work, maybe...", "url": "https://github.com/google/ground-android/pull/498#discussion_r439112808", "createdAt": "2020-06-11T22:50:15Z", "author": {"login": "gino-m"}, "path": "gnd/src/main/java/com/google/android/gnd/ui/offlinearea/viewer/OfflineAreaViewerFragment.java", "diffHunk": "@@ -0,0 +1,108 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.android.gnd.ui.offlinearea.viewer;\n+\n+import static com.google.android.gnd.rx.RxAutoDispose.autoDisposable;\n+\n+import android.os.Bundle;\n+import android.view.LayoutInflater;\n+import android.view.View;\n+import android.view.ViewGroup;\n+import androidx.annotation.NonNull;\n+import androidx.annotation.Nullable;\n+import butterknife.OnClick;\n+import com.google.android.gnd.MainActivity;\n+import com.google.android.gnd.R;\n+import com.google.android.gnd.databinding.OfflineAreaViewerFragBinding;\n+import com.google.android.gnd.model.basemap.OfflineArea;\n+import com.google.android.gnd.model.feature.Point;\n+import com.google.android.gnd.ui.common.AbstractFragment;\n+import com.google.android.gnd.ui.map.MapAdapter;\n+import com.google.android.gnd.ui.map.MapProvider;\n+import io.reactivex.Single;\n+import javax.inject.Inject;\n+\n+public class OfflineAreaViewerFragment extends AbstractFragment {\n+\n+  private static final String MAP_FRAGMENT = MapProvider.class.getName() + \"#fragment\";\n+\n+  @Inject MapProvider mapProvider;\n+\n+  private OfflineAreaViewerViewModel viewModel;\n+  @Nullable private MapAdapter map;\n+\n+  public static OfflineAreaViewerFragment newInstance() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5201ecd6209a578a73a745530b3b8ce56955d565"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjI5ODk3Nw==", "bodyText": "Done, it was already @Binds annotated so all we needed was to add @Inject! bd5a85e", "url": "https://github.com/google/ground-android/pull/498#discussion_r442298977", "createdAt": "2020-06-18T15:07:45Z", "author": {"login": "scolsen"}, "path": "gnd/src/main/java/com/google/android/gnd/ui/offlinearea/viewer/OfflineAreaViewerFragment.java", "diffHunk": "@@ -0,0 +1,108 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.android.gnd.ui.offlinearea.viewer;\n+\n+import static com.google.android.gnd.rx.RxAutoDispose.autoDisposable;\n+\n+import android.os.Bundle;\n+import android.view.LayoutInflater;\n+import android.view.View;\n+import android.view.ViewGroup;\n+import androidx.annotation.NonNull;\n+import androidx.annotation.Nullable;\n+import butterknife.OnClick;\n+import com.google.android.gnd.MainActivity;\n+import com.google.android.gnd.R;\n+import com.google.android.gnd.databinding.OfflineAreaViewerFragBinding;\n+import com.google.android.gnd.model.basemap.OfflineArea;\n+import com.google.android.gnd.model.feature.Point;\n+import com.google.android.gnd.ui.common.AbstractFragment;\n+import com.google.android.gnd.ui.map.MapAdapter;\n+import com.google.android.gnd.ui.map.MapProvider;\n+import io.reactivex.Single;\n+import javax.inject.Inject;\n+\n+public class OfflineAreaViewerFragment extends AbstractFragment {\n+\n+  private static final String MAP_FRAGMENT = MapProvider.class.getName() + \"#fragment\";\n+\n+  @Inject MapProvider mapProvider;\n+\n+  private OfflineAreaViewerViewModel viewModel;\n+  @Nullable private MapAdapter map;\n+\n+  public static OfflineAreaViewerFragment newInstance() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTExMjgwOA=="}, "originalCommit": {"oid": "5201ecd6209a578a73a745530b3b8ce56955d565"}, "originalPosition": 48}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczNTQ2ODc3OnYy", "diffSide": "RIGHT", "path": "gnd/src/main/java/com/google/android/gnd/ui/offlinearea/viewer/OfflineAreaViewerViewModel.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQyMjo1MDo1NFrOGixVRQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxNTowNzo1OFrOGlzy9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTExMzAyOQ==", "bodyText": "Could you possible break this stream up either into local vars or helper methods? The nesting is getting a little unwieldy.", "url": "https://github.com/google/ground-android/pull/498#discussion_r439113029", "createdAt": "2020-06-11T22:50:54Z", "author": {"login": "gino-m"}, "path": "gnd/src/main/java/com/google/android/gnd/ui/offlinearea/viewer/OfflineAreaViewerViewModel.java", "diffHunk": "@@ -0,0 +1,84 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.android.gnd.ui.offlinearea.viewer;\n+\n+import static java8.util.stream.StreamSupport.stream;\n+\n+import android.content.Context;\n+import androidx.lifecycle.LiveData;\n+import androidx.lifecycle.LiveDataReactiveStreams;\n+import com.google.android.gnd.model.basemap.OfflineArea;\n+import com.google.android.gnd.model.basemap.tile.Tile;\n+import com.google.android.gnd.repository.OfflineAreaRepository;\n+import com.google.android.gnd.ui.common.AbstractViewModel;\n+import io.reactivex.processors.BehaviorProcessor;\n+import java.io.File;\n+import javax.inject.Inject;\n+\n+public class OfflineAreaViewerViewModel extends AbstractViewModel {\n+\n+  private final BehaviorProcessor<OfflineAreaViewerFragmentArgs> argsProcessor;\n+  private final OfflineAreaRepository offlineAreaRepository;\n+  private final Context context;\n+  public LiveData<Double> areaStorageSize;\n+  private LiveData<OfflineArea> offlineArea;\n+\n+  @Inject\n+  public OfflineAreaViewerViewModel(OfflineAreaRepository offlineAreaRepository, Context context) {\n+    this.argsProcessor = BehaviorProcessor.create();\n+    this.offlineAreaRepository = offlineAreaRepository;\n+    this.context = context;\n+    this.areaStorageSize =\n+        LiveDataReactiveStreams.fromPublisher(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5201ecd6209a578a73a745530b3b8ce56955d565"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjI5OTEyNg==", "bodyText": "6b21dff", "url": "https://github.com/google/ground-android/pull/498#discussion_r442299126", "createdAt": "2020-06-18T15:07:58Z", "author": {"login": "scolsen"}, "path": "gnd/src/main/java/com/google/android/gnd/ui/offlinearea/viewer/OfflineAreaViewerViewModel.java", "diffHunk": "@@ -0,0 +1,84 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.android.gnd.ui.offlinearea.viewer;\n+\n+import static java8.util.stream.StreamSupport.stream;\n+\n+import android.content.Context;\n+import androidx.lifecycle.LiveData;\n+import androidx.lifecycle.LiveDataReactiveStreams;\n+import com.google.android.gnd.model.basemap.OfflineArea;\n+import com.google.android.gnd.model.basemap.tile.Tile;\n+import com.google.android.gnd.repository.OfflineAreaRepository;\n+import com.google.android.gnd.ui.common.AbstractViewModel;\n+import io.reactivex.processors.BehaviorProcessor;\n+import java.io.File;\n+import javax.inject.Inject;\n+\n+public class OfflineAreaViewerViewModel extends AbstractViewModel {\n+\n+  private final BehaviorProcessor<OfflineAreaViewerFragmentArgs> argsProcessor;\n+  private final OfflineAreaRepository offlineAreaRepository;\n+  private final Context context;\n+  public LiveData<Double> areaStorageSize;\n+  private LiveData<OfflineArea> offlineArea;\n+\n+  @Inject\n+  public OfflineAreaViewerViewModel(OfflineAreaRepository offlineAreaRepository, Context context) {\n+    this.argsProcessor = BehaviorProcessor.create();\n+    this.offlineAreaRepository = offlineAreaRepository;\n+    this.context = context;\n+    this.areaStorageSize =\n+        LiveDataReactiveStreams.fromPublisher(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTExMzAyOQ=="}, "originalCommit": {"oid": "5201ecd6209a578a73a745530b3b8ce56955d565"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczNTQ3MDA1OnYy", "diffSide": "RIGHT", "path": "gnd/src/main/res/navigation/nav_graph.xml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQyMjo1MToyOVrOGixV_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxNTowODoxNVrOGlzzxA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTExMzIxNQ==", "bodyText": "Please use a string resource instead.", "url": "https://github.com/google/ground-android/pull/498#discussion_r439113215", "createdAt": "2020-06-11T22:51:29Z", "author": {"login": "gino-m"}, "path": "gnd/src/main/res/navigation/nav_graph.xml", "diffHunk": "@@ -93,6 +96,15 @@\n       android:id=\"@+id/backToOfflineAreas\"\n       app:destination=\"@id/offline_areas_fragment\" />\n   </fragment>\n+  <fragment\n+    android:id=\"@+id/offline_area_viewer_fragment\"\n+    android:name=\"com.google.android.gnd.ui.offlinearea.viewer.OfflineAreaViewerFragment\"\n+    android:label=\"Offline Area Viewer\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5201ecd6209a578a73a745530b3b8ce56955d565"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjI5OTMzMg==", "bodyText": "d788a4b", "url": "https://github.com/google/ground-android/pull/498#discussion_r442299332", "createdAt": "2020-06-18T15:08:15Z", "author": {"login": "scolsen"}, "path": "gnd/src/main/res/navigation/nav_graph.xml", "diffHunk": "@@ -93,6 +96,15 @@\n       android:id=\"@+id/backToOfflineAreas\"\n       app:destination=\"@id/offline_areas_fragment\" />\n   </fragment>\n+  <fragment\n+    android:id=\"@+id/offline_area_viewer_fragment\"\n+    android:name=\"com.google.android.gnd.ui.offlinearea.viewer.OfflineAreaViewerFragment\"\n+    android:label=\"Offline Area Viewer\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTExMzIxNQ=="}, "originalCommit": {"oid": "5201ecd6209a578a73a745530b3b8ce56955d565"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1NTc5NDA1OnYy", "diffSide": "RIGHT", "path": "gnd/src/main/java/com/google/android/gnd/persistence/local/room/RoomLocalDataStore.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxNTo1NDoxN1rOGl1wDg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxNTo1NDoxN1rOGl1wDg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjMzMTE1MA==", "bodyText": "Can you please add a test for this method in LocalDataStoreTest?", "url": "https://github.com/google/ground-android/pull/498#discussion_r442331150", "createdAt": "2020-06-18T15:54:17Z", "author": {"login": "shobhitagarwal1612"}, "path": "gnd/src/main/java/com/google/android/gnd/persistence/local/room/RoomLocalDataStore.java", "diffHunk": "@@ -488,4 +488,13 @@ public Completable insertOrUpdateOfflineArea(OfflineArea area) {\n         .map(areas -> stream(areas).map(OfflineAreaEntity::toArea).collect(toImmutableList()))\n         .subscribeOn(schedulers.io());\n   }\n+\n+  @Override\n+  public Single<OfflineArea> getOfflineAreaById(String id) {\n+    return offlineAreaDao\n+        .findById(id)\n+        .map(OfflineAreaEntity::toArea)\n+        .toSingle()\n+        .subscribeOn(schedulers.io());\n+  }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "69ae7bfbdb3bf323d3721840cde7b4853b2e8e13"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1NTgwNDExOnYy", "diffSide": "RIGHT", "path": "gnd/src/main/java/com/google/android/gnd/ui/offlinearea/OfflineAreaListAdapter.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxNTo1Njo0M1rOGl12bg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxNTo1Njo0M1rOGl12bg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjMzMjc4Mg==", "bodyText": "Would it be possible to handle the click event in the calling fragment? It feels odd to have navigator instance within this adapter class. Thoughts?", "url": "https://github.com/google/ground-android/pull/498#discussion_r442332782", "createdAt": "2020-06-18T15:56:43Z", "author": {"login": "shobhitagarwal1612"}, "path": "gnd/src/main/java/com/google/android/gnd/ui/offlinearea/OfflineAreaListAdapter.java", "diffHunk": "@@ -17,27 +17,50 @@\n package com.google.android.gnd.ui.offlinearea;\n \n import android.view.LayoutInflater;\n+import android.view.View;\n import android.view.ViewGroup;\n import androidx.annotation.NonNull;\n import androidx.recyclerview.widget.RecyclerView;\n import com.google.android.gnd.databinding.OfflineAreasListItemBinding;\n import com.google.android.gnd.model.basemap.OfflineArea;\n+import com.google.android.gnd.ui.common.Navigator;\n import com.google.common.collect.ImmutableList;\n \n class OfflineAreaListAdapter extends RecyclerView.Adapter<OfflineAreaListAdapter.ViewHolder> {\n+\n+  private final Navigator navigator;\n   private ImmutableList<OfflineArea> offlineAreas;\n \n-  public static class ViewHolder extends RecyclerView.ViewHolder {\n+  public static class ViewHolder extends RecyclerView.ViewHolder implements View.OnClickListener {\n+\n     public OfflineAreasListItemBinding binding;\n+    public int position;\n+    private ImmutableList<OfflineArea> areas;\n+    private final Navigator navigator;\n \n-    ViewHolder(OfflineAreasListItemBinding binding) {\n+    ViewHolder(\n+        OfflineAreasListItemBinding binding,\n+        ImmutableList<OfflineArea> areas,\n+        Navigator navigator) {\n       super(binding.getRoot());\n       this.binding = binding;\n+      this.areas = areas;\n+      this.navigator = navigator;\n+      binding.offlineAreaName.setOnClickListener(this);\n+    }\n+\n+    @Override\n+    public void onClick(View v) {\n+      if (areas.size() > 0) {\n+        String id = areas.get(position).getId();\n+        navigator.showOfflineAreaViewer(id);\n+      }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "69ae7bfbdb3bf323d3721840cde7b4853b2e8e13"}, "originalPosition": 43}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1NTgyMTQxOnYy", "diffSide": "RIGHT", "path": "gnd/src/main/java/com/google/android/gnd/ui/offlinearea/viewer/OfflineAreaViewerFragment.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxNjowMDo0OVrOGl2Bqw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxNjowMDo0OVrOGl2Bqw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjMzNTY1OQ==", "bodyText": "Since butterknife is already deprecated, we should prevent adding more code that needs to be cleaned up later. Can you please fix this?", "url": "https://github.com/google/ground-android/pull/498#discussion_r442335659", "createdAt": "2020-06-18T16:00:49Z", "author": {"login": "shobhitagarwal1612"}, "path": "gnd/src/main/java/com/google/android/gnd/ui/offlinearea/viewer/OfflineAreaViewerFragment.java", "diffHunk": "@@ -0,0 +1,114 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.android.gnd.ui.offlinearea.viewer;\n+\n+import static com.google.android.gnd.rx.RxAutoDispose.autoDisposable;\n+\n+import android.os.Bundle;\n+import android.view.LayoutInflater;\n+import android.view.View;\n+import android.view.ViewGroup;\n+import androidx.annotation.NonNull;\n+import androidx.annotation.Nullable;\n+import butterknife.OnClick;\n+import com.google.android.gnd.MainActivity;\n+import com.google.android.gnd.R;\n+import com.google.android.gnd.databinding.OfflineAreaViewerFragBinding;\n+import com.google.android.gnd.model.basemap.OfflineArea;\n+import com.google.android.gnd.model.feature.Point;\n+import com.google.android.gnd.ui.common.AbstractFragment;\n+import com.google.android.gnd.ui.map.MapAdapter;\n+import com.google.android.gnd.ui.map.MapProvider;\n+import io.reactivex.Single;\n+import javax.inject.Inject;\n+\n+/**\n+ * The OfflineAreaViewerFragment provides a UI for managing a single offline area on the user's\n+ * device.\n+ * */\n+public class OfflineAreaViewerFragment extends AbstractFragment {\n+\n+  private static final String MAP_FRAGMENT = MapProvider.class.getName() + \"#fragment\";\n+\n+  @Inject MapProvider mapProvider;\n+\n+  private OfflineAreaViewerViewModel viewModel;\n+  @Nullable private MapAdapter map;\n+\n+  @Inject\n+  public OfflineAreaViewerFragment() {}\n+\n+  @Override\n+  public void onCreate(@Nullable Bundle savedInstanceState) {\n+    super.onCreate(savedInstanceState);\n+    OfflineAreaViewerFragmentArgs args = OfflineAreaViewerFragmentArgs.fromBundle(getArguments());\n+    viewModel = getViewModel(OfflineAreaViewerViewModel.class);\n+    viewModel.loadOfflineArea(args);\n+    Single<MapAdapter> mapAdapter = mapProvider.getMapAdapter();\n+    mapAdapter.as(autoDisposable(this)).subscribe(this::onMapReady);\n+    viewModel.getOfflineArea().observe(this, this::panMap);\n+  }\n+\n+  @Override\n+  public View onCreateView(\n+      @NonNull LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {\n+    super.onCreateView(inflater, container, savedInstanceState);\n+    OfflineAreaViewerFragBinding binding =\n+        OfflineAreaViewerFragBinding.inflate(inflater, container, false);\n+    binding.setViewModel(viewModel);\n+    binding.setLifecycleOwner(this);\n+    ((MainActivity) getActivity()).setActionBar(binding.offlineAreaViewerToolbar, true);\n+    return binding.getRoot();\n+  }\n+\n+  @Override\n+  public void onViewCreated(@NonNull View view, @Nullable Bundle savedInstanceState) {\n+    super.onViewCreated(view, savedInstanceState);\n+    if (savedInstanceState == null) {\n+      replaceFragment(R.id.map, mapProvider.getFragment());\n+    } else {\n+      mapProvider.restore(restoreChildFragment(savedInstanceState, MAP_FRAGMENT));\n+    }\n+  }\n+\n+  private void onMapReady(MapAdapter map) {\n+    this.map = map;\n+  }\n+\n+  private void panMap(OfflineArea offlineArea) {\n+    if (map == null) {\n+      return;\n+    }\n+\n+    double lat = offlineArea.getBounds().northeast.latitude;\n+    double lon = offlineArea.getBounds().southwest.longitude;\n+    Point point = Point.newBuilder().setLatitude(lat).setLongitude(lon).build();\n+    map.moveCamera(point);\n+  }\n+\n+  /**\n+   * Removes the area associated with this fragment from the user's device.\n+   * */\n+  @OnClick(R.id.remove_button)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "69ae7bfbdb3bf323d3721840cde7b4853b2e8e13"}, "originalPosition": 106}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1NTgyNjk4OnYy", "diffSide": "RIGHT", "path": "gnd/src/main/java/com/google/android/gnd/ui/offlinearea/viewer/OfflineAreaViewerViewModel.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxNjowMjoyNFrOGl2Fbg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxNjowMjoyNFrOGl2Fbg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjMzNjYyMg==", "bodyText": "We can move this method into our utility class FileUtil, which already contains context as an injected dependency.", "url": "https://github.com/google/ground-android/pull/498#discussion_r442336622", "createdAt": "2020-06-18T16:02:24Z", "author": {"login": "shobhitagarwal1612"}, "path": "gnd/src/main/java/com/google/android/gnd/ui/offlinearea/viewer/OfflineAreaViewerViewModel.java", "diffHunk": "@@ -0,0 +1,100 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.android.gnd.ui.offlinearea.viewer;\n+\n+import static java8.util.stream.StreamSupport.stream;\n+\n+import android.content.Context;\n+import androidx.lifecycle.LiveData;\n+import androidx.lifecycle.LiveDataReactiveStreams;\n+import com.google.android.gnd.model.basemap.OfflineArea;\n+import com.google.android.gnd.model.basemap.tile.Tile;\n+import com.google.android.gnd.repository.OfflineAreaRepository;\n+import com.google.android.gnd.ui.common.AbstractViewModel;\n+import com.google.common.collect.ImmutableSet;\n+import io.reactivex.processors.BehaviorProcessor;\n+import java.io.File;\n+import java.lang.ref.WeakReference;\n+import javax.inject.Inject;\n+\n+/**\n+ * View model for the OfflineAreaViewerFragment. Manges offline area deletions and calculates the\n+ * storage size of an area on the user's device.\n+ */\n+public class OfflineAreaViewerViewModel extends AbstractViewModel {\n+\n+  private final BehaviorProcessor<OfflineAreaViewerFragmentArgs> argsProcessor;\n+  private final OfflineAreaRepository offlineAreaRepository;\n+  private final WeakReference<Context> context;\n+  public LiveData<Double> areaStorageSize;\n+  private LiveData<OfflineArea> offlineArea;\n+\n+  @Inject\n+  public OfflineAreaViewerViewModel(OfflineAreaRepository offlineAreaRepository, Context context) {\n+    this.argsProcessor = BehaviorProcessor.create();\n+    this.offlineAreaRepository = offlineAreaRepository;\n+    this.context = new WeakReference<>(context);\n+    this.areaStorageSize =\n+        LiveDataReactiveStreams.fromPublisher(\n+            this.argsProcessor.switchMap(\n+                args ->\n+                    this.offlineAreaRepository\n+                        .getOfflineArea(args.getOfflineAreaId())\n+                        .toFlowable()\n+                        .flatMap(offlineAreaRepository::getIntersectingDownloadedTilesOnceAndStream)\n+                        .map(this::tilesToTotalStorageSize)));\n+    this.offlineArea =\n+        LiveDataReactiveStreams.fromPublisher(\n+            this.argsProcessor.switchMap(\n+                args ->\n+                    this.offlineAreaRepository\n+                        .getOfflineArea(args.getOfflineAreaId())\n+                        .toFlowable()));\n+  }\n+\n+  private Double tilesToTotalStorageSize(ImmutableSet<Tile> tiles) {\n+    return stream(tiles).map(this::tileStorageSize).reduce((x, y) -> x + y).orElse(0.0);\n+  }\n+\n+  private double tileStorageSize(Tile tile) {\n+    Context context1 = context.get();\n+    if (context1 == null) {\n+      return 0.0;\n+    } else {\n+      File tileFile = new File(context1.getFilesDir(), tile.getPath());\n+      return (double) tileFile.length() / (1024 * 1024);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "69ae7bfbdb3bf323d3721840cde7b4853b2e8e13"}, "originalPosition": 79}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1NTgzMzA3OnYy", "diffSide": "RIGHT", "path": "gnd/src/main/res/layout/offline_area_viewer_frag.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxNjowMzo1NVrOGl2JaA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxNjowMzo1NVrOGl2JaA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjMzNzY0MA==", "bodyText": "Any specific reasons for hardcoding the width of the fragment? I would rather use constraints which only relies on screen ratio.", "url": "https://github.com/google/ground-android/pull/498#discussion_r442337640", "createdAt": "2020-06-18T16:03:55Z", "author": {"login": "shobhitagarwal1612"}, "path": "gnd/src/main/res/layout/offline_area_viewer_frag.xml", "diffHunk": "@@ -0,0 +1,98 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+\n+<!--\n+  ~ Copyright 2020 Google LLC\n+  ~\n+  ~ Licensed under the Apache License, Version 2.0 (the \"License\");\n+  ~ you may not use this file except in compliance with the License.\n+  ~ You may obtain a copy of the License at\n+  ~\n+  ~     https://www.apache.org/licenses/LICENSE-2.0\n+  ~\n+  ~ Unless required by applicable law or agreed to in writing, software\n+  ~ distributed under the License is distributed on an \"AS IS\" BASIS,\n+  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+  ~ See the License for the specific language governing permissions and\n+  ~ limitations under the License.\n+  -->\n+\n+<layout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+  xmlns:app=\"http://schemas.android.com/apk/res-auto\">\n+\n+  <data>\n+    <variable\n+      name=\"viewModel\"\n+      type=\"com.google.android.gnd.ui.offlinearea.viewer.OfflineAreaViewerViewModel\" />\n+  </data>\n+\n+  <androidx.constraintlayout.widget.ConstraintLayout\n+    android:layout_width=\"match_parent\"\n+    android:layout_height=\"match_parent\"\n+    android:fitsSystemWindows=\"true\">\n+\n+    <com.google.android.gnd.ui.common.TwoLineToolbar\n+      android:id=\"@+id/offline_area_viewer_toolbar\"\n+      android:layout_width=\"match_parent\"\n+      android:layout_height=\"wrap_content\"\n+      android:elevation=\"@dimen/toolbar_elevation\"\n+      android:theme=\"@style/PrimaryToolbarTheme\"\n+      app:layout_constraintEnd_toEndOf=\"parent\"\n+      app:layout_constraintStart_toStartOf=\"parent\"\n+      app:layout_constraintTop_toTopOf=\"parent\"\n+      app:title=\"@string/offline_area_viewer_title\"\n+      app:titleTextColor=\"@color/colorBackground\" />\n+\n+    <FrameLayout\n+      android:id=\"@+id/offline_area_viewer_map_frame\"\n+      android:layout_width=\"match_parent\"\n+      android:layout_height=\"200dp\"\n+      android:background=\"@color/colorGrey300\"\n+      app:layout_constraintEnd_toEndOf=\"parent\"\n+      app:layout_constraintHorizontal_bias=\"0.333\"\n+      app:layout_constraintStart_toStartOf=\"parent\"\n+      app:layout_constraintTop_toBottomOf=\"@+id/offline_area_viewer_toolbar\"\n+      app:layout_constraintVertical_bias=\"0.533\">\n+      <androidx.fragment.app.FragmentContainerView\n+        android:id=\"@+id/map\"\n+        android:layout_width=\"140dp\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "69ae7bfbdb3bf323d3721840cde7b4853b2e8e13"}, "originalPosition": 57}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1NTgzMzY4OnYy", "diffSide": "RIGHT", "path": "gnd/src/main/res/layout/offline_area_viewer_frag.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxNjowNDowN1rOGl2J1w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxNjowNDowN1rOGl2J1w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjMzNzc1MQ==", "bodyText": "Same as above.", "url": "https://github.com/google/ground-android/pull/498#discussion_r442337751", "createdAt": "2020-06-18T16:04:07Z", "author": {"login": "shobhitagarwal1612"}, "path": "gnd/src/main/res/layout/offline_area_viewer_frag.xml", "diffHunk": "@@ -0,0 +1,98 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+\n+<!--\n+  ~ Copyright 2020 Google LLC\n+  ~\n+  ~ Licensed under the Apache License, Version 2.0 (the \"License\");\n+  ~ you may not use this file except in compliance with the License.\n+  ~ You may obtain a copy of the License at\n+  ~\n+  ~     https://www.apache.org/licenses/LICENSE-2.0\n+  ~\n+  ~ Unless required by applicable law or agreed to in writing, software\n+  ~ distributed under the License is distributed on an \"AS IS\" BASIS,\n+  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+  ~ See the License for the specific language governing permissions and\n+  ~ limitations under the License.\n+  -->\n+\n+<layout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+  xmlns:app=\"http://schemas.android.com/apk/res-auto\">\n+\n+  <data>\n+    <variable\n+      name=\"viewModel\"\n+      type=\"com.google.android.gnd.ui.offlinearea.viewer.OfflineAreaViewerViewModel\" />\n+  </data>\n+\n+  <androidx.constraintlayout.widget.ConstraintLayout\n+    android:layout_width=\"match_parent\"\n+    android:layout_height=\"match_parent\"\n+    android:fitsSystemWindows=\"true\">\n+\n+    <com.google.android.gnd.ui.common.TwoLineToolbar\n+      android:id=\"@+id/offline_area_viewer_toolbar\"\n+      android:layout_width=\"match_parent\"\n+      android:layout_height=\"wrap_content\"\n+      android:elevation=\"@dimen/toolbar_elevation\"\n+      android:theme=\"@style/PrimaryToolbarTheme\"\n+      app:layout_constraintEnd_toEndOf=\"parent\"\n+      app:layout_constraintStart_toStartOf=\"parent\"\n+      app:layout_constraintTop_toTopOf=\"parent\"\n+      app:title=\"@string/offline_area_viewer_title\"\n+      app:titleTextColor=\"@color/colorBackground\" />\n+\n+    <FrameLayout\n+      android:id=\"@+id/offline_area_viewer_map_frame\"\n+      android:layout_width=\"match_parent\"\n+      android:layout_height=\"200dp\"\n+      android:background=\"@color/colorGrey300\"\n+      app:layout_constraintEnd_toEndOf=\"parent\"\n+      app:layout_constraintHorizontal_bias=\"0.333\"\n+      app:layout_constraintStart_toStartOf=\"parent\"\n+      app:layout_constraintTop_toBottomOf=\"@+id/offline_area_viewer_toolbar\"\n+      app:layout_constraintVertical_bias=\"0.533\">\n+      <androidx.fragment.app.FragmentContainerView\n+        android:id=\"@+id/map\"\n+        android:layout_width=\"140dp\"\n+        android:layout_height=\"match_parent\"\n+        android:layout_gravity=\"center\"\n+        app:layout_behavior=\"com.google.android.gnd.ui.home.mapcontainer.MapLayoutBehavior\"\n+        app:layout_constraintEnd_toEndOf=\"parent\"\n+        app:layout_constraintStart_toStartOf=\"parent\"\n+        app:layout_constraintTop_toBottomOf=\"@+id/offline_area_viewer_toolbar\" />\n+    </FrameLayout>\n+\n+\n+    <androidx.constraintlayout.widget.ConstraintLayout\n+      android:layout_width=\"match_parent\"\n+      android:layout_height=\"476dp\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "69ae7bfbdb3bf323d3721840cde7b4853b2e8e13"}, "originalPosition": 69}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2466, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}