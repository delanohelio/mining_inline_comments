{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQ1MDQxMDYx", "number": 671, "title": "[Code health] Add annotations for observables", "bodyText": "@scolsen Would you be able to help with the wording and concept here? I was hoping this could help us clarify usage of streams throughout our code base and help us with code-as-documentation for our contract w/internal APIs. Any thoughts/edits greatly appreciated! \ud83d\ude4f", "createdAt": "2020-12-23T21:41:55Z", "url": "https://github.com/google/ground-android/pull/671", "merged": true, "mergeCommit": {"oid": "70cba9d01361b0b370236ee77ac336f08534f883"}, "closed": true, "closedAt": "2021-01-11T15:52:51Z", "author": {"login": "gino-m"}, "timelineItems": {"totalCount": 27, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdq9AbiAFqTU1OTU2ODUxMw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdvIk9QgFqTU2NTQ5MjEyMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU5NTY4NTEz", "url": "https://github.com/google/ground-android/pull/671#pullrequestreview-559568513", "createdAt": "2020-12-29T14:57:05Z", "commit": {"oid": "c5228767b935151ef1a7d6bb15cfc422da19c75c"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 19, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOVQxNDo1NzowNVrOIMRJew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOVQxNjowNjowOFrOIMSqUA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTczNDc3OQ==", "bodyText": "typo s/and/any", "url": "https://github.com/google/ground-android/pull/671#discussion_r549734779", "createdAt": "2020-12-29T14:57:05Z", "author": {"login": "scolsen"}, "path": "gnd/src/main/java/com/google/android/gnd/rx/EventStream.java", "diffHunk": "@@ -0,0 +1,28 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.android.gnd.rx;\n+\n+/**\n+ * Marks an RxJava stream as emitting events. Events are only emitted as they occur, and new\n+ * observers are not notified of emits which occurred before subscribe(). The stream continues to\n+ * emit new events until the observer unsubscribes.\n+ *\n+ * <p>These streams are considered \"hot\"; subscribing does not trigger and events or otherwise alter", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c5228767b935151ef1a7d6bb15cfc422da19c75c"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTczNjM4MA==", "bodyText": "Instead of \"multiple observers may subscribe to received and process the same events\"\nWhat do you think of the following:\n\"When multiple observers are subscribed to the stream, each observer receives the emitted events.\"", "url": "https://github.com/google/ground-android/pull/671#discussion_r549736380", "createdAt": "2020-12-29T15:01:48Z", "author": {"login": "scolsen"}, "path": "gnd/src/main/java/com/google/android/gnd/rx/EventStream.java", "diffHunk": "@@ -0,0 +1,28 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.android.gnd.rx;\n+\n+/**\n+ * Marks an RxJava stream as emitting events. Events are only emitted as they occur, and new\n+ * observers are not notified of emits which occurred before subscribe(). The stream continues to\n+ * emit new events until the observer unsubscribes.\n+ *\n+ * <p>These streams are considered \"hot\"; subscribing does not trigger and events or otherwise alter\n+ * the stream, and the stream is suitable for multicasting (i.e., multiple observers may subscribe\n+ * to received and process the same events).", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c5228767b935151ef1a7d6bb15cfc422da19c75c"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTczNjU5OQ==", "bodyText": "Should these also typically be infinite? Should we note that?", "url": "https://github.com/google/ground-android/pull/671#discussion_r549736599", "createdAt": "2020-12-29T15:02:22Z", "author": {"login": "scolsen"}, "path": "gnd/src/main/java/com/google/android/gnd/rx/EventStream.java", "diffHunk": "@@ -0,0 +1,28 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.android.gnd.rx;\n+\n+/**\n+ * Marks an RxJava stream as emitting events. Events are only emitted as they occur, and new", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c5228767b935151ef1a7d6bb15cfc422da19c75c"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTczNjkyMw==", "bodyText": "Maybe: \"...on subscribe(); new states are continually emitted until the subscription is disposed.\"", "url": "https://github.com/google/ground-android/pull/671#discussion_r549736923", "createdAt": "2020-12-29T15:03:21Z", "author": {"login": "scolsen"}, "path": "gnd/src/main/java/com/google/android/gnd/rx/StateStream.java", "diffHunk": "@@ -0,0 +1,31 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.android.gnd.rx;\n+\n+/**\n+ * Marks an RxJava or LiveData stream as emitting state. The latest state is immediately emitted to\n+ * new observers on subscribe(), with new states continuing to be emitted until the subscription is", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c5228767b935151ef1a7d6bb15cfc422da19c75c"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTczNzAwMQ==", "bodyText": "delete \"as\" before hot", "url": "https://github.com/google/ground-android/pull/671#discussion_r549737001", "createdAt": "2020-12-29T15:03:36Z", "author": {"login": "scolsen"}, "path": "gnd/src/main/java/com/google/android/gnd/rx/StateStream.java", "diffHunk": "@@ -0,0 +1,31 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.android.gnd.rx;\n+\n+/**\n+ * Marks an RxJava or LiveData stream as emitting state. The latest state is immediately emitted to\n+ * new observers on subscribe(), with new states continuing to be emitted until the subscription is\n+ * disposed.\n+ *\n+ * <p>The stream is considered as \"hot\"; subscribing has no effect on state and the stream is", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c5228767b935151ef1a7d6bb15cfc422da19c75c"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTczNzQwMw==", "bodyText": "s/observer/observers", "url": "https://github.com/google/ground-android/pull/671#discussion_r549737403", "createdAt": "2020-12-29T15:04:46Z", "author": {"login": "scolsen"}, "path": "gnd/src/main/java/com/google/android/gnd/rx/annotations/Cold.java", "diffHunk": "@@ -0,0 +1,46 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.android.gnd.rx.annotations;\n+\n+import java.lang.annotation.ElementType;\n+import java.lang.annotation.Target;\n+\n+/**\n+ * Marks an observable as \"cold\". Cold observables create a new producer each time an observer\n+ * subscribes.\n+ *\n+ * <p>Cold observables start emitting items when observer subscribe, so observers are guaranteed to", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c5228767b935151ef1a7d6bb15cfc422da19c75c"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTczOTg3Nw==", "bodyText": "How about:\n\"Cold observables start emitting items when observers subscribe. Each observer of a cold observable is guaranteed to receive all of that observable's emissions, regardless of when the observer subscribed.\"", "url": "https://github.com/google/ground-android/pull/671#discussion_r549739877", "createdAt": "2020-12-29T15:11:51Z", "author": {"login": "scolsen"}, "path": "gnd/src/main/java/com/google/android/gnd/rx/annotations/Cold.java", "diffHunk": "@@ -0,0 +1,46 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.android.gnd.rx.annotations;\n+\n+import java.lang.annotation.ElementType;\n+import java.lang.annotation.Target;\n+\n+/**\n+ * Marks an observable as \"cold\". Cold observables create a new producer each time an observer\n+ * subscribes.\n+ *\n+ * <p>Cold observables start emitting items when observer subscribe, so observers are guaranteed to", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c5228767b935151ef1a7d6bb15cfc422da19c75c"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTc0MDc3Mw==", "bodyText": "For the sake of simplification, think we can avoid this notion of \"producers\" altogether? Maybe:\n\"The sequence of items emitted by a cold observable is regenerated for each observer that subscribes to the observable. As such....\"", "url": "https://github.com/google/ground-android/pull/671#discussion_r549740773", "createdAt": "2020-12-29T15:14:20Z", "author": {"login": "scolsen"}, "path": "gnd/src/main/java/com/google/android/gnd/rx/annotations/Cold.java", "diffHunk": "@@ -0,0 +1,54 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.android.gnd.rx.annotations;\n+\n+import java.lang.annotation.Documented;\n+import java.lang.annotation.ElementType;\n+import java.lang.annotation.Target;\n+\n+/**\n+ * Marks an observable as \"cold\". Cold observables create a new producer each time an observer\n+ * subscribes.\n+ *\n+ * <p>Cold observables start emitting items when observer subscribe, so observers are guaranteed to\n+ * see the whole sequence from the beginning.\n+ *\n+ * <p>Since a new producer is created on each subscription, the sequence of items is regenerated for", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "99334b4e21fd6db100db9faffa8e07198a20ac99"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTc0MTE5Nw==", "bodyText": "s/may turned/may be turned", "url": "https://github.com/google/ground-android/pull/671#discussion_r549741197", "createdAt": "2020-12-29T15:15:32Z", "author": {"login": "scolsen"}, "path": "gnd/src/main/java/com/google/android/gnd/rx/annotations/Cold.java", "diffHunk": "@@ -0,0 +1,54 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.android.gnd.rx.annotations;\n+\n+import java.lang.annotation.Documented;\n+import java.lang.annotation.ElementType;\n+import java.lang.annotation.Target;\n+\n+/**\n+ * Marks an observable as \"cold\". Cold observables create a new producer each time an observer\n+ * subscribes.\n+ *\n+ * <p>Cold observables start emitting items when observer subscribe, so observers are guaranteed to\n+ * see the whole sequence from the beginning.\n+ *\n+ * <p>Since a new producer is created on each subscription, the sequence of items is regenerated for\n+ * each observer. As such, cold observables are unsuitable for multicasting.\n+ *\n+ * <p>LiveData and Rx observables backed by cold observables are also cold. New cold Rx observables\n+ * may also be created by emitting results inside the class passed to the observable's <code>\n+ * create()</code> method.\n+ *\n+ * <p>Cold Rx observables may turned into hot connectable observers using their respective <code>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "99334b4e21fd6db100db9faffa8e07198a20ac99"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTc0MTMzMA==", "bodyText": "hot -- link to the Hot annotation here?", "url": "https://github.com/google/ground-android/pull/671#discussion_r549741330", "createdAt": "2020-12-29T15:15:52Z", "author": {"login": "scolsen"}, "path": "gnd/src/main/java/com/google/android/gnd/rx/annotations/Cold.java", "diffHunk": "@@ -0,0 +1,54 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.android.gnd.rx.annotations;\n+\n+import java.lang.annotation.Documented;\n+import java.lang.annotation.ElementType;\n+import java.lang.annotation.Target;\n+\n+/**\n+ * Marks an observable as \"cold\". Cold observables create a new producer each time an observer\n+ * subscribes.\n+ *\n+ * <p>Cold observables start emitting items when observer subscribe, so observers are guaranteed to\n+ * see the whole sequence from the beginning.\n+ *\n+ * <p>Since a new producer is created on each subscription, the sequence of items is regenerated for\n+ * each observer. As such, cold observables are unsuitable for multicasting.\n+ *\n+ * <p>LiveData and Rx observables backed by cold observables are also cold. New cold Rx observables\n+ * may also be created by emitting results inside the class passed to the observable's <code>\n+ * create()</code> method.\n+ *\n+ * <p>Cold Rx observables may turned into hot connectable observers using their respective <code>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "99334b4e21fd6db100db9faffa8e07198a20ac99"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTc0MTYwMg==", "bodyText": "Add a parenthetical: \"complete (stop emitting items)\"", "url": "https://github.com/google/ground-android/pull/671#discussion_r549741602", "createdAt": "2020-12-29T15:16:38Z", "author": {"login": "scolsen"}, "path": "gnd/src/main/java/com/google/android/gnd/rx/annotations/Cold.java", "diffHunk": "@@ -0,0 +1,54 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.android.gnd.rx.annotations;\n+\n+import java.lang.annotation.Documented;\n+import java.lang.annotation.ElementType;\n+import java.lang.annotation.Target;\n+\n+/**\n+ * Marks an observable as \"cold\". Cold observables create a new producer each time an observer\n+ * subscribes.\n+ *\n+ * <p>Cold observables start emitting items when observer subscribe, so observers are guaranteed to\n+ * see the whole sequence from the beginning.\n+ *\n+ * <p>Since a new producer is created on each subscription, the sequence of items is regenerated for\n+ * each observer. As such, cold observables are unsuitable for multicasting.\n+ *\n+ * <p>LiveData and Rx observables backed by cold observables are also cold. New cold Rx observables\n+ * may also be created by emitting results inside the class passed to the observable's <code>\n+ * create()</code> method.\n+ *\n+ * <p>Cold Rx observables may turned into hot connectable observers using their respective <code>\n+ * share()</code> methods.\n+ */\n+@Documented\n+@Target({\n+  ElementType.ANNOTATION_TYPE,\n+  ElementType.FIELD,\n+  ElementType.LOCAL_VARIABLE,\n+  ElementType.METHOD,\n+  ElementType.PARAMETER\n+})\n+public @interface Cold {\n+  /**\n+   * Finite observables are expected to complete at some point in the future, usually before", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "99334b4e21fd6db100db9faffa8e07198a20ac99"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTc0MTg0NQ==", "bodyText": "How about:\n\"Infinite observables should never complete.\"", "url": "https://github.com/google/ground-android/pull/671#discussion_r549741845", "createdAt": "2020-12-29T15:17:15Z", "author": {"login": "scolsen"}, "path": "gnd/src/main/java/com/google/android/gnd/rx/annotations/Cold.java", "diffHunk": "@@ -0,0 +1,54 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.android.gnd.rx.annotations;\n+\n+import java.lang.annotation.Documented;\n+import java.lang.annotation.ElementType;\n+import java.lang.annotation.Target;\n+\n+/**\n+ * Marks an observable as \"cold\". Cold observables create a new producer each time an observer\n+ * subscribes.\n+ *\n+ * <p>Cold observables start emitting items when observer subscribe, so observers are guaranteed to\n+ * see the whole sequence from the beginning.\n+ *\n+ * <p>Since a new producer is created on each subscription, the sequence of items is regenerated for\n+ * each observer. As such, cold observables are unsuitable for multicasting.\n+ *\n+ * <p>LiveData and Rx observables backed by cold observables are also cold. New cold Rx observables\n+ * may also be created by emitting results inside the class passed to the observable's <code>\n+ * create()</code> method.\n+ *\n+ * <p>Cold Rx observables may turned into hot connectable observers using their respective <code>\n+ * share()</code> methods.\n+ */\n+@Documented\n+@Target({\n+  ElementType.ANNOTATION_TYPE,\n+  ElementType.FIELD,\n+  ElementType.LOCAL_VARIABLE,\n+  ElementType.METHOD,\n+  ElementType.PARAMETER\n+})\n+public @interface Cold {\n+  /**\n+   * Finite observables are expected to complete at some point in the future, usually before\n+   * observers unsubscribe. Infinite observables are not expected to ever complete.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "99334b4e21fd6db100db9faffa8e07198a20ac99"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTc1ODI2NQ==", "bodyText": "s/the/they", "url": "https://github.com/google/ground-android/pull/671#discussion_r549758265", "createdAt": "2020-12-29T16:02:32Z", "author": {"login": "scolsen"}, "path": "gnd/src/main/java/com/google/android/gnd/rx/annotations/Hot.java", "diffHunk": "@@ -0,0 +1,50 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.android.gnd.rx.annotations;\n+\n+import java.lang.annotation.Documented;\n+import java.lang.annotation.ElementType;\n+import java.lang.annotation.Target;\n+\n+/**\n+ * Marks an observable as \"hot\". Hot observables expose an existing producer to observers rather\n+ * than creating a new one for each observer.\n+ *\n+ * <p>Hot observables may start emitting items as soon as they're created. Observers only receive\n+ * items emitted after the subscribe; and items emitted before then are note received.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "860d724527631be0223e62d707349ab71b3ddc9e"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTc1ODM4Mg==", "bodyText": "s/note/not -- semicolon should be a comma", "url": "https://github.com/google/ground-android/pull/671#discussion_r549758382", "createdAt": "2020-12-29T16:02:56Z", "author": {"login": "scolsen"}, "path": "gnd/src/main/java/com/google/android/gnd/rx/annotations/Hot.java", "diffHunk": "@@ -0,0 +1,50 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.android.gnd.rx.annotations;\n+\n+import java.lang.annotation.Documented;\n+import java.lang.annotation.ElementType;\n+import java.lang.annotation.Target;\n+\n+/**\n+ * Marks an observable as \"hot\". Hot observables expose an existing producer to observers rather\n+ * than creating a new one for each observer.\n+ *\n+ * <p>Hot observables may start emitting items as soon as they're created. Observers only receive\n+ * items emitted after the subscribe; and items emitted before then are note received.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTc1ODI2NQ=="}, "originalCommit": {"oid": "860d724527631be0223e62d707349ab71b3ddc9e"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTc1ODQ5MA==", "bodyText": "s/all observers/subscribed observers", "url": "https://github.com/google/ground-android/pull/671#discussion_r549758490", "createdAt": "2020-12-29T16:03:17Z", "author": {"login": "scolsen"}, "path": "gnd/src/main/java/com/google/android/gnd/rx/annotations/Hot.java", "diffHunk": "@@ -0,0 +1,50 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.android.gnd.rx.annotations;\n+\n+import java.lang.annotation.Documented;\n+import java.lang.annotation.ElementType;\n+import java.lang.annotation.Target;\n+\n+/**\n+ * Marks an observable as \"hot\". Hot observables expose an existing producer to observers rather\n+ * than creating a new one for each observer.\n+ *\n+ * <p>Hot observables may start emitting items as soon as they're created. Observers only receive\n+ * items emitted after the subscribe; and items emitted before then are note received.\n+ *\n+ * <p>Since the producer generating results is shared among observers, hot observables are\n+ * considered to \"multicast\" the same set of items to all observers by default. For simplicity,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "860d724527631be0223e62d707349ab71b3ddc9e"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTc1ODYyMQ==", "bodyText": "s/multiple producers/multiple observers", "url": "https://github.com/google/ground-android/pull/671#discussion_r549758621", "createdAt": "2020-12-29T16:03:38Z", "author": {"login": "scolsen"}, "path": "gnd/src/main/java/com/google/android/gnd/rx/annotations/Hot.java", "diffHunk": "@@ -0,0 +1,50 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.android.gnd.rx.annotations;\n+\n+import java.lang.annotation.Documented;\n+import java.lang.annotation.ElementType;\n+import java.lang.annotation.Target;\n+\n+/**\n+ * Marks an observable as \"hot\". Hot observables expose an existing producer to observers rather\n+ * than creating a new one for each observer.\n+ *\n+ * <p>Hot observables may start emitting items as soon as they're created. Observers only receive\n+ * items emitted after the subscribe; and items emitted before then are note received.\n+ *\n+ * <p>Since the producer generating results is shared among observers, hot observables are\n+ * considered to \"multicast\" the same set of items to all observers by default. For simplicity,\n+ * producers backing hot observables are assumed to always be capable of multicasting results to\n+ * multiple producers.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "860d724527631be0223e62d707349ab71b3ddc9e"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTc1ODg0Mg==", "bodyText": "s/and/any", "url": "https://github.com/google/ground-android/pull/671#discussion_r549758842", "createdAt": "2020-12-29T16:04:17Z", "author": {"login": "scolsen"}, "path": "gnd/src/main/java/com/google/android/gnd/rx/annotations/RxEvents.java", "diffHunk": "@@ -0,0 +1,32 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.android.gnd.rx.annotations;\n+\n+import java.lang.annotation.Documented;\n+\n+/**\n+ * Marks an RxJava stream as emitting events. Events are only emitted as they occur, and new\n+ * observers are not notified of emits which occurred before subscribe(). The stream continues to\n+ * emit new events until the observer unsubscribes.\n+ *\n+ * <p>These streams are considered \"hot\"; subscribing does not trigger and events or otherwise alter", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "860d724527631be0223e62d707349ab71b3ddc9e"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTc1OTA2OA==", "bodyText": "s/indicated/indicates", "url": "https://github.com/google/ground-android/pull/671#discussion_r549759068", "createdAt": "2020-12-29T16:04:50Z", "author": {"login": "scolsen"}, "path": "gnd/src/main/java/com/google/android/gnd/rx/annotations/RxResult.java", "diffHunk": "@@ -0,0 +1,27 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.android.gnd.rx.annotations;\n+\n+import java.lang.annotation.Documented;\n+\n+/**\n+ * Indicates the result of an asynchronous operation modeled as a reactive stream. Specifically, it\n+ * indicated the result observable annotated is a cold, finite observable.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "860d724527631be0223e62d707349ab71b3ddc9e"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTc1OTU2OA==", "bodyText": "delete \"as\" before hot", "url": "https://github.com/google/ground-android/pull/671#discussion_r549759568", "createdAt": "2020-12-29T16:06:08Z", "author": {"login": "scolsen"}, "path": "gnd/src/main/java/com/google/android/gnd/rx/annotations/RxState.java", "diffHunk": "@@ -0,0 +1,35 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.android.gnd.rx.annotations;\n+\n+import java.lang.annotation.Documented;\n+\n+/**\n+ * Marks an RxJava2 observable as emitting state. The latest state is immediately emitted to new\n+ * observers on subscribe(), with new states continuing to be emitted until the subscription is\n+ * disposed.\n+ *\n+ * <p>The stream is considered as \"hot\"; subscribing has no effect on state and the stream is", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "860d724527631be0223e62d707349ab71b3ddc9e"}, "originalPosition": 26}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "17d4ea3a63c3c6204530c363093b8100f4d6a8e9", "author": {"user": {"login": "gino-m", "name": "Gino Miceli"}}, "url": "https://github.com/google/ground-android/commit/17d4ea3a63c3c6204530c363093b8100f4d6a8e9", "committedDate": "2021-01-04T16:49:59Z", "message": "Rename"}, "afterCommit": {"oid": "dc5825a12054b2f46521db0ddf4d7981bb7a9f74", "author": {"user": {"login": "gino-m", "name": "Gino Miceli"}}, "url": "https://github.com/google/ground-android/commit/dc5825a12054b2f46521db0ddf4d7981bb7a9f74", "committedDate": "2021-01-03T17:46:45Z", "message": "Merge pull request #686 from shobhitagarwal1612/unused\n\n[lint] Remove unused drawables"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0e4cdd6fe660ece99fb21fe4a6a4ea88fc5a5002", "author": {"user": {"login": "gino-m", "name": "Gino Miceli"}}, "url": "https://github.com/google/ground-android/commit/0e4cdd6fe660ece99fb21fe4a6a4ea88fc5a5002", "committedDate": "2021-01-04T17:01:48Z", "message": "Add annotations for observables"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5946052f2d8b410a0ffb20a3446633674e31117d", "author": {"user": {"login": "gino-m", "name": "Gino Miceli"}}, "url": "https://github.com/google/ground-android/commit/5946052f2d8b410a0ffb20a3446633674e31117d", "committedDate": "2021-01-04T17:04:15Z", "message": "Add observable annotations to RemoteDataStore"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7af45e20cf04fe7170e8adeba6113f26aa84d667", "author": {"user": {"login": "gino-m", "name": "Gino Miceli"}}, "url": "https://github.com/google/ground-android/commit/7af45e20cf04fe7170e8adeba6113f26aa84d667", "committedDate": "2021-01-04T17:26:25Z", "message": "Add observable annotations to FeatureRepository"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0baeb84778b955f9919bee34eef21aace0fa702f", "author": {"user": {"login": "gino-m", "name": "Gino Miceli"}}, "url": "https://github.com/google/ground-android/commit/0baeb84778b955f9919bee34eef21aace0fa702f", "committedDate": "2021-01-06T15:53:28Z", "message": "Merge branch 'master' of https://github.com/google/ground-android into stream-annotations"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8cf526954523622e876eeb913fbee6b14628f8e2", "author": {"user": {"login": "gino-m", "name": "Gino Miceli"}}, "url": "https://github.com/google/ground-android/commit/8cf526954523622e876eeb913fbee6b14628f8e2", "committedDate": "2021-01-06T16:00:57Z", "message": "Shorten annotation names"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1e0f86ec2153bb52b17f95db452aeae884dfbdeb", "author": {"user": {"login": "gino-m", "name": "Gino Miceli"}}, "url": "https://github.com/google/ground-android/commit/1e0f86ec2153bb52b17f95db452aeae884dfbdeb", "committedDate": "2021-01-06T16:04:06Z", "message": "Tweak JavaDoc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c0cd3b900d54ed337f681ddb5663ce773cf20b1d", "author": {"user": {"login": "gino-m", "name": "Gino Miceli"}}, "url": "https://github.com/google/ground-android/commit/c0cd3b900d54ed337f681ddb5663ce773cf20b1d", "committedDate": "2021-01-06T16:51:49Z", "message": "Update annotation targets"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "815b1aad5f20f8360505988eb19182b356790796", "author": {"user": {"login": "gino-m", "name": "Gino Miceli"}}, "url": "https://github.com/google/ground-android/commit/815b1aad5f20f8360505988eb19182b356790796", "committedDate": "2021-01-07T14:12:41Z", "message": "Reword JavaDoc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "630d383c251e9f4fdff9df24859d8a7ef5a710b2", "author": {"user": {"login": "gino-m", "name": "Gino Miceli"}}, "url": "https://github.com/google/ground-android/commit/630d383c251e9f4fdff9df24859d8a7ef5a710b2", "committedDate": "2021-01-07T14:23:57Z", "message": "Fix PMD errors"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "38c97818ebffbbf1e85d8dba2d1c2ec90a797d16", "author": {"user": {"login": "gino-m", "name": "Gino Miceli"}}, "url": "https://github.com/google/ground-android/commit/38c97818ebffbbf1e85d8dba2d1c2ec90a797d16", "committedDate": "2021-01-07T14:57:26Z", "message": "Added recommended base types"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6ad440296c81bb08ab247aec4cf72cd51c6bb7c2", "author": {"user": {"login": "gino-m", "name": "Gino Miceli"}}, "url": "https://github.com/google/ground-android/commit/6ad440296c81bb08ab247aec4cf72cd51c6bb7c2", "committedDate": "2021-01-07T16:41:45Z", "message": "Fix annotation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cd1550c7bdec1bf79954445f12a03cadddb8283d", "author": {"user": {"login": "gino-m", "name": "Gino Miceli"}}, "url": "https://github.com/google/ground-android/commit/cd1550c7bdec1bf79954445f12a03cadddb8283d", "committedDate": "2021-01-07T16:42:02Z", "message": "Fix annotation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b177f8041f882ba903ce06a3e050778a3cd7e868", "author": {"user": {"login": "gino-m", "name": "Gino Miceli"}}, "url": "https://github.com/google/ground-android/commit/b177f8041f882ba903ce06a3e050778a3cd7e868", "committedDate": "2021-01-07T17:02:54Z", "message": "Split LazyOperation into two"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "895b85fc23fe73eec30b1ff48c772411a44558e3", "author": {"user": {"login": "gino-m", "name": "Gino Miceli"}}, "url": "https://github.com/google/ground-android/commit/895b85fc23fe73eec30b1ff48c772411a44558e3", "committedDate": "2021-01-08T10:59:11Z", "message": "Simplify annotations"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "28cfb3bd4e7f01eef69b3379fccd087f8ef85704", "author": {"user": {"login": "gino-m", "name": "Gino Miceli"}}, "url": "https://github.com/google/ground-android/commit/28cfb3bd4e7f01eef69b3379fccd087f8ef85704", "committedDate": "2021-01-08T11:20:21Z", "message": "Remove sentence"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "40ecef9c1919d0211bf84fc0d615f837e419da87", "author": {"user": {"login": "gino-m", "name": "Gino Miceli"}}, "url": "https://github.com/google/ground-android/commit/40ecef9c1919d0211bf84fc0d615f837e419da87", "committedDate": "2021-01-08T17:48:15Z", "message": "Fix broken HTML"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "be8e5f49099d344c71b70eef95577149ba88d51d", "author": {"user": {"login": "gino-m", "name": "Gino Miceli"}}, "url": "https://github.com/google/ground-android/commit/be8e5f49099d344c71b70eef95577149ba88d51d", "committedDate": "2021-01-09T15:38:27Z", "message": "Add \"memoized\" attribute to annotations"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dfbd070080af9de706341fc2ccaba6ad5acfcca1", "author": {"user": {"login": "gino-m", "name": "Gino Miceli"}}, "url": "https://github.com/google/ground-android/commit/dfbd070080af9de706341fc2ccaba6ad5acfcca1", "committedDate": "2021-01-09T16:19:59Z", "message": "Tweak JavaDoc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3f8fdaea5a70237c3cbf017015a163b6d6f2fbd5", "author": {"user": {"login": "gino-m", "name": "Gino Miceli"}}, "url": "https://github.com/google/ground-android/commit/3f8fdaea5a70237c3cbf017015a163b6d6f2fbd5", "committedDate": "2021-01-09T16:35:54Z", "message": "Tweak JavaDoc"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTY1MDcxNjY0", "url": "https://github.com/google/ground-android/pull/671#pullrequestreview-565071664", "createdAt": "2021-01-11T05:03:52Z", "commit": {"oid": "3f8fdaea5a70237c3cbf017015a163b6d6f2fbd5"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5489fb03252d8cacf5cff0a0345c1dbb290155c7", "author": {"user": {"login": "gino-m", "name": "Gino Miceli"}}, "url": "https://github.com/google/ground-android/commit/5489fb03252d8cacf5cff0a0345c1dbb290155c7", "committedDate": "2021-01-11T11:36:00Z", "message": "Cold observables *may* have side effects"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e11b161380adf6d96c5b5a1d6bbcd4ab36bbb1b1", "author": {"user": {"login": "gino-m", "name": "Gino Miceli"}}, "url": "https://github.com/google/ground-android/commit/e11b161380adf6d96c5b5a1d6bbcd4ab36bbb1b1", "committedDate": "2021-01-11T12:09:20Z", "message": "Make annotations more self-documenting"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3f56927f6facef2bff22f441046e98bff74ddb69", "author": {"user": {"login": "gino-m", "name": "Gino Miceli"}}, "url": "https://github.com/google/ground-android/commit/3f56927f6facef2bff22f441046e98bff74ddb69", "committedDate": "2021-01-11T12:11:16Z", "message": "Correct stateful annotations"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8d06c8ca0b7d09d34dc2330a52af15771b4e3090", "author": {"user": {"login": "gino-m", "name": "Gino Miceli"}}, "url": "https://github.com/google/ground-android/commit/8d06c8ca0b7d09d34dc2330a52af15771b4e3090", "committedDate": "2021-01-11T12:12:49Z", "message": "Sort annotation flags"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTY1NDkyMTIw", "url": "https://github.com/google/ground-android/pull/671#pullrequestreview-565492120", "createdAt": "2021-01-11T15:51:17Z", "commit": {"oid": "8d06c8ca0b7d09d34dc2330a52af15771b4e3090"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1534, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}