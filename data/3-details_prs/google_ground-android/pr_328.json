{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY0NTU5MTk0", "number": 328, "title": "[Support Photos] Add photo field to observation", "bodyText": "Towards #310\n\n\n UI for bottom modal sheet (options: Camera or Storage)\n\n\n Helper class for handling camera permission and capturing photo\n\n\n Helper class for handling read permission and choosing photo from storage\n\n\n Save photo locally and update form response", "createdAt": "2020-01-19T17:45:49Z", "url": "https://github.com/google/ground-android/pull/328", "merged": true, "mergeCommit": {"oid": "603c6425b57dac2618c7eb9109f2baf3e144f301"}, "closed": true, "closedAt": "2020-02-03T07:22:00Z", "author": {"login": "shobhitagarwal1612"}, "timelineItems": {"totalCount": 59, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb83Zg_AFqTM0NjY3MTkwMg==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcAnr_pAFqTM1MjA1NTc5NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ2NjcxOTAy", "url": "https://github.com/google/ground-android/pull/328#pullrequestreview-346671902", "createdAt": "2020-01-22T15:23:02Z", "commit": {"oid": "8b049cadb44c3dacfec8c26e600638b8bc4af900"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQxNToyMzowMlrOFggGgg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQxNToyMzowMlrOFggGgg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTYyNDcwNg==", "bodyText": "Add newline.", "url": "https://github.com/google/ground-android/pull/328#discussion_r369624706", "createdAt": "2020-01-22T15:23:02Z", "author": {"login": "scolsen"}, "path": "gnd/src/main/res/layout/bottom_sheet.xml", "diffHunk": "@@ -0,0 +1,46 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<!--\n+  ~ Copyright 2020 Google LLC\n+  ~\n+  ~ Licensed under the Apache License, Version 2.0 (the \"License\");\n+  ~ you may not use this file except in compliance with the License.\n+  ~ You may obtain a copy of the License at\n+  ~\n+  ~     https://www.apache.org/licenses/LICENSE-2.0\n+  ~\n+  ~ Unless required by applicable law or agreed to in writing, software\n+  ~ distributed under the License is distributed on an \"AS IS\" BASIS,\n+  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+  ~ See the License for the specific language governing permissions and\n+  ~ limitations under the License.\n+  -->\n+\n+<layout xmlns:android=\"http://schemas.android.com/apk/res/android\">\n+\n+  <data>\n+    <variable\n+      name=\"fragment\"\n+      type=\"com.google.android.gnd.ui.editobservation.ActionBottomDialogFragment\" />\n+  </data>\n+\n+  <LinearLayout\n+    android:layout_width=\"match_parent\"\n+    android:layout_height=\"wrap_content\"\n+    android:orientation=\"vertical\"\n+    android:paddingTop=\"8dp\"\n+    android:paddingBottom=\"8dp\">\n+    <TextView\n+      style=\"@style/AddPhotoActionItem\"\n+      android:drawableStart=\"@drawable/ic_photo_camera\"\n+      android:drawableLeft=\"@drawable/ic_photo_camera\"\n+      android:onClick=\"@{(view) -> fragment.onCapturePhoto()}\"\n+      android:text=\"@string/action_camera\" />\n+    <TextView\n+      style=\"@style/AddPhotoActionItem\"\n+      android:drawableStart=\"@drawable/ic_sd_storage\"\n+      android:drawableLeft=\"@drawable/ic_sd_storage\"\n+      android:onClick=\"@{(view) -> fragment.onSelectPhoto()}\"\n+      android:text=\"@string/action_storage\" />\n+  </LinearLayout>\n+\n+</layout>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8b049cadb44c3dacfec8c26e600638b8bc4af900"}, "originalPosition": 46}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ2NjcyMDg0", "url": "https://github.com/google/ground-android/pull/328#pullrequestreview-346672084", "createdAt": "2020-01-22T15:23:15Z", "commit": {"oid": "8b049cadb44c3dacfec8c26e600638b8bc4af900"}, "state": "DISMISSED", "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQxNToyMzoxNVrOFggHFQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQxNjoyODo1OVrOFgimqQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTYyNDg1Mw==", "bodyText": "Add newline.", "url": "https://github.com/google/ground-android/pull/328#discussion_r369624853", "createdAt": "2020-01-22T15:23:15Z", "author": {"login": "scolsen"}, "path": "gnd/src/main/res/layout/bottom_sheet.xml", "diffHunk": "@@ -0,0 +1,46 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<!--\n+  ~ Copyright 2020 Google LLC\n+  ~\n+  ~ Licensed under the Apache License, Version 2.0 (the \"License\");\n+  ~ you may not use this file except in compliance with the License.\n+  ~ You may obtain a copy of the License at\n+  ~\n+  ~     https://www.apache.org/licenses/LICENSE-2.0\n+  ~\n+  ~ Unless required by applicable law or agreed to in writing, software\n+  ~ distributed under the License is distributed on an \"AS IS\" BASIS,\n+  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+  ~ See the License for the specific language governing permissions and\n+  ~ limitations under the License.\n+  -->\n+\n+<layout xmlns:android=\"http://schemas.android.com/apk/res/android\">\n+\n+  <data>\n+    <variable\n+      name=\"fragment\"\n+      type=\"com.google.android.gnd.ui.editobservation.ActionBottomDialogFragment\" />\n+  </data>\n+\n+  <LinearLayout\n+    android:layout_width=\"match_parent\"\n+    android:layout_height=\"wrap_content\"\n+    android:orientation=\"vertical\"\n+    android:paddingTop=\"8dp\"\n+    android:paddingBottom=\"8dp\">\n+    <TextView\n+      style=\"@style/AddPhotoActionItem\"\n+      android:drawableStart=\"@drawable/ic_photo_camera\"\n+      android:drawableLeft=\"@drawable/ic_photo_camera\"\n+      android:onClick=\"@{(view) -> fragment.onCapturePhoto()}\"\n+      android:text=\"@string/action_camera\" />\n+    <TextView\n+      style=\"@style/AddPhotoActionItem\"\n+      android:drawableStart=\"@drawable/ic_sd_storage\"\n+      android:drawableLeft=\"@drawable/ic_sd_storage\"\n+      android:onClick=\"@{(view) -> fragment.onSelectPhoto()}\"\n+      android:text=\"@string/action_storage\" />\n+  </LinearLayout>\n+\n+</layout>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8b049cadb44c3dacfec8c26e600638b8bc4af900"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTYyNTg1MA==", "bodyText": "Should we use a more specific name for this file? Instead of bottom_sheet, edit_observation_bottom_sheet?\nThis would make the name more consistent with the other files.", "url": "https://github.com/google/ground-android/pull/328#discussion_r369625850", "createdAt": "2020-01-22T15:24:46Z", "author": {"login": "scolsen"}, "path": "gnd/src/main/res/layout/bottom_sheet.xml", "diffHunk": "@@ -0,0 +1,46 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8b049cadb44c3dacfec8c26e600638b8bc4af900"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTY1MDU2Ng==", "bodyText": "Instead of using completeIf, why not have sendIntent return a completable?", "url": "https://github.com/google/ground-android/pull/328#discussion_r369650566", "createdAt": "2020-01-22T16:03:48Z", "author": {"login": "scolsen"}, "path": "gnd/src/main/java/com/google/android/gnd/system/StorageManager.java", "diffHunk": "@@ -0,0 +1,72 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.android.gnd.system;\n+\n+import android.Manifest.permission;\n+import android.content.Intent;\n+import android.util.Log;\n+import com.google.android.gnd.rx.RxCompletable;\n+import javax.inject.Inject;\n+import javax.inject.Singleton;\n+\n+@Singleton\n+public class StorageManager {\n+\n+  public static final String TAG = StorageManager.class.getName();\n+\n+  private static final int PICKFILE_REQUEST_CODE = StorageManager.class.hashCode() & 0xffff;\n+  private final PermissionsManager permissionsManager;\n+  private final ActivityStreams activityStreams;\n+\n+  @Inject\n+  public StorageManager(PermissionsManager permissionsManager, ActivityStreams activityStreams) {\n+    this.permissionsManager = permissionsManager;\n+    this.activityStreams = activityStreams;\n+  }\n+\n+  public void imagePicker() {\n+    permissionsManager\n+        .obtainPermission(permission.READ_EXTERNAL_STORAGE)\n+        .andThen(RxCompletable.completeIf(this::sendIntent))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8b049cadb44c3dacfec8c26e600638b8bc4af900"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTY1NjYxMQ==", "bodyText": "Wrap in a call to Completable.fromObservable and return the completable? (This way we'll catch any (highly unlikely) errors emitted by the publish subject)\nsee: http://reactivex.io/RxJava/javadoc/io/reactivex/Completable.html#fromObservable-io.reactivex.ObservableSource-", "url": "https://github.com/google/ground-android/pull/328#discussion_r369656611", "createdAt": "2020-01-22T16:14:00Z", "author": {"login": "scolsen"}, "path": "gnd/src/main/java/com/google/android/gnd/system/StorageManager.java", "diffHunk": "@@ -0,0 +1,72 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.android.gnd.system;\n+\n+import android.Manifest.permission;\n+import android.content.Intent;\n+import android.util.Log;\n+import com.google.android.gnd.rx.RxCompletable;\n+import javax.inject.Inject;\n+import javax.inject.Singleton;\n+\n+@Singleton\n+public class StorageManager {\n+\n+  public static final String TAG = StorageManager.class.getName();\n+\n+  private static final int PICKFILE_REQUEST_CODE = StorageManager.class.hashCode() & 0xffff;\n+  private final PermissionsManager permissionsManager;\n+  private final ActivityStreams activityStreams;\n+\n+  @Inject\n+  public StorageManager(PermissionsManager permissionsManager, ActivityStreams activityStreams) {\n+    this.permissionsManager = permissionsManager;\n+    this.activityStreams = activityStreams;\n+  }\n+\n+  public void imagePicker() {\n+    permissionsManager\n+        .obtainPermission(permission.READ_EXTERNAL_STORAGE)\n+        .andThen(RxCompletable.completeIf(this::sendIntent))\n+        .andThen(\n+            activityStreams\n+                .getNextActivityResult(PICKFILE_REQUEST_CODE)\n+                .doOnNext(\n+                    activityResult -> {\n+                      if (activityResult.isOk()) {\n+                        Intent intent = activityResult.getData();\n+                        if (intent != null) {\n+                          Log.d(TAG, activityResult.getData().getData() + \" = uri\");\n+                        }\n+                      } else if (activityResult.isCanceled()) {\n+                        Log.d(TAG, \"file picker canceled\");\n+                      }\n+                    }))\n+        .subscribe();\n+  }\n+\n+  private boolean sendIntent() {\n+    Log.d(TAG, \"Sending file picker intent\");\n+    activityStreams.withActivity(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8b049cadb44c3dacfec8c26e600638b8bc4af900"}, "originalPosition": 64}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTY2MjAxMQ==", "bodyText": "Wrap in a call to Completable.fromObservable and return the completable? (This way we'll catch any (highly unlikely) errors emitted by the publish subject)\nsee: http://reactivex.io/RxJava/javadoc/io/reactivex/Completable.html#fromObservable-io.reactivex.ObservableSource-", "url": "https://github.com/google/ground-android/pull/328#discussion_r369662011", "createdAt": "2020-01-22T16:22:54Z", "author": {"login": "scolsen"}, "path": "gnd/src/main/java/com/google/android/gnd/system/CameraManager.java", "diffHunk": "@@ -0,0 +1,74 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.android.gnd.system;\n+\n+import android.Manifest.permission;\n+import android.content.Intent;\n+import android.graphics.Bitmap;\n+import android.util.Log;\n+import com.google.android.gnd.rx.RxCompletable;\n+import javax.inject.Inject;\n+import javax.inject.Singleton;\n+\n+@Singleton\n+public class CameraManager {\n+\n+  public static final String TAG = CameraManager.class.getName();\n+\n+  private static final int CAPTURE_PHOTO_REQUEST_CODE = CameraManager.class.hashCode() & 0xffff;\n+  private final PermissionsManager permissionsManager;\n+  private final ActivityStreams activityStreams;\n+\n+  @Inject\n+  public CameraManager(PermissionsManager permissionsManager, ActivityStreams activityStreams) {\n+    this.permissionsManager = permissionsManager;\n+    this.activityStreams = activityStreams;\n+  }\n+\n+  public void clickPhoto() {\n+    permissionsManager\n+        .obtainPermission(permission.WRITE_EXTERNAL_STORAGE)\n+        .andThen(permissionsManager.obtainPermission(permission.CAMERA))\n+        .andThen(RxCompletable.completeIf(this::sendIntent))\n+        .andThen(\n+            activityStreams\n+                .getNextActivityResult(CAPTURE_PHOTO_REQUEST_CODE)\n+                .doOnNext(\n+                    activityResult -> {\n+                      if (activityResult.isOk()) {\n+                        Intent intent = activityResult.getData();\n+                        if (intent != null) {\n+                          Bitmap photo = (Bitmap) intent.getExtras().get(\"data\");\n+                          Log.d(TAG, photo.toString());\n+                        }\n+                      } else if (activityResult.isCanceled()) {\n+                        Log.d(TAG, \"capture photo canceled\");\n+                      }\n+                    }))\n+        .subscribe();\n+  }\n+\n+  private boolean sendIntent() {\n+    Log.d(TAG, \"Sending capture photo intent\");\n+    activityStreams.withActivity(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8b049cadb44c3dacfec8c26e600638b8bc4af900"}, "originalPosition": 67}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTY2MjU4Nw==", "bodyText": "Eventually, we probably don't want to subscribe in these classes themselves, but to expose their streams to callers and subscribe there.", "url": "https://github.com/google/ground-android/pull/328#discussion_r369662587", "createdAt": "2020-01-22T16:23:50Z", "author": {"login": "scolsen"}, "path": "gnd/src/main/java/com/google/android/gnd/system/CameraManager.java", "diffHunk": "@@ -0,0 +1,74 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.android.gnd.system;\n+\n+import android.Manifest.permission;\n+import android.content.Intent;\n+import android.graphics.Bitmap;\n+import android.util.Log;\n+import com.google.android.gnd.rx.RxCompletable;\n+import javax.inject.Inject;\n+import javax.inject.Singleton;\n+\n+@Singleton\n+public class CameraManager {\n+\n+  public static final String TAG = CameraManager.class.getName();\n+\n+  private static final int CAPTURE_PHOTO_REQUEST_CODE = CameraManager.class.hashCode() & 0xffff;\n+  private final PermissionsManager permissionsManager;\n+  private final ActivityStreams activityStreams;\n+\n+  @Inject\n+  public CameraManager(PermissionsManager permissionsManager, ActivityStreams activityStreams) {\n+    this.permissionsManager = permissionsManager;\n+    this.activityStreams = activityStreams;\n+  }\n+\n+  public void clickPhoto() {\n+    permissionsManager\n+        .obtainPermission(permission.WRITE_EXTERNAL_STORAGE)\n+        .andThen(permissionsManager.obtainPermission(permission.CAMERA))\n+        .andThen(RxCompletable.completeIf(this::sendIntent))\n+        .andThen(\n+            activityStreams\n+                .getNextActivityResult(CAPTURE_PHOTO_REQUEST_CODE)\n+                .doOnNext(\n+                    activityResult -> {\n+                      if (activityResult.isOk()) {\n+                        Intent intent = activityResult.getData();\n+                        if (intent != null) {\n+                          Bitmap photo = (Bitmap) intent.getExtras().get(\"data\");\n+                          Log.d(TAG, photo.toString());\n+                        }\n+                      } else if (activityResult.isCanceled()) {\n+                        Log.d(TAG, \"capture photo canceled\");\n+                      }\n+                    }))\n+        .subscribe();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8b049cadb44c3dacfec8c26e600638b8bc4af900"}, "originalPosition": 62}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTY2NDg5MQ==", "bodyText": "Can we somehow use butterknife binding  butterknife.BindView here instead instead of calls to show, etc.?", "url": "https://github.com/google/ground-android/pull/328#discussion_r369664891", "createdAt": "2020-01-22T16:27:38Z", "author": {"login": "scolsen"}, "path": "gnd/src/main/java/com/google/android/gnd/ui/editobservation/EditObservationFragment.java", "diffHunk": "@@ -197,6 +203,12 @@ public void onShowDialog(Field field) {\n     }\n   }\n \n+  public void onShowPhotoSelectorDialog(Field field) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8b049cadb44c3dacfec8c26e600638b8bc4af900"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTY2NTcwNQ==", "bodyText": "Instead of making this generic, why not just call it PhotoDialogFragment for now and abstract later once and if we need to?", "url": "https://github.com/google/ground-android/pull/328#discussion_r369665705", "createdAt": "2020-01-22T16:28:59Z", "author": {"login": "scolsen"}, "path": "gnd/src/main/java/com/google/android/gnd/ui/editobservation/ActionBottomDialogFragment.java", "diffHunk": "@@ -0,0 +1,85 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.android.gnd.ui.editobservation;\n+\n+import android.content.Context;\n+import android.os.Bundle;\n+import android.util.Log;\n+import android.view.LayoutInflater;\n+import android.view.View;\n+import android.view.ViewGroup;\n+import androidx.annotation.NonNull;\n+import androidx.annotation.Nullable;\n+import androidx.fragment.app.Fragment;\n+import com.google.android.gnd.databinding.BottomSheetBinding;\n+import com.google.android.material.bottomsheet.BottomSheetDialogFragment;\n+\n+public class ActionBottomDialogFragment extends BottomSheetDialogFragment {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8b049cadb44c3dacfec8c26e600638b8bc4af900"}, "originalPosition": 31}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d45446beb4b7d37ddc30cb3ae598137926fc5a73", "author": {"user": {"login": "shobhitagarwal1612", "name": "Shobhit Agarwal"}}, "url": "https://github.com/google/ground-android/commit/d45446beb4b7d37ddc30cb3ae598137926fc5a73", "committedDate": "2020-01-24T07:17:55Z", "message": "Merge remote-tracking branch 'origin/photos-support' into photos-support"}, "afterCommit": {"oid": "7fcfc32591517900df9c0124acf4407da5f7d954", "author": {"user": {"login": "shobhitagarwal1612", "name": "Shobhit Agarwal"}}, "url": "https://github.com/google/ground-android/commit/7fcfc32591517900df9c0124acf4407da5f7d954", "committedDate": "2020-01-24T07:19:31Z", "message": "Merge remote-tracking branch 'origin/photos-support' into photos-support"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1658541a6302c208033b31ba32010b6f5b202588", "author": {"user": {"login": "shobhitagarwal1612", "name": "Shobhit Agarwal"}}, "url": "https://github.com/google/ground-android/commit/1658541a6302c208033b31ba32010b6f5b202588", "committedDate": "2020-01-24T07:39:44Z", "message": "Add method to select images from storage"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "493a5f179a305810d66c44af38083a5289e2af94", "author": {"user": {"login": "shobhitagarwal1612", "name": "Shobhit Agarwal"}}, "url": "https://github.com/google/ground-android/commit/493a5f179a305810d66c44af38083a5289e2af94", "committedDate": "2020-01-24T07:39:44Z", "message": "Parse Uri if result is OK"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "830b6a849f813787750aa8e43d614160674fb041", "author": {"user": {"login": "shobhitagarwal1612", "name": "Shobhit Agarwal"}}, "url": "https://github.com/google/ground-android/commit/830b6a849f813787750aa8e43d614160674fb041", "committedDate": "2020-01-24T07:39:44Z", "message": "Add camera/write permissions and CameraManager"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8579c9350f09cb997e1b10961ae028a1aaf1c3fe", "author": {"user": {"login": "shobhitagarwal1612", "name": "Shobhit Agarwal"}}, "url": "https://github.com/google/ground-android/commit/8579c9350f09cb997e1b10961ae028a1aaf1c3fe", "committedDate": "2020-01-24T07:39:44Z", "message": "Add layout for bottom modal sheet"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "80dd44a44f3c96424884718e0be9a3e7b71b8870", "author": {"user": {"login": "shobhitagarwal1612", "name": "Shobhit Agarwal"}}, "url": "https://github.com/google/ground-android/commit/80dd44a44f3c96424884718e0be9a3e7b71b8870", "committedDate": "2020-01-24T07:39:44Z", "message": "Add ModalBottomDialog fragment"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3eb5979bfd47c4b5b9846416add95e3dba78c80c", "author": {"user": {"login": "shobhitagarwal1612", "name": "Shobhit Agarwal"}}, "url": "https://github.com/google/ground-android/commit/3eb5979bfd47c4b5b9846416add95e3dba78c80c", "committedDate": "2020-01-24T07:39:44Z", "message": "Attach UI for photo select/capture"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3880ccaf1377756d6b0c0b06ff033b2d1559d1c6", "author": {"user": {"login": "shobhitagarwal1612", "name": "Shobhit Agarwal"}}, "url": "https://github.com/google/ground-android/commit/3880ccaf1377756d6b0c0b06ff033b2d1559d1c6", "committedDate": "2020-01-24T07:39:44Z", "message": "Fix capture/select photo"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a9af8c7b791b5bad35559c73caa3fd45fcdef628", "author": {"user": {"login": "shobhitagarwal1612", "name": "Shobhit Agarwal"}}, "url": "https://github.com/google/ground-android/commit/a9af8c7b791b5bad35559c73caa3fd45fcdef628", "committedDate": "2020-01-24T07:39:44Z", "message": "Revert test changes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0ac3c154ca2665c544f1c8b6655a34e123d406fa", "author": {"user": {"login": "shobhitagarwal1612", "name": "Shobhit Agarwal"}}, "url": "https://github.com/google/ground-android/commit/0ac3c154ca2665c544f1c8b6655a34e123d406fa", "committedDate": "2020-01-24T07:39:44Z", "message": "Improve file name: bottom_sheet -> edit_observation_bottom_sheet"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1a8954e6f4cf807334f0359752e6f33e1f2399df", "author": {"user": {"login": "shobhitagarwal1612", "name": "Shobhit Agarwal"}}, "url": "https://github.com/google/ground-android/commit/1a8954e6f4cf807334f0359752e6f33e1f2399df", "committedDate": "2020-01-24T07:39:44Z", "message": "Use Completable instead of completeIf"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7d753db34adfa6486ce40e455acba4b8c5c489da", "author": {"user": {"login": "shobhitagarwal1612", "name": "Shobhit Agarwal"}}, "url": "https://github.com/google/ground-android/commit/7d753db34adfa6486ce40e455acba4b8c5c489da", "committedDate": "2020-01-24T07:39:44Z", "message": "Use Completable instead of completeIf"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "481266c576cbfe402ab0e3a74ccfaa18ed4f8248", "author": {"user": {"login": "shobhitagarwal1612", "name": "Shobhit Agarwal"}}, "url": "https://github.com/google/ground-android/commit/481266c576cbfe402ab0e3a74ccfaa18ed4f8248", "committedDate": "2020-01-24T07:39:44Z", "message": "Rename DialogFragment"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c822d0ad7657123b363c923b929c9caf77300036", "author": {"user": {"login": "shobhitagarwal1612", "name": "Shobhit Agarwal"}}, "url": "https://github.com/google/ground-android/commit/c822d0ad7657123b363c923b929c9caf77300036", "committedDate": "2020-01-24T07:39:44Z", "message": "Subscribe image results in ViewModel"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "50e36d14a3cf46c6ae178507b9b597d0a58491e5", "author": {"user": {"login": "shobhitagarwal1612", "name": "Shobhit Agarwal"}}, "url": "https://github.com/google/ground-android/commit/50e36d14a3cf46c6ae178507b9b597d0a58491e5", "committedDate": "2020-01-24T07:43:24Z", "message": "Code cleanup"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7fcfc32591517900df9c0124acf4407da5f7d954", "author": {"user": {"login": "shobhitagarwal1612", "name": "Shobhit Agarwal"}}, "url": "https://github.com/google/ground-android/commit/7fcfc32591517900df9c0124acf4407da5f7d954", "committedDate": "2020-01-24T07:19:31Z", "message": "Merge remote-tracking branch 'origin/photos-support' into photos-support"}, "afterCommit": {"oid": "50e36d14a3cf46c6ae178507b9b597d0a58491e5", "author": {"user": {"login": "shobhitagarwal1612", "name": "Shobhit Agarwal"}}, "url": "https://github.com/google/ground-android/commit/50e36d14a3cf46c6ae178507b9b597d0a58491e5", "committedDate": "2020-01-24T07:43:24Z", "message": "Code cleanup"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7d9b3f8ab03a904a8f5b8855e366c43a9be429a1", "author": {"user": {"login": "shobhitagarwal1612", "name": "Shobhit Agarwal"}}, "url": "https://github.com/google/ground-android/commit/7d9b3f8ab03a904a8f5b8855e366c43a9be429a1", "committedDate": "2020-01-24T16:44:23Z", "message": "Merge branch 'master' into photos-support"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8220ab5a331c5218c4e28d09b8e35f52b615b588", "author": {"user": {"login": "shobhitagarwal1612", "name": "Shobhit Agarwal"}}, "url": "https://github.com/google/ground-android/commit/8220ab5a331c5218c4e28d09b8e35f52b615b588", "committedDate": "2020-01-24T17:05:55Z", "message": "Remove unused code"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4ccaf4728d5f334bb4be63f4107f226544acf2cc", "author": {"user": {"login": "shobhitagarwal1612", "name": "Shobhit Agarwal"}}, "url": "https://github.com/google/ground-android/commit/4ccaf4728d5f334bb4be63f4107f226544acf2cc", "committedDate": "2020-01-25T18:43:07Z", "message": "Bind fieldId along with the photo result\n\nThis would be useful if more than one photo field are present in the layer"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6985d80e1f8be1fa39bd20c253d84af03bd1a580", "author": {"user": {"login": "shobhitagarwal1612", "name": "Shobhit Agarwal"}}, "url": "https://github.com/google/ground-android/commit/6985d80e1f8be1fa39bd20c253d84af03bd1a580", "committedDate": "2020-01-25T18:55:28Z", "message": "Add TODOs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1a6dd5c208acef59a3c69548742d01102d223b53", "author": {"user": {"login": "shobhitagarwal1612", "name": "Shobhit Agarwal"}}, "url": "https://github.com/google/ground-android/commit/1a6dd5c208acef59a3c69548742d01102d223b53", "committedDate": "2020-01-26T06:25:33Z", "message": "Improve build time"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4b044e3c7ccce420b15981bf8922b49b0362a8ac", "author": {"user": {"login": "shobhitagarwal1612", "name": "Shobhit Agarwal"}}, "url": "https://github.com/google/ground-android/commit/4b044e3c7ccce420b15981bf8922b49b0362a8ac", "committedDate": "2020-01-26T06:28:04Z", "message": "Add callback for attached photo"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "24a062ae87c77ccdab3bcd41c4482fcf74dcc58c", "author": {"user": {"login": "shobhitagarwal1612", "name": "Shobhit Agarwal"}}, "url": "https://github.com/google/ground-android/commit/24a062ae87c77ccdab3bcd41c4482fcf74dcc58c", "committedDate": "2020-01-26T11:12:46Z", "message": "Load added pic to the imageview placeholder"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d7a42323b50f8873b8d2b623f39f9c57a9301704", "author": {"user": {"login": "shobhitagarwal1612", "name": "Shobhit Agarwal"}}, "url": "https://github.com/google/ground-android/commit/d7a42323b50f8873b8d2b623f39f9c57a9301704", "committedDate": "2020-01-26T12:48:54Z", "message": "Revert test changes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e2674036cb11975e917f149199271451c632cd93", "author": {"user": {"login": "shobhitagarwal1612", "name": "Shobhit Agarwal"}}, "url": "https://github.com/google/ground-android/commit/e2674036cb11975e917f149199271451c632cd93", "committedDate": "2020-01-27T05:56:25Z", "message": "Filter activity result if ok"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "17e754a46dd2c247e9e64c589f47ac9e1a188a27", "author": {"user": {"login": "shobhitagarwal1612", "name": "Shobhit Agarwal"}}, "url": "https://github.com/google/ground-android/commit/17e754a46dd2c247e9e64c589f47ac9e1a188a27", "committedDate": "2020-01-27T06:00:35Z", "message": "Improve method name"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9c2f830f04b0025ddaf79e151fab858fcd4ada4b", "author": {"user": {"login": "shobhitagarwal1612", "name": "Shobhit Agarwal"}}, "url": "https://github.com/google/ground-android/commit/9c2f830f04b0025ddaf79e151fab858fcd4ada4b", "committedDate": "2020-01-27T18:05:47Z", "message": "Merge branch 'master' into photos-support"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ4OTkyMjUz", "url": "https://github.com/google/ground-android/pull/328#pullrequestreview-348992253", "createdAt": "2020-01-27T21:37:01Z", "commit": {"oid": "9c2f830f04b0025ddaf79e151fab858fcd4ada4b"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 20, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QyMTozNzowMlrOFiSUHA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QyMjowNTowNlrOFiTGcw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTQ5NTk2NA==", "bodyText": "Please add Javadoc explaining [non-obvious details] of what this class is used for.", "url": "https://github.com/google/ground-android/pull/328#discussion_r371495964", "createdAt": "2020-01-27T21:37:02Z", "author": {"login": "gino-m"}, "path": "gnd/src/main/java/com/google/android/gnd/system/CameraManager.java", "diffHunk": "@@ -0,0 +1,78 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.android.gnd.system;\n+\n+import android.Manifest.permission;\n+import android.content.Intent;\n+import android.graphics.Bitmap;\n+import android.provider.MediaStore;\n+import android.util.Log;\n+import com.google.android.gnd.system.ActivityStreams.ActivityResult;\n+import io.reactivex.Completable;\n+import io.reactivex.Observable;\n+import java8.util.Optional;\n+import javax.inject.Inject;\n+import javax.inject.Singleton;\n+\n+@Singleton\n+public class CameraManager {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9c2f830f04b0025ddaf79e151fab858fcd4ada4b"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTQ5NjcyMw==", "bodyText": "Also here.", "url": "https://github.com/google/ground-android/pull/328#discussion_r371496723", "createdAt": "2020-01-27T21:38:45Z", "author": {"login": "gino-m"}, "path": "gnd/src/main/java/com/google/android/gnd/system/StorageManager.java", "diffHunk": "@@ -0,0 +1,82 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.android.gnd.system;\n+\n+import android.Manifest.permission;\n+import android.content.Context;\n+import android.content.Intent;\n+import android.graphics.Bitmap;\n+import android.provider.MediaStore.Images.Media;\n+import android.util.Log;\n+import com.google.android.gnd.system.ActivityStreams.ActivityResult;\n+import io.reactivex.Completable;\n+import io.reactivex.Observable;\n+import java8.util.Optional;\n+import javax.inject.Inject;\n+import javax.inject.Singleton;\n+\n+@Singleton\n+public class StorageManager {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9c2f830f04b0025ddaf79e151fab858fcd4ada4b"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTQ5NzIwMg==", "bodyText": "Nit: Use PICK_IMAGE_REQUEST_CODE for consistency.", "url": "https://github.com/google/ground-android/pull/328#discussion_r371497202", "createdAt": "2020-01-27T21:39:53Z", "author": {"login": "gino-m"}, "path": "gnd/src/main/java/com/google/android/gnd/system/StorageManager.java", "diffHunk": "@@ -0,0 +1,82 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.android.gnd.system;\n+\n+import android.Manifest.permission;\n+import android.content.Context;\n+import android.content.Intent;\n+import android.graphics.Bitmap;\n+import android.provider.MediaStore.Images.Media;\n+import android.util.Log;\n+import com.google.android.gnd.system.ActivityStreams.ActivityResult;\n+import io.reactivex.Completable;\n+import io.reactivex.Observable;\n+import java8.util.Optional;\n+import javax.inject.Inject;\n+import javax.inject.Singleton;\n+\n+@Singleton\n+public class StorageManager {\n+\n+  public static final String TAG = StorageManager.class.getName();\n+\n+  private static final int PICKFILE_REQUEST_CODE = StorageManager.class.hashCode() & 0xffff;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9c2f830f04b0025ddaf79e151fab858fcd4ada4b"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTQ5ODgwNQ==", "bodyText": "I generally prefer to bail out on edge cases (==null) and fall through to the expected default base case (!=null). That said, this could optionally also be written functionally as:\nactivityResult -> Optional.ofNullable(activityResult.getData())\n   .map(Intent::getExtras)\n   .map(extras -> (Bitmap) extras.get(\"data\"));", "url": "https://github.com/google/ground-android/pull/328#discussion_r371498805", "createdAt": "2020-01-27T21:43:15Z", "author": {"login": "gino-m"}, "path": "gnd/src/main/java/com/google/android/gnd/system/CameraManager.java", "diffHunk": "@@ -0,0 +1,78 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.android.gnd.system;\n+\n+import android.Manifest.permission;\n+import android.content.Intent;\n+import android.graphics.Bitmap;\n+import android.provider.MediaStore;\n+import android.util.Log;\n+import com.google.android.gnd.system.ActivityStreams.ActivityResult;\n+import io.reactivex.Completable;\n+import io.reactivex.Observable;\n+import java8.util.Optional;\n+import javax.inject.Inject;\n+import javax.inject.Singleton;\n+\n+@Singleton\n+public class CameraManager {\n+\n+  public static final String TAG = CameraManager.class.getName();\n+\n+  private static final int CAPTURE_PHOTO_REQUEST_CODE = CameraManager.class.hashCode() & 0xffff;\n+  private final PermissionsManager permissionsManager;\n+  private final ActivityStreams activityStreams;\n+\n+  @Inject\n+  public CameraManager(PermissionsManager permissionsManager, ActivityStreams activityStreams) {\n+    this.permissionsManager = permissionsManager;\n+    this.activityStreams = activityStreams;\n+  }\n+\n+  public Completable launchImageCapture() {\n+    return permissionsManager\n+        .obtainPermission(permission.WRITE_EXTERNAL_STORAGE)\n+        .andThen(permissionsManager.obtainPermission(permission.CAMERA))\n+        .andThen(sendCaptureImageIntent());\n+  }\n+\n+  public Observable<Optional<Bitmap>> captureImageResult() {\n+    return activityStreams\n+        .getNextActivityResult(CAPTURE_PHOTO_REQUEST_CODE)\n+        .filter(ActivityResult::isOk)\n+        .map(\n+            activityResult -> {\n+              Intent intent = activityResult.getData();\n+              if (intent != null && intent.getExtras() != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9c2f830f04b0025ddaf79e151fab858fcd4ada4b"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTQ5OTcyOA==", "bodyText": "Same here:\nactivityResult ->\n  Optional.ofNullable(activityResult.getData())\n    .map(Intent::getData)\n    .map(data -> Media.getBitmap(context.getContentResolver(), data)", "url": "https://github.com/google/ground-android/pull/328#discussion_r371499728", "createdAt": "2020-01-27T21:45:15Z", "author": {"login": "gino-m"}, "path": "gnd/src/main/java/com/google/android/gnd/system/StorageManager.java", "diffHunk": "@@ -0,0 +1,82 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.android.gnd.system;\n+\n+import android.Manifest.permission;\n+import android.content.Context;\n+import android.content.Intent;\n+import android.graphics.Bitmap;\n+import android.provider.MediaStore.Images.Media;\n+import android.util.Log;\n+import com.google.android.gnd.system.ActivityStreams.ActivityResult;\n+import io.reactivex.Completable;\n+import io.reactivex.Observable;\n+import java8.util.Optional;\n+import javax.inject.Inject;\n+import javax.inject.Singleton;\n+\n+@Singleton\n+public class StorageManager {\n+\n+  public static final String TAG = StorageManager.class.getName();\n+\n+  private static final int PICKFILE_REQUEST_CODE = StorageManager.class.hashCode() & 0xffff;\n+  private final Context context;\n+  private final PermissionsManager permissionsManager;\n+  private final ActivityStreams activityStreams;\n+\n+  @Inject\n+  public StorageManager(\n+      Context context, PermissionsManager permissionsManager, ActivityStreams activityStreams) {\n+    this.context = context;\n+    this.permissionsManager = permissionsManager;\n+    this.activityStreams = activityStreams;\n+  }\n+\n+  public Completable launchImagePicker() {\n+    return permissionsManager\n+        .obtainPermission(permission.READ_EXTERNAL_STORAGE)\n+        .andThen(sendImagePickerIntent());\n+  }\n+\n+  public Observable<Optional<Bitmap>> imagePickerResult() {\n+    return activityStreams\n+        .getNextActivityResult(PICKFILE_REQUEST_CODE)\n+        .filter(ActivityResult::isOk)\n+        .map(\n+            activityResult -> {\n+              Intent intent = activityResult.getData();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9c2f830f04b0025ddaf79e151fab858fcd4ada4b"}, "originalPosition": 62}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTUwMTQ5MQ==", "bodyText": "Same here.", "url": "https://github.com/google/ground-android/pull/328#discussion_r371501491", "createdAt": "2020-01-27T21:48:57Z", "author": {"login": "gino-m"}, "path": "gnd/src/main/java/com/google/android/gnd/ui/editobservation/EditObservationFragment.java", "diffHunk": "@@ -169,12 +191,31 @@ public void addMultipleChoiceField(Field field) {\n   public void addPhotoField(Field field) {\n     PhotoInputFieldBinding binding =\n         PhotoInputFieldBinding.inflate(getLayoutInflater(), formLayout, false);\n-    binding.setViewModel(viewModel);\n     binding.setLifecycleOwner(this);\n     binding.setField(field);\n+    binding.setFragment(this);\n     formLayout.addView(binding.getRoot());\n     assignGeneratedId(binding.getRoot().findViewById(R.id.image_thumbnail_preview));\n     assignGeneratedId(binding.getRoot().findViewById(R.id.btn_select_photo));\n+\n+    viewModel", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9c2f830f04b0025ddaf79e151fab858fcd4ada4b"}, "originalPosition": 86}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTUwMTcyOQ==", "bodyText": "Can some of this logic be moved into the ViewModel?", "url": "https://github.com/google/ground-android/pull/328#discussion_r371501729", "createdAt": "2020-01-27T21:49:27Z", "author": {"login": "gino-m"}, "path": "gnd/src/main/java/com/google/android/gnd/ui/editobservation/EditObservationFragment.java", "diffHunk": "@@ -91,10 +101,22 @@ public void onViewCreated(\n     viewModel.getForm().observe(this, this::rebuildForm);\n     viewModel.getToolbarTitle().observe(this, toolbar::setTitle);\n     viewModel.getSaveResults().observe(this, e -> e.ifUnhandled(this::handleSaveResult));\n+    viewModel.getAddedPhoto().observe(this, this::onPhotoAdded);\n     // Initialize view model.\n     viewModel.initialize(EditObservationFragmentArgs.fromBundle(getArguments()));\n   }\n \n+  private void onPhotoAdded(Map<Field, File> fieldFileMap) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9c2f830f04b0025ddaf79e151fab858fcd4ada4b"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTUwMjA4MA==", "bodyText": "Please add Javadoc re how this is used. Also, name implies this is a single added photo - should it be something newPhotos?", "url": "https://github.com/google/ground-android/pull/328#discussion_r371502080", "createdAt": "2020-01-27T21:50:13Z", "author": {"login": "gino-m"}, "path": "gnd/src/main/java/com/google/android/gnd/ui/editobservation/EditObservationViewModel.java", "diffHunk": "@@ -63,13 +69,18 @@\n   private final ObservationRepository observationRepository;\n   private final AuthenticationManager authManager;\n   private final Resources resources;\n+  private final StorageManager storageManager;\n+  private final CameraManager cameraManager;\n+  private final FileUtil fileUtil;\n \n   // Input events.\n \n   /** Arguments passed in from view on initialize(). */\n   private final BehaviorProcessor<EditObservationFragmentArgs> viewArgs =\n       BehaviorProcessor.create();\n \n+  private final BehaviorProcessor<Map<Field, File>> addedPhoto = BehaviorProcessor.create();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9c2f830f04b0025ddaf79e151fab858fcd4ada4b"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTUwMjY1MA==", "bodyText": "What do you mean by \"Added\" here? Photos that were added during the lifecycle of this ViewModel?", "url": "https://github.com/google/ground-android/pull/328#discussion_r371502650", "createdAt": "2020-01-27T21:51:27Z", "author": {"login": "gino-m"}, "path": "gnd/src/main/java/com/google/android/gnd/ui/editobservation/EditObservationViewModel.java", "diffHunk": "@@ -78,6 +89,9 @@\n   /** Form definition, loaded when view is initialized. */\n   private final LiveData<Form> form;\n \n+  /** Added image field. */\n+  private final LiveData<Map<Field, File>> photo;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9c2f830f04b0025ddaf79e151fab858fcd4ada4b"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTUwMjg5MA==", "bodyText": "Do we need both addedPhoto and photo? What's the difference?", "url": "https://github.com/google/ground-android/pull/328#discussion_r371502890", "createdAt": "2020-01-27T21:52:00Z", "author": {"login": "gino-m"}, "path": "gnd/src/main/java/com/google/android/gnd/ui/editobservation/EditObservationViewModel.java", "diffHunk": "@@ -120,12 +134,18 @@\n   EditObservationViewModel(\n       GndApplication application,\n       ObservationRepository observationRepository,\n-      AuthenticationManager authenticationManager) {\n+      AuthenticationManager authenticationManager,\n+      StorageManager storageManager,\n+      CameraManager cameraManager) {\n     this.resources = application.getResources();\n     this.observationRepository = observationRepository;\n     this.authManager = authenticationManager;\n+    this.storageManager = storageManager;\n+    this.cameraManager = cameraManager;\n+    this.fileUtil = new FileUtil(application);\n     this.form = fromPublisher(viewArgs.switchMapSingle(this::onInitialize));\n     this.saveResults = fromPublisher(saveClicks.switchMapSingle(__ -> onSave()));\n+    this.photo = fromPublisher(addedPhoto);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9c2f830f04b0025ddaf79e151fab858fcd4ada4b"}, "originalPosition": 64}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTUwNDQ3Ng==", "bodyText": "Please add essential Javadoc about why this is needed and what it's used for.", "url": "https://github.com/google/ground-android/pull/328#discussion_r371504476", "createdAt": "2020-01-27T21:55:24Z", "author": {"login": "gino-m"}, "path": "gnd/src/main/java/com/google/android/gnd/ui/editobservation/PhotoDialogFragment.java", "diffHunk": "@@ -0,0 +1,99 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.android.gnd.ui.editobservation;\n+\n+import android.content.Context;\n+import android.os.Bundle;\n+import android.util.Log;\n+import android.view.LayoutInflater;\n+import android.view.View;\n+import android.view.ViewGroup;\n+import androidx.annotation.NonNull;\n+import androidx.annotation.Nullable;\n+import androidx.fragment.app.Fragment;\n+import com.google.android.gnd.databinding.EditObservationBottomSheetBinding;\n+import com.google.android.material.bottomsheet.BottomSheetDialogFragment;\n+\n+public class PhotoDialogFragment extends BottomSheetDialogFragment {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9c2f830f04b0025ddaf79e151fab858fcd4ada4b"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTUwNDY3Nw==", "bodyText": "Nit: Use .class.getSimpleName() name to ensure refactors rename this properly.", "url": "https://github.com/google/ground-android/pull/328#discussion_r371504677", "createdAt": "2020-01-27T21:55:50Z", "author": {"login": "gino-m"}, "path": "gnd/src/main/java/com/google/android/gnd/ui/editobservation/PhotoDialogFragment.java", "diffHunk": "@@ -0,0 +1,99 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.android.gnd.ui.editobservation;\n+\n+import android.content.Context;\n+import android.os.Bundle;\n+import android.util.Log;\n+import android.view.LayoutInflater;\n+import android.view.View;\n+import android.view.ViewGroup;\n+import androidx.annotation.NonNull;\n+import androidx.annotation.Nullable;\n+import androidx.fragment.app.Fragment;\n+import com.google.android.gnd.databinding.EditObservationBottomSheetBinding;\n+import com.google.android.material.bottomsheet.BottomSheetDialogFragment;\n+\n+public class PhotoDialogFragment extends BottomSheetDialogFragment {\n+\n+  public static final String TAG = \"ActionBottomDialog\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9c2f830f04b0025ddaf79e151fab858fcd4ada4b"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTUwNTQ4Mg==", "bodyText": "Nit: Final \".\" (can remove trailing slash)", "url": "https://github.com/google/ground-android/pull/328#discussion_r371505482", "createdAt": "2020-01-27T21:57:41Z", "author": {"login": "gino-m"}, "path": "gnd/src/main/java/com/google/android/gnd/ui/util/FileUtil.java", "diffHunk": "@@ -0,0 +1,50 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.android.gnd.ui.util;\n+\n+import android.content.Context;\n+import android.graphics.Bitmap;\n+import android.util.Log;\n+import java.io.File;\n+import java.io.FileOutputStream;\n+import java.io.IOException;\n+\n+public class FileUtil {\n+\n+  private static final String TAG = FileUtil.class.getName();\n+  private final Context context;\n+\n+  public FileUtil(Context context) {\n+    this.context = context;\n+  }\n+\n+  /**\n+   * Creates a new file from bitmap and saves under internal app directory\n+   * /data/data/com.google.android.gnd/files/", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9c2f830f04b0025ddaf79e151fab858fcd4ada4b"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTUwNTc3Ng==", "bodyText": "Since this is a low-level util shall we throw the exception up to the caller here instead of logging? (i.e. declare throws IOException)?", "url": "https://github.com/google/ground-android/pull/328#discussion_r371505776", "createdAt": "2020-01-27T21:58:21Z", "author": {"login": "gino-m"}, "path": "gnd/src/main/java/com/google/android/gnd/ui/util/FileUtil.java", "diffHunk": "@@ -0,0 +1,50 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.android.gnd.ui.util;\n+\n+import android.content.Context;\n+import android.graphics.Bitmap;\n+import android.util.Log;\n+import java.io.File;\n+import java.io.FileOutputStream;\n+import java.io.IOException;\n+\n+public class FileUtil {\n+\n+  private static final String TAG = FileUtil.class.getName();\n+  private final Context context;\n+\n+  public FileUtil(Context context) {\n+    this.context = context;\n+  }\n+\n+  /**\n+   * Creates a new file from bitmap and saves under internal app directory\n+   * /data/data/com.google.android.gnd/files/\n+   */\n+  public File saveBitmap(Bitmap bitmap, String filename) {\n+    File file = new File(context.getFilesDir(), filename);\n+    try (FileOutputStream fos = context.openFileOutput(filename, Context.MODE_PRIVATE)) {\n+      bitmap.compress(Bitmap.CompressFormat.JPEG, 100, fos);\n+    } catch (IOException e) {\n+      Log.e(TAG, e.getMessage(), e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9c2f830f04b0025ddaf79e151fab858fcd4ada4b"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTUwNjYzMw==", "bodyText": "Javadoc here as well, maybe rename \"FIELD_ID_BUNDLE_ARG\" for clarity.", "url": "https://github.com/google/ground-android/pull/328#discussion_r371506633", "createdAt": "2020-01-27T22:00:08Z", "author": {"login": "gino-m"}, "path": "gnd/src/main/java/com/google/android/gnd/ui/editobservation/PhotoDialogFragment.java", "diffHunk": "@@ -0,0 +1,99 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.android.gnd.ui.editobservation;\n+\n+import android.content.Context;\n+import android.os.Bundle;\n+import android.util.Log;\n+import android.view.LayoutInflater;\n+import android.view.View;\n+import android.view.ViewGroup;\n+import androidx.annotation.NonNull;\n+import androidx.annotation.Nullable;\n+import androidx.fragment.app.Fragment;\n+import com.google.android.gnd.databinding.EditObservationBottomSheetBinding;\n+import com.google.android.material.bottomsheet.BottomSheetDialogFragment;\n+\n+public class PhotoDialogFragment extends BottomSheetDialogFragment {\n+\n+  public static final String TAG = \"ActionBottomDialog\";\n+  public static final String FIELD_ID = \"field_id\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9c2f830f04b0025ddaf79e151fab858fcd4ada4b"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTUwNzA1OA==", "bodyText": "Can this and the other lambdas blocks below be refactored into methods with clear names to make it easier to follow?", "url": "https://github.com/google/ground-android/pull/328#discussion_r371507058", "createdAt": "2020-01-27T22:01:03Z", "author": {"login": "gino-m"}, "path": "gnd/src/main/java/com/google/android/gnd/ui/editobservation/EditObservationViewModel.java", "diffHunk": "@@ -193,6 +212,52 @@ public void onFocusChange(Field field, boolean hasFocus) {\n     }\n   }\n \n+  void initPhotoSelector(String fieldId) {\n+    /*\n+     * Didn't subscribe this with Fragment's lifecycle because we need to retain the disposable\n+     * after the fragment is destroyed (for activity result)\n+     */\n+    disposeOnClear(\n+        storageManager\n+            .launchImagePicker()\n+            .andThen(\n+                storageManager\n+                    .imagePickerResult()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9c2f830f04b0025ddaf79e151fab858fcd4ada4b"}, "originalPosition": 105}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTUwNzgxMw==", "bodyText": "disposeOnClear will remove the subscription as soon as the ViewModel is removed, and we can't assume the ViewModel will stick around after the Fragment is destroyed. Do we need this because the photo picker Intent causes the fragment to go away? If so, can we launch image picker synchronously, and only subscribe to image picker results?", "url": "https://github.com/google/ground-android/pull/328#discussion_r371507813", "createdAt": "2020-01-27T22:02:46Z", "author": {"login": "gino-m"}, "path": "gnd/src/main/java/com/google/android/gnd/ui/editobservation/EditObservationViewModel.java", "diffHunk": "@@ -193,6 +212,52 @@ public void onFocusChange(Field field, boolean hasFocus) {\n     }\n   }\n \n+  void initPhotoSelector(String fieldId) {\n+    /*\n+     * Didn't subscribe this with Fragment's lifecycle because we need to retain the disposable\n+     * after the fragment is destroyed (for activity result)\n+     */\n+    disposeOnClear(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9c2f830f04b0025ddaf79e151fab858fcd4ada4b"}, "originalPosition": 100}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTUwNzkzNg==", "bodyText": "Can we inject this?", "url": "https://github.com/google/ground-android/pull/328#discussion_r371507936", "createdAt": "2020-01-27T22:03:01Z", "author": {"login": "gino-m"}, "path": "gnd/src/main/java/com/google/android/gnd/ui/editobservation/EditObservationViewModel.java", "diffHunk": "@@ -120,12 +134,18 @@\n   EditObservationViewModel(\n       GndApplication application,\n       ObservationRepository observationRepository,\n-      AuthenticationManager authenticationManager) {\n+      AuthenticationManager authenticationManager,\n+      StorageManager storageManager,\n+      CameraManager cameraManager) {\n     this.resources = application.getResources();\n     this.observationRepository = observationRepository;\n     this.authManager = authenticationManager;\n+    this.storageManager = storageManager;\n+    this.cameraManager = cameraManager;\n+    this.fileUtil = new FileUtil(application);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9c2f830f04b0025ddaf79e151fab858fcd4ada4b"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTUwODUzNg==", "bodyText": "Naming nit: fileFieldMap", "url": "https://github.com/google/ground-android/pull/328#discussion_r371508536", "createdAt": "2020-01-27T22:04:25Z", "author": {"login": "gino-m"}, "path": "gnd/src/main/java/com/google/android/gnd/ui/editobservation/EditObservationFragment.java", "diffHunk": "@@ -91,10 +101,22 @@ public void onViewCreated(\n     viewModel.getForm().observe(this, this::rebuildForm);\n     viewModel.getToolbarTitle().observe(this, toolbar::setTitle);\n     viewModel.getSaveResults().observe(this, e -> e.ifUnhandled(this::handleSaveResult));\n+    viewModel.getAddedPhoto().observe(this, this::onPhotoAdded);\n     // Initialize view model.\n     viewModel.initialize(EditObservationFragmentArgs.fromBundle(getArguments()));\n   }\n \n+  private void onPhotoAdded(Map<Field, File> fieldFileMap) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9c2f830f04b0025ddaf79e151fab858fcd4ada4b"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTUwODg1MQ==", "bodyText": "What does this do, and why does it do it for all image fields, not just the changed one?", "url": "https://github.com/google/ground-android/pull/328#discussion_r371508851", "createdAt": "2020-01-27T22:05:06Z", "author": {"login": "gino-m"}, "path": "gnd/src/main/java/com/google/android/gnd/ui/editobservation/EditObservationFragment.java", "diffHunk": "@@ -91,10 +101,22 @@ public void onViewCreated(\n     viewModel.getForm().observe(this, this::rebuildForm);\n     viewModel.getToolbarTitle().observe(this, toolbar::setTitle);\n     viewModel.getSaveResults().observe(this, e -> e.ifUnhandled(this::handleSaveResult));\n+    viewModel.getAddedPhoto().observe(this, this::onPhotoAdded);\n     // Initialize view model.\n     viewModel.initialize(EditObservationFragmentArgs.fromBundle(getArguments()));\n   }\n \n+  private void onPhotoAdded(Map<Field, File> fieldFileMap) {\n+    Log.d(TAG, fieldFileMap.toString());\n+\n+    // TODO: Upload photo to Firestore Storage\n+    // TODO: Fetch download url and update response in viewModel\n+    for (Field field : fieldFileMap.keySet()) {\n+      File file = fieldFileMap.get(field);\n+      viewModel.onResponseChanged(field, TextResponse.fromString(file.getPath()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9c2f830f04b0025ddaf79e151fab858fcd4ada4b"}, "originalPosition": 67}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5f91ea024b09898211bb6fb74039330312512b0f", "author": {"user": {"login": "shobhitagarwal1612", "name": "Shobhit Agarwal"}}, "url": "https://github.com/google/ground-android/commit/5f91ea024b09898211bb6fb74039330312512b0f", "committedDate": "2020-01-28T03:34:04Z", "message": "Add Javadoc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2f4efccf400aa69fb10b42a78dae77cec987072a", "author": {"user": {"login": "shobhitagarwal1612", "name": "Shobhit Agarwal"}}, "url": "https://github.com/google/ground-android/commit/2f4efccf400aa69fb10b42a78dae77cec987072a", "committedDate": "2020-01-28T03:36:14Z", "message": "Rename request code variable name"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ee14a2a8d38fcaae6824aa927067214ee583b7c6", "author": {"user": {"login": "shobhitagarwal1612", "name": "Shobhit Agarwal"}}, "url": "https://github.com/google/ground-android/commit/ee14a2a8d38fcaae6824aa927067214ee583b7c6", "committedDate": "2020-01-28T04:04:10Z", "message": "Cleanup RxChains"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cdcf260b534cd0a159a8ef3b3cff71e56e314de2", "author": {"user": {"login": "shobhitagarwal1612", "name": "Shobhit Agarwal"}}, "url": "https://github.com/google/ground-android/commit/cdcf260b534cd0a159a8ef3b3cff71e56e314de2", "committedDate": "2020-01-28T04:05:24Z", "message": "Fix TAG name"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0fc240f0d0a95a19c9f57f2be2d8159d27e0879d", "author": {"user": {"login": "shobhitagarwal1612", "name": "Shobhit Agarwal"}}, "url": "https://github.com/google/ground-android/commit/0fc240f0d0a95a19c9f57f2be2d8159d27e0879d", "committedDate": "2020-01-28T05:36:23Z", "message": "Refactor lambda blocks"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5af395ed92664da019dc14eeced4651da5872fc4", "author": {"user": {"login": "shobhitagarwal1612", "name": "Shobhit Agarwal"}}, "url": "https://github.com/google/ground-android/commit/5af395ed92664da019dc14eeced4651da5872fc4", "committedDate": "2020-01-28T05:38:10Z", "message": "Convert FileUtil into injectable"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1e41bbd0f26888493f54325352eb6aa650d28e51", "author": {"user": {"login": "shobhitagarwal1612", "name": "Shobhit Agarwal"}}, "url": "https://github.com/google/ground-android/commit/1e41bbd0f26888493f54325352eb6aa650d28e51", "committedDate": "2020-01-28T05:39:27Z", "message": "Rename param"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cd7dc3701039500c3d9096b1da49082d473a590d", "author": {"user": {"login": "shobhitagarwal1612", "name": "Shobhit Agarwal"}}, "url": "https://github.com/google/ground-android/commit/cd7dc3701039500c3d9096b1da49082d473a590d", "committedDate": "2020-01-28T05:43:18Z", "message": "Update var name"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "26a83e26eecbbe07da7bb878dc4858f39efe3bef", "author": {"user": {"login": "shobhitagarwal1612", "name": "Shobhit Agarwal"}}, "url": "https://github.com/google/ground-android/commit/26a83e26eecbbe07da7bb878dc4858f39efe3bef", "committedDate": "2020-01-28T05:47:17Z", "message": "Add Javadoc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d3fb8d131d0de875e3858b6dbe9d878436daafdd", "author": {"user": {"login": "shobhitagarwal1612", "name": "Shobhit Agarwal"}}, "url": "https://github.com/google/ground-android/commit/d3fb8d131d0de875e3858b6dbe9d878436daafdd", "committedDate": "2020-01-28T05:48:37Z", "message": "Add \".\" and remove trailing \"/\""}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5595e6673653c202792018898dabf38ee52dbfbd", "author": {"user": {"login": "shobhitagarwal1612", "name": "Shobhit Agarwal"}}, "url": "https://github.com/google/ground-android/commit/5595e6673653c202792018898dabf38ee52dbfbd", "committedDate": "2020-01-28T05:51:41Z", "message": "Don't catch IOException in FileUtil and let the implementation handle it"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5a79141a1bd570b6fd804776e8b8cb191ffb343a", "author": {"user": {"login": "shobhitagarwal1612", "name": "Shobhit Agarwal"}}, "url": "https://github.com/google/ground-android/commit/5a79141a1bd570b6fd804776e8b8cb191ffb343a", "committedDate": "2020-01-28T05:52:34Z", "message": "Merge branch 'master' into photos-support"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3b807e239b255bc6c996109a87cfea56bdcd4944", "author": {"user": {"login": "shobhitagarwal1612", "name": "Shobhit Agarwal"}}, "url": "https://github.com/google/ground-android/commit/3b807e239b255bc6c996109a87cfea56bdcd4944", "committedDate": "2020-01-28T06:08:46Z", "message": "Move update response logic to ViewModel"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8db29aaea7619a5ddb529a78fd8213569f95eebc", "author": {"user": {"login": "shobhitagarwal1612", "name": "Shobhit Agarwal"}}, "url": "https://github.com/google/ground-android/commit/8db29aaea7619a5ddb529a78fd8213569f95eebc", "committedDate": "2020-01-28T06:20:12Z", "message": "Update comment"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f25bbc8f6177d0f198952459c406941ffd892d45", "author": {"user": {"login": "shobhitagarwal1612", "name": "Shobhit Agarwal"}}, "url": "https://github.com/google/ground-android/commit/f25bbc8f6177d0f198952459c406941ffd892d45", "committedDate": "2020-01-28T06:38:30Z", "message": "Merge branch 'master' into photos-support"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ5NDE3MDAx", "url": "https://github.com/google/ground-android/pull/328#pullrequestreview-349417001", "createdAt": "2020-01-28T14:30:14Z", "commit": {"oid": "f25bbc8f6177d0f198952459c406941ffd892d45"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQxNDozMDoxNFrOFinCAA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQxNDo1ODo1OVrOFioKcw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTgzNTM5Mg==", "bodyText": "If we don't need to return Optional, then this can be further simplified to remove the need to wrap and unwrap in Optional, e.g.:\nSorry!", "url": "https://github.com/google/ground-android/pull/328#discussion_r371835392", "createdAt": "2020-01-28T14:30:14Z", "author": {"login": "gino-m"}, "path": "gnd/src/main/java/com/google/android/gnd/system/CameraManager.java", "diffHunk": "@@ -50,19 +51,17 @@ public Completable launchImageCapture() {\n         .andThen(sendCaptureImageIntent());\n   }\n \n-  public Observable<Optional<Bitmap>> captureImageResult() {\n+  public Observable<Bitmap> captureImageResult() {\n     return activityStreams\n         .getNextActivityResult(CAPTURE_PHOTO_REQUEST_CODE)\n         .filter(ActivityResult::isOk)\n         .map(\n-            activityResult -> {\n-              Intent intent = activityResult.getData();\n-              if (intent != null && intent.getExtras() != null) {\n-                Bitmap photo = (Bitmap) intent.getExtras().get(\"data\");\n-                return Optional.ofNullable(photo);\n-              }\n-              return Optional.empty();\n-            });\n+            activityResult ->\n+                Optional.ofNullable(activityResult.getData())\n+                    .map(Intent::getExtras)\n+                    .map(extras -> (Bitmap) extras.get(\"data\")))\n+        .filter(Optional::isPresent)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f25bbc8f6177d0f198952459c406941ffd892d45"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTgzNzA3OA==", "bodyText": ".getNextActivityResult(CAPTURE_PHOTO_REQUEST_CODE)\n  .flatMap(this::onCaptureImageResult)\n\nThen:\nprivate static Observable<Bitmap> onCaptureImageResult(ActivityResult result) {\n  return Observable.create(em -> {\n    if (!result.isOk()) {\n      return;\n    }\n    Intent data = activityResult.getData();\n    if (data == null) {\n      return;\n    }\n    // and so on..\n    em.onNext((Bitmap) extras.get(\"data\"));\n  });\n}", "url": "https://github.com/google/ground-android/pull/328#discussion_r371837078", "createdAt": "2020-01-28T14:32:55Z", "author": {"login": "gino-m"}, "path": "gnd/src/main/java/com/google/android/gnd/system/CameraManager.java", "diffHunk": "@@ -50,19 +51,17 @@ public Completable launchImageCapture() {\n         .andThen(sendCaptureImageIntent());\n   }\n \n-  public Observable<Optional<Bitmap>> captureImageResult() {\n+  public Observable<Bitmap> captureImageResult() {\n     return activityStreams\n         .getNextActivityResult(CAPTURE_PHOTO_REQUEST_CODE)\n         .filter(ActivityResult::isOk)\n         .map(\n-            activityResult -> {\n-              Intent intent = activityResult.getData();\n-              if (intent != null && intent.getExtras() != null) {\n-                Bitmap photo = (Bitmap) intent.getExtras().get(\"data\");\n-                return Optional.ofNullable(photo);\n-              }\n-              return Optional.empty();\n-            });\n+            activityResult ->\n+                Optional.ofNullable(activityResult.getData())\n+                    .map(Intent::getExtras)\n+                    .map(extras -> (Bitmap) extras.get(\"data\")))\n+        .filter(Optional::isPresent)\n+        .map(Optional::get);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f25bbc8f6177d0f198952459c406941ffd892d45"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTgzNzUyMw==", "bodyText": "Please use IMAGE (vs PHOTO) throughout for consistency.", "url": "https://github.com/google/ground-android/pull/328#discussion_r371837523", "createdAt": "2020-01-28T14:33:33Z", "author": {"login": "gino-m"}, "path": "gnd/src/main/java/com/google/android/gnd/system/CameraManager.java", "diffHunk": "@@ -50,19 +51,17 @@ public Completable launchImageCapture() {\n         .andThen(sendCaptureImageIntent());\n   }\n \n-  public Observable<Optional<Bitmap>> captureImageResult() {\n+  public Observable<Bitmap> captureImageResult() {\n     return activityStreams\n         .getNextActivityResult(CAPTURE_PHOTO_REQUEST_CODE)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f25bbc8f6177d0f198952459c406941ffd892d45"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTg1MzkzOQ==", "bodyText": "Can you use the Bundle stored in the Intent's \"extras\" to pass the field id through to the photo picker and back again?", "url": "https://github.com/google/ground-android/pull/328#discussion_r371853939", "createdAt": "2020-01-28T14:58:59Z", "author": {"login": "gino-m"}, "path": "gnd/src/main/java/com/google/android/gnd/ui/editobservation/EditObservationViewModel.java", "diffHunk": "@@ -193,6 +212,52 @@ public void onFocusChange(Field field, boolean hasFocus) {\n     }\n   }\n \n+  void initPhotoSelector(String fieldId) {\n+    /*\n+     * Didn't subscribe this with Fragment's lifecycle because we need to retain the disposable\n+     * after the fragment is destroyed (for activity result)\n+     */\n+    disposeOnClear(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTUwNzgxMw=="}, "originalCommit": {"oid": "9c2f830f04b0025ddaf79e151fab858fcd4ada4b"}, "originalPosition": 100}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e5a772082e605021cd13b32adb584132102f961f", "author": {"user": {"login": "gino-m", "name": "Gino Miceli"}}, "url": "https://github.com/google/ground-android/commit/e5a772082e605021cd13b32adb584132102f961f", "committedDate": "2020-01-28T18:54:25Z", "message": "Merge branch 'master' into photos-support"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7ab7b05787d6ec1a3e80215303b4e18fac862167", "author": {"user": {"login": "shobhitagarwal1612", "name": "Shobhit Agarwal"}}, "url": "https://github.com/google/ground-android/commit/7ab7b05787d6ec1a3e80215303b4e18fac862167", "committedDate": "2020-01-29T12:29:38Z", "message": "Add license header"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c82c800edad07ed1fa4d6b053b030f816de10755", "author": {"user": {"login": "shobhitagarwal1612", "name": "Shobhit Agarwal"}}, "url": "https://github.com/google/ground-android/commit/c82c800edad07ed1fa4d6b053b030f816de10755", "committedDate": "2020-01-29T12:42:10Z", "message": "Replace usages of image with photo"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "548ca6ead1657c6ee364bc63f026e8b273fd125e", "author": {"user": {"login": "shobhitagarwal1612", "name": "Shobhit Agarwal"}}, "url": "https://github.com/google/ground-android/commit/548ca6ead1657c6ee364bc63f026e8b273fd125e", "committedDate": "2020-01-29T12:50:37Z", "message": "Simplify RxChain"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "631fee204e9dd90f55743036457943c8d3f65e42", "author": {"user": {"login": "gino-m", "name": "Gino Miceli"}}, "url": "https://github.com/google/ground-android/commit/631fee204e9dd90f55743036457943c8d3f65e42", "committedDate": "2020-01-29T22:13:58Z", "message": "Merge branch 'master' into photos-support"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "34025919bcf8f285f43a3f705b663d9de0451fc6", "author": {"user": {"login": "shobhitagarwal1612", "name": "Shobhit Agarwal"}}, "url": "https://github.com/google/ground-android/commit/34025919bcf8f285f43a3f705b663d9de0451fc6", "committedDate": "2020-01-31T13:34:34Z", "message": "Refactor CameraManager and StorageManager"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e101c77b4f656e358f168e3985657e0ccd22d9e8", "author": {"user": {"login": "shobhitagarwal1612", "name": "Shobhit Agarwal"}}, "url": "https://github.com/google/ground-android/commit/e101c77b4f656e358f168e3985657e0ccd22d9e8", "committedDate": "2020-01-31T18:15:21Z", "message": "Refactor#2"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUxODM3NDcz", "url": "https://github.com/google/ground-android/pull/328#pullrequestreview-351837473", "createdAt": "2020-01-31T23:46:42Z", "commit": {"oid": "e101c77b4f656e358f168e3985657e0ccd22d9e8"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQyMzo0Njo0MlrOFka1Eg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMVQwMDowMjo0M1rOFkbA5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzczMjYyNg==", "bodyText": "It may make sense to return a Maybe here and in the helper given the semantics of these calls. Could you please add a TODO to investigate?", "url": "https://github.com/google/ground-android/pull/328#discussion_r373732626", "createdAt": "2020-01-31T23:46:42Z", "author": {"login": "gino-m"}, "path": "gnd/src/main/java/com/google/android/gnd/system/CameraManager.java", "diffHunk": "@@ -0,0 +1,95 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.android.gnd.system;\n+\n+import android.Manifest.permission;\n+import android.content.Intent;\n+import android.graphics.Bitmap;\n+import android.os.Bundle;\n+import android.provider.MediaStore;\n+import android.util.Log;\n+import com.google.android.gnd.system.ActivityStreams.ActivityResult;\n+import io.reactivex.Completable;\n+import io.reactivex.Observable;\n+import javax.inject.Inject;\n+import javax.inject.Singleton;\n+\n+/** Manages permissions needed for using camera and related flows to/from Activity. */\n+@Singleton\n+public class CameraManager {\n+\n+  public static final String TAG = CameraManager.class.getName();\n+\n+  private static final int CAPTURE_PHOTO_REQUEST_CODE = CameraManager.class.hashCode() & 0xffff;\n+  private final PermissionsManager permissionsManager;\n+  private final ActivityStreams activityStreams;\n+\n+  @Inject\n+  public CameraManager(PermissionsManager permissionsManager, ActivityStreams activityStreams) {\n+    this.permissionsManager = permissionsManager;\n+    this.activityStreams = activityStreams;\n+  }\n+\n+  /**\n+   * Requests for capturing a photo from camera, if necessary permissions are granted. Otherwise,\n+   * requests for the permissions and then sends out the request.\n+   */\n+  public Completable launchPhotoCapture() {\n+    return permissionsManager\n+        .obtainPermission(permission.WRITE_EXTERNAL_STORAGE)\n+        .andThen(permissionsManager.obtainPermission(permission.CAMERA))\n+        .andThen(sendCapturePhotoIntent());\n+  }\n+\n+  /** Enqueue an intent for capturing a photo from camera. */\n+  private Completable sendCapturePhotoIntent() {\n+    return Completable.fromAction(\n+        () ->\n+            activityStreams.withActivity(\n+                activity -> {\n+                  Intent cameraIntent = new Intent(MediaStore.ACTION_IMAGE_CAPTURE);\n+                  activity.startActivityForResult(cameraIntent, CAPTURE_PHOTO_REQUEST_CODE);\n+                  Log.d(TAG, \"capture photo intent sent\");\n+                }));\n+  }\n+\n+  /** Observe for the result of request code {@link CameraManager#CAPTURE_PHOTO_REQUEST_CODE}. */\n+  public Observable<Bitmap> capturePhotoResult() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e101c77b4f656e358f168e3985657e0ccd22d9e8"}, "originalPosition": 71}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzczMjg2Ng==", "bodyText": "In that case this could be simplified to not be lazy, but rather to return a Maybe.empty() or Maybe.just().", "url": "https://github.com/google/ground-android/pull/328#discussion_r373732866", "createdAt": "2020-01-31T23:48:09Z", "author": {"login": "gino-m"}, "path": "gnd/src/main/java/com/google/android/gnd/system/CameraManager.java", "diffHunk": "@@ -0,0 +1,95 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.android.gnd.system;\n+\n+import android.Manifest.permission;\n+import android.content.Intent;\n+import android.graphics.Bitmap;\n+import android.os.Bundle;\n+import android.provider.MediaStore;\n+import android.util.Log;\n+import com.google.android.gnd.system.ActivityStreams.ActivityResult;\n+import io.reactivex.Completable;\n+import io.reactivex.Observable;\n+import javax.inject.Inject;\n+import javax.inject.Singleton;\n+\n+/** Manages permissions needed for using camera and related flows to/from Activity. */\n+@Singleton\n+public class CameraManager {\n+\n+  public static final String TAG = CameraManager.class.getName();\n+\n+  private static final int CAPTURE_PHOTO_REQUEST_CODE = CameraManager.class.hashCode() & 0xffff;\n+  private final PermissionsManager permissionsManager;\n+  private final ActivityStreams activityStreams;\n+\n+  @Inject\n+  public CameraManager(PermissionsManager permissionsManager, ActivityStreams activityStreams) {\n+    this.permissionsManager = permissionsManager;\n+    this.activityStreams = activityStreams;\n+  }\n+\n+  /**\n+   * Requests for capturing a photo from camera, if necessary permissions are granted. Otherwise,\n+   * requests for the permissions and then sends out the request.\n+   */\n+  public Completable launchPhotoCapture() {\n+    return permissionsManager\n+        .obtainPermission(permission.WRITE_EXTERNAL_STORAGE)\n+        .andThen(permissionsManager.obtainPermission(permission.CAMERA))\n+        .andThen(sendCapturePhotoIntent());\n+  }\n+\n+  /** Enqueue an intent for capturing a photo from camera. */\n+  private Completable sendCapturePhotoIntent() {\n+    return Completable.fromAction(\n+        () ->\n+            activityStreams.withActivity(\n+                activity -> {\n+                  Intent cameraIntent = new Intent(MediaStore.ACTION_IMAGE_CAPTURE);\n+                  activity.startActivityForResult(cameraIntent, CAPTURE_PHOTO_REQUEST_CODE);\n+                  Log.d(TAG, \"capture photo intent sent\");\n+                }));\n+  }\n+\n+  /** Observe for the result of request code {@link CameraManager#CAPTURE_PHOTO_REQUEST_CODE}. */\n+  public Observable<Bitmap> capturePhotoResult() {\n+    return activityStreams\n+        .getNextActivityResult(CAPTURE_PHOTO_REQUEST_CODE)\n+        .flatMap(this::onCapturePhotoResult);\n+  }\n+\n+  /** Fetch bitmap from the result, if present. */\n+  private Observable<Bitmap> onCapturePhotoResult(ActivityResult result) {\n+    return Observable.create(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e101c77b4f656e358f168e3985657e0ccd22d9e8"}, "originalPosition": 79}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzczMzUwNQ==", "bodyText": "Can this be represented by a lambda, with the function extracted into its own method?", "url": "https://github.com/google/ground-android/pull/328#discussion_r373733505", "createdAt": "2020-01-31T23:51:28Z", "author": {"login": "gino-m"}, "path": "gnd/src/main/java/com/google/android/gnd/ui/editobservation/EditObservationFragment.java", "diffHunk": "@@ -169,12 +177,31 @@ public void addMultipleChoiceField(Field field) {\n   public void addPhotoField(Field field) {\n     PhotoInputFieldBinding binding =\n         PhotoInputFieldBinding.inflate(getLayoutInflater(), formLayout, false);\n-    binding.setViewModel(viewModel);\n     binding.setLifecycleOwner(this);\n     binding.setField(field);\n+    binding.setFragment(this);\n     formLayout.addView(binding.getRoot());\n     assignGeneratedId(binding.getRoot().findViewById(R.id.image_thumbnail_preview));\n     assignGeneratedId(binding.getRoot().findViewById(R.id.btn_select_photo));\n+\n+    viewModel\n+        .getResponses()\n+        .addOnMapChangedCallback(\n+            new OnMapChangedCallback<ObservableMap<String, Response>, String, Response>() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e101c77b4f656e358f168e3985657e0ccd22d9e8"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzczMzc0OQ==", "bodyText": "Also, please use \"return\" to bail out if conditions aren't met to avoid excessive nesting.", "url": "https://github.com/google/ground-android/pull/328#discussion_r373733749", "createdAt": "2020-01-31T23:52:36Z", "author": {"login": "gino-m"}, "path": "gnd/src/main/java/com/google/android/gnd/ui/editobservation/EditObservationFragment.java", "diffHunk": "@@ -169,12 +177,31 @@ public void addMultipleChoiceField(Field field) {\n   public void addPhotoField(Field field) {\n     PhotoInputFieldBinding binding =\n         PhotoInputFieldBinding.inflate(getLayoutInflater(), formLayout, false);\n-    binding.setViewModel(viewModel);\n     binding.setLifecycleOwner(this);\n     binding.setField(field);\n+    binding.setFragment(this);\n     formLayout.addView(binding.getRoot());\n     assignGeneratedId(binding.getRoot().findViewById(R.id.image_thumbnail_preview));\n     assignGeneratedId(binding.getRoot().findViewById(R.id.btn_select_photo));\n+\n+    viewModel\n+        .getResponses()\n+        .addOnMapChangedCallback(\n+            new OnMapChangedCallback<ObservableMap<String, Response>, String, Response>() {\n+              @Override\n+              public void onMapChanged(ObservableMap<String, Response> sender, String key) {\n+                if (key != null && key.equals(field.getId())) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e101c77b4f656e358f168e3985657e0ccd22d9e8"}, "originalPosition": 62}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzczMzkzNg==", "bodyText": "Also, this seems to be IO logic and not UI logic - can we move it out of the Fragment into a util class so it can be tested independently?", "url": "https://github.com/google/ground-android/pull/328#discussion_r373733936", "createdAt": "2020-01-31T23:53:34Z", "author": {"login": "gino-m"}, "path": "gnd/src/main/java/com/google/android/gnd/ui/editobservation/EditObservationFragment.java", "diffHunk": "@@ -169,12 +177,31 @@ public void addMultipleChoiceField(Field field) {\n   public void addPhotoField(Field field) {\n     PhotoInputFieldBinding binding =\n         PhotoInputFieldBinding.inflate(getLayoutInflater(), formLayout, false);\n-    binding.setViewModel(viewModel);\n     binding.setLifecycleOwner(this);\n     binding.setField(field);\n+    binding.setFragment(this);\n     formLayout.addView(binding.getRoot());\n     assignGeneratedId(binding.getRoot().findViewById(R.id.image_thumbnail_preview));\n     assignGeneratedId(binding.getRoot().findViewById(R.id.btn_select_photo));\n+\n+    viewModel\n+        .getResponses()\n+        .addOnMapChangedCallback(\n+            new OnMapChangedCallback<ObservableMap<String, Response>, String, Response>() {\n+              @Override\n+              public void onMapChanged(ObservableMap<String, Response> sender, String key) {\n+                if (key != null && key.equals(field.getId())) {\n+                  String imageFilePath = sender.get(key).getDetailsText(field);\n+                  File imageFile = new File(imageFilePath);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e101c77b4f656e358f168e3985657e0ccd22d9e8"}, "originalPosition": 64}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzczNTMyMg==", "bodyText": "This method can be called multiple times, accumulating subscriptions until the view model is destroyed. If we can't decouple request from the activity response, please add a TODO here to trigger this from a switchMap or to find another way to split the stream in two to avoid accumulating subscriptions.", "url": "https://github.com/google/ground-android/pull/328#discussion_r373735322", "createdAt": "2020-02-01T00:01:13Z", "author": {"login": "gino-m"}, "path": "gnd/src/main/java/com/google/android/gnd/ui/editobservation/EditObservationViewModel.java", "diffHunk": "@@ -193,6 +212,52 @@ public void onFocusChange(Field field, boolean hasFocus) {\n     }\n   }\n \n+  void initPhotoSelector(String fieldId) {\n+    /*\n+     * Didn't subscribe this with Fragment's lifecycle because we need to retain the disposable\n+     * after the fragment is destroyed (for activity result)\n+     */\n+    disposeOnClear(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTUwNzgxMw=="}, "originalCommit": {"oid": "9c2f830f04b0025ddaf79e151fab858fcd4ada4b"}, "originalPosition": 100}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzczNTM5MA==", "bodyText": "Same here re TODO.", "url": "https://github.com/google/ground-android/pull/328#discussion_r373735390", "createdAt": "2020-02-01T00:01:35Z", "author": {"login": "gino-m"}, "path": "gnd/src/main/java/com/google/android/gnd/ui/editobservation/EditObservationViewModel.java", "diffHunk": "@@ -193,6 +204,44 @@ public void onFocusChange(Field field, boolean hasFocus) {\n     }\n   }\n \n+  void initPhotoSelector(String fieldId) {\n+    /*\n+     * Didn't subscribe this with Fragment's lifecycle because we need to retain the disposable\n+     * after the fragment is destroyed (for activity result)\n+     */\n+    disposeOnClear(\n+        storageManager.launchPhotoPicker().andThen(handlePhotoPickerResult(fieldId)).subscribe());\n+  }\n+\n+  private Completable handlePhotoPickerResult(String fieldId) {\n+    return storageManager\n+        .photoPickerResult()\n+        .compose(bitmap -> saveBitmapAndUpdateResponse(bitmap, fieldId))\n+        .ignoreElements();\n+  }\n+\n+  void initPhotoCapture(String fieldId) {\n+    /*\n+     * Didn't subscribe this with Fragment's lifecycle because we need to retain the disposable\n+     * after the fragment is destroyed (for activity result)\n+     */\n+    disposeOnClear(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e101c77b4f656e358f168e3985657e0ccd22d9e8"}, "originalPosition": 91}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzczNTQwMQ==", "bodyText": "Same here re name.", "url": "https://github.com/google/ground-android/pull/328#discussion_r373735401", "createdAt": "2020-02-01T00:01:41Z", "author": {"login": "gino-m"}, "path": "gnd/src/main/java/com/google/android/gnd/ui/editobservation/EditObservationViewModel.java", "diffHunk": "@@ -193,6 +204,44 @@ public void onFocusChange(Field field, boolean hasFocus) {\n     }\n   }\n \n+  void initPhotoSelector(String fieldId) {\n+    /*\n+     * Didn't subscribe this with Fragment's lifecycle because we need to retain the disposable\n+     * after the fragment is destroyed (for activity result)\n+     */\n+    disposeOnClear(\n+        storageManager.launchPhotoPicker().andThen(handlePhotoPickerResult(fieldId)).subscribe());\n+  }\n+\n+  private Completable handlePhotoPickerResult(String fieldId) {\n+    return storageManager\n+        .photoPickerResult()\n+        .compose(bitmap -> saveBitmapAndUpdateResponse(bitmap, fieldId))\n+        .ignoreElements();\n+  }\n+\n+  void initPhotoCapture(String fieldId) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e101c77b4f656e358f168e3985657e0ccd22d9e8"}, "originalPosition": 86}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzczNTY1NA==", "bodyText": "\"init\" may imply it sets up the photo selector, but doesn't actually show it. One clearer name could be \"showPhotoSelector()\"", "url": "https://github.com/google/ground-android/pull/328#discussion_r373735654", "createdAt": "2020-02-01T00:02:43Z", "author": {"login": "gino-m"}, "path": "gnd/src/main/java/com/google/android/gnd/ui/editobservation/EditObservationViewModel.java", "diffHunk": "@@ -193,6 +204,44 @@ public void onFocusChange(Field field, boolean hasFocus) {\n     }\n   }\n \n+  void initPhotoSelector(String fieldId) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e101c77b4f656e358f168e3985657e0ccd22d9e8"}, "originalPosition": 70}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a58aa53deda1d2463c93a3b3661a3b63de96daf4", "author": {"user": {"login": "shobhitagarwal1612", "name": "Shobhit Agarwal"}}, "url": "https://github.com/google/ground-android/commit/a58aa53deda1d2463c93a3b3661a3b63de96daf4", "committedDate": "2020-02-01T10:54:00Z", "message": "Added TODOs for future investigation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "96853de7d3baa9b84854ab196483cebaac8ee181", "author": {"user": {"login": "shobhitagarwal1612", "name": "Shobhit Agarwal"}}, "url": "https://github.com/google/ground-android/commit/96853de7d3baa9b84854ab196483cebaac8ee181", "committedDate": "2020-02-01T17:41:13Z", "message": "Refactor#3: Move static methods to FileUtil"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "539672603e548a16b22b902a807d1cbb03b40f9a", "author": {"user": {"login": "shobhitagarwal1612", "name": "Shobhit Agarwal"}}, "url": "https://github.com/google/ground-android/commit/539672603e548a16b22b902a807d1cbb03b40f9a", "committedDate": "2020-02-01T17:49:07Z", "message": "Add more TODOs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "40feeaf37702b8a4756c5acf3f4f94b97ec604bc", "author": {"user": {"login": "shobhitagarwal1612", "name": "Shobhit Agarwal"}}, "url": "https://github.com/google/ground-android/commit/40feeaf37702b8a4756c5acf3f4f94b97ec604bc", "committedDate": "2020-02-01T17:50:13Z", "message": "Update method name"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUyMDU1Nzk0", "url": "https://github.com/google/ground-android/pull/328#pullrequestreview-352055794", "createdAt": "2020-02-03T07:20:26Z", "commit": {"oid": "40feeaf37702b8a4756c5acf3f4f94b97ec604bc"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1682, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}