{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQwODkyMDQ2", "number": 505, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQxMzo1NDo0M1rOEJq69g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQxNDowMjo1OFrOEJrJxA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4NTc1ODYyOnYy", "diffSide": "RIGHT", "path": "gnd/build.gradle", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQxMzo1NDo0M1rOGqSFtA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQxMzo1NDo0M1rOGqSFtA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njk4OTc0OA==", "bodyText": "daggerVersion can be removed from this list now", "url": "https://github.com/google/ground-android/pull/505#discussion_r446989748", "createdAt": "2020-06-29T13:54:43Z", "author": {"login": "shobhitagarwal1612"}, "path": "gnd/build.gradle", "diffHunk": "@@ -29,6 +30,7 @@ project.ext {\n     daggerVersion = \"2.27\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "decbe2a9bd850bd12915930382e2511648dc64a5"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4NTc2NTgxOnYy", "diffSide": "RIGHT", "path": "gnd/build.gradle", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQxMzo1NjoxN1rOGqSKUA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQxNDo0ODowMlrOGqUe-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njk5MDkyOA==", "bodyText": "Sorry for nit-picking. But can we please remove the parentheses for consistency across all dependencies?", "url": "https://github.com/google/ground-android/pull/505#discussion_r446990928", "createdAt": "2020-06-29T13:56:17Z", "author": {"login": "shobhitagarwal1612"}, "path": "gnd/build.gradle", "diffHunk": "@@ -136,14 +141,15 @@ dependencies {\n     implementation 'com.google.firebase:firebase-storage:19.1.1'\n     implementation 'com.google.firebase:firebase-crashlytics:17.0.1'\n \n-    // Dagger\n-    implementation \"com.google.dagger:dagger:$project.daggerVersion\"\n-    implementation \"com.google.dagger:dagger-android:$project.daggerVersion\"\n-    implementation \"com.google.dagger:dagger-android-support:$project.daggerVersion\"\n-    annotationProcessor \"com.google.dagger:dagger-android-processor:$project.daggerVersion\"\n-    annotationProcessor \"com.google.dagger:dagger-compiler:$project.daggerVersion\"\n-    testAnnotationProcessor \"com.google.dagger:dagger-compiler:$project.daggerVersion\"\n-    androidTestAnnotationProcessor \"com.google.dagger:dagger-compiler:$project.daggerVersion\"\n+    // Hilt\n+    implementation(\"com.google.dagger:hilt-android:$project.hiltVersion\")\n+    implementation(\"androidx.hilt:hilt-lifecycle-viewmodel:$project.hiltJetpackVersion\")\n+    implementation(\"androidx.hilt:hilt-work:$project.hiltJetpackVersion\")\n+    androidTestImplementation(\"com.google.dagger:hilt-android-testing:$project.hiltVersion\")\n+    annotationProcessor(\"com.google.dagger:hilt-android-compiler:$project.hiltVersion\")\n+    annotationProcessor(\"androidx.hilt:hilt-compiler:$project.hiltJetpackVersion\")\n+    androidTestAnnotationProcessor(\"com.google.dagger:hilt-android-compiler:$project.hiltVersion\")\n+    androidTestAnnotationProcessor(\"androidx.hilt:hilt-compiler:$project.hiltJetpackVersion\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "decbe2a9bd850bd12915930382e2511648dc64a5"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzAyODk4Ng==", "bodyText": "Nit away, consistency is king :)", "url": "https://github.com/google/ground-android/pull/505#discussion_r447028986", "createdAt": "2020-06-29T14:48:02Z", "author": {"login": "dturner"}, "path": "gnd/build.gradle", "diffHunk": "@@ -136,14 +141,15 @@ dependencies {\n     implementation 'com.google.firebase:firebase-storage:19.1.1'\n     implementation 'com.google.firebase:firebase-crashlytics:17.0.1'\n \n-    // Dagger\n-    implementation \"com.google.dagger:dagger:$project.daggerVersion\"\n-    implementation \"com.google.dagger:dagger-android:$project.daggerVersion\"\n-    implementation \"com.google.dagger:dagger-android-support:$project.daggerVersion\"\n-    annotationProcessor \"com.google.dagger:dagger-android-processor:$project.daggerVersion\"\n-    annotationProcessor \"com.google.dagger:dagger-compiler:$project.daggerVersion\"\n-    testAnnotationProcessor \"com.google.dagger:dagger-compiler:$project.daggerVersion\"\n-    androidTestAnnotationProcessor \"com.google.dagger:dagger-compiler:$project.daggerVersion\"\n+    // Hilt\n+    implementation(\"com.google.dagger:hilt-android:$project.hiltVersion\")\n+    implementation(\"androidx.hilt:hilt-lifecycle-viewmodel:$project.hiltJetpackVersion\")\n+    implementation(\"androidx.hilt:hilt-work:$project.hiltJetpackVersion\")\n+    androidTestImplementation(\"com.google.dagger:hilt-android-testing:$project.hiltVersion\")\n+    annotationProcessor(\"com.google.dagger:hilt-android-compiler:$project.hiltVersion\")\n+    annotationProcessor(\"androidx.hilt:hilt-compiler:$project.hiltJetpackVersion\")\n+    androidTestAnnotationProcessor(\"com.google.dagger:hilt-android-compiler:$project.hiltVersion\")\n+    androidTestAnnotationProcessor(\"androidx.hilt:hilt-compiler:$project.hiltJetpackVersion\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njk5MDkyOA=="}, "originalCommit": {"oid": "decbe2a9bd850bd12915930382e2511648dc64a5"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4NTc3Mzk0OnYy", "diffSide": "RIGHT", "path": "gnd/build.gradle", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQxMzo1ODowNFrOGqSPkQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQxMzo1ODowNFrOGqSPkQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njk5MjI3Mw==", "bodyText": "Can we please move these up with rest of the hilt dependencies?", "url": "https://github.com/google/ground-android/pull/505#discussion_r446992273", "createdAt": "2020-06-29T13:58:04Z", "author": {"login": "shobhitagarwal1612"}, "path": "gnd/build.gradle", "diffHunk": "@@ -206,6 +212,8 @@ dependencies {\n     testImplementation 'androidx.test:core:1.2.0'\n     testImplementation 'org.robolectric:robolectric:4.3.1'\n     testImplementation 'android.arch.core:core-testing:1.1.1'\n+    testImplementation 'com.google.dagger:hilt-android-testing:2.28-alpha'\n+    testAnnotationProcessor 'com.google.dagger:hilt-android-compiler:2.28-alpha'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "decbe2a9bd850bd12915930382e2511648dc64a5"}, "originalPosition": 55}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4NTc5MTgxOnYy", "diffSide": "RIGHT", "path": "gnd/src/main/AndroidManifest.xml", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQxNDowMTo1NVrOGqSakQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQxNTowODo0NVrOGqVbCg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njk5NTA4OQ==", "bodyText": "I am curious why this is needed? I understand that this is useful when we have to do some custom initialization, but I am not sure that we do. Do we?", "url": "https://github.com/google/ground-android/pull/505#discussion_r446995089", "createdAt": "2020-06-29T14:01:55Z", "author": {"login": "shobhitagarwal1612"}, "path": "gnd/src/main/AndroidManifest.xml", "diffHunk": "@@ -70,18 +70,11 @@\n       android:name=\"org.apache.http.legacy\"\n       android:required=\"false\" />\n \n-    <!--\n-      Disable WorkManagerInitializer so that we can initialize ourselves in GndApplication setting\n-      custom GndWorkerFactory to perform Dagger injection.\n-      TODO(github.com/google/dagger/issues/1183): Remove this if and when Worker inject is supported\n-      natively.\n-    -->\n+    <!-- Remove the default WorkManager initializer since we are providing our own -->\n     <provider\n       android:name=\"androidx.work.impl.WorkManagerInitializer\"\n-      android:authorities=\"com.google.android.gnd.workmanager-init\"\n-      android:enabled=\"false\"\n-      android:exported=\"false\"\n-      tools:replace=\"android:authorities\" />\n+      android:authorities=\"${applicationId}.workmanager-init\"\n+      tools:node=\"remove\" />", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "decbe2a9bd850bd12915930382e2511648dc64a5"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzAyNzA2Mw==", "bodyText": "It's because we're using the HiltWorkerFactory from Jetpack (https://developer.android.com/training/dependency-injection/hilt-jetpack#workmanager) so we have to remove the default initializer.", "url": "https://github.com/google/ground-android/pull/505#discussion_r447027063", "createdAt": "2020-06-29T14:45:20Z", "author": {"login": "dturner"}, "path": "gnd/src/main/AndroidManifest.xml", "diffHunk": "@@ -70,18 +70,11 @@\n       android:name=\"org.apache.http.legacy\"\n       android:required=\"false\" />\n \n-    <!--\n-      Disable WorkManagerInitializer so that we can initialize ourselves in GndApplication setting\n-      custom GndWorkerFactory to perform Dagger injection.\n-      TODO(github.com/google/dagger/issues/1183): Remove this if and when Worker inject is supported\n-      natively.\n-    -->\n+    <!-- Remove the default WorkManager initializer since we are providing our own -->\n     <provider\n       android:name=\"androidx.work.impl.WorkManagerInitializer\"\n-      android:authorities=\"com.google.android.gnd.workmanager-init\"\n-      android:enabled=\"false\"\n-      android:exported=\"false\"\n-      tools:replace=\"android:authorities\" />\n+      android:authorities=\"${applicationId}.workmanager-init\"\n+      tools:node=\"remove\" />", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njk5NTA4OQ=="}, "originalCommit": {"oid": "decbe2a9bd850bd12915930382e2511648dc64a5"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzA0NDM2Mg==", "bodyText": "Based on the \"WorkManager is not initialized properly\" crash which I'm also getting, this may not be implemented correctly. Currently investigating.", "url": "https://github.com/google/ground-android/pull/505#discussion_r447044362", "createdAt": "2020-06-29T15:08:45Z", "author": {"login": "dturner"}, "path": "gnd/src/main/AndroidManifest.xml", "diffHunk": "@@ -70,18 +70,11 @@\n       android:name=\"org.apache.http.legacy\"\n       android:required=\"false\" />\n \n-    <!--\n-      Disable WorkManagerInitializer so that we can initialize ourselves in GndApplication setting\n-      custom GndWorkerFactory to perform Dagger injection.\n-      TODO(github.com/google/dagger/issues/1183): Remove this if and when Worker inject is supported\n-      natively.\n-    -->\n+    <!-- Remove the default WorkManager initializer since we are providing our own -->\n     <provider\n       android:name=\"androidx.work.impl.WorkManagerInitializer\"\n-      android:authorities=\"com.google.android.gnd.workmanager-init\"\n-      android:enabled=\"false\"\n-      android:exported=\"false\"\n-      tools:replace=\"android:authorities\" />\n+      android:authorities=\"${applicationId}.workmanager-init\"\n+      tools:node=\"remove\" />", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njk5NTA4OQ=="}, "originalCommit": {"oid": "decbe2a9bd850bd12915930382e2511648dc64a5"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4NTc5NjUyOnYy", "diffSide": "RIGHT", "path": "gnd/src/main/java/com/google/android/gnd/GndApplication.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQxNDowMjo1OFrOGqSdnA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQxNTo0NToyNFrOGqXCYQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njk5NTg2OA==", "bodyText": "We should update this comment as it is out-of-date now", "url": "https://github.com/google/ground-android/pull/505#discussion_r446995868", "createdAt": "2020-06-29T14:02:58Z", "author": {"login": "shobhitagarwal1612"}, "path": "gnd/src/main/java/com/google/android/gnd/GndApplication.java", "diffHunk": "@@ -16,30 +16,31 @@\n \n package com.google.android.gnd;\n \n+import android.app.Application;\n import android.content.Context;\n import android.os.StrictMode;\n import android.util.Log;\n import androidx.annotation.NonNull;\n+import androidx.hilt.work.HiltWorkerFactory;\n import androidx.multidex.MultiDex;\n import androidx.work.Configuration;\n-import androidx.work.WorkManager;\n import com.akaita.java.rxjava2debug.RxJava2Debug;\n import com.facebook.stetho.Stetho;\n-import com.google.android.gnd.inject.GndWorkerFactory;\n import com.google.android.gnd.rx.RxDebug;\n import com.google.firebase.crashlytics.FirebaseCrashlytics;\n-import dagger.android.AndroidInjector;\n-import dagger.android.support.DaggerApplication;\n+import dagger.hilt.android.HiltAndroidApp;\n import io.reactivex.plugins.RxJavaPlugins;\n import javax.inject.Inject;\n+import org.jetbrains.annotations.NotNull;\n import timber.log.Timber;\n \n // TODO: When implementing background data sync service, we'll need to inject a Service here; we\n // should then extend DaggerApplication instead. If MultiDex is still needed, we can install it\n // without extending MultiDexApplication.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "decbe2a9bd850bd12915930382e2511648dc64a5"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzA2NjY5Mg==", "bodyText": "@gino-m Is this comment (or something similar) still required?", "url": "https://github.com/google/ground-android/pull/505#discussion_r447066692", "createdAt": "2020-06-29T15:39:35Z", "author": {"login": "dturner"}, "path": "gnd/src/main/java/com/google/android/gnd/GndApplication.java", "diffHunk": "@@ -16,30 +16,31 @@\n \n package com.google.android.gnd;\n \n+import android.app.Application;\n import android.content.Context;\n import android.os.StrictMode;\n import android.util.Log;\n import androidx.annotation.NonNull;\n+import androidx.hilt.work.HiltWorkerFactory;\n import androidx.multidex.MultiDex;\n import androidx.work.Configuration;\n-import androidx.work.WorkManager;\n import com.akaita.java.rxjava2debug.RxJava2Debug;\n import com.facebook.stetho.Stetho;\n-import com.google.android.gnd.inject.GndWorkerFactory;\n import com.google.android.gnd.rx.RxDebug;\n import com.google.firebase.crashlytics.FirebaseCrashlytics;\n-import dagger.android.AndroidInjector;\n-import dagger.android.support.DaggerApplication;\n+import dagger.hilt.android.HiltAndroidApp;\n import io.reactivex.plugins.RxJavaPlugins;\n import javax.inject.Inject;\n+import org.jetbrains.annotations.NotNull;\n import timber.log.Timber;\n \n // TODO: When implementing background data sync service, we'll need to inject a Service here; we\n // should then extend DaggerApplication instead. If MultiDex is still needed, we can install it\n // without extending MultiDexApplication.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njk5NTg2OA=="}, "originalCommit": {"oid": "decbe2a9bd850bd12915930382e2511648dc64a5"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzA3MDgxNw==", "bodyText": "I think it can be removed, since we're not using Services, and Workers appear to be injected here w/o additional changes. Thanks!", "url": "https://github.com/google/ground-android/pull/505#discussion_r447070817", "createdAt": "2020-06-29T15:45:24Z", "author": {"login": "gino-m"}, "path": "gnd/src/main/java/com/google/android/gnd/GndApplication.java", "diffHunk": "@@ -16,30 +16,31 @@\n \n package com.google.android.gnd;\n \n+import android.app.Application;\n import android.content.Context;\n import android.os.StrictMode;\n import android.util.Log;\n import androidx.annotation.NonNull;\n+import androidx.hilt.work.HiltWorkerFactory;\n import androidx.multidex.MultiDex;\n import androidx.work.Configuration;\n-import androidx.work.WorkManager;\n import com.akaita.java.rxjava2debug.RxJava2Debug;\n import com.facebook.stetho.Stetho;\n-import com.google.android.gnd.inject.GndWorkerFactory;\n import com.google.android.gnd.rx.RxDebug;\n import com.google.firebase.crashlytics.FirebaseCrashlytics;\n-import dagger.android.AndroidInjector;\n-import dagger.android.support.DaggerApplication;\n+import dagger.hilt.android.HiltAndroidApp;\n import io.reactivex.plugins.RxJavaPlugins;\n import javax.inject.Inject;\n+import org.jetbrains.annotations.NotNull;\n import timber.log.Timber;\n \n // TODO: When implementing background data sync service, we'll need to inject a Service here; we\n // should then extend DaggerApplication instead. If MultiDex is still needed, we can install it\n // without extending MultiDexApplication.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njk5NTg2OA=="}, "originalCommit": {"oid": "decbe2a9bd850bd12915930382e2511648dc64a5"}, "originalPosition": 28}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2474, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}