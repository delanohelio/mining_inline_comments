{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY3Nzg4NTA2", "number": 335, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQyMTowNzowNVrODbuCNg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQyMTowNzowNVrODbuCNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwMzkyMzc0OnYy", "diffSide": "RIGHT", "path": "gnd/src/main/java/com/google/android/gnd/persistence/remote/firestore/schema/ProjectsCollectionReference.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQyMTowNzowNVrOFjXgew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQyMToyMjo1NFrOFjX9cA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjYyOTYyNw==", "bodyText": "What's the behavior of this in the case of\n\nNo Read Access\nError on the Firebase side.\n\nMy hunch is improper permissions == Single and Firebase error == Single.Error\nis that correct?", "url": "https://github.com/google/ground-android/pull/335#discussion_r372629627", "createdAt": "2020-01-29T21:07:05Z", "author": {"login": "scolsen"}, "path": "gnd/src/main/java/com/google/android/gnd/persistence/remote/firestore/schema/ProjectsCollectionReference.java", "diffHunk": "@@ -0,0 +1,45 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.android.gnd.persistence.remote.firestore.schema;\n+\n+import com.google.android.gnd.model.Project;\n+import com.google.android.gnd.model.User;\n+import com.google.android.gnd.persistence.remote.firestore.ProjectDoc;\n+import com.google.android.gnd.persistence.remote.firestore.base.FluentCollectionReference;\n+import com.google.firebase.firestore.CollectionReference;\n+import com.google.firebase.firestore.FieldPath;\n+import io.reactivex.Single;\n+import java.util.List;\n+\n+public class ProjectsCollectionReference extends FluentCollectionReference {\n+  private static final String ACL_FIELD = \"acl\";\n+  private static final String READ_ACCESS = \"r\";\n+\n+  ProjectsCollectionReference(CollectionReference ref) {\n+    super(ref);\n+  }\n+\n+  public ProjectDocumentReference project(String id) {\n+    return new ProjectDocumentReference(reference().document(id));\n+  }\n+\n+  public Single<List<Project>> getReadable(User user) {\n+    return runQuery(\n+        reference().whereArrayContains(FieldPath.of(ACL_FIELD, user.getEmail()), READ_ACCESS),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "97548b924ac73f256770c87a1a1558b50c05ffd5"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjYzNzA0MA==", "bodyText": "Yes, that's what I'd expect as well.", "url": "https://github.com/google/ground-android/pull/335#discussion_r372637040", "createdAt": "2020-01-29T21:22:54Z", "author": {"login": "gino-m"}, "path": "gnd/src/main/java/com/google/android/gnd/persistence/remote/firestore/schema/ProjectsCollectionReference.java", "diffHunk": "@@ -0,0 +1,45 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.android.gnd.persistence.remote.firestore.schema;\n+\n+import com.google.android.gnd.model.Project;\n+import com.google.android.gnd.model.User;\n+import com.google.android.gnd.persistence.remote.firestore.ProjectDoc;\n+import com.google.android.gnd.persistence.remote.firestore.base.FluentCollectionReference;\n+import com.google.firebase.firestore.CollectionReference;\n+import com.google.firebase.firestore.FieldPath;\n+import io.reactivex.Single;\n+import java.util.List;\n+\n+public class ProjectsCollectionReference extends FluentCollectionReference {\n+  private static final String ACL_FIELD = \"acl\";\n+  private static final String READ_ACCESS = \"r\";\n+\n+  ProjectsCollectionReference(CollectionReference ref) {\n+    super(ref);\n+  }\n+\n+  public ProjectDocumentReference project(String id) {\n+    return new ProjectDocumentReference(reference().document(id));\n+  }\n+\n+  public Single<List<Project>> getReadable(User user) {\n+    return runQuery(\n+        reference().whereArrayContains(FieldPath.of(ACL_FIELD, user.getEmail()), READ_ACCESS),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjYyOTYyNw=="}, "originalCommit": {"oid": "97548b924ac73f256770c87a1a1558b50c05ffd5"}, "originalPosition": 42}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2593, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}