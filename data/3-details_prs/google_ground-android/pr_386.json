{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg3MTMzNTgz", "number": 386, "title": "[Photos Support] Improve upload photo UI", "bodyText": "Towards #310\n\n\nBug fix: Display thumbnail after selecting a photo while in EditObersationFragment\n\n\nUI tweaked #310 (comment)", "createdAt": "2020-03-12T09:33:35Z", "url": "https://github.com/google/ground-android/pull/386", "merged": true, "mergeCommit": {"oid": "f196698cb0e8a34e08c55e8f020f3168779a178e"}, "closed": true, "closedAt": "2020-03-18T19:20:08Z", "author": {"login": "shobhitagarwal1612"}, "timelineItems": {"totalCount": 45, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcM2HqagH2gAyMzg3MTMzNTgzOjQyNzRhODEzNjA3NWJhN2RiODZhZDIzZTgwZmJhNjM3YjlhY2I3OWQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcO8S-TgFqTM3NzE2MzM2MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "4274a8136075ba7db86ad23e80fba637b9acb79d", "author": {"user": {"login": "shobhitagarwal1612", "name": "Shobhit Agarwal"}}, "url": "https://github.com/google/ground-android/commit/4274a8136075ba7db86ad23e80fba637b9acb79d", "committedDate": "2020-03-12T06:56:25Z", "message": "Replace log with timber"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0960e0c2cd886ab75e47a682aff9cc78824685af", "author": {"user": {"login": "shobhitagarwal1612", "name": "Shobhit Agarwal"}}, "url": "https://github.com/google/ground-android/commit/0960e0c2cd886ab75e47a682aff9cc78824685af", "committedDate": "2020-03-12T08:22:56Z", "message": "Load selected image into thumbnail using BindingAdapter\n\nNotes: Wanted to make BindingAdapters injectable instead of having to pass dependencies into binding. Is there a better way?"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9da709d616ede7863456646d4060ba37e441bd63", "author": {"user": {"login": "shobhitagarwal1612", "name": "Shobhit Agarwal"}}, "url": "https://github.com/google/ground-android/commit/9da709d616ede7863456646d4060ba37e441bd63", "committedDate": "2020-03-12T09:29:27Z", "message": "Improve photo field UI for EditObservation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b06e2d163a89223d91d5913ed3f12478e4f6dd28", "author": {"user": {"login": "gino-m", "name": "Gino Miceli"}}, "url": "https://github.com/google/ground-android/commit/b06e2d163a89223d91d5913ed3f12478e4f6dd28", "committedDate": "2020-03-12T14:58:43Z", "message": "Merge branch 'master' into upload-photos-ui"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzczNjM0Mjky", "url": "https://github.com/google/ground-android/pull/386#pullrequestreview-373634292", "createdAt": "2020-03-12T15:00:37Z", "commit": {"oid": "b06e2d163a89223d91d5913ed3f12478e4f6dd28"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxNTowMDozOFrOF1iXRg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxNTowMDozOFrOF1iXRg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTY4MTg2Mg==", "bodyText": "With Timber can we now just do to following?\nTimber.v(\"onResponseChanged: %s = '%s'\", field.getId(), Response.toString(newResponse));", "url": "https://github.com/google/ground-android/pull/386#discussion_r391681862", "createdAt": "2020-03-12T15:00:38Z", "author": {"login": "gino-m"}, "path": "gnd/src/main/java/com/google/android/gnd/ui/editobservation/EditObservationViewModel.java", "diffHunk": "@@ -196,14 +196,13 @@ public void initialize(EditObservationFragmentArgs args) {\n   }\n \n   public void onTextChanged(Field field, String text) {\n-    Log.v(TAG, \"onTextChanged: \" + field.getId());\n+    Timber.v(\"onTextChanged: %s\", field.getId());\n \n     onResponseChanged(field, TextResponse.fromString(text));\n   }\n \n   public void onResponseChanged(Field field, Optional<Response> newResponse) {\n-    Log.v(\n-        TAG, \"onResponseChanged: \" + field.getId() + \" = '\" + Response.toString(newResponse) + \"'\");\n+    Timber.v(\"onResponseChanged: \" + field.getId() + \" = '\" + Response.toString(newResponse) + \"'\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b06e2d163a89223d91d5913ed3f12478e4f6dd28"}, "originalPosition": 34}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzczNjM0NTU0", "url": "https://github.com/google/ground-android/pull/386#pullrequestreview-373634554", "createdAt": "2020-03-12T15:00:53Z", "commit": {"oid": "b06e2d163a89223d91d5913ed3f12478e4f6dd28"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxNTowMDo1M1rOF1iYIw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxNTowMDo1M1rOF1iYIw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTY4MjA4Mw==", "bodyText": "Same here", "url": "https://github.com/google/ground-android/pull/386#discussion_r391682083", "createdAt": "2020-03-12T15:00:53Z", "author": {"login": "gino-m"}, "path": "gnd/src/main/java/com/google/android/gnd/ui/editobservation/EditObservationViewModel.java", "diffHunk": "@@ -392,12 +391,12 @@ private void refreshResponseMap(Observation obs) {\n \n   private ImmutableList<ResponseDelta> getResponseDeltas() {\n     if (originalObservation == null) {\n-      Log.e(TAG, \"Response diff attempted before observation loaded\");\n+      Timber.e(\"Response diff attempted before observation loaded\");\n       return ImmutableList.of();\n     }\n     ImmutableList.Builder<ResponseDelta> deltas = ImmutableList.builder();\n     ResponseMap originalResponses = originalObservation.getResponses();\n-    Log.v(TAG, \"Responses:\\n Before: \" + originalResponses + \" \\nAfter:  \" + responses);\n+    Timber.v(\"Responses:\\n Before: \" + originalResponses + \" \\nAfter:  \" + responses);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b06e2d163a89223d91d5913ed3f12478e4f6dd28"}, "originalPosition": 76}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzczNjM1NzE1", "url": "https://github.com/google/ground-android/pull/386#pullrequestreview-373635715", "createdAt": "2020-03-12T15:02:07Z", "commit": {"oid": "b06e2d163a89223d91d5913ed3f12478e4f6dd28"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9193b3ef1a074bcd16b06847b5a2c8910dc8826e", "author": {"user": {"login": "shobhitagarwal1612", "name": "Shobhit Agarwal"}}, "url": "https://github.com/google/ground-android/commit/9193b3ef1a074bcd16b06847b5a2c8910dc8826e", "committedDate": "2020-03-12T15:54:03Z", "message": "String formatting"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "71c91e11c5176fe1ac6bc10ecdfd0fcc70800e83", "author": {"user": {"login": "shobhitagarwal1612", "name": "Shobhit Agarwal"}}, "url": "https://github.com/google/ground-android/commit/71c91e11c5176fe1ac6bc10ecdfd0fcc70800e83", "committedDate": "2020-03-12T18:29:23Z", "message": "Wrap imageview within material card"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "73aad5e1620e52b649974ca9f1ff850f4ce48380", "author": {"user": {"login": "shobhitagarwal1612", "name": "Shobhit Agarwal"}}, "url": "https://github.com/google/ground-android/commit/73aad5e1620e52b649974ca9f1ff850f4ce48380", "committedDate": "2020-03-12T18:29:42Z", "message": "Merge branch 'master' into upload-photos-ui"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzczOTA0NzQw", "url": "https://github.com/google/ground-android/pull/386#pullrequestreview-373904740", "createdAt": "2020-03-12T21:14:45Z", "commit": {"oid": "73aad5e1620e52b649974ca9f1ff850f4ce48380"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQyMToxNDo0NVrOF1vhDQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQyMToxNDo0NVrOF1vhDQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTg5NzM1Nw==", "bodyText": "This is a lot of logic to be doing inside a binding adapter, especially the hiding/showing of the parent view. Can we instead define a separate view widget that can be tested and implemented independently? It could have its own ViewModel with LiveData containing the actual image to display. Wdyt?", "url": "https://github.com/google/ground-android/pull/386#discussion_r391897357", "createdAt": "2020-03-12T21:14:45Z", "author": {"login": "gino-m"}, "path": "gnd/src/main/java/com/google/android/gnd/ui/common/BindingAdapters.java", "diffHunk": "@@ -118,4 +125,29 @@ public static void setOnFocusChangeListener(\n   public static void setOnShowDialogListener(MultipleChoiceFieldLayout view, Runnable listener) {\n     view.setOnShowDialogListener(listener);\n   }\n+\n+  @BindingAdapter({\"bind:storageManager\", \"bind:response\"})\n+  public static void bindPhoto(ImageView view, StorageManager storageManager, Response response) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "73aad5e1620e52b649974ca9f1ff850f4ce48380"}, "originalPosition": 40}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "81d1df19c66bc22b11cc94b4c03bee810e3e59db", "author": {"user": {"login": "shobhitagarwal1612", "name": "Shobhit Agarwal"}}, "url": "https://github.com/google/ground-android/commit/81d1df19c66bc22b11cc94b4c03bee810e3e59db", "committedDate": "2020-03-13T13:09:14Z", "message": "[WIP] Added Custom View + View Model\n\nProblems:\n - Visibility isn't getting toggled\n - ImageView doesn't get loaded"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "eb9c85c81d3c1d25456bfcbb421411820aefb4e3", "author": {"user": {"login": "gino-m", "name": "Gino Miceli"}}, "url": "https://github.com/google/ground-android/commit/eb9c85c81d3c1d25456bfcbb421411820aefb4e3", "committedDate": "2020-03-13T15:37:12Z", "message": "BindingAdapters main Javadoc"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc0NDAxNzM5", "url": "https://github.com/google/ground-android/pull/386#pullrequestreview-374401739", "createdAt": "2020-03-13T15:38:00Z", "commit": {"oid": "eb9c85c81d3c1d25456bfcbb421411820aefb4e3"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxNTozODowMFrOF2IZiA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxNjowODoyNlrOF2JlUA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjMwNTAzMg==", "bodyText": "Do we want to set the placeholder here in case Uri is null?", "url": "https://github.com/google/ground-android/pull/386#discussion_r392305032", "createdAt": "2020-03-13T15:38:00Z", "author": {"login": "gino-m"}, "path": "gnd/src/main/java/com/google/android/gnd/ui/common/BindingAdapters.java", "diffHunk": "@@ -118,4 +129,13 @@ public static void setOnFocusChangeListener(\n   public static void setOnShowDialogListener(MultipleChoiceFieldLayout view, Runnable listener) {\n     view.setOnShowDialogListener(listener);\n   }\n+\n+  @BindingAdapter(\"bind:uri\")\n+  public static void bindUri(ImageView view, Uri uri) {\n+    if (uri == null) {\n+      return;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eb9c85c81d3c1d25456bfcbb421411820aefb4e3"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjMxMTYyOA==", "bodyText": "This will get the (single) view model associated with this fragment. Instead, we want a different viewmodel for each field instance. For that you'll probably want to use viewModelFactory.create()", "url": "https://github.com/google/ground-android/pull/386#discussion_r392311628", "createdAt": "2020-03-13T15:48:52Z", "author": {"login": "gino-m"}, "path": "gnd/src/main/java/com/google/android/gnd/ui/editobservation/EditObservationFragment.java", "diffHunk": "@@ -176,26 +174,13 @@ public void addPhotoField(Field field) {\n     PhotoInputFieldBinding binding =\n         PhotoInputFieldBinding.inflate(getLayoutInflater(), formLayout, false);\n     binding.setLifecycleOwner(this);\n+    PhotoViewViewModel photoViewViewModel = getViewModel(PhotoViewViewModel.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eb9c85c81d3c1d25456bfcbb421411820aefb4e3"}, "originalPosition": 78}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjMxMjYwNA==", "bodyText": "Can the input field be better encapsulated to not have visibility to its container? Since it has its own ViewModel, could it get all of its view state from there?", "url": "https://github.com/google/ground-android/pull/386#discussion_r392312604", "createdAt": "2020-03-13T15:50:38Z", "author": {"login": "gino-m"}, "path": "gnd/src/main/res/layout/photo_input_field.xml", "diffHunk": "@@ -26,6 +26,12 @@\n     <variable\n       name=\"fragment\"\n       type=\"com.google.android.gnd.ui.editobservation.EditObservationFragment\" />\n+    <variable", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eb9c85c81d3c1d25456bfcbb421411820aefb4e3"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjMxMzQ0Mg==", "bodyText": "For once main functionality is working - please use Rx instead of Callbacks. Helper in RxTask can be used to createa Single<Uri> that this method returns, for example.", "url": "https://github.com/google/ground-android/pull/386#discussion_r392313442", "createdAt": "2020-03-13T15:52:06Z", "author": {"login": "gino-m"}, "path": "gnd/src/main/java/com/google/android/gnd/system/StorageManager.java", "diffHunk": "@@ -120,35 +116,24 @@ private File getLocalFileFromDestinationPath(String destinationPath)\n     return fileUtil.getFile(splits[splits.length - 1]);\n   }\n \n+  private Uri getFileUriFromDestinationPath(String destinationPath) throws FileNotFoundException {\n+    File file = getLocalFileFromDestinationPath(destinationPath);\n+    return Uri.fromFile(file);\n+  }\n+\n   /**\n    * Load photo from the provided destination path.\n    *\n    * <p>If the image is not uploaded yet, then parse the filename from path and load the file from\n    * local storage.\n    *\n-   * @param imageView Placeholder for photo field\n    * @param destinationPath Destination path of the uploaded photo\n    */\n-  public void loadPhotoFromDestinationPath(ImageView imageView, String destinationPath) {\n+  public void loadPhotoFromDestinationPath(String destinationPath, Callback callback) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eb9c85c81d3c1d25456bfcbb421411820aefb4e3"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjMxMzY5MQ==", "bodyText": "Load = Download in this case? Please be specific here.", "url": "https://github.com/google/ground-android/pull/386#discussion_r392313691", "createdAt": "2020-03-13T15:52:33Z", "author": {"login": "gino-m"}, "path": "gnd/src/main/java/com/google/android/gnd/system/StorageManager.java", "diffHunk": "@@ -120,35 +116,24 @@ private File getLocalFileFromDestinationPath(String destinationPath)\n     return fileUtil.getFile(splits[splits.length - 1]);\n   }\n \n+  private Uri getFileUriFromDestinationPath(String destinationPath) throws FileNotFoundException {\n+    File file = getLocalFileFromDestinationPath(destinationPath);\n+    return Uri.fromFile(file);\n+  }\n+\n   /**\n    * Load photo from the provided destination path.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eb9c85c81d3c1d25456bfcbb421411820aefb4e3"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjMyMDQ5MA==", "bodyText": "Since Views are tightly bound to the Android OS and running VM, in general we're trying keep views as \"dumb\" as possible. This way we can test all/most business logic using ViewModels and upstream classes only. So ideally the views would delegate interaction with custom model classes or logic to the ViewModel. In most cases, that means the View can go away altogether, leaving us with just a layout and viewmodel. Would that be possible in this case?", "url": "https://github.com/google/ground-android/pull/386#discussion_r392320490", "createdAt": "2020-03-13T16:01:30Z", "author": {"login": "gino-m"}, "path": "gnd/src/main/java/com/google/android/gnd/ui/common/photoview/PhotoView.java", "diffHunk": "@@ -0,0 +1,58 @@\n+package com.google.android.gnd.ui.common.photoview;\n+\n+import android.content.Context;\n+import android.net.Uri;\n+import android.util.AttributeSet;\n+import android.view.LayoutInflater;\n+import androidx.fragment.app.Fragment;\n+import com.google.android.gnd.databinding.PhotoViewBinding;\n+import com.google.android.gnd.model.observation.Response;\n+import com.google.android.gnd.system.StorageManager;\n+import com.google.android.material.card.MaterialCardView;\n+import javax.annotation.Nullable;\n+import javax.inject.Inject;\n+\n+public class PhotoView extends MaterialCardView {\n+\n+  private final PhotoViewBinding binding;\n+\n+  @Inject StorageManager storageManager;\n+\n+  @Nullable private Response response;\n+\n+  public PhotoView(Context context) {\n+    this(context, null);\n+  }\n+\n+  public PhotoView(Context context, AttributeSet attrs) {\n+    this(context, attrs, 0);\n+  }\n+\n+  public PhotoView(Context context, AttributeSet attrs, int defStyleAttr) {\n+    super(context, attrs, defStyleAttr);\n+\n+    LayoutInflater inflater =\n+        (LayoutInflater) context.getSystemService(Context.LAYOUT_INFLATER_SERVICE);\n+    binding = PhotoViewBinding.inflate(inflater);\n+  }\n+\n+  public void setResponse(@Nullable Response response) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eb9c85c81d3c1d25456bfcbb421411820aefb4e3"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjMyMTEyNw==", "bodyText": "In a non-Rx world we'd probably just use Consumer<Uri> instead, but in our case we can just use an Observable.", "url": "https://github.com/google/ground-android/pull/386#discussion_r392321127", "createdAt": "2020-03-13T16:02:36Z", "author": {"login": "gino-m"}, "path": "gnd/src/main/java/com/google/android/gnd/ui/common/photoview/PhotoView.java", "diffHunk": "@@ -0,0 +1,58 @@\n+package com.google.android.gnd.ui.common.photoview;\n+\n+import android.content.Context;\n+import android.net.Uri;\n+import android.util.AttributeSet;\n+import android.view.LayoutInflater;\n+import androidx.fragment.app.Fragment;\n+import com.google.android.gnd.databinding.PhotoViewBinding;\n+import com.google.android.gnd.model.observation.Response;\n+import com.google.android.gnd.system.StorageManager;\n+import com.google.android.material.card.MaterialCardView;\n+import javax.annotation.Nullable;\n+import javax.inject.Inject;\n+\n+public class PhotoView extends MaterialCardView {\n+\n+  private final PhotoViewBinding binding;\n+\n+  @Inject StorageManager storageManager;\n+\n+  @Nullable private Response response;\n+\n+  public PhotoView(Context context) {\n+    this(context, null);\n+  }\n+\n+  public PhotoView(Context context, AttributeSet attrs) {\n+    this(context, attrs, 0);\n+  }\n+\n+  public PhotoView(Context context, AttributeSet attrs, int defStyleAttr) {\n+    super(context, attrs, defStyleAttr);\n+\n+    LayoutInflater inflater =\n+        (LayoutInflater) context.getSystemService(Context.LAYOUT_INFLATER_SERVICE);\n+    binding = PhotoViewBinding.inflate(inflater);\n+  }\n+\n+  public void setResponse(@Nullable Response response) {\n+    this.response = response;\n+  }\n+\n+  public void setFragment(Fragment fragment) {\n+    binding.setLifecycleOwner(fragment);\n+  }\n+\n+  public void setViewModel(PhotoViewViewModel viewModel) {\n+    if (viewModel == null) {\n+      return;\n+    }\n+    viewModel.setResponse(response);\n+    binding.setViewModel(viewModel);\n+  }\n+\n+  public interface Callback {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eb9c85c81d3c1d25456bfcbb421411820aefb4e3"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjMyMTkwOA==", "bodyText": "Naming: PhotoFieldViewModel, to make it clear that this is specific to photo fields in forms, not just any photo widget?", "url": "https://github.com/google/ground-android/pull/386#discussion_r392321908", "createdAt": "2020-03-13T16:04:02Z", "author": {"login": "gino-m"}, "path": "gnd/src/main/java/com/google/android/gnd/ui/common/photoview/PhotoViewViewModel.java", "diffHunk": "@@ -0,0 +1,52 @@\n+package com.google.android.gnd.ui.common.photoview;\n+\n+import android.net.Uri;\n+import android.view.View;\n+import androidx.databinding.ObservableInt;\n+import androidx.lifecycle.LiveData;\n+import androidx.lifecycle.MutableLiveData;\n+import com.google.android.gnd.model.form.Field;\n+import com.google.android.gnd.model.observation.Response;\n+import com.google.android.gnd.system.StorageManager;\n+import com.google.android.gnd.ui.common.AbstractViewModel;\n+import javax.inject.Inject;\n+\n+public class PhotoViewViewModel extends AbstractViewModel {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eb9c85c81d3c1d25456bfcbb421411820aefb4e3"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjMyMjQ0MA==", "bodyText": "This should probably be calling this \"visibility\" instead given the value it returns and how it's used.", "url": "https://github.com/google/ground-android/pull/386#discussion_r392322440", "createdAt": "2020-03-13T16:04:56Z", "author": {"login": "gino-m"}, "path": "gnd/src/main/java/com/google/android/gnd/ui/common/photoview/PhotoViewViewModel.java", "diffHunk": "@@ -0,0 +1,52 @@\n+package com.google.android.gnd.ui.common.photoview;\n+\n+import android.net.Uri;\n+import android.view.View;\n+import androidx.databinding.ObservableInt;\n+import androidx.lifecycle.LiveData;\n+import androidx.lifecycle.MutableLiveData;\n+import com.google.android.gnd.model.form.Field;\n+import com.google.android.gnd.model.observation.Response;\n+import com.google.android.gnd.system.StorageManager;\n+import com.google.android.gnd.ui.common.AbstractViewModel;\n+import javax.inject.Inject;\n+\n+public class PhotoViewViewModel extends AbstractViewModel {\n+\n+  private final StorageManager storageManager;\n+  private final MutableLiveData<Uri> destinationPath = new MutableLiveData<Uri>();\n+  private final ObservableInt isDestinationPathAvailable = new ObservableInt(View.GONE);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eb9c85c81d3c1d25456bfcbb421411820aefb4e3"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjMyMjgzMw==", "bodyText": "Also, we should use LiveData since ObservableInt isn't Lifecycle aware.", "url": "https://github.com/google/ground-android/pull/386#discussion_r392322833", "createdAt": "2020-03-13T16:05:39Z", "author": {"login": "gino-m"}, "path": "gnd/src/main/java/com/google/android/gnd/ui/common/photoview/PhotoViewViewModel.java", "diffHunk": "@@ -0,0 +1,52 @@\n+package com.google.android.gnd.ui.common.photoview;\n+\n+import android.net.Uri;\n+import android.view.View;\n+import androidx.databinding.ObservableInt;\n+import androidx.lifecycle.LiveData;\n+import androidx.lifecycle.MutableLiveData;\n+import com.google.android.gnd.model.form.Field;\n+import com.google.android.gnd.model.observation.Response;\n+import com.google.android.gnd.system.StorageManager;\n+import com.google.android.gnd.ui.common.AbstractViewModel;\n+import javax.inject.Inject;\n+\n+public class PhotoViewViewModel extends AbstractViewModel {\n+\n+  private final StorageManager storageManager;\n+  private final MutableLiveData<Uri> destinationPath = new MutableLiveData<Uri>();\n+  private final ObservableInt isDestinationPathAvailable = new ObservableInt(View.GONE);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjMyMjQ0MA=="}, "originalCommit": {"oid": "eb9c85c81d3c1d25456bfcbb421411820aefb4e3"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjMyNDQzMg==", "bodyText": "LayoutInflater inflater = LayoutInflater.from(context); can be used here instead.", "url": "https://github.com/google/ground-android/pull/386#discussion_r392324432", "createdAt": "2020-03-13T16:08:26Z", "author": {"login": "gino-m"}, "path": "gnd/src/main/java/com/google/android/gnd/ui/common/photoview/PhotoView.java", "diffHunk": "@@ -0,0 +1,58 @@\n+package com.google.android.gnd.ui.common.photoview;\n+\n+import android.content.Context;\n+import android.net.Uri;\n+import android.util.AttributeSet;\n+import android.view.LayoutInflater;\n+import androidx.fragment.app.Fragment;\n+import com.google.android.gnd.databinding.PhotoViewBinding;\n+import com.google.android.gnd.model.observation.Response;\n+import com.google.android.gnd.system.StorageManager;\n+import com.google.android.material.card.MaterialCardView;\n+import javax.annotation.Nullable;\n+import javax.inject.Inject;\n+\n+public class PhotoView extends MaterialCardView {\n+\n+  private final PhotoViewBinding binding;\n+\n+  @Inject StorageManager storageManager;\n+\n+  @Nullable private Response response;\n+\n+  public PhotoView(Context context) {\n+    this(context, null);\n+  }\n+\n+  public PhotoView(Context context, AttributeSet attrs) {\n+    this(context, attrs, 0);\n+  }\n+\n+  public PhotoView(Context context, AttributeSet attrs, int defStyleAttr) {\n+    super(context, attrs, defStyleAttr);\n+\n+    LayoutInflater inflater =\n+        (LayoutInflater) context.getSystemService(Context.LAYOUT_INFLATER_SERVICE);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eb9c85c81d3c1d25456bfcbb421411820aefb4e3"}, "originalPosition": 35}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc1NTcyMDE5", "url": "https://github.com/google/ground-android/pull/386#pullrequestreview-375572019", "createdAt": "2020-03-16T20:48:42Z", "commit": {"oid": "eb9c85c81d3c1d25456bfcbb421411820aefb4e3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQyMDo0ODo0MlrOF3FO3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQyMDo0ODo0MlrOF3FO3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzMwMTcyNQ==", "bodyText": "This method is UI-specific so should probably be defined in the UI layer (e.g., the Fragment) or related helper.", "url": "https://github.com/google/ground-android/pull/386#discussion_r393301725", "createdAt": "2020-03-16T20:48:42Z", "author": {"login": "gino-m"}, "path": "gnd/src/main/java/com/google/android/gnd/system/StorageManager.java", "diffHunk": "@@ -82,7 +78,7 @@ private Completable sendPhotoPickerIntent() {\n                   Intent intent = new Intent(Intent.ACTION_GET_CONTENT);\n                   intent.setType(\"image/*\");\n                   activity.startActivityForResult(intent, PICK_PHOTO_REQUEST_CODE);\n-                  Log.d(TAG, \"file picker intent sent\");\n+                  Timber.d(\"file picker intent sent\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eb9c85c81d3c1d25456bfcbb421411820aefb4e3"}, "originalPosition": 34}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc1NTczMTU5", "url": "https://github.com/google/ground-android/pull/386#pullrequestreview-375573159", "createdAt": "2020-03-16T20:50:35Z", "commit": {"oid": "eb9c85c81d3c1d25456bfcbb421411820aefb4e3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQyMDo1MDozNVrOF3FSdg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQyMDo1MDozNVrOF3FSdg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzMwMjY0Ng==", "bodyText": "Sorry if I mentioned it before, but this probably won't work. Since you need to properly manage the returned disposable, we only subscribe to streams in lifecycle-aware contexts like Fragments. The right thing to do here I believe, would be to return a Single, which can be created using RxTask.", "url": "https://github.com/google/ground-android/pull/386#discussion_r393302646", "createdAt": "2020-03-16T20:50:35Z", "author": {"login": "gino-m"}, "path": "gnd/src/main/java/com/google/android/gnd/system/StorageManager.java", "diffHunk": "@@ -120,35 +116,24 @@ private File getLocalFileFromDestinationPath(String destinationPath)\n     return fileUtil.getFile(splits[splits.length - 1]);\n   }\n \n+  private Uri getFileUriFromDestinationPath(String destinationPath) throws FileNotFoundException {\n+    File file = getLocalFileFromDestinationPath(destinationPath);\n+    return Uri.fromFile(file);\n+  }\n+\n   /**\n    * Load photo from the provided destination path.\n    *\n    * <p>If the image is not uploaded yet, then parse the filename from path and load the file from\n    * local storage.\n    *\n-   * @param imageView Placeholder for photo field\n    * @param destinationPath Destination path of the uploaded photo\n    */\n-  public void loadPhotoFromDestinationPath(ImageView imageView, String destinationPath) {\n+  public void loadPhotoFromDestinationPath(String destinationPath, Callback callback) {\n     firestoreStorageManager\n         .getDownloadUrl(destinationPath)\n-        .doOnSuccess(\n-            uri -> {\n-              // Load the file from Firestore Storage\n-              Picasso.get()\n-                  .load(uri)\n-                  .placeholder(R.drawable.ic_photo_grey_600_24dp)\n-                  .into(imageView);\n-            })\n-        .doOnError(\n-            throwable -> {\n-              // Load file locally\n-              File file = getLocalFileFromDestinationPath(destinationPath);\n-              Picasso.get()\n-                  .load(file)\n-                  .placeholder(R.drawable.ic_photo_grey_600_24dp)\n-                  .into(imageView);\n-            })\n+        .doOnSuccess(callback::run)\n+        .doOnError(throwable -> callback.run(getFileUriFromDestinationPath(destinationPath)))\n         .subscribe();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eb9c85c81d3c1d25456bfcbb421411820aefb4e3"}, "originalPosition": 79}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc1NTc0MjI1", "url": "https://github.com/google/ground-android/pull/386#pullrequestreview-375574225", "createdAt": "2020-03-16T20:52:18Z", "commit": {"oid": "eb9c85c81d3c1d25456bfcbb421411820aefb4e3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQyMDo1MjoxOFrOF3FWBg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQyMDo1MjoxOFrOF3FWBg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzMwMzU1OA==", "bodyText": "It's probably my fault for being vague in previous comments, but we're generally trying to avoid creating custom Views unless absolutely necessary, since they're hard to test and easy to get wrong (as you discovered)! Instead, could this view be reduced to a layout xml that can be included in the photo_input_field layout, which in turn gets added by the Fragment?", "url": "https://github.com/google/ground-android/pull/386#discussion_r393303558", "createdAt": "2020-03-16T20:52:18Z", "author": {"login": "gino-m"}, "path": "gnd/src/main/java/com/google/android/gnd/ui/common/photoview/PhotoView.java", "diffHunk": "@@ -0,0 +1,58 @@\n+package com.google.android.gnd.ui.common.photoview;\n+\n+import android.content.Context;\n+import android.net.Uri;\n+import android.util.AttributeSet;\n+import android.view.LayoutInflater;\n+import androidx.fragment.app.Fragment;\n+import com.google.android.gnd.databinding.PhotoViewBinding;\n+import com.google.android.gnd.model.observation.Response;\n+import com.google.android.gnd.system.StorageManager;\n+import com.google.android.material.card.MaterialCardView;\n+import javax.annotation.Nullable;\n+import javax.inject.Inject;\n+\n+public class PhotoView extends MaterialCardView {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eb9c85c81d3c1d25456bfcbb421411820aefb4e3"}, "originalPosition": 15}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a1b025dbc57527c958110c02f130d7433537aec7", "author": {"user": {"login": "shobhitagarwal1612", "name": "Shobhit Agarwal"}}, "url": "https://github.com/google/ground-android/commit/a1b025dbc57527c958110c02f130d7433537aec7", "committedDate": "2020-03-16T20:52:36Z", "message": "Merge branch 'master' into upload-photos-ui"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a28bd38a3d1183250835670dba54bcfdbe812faf", "author": {"user": {"login": "shobhitagarwal1612", "name": "Shobhit Agarwal"}}, "url": "https://github.com/google/ground-android/commit/a28bd38a3d1183250835670dba54bcfdbe812faf", "committedDate": "2020-03-16T22:38:27Z", "message": "Attach layout to parent\n\nThis was the culprit for the view not getting updated :("}}, {"__typename": "PullRequestCommit", "commit": {"oid": "56b19d77860bfdf1ff945860b5aad2f1b4ad014f", "author": {"user": {"login": "shobhitagarwal1612", "name": "Shobhit Agarwal"}}, "url": "https://github.com/google/ground-android/commit/56b19d77860bfdf1ff945860b5aad2f1b4ad014f", "committedDate": "2020-03-16T22:38:27Z", "message": "Load photo into ObservationDetailsFragment"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9693cf2bf4eb659e3bc8589b35dc380d5825d0ab", "author": {"user": {"login": "shobhitagarwal1612", "name": "Shobhit Agarwal"}}, "url": "https://github.com/google/ground-android/commit/9693cf2bf4eb659e3bc8589b35dc380d5825d0ab", "committedDate": "2020-03-16T22:38:27Z", "message": "Create a separate PhotoViewViewModel for each field"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "612ed5ed6822200800404c0445730d55aefc2e57", "author": {"user": {"login": "shobhitagarwal1612", "name": "Shobhit Agarwal"}}, "url": "https://github.com/google/ground-android/commit/612ed5ed6822200800404c0445730d55aefc2e57", "committedDate": "2020-03-16T22:38:27Z", "message": "Remove redundant null check"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "38093ec706149ffe3c265c4dff6acc4ced5896af", "author": {"user": {"login": "shobhitagarwal1612", "name": "Shobhit Agarwal"}}, "url": "https://github.com/google/ground-android/commit/38093ec706149ffe3c265c4dff6acc4ced5896af", "committedDate": "2020-03-16T22:38:27Z", "message": "Replace Callback with Rx"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7397ff82d1459263a61fa4987bed144c03065f28", "author": {"user": {"login": "shobhitagarwal1612", "name": "Shobhit Agarwal"}}, "url": "https://github.com/google/ground-android/commit/7397ff82d1459263a61fa4987bed144c03065f28", "committedDate": "2020-03-16T22:38:27Z", "message": "PhotoViewViewModel -> PhotoFieldViewModel"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c276910c9676b265a1cef5ca5825d4b4927c2d8b", "author": {"user": {"login": "shobhitagarwal1612", "name": "Shobhit Agarwal"}}, "url": "https://github.com/google/ground-android/commit/c276910c9676b265a1cef5ca5825d4b4927c2d8b", "committedDate": "2020-03-16T22:38:27Z", "message": "Use LiveData instead of ObservableInt and rename field name"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1a3ef1a9f611ee1a871ae5069d3de2dadb3abbc9", "author": {"user": {"login": "shobhitagarwal1612", "name": "Shobhit Agarwal"}}, "url": "https://github.com/google/ground-android/commit/1a3ef1a9f611ee1a871ae5069d3de2dadb3abbc9", "committedDate": "2020-03-16T22:38:28Z", "message": "Add for future refactoring"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1a9f6bb73d75193d7ef7aa15f233f347af401502", "author": {"user": {"login": "shobhitagarwal1612", "name": "Shobhit Agarwal"}}, "url": "https://github.com/google/ground-android/commit/1a9f6bb73d75193d7ef7aa15f233f347af401502", "committedDate": "2020-03-16T22:38:28Z", "message": "Add views from photo_view to photo_input_field"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5cc6198a930f48bdee8145efa6541531e3922f0b", "author": {"user": {"login": "shobhitagarwal1612", "name": "Shobhit Agarwal"}}, "url": "https://github.com/google/ground-android/commit/5cc6198a930f48bdee8145efa6541531e3922f0b", "committedDate": "2020-03-16T22:38:28Z", "message": "Remove custom view"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "08350598737ac98c35af9153ea826ec82dc78c66", "author": {"user": {"login": "shobhitagarwal1612", "name": "Shobhit Agarwal"}}, "url": "https://github.com/google/ground-android/commit/08350598737ac98c35af9153ea826ec82dc78c66", "committedDate": "2020-03-16T22:38:28Z", "message": "Move PhotoFieldViewModel into editobservation package"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "611cc98cffb339123c53124278a24b029990a5b3", "author": {"user": {"login": "shobhitagarwal1612", "name": "Shobhit Agarwal"}}, "url": "https://github.com/google/ground-android/commit/611cc98cffb339123c53124278a24b029990a5b3", "committedDate": "2020-03-16T22:38:28Z", "message": "CheckCode fixes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "95ac556683efadcdc077cabe3fd7b356fc1b103e", "author": {"user": {"login": "shobhitagarwal1612", "name": "Shobhit Agarwal"}}, "url": "https://github.com/google/ground-android/commit/95ac556683efadcdc077cabe3fd7b356fc1b103e", "committedDate": "2020-03-16T22:42:58Z", "message": "Fix comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1e71bdf5515f7e89b0e93815e9935c39071aab46", "author": {"user": {"login": "shobhitagarwal1612", "name": "Shobhit Agarwal"}}, "url": "https://github.com/google/ground-android/commit/1e71bdf5515f7e89b0e93815e9935c39071aab46", "committedDate": "2020-03-16T22:46:45Z", "message": "Remove unused change"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "df8cf46086a03c08f384ffc47bf651eff228ddf4", "author": {"user": {"login": "shobhitagarwal1612", "name": "Shobhit Agarwal"}}, "url": "https://github.com/google/ground-android/commit/df8cf46086a03c08f384ffc47bf651eff228ddf4", "committedDate": "2020-03-16T22:48:41Z", "message": "Improve method name"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc2MTU0MjU5", "url": "https://github.com/google/ground-android/pull/386#pullrequestreview-376154259", "createdAt": "2020-03-17T15:38:47Z", "commit": {"oid": "df8cf46086a03c08f384ffc47bf651eff228ddf4"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxNTozODo0N1rOF3h8xg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxNTo1Njo0MFrOF3iyzQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzc3MjIzMA==", "bodyText": "Do we need to handle error states here? Will failing to load the URI cause the application to crash?", "url": "https://github.com/google/ground-android/pull/386#discussion_r393772230", "createdAt": "2020-03-17T15:38:47Z", "author": {"login": "gino-m"}, "path": "gnd/src/main/java/com/google/android/gnd/ui/common/BindingAdapters.java", "diffHunk": "@@ -118,4 +126,9 @@ public static void setOnFocusChangeListener(\n   public static void setOnShowDialogListener(MultipleChoiceFieldLayout view, Runnable listener) {\n     view.setOnShowDialogListener(listener);\n   }\n+\n+  @BindingAdapter(\"imageUri\")\n+  public static void bindUri(ImageView view, Uri uri) {\n+    Picasso.get().load(uri).placeholder(R.drawable.ic_photo_grey_600_24dp).into(view);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "df8cf46086a03c08f384ffc47bf651eff228ddf4"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzc3MzY2Nw==", "bodyText": "Naming nit: Our classes follow the pattern FooView and FooViewModel, which would make this class here \"PhotoViewModel\". To make it clear this is specifically a photo in a form field, PhotoFieldView and PhotoFieldViewModel might be more appropriate.", "url": "https://github.com/google/ground-android/pull/386#discussion_r393773667", "createdAt": "2020-03-17T15:40:43Z", "author": {"login": "gino-m"}, "path": "gnd/src/main/java/com/google/android/gnd/ui/common/ViewModelModule.java", "diffHunk": "@@ -96,6 +97,11 @@\n   @ViewModelKey(EditObservationViewModel.class)\n   abstract ViewModel bindEditObservationViewModel(EditObservationViewModel viewModel);\n \n+  @Binds\n+  @IntoMap\n+  @ViewModelKey(PhotoFieldViewModel.class)\n+  abstract ViewModel bindPhotoViewViewModel(PhotoFieldViewModel viewModel);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "df8cf46086a03c08f384ffc47bf651eff228ddf4"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzc3NjAyMA==", "bodyText": "Nit: Please use a more specific method name like updateField. In general avoid capital case in Java method names (updateUi instead of updateUI).", "url": "https://github.com/google/ground-android/pull/386#discussion_r393776020", "createdAt": "2020-03-17T15:43:29Z", "author": {"login": "gino-m"}, "path": "gnd/src/main/java/com/google/android/gnd/ui/editobservation/PhotoFieldViewModel.java", "diffHunk": "@@ -0,0 +1,80 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.android.gnd.ui.editobservation;\n+\n+import android.net.Uri;\n+import android.view.View;\n+import androidx.databinding.ObservableMap;\n+import androidx.databinding.ObservableMap.OnMapChangedCallback;\n+import androidx.lifecycle.LiveData;\n+import androidx.lifecycle.MutableLiveData;\n+import com.google.android.gnd.model.form.Field;\n+import com.google.android.gnd.model.observation.Response;\n+import com.google.android.gnd.system.StorageManager;\n+import com.google.android.gnd.ui.common.AbstractViewModel;\n+import javax.inject.Inject;\n+\n+public class PhotoFieldViewModel extends AbstractViewModel {\n+\n+  private final StorageManager storageManager;\n+  private final MutableLiveData<Uri> destinationPath = new MutableLiveData<>();\n+  private final MutableLiveData<Integer> photoPreviewVisibility = new MutableLiveData<>(View.GONE);\n+\n+  @Inject\n+  PhotoFieldViewModel(StorageManager storageManager) {\n+    this.storageManager = storageManager;\n+  }\n+\n+  public LiveData<Uri> getDestinationPath() {\n+    return destinationPath;\n+  }\n+\n+  public MutableLiveData<Integer> photoPreviewVisibility() {\n+    return photoPreviewVisibility;\n+  }\n+\n+  public void init(Field field, ObservableMap<String, Response> responses) {\n+    // Load last saved value\n+    updateUI(responses.get(field.getId()), field);\n+\n+    // Observe response updates\n+    responses.addOnMapChangedCallback(\n+        new OnMapChangedCallback<ObservableMap<String, Response>, String, Response>() {\n+          @Override\n+          public void onMapChanged(ObservableMap<String, Response> sender, String key) {\n+            if (key.equals(field.getId())) {\n+              updateUI(sender.get(key), field);\n+            }\n+          }\n+        });\n+  }\n+\n+  private void updateUI(Response response, Field field) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "df8cf46086a03c08f384ffc47bf651eff228ddf4"}, "originalPosition": 66}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzc3OTIzMg==", "bodyText": "This will accumulate subscriptions in the viewmodel ad infinitum every time a photo is changed during the viewmodel's lifecycle. That's probably ok in practice since the user will never likely do this so many times we'll run out of memory, but it is a form of memory leak that as a general rule we're designing to avoid.\nThe \"right\", safe way to do this would be to create a PublishSubject<Optional<String>> destinationPath class member that emits the path or empty when this method is called. Then in the constructor, you would define LiveData<Optional<Uri>> uri using something like:\n  this.uri = LiveDataReactiveStreams.fromPublisher(\n    destinationPath.switchMap(path -> path.map(storageManager::loadUriFromDestinationPath).orElse(Observable.of(Optional.empty()))));\nVisibility could be defined in a similar way:\n  this.uri = LiveDataReactiveStreams.fromPublisher(\n    destinationPath.map(path -> path.isPresent() ? View..VISIBLE : View.GONE));\nThis method would then simply call destinationPath.onNext with either Optional.empty() or the URI.\nWdyt?", "url": "https://github.com/google/ground-android/pull/386#discussion_r393779232", "createdAt": "2020-03-17T15:47:45Z", "author": {"login": "gino-m"}, "path": "gnd/src/main/java/com/google/android/gnd/ui/editobservation/PhotoFieldViewModel.java", "diffHunk": "@@ -0,0 +1,80 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.android.gnd.ui.editobservation;\n+\n+import android.net.Uri;\n+import android.view.View;\n+import androidx.databinding.ObservableMap;\n+import androidx.databinding.ObservableMap.OnMapChangedCallback;\n+import androidx.lifecycle.LiveData;\n+import androidx.lifecycle.MutableLiveData;\n+import com.google.android.gnd.model.form.Field;\n+import com.google.android.gnd.model.observation.Response;\n+import com.google.android.gnd.system.StorageManager;\n+import com.google.android.gnd.ui.common.AbstractViewModel;\n+import javax.inject.Inject;\n+\n+public class PhotoFieldViewModel extends AbstractViewModel {\n+\n+  private final StorageManager storageManager;\n+  private final MutableLiveData<Uri> destinationPath = new MutableLiveData<>();\n+  private final MutableLiveData<Integer> photoPreviewVisibility = new MutableLiveData<>(View.GONE);\n+\n+  @Inject\n+  PhotoFieldViewModel(StorageManager storageManager) {\n+    this.storageManager = storageManager;\n+  }\n+\n+  public LiveData<Uri> getDestinationPath() {\n+    return destinationPath;\n+  }\n+\n+  public MutableLiveData<Integer> photoPreviewVisibility() {\n+    return photoPreviewVisibility;\n+  }\n+\n+  public void init(Field field, ObservableMap<String, Response> responses) {\n+    // Load last saved value\n+    updateUI(responses.get(field.getId()), field);\n+\n+    // Observe response updates\n+    responses.addOnMapChangedCallback(\n+        new OnMapChangedCallback<ObservableMap<String, Response>, String, Response>() {\n+          @Override\n+          public void onMapChanged(ObservableMap<String, Response> sender, String key) {\n+            if (key.equals(field.getId())) {\n+              updateUI(sender.get(key), field);\n+            }\n+          }\n+        });\n+  }\n+\n+  private void updateUI(Response response, Field field) {\n+    if (response == null) {\n+      photoPreviewVisibility.setValue(View.GONE);\n+    } else {\n+      String value = response.getDetailsText(field);\n+      if (value.isEmpty()) {\n+        photoPreviewVisibility.setValue(View.GONE);\n+      } else {\n+        photoPreviewVisibility.setValue(View.VISIBLE);\n+        disposeOnClear(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "df8cf46086a03c08f384ffc47bf651eff228ddf4"}, "originalPosition": 75}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzc3OTgwNg==", "bodyText": "I'm a bit confused by the naming here - it appears Uris are loaded from destination paths, therefore they're not equivalent. If that's the case, shouldn't this be called uri instead?", "url": "https://github.com/google/ground-android/pull/386#discussion_r393779806", "createdAt": "2020-03-17T15:48:29Z", "author": {"login": "gino-m"}, "path": "gnd/src/main/java/com/google/android/gnd/ui/editobservation/PhotoFieldViewModel.java", "diffHunk": "@@ -0,0 +1,80 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.android.gnd.ui.editobservation;\n+\n+import android.net.Uri;\n+import android.view.View;\n+import androidx.databinding.ObservableMap;\n+import androidx.databinding.ObservableMap.OnMapChangedCallback;\n+import androidx.lifecycle.LiveData;\n+import androidx.lifecycle.MutableLiveData;\n+import com.google.android.gnd.model.form.Field;\n+import com.google.android.gnd.model.observation.Response;\n+import com.google.android.gnd.system.StorageManager;\n+import com.google.android.gnd.ui.common.AbstractViewModel;\n+import javax.inject.Inject;\n+\n+public class PhotoFieldViewModel extends AbstractViewModel {\n+\n+  private final StorageManager storageManager;\n+  private final MutableLiveData<Uri> destinationPath = new MutableLiveData<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "df8cf46086a03c08f384ffc47bf651eff228ddf4"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzc4NjA2MQ==", "bodyText": "Same here - subscriptions should only be made inside lifecycle methods so they can be properly disposed of in their equivalent end lifecycle methods. To do this safely, you can create a PublishSubject in the view model that gets exposed to the fragment as a LiveData. Let's discuss if it's not clear how to do this here.", "url": "https://github.com/google/ground-android/pull/386#discussion_r393786061", "createdAt": "2020-03-17T15:56:40Z", "author": {"login": "gino-m"}, "path": "gnd/src/main/java/com/google/android/gnd/ui/observationdetails/ObservationDetailsFragment.java", "diffHunk": "@@ -159,7 +163,18 @@ private void addField(Field field, Observation observation) {\n                 binding.fieldValue.setVisibility(View.GONE);\n                 binding.imagePreview.setVisibility(View.VISIBLE);\n \n-                storageManager.loadPhotoFromDestinationPath(binding.imagePreview, value);\n+                storageManager", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "df8cf46086a03c08f384ffc47bf651eff228ddf4"}, "originalPosition": 54}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7cfa40e6a5528bfe6c8354acb2d4a6f7dca9a4ae", "author": {"user": {"login": "shobhitagarwal1612", "name": "Shobhit Agarwal"}}, "url": "https://github.com/google/ground-android/commit/7cfa40e6a5528bfe6c8354acb2d4a6f7dca9a4ae", "committedDate": "2020-03-17T16:04:33Z", "message": "Merge branch 'master' into upload-photos-ui"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc2MjgzNTYx", "url": "https://github.com/google/ground-android/pull/386#pullrequestreview-376283561", "createdAt": "2020-03-17T18:07:29Z", "commit": {"oid": "df8cf46086a03c08f384ffc47bf651eff228ddf4"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxODowOTowOVrOF3oL7w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxODoyNjoxMFrOF3ozPA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzg3NDQxNQ==", "bodyText": "Sorry, forgot to mention that after the refactor loadUriFromDestinationPath could now be misleading - it doesn't actually load any data, it just gets the download URL, so it should probably be renamed accordingly (getDownloadUrl could work!)", "url": "https://github.com/google/ground-android/pull/386#discussion_r393874415", "createdAt": "2020-03-17T18:09:09Z", "author": {"login": "gino-m"}, "path": "gnd/src/main/java/com/google/android/gnd/ui/editobservation/PhotoFieldViewModel.java", "diffHunk": "@@ -0,0 +1,80 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.android.gnd.ui.editobservation;\n+\n+import android.net.Uri;\n+import android.view.View;\n+import androidx.databinding.ObservableMap;\n+import androidx.databinding.ObservableMap.OnMapChangedCallback;\n+import androidx.lifecycle.LiveData;\n+import androidx.lifecycle.MutableLiveData;\n+import com.google.android.gnd.model.form.Field;\n+import com.google.android.gnd.model.observation.Response;\n+import com.google.android.gnd.system.StorageManager;\n+import com.google.android.gnd.ui.common.AbstractViewModel;\n+import javax.inject.Inject;\n+\n+public class PhotoFieldViewModel extends AbstractViewModel {\n+\n+  private final StorageManager storageManager;\n+  private final MutableLiveData<Uri> destinationPath = new MutableLiveData<>();\n+  private final MutableLiveData<Integer> photoPreviewVisibility = new MutableLiveData<>(View.GONE);\n+\n+  @Inject\n+  PhotoFieldViewModel(StorageManager storageManager) {\n+    this.storageManager = storageManager;\n+  }\n+\n+  public LiveData<Uri> getDestinationPath() {\n+    return destinationPath;\n+  }\n+\n+  public MutableLiveData<Integer> photoPreviewVisibility() {\n+    return photoPreviewVisibility;\n+  }\n+\n+  public void init(Field field, ObservableMap<String, Response> responses) {\n+    // Load last saved value\n+    updateUI(responses.get(field.getId()), field);\n+\n+    // Observe response updates\n+    responses.addOnMapChangedCallback(\n+        new OnMapChangedCallback<ObservableMap<String, Response>, String, Response>() {\n+          @Override\n+          public void onMapChanged(ObservableMap<String, Response> sender, String key) {\n+            if (key.equals(field.getId())) {\n+              updateUI(sender.get(key), field);\n+            }\n+          }\n+        });\n+  }\n+\n+  private void updateUI(Response response, Field field) {\n+    if (response == null) {\n+      photoPreviewVisibility.setValue(View.GONE);\n+    } else {\n+      String value = response.getDetailsText(field);\n+      if (value.isEmpty()) {\n+        photoPreviewVisibility.setValue(View.GONE);\n+      } else {\n+        photoPreviewVisibility.setValue(View.VISIBLE);\n+        disposeOnClear(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzc3OTIzMg=="}, "originalCommit": {"oid": "df8cf46086a03c08f384ffc47bf651eff228ddf4"}, "originalPosition": 75}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzg4NDQ3Ng==", "bodyText": "I'd probably do this:\n  private final LiveData<Uri> uri;\n  private final BehaviorProcessor<String> destinationPath = BehaviorProcessor.create();\n\n  @Inject\n  PhotoFieldViewModel(StorageManager storageManager) {\n    this.storageManager = storageManager;\n    this.uri =\n        LiveDataReactiveStreams.fromPublisher(\n            destinationPath.switchMapSingle(this::getDownloadUrl));\n  }\n\n  private Single<Uri> getDownloadUrl(String path) {\n    return path.isEmpty() ? Single.just(Uri.EMPTY) : storageManager.getDownloadUrl(path);\n  }\nA few things to note:\n\nUri and String already have non-null representations of an \"empty\" state, so using those instead of introducing another edge state with Optional simplifies this logic. The binding may need to be updated to handle this case.\nUse switchMapSingle to introduce a single into the stream\nUse *Processor to get a Flowable straight away\nUsing BehaviorProcessor to cache the last value. Late subscribers will get the last value of the Uri.\n\nHTH!", "url": "https://github.com/google/ground-android/pull/386#discussion_r393884476", "createdAt": "2020-03-17T18:26:10Z", "author": {"login": "gino-m"}, "path": "gnd/src/main/java/com/google/android/gnd/ui/editobservation/PhotoFieldViewModel.java", "diffHunk": "@@ -0,0 +1,80 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.android.gnd.ui.editobservation;\n+\n+import android.net.Uri;\n+import android.view.View;\n+import androidx.databinding.ObservableMap;\n+import androidx.databinding.ObservableMap.OnMapChangedCallback;\n+import androidx.lifecycle.LiveData;\n+import androidx.lifecycle.MutableLiveData;\n+import com.google.android.gnd.model.form.Field;\n+import com.google.android.gnd.model.observation.Response;\n+import com.google.android.gnd.system.StorageManager;\n+import com.google.android.gnd.ui.common.AbstractViewModel;\n+import javax.inject.Inject;\n+\n+public class PhotoFieldViewModel extends AbstractViewModel {\n+\n+  private final StorageManager storageManager;\n+  private final MutableLiveData<Uri> destinationPath = new MutableLiveData<>();\n+  private final MutableLiveData<Integer> photoPreviewVisibility = new MutableLiveData<>(View.GONE);\n+\n+  @Inject\n+  PhotoFieldViewModel(StorageManager storageManager) {\n+    this.storageManager = storageManager;\n+  }\n+\n+  public LiveData<Uri> getDestinationPath() {\n+    return destinationPath;\n+  }\n+\n+  public MutableLiveData<Integer> photoPreviewVisibility() {\n+    return photoPreviewVisibility;\n+  }\n+\n+  public void init(Field field, ObservableMap<String, Response> responses) {\n+    // Load last saved value\n+    updateUI(responses.get(field.getId()), field);\n+\n+    // Observe response updates\n+    responses.addOnMapChangedCallback(\n+        new OnMapChangedCallback<ObservableMap<String, Response>, String, Response>() {\n+          @Override\n+          public void onMapChanged(ObservableMap<String, Response> sender, String key) {\n+            if (key.equals(field.getId())) {\n+              updateUI(sender.get(key), field);\n+            }\n+          }\n+        });\n+  }\n+\n+  private void updateUI(Response response, Field field) {\n+    if (response == null) {\n+      photoPreviewVisibility.setValue(View.GONE);\n+    } else {\n+      String value = response.getDetailsText(field);\n+      if (value.isEmpty()) {\n+        photoPreviewVisibility.setValue(View.GONE);\n+      } else {\n+        photoPreviewVisibility.setValue(View.VISIBLE);\n+        disposeOnClear(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzc3OTIzMg=="}, "originalCommit": {"oid": "df8cf46086a03c08f384ffc47bf651eff228ddf4"}, "originalPosition": 75}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "27ed1c6473891a4c5a8559d68bab2bf7b7c820c3", "author": {"user": {"login": "shobhitagarwal1612", "name": "Shobhit Agarwal"}}, "url": "https://github.com/google/ground-android/commit/27ed1c6473891a4c5a8559d68bab2bf7b7c820c3", "committedDate": "2020-03-18T17:47:58Z", "message": "Naming nits"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1f9f643e2176f598b8ecaa8e7c297a36169ab99b", "author": {"user": {"login": "shobhitagarwal1612", "name": "Shobhit Agarwal"}}, "url": "https://github.com/google/ground-android/commit/1f9f643e2176f598b8ecaa8e7c297a36169ab99b", "committedDate": "2020-03-18T17:47:58Z", "message": "Refactor VM using LiveData and BehaviorProcessor\n\nThanks Gino :)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5aa4eeeb5ab6ddf409f53ff68453b8cff57b532b", "author": {"user": {"login": "shobhitagarwal1612", "name": "Shobhit Agarwal"}}, "url": "https://github.com/google/ground-android/commit/5aa4eeeb5ab6ddf409f53ff68453b8cff57b532b", "committedDate": "2020-03-18T17:52:13Z", "message": "TODO added for future refactoring"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f68ca3bfab6caa93be8c5116741f5c31a4189599", "author": {"user": {"login": "shobhitagarwal1612", "name": "Shobhit Agarwal"}}, "url": "https://github.com/google/ground-android/commit/f68ca3bfab6caa93be8c5116741f5c31a4189599", "committedDate": "2020-03-18T17:52:46Z", "message": "Merge branch 'master' into upload-photos-ui"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "282d85fe0ae576b7963a6f5261372ab8ecfa0542", "author": {"user": {"login": "gino-m", "name": "Gino Miceli"}}, "url": "https://github.com/google/ground-android/commit/282d85fe0ae576b7963a6f5261372ab8ecfa0542", "committedDate": "2020-03-18T18:28:36Z", "message": "Merge branch 'master' into upload-photos-ui"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc3MTMzODIx", "url": "https://github.com/google/ground-android/pull/386#pullrequestreview-377133821", "createdAt": "2020-03-18T18:33:14Z", "commit": {"oid": "282d85fe0ae576b7963a6f5261372ab8ecfa0542"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9aba62ea687cfe25e877f20e54e3264d01529c0c", "author": {"user": {"login": "shobhitagarwal1612", "name": "Shobhit Agarwal"}}, "url": "https://github.com/google/ground-android/commit/9aba62ea687cfe25e877f20e54e3264d01529c0c", "committedDate": "2020-03-18T18:59:07Z", "message": "Merge branch 'master' into upload-photos-ui"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d71e42debee783ca47288fce33f5b9497d9c6eea", "author": {"user": {"login": "shobhitagarwal1612", "name": "Shobhit Agarwal"}}, "url": "https://github.com/google/ground-android/commit/d71e42debee783ca47288fce33f5b9497d9c6eea", "committedDate": "2020-03-18T19:06:35Z", "message": "Invert if-else"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc3MTYzMzYw", "url": "https://github.com/google/ground-android/pull/386#pullrequestreview-377163360", "createdAt": "2020-03-18T19:16:03Z", "commit": {"oid": "d71e42debee783ca47288fce33f5b9497d9c6eea"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1730, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}