{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU1NjM3NzMx", "number": 552, "reviewThreads": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxMjo0NDo0MFrOERbpgQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QyMzoxNTo1OFrOERpcRg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2NzE0MjQxOnYy", "diffSide": "RIGHT", "path": "gnd/src/main/java/com/google/android/gnd/persistence/local/room/RoomLocalDataStore.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxMjo0NDo0MFrOG2IyKQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxNjo1NTo0MVrOG2TTcg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTQyMDIwMQ==", "bodyText": "Naming nit: we may want to call this \"markFeatureForDeletion\" to distinguish it from our future state where we don't actually delete things, but rather mark them as \"deleted\". In that case there would be three states in the local DB, \"not deleted\", \"marked for deletion on remote\", and \"deleted\".", "url": "https://github.com/google/ground-android/pull/552#discussion_r459420201", "createdAt": "2020-07-23T12:44:40Z", "author": {"login": "gino-m"}, "path": "gnd/src/main/java/com/google/android/gnd/persistence/local/room/RoomLocalDataStore.java", "diffHunk": "@@ -387,17 +388,42 @@ private Completable apply(FeatureMutation mutation) throws LocalDataStoreExcepti\n       case CREATE:\n         return getUser(mutation.getUserId())\n             .flatMapCompletable(user -> insertOrUpdateFeature(mutation, user));\n+      case DELETE:\n+        return featureDao\n+            .findById(mutation.getFeatureId())\n+            .flatMapCompletable(entity -> markFeatureDeleted(entity, mutation))\n+            .subscribeOn(schedulers.io());\n       default:\n         throw LocalDataStoreException.unknownMutationType(mutation.getType());\n     }\n   }\n \n+  private CompletableSource markFeatureDeleted(\n+      FeatureEntity featureEntity, FeatureMutation mutation) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e58c77259e194e162f55dcfba6f2a4df8444899"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTU5MjU2Mg==", "bodyText": "Done c210b45", "url": "https://github.com/google/ground-android/pull/552#discussion_r459592562", "createdAt": "2020-07-23T16:55:41Z", "author": {"login": "shobhitagarwal1612"}, "path": "gnd/src/main/java/com/google/android/gnd/persistence/local/room/RoomLocalDataStore.java", "diffHunk": "@@ -387,17 +388,42 @@ private Completable apply(FeatureMutation mutation) throws LocalDataStoreExcepti\n       case CREATE:\n         return getUser(mutation.getUserId())\n             .flatMapCompletable(user -> insertOrUpdateFeature(mutation, user));\n+      case DELETE:\n+        return featureDao\n+            .findById(mutation.getFeatureId())\n+            .flatMapCompletable(entity -> markFeatureDeleted(entity, mutation))\n+            .subscribeOn(schedulers.io());\n       default:\n         throw LocalDataStoreException.unknownMutationType(mutation.getType());\n     }\n   }\n \n+  private CompletableSource markFeatureDeleted(\n+      FeatureEntity featureEntity, FeatureMutation mutation) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTQyMDIwMQ=="}, "originalCommit": {"oid": "1e58c77259e194e162f55dcfba6f2a4df8444899"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2NzE0Nzc4OnYy", "diffSide": "RIGHT", "path": "gnd/src/main/java/com/google/android/gnd/persistence/local/room/RoomLocalDataStore.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxMjo0NTo1OFrOG2I1Tg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxNjo1NDo1OVrOG2TRvg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTQyMTAwNg==", "bodyText": "Can this steam be simplified by starting it with the call to featureDao.update?", "url": "https://github.com/google/ground-android/pull/552#discussion_r459421006", "createdAt": "2020-07-23T12:45:58Z", "author": {"login": "gino-m"}, "path": "gnd/src/main/java/com/google/android/gnd/persistence/local/room/RoomLocalDataStore.java", "diffHunk": "@@ -387,17 +388,42 @@ private Completable apply(FeatureMutation mutation) throws LocalDataStoreExcepti\n       case CREATE:\n         return getUser(mutation.getUserId())\n             .flatMapCompletable(user -> insertOrUpdateFeature(mutation, user));\n+      case DELETE:\n+        return featureDao\n+            .findById(mutation.getFeatureId())\n+            .flatMapCompletable(entity -> markFeatureDeleted(entity, mutation))\n+            .subscribeOn(schedulers.io());\n       default:\n         throw LocalDataStoreException.unknownMutationType(mutation.getType());\n     }\n   }\n \n+  private CompletableSource markFeatureDeleted(\n+      FeatureEntity featureEntity, FeatureMutation mutation) {\n+    return Single.just(featureEntity)\n+        .doOnSubscribe(__ -> Timber.d(\"Marking feature as deleted : %s\", mutation))\n+        .map(entity -> entity.toBuilder().setState(EntityState.DELETED).build())\n+        .flatMap(entity -> featureDao.update(entity))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e58c77259e194e162f55dcfba6f2a4df8444899"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTU5MjEyNg==", "bodyText": "Yep. Done 9a65f16", "url": "https://github.com/google/ground-android/pull/552#discussion_r459592126", "createdAt": "2020-07-23T16:54:59Z", "author": {"login": "shobhitagarwal1612"}, "path": "gnd/src/main/java/com/google/android/gnd/persistence/local/room/RoomLocalDataStore.java", "diffHunk": "@@ -387,17 +388,42 @@ private Completable apply(FeatureMutation mutation) throws LocalDataStoreExcepti\n       case CREATE:\n         return getUser(mutation.getUserId())\n             .flatMapCompletable(user -> insertOrUpdateFeature(mutation, user));\n+      case DELETE:\n+        return featureDao\n+            .findById(mutation.getFeatureId())\n+            .flatMapCompletable(entity -> markFeatureDeleted(entity, mutation))\n+            .subscribeOn(schedulers.io());\n       default:\n         throw LocalDataStoreException.unknownMutationType(mutation.getType());\n     }\n   }\n \n+  private CompletableSource markFeatureDeleted(\n+      FeatureEntity featureEntity, FeatureMutation mutation) {\n+    return Single.just(featureEntity)\n+        .doOnSubscribe(__ -> Timber.d(\"Marking feature as deleted : %s\", mutation))\n+        .map(entity -> entity.toBuilder().setState(EntityState.DELETED).build())\n+        .flatMap(entity -> featureDao.update(entity))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTQyMTAwNg=="}, "originalCommit": {"oid": "1e58c77259e194e162f55dcfba6f2a4df8444899"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2NzE1NDUxOnYy", "diffSide": "RIGHT", "path": "gnd/src/main/java/com/google/android/gnd/persistence/local/room/dao/FeatureDao.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxMjo0Nzo0OFrOG2I5cg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxNjo1NDozNlrOG2TQzQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTQyMjA2Ng==", "bodyText": "Can you refer to the static constant here for state 1 instead? You should be able to concat it to the string with +.", "url": "https://github.com/google/ground-android/pull/552#discussion_r459422066", "createdAt": "2020-07-23T12:47:48Z", "author": {"login": "gino-m"}, "path": "gnd/src/main/java/com/google/android/gnd/persistence/local/room/dao/FeatureDao.java", "diffHunk": "@@ -26,7 +26,7 @@\n /** Provides low-level read/write operations of {@link FeatureEntity} to/from the local db. */\n @Dao\n public interface FeatureDao extends BaseDao<FeatureEntity> {\n-  @Query(\"SELECT * FROM feature WHERE project_id = :projectId\")\n+  @Query(\"SELECT * FROM feature WHERE project_id = :projectId AND state = 1\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e58c77259e194e162f55dcfba6f2a4df8444899"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTU5MTg4NQ==", "bodyText": "String concatenation can't be used. So, instead I passed the state value as a parameter.\n1d04039", "url": "https://github.com/google/ground-android/pull/552#discussion_r459591885", "createdAt": "2020-07-23T16:54:36Z", "author": {"login": "shobhitagarwal1612"}, "path": "gnd/src/main/java/com/google/android/gnd/persistence/local/room/dao/FeatureDao.java", "diffHunk": "@@ -26,7 +26,7 @@\n /** Provides low-level read/write operations of {@link FeatureEntity} to/from the local db. */\n @Dao\n public interface FeatureDao extends BaseDao<FeatureEntity> {\n-  @Query(\"SELECT * FROM feature WHERE project_id = :projectId\")\n+  @Query(\"SELECT * FROM feature WHERE project_id = :projectId AND state = 1\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTQyMjA2Ng=="}, "originalCommit": {"oid": "1e58c77259e194e162f55dcfba6f2a4df8444899"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2Nzg4MzI0OnYy", "diffSide": "RIGHT", "path": "gnd/src/main/java/com/google/android/gnd/persistence/remote/firestore/schema/FeatureDocumentReference.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxNTozMDozOFrOG2P_WQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxNTozMDozOFrOG2P_WQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTUzODI2NQ==", "bodyText": "Please add GitHub issue no to TODO, e.g. TODO(#123).", "url": "https://github.com/google/ground-android/pull/552#discussion_r459538265", "createdAt": "2020-07-23T15:30:38Z", "author": {"login": "gino-m"}, "path": "gnd/src/main/java/com/google/android/gnd/persistence/remote/firestore/schema/FeatureDocumentReference.java", "diffHunk": "@@ -35,7 +35,9 @@ public void addMutationToBatch(FeatureMutation mutation, User user, WriteBatch b\n         merge(FeatureMutationConverter.toMap(mutation, user), batch);\n         break;\n       case DELETE:\n-        // TODO: Implement me!\n+        // TODO: Also delete all remote observations linked to this feature.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e58c77259e194e162f55dcfba6f2a4df8444899"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2NzkwNzAyOnYy", "diffSide": "RIGHT", "path": "gnd/src/main/java/com/google/android/gnd/persistence/sync/LocalMutationSyncWorker.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxNTozNTo1OFrOG2QOCA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxNjo1MzozOFrOG2TOsA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTU0MjAyNA==", "bodyText": "The naming of this method is a bit misleading; it actually filters out delete mutations and applies them to the local db. To make this clearer, I think we could do something like the following:\n  private Completable processMutations(ImmutableList<Mutation> mutations, User user) {\n    return remoteDataStore\n        .applyMutations(mutations, user)\n        .andThen(localDataStore.finalizeMutations(mutations));\n  }\n\nThen from LocalDataStore.finalizePendingMutations  we could finalizeDeletions and removePending, both in LocalDataStore. Wdyt?", "url": "https://github.com/google/ground-android/pull/552#discussion_r459542024", "createdAt": "2020-07-23T15:35:58Z", "author": {"login": "gino-m"}, "path": "gnd/src/main/java/com/google/android/gnd/persistence/sync/LocalMutationSyncWorker.java", "diffHunk": "@@ -112,17 +113,26 @@ private Completable processMutations(ImmutableList<Mutation> mutations, String u\n   private Completable processMutations(ImmutableList<Mutation> mutations, User user) {\n     return remoteDataStore\n         .applyMutations(mutations, user)\n-        .andThen(deleteObservationIfRemovedRemotely(mutations))\n+        .andThen(deleteObservationOrFeature(mutations))\n         .andThen(localDataStore.removePendingMutations(mutations));\n   }\n \n   // TODO: If the remote sync fails, reset the state to DEFAULT.\n-  private Completable deleteObservationIfRemovedRemotely(ImmutableList<Mutation> mutations) {\n+  private Completable deleteObservationOrFeature(ImmutableList<Mutation> mutations) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e58c77259e194e162f55dcfba6f2a4df8444899"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTU5MTM0NA==", "bodyText": "Thanks! This makes so much sense now\n05b7f5b", "url": "https://github.com/google/ground-android/pull/552#discussion_r459591344", "createdAt": "2020-07-23T16:53:38Z", "author": {"login": "shobhitagarwal1612"}, "path": "gnd/src/main/java/com/google/android/gnd/persistence/sync/LocalMutationSyncWorker.java", "diffHunk": "@@ -112,17 +113,26 @@ private Completable processMutations(ImmutableList<Mutation> mutations, String u\n   private Completable processMutations(ImmutableList<Mutation> mutations, User user) {\n     return remoteDataStore\n         .applyMutations(mutations, user)\n-        .andThen(deleteObservationIfRemovedRemotely(mutations))\n+        .andThen(deleteObservationOrFeature(mutations))\n         .andThen(localDataStore.removePendingMutations(mutations));\n   }\n \n   // TODO: If the remote sync fails, reset the state to DEFAULT.\n-  private Completable deleteObservationIfRemovedRemotely(ImmutableList<Mutation> mutations) {\n+  private Completable deleteObservationOrFeature(ImmutableList<Mutation> mutations) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTU0MjAyNA=="}, "originalCommit": {"oid": "1e58c77259e194e162f55dcfba6f2a4df8444899"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2Nzk0MDUyOnYy", "diffSide": "RIGHT", "path": "gnd/src/main/java/com/google/android/gnd/ui/home/HomeScreenFragment.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxNTo0Mzo1MFrOG2Qi9g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxNDo1ODozMFrOG2yslg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTU0NzM4Mg==", "bodyText": "With autoDisposable() used here, I believe it will scope the subscription to the entire lifecycle of the HomeScreenFragment. These will accumulate as long as the home screen remains open.\nTo fix this, you can create a PublishProcessor deleteFeatureRequests in the VM which you could populate with feature id on each deletion request. That stream would then be flatMapped to the actual feature deletion observable, the resulting stream exposed as a stream of SingleEvent that is subscribed to in one of the create methods of this class. Wdyt?", "url": "https://github.com/google/ground-android/pull/552#discussion_r459547382", "createdAt": "2020-07-23T15:43:50Z", "author": {"login": "gino-m"}, "path": "gnd/src/main/java/com/google/android/gnd/ui/home/HomeScreenFragment.java", "diffHunk": "@@ -232,10 +236,25 @@ private void closeDrawer() {\n   }\n \n   @Override\n-  public void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {\n+  public void onCreateOptionsMenu(@NonNull Menu menu, MenuInflater inflater) {\n     inflater.inflate(R.menu.feature_sheet_menu, menu);\n   }\n \n+  @Override\n+  public boolean onOptionsItemSelected(@NonNull MenuItem item) {\n+    switch (item.getItemId()) {\n+      case R.id.move_feature_menu_item:\n+        // TODO\n+        return false;\n+      case R.id.delete_feature_menu_item:\n+        // TODO: Re-position map to default location after successful deletion.\n+        viewModel.deleteActiveFeature().as(autoDisposable(this)).subscribe(this::hideBottomSheet);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e58c77259e194e162f55dcfba6f2a4df8444899"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDEwNjkwMg==", "bodyText": "Done. Thanks", "url": "https://github.com/google/ground-android/pull/552#discussion_r460106902", "createdAt": "2020-07-24T14:58:30Z", "author": {"login": "shobhitagarwal1612"}, "path": "gnd/src/main/java/com/google/android/gnd/ui/home/HomeScreenFragment.java", "diffHunk": "@@ -232,10 +236,25 @@ private void closeDrawer() {\n   }\n \n   @Override\n-  public void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {\n+  public void onCreateOptionsMenu(@NonNull Menu menu, MenuInflater inflater) {\n     inflater.inflate(R.menu.feature_sheet_menu, menu);\n   }\n \n+  @Override\n+  public boolean onOptionsItemSelected(@NonNull MenuItem item) {\n+    switch (item.getItemId()) {\n+      case R.id.move_feature_menu_item:\n+        // TODO\n+        return false;\n+      case R.id.delete_feature_menu_item:\n+        // TODO: Re-position map to default location after successful deletion.\n+        viewModel.deleteActiveFeature().as(autoDisposable(this)).subscribe(this::hideBottomSheet);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTU0NzM4Mg=="}, "originalCommit": {"oid": "1e58c77259e194e162f55dcfba6f2a4df8444899"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2Nzk0MjUxOnYy", "diffSide": "RIGHT", "path": "gnd/src/main/java/com/google/android/gnd/ui/home/HomeScreenViewModel.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxNTo0NDoxOFrOG2QkOg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxNjo1Njo0M1rOG2TV6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTU0NzcwNg==", "bodyText": "Why do we remove the current user here?", "url": "https://github.com/google/ground-android/pull/552#discussion_r459547706", "createdAt": "2020-07-23T15:44:18Z", "author": {"login": "gino-m"}, "path": "gnd/src/main/java/com/google/android/gnd/ui/home/HomeScreenViewModel.java", "diffHunk": "@@ -80,7 +78,7 @@\n             .switchMapSingle(\n                 newFeature ->\n                     featureRepository\n-                        .saveFeature(newFeature, authManager.getCurrentUser())\n+                        .saveFeature(newFeature)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e58c77259e194e162f55dcfba6f2a4df8444899"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTU5MzE5Mw==", "bodyText": "AuthenticationManager is now moved to FeatureRepository for simplicity.", "url": "https://github.com/google/ground-android/pull/552#discussion_r459593193", "createdAt": "2020-07-23T16:56:43Z", "author": {"login": "shobhitagarwal1612"}, "path": "gnd/src/main/java/com/google/android/gnd/ui/home/HomeScreenViewModel.java", "diffHunk": "@@ -80,7 +78,7 @@\n             .switchMapSingle(\n                 newFeature ->\n                     featureRepository\n-                        .saveFeature(newFeature, authManager.getCurrentUser())\n+                        .saveFeature(newFeature)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTU0NzcwNg=="}, "originalCommit": {"oid": "1e58c77259e194e162f55dcfba6f2a4df8444899"}, "originalPosition": 52}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2OTM5NjMzOnYy", "diffSide": "RIGHT", "path": "gnd/src/main/java/com/google/android/gnd/persistence/local/room/RoomLocalDataStore.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QyMzoxMzowN1rOG2ennw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxNDo1ODozOFrOG2ys6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTc3Nzk1MQ==", "bodyText": "@Transaction doesn't apply to Firebase, which uses it's own API (db.runTransaction) to batch writings. Please remove here and throughout.", "url": "https://github.com/google/ground-android/pull/552#discussion_r459777951", "createdAt": "2020-07-23T23:13:07Z", "author": {"login": "gino-m"}, "path": "gnd/src/main/java/com/google/android/gnd/persistence/local/room/RoomLocalDataStore.java", "diffHunk": "@@ -333,9 +335,29 @@ public Completable updateMutations(ImmutableList<Mutation> mutations) {\n         .collect(toImmutableList());\n   }\n \n-  @Transaction\n   @Override\n-  public Completable removePendingMutations(ImmutableList<Mutation> mutations) {\n+  public Completable finalizePendingMutations(ImmutableList<Mutation> mutations) {\n+    return finalizeDeletions(mutations).andThen(removePending(mutations));\n+  }\n+\n+  @Transaction", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba945002a8895c2c45b14076219effe556ecbe09"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDEwNjk4NQ==", "bodyText": "Done", "url": "https://github.com/google/ground-android/pull/552#discussion_r460106985", "createdAt": "2020-07-24T14:58:38Z", "author": {"login": "shobhitagarwal1612"}, "path": "gnd/src/main/java/com/google/android/gnd/persistence/local/room/RoomLocalDataStore.java", "diffHunk": "@@ -333,9 +335,29 @@ public Completable updateMutations(ImmutableList<Mutation> mutations) {\n         .collect(toImmutableList());\n   }\n \n-  @Transaction\n   @Override\n-  public Completable removePendingMutations(ImmutableList<Mutation> mutations) {\n+  public Completable finalizePendingMutations(ImmutableList<Mutation> mutations) {\n+    return finalizeDeletions(mutations).andThen(removePending(mutations));\n+  }\n+\n+  @Transaction", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTc3Nzk1MQ=="}, "originalCommit": {"oid": "ba945002a8895c2c45b14076219effe556ecbe09"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2OTM5NzE3OnYy", "diffSide": "RIGHT", "path": "gnd/src/main/java/com/google/android/gnd/persistence/local/room/RoomLocalDataStore.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QyMzoxMzozNVrOG2eoFw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QyMjoyMjozOFrOG31qvQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTc3ODA3MQ==", "bodyText": "Perhaps Timber.t would be more appropriate here (or remove altogether).", "url": "https://github.com/google/ground-android/pull/552#discussion_r459778071", "createdAt": "2020-07-23T23:13:35Z", "author": {"login": "gino-m"}, "path": "gnd/src/main/java/com/google/android/gnd/persistence/local/room/RoomLocalDataStore.java", "diffHunk": "@@ -401,17 +423,40 @@ private Completable apply(FeatureMutation mutation) throws LocalDataStoreExcepti\n       case CREATE:\n         return getUser(mutation.getUserId())\n             .flatMapCompletable(user -> insertOrUpdateFeature(mutation, user));\n+      case DELETE:\n+        return featureDao\n+            .findById(mutation.getFeatureId())\n+            .flatMapCompletable(entity -> markFeatureForDeletion(entity, mutation))\n+            .subscribeOn(schedulers.io());\n       default:\n         throw LocalDataStoreException.unknownMutationType(mutation.getType());\n     }\n   }\n \n+  private CompletableSource markFeatureForDeletion(FeatureEntity entity, FeatureMutation mutation) {\n+    return featureDao\n+        .update(entity.toBuilder().setState(EntityState.DELETED).build())\n+        .doOnSubscribe(__ -> Timber.d(\"Marking feature as deleted : %s\", mutation))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba945002a8895c2c45b14076219effe556ecbe09"}, "originalPosition": 83}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDEwMDUxNA==", "bodyText": "Timber.t doesn't exist. Were you referring to info level?", "url": "https://github.com/google/ground-android/pull/552#discussion_r460100514", "createdAt": "2020-07-24T14:48:24Z", "author": {"login": "shobhitagarwal1612"}, "path": "gnd/src/main/java/com/google/android/gnd/persistence/local/room/RoomLocalDataStore.java", "diffHunk": "@@ -401,17 +423,40 @@ private Completable apply(FeatureMutation mutation) throws LocalDataStoreExcepti\n       case CREATE:\n         return getUser(mutation.getUserId())\n             .flatMapCompletable(user -> insertOrUpdateFeature(mutation, user));\n+      case DELETE:\n+        return featureDao\n+            .findById(mutation.getFeatureId())\n+            .flatMapCompletable(entity -> markFeatureForDeletion(entity, mutation))\n+            .subscribeOn(schedulers.io());\n       default:\n         throw LocalDataStoreException.unknownMutationType(mutation.getType());\n     }\n   }\n \n+  private CompletableSource markFeatureForDeletion(FeatureEntity entity, FeatureMutation mutation) {\n+    return featureDao\n+        .update(entity.toBuilder().setState(EntityState.DELETED).build())\n+        .doOnSubscribe(__ -> Timber.d(\"Marking feature as deleted : %s\", mutation))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTc3ODA3MQ=="}, "originalCommit": {"oid": "ba945002a8895c2c45b14076219effe556ecbe09"}, "originalPosition": 83}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTIwNDE1Nw==", "bodyText": "Sorry, I didn't realize there wasn't a \"trace\" log level with Timber. Please disregard.", "url": "https://github.com/google/ground-android/pull/552#discussion_r461204157", "createdAt": "2020-07-27T22:22:38Z", "author": {"login": "gino-m"}, "path": "gnd/src/main/java/com/google/android/gnd/persistence/local/room/RoomLocalDataStore.java", "diffHunk": "@@ -401,17 +423,40 @@ private Completable apply(FeatureMutation mutation) throws LocalDataStoreExcepti\n       case CREATE:\n         return getUser(mutation.getUserId())\n             .flatMapCompletable(user -> insertOrUpdateFeature(mutation, user));\n+      case DELETE:\n+        return featureDao\n+            .findById(mutation.getFeatureId())\n+            .flatMapCompletable(entity -> markFeatureForDeletion(entity, mutation))\n+            .subscribeOn(schedulers.io());\n       default:\n         throw LocalDataStoreException.unknownMutationType(mutation.getType());\n     }\n   }\n \n+  private CompletableSource markFeatureForDeletion(FeatureEntity entity, FeatureMutation mutation) {\n+    return featureDao\n+        .update(entity.toBuilder().setState(EntityState.DELETED).build())\n+        .doOnSubscribe(__ -> Timber.d(\"Marking feature as deleted : %s\", mutation))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTc3ODA3MQ=="}, "originalCommit": {"oid": "ba945002a8895c2c45b14076219effe556ecbe09"}, "originalPosition": 83}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2OTM5ODEyOnYy", "diffSide": "RIGHT", "path": "gnd/src/main/java/com/google/android/gnd/persistence/local/room/RoomLocalDataStore.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QyMzoxNDowMlrOG2eomg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QyMzoxNDowMlrOG2eomg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTc3ODIwMg==", "bodyText": "This can return Completable instead.", "url": "https://github.com/google/ground-android/pull/552#discussion_r459778202", "createdAt": "2020-07-23T23:14:02Z", "author": {"login": "gino-m"}, "path": "gnd/src/main/java/com/google/android/gnd/persistence/local/room/RoomLocalDataStore.java", "diffHunk": "@@ -401,17 +423,40 @@ private Completable apply(FeatureMutation mutation) throws LocalDataStoreExcepti\n       case CREATE:\n         return getUser(mutation.getUserId())\n             .flatMapCompletable(user -> insertOrUpdateFeature(mutation, user));\n+      case DELETE:\n+        return featureDao\n+            .findById(mutation.getFeatureId())\n+            .flatMapCompletable(entity -> markFeatureForDeletion(entity, mutation))\n+            .subscribeOn(schedulers.io());\n       default:\n         throw LocalDataStoreException.unknownMutationType(mutation.getType());\n     }\n   }\n \n+  private CompletableSource markFeatureForDeletion(FeatureEntity entity, FeatureMutation mutation) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba945002a8895c2c45b14076219effe556ecbe09"}, "originalPosition": 80}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2OTM5ODM0OnYy", "diffSide": "RIGHT", "path": "gnd/src/main/java/com/google/android/gnd/persistence/local/room/RoomLocalDataStore.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QyMzoxNDowOVrOG2eouA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QyMzoxNDowOVrOG2eouA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTc3ODIzMg==", "bodyText": "Same here.", "url": "https://github.com/google/ground-android/pull/552#discussion_r459778232", "createdAt": "2020-07-23T23:14:09Z", "author": {"login": "gino-m"}, "path": "gnd/src/main/java/com/google/android/gnd/persistence/local/room/RoomLocalDataStore.java", "diffHunk": "@@ -401,17 +423,40 @@ private Completable apply(FeatureMutation mutation) throws LocalDataStoreExcepti\n       case CREATE:\n         return getUser(mutation.getUserId())\n             .flatMapCompletable(user -> insertOrUpdateFeature(mutation, user));\n+      case DELETE:\n+        return featureDao\n+            .findById(mutation.getFeatureId())\n+            .flatMapCompletable(entity -> markFeatureForDeletion(entity, mutation))\n+            .subscribeOn(schedulers.io());\n       default:\n         throw LocalDataStoreException.unknownMutationType(mutation.getType());\n     }\n   }\n \n+  private CompletableSource markFeatureForDeletion(FeatureEntity entity, FeatureMutation mutation) {\n+    return featureDao\n+        .update(entity.toBuilder().setState(EntityState.DELETED).build())\n+        .doOnSubscribe(__ -> Timber.d(\"Marking feature as deleted : %s\", mutation))\n+        .ignoreElement()\n+        .subscribeOn(schedulers.io());\n+  }\n+\n   private Completable insertOrUpdateFeature(FeatureMutation mutation, User user) {\n     return featureDao\n         .insertOrUpdate(FeatureEntity.fromMutation(mutation, AuditInfo.now(user)))\n         .subscribeOn(schedulers.io());\n   }\n \n+  @Override\n+  public Completable deleteFeature(String featureId) {\n+    return featureDao\n+        .findById(featureId)\n+        .toSingle()\n+        .doOnSubscribe(__ -> Timber.d(\"Deleting local feature : %s\", featureId))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba945002a8895c2c45b14076219effe556ecbe09"}, "originalPosition": 99}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2OTM5OTgwOnYy", "diffSide": "RIGHT", "path": "gnd/src/main/java/com/google/android/gnd/persistence/local/room/RoomLocalDataStore.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QyMzoxNDo1MFrOG2epiQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QyMzoxNDo1MFrOG2epiQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTc3ODQ0MQ==", "bodyText": "No need to change the subscribeOn thread inside private methods; it only needs to be done in the main entry point of each operation, the setting propagates to the rest of the stream.", "url": "https://github.com/google/ground-android/pull/552#discussion_r459778441", "createdAt": "2020-07-23T23:14:50Z", "author": {"login": "gino-m"}, "path": "gnd/src/main/java/com/google/android/gnd/persistence/local/room/RoomLocalDataStore.java", "diffHunk": "@@ -401,17 +423,40 @@ private Completable apply(FeatureMutation mutation) throws LocalDataStoreExcepti\n       case CREATE:\n         return getUser(mutation.getUserId())\n             .flatMapCompletable(user -> insertOrUpdateFeature(mutation, user));\n+      case DELETE:\n+        return featureDao\n+            .findById(mutation.getFeatureId())\n+            .flatMapCompletable(entity -> markFeatureForDeletion(entity, mutation))\n+            .subscribeOn(schedulers.io());\n       default:\n         throw LocalDataStoreException.unknownMutationType(mutation.getType());\n     }\n   }\n \n+  private CompletableSource markFeatureForDeletion(FeatureEntity entity, FeatureMutation mutation) {\n+    return featureDao\n+        .update(entity.toBuilder().setState(EntityState.DELETED).build())\n+        .doOnSubscribe(__ -> Timber.d(\"Marking feature as deleted : %s\", mutation))\n+        .ignoreElement()\n+        .subscribeOn(schedulers.io());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba945002a8895c2c45b14076219effe556ecbe09"}, "originalPosition": 85}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2OTQwMjMwOnYy", "diffSide": "RIGHT", "path": "gnd/src/main/java/com/google/android/gnd/persistence/local/room/dao/FeatureDao.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QyMzoxNTo1OVrOG2erCA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QyMzoxNTo1OVrOG2erCA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTc3ODgyNA==", "bodyText": "Using our convention in the Wiki, should should be called findOnceAndStream (or findByProjectIdAndEntityStateOnceAndStream, but that seems excessive).", "url": "https://github.com/google/ground-android/pull/552#discussion_r459778824", "createdAt": "2020-07-23T23:15:59Z", "author": {"login": "gino-m"}, "path": "gnd/src/main/java/com/google/android/gnd/persistence/local/room/dao/FeatureDao.java", "diffHunk": "@@ -19,15 +19,16 @@\n import androidx.room.Dao;\n import androidx.room.Query;\n import com.google.android.gnd.persistence.local.room.entity.FeatureEntity;\n+import com.google.android.gnd.persistence.local.room.models.EntityState;\n import io.reactivex.Flowable;\n import io.reactivex.Maybe;\n import java.util.List;\n \n /** Provides low-level read/write operations of {@link FeatureEntity} to/from the local db. */\n @Dao\n public interface FeatureDao extends BaseDao<FeatureEntity> {\n-  @Query(\"SELECT * FROM feature WHERE project_id = :projectId\")\n-  Flowable<List<FeatureEntity>> findByProjectIdStream(String projectId);\n+  @Query(\"SELECT * FROM feature WHERE project_id = :projectId AND state = :state\")\n+  Flowable<List<FeatureEntity>> findByProjectIdStream(String projectId, EntityState state);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba945002a8895c2c45b14076219effe556ecbe09"}, "originalPosition": 15}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2512, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}