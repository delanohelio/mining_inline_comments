{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAxMzg0MDgy", "number": 581, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQxMzo1MjowN1rOEspD8Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QyMjozOTozNFrOEtP-Gw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1MjQ1NTUzOnYy", "diffSide": "RIGHT", "path": "gnd/src/main/res/values/strings.xml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQxMzo1MjowN1rOHf_q_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQxMzo1MjowN1rOHf_q_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzMxMTEwMA==", "bodyText": "So far we've been using \"point\" elsewhere, and you technically can't reposition a location, so let's stick to \"point\".\nAlso, I think \"Move point\" might be more easily understood and less technical-sounding than \"Reposition\". Sorry I didn't mention this earlier.", "url": "https://github.com/google/ground-android/pull/581#discussion_r503311100", "createdAt": "2020-10-12T13:52:07Z", "author": {"login": "gino-m"}, "path": "gnd/src/main/res/values/strings.xml", "diffHunk": "@@ -159,4 +159,6 @@\n   <string name=\"offline_area_download_started\">Download started.</string>\n   <string name=\"offline_area_download_failed\">Couldn\\'t download area.</string>\n   <string name=\"added_by\">Added by %s</string>\n+  <string name=\"reposition_location\">Do you want to reposition to this location?</string>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3089b7ee82120fbed6cef5d3f09deb908adbc3d7"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1MjQ2MDMxOnYy", "diffSide": "RIGHT", "path": "gnd/src/main/java/com/google/android/gnd/ui/home/mapcontainer/MapContainerViewModel.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQxMzo1MzoxM1rOHf_t2A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQxMzo1MzoxM1rOHf_t2A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzMxMTgzMg==", "bodyText": "Is this the currently selected feature? If so we should call it as such to be clear.\nAlso, since the selected feature is accessible via public methods, let's use Optional<> instead of nullable to expose that API.", "url": "https://github.com/google/ground-android/pull/581#discussion_r503311832", "createdAt": "2020-10-12T13:53:13Z", "author": {"login": "gino-m"}, "path": "gnd/src/main/java/com/google/android/gnd/ui/home/mapcontainer/MapContainerViewModel.java", "diffHunk": "@@ -63,14 +65,18 @@\n   private final FeatureRepository featureRepository;\n   private final Subject<Boolean> locationLockChangeRequests;\n   private final Subject<CameraUpdate> cameraUpdateSubject;\n+  private final MutableLiveData<Mode> viewMode = new MutableLiveData<>(Mode.DEFAULT);\n   private final MutableLiveData<Event<Nil>> showMapTypeSelectorRequests = new MutableLiveData<>();\n   private final LiveData<ImmutableSet<String>> mbtilesFilePaths;\n+\n   // TODO: Create our own wrapper/interface for MbTiles providers\n   // The impl we're using unfortunately requires calling a `close` method explicitly\n   // to clean up provider resources; `close` however, is not defined by the `TileProvider`\n   // interface, preventing us from treating providers generically.\n   private final List<MapBoxOfflineTileProvider> tileProviders = new ArrayList<>();\n \n+  @Nullable private Feature feature;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3089b7ee82120fbed6cef5d3f09deb908adbc3d7"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1MjQ3MTc1OnYy", "diffSide": "RIGHT", "path": "gnd/src/main/java/com/google/android/gnd/ui/home/mapcontainer/MapContainerFragment.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQxMzo1NTo1MlrOHf_0yQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQxMzo1NTo1MlrOHf_0yQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzMxMzYwOQ==", "bodyText": "Rather than setting the visibility or other dynamic states of view explicitly, we've started moving towards using data bindings on ViewModel. Would it be possible to expose the visibility of these elements in the corresponding ViewModel and binding to them in the layout XML?", "url": "https://github.com/google/ground-android/pull/581#discussion_r503313609", "createdAt": "2020-10-12T13:55:52Z", "author": {"login": "gino-m"}, "path": "gnd/src/main/java/com/google/android/gnd/ui/home/mapcontainer/MapContainerFragment.java", "diffHunk": "@@ -131,6 +135,32 @@ public void onViewCreated(@NonNull View view, @Nullable Bundle savedInstanceStat\n     mapContainerViewModel\n         .getShowMapTypeSelectorRequests()\n         .observe(getViewLifecycleOwner(), __ -> showMapTypeSelectorDialog());\n+    mapContainerViewModel.getViewMode().observe(getViewLifecycleOwner(), this::updateUI);\n+  }\n+\n+  private void updateUI(Mode mode) {\n+    switch (mode) {\n+      case DEFAULT:\n+        binding.mapTypeBtn.setVisibility(View.VISIBLE);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3089b7ee82120fbed6cef5d3f09deb908adbc3d7"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1MjQ3NzEwOnYy", "diffSide": "RIGHT", "path": "gnd/src/main/java/com/google/android/gnd/ui/home/HomeScreenViewModel.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQxMzo1NzowNFrOHf_4Bg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQxMzo1NzowNFrOHf_4Bg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzMxNDQzOA==", "bodyText": "Why do we only take the first feature in the map here?", "url": "https://github.com/google/ground-android/pull/581#discussion_r503314438", "createdAt": "2020-10-12T13:57:04Z", "author": {"login": "gino-m"}, "path": "gnd/src/main/java/com/google/android/gnd/ui/home/HomeScreenViewModel.java", "diffHunk": "@@ -95,6 +101,27 @@\n         LiveDataReactiveStreams.fromPublisher(\n             deleteFeatureRequests.switchMapSingle(\n                 __ -> deleteActiveFeature().toSingleDefault(true).onErrorReturnItem(false)));\n+\n+    updateFeature =\n+        LiveDataReactiveStreams.fromPublisher(\n+            updateFeatureRequests.switchMapSingle(\n+                map -> updateFeaturePosition(map).toSingleDefault(true).onErrorReturnItem(false)));\n+  }\n+\n+  public void updateFeature(Feature feature, Point point) {\n+    HashMap<Feature, Point> map = new HashMap<>();\n+    map.put(feature, point);\n+    updateFeatureRequests.onNext(map);\n+  }\n+\n+  public LiveData<Boolean> getUpdateFeature() {\n+    return updateFeature;\n+  }\n+\n+  private Completable updateFeaturePosition(Map<Feature, Point> map) {\n+    Feature feature = map.keySet().iterator().next();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3089b7ee82120fbed6cef5d3f09deb908adbc3d7"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1ODgyMjk1OnYy", "diffSide": "RIGHT", "path": "gnd/src/main/java/com/google/android/gnd/ui/home/HomeScreenViewModel.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QyMjozNjoyOFrOHg741A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QyMjozNjoyOFrOHg741A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDI5NzY4NA==", "bodyText": "Please use ImmutableMap to ensure it can't be modified while in the stream.", "url": "https://github.com/google/ground-android/pull/581#discussion_r504297684", "createdAt": "2020-10-13T22:36:28Z", "author": {"login": "gino-m"}, "path": "gnd/src/main/java/com/google/android/gnd/ui/home/HomeScreenViewModel.java", "diffHunk": "@@ -95,6 +102,27 @@\n         LiveDataReactiveStreams.fromPublisher(\n             deleteFeatureRequests.switchMapSingle(\n                 __ -> deleteActiveFeature().toSingleDefault(true).onErrorReturnItem(false)));\n+\n+    updateFeature =\n+        LiveDataReactiveStreams.fromPublisher(\n+            updateFeatureRequests.switchMapSingle(\n+                map -> updateFeaturePosition(map).toSingleDefault(true).onErrorReturnItem(false)));\n+  }\n+\n+  public void updateFeature(Feature feature, Point point) {\n+    HashMap<Feature, Point> map = new HashMap<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff0de0b2536dba8b440e3257c81f829dcbf6be78"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1ODgyNzc1OnYy", "diffSide": "RIGHT", "path": "gnd/src/main/java/com/google/android/gnd/ui/home/HomeScreenViewModel.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QyMjozODozMlrOHg77kg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QyMjozODozMlrOHg77kg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDI5ODM4Ng==", "bodyText": "Why is this a Map and not just two args? If it's because you wanted to avoid a custom class to bind Feature and Point, you can just use the Feature with the updated position.", "url": "https://github.com/google/ground-android/pull/581#discussion_r504298386", "createdAt": "2020-10-13T22:38:32Z", "author": {"login": "gino-m"}, "path": "gnd/src/main/java/com/google/android/gnd/ui/home/HomeScreenViewModel.java", "diffHunk": "@@ -95,6 +102,27 @@\n         LiveDataReactiveStreams.fromPublisher(\n             deleteFeatureRequests.switchMapSingle(\n                 __ -> deleteActiveFeature().toSingleDefault(true).onErrorReturnItem(false)));\n+\n+    updateFeature =\n+        LiveDataReactiveStreams.fromPublisher(\n+            updateFeatureRequests.switchMapSingle(\n+                map -> updateFeaturePosition(map).toSingleDefault(true).onErrorReturnItem(false)));\n+  }\n+\n+  public void updateFeature(Feature feature, Point point) {\n+    HashMap<Feature, Point> map = new HashMap<>();\n+    map.put(feature, point);\n+    updateFeatureRequests.onNext(map);\n+  }\n+\n+  public LiveData<Boolean> getUpdateFeature() {\n+    return updateFeature;\n+  }\n+\n+  private Completable updateFeaturePosition(Map<Feature, Point> map) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff0de0b2536dba8b440e3257c81f829dcbf6be78"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1ODgzMDM1OnYy", "diffSide": "RIGHT", "path": "gnd/src/main/java/com/google/android/gnd/ui/home/mapcontainer/MapContainerFragment.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QyMjozOTozNFrOHg79AQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QyMjozOTozNFrOHg79AQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDI5ODc1Mw==", "bodyText": "A better error might be \"No feature selected\", since it described why we might be in this state.", "url": "https://github.com/google/ground-android/pull/581#discussion_r504298753", "createdAt": "2020-10-13T22:39:34Z", "author": {"login": "gino-m"}, "path": "gnd/src/main/java/com/google/android/gnd/ui/home/mapcontainer/MapContainerFragment.java", "diffHunk": "@@ -147,12 +152,40 @@ private void onMapReady(MapAdapter map) {\n     homeScreenViewModel\n         .getBottomSheetState()\n         .observe(this, state -> onBottomSheetStateChange(state, map));\n-    binding.addFeatureBtn.setOnClickListener(\n+    binding.mapControls.addFeatureBtn.setOnClickListener(\n         __ -> homeScreenViewModel.onAddFeatureBtnClick(map.getCameraTarget()));\n+    binding.moveFeature.confirmButton.setOnClickListener(\n+        __ -> showConfirmationDialog(map.getCameraTarget()));\n+    binding.moveFeature.cancelButton.setOnClickListener(__ -> cancelRepositionMode());\n     enableLocationLockBtn();\n     mapContainerViewModel.getMbtilesFilePaths().observe(this, map::addTileOverlays);\n   }\n \n+  private void showConfirmationDialog(Point point) {\n+    new Builder(getContext())\n+        .setTitle(R.string.move_point_confirmation)\n+        .setPositiveButton(android.R.string.ok, (dialog, which) -> moveToNewPosition(point))\n+        .setNegativeButton(android.R.string.cancel, (dialog, which) -> cancelRepositionMode())\n+        .setCancelable(true)\n+        .create()\n+        .show();\n+  }\n+\n+  private void moveToNewPosition(Point point) {\n+    mapContainerViewModel\n+        .getSelectedFeature()\n+        .ifPresentOrElse(\n+            feature -> {\n+              homeScreenViewModel.updateFeature(feature, point);\n+              setDefaultMode();\n+            },\n+            () -> Timber.e(\"Feature is null, can't move to new position\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff0de0b2536dba8b440e3257c81f829dcbf6be78"}, "originalPosition": 58}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2542, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}