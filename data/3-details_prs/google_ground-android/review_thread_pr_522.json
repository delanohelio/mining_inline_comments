{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ0MjcwOTI4", "number": 522, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxODoxNTo0OFrOENARVg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQyMDowMjoxNlrOENZnUg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyMDcxMzgyOnYy", "diffSide": "RIGHT", "path": "gnd/src/main/java/com/google/android/gnd/persistence/local/LocalDataStore.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxODoxNTo0OFrOGvcgkw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQwNDoxNzo0MFrOGvpV5A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjQwMzM0Nw==", "bodyText": "Isn't this just another case of apply(ObservationMutation)? Adding a separate method would break this model, and it would mean there are many configurations of ObservationMutation that would be invalid and would need to be checked. Can we instead call the impl of this method via apply()?", "url": "https://github.com/google/ground-android/pull/522#discussion_r452403347", "createdAt": "2020-07-09T18:15:48Z", "author": {"login": "gino-m"}, "path": "gnd/src/main/java/com/google/android/gnd/persistence/local/LocalDataStore.java", "diffHunk": "@@ -80,13 +81,25 @@\n    */\n   Completable applyAndEnqueue(ObservationMutation mutation);\n \n+  /** Applies the specified {@link ObservationMutation} to the local data store.. */\n+  Completable apply(ObservationMutation mutation) throws LocalDataStoreException;\n+\n+  /** Appends the specified {@link ObservationMutation} to the local queue for remote sync. */\n+  Completable enqueue(ObservationMutation mutation);\n+\n+  /** Deletes local observation entry. */\n+  Completable deleteObservation(ObservationMutation mutation);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c5535db55bc8a564232efa57d3729263bff3a32b"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjYxMzYwNA==", "bodyText": "Done 7f6dbff", "url": "https://github.com/google/ground-android/pull/522#discussion_r452613604", "createdAt": "2020-07-10T04:17:40Z", "author": {"login": "shobhitagarwal1612"}, "path": "gnd/src/main/java/com/google/android/gnd/persistence/local/LocalDataStore.java", "diffHunk": "@@ -80,13 +81,25 @@\n    */\n   Completable applyAndEnqueue(ObservationMutation mutation);\n \n+  /** Applies the specified {@link ObservationMutation} to the local data store.. */\n+  Completable apply(ObservationMutation mutation) throws LocalDataStoreException;\n+\n+  /** Appends the specified {@link ObservationMutation} to the local queue for remote sync. */\n+  Completable enqueue(ObservationMutation mutation);\n+\n+  /** Deletes local observation entry. */\n+  Completable deleteObservation(ObservationMutation mutation);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjQwMzM0Nw=="}, "originalCommit": {"oid": "c5535db55bc8a564232efa57d3729263bff3a32b"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyMDcxNTgyOnYy", "diffSide": "RIGHT", "path": "gnd/src/main/java/com/google/android/gnd/persistence/local/room/RoomLocalDataStore.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxODoxNjoyOFrOGvch9w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQwNDoxNzoyNlrOGvpVog==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjQwMzcwMw==", "bodyText": "Can we implement this in the DAO instead?", "url": "https://github.com/google/ground-android/pull/522#discussion_r452403703", "createdAt": "2020-07-09T18:16:28Z", "author": {"login": "gino-m"}, "path": "gnd/src/main/java/com/google/android/gnd/persistence/local/room/RoomLocalDataStore.java", "diffHunk": "@@ -260,6 +261,8 @@ public Completable applyAndEnqueue(FeatureMutation mutation) {\n         .map(\n             list ->\n                 stream(list)\n+                    .filter(\n+                        observationEntity -> observationEntity.getState() != EntityState.DELETED)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c5535db55bc8a564232efa57d3729263bff3a32b"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjYxMzUzOA==", "bodyText": "Thanks for pointing out! Dao already contains a where clause for DEFAULT state", "url": "https://github.com/google/ground-android/pull/522#discussion_r452613538", "createdAt": "2020-07-10T04:17:26Z", "author": {"login": "shobhitagarwal1612"}, "path": "gnd/src/main/java/com/google/android/gnd/persistence/local/room/RoomLocalDataStore.java", "diffHunk": "@@ -260,6 +261,8 @@ public Completable applyAndEnqueue(FeatureMutation mutation) {\n         .map(\n             list ->\n                 stream(list)\n+                    .filter(\n+                        observationEntity -> observationEntity.getState() != EntityState.DELETED)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjQwMzcwMw=="}, "originalCommit": {"oid": "c5535db55bc8a564232efa57d3729263bff3a32b"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyMzkxNzUwOnYy", "diffSide": "RIGHT", "path": "gnd/src/main/java/com/google/android/gnd/persistence/local/room/RoomLocalDataStore.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQxNTowMjo1OVrOGv61yA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQxNjo1NzozNFrOGv-nmQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjkwMDI5Ng==", "bodyText": "This logic is not idempotent, which can lead to issues wrt order and timing of mutations; if you call it once, it will do something different than if you call it twice.\nIt's not clear to me when/how the second mutation to delete the entity would occur. Wouldn't it occur at a lower level, once the remote observation is actually removed (i.e. not via the mutation interface)?", "url": "https://github.com/google/ground-android/pull/522#discussion_r452900296", "createdAt": "2020-07-10T15:02:59Z", "author": {"login": "gino-m"}, "path": "gnd/src/main/java/com/google/android/gnd/persistence/local/room/RoomLocalDataStore.java", "diffHunk": "@@ -424,8 +427,25 @@ public Completable apply(ObservationMutation mutation) throws LocalDataStoreExce\n         return getUser(mutation.getUserId())\n             .flatMapCompletable(user -> updateObservation(mutation, user));\n       case DELETE:\n-        return getUser(mutation.getUserId())\n-            .flatMapCompletable(user -> markObservationDeleted(mutation));\n+        return observationDao\n+            .findById(mutation.getObservationId())\n+            .flatMapCompletable(\n+                entity -> {\n+                  // Mark the ObservationEntity as DELETED if the current state is DEFAULT.\n+                  // Otherwise, delete the observation entity from local db.\n+                  //\n+                  // TODO: If the remote sync fails, reset the state to DEFAULT.\n+                  //\n+                  // Note: Observations marked as DELETED are not shown in UI.\n+                  //       See {@link ObservationDao}\n+                  if (entity.getState() == EntityState.DEFAULT) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8260190bd6f291a516712202322b4685d3959c54"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjkzNjMyMg==", "bodyText": "I may have misinterpreted your previous comment. You mentioned that deleteObservation is another case of apply and should be called via it rather than directly. So I merged the two methods markObservationDeleted and deleteObservation under the same apply implementation.\nCurrent flow:\nmark observation as deleted -> create mutation -> remote sync (delete) -> delete local observation -> delete mutation\n@gino-m Did I make an error in understanding the comments? Please confirm.", "url": "https://github.com/google/ground-android/pull/522#discussion_r452936322", "createdAt": "2020-07-10T16:06:21Z", "author": {"login": "shobhitagarwal1612"}, "path": "gnd/src/main/java/com/google/android/gnd/persistence/local/room/RoomLocalDataStore.java", "diffHunk": "@@ -424,8 +427,25 @@ public Completable apply(ObservationMutation mutation) throws LocalDataStoreExce\n         return getUser(mutation.getUserId())\n             .flatMapCompletable(user -> updateObservation(mutation, user));\n       case DELETE:\n-        return getUser(mutation.getUserId())\n-            .flatMapCompletable(user -> markObservationDeleted(mutation));\n+        return observationDao\n+            .findById(mutation.getObservationId())\n+            .flatMapCompletable(\n+                entity -> {\n+                  // Mark the ObservationEntity as DELETED if the current state is DEFAULT.\n+                  // Otherwise, delete the observation entity from local db.\n+                  //\n+                  // TODO: If the remote sync fails, reset the state to DEFAULT.\n+                  //\n+                  // Note: Observations marked as DELETED are not shown in UI.\n+                  //       See {@link ObservationDao}\n+                  if (entity.getState() == EntityState.DEFAULT) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjkwMDI5Ng=="}, "originalCommit": {"oid": "8260190bd6f291a516712202322b4685d3959c54"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjkzODU5Ng==", "bodyText": "Sorry, I may have misspoke - specifically \"mark deleted\" is a special case of apply. \"Delete permanently\" isn't represented as a mutation type, since it's not a user action that we need to sync to/from the remote server.\nThe flow as you described it seems correct. My comment was relating to how the \"delete local observation\" step is being invoked - it currently depends on how many times this method is called, and as mentioned, the cleanup step isn't a synced mutation type. Instead, it can be done directly in the db after the remote observation is deleted.", "url": "https://github.com/google/ground-android/pull/522#discussion_r452938596", "createdAt": "2020-07-10T16:10:45Z", "author": {"login": "gino-m"}, "path": "gnd/src/main/java/com/google/android/gnd/persistence/local/room/RoomLocalDataStore.java", "diffHunk": "@@ -424,8 +427,25 @@ public Completable apply(ObservationMutation mutation) throws LocalDataStoreExce\n         return getUser(mutation.getUserId())\n             .flatMapCompletable(user -> updateObservation(mutation, user));\n       case DELETE:\n-        return getUser(mutation.getUserId())\n-            .flatMapCompletable(user -> markObservationDeleted(mutation));\n+        return observationDao\n+            .findById(mutation.getObservationId())\n+            .flatMapCompletable(\n+                entity -> {\n+                  // Mark the ObservationEntity as DELETED if the current state is DEFAULT.\n+                  // Otherwise, delete the observation entity from local db.\n+                  //\n+                  // TODO: If the remote sync fails, reset the state to DEFAULT.\n+                  //\n+                  // Note: Observations marked as DELETED are not shown in UI.\n+                  //       See {@link ObservationDao}\n+                  if (entity.getState() == EntityState.DEFAULT) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjkwMDI5Ng=="}, "originalCommit": {"oid": "8260190bd6f291a516712202322b4685d3959c54"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjk2MjIwMQ==", "bodyText": "Done 3077b29", "url": "https://github.com/google/ground-android/pull/522#discussion_r452962201", "createdAt": "2020-07-10T16:57:34Z", "author": {"login": "shobhitagarwal1612"}, "path": "gnd/src/main/java/com/google/android/gnd/persistence/local/room/RoomLocalDataStore.java", "diffHunk": "@@ -424,8 +427,25 @@ public Completable apply(ObservationMutation mutation) throws LocalDataStoreExce\n         return getUser(mutation.getUserId())\n             .flatMapCompletable(user -> updateObservation(mutation, user));\n       case DELETE:\n-        return getUser(mutation.getUserId())\n-            .flatMapCompletable(user -> markObservationDeleted(mutation));\n+        return observationDao\n+            .findById(mutation.getObservationId())\n+            .flatMapCompletable(\n+                entity -> {\n+                  // Mark the ObservationEntity as DELETED if the current state is DEFAULT.\n+                  // Otherwise, delete the observation entity from local db.\n+                  //\n+                  // TODO: If the remote sync fails, reset the state to DEFAULT.\n+                  //\n+                  // Note: Observations marked as DELETED are not shown in UI.\n+                  //       See {@link ObservationDao}\n+                  if (entity.getState() == EntityState.DEFAULT) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjkwMDI5Ng=="}, "originalCommit": {"oid": "8260190bd6f291a516712202322b4685d3959c54"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNDg2NjEwOnYy", "diffSide": "RIGHT", "path": "gnd/src/main/java/com/google/android/gnd/persistence/sync/LocalMutationSyncWorker.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQyMDowMjoxNlrOGwEImQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxNjoyMTozM1rOGwv_IA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzA1MjU2OQ==", "bodyText": "Why don't we just delete the observation as soon as the remote observation is deleted inside applyMutations? Sorry if I'm missing something!", "url": "https://github.com/google/ground-android/pull/522#discussion_r453052569", "createdAt": "2020-07-10T20:02:16Z", "author": {"login": "gino-m"}, "path": "gnd/src/main/java/com/google/android/gnd/persistence/sync/LocalMutationSyncWorker.java", "diffHunk": "@@ -112,17 +112,17 @@ private Completable processMutations(ImmutableList<Mutation> mutations, String u\n   private Completable processMutations(ImmutableList<Mutation> mutations, User user) {\n     return remoteDataStore\n         .applyMutations(mutations, user)\n-        .andThen(removeLocalObservationsIfMutationTypeIsDelete(mutations))\n+        .andThen(deleteObservationIfRemovedRemotely(mutations))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3077b295cf5497f571d36e0bc3c15ede06fe396c"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzc2NjAyOQ==", "bodyText": "ground-android/gnd/src/main/java/com/google/android/gnd/persistence/remote/firestore/FirestoreDataStore.java\n    \n    \n         Line 112\n      in\n      1a1246f\n    \n    \n    \n    \n\n        \n          \n           return batch.commit(); \n        \n    \n  \n\n\nIIUC, deleting the observation just after adding batch request would not ensure that the remote observation was indeed removed. So, to ensure that we only do it after successful task completion, I chose to do it in after the success call.\nDoes that seem right to you?", "url": "https://github.com/google/ground-android/pull/522#discussion_r453766029", "createdAt": "2020-07-13T16:13:29Z", "author": {"login": "shobhitagarwal1612"}, "path": "gnd/src/main/java/com/google/android/gnd/persistence/sync/LocalMutationSyncWorker.java", "diffHunk": "@@ -112,17 +112,17 @@ private Completable processMutations(ImmutableList<Mutation> mutations, String u\n   private Completable processMutations(ImmutableList<Mutation> mutations, User user) {\n     return remoteDataStore\n         .applyMutations(mutations, user)\n-        .andThen(removeLocalObservationsIfMutationTypeIsDelete(mutations))\n+        .andThen(deleteObservationIfRemovedRemotely(mutations))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzA1MjU2OQ=="}, "originalCommit": {"oid": "3077b295cf5497f571d36e0bc3c15ede06fe396c"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzc3MTA0MA==", "bodyText": "Ah, good point; sorry I forgot we were deleting them as part of the batch. I was concerned about possible race conditions, but we're using the same set of mutations in both steps, so I think we're ok here. LGTM!", "url": "https://github.com/google/ground-android/pull/522#discussion_r453771040", "createdAt": "2020-07-13T16:21:33Z", "author": {"login": "gino-m"}, "path": "gnd/src/main/java/com/google/android/gnd/persistence/sync/LocalMutationSyncWorker.java", "diffHunk": "@@ -112,17 +112,17 @@ private Completable processMutations(ImmutableList<Mutation> mutations, String u\n   private Completable processMutations(ImmutableList<Mutation> mutations, User user) {\n     return remoteDataStore\n         .applyMutations(mutations, user)\n-        .andThen(removeLocalObservationsIfMutationTypeIsDelete(mutations))\n+        .andThen(deleteObservationIfRemovedRemotely(mutations))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzA1MjU2OQ=="}, "originalCommit": {"oid": "3077b295cf5497f571d36e0bc3c15ede06fe396c"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2500, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}