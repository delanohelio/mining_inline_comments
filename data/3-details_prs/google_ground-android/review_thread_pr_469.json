{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE4MTE1MTM5", "number": 469, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xN1QyMDowMDoyNVrOD9MapQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xN1QyMDoxMToxMlrOD9MdqA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1NDkzMTU3OnYy", "diffSide": "RIGHT", "path": "gnd/src/main/java/com/google/android/gnd/ui/common/ResponseValidator.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xN1QyMDowMDoyNVrOGWjN5g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQwNjowMDo0OFrOGXQ9Ag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjI5ODg1NA==", "bodyText": "View business logic generally belongs in ViewModels. Any reason not to include this in the AbstractFieldViewModel class?", "url": "https://github.com/google/ground-android/pull/469#discussion_r426298854", "createdAt": "2020-05-17T20:00:25Z", "author": {"login": "gino-m"}, "path": "gnd/src/main/java/com/google/android/gnd/ui/common/ResponseValidator.java", "diffHunk": "@@ -0,0 +1,47 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.android.gnd.ui.common;\n+\n+import android.content.res.Resources;\n+import com.google.android.gnd.GndApplication;\n+import com.google.android.gnd.R;\n+import com.google.android.gnd.model.form.Field;\n+import com.google.android.gnd.model.observation.Response;\n+import java8.util.Optional;\n+import javax.annotation.Nullable;\n+import javax.inject.Inject;\n+import javax.inject.Singleton;\n+\n+@Singleton\n+public class ResponseValidator {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6dd53321f39da81340b472d9930836307da6051b"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjQwMzgwNw==", "bodyText": "There were a couple of reasons to separate it out.\n\n\nRight now, we are only considering if a response is present or not. In future, we'll have to consider a lot of other validations as well (minLen, instanceType, regex, etc.). Having a small class would encourage extensive testing with all possible scenarios.\n\n\nIn the beginning, I moved all of this logic within AFVM, but it was also present in EOVM. So, to prevent duplication, I kept the original code and left it as is in favor of future cleanups. Ideally, the error should be generated and set by AFVM and EOVM should subscribe to the changes.", "url": "https://github.com/google/ground-android/pull/469#discussion_r426403807", "createdAt": "2020-05-18T06:53:51Z", "author": {"login": "shobhitagarwal1612"}, "path": "gnd/src/main/java/com/google/android/gnd/ui/common/ResponseValidator.java", "diffHunk": "@@ -0,0 +1,47 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.android.gnd.ui.common;\n+\n+import android.content.res.Resources;\n+import com.google.android.gnd.GndApplication;\n+import com.google.android.gnd.R;\n+import com.google.android.gnd.model.form.Field;\n+import com.google.android.gnd.model.observation.Response;\n+import java8.util.Optional;\n+import javax.annotation.Nullable;\n+import javax.inject.Inject;\n+import javax.inject.Singleton;\n+\n+@Singleton\n+public class ResponseValidator {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjI5ODg1NA=="}, "originalCommit": {"oid": "6dd53321f39da81340b472d9930836307da6051b"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjc3NDI4NQ==", "bodyText": "There were a couple of reasons to separate it out.\n\nRight now, we are only considering if a response is present or not. In future, we'll have to consider a lot of other validations as well (minLen, instanceType, regex, etc.). Having a small class would encourage extensive testing with all possible scenarios.\n\n\nIn that case, won't we end up with parallel Validator and ViewModel hierarchies for each field type?\n\n\nIn the beginning, I moved all of this logic within AFVM, but it was also present in EOVM. So, to prevent duplication, I kept the original code and left it as is in favor of future cleanups. Ideally, the error should be generated and set by AFVM and EOVM should subscribe to the changes.\n\n\nI see.. so it sounds like it belongs in the individual AFVM?", "url": "https://github.com/google/ground-android/pull/469#discussion_r426774285", "createdAt": "2020-05-18T17:08:42Z", "author": {"login": "gino-m"}, "path": "gnd/src/main/java/com/google/android/gnd/ui/common/ResponseValidator.java", "diffHunk": "@@ -0,0 +1,47 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.android.gnd.ui.common;\n+\n+import android.content.res.Resources;\n+import com.google.android.gnd.GndApplication;\n+import com.google.android.gnd.R;\n+import com.google.android.gnd.model.form.Field;\n+import com.google.android.gnd.model.observation.Response;\n+import java8.util.Optional;\n+import javax.annotation.Nullable;\n+import javax.inject.Inject;\n+import javax.inject.Singleton;\n+\n+@Singleton\n+public class ResponseValidator {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjI5ODg1NA=="}, "originalCommit": {"oid": "6dd53321f39da81340b472d9930836307da6051b"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzAzNDM2Ng==", "bodyText": "In that case, won't we end up with parallel Validator and ViewModel hierarchies for each field type?\n\nI see. So each ViewModel should contain the logic instead of aggregating them in a external class and later mapping them. Sgtm.\n\nI see.. so it sounds like it belongs in the individual AFVM?\n\nYes.", "url": "https://github.com/google/ground-android/pull/469#discussion_r427034366", "createdAt": "2020-05-19T05:13:18Z", "author": {"login": "shobhitagarwal1612"}, "path": "gnd/src/main/java/com/google/android/gnd/ui/common/ResponseValidator.java", "diffHunk": "@@ -0,0 +1,47 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.android.gnd.ui.common;\n+\n+import android.content.res.Resources;\n+import com.google.android.gnd.GndApplication;\n+import com.google.android.gnd.R;\n+import com.google.android.gnd.model.form.Field;\n+import com.google.android.gnd.model.observation.Response;\n+import java8.util.Optional;\n+import javax.annotation.Nullable;\n+import javax.inject.Inject;\n+import javax.inject.Singleton;\n+\n+@Singleton\n+public class ResponseValidator {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjI5ODg1NA=="}, "originalCommit": {"oid": "6dd53321f39da81340b472d9930836307da6051b"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzA0ODE5NA==", "bodyText": "Done b42aa16", "url": "https://github.com/google/ground-android/pull/469#discussion_r427048194", "createdAt": "2020-05-19T06:00:48Z", "author": {"login": "shobhitagarwal1612"}, "path": "gnd/src/main/java/com/google/android/gnd/ui/common/ResponseValidator.java", "diffHunk": "@@ -0,0 +1,47 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.android.gnd.ui.common;\n+\n+import android.content.res.Resources;\n+import com.google.android.gnd.GndApplication;\n+import com.google.android.gnd.R;\n+import com.google.android.gnd.model.form.Field;\n+import com.google.android.gnd.model.observation.Response;\n+import java8.util.Optional;\n+import javax.annotation.Nullable;\n+import javax.inject.Inject;\n+import javax.inject.Singleton;\n+\n+@Singleton\n+public class ResponseValidator {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjI5ODg1NA=="}, "originalCommit": {"oid": "6dd53321f39da81340b472d9930836307da6051b"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1NDkzMjE5OnYy", "diffSide": "RIGHT", "path": "gnd/src/main/java/com/google/android/gnd/ui/common/ResponseValidator.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xN1QyMDowMToxN1rOGWjONw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQwNTo1MDoyMVrOGWoUhA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjI5ODkzNQ==", "bodyText": "We've been using Optional instead of null for internal APIs. Can we do the same here for consistency?", "url": "https://github.com/google/ground-android/pull/469#discussion_r426298935", "createdAt": "2020-05-17T20:01:17Z", "author": {"login": "gino-m"}, "path": "gnd/src/main/java/com/google/android/gnd/ui/common/ResponseValidator.java", "diffHunk": "@@ -0,0 +1,47 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.android.gnd.ui.common;\n+\n+import android.content.res.Resources;\n+import com.google.android.gnd.GndApplication;\n+import com.google.android.gnd.R;\n+import com.google.android.gnd.model.form.Field;\n+import com.google.android.gnd.model.observation.Response;\n+import java8.util.Optional;\n+import javax.annotation.Nullable;\n+import javax.inject.Inject;\n+import javax.inject.Singleton;\n+\n+@Singleton\n+public class ResponseValidator {\n+\n+  private final Resources resources;\n+\n+  @Inject\n+  ResponseValidator(GndApplication application) {\n+    this.resources = application.getResources();\n+  }\n+\n+  // TODO: Check valid response values\n+  @Nullable\n+  public String validate(Field field, Optional<Response> response) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6dd53321f39da81340b472d9930836307da6051b"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjM4MjQ2OA==", "bodyText": "Thanks! Done 2c82209", "url": "https://github.com/google/ground-android/pull/469#discussion_r426382468", "createdAt": "2020-05-18T05:50:21Z", "author": {"login": "shobhitagarwal1612"}, "path": "gnd/src/main/java/com/google/android/gnd/ui/common/ResponseValidator.java", "diffHunk": "@@ -0,0 +1,47 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.android.gnd.ui.common;\n+\n+import android.content.res.Resources;\n+import com.google.android.gnd.GndApplication;\n+import com.google.android.gnd.R;\n+import com.google.android.gnd.model.form.Field;\n+import com.google.android.gnd.model.observation.Response;\n+import java8.util.Optional;\n+import javax.annotation.Nullable;\n+import javax.inject.Inject;\n+import javax.inject.Singleton;\n+\n+@Singleton\n+public class ResponseValidator {\n+\n+  private final Resources resources;\n+\n+  @Inject\n+  ResponseValidator(GndApplication application) {\n+    this.resources = application.getResources();\n+  }\n+\n+  // TODO: Check valid response values\n+  @Nullable\n+  public String validate(Field field, Optional<Response> response) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjI5ODkzNQ=="}, "originalCommit": {"oid": "6dd53321f39da81340b472d9930836307da6051b"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1NDkzMzk0OnYy", "diffSide": "RIGHT", "path": "gnd/src/main/java/com/google/android/gnd/ui/editobservation/AbstractFieldViewModel.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xN1QyMDowMzoxOFrOGWjPFg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQwNjo0Njo0NlrOGWpccw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjI5OTE1OA==", "bodyText": "Can you add a TODO to add a reference to Field to Response? We have these associations in other parts of our internal model, so would make sense there as well.", "url": "https://github.com/google/ground-android/pull/469#discussion_r426299158", "createdAt": "2020-05-17T20:03:18Z", "author": {"login": "gino-m"}, "path": "gnd/src/main/java/com/google/android/gnd/ui/editobservation/AbstractFieldViewModel.java", "diffHunk": "@@ -0,0 +1,77 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.android.gnd.ui.editobservation;\n+\n+import androidx.lifecycle.LiveData;\n+import androidx.lifecycle.LiveDataReactiveStreams;\n+import androidx.lifecycle.MutableLiveData;\n+import com.google.android.gnd.model.form.Field;\n+import com.google.android.gnd.model.observation.Response;\n+import com.google.android.gnd.ui.common.AbstractViewModel;\n+import io.reactivex.Single;\n+import io.reactivex.processors.BehaviorProcessor;\n+import java8.util.Optional;\n+\n+public class AbstractFieldViewModel extends AbstractViewModel {\n+\n+  private final LiveData<Optional<Response>> response;\n+  private final LiveData<String> responseText;\n+  private final MutableLiveData<String> error = new MutableLiveData<>();\n+  private final BehaviorProcessor<Optional<Response>> responseSubject = BehaviorProcessor.create();\n+\n+  private Field field;\n+\n+  AbstractFieldViewModel() {\n+    responseText =\n+        LiveDataReactiveStreams.fromPublisher(\n+            responseSubject.distinctUntilChanged().switchMapSingle(this::getDetailsText));\n+    response = LiveDataReactiveStreams.fromPublisher(responseSubject.distinctUntilChanged());\n+  }\n+\n+  void init(Field field, Optional<Response> response) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6dd53321f39da81340b472d9930836307da6051b"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjMwMDIwNw==", "bodyText": "[or if it's an easy change feel free to add it in this PR so that the field UI method signatures can be simplified.]", "url": "https://github.com/google/ground-android/pull/469#discussion_r426300207", "createdAt": "2020-05-17T20:15:07Z", "author": {"login": "gino-m"}, "path": "gnd/src/main/java/com/google/android/gnd/ui/editobservation/AbstractFieldViewModel.java", "diffHunk": "@@ -0,0 +1,77 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.android.gnd.ui.editobservation;\n+\n+import androidx.lifecycle.LiveData;\n+import androidx.lifecycle.LiveDataReactiveStreams;\n+import androidx.lifecycle.MutableLiveData;\n+import com.google.android.gnd.model.form.Field;\n+import com.google.android.gnd.model.observation.Response;\n+import com.google.android.gnd.ui.common.AbstractViewModel;\n+import io.reactivex.Single;\n+import io.reactivex.processors.BehaviorProcessor;\n+import java8.util.Optional;\n+\n+public class AbstractFieldViewModel extends AbstractViewModel {\n+\n+  private final LiveData<Optional<Response>> response;\n+  private final LiveData<String> responseText;\n+  private final MutableLiveData<String> error = new MutableLiveData<>();\n+  private final BehaviorProcessor<Optional<Response>> responseSubject = BehaviorProcessor.create();\n+\n+  private Field field;\n+\n+  AbstractFieldViewModel() {\n+    responseText =\n+        LiveDataReactiveStreams.fromPublisher(\n+            responseSubject.distinctUntilChanged().switchMapSingle(this::getDetailsText));\n+    response = LiveDataReactiveStreams.fromPublisher(responseSubject.distinctUntilChanged());\n+  }\n+\n+  void init(Field field, Optional<Response> response) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjI5OTE1OA=="}, "originalCommit": {"oid": "6dd53321f39da81340b472d9930836307da6051b"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjQwMDg4Mw==", "bodyText": "I checked and it is a bit complicated for MultipleChoiceResponse. Added a TODO for now", "url": "https://github.com/google/ground-android/pull/469#discussion_r426400883", "createdAt": "2020-05-18T06:46:46Z", "author": {"login": "shobhitagarwal1612"}, "path": "gnd/src/main/java/com/google/android/gnd/ui/editobservation/AbstractFieldViewModel.java", "diffHunk": "@@ -0,0 +1,77 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.android.gnd.ui.editobservation;\n+\n+import androidx.lifecycle.LiveData;\n+import androidx.lifecycle.LiveDataReactiveStreams;\n+import androidx.lifecycle.MutableLiveData;\n+import com.google.android.gnd.model.form.Field;\n+import com.google.android.gnd.model.observation.Response;\n+import com.google.android.gnd.ui.common.AbstractViewModel;\n+import io.reactivex.Single;\n+import io.reactivex.processors.BehaviorProcessor;\n+import java8.util.Optional;\n+\n+public class AbstractFieldViewModel extends AbstractViewModel {\n+\n+  private final LiveData<Optional<Response>> response;\n+  private final LiveData<String> responseText;\n+  private final MutableLiveData<String> error = new MutableLiveData<>();\n+  private final BehaviorProcessor<Optional<Response>> responseSubject = BehaviorProcessor.create();\n+\n+  private Field field;\n+\n+  AbstractFieldViewModel() {\n+    responseText =\n+        LiveDataReactiveStreams.fromPublisher(\n+            responseSubject.distinctUntilChanged().switchMapSingle(this::getDetailsText));\n+    response = LiveDataReactiveStreams.fromPublisher(responseSubject.distinctUntilChanged());\n+  }\n+\n+  void init(Field field, Optional<Response> response) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjI5OTE1OA=="}, "originalCommit": {"oid": "6dd53321f39da81340b472d9930836307da6051b"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1NDkzNjExOnYy", "diffSide": "RIGHT", "path": "gnd/src/main/java/com/google/android/gnd/ui/editobservation/EditObservationFragment.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xN1QyMDowNjozMFrOGWjQNg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQwNjozNDoxNFrOGWpKiQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjI5OTQ0Ng==", "bodyText": "Rather than have getViewModelClass and getFieldLayoutId, can we instead have a FieldViewFactory class that will inflate the appropriate view and viewmodel? This fragment can coordinate the returned views by getting their viewmodels with DataBindingUtil. Wdyt?", "url": "https://github.com/google/ground-android/pull/469#discussion_r426299446", "createdAt": "2020-05-17T20:06:30Z", "author": {"login": "gino-m"}, "path": "gnd/src/main/java/com/google/android/gnd/ui/editobservation/EditObservationFragment.java", "diffHunk": "@@ -65,8 +70,31 @@\n   private SingleSelectDialogFactory singleSelectDialogFactory;\n   private MultiSelectDialogFactory multiSelectDialogFactory;\n \n-  @Nullable private EditObservationBottomSheetBinding addPhotoBottomSheetBinding;\n-  @Nullable private BottomSheetDialog bottomSheetDialog;\n+  private static Class<? extends AbstractFieldViewModel> getViewModelClass(Field.Type fieldType) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6dd53321f39da81340b472d9930836307da6051b"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjM5NjI5Nw==", "bodyText": "Great idea! d4a40af", "url": "https://github.com/google/ground-android/pull/469#discussion_r426396297", "createdAt": "2020-05-18T06:34:14Z", "author": {"login": "shobhitagarwal1612"}, "path": "gnd/src/main/java/com/google/android/gnd/ui/editobservation/EditObservationFragment.java", "diffHunk": "@@ -65,8 +70,31 @@\n   private SingleSelectDialogFactory singleSelectDialogFactory;\n   private MultiSelectDialogFactory multiSelectDialogFactory;\n \n-  @Nullable private EditObservationBottomSheetBinding addPhotoBottomSheetBinding;\n-  @Nullable private BottomSheetDialog bottomSheetDialog;\n+  private static Class<? extends AbstractFieldViewModel> getViewModelClass(Field.Type fieldType) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjI5OTQ0Ng=="}, "originalCommit": {"oid": "6dd53321f39da81340b472d9930836307da6051b"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1NDkzODY4OnYy", "diffSide": "RIGHT", "path": "gnd/src/main/java/com/google/android/gnd/ui/editobservation/AbstractFieldViewModel.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xN1QyMDoxMDoyOVrOGWjRhA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xN1QyMDoxMDoyOVrOGWjRhA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjI5OTc4MA==", "bodyText": "Please add Javadoc to classes and relevant public methods.", "url": "https://github.com/google/ground-android/pull/469#discussion_r426299780", "createdAt": "2020-05-17T20:10:29Z", "author": {"login": "gino-m"}, "path": "gnd/src/main/java/com/google/android/gnd/ui/editobservation/AbstractFieldViewModel.java", "diffHunk": "@@ -0,0 +1,77 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.android.gnd.ui.editobservation;\n+\n+import androidx.lifecycle.LiveData;\n+import androidx.lifecycle.LiveDataReactiveStreams;\n+import androidx.lifecycle.MutableLiveData;\n+import com.google.android.gnd.model.form.Field;\n+import com.google.android.gnd.model.observation.Response;\n+import com.google.android.gnd.ui.common.AbstractViewModel;\n+import io.reactivex.Single;\n+import io.reactivex.processors.BehaviorProcessor;\n+import java8.util.Optional;\n+\n+public class AbstractFieldViewModel extends AbstractViewModel {\n+\n+  private final LiveData<Optional<Response>> response;\n+  private final LiveData<String> responseText;\n+  private final MutableLiveData<String> error = new MutableLiveData<>();\n+  private final BehaviorProcessor<Optional<Response>> responseSubject = BehaviorProcessor.create();\n+\n+  private Field field;\n+\n+  AbstractFieldViewModel() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6dd53321f39da81340b472d9930836307da6051b"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1NDkzOTI4OnYy", "diffSide": "RIGHT", "path": "gnd/src/main/java/com/google/android/gnd/ui/editobservation/EditObservationFragment.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xN1QyMDoxMToxMlrOGWjR0Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xN1QyMDoxMjozM1rOGWjSOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjI5OTg1Nw==", "bodyText": "Style nit: Please use capital case with final period in comments. Example: \"Please use capital case with final period in comments.\" :)", "url": "https://github.com/google/ground-android/pull/469#discussion_r426299857", "createdAt": "2020-05-17T20:11:12Z", "author": {"login": "gino-m"}, "path": "gnd/src/main/java/com/google/android/gnd/ui/editobservation/EditObservationFragment.java", "diffHunk": "@@ -119,116 +147,107 @@ private void handleSaveResult(EditObservationViewModel.SaveResult saveResult) {\n     }\n   }\n \n-  private void rebuildForm(Form form) {\n-    formLayout.removeAllViews();\n-    for (Element element : form.getElements()) {\n-      switch (element.getType()) {\n-        case FIELD:\n-          addField(element.getField());\n-          break;\n-        default:\n-          Timber.d(\"%s elements not yet supported\", element.getType());\n-          break;\n-      }\n-    }\n-  }\n+  private <V extends AbstractFieldViewModel> V addFieldViewModel(Field field) {\n+    V fieldViewModel = (V) viewModelFactory.create(getViewModelClass(field.getType()));\n \n-  private void addField(Field field) {\n-    switch (field.getType()) {\n-      case TEXT:\n-        addTextField(field);\n-        break;\n-      case MULTIPLE_CHOICE:\n-        addMultipleChoiceField(field);\n-        break;\n-      case PHOTO:\n-        addPhotoField(field);\n-        break;\n-      default:\n-        Timber.w(\"Unimplemented field type: %s\", field.getType());\n-        break;\n+    // load field and current response\n+    fieldViewModel.init(field, viewModel.getResponse(field.getId()));\n+\n+    // handle UI interactions\n+    if (fieldViewModel instanceof PhotoFieldViewModel) {\n+      observeSelectPhotoClicks((PhotoFieldViewModel) fieldViewModel);\n+    } else if (fieldViewModel instanceof MultipleChoiceFieldViewModel) {\n+      observeMultipleChoiceClicks((MultipleChoiceFieldViewModel) fieldViewModel);\n     }\n-  }\n \n-  private void addTextField(Field field) {\n-    TextInputFieldBinding binding =\n-        TextInputFieldBinding.inflate(getLayoutInflater(), formLayout, false);\n-    binding.setViewModel(viewModel);\n-    binding.setLifecycleOwner(this);\n-    binding.setField(field);\n-    formLayout.addView(binding.getRoot());\n-    assignGeneratedId(binding.getRoot().findViewById(R.id.text_input_edit_text));\n-  }\n+    // subscribe to response updates", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6dd53321f39da81340b472d9930836307da6051b"}, "originalPosition": 122}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjI5OTk2MQ==", "bodyText": "Also please make sure the comment describes something more than what's clear from the code itself. In this case, for example, a comment isn't needed.", "url": "https://github.com/google/ground-android/pull/469#discussion_r426299961", "createdAt": "2020-05-17T20:12:33Z", "author": {"login": "gino-m"}, "path": "gnd/src/main/java/com/google/android/gnd/ui/editobservation/EditObservationFragment.java", "diffHunk": "@@ -119,116 +147,107 @@ private void handleSaveResult(EditObservationViewModel.SaveResult saveResult) {\n     }\n   }\n \n-  private void rebuildForm(Form form) {\n-    formLayout.removeAllViews();\n-    for (Element element : form.getElements()) {\n-      switch (element.getType()) {\n-        case FIELD:\n-          addField(element.getField());\n-          break;\n-        default:\n-          Timber.d(\"%s elements not yet supported\", element.getType());\n-          break;\n-      }\n-    }\n-  }\n+  private <V extends AbstractFieldViewModel> V addFieldViewModel(Field field) {\n+    V fieldViewModel = (V) viewModelFactory.create(getViewModelClass(field.getType()));\n \n-  private void addField(Field field) {\n-    switch (field.getType()) {\n-      case TEXT:\n-        addTextField(field);\n-        break;\n-      case MULTIPLE_CHOICE:\n-        addMultipleChoiceField(field);\n-        break;\n-      case PHOTO:\n-        addPhotoField(field);\n-        break;\n-      default:\n-        Timber.w(\"Unimplemented field type: %s\", field.getType());\n-        break;\n+    // load field and current response\n+    fieldViewModel.init(field, viewModel.getResponse(field.getId()));\n+\n+    // handle UI interactions\n+    if (fieldViewModel instanceof PhotoFieldViewModel) {\n+      observeSelectPhotoClicks((PhotoFieldViewModel) fieldViewModel);\n+    } else if (fieldViewModel instanceof MultipleChoiceFieldViewModel) {\n+      observeMultipleChoiceClicks((MultipleChoiceFieldViewModel) fieldViewModel);\n     }\n-  }\n \n-  private void addTextField(Field field) {\n-    TextInputFieldBinding binding =\n-        TextInputFieldBinding.inflate(getLayoutInflater(), formLayout, false);\n-    binding.setViewModel(viewModel);\n-    binding.setLifecycleOwner(this);\n-    binding.setField(field);\n-    formLayout.addView(binding.getRoot());\n-    assignGeneratedId(binding.getRoot().findViewById(R.id.text_input_edit_text));\n-  }\n+    // subscribe to response updates", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjI5OTg1Nw=="}, "originalCommit": {"oid": "6dd53321f39da81340b472d9930836307da6051b"}, "originalPosition": 122}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2453, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}