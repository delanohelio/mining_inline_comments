{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY4MTk1Mzcx", "number": 565, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNVQxMDoxNzoxN1rOEYr-Jg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNVQxMDoyNjozOVrOEYsAhQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk0MzIxNzAyOnYy", "diffSide": "RIGHT", "path": "gnd/src/main/java/com/google/android/gnd/model/form/Form.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNVQxMDoxNzoxN1rOHBJRiQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxNjo1MToyNlrOHCdVpw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDk2MjU2OQ==", "bodyText": "How about getElementsSorted() --> getSortedElements()?", "url": "https://github.com/google/ground-android/pull/565#discussion_r470962569", "createdAt": "2020-08-15T10:17:17Z", "author": {"login": "shobhitagarwal1612"}, "path": "gnd/src/main/java/com/google/android/gnd/model/form/Form.java", "diffHunk": "@@ -35,6 +37,12 @@\n \n   public abstract ImmutableList<Element> getElements();\n \n+  public ImmutableList<Element> getElementsSorted() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "edd0d8154c25897c2d9c404265421bb1ff62d787"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjMyOTIwNA==", "bodyText": "The naming was chosen to emphasize that this is a variant of the getElements() method -  it also returns elements, but sorted. I've seen this naming convention used elsewhere but can't find it now. I don't feel strongly about it though. Is there precedency for this pattern that you know of?", "url": "https://github.com/google/ground-android/pull/565#discussion_r472329204", "createdAt": "2020-08-18T16:34:20Z", "author": {"login": "gino-m"}, "path": "gnd/src/main/java/com/google/android/gnd/model/form/Form.java", "diffHunk": "@@ -35,6 +37,12 @@\n \n   public abstract ImmutableList<Element> getElements();\n \n+  public ImmutableList<Element> getElementsSorted() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDk2MjU2OQ=="}, "originalCommit": {"oid": "edd0d8154c25897c2d9c404265421bb1ff62d787"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjMzOTg3OQ==", "bodyText": "I don't know if there is a rule/pattern for that. It just seemed more natural to add \"sorted\" first. I am fine with either as it is just a minor nit. Let's keep it the same way.", "url": "https://github.com/google/ground-android/pull/565#discussion_r472339879", "createdAt": "2020-08-18T16:51:26Z", "author": {"login": "shobhitagarwal1612"}, "path": "gnd/src/main/java/com/google/android/gnd/model/form/Form.java", "diffHunk": "@@ -35,6 +37,12 @@\n \n   public abstract ImmutableList<Element> getElements();\n \n+  public ImmutableList<Element> getElementsSorted() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDk2MjU2OQ=="}, "originalCommit": {"oid": "edd0d8154c25897c2d9c404265421bb1ff62d787"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk0MzIxODg1OnYy", "diffSide": "RIGHT", "path": "gnd/src/main/java/com/google/android/gnd/persistence/local/room/entity/FieldEntity.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNVQxMDoyMDowNVrOHBJSWA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxNjozNTo0N1rOHCcv0A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDk2Mjc3Ng==", "bodyText": "Can we please make this @NonNull? It would remove the extra complexity of having to deal with all fallbacks", "url": "https://github.com/google/ground-android/pull/565#discussion_r470962776", "createdAt": "2020-08-15T10:20:05Z", "author": {"login": "shobhitagarwal1612"}, "path": "gnd/src/main/java/com/google/android/gnd/persistence/local/room/entity/FieldEntity.java", "diffHunk": "@@ -52,6 +52,11 @@\n   @ColumnInfo(name = \"id\")\n   public abstract String getId();\n \n+  @CopyAnnotations\n+  @Nullable\n+  @ColumnInfo(name = \"index\")\n+  public abstract Integer getIndex();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "edd0d8154c25897c2d9c404265421bb1ff62d787"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjMzMDE5Mg==", "bodyText": "Done!", "url": "https://github.com/google/ground-android/pull/565#discussion_r472330192", "createdAt": "2020-08-18T16:35:47Z", "author": {"login": "gino-m"}, "path": "gnd/src/main/java/com/google/android/gnd/persistence/local/room/entity/FieldEntity.java", "diffHunk": "@@ -52,6 +52,11 @@\n   @ColumnInfo(name = \"id\")\n   public abstract String getId();\n \n+  @CopyAnnotations\n+  @Nullable\n+  @ColumnInfo(name = \"index\")\n+  public abstract Integer getIndex();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDk2Mjc3Ng=="}, "originalCommit": {"oid": "edd0d8154c25897c2d9c404265421bb1ff62d787"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk0MzIyMzA5OnYy", "diffSide": "RIGHT", "path": "gnd/src/main/java/com/google/android/gnd/model/form/Element.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNVQxMDoyNjozOVrOHBJUUA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxNzoxNzowOFrOHCeWeA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDk2MzI4MA==", "bodyText": "What if we make index a required field? If the online form generator always adds an index then there would be no need to take care of adding this attribute manually. Wdyt?", "url": "https://github.com/google/ground-android/pull/565#discussion_r470963280", "createdAt": "2020-08-15T10:26:39Z", "author": {"login": "shobhitagarwal1612"}, "path": "gnd/src/main/java/com/google/android/gnd/model/form/Element.java", "diffHunk": "@@ -30,6 +31,21 @@\n     FIELD\n   }\n \n+  public int getIndex() {\n+    switch (getType()) {\n+      case FIELD:\n+        // Fall back to hash code id on missing index; the order won't necessarily be correct\n+        // but at least it will be stable.\n+        return Optional.ofNullable(getField().getIndex())\n+            .orElseGet(() -> getField().getId().hashCode());\n+      case UNKNOWN:\n+        // Intentional fall-through.\n+      default:\n+        // Fall back for unknown / bad index.\n+        return hashCode();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "edd0d8154c25897c2d9c404265421bb1ff62d787"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjM1NjQ3Mg==", "bodyText": "Good idea. Let's handle missing index in remote closer to the source: eff2520.", "url": "https://github.com/google/ground-android/pull/565#discussion_r472356472", "createdAt": "2020-08-18T17:17:08Z", "author": {"login": "gino-m"}, "path": "gnd/src/main/java/com/google/android/gnd/model/form/Element.java", "diffHunk": "@@ -30,6 +31,21 @@\n     FIELD\n   }\n \n+  public int getIndex() {\n+    switch (getType()) {\n+      case FIELD:\n+        // Fall back to hash code id on missing index; the order won't necessarily be correct\n+        // but at least it will be stable.\n+        return Optional.ofNullable(getField().getIndex())\n+            .orElseGet(() -> getField().getId().hashCode());\n+      case UNKNOWN:\n+        // Intentional fall-through.\n+      default:\n+        // Fall back for unknown / bad index.\n+        return hashCode();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDk2MzI4MA=="}, "originalCommit": {"oid": "edd0d8154c25897c2d9c404265421bb1ff62d787"}, "originalPosition": 23}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2522, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}