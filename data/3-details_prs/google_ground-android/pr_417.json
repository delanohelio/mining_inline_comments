{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk0Mjg0NjE4", "number": 417, "title": "Download and render offline areas", "bodyText": "This PR includes a couple of changes related to downloading and rendering offline areas:\n\nAdd an offlineAreaRepository\nDownload areas on download button click in the OfflineAreaSelector Fragment\nRender OfflineArea tiles using the MapBox Tile Provider\n\nTo verify these changes:\n\nStart the app\nselect offline areas from the main menu\nSelect the + icon to add a new area\nzoom in to a portion of the map then click download.\nreturn to the home screen, after the tiles finish downloading, areas will render on the map. Select Normal mode to easily distinguish downloaded imagery from the default map -- imagery will only render at zoom level 7.\nYou can also check the device storage in android studio to verify tiles have been downloaded to the device.\n\nFixes #416", "createdAt": "2020-03-26T16:38:32Z", "url": "https://github.com/google/ground-android/pull/417", "merged": true, "mergeCommit": {"oid": "de916b98960c74879f57f73326a699b3390378a9"}, "closed": true, "closedAt": "2020-04-08T18:55:03Z", "author": {"login": "scolsen"}, "timelineItems": {"totalCount": 27, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcReeRsgH2gAyMzk0Mjg0NjE4OjNkNWYyZDhmNWFiYTFiOTUzYjY1YzlmNGI3ZTQ0ZTU0OGU2YTI2ZTk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcVo-eYAH2gAyMzk0Mjg0NjE4OjQxN2I4YTA1NmNjNmJlMWQ5Nzg0ZDAwYzU1MTBkNmM2ODM5MDQyMmY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "3d5f2d8f5aba1b953b65c9f4b7e44e548e6a26e9", "author": {"user": {"login": "scolsen", "name": "Scott Olsen"}}, "url": "https://github.com/google/ground-android/commit/3d5f2d8f5aba1b953b65c9f4b7e44e548e6a26e9", "committedDate": "2020-03-26T16:13:01Z", "message": "Add OfflineAreaRepository; Download OfflineAreas + add to the DB\n\n- Add a GEO_JSON_SOURCE constant to Config.java\n- Add a method to insert or update offline areas in the local data store\n- Add an offlineAreaRepository for working with offline areas"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f6487bcb1882cce18b04635c0dad6c483736a191", "author": {"user": {"login": "scolsen", "name": "Scott Olsen"}}, "url": "https://github.com/google/ground-android/commit/f6487bcb1882cce18b04635c0dad6c483736a191", "committedDate": "2020-03-26T16:15:23Z", "message": "Trigger offline area downloads from the OfflineAreaSelector\n\nUpon clicking \"download\" we queue up an area download using the\nOfflineAreaRepository."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "87087d562eb8d7486701f78a38a900388651a62a", "author": {"user": {"login": "scolsen", "name": "Scott Olsen"}}, "url": "https://github.com/google/ground-android/commit/87087d562eb8d7486701f78a38a900388651a62a", "committedDate": "2020-03-26T16:28:00Z", "message": "Render tile overlays on the map\n\n- Update MapboxOfflineTileProvider to look open tile database files on\n  demand (this is necessary because we store tiles in separate mbtiles\n  files).\n- Render a tileOverlay on map ready.\n- Use timber in MapContainerFragment"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "99cfa43fbda82abfa7c6ca7c216440c5a1a817f1", "author": {"user": {"login": "scolsen", "name": "Scott Olsen"}}, "url": "https://github.com/google/ground-android/commit/99cfa43fbda82abfa7c6ca7c216440c5a1a817f1", "committedDate": "2020-03-26T16:28:09Z", "message": "Merge branch 'master' of https://github.com/google/ground-android into offline-areas"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9e499cb4a8ddce61e7f68925b13fb01e20c65651", "author": {"user": {"login": "scolsen", "name": "Scott Olsen"}}, "url": "https://github.com/google/ground-android/commit/9e499cb4a8ddce61e7f68925b13fb01e20c65651", "committedDate": "2020-03-26T16:35:15Z", "message": "Fix imports"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e05dee813378997c5015ae7e4edc64b3f9761529", "author": {"user": {"login": "scolsen", "name": "Scott Olsen"}}, "url": "https://github.com/google/ground-android/commit/e05dee813378997c5015ae7e4edc64b3f9761529", "committedDate": "2020-03-26T16:35:39Z", "message": "Fix offline area selector layout"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgyNjI5NjUw", "url": "https://github.com/google/ground-android/pull/417#pullrequestreview-382629650", "createdAt": "2020-03-27T07:31:44Z", "commit": {"oid": "e05dee813378997c5015ae7e4edc64b3f9761529"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QwNzozMTo0NFrOF8l2Lg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QwODowMzoyM1rOF8mmSw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTA3ODk1OA==", "bodyText": "TAG is unused. Please remove", "url": "https://github.com/google/ground-android/pull/417#discussion_r399078958", "createdAt": "2020-03-27T07:31:44Z", "author": {"login": "shobhitagarwal1612"}, "path": "gnd/src/main/java/com/google/android/gnd/repository/OfflineAreaRepository.java", "diffHunk": "@@ -0,0 +1,91 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.android.gnd.repository;\n+\n+import static com.google.android.gnd.util.ImmutableListCollector.toImmutableList;\n+import static java8.util.stream.StreamSupport.stream;\n+\n+import android.content.Context;\n+import com.google.android.gms.maps.model.LatLngBounds;\n+import com.google.android.gnd.Config;\n+import com.google.android.gnd.model.basemap.OfflineArea;\n+import com.google.android.gnd.model.basemap.OfflineArea.State;\n+import com.google.android.gnd.model.basemap.tile.Tile;\n+import com.google.android.gnd.persistence.geojson.GeoJsonParser;\n+import com.google.android.gnd.persistence.local.LocalDataStore;\n+import com.google.android.gnd.persistence.uuid.OfflineUuidGenerator;\n+import com.google.android.gnd.workers.TileDownloadWorkManager;\n+import com.google.common.collect.ImmutableList;\n+import io.reactivex.Completable;\n+import java.io.File;\n+import javax.inject.Inject;\n+import timber.log.Timber;\n+\n+public class OfflineAreaRepository {\n+  private final TileDownloadWorkManager tileDownloadWorkManager;\n+  private final LocalDataStore localDataStore;\n+  private final GeoJsonParser geoJsonParser;\n+  private final Context context;\n+\n+  private static final String TAG = OfflineAreaRepository.class.getSimpleName();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e05dee813378997c5015ae7e4edc64b3f9761529"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTA3OTc5MQ==", "bodyText": "Please use FileUtil instead so later it's easier to change source dir, if needed.\nFile jsonSource = fileUtil.getFile(Config.GEO_JSON_SOURCE);", "url": "https://github.com/google/ground-android/pull/417#discussion_r399079791", "createdAt": "2020-03-27T07:34:06Z", "author": {"login": "shobhitagarwal1612"}, "path": "gnd/src/main/java/com/google/android/gnd/repository/OfflineAreaRepository.java", "diffHunk": "@@ -0,0 +1,91 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.android.gnd.repository;\n+\n+import static com.google.android.gnd.util.ImmutableListCollector.toImmutableList;\n+import static java8.util.stream.StreamSupport.stream;\n+\n+import android.content.Context;\n+import com.google.android.gms.maps.model.LatLngBounds;\n+import com.google.android.gnd.Config;\n+import com.google.android.gnd.model.basemap.OfflineArea;\n+import com.google.android.gnd.model.basemap.OfflineArea.State;\n+import com.google.android.gnd.model.basemap.tile.Tile;\n+import com.google.android.gnd.persistence.geojson.GeoJsonParser;\n+import com.google.android.gnd.persistence.local.LocalDataStore;\n+import com.google.android.gnd.persistence.uuid.OfflineUuidGenerator;\n+import com.google.android.gnd.workers.TileDownloadWorkManager;\n+import com.google.common.collect.ImmutableList;\n+import io.reactivex.Completable;\n+import java.io.File;\n+import javax.inject.Inject;\n+import timber.log.Timber;\n+\n+public class OfflineAreaRepository {\n+  private final TileDownloadWorkManager tileDownloadWorkManager;\n+  private final LocalDataStore localDataStore;\n+  private final GeoJsonParser geoJsonParser;\n+  private final Context context;\n+\n+  private static final String TAG = OfflineAreaRepository.class.getSimpleName();\n+  private final OfflineUuidGenerator uuidGenerator;\n+\n+  @Inject\n+  public OfflineAreaRepository(\n+      TileDownloadWorkManager tileDownloadWorkManager,\n+      LocalDataStore localDataStore,\n+      GeoJsonParser geoJsonParser,\n+      Context context,\n+      OfflineUuidGenerator uuidGenerator) {\n+    this.tileDownloadWorkManager = tileDownloadWorkManager;\n+    this.localDataStore = localDataStore;\n+    this.geoJsonParser = geoJsonParser;\n+    this.context = context;\n+    this.uuidGenerator = uuidGenerator;\n+  }\n+\n+  private Completable enqueueTileDownloads(OfflineArea area) {\n+\n+    File jsonSource = new File(context.getFilesDir(), Config.GEO_JSON_SOURCE);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e05dee813378997c5015ae7e4edc64b3f9761529"}, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTA4MTYzOQ==", "bodyText": "Can source be omitted from the comments? I'm guessing that the settings are generic and don't have anything specific to do with the source or destination. Also, then GEO_JSON_CONFIG_FILENAME.\nThoughts?", "url": "https://github.com/google/ground-android/pull/417#discussion_r399081639", "createdAt": "2020-03-27T07:39:19Z", "author": {"login": "shobhitagarwal1612"}, "path": "gnd/src/main/java/com/google/android/gnd/Config.java", "diffHunk": "@@ -30,4 +30,7 @@\n \n   // Photos\n   public static final String PHOTO_EXT = \".jpg\";\n+\n+  // Local geojson source settings.\n+  public static final String GEO_JSON_SOURCE = \"gnd-geojson.json\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e05dee813378997c5015ae7e4edc64b3f9761529"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTA4NjY4Mg==", "bodyText": "For consistency, please rename viewport to bounds", "url": "https://github.com/google/ground-android/pull/417#discussion_r399086682", "createdAt": "2020-03-27T07:52:21Z", "author": {"login": "shobhitagarwal1612"}, "path": "gnd/src/main/java/com/google/android/gnd/repository/OfflineAreaRepository.java", "diffHunk": "@@ -0,0 +1,91 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.android.gnd.repository;\n+\n+import static com.google.android.gnd.util.ImmutableListCollector.toImmutableList;\n+import static java8.util.stream.StreamSupport.stream;\n+\n+import android.content.Context;\n+import com.google.android.gms.maps.model.LatLngBounds;\n+import com.google.android.gnd.Config;\n+import com.google.android.gnd.model.basemap.OfflineArea;\n+import com.google.android.gnd.model.basemap.OfflineArea.State;\n+import com.google.android.gnd.model.basemap.tile.Tile;\n+import com.google.android.gnd.persistence.geojson.GeoJsonParser;\n+import com.google.android.gnd.persistence.local.LocalDataStore;\n+import com.google.android.gnd.persistence.uuid.OfflineUuidGenerator;\n+import com.google.android.gnd.workers.TileDownloadWorkManager;\n+import com.google.common.collect.ImmutableList;\n+import io.reactivex.Completable;\n+import java.io.File;\n+import javax.inject.Inject;\n+import timber.log.Timber;\n+\n+public class OfflineAreaRepository {\n+  private final TileDownloadWorkManager tileDownloadWorkManager;\n+  private final LocalDataStore localDataStore;\n+  private final GeoJsonParser geoJsonParser;\n+  private final Context context;\n+\n+  private static final String TAG = OfflineAreaRepository.class.getSimpleName();\n+  private final OfflineUuidGenerator uuidGenerator;\n+\n+  @Inject\n+  public OfflineAreaRepository(\n+      TileDownloadWorkManager tileDownloadWorkManager,\n+      LocalDataStore localDataStore,\n+      GeoJsonParser geoJsonParser,\n+      Context context,\n+      OfflineUuidGenerator uuidGenerator) {\n+    this.tileDownloadWorkManager = tileDownloadWorkManager;\n+    this.localDataStore = localDataStore;\n+    this.geoJsonParser = geoJsonParser;\n+    this.context = context;\n+    this.uuidGenerator = uuidGenerator;\n+  }\n+\n+  private Completable enqueueTileDownloads(OfflineArea area) {\n+\n+    File jsonSource = new File(context.getFilesDir(), Config.GEO_JSON_SOURCE);\n+\n+    ImmutableList<Tile> tiles = geoJsonParser.intersectingTiles(area.getBounds(), jsonSource);\n+\n+    return localDataStore\n+        .insertOrUpdateOfflineArea(area.toBuilder().setState(State.IN_PROGRESS).build())\n+        .andThen(\n+            Completable.merge(\n+                stream(tiles.asList())\n+                    .map(localDataStore::insertOrUpdateTile)\n+                    .collect(toImmutableList())))\n+        .doOnError(__ -> Timber.d(\"failed to add/update a tile in the database\"))\n+        .andThen(tileDownloadWorkManager.enqueueTileDownloadWorker());\n+  }\n+\n+  public Completable addAreaAndEnqueue(LatLngBounds viewport) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e05dee813378997c5015ae7e4edc64b3f9761529"}, "originalPosition": 78}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTA4NzcwOA==", "bodyText": "Timber.v(\"Update camera: %s\", update);", "url": "https://github.com/google/ground-android/pull/417#discussion_r399087708", "createdAt": "2020-03-27T07:54:47Z", "author": {"login": "shobhitagarwal1612"}, "path": "gnd/src/main/java/com/google/android/gnd/ui/home/mapcontainer/MapContainerFragment.java", "diffHunk": "@@ -213,7 +214,7 @@ private void showUserActionFailureMessage(int resId) {\n   }\n \n   private void onCameraUpdate(MapContainerViewModel.CameraUpdate update, MapAdapter map) {\n-    Log.v(TAG, \"Update camera: \" + update);\n+    Timber.tag(TAG).v(\"Update camera: %s\", update);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e05dee813378997c5015ae7e4edc64b3f9761529"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTA4ODQ2Mw==", "bodyText": "Can we use try-with-resources for autoclosing the handler?", "url": "https://github.com/google/ground-android/pull/417#discussion_r399088463", "createdAt": "2020-03-27T07:56:35Z", "author": {"login": "shobhitagarwal1612"}, "path": "gnd/src/main/java/com/google/android/gnd/ui/map/gms/GoogleMapsMapAdapter.java", "diffHunk": "@@ -234,4 +236,11 @@ private void onCameraMove() {\n   public LatLngBounds getViewport() {\n     return map.getProjection().getVisibleRegion().latLngBounds;\n   }\n+\n+  @Override\n+  public void renderTileOverlay() {\n+    MapBoxOfflineTileProvider tileProvider = new MapBoxOfflineTileProvider(context.getFilesDir());\n+    map.addTileOverlay(new TileOverlayOptions().tileProvider(tileProvider));\n+    tileProvider.close();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e05dee813378997c5015ae7e4edc64b3f9761529"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTA5MDQ2MA==", "bodyText": "We should limit the usage of single-variable names to standard usages. (e.g. i, j, k for counters, e for exceptions, etc.).\nPlease rename this to file", "url": "https://github.com/google/ground-android/pull/417#discussion_r399090460", "createdAt": "2020-03-27T08:01:15Z", "author": {"login": "shobhitagarwal1612"}, "path": "third_party/android-gmaps-addons/src/com/cocoahero/android/gmaps/addons/mapbox/MapBoxOfflineTileProvider.java", "diffHunk": "@@ -47,6 +47,18 @@ public MapBoxOfflineTileProvider(String pathToFile) {\n     @Override\n     public Tile getTile(int x, int y, int z) {\n         Tile tile = NO_TILE;\n+        String pathToFile = this.basepath + \"/\" + z + \"-\" + x + \"-\" + y + \".mbtiles\";\n+        File f = new File(pathToFile);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e05dee813378997c5015ae7e4edc64b3f9761529"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTA5MTI3NQ==", "bodyText": "Please use Timber.e for errors", "url": "https://github.com/google/ground-android/pull/417#discussion_r399091275", "createdAt": "2020-03-27T08:03:23Z", "author": {"login": "shobhitagarwal1612"}, "path": "gnd/src/main/java/com/google/android/gnd/repository/OfflineAreaRepository.java", "diffHunk": "@@ -0,0 +1,91 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.android.gnd.repository;\n+\n+import static com.google.android.gnd.util.ImmutableListCollector.toImmutableList;\n+import static java8.util.stream.StreamSupport.stream;\n+\n+import android.content.Context;\n+import com.google.android.gms.maps.model.LatLngBounds;\n+import com.google.android.gnd.Config;\n+import com.google.android.gnd.model.basemap.OfflineArea;\n+import com.google.android.gnd.model.basemap.OfflineArea.State;\n+import com.google.android.gnd.model.basemap.tile.Tile;\n+import com.google.android.gnd.persistence.geojson.GeoJsonParser;\n+import com.google.android.gnd.persistence.local.LocalDataStore;\n+import com.google.android.gnd.persistence.uuid.OfflineUuidGenerator;\n+import com.google.android.gnd.workers.TileDownloadWorkManager;\n+import com.google.common.collect.ImmutableList;\n+import io.reactivex.Completable;\n+import java.io.File;\n+import javax.inject.Inject;\n+import timber.log.Timber;\n+\n+public class OfflineAreaRepository {\n+  private final TileDownloadWorkManager tileDownloadWorkManager;\n+  private final LocalDataStore localDataStore;\n+  private final GeoJsonParser geoJsonParser;\n+  private final Context context;\n+\n+  private static final String TAG = OfflineAreaRepository.class.getSimpleName();\n+  private final OfflineUuidGenerator uuidGenerator;\n+\n+  @Inject\n+  public OfflineAreaRepository(\n+      TileDownloadWorkManager tileDownloadWorkManager,\n+      LocalDataStore localDataStore,\n+      GeoJsonParser geoJsonParser,\n+      Context context,\n+      OfflineUuidGenerator uuidGenerator) {\n+    this.tileDownloadWorkManager = tileDownloadWorkManager;\n+    this.localDataStore = localDataStore;\n+    this.geoJsonParser = geoJsonParser;\n+    this.context = context;\n+    this.uuidGenerator = uuidGenerator;\n+  }\n+\n+  private Completable enqueueTileDownloads(OfflineArea area) {\n+\n+    File jsonSource = new File(context.getFilesDir(), Config.GEO_JSON_SOURCE);\n+\n+    ImmutableList<Tile> tiles = geoJsonParser.intersectingTiles(area.getBounds(), jsonSource);\n+\n+    return localDataStore\n+        .insertOrUpdateOfflineArea(area.toBuilder().setState(State.IN_PROGRESS).build())\n+        .andThen(\n+            Completable.merge(\n+                stream(tiles.asList())\n+                    .map(localDataStore::insertOrUpdateTile)\n+                    .collect(toImmutableList())))\n+        .doOnError(__ -> Timber.d(\"failed to add/update a tile in the database\"))\n+        .andThen(tileDownloadWorkManager.enqueueTileDownloadWorker());\n+  }\n+\n+  public Completable addAreaAndEnqueue(LatLngBounds viewport) {\n+    OfflineArea offlineArea =\n+        OfflineArea.newBuilder()\n+            .setBounds(viewport)\n+            .setId(uuidGenerator.generateUuid())\n+            .setState(State.PENDING)\n+            .build();\n+\n+    return localDataStore\n+        .insertOrUpdateOfflineArea(offlineArea)\n+        .doOnError(__ -> Timber.d(\"failed to add/update offline area in the database\"))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e05dee813378997c5015ae7e4edc64b3f9761529"}, "originalPosition": 88}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "24c9a1e074d7894fceb6fc1e7deeca32e6a7ae0d", "author": {"user": {"login": "shobhitagarwal1612", "name": "Shobhit Agarwal"}}, "url": "https://github.com/google/ground-android/commit/24c9a1e074d7894fceb6fc1e7deeca32e6a7ae0d", "committedDate": "2020-03-28T21:43:47Z", "message": "Merge branch 'master' into offline-areas"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "be912f676e7c2810f9cc1fda55b7875bcd292a5d", "author": {"user": {"login": "scolsen", "name": "Scott Olsen"}}, "url": "https://github.com/google/ground-android/commit/be912f676e7c2810f9cc1fda55b7875bcd292a5d", "committedDate": "2020-03-31T14:17:55Z", "message": "Improve OfflineAreaRepository Code Health\n\n- Use FileUtil to get the JSON Source file from the device.\n- Use timeber.e to log errors.\n- Return Completable.error on FileNotFoundExceptions."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4ea789dbf8976a53a9d314e5463060c48088e453", "author": {"user": {"login": "scolsen", "name": "Scott Olsen"}}, "url": "https://github.com/google/ground-android/commit/4ea789dbf8976a53a9d314e5463060c48088e453", "committedDate": "2020-03-31T14:18:29Z", "message": "Merge branch 'offline-areas' of https://github.com/google/ground-android into offline-areas"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9ff373720012476db7ef6109228b885e7643a003", "author": {"user": {"login": "scolsen", "name": "Scott Olsen"}}, "url": "https://github.com/google/ground-android/commit/9ff373720012476db7ef6109228b885e7643a003", "committedDate": "2020-03-31T14:28:00Z", "message": "Remove TAG from MapContainerFragment"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6eed868640ac898bdd31851f7b137d7524574653", "author": {"user": {"login": "scolsen", "name": "Scott Olsen"}}, "url": "https://github.com/google/ground-android/commit/6eed868640ac898bdd31851f7b137d7524574653", "committedDate": "2020-03-31T14:46:28Z", "message": "Use try-with-resource to auto-close MapBox tile providers"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b46184550031fde47f2f885cc847ccd5ba9a15ed", "author": {"user": {"login": "scolsen", "name": "Scott Olsen"}}, "url": "https://github.com/google/ground-android/commit/b46184550031fde47f2f885cc847ccd5ba9a15ed", "committedDate": "2020-03-31T14:49:46Z", "message": "Rename f to file"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c32c79be5a5fb100b2728b37bd080f624763d2e4", "author": {"user": {"login": "scolsen", "name": "Scott Olsen"}}, "url": "https://github.com/google/ground-android/commit/c32c79be5a5fb100b2728b37bd080f624763d2e4", "committedDate": "2020-03-31T14:54:45Z", "message": "Remove unused import in OfflineAreaRepository"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e4a770bc09c54339409264c360d9d9363db0cc3e", "author": {"user": {"login": "scolsen", "name": "Scott Olsen"}}, "url": "https://github.com/google/ground-android/commit/e4a770bc09c54339409264c360d9d9363db0cc3e", "committedDate": "2020-03-31T14:59:22Z", "message": "Rename GEO_JSON_SOURCE -> GEO_JSON; clarify comment"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4436f033b09c3c1e210557d905109a77b00255b6", "author": {"user": {"login": "scolsen", "name": "Scott Olsen"}}, "url": "https://github.com/google/ground-android/commit/4436f033b09c3c1e210557d905109a77b00255b6", "committedDate": "2020-03-31T16:44:31Z", "message": "Merge branch 'master' of https://github.com/google/ground-android into offline-areas"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg0OTQyNjc0", "url": "https://github.com/google/ground-android/pull/417#pullrequestreview-384942674", "createdAt": "2020-03-31T17:16:29Z", "commit": {"oid": "4436f033b09c3c1e210557d905109a77b00255b6"}, "state": "DISMISSED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxNzoxNjozMFrOF-gCSQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxNzoxOToxMlrOF-gJGA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTA4MDkwNQ==", "bodyText": "Can we use Timber.e here?", "url": "https://github.com/google/ground-android/pull/417#discussion_r401080905", "createdAt": "2020-03-31T17:16:30Z", "author": {"login": "shobhitagarwal1612"}, "path": "gnd/src/main/java/com/google/android/gnd/repository/OfflineAreaRepository.java", "diffHunk": "@@ -0,0 +1,94 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.android.gnd.repository;\n+\n+import static com.google.android.gnd.util.ImmutableListCollector.toImmutableList;\n+import static java8.util.stream.StreamSupport.stream;\n+\n+import com.google.android.gms.maps.model.LatLngBounds;\n+import com.google.android.gnd.Config;\n+import com.google.android.gnd.model.basemap.OfflineArea;\n+import com.google.android.gnd.model.basemap.OfflineArea.State;\n+import com.google.android.gnd.model.basemap.tile.Tile;\n+import com.google.android.gnd.persistence.geojson.GeoJsonParser;\n+import com.google.android.gnd.persistence.local.LocalDataStore;\n+import com.google.android.gnd.persistence.uuid.OfflineUuidGenerator;\n+import com.google.android.gnd.ui.util.FileUtil;\n+import com.google.android.gnd.workers.TileDownloadWorkManager;\n+import com.google.common.collect.ImmutableList;\n+import io.reactivex.Completable;\n+import java.io.File;\n+import java.io.FileNotFoundException;\n+import javax.inject.Inject;\n+import timber.log.Timber;\n+\n+public class OfflineAreaRepository {\n+  private final TileDownloadWorkManager tileDownloadWorkManager;\n+  private final LocalDataStore localDataStore;\n+  private final GeoJsonParser geoJsonParser;\n+  private final FileUtil fileUtil;\n+\n+  private final OfflineUuidGenerator uuidGenerator;\n+\n+  @Inject\n+  public OfflineAreaRepository(\n+      TileDownloadWorkManager tileDownloadWorkManager,\n+      LocalDataStore localDataStore,\n+      GeoJsonParser geoJsonParser,\n+      OfflineUuidGenerator uuidGenerator,\n+      FileUtil fileUtil) {\n+    this.tileDownloadWorkManager = tileDownloadWorkManager;\n+    this.localDataStore = localDataStore;\n+    this.geoJsonParser = geoJsonParser;\n+    this.uuidGenerator = uuidGenerator;\n+    this.fileUtil = fileUtil;\n+  }\n+\n+  private Completable enqueueTileDownloads(OfflineArea area) {\n+    try {\n+      File jsonSource = fileUtil.getFile(Config.GEO_JSON);\n+\n+      ImmutableList<Tile> tiles = geoJsonParser.intersectingTiles(area.getBounds(), jsonSource);\n+\n+      return localDataStore\n+          .insertOrUpdateOfflineArea(area.toBuilder().setState(State.IN_PROGRESS).build())\n+          .andThen(\n+              Completable.merge(\n+                  stream(tiles.asList())\n+                      .map(localDataStore::insertOrUpdateTile)\n+                      .collect(toImmutableList())))\n+          .doOnError(__ -> Timber.d(\"failed to add/update a tile in the database\"))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4436f033b09c3c1e210557d905109a77b00255b6"}, "originalPosition": 74}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTA4MjY0OA==", "bodyText": "I'm guessing that FileNotFoundException can only be raised while attempting to load the json file, right? If yes, then we should only wrap the first line of the method with try-catch. Sorry, I somehow missed this earlier.", "url": "https://github.com/google/ground-android/pull/417#discussion_r401082648", "createdAt": "2020-03-31T17:19:12Z", "author": {"login": "shobhitagarwal1612"}, "path": "gnd/src/main/java/com/google/android/gnd/repository/OfflineAreaRepository.java", "diffHunk": "@@ -0,0 +1,94 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.android.gnd.repository;\n+\n+import static com.google.android.gnd.util.ImmutableListCollector.toImmutableList;\n+import static java8.util.stream.StreamSupport.stream;\n+\n+import com.google.android.gms.maps.model.LatLngBounds;\n+import com.google.android.gnd.Config;\n+import com.google.android.gnd.model.basemap.OfflineArea;\n+import com.google.android.gnd.model.basemap.OfflineArea.State;\n+import com.google.android.gnd.model.basemap.tile.Tile;\n+import com.google.android.gnd.persistence.geojson.GeoJsonParser;\n+import com.google.android.gnd.persistence.local.LocalDataStore;\n+import com.google.android.gnd.persistence.uuid.OfflineUuidGenerator;\n+import com.google.android.gnd.ui.util.FileUtil;\n+import com.google.android.gnd.workers.TileDownloadWorkManager;\n+import com.google.common.collect.ImmutableList;\n+import io.reactivex.Completable;\n+import java.io.File;\n+import java.io.FileNotFoundException;\n+import javax.inject.Inject;\n+import timber.log.Timber;\n+\n+public class OfflineAreaRepository {\n+  private final TileDownloadWorkManager tileDownloadWorkManager;\n+  private final LocalDataStore localDataStore;\n+  private final GeoJsonParser geoJsonParser;\n+  private final FileUtil fileUtil;\n+\n+  private final OfflineUuidGenerator uuidGenerator;\n+\n+  @Inject\n+  public OfflineAreaRepository(\n+      TileDownloadWorkManager tileDownloadWorkManager,\n+      LocalDataStore localDataStore,\n+      GeoJsonParser geoJsonParser,\n+      OfflineUuidGenerator uuidGenerator,\n+      FileUtil fileUtil) {\n+    this.tileDownloadWorkManager = tileDownloadWorkManager;\n+    this.localDataStore = localDataStore;\n+    this.geoJsonParser = geoJsonParser;\n+    this.uuidGenerator = uuidGenerator;\n+    this.fileUtil = fileUtil;\n+  }\n+\n+  private Completable enqueueTileDownloads(OfflineArea area) {\n+    try {\n+      File jsonSource = fileUtil.getFile(Config.GEO_JSON);\n+\n+      ImmutableList<Tile> tiles = geoJsonParser.intersectingTiles(area.getBounds(), jsonSource);\n+\n+      return localDataStore\n+          .insertOrUpdateOfflineArea(area.toBuilder().setState(State.IN_PROGRESS).build())\n+          .andThen(\n+              Completable.merge(\n+                  stream(tiles.asList())\n+                      .map(localDataStore::insertOrUpdateTile)\n+                      .collect(toImmutableList())))\n+          .doOnError(__ -> Timber.d(\"failed to add/update a tile in the database\"))\n+          .andThen(tileDownloadWorkManager.enqueueTileDownloadWorker());\n+    } catch (FileNotFoundException e) {\n+      return Completable.error(e);\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4436f033b09c3c1e210557d905109a77b00255b6"}, "originalPosition": 78}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "95827ceba145a7b59a55d5044c908ff914867b6b", "author": {"user": {"login": "scolsen", "name": "Scott Olsen"}}, "url": "https://github.com/google/ground-android/commit/95827ceba145a7b59a55d5044c908ff914867b6b", "committedDate": "2020-03-31T18:23:39Z", "message": "Use Timber.e instead of Timber.e"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2dbf955c34b26782e513c33fa261b4534f93512a", "author": {"user": {"login": "scolsen", "name": "Scott Olsen"}}, "url": "https://github.com/google/ground-android/commit/2dbf955c34b26782e513c33fa261b4534f93512a", "committedDate": "2020-03-31T19:23:05Z", "message": "OfflineAreaRepository: Separate declaration and assignment of jsonSource"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ab758c3fe9672378e2d2b4c9f8060757ff98b36f", "author": {"user": {"login": "scolsen", "name": "Scott Olsen"}}, "url": "https://github.com/google/ground-android/commit/ab758c3fe9672378e2d2b4c9f8060757ff98b36f", "committedDate": "2020-04-03T14:59:37Z", "message": "Add gnd-geojson; update fileUtil to access raw resources\n\nAt the moment, we're using an on-device json file to source mbtiles for\ndownload. We have to bundle the file with the application, so I've added\nit as a raw resource.\n\nAccessing the file's contents also requires an additional method in the\nFileUtil helper, since android's openRawResource returns an input stream\nnot a File; it's not the most efficient solution, but in order to have\na small delta and make it easier to change this in the future, I've\nimplemented a method that copies the inputstream to a file corresponding\nto the config name--this allows us to make a drop-in replacement--the\nalternative requires rewriting the logic of the json parser, which would\nneed to change yet again as soon as we no longer use a raw resource, so\nI felt this was an appropriate approach for now, even though the stream\nto file conversion is redundant."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0250dcc32d3bac14ed60314defb73fab93d38fbb", "author": {"user": {"login": "scolsen", "name": "Scott Olsen"}}, "url": "https://github.com/google/ground-android/commit/0250dcc32d3bac14ed60314defb73fab93d38fbb", "committedDate": "2020-04-03T15:06:06Z", "message": "Handle addAreaAndEnqueue errors downstream."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "17f70eb7ab4195129a82a5a38e90e0a98089ff91", "author": {"user": {"login": "scolsen", "name": "Scott Olsen"}}, "url": "https://github.com/google/ground-android/commit/17f70eb7ab4195129a82a5a38e90e0a98089ff91", "committedDate": "2020-04-03T15:17:31Z", "message": "Prepend files dir to GEO_JSON file write.\n\nThe root directory is a read only file system--we need to write the file\nto the app's data dir.\n\nAs mentioned in a previous commit, this extraneous write will hopefully\nbe eliminated in the future."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6b8969dca73281d3404ad82a78b7341b681d65f0", "author": {"user": {"login": "scolsen", "name": "Scott Olsen"}}, "url": "https://github.com/google/ground-android/commit/6b8969dca73281d3404ad82a78b7341b681d65f0", "committedDate": "2020-04-03T15:31:23Z", "message": "Remove unused import"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg3MzgzMjY4", "url": "https://github.com/google/ground-android/pull/417#pullrequestreview-387383268", "createdAt": "2020-04-03T15:57:42Z", "commit": {"oid": "6b8969dca73281d3404ad82a78b7341b681d65f0"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxNTo1Nzo0MlrOGAbm2g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxNTo1Nzo0MlrOGAbm2g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzEwNTQ5OA==", "bodyText": "This copies the raw file to /data dir each time the function is called. Instead, let's first try to load the file from Config.GEO_JSON and save a copy to data dir only when FileNotFound exception gets raised. That logic should probably be added to getFileFromRawResource() in fileutil\nwdyt?", "url": "https://github.com/google/ground-android/pull/417#discussion_r403105498", "createdAt": "2020-04-03T15:57:42Z", "author": {"login": "shobhitagarwal1612"}, "path": "gnd/src/main/java/com/google/android/gnd/repository/OfflineAreaRepository.java", "diffHunk": "@@ -0,0 +1,97 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.android.gnd.repository;\n+\n+import static com.google.android.gnd.util.ImmutableListCollector.toImmutableList;\n+import static java8.util.stream.StreamSupport.stream;\n+\n+import com.google.android.gms.maps.model.LatLngBounds;\n+import com.google.android.gnd.Config;\n+import com.google.android.gnd.R;\n+import com.google.android.gnd.model.basemap.OfflineArea;\n+import com.google.android.gnd.model.basemap.OfflineArea.State;\n+import com.google.android.gnd.model.basemap.tile.Tile;\n+import com.google.android.gnd.persistence.geojson.GeoJsonParser;\n+import com.google.android.gnd.persistence.local.LocalDataStore;\n+import com.google.android.gnd.persistence.uuid.OfflineUuidGenerator;\n+import com.google.android.gnd.ui.util.FileUtil;\n+import com.google.android.gnd.workers.TileDownloadWorkManager;\n+import com.google.common.collect.ImmutableList;\n+import io.reactivex.Completable;\n+import java.io.File;\n+import java.io.IOException;\n+import javax.inject.Inject;\n+import timber.log.Timber;\n+\n+public class OfflineAreaRepository {\n+  private final TileDownloadWorkManager tileDownloadWorkManager;\n+  private final LocalDataStore localDataStore;\n+  private final GeoJsonParser geoJsonParser;\n+  private final FileUtil fileUtil;\n+\n+  private final OfflineUuidGenerator uuidGenerator;\n+\n+  @Inject\n+  public OfflineAreaRepository(\n+      TileDownloadWorkManager tileDownloadWorkManager,\n+      LocalDataStore localDataStore,\n+      GeoJsonParser geoJsonParser,\n+      OfflineUuidGenerator uuidGenerator,\n+      FileUtil fileUtil) {\n+    this.tileDownloadWorkManager = tileDownloadWorkManager;\n+    this.localDataStore = localDataStore;\n+    this.geoJsonParser = geoJsonParser;\n+    this.uuidGenerator = uuidGenerator;\n+    this.fileUtil = fileUtil;\n+  }\n+\n+  private Completable enqueueTileDownloads(OfflineArea area) {\n+    File jsonSource;\n+\n+    try {\n+      jsonSource = fileUtil.getFileFromRawResource(R.raw.gnd_geojson, Config.GEO_JSON);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6b8969dca73281d3404ad82a78b7341b681d65f0"}, "originalPosition": 66}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "00dfee8a73026a3489b9a8c3eaed4e83d8ee74a3", "author": {"user": {"login": "scolsen", "name": "Scott Olsen"}}, "url": "https://github.com/google/ground-android/commit/00dfee8a73026a3489b9a8c3eaed4e83d8ee74a3", "committedDate": "2020-04-08T14:03:54Z", "message": "Only load geojson from raw resource if it doesn't exist in /data"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkwMDM4NjAz", "url": "https://github.com/google/ground-android/pull/417#pullrequestreview-390038603", "createdAt": "2020-04-08T14:38:59Z", "commit": {"oid": "00dfee8a73026a3489b9a8c3eaed4e83d8ee74a3"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "417b8a056cc6be1d9784d00c5510d6c68390422f", "author": {"user": {"login": "shobhitagarwal1612", "name": "Shobhit Agarwal"}}, "url": "https://github.com/google/ground-android/commit/417b8a056cc6be1d9784d00c5510d6c68390422f", "committedDate": "2020-04-08T14:42:56Z", "message": "Merge branch 'master' into offline-areas"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1766, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}