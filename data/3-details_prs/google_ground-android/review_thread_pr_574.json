{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc3MTUxNzU1", "number": 574, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxNTo0ODowM1rOEe98dA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxNTo1MDoyMVrOEe-AWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwOTA3NjM2OnYy", "diffSide": "RIGHT", "path": "gnd/src/main/java/com/google/android/gnd/persistence/sync/TileSourceDownloadWorker.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxNTo0ODowM1rOHK81mw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxNzoyOTozOVrOHLBDsA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTI0NDU3MQ==", "bodyText": "Naming nit: You download tiles from a tile source, so maybe this would make more sense as \"downloadTiles\"?", "url": "https://github.com/google/ground-android/pull/574#discussion_r481244571", "createdAt": "2020-09-01T15:48:03Z", "author": {"login": "gino-m"}, "path": "gnd/src/main/java/com/google/android/gnd/persistence/sync/TileSourceDownloadWorker.java", "diffHunk": "@@ -170,7 +172,7 @@ private Completable processTiles(ImmutableList<Tile> pendingTiles) {\n                 case IN_PROGRESS:\n                 case FAILED:\n                 default:\n-                  return downloadTile(t);\n+                  return downloadTileSource(t);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "faac45eb56af44ffd03ef537dc813fd7b5eb4bf7"}, "originalPosition": 147}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTI3MjAzOA==", "bodyText": "Fair point. I guess the \"Tile > TileSet\" renaming issue isn't really a duplication then.\nOne could argue that we are in fact downloading the tile source--we're simply copying the file specified at a given URL (the tile source). We don't really know anything about individual tiles or care about them until we get down to the tile provider level, which looks at tiles specified in a tile source.\nBut I also don't want to argue semantics--if it's clearer to use \"Tiles\" or \"TileSet\" here I think that's fine--technically speaking though, if we are calling the thing specified in the geoJSON a tile source, that is what we are downloading here--that is, we aren't doing any parsing of the contents of the tile source and downloading individual tiles, we are just downloading the source file itself whole cloth. @gino-m", "url": "https://github.com/google/ground-android/pull/574#discussion_r481272038", "createdAt": "2020-09-01T16:19:17Z", "author": {"login": "scolsen"}, "path": "gnd/src/main/java/com/google/android/gnd/persistence/sync/TileSourceDownloadWorker.java", "diffHunk": "@@ -170,7 +172,7 @@ private Completable processTiles(ImmutableList<Tile> pendingTiles) {\n                 case IN_PROGRESS:\n                 case FAILED:\n                 default:\n-                  return downloadTile(t);\n+                  return downloadTileSource(t);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTI0NDU3MQ=="}, "originalCommit": {"oid": "faac45eb56af44ffd03ef537dc813fd7b5eb4bf7"}, "originalPosition": 147}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTMxMzcxMg==", "bodyText": "Ahhh... sorry, at first glance I may have though this was actually downloading the tiles themselves. Please disregard, this makes perfect sense. If we really wanted to future-proof our semantics, we could define \"tile source\" to be an arbitrary way of getting tiles, and this case as an \"mbtiles tile source's geojson extents file\" but we can cross that bridge if we ever get to it.", "url": "https://github.com/google/ground-android/pull/574#discussion_r481313712", "createdAt": "2020-09-01T17:29:39Z", "author": {"login": "gino-m"}, "path": "gnd/src/main/java/com/google/android/gnd/persistence/sync/TileSourceDownloadWorker.java", "diffHunk": "@@ -170,7 +172,7 @@ private Completable processTiles(ImmutableList<Tile> pendingTiles) {\n                 case IN_PROGRESS:\n                 case FAILED:\n                 default:\n-                  return downloadTile(t);\n+                  return downloadTileSource(t);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTI0NDU3MQ=="}, "originalCommit": {"oid": "faac45eb56af44ffd03ef537dc813fd7b5eb4bf7"}, "originalPosition": 147}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwOTA3OTA4OnYy", "diffSide": "RIGHT", "path": "gnd/src/main/java/com/google/android/gnd/persistence/sync/TileSourceDownloadWorker.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxNTo0ODo0NlrOHK83ag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxNTo0ODo0NlrOHK83ag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTI0NTAzNA==", "bodyText": "Same comment here - the issue isn't that tiles couldn't be download from the tile source, so I'd still expect this to be a TileDownloadException.", "url": "https://github.com/google/ground-android/pull/574#discussion_r481245034", "createdAt": "2020-09-01T15:48:46Z", "author": {"login": "gino-m"}, "path": "gnd/src/main/java/com/google/android/gnd/persistence/sync/TileSourceDownloadWorker.java", "diffHunk": "@@ -209,8 +212,8 @@ public String getNotificationTitle() {\n     return getApplicationContext().getString(R.string.downloading_tiles);\n   }\n \n-  static class TileDownloadException extends RuntimeException {\n-    TileDownloadException(String msg, Throwable e) {\n+  static class TileSourceDownloadException extends RuntimeException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "faac45eb56af44ffd03ef537dc813fd7b5eb4bf7"}, "originalPosition": 186}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwOTA3OTYyOnYy", "diffSide": "RIGHT", "path": "gnd/src/main/java/com/google/android/gnd/repository/OfflineAreaRepository.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxNTo0ODo1MVrOHK83sQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxNTo0ODo1MVrOHK83sQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTI0NTEwNQ==", "bodyText": "Same here.", "url": "https://github.com/google/ground-android/pull/574#discussion_r481245105", "createdAt": "2020-09-01T15:48:51Z", "author": {"login": "gino-m"}, "path": "gnd/src/main/java/com/google/android/gnd/repository/OfflineAreaRepository.java", "diffHunk": "@@ -47,7 +47,7 @@\n import timber.log.Timber;\n \n public class OfflineAreaRepository {\n-  private final TileDownloadWorkManager tileDownloadWorkManager;\n+  private final TileSourceDownloadWorkManager tileSourceDownloadWorkManager;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "faac45eb56af44ffd03ef537dc813fd7b5eb4bf7"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwOTA4MTMxOnYy", "diffSide": "RIGHT", "path": "gnd/src/main/java/com/google/android/gnd/repository/OfflineAreaRepository.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxNTo0OToxNVrOHK84wA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxNTo0OToxNVrOHK84wA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTI0NTM3Ng==", "bodyText": "Same - we download tiles, not tile sources.", "url": "https://github.com/google/ground-android/pull/574#discussion_r481245376", "createdAt": "2020-09-01T15:49:15Z", "author": {"login": "gino-m"}, "path": "gnd/src/main/java/com/google/android/gnd/repository/OfflineAreaRepository.java", "diffHunk": "@@ -94,36 +94,36 @@ private File downloadOfflineBaseMapSource(OfflineBaseMapSource offlineBaseMapSou\n     return localFile;\n   }\n \n-  /** Enqueue a single area and its tiles for download. */\n-  private Completable enqueueDownload(OfflineArea area, ImmutableList<Tile> tiles) {\n+  /** Enqueue a single area and its tile sources for download. */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "faac45eb56af44ffd03ef537dc813fd7b5eb4bf7"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwOTA4NjM1OnYy", "diffSide": "RIGHT", "path": "gnd/src/main/java/com/google/android/gnd/repository/OfflineAreaRepository.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxNTo1MDoyMVrOHK87xg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxNTo1MDoyMVrOHK87xg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTI0NjE1MA==", "bodyText": "This case is a little be trickier - it's not clear how to describe that we're \"getting all tile sources for which all tiles have been downloaded\", so I think it's ok as-is.", "url": "https://github.com/google/ground-android/pull/574#discussion_r481246150", "createdAt": "2020-09-01T15:50:21Z", "author": {"login": "gino-m"}, "path": "gnd/src/main/java/com/google/android/gnd/repository/OfflineAreaRepository.java", "diffHunk": "@@ -164,25 +164,26 @@ public Completable addAreaAndEnqueue(LatLngBounds bounds) {\n     return localDataStore.getOfflineAreaById(offlineAreaId);\n   }\n \n-  public Flowable<ImmutableSet<Tile>> getIntersectingDownloadedTilesOnceAndStream(\n+  public Flowable<ImmutableSet<TileSource>> getIntersectingDownloadedTileSourcesOnceAndStream(\n       OfflineArea offlineArea) {\n-    return getBaseMapTiles(offlineArea)\n+    return getBaseMapTileSources(offlineArea)\n         .flatMapPublisher(\n             tiles ->\n-                getDownloadedTilesOnceAndStream()\n+                getDownloadedTileSourcesOnceAndStream()\n                     .map(ts -> stream(ts).filter(tiles::contains).collect(toImmutableSet())))\n-        // If no tiles are found, we report the area takes up 0.0mb on the device.\n-        .doOnError(throwable -> Timber.d(throwable, \"no tiles found for area %s\", offlineArea))\n+        // If no tile sources are found, we report the area takes up 0.0mb on the device.\n+        .doOnError(\n+            throwable -> Timber.d(throwable, \"no tile sources found for area %s\", offlineArea))\n         .onErrorReturn(__ -> ImmutableSet.of());\n   }\n \n-  public Flowable<ImmutableSet<Tile>> getDownloadedTilesOnceAndStream() {\n+  public Flowable<ImmutableSet<TileSource>> getDownloadedTileSourcesOnceAndStream() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "faac45eb56af44ffd03ef537dc813fd7b5eb4bf7"}, "originalPosition": 123}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2533, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}