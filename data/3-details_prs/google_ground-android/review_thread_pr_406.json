{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkxNTAyNTIw", "number": 406, "reviewThreads": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQxNzo1NDoyOFrODp9qcA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yOVQyMDozNDo0NlrODsdU3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1MzI4NDk2OnYy", "diffSide": "RIGHT", "path": "gnd/src/main/java/com/google/android/gnd/ui/map/gms/GoogleMapsMapProvider.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQxNzo1NDoyOFrOF5dz0Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQxNzo1NDozOFrOF5d0MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTgwMTU1Mw==", "bodyText": "Please use an ImmutableMap<> defined in a constant instead. The constant can then be returned from this method.", "url": "https://github.com/google/ground-android/pull/406#discussion_r395801553", "createdAt": "2020-03-20T17:54:28Z", "author": {"login": "gino-m"}, "path": "gnd/src/main/java/com/google/android/gnd/ui/map/gms/GoogleMapsMapProvider.java", "diffHunk": "@@ -73,29 +74,28 @@ public Fragment getFragment() {\n \n   @Override\n   public int getMapType() {\n-    if (map != null) {\n-      return map.getValue().getMapType();\n+    if (map == null) {\n+      throw new IllegalStateException(\"MapAdapter is null\");\n     }\n-    throw new IllegalStateException(\"MapAdapter is null\");\n+    return map.getValue().getMapType();\n   }\n \n   @Override\n   public void setMapType(int mapType) {\n-    if (map != null) {\n-      map.getValue().setMapType(mapType);\n-    } else {\n+    if (map == null) {\n       throw new IllegalStateException(\"MapAdapter is null\");\n     }\n+    map.getValue().setMapType(mapType);\n   }\n \n   @Override\n-  public HashMap<Integer, String> getMapTypes() {\n-    HashMap<Integer, String> hashMap = new HashMap<>();\n-    hashMap.put(GoogleMap.MAP_TYPE_NONE, \"None\");\n-    hashMap.put(GoogleMap.MAP_TYPE_NORMAL, \"Normal\");\n-    hashMap.put(GoogleMap.MAP_TYPE_SATELLITE, \"Satellite\");\n-    hashMap.put(GoogleMap.MAP_TYPE_TERRAIN, \"Terrain\");\n-    hashMap.put(GoogleMap.MAP_TYPE_HYBRID, \"Hybrid\");\n-    return hashMap;\n+  public Map<Integer, String> getMapTypes() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dcb09e68422f21c8c4d549545e04fe892d36717b"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTgwMTY0OA==", "bodyText": "Also add // TODO: i18n.", "url": "https://github.com/google/ground-android/pull/406#discussion_r395801648", "createdAt": "2020-03-20T17:54:38Z", "author": {"login": "gino-m"}, "path": "gnd/src/main/java/com/google/android/gnd/ui/map/gms/GoogleMapsMapProvider.java", "diffHunk": "@@ -73,29 +74,28 @@ public Fragment getFragment() {\n \n   @Override\n   public int getMapType() {\n-    if (map != null) {\n-      return map.getValue().getMapType();\n+    if (map == null) {\n+      throw new IllegalStateException(\"MapAdapter is null\");\n     }\n-    throw new IllegalStateException(\"MapAdapter is null\");\n+    return map.getValue().getMapType();\n   }\n \n   @Override\n   public void setMapType(int mapType) {\n-    if (map != null) {\n-      map.getValue().setMapType(mapType);\n-    } else {\n+    if (map == null) {\n       throw new IllegalStateException(\"MapAdapter is null\");\n     }\n+    map.getValue().setMapType(mapType);\n   }\n \n   @Override\n-  public HashMap<Integer, String> getMapTypes() {\n-    HashMap<Integer, String> hashMap = new HashMap<>();\n-    hashMap.put(GoogleMap.MAP_TYPE_NONE, \"None\");\n-    hashMap.put(GoogleMap.MAP_TYPE_NORMAL, \"Normal\");\n-    hashMap.put(GoogleMap.MAP_TYPE_SATELLITE, \"Satellite\");\n-    hashMap.put(GoogleMap.MAP_TYPE_TERRAIN, \"Terrain\");\n-    hashMap.put(GoogleMap.MAP_TYPE_HYBRID, \"Hybrid\");\n-    return hashMap;\n+  public Map<Integer, String> getMapTypes() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTgwMTU1Mw=="}, "originalCommit": {"oid": "dcb09e68422f21c8c4d549545e04fe892d36717b"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1ODkzMTM3OnYy", "diffSide": "RIGHT", "path": "gnd/src/main/res/values/strings.xml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxODoyNDo0NFrOF6Sh8w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxODoyNDo0NFrOF6Sh8w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjY2NTMzMQ==", "bodyText": "Nit: \"Select map type\"", "url": "https://github.com/google/ground-android/pull/406#discussion_r396665331", "createdAt": "2020-03-23T18:24:44Z", "author": {"login": "gino-m"}, "path": "gnd/src/main/res/values/strings.xml", "diffHunk": "@@ -140,5 +140,6 @@\n   <string name=\"cancel\">Cancel</string>\n   <string name=\"join_project\">Join project</string>\n   <string name=\"photo_preview\">Photo preview</string>\n+  <string name=\"select_map_type\">Select Map Type</string>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "076d3d0be28277f77a3fac2c2c58f9b9ac794cc6"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1ODkzODc2OnYy", "diffSide": "RIGHT", "path": "gnd/src/main/java/com/google/android/gnd/ui/home/mapcontainer/MapContainerFragment.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxODoyNjowOVrOF6Smgg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxOToyNDoyNlrOF6Uq-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjY2NjQ5OA==", "bodyText": "We're trying to move away from Butterknife in favor of Data Binding to ViewModels - could we do that here instead?", "url": "https://github.com/google/ground-android/pull/406#discussion_r396666498", "createdAt": "2020-03-23T18:26:09Z", "author": {"login": "gino-m"}, "path": "gnd/src/main/java/com/google/android/gnd/ui/home/mapcontainer/MapContainerFragment.java", "diffHunk": "@@ -72,6 +74,26 @@\n   private HomeScreenViewModel homeScreenViewModel;\n   private MainViewModel mainViewModel;\n \n+  @OnClick(R.id.map_type_btn)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "076d3d0be28277f77a3fac2c2c58f9b9ac794cc6"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjY3MDk0Ng==", "bodyText": "I agree that the class needs a refactor, but doing that in the same PR would broaden the scope of this PR. We can open a new refactor bug to handle that independently. Wdyt?", "url": "https://github.com/google/ground-android/pull/406#discussion_r396670946", "createdAt": "2020-03-23T18:33:08Z", "author": {"login": "shobhitagarwal1612"}, "path": "gnd/src/main/java/com/google/android/gnd/ui/home/mapcontainer/MapContainerFragment.java", "diffHunk": "@@ -72,6 +74,26 @@\n   private HomeScreenViewModel homeScreenViewModel;\n   private MainViewModel mainViewModel;\n \n+  @OnClick(R.id.map_type_btn)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjY2NjQ5OA=="}, "originalCommit": {"oid": "076d3d0be28277f77a3fac2c2c58f9b9ac794cc6"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjY3NDIzNQ==", "bodyText": "I mainly didn't want to add a new instance of Butterknife binding if we could avoid it, esp. since we already have a MapContainerViewModel. Is it just a question of defining onMapTypeButtonClick() in the view model and exposing an Observable<Event<Nil>> to trigger the dialog in the view? If so I'd prefer to add it straight away if possible. If you have your hands full atm though please lmk and I can try to send a PR to your branch with the recommended changes!", "url": "https://github.com/google/ground-android/pull/406#discussion_r396674235", "createdAt": "2020-03-23T18:38:21Z", "author": {"login": "gino-m"}, "path": "gnd/src/main/java/com/google/android/gnd/ui/home/mapcontainer/MapContainerFragment.java", "diffHunk": "@@ -72,6 +74,26 @@\n   private HomeScreenViewModel homeScreenViewModel;\n   private MainViewModel mainViewModel;\n \n+  @OnClick(R.id.map_type_btn)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjY2NjQ5OA=="}, "originalCommit": {"oid": "076d3d0be28277f77a3fac2c2c58f9b9ac794cc6"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjcwMDQwOA==", "bodyText": "Done", "url": "https://github.com/google/ground-android/pull/406#discussion_r396700408", "createdAt": "2020-03-23T19:24:26Z", "author": {"login": "shobhitagarwal1612"}, "path": "gnd/src/main/java/com/google/android/gnd/ui/home/mapcontainer/MapContainerFragment.java", "diffHunk": "@@ -72,6 +74,26 @@\n   private HomeScreenViewModel homeScreenViewModel;\n   private MainViewModel mainViewModel;\n \n+  @OnClick(R.id.map_type_btn)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjY2NjQ5OA=="}, "originalCommit": {"oid": "076d3d0be28277f77a3fac2c2c58f9b9ac794cc6"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3MTg0OTgyOnYy", "diffSide": "RIGHT", "path": "gnd/src/main/res/drawable/map_layers.xml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxNjo0MToyNVrOF8QEHA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxNjo1NzoyMFrOF8QzkQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODcyMjA3Ng==", "bodyText": "Missing newline", "url": "https://github.com/google/ground-android/pull/406#discussion_r398722076", "createdAt": "2020-03-26T16:41:25Z", "author": {"login": "scolsen"}, "path": "gnd/src/main/res/drawable/map_layers.xml", "diffHunk": "@@ -0,0 +1,29 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+\n+<!--\n+  ~ Copyright 2020 Google LLC\n+  ~\n+  ~ Licensed under the Apache License, Version 2.0 (the \"License\");\n+  ~ you may not use this file except in compliance with the License.\n+  ~ You may obtain a copy of the License at\n+  ~\n+  ~     https://www.apache.org/licenses/LICENSE-2.0\n+  ~\n+  ~ Unless required by applicable law or agreed to in writing, software\n+  ~ distributed under the License is distributed on an \"AS IS\" BASIS,\n+  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+  ~ See the License for the specific language governing permissions and\n+  ~ limitations under the License.\n+  -->\n+\n+<vector xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+  android:width=\"24dp\"\n+  android:height=\"24dp\"\n+  android:viewportWidth=\"24\"\n+  android:viewportHeight=\"24\">\n+\n+  <path android:pathData=\"M0 0h24v24H0V0z\" />\n+  <path\n+    android:fillColor=\"#000000\"\n+    android:pathData=\"M11.99 18.54l-7.37-5.73L3 14.07l9 7 9-7-1.63-1.27zM12 16l7.36-5.73L21 9l-9-7-9 7 1.63 1.27L12 16zm0-11.47L17.74 9 12 13.47 6.26 9 12 4.53z\" />\n+</vector>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b88b0a07edc50463fb53ef887442efa7c11bf66d"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODczNDIyNQ==", "bodyText": "Thanks.\nWe should probably automate this check as well using pmd or checkstyle.", "url": "https://github.com/google/ground-android/pull/406#discussion_r398734225", "createdAt": "2020-03-26T16:57:20Z", "author": {"login": "shobhitagarwal1612"}, "path": "gnd/src/main/res/drawable/map_layers.xml", "diffHunk": "@@ -0,0 +1,29 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+\n+<!--\n+  ~ Copyright 2020 Google LLC\n+  ~\n+  ~ Licensed under the Apache License, Version 2.0 (the \"License\");\n+  ~ you may not use this file except in compliance with the License.\n+  ~ You may obtain a copy of the License at\n+  ~\n+  ~     https://www.apache.org/licenses/LICENSE-2.0\n+  ~\n+  ~ Unless required by applicable law or agreed to in writing, software\n+  ~ distributed under the License is distributed on an \"AS IS\" BASIS,\n+  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+  ~ See the License for the specific language governing permissions and\n+  ~ limitations under the License.\n+  -->\n+\n+<vector xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+  android:width=\"24dp\"\n+  android:height=\"24dp\"\n+  android:viewportWidth=\"24\"\n+  android:viewportHeight=\"24\">\n+\n+  <path android:pathData=\"M0 0h24v24H0V0z\" />\n+  <path\n+    android:fillColor=\"#000000\"\n+    android:pathData=\"M11.99 18.54l-7.37-5.73L3 14.07l9 7 9-7-1.63-1.27zM12 16l7.36-5.73L21 9l-9-7-9 7 1.63 1.27L12 16zm0-11.47L17.74 9 12 13.47 6.26 9 12 4.53z\" />\n+</vector>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODcyMjA3Ng=="}, "originalCommit": {"oid": "b88b0a07edc50463fb53ef887442efa7c11bf66d"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3MTg1MDU4OnYy", "diffSide": "RIGHT", "path": "gnd/src/main/res/layout/map_container_frag.xml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxNjo0MTozNFrOF8QEkA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxNjo0MTozNFrOF8QEkA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODcyMjE5Mg==", "bodyText": "Missing newline", "url": "https://github.com/google/ground-android/pull/406#discussion_r398722192", "createdAt": "2020-03-26T16:41:34Z", "author": {"login": "scolsen"}, "path": "gnd/src/main/res/layout/map_container_frag.xml", "diffHunk": "@@ -86,20 +102,24 @@\n         android:tint=\"@color/colorBackground\"\n         app:backgroundTint=\"@color/colorGrey500\"\n         app:fabSize=\"normal\"\n-        app:useCompatPadding=\"true\"/>\n-    </LinearLayout>\n+        app:layout_constraintBottom_toBottomOf=\"parent\"\n+        app:layout_constraintEnd_toEndOf=\"parent\"\n+        app:layout_constraintStart_toStartOf=\"parent\"\n+        app:useCompatPadding=\"true\" />\n+    </androidx.constraintlayout.widget.ConstraintLayout>\n \n     <ImageButton\n       android:id=\"@+id/hamburger_btn\"\n       android:layout_width=\"wrap_content\"\n       android:layout_height=\"wrap_content\"\n-      android:layout_gravity=\"top|start|left\"\n-      android:padding=\"16dp\"\n+      android:layout_gravity=\"top|start\"\n       android:background=\"?android:attr/selectableItemBackground\"\n       android:clickable=\"true\"\n+      android:focusable=\"true\"\n       android:onClick=\"@{() -> homeScreenViewModel.openNavDrawer()}\"\n+      android:padding=\"16dp\"\n       android:src=\"@drawable/ic_menu_black_24dp\"\n-      android:tint=\"@color/colorBackground\"/>\n+      android:tint=\"@color/colorBackground\" />\n \n   </FrameLayout>\n </layout>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b88b0a07edc50463fb53ef887442efa7c11bf66d"}, "originalPosition": 109}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3MTg3NjA1OnYy", "diffSide": "RIGHT", "path": "gnd/src/main/java/com/google/android/gnd/ui/map/MapAdapter.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxNjo0Njo1OVrOF8QUzw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yOFQwOToyMjoxN1rOF9IIhg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODcyNjM1MQ==", "bodyText": "Instead of using int here directly should we abstract away the particular map types of a given Map impl and introduce an enum and some conversion functions to allow us to set the types regardless of the underlying adapter?\n@gino-m wdyt?\ne.g. on the adapter we'd have some FN setMapType(TypeENUM) instead of int.\nNo need to do this now.", "url": "https://github.com/google/ground-android/pull/406#discussion_r398726351", "createdAt": "2020-03-26T16:46:59Z", "author": {"login": "scolsen"}, "path": "gnd/src/main/java/com/google/android/gnd/ui/map/MapAdapter.java", "diffHunk": "@@ -70,6 +70,12 @@\n   /** Update map pins shown on map. */\n   void setMapPins(ImmutableSet<MapPin> pins);\n \n+  /** Get current map type. */\n+  int getMapType();\n+\n+  /** Update map type. */\n+  void setMapType(int mapType);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b88b0a07edc50463fb53ef887442efa7c11bf66d"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTUyNDU4Nw==", "bodyText": "It may make sense to define an enum at the interface level with a superset of basemap types, yes. Also +1 that it can be done in a follow up (please add a TODO)?\nAlso, somewhere we should clarify that Map Type refers to the basemap shown below map features and offline satellite imagery - they're called \"map styles\" in Mapbox and \"basemaps\" in Leaflet.", "url": "https://github.com/google/ground-android/pull/406#discussion_r399524587", "createdAt": "2020-03-27T20:35:48Z", "author": {"login": "gino-m"}, "path": "gnd/src/main/java/com/google/android/gnd/ui/map/MapAdapter.java", "diffHunk": "@@ -70,6 +70,12 @@\n   /** Update map pins shown on map. */\n   void setMapPins(ImmutableSet<MapPin> pins);\n \n+  /** Get current map type. */\n+  int getMapType();\n+\n+  /** Update map type. */\n+  void setMapType(int mapType);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODcyNjM1MQ=="}, "originalCommit": {"oid": "b88b0a07edc50463fb53ef887442efa7c11bf66d"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTY0MDcxMA==", "bodyText": "Thanks @scolsen and @gino-m! Done", "url": "https://github.com/google/ground-android/pull/406#discussion_r399640710", "createdAt": "2020-03-28T09:22:17Z", "author": {"login": "shobhitagarwal1612"}, "path": "gnd/src/main/java/com/google/android/gnd/ui/map/MapAdapter.java", "diffHunk": "@@ -70,6 +70,12 @@\n   /** Update map pins shown on map. */\n   void setMapPins(ImmutableSet<MapPin> pins);\n \n+  /** Get current map type. */\n+  int getMapType();\n+\n+  /** Update map type. */\n+  void setMapType(int mapType);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODcyNjM1MQ=="}, "originalCommit": {"oid": "b88b0a07edc50463fb53ef887442efa7c11bf66d"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3OTQ0MzAyOnYy", "diffSide": "RIGHT", "path": "gnd/src/main/java/com/google/android/gnd/ui/home/mapcontainer/MapContainerViewModel.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yOVQyMDozMzo0OFrOF9U6Bw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQwNTo0Njo0NlrOF9aY0g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTg0OTk5MQ==", "bodyText": "Can we simplify this by eliminating mapLayerTypeClicks and just making mapLayerUpdateRequests a MutableLiveData that gets a new Event on each click (.setValue(Event.create(..)))?", "url": "https://github.com/google/ground-android/pull/406#discussion_r399849991", "createdAt": "2020-03-29T20:33:48Z", "author": {"login": "gino-m"}, "path": "gnd/src/main/java/com/google/android/gnd/ui/home/mapcontainer/MapContainerViewModel.java", "diffHunk": "@@ -88,6 +94,9 @@\n                 .map(Loadable::value)\n                 .switchMap(this::getFeaturesStream)\n                 .map(MapContainerViewModel::toMapPins));\n+    this.mapLayerUpdateRequests =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "372a3604c7ff3112380ff08a20b74ded333f16b7"}, "originalPosition": 62}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTkzOTc5NA==", "bodyText": "Thanks! Done", "url": "https://github.com/google/ground-android/pull/406#discussion_r399939794", "createdAt": "2020-03-30T05:46:46Z", "author": {"login": "shobhitagarwal1612"}, "path": "gnd/src/main/java/com/google/android/gnd/ui/home/mapcontainer/MapContainerViewModel.java", "diffHunk": "@@ -88,6 +94,9 @@\n                 .map(Loadable::value)\n                 .switchMap(this::getFeaturesStream)\n                 .map(MapContainerViewModel::toMapPins));\n+    this.mapLayerUpdateRequests =", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTg0OTk5MQ=="}, "originalCommit": {"oid": "372a3604c7ff3112380ff08a20b74ded333f16b7"}, "originalPosition": 62}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3OTQ0NDE1OnYy", "diffSide": "RIGHT", "path": "gnd/src/main/java/com/google/android/gnd/ui/home/mapcontainer/MapContainerViewModel.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yOVQyMDozNDo0NlrOF9U6lQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQwNTo0Njo1M1rOF9aY8Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTg1MDEzMw==", "bodyText": "Would showMapTypeSelectorRequests be more correct here?", "url": "https://github.com/google/ground-android/pull/406#discussion_r399850133", "createdAt": "2020-03-29T20:34:46Z", "author": {"login": "gino-m"}, "path": "gnd/src/main/java/com/google/android/gnd/ui/home/mapcontainer/MapContainerViewModel.java", "diffHunk": "@@ -29,34 +28,40 @@\n import com.google.android.gnd.repository.FeatureRepository;\n import com.google.android.gnd.repository.ProjectRepository;\n import com.google.android.gnd.rx.BooleanOrError;\n+import com.google.android.gnd.rx.Event;\n import com.google.android.gnd.rx.Loadable;\n+import com.google.android.gnd.rx.Nil;\n import com.google.android.gnd.system.LocationManager;\n import com.google.android.gnd.ui.common.AbstractViewModel;\n import com.google.android.gnd.ui.common.SharedViewModel;\n import com.google.android.gnd.ui.map.MapPin;\n import com.google.common.collect.ImmutableSet;\n import io.reactivex.BackpressureStrategy;\n import io.reactivex.Flowable;\n+import io.reactivex.Single;\n+import io.reactivex.processors.PublishProcessor;\n import io.reactivex.subjects.PublishSubject;\n import io.reactivex.subjects.Subject;\n import java.util.concurrent.TimeUnit;\n import java8.util.Optional;\n import javax.inject.Inject;\n+import timber.log.Timber;\n \n @SharedViewModel\n public class MapContainerViewModel extends AbstractViewModel {\n \n-  private static final String TAG = MapContainerViewModel.class.getSimpleName();\n   private static final float DEFAULT_ZOOM_LEVEL = 20.0f;\n   private final LiveData<Loadable<Project>> activeProject;\n   private final LiveData<ImmutableSet<MapPin>> mapPins;\n   private final LiveData<BooleanOrError> locationLockState;\n   private final LiveData<CameraUpdate> cameraUpdateRequests;\n   private final MutableLiveData<Point> cameraPosition;\n+  private final LiveData<Event<Nil>> mapLayerUpdateRequests;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "372a3604c7ff3112380ff08a20b74ded333f16b7"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTkzOTgyNQ==", "bodyText": "Done", "url": "https://github.com/google/ground-android/pull/406#discussion_r399939825", "createdAt": "2020-03-30T05:46:53Z", "author": {"login": "shobhitagarwal1612"}, "path": "gnd/src/main/java/com/google/android/gnd/ui/home/mapcontainer/MapContainerViewModel.java", "diffHunk": "@@ -29,34 +28,40 @@\n import com.google.android.gnd.repository.FeatureRepository;\n import com.google.android.gnd.repository.ProjectRepository;\n import com.google.android.gnd.rx.BooleanOrError;\n+import com.google.android.gnd.rx.Event;\n import com.google.android.gnd.rx.Loadable;\n+import com.google.android.gnd.rx.Nil;\n import com.google.android.gnd.system.LocationManager;\n import com.google.android.gnd.ui.common.AbstractViewModel;\n import com.google.android.gnd.ui.common.SharedViewModel;\n import com.google.android.gnd.ui.map.MapPin;\n import com.google.common.collect.ImmutableSet;\n import io.reactivex.BackpressureStrategy;\n import io.reactivex.Flowable;\n+import io.reactivex.Single;\n+import io.reactivex.processors.PublishProcessor;\n import io.reactivex.subjects.PublishSubject;\n import io.reactivex.subjects.Subject;\n import java.util.concurrent.TimeUnit;\n import java8.util.Optional;\n import javax.inject.Inject;\n+import timber.log.Timber;\n \n @SharedViewModel\n public class MapContainerViewModel extends AbstractViewModel {\n \n-  private static final String TAG = MapContainerViewModel.class.getSimpleName();\n   private static final float DEFAULT_ZOOM_LEVEL = 20.0f;\n   private final LiveData<Loadable<Project>> activeProject;\n   private final LiveData<ImmutableSet<MapPin>> mapPins;\n   private final LiveData<BooleanOrError> locationLockState;\n   private final LiveData<CameraUpdate> cameraUpdateRequests;\n   private final MutableLiveData<Point> cameraPosition;\n+  private final LiveData<Event<Nil>> mapLayerUpdateRequests;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTg1MDEzMw=="}, "originalCommit": {"oid": "372a3604c7ff3112380ff08a20b74ded333f16b7"}, "originalPosition": 41}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2651, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}