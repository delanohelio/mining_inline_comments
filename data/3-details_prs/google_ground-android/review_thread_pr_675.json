{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQ1OTUxNDM5", "number": 675, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOVQxNToyMDoyMFrOFJzFIg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOVQxNToyNTowNlrOFJzKJg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ1ODE4NDAyOnYy", "diffSide": "RIGHT", "path": "gnd/src/main/java/com/google/android/gnd/ui/editobservation/MultipleChoiceFieldViewModel.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOVQxNToyMDoyMFrOIMRpYw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOVQxODoxMjoxOFrOIMVIlg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTc0Mjk0Nw==", "bodyText": "I think you could do:\n Optional.ofNullable(getResponse().getValue())\n                .flatMap(MultipleChoiceResponse.class::cast);", "url": "https://github.com/google/ground-android/pull/675#discussion_r549742947", "createdAt": "2020-12-29T15:20:20Z", "author": {"login": "gino-m"}, "path": "gnd/src/main/java/com/google/android/gnd/ui/editobservation/MultipleChoiceFieldViewModel.java", "diffHunk": "@@ -37,4 +39,10 @@ public void onShowDialog() {\n   MutableLiveData<Nil> getShowDialogClicks() {\n     return showDialogClicks;\n   }\n+\n+  Optional<MultipleChoiceResponse> getCurrentResponse() {\n+    return getResponse().getValue() == null", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d537f15e632625a64dbfaebe584b443dac6bc000"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTc4MDg1NQ==", "bodyText": "That results in Optional<Optional< MultipleChoiceResponse>> as getResponse() already returns optional. Couldn't think of any other way to do the check. Do you have an idea?", "url": "https://github.com/google/ground-android/pull/675#discussion_r549780855", "createdAt": "2020-12-29T17:08:41Z", "author": {"login": "shobhitagarwal1612"}, "path": "gnd/src/main/java/com/google/android/gnd/ui/editobservation/MultipleChoiceFieldViewModel.java", "diffHunk": "@@ -37,4 +39,10 @@ public void onShowDialog() {\n   MutableLiveData<Nil> getShowDialogClicks() {\n     return showDialogClicks;\n   }\n+\n+  Optional<MultipleChoiceResponse> getCurrentResponse() {\n+    return getResponse().getValue() == null", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTc0Mjk0Nw=="}, "originalCommit": {"oid": "d537f15e632625a64dbfaebe584b443dac6bc000"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTc4NDI2NQ==", "bodyText": "If getValue() returns an Optional, it shouldn't also be nullable. Would it be difficult to update it so that getValue() is @NonNull?", "url": "https://github.com/google/ground-android/pull/675#discussion_r549784265", "createdAt": "2020-12-29T17:19:32Z", "author": {"login": "gino-m"}, "path": "gnd/src/main/java/com/google/android/gnd/ui/editobservation/MultipleChoiceFieldViewModel.java", "diffHunk": "@@ -37,4 +39,10 @@ public void onShowDialog() {\n   MutableLiveData<Nil> getShowDialogClicks() {\n     return showDialogClicks;\n   }\n+\n+  Optional<MultipleChoiceResponse> getCurrentResponse() {\n+    return getResponse().getValue() == null", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTc0Mjk0Nw=="}, "originalCommit": {"oid": "d537f15e632625a64dbfaebe584b443dac6bc000"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTc4NzkxNw==", "bodyText": "getValue() is a method of LiveData class. We can't update it.", "url": "https://github.com/google/ground-android/pull/675#discussion_r549787917", "createdAt": "2020-12-29T17:31:16Z", "author": {"login": "shobhitagarwal1612"}, "path": "gnd/src/main/java/com/google/android/gnd/ui/editobservation/MultipleChoiceFieldViewModel.java", "diffHunk": "@@ -37,4 +39,10 @@ public void onShowDialog() {\n   MutableLiveData<Nil> getShowDialogClicks() {\n     return showDialogClicks;\n   }\n+\n+  Optional<MultipleChoiceResponse> getCurrentResponse() {\n+    return getResponse().getValue() == null", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTc0Mjk0Nw=="}, "originalCommit": {"oid": "d537f15e632625a64dbfaebe584b443dac6bc000"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTgwMDA4Ng==", "bodyText": "Ah, sorry, you're right. In general, moving forward we should probably replace LiveData<Optional> with LiveData; we'd like to avoid cases where a variable can be both null or Optional. Related to #679.", "url": "https://github.com/google/ground-android/pull/675#discussion_r549800086", "createdAt": "2020-12-29T18:12:18Z", "author": {"login": "gino-m"}, "path": "gnd/src/main/java/com/google/android/gnd/ui/editobservation/MultipleChoiceFieldViewModel.java", "diffHunk": "@@ -37,4 +39,10 @@ public void onShowDialog() {\n   MutableLiveData<Nil> getShowDialogClicks() {\n     return showDialogClicks;\n   }\n+\n+  Optional<MultipleChoiceResponse> getCurrentResponse() {\n+    return getResponse().getValue() == null", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTc0Mjk0Nw=="}, "originalCommit": {"oid": "d537f15e632625a64dbfaebe584b443dac6bc000"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ1ODE5MzQ0OnYy", "diffSide": "RIGHT", "path": "gnd/src/main/java/com/google/android/gnd/ui/editobservation/MultiSelectDialogFactory.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOVQxNToyMzo1NVrOIMRumA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOVQxNzoxNDo1NlrOIMUE0A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTc0NDI4MA==", "bodyText": "Can we make this empty by default instead of null?", "url": "https://github.com/google/ground-android/pull/675#discussion_r549744280", "createdAt": "2020-12-29T15:23:55Z", "author": {"login": "gino-m"}, "path": "gnd/src/main/java/com/google/android/gnd/ui/editobservation/MultiSelectDialogFactory.java", "diffHunk": "@@ -16,84 +16,75 @@\n \n package com.google.android.gnd.ui.editobservation;\n \n-import static com.google.common.base.Preconditions.checkNotNull;\n-import static java8.util.stream.StreamSupport.stream;\n+import static com.google.android.gnd.util.ImmutableListCollector.toImmutableList;\n+import static java.util.Objects.requireNonNull;\n \n import android.content.Context;\n+import androidx.annotation.Nullable;\n import androidx.appcompat.app.AlertDialog;\n-import com.google.android.gnd.R;\n-import com.google.android.gnd.model.form.Field;\n import com.google.android.gnd.model.form.MultipleChoice;\n import com.google.android.gnd.model.form.Option;\n import com.google.android.gnd.model.observation.MultipleChoiceResponse;\n import com.google.android.gnd.model.observation.Response;\n+import com.google.auto.value.AutoValue;\n import com.google.common.collect.ImmutableList;\n-import java.util.List;\n import java8.util.Optional;\n import java8.util.function.Consumer;\n import java8.util.stream.IntStreams;\n \n-// TODO: Replace with modal bottom sheet.\n-class MultiSelectDialogFactory {\n+@AutoValue\n+abstract class MultiSelectDialogFactory extends SelectDialogFactory {\n \n-  private Context context;\n+  @Nullable private boolean[] checkedItems;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bc6f7a811385c55f1975b3d6580f63c52a7b0d51"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTc4MjczNg==", "bodyText": "The size is determined after calling initSelectedState(). Also, setMultiChoiceItems also expects null if none of the items are selected. We can also use a collection instead of an array. But then we'll have to manually track all selected items. This way, the original array gets updated which we directly use.", "url": "https://github.com/google/ground-android/pull/675#discussion_r549782736", "createdAt": "2020-12-29T17:14:56Z", "author": {"login": "shobhitagarwal1612"}, "path": "gnd/src/main/java/com/google/android/gnd/ui/editobservation/MultiSelectDialogFactory.java", "diffHunk": "@@ -16,84 +16,75 @@\n \n package com.google.android.gnd.ui.editobservation;\n \n-import static com.google.common.base.Preconditions.checkNotNull;\n-import static java8.util.stream.StreamSupport.stream;\n+import static com.google.android.gnd.util.ImmutableListCollector.toImmutableList;\n+import static java.util.Objects.requireNonNull;\n \n import android.content.Context;\n+import androidx.annotation.Nullable;\n import androidx.appcompat.app.AlertDialog;\n-import com.google.android.gnd.R;\n-import com.google.android.gnd.model.form.Field;\n import com.google.android.gnd.model.form.MultipleChoice;\n import com.google.android.gnd.model.form.Option;\n import com.google.android.gnd.model.observation.MultipleChoiceResponse;\n import com.google.android.gnd.model.observation.Response;\n+import com.google.auto.value.AutoValue;\n import com.google.common.collect.ImmutableList;\n-import java.util.List;\n import java8.util.Optional;\n import java8.util.function.Consumer;\n import java8.util.stream.IntStreams;\n \n-// TODO: Replace with modal bottom sheet.\n-class MultiSelectDialogFactory {\n+@AutoValue\n+abstract class MultiSelectDialogFactory extends SelectDialogFactory {\n \n-  private Context context;\n+  @Nullable private boolean[] checkedItems;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTc0NDI4MA=="}, "originalCommit": {"oid": "bc6f7a811385c55f1975b3d6580f63c52a7b0d51"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ1ODE5NDk5OnYy", "diffSide": "RIGHT", "path": "gnd/src/main/java/com/google/android/gnd/ui/editobservation/MultiSelectDialogFactory.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOVQxNToyNDozNlrOIMRvhg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOVQxNzoxNTozNVrOIMUFpw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTc0NDUxOA==", "bodyText": "Do we need this wrapper function here? It doesn't seem to provide much abstraction or logic of its own.", "url": "https://github.com/google/ground-android/pull/675#discussion_r549744518", "createdAt": "2020-12-29T15:24:36Z", "author": {"login": "gino-m"}, "path": "gnd/src/main/java/com/google/android/gnd/ui/editobservation/MultiSelectDialogFactory.java", "diffHunk": "@@ -16,84 +16,75 @@\n \n package com.google.android.gnd.ui.editobservation;\n \n-import static com.google.common.base.Preconditions.checkNotNull;\n-import static java8.util.stream.StreamSupport.stream;\n+import static com.google.android.gnd.util.ImmutableListCollector.toImmutableList;\n+import static java.util.Objects.requireNonNull;\n \n import android.content.Context;\n+import androidx.annotation.Nullable;\n import androidx.appcompat.app.AlertDialog;\n-import com.google.android.gnd.R;\n-import com.google.android.gnd.model.form.Field;\n import com.google.android.gnd.model.form.MultipleChoice;\n import com.google.android.gnd.model.form.Option;\n import com.google.android.gnd.model.observation.MultipleChoiceResponse;\n import com.google.android.gnd.model.observation.Response;\n+import com.google.auto.value.AutoValue;\n import com.google.common.collect.ImmutableList;\n-import java.util.List;\n import java8.util.Optional;\n import java8.util.function.Consumer;\n import java8.util.stream.IntStreams;\n \n-// TODO: Replace with modal bottom sheet.\n-class MultiSelectDialogFactory {\n+@AutoValue\n+abstract class MultiSelectDialogFactory extends SelectDialogFactory {\n \n-  private Context context;\n+  @Nullable private boolean[] checkedItems;\n \n-  MultiSelectDialogFactory(Context context) {\n-    this.context = context;\n+  private static Builder builder() {\n+    return new AutoValue_MultiSelectDialogFactory.Builder();\n   }\n \n-  AlertDialog create(\n-      Field field,\n-      Optional<Response> initialResponse,\n-      Consumer<Optional<Response>> responseChangeCallback) {\n-    MultipleChoice multipleChoice = field.getMultipleChoice();\n-    checkNotNull(\n-        multipleChoice,\n-        \"When creating a MultiSelectDialogFactory the field must have a non-null MultipleChoice\");\n-\n-    AlertDialog.Builder dialogBuilder = new AlertDialog.Builder(context);\n-    List<Option> options = multipleChoice.getOptions();\n-    final DialogState state = new DialogState(multipleChoice, initialResponse);\n-    dialogBuilder.setMultiChoiceItems(\n-        getLabels(multipleChoice), state.checkedItems, (dialog, which, isChecked) -> {});\n-    dialogBuilder.setCancelable(false);\n-    dialogBuilder.setTitle(field.getLabel());\n-    dialogBuilder.setPositiveButton(\n-        R.string.apply_multiple_choice_changes,\n-        (dialog, which) -> responseChangeCallback.accept(state.getSelectedValues(options)));\n-    dialogBuilder.setNegativeButton(R.string.cancel, (dialog, which) -> {});\n-    return dialogBuilder.create();\n+  public static void showSelectDialog(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bc6f7a811385c55f1975b3d6580f63c52a7b0d51"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTc4Mjk1MQ==", "bodyText": "We can move it to the calling function.", "url": "https://github.com/google/ground-android/pull/675#discussion_r549782951", "createdAt": "2020-12-29T17:15:35Z", "author": {"login": "shobhitagarwal1612"}, "path": "gnd/src/main/java/com/google/android/gnd/ui/editobservation/MultiSelectDialogFactory.java", "diffHunk": "@@ -16,84 +16,75 @@\n \n package com.google.android.gnd.ui.editobservation;\n \n-import static com.google.common.base.Preconditions.checkNotNull;\n-import static java8.util.stream.StreamSupport.stream;\n+import static com.google.android.gnd.util.ImmutableListCollector.toImmutableList;\n+import static java.util.Objects.requireNonNull;\n \n import android.content.Context;\n+import androidx.annotation.Nullable;\n import androidx.appcompat.app.AlertDialog;\n-import com.google.android.gnd.R;\n-import com.google.android.gnd.model.form.Field;\n import com.google.android.gnd.model.form.MultipleChoice;\n import com.google.android.gnd.model.form.Option;\n import com.google.android.gnd.model.observation.MultipleChoiceResponse;\n import com.google.android.gnd.model.observation.Response;\n+import com.google.auto.value.AutoValue;\n import com.google.common.collect.ImmutableList;\n-import java.util.List;\n import java8.util.Optional;\n import java8.util.function.Consumer;\n import java8.util.stream.IntStreams;\n \n-// TODO: Replace with modal bottom sheet.\n-class MultiSelectDialogFactory {\n+@AutoValue\n+abstract class MultiSelectDialogFactory extends SelectDialogFactory {\n \n-  private Context context;\n+  @Nullable private boolean[] checkedItems;\n \n-  MultiSelectDialogFactory(Context context) {\n-    this.context = context;\n+  private static Builder builder() {\n+    return new AutoValue_MultiSelectDialogFactory.Builder();\n   }\n \n-  AlertDialog create(\n-      Field field,\n-      Optional<Response> initialResponse,\n-      Consumer<Optional<Response>> responseChangeCallback) {\n-    MultipleChoice multipleChoice = field.getMultipleChoice();\n-    checkNotNull(\n-        multipleChoice,\n-        \"When creating a MultiSelectDialogFactory the field must have a non-null MultipleChoice\");\n-\n-    AlertDialog.Builder dialogBuilder = new AlertDialog.Builder(context);\n-    List<Option> options = multipleChoice.getOptions();\n-    final DialogState state = new DialogState(multipleChoice, initialResponse);\n-    dialogBuilder.setMultiChoiceItems(\n-        getLabels(multipleChoice), state.checkedItems, (dialog, which, isChecked) -> {});\n-    dialogBuilder.setCancelable(false);\n-    dialogBuilder.setTitle(field.getLabel());\n-    dialogBuilder.setPositiveButton(\n-        R.string.apply_multiple_choice_changes,\n-        (dialog, which) -> responseChangeCallback.accept(state.getSelectedValues(options)));\n-    dialogBuilder.setNegativeButton(R.string.cancel, (dialog, which) -> {});\n-    return dialogBuilder.create();\n+  public static void showSelectDialog(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTc0NDUxOA=="}, "originalCommit": {"oid": "bc6f7a811385c55f1975b3d6580f63c52a7b0d51"}, "originalPosition": 60}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ1ODE5Njg2OnYy", "diffSide": "RIGHT", "path": "gnd/src/main/java/com/google/android/gnd/ui/editobservation/SingleSelectDialogFactory.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOVQxNToyNTowNlrOIMRwag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOVQxNToyNTowNlrOIMRwag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTc0NDc0Ng==", "bodyText": "Same here.", "url": "https://github.com/google/ground-android/pull/675#discussion_r549744746", "createdAt": "2020-12-29T15:25:06Z", "author": {"login": "gino-m"}, "path": "gnd/src/main/java/com/google/android/gnd/ui/editobservation/SingleSelectDialogFactory.java", "diffHunk": "@@ -16,91 +16,79 @@\n \n package com.google.android.gnd.ui.editobservation;\n \n-import static com.google.common.base.Preconditions.checkNotNull;\n-import static java8.util.stream.StreamSupport.stream;\n-\n import android.content.Context;\n import android.content.DialogInterface;\n import androidx.appcompat.app.AlertDialog;\n-import com.google.android.gnd.R;\n-import com.google.android.gnd.model.form.Field;\n import com.google.android.gnd.model.form.MultipleChoice;\n import com.google.android.gnd.model.form.Option;\n import com.google.android.gnd.model.observation.MultipleChoiceResponse;\n import com.google.android.gnd.model.observation.Response;\n+import com.google.auto.value.AutoValue;\n import com.google.common.collect.ImmutableList;\n-import java.util.List;\n import java8.util.Optional;\n import java8.util.function.Consumer;\n \n-// TODO: Replace with modal bottom sheet.\n-class SingleSelectDialogFactory {\n+@AutoValue\n+abstract class SingleSelectDialogFactory extends SelectDialogFactory {\n \n-  private Context context;\n+  private int checkedItem;\n \n-  SingleSelectDialogFactory(Context context) {\n-    this.context = context;\n+  private static Builder builder() {\n+    return new AutoValue_SingleSelectDialogFactory.Builder();\n   }\n \n-  AlertDialog create(\n-      Field field,\n-      Optional<Response> initialValue,\n-      Consumer<Optional<Response>> valueChangeCallback) {\n-    MultipleChoice multipleChoice = field.getMultipleChoice();\n-    checkNotNull(\n-        multipleChoice,\n-        \"When creating a SingleSelectDialogFactory the field must have a non-null MultipleChoice\"\n-    );\n-\n-    AlertDialog.Builder dialogBuilder = new AlertDialog.Builder(context);\n-    List<Option> options = multipleChoice.getOptions();\n-    DialogState state = new DialogState(multipleChoice, initialValue);\n-    dialogBuilder.setSingleChoiceItems(\n-        getLabels(multipleChoice), state.checkedItem, state::onSelect);\n-    dialogBuilder.setCancelable(false);\n-    dialogBuilder.setTitle(field.getLabel());\n-    dialogBuilder.setPositiveButton(\n-        R.string.apply_multiple_choice_changes,\n-        (dialog, which) -> valueChangeCallback.accept(state.getSelectedValue(options)));\n-    dialogBuilder.setNegativeButton(R.string.cancel, (dialog, which) -> {});\n-    return dialogBuilder.create();\n+  public static void showSelectDialog(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bc6f7a811385c55f1975b3d6580f63c52a7b0d51"}, "originalPosition": 58}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2439, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}