{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcwMTM0NDg4", "number": 344, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QyMDoxNjo1OVrODcwyhA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQxNjo0ODo1OFrODixXmw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxNDg2MDg0OnYy", "diffSide": "LEFT", "path": "gnd/build.gradle", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QyMDoxNjo1OVrOFk-lqw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQwNToyNjoxMlrOFlIc5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDMxODUwNw==", "bodyText": "This seems unrelated to the overall PR--what's the impetus for this change?\nLooks like this lets us assemble a debug build w/o enforcing style etc. checks?\nLGTM, just calling it out in case it slipped into this PR accidentally.", "url": "https://github.com/google/ground-android/pull/344#discussion_r374318507", "createdAt": "2020-02-03T20:16:59Z", "author": {"login": "scolsen"}, "path": "gnd/build.gradle", "diffHunk": "@@ -205,7 +205,3 @@ apply plugin: 'com.google.gms.google-services'\n task checkCode(type: GradleBuild) {\n     dependsOn 'checkstyle', 'lintDebug', 'pmd', 'spotbugs'\n }\n-\n-afterEvaluate {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb56545b594dfebafd9230fcf9d43e77f66ac524"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDQ4MDEwMQ==", "bodyText": "Actually it did! I removed it because it was slowly down development significantly, but we can discuss this separately. Added it back.", "url": "https://github.com/google/ground-android/pull/344#discussion_r374480101", "createdAt": "2020-02-04T05:26:12Z", "author": {"login": "gino-m"}, "path": "gnd/build.gradle", "diffHunk": "@@ -205,7 +205,3 @@ apply plugin: 'com.google.gms.google-services'\n task checkCode(type: GradleBuild) {\n     dependsOn 'checkstyle', 'lintDebug', 'pmd', 'spotbugs'\n }\n-\n-afterEvaluate {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDMxODUwNw=="}, "originalCommit": {"oid": "bb56545b594dfebafd9230fcf9d43e77f66ac524"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxNDg2Nzc0OnYy", "diffSide": "RIGHT", "path": "gnd/src/main/java/com/google/android/gnd/ui/home/HomeScreenViewModel.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QyMDoxOToxOVrOFk-pvA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQwNTozMzozMlrOFlIixQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDMxOTU0OA==", "bodyText": "Add TODO to show a message to the user?", "url": "https://github.com/google/ground-android/pull/344#discussion_r374319548", "createdAt": "2020-02-03T20:19:19Z", "author": {"login": "scolsen"}, "path": "gnd/src/main/java/com/google/android/gnd/ui/home/HomeScreenViewModel.java", "diffHunk": "@@ -148,31 +147,28 @@ public void onBottomSheetHidden() {\n     addObservationButtonVisibility.setValue(View.GONE);\n   }\n \n-  public void onFormChange(Form form) {\n-    this.selectedForm = form;\n-  }\n-\n   public void addObservation() {\n     FeatureSheetState state = featureSheetState.getValue();\n     if (state == null) {\n       Log.e(TAG, \"Missing featureSheetState\");\n       return;\n     }\n-    if (selectedForm == null) {\n-      Log.e(TAG, \"Missing form\");\n-      return;\n-    }\n     Feature feature = state.getFeature();\n     if (feature == null) {\n       Log.e(TAG, \"Missing feature\");\n       return;\n     }\n+    ImmutableList<Form> forms = feature.getLayer().getForms();\n+    if (forms.isEmpty()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb56545b594dfebafd9230fcf9d43e77f66ac524"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDQ4MTYwNQ==", "bodyText": "Added TODO to hide Add Observation button instead, since it shouldn't be shown if form is not defined (i.e., this case should never happen).", "url": "https://github.com/google/ground-android/pull/344#discussion_r374481605", "createdAt": "2020-02-04T05:33:32Z", "author": {"login": "gino-m"}, "path": "gnd/src/main/java/com/google/android/gnd/ui/home/HomeScreenViewModel.java", "diffHunk": "@@ -148,31 +147,28 @@ public void onBottomSheetHidden() {\n     addObservationButtonVisibility.setValue(View.GONE);\n   }\n \n-  public void onFormChange(Form form) {\n-    this.selectedForm = form;\n-  }\n-\n   public void addObservation() {\n     FeatureSheetState state = featureSheetState.getValue();\n     if (state == null) {\n       Log.e(TAG, \"Missing featureSheetState\");\n       return;\n     }\n-    if (selectedForm == null) {\n-      Log.e(TAG, \"Missing form\");\n-      return;\n-    }\n     Feature feature = state.getFeature();\n     if (feature == null) {\n       Log.e(TAG, \"Missing feature\");\n       return;\n     }\n+    ImmutableList<Form> forms = feature.getLayer().getForms();\n+    if (forms.isEmpty()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDMxOTU0OA=="}, "originalCommit": {"oid": "bb56545b594dfebafd9230fcf9d43e77f66ac524"}, "originalPosition": 43}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxNDg4Mzg1OnYy", "diffSide": "RIGHT", "path": "gnd/src/main/java/com/google/android/gnd/ui/home/featuresheet/FeatureSheetFragment.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QyMDoyNDo0N1rOFk-zlg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQwNToyNzowOVrOFlIdog==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDMyMjA3MA==", "bodyText": "This method is redundant now -- delete?", "url": "https://github.com/google/ground-android/pull/344#discussion_r374322070", "createdAt": "2020-02-03T20:24:47Z", "author": {"login": "scolsen"}, "path": "gnd/src/main/java/com/google/android/gnd/ui/home/featuresheet/FeatureSheetFragment.java", "diffHunk": "@@ -76,23 +69,13 @@ public View onCreateView(\n   @Override\n   public void onViewCreated(@NonNull View view, @Nullable Bundle savedInstanceState) {\n     super.onViewCreated(view, savedInstanceState);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb56545b594dfebafd9230fcf9d43e77f66ac524"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDQ4MDI5MA==", "bodyText": "Fixed!", "url": "https://github.com/google/ground-android/pull/344#discussion_r374480290", "createdAt": "2020-02-04T05:27:09Z", "author": {"login": "gino-m"}, "path": "gnd/src/main/java/com/google/android/gnd/ui/home/featuresheet/FeatureSheetFragment.java", "diffHunk": "@@ -76,23 +69,13 @@ public View onCreateView(\n   @Override\n   public void onViewCreated(@NonNull View view, @Nullable Bundle savedInstanceState) {\n     super.onViewCreated(view, savedInstanceState);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDMyMjA3MA=="}, "originalCommit": {"oid": "bb56545b594dfebafd9230fcf9d43e77f66ac524"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxNDg5ODM1OnYy", "diffSide": "RIGHT", "path": "gnd/src/main/java/com/google/android/gnd/ui/home/featuresheet/ObservationListViewModel.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QyMDozMDowOFrOFk-8nA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQxODowMzo0N1rOFld9Sw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDMyNDM4MA==", "bodyText": "Are we eventually going to support multiple forms again, or will forms eventually become form?", "url": "https://github.com/google/ground-android/pull/344#discussion_r374324380", "createdAt": "2020-02-03T20:30:08Z", "author": {"login": "scolsen"}, "path": "gnd/src/main/java/com/google/android/gnd/ui/home/featuresheet/ObservationListViewModel.java", "diffHunk": "@@ -59,14 +59,22 @@ public ObservationListViewModel(ObservationRepository observationRepository) {\n   }\n \n   /** Loads a list of observations associated with a given feature. */\n-  public void loadObservationList(Feature feature, Form form) {\n+  public void loadObservationList(Feature feature) {\n+    ImmutableList<Form> forms = feature.getLayer().getForms();\n     loadObservations(\n-        feature.getProject(), feature.getLayer().getId(), form.getId(), feature.getId());\n+        feature.getProject(),\n+        forms.isEmpty() ? Optional.empty() : Optional.of(forms.get(0).getId()),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb56545b594dfebafd9230fcf9d43e77f66ac524"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDQ4MTgwMg==", "bodyText": "The idea is that we'll keep it in the data store schema, but not in the UIs. This way custom or future clients can use multiple forms without breaking the database.", "url": "https://github.com/google/ground-android/pull/344#discussion_r374481802", "createdAt": "2020-02-04T05:34:39Z", "author": {"login": "gino-m"}, "path": "gnd/src/main/java/com/google/android/gnd/ui/home/featuresheet/ObservationListViewModel.java", "diffHunk": "@@ -59,14 +59,22 @@ public ObservationListViewModel(ObservationRepository observationRepository) {\n   }\n \n   /** Loads a list of observations associated with a given feature. */\n-  public void loadObservationList(Feature feature, Form form) {\n+  public void loadObservationList(Feature feature) {\n+    ImmutableList<Form> forms = feature.getLayer().getForms();\n     loadObservations(\n-        feature.getProject(), feature.getLayer().getId(), form.getId(), feature.getId());\n+        feature.getProject(),\n+        forms.isEmpty() ? Optional.empty() : Optional.of(forms.get(0).getId()),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDMyNDM4MA=="}, "originalCommit": {"oid": "bb56545b594dfebafd9230fcf9d43e77f66ac524"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDczNDcyMw==", "bodyText": "Gotcha, maybe this is worthy of a helper method to make sure we always call .get(0) for now to fetch only the first form and don't accidentally call .get(0\u00b1n)? (Not that I anticipate us needing to call this in many other places in the app atm).", "url": "https://github.com/google/ground-android/pull/344#discussion_r374734723", "createdAt": "2020-02-04T15:19:43Z", "author": {"login": "scolsen"}, "path": "gnd/src/main/java/com/google/android/gnd/ui/home/featuresheet/ObservationListViewModel.java", "diffHunk": "@@ -59,14 +59,22 @@ public ObservationListViewModel(ObservationRepository observationRepository) {\n   }\n \n   /** Loads a list of observations associated with a given feature. */\n-  public void loadObservationList(Feature feature, Form form) {\n+  public void loadObservationList(Feature feature) {\n+    ImmutableList<Form> forms = feature.getLayer().getForms();\n     loadObservations(\n-        feature.getProject(), feature.getLayer().getId(), form.getId(), feature.getId());\n+        feature.getProject(),\n+        forms.isEmpty() ? Optional.empty() : Optional.of(forms.get(0).getId()),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDMyNDM4MA=="}, "originalCommit": {"oid": "bb56545b594dfebafd9230fcf9d43e77f66ac524"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDgzMjQ1OQ==", "bodyText": "I'll go you one better - pushing the cardinality change to the persistence layers, so that the application model doesn't reflect this idiosyncrasy in the data models. Please see latest commit 56cfa3d.", "url": "https://github.com/google/ground-android/pull/344#discussion_r374832459", "createdAt": "2020-02-04T18:03:47Z", "author": {"login": "gino-m"}, "path": "gnd/src/main/java/com/google/android/gnd/ui/home/featuresheet/ObservationListViewModel.java", "diffHunk": "@@ -59,14 +59,22 @@ public ObservationListViewModel(ObservationRepository observationRepository) {\n   }\n \n   /** Loads a list of observations associated with a given feature. */\n-  public void loadObservationList(Feature feature, Form form) {\n+  public void loadObservationList(Feature feature) {\n+    ImmutableList<Form> forms = feature.getLayer().getForms();\n     loadObservations(\n-        feature.getProject(), feature.getLayer().getId(), form.getId(), feature.getId());\n+        feature.getProject(),\n+        forms.isEmpty() ? Optional.empty() : Optional.of(forms.get(0).getId()),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDMyNDM4MA=="}, "originalCommit": {"oid": "bb56545b594dfebafd9230fcf9d43e77f66ac524"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxNDkwNTkyOnYy", "diffSide": "RIGHT", "path": "gnd/src/main/java/com/google/android/gnd/ui/home/featuresheet/ObservationListViewModel.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QyMDozMzowMFrOFk_Bjg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQwNToyOToxN1rOFlIfcA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDMyNTY0Ng==", "bodyText": "nit: Parallelize parameter positions?\nloadObservations:: project, formId, featureId\nObservationListRequest: project, featureId, formId\nSwap feature and form in one or the other?", "url": "https://github.com/google/ground-android/pull/344#discussion_r374325646", "createdAt": "2020-02-03T20:33:00Z", "author": {"login": "scolsen"}, "path": "gnd/src/main/java/com/google/android/gnd/ui/home/featuresheet/ObservationListViewModel.java", "diffHunk": "@@ -76,22 +84,16 @@ public void loadObservationList(Feature feature, Form form) {\n     return Single.just(ImmutableList.of());\n   }\n \n-  private void loadObservations(Project project, String layerId, String formId, String featureId) {\n-    Optional<Form> form = project.getLayer(layerId).flatMap(pt -> pt.getForm(formId));\n-    if (!form.isPresent()) {\n-      // TODO: Show error.\n-      return;\n-    }\n-    // TODO: Use project id instead of object.\n+  private void loadObservations(Project project, Optional<String> formId, String featureId) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb56545b594dfebafd9230fcf9d43e77f66ac524"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDQ4MDc1Mg==", "bodyText": "Good catch. Done!", "url": "https://github.com/google/ground-android/pull/344#discussion_r374480752", "createdAt": "2020-02-04T05:29:17Z", "author": {"login": "gino-m"}, "path": "gnd/src/main/java/com/google/android/gnd/ui/home/featuresheet/ObservationListViewModel.java", "diffHunk": "@@ -76,22 +84,16 @@ public void loadObservationList(Feature feature, Form form) {\n     return Single.just(ImmutableList.of());\n   }\n \n-  private void loadObservations(Project project, String layerId, String formId, String featureId) {\n-    Optional<Form> form = project.getLayer(layerId).flatMap(pt -> pt.getForm(formId));\n-    if (!form.isPresent()) {\n-      // TODO: Show error.\n-      return;\n-    }\n-    // TODO: Use project id instead of object.\n+  private void loadObservations(Project project, Optional<String> formId, String featureId) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDMyNTY0Ng=="}, "originalCommit": {"oid": "bb56545b594dfebafd9230fcf9d43e77f66ac524"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3Nzg3MDM1OnYy", "diffSide": "RIGHT", "path": "gnd/src/main/java/com/google/android/gnd/persistence/remote/firestore/schema/LayerConverter.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQxNjo0ODo1OFrOFuNI_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQxODo0Nzo1N1rOFuQ3iQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzk5NDExMQ==", "bodyText": "Doesn't the fact that this is nullable obviate the use of the ArrayList or any type with an empty state? Is it possible for us to remove the potential null--or is that necessary because of unknowns in the firebase side (random data wipes, etc.)\nI'm guessing it's the latter, so not blocking on this.", "url": "https://github.com/google/ground-android/pull/344#discussion_r383994111", "createdAt": "2020-02-25T16:48:58Z", "author": {"login": "scolsen"}, "path": "gnd/src/main/java/com/google/android/gnd/persistence/remote/firestore/schema/LayerConverter.java", "diffHunk": "@@ -33,10 +35,12 @@ static Layer toLayer(String id, LayerNestedObject obj) {\n     if (obj.getDefaultStyle() != null) {\n       layer.setDefaultStyle(StyleConverter.toStyle(obj.getDefaultStyle()));\n     }\n-    if (obj.getForms() != null) {\n-      Maps.forEach(\n-          obj.getForms(),\n-          (formId, formDoc) -> layer.addForm(FormConverter.toForm(formId, formDoc)));\n+    if (obj.getForms() != null && !obj.getForms().isEmpty()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1416852e88bc9b12980cf01618e4844c51a9a50d"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDA1NTE3Nw==", "bodyText": "That's exactly right.. It would if we controlled how the field was populated, but since we don't know if the Firebase API will set a null or empty we need to check both.", "url": "https://github.com/google/ground-android/pull/344#discussion_r384055177", "createdAt": "2020-02-25T18:47:57Z", "author": {"login": "gino-m"}, "path": "gnd/src/main/java/com/google/android/gnd/persistence/remote/firestore/schema/LayerConverter.java", "diffHunk": "@@ -33,10 +35,12 @@ static Layer toLayer(String id, LayerNestedObject obj) {\n     if (obj.getDefaultStyle() != null) {\n       layer.setDefaultStyle(StyleConverter.toStyle(obj.getDefaultStyle()));\n     }\n-    if (obj.getForms() != null) {\n-      Maps.forEach(\n-          obj.getForms(),\n-          (formId, formDoc) -> layer.addForm(FormConverter.toForm(formId, formDoc)));\n+    if (obj.getForms() != null && !obj.getForms().isEmpty()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzk5NDExMQ=="}, "originalCommit": {"oid": "1416852e88bc9b12980cf01618e4844c51a9a50d"}, "originalPosition": 24}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2602, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}