{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE4NjQ5MDU0", "number": 587, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNlQxODowNTo1NVrOD9GukA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxNzo0MDo1MlrOD9fg0A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1Mzk5OTUyOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/gluonhq/substrate/target/AndroidTargetConfiguration.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNlQxODowNTo1NVrOGWbw8w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xN1QwNzozNzo1M1rOGWe8cQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjE3Njc1NQ==", "bodyText": "We had Glisten/Attach logic in Substrate in the past, and while that worked fine, we moved towards removing any external dependency, by using META_INF/Substrate as a way to allow any third party (JavaFX/Glisten/Attach...) pass configuration files to Substrate.\nWhile this can be a complex task, I'd say we move this to each Attach service, using an xml file with the content that should be added to the final AndroidManifest.xml/Info.plist.\nLike:\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<permissions>\n     <uses-permission android:name=\"android.permission.ACCESS_FINE_LOCATION\"/>\n</permissions>\n\nThis will be more flexible to include other nodes, like extra activities or services.\nDoes this make sense?\nThen, in Substrate, we will scan these files, and combine them properly to produce the manifest/plist.", "url": "https://github.com/gluonhq/substrate/pull/587#discussion_r426176755", "createdAt": "2020-05-16T18:05:55Z", "author": {"login": "jperedadnr"}, "path": "src/main/java/com/gluonhq/substrate/target/AndroidTargetConfiguration.java", "diffHunk": "@@ -682,4 +685,32 @@ public BuildToolNotFoundException() {\n             super(\"Android build tools not found. Please install it and try again.\");\n         }\n     }\n+\n+    /**\n+     * Scans the classpath and adds permission to AndroidManifest.xml for\n+     * each attach service found.\n+     * @param genManifest Path to the AndroidManifest.xml file\n+     */\n+    private void addRequiredPermissions(Path genManifest) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f7ef5c337cbd976cfdf897a8b6bbec6c1ee748af"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjE4NTcxMA==", "bodyText": "+1 on the approach, but probably easier/more consistent if we use .json files (as we do with reflection/jni files)", "url": "https://github.com/gluonhq/substrate/pull/587#discussion_r426185710", "createdAt": "2020-05-16T19:56:44Z", "author": {"login": "johanvos"}, "path": "src/main/java/com/gluonhq/substrate/target/AndroidTargetConfiguration.java", "diffHunk": "@@ -682,4 +685,32 @@ public BuildToolNotFoundException() {\n             super(\"Android build tools not found. Please install it and try again.\");\n         }\n     }\n+\n+    /**\n+     * Scans the classpath and adds permission to AndroidManifest.xml for\n+     * each attach service found.\n+     * @param genManifest Path to the AndroidManifest.xml file\n+     */\n+    private void addRequiredPermissions(Path genManifest) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjE3Njc1NQ=="}, "originalCommit": {"oid": "f7ef5c337cbd976cfdf897a8b6bbec6c1ee748af"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjIyODg0OQ==", "bodyText": "@jperedadnr  Good suggestion!", "url": "https://github.com/gluonhq/substrate/pull/587#discussion_r426228849", "createdAt": "2020-05-17T07:37:53Z", "author": {"login": "abhinayagarwal"}, "path": "src/main/java/com/gluonhq/substrate/target/AndroidTargetConfiguration.java", "diffHunk": "@@ -682,4 +685,32 @@ public BuildToolNotFoundException() {\n             super(\"Android build tools not found. Please install it and try again.\");\n         }\n     }\n+\n+    /**\n+     * Scans the classpath and adds permission to AndroidManifest.xml for\n+     * each attach service found.\n+     * @param genManifest Path to the AndroidManifest.xml file\n+     */\n+    private void addRequiredPermissions(Path genManifest) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjE3Njc1NQ=="}, "originalCommit": {"oid": "f7ef5c337cbd976cfdf897a8b6bbec6c1ee748af"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1Nzk3NjY3OnYy", "diffSide": "RIGHT", "path": "src/main/resources/native/android/AndroidManifest.xml", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxNzoxNTo1MlrOGXAd_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxODoxNDoyOFrOGXCYVA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjc3ODExMA==", "bodyText": "I assume the third party jar (usually Attach) will have a file with lines like:\n<uses-permission a:name=\"android.permission.CAMERA\"/>\n\nright?\nHowever, I'd say it should only hold the permission itself:\nandroid.permission.CAMERA\n\nAnd Substrate will provide the format: <uses-permission a:name=\" + line + \"/>\nThis has the advantage of not adding a dependency of the namespace (a) to those jars.", "url": "https://github.com/gluonhq/substrate/pull/587#discussion_r426778110", "createdAt": "2020-05-18T17:15:52Z", "author": {"login": "jperedadnr"}, "path": "src/main/resources/native/android/AndroidManifest.xml", "diffHunk": "@@ -3,8 +3,7 @@\n     <supports-screens a:xlargeScreens=\"true\"/>\n     <uses-sdk a:minSdkVersion=\"21\" a:targetSdkVersion=\"28\"/>\n     <uses-permission a:name=\"android.permission.INTERNET\"/>\n-    <uses-permission a:name=\"android.permission.READ_EXTERNAL_STORAGE\"/>\n-    <uses-permission a:name=\"android.permission.WRITE_EXTERNAL_STORAGE\"/>\n+    <!-- PERMISSIONS -->", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "53648b88d620e6a0e7c23a4bb26bd2b3243fe5c7"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjc5ODYxNA==", "bodyText": "Done!", "url": "https://github.com/gluonhq/substrate/pull/587#discussion_r426798614", "createdAt": "2020-05-18T17:53:44Z", "author": {"login": "abhinayagarwal"}, "path": "src/main/resources/native/android/AndroidManifest.xml", "diffHunk": "@@ -3,8 +3,7 @@\n     <supports-screens a:xlargeScreens=\"true\"/>\n     <uses-sdk a:minSdkVersion=\"21\" a:targetSdkVersion=\"28\"/>\n     <uses-permission a:name=\"android.permission.INTERNET\"/>\n-    <uses-permission a:name=\"android.permission.READ_EXTERNAL_STORAGE\"/>\n-    <uses-permission a:name=\"android.permission.WRITE_EXTERNAL_STORAGE\"/>\n+    <!-- PERMISSIONS -->", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjc3ODExMA=="}, "originalCommit": {"oid": "53648b88d620e6a0e7c23a4bb26bd2b3243fe5c7"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjgwNjE5NQ==", "bodyText": "Ok, but I don't see the commit?", "url": "https://github.com/gluonhq/substrate/pull/587#discussion_r426806195", "createdAt": "2020-05-18T18:08:02Z", "author": {"login": "jperedadnr"}, "path": "src/main/resources/native/android/AndroidManifest.xml", "diffHunk": "@@ -3,8 +3,7 @@\n     <supports-screens a:xlargeScreens=\"true\"/>\n     <uses-sdk a:minSdkVersion=\"21\" a:targetSdkVersion=\"28\"/>\n     <uses-permission a:name=\"android.permission.INTERNET\"/>\n-    <uses-permission a:name=\"android.permission.READ_EXTERNAL_STORAGE\"/>\n-    <uses-permission a:name=\"android.permission.WRITE_EXTERNAL_STORAGE\"/>\n+    <!-- PERMISSIONS -->", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjc3ODExMA=="}, "originalCommit": {"oid": "53648b88d620e6a0e7c23a4bb26bd2b3243fe5c7"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjgwOTQyOA==", "bodyText": "Oops, git push failed :)\nI have pushed it now.", "url": "https://github.com/gluonhq/substrate/pull/587#discussion_r426809428", "createdAt": "2020-05-18T18:14:28Z", "author": {"login": "abhinayagarwal"}, "path": "src/main/resources/native/android/AndroidManifest.xml", "diffHunk": "@@ -3,8 +3,7 @@\n     <supports-screens a:xlargeScreens=\"true\"/>\n     <uses-sdk a:minSdkVersion=\"21\" a:targetSdkVersion=\"28\"/>\n     <uses-permission a:name=\"android.permission.INTERNET\"/>\n-    <uses-permission a:name=\"android.permission.READ_EXTERNAL_STORAGE\"/>\n-    <uses-permission a:name=\"android.permission.WRITE_EXTERNAL_STORAGE\"/>\n+    <!-- PERMISSIONS -->", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjc3ODExMA=="}, "originalCommit": {"oid": "53648b88d620e6a0e7c23a4bb26bd2b3243fe5c7"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1ODA2MDMyOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/gluonhq/substrate/config/ConfigResolver.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxNzo0MDo1MlrOGXBTDQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxNzo1MjoxN1rOGXBrIg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjc5MTY5Mw==", "bodyText": "It is probably necessary to return a list/set of permissions that are not duplicated. There is no guarantee that the jars won't contain duplicates, so probably this is a good place to enforce that?", "url": "https://github.com/gluonhq/substrate/pull/587#discussion_r426791693", "createdAt": "2020-05-18T17:40:52Z", "author": {"login": "jperedadnr"}, "path": "src/main/java/com/gluonhq/substrate/config/ConfigResolver.java", "diffHunk": "@@ -156,6 +158,21 @@ public ConfigResolver(String classpath) throws IOException, InterruptedException\n                 .collect(Collectors.toList());\n     }\n \n+    /**\n+     * Walks through the jars in the classpath,\n+     * and looks for META-INF/substrate/config/android-permissions.txt file.\n+     *\n+     * @return a list of permission lines that should be added to the AndroidManifest file\n+     * @throws IOException Exception while reading the permissions file.\n+     */\n+    public Set<String> getAndroidPermissions() throws IOException {\n+        Logger.logDebug(\"Scanning for android permission files\");\n+        return Set.copyOf(scanJars(USER_ANDROID_PERMISSIONS_FILE,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "53648b88d620e6a0e7c23a4bb26bd2b3243fe5c7"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjc5Nzg1OA==", "bodyText": "Set implies uniqueness in case of multiple equal objects.", "url": "https://github.com/gluonhq/substrate/pull/587#discussion_r426797858", "createdAt": "2020-05-18T17:52:17Z", "author": {"login": "tiainen"}, "path": "src/main/java/com/gluonhq/substrate/config/ConfigResolver.java", "diffHunk": "@@ -156,6 +158,21 @@ public ConfigResolver(String classpath) throws IOException, InterruptedException\n                 .collect(Collectors.toList());\n     }\n \n+    /**\n+     * Walks through the jars in the classpath,\n+     * and looks for META-INF/substrate/config/android-permissions.txt file.\n+     *\n+     * @return a list of permission lines that should be added to the AndroidManifest file\n+     * @throws IOException Exception while reading the permissions file.\n+     */\n+    public Set<String> getAndroidPermissions() throws IOException {\n+        Logger.logDebug(\"Scanning for android permission files\");\n+        return Set.copyOf(scanJars(USER_ANDROID_PERMISSIONS_FILE,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjc5MTY5Mw=="}, "originalCommit": {"oid": "53648b88d620e6a0e7c23a4bb26bd2b3243fe5c7"}, "originalPosition": 29}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2900, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}