{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY4NzQzMjk5", "number": 746, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQwODo1OTo0MFrOEZ4ibQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQwOTowMzo0MlrOEZ4ohA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk1NTc2MTczOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/gluonhq/substrate/target/AndroidTargetConfiguration.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQwODo1OTo0MFrOHC9_Vg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQwOTo0OTo1OFrOHC_3Ig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mjg3NDgzOA==", "bodyText": "shouldn't this be in Constants.Profile (full name)", "url": "https://github.com/gluonhq/substrate/pull/746#discussion_r472874838", "createdAt": "2020-08-19T08:59:40Z", "author": {"login": "johanvos"}, "path": "src/main/java/com/gluonhq/substrate/target/AndroidTargetConfiguration.java", "diffHunk": "@@ -64,37 +65,45 @@\n \n public class AndroidTargetConfiguration extends PosixTargetConfiguration {\n \n+    private static final String ANDROID_TRIPLET = \"aarch64-linux-android\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0bd189864329dbcf6f7a333cd2e1d5fbfe6f7547"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mjg4MDEwNA==", "bodyText": "We have Constants.PROFILE_ANDROID, but that is only for android. The target triplet is created with Triplet(Constants.Profiles.ANDROID), based on three constants, so probably we could have all possible triplets names as constants?", "url": "https://github.com/gluonhq/substrate/pull/746#discussion_r472880104", "createdAt": "2020-08-19T09:08:28Z", "author": {"login": "jperedadnr"}, "path": "src/main/java/com/gluonhq/substrate/target/AndroidTargetConfiguration.java", "diffHunk": "@@ -64,37 +65,45 @@\n \n public class AndroidTargetConfiguration extends PosixTargetConfiguration {\n \n+    private static final String ANDROID_TRIPLET = \"aarch64-linux-android\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mjg3NDgzOA=="}, "originalCommit": {"oid": "0bd189864329dbcf6f7a333cd2e1d5fbfe6f7547"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjkwNTUwNg==", "bodyText": "@johanvos Your suggestion of doing Constants.Profile (full name) brings back this PR: #229, where TripletProfile was created precisely.\nI guess this is a big refactoring that should be tackled in a follow-up PR?\nFor now, what if we just do:\nprivate static final String ANDROID_TRIPLET = new Triplet(Constants.Profile.ANDROID).toString();", "url": "https://github.com/gluonhq/substrate/pull/746#discussion_r472905506", "createdAt": "2020-08-19T09:49:58Z", "author": {"login": "jperedadnr"}, "path": "src/main/java/com/gluonhq/substrate/target/AndroidTargetConfiguration.java", "diffHunk": "@@ -64,37 +65,45 @@\n \n public class AndroidTargetConfiguration extends PosixTargetConfiguration {\n \n+    private static final String ANDROID_TRIPLET = \"aarch64-linux-android\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mjg3NDgzOA=="}, "originalCommit": {"oid": "0bd189864329dbcf6f7a333cd2e1d5fbfe6f7547"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk1NTc3MTMyOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/gluonhq/substrate/target/AndroidTargetConfiguration.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQwOTowMTo1OVrOHC-FRw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQwOTowODo1OFrOHC-U_Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mjg3NjM1OQ==", "bodyText": "isn't this Triplet.getOsArch() ?", "url": "https://github.com/gluonhq/substrate/pull/746#discussion_r472876359", "createdAt": "2020-08-19T09:01:59Z", "author": {"login": "johanvos"}, "path": "src/main/java/com/gluonhq/substrate/target/AndroidTargetConfiguration.java", "diffHunk": "@@ -64,37 +65,45 @@\n \n public class AndroidTargetConfiguration extends PosixTargetConfiguration {\n \n+    private static final String ANDROID_TRIPLET = \"aarch64-linux-android\";\n+    private static final String ANDROID_MIN_SDK_VERSION = \"21\";\n+\n     private final String ndk;\n     private final String sdk;\n     private final Path ldlld;\n     private final Path clang;\n+    private final Path objdump;\n     private final String hostPlatformFolder;\n \n-    private List<String> androidAdditionalSourceFiles = Arrays.asList(\"launcher.c\", \"javafx_adapter.c\",\n+    private final List<String> androidAdditionalSourceFiles = Arrays.asList(\"launcher.c\", \"javafx_adapter.c\",\n             \"touch_events.c\", \"glibc_shim.c\", \"attach_adapter.c\", \"logger.c\");\n-    private List<String> androidAdditionalHeaderFiles = Arrays.asList(\"grandroid.h\", \"grandroid_ext.h\");\n-    private List<String> cFlags = Arrays.asList(\"-target\", \"aarch64-linux-android\", \"-I.\");\n-    private List<String> linkFlags = Arrays.asList(\"-target\", \"aarch64-linux-android21\", \"-fPIC\", \"-fuse-ld=gold\",\n+    private final List<String> androidAdditionalHeaderFiles = Arrays.asList(\"grandroid.h\", \"grandroid_ext.h\");\n+    private final List<String> cFlags = Arrays.asList(\"-target\", ANDROID_TRIPLET, \"-I.\");\n+    private final List<String> linkFlags = Arrays.asList(\"-target\",\n+            ANDROID_TRIPLET + ANDROID_MIN_SDK_VERSION, \"-fPIC\", \"-fuse-ld=gold\",\n             \"-Wl,--rosegment,--gc-sections,-z,noexecstack\", \"-shared\",\n             \"-landroid\", \"-llog\", \"-lffi\", \"-llibchelper\");\n-    private List<String> javafxLinkFlags = Arrays.asList(\"-Wl,--whole-archive\",\n+    private final List<String> javafxLinkFlags = Arrays.asList(\"-Wl,--whole-archive\",\n             \"-lprism_es2_monocle\", \"-lglass_monocle\", \"-ljavafx_font_freetype\", \"-ljavafx_iio\", \"-Wl,--no-whole-archive\",\n             \"-lGLESv2\", \"-lEGL\", \"-lfreetype\");\n     private final String capLocation = ANDROID_NATIVE_FOLDER + \"cap/\";\n \n-    public AndroidTargetConfiguration( ProcessPaths paths, InternalProjectConfiguration configuration ) throws IOException {\n+    public AndroidTargetConfiguration(ProcessPaths paths, InternalProjectConfiguration configuration) throws IOException {\n         super(paths,configuration);\n \n         this.sdk = fileDeps.getAndroidSDKPath().toString();\n         this.ndk = fileDeps.getAndroidNDKPath().toString();\n-        this.hostPlatformFolder = configuration.getHostTriplet().getOs() + \"-x86_64\";\n+        this.hostPlatformFolder = configuration.getHostTriplet().getOs() + \"-\" + Constants.ARCH_AMD64;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0bd189864329dbcf6f7a333cd2e1d5fbfe6f7547"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mjg4MDM4MQ==", "bodyText": "using configuration.getHostTriplet() we get the Linux triplet, right, I'll change it", "url": "https://github.com/gluonhq/substrate/pull/746#discussion_r472880381", "createdAt": "2020-08-19T09:08:58Z", "author": {"login": "jperedadnr"}, "path": "src/main/java/com/gluonhq/substrate/target/AndroidTargetConfiguration.java", "diffHunk": "@@ -64,37 +65,45 @@\n \n public class AndroidTargetConfiguration extends PosixTargetConfiguration {\n \n+    private static final String ANDROID_TRIPLET = \"aarch64-linux-android\";\n+    private static final String ANDROID_MIN_SDK_VERSION = \"21\";\n+\n     private final String ndk;\n     private final String sdk;\n     private final Path ldlld;\n     private final Path clang;\n+    private final Path objdump;\n     private final String hostPlatformFolder;\n \n-    private List<String> androidAdditionalSourceFiles = Arrays.asList(\"launcher.c\", \"javafx_adapter.c\",\n+    private final List<String> androidAdditionalSourceFiles = Arrays.asList(\"launcher.c\", \"javafx_adapter.c\",\n             \"touch_events.c\", \"glibc_shim.c\", \"attach_adapter.c\", \"logger.c\");\n-    private List<String> androidAdditionalHeaderFiles = Arrays.asList(\"grandroid.h\", \"grandroid_ext.h\");\n-    private List<String> cFlags = Arrays.asList(\"-target\", \"aarch64-linux-android\", \"-I.\");\n-    private List<String> linkFlags = Arrays.asList(\"-target\", \"aarch64-linux-android21\", \"-fPIC\", \"-fuse-ld=gold\",\n+    private final List<String> androidAdditionalHeaderFiles = Arrays.asList(\"grandroid.h\", \"grandroid_ext.h\");\n+    private final List<String> cFlags = Arrays.asList(\"-target\", ANDROID_TRIPLET, \"-I.\");\n+    private final List<String> linkFlags = Arrays.asList(\"-target\",\n+            ANDROID_TRIPLET + ANDROID_MIN_SDK_VERSION, \"-fPIC\", \"-fuse-ld=gold\",\n             \"-Wl,--rosegment,--gc-sections,-z,noexecstack\", \"-shared\",\n             \"-landroid\", \"-llog\", \"-lffi\", \"-llibchelper\");\n-    private List<String> javafxLinkFlags = Arrays.asList(\"-Wl,--whole-archive\",\n+    private final List<String> javafxLinkFlags = Arrays.asList(\"-Wl,--whole-archive\",\n             \"-lprism_es2_monocle\", \"-lglass_monocle\", \"-ljavafx_font_freetype\", \"-ljavafx_iio\", \"-Wl,--no-whole-archive\",\n             \"-lGLESv2\", \"-lEGL\", \"-lfreetype\");\n     private final String capLocation = ANDROID_NATIVE_FOLDER + \"cap/\";\n \n-    public AndroidTargetConfiguration( ProcessPaths paths, InternalProjectConfiguration configuration ) throws IOException {\n+    public AndroidTargetConfiguration(ProcessPaths paths, InternalProjectConfiguration configuration) throws IOException {\n         super(paths,configuration);\n \n         this.sdk = fileDeps.getAndroidSDKPath().toString();\n         this.ndk = fileDeps.getAndroidNDKPath().toString();\n-        this.hostPlatformFolder = configuration.getHostTriplet().getOs() + \"-x86_64\";\n+        this.hostPlatformFolder = configuration.getHostTriplet().getOs() + \"-\" + Constants.ARCH_AMD64;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mjg3NjM1OQ=="}, "originalCommit": {"oid": "0bd189864329dbcf6f7a333cd2e1d5fbfe6f7547"}, "originalPosition": 47}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk1NTc3NzMyOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/gluonhq/substrate/target/AndroidTargetConfiguration.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQwOTowMzo0MlrOHC-JJg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQwOToxMjoyMVrOHC-c7Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mjg3NzM1MA==", "bodyText": "better to replace with the getArch() on the targetTriplet (e.g. when we support x86-64 emulator/devices)", "url": "https://github.com/gluonhq/substrate/pull/746#discussion_r472877350", "createdAt": "2020-08-19T09:03:42Z", "author": {"login": "johanvos"}, "path": "src/main/java/com/gluonhq/substrate/target/AndroidTargetConfiguration.java", "diffHunk": "@@ -268,6 +278,26 @@ String getLinkOutputName() {\n         return linkFlags;\n     }\n \n+    @Override\n+    Predicate<Path> getTargetSpecificNativeLibsFilter() {\n+        return this::checkFileArchitecture;\n+    }\n+\n+    private boolean checkFileArchitecture(Path path) {\n+        try {\n+            ProcessRunner pr = new ProcessRunner(objdump.toString(), \"-f\", path.toString());\n+            pr.showSevereMessage(false);\n+            int op = pr.runProcess(\"objdump\");\n+            if (op == 0) {\n+                return pr.getResponses().stream().anyMatch(line -> line.contains(\"architecture: \" + Constants.ARCH_AARCH64));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0bd189864329dbcf6f7a333cd2e1d5fbfe6f7547"}, "originalPosition": 84}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mjg4MjQxMw==", "bodyText": "ok", "url": "https://github.com/gluonhq/substrate/pull/746#discussion_r472882413", "createdAt": "2020-08-19T09:12:21Z", "author": {"login": "jperedadnr"}, "path": "src/main/java/com/gluonhq/substrate/target/AndroidTargetConfiguration.java", "diffHunk": "@@ -268,6 +278,26 @@ String getLinkOutputName() {\n         return linkFlags;\n     }\n \n+    @Override\n+    Predicate<Path> getTargetSpecificNativeLibsFilter() {\n+        return this::checkFileArchitecture;\n+    }\n+\n+    private boolean checkFileArchitecture(Path path) {\n+        try {\n+            ProcessRunner pr = new ProcessRunner(objdump.toString(), \"-f\", path.toString());\n+            pr.showSevereMessage(false);\n+            int op = pr.runProcess(\"objdump\");\n+            if (op == 0) {\n+                return pr.getResponses().stream().anyMatch(line -> line.contains(\"architecture: \" + Constants.ARCH_AARCH64));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mjg3NzM1MA=="}, "originalCommit": {"oid": "0bd189864329dbcf6f7a333cd2e1d5fbfe6f7547"}, "originalPosition": 84}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2953, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}