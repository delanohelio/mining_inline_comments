{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg0ODU2NDgx", "number": 410, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQxNDo1NTowNFrODl0y5g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQxNDo1NTowNFrODl0y5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwOTg4OTAyOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/gluonhq/substrate/target/AndroidTargetConfiguration.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQxNDo1NTowNVrOFy7iwQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQxNzo1MTowMVrOFzB19Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODk0ODY3Mw==", "bodyText": "this should go to AbstractTargetConfiguration", "url": "https://github.com/gluonhq/substrate/pull/410#discussion_r388948673", "createdAt": "2020-03-06T14:55:05Z", "author": {"login": "johanvos"}, "path": "src/main/java/com/gluonhq/substrate/target/AndroidTargetConfiguration.java", "diffHunk": "@@ -296,18 +296,14 @@ boolean allowHttps() {\n \n     @Override\n     List<String> getTargetSpecificAOTCompileFlags() throws IOException {\n-        Path llcPath = getLlcPath();\n-        Path internalLlcPath = projectConfiguration.getGraalPath().resolve(\"lib\").resolve(\"llvm\").resolve(\"bin\");\n-        \n         return Arrays.asList(\"-H:CompilerBackend=\" + Constants.BACKEND_LLVM,\n+                \"--features=org.graalvm.home.HomeFinderFeature\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "80a69145ede02ceab2bcb42bf371e61a446ec1e9"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODk1Mjk1MQ==", "bodyText": "Should we enable the feature unconditionally or only when LLVM backend is used?", "url": "https://github.com/gluonhq/substrate/pull/410#discussion_r388952951", "createdAt": "2020-03-06T15:01:51Z", "author": {"login": "tiainen"}, "path": "src/main/java/com/gluonhq/substrate/target/AndroidTargetConfiguration.java", "diffHunk": "@@ -296,18 +296,14 @@ boolean allowHttps() {\n \n     @Override\n     List<String> getTargetSpecificAOTCompileFlags() throws IOException {\n-        Path llcPath = getLlcPath();\n-        Path internalLlcPath = projectConfiguration.getGraalPath().resolve(\"lib\").resolve(\"llvm\").resolve(\"bin\");\n-        \n         return Arrays.asList(\"-H:CompilerBackend=\" + Constants.BACKEND_LLVM,\n+                \"--features=org.graalvm.home.HomeFinderFeature\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODk0ODY3Mw=="}, "originalCommit": {"oid": "80a69145ede02ceab2bcb42bf371e61a446ec1e9"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTA1MTg5Mw==", "bodyText": "unconditionally. At this moment, it is by default enabled in GraalVM for the LIR backend, but defaults can change.", "url": "https://github.com/gluonhq/substrate/pull/410#discussion_r389051893", "createdAt": "2020-03-06T17:51:01Z", "author": {"login": "johanvos"}, "path": "src/main/java/com/gluonhq/substrate/target/AndroidTargetConfiguration.java", "diffHunk": "@@ -296,18 +296,14 @@ boolean allowHttps() {\n \n     @Override\n     List<String> getTargetSpecificAOTCompileFlags() throws IOException {\n-        Path llcPath = getLlcPath();\n-        Path internalLlcPath = projectConfiguration.getGraalPath().resolve(\"lib\").resolve(\"llvm\").resolve(\"bin\");\n-        \n         return Arrays.asList(\"-H:CompilerBackend=\" + Constants.BACKEND_LLVM,\n+                \"--features=org.graalvm.home.HomeFinderFeature\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODk0ODY3Mw=="}, "originalCommit": {"oid": "80a69145ede02ceab2bcb42bf371e61a446ec1e9"}, "originalPosition": 8}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2980, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}