{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk3MTAwNzM3", "number": 487, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxNjozODo1M1rODtnTXQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxMDozOToyMlrODt5TMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5MTU2NDQ1OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/gluonhq/substrate/util/FileDeps.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxNjozODo1M1rOF_JJ9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxOTo1Mzo0MFrOF_QPeQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTc1NDYxMg==", "bodyText": "Add that this might take a long time, and that you can press CTRL-C to stop the process.", "url": "https://github.com/gluonhq/substrate/pull/487#discussion_r401754612", "createdAt": "2020-04-01T16:38:53Z", "author": {"login": "johanvos"}, "path": "src/main/java/com/gluonhq/substrate/util/FileDeps.java", "diffHunk": "@@ -347,38 +346,37 @@ private void downloadJavaFXZip(String osarch) throws IOException {\n                 \"javafxStaticSdk\",\n                 configuration.getJavafxStaticSdkVersion(),\n                 configuration.getTargetTriplet().getOsArch());\n-\n-        Logger.logDebug(\"Process zip javafx done\");\n+        Logger.logInfo(\"JavaFX static libs downloaded successfully\");\n     }\n \n     /**\n      * Crafts Android SDK url and then downloads it \n      * @throws IOException in case anything goes wrong.\n      */\n     private void downloadAndroidSdkZip() throws IOException {\n+        Logger.logInfo(\"Downloading Android SDK...\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c9d7a02f111b95ab185ad4a253079a2aa2fd6d4e"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTg3MDcxMw==", "bodyText": "We show the total size of the file and the current size that's being downloaded so far. Adding another line to tell that this will take a long time sounds redundant to me.", "url": "https://github.com/gluonhq/substrate/pull/487#discussion_r401870713", "createdAt": "2020-04-01T19:53:40Z", "author": {"login": "abhinayagarwal"}, "path": "src/main/java/com/gluonhq/substrate/util/FileDeps.java", "diffHunk": "@@ -347,38 +346,37 @@ private void downloadJavaFXZip(String osarch) throws IOException {\n                 \"javafxStaticSdk\",\n                 configuration.getJavafxStaticSdkVersion(),\n                 configuration.getTargetTriplet().getOsArch());\n-\n-        Logger.logDebug(\"Process zip javafx done\");\n+        Logger.logInfo(\"JavaFX static libs downloaded successfully\");\n     }\n \n     /**\n      * Crafts Android SDK url and then downloads it \n      * @throws IOException in case anything goes wrong.\n      */\n     private void downloadAndroidSdkZip() throws IOException {\n+        Logger.logInfo(\"Downloading Android SDK...\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTc1NDYxMg=="}, "originalCommit": {"oid": "c9d7a02f111b95ab185ad4a253079a2aa2fd6d4e"}, "originalPosition": 56}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5MjAzNDUyOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/gluonhq/substrate/util/FileDeps.java", "isResolved": true, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxODo0MjowNVrOF_NxyQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxOToyNjozMFrOGAlLDg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTgzMDM0NQ==", "bodyText": "This step doesn't use FileOps.downloadFile, and there is no feedback. In my case it takes up to 5 minutes without feedback.\nMight be convenient to use something like SubstrateDispatcher::startNativeCompileTimer?", "url": "https://github.com/gluonhq/substrate/pull/487#discussion_r401830345", "createdAt": "2020-04-01T18:42:05Z", "author": {"login": "jperedadnr"}, "path": "src/main/java/com/gluonhq/substrate/util/FileDeps.java", "diffHunk": "@@ -417,8 +415,8 @@ private void androidSdkManager(String[] args) throws IOException, InterruptedExc\n      * @throws InterruptedException in case anything goes wrong.\n      */\n     private void fetchFromSdkManager() throws IOException, InterruptedException {\n-        Logger.logDebug(\"Downloading Android toolchain...\");\n+        Logger.logInfo(\"Downloading Android NDK and toolchain...\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c9d7a02f111b95ab185ad4a253079a2aa2fd6d4e"}, "originalPosition": 91}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjIwMDY4Mg==", "bodyText": "I have added feedback by adding \".\" every second while the sdkmanager is running. This visual feedback should be enough for the user.", "url": "https://github.com/gluonhq/substrate/pull/487#discussion_r402200682", "createdAt": "2020-04-02T10:09:48Z", "author": {"login": "abhinayagarwal"}, "path": "src/main/java/com/gluonhq/substrate/util/FileDeps.java", "diffHunk": "@@ -417,8 +415,8 @@ private void androidSdkManager(String[] args) throws IOException, InterruptedExc\n      * @throws InterruptedException in case anything goes wrong.\n      */\n     private void fetchFromSdkManager() throws IOException, InterruptedException {\n-        Logger.logDebug(\"Downloading Android toolchain...\");\n+        Logger.logInfo(\"Downloading Android NDK and toolchain...\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTgzMDM0NQ=="}, "originalCommit": {"oid": "c9d7a02f111b95ab185ad4a253079a2aa2fd6d4e"}, "originalPosition": 91}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjMxODM0Nw==", "bodyText": "no, a . is not enough. It is actually the most frustrating output one can get, unless you know how many dots are expected.", "url": "https://github.com/gluonhq/substrate/pull/487#discussion_r402318347", "createdAt": "2020-04-02T13:37:14Z", "author": {"login": "johanvos"}, "path": "src/main/java/com/gluonhq/substrate/util/FileDeps.java", "diffHunk": "@@ -417,8 +415,8 @@ private void androidSdkManager(String[] args) throws IOException, InterruptedExc\n      * @throws InterruptedException in case anything goes wrong.\n      */\n     private void fetchFromSdkManager() throws IOException, InterruptedException {\n-        Logger.logDebug(\"Downloading Android toolchain...\");\n+        Logger.logInfo(\"Downloading Android NDK and toolchain...\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTgzMDM0NQ=="}, "originalCommit": {"oid": "c9d7a02f111b95ab185ad4a253079a2aa2fd6d4e"}, "originalPosition": 91}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjM0NjM2MQ==", "bodyText": "What else would you suggest?", "url": "https://github.com/gluonhq/substrate/pull/487#discussion_r402346361", "createdAt": "2020-04-02T14:14:26Z", "author": {"login": "abhinayagarwal"}, "path": "src/main/java/com/gluonhq/substrate/util/FileDeps.java", "diffHunk": "@@ -417,8 +415,8 @@ private void androidSdkManager(String[] args) throws IOException, InterruptedExc\n      * @throws InterruptedException in case anything goes wrong.\n      */\n     private void fetchFromSdkManager() throws IOException, InterruptedException {\n-        Logger.logDebug(\"Downloading Android toolchain...\");\n+        Logger.logInfo(\"Downloading Android NDK and toolchain...\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTgzMDM0NQ=="}, "originalCommit": {"oid": "c9d7a02f111b95ab185ad4a253079a2aa2fd6d4e"}, "originalPosition": 91}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzAzNzAzOQ==", "bodyText": "If you don't know how far you are in the download (x%), adding the \"this might take 5 minutes or longer\" is better.", "url": "https://github.com/gluonhq/substrate/pull/487#discussion_r403037039", "createdAt": "2020-04-03T14:16:34Z", "author": {"login": "johanvos"}, "path": "src/main/java/com/gluonhq/substrate/util/FileDeps.java", "diffHunk": "@@ -417,8 +415,8 @@ private void androidSdkManager(String[] args) throws IOException, InterruptedExc\n      * @throws InterruptedException in case anything goes wrong.\n      */\n     private void fetchFromSdkManager() throws IOException, InterruptedException {\n-        Logger.logDebug(\"Downloading Android toolchain...\");\n+        Logger.logInfo(\"Downloading Android NDK and toolchain...\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTgzMDM0NQ=="}, "originalCommit": {"oid": "c9d7a02f111b95ab185ad4a253079a2aa2fd6d4e"}, "originalPosition": 91}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzI2MjIyMg==", "bodyText": "Added a message which says, \"Downloading Android NDK and toolchain. It may take several minutes depending on your bandwidth\"", "url": "https://github.com/gluonhq/substrate/pull/487#discussion_r403262222", "createdAt": "2020-04-03T19:26:30Z", "author": {"login": "abhinayagarwal"}, "path": "src/main/java/com/gluonhq/substrate/util/FileDeps.java", "diffHunk": "@@ -417,8 +415,8 @@ private void androidSdkManager(String[] args) throws IOException, InterruptedExc\n      * @throws InterruptedException in case anything goes wrong.\n      */\n     private void fetchFromSdkManager() throws IOException, InterruptedException {\n-        Logger.logDebug(\"Downloading Android toolchain...\");\n+        Logger.logInfo(\"Downloading Android NDK and toolchain...\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTgzMDM0NQ=="}, "originalCommit": {"oid": "c9d7a02f111b95ab185ad4a253079a2aa2fd6d4e"}, "originalPosition": 91}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5MjQyOTQ5OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/gluonhq/substrate/util/FileOps.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQyMDozNjo0MVrOF_RpoQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxMDoxMToxMFrOF_kbXw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTg5Mzc5Mw==", "bodyText": "Rename to Download progress:", "url": "https://github.com/gluonhq/substrate/pull/487#discussion_r401893793", "createdAt": "2020-04-01T20:36:41Z", "author": {"login": "jperedadnr"}, "path": "src/main/java/com/gluonhq/substrate/util/FileOps.java", "diffHunk": "@@ -526,4 +521,74 @@ public static void downloadAndUnzip(String sourceUrl, Path destPath, String file\n             oos.writeObject(hashes);\n         }\n     }\n+\n+    /**\n+     * Prints the progress of a file download\n+     */\n+    private static final class ProgressDownloader {\n+        \n+        public static void downloadFile(URL fileUrl, Path filePath) {\n+            new ProgressDownloader(fileUrl, filePath);\n+            System.out.println();\n+        }\n+\n+        private ProgressDownloader(URL fileUrl, Path filePath) {\n+            try (\n+                    ReadableByteChannel rbc = new RBCWrapper(Channels.newChannel(fileUrl.openStream()), contentLength(fileUrl), this);\n+                    FileOutputStream fos = new FileOutputStream(filePath.toFile())) {\n+                fos.getChannel().transferFrom( rbc, 0, Long.MAX_VALUE );\n+            } catch ( Exception e ) {\n+                Logger.logSevere(\"Downloading failed: \" + e.getMessage());\n+            }\n+        }\n+\n+        public void rbcProgressCallback(RBCWrapper rbc) {\n+            System.out.print(\"\\r\" + String.format(\"Download Progress: %.2f / %.2fM\", toMB(rbc.readSoFar), toMB(rbc.expectedSize)));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c9d7a02f111b95ab185ad4a253079a2aa2fd6d4e"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjIwMTQzOQ==", "bodyText": "Done!", "url": "https://github.com/gluonhq/substrate/pull/487#discussion_r402201439", "createdAt": "2020-04-02T10:11:10Z", "author": {"login": "abhinayagarwal"}, "path": "src/main/java/com/gluonhq/substrate/util/FileOps.java", "diffHunk": "@@ -526,4 +521,74 @@ public static void downloadAndUnzip(String sourceUrl, Path destPath, String file\n             oos.writeObject(hashes);\n         }\n     }\n+\n+    /**\n+     * Prints the progress of a file download\n+     */\n+    private static final class ProgressDownloader {\n+        \n+        public static void downloadFile(URL fileUrl, Path filePath) {\n+            new ProgressDownloader(fileUrl, filePath);\n+            System.out.println();\n+        }\n+\n+        private ProgressDownloader(URL fileUrl, Path filePath) {\n+            try (\n+                    ReadableByteChannel rbc = new RBCWrapper(Channels.newChannel(fileUrl.openStream()), contentLength(fileUrl), this);\n+                    FileOutputStream fos = new FileOutputStream(filePath.toFile())) {\n+                fos.getChannel().transferFrom( rbc, 0, Long.MAX_VALUE );\n+            } catch ( Exception e ) {\n+                Logger.logSevere(\"Downloading failed: \" + e.getMessage());\n+            }\n+        }\n+\n+        public void rbcProgressCallback(RBCWrapper rbc) {\n+            System.out.print(\"\\r\" + String.format(\"Download Progress: %.2f / %.2fM\", toMB(rbc.readSoFar), toMB(rbc.expectedSize)));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTg5Mzc5Mw=="}, "originalCommit": {"oid": "c9d7a02f111b95ab185ad4a253079a2aa2fd6d4e"}, "originalPosition": 60}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5NDQ5ODE3OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/gluonhq/substrate/util/FileDeps.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxMDozNTowOVrOF_lPEQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxMDozNTowOVrOF_lPEQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjIxNDY3Mw==", "bodyText": "Maybe move this to  ProcessRunner?", "url": "https://github.com/gluonhq/substrate/pull/487#discussion_r402214673", "createdAt": "2020-04-02T10:35:09Z", "author": {"login": "jperedadnr"}, "path": "src/main/java/com/gluonhq/substrate/util/FileDeps.java", "diffHunk": "@@ -417,8 +418,45 @@ private void androidSdkManager(String[] args) throws IOException, InterruptedExc\n      * @throws InterruptedException in case anything goes wrong.\n      */\n     private void fetchFromSdkManager() throws IOException, InterruptedException {\n-        Logger.logDebug(\"Downloading Android toolchain...\");\n+        Logger.logInfo(\"Downloading Android NDK and toolchain...\");\n         androidSdkManager(ANDROID_SDK_PACKAGES);\n-        Logger.logDebug(\"Done downloading Android toolchain\");\n+        Logger.logInfo(\"Android NDK and toolchain downloaded successfully\");\n+    }\n+\n+    /**\n+     * Prints \".\" every second the background process is running.\n+     * The feedback is helpful for end user. A lack of feedback can lead to an impression that the process is stuck.\n+     */\n+    private static class ProcessWithFeedback implements Callable<Integer> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3a1b0114fa2b23398cf0d1b3a8f190c0a9316c12"}, "originalPosition": 120}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5NDUwNjY0OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/gluonhq/substrate/util/FileDeps.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxMDozNzoxOFrOF_lUDg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxMDozNzoxOFrOF_lUDg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjIxNTk1MA==", "bodyText": "Maybe convenient to set the time as parameter, with default one second.", "url": "https://github.com/gluonhq/substrate/pull/487#discussion_r402215950", "createdAt": "2020-04-02T10:37:18Z", "author": {"login": "jperedadnr"}, "path": "src/main/java/com/gluonhq/substrate/util/FileDeps.java", "diffHunk": "@@ -417,8 +418,45 @@ private void androidSdkManager(String[] args) throws IOException, InterruptedExc\n      * @throws InterruptedException in case anything goes wrong.\n      */\n     private void fetchFromSdkManager() throws IOException, InterruptedException {\n-        Logger.logDebug(\"Downloading Android toolchain...\");\n+        Logger.logInfo(\"Downloading Android NDK and toolchain...\");\n         androidSdkManager(ANDROID_SDK_PACKAGES);\n-        Logger.logDebug(\"Done downloading Android toolchain\");\n+        Logger.logInfo(\"Android NDK and toolchain downloaded successfully\");\n+    }\n+\n+    /**\n+     * Prints \".\" every second the background process is running.\n+     * The feedback is helpful for end user. A lack of feedback can lead to an impression that the process is stuck.\n+     */\n+    private static class ProcessWithFeedback implements Callable<Integer> {\n+\n+        private final ProcessRunner processRunner;\n+        private final String processName;\n+        private final Timer timer;\n+        \n+        static Integer execute(ProcessRunner processRunner, String processName) throws IOException, InterruptedException {\n+            return new ProcessWithFeedback(processRunner, processName).call();\n+        }\n+\n+        private ProcessWithFeedback(ProcessRunner processRunner, String processName) {\n+            this.processRunner = processRunner;\n+            this.processName = processName;\n+            timer = new Timer(true);\n+        }\n+\n+        @Override\n+        public Integer call() throws IOException, InterruptedException {\n+            timer.schedule(new PrintTask(), 0, 1000);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3a1b0114fa2b23398cf0d1b3a8f190c0a9316c12"}, "originalPosition": 138}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5NDUxMzE0OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/gluonhq/substrate/util/FileDeps.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxMDozOToyMlrOF_lYNQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxMDozOToyMlrOF_lYNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjIxNzAxMw==", "bodyText": "when the process ends, print a new line, otherwise the next log message is printed in the same line after the dots.", "url": "https://github.com/gluonhq/substrate/pull/487#discussion_r402217013", "createdAt": "2020-04-02T10:39:22Z", "author": {"login": "jperedadnr"}, "path": "src/main/java/com/gluonhq/substrate/util/FileDeps.java", "diffHunk": "@@ -417,8 +418,45 @@ private void androidSdkManager(String[] args) throws IOException, InterruptedExc\n      * @throws InterruptedException in case anything goes wrong.\n      */\n     private void fetchFromSdkManager() throws IOException, InterruptedException {\n-        Logger.logDebug(\"Downloading Android toolchain...\");\n+        Logger.logInfo(\"Downloading Android NDK and toolchain...\");\n         androidSdkManager(ANDROID_SDK_PACKAGES);\n-        Logger.logDebug(\"Done downloading Android toolchain\");\n+        Logger.logInfo(\"Android NDK and toolchain downloaded successfully\");\n+    }\n+\n+    /**\n+     * Prints \".\" every second the background process is running.\n+     * The feedback is helpful for end user. A lack of feedback can lead to an impression that the process is stuck.\n+     */\n+    private static class ProcessWithFeedback implements Callable<Integer> {\n+\n+        private final ProcessRunner processRunner;\n+        private final String processName;\n+        private final Timer timer;\n+        \n+        static Integer execute(ProcessRunner processRunner, String processName) throws IOException, InterruptedException {\n+            return new ProcessWithFeedback(processRunner, processName).call();\n+        }\n+\n+        private ProcessWithFeedback(ProcessRunner processRunner, String processName) {\n+            this.processRunner = processRunner;\n+            this.processName = processName;\n+            timer = new Timer(true);\n+        }\n+\n+        @Override\n+        public Integer call() throws IOException, InterruptedException {\n+            timer.schedule(new PrintTask(), 0, 1000);\n+            final int result = processRunner.runProcess(processName);\n+            timer.cancel();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3a1b0114fa2b23398cf0d1b3a8f190c0a9316c12"}, "originalPosition": 140}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3007, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}