{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY2Mzc2MTky", "number": 290, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QxNDowNTo1NFrODaLmig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QxNToyOTozNVrODaNm8A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4Nzc5NjU4OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/gluonhq/substrate/model/InternalProjectConfiguration.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QxNDowNTo1NFrOFg_SKw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QxNDowNTo1NFrOFg_SKw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDEzNTU5NQ==", "bodyText": "would be good to have a test that checks this: set usePrismSW on public config, then request if from internalconfig", "url": "https://github.com/gluonhq/substrate/pull/290#discussion_r370135595", "createdAt": "2020-01-23T14:05:54Z", "author": {"login": "johanvos"}, "path": "src/main/java/com/gluonhq/substrate/model/InternalProjectConfiguration.java", "diffHunk": "@@ -80,15 +80,14 @@\n      * Private projects configuration, which includes everything, including public settings\n      * @param config public project configuration\n      */\n-    public InternalProjectConfiguration(ProjectConfiguration config ) {\n+    public InternalProjectConfiguration(ProjectConfiguration config) {\n \n         this.publicConfig = Objects.requireNonNull(config);\n \n-        boolean usePrismSW = Boolean.parseBoolean(System.getProperty(\"prism.sw\", \"false\"));\n         boolean skipCompile = Boolean.parseBoolean(System.getProperty(\"skipcompile\", \"false\"));\n         boolean skipSigning = Boolean.parseBoolean(System.getProperty(\"skipsigning\", \"false\"));\n \n-        setUsePrismSW(usePrismSW);\n+        setUsePrismSW(config.isUsePrismSW());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "968fd805ce5c15d33f90cb0c942e3087f96faeb5"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4ODEyNTI4OnYy", "diffSide": "RIGHT", "path": "src/test/java/com/gluonhq/substrate/SubstrateTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QxNToyOTozNVrOFhCb0g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QxNTozNDozMVrOFhCnjg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDE4NzIxOA==", "bodyText": "test on false too?", "url": "https://github.com/gluonhq/substrate/pull/290#discussion_r370187218", "createdAt": "2020-01-23T15:29:35Z", "author": {"login": "johanvos"}, "path": "src/test/java/com/gluonhq/substrate/SubstrateTest.java", "diffHunk": "@@ -89,4 +91,16 @@ void testMainClassName() {\n         config = new InternalProjectConfiguration( new ProjectConfiguration(\"name/a.b.Foo\"));\n         assertEquals(\"a.b.Foo\", config.getMainClassName());\n     }\n+\n+    @Test\n+    void testAssertSW() {\n+        ProjectConfiguration publicConfig = new ProjectConfiguration(\"a.b.Foo\");\n+        InternalProjectConfiguration config = new InternalProjectConfiguration(publicConfig);\n+        assertFalse(config.isUsePrismSW());\n+\n+        publicConfig = new ProjectConfiguration(\"a.b.Foo\");\n+        publicConfig.setUsePrismSW(true);\n+        config = new InternalProjectConfiguration(publicConfig);\n+        assertTrue(config.isUsePrismSW());\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2b89ca413ddbb77f39780955e3cd62910ad44b4b"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDE5MDIyMg==", "bodyText": "It is tested here", "url": "https://github.com/gluonhq/substrate/pull/290#discussion_r370190222", "createdAt": "2020-01-23T15:34:31Z", "author": {"login": "abhinayagarwal"}, "path": "src/test/java/com/gluonhq/substrate/SubstrateTest.java", "diffHunk": "@@ -89,4 +91,16 @@ void testMainClassName() {\n         config = new InternalProjectConfiguration( new ProjectConfiguration(\"name/a.b.Foo\"));\n         assertEquals(\"a.b.Foo\", config.getMainClassName());\n     }\n+\n+    @Test\n+    void testAssertSW() {\n+        ProjectConfiguration publicConfig = new ProjectConfiguration(\"a.b.Foo\");\n+        InternalProjectConfiguration config = new InternalProjectConfiguration(publicConfig);\n+        assertFalse(config.isUsePrismSW());\n+\n+        publicConfig = new ProjectConfiguration(\"a.b.Foo\");\n+        publicConfig.setUsePrismSW(true);\n+        config = new InternalProjectConfiguration(publicConfig);\n+        assertTrue(config.isUsePrismSW());\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDE4NzIxOA=="}, "originalCommit": {"oid": "2b89ca413ddbb77f39780955e3cd62910ad44b4b"}, "originalPosition": 25}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3037, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}