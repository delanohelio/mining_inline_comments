{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ1Mjc0NTA5", "number": 690, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QwOToyNzo0MFrOEL_yPA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QwOToyNzo0MFrOEL_yPA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxMDE0ODQ0OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/gluonhq/substrate/model/ClassPath.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QwOToyNzo0MFrOGt2bjQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QwOToyNzo0MFrOGt2bjQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDczMDg5Mw==", "bodyText": "Should be jarPath in the exception message.", "url": "https://github.com/gluonhq/substrate/pull/690#discussion_r450730893", "createdAt": "2020-07-07T09:27:40Z", "author": {"login": "tiainen"}, "path": "src/main/java/com/gluonhq/substrate/model/ClassPath.java", "diffHunk": "@@ -120,10 +130,26 @@ public String mapWithLibs(Path libsPath, String... libNames) {\n                 if (resourcesPath != null && Files.exists(resourcesPath)) {\n                     FileOps.copyDirectory(resourcesPath, classesPath);\n                 }\n-                Path jar = classesPath.resolve(\"classes.jar\");\n-                ProcessRunner runner = new ProcessRunner(\"jar\", \"cf\", jar.toString(), \"-C\", classesPath.toString(), \".\");\n-                if (runner.runProcess(\"jar\") == 0 && Files.exists(jar)) {\n-                    jars.add(jar.toFile());\n+\n+                String javaPath = System.getenv(\"JAVA_HOME\");\n+                if (javaPath == null || javaPath.isEmpty()) {\n+                    javaPath = System.getenv(\"GRAALVM_HOME\");\n+                    if (javaPath == null || javaPath.isEmpty()) {\n+                        throw new IOException(\"Error: $JAVA_HOME and $GRAALVM_HOME are undefined\");\n+                    }\n+                }\n+                Path jarPath = Path.of(javaPath, \"bin\", \"jar\");\n+                if (!Files.exists(jarPath)) {\n+                    throw new IOException(\"Error: \" + javaPath + \" doesn't exist\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "84c9912156f39faa8a5b5a05b211ca4e3a1515c0"}, "originalPosition": 35}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2931, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}