{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk3MTAwNzM3", "number": 487, "title": "Show download progress", "bodyText": "Shows the progress for a file currently being downloaded. The maven plugin shows the following logs for Android SDK:\nINFO: Downloading Android SDK...\nDownload Progress: 3.12 / 147.42 M\n...\nDownload Progress: 147.42 / 147.42 M // This gets printed in the same line as above\nINFO: Android SDK downloaded successfully", "createdAt": "2020-04-01T16:25:42Z", "url": "https://github.com/gluonhq/substrate/pull/487", "merged": true, "mergeCommit": {"oid": "38bcefe1cf221eecd7fc8e0a76f38cc173875c99"}, "closed": true, "closedAt": "2020-04-04T12:14:29Z", "author": {"login": "abhinayagarwal"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcTaMcZAH2gAyMzk3MTAwNzM3OmM5ZDdhMDJmMTExYjk1YWIxODVhZDRhMjUzMDc5YTJhYTJmZDZkNGU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcUUcjBgFqTM4NzY5NDIwOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "c9d7a02f111b95ab185ad4a253079a2aa2fd6d4e", "author": {"user": {"login": "abhinayagarwal", "name": "Abhinay Agarwal"}}, "url": "https://github.com/gluonhq/substrate/commit/c9d7a02f111b95ab185ad4a253079a2aa2fd6d4e", "committedDate": "2020-04-01T16:21:46Z", "message": "Show download progress"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg1NzYwNDcy", "url": "https://github.com/gluonhq/substrate/pull/487#pullrequestreview-385760472", "createdAt": "2020-04-01T16:38:53Z", "commit": {"oid": "c9d7a02f111b95ab185ad4a253079a2aa2fd6d4e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxNjozODo1M1rOF_JJ9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxNjozODo1M1rOF_JJ9A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTc1NDYxMg==", "bodyText": "Add that this might take a long time, and that you can press CTRL-C to stop the process.", "url": "https://github.com/gluonhq/substrate/pull/487#discussion_r401754612", "createdAt": "2020-04-01T16:38:53Z", "author": {"login": "johanvos"}, "path": "src/main/java/com/gluonhq/substrate/util/FileDeps.java", "diffHunk": "@@ -347,38 +346,37 @@ private void downloadJavaFXZip(String osarch) throws IOException {\n                 \"javafxStaticSdk\",\n                 configuration.getJavafxStaticSdkVersion(),\n                 configuration.getTargetTriplet().getOsArch());\n-\n-        Logger.logDebug(\"Process zip javafx done\");\n+        Logger.logInfo(\"JavaFX static libs downloaded successfully\");\n     }\n \n     /**\n      * Crafts Android SDK url and then downloads it \n      * @throws IOException in case anything goes wrong.\n      */\n     private void downloadAndroidSdkZip() throws IOException {\n+        Logger.logInfo(\"Downloading Android SDK...\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c9d7a02f111b95ab185ad4a253079a2aa2fd6d4e"}, "originalPosition": 56}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg1ODUyMzc4", "url": "https://github.com/gluonhq/substrate/pull/487#pullrequestreview-385852378", "createdAt": "2020-04-01T18:42:05Z", "commit": {"oid": "c9d7a02f111b95ab185ad4a253079a2aa2fd6d4e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxODo0MjowNVrOF_NxyQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxODo0MjowNVrOF_NxyQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTgzMDM0NQ==", "bodyText": "This step doesn't use FileOps.downloadFile, and there is no feedback. In my case it takes up to 5 minutes without feedback.\nMight be convenient to use something like SubstrateDispatcher::startNativeCompileTimer?", "url": "https://github.com/gluonhq/substrate/pull/487#discussion_r401830345", "createdAt": "2020-04-01T18:42:05Z", "author": {"login": "jperedadnr"}, "path": "src/main/java/com/gluonhq/substrate/util/FileDeps.java", "diffHunk": "@@ -417,8 +415,8 @@ private void androidSdkManager(String[] args) throws IOException, InterruptedExc\n      * @throws InterruptedException in case anything goes wrong.\n      */\n     private void fetchFromSdkManager() throws IOException, InterruptedException {\n-        Logger.logDebug(\"Downloading Android toolchain...\");\n+        Logger.logInfo(\"Downloading Android NDK and toolchain...\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c9d7a02f111b95ab185ad4a253079a2aa2fd6d4e"}, "originalPosition": 91}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg1OTMwMTg3", "url": "https://github.com/gluonhq/substrate/pull/487#pullrequestreview-385930187", "createdAt": "2020-04-01T20:36:41Z", "commit": {"oid": "c9d7a02f111b95ab185ad4a253079a2aa2fd6d4e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQyMDozNjo0MVrOF_RpoQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQyMDozNjo0MVrOF_RpoQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTg5Mzc5Mw==", "bodyText": "Rename to Download progress:", "url": "https://github.com/gluonhq/substrate/pull/487#discussion_r401893793", "createdAt": "2020-04-01T20:36:41Z", "author": {"login": "jperedadnr"}, "path": "src/main/java/com/gluonhq/substrate/util/FileOps.java", "diffHunk": "@@ -526,4 +521,74 @@ public static void downloadAndUnzip(String sourceUrl, Path destPath, String file\n             oos.writeObject(hashes);\n         }\n     }\n+\n+    /**\n+     * Prints the progress of a file download\n+     */\n+    private static final class ProgressDownloader {\n+        \n+        public static void downloadFile(URL fileUrl, Path filePath) {\n+            new ProgressDownloader(fileUrl, filePath);\n+            System.out.println();\n+        }\n+\n+        private ProgressDownloader(URL fileUrl, Path filePath) {\n+            try (\n+                    ReadableByteChannel rbc = new RBCWrapper(Channels.newChannel(fileUrl.openStream()), contentLength(fileUrl), this);\n+                    FileOutputStream fos = new FileOutputStream(filePath.toFile())) {\n+                fos.getChannel().transferFrom( rbc, 0, Long.MAX_VALUE );\n+            } catch ( Exception e ) {\n+                Logger.logSevere(\"Downloading failed: \" + e.getMessage());\n+            }\n+        }\n+\n+        public void rbcProgressCallback(RBCWrapper rbc) {\n+            System.out.print(\"\\r\" + String.format(\"Download Progress: %.2f / %.2fM\", toMB(rbc.readSoFar), toMB(rbc.expectedSize)));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c9d7a02f111b95ab185ad4a253079a2aa2fd6d4e"}, "originalPosition": 60}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9d176a88db24a9aff6c21c93a55be35ce4f8a140", "author": {"user": {"login": "abhinayagarwal", "name": "Abhinay Agarwal"}}, "url": "https://github.com/gluonhq/substrate/commit/9d176a88db24a9aff6c21c93a55be35ce4f8a140", "committedDate": "2020-04-02T10:07:30Z", "message": "Flush PrintStream after each print"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fe654575f0a389c5939468d3ed013f51449b7572", "author": {"user": {"login": "abhinayagarwal", "name": "Abhinay Agarwal"}}, "url": "https://github.com/gluonhq/substrate/commit/fe654575f0a389c5939468d3ed013f51449b7572", "committedDate": "2020-04-02T10:08:07Z", "message": "Downloads via sdkmanager should have feeback"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3a1b0114fa2b23398cf0d1b3a8f190c0a9316c12", "author": {"user": {"login": "abhinayagarwal", "name": "Abhinay Agarwal"}}, "url": "https://github.com/gluonhq/substrate/commit/3a1b0114fa2b23398cf0d1b3a8f190c0a9316c12", "committedDate": "2020-04-02T10:10:54Z", "message": "Change to string as per feedback"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg2MzAxNzMx", "url": "https://github.com/gluonhq/substrate/pull/487#pullrequestreview-386301731", "createdAt": "2020-04-02T10:35:09Z", "commit": {"oid": "3a1b0114fa2b23398cf0d1b3a8f190c0a9316c12"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxMDozNTowOVrOF_lPEQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxMDozOToyMlrOF_lYNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjIxNDY3Mw==", "bodyText": "Maybe move this to  ProcessRunner?", "url": "https://github.com/gluonhq/substrate/pull/487#discussion_r402214673", "createdAt": "2020-04-02T10:35:09Z", "author": {"login": "jperedadnr"}, "path": "src/main/java/com/gluonhq/substrate/util/FileDeps.java", "diffHunk": "@@ -417,8 +418,45 @@ private void androidSdkManager(String[] args) throws IOException, InterruptedExc\n      * @throws InterruptedException in case anything goes wrong.\n      */\n     private void fetchFromSdkManager() throws IOException, InterruptedException {\n-        Logger.logDebug(\"Downloading Android toolchain...\");\n+        Logger.logInfo(\"Downloading Android NDK and toolchain...\");\n         androidSdkManager(ANDROID_SDK_PACKAGES);\n-        Logger.logDebug(\"Done downloading Android toolchain\");\n+        Logger.logInfo(\"Android NDK and toolchain downloaded successfully\");\n+    }\n+\n+    /**\n+     * Prints \".\" every second the background process is running.\n+     * The feedback is helpful for end user. A lack of feedback can lead to an impression that the process is stuck.\n+     */\n+    private static class ProcessWithFeedback implements Callable<Integer> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3a1b0114fa2b23398cf0d1b3a8f190c0a9316c12"}, "originalPosition": 120}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjIxNTk1MA==", "bodyText": "Maybe convenient to set the time as parameter, with default one second.", "url": "https://github.com/gluonhq/substrate/pull/487#discussion_r402215950", "createdAt": "2020-04-02T10:37:18Z", "author": {"login": "jperedadnr"}, "path": "src/main/java/com/gluonhq/substrate/util/FileDeps.java", "diffHunk": "@@ -417,8 +418,45 @@ private void androidSdkManager(String[] args) throws IOException, InterruptedExc\n      * @throws InterruptedException in case anything goes wrong.\n      */\n     private void fetchFromSdkManager() throws IOException, InterruptedException {\n-        Logger.logDebug(\"Downloading Android toolchain...\");\n+        Logger.logInfo(\"Downloading Android NDK and toolchain...\");\n         androidSdkManager(ANDROID_SDK_PACKAGES);\n-        Logger.logDebug(\"Done downloading Android toolchain\");\n+        Logger.logInfo(\"Android NDK and toolchain downloaded successfully\");\n+    }\n+\n+    /**\n+     * Prints \".\" every second the background process is running.\n+     * The feedback is helpful for end user. A lack of feedback can lead to an impression that the process is stuck.\n+     */\n+    private static class ProcessWithFeedback implements Callable<Integer> {\n+\n+        private final ProcessRunner processRunner;\n+        private final String processName;\n+        private final Timer timer;\n+        \n+        static Integer execute(ProcessRunner processRunner, String processName) throws IOException, InterruptedException {\n+            return new ProcessWithFeedback(processRunner, processName).call();\n+        }\n+\n+        private ProcessWithFeedback(ProcessRunner processRunner, String processName) {\n+            this.processRunner = processRunner;\n+            this.processName = processName;\n+            timer = new Timer(true);\n+        }\n+\n+        @Override\n+        public Integer call() throws IOException, InterruptedException {\n+            timer.schedule(new PrintTask(), 0, 1000);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3a1b0114fa2b23398cf0d1b3a8f190c0a9316c12"}, "originalPosition": 138}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjIxNzAxMw==", "bodyText": "when the process ends, print a new line, otherwise the next log message is printed in the same line after the dots.", "url": "https://github.com/gluonhq/substrate/pull/487#discussion_r402217013", "createdAt": "2020-04-02T10:39:22Z", "author": {"login": "jperedadnr"}, "path": "src/main/java/com/gluonhq/substrate/util/FileDeps.java", "diffHunk": "@@ -417,8 +418,45 @@ private void androidSdkManager(String[] args) throws IOException, InterruptedExc\n      * @throws InterruptedException in case anything goes wrong.\n      */\n     private void fetchFromSdkManager() throws IOException, InterruptedException {\n-        Logger.logDebug(\"Downloading Android toolchain...\");\n+        Logger.logInfo(\"Downloading Android NDK and toolchain...\");\n         androidSdkManager(ANDROID_SDK_PACKAGES);\n-        Logger.logDebug(\"Done downloading Android toolchain\");\n+        Logger.logInfo(\"Android NDK and toolchain downloaded successfully\");\n+    }\n+\n+    /**\n+     * Prints \".\" every second the background process is running.\n+     * The feedback is helpful for end user. A lack of feedback can lead to an impression that the process is stuck.\n+     */\n+    private static class ProcessWithFeedback implements Callable<Integer> {\n+\n+        private final ProcessRunner processRunner;\n+        private final String processName;\n+        private final Timer timer;\n+        \n+        static Integer execute(ProcessRunner processRunner, String processName) throws IOException, InterruptedException {\n+            return new ProcessWithFeedback(processRunner, processName).call();\n+        }\n+\n+        private ProcessWithFeedback(ProcessRunner processRunner, String processName) {\n+            this.processRunner = processRunner;\n+            this.processName = processName;\n+            timer = new Timer(true);\n+        }\n+\n+        @Override\n+        public Integer call() throws IOException, InterruptedException {\n+            timer.schedule(new PrintTask(), 0, 1000);\n+            final int result = processRunner.runProcess(processName);\n+            timer.cancel();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3a1b0114fa2b23398cf0d1b3a8f190c0a9316c12"}, "originalPosition": 140}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "54188efdfe97ded2b3a1049a4a56b0de2a0455b3", "author": {"user": {"login": "abhinayagarwal", "name": "Abhinay Agarwal"}}, "url": "https://github.com/gluonhq/substrate/commit/54188efdfe97ded2b3a1049a4a56b0de2a0455b3", "committedDate": "2020-04-02T14:15:12Z", "message": "Comment out unused variable"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c27012ad02984be2111f3202c791e56d3d49234b", "author": {"user": {"login": "abhinayagarwal", "name": "Abhinay Agarwal"}}, "url": "https://github.com/gluonhq/substrate/commit/c27012ad02984be2111f3202c791e56d3d49234b", "committedDate": "2020-04-02T14:33:29Z", "message": "Move ProcessWithFeedback into ProcessRunner"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg2NTQ0ODg3", "url": "https://github.com/gluonhq/substrate/pull/487#pullrequestreview-386544887", "createdAt": "2020-04-02T15:32:18Z", "commit": {"oid": "c27012ad02984be2111f3202c791e56d3d49234b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fea5c125ff494caa1c2c5be0f6661bb391e71a49", "author": {"user": {"login": "abhinayagarwal", "name": "Abhinay Agarwal"}}, "url": "https://github.com/gluonhq/substrate/commit/fea5c125ff494caa1c2c5be0f6661bb391e71a49", "committedDate": "2020-04-03T14:29:49Z", "message": "Improve logger message for NDK and toolchain download"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg3Njk0MjA4", "url": "https://github.com/gluonhq/substrate/pull/487#pullrequestreview-387694208", "createdAt": "2020-04-04T12:13:51Z", "commit": {"oid": "fea5c125ff494caa1c2c5be0f6661bb391e71a49"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2166, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}