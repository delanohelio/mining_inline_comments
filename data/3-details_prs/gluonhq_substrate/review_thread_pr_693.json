{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ1Mzg1NzUx", "number": 693, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxMjo0MjoxMFrOEMDwww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxMjo0MjoxMFrOEMDwww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxMDgwMDAzOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/gluonhq/substrate/util/ios/Deploy.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxMjo0MjoxMFrOGt8tYQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxNDowNzoxOFrOGuAQNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDgzMzc2MQ==", "bodyText": "Perhaps we should no longer mention .dylib here, but just inform the user that the library could not be found?", "url": "https://github.com/gluonhq/substrate/pull/693#discussion_r450833761", "createdAt": "2020-07-07T12:42:10Z", "author": {"login": "tiainen"}, "path": "src/main/java/com/gluonhq/substrate/util/ios/Deploy.java", "diffHunk": "@@ -83,7 +84,7 @@ private void checkPrerequisites() throws IOException, InterruptedException {\n         }\n \n         // Check for libimobiledevice installed\n-        List<String> libiPath = checkDependencyPaths(\"libimobiledevice\");\n+        List<String> libiPath = checkDependencyPaths(LIBIMOBILEDEVICE);\n         if (libiPath == null || libiPath.isEmpty() || !Files.exists(Path.of(libiPath.get(0)))) {\n             Logger.logSevere(\"Error finding libimobiledevice.dylib\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dc77e2391a5de0a235868324444c0c7f1fa08fb4"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDg5MTgyOA==", "bodyText": "In fact, this check is redundant, checkDependencyPaths does it too, and will throw already a RTE. I've done a small refactoring.", "url": "https://github.com/gluonhq/substrate/pull/693#discussion_r450891828", "createdAt": "2020-07-07T14:07:18Z", "author": {"login": "jperedadnr"}, "path": "src/main/java/com/gluonhq/substrate/util/ios/Deploy.java", "diffHunk": "@@ -83,7 +84,7 @@ private void checkPrerequisites() throws IOException, InterruptedException {\n         }\n \n         // Check for libimobiledevice installed\n-        List<String> libiPath = checkDependencyPaths(\"libimobiledevice\");\n+        List<String> libiPath = checkDependencyPaths(LIBIMOBILEDEVICE);\n         if (libiPath == null || libiPath.isEmpty() || !Files.exists(Path.of(libiPath.get(0)))) {\n             Logger.logSevere(\"Error finding libimobiledevice.dylib\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDgzMzc2MQ=="}, "originalCommit": {"oid": "dc77e2391a5de0a235868324444c0c7f1fa08fb4"}, "originalPosition": 18}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2934, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}