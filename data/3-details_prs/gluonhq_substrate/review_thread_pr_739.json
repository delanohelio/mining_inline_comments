{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY1NjUyMjAz", "number": 739, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQwODoxMjoxMlrOEXGiwA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQwODoxMjoxMlrOEXGiwA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyNjU5OTA0OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/gluonhq/substrate/util/FileOps.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQwODoxMjoxMlrOG-tEtw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQxMjowMTozN1rOG-0otQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODQwMzM4Mw==", "bodyText": "One small remark. Wouldn't it be better to create the temporary pathing jar file in the directory provided by ProcessPaths.getTmpPath()?", "url": "https://github.com/gluonhq/substrate/pull/739#discussion_r468403383", "createdAt": "2020-08-11T08:12:12Z", "author": {"login": "tiainen"}, "path": "src/main/java/com/gluonhq/substrate/util/FileOps.java", "diffHunk": "@@ -671,6 +674,28 @@ public static void downloadAndUnzip(String sourceUrl, Path destPath, String file\n         }\n     }\n \n+    /**\n+     * Shorten the Java classpath with a pathing jar\n+     * @param classpath A string with the classpath of files that will be added to the\n+     *                 pathing jar Class-Path attribute\n+     * @return a String with the path to the created pathing jar\n+     * @throws IOException\n+     */\n+    public static String createPathingJar(String classpath) throws IOException {\n+        Objects.requireNonNull(classpath);\n+        Manifest manifest = new Manifest();\n+        Attributes attributes = manifest.getMainAttributes();\n+        attributes.put(Attributes.Name.MANIFEST_VERSION, \"1.0\");\n+        attributes.put(Attributes.Name.CLASS_PATH,\n+                classpath.replaceAll(File.pathSeparator, \" \"));\n+        File jarFile = File.createTempFile(\"classpathJar\", \".jar\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "192bf5b1140267d009a07a1014b6c481fdd6d154"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODQyMTE3OQ==", "bodyText": "I don't see any difference?\ngvm/tmp is mainly for the native-image's TempDirectory flag. If we want to have it under the gvm build folder (for inspection, for instance), probably better under the gvm/<appname> folder where we add the launcher files?", "url": "https://github.com/gluonhq/substrate/pull/739#discussion_r468421179", "createdAt": "2020-08-11T08:42:02Z", "author": {"login": "jperedadnr"}, "path": "src/main/java/com/gluonhq/substrate/util/FileOps.java", "diffHunk": "@@ -671,6 +674,28 @@ public static void downloadAndUnzip(String sourceUrl, Path destPath, String file\n         }\n     }\n \n+    /**\n+     * Shorten the Java classpath with a pathing jar\n+     * @param classpath A string with the classpath of files that will be added to the\n+     *                 pathing jar Class-Path attribute\n+     * @return a String with the path to the created pathing jar\n+     * @throws IOException\n+     */\n+    public static String createPathingJar(String classpath) throws IOException {\n+        Objects.requireNonNull(classpath);\n+        Manifest manifest = new Manifest();\n+        Attributes attributes = manifest.getMainAttributes();\n+        attributes.put(Attributes.Name.MANIFEST_VERSION, \"1.0\");\n+        attributes.put(Attributes.Name.CLASS_PATH,\n+                classpath.replaceAll(File.pathSeparator, \" \"));\n+        File jarFile = File.createTempFile(\"classpathJar\", \".jar\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODQwMzM4Mw=="}, "originalCommit": {"oid": "192bf5b1140267d009a07a1014b6c481fdd6d154"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODUyNzI4NQ==", "bodyText": "I was thinking about it because the build/target directory is cleaned up more regularly then the system temp directory? In any case, the file size is negligibly small, so it's not really a big issue.", "url": "https://github.com/gluonhq/substrate/pull/739#discussion_r468527285", "createdAt": "2020-08-11T12:01:37Z", "author": {"login": "tiainen"}, "path": "src/main/java/com/gluonhq/substrate/util/FileOps.java", "diffHunk": "@@ -671,6 +674,28 @@ public static void downloadAndUnzip(String sourceUrl, Path destPath, String file\n         }\n     }\n \n+    /**\n+     * Shorten the Java classpath with a pathing jar\n+     * @param classpath A string with the classpath of files that will be added to the\n+     *                 pathing jar Class-Path attribute\n+     * @return a String with the path to the created pathing jar\n+     * @throws IOException\n+     */\n+    public static String createPathingJar(String classpath) throws IOException {\n+        Objects.requireNonNull(classpath);\n+        Manifest manifest = new Manifest();\n+        Attributes attributes = manifest.getMainAttributes();\n+        attributes.put(Attributes.Name.MANIFEST_VERSION, \"1.0\");\n+        attributes.put(Attributes.Name.CLASS_PATH,\n+                classpath.replaceAll(File.pathSeparator, \" \"));\n+        File jarFile = File.createTempFile(\"classpathJar\", \".jar\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODQwMzM4Mw=="}, "originalCommit": {"oid": "192bf5b1140267d009a07a1014b6c481fdd6d154"}, "originalPosition": 28}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2950, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}