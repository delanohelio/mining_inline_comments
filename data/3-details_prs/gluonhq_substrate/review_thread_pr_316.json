{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcwNzgyMjYx", "number": 316, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQxMTozMjo1NVrODc8gzA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQxNToyNjoxMlrODdBOxA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxNjc4MTU2OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/gluonhq/substrate/target/IosTargetConfiguration.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQxMTozMjo1NVrOFlQ55Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQxMTozMjo1NVrOFlQ55Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDYxODU5Nw==", "bodyText": "probably better to do resolve(\"lib\").resolve(\"llvm\").resolve(\"bin\")? Do we need to check if that exists?", "url": "https://github.com/gluonhq/substrate/pull/316#discussion_r374618597", "createdAt": "2020-02-04T11:32:55Z", "author": {"login": "jperedadnr"}, "path": "src/main/java/com/gluonhq/substrate/target/IosTargetConfiguration.java", "diffHunk": "@@ -112,6 +112,7 @@ public IosTargetConfiguration(ProcessPaths paths, InternalProjectConfiguration c\n         Path llcPath = getLlcPath();\n         return Arrays.asList(\"-H:CompilerBackend=\" + Constants.BACKEND_LLVM,\n                 \"-H:-SpawnIsolates\",\n+                \"-Dllvm.bin.dir=\" + projectConfiguration.getGraalPath().resolve(\"lib/llvm/bin\"),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f3ab8b5ee23d13885580f998dd508fb5d36b488f"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxNzAwMjE3OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/gluonhq/substrate/target/IosTargetConfiguration.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQxMjo1MzowNVrOFlS-zw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQxMjo1MzowNVrOFlS-zw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDY1MjYyMw==", "bodyText": "Move Path llcPath = getLlcPath(); inside if (!gralvm22) {} ?", "url": "https://github.com/gluonhq/substrate/pull/316#discussion_r374652623", "createdAt": "2020-02-04T12:53:05Z", "author": {"login": "jperedadnr"}, "path": "src/main/java/com/gluonhq/substrate/target/IosTargetConfiguration.java", "diffHunk": "@@ -108,14 +108,21 @@ public IosTargetConfiguration(ProcessPaths paths, InternalProjectConfiguration c\n \n     @Override\n     List<String> getTargetSpecificAOTCompileFlags() throws IOException {\n-\n+        boolean graalvm22 = true;\n+        Path internalLlcPath = projectConfiguration.getGraalPath().resolve(\"lib\").resolve(\"llvm\").resolve(\"bin\");\n+        if (!Files.exists(internalLlcPath)) {\n+            graalvm22 = false; // and use customLLC\n+        }\n         Path llcPath = getLlcPath();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "291009b6ea70b6340f11eb617ba1a4e37c29b4e4"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxNzAwMzU1OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/gluonhq/substrate/target/IosTargetConfiguration.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQxMjo1MzozNFrOFlS_ow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQxMzozMTo0OVrOFlUE2Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDY1MjgzNQ==", "bodyText": "Maybe rename to useInternalLlc?", "url": "https://github.com/gluonhq/substrate/pull/316#discussion_r374652835", "createdAt": "2020-02-04T12:53:34Z", "author": {"login": "jperedadnr"}, "path": "src/main/java/com/gluonhq/substrate/target/IosTargetConfiguration.java", "diffHunk": "@@ -108,14 +108,21 @@ public IosTargetConfiguration(ProcessPaths paths, InternalProjectConfiguration c\n \n     @Override\n     List<String> getTargetSpecificAOTCompileFlags() throws IOException {\n-\n+        boolean graalvm22 = true;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "291009b6ea70b6340f11eb617ba1a4e37c29b4e4"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDY2MjUwMA==", "bodyText": "what is internal?", "url": "https://github.com/gluonhq/substrate/pull/316#discussion_r374662500", "createdAt": "2020-02-04T13:15:36Z", "author": {"login": "johanvos"}, "path": "src/main/java/com/gluonhq/substrate/target/IosTargetConfiguration.java", "diffHunk": "@@ -108,14 +108,21 @@ public IosTargetConfiguration(ProcessPaths paths, InternalProjectConfiguration c\n \n     @Override\n     List<String> getTargetSpecificAOTCompileFlags() throws IOException {\n-\n+        boolean graalvm22 = true;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDY1MjgzNQ=="}, "originalCommit": {"oid": "291009b6ea70b6340f11eb617ba1a4e37c29b4e4"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDY2Mzg4NQ==", "bodyText": "You added internalLlcPath, so I guess it makes sense to name the boolean like that", "url": "https://github.com/gluonhq/substrate/pull/316#discussion_r374663885", "createdAt": "2020-02-04T13:18:35Z", "author": {"login": "jperedadnr"}, "path": "src/main/java/com/gluonhq/substrate/target/IosTargetConfiguration.java", "diffHunk": "@@ -108,14 +108,21 @@ public IosTargetConfiguration(ProcessPaths paths, InternalProjectConfiguration c\n \n     @Override\n     List<String> getTargetSpecificAOTCompileFlags() throws IOException {\n-\n+        boolean graalvm22 = true;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDY1MjgzNQ=="}, "originalCommit": {"oid": "291009b6ea70b6340f11eb617ba1a4e37c29b4e4"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDY3MDU1Mw==", "bodyText": "those are 2 different things. We have a check on the internalLlcPath. If that is true, we know that the internal graalvm version is at least -ea+22. As a consequence, we can use the internally bundled llc.", "url": "https://github.com/gluonhq/substrate/pull/316#discussion_r374670553", "createdAt": "2020-02-04T13:31:49Z", "author": {"login": "johanvos"}, "path": "src/main/java/com/gluonhq/substrate/target/IosTargetConfiguration.java", "diffHunk": "@@ -108,14 +108,21 @@ public IosTargetConfiguration(ProcessPaths paths, InternalProjectConfiguration c\n \n     @Override\n     List<String> getTargetSpecificAOTCompileFlags() throws IOException {\n-\n+        boolean graalvm22 = true;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDY1MjgzNQ=="}, "originalCommit": {"oid": "291009b6ea70b6340f11eb617ba1a4e37c29b4e4"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxNzEyODIyOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/gluonhq/substrate/target/IosTargetConfiguration.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQxMzozNToyNlrOFlULnQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQxMzozNToyNlrOFlULnQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDY3MjI4NQ==", "bodyText": "This path already exists in Graal 21, so it is not a valid check", "url": "https://github.com/gluonhq/substrate/pull/316#discussion_r374672285", "createdAt": "2020-02-04T13:35:26Z", "author": {"login": "jperedadnr"}, "path": "src/main/java/com/gluonhq/substrate/target/IosTargetConfiguration.java", "diffHunk": "@@ -108,13 +108,21 @@ public IosTargetConfiguration(ProcessPaths paths, InternalProjectConfiguration c\n \n     @Override\n     List<String> getTargetSpecificAOTCompileFlags() throws IOException {\n-\n+        boolean graalvm22 = true;\n+        Path internalLlcPath = projectConfiguration.getGraalPath().resolve(\"lib\").resolve(\"llvm\").resolve(\"bin\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "291009b6ea70b6340f11eb617ba1a4e37c29b4e4"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxNzU1NDYwOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/gluonhq/substrate/target/IosTargetConfiguration.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQxNToyNjoxM1rOFlYRAg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQxMzowMDo0OFrOFl238g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDczOTIwMg==", "bodyText": "Arrays.asList shouldn't be required here.", "url": "https://github.com/gluonhq/substrate/pull/316#discussion_r374739202", "createdAt": "2020-02-04T15:26:13Z", "author": {"login": "abhinayagarwal"}, "path": "src/main/java/com/gluonhq/substrate/target/IosTargetConfiguration.java", "diffHunk": "@@ -113,11 +113,12 @@ public IosTargetConfiguration(ProcessPaths paths, InternalProjectConfiguration c\n         if (!Files.exists(internalLlcPath.resolve(\"llc\"))) {\n             graalvm22 = false; // and use customLLC\n         }\n-        List<String> answer = Arrays.asList(\"-H:CompilerBackend=\" + Constants.BACKEND_LLVM,\n+        List<String> answer = new ArrayList<>();\n+        answer.addAll(Arrays.asList(\"-H:CompilerBackend=\" + Constants.BACKEND_LLVM,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cf94378d6586b32626bd33d47f9230fccecb88cf"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTI0MDY5MA==", "bodyText": "it's merged. Can you do a follow-up PR on this?", "url": "https://github.com/gluonhq/substrate/pull/316#discussion_r375240690", "createdAt": "2020-02-05T13:00:48Z", "author": {"login": "johanvos"}, "path": "src/main/java/com/gluonhq/substrate/target/IosTargetConfiguration.java", "diffHunk": "@@ -113,11 +113,12 @@ public IosTargetConfiguration(ProcessPaths paths, InternalProjectConfiguration c\n         if (!Files.exists(internalLlcPath.resolve(\"llc\"))) {\n             graalvm22 = false; // and use customLLC\n         }\n-        List<String> answer = Arrays.asList(\"-H:CompilerBackend=\" + Constants.BACKEND_LLVM,\n+        List<String> answer = new ArrayList<>();\n+        answer.addAll(Arrays.asList(\"-H:CompilerBackend=\" + Constants.BACKEND_LLVM,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDczOTIwMg=="}, "originalCommit": {"oid": "cf94378d6586b32626bd33d47f9230fccecb88cf"}, "originalPosition": 6}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3048, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}