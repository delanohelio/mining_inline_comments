{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg0ODQxMDI3", "number": 409, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQxNDoyOTowMVrODl0MWA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQxNjo0MjozMlrODl3R6g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwOTc5MDMyOnYy", "diffSide": "RIGHT", "path": "src/main/resources/native/android/c/attach_adapter.c", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQxNDoyOTowMVrOFy6mYQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQwODo0ODo1MlrOFzetoQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODkzMzIxNw==", "bodyText": "Don't you need to release the char array after use with (*env)->ReleaseCharArrayElements(env, jchars, chars, 0)?", "url": "https://github.com/gluonhq/substrate/pull/409#discussion_r388933217", "createdAt": "2020-03-06T14:29:01Z", "author": {"login": "tiainen"}, "path": "src/main/resources/native/android/c/attach_adapter.c", "diffHunk": "@@ -0,0 +1,35 @@\n+/*\n+ * Copyright (c) 2020, Gluon\n+ *\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL GLUON BE LIABLE FOR ANY\n+ * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+#include \"grandroid.h\"\n+\n+JNIEXPORT void JNICALL Java_com_gluonhq_helloandroid_MainActivity_nativeDispatchLifecycleEvent(JNIEnv *env, jobject activity, jcharArray jchars, jint count)\n+{\n+    LOGE(stderr, \"Dispatching lifecycle event from native Dalvik layer\");\n+    jchar *chars = (*env)->GetCharArrayElements(env, jchars, 0);\n+    attach_setLifecycleEvent(chars, count);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "086df579ac45b1f7304236a8ff8ee90dcfd0ed55"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTUyNDg5Nw==", "bodyText": "fixed", "url": "https://github.com/gluonhq/substrate/pull/409#discussion_r389524897", "createdAt": "2020-03-09T08:48:52Z", "author": {"login": "jperedadnr"}, "path": "src/main/resources/native/android/c/attach_adapter.c", "diffHunk": "@@ -0,0 +1,35 @@\n+/*\n+ * Copyright (c) 2020, Gluon\n+ *\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL GLUON BE LIABLE FOR ANY\n+ * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+#include \"grandroid.h\"\n+\n+JNIEXPORT void JNICALL Java_com_gluonhq_helloandroid_MainActivity_nativeDispatchLifecycleEvent(JNIEnv *env, jobject activity, jcharArray jchars, jint count)\n+{\n+    LOGE(stderr, \"Dispatching lifecycle event from native Dalvik layer\");\n+    jchar *chars = (*env)->GetCharArrayElements(env, jchars, 0);\n+    attach_setLifecycleEvent(chars, count);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODkzMzIxNw=="}, "originalCommit": {"oid": "086df579ac45b1f7304236a8ff8ee90dcfd0ed55"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwOTc5Mjc4OnYy", "diffSide": "RIGHT", "path": "src/main/resources/native/android/c/glibc_shim.c", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQxNDoyOTo0N1rOFy6oAg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQwODo0ODo1N1rOFzetzg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODkzMzYzNA==", "bodyText": "These files were introduced in 2020, so no need to add 2019?", "url": "https://github.com/gluonhq/substrate/pull/409#discussion_r388933634", "createdAt": "2020-03-06T14:29:47Z", "author": {"login": "tiainen"}, "path": "src/main/resources/native/android/c/glibc_shim.c", "diffHunk": "@@ -1,3 +1,30 @@\n+/*\n+ * Copyright (c) 2019, 2020, Gluon", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "086df579ac45b1f7304236a8ff8ee90dcfd0ed55"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTUyNDk0Mg==", "bodyText": "fixed", "url": "https://github.com/gluonhq/substrate/pull/409#discussion_r389524942", "createdAt": "2020-03-09T08:48:57Z", "author": {"login": "jperedadnr"}, "path": "src/main/resources/native/android/c/glibc_shim.c", "diffHunk": "@@ -1,3 +1,30 @@\n+/*\n+ * Copyright (c) 2019, 2020, Gluon", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODkzMzYzNA=="}, "originalCommit": {"oid": "086df579ac45b1f7304236a8ff8ee90dcfd0ed55"}, "originalPosition": 2}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwOTgwMDIxOnYy", "diffSide": "RIGHT", "path": "src/main/resources/native/android/c/attach_adapter.c", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQxNDozMTo0NVrOFy6sgg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQwODo0OTowMVrOFzet7A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODkzNDc4Ng==", "bodyText": "Would length be a more suitable name for the variable named count?", "url": "https://github.com/gluonhq/substrate/pull/409#discussion_r388934786", "createdAt": "2020-03-06T14:31:45Z", "author": {"login": "tiainen"}, "path": "src/main/resources/native/android/c/attach_adapter.c", "diffHunk": "@@ -0,0 +1,35 @@\n+/*\n+ * Copyright (c) 2020, Gluon\n+ *\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL GLUON BE LIABLE FOR ANY\n+ * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+#include \"grandroid.h\"\n+\n+JNIEXPORT void JNICALL Java_com_gluonhq_helloandroid_MainActivity_nativeDispatchLifecycleEvent(JNIEnv *env, jobject activity, jcharArray jchars, jint count)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "086df579ac45b1f7304236a8ff8ee90dcfd0ed55"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTUyNDk3Mg==", "bodyText": "fixed", "url": "https://github.com/gluonhq/substrate/pull/409#discussion_r389524972", "createdAt": "2020-03-09T08:49:01Z", "author": {"login": "jperedadnr"}, "path": "src/main/resources/native/android/c/attach_adapter.c", "diffHunk": "@@ -0,0 +1,35 @@\n+/*\n+ * Copyright (c) 2020, Gluon\n+ *\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL GLUON BE LIABLE FOR ANY\n+ * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+#include \"grandroid.h\"\n+\n+JNIEXPORT void JNICALL Java_com_gluonhq_helloandroid_MainActivity_nativeDispatchLifecycleEvent(JNIEnv *env, jobject activity, jcharArray jchars, jint count)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODkzNDc4Ng=="}, "originalCommit": {"oid": "086df579ac45b1f7304236a8ff8ee90dcfd0ed55"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwOTgxOTUxOnYy", "diffSide": "RIGHT", "path": "src/main/resources/native/android/dalvik/source/MainActivity.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQxNDozNzoxM1rOFy64jQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQwODo0ODo0M1rOFzetYw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODkzNzg2OQ==", "bodyText": "I was wondering if passing an int instead of a string might be easier? The int values can be easily mapped to the matching LifecycleEvent enum in Attach?", "url": "https://github.com/gluonhq/substrate/pull/409#discussion_r388937869", "createdAt": "2020-03-06T14:37:13Z", "author": {"login": "tiainen"}, "path": "src/main/resources/native/android/dalvik/source/MainActivity.java", "diffHunk": "@@ -230,39 +257,51 @@ public boolean dispatchKeyEvent(final KeyEvent event) {\n     protected void onDestroy() {\n         Log.v(TAG, \"onDestroy\");\n         super.onDestroy();\n+        notifyLifecycleEvent(\"destroy\");\n         android.os.Process.killProcess(android.os.Process.myPid());\n     }\n \n     @Override\n     protected void onPause() {\n         Log.v(TAG, \"onPause\");\n         super.onPause();\n+        notifyLifecycleEvent(\"pause\");\n     }\n \n     @Override\n     protected void onResume() {\n         Log.v(TAG, \"onResume\");\n         super.onResume();\n+        notifyLifecycleEvent(\"resume\");\n         Log.v(TAG, \"onResume done\");\n     }\n \n     @Override\n     protected void onStart() {\n         Log.v(TAG, \"onStart\");\n         super.onStart();\n+        notifyLifecycleEvent(\"start\");\n         Log.v(TAG, \"onStart done\");\n     }\n \n     @Override\n     protected void onRestart() {\n         Log.v(TAG, \"onRestart\");\n         super.onRestart();\n+        notifyLifecycleEvent(\"restart\");\n     }\n \n     @Override\n     protected void onStop() {\n         Log.v(TAG, \"onStop\");\n         super.onStop();\n+        notifyLifecycleEvent(\"stop\");\n+    }\n+\n+    private void notifyLifecycleEvent(String event) {\n+        if (graalStarted) {\n+            nativeDispatchLifecycleEvent(event, event.length());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "086df579ac45b1f7304236a8ff8ee90dcfd0ed55"}, "originalPosition": 78}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTUyNDgzNQ==", "bodyText": "So far we only listen for pause/resume lifecycle events, but there are more (start, stop, ...). Adding an int could cause issues if we later on add any of those events.", "url": "https://github.com/gluonhq/substrate/pull/409#discussion_r389524835", "createdAt": "2020-03-09T08:48:43Z", "author": {"login": "jperedadnr"}, "path": "src/main/resources/native/android/dalvik/source/MainActivity.java", "diffHunk": "@@ -230,39 +257,51 @@ public boolean dispatchKeyEvent(final KeyEvent event) {\n     protected void onDestroy() {\n         Log.v(TAG, \"onDestroy\");\n         super.onDestroy();\n+        notifyLifecycleEvent(\"destroy\");\n         android.os.Process.killProcess(android.os.Process.myPid());\n     }\n \n     @Override\n     protected void onPause() {\n         Log.v(TAG, \"onPause\");\n         super.onPause();\n+        notifyLifecycleEvent(\"pause\");\n     }\n \n     @Override\n     protected void onResume() {\n         Log.v(TAG, \"onResume\");\n         super.onResume();\n+        notifyLifecycleEvent(\"resume\");\n         Log.v(TAG, \"onResume done\");\n     }\n \n     @Override\n     protected void onStart() {\n         Log.v(TAG, \"onStart\");\n         super.onStart();\n+        notifyLifecycleEvent(\"start\");\n         Log.v(TAG, \"onStart done\");\n     }\n \n     @Override\n     protected void onRestart() {\n         Log.v(TAG, \"onRestart\");\n         super.onRestart();\n+        notifyLifecycleEvent(\"restart\");\n     }\n \n     @Override\n     protected void onStop() {\n         Log.v(TAG, \"onStop\");\n         super.onStop();\n+        notifyLifecycleEvent(\"stop\");\n+    }\n+\n+    private void notifyLifecycleEvent(String event) {\n+        if (graalStarted) {\n+            nativeDispatchLifecycleEvent(event, event.length());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODkzNzg2OQ=="}, "originalCommit": {"oid": "086df579ac45b1f7304236a8ff8ee90dcfd0ed55"}, "originalPosition": 78}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwOTg0NDQ1OnYy", "diffSide": "RIGHT", "path": "src/main/resources/native/android/c/attach_adapter.c", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQxNDo0NDowMlrOFy7Huw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQxNDo0NDowMlrOFy7Huw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODk0MTc1NQ==", "bodyText": "this should be\nJava_com_gluonhq_helloandroid_MainActivity_nativeDispatchLifecycleEvent(JNIEnv *env, jobject activity, jstring event)", "url": "https://github.com/gluonhq/substrate/pull/409#discussion_r388941755", "createdAt": "2020-03-06T14:44:02Z", "author": {"login": "johanvos"}, "path": "src/main/resources/native/android/c/attach_adapter.c", "diffHunk": "@@ -0,0 +1,35 @@\n+/*\n+ * Copyright (c) 2020, Gluon\n+ *\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL GLUON BE LIABLE FOR ANY\n+ * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+#include \"grandroid.h\"\n+\n+JNIEXPORT void JNICALL Java_com_gluonhq_helloandroid_MainActivity_nativeDispatchLifecycleEvent(JNIEnv *env, jobject activity, jcharArray jchars, jint count)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "086df579ac45b1f7304236a8ff8ee90dcfd0ed55"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwOTg0ODA1OnYy", "diffSide": "RIGHT", "path": "src/main/resources/native/android/c/attach_adapter.c", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQxNDo0NDo1NlrOFy7J6Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQxNDo0NDo1NlrOFy7J6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODk0MjMxMw==", "bodyText": "better to pass a const char*\ne.g.\nconst char* nativeEvent = env->GetStringUTFChars(event, null);", "url": "https://github.com/gluonhq/substrate/pull/409#discussion_r388942313", "createdAt": "2020-03-06T14:44:56Z", "author": {"login": "johanvos"}, "path": "src/main/resources/native/android/c/attach_adapter.c", "diffHunk": "@@ -0,0 +1,35 @@\n+/*\n+ * Copyright (c) 2020, Gluon\n+ *\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL GLUON BE LIABLE FOR ANY\n+ * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+#include \"grandroid.h\"\n+\n+JNIEXPORT void JNICALL Java_com_gluonhq_helloandroid_MainActivity_nativeDispatchLifecycleEvent(JNIEnv *env, jobject activity, jcharArray jchars, jint count)\n+{\n+    LOGE(stderr, \"Dispatching lifecycle event from native Dalvik layer\");\n+    jchar *chars = (*env)->GetCharArrayElements(env, jchars, 0);\n+    attach_setLifecycleEvent(chars, count);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "086df579ac45b1f7304236a8ff8ee90dcfd0ed55"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxMDI5NjEwOnYy", "diffSide": "RIGHT", "path": "src/main/resources/native/android/c/grandroid.h", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQxNjo0MjozMlrOFy_fwg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQxNjo0MjozMlrOFy_fwg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTAxMzQ0Mg==", "bodyText": "Don't pass java types in between native layers.\nThis better done as\nvoid __attribute__((weak)) attach_setLifecycleEvent(const char *chars)", "url": "https://github.com/gluonhq/substrate/pull/409#discussion_r389013442", "createdAt": "2020-03-06T16:42:32Z", "author": {"login": "johanvos"}, "path": "src/main/resources/native/android/c/grandroid.h", "diffHunk": "@@ -47,4 +74,6 @@ void __attribute__((weak)) androidJfx_setNativeWindow(ANativeWindow *nativeWindo\n void __attribute__((weak)) androidJfx_setDensity(float nativeDensity) {}\n void __attribute__((weak)) androidJfx_gotTouchEvent(int count, int *actions, int *ids, int *xs, int *ys, int primary) {}\n void __attribute__((weak)) androidJfx_gotKeyEvent(int action, int key, jchar *chars, int count, int mods) {}\n-int  __attribute__((weak)) to_jfx_touch_action(int state) { return 0; }\n\\ No newline at end of file\n+int  __attribute__((weak)) to_jfx_touch_action(int state) { return 0; }\n+\n+void __attribute__((weak)) attach_setLifecycleEvent(const jchar *chars, int count) {}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "39bf4e69b79e44c1af9c6fcf20ef5c12b04499e1"}, "originalPosition": 39}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2978, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}