{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkzNzEwMzEz", "number": 470, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxNzozOTowMVrODrUz-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxNzozOTowMVrODrUz-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2NzU2MzQ1OnYy", "diffSide": "RIGHT", "path": "src/main/resources/native/android/c/attach_adapter.c", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxNzozOTowMVrOF7mwPA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQyMDowNzozNVrOF7sTmw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODA0NTI0NA==", "bodyText": "Add missing return, In case the if test fails?", "url": "https://github.com/gluonhq/substrate/pull/470#discussion_r398045244", "createdAt": "2020-03-25T17:39:01Z", "author": {"login": "jperedadnr"}, "path": "src/main/resources/native/android/c/attach_adapter.c", "diffHunk": "@@ -33,50 +33,26 @@ jclass jKeyboardServiceClass;\n jclass jPositionServiceClass;\n int handlesInitialized = 0;\n \n-void registerAttachMethodHandles(JNIEnv* androidEnv) {\n-    if (handlesInitialized > 0) {\n-        return;\n-    }\n-    // Util\n-    jclass jtmp = (*androidEnv)->FindClass(androidEnv, \"com/gluonhq/helloandroid/Util\");\n+jclass registerClass(JNIEnv* androidEnv, const char* name) {\n+    jclass jtmp = (*androidEnv)->FindClass(androidEnv, name);\n     jthrowable t = (*androidEnv)->ExceptionOccurred(androidEnv);\n     if (t) {\n         (*androidEnv)->ExceptionClear(androidEnv);\n     }\n     if ((t == NULL) && (jtmp != NULL)) {\n-        jUtilClass= (jclass)(*androidEnv)->NewGlobalRef(androidEnv, jtmp);\n-    }\n-\n-    // BLE\n-    jtmp = (*androidEnv)->FindClass(androidEnv, \"com/gluonhq/helloandroid/BleService\");\n-    t = (*androidEnv)->ExceptionOccurred(androidEnv);\n-    if (t) {\n-        (*androidEnv)->ExceptionClear(androidEnv);\n-    }\n-    if ((t == NULL) && (jtmp != NULL)) {\n-        jBleServiceClass= (jclass)(*androidEnv)->NewGlobalRef(androidEnv, jtmp);\n+        return (jclass)(*androidEnv)->NewGlobalRef(androidEnv, jtmp);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b1a243151cd1952fe6152f07ee293ae2d551b578"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODEzNjIxOQ==", "bodyText": "good catch, fixed.", "url": "https://github.com/gluonhq/substrate/pull/470#discussion_r398136219", "createdAt": "2020-03-25T20:07:35Z", "author": {"login": "johanvos"}, "path": "src/main/resources/native/android/c/attach_adapter.c", "diffHunk": "@@ -33,50 +33,26 @@ jclass jKeyboardServiceClass;\n jclass jPositionServiceClass;\n int handlesInitialized = 0;\n \n-void registerAttachMethodHandles(JNIEnv* androidEnv) {\n-    if (handlesInitialized > 0) {\n-        return;\n-    }\n-    // Util\n-    jclass jtmp = (*androidEnv)->FindClass(androidEnv, \"com/gluonhq/helloandroid/Util\");\n+jclass registerClass(JNIEnv* androidEnv, const char* name) {\n+    jclass jtmp = (*androidEnv)->FindClass(androidEnv, name);\n     jthrowable t = (*androidEnv)->ExceptionOccurred(androidEnv);\n     if (t) {\n         (*androidEnv)->ExceptionClear(androidEnv);\n     }\n     if ((t == NULL) && (jtmp != NULL)) {\n-        jUtilClass= (jclass)(*androidEnv)->NewGlobalRef(androidEnv, jtmp);\n-    }\n-\n-    // BLE\n-    jtmp = (*androidEnv)->FindClass(androidEnv, \"com/gluonhq/helloandroid/BleService\");\n-    t = (*androidEnv)->ExceptionOccurred(androidEnv);\n-    if (t) {\n-        (*androidEnv)->ExceptionClear(androidEnv);\n-    }\n-    if ((t == NULL) && (jtmp != NULL)) {\n-        jBleServiceClass= (jclass)(*androidEnv)->NewGlobalRef(androidEnv, jtmp);\n+        return (jclass)(*androidEnv)->NewGlobalRef(androidEnv, jtmp);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODA0NTI0NA=="}, "originalCommit": {"oid": "b1a243151cd1952fe6152f07ee293ae2d551b578"}, "originalPosition": 28}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2996, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}