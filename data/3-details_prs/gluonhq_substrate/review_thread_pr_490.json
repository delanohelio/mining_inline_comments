{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk3OTIwNzI0", "number": 490, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QwODo1ODowN1rODuSUvw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QwODo1ODowN1rODuSUvw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5ODYxMzExOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/gluonhq/substrate/util/FileDeps.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QwODo1ODowN1rOGAMZvg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxMDo0NzoxNFrOGAQRnw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjg1NjM4Mg==", "bodyText": "if the check for the JavaFX jars is true, means that some jar is missing, therefore: downloadJavaFXStatic = true;\nAdding \"and either libglassXX.a\"  doesn't help. Shouldn't it be noneMatch?\nif (JAVAFX_FILES.stream().map(s -> new File(path, s)).anyMatch(f -> !f.exists()) || \n     JAVAFX_STATIC_FILES.stream().map(s -> new File(path, s)).noneMatch(File::exists)) {", "url": "https://github.com/gluonhq/substrate/pull/490#discussion_r402856382", "createdAt": "2020-04-03T08:58:07Z", "author": {"login": "jperedadnr"}, "path": "src/main/java/com/gluonhq/substrate/util/FileDeps.java", "diffHunk": "@@ -231,10 +234,9 @@ private boolean setupDependencies() throws IOException {\n                 downloadJavaFXStatic = true;\n             } else {\n                 String path = javafxStatic.toString();\n-                if (JAVAFX_FILES.stream()\n-                        .map(s -> new File(path, s))\n-                        .anyMatch(f -> !f.exists())) {\n-                    Logger.logDebug(\"jar file not found\");\n+                if (JAVAFX_FILES.stream().map(s -> new File(path, s)).anyMatch(f -> !f.exists()) &&", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "05b21f505f0ca90abeea53f3c1075ba5bb35ad96"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjkwMjYzOQ==", "bodyText": "Have you checked #489 for explanation?", "url": "https://github.com/gluonhq/substrate/pull/490#discussion_r402902639", "createdAt": "2020-04-03T10:13:33Z", "author": {"login": "abhinayagarwal"}, "path": "src/main/java/com/gluonhq/substrate/util/FileDeps.java", "diffHunk": "@@ -231,10 +234,9 @@ private boolean setupDependencies() throws IOException {\n                 downloadJavaFXStatic = true;\n             } else {\n                 String path = javafxStatic.toString();\n-                if (JAVAFX_FILES.stream()\n-                        .map(s -> new File(path, s))\n-                        .anyMatch(f -> !f.exists())) {\n-                    Logger.logDebug(\"jar file not found\");\n+                if (JAVAFX_FILES.stream().map(s -> new File(path, s)).anyMatch(f -> !f.exists()) &&", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjg1NjM4Mg=="}, "originalCommit": {"oid": "05b21f505f0ca90abeea53f3c1075ba5bb35ad96"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjkxODA2MQ==", "bodyText": "Yes, I did.\nWe used the javafx list to verify that those files are available or not. If any of them is missing, we download.\nNow we need to split that in two: jars and libs. Okay.\nBut your code is doing:\n\nif any jar is missing and either lib exists -> download\n\nso at this point, if a jar is missing but one lib exist, it won't download. Or if all jars exist, but no lib is found, it won't download.\nImo, the check should be:\n\nif any jar is missing -> download, or\nif none of these libs is found -> download", "url": "https://github.com/gluonhq/substrate/pull/490#discussion_r402918061", "createdAt": "2020-04-03T10:43:44Z", "author": {"login": "jperedadnr"}, "path": "src/main/java/com/gluonhq/substrate/util/FileDeps.java", "diffHunk": "@@ -231,10 +234,9 @@ private boolean setupDependencies() throws IOException {\n                 downloadJavaFXStatic = true;\n             } else {\n                 String path = javafxStatic.toString();\n-                if (JAVAFX_FILES.stream()\n-                        .map(s -> new File(path, s))\n-                        .anyMatch(f -> !f.exists())) {\n-                    Logger.logDebug(\"jar file not found\");\n+                if (JAVAFX_FILES.stream().map(s -> new File(path, s)).anyMatch(f -> !f.exists()) &&", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjg1NjM4Mg=="}, "originalCommit": {"oid": "05b21f505f0ca90abeea53f3c1075ba5bb35ad96"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjkxOTgzOQ==", "bodyText": "Makes sense. Thank you for the explanation.", "url": "https://github.com/gluonhq/substrate/pull/490#discussion_r402919839", "createdAt": "2020-04-03T10:47:14Z", "author": {"login": "abhinayagarwal"}, "path": "src/main/java/com/gluonhq/substrate/util/FileDeps.java", "diffHunk": "@@ -231,10 +234,9 @@ private boolean setupDependencies() throws IOException {\n                 downloadJavaFXStatic = true;\n             } else {\n                 String path = javafxStatic.toString();\n-                if (JAVAFX_FILES.stream()\n-                        .map(s -> new File(path, s))\n-                        .anyMatch(f -> !f.exists())) {\n-                    Logger.logDebug(\"jar file not found\");\n+                if (JAVAFX_FILES.stream().map(s -> new File(path, s)).anyMatch(f -> !f.exists()) &&", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjg1NjM4Mg=="}, "originalCommit": {"oid": "05b21f505f0ca90abeea53f3c1075ba5bb35ad96"}, "originalPosition": 22}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3010, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}