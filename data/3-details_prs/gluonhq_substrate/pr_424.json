{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg2MTAwNTU5", "number": 424, "title": "packaging step for android split from link step", "bodyText": "Extract the packaging step from the link step for the android target.\nAdd the system property -Dstep=... to define what step to execute when substrate is being invoked via the main() method.", "createdAt": "2020-03-10T12:19:31Z", "url": "https://github.com/gluonhq/substrate/pull/424", "merged": true, "mergeCommit": {"oid": "5521dde38b26189ef8dd9bdea147a2c3b838e0db"}, "closed": true, "closedAt": "2020-03-13T14:33:46Z", "author": {"login": "tiainen"}, "timelineItems": {"totalCount": 18, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcM4uytAH2gAyMzg2MTAwNTU5OjVmZjc4NzBmZmZhMTM4NjZiNmMwOTAwNmYyNDBiOTk5YTNmNzJiYjc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcNRLv7gFqTM3NDM0Mzk5Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "5ff7870fffa13866b6c09006f240b999a3f72bb7", "author": {"user": {"login": "tiainen", "name": "Joeri Sykora"}}, "url": "https://github.com/gluonhq/substrate/commit/5ff7870fffa13866b6c09006f240b999a3f72bb7", "committedDate": "2020-03-12T09:58:58Z", "message": "packaging step for android split from link step"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cb831795956f808416dc1da132984f508a8af837", "author": {"user": {"login": "tiainen", "name": "Joeri Sykora"}}, "url": "https://github.com/gluonhq/substrate/commit/cb831795956f808416dc1da132984f508a8af837", "committedDate": "2020-03-12T09:58:58Z", "message": "break up long methods"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "113df339a3d49e630f52bd4a80f8bd5bb9fbb5d7", "author": {"user": {"login": "tiainen", "name": "Joeri Sykora"}}, "url": "https://github.com/gluonhq/substrate/commit/113df339a3d49e630f52bd4a80f8bd5bb9fbb5d7", "committedDate": "2020-03-12T09:58:58Z", "message": "pass classpath to ProjectConfiguration"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "40b3cb579cfd6c72aebaf30bbbc568c600a91ad5", "author": {"user": {"login": "tiainen", "name": "Joeri Sykora"}}, "url": "https://github.com/gluonhq/substrate/commit/40b3cb579cfd6c72aebaf30bbbc568c600a91ad5", "committedDate": "2020-03-12T09:58:58Z", "message": "print configuration when verbose"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d8782fd29e60f81fdaf9f7575ffd78b3ceb271e1", "author": {"user": {"login": "tiainen", "name": "Joeri Sykora"}}, "url": "https://github.com/gluonhq/substrate/commit/d8782fd29e60f81fdaf9f7575ffd78b3ceb271e1", "committedDate": "2020-03-12T09:58:58Z", "message": "fix test code"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6c2b9f51c7b6b9826af5527aa4e92ab0da2b8c8e", "author": {"user": {"login": "tiainen", "name": "Joeri Sykora"}}, "url": "https://github.com/gluonhq/substrate/commit/6c2b9f51c7b6b9826af5527aa4e92ab0da2b8c8e", "committedDate": "2020-03-12T09:58:58Z", "message": "simplify compile() method"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4d50182774007066da2d6b5f735b28eaeda9210e", "author": {"user": {"login": "tiainen", "name": "Joeri Sykora"}}, "url": "https://github.com/gluonhq/substrate/commit/4d50182774007066da2d6b5f735b28eaeda9210e", "committedDate": "2020-03-12T09:58:58Z", "message": "small code improvements"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "fff15f9aeaceda18268af247f6bb8dd10683668d", "author": {"user": {"login": "tiainen", "name": "Joeri Sykora"}}, "url": "https://github.com/gluonhq/substrate/commit/fff15f9aeaceda18268af247f6bb8dd10683668d", "committedDate": "2020-03-12T08:21:30Z", "message": "small code improvements"}, "afterCommit": {"oid": "4d50182774007066da2d6b5f735b28eaeda9210e", "author": {"user": {"login": "tiainen", "name": "Joeri Sykora"}}, "url": "https://github.com/gluonhq/substrate/commit/4d50182774007066da2d6b5f735b28eaeda9210e", "committedDate": "2020-03-12T09:58:58Z", "message": "small code improvements"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzczNDIzODA3", "url": "https://github.com/gluonhq/substrate/pull/424#pullrequestreview-373423807", "createdAt": "2020-03-12T10:11:02Z", "commit": {"oid": "4d50182774007066da2d6b5f735b28eaeda9210e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxMDoxMTowM1rOF1YWsw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxMDoxMTowM1rOF1YWsw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTUxNzg3NQ==", "bodyText": "can this be final?", "url": "https://github.com/gluonhq/substrate/pull/424#discussion_r391517875", "createdAt": "2020-03-12T10:11:03Z", "author": {"login": "johanvos"}, "path": "src/main/java/com/gluonhq/substrate/ProjectConfiguration.java", "diffHunk": "@@ -62,19 +62,32 @@\n     private String appId;\n     private String appName;\n     private String mainClassName;\n+    private String classpath;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d50182774007066da2d6b5f735b28eaeda9210e"}, "originalPosition": 11}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzczNDI1NDIz", "url": "https://github.com/gluonhq/substrate/pull/424#pullrequestreview-373425423", "createdAt": "2020-03-12T10:13:21Z", "commit": {"oid": "4d50182774007066da2d6b5f735b28eaeda9210e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxMDoxMzoyMVrOF1YbRg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxMDoxMzoyMVrOF1YbRg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTUxOTA0Ng==", "bodyText": "print t as well (t.getMessage() is not shown in stacktraces, but may contain relevant info)", "url": "https://github.com/gluonhq/substrate/pull/424#discussion_r391519046", "createdAt": "2020-03-12T10:13:21Z", "author": {"login": "johanvos"}, "path": "src/main/java/com/gluonhq/substrate/SubstrateDispatcher.java", "diffHunk": "@@ -116,20 +189,45 @@ public static void main(String[] args) throws Exception {\n             t.printStackTrace();\n             System.exit(1);\n         }\n+    }\n+\n+    private static void executePackageStep(SubstrateDispatcher dispatcher) {\n+        System.err.println(\"Packaging...\");\n+        try {\n+            dispatcher.nativePackage();\n+        } catch (Throwable t) {\n+            System.err.println(\"Packaging failed with an exception\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d50182774007066da2d6b5f735b28eaeda9210e"}, "originalPosition": 188}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzczNDM0NjE0", "url": "https://github.com/gluonhq/substrate/pull/424#pullrequestreview-373434614", "createdAt": "2020-03-12T10:26:11Z", "commit": {"oid": "4d50182774007066da2d6b5f735b28eaeda9210e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxMDoyNjoxMVrOF1Y3Yw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxMDoyNjoxMVrOF1Y3Yw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTUyNjI0Mw==", "bodyText": "not sure this is still needed or wanted, but that is probably food for another PR", "url": "https://github.com/gluonhq/substrate/pull/424#discussion_r391526243", "createdAt": "2020-03-12T10:26:11Z", "author": {"login": "johanvos"}, "path": "src/main/java/com/gluonhq/substrate/target/AbstractTargetConfiguration.java", "diffHunk": "@@ -79,12 +79,24 @@\n             \"org.graalvm.home.HomeFinderFeature\"\n     );\n \n+    private static final List<String> baseNativeImageArguments = Arrays.asList(\n+            \"--report-unsupported-elements-at-runtime\",\n+            \"-Djdk.internal.lambda.eagerlyInitialize=false\",\n+            \"--no-server\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d50182774007066da2d6b5f735b28eaeda9210e"}, "originalPosition": 7}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzczMzkyNDU0", "url": "https://github.com/gluonhq/substrate/pull/424#pullrequestreview-373392454", "createdAt": "2020-03-12T09:27:13Z", "commit": {"oid": "fff15f9aeaceda18268af247f6bb8dd10683668d"}, "state": "COMMENTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQwOToyNzoxM1rOF1W1-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxMDozMDozOFrOF1ZAuQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQ5MzExMg==", "bodyText": "final? (Same for mainClassName?)", "url": "https://github.com/gluonhq/substrate/pull/424#discussion_r391493112", "createdAt": "2020-03-12T09:27:13Z", "author": {"login": "jperedadnr"}, "path": "src/main/java/com/gluonhq/substrate/ProjectConfiguration.java", "diffHunk": "@@ -62,19 +62,32 @@\n     private String appId;\n     private String appName;\n     private String mainClassName;\n+    private String classpath;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fff15f9aeaceda18268af247f6bb8dd10683668d"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQ5NTc1Ng==", "bodyText": "We should move all System.err, System.out to Logger.log", "url": "https://github.com/gluonhq/substrate/pull/424#discussion_r391495756", "createdAt": "2020-03-12T09:32:09Z", "author": {"login": "jperedadnr"}, "path": "src/main/java/com/gluonhq/substrate/SubstrateDispatcher.java", "diffHunk": "@@ -77,14 +123,48 @@ public static void main(String[] args) throws Exception {\n         config.setJniList(Strings.split(System.getProperty(\"jnilist\")));\n         config.setBundlesList(Strings.split(System.getProperty(\"bundleslist\")));\n         config.setVerbose(verbose);\n-        config.setUsePrismSW(Boolean.parseBoolean(System.getProperty(\"prism.sw\", \"false\")));\n-        config.setUsePrecompiledCode(Boolean.parseBoolean(System.getProperty(\"usePrecompiledCode\", \"true\")));\n+        config.setUsePrismSW(usePrismSW);\n+        config.setUsePrecompiledCode(usePrecompiledCode);\n+        return config;\n+    }\n \n-        Path buildRoot = Paths.get(System.getProperty(\"user.dir\"), \"build\", \"autoclient\");\n+    private static Step getStepToExecute() {\n+        return Optional.ofNullable(System.getProperty(\"step\"))\n+                .map(stepProperty -> {\n+                    try {\n+                        return Step.valueOf(stepProperty.toUpperCase(Locale.ROOT));\n+                    } catch (IllegalArgumentException e) {\n+                        printUsage();\n+                        throw new IllegalArgumentException(String.format(\"Invalid value for 'step' specified. Possible values: %s\", Arrays.toString(Step.values())));\n+                    }\n+                })\n+                .orElse(Step.RUN);\n+    }\n+\n+    public static void executeCompileStep(SubstrateDispatcher dispatcher) {\n+        System.err.println(\"Compiling...\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fff15f9aeaceda18268af247f6bb8dd10683668d"}, "originalPosition": 126}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTUwMTIzNw==", "bodyText": "This is only required when usePrecompiledCode is set to false", "url": "https://github.com/gluonhq/substrate/pull/424#discussion_r391501237", "createdAt": "2020-03-12T09:41:52Z", "author": {"login": "jperedadnr"}, "path": "src/main/java/com/gluonhq/substrate/target/AndroidTargetConfiguration.java", "diffHunk": "@@ -384,10 +301,188 @@ boolean useGraalVMJavaStaticLibraries() {\n         return false;\n     }\n \n-   /*\n-    * Copies the .cap files from the jar resource and store them in\n-    * a directory. Return that directory\n-    */\n+    private Path getApkPath() {\n+        return paths.getGvmPath().resolve(Constants.APK_PATH);\n+    }\n+\n+    private Path getApkBinPath() {\n+        return getApkPath().resolve(\"bin\");\n+    }\n+\n+    private Path getApkClassPath() {\n+        return getApkPath().resolve(\"class\");\n+    }\n+\n+    private Path getApkLibPath() {\n+        return getApkPath().resolve(\"lib\");\n+    }\n+\n+    private Path getApkLibArm64Path() {\n+        return getApkLibPath().resolve(\"arm64-v8a\");\n+    }\n+\n+    private Path getApkAndroidSourcePath() {\n+        return getApkPath().resolve(\"android-source\");\n+    }\n+\n+    private void ensureApkOutputDirectoriesExist() throws IOException {\n+        Files.createDirectories(getApkPath());\n+        Files.createDirectories(getApkBinPath());\n+        Files.createDirectories(getApkClassPath());\n+        Files.createDirectories(getApkLibPath());\n+        Files.createDirectories(getApkLibArm64Path());\n+        Files.createDirectories(getApkAndroidSourcePath());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fff15f9aeaceda18268af247f6bb8dd10683668d"}, "originalPosition": 345}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTUwNDAyNg==", "bodyText": "did you mean isUseJavaFX()?", "url": "https://github.com/gluonhq/substrate/pull/424#discussion_r391504026", "createdAt": "2020-03-12T09:46:41Z", "author": {"login": "jperedadnr"}, "path": "src/test/java/com/gluonhq/substrate/SubstrateTest.java", "diffHunk": "@@ -67,40 +67,58 @@ void testWindowsTriplet() {\n     void testIOSTripletOnLinux() throws IOException {\n         assumeTrue(Triplet.fromCurrentOS().getOs().indexOf(\"nux\") > 0);\n         Triplet iosTriplet = new Triplet(Constants.Profile.IOS);\n-        ProjectConfiguration config = new ProjectConfiguration(\"\");\n+        ProjectConfiguration config = new ProjectConfiguration(\"\", \"\");\n         config.setTarget(iosTriplet);\n         config.setGraalPath(Path.of(System.getenv(\"GRAALVM_HOME\")));\n \n         var dispatcher = new SubstrateDispatcher(Path.of(System.getProperty(\"user.home\")), config);\n         // when on linux, nativeCompile should throw an illegalArgumentException\n-        assertThrows(IllegalArgumentException.class, () -> dispatcher.nativeCompile(\"\"));\n+        assertThrows(IllegalArgumentException.class, () -> dispatcher.nativeCompile());\n     }\n \n     @Test\n     void testAssertGraal() {\n-        ProjectConfiguration publicConfig = new ProjectConfiguration(\"\");\n+        ProjectConfiguration publicConfig = new ProjectConfiguration(\"\", \"\");\n         InternalProjectConfiguration config = new InternalProjectConfiguration(publicConfig);\n         assertThrows(NullPointerException.class, config::canRunNativeImage);\n     }\n \n     @Test\n     void testMainClassName() {\n-        assertThrows(NullPointerException.class, () -> new ProjectConfiguration(null));;\n-        var config = new InternalProjectConfiguration( new ProjectConfiguration(\"a.b.Foo\"));\n+        assertThrows(NullPointerException.class, () -> new ProjectConfiguration(null, \"\"));\n+        var config = new InternalProjectConfiguration(new ProjectConfiguration(\"a.b.Foo\", \"a.b-1.0.jar\"));\n         assertEquals(\"a.b.Foo\", config.getMainClassName());\n-        config = new InternalProjectConfiguration( new ProjectConfiguration(\"name/a.b.Foo\"));\n+        config = new InternalProjectConfiguration(new ProjectConfiguration(\"name/a.b.Foo\", \"\"));\n         assertEquals(\"a.b.Foo\", config.getMainClassName());\n     }\n \n+    @Test\n+    void testClasspath() {\n+        assertThrows(NullPointerException.class, () -> new ProjectConfiguration(\"\", null));\n+        var config = new InternalProjectConfiguration(new ProjectConfiguration(\"\", \"a.b-1.0.jar\"));\n+        assertEquals(\"a.b-1.0.jar\", config.getClasspath());\n+    }\n+\n     @Test\n     void testAssertSW() {\n-        ProjectConfiguration publicConfig = new ProjectConfiguration(\"a.b.Foo\");\n+        ProjectConfiguration publicConfig = new ProjectConfiguration(\"a.b.Foo\", \"\");\n         InternalProjectConfiguration config = new InternalProjectConfiguration(publicConfig);\n         assertFalse(config.isUsePrismSW());\n \n-        publicConfig = new ProjectConfiguration(\"a.b.Foo\");\n+        publicConfig = new ProjectConfiguration(\"a.b.Foo\", \"\");\n         publicConfig.setUsePrismSW(true);\n         config = new InternalProjectConfiguration(publicConfig);\n         assertTrue(config.isUsePrismSW());\n     }\n+\n+    @Test\n+    void testAssertUseJavaFX() {\n+        ProjectConfiguration publicConfig = new ProjectConfiguration(\"\", \"javafx-base-14-linux.jar\");\n+        InternalProjectConfiguration config = new InternalProjectConfiguration(publicConfig);\n+        assertTrue(config.isUseJavaFX());\n+\n+        publicConfig = new ProjectConfiguration(\"\", \"apache-commons.jar\");\n+        config = new InternalProjectConfiguration(publicConfig);\n+        assertFalse(config.isUsePrismSW());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fff15f9aeaceda18268af247f6bb8dd10683668d"}, "originalPosition": 64}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTUxMzgyNQ==", "bodyText": "Add JavaDoc?", "url": "https://github.com/gluonhq/substrate/pull/424#discussion_r391513825", "createdAt": "2020-03-12T10:03:44Z", "author": {"login": "jperedadnr"}, "path": "src/main/java/com/gluonhq/substrate/SubstrateDispatcher.java", "diffHunk": "@@ -50,25 +51,70 @@\n \n public class SubstrateDispatcher {\n \n-    private static volatile boolean run = true;\n+    private enum Step {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d50182774007066da2d6b5f735b28eaeda9210e"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTUyODYzMw==", "bodyText": "I see that you don't do anything with INSTALL yet, so I guess that's for a follow up PR?", "url": "https://github.com/gluonhq/substrate/pull/424#discussion_r391528633", "createdAt": "2020-03-12T10:30:38Z", "author": {"login": "jperedadnr"}, "path": "src/main/java/com/gluonhq/substrate/SubstrateDispatcher.java", "diffHunk": "@@ -50,25 +51,70 @@\n \n public class SubstrateDispatcher {\n \n-    private static volatile boolean run = true;\n+    private enum Step {\n+        COMPILE(),\n+        LINK(COMPILE),\n+        PACKAGE(LINK),\n+        INSTALL(PACKAGE),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d50182774007066da2d6b5f735b28eaeda9210e"}, "originalPosition": 26}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c41527ecc07b5893c15d5c5d0cb022ffa5de1407", "author": {"user": {"login": "tiainen", "name": "Joeri Sykora"}}, "url": "https://github.com/gluonhq/substrate/commit/c41527ecc07b5893c15d5c5d0cb022ffa5de1407", "committedDate": "2020-03-12T13:37:00Z", "message": "make fields final"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "63549c663b5e57682431277dc4bfab1f1923d579", "author": {"user": {"login": "tiainen", "name": "Joeri Sykora"}}, "url": "https://github.com/gluonhq/substrate/commit/63549c663b5e57682431277dc4bfab1f1923d579", "committedDate": "2020-03-12T13:37:42Z", "message": "add javadoc, use logger and implement install step"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "324d1c4fb735672b044b6fe948021ab3e3737af9", "author": {"user": {"login": "tiainen", "name": "Joeri Sykora"}}, "url": "https://github.com/gluonhq/substrate/commit/324d1c4fb735672b044b6fe948021ab3e3737af9", "committedDate": "2020-03-12T13:38:07Z", "message": "test isUseJavaFX method instead"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ca3c22351a8558be75eeb1edfdf15fad3cf7a053", "author": {"user": {"login": "tiainen", "name": "Joeri Sykora"}}, "url": "https://github.com/gluonhq/substrate/commit/ca3c22351a8558be75eeb1edfdf15fad3cf7a053", "committedDate": "2020-03-12T15:34:35Z", "message": "Merge remote-tracking branch 'upstream/master' into 407-substrate-steps"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d0c6433813e58c12318a26c6dcd505eb2c87d667", "author": {"user": {"login": "tiainen", "name": "Joeri Sykora"}}, "url": "https://github.com/gluonhq/substrate/commit/d0c6433813e58c12318a26c6dcd505eb2c87d667", "committedDate": "2020-03-13T13:48:09Z", "message": "Merge remote-tracking branch 'origin/master' into 407-substrate-steps\n\nConflicts:\n\tsrc/main/java/com/gluonhq/substrate/target/AndroidTargetConfiguration.java\n\tsrc/main/resources/native/android/dalvik/precompiled/class/com/gluonhq/helloandroid/MainActivity.class"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc0MzQzOTk3", "url": "https://github.com/gluonhq/substrate/pull/424#pullrequestreview-374343997", "createdAt": "2020-03-13T14:28:19Z", "commit": {"oid": "d0c6433813e58c12318a26c6dcd505eb2c87d667"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2142, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}