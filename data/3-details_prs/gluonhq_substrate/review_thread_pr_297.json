{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY3NDgyNzgy", "number": 297, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQxNToyMzozMlrODbQs4g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQxMDowMTo1NVrODb25xg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5OTExNzc4OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/gluonhq/substrate/target/AbstractTargetConfiguration.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQxNToyMzozMlrOFipHyA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQxNToyMzozMlrOFipHyA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTg2OTY0MA==", "bodyText": "this can be moved to com.gluonhq.substrate.model.ProcessPaths", "url": "https://github.com/gluonhq/substrate/pull/297#discussion_r371869640", "createdAt": "2020-01-28T15:23:32Z", "author": {"login": "johanvos"}, "path": "src/main/java/com/gluonhq/substrate/target/AbstractTargetConfiguration.java", "diffHunk": "@@ -756,6 +769,20 @@ String getAppPath(String appName) {\n         return Arrays.asList(\"-o\", getAppPath(appName));\n     }\n \n+    protected Path getNativeCodePath() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d50a3cf9eb8cae88cac5fafc4f26e86b4dc4c653"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5OTY3NzA0OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/gluonhq/substrate/target/AbstractTargetConfiguration.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQxNzo0OToxMVrOFiulsg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQxMjo1Mzo0MVrOFjHV9A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTk1OTIxOA==", "bodyText": "this would also bring the header files to the compile command. We need to copy the header files, but they should not be in the compile command line.\ne.g. we need gcc -I/path/to/headers hello.c\nwith hello.c having #include hello.h and hello.h needs to be at path/to/headers\nI just found out that the current code we have for this is wrong (it uses the header file in the gcc argument, which is not what we want)", "url": "https://github.com/gluonhq/substrate/pull/297#discussion_r371959218", "createdAt": "2020-01-28T17:49:11Z", "author": {"login": "johanvos"}, "path": "src/main/java/com/gluonhq/substrate/target/AbstractTargetConfiguration.java", "diffHunk": "@@ -317,11 +323,18 @@ protected boolean compileAdditionalSources()\n             FileOps.copyResource(getAdditionalSourceFileLocation()  + fileName, workDir.resolve(fileName));\n             processBuilder.command().add(fileName);\n         }\n+        \n+        Path nativeCodeDir = getNativeCodePath();\n+        for( String fileName: getNativeCodeList() ) {\n+            FileOps.copyFile(nativeCodeDir.resolve(fileName), workDir.resolve(fileName));\n+            processBuilder.command().add(fileName);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d50a3cf9eb8cae88cac5fafc4f26e86b4dc4c653"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjM2NDc4OA==", "bodyText": "Ah I see. I was relying on current code for reference.\nThis should be fixed in latest commit.", "url": "https://github.com/gluonhq/substrate/pull/297#discussion_r372364788", "createdAt": "2020-01-29T12:53:41Z", "author": {"login": "lazar-mitrovic"}, "path": "src/main/java/com/gluonhq/substrate/target/AbstractTargetConfiguration.java", "diffHunk": "@@ -317,11 +323,18 @@ protected boolean compileAdditionalSources()\n             FileOps.copyResource(getAdditionalSourceFileLocation()  + fileName, workDir.resolve(fileName));\n             processBuilder.command().add(fileName);\n         }\n+        \n+        Path nativeCodeDir = getNativeCodePath();\n+        for( String fileName: getNativeCodeList() ) {\n+            FileOps.copyFile(nativeCodeDir.resolve(fileName), workDir.resolve(fileName));\n+            processBuilder.command().add(fileName);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTk1OTIxOA=="}, "originalCommit": {"oid": "d50a3cf9eb8cae88cac5fafc4f26e86b4dc4c653"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwNTM1NjQ5OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/gluonhq/substrate/target/AbstractTargetConfiguration.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQwOTo1NTo1NVrOFjlIzQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQwMjoxMjo0NFrOFj_trA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mjg1Mjk0MQ==", "bodyText": "Probably we could use different extensions? Maybe create a method that can be overridden from the platforms if needed?", "url": "https://github.com/gluonhq/substrate/pull/297#discussion_r372852941", "createdAt": "2020-01-30T09:55:55Z", "author": {"login": "jperedadnr"}, "path": "src/main/java/com/gluonhq/substrate/target/AbstractTargetConfiguration.java", "diffHunk": "@@ -756,6 +773,16 @@ String getAppPath(String appName) {\n         return Arrays.asList(\"-o\", getAppPath(appName));\n     }\n \n+    protected List<String> getNativeCodeList() throws IOException {\n+        Path nativeCodeDir = paths.getNativeCodePath();\n+        if (!Files.exists(nativeCodeDir))\n+            return Collections.emptyList();\n+        return Files.list(nativeCodeDir)\n+            .map(p -> p.getFileName().toString())\n+            .filter(s -> s.endsWith(\".c\"))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "21cd5ef599f9f6ebd16e8df3b215f7b88ef986ff"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzI4ODM2NA==", "bodyText": "This should be implemented in latest commit", "url": "https://github.com/gluonhq/substrate/pull/297#discussion_r373288364", "createdAt": "2020-01-31T02:12:44Z", "author": {"login": "lazar-mitrovic"}, "path": "src/main/java/com/gluonhq/substrate/target/AbstractTargetConfiguration.java", "diffHunk": "@@ -756,6 +773,16 @@ String getAppPath(String appName) {\n         return Arrays.asList(\"-o\", getAppPath(appName));\n     }\n \n+    protected List<String> getNativeCodeList() throws IOException {\n+        Path nativeCodeDir = paths.getNativeCodePath();\n+        if (!Files.exists(nativeCodeDir))\n+            return Collections.emptyList();\n+        return Files.list(nativeCodeDir)\n+            .map(p -> p.getFileName().toString())\n+            .filter(s -> s.endsWith(\".c\"))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mjg1Mjk0MQ=="}, "originalCommit": {"oid": "21cd5ef599f9f6ebd16e8df3b215f7b88ef986ff"}, "originalPosition": 52}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwNTM1NzcwOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/gluonhq/substrate/target/AbstractTargetConfiguration.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQwOTo1NjoxOFrOFjlJkQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQwOTo1NjoxOFrOFjlJkQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mjg1MzEzNw==", "bodyText": "Do you really need collect?", "url": "https://github.com/gluonhq/substrate/pull/297#discussion_r372853137", "createdAt": "2020-01-30T09:56:18Z", "author": {"login": "jperedadnr"}, "path": "src/main/java/com/gluonhq/substrate/target/AbstractTargetConfiguration.java", "diffHunk": "@@ -219,6 +219,12 @@ public boolean link() throws IOException, InterruptedException {\n         linkBuilder.command().add(objectFile.toString());\n         linkBuilder.command().addAll(getTargetSpecificObjectFiles());\n \n+        getNativeCodeList().stream()\n+            .map(s -> s.replaceAll(\"\\\\..*\", \".\" + getObjectFileExtension()))\n+            .distinct()\n+            .collect(Collectors.toList())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "21cd5ef599f9f6ebd16e8df3b215f7b88ef986ff"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwNTM3MTE4OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/gluonhq/substrate/target/AbstractTargetConfiguration.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQxMDowMDowN1rOFjlRyg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQxMDowMDowN1rOFjlRyg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mjg1NTI0Mg==", "bodyText": "I'd rather use curly braces on if statements", "url": "https://github.com/gluonhq/substrate/pull/297#discussion_r372855242", "createdAt": "2020-01-30T10:00:07Z", "author": {"login": "jperedadnr"}, "path": "src/main/java/com/gluonhq/substrate/target/AbstractTargetConfiguration.java", "diffHunk": "@@ -313,15 +319,26 @@ protected boolean compileAdditionalSources()\n             processBuilder.command().add(\"-DGVM_VERBOSE\");\n         }\n         processBuilder.command().addAll(getTargetSpecificCCompileFlags());\n+\n+        processBuilder.command().add(\"-I\" + workDir.toString());\n+\n         for( String fileName: getAdditionalSourceFiles() ) {\n             FileOps.copyResource(getAdditionalSourceFileLocation()  + fileName, workDir.resolve(fileName));\n             processBuilder.command().add(fileName);\n         }\n+        \n+        Path nativeCodeDir = paths.getNativeCodePath();\n+        if (Files.isDirectory(nativeCodeDir))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "21cd5ef599f9f6ebd16e8df3b215f7b88ef986ff"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwNTM3Mjk5OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/gluonhq/substrate/target/AbstractTargetConfiguration.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQxMDowMDo0M1rOFjlS3A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQxMDowMDo0M1rOFjlS3A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mjg1NTUxNg==", "bodyText": "same here (curly braces)", "url": "https://github.com/gluonhq/substrate/pull/297#discussion_r372855516", "createdAt": "2020-01-30T10:00:43Z", "author": {"login": "jperedadnr"}, "path": "src/main/java/com/gluonhq/substrate/target/AbstractTargetConfiguration.java", "diffHunk": "@@ -756,6 +773,16 @@ String getAppPath(String appName) {\n         return Arrays.asList(\"-o\", getAppPath(appName));\n     }\n \n+    protected List<String> getNativeCodeList() throws IOException {\n+        Path nativeCodeDir = paths.getNativeCodePath();\n+        if (!Files.exists(nativeCodeDir))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "21cd5ef599f9f6ebd16e8df3b215f7b88ef986ff"}, "originalPosition": 48}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwNTM3NjcwOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/gluonhq/substrate/target/AbstractTargetConfiguration.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQxMDowMTo1NVrOFjlVLQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQxMDoxOTo0NlrOFkG_rw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mjg1NjEwOQ==", "bodyText": "check non null objects, non null file name, if that make sense?", "url": "https://github.com/gluonhq/substrate/pull/297#discussion_r372856109", "createdAt": "2020-01-30T10:01:55Z", "author": {"login": "jperedadnr"}, "path": "src/main/java/com/gluonhq/substrate/target/AbstractTargetConfiguration.java", "diffHunk": "@@ -756,6 +773,16 @@ String getAppPath(String appName) {\n         return Arrays.asList(\"-o\", getAppPath(appName));\n     }\n \n+    protected List<String> getNativeCodeList() throws IOException {\n+        Path nativeCodeDir = paths.getNativeCodePath();\n+        if (!Files.exists(nativeCodeDir))\n+            return Collections.emptyList();\n+        return Files.list(nativeCodeDir)\n+            .map(p -> p.getFileName().toString())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "21cd5ef599f9f6ebd16e8df3b215f7b88ef986ff"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzI4ODI3OQ==", "bodyText": "paths.getNativeCodePath() always returns non null value (since it only appends native on project path)\nDirectory is checked on line 778, so Files.list(nativeCodeDir) will be either Stream or empty Stream.", "url": "https://github.com/gluonhq/substrate/pull/297#discussion_r373288279", "createdAt": "2020-01-31T02:12:15Z", "author": {"login": "lazar-mitrovic"}, "path": "src/main/java/com/gluonhq/substrate/target/AbstractTargetConfiguration.java", "diffHunk": "@@ -756,6 +773,16 @@ String getAppPath(String appName) {\n         return Arrays.asList(\"-o\", getAppPath(appName));\n     }\n \n+    protected List<String> getNativeCodeList() throws IOException {\n+        Path nativeCodeDir = paths.getNativeCodePath();\n+        if (!Files.exists(nativeCodeDir))\n+            return Collections.emptyList();\n+        return Files.list(nativeCodeDir)\n+            .map(p -> p.getFileName().toString())", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mjg1NjEwOQ=="}, "originalCommit": {"oid": "21cd5ef599f9f6ebd16e8df3b215f7b88ef986ff"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzQwNzY2Mw==", "bodyText": "ok", "url": "https://github.com/gluonhq/substrate/pull/297#discussion_r373407663", "createdAt": "2020-01-31T10:19:46Z", "author": {"login": "jperedadnr"}, "path": "src/main/java/com/gluonhq/substrate/target/AbstractTargetConfiguration.java", "diffHunk": "@@ -756,6 +773,16 @@ String getAppPath(String appName) {\n         return Arrays.asList(\"-o\", getAppPath(appName));\n     }\n \n+    protected List<String> getNativeCodeList() throws IOException {\n+        Path nativeCodeDir = paths.getNativeCodePath();\n+        if (!Files.exists(nativeCodeDir))\n+            return Collections.emptyList();\n+        return Files.list(nativeCodeDir)\n+            .map(p -> p.getFileName().toString())", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mjg1NjEwOQ=="}, "originalCommit": {"oid": "21cd5ef599f9f6ebd16e8df3b215f7b88ef986ff"}, "originalPosition": 51}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3040, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}