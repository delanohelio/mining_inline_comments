{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAxNTIzNzQw", "number": 2208, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQxMjoxNTo0OVrOEsm04w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQxMjoxNTo0OVrOEsm04w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1MjA4OTMxOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/org/apache/calcite/sql2rel/RelDecorrelator.java", "isResolved": false, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQxMjoxNTo0OVrOHf8Nmg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQxMToxOToyN1rOIHAYbQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzI1NDQyNg==", "bodyText": "Does this code check only the parent or any ancestor? Is it valid to check only the parent?", "url": "https://github.com/apache/calcite/pull/2208#discussion_r503254426", "createdAt": "2020-10-12T12:15:49Z", "author": {"login": "zabetak"}, "path": "core/src/main/java/org/apache/calcite/sql2rel/RelDecorrelator.java", "diffHunk": "@@ -680,6 +677,17 @@ private static void shiftMapping(Map<Integer, Integer> mapping, int startIndex,\n \n   public Frame getInvoke(RelNode r, RelNode parent) {\n     final Frame frame = dispatcher.invoke(r);\n+    if (frame != null && parent instanceof Correlate && r instanceof Sort) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bd6333a5d52d46ac7971f9802884150aed4bb96c"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzI1Nzg0MQ==", "bodyText": "My understanding is that only when the sort is an input of Correlate, we can not decorrelate the sort's input (when the sort input has be decorrelated).", "url": "https://github.com/apache/calcite/pull/2208#discussion_r503257841", "createdAt": "2020-10-12T12:22:22Z", "author": {"login": "danny0405"}, "path": "core/src/main/java/org/apache/calcite/sql2rel/RelDecorrelator.java", "diffHunk": "@@ -680,6 +677,17 @@ private static void shiftMapping(Map<Integer, Integer> mapping, int startIndex,\n \n   public Frame getInvoke(RelNode r, RelNode parent) {\n     final Frame frame = dispatcher.invoke(r);\n+    if (frame != null && parent instanceof Correlate && r instanceof Sort) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzI1NDQyNg=="}, "originalCommit": {"oid": "bd6333a5d52d46ac7971f9802884150aed4bb96c"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzI2NTc5Mg==", "bodyText": "Hmm, we should check all its ancestor, but i have no good way for this ? Should i put a flag there (indicating whether we are under a Correlate now ?) ?", "url": "https://github.com/apache/calcite/pull/2208#discussion_r503265792", "createdAt": "2020-10-12T12:37:11Z", "author": {"login": "danny0405"}, "path": "core/src/main/java/org/apache/calcite/sql2rel/RelDecorrelator.java", "diffHunk": "@@ -680,6 +677,17 @@ private static void shiftMapping(Map<Integer, Integer> mapping, int startIndex,\n \n   public Frame getInvoke(RelNode r, RelNode parent) {\n     final Frame frame = dispatcher.invoke(r);\n+    if (frame != null && parent instanceof Correlate && r instanceof Sort) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzI1NDQyNg=="}, "originalCommit": {"oid": "bd6333a5d52d46ac7971f9802884150aed4bb96c"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzYyNjExNA==", "bodyText": "Finally i changes to check if the sort has a parent, if it does, that means the sort is definitely a branch of Correlate (if the sort input has been rewritten)", "url": "https://github.com/apache/calcite/pull/2208#discussion_r503626114", "createdAt": "2020-10-13T02:08:40Z", "author": {"login": "danny0405"}, "path": "core/src/main/java/org/apache/calcite/sql2rel/RelDecorrelator.java", "diffHunk": "@@ -680,6 +677,17 @@ private static void shiftMapping(Map<Integer, Integer> mapping, int startIndex,\n \n   public Frame getInvoke(RelNode r, RelNode parent) {\n     final Frame frame = dispatcher.invoke(r);\n+    if (frame != null && parent instanceof Correlate && r instanceof Sort) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzI1NDQyNg=="}, "originalCommit": {"oid": "bd6333a5d52d46ac7971f9802884150aed4bb96c"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzcyMzgyMw==", "bodyText": "Cool, thanks for checking!", "url": "https://github.com/apache/calcite/pull/2208#discussion_r503723823", "createdAt": "2020-10-13T07:26:19Z", "author": {"login": "zabetak"}, "path": "core/src/main/java/org/apache/calcite/sql2rel/RelDecorrelator.java", "diffHunk": "@@ -680,6 +677,17 @@ private static void shiftMapping(Map<Integer, Integer> mapping, int startIndex,\n \n   public Frame getInvoke(RelNode r, RelNode parent) {\n     final Frame frame = dispatcher.invoke(r);\n+    if (frame != null && parent instanceof Correlate && r instanceof Sort) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzI1NDQyNg=="}, "originalCommit": {"oid": "bd6333a5d52d46ac7971f9802884150aed4bb96c"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDIxNzE5Nw==", "bodyText": "@danny0405 @zabetak  I think this discussion is relevant for https://issues.apache.org/jira/browse/CALCITE-4437", "url": "https://github.com/apache/calcite/pull/2208#discussion_r544217197", "createdAt": "2020-12-16T11:19:27Z", "author": {"login": "rubenada"}, "path": "core/src/main/java/org/apache/calcite/sql2rel/RelDecorrelator.java", "diffHunk": "@@ -680,6 +677,17 @@ private static void shiftMapping(Map<Integer, Integer> mapping, int startIndex,\n \n   public Frame getInvoke(RelNode r, RelNode parent) {\n     final Frame frame = dispatcher.invoke(r);\n+    if (frame != null && parent instanceof Correlate && r instanceof Sort) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzI1NDQyNg=="}, "originalCommit": {"oid": "bd6333a5d52d46ac7971f9802884150aed4bb96c"}, "originalPosition": 33}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 46, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}