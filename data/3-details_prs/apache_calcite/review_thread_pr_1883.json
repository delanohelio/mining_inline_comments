{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk0ODE2Mjcx", "number": 1883, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxNDozNDoyMFrODt-2Qw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxNDozNDoyMFrODt-2Qw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5NTQyMjExOnYy", "diffSide": "RIGHT", "path": "linq4j/src/main/java/org/apache/calcite/linq4j/EnumerableDefaults.java", "isResolved": true, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxNDozNDoyMFrOF_uNgQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxNTowMjo1M1rOF_vnuw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjM2MTcyOQ==", "bodyText": "Can we add a note that this method is subject to change or remove without notice?", "url": "https://github.com/apache/calcite/pull/1883#discussion_r402361729", "createdAt": "2020-04-02T14:34:20Z", "author": {"login": "hsyuan"}, "path": "linq4j/src/main/java/org/apache/calcite/linq4j/EnumerableDefaults.java", "diffHunk": "@@ -1971,8 +1973,42 @@ private void closeInner() {\n       final Function2<TSource, TInner, TResult> resultSelector,\n       boolean generateNullsOnLeft,\n       boolean generateNullsOnRight) {\n+    if (generateNullsOnLeft) {\n+      throw new UnsupportedOperationException(\n+          \"not implemented, mergeJoin with generateNullsOnLeft\");\n+    }\n+    if (generateNullsOnRight) {\n+      throw new UnsupportedOperationException(\n+          \"not implemented, mergeJoin with generateNullsOnRight\");\n+    }\n+    return mergeJoin(outer, inner, outerKeySelector, innerKeySelector, null, resultSelector,\n+        JoinType.INNER, null);\n+  }\n+\n+  public static boolean isMergeJoinSupported(JoinType joinType) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3ff471f252fdc14a6d950f775f2252f365ad1211"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjM2NzIyMA==", "bodyText": "Sure, I can add that; but can you please elaborate why do think it is necessary to mention it?", "url": "https://github.com/apache/calcite/pull/1883#discussion_r402367220", "createdAt": "2020-04-02T14:41:22Z", "author": {"login": "rubenada"}, "path": "linq4j/src/main/java/org/apache/calcite/linq4j/EnumerableDefaults.java", "diffHunk": "@@ -1971,8 +1973,42 @@ private void closeInner() {\n       final Function2<TSource, TInner, TResult> resultSelector,\n       boolean generateNullsOnLeft,\n       boolean generateNullsOnRight) {\n+    if (generateNullsOnLeft) {\n+      throw new UnsupportedOperationException(\n+          \"not implemented, mergeJoin with generateNullsOnLeft\");\n+    }\n+    if (generateNullsOnRight) {\n+      throw new UnsupportedOperationException(\n+          \"not implemented, mergeJoin with generateNullsOnRight\");\n+    }\n+    return mergeJoin(outer, inner, outerKeySelector, innerKeySelector, null, resultSelector,\n+        JoinType.INNER, null);\n+  }\n+\n+  public static boolean isMergeJoinSupported(JoinType joinType) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjM2MTcyOQ=="}, "originalCommit": {"oid": "3ff471f252fdc14a6d950f775f2252f365ad1211"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjM2OTQ1NA==", "bodyText": "Once all the join type are supported, there is no need for the method.", "url": "https://github.com/apache/calcite/pull/1883#discussion_r402369454", "createdAt": "2020-04-02T14:44:00Z", "author": {"login": "hsyuan"}, "path": "linq4j/src/main/java/org/apache/calcite/linq4j/EnumerableDefaults.java", "diffHunk": "@@ -1971,8 +1973,42 @@ private void closeInner() {\n       final Function2<TSource, TInner, TResult> resultSelector,\n       boolean generateNullsOnLeft,\n       boolean generateNullsOnRight) {\n+    if (generateNullsOnLeft) {\n+      throw new UnsupportedOperationException(\n+          \"not implemented, mergeJoin with generateNullsOnLeft\");\n+    }\n+    if (generateNullsOnRight) {\n+      throw new UnsupportedOperationException(\n+          \"not implemented, mergeJoin with generateNullsOnRight\");\n+    }\n+    return mergeJoin(outer, inner, outerKeySelector, innerKeySelector, null, resultSelector,\n+        JoinType.INNER, null);\n+  }\n+\n+  public static boolean isMergeJoinSupported(JoinType joinType) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjM2MTcyOQ=="}, "originalCommit": {"oid": "3ff471f252fdc14a6d950f775f2252f365ad1211"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjM3MzY2OQ==", "bodyText": "That is an optimistic point of view :)\nOk, I'll add the note.", "url": "https://github.com/apache/calcite/pull/1883#discussion_r402373669", "createdAt": "2020-04-02T14:49:08Z", "author": {"login": "rubenada"}, "path": "linq4j/src/main/java/org/apache/calcite/linq4j/EnumerableDefaults.java", "diffHunk": "@@ -1971,8 +1973,42 @@ private void closeInner() {\n       final Function2<TSource, TInner, TResult> resultSelector,\n       boolean generateNullsOnLeft,\n       boolean generateNullsOnRight) {\n+    if (generateNullsOnLeft) {\n+      throw new UnsupportedOperationException(\n+          \"not implemented, mergeJoin with generateNullsOnLeft\");\n+    }\n+    if (generateNullsOnRight) {\n+      throw new UnsupportedOperationException(\n+          \"not implemented, mergeJoin with generateNullsOnRight\");\n+    }\n+    return mergeJoin(outer, inner, outerKeySelector, innerKeySelector, null, resultSelector,\n+        JoinType.INNER, null);\n+  }\n+\n+  public static boolean isMergeJoinSupported(JoinType joinType) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjM2MTcyOQ=="}, "originalCommit": {"oid": "3ff471f252fdc14a6d950f775f2252f365ad1211"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjM3NjIxOA==", "bodyText": ":) Indeed, it is up to you.", "url": "https://github.com/apache/calcite/pull/1883#discussion_r402376218", "createdAt": "2020-04-02T14:52:22Z", "author": {"login": "hsyuan"}, "path": "linq4j/src/main/java/org/apache/calcite/linq4j/EnumerableDefaults.java", "diffHunk": "@@ -1971,8 +1973,42 @@ private void closeInner() {\n       final Function2<TSource, TInner, TResult> resultSelector,\n       boolean generateNullsOnLeft,\n       boolean generateNullsOnRight) {\n+    if (generateNullsOnLeft) {\n+      throw new UnsupportedOperationException(\n+          \"not implemented, mergeJoin with generateNullsOnLeft\");\n+    }\n+    if (generateNullsOnRight) {\n+      throw new UnsupportedOperationException(\n+          \"not implemented, mergeJoin with generateNullsOnRight\");\n+    }\n+    return mergeJoin(outer, inner, outerKeySelector, innerKeySelector, null, resultSelector,\n+        JoinType.INNER, null);\n+  }\n+\n+  public static boolean isMergeJoinSupported(JoinType joinType) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjM2MTcyOQ=="}, "originalCommit": {"oid": "3ff471f252fdc14a6d950f775f2252f365ad1211"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjM4NDgyNw==", "bodyText": "done", "url": "https://github.com/apache/calcite/pull/1883#discussion_r402384827", "createdAt": "2020-04-02T15:02:53Z", "author": {"login": "rubenada"}, "path": "linq4j/src/main/java/org/apache/calcite/linq4j/EnumerableDefaults.java", "diffHunk": "@@ -1971,8 +1973,42 @@ private void closeInner() {\n       final Function2<TSource, TInner, TResult> resultSelector,\n       boolean generateNullsOnLeft,\n       boolean generateNullsOnRight) {\n+    if (generateNullsOnLeft) {\n+      throw new UnsupportedOperationException(\n+          \"not implemented, mergeJoin with generateNullsOnLeft\");\n+    }\n+    if (generateNullsOnRight) {\n+      throw new UnsupportedOperationException(\n+          \"not implemented, mergeJoin with generateNullsOnRight\");\n+    }\n+    return mergeJoin(outer, inner, outerKeySelector, innerKeySelector, null, resultSelector,\n+        JoinType.INNER, null);\n+  }\n+\n+  public static boolean isMergeJoinSupported(JoinType joinType) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjM2MTcyOQ=="}, "originalCommit": {"oid": "3ff471f252fdc14a6d950f775f2252f365ad1211"}, "originalPosition": 26}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 233, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}