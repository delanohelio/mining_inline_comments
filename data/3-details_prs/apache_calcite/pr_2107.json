{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY2ODczNzY3", "number": 2107, "title": "[CALCITE-4113] Support LEFT join in EnumerableMergeJoin", "bodyText": "[CALCITE-4113] Support LEFT join in EnumerableMergeJoin", "createdAt": "2020-08-12T16:16:20Z", "url": "https://github.com/apache/calcite/pull/2107", "merged": true, "mergeCommit": {"oid": "672ed7a1d0dbf87760d37e52b424f16bc8c43b4d"}, "closed": true, "closedAt": "2020-08-24T09:17:06Z", "author": {"login": "rubenada"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc_9iqjgFqTQ2ODk0NzQ2NQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdB9QwKABqjM2ODQwNDMzMzc=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY4OTQ3NDY1", "url": "https://github.com/apache/calcite/pull/2107#pullrequestreview-468947465", "createdAt": "2020-08-18T02:22:51Z", "commit": {"oid": "613f0d417d890cb71550d32714a327afe71cb4e7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQwMjoyMjo1MlrOHCA_qg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQwMjoyMjo1MlrOHCA_qg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTg3NTQ5OA==", "bodyText": "Could we merge these two if conditions?", "url": "https://github.com/apache/calcite/pull/2107#discussion_r471875498", "createdAt": "2020-08-18T02:22:52Z", "author": {"login": "chunweilei"}, "path": "linq4j/src/main/java/org/apache/calcite/linq4j/EnumerableDefaults.java", "diffHunk": "@@ -4223,8 +4227,10 @@ private boolean advanceLeft(TSource left, TKey leftKey) {\n         TKey leftKey2 = outerKeySelector.apply(left);\n         if (leftKey2 == null) {\n           // mergeJoin assumes inputs sorted in ascending order with nulls last,\n-          // if we reach a null key, we are done\n-          break;\n+          // if we reach a null key, we are done (except LEFT join, that needs to process LHS fully)\n+          if (joinType != JoinType.LEFT) {\n+            break;\n+          }\n         }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "613f0d417d890cb71550d32714a327afe71cb4e7"}, "originalPosition": 162}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY5MDc2OTA2", "url": "https://github.com/apache/calcite/pull/2107#pullrequestreview-469076906", "createdAt": "2020-08-18T07:51:36Z", "commit": {"oid": "f8a6d2351557467ed835c90d53dc10b72e22d2d6"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQwNzo1MTozNlrOHCHrjA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQwNzo1MTozNlrOHCHrjA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTk4NTAzNg==", "bodyText": "I am bit concerned about some of the \"new\" plans in sub-query.iq, which introduce EnumerableMergeJoin (with joinType=left), but only one of the join inputs is sorted with an EnumerableSort (in this example the left input). The other input (in this case, the right) does not contain the Sort operator, so this could be a problem.", "url": "https://github.com/apache/calcite/pull/2107#discussion_r471985036", "createdAt": "2020-08-18T07:51:36Z", "author": {"login": "rubenada"}, "path": "core/src/test/resources/sql/sub-query.iq", "diffHunk": "@@ -1761,9 +1761,10 @@ select sal from \"scott\".emp e\n \n !ok\n EnumerableCalc(expr#0..4=[{inputs}], expr#5=[NOT($t4)], expr#6=[IS NOT NULL($t4)], expr#7=[OR($t5, $t6)], expr#8=[IS NOT TRUE($t7)], SAL=[$t1], $condition=[$t8])\n-  EnumerableHashJoin(condition=[=($2, $3)], joinType=[left])\n-    EnumerableCalc(expr#0..7=[{inputs}], EMPNO=[$t0], SAL=[$t5], DEPTNO=[$t7])\n-      EnumerableTableScan(table=[[scott, EMP]])\n+  EnumerableMergeJoin(condition=[=($2, $3)], joinType=[left])", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f8a6d2351557467ed835c90d53dc10b72e22d2d6"}, "originalPosition": 7}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcyMDI1NTM4", "url": "https://github.com/apache/calcite/pull/2107#pullrequestreview-472025538", "createdAt": "2020-08-20T22:23:08Z", "commit": {"oid": "f8a6d2351557467ed835c90d53dc10b72e22d2d6"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQyMjoyMzowOFrOHEVRVg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQyMjoyMzowOFrOHEVRVg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDMwNDg1NA==", "bodyText": "Just an observation, looks like in many cases, Calcite believes merge join are better than hash join.", "url": "https://github.com/apache/calcite/pull/2107#discussion_r474304854", "createdAt": "2020-08-20T22:23:08Z", "author": {"login": "amaliujia"}, "path": "core/src/test/resources/sql/blank.iq", "diffHunk": "@@ -90,16 +90,20 @@ insert into table2 values (NULL, 1), (2, 1);\n !set lateDecorrelate true\n select i, j from table1 where table1.j NOT IN (select i from table2 where table1.i=table2.j);\n EnumerableCalc(expr#0..7=[{inputs}], expr#8=[0], expr#9=[=($t3, $t8)], expr#10=[IS NULL($t1)], expr#11=[IS NOT NULL($t7)], expr#12=[<($t4, $t3)], expr#13=[OR($t10, $t11, $t12)], expr#14=[IS NOT TRUE($t13)], expr#15=[OR($t9, $t14)], proj#0..1=[{exprs}], $condition=[$t15])\n-  EnumerableHashJoin(condition=[AND(=($0, $6), =($1, $5))], joinType=[left])\n-    EnumerableHashJoin(condition=[=($0, $2)], joinType=[left])\n-      EnumerableTableScan(table=[[BLANK, TABLE1]])\n-      EnumerableAggregate(group=[{1}], c=[COUNT()], ck=[COUNT($0)])\n-        EnumerableCalc(expr#0..1=[{inputs}], expr#2=[IS NOT NULL($t1)], proj#0..1=[{exprs}], $condition=[$t2])\n-          EnumerableTableScan(table=[[BLANK, TABLE2]])\n-    EnumerableCalc(expr#0..1=[{inputs}], expr#2=[true], proj#0..2=[{exprs}])\n-      EnumerableAggregate(group=[{0, 1}])\n-        EnumerableCalc(expr#0..1=[{inputs}], expr#2=[IS NOT NULL($t1)], expr#3=[IS NOT NULL($t0)], expr#4=[AND($t2, $t3)], proj#0..1=[{exprs}], $condition=[$t4])\n-          EnumerableTableScan(table=[[BLANK, TABLE2]])\n+  EnumerableMergeJoin(condition=[AND(=($0, $6), =($1, $5))], joinType=[left])", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f8a6d2351557467ed835c90d53dc10b72e22d2d6"}, "originalPosition": 14}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcyNzA0NjMz", "url": "https://github.com/apache/calcite/pull/2107#pullrequestreview-472704633", "createdAt": "2020-08-21T18:33:17Z", "commit": {"oid": "f8a6d2351557467ed835c90d53dc10b72e22d2d6"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcyODcyODM5", "url": "https://github.com/apache/calcite/pull/2107#pullrequestreview-472872839", "createdAt": "2020-08-22T00:09:26Z", "commit": {"oid": "f8a6d2351557467ed835c90d53dc10b72e22d2d6"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0e4de2aca8a55d4ce2294088bf9a9022fb156d42", "author": {"user": {"login": "rubenada", "name": null}}, "url": "https://github.com/apache/calcite/commit/0e4de2aca8a55d4ce2294088bf9a9022fb156d42", "committedDate": "2020-08-24T07:07:59Z", "message": "[CALCITE-4113] Support LEFT join in EnumerableMergeJoin"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f8a6d2351557467ed835c90d53dc10b72e22d2d6", "author": {"user": {"login": "rubenada", "name": null}}, "url": "https://github.com/apache/calcite/commit/f8a6d2351557467ed835c90d53dc10b72e22d2d6", "committedDate": "2020-08-18T07:13:27Z", "message": "[CALCITE-4113] Support LEFT join in EnumerableMergeJoin"}, "afterCommit": {"oid": "0e4de2aca8a55d4ce2294088bf9a9022fb156d42", "author": {"user": {"login": "rubenada", "name": null}}, "url": "https://github.com/apache/calcite/commit/0e4de2aca8a55d4ce2294088bf9a9022fb156d42", "committedDate": "2020-08-24T07:07:59Z", "message": "[CALCITE-4113] Support LEFT join in EnumerableMergeJoin"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3215, "cost": 1, "resetAt": "2021-10-28T16:48:13Z"}}}