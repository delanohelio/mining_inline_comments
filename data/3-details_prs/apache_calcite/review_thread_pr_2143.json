{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDgyNDY1MjE2", "number": 2143, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQwODoyNzo0OVrOEhkEXQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xM1QwMTozOTowMVrOEi02Iw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzNjI5NDA1OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/org/apache/calcite/rel/RelNode.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQwODoyNzo0OVrOHO8Yig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQwNjo0OToyNFrOHPlbVw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTQzMTQzNA==", "bodyText": "The new method should have a javadoc", "url": "https://github.com/apache/calcite/pull/2143#discussion_r485431434", "createdAt": "2020-09-09T08:27:49Z", "author": {"login": "rubenada"}, "path": "core/src/main/java/org/apache/calcite/rel/RelNode.java", "diffHunk": "@@ -246,6 +246,8 @@ default String getDigest() {\n     return getRelDigest().toString();\n   }\n \n+  String getTreeDigest();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba7e1465893f129ac1933aea539d4a295afa8216"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjEwMzg5NQ==", "bodyText": "Revised, really sorry for forgetting this.", "url": "https://github.com/apache/calcite/pull/2143#discussion_r486103895", "createdAt": "2020-09-10T06:49:24Z", "author": {"login": "Aaaaaaron"}, "path": "core/src/main/java/org/apache/calcite/rel/RelNode.java", "diffHunk": "@@ -246,6 +246,8 @@ default String getDigest() {\n     return getRelDigest().toString();\n   }\n \n+  String getTreeDigest();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTQzMTQzNA=="}, "originalCommit": {"oid": "ba7e1465893f129ac1933aea539d4a295afa8216"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzNjM2NjYwOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/org/apache/calcite/rel/RelNode.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQwODo0NDoyMlrOHO9ECg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQwNjo1MTo1N1rOHPlgNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTQ0MjU3MA==", "bodyText": "This is what I meant that is not very neat; adding a new API in RelNode just for debugging purposes.\nNevertheless if we decide to go this way I think it would be better to use the following signature:\nString explain();\nGoing one step further we could make it a default method with an implementation similar to the one below:\ndefault String explain() {\n    StringWriter sw = new StringWriter();\n    RelWriter planWriter =\n        new RelWriterImpl(\n            new PrintWriter(sw), SqlExplainLevel.EXPPLAN_ATTRIBUTES, false);\n    explain(planWriter);\n    return sw.toString();\n}\n\nEven more we could deprecate/remove RelOptUtil#toString(RelNode) variants in favor of this one.", "url": "https://github.com/apache/calcite/pull/2143#discussion_r485442570", "createdAt": "2020-09-09T08:44:22Z", "author": {"login": "zabetak"}, "path": "core/src/main/java/org/apache/calcite/rel/RelNode.java", "diffHunk": "@@ -246,6 +246,8 @@ default String getDigest() {\n     return getRelDigest().toString();\n   }\n \n+  String getTreeDigest();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba7e1465893f129ac1933aea539d4a295afa8216"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTQ1NzU1MQ==", "bodyText": "@zabetak +1\nI also think it makes sense to deprecate/remove RelOptUtil#toString(RelNode) since there is also a similar (more \"powerful\") method that covers that functionality: RelOptUtil#dumpPlan.\nWe could even consider to use it in the default implementation of the new method for the sake of code re-usability:\ndefault String explain() {\n    return RelOptUtil.dumpPlan(\"\", this, SqlExplainFormat.TEXT, SqlExplainLevel.EXPPLAN_ATTRIBUTES);\n}", "url": "https://github.com/apache/calcite/pull/2143#discussion_r485457551", "createdAt": "2020-09-09T09:06:22Z", "author": {"login": "rubenada"}, "path": "core/src/main/java/org/apache/calcite/rel/RelNode.java", "diffHunk": "@@ -246,6 +246,8 @@ default String getDigest() {\n     return getRelDigest().toString();\n   }\n \n+  String getTreeDigest();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTQ0MjU3MA=="}, "originalCommit": {"oid": "ba7e1465893f129ac1933aea539d4a295afa8216"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjEwNTE0MQ==", "bodyText": "Hi fellows\nI've updated my code, would you please take a look?\nHi @zabetak Julian commented in the JIRA: \"The implementation should continue to live in RelOptUtil or wherever\", so I just call RelOptUtil.toString directly.\nHi @rubenada \"RelOptUtil.dumpPlan(\"\", this, SqlExplainFormat.TEXT, SqlExplainLevel.EXPPLAN_ATTRIBUTES)\"'s output seems the same with RelOptUtil.toString.", "url": "https://github.com/apache/calcite/pull/2143#discussion_r486105141", "createdAt": "2020-09-10T06:51:57Z", "author": {"login": "Aaaaaaron"}, "path": "core/src/main/java/org/apache/calcite/rel/RelNode.java", "diffHunk": "@@ -246,6 +246,8 @@ default String getDigest() {\n     return getRelDigest().toString();\n   }\n \n+  String getTreeDigest();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTQ0MjU3MA=="}, "originalCommit": {"oid": "ba7e1465893f129ac1933aea539d4a295afa8216"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA0NTM2MDQ3OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/org/apache/calcite/rel/RelNode.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQwODoxMDozN1rOHQS20g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMlQwOTowMTowNlrOHQzzaQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njg0ODIxMA==", "bodyText": "nitpicking: I think this new method should go together (e.g. right after) with void explain(RelWriter pw);\nAlso, since RelNode is an interface (and not an abstract class), IMHO javadoc should not say \"sub-classes\", but instead something along the lines: \"We recommend that classes implementing this interface do not override this method\"", "url": "https://github.com/apache/calcite/pull/2143#discussion_r486848210", "createdAt": "2020-09-11T08:10:37Z", "author": {"login": "rubenada"}, "path": "core/src/main/java/org/apache/calcite/rel/RelNode.java", "diffHunk": "@@ -232,6 +233,21 @@\n    */\n   RelNode onRegister(RelOptPlanner planner);\n \n+  /**\n+   * Returns a relational expression string of this {@code RelNode}.\n+   * The string returned is the same as\n+   * {@link RelOptUtil#toString(org.apache.calcite.rel.RelNode)}.\n+   *\n+   * This method is intended mainly for use while debugging in an IDE,\n+   * as a convenient short-hand for RelOptUtil.toString.\n+   * We recommend that sub-classes do not override this method.\n+   *\n+   * @return Relational expression string of this {@code RelNode}\n+   */\n+  default String explain() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3fe1a6bc49998e533e16645932cedc2db3ee90e5"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzM4NzY4MA==", "bodyText": "@rubenada Thanks for your advice, indeed better!", "url": "https://github.com/apache/calcite/pull/2143#discussion_r487387680", "createdAt": "2020-09-12T08:57:11Z", "author": {"login": "Aaaaaaron"}, "path": "core/src/main/java/org/apache/calcite/rel/RelNode.java", "diffHunk": "@@ -232,6 +233,21 @@\n    */\n   RelNode onRegister(RelOptPlanner planner);\n \n+  /**\n+   * Returns a relational expression string of this {@code RelNode}.\n+   * The string returned is the same as\n+   * {@link RelOptUtil#toString(org.apache.calcite.rel.RelNode)}.\n+   *\n+   * This method is intended mainly for use while debugging in an IDE,\n+   * as a convenient short-hand for RelOptUtil.toString.\n+   * We recommend that sub-classes do not override this method.\n+   *\n+   * @return Relational expression string of this {@code RelNode}\n+   */\n+  default String explain() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njg0ODIxMA=="}, "originalCommit": {"oid": "3fe1a6bc49998e533e16645932cedc2db3ee90e5"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzM4ODAwOQ==", "bodyText": "revised", "url": "https://github.com/apache/calcite/pull/2143#discussion_r487388009", "createdAt": "2020-09-12T09:01:06Z", "author": {"login": "Aaaaaaron"}, "path": "core/src/main/java/org/apache/calcite/rel/RelNode.java", "diffHunk": "@@ -232,6 +233,21 @@\n    */\n   RelNode onRegister(RelOptPlanner planner);\n \n+  /**\n+   * Returns a relational expression string of this {@code RelNode}.\n+   * The string returned is the same as\n+   * {@link RelOptUtil#toString(org.apache.calcite.rel.RelNode)}.\n+   *\n+   * This method is intended mainly for use while debugging in an IDE,\n+   * as a convenient short-hand for RelOptUtil.toString.\n+   * We recommend that sub-classes do not override this method.\n+   *\n+   * @return Relational expression string of this {@code RelNode}\n+   */\n+  default String explain() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njg0ODIxMA=="}, "originalCommit": {"oid": "3fe1a6bc49998e533e16645932cedc2db3ee90e5"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA0OTUyODY3OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/org/apache/calcite/rel/RelNode.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xM1QwMTozOTowMVrOHQ4sRQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQwMjozOToxMFrOHRCGPQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzQ2ODEwMQ==", "bodyText": "What is the difference between using RelOptUtil.toString and RelOptUtil#dumpPlan here?", "url": "https://github.com/apache/calcite/pull/2143#discussion_r487468101", "createdAt": "2020-09-13T01:39:01Z", "author": {"login": "amaliujia"}, "path": "core/src/main/java/org/apache/calcite/rel/RelNode.java", "diffHunk": "@@ -222,6 +223,22 @@\n    */\n   void explain(RelWriter pw);\n \n+  /**\n+   * Returns a relational expression string of this {@code RelNode}.\n+   * The string returned is the same as\n+   * {@link RelOptUtil#toString(org.apache.calcite.rel.RelNode)}.\n+   *\n+   * This method is intended mainly for use while debugging in an IDE,\n+   * as a convenient short-hand for RelOptUtil.toString.\n+   * We recommend that classes implementing this interface\n+   * do not override this method.\n+   *\n+   * @return Relational expression string of this {@code RelNode}\n+   */\n+  default String explain() {\n+    return RelOptUtil.toString(this);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c49a509c5917bfdacda11c7ebb2375b80f54321d"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzYyMjIwNQ==", "bodyText": "RelOptUtil#dumpPlan can dump other formats like XML/JSON, we don't need this here.", "url": "https://github.com/apache/calcite/pull/2143#discussion_r487622205", "createdAt": "2020-09-14T02:39:10Z", "author": {"login": "Aaaaaaron"}, "path": "core/src/main/java/org/apache/calcite/rel/RelNode.java", "diffHunk": "@@ -222,6 +223,22 @@\n    */\n   void explain(RelWriter pw);\n \n+  /**\n+   * Returns a relational expression string of this {@code RelNode}.\n+   * The string returned is the same as\n+   * {@link RelOptUtil#toString(org.apache.calcite.rel.RelNode)}.\n+   *\n+   * This method is intended mainly for use while debugging in an IDE,\n+   * as a convenient short-hand for RelOptUtil.toString.\n+   * We recommend that classes implementing this interface\n+   * do not override this method.\n+   *\n+   * @return Relational expression string of this {@code RelNode}\n+   */\n+  default String explain() {\n+    return RelOptUtil.toString(this);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzQ2ODEwMQ=="}, "originalCommit": {"oid": "c49a509c5917bfdacda11c7ebb2375b80f54321d"}, "originalPosition": 25}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 133, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}