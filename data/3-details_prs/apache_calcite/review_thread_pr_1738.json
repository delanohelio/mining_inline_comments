{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYwODI2MjA4", "number": 1738, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQxMjowMDo0MlrODW1D8g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQwNzoxNTo0M1rODXEYdw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1MjY0NjI2OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/org/apache/calcite/plan/ViewExpanders.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQxMjowMDo0M1rOFbzqAw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQxMjowMDo0M1rOFbzqAw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDcwMjIxMQ==", "bodyText": "want -> wants.", "url": "https://github.com/apache/calcite/pull/1738#discussion_r364702211", "createdAt": "2020-01-09T12:00:43Z", "author": {"login": "cshuo"}, "path": "core/src/main/java/org/apache/calcite/plan/ViewExpanders.java", "diffHunk": "@@ -39,9 +39,9 @@ private ViewExpanders() {}\n       RelOptCluster cluster,\n       List<RelHint> hints) {\n     // See if the user want to customize the ToRelContext.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6f918d391fb5d04b29ce9d3b5431dd13460bd4c1"}, "originalPosition": 3}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1MjgwMDgwOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/org/apache/calcite/rel/hint/HintStrategyTable.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQxMzowMjoyNlrOFb1GFw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQwMTowOTo1NVrOFcH50g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDcyNTc4Mw==", "bodyText": "new HashMap<>() -> Collections.emptyMap() may be better? I think EMPTY  here implicate that it's an immutable object.", "url": "https://github.com/apache/calcite/pull/1738#discussion_r364725783", "createdAt": "2020-01-09T13:02:26Z", "author": {"login": "cshuo"}, "path": "core/src/main/java/org/apache/calcite/rel/hint/HintStrategyTable.java", "diffHunk": "@@ -48,15 +52,26 @@\n \n   /** Empty strategies. */\n   // Need to replace the EMPTY with DEFAULT if we have any hint implementations.\n-  public static final HintStrategyTable EMPTY = new HintStrategyTable(new HashMap<>());\n+  public static final HintStrategyTable EMPTY = new HintStrategyTable(\n+      new HashMap<>(), new HashMap<>(), HintErrorLogger.INSTANCE);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6f918d391fb5d04b29ce9d3b5431dd13460bd4c1"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTAzMzkzOA==", "bodyText": "I agree, thanks.", "url": "https://github.com/apache/calcite/pull/1738#discussion_r365033938", "createdAt": "2020-01-10T01:09:55Z", "author": {"login": "danny0405"}, "path": "core/src/main/java/org/apache/calcite/rel/hint/HintStrategyTable.java", "diffHunk": "@@ -48,15 +52,26 @@\n \n   /** Empty strategies. */\n   // Need to replace the EMPTY with DEFAULT if we have any hint implementations.\n-  public static final HintStrategyTable EMPTY = new HintStrategyTable(new HashMap<>());\n+  public static final HintStrategyTable EMPTY = new HintStrategyTable(\n+      new HashMap<>(), new HashMap<>(), HintErrorLogger.INSTANCE);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDcyNTc4Mw=="}, "originalCommit": {"oid": "6f918d391fb5d04b29ce9d3b5431dd13460bd4c1"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1NTE1NjM5OnYy", "diffSide": "RIGHT", "path": "core/build.gradle.kts", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQwNzoxNTo0M1rOFcL2gQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQwODoyMDo1N1rOFcM54w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTA5ODYyNQ==", "bodyText": "Why is this change?\nThe issue is it makes log4j APIs accessible in the testing code, so the wrong Logger class appears in the auto-complete :(", "url": "https://github.com/apache/calcite/pull/1738#discussion_r365098625", "createdAt": "2020-01-10T07:15:43Z", "author": {"login": "vlsi"}, "path": "core/build.gradle.kts", "diffHunk": "@@ -78,7 +78,7 @@ dependencies {\n     testImplementation(kotlin(\"stdlib-jdk8\"))\n     testImplementation(kotlin(\"test\"))\n     testImplementation(kotlin(\"test-junit5\"))\n-    testRuntimeOnly(\"org.slf4j:slf4j-log4j12\")\n+    testImplementation(\"org.slf4j:slf4j-log4j12\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "893114fab637df5467db58286bfe00ecdaf82c45"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTEwNzQ5Ng==", "bodyText": "Oops, i need to reference log4j class in my Test, can we fix that auto-complete ?", "url": "https://github.com/apache/calcite/pull/1738#discussion_r365107496", "createdAt": "2020-01-10T07:51:27Z", "author": {"login": "danny0405"}, "path": "core/build.gradle.kts", "diffHunk": "@@ -78,7 +78,7 @@ dependencies {\n     testImplementation(kotlin(\"stdlib-jdk8\"))\n     testImplementation(kotlin(\"test\"))\n     testImplementation(kotlin(\"test-junit5\"))\n-    testRuntimeOnly(\"org.slf4j:slf4j-log4j12\")\n+    testImplementation(\"org.slf4j:slf4j-log4j12\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTA5ODYyNQ=="}, "originalCommit": {"oid": "893114fab637df5467db58286bfe00ecdaf82c45"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTExMjkyMA==", "bodyText": "In any case you don't really need slf4j-log4j12 on the compilation classpath.\nYou don't really reference slf4j-log4j12 classes.\nYou reference log4j12 classes.\nI see the following options:\na) Keep slf4j-log4j12 runtime-only and add an extra testImplementation(\"log4j:log4j\") { because(\"SqlHintsConverterTest needs to implement a MockAppender\") }\nb) Create an extra src/test-logging folder that would have extra dependency for testing logging behavior. For instance, slf4j-test or spf4j-slf4j-test which are slf4j implementations designed to be used for testing logging behaviors.\nThen all the tests that do need to verify logging can be placed there.", "url": "https://github.com/apache/calcite/pull/1738#discussion_r365112920", "createdAt": "2020-01-10T08:10:51Z", "author": {"login": "vlsi"}, "path": "core/build.gradle.kts", "diffHunk": "@@ -78,7 +78,7 @@ dependencies {\n     testImplementation(kotlin(\"stdlib-jdk8\"))\n     testImplementation(kotlin(\"test\"))\n     testImplementation(kotlin(\"test-junit5\"))\n-    testRuntimeOnly(\"org.slf4j:slf4j-log4j12\")\n+    testImplementation(\"org.slf4j:slf4j-log4j12\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTA5ODYyNQ=="}, "originalCommit": {"oid": "893114fab637df5467db58286bfe00ecdaf82c45"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTExNTg3NQ==", "bodyText": "I would choose 1, but could you help to fix that ? I'm not really familiar with Gradle, sorry for that ~", "url": "https://github.com/apache/calcite/pull/1738#discussion_r365115875", "createdAt": "2020-01-10T08:20:57Z", "author": {"login": "danny0405"}, "path": "core/build.gradle.kts", "diffHunk": "@@ -78,7 +78,7 @@ dependencies {\n     testImplementation(kotlin(\"stdlib-jdk8\"))\n     testImplementation(kotlin(\"test\"))\n     testImplementation(kotlin(\"test-junit5\"))\n-    testRuntimeOnly(\"org.slf4j:slf4j-log4j12\")\n+    testImplementation(\"org.slf4j:slf4j-log4j12\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTA5ODYyNQ=="}, "originalCommit": {"oid": "893114fab637df5467db58286bfe00ecdaf82c45"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 358, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}