{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkzMDM4OTk1", "number": 1870, "title": "[CALCITE-3846]  EnumerableMergeJoin: wrong comparison of composite key with null values", "bodyText": "Jira: CALCITE-3846\nEnumerableMergeJoin implementation expects its inputs to be sorted in ascending order, nulls last (see EnumerableMergeJoinRule). In case of a composite key, EnumerableMergeJoin will represent keys as JavaRowFormat.LIST, which is a comparable list, whose comparison is implemented via FlatLists.ComparableListImpl#compare. This method will compare both lists, item by item, but it will consider that a null item is less-than a non-null item. This is a de-facto nulls-first collation, which contradicts the pre-requisite of the mergeJoin algorithm.\nProposed solution: merge join algorithm should not compare keys using compareTo method, instead an ad-hoc Comparator should be generated by EnumerableMergeJoin, similar to EnumerableSort approach (i.e. this Comparator could be null, in which case compareTo method will be used, this will guarantee backwards compatibility).", "createdAt": "2020-03-24T14:52:24Z", "url": "https://github.com/apache/calcite/pull/1870", "merged": true, "mergeCommit": {"oid": "8a80b72e87ef3b573bc75b99264f406773712f7e"}, "closed": true, "closedAt": "2020-03-27T12:29:08Z", "author": {"login": "rubenada"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcRSjK1AFqTM4MTY2MDA4Mw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcRwdsIAFqTM4Mjg0MTQ3NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgxNjYwMDgz", "url": "https://github.com/apache/calcite/pull/1870#pullrequestreview-381660083", "createdAt": "2020-03-26T02:19:30Z", "commit": {"oid": "b5b867ddfac5dbfe4bde2d0bd032c73631d0bf76"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b5b867ddfac5dbfe4bde2d0bd032c73631d0bf76", "author": {"user": {"login": "rubenada", "name": null}}, "url": "https://github.com/apache/calcite/commit/b5b867ddfac5dbfe4bde2d0bd032c73631d0bf76", "committedDate": "2020-03-24T15:26:17Z", "message": "[CALCITE-3846] EnumerableMergeJoin: wrong comparison of composite key with null values"}, "afterCommit": {"oid": "04a460fc3661f30e6cdbed14908f1fc44cdb4679", "author": {"user": {"login": "rubenada", "name": null}}, "url": "https://github.com/apache/calcite/commit/04a460fc3661f30e6cdbed14908f1fc44cdb4679", "committedDate": "2020-03-26T08:21:19Z", "message": "[CALCITE-3846] EnumerableMergeJoin: wrong comparison of composite key with null values"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgyNTQyNzU3", "url": "https://github.com/apache/calcite/pull/1870#pullrequestreview-382542757", "createdAt": "2020-03-27T02:27:10Z", "commit": {"oid": "04a460fc3661f30e6cdbed14908f1fc44cdb4679"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QwMjoyNzoxMFrOF8hDYg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QwMjoyNzoxMFrOF8hDYg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTAwMDQxOA==", "bodyText": "I just noticed another PR on array's initial capacity:)", "url": "https://github.com/apache/calcite/pull/1870#discussion_r399000418", "createdAt": "2020-03-27T02:27:10Z", "author": {"login": "DonnyZone"}, "path": "core/src/main/java/org/apache/calcite/adapter/enumerable/EnumerableMergeJoin.java", "diffHunk": "@@ -164,6 +165,17 @@ public Result implement(EnumerableRelImplementor implementor, Prefer pref) {\n         leftResult.physType.project(joinInfo.leftKeys, JavaRowFormat.LIST);\n     final PhysType rightKeyPhysType =\n         rightResult.physType.project(joinInfo.rightKeys, JavaRowFormat.LIST);\n+\n+    // Generate the appropriate key Comparator (keys must be sorted in ascending order, nulls last).\n+    final List<RelFieldCollation> fieldCollations = new ArrayList<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04a460fc3661f30e6cdbed14908f1fc44cdb4679"}, "originalPosition": 14}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgyNTUzNjk1", "url": "https://github.com/apache/calcite/pull/1870#pullrequestreview-382553695", "createdAt": "2020-03-27T03:07:07Z", "commit": {"oid": "04a460fc3661f30e6cdbed14908f1fc44cdb4679"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QwMzowNzowN1rOF8hr5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QwMzowODozOVrOF8htNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTAxMDc4OA==", "bodyText": "Should we put the comment on the top?", "url": "https://github.com/apache/calcite/pull/1870#discussion_r399010788", "createdAt": "2020-03-27T03:07:07Z", "author": {"login": "chunweilei"}, "path": "linq4j/src/main/java/org/apache/calcite/linq4j/EnumerableDefaults.java", "diffHunk": "@@ -3836,6 +3837,7 @@ public void remove() {\n     // extra predicate in case of non equi-join, in case of equi-join it will be null\n     private final Predicate2<TSource, TInner> extraPredicate;\n     private final Function2<TSource, TInner, TResult> resultSelector;\n+    private final Comparator<TKey> comparator; // possibly null (compareTo to be used in that case)\n     private boolean done;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04a460fc3661f30e6cdbed14908f1fc44cdb4679"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTAxMTEyNw==", "bodyText": "The comment seems a little confusing. Why is it important?", "url": "https://github.com/apache/calcite/pull/1870#discussion_r399011127", "createdAt": "2020-03-27T03:08:39Z", "author": {"login": "chunweilei"}, "path": "core/src/test/java/org/apache/calcite/test/enumerable/EnumerableJoinTest.java", "diffHunk": "@@ -220,6 +220,44 @@\n             + \"empid=150; name=Sebastian; dept_name=Sales; e_deptno=10; d_deptno=10\");\n   }\n \n+  /** Test case for\n+   * <a href=\"https://issues.apache.org/jira/browse/CALCITE-3846\">[CALCITE-3846]\n+   * EnumerableMergeJoin: wrong comparison of composite key with null values</a>. */\n+  @Test public void testMergeJoinWithCompositeKeyAndNullValues() {\n+    tester(false, new JdbcTest.HrSchema())\n+        .query(\"?\")\n+        .withHook(Hook.PLANNER, (Consumer<RelOptPlanner>) planner -> {\n+          planner.addRule(EnumerableRules.ENUMERABLE_MERGE_JOIN_RULE);\n+          planner.removeRule(EnumerableRules.ENUMERABLE_JOIN_RULE);\n+        })\n+        .withRel(builder -> builder\n+            .scan(\"s\", \"emps\")\n+            .sort(builder.field(\"deptno\"), builder.field(\"commission\"))\n+            .scan(\"s\", \"emps\")\n+            .sort(builder.field(\"deptno\"), builder.field(\"commission\"))\n+            .join(JoinRelType.INNER,\n+                builder.and(\n+                    builder.equals(\n+                        builder.field(2, 0, \"deptno\"),\n+                        builder.field(2, 1, \"deptno\")),\n+                    builder.equals(\n+                        builder.field(2, 0, \"commission\"),\n+                        builder.field(2, 1, \"commission\"))))\n+            .project(\n+                builder.field(\"empid\"))\n+            .build())\n+        .explainHookMatches(\"\" // It is important that we have MergeJoin in the plan\n+            + \"EnumerableCalc(expr#0..4=[{inputs}], empid=[$t0])\\n\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04a460fc3661f30e6cdbed14908f1fc44cdb4679"}, "originalPosition": 31}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "04a460fc3661f30e6cdbed14908f1fc44cdb4679", "author": {"user": {"login": "rubenada", "name": null}}, "url": "https://github.com/apache/calcite/commit/04a460fc3661f30e6cdbed14908f1fc44cdb4679", "committedDate": "2020-03-26T08:21:19Z", "message": "[CALCITE-3846] EnumerableMergeJoin: wrong comparison of composite key with null values"}, "afterCommit": {"oid": "9c2d4dff31bb589e8fb5175f4ffb066c9e97ab8c", "author": {"user": {"login": "rubenada", "name": null}}, "url": "https://github.com/apache/calcite/commit/9c2d4dff31bb589e8fb5175f4ffb066c9e97ab8c", "committedDate": "2020-03-27T08:35:11Z", "message": "[CALCITE-3846] EnumerableMergeJoin: wrong comparison of composite key with null values"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8e3c745b7c1503aa47f1e96d95956f706257921f", "author": {"user": {"login": "rubenada", "name": null}}, "url": "https://github.com/apache/calcite/commit/8e3c745b7c1503aa47f1e96d95956f706257921f", "committedDate": "2020-03-27T09:13:51Z", "message": "[CALCITE-3846] EnumerableMergeJoin: wrong comparison of composite key with null values"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9c2d4dff31bb589e8fb5175f4ffb066c9e97ab8c", "author": {"user": {"login": "rubenada", "name": null}}, "url": "https://github.com/apache/calcite/commit/9c2d4dff31bb589e8fb5175f4ffb066c9e97ab8c", "committedDate": "2020-03-27T08:35:11Z", "message": "[CALCITE-3846] EnumerableMergeJoin: wrong comparison of composite key with null values"}, "afterCommit": {"oid": "8e3c745b7c1503aa47f1e96d95956f706257921f", "author": {"user": {"login": "rubenada", "name": null}}, "url": "https://github.com/apache/calcite/commit/8e3c745b7c1503aa47f1e96d95956f706257921f", "committedDate": "2020-03-27T09:13:51Z", "message": "[CALCITE-3846] EnumerableMergeJoin: wrong comparison of composite key with null values"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgyODA2ODA5", "url": "https://github.com/apache/calcite/pull/1870#pullrequestreview-382806809", "createdAt": "2020-03-27T12:19:08Z", "commit": {"oid": "8e3c745b7c1503aa47f1e96d95956f706257921f"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgyODQxNDc0", "url": "https://github.com/apache/calcite/pull/1870#pullrequestreview-382841474", "createdAt": "2020-03-27T13:10:40Z", "commit": {"oid": "8e3c745b7c1503aa47f1e96d95956f706257921f"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3914, "cost": 1, "resetAt": "2021-10-28T16:48:13Z"}}}