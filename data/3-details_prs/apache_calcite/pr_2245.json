{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE1Nzk4NDMz", "number": 2245, "title": "Fix grammatical errors", "bodyText": "This PR fixes grammatical errors", "createdAt": "2020-11-05T05:09:00Z", "url": "https://github.com/apache/calcite/pull/2245", "merged": true, "mergeCommit": {"oid": "59a195f1a566e6724acc8bda246faf2f4ad89dae"}, "closed": true, "closedAt": "2020-11-09T14:21:26Z", "author": null, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdZe3UZgFqTUyNDA2NzMyMg==", "endCursor": "Y3Vyc29yOnYyOpPPAAABda0S4OgH2gAyNTE1Nzk4NDMzOmQ4NDcyYTRiM2JhNDliZDEwOTQzMDVmY2ZiNGRmODJjNmViZGM0ZDI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI0MDY3MzIy", "url": "https://github.com/apache/calcite/pull/2245#pullrequestreview-524067322", "createdAt": "2020-11-05T09:22:54Z", "commit": {"oid": "2b934ab04510cba8e745df24f21267085a8503a1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQwOToyMjo1NVrOHt6UeA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQwOToyMjo1NVrOHt6UeA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzkwMzQ4MA==", "bodyText": "Shouldn't we change the second part of the sentence too?\nyou probably need to write you a *user-defined operator*\n=>\nyou probably need to write a *user-defined operator*", "url": "https://github.com/apache/calcite/pull/2245#discussion_r517903480", "createdAt": "2020-11-05T09:22:55Z", "author": {"login": "rubenada"}, "path": "site/_docs/adapter.md", "diffHunk": "@@ -236,7 +236,7 @@ They are straightforward to write (you just write a Java class and register it\n in your schema) but do not offer much flexibility in the number and type of\n arguments, resolving overloaded functions, or deriving the return type.\n \n-It you want that flexibility, you probably need to write you a\n+If you want that flexibility, you probably need to write you a", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2b934ab04510cba8e745df24f21267085a8503a1"}, "originalPosition": 14}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI0OTcyMTky", "url": "https://github.com/apache/calcite/pull/2245#pullrequestreview-524972192", "createdAt": "2020-11-06T09:10:49Z", "commit": {"oid": "968cf6c29340ccc302bd3f0507436252fdae49c2"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQwOToxMDo0OVrOHulyUQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQwOToxMDo0OVrOHulyUQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODYxNTYzMw==", "bodyText": "minor remark: I think the original one (in singular) was arguably more accurate, since the cost model is a single one in the whole process (as described in the previous paragraph). So, I'd lean towards leaving this sentence as it was.", "url": "https://github.com/apache/calcite/pull/2245#discussion_r518615633", "createdAt": "2020-11-06T09:10:49Z", "author": {"login": "rubenada"}, "path": "site/_docs/algebra.md", "diffHunk": "@@ -37,7 +37,7 @@ planner engine generates an alternative expression that has the same\n semantics as the original but a lower cost.\n \n The planning process is extensible. You can add your own relational\n-operators, planner rules, cost model, and statistics.\n+operators, planner rules, cost models, and statistics.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "968cf6c29340ccc302bd3f0507436252fdae49c2"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d8472a4b3ba49bd1094305fcfb4df82c6ebdc4d2", "author": {"user": null}, "url": "https://github.com/apache/calcite/commit/d8472a4b3ba49bd1094305fcfb4df82c6ebdc4d2", "committedDate": "2020-11-09T12:54:57Z", "message": "Fix grammatical errors in documentation (Geetha Rangaswamaiah)"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3033, "cost": 1, "resetAt": "2021-10-28T16:48:13Z"}}}