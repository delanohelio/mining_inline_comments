{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY1NDc3MjIx", "number": 2103, "title": "[CALCITE-4171] Support named parameters for table window functions", "bodyText": "Changes SqlArgumentAssignmentOperator to allow non-scala query as operand\nIn SqlCallBinding, matches the permuted operand by name with name matcher\nRefactor SqlWindowTableFunction and its sub-class to reuse same logic\nAdd SqlOperator#paramFallbackToDefault to decide if to replace the\nnon-specified param with a DEFAULT call, for SqlWindowTableFunction,\nit always return false", "createdAt": "2020-08-10T12:44:55Z", "url": "https://github.com/apache/calcite/pull/2103", "merged": true, "mergeCommit": {"oid": "ebbb7bb88eb5a732ff954790373fe8d62eb5b8ab"}, "closed": true, "closedAt": "2020-08-18T08:47:24Z", "author": {"login": "danny0405"}, "timelineItems": {"totalCount": 19, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc9Zg4KAH2gAyNDY1NDc3MjIxOmFhZGI2MDVkZWNkNmJiNmE4NTNlMjNmYWM0YjBmNDc5YjIzOTdlMDY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc_9ee-gBqjM2NjQyNjk0OTA=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "aadb605decd6bb6a853e23fac4b0f479b2397e06", "author": {"user": {"login": "danny0405", "name": "Danny Chan"}}, "url": "https://github.com/apache/calcite/commit/aadb605decd6bb6a853e23fac4b0f479b2397e06", "committedDate": "2020-08-10T03:19:00Z", "message": "[CALCITE-4167] Group by COALESCE IN throws NullPointerException\n\nThe root cause is that the COALESCE operand type was wrongly replaced by\n`SqlToRelConverter#adjustInputRef`, actually, for an agg as bb root, there\nis no need to do such adjust. Because the nullability does not change and\nthe agg type is not same with the bb's scope.\n\nTweak the `#adjustInputRef` to only fix type nullability, if there\nare cases that the type name also changes, just return the original node\nand let the subsequent conversion work flow throw."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY0NDQyNDIy", "url": "https://github.com/apache/calcite/pull/2103#pullrequestreview-464442422", "createdAt": "2020-08-10T17:45:30Z", "commit": {"oid": "613a7839366af41ace767d770ef57b38b0cc545a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxNzo0NTozMFrOG-Y5zg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxNzo0NTozMFrOG-Y5zg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODA3MjkxMA==", "bodyText": "This is really nice. I actually tried to add named parameter support but failed on making non-scalar case (i.e. table function) work.\nI wasn't aware that this can be as simple as override this parameter in SqlArgumentAssignmentOperator.java", "url": "https://github.com/apache/calcite/pull/2103#discussion_r468072910", "createdAt": "2020-08-10T17:45:30Z", "author": {"login": "amaliujia"}, "path": "core/src/main/java/org/apache/calcite/sql/fun/SqlArgumentAssignmentOperator.java", "diffHunk": "@@ -47,4 +47,8 @@\n     writer.keyword(getName());\n     call.operand(0).unparse(writer, getRightPrec(), rightPrec);\n   }\n+\n+  @Override public boolean argumentMustBeScalar(int ordinal) {\n+    return false;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "613a7839366af41ace767d770ef57b38b0cc545a"}, "originalPosition": 6}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "613a7839366af41ace767d770ef57b38b0cc545a", "author": {"user": {"login": "danny0405", "name": "Danny Chan"}}, "url": "https://github.com/apache/calcite/commit/613a7839366af41ace767d770ef57b38b0cc545a", "committedDate": "2020-08-10T12:42:38Z", "message": "[CALCITE-4171] Support named parameters for table window functions\n\n* Changes SqlArgumentAssignmentOperator to allow non-scala query as operand\n* In SqlCallBinding, matches the permuted operand by name with name matcher\n* Refactor SqlWindowTableFunction and its sub-class to reuse same logic\n* With explicit named params, the non-specified param would be replaced\n  with a DEFAULT call"}, "afterCommit": {"oid": "00cdab0e549916c408ba200daa72d6d9133bd605", "author": {"user": {"login": "danny0405", "name": "Danny Chan"}}, "url": "https://github.com/apache/calcite/commit/00cdab0e549916c408ba200daa72d6d9133bd605", "committedDate": "2020-08-11T04:39:32Z", "message": "[CALCITE-4171] Support named parameters for table window functions\n\n* Changes SqlArgumentAssignmentOperator to allow non-scala query as operand\n* In SqlCallBinding, matches the permuted operand by name with name matcher\n* Refactor SqlWindowTableFunction and its sub-class to reuse same logic\n* Add SqlOperator#paramFallbackToDefault to decide if to replace the\n  non-specified param with a DEFAULT call, for SqlWindowTableFunction,\n  it always return false"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "00cdab0e549916c408ba200daa72d6d9133bd605", "author": {"user": {"login": "danny0405", "name": "Danny Chan"}}, "url": "https://github.com/apache/calcite/commit/00cdab0e549916c408ba200daa72d6d9133bd605", "committedDate": "2020-08-11T04:39:32Z", "message": "[CALCITE-4171] Support named parameters for table window functions\n\n* Changes SqlArgumentAssignmentOperator to allow non-scala query as operand\n* In SqlCallBinding, matches the permuted operand by name with name matcher\n* Refactor SqlWindowTableFunction and its sub-class to reuse same logic\n* Add SqlOperator#paramFallbackToDefault to decide if to replace the\n  non-specified param with a DEFAULT call, for SqlWindowTableFunction,\n  it always return false"}, "afterCommit": {"oid": "b1a3c39a4a0ea5af5f5d43f97fae1b3f6e3ab4e6", "author": {"user": {"login": "danny0405", "name": "Danny Chan"}}, "url": "https://github.com/apache/calcite/commit/b1a3c39a4a0ea5af5f5d43f97fae1b3f6e3ab4e6", "committedDate": "2020-08-11T04:45:23Z", "message": "[CALCITE-4171] Support named parameters for table window functions\n\n* Changes SqlArgumentAssignmentOperator to allow non-scala query as operand\n* In SqlCallBinding, matches the permuted operand by name with name matcher\n* Refactor SqlWindowTableFunction and its sub-class to reuse same logic\n* Add SqlOperator#paramFallbackToDefault to decide if to replace the\n  non-specified param with a DEFAULT call, for SqlWindowTableFunction,\n  it always return false"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b1a3c39a4a0ea5af5f5d43f97fae1b3f6e3ab4e6", "author": {"user": {"login": "danny0405", "name": "Danny Chan"}}, "url": "https://github.com/apache/calcite/commit/b1a3c39a4a0ea5af5f5d43f97fae1b3f6e3ab4e6", "committedDate": "2020-08-11T04:45:23Z", "message": "[CALCITE-4171] Support named parameters for table window functions\n\n* Changes SqlArgumentAssignmentOperator to allow non-scala query as operand\n* In SqlCallBinding, matches the permuted operand by name with name matcher\n* Refactor SqlWindowTableFunction and its sub-class to reuse same logic\n* Add SqlOperator#paramFallbackToDefault to decide if to replace the\n  non-specified param with a DEFAULT call, for SqlWindowTableFunction,\n  it always return false"}, "afterCommit": {"oid": "ea97a42e6773b1a4397770c9359dfff291152449", "author": {"user": {"login": "danny0405", "name": "Danny Chan"}}, "url": "https://github.com/apache/calcite/commit/ea97a42e6773b1a4397770c9359dfff291152449", "committedDate": "2020-08-11T05:27:57Z", "message": "[CALCITE-4171] Support named parameters for table window functions\n\n* Changes SqlArgumentAssignmentOperator to allow non-scala query as operand\n* In SqlCallBinding, matches the permuted operand by name with name matcher\n* Refactor SqlWindowTableFunction and its sub-class to reuse same logic\n* Add SqlOperator#paramFallbackToDefault to decide if to replace the\n  non-specified param with a DEFAULT call, for SqlWindowTableFunction,\n  it always return false"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ea97a42e6773b1a4397770c9359dfff291152449", "author": {"user": {"login": "danny0405", "name": "Danny Chan"}}, "url": "https://github.com/apache/calcite/commit/ea97a42e6773b1a4397770c9359dfff291152449", "committedDate": "2020-08-11T05:27:57Z", "message": "[CALCITE-4171] Support named parameters for table window functions\n\n* Changes SqlArgumentAssignmentOperator to allow non-scala query as operand\n* In SqlCallBinding, matches the permuted operand by name with name matcher\n* Refactor SqlWindowTableFunction and its sub-class to reuse same logic\n* Add SqlOperator#paramFallbackToDefault to decide if to replace the\n  non-specified param with a DEFAULT call, for SqlWindowTableFunction,\n  it always return false"}, "afterCommit": {"oid": "283b736cb84220176a08453e8434bb38e9fbfd1b", "author": {"user": {"login": "danny0405", "name": "Danny Chan"}}, "url": "https://github.com/apache/calcite/commit/283b736cb84220176a08453e8434bb38e9fbfd1b", "committedDate": "2020-08-11T08:12:56Z", "message": "[CALCITE-4167] Group by COALESCE IN throws NullPointerException\n\nThe root cause is that the COALESCE operand type was wrongly replaced by\n`SqlToRelConverter#adjustInputRef`, actually, for an agg as bb root, there\nis no need to do such adjust. Because the nullability does not change and\nthe agg type is not same with the bb's scope.\n\nTweak the `#adjustInputRef` to only fix type nullability, if there\nare cases that the type name also changes, just return the original node\nand let the subsequent conversion work flow throw."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "283b736cb84220176a08453e8434bb38e9fbfd1b", "author": {"user": {"login": "danny0405", "name": "Danny Chan"}}, "url": "https://github.com/apache/calcite/commit/283b736cb84220176a08453e8434bb38e9fbfd1b", "committedDate": "2020-08-11T08:12:56Z", "message": "[CALCITE-4167] Group by COALESCE IN throws NullPointerException\n\nThe root cause is that the COALESCE operand type was wrongly replaced by\n`SqlToRelConverter#adjustInputRef`, actually, for an agg as bb root, there\nis no need to do such adjust. Because the nullability does not change and\nthe agg type is not same with the bb's scope.\n\nTweak the `#adjustInputRef` to only fix type nullability, if there\nare cases that the type name also changes, just return the original node\nand let the subsequent conversion work flow throw."}, "afterCommit": {"oid": "8408237cd81ea61ef0a4e00fa7bb7ddbc4fe6f6b", "author": {"user": {"login": "danny0405", "name": "Danny Chan"}}, "url": "https://github.com/apache/calcite/commit/8408237cd81ea61ef0a4e00fa7bb7ddbc4fe6f6b", "committedDate": "2020-08-11T08:21:20Z", "message": "[CALCITE-4171] Support named parameters for table window functions\n\n* Changes SqlArgumentAssignmentOperator to allow non-scala query as operand\n* In SqlCallBinding, matches the permuted operand by name with name matcher\n* Refactor SqlWindowTableFunction and its sub-class to reuse same logic\n* Add SqlOperator#paramFallbackToDefault to decide if to replace the\n  non-specified param with a DEFAULT call, for SqlWindowTableFunction,\n  it always return false"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8408237cd81ea61ef0a4e00fa7bb7ddbc4fe6f6b", "author": {"user": {"login": "danny0405", "name": "Danny Chan"}}, "url": "https://github.com/apache/calcite/commit/8408237cd81ea61ef0a4e00fa7bb7ddbc4fe6f6b", "committedDate": "2020-08-11T08:21:20Z", "message": "[CALCITE-4171] Support named parameters for table window functions\n\n* Changes SqlArgumentAssignmentOperator to allow non-scala query as operand\n* In SqlCallBinding, matches the permuted operand by name with name matcher\n* Refactor SqlWindowTableFunction and its sub-class to reuse same logic\n* Add SqlOperator#paramFallbackToDefault to decide if to replace the\n  non-specified param with a DEFAULT call, for SqlWindowTableFunction,\n  it always return false"}, "afterCommit": {"oid": "a8366ac62a6cfedaf8c67fd3eb051756d72f9675", "author": {"user": {"login": "danny0405", "name": "Danny Chan"}}, "url": "https://github.com/apache/calcite/commit/a8366ac62a6cfedaf8c67fd3eb051756d72f9675", "committedDate": "2020-08-11T08:45:47Z", "message": "[CALCITE-4171] Support named parameters for table window functions\n\n* Changes SqlArgumentAssignmentOperator to allow non-scala query as operand\n* In SqlCallBinding, matches the permuted operand by name with name matcher\n* Refactor SqlWindowTableFunction and its sub-class to reuse same logic\n* Add SqlOperator#paramFallbackToDefault to decide if to replace the\n  non-specified param with a DEFAULT call, for SqlWindowTableFunction,\n  it always return false"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY1NTQ2OTg0", "url": "https://github.com/apache/calcite/pull/2103#pullrequestreview-465546984", "createdAt": "2020-08-12T02:18:02Z", "commit": {"oid": "a8366ac62a6cfedaf8c67fd3eb051756d72f9675"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQwMjoxODowMlrOG_PbUA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQwMjoxODowMlrOG_PbUA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODk2NjIyNA==", "bodyText": "Why use i < descriptors + 1 rather than i <= descriptors?", "url": "https://github.com/apache/calcite/pull/2103#discussion_r468966224", "createdAt": "2020-08-12T02:18:02Z", "author": {"login": "chunweilei"}, "path": "core/src/main/java/org/apache/calcite/sql/SqlWindowTableFunction.java", "diffHunk": "@@ -66,7 +86,53 @@ protected boolean throwValidationSignatureErrorOrReturnFalse(SqlCallBinding call\n     }\n   }\n \n-  protected void validateColumnNames(SqlValidator validator,\n+  /**\n+   * Validate the heading operands are in the form:\n+   * (ROW, DESCRIPTOR, DESCRIPTOR ..., other params).\n+   *\n+   * @param callBinding The call binding\n+   * @param descriptors The number of descriptors following the first operand (e.g. the table)\n+   *\n+   * @return true if validation passes\n+   */\n+  protected boolean validateTableWithFollowingDescriptors(\n+      SqlCallBinding callBinding, int descriptors) {\n+    final SqlNode operand0 = callBinding.operand(0);\n+    final SqlValidator validator = callBinding.getValidator();\n+    final RelDataType type = validator.getValidatedNodeType(operand0);\n+    if (type.getSqlTypeName() != SqlTypeName.ROW) {\n+      return false;\n+    }\n+    for (int i = 1; i < descriptors + 1; i++) {\n+      final SqlNode operand = callBinding.operand(i);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a8366ac62a6cfedaf8c67fd3eb051756d72f9675"}, "originalPosition": 57}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY1NjE5NjQ1", "url": "https://github.com/apache/calcite/pull/2103#pullrequestreview-465619645", "createdAt": "2020-08-12T06:20:22Z", "commit": {"oid": "a8366ac62a6cfedaf8c67fd3eb051756d72f9675"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQwNjoyMDoyM1rOG_TS6g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQwNjoyMDoyM1rOG_TS6g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTAyOTYxMA==", "bodyText": "does the order of parameters matter?", "url": "https://github.com/apache/calcite/pull/2103#discussion_r469029610", "createdAt": "2020-08-12T06:20:23Z", "author": {"login": "chunweilei"}, "path": "core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java", "diffHunk": "@@ -10287,13 +10287,41 @@ private void checkCustomColumnResolving(String table) {\n   }\n \n   @Test public void testTumbleTableFunction() {\n-    sql(\"select * from table(\\n\"\n-        + \"^tumble(table orders, descriptor(rowtime))^)\")\n-        .fails(\"Invalid number of arguments to function 'TUMBLE'. Was expecting 3 arguments\");\n     sql(\"select rowtime, productid, orderid, 'window_start', 'window_end' from table(\\n\"\n         + \"tumble(table orders, descriptor(rowtime), interval '2' hour))\").ok();\n     sql(\"select rowtime, productid, orderid, 'window_start', 'window_end' from table(\\n\"\n         + \"tumble(table orders, descriptor(rowtime), interval '2' hour, interval '1' hour))\").ok();\n+    // test named params.\n+    sql(\"select rowtime, productid, orderid, 'window_start', 'window_end'\\n\"\n+        + \"from table(\\n\"\n+        + \"tumble(\\n\"\n+        + \"data => table orders,\\n\"\n+        + \"timecol => descriptor(rowtime),\\n\"\n+        + \"size => interval '2' hour))\").ok();\n+    sql(\"select rowtime, productid, orderid, 'window_start', 'window_end'\\n\"\n+        + \"from table(\\n\"\n+        + \"tumble(\\n\"\n+        + \"data => table orders,\\n\"\n+        + \"timecol => descriptor(rowtime),\\n\"\n+        + \"size => interval '2' hour,\\n\"\n+        + \"\\\"OFFSET\\\" => interval '1' hour))\").ok();\n+    // negative tests.\n+    sql(\"select rowtime, productid, orderid, 'window_start', 'window_end'\\n\"\n+        + \"from table(\\n\"\n+        + \"tumble(\\n\"\n+        + \"^\\\"data\\\"^ => table orders,\\n\"\n+        + \"TIMECOL => descriptor(rowtime),\\n\"\n+        + \"SIZE => interval '2' hour))\")\n+        .fails(\"Param 'data' not found in function 'TUMBLE'; did you mean 'DATA'\\\\?\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a8366ac62a6cfedaf8c67fd3eb051756d72f9675"}, "originalPosition": 32}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a8366ac62a6cfedaf8c67fd3eb051756d72f9675", "author": {"user": {"login": "danny0405", "name": "Danny Chan"}}, "url": "https://github.com/apache/calcite/commit/a8366ac62a6cfedaf8c67fd3eb051756d72f9675", "committedDate": "2020-08-11T08:45:47Z", "message": "[CALCITE-4171] Support named parameters for table window functions\n\n* Changes SqlArgumentAssignmentOperator to allow non-scala query as operand\n* In SqlCallBinding, matches the permuted operand by name with name matcher\n* Refactor SqlWindowTableFunction and its sub-class to reuse same logic\n* Add SqlOperator#paramFallbackToDefault to decide if to replace the\n  non-specified param with a DEFAULT call, for SqlWindowTableFunction,\n  it always return false"}, "afterCommit": {"oid": "d900acad2a4e9db2a5e0f5f72f8cbdea8ab6227d", "author": {"user": {"login": "danny0405", "name": "Danny Chan"}}, "url": "https://github.com/apache/calcite/commit/d900acad2a4e9db2a5e0f5f72f8cbdea8ab6227d", "committedDate": "2020-08-12T07:10:56Z", "message": "[CALCITE-4171] Support named parameters for table window functions\n\n* Changes SqlArgumentAssignmentOperator to allow non-scala query as\n  operand\n* In SqlCallBinding, matches the permuted operand by name with name\n  matcher\n* Refactor SqlWindowTableFunction and its sub-class to reuse same logic\n* Add SqlOperator#paramFallbackToDefault to decide if to replace the\n  non-specified param with a DEFAULT call, for SqlWindowTableFunction,\n  it always return false\n* Replace column window_start with wstart, window_end with wend as\n  suggesed in the One SQL paper"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY2MzUxNDE5", "url": "https://github.com/apache/calcite/pull/2103#pullrequestreview-466351419", "createdAt": "2020-08-12T23:53:36Z", "commit": {"oid": "d900acad2a4e9db2a5e0f5f72f8cbdea8ab6227d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQyMzo1MzozNlrOG_2vSA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQyMzo1MzozNlrOG_2vSA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTYxMDMxMg==", "bodyText": "Note that I asked one of the authors of the \"one sql to rule them all\" paper. The only reason that they use wstart and wend was because of the layout for a paper. I got suggestion to use window_start and window_end.\nI also believe in a JIRA or an email (sorry I cannot recall which one it is) we agreed to switch to window_start and window_end.\nSo I will suggest we keep window_start and window_end, which can be understood easier than wstart/wend.", "url": "https://github.com/apache/calcite/pull/2103#discussion_r469610312", "createdAt": "2020-08-12T23:53:36Z", "author": {"login": "amaliujia"}, "path": "core/src/main/java/org/apache/calcite/sql/SqlWindowTableFunction.java", "diffHunk": "@@ -98,8 +173,8 @@ private static RelDataType inferRowType(SqlOperatorBinding opBinding) {\n     return typeFactory.builder()\n         .kind(inputRowType.getStructKind())\n         .addAll(inputRowType.getFieldList())\n-        .add(\"window_start\", timestampType)\n-        .add(\"window_end\", timestampType)\n+        .add(\"wstart\", timestampType)\n+        .add(\"wend\", timestampType)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d900acad2a4e9db2a5e0f5f72f8cbdea8ab6227d"}, "originalPosition": 122}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d900acad2a4e9db2a5e0f5f72f8cbdea8ab6227d", "author": {"user": {"login": "danny0405", "name": "Danny Chan"}}, "url": "https://github.com/apache/calcite/commit/d900acad2a4e9db2a5e0f5f72f8cbdea8ab6227d", "committedDate": "2020-08-12T07:10:56Z", "message": "[CALCITE-4171] Support named parameters for table window functions\n\n* Changes SqlArgumentAssignmentOperator to allow non-scala query as\n  operand\n* In SqlCallBinding, matches the permuted operand by name with name\n  matcher\n* Refactor SqlWindowTableFunction and its sub-class to reuse same logic\n* Add SqlOperator#paramFallbackToDefault to decide if to replace the\n  non-specified param with a DEFAULT call, for SqlWindowTableFunction,\n  it always return false\n* Replace column window_start with wstart, window_end with wend as\n  suggesed in the One SQL paper"}, "afterCommit": {"oid": "970f8107a622860949dcba840823732dd7c4c351", "author": {"user": {"login": "danny0405", "name": "Danny Chan"}}, "url": "https://github.com/apache/calcite/commit/970f8107a622860949dcba840823732dd7c4c351", "committedDate": "2020-08-13T08:28:22Z", "message": "[CALCITE-4171] Support named parameters for table window functions\n\n* Changes SqlArgumentAssignmentOperator to allow non-scala query as\n  operand\n* In SqlCallBinding, matches the permuted operand by name with name\n  matcher\n* Refactor SqlWindowTableFunction and its sub-class to reuse same logic\n* Add SqlOperator#paramFallbackToDefault to decide if to replace the\n  non-specified param with a DEFAULT call, for SqlWindowTableFunction,\n  it always return false"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "970f8107a622860949dcba840823732dd7c4c351", "author": {"user": {"login": "danny0405", "name": "Danny Chan"}}, "url": "https://github.com/apache/calcite/commit/970f8107a622860949dcba840823732dd7c4c351", "committedDate": "2020-08-13T08:28:22Z", "message": "[CALCITE-4171] Support named parameters for table window functions\n\n* Changes SqlArgumentAssignmentOperator to allow non-scala query as\n  operand\n* In SqlCallBinding, matches the permuted operand by name with name\n  matcher\n* Refactor SqlWindowTableFunction and its sub-class to reuse same logic\n* Add SqlOperator#paramFallbackToDefault to decide if to replace the\n  non-specified param with a DEFAULT call, for SqlWindowTableFunction,\n  it always return false"}, "afterCommit": {"oid": "1dde91dd4734bba38f358d5797f4607083d04bbb", "author": {"user": {"login": "danny0405", "name": "Danny Chan"}}, "url": "https://github.com/apache/calcite/commit/1dde91dd4734bba38f358d5797f4607083d04bbb", "committedDate": "2020-08-14T08:41:34Z", "message": "[CALCITE-4171] Support named parameters for table window functions\n\n* Changes SqlArgumentAssignmentOperator to allow non-scala query as\n  operand\n* In SqlCallBinding, matches the permuted operand by name with name\n  matcher\n* Refactor SqlWindowTableFunction and its sub-class to reuse same logic\n* Add SqlOperator#paramFallbackToDefault to decide if to replace the\n  non-specified param with a DEFAULT call, for SqlWindowTableFunction,\n  it always return false"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1dde91dd4734bba38f358d5797f4607083d04bbb", "author": {"user": {"login": "danny0405", "name": "Danny Chan"}}, "url": "https://github.com/apache/calcite/commit/1dde91dd4734bba38f358d5797f4607083d04bbb", "committedDate": "2020-08-14T08:41:34Z", "message": "[CALCITE-4171] Support named parameters for table window functions\n\n* Changes SqlArgumentAssignmentOperator to allow non-scala query as\n  operand\n* In SqlCallBinding, matches the permuted operand by name with name\n  matcher\n* Refactor SqlWindowTableFunction and its sub-class to reuse same logic\n* Add SqlOperator#paramFallbackToDefault to decide if to replace the\n  non-specified param with a DEFAULT call, for SqlWindowTableFunction,\n  it always return false"}, "afterCommit": {"oid": "2888ce904d8bd0414459f01facd149ae8ebd3026", "author": {"user": {"login": "danny0405", "name": "Danny Chan"}}, "url": "https://github.com/apache/calcite/commit/2888ce904d8bd0414459f01facd149ae8ebd3026", "committedDate": "2020-08-14T08:43:46Z", "message": "[CALCITE-4171] Support named parameters for table window functions\n\n* Changes SqlArgumentAssignmentOperator to allow non-scala query as\n  operand\n* In SqlCallBinding, matches the permuted operand by name with name\n  matcher\n* Refactor SqlWindowTableFunction and its sub-class to reuse same logic\n* Add SqlOperator#paramFallbackToDefault to decide if to replace the\n  non-specified param with a DEFAULT call, for SqlWindowTableFunction,\n  it always return false"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2888ce904d8bd0414459f01facd149ae8ebd3026", "author": {"user": {"login": "danny0405", "name": "Danny Chan"}}, "url": "https://github.com/apache/calcite/commit/2888ce904d8bd0414459f01facd149ae8ebd3026", "committedDate": "2020-08-14T08:43:46Z", "message": "[CALCITE-4171] Support named parameters for table window functions\n\n* Changes SqlArgumentAssignmentOperator to allow non-scala query as\n  operand\n* In SqlCallBinding, matches the permuted operand by name with name\n  matcher\n* Refactor SqlWindowTableFunction and its sub-class to reuse same logic\n* Add SqlOperator#paramFallbackToDefault to decide if to replace the\n  non-specified param with a DEFAULT call, for SqlWindowTableFunction,\n  it always return false"}, "afterCommit": {"oid": "42f6d0dabe4ddc93552dfea0e898229430de1c42", "author": {"user": {"login": "danny0405", "name": "Danny Chan"}}, "url": "https://github.com/apache/calcite/commit/42f6d0dabe4ddc93552dfea0e898229430de1c42", "committedDate": "2020-08-14T08:56:21Z", "message": "[CALCITE-4171] Support named parameters for table window functions\n\n* Changes SqlArgumentAssignmentOperator to allow non-scala query as\n  operand\n* In SqlCallBinding, matches the permuted operand by name with name\n  matcher\n* Refactor SqlWindowTableFunction and its sub-class to reuse same logic"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "42f6d0dabe4ddc93552dfea0e898229430de1c42", "author": {"user": {"login": "danny0405", "name": "Danny Chan"}}, "url": "https://github.com/apache/calcite/commit/42f6d0dabe4ddc93552dfea0e898229430de1c42", "committedDate": "2020-08-14T08:56:21Z", "message": "[CALCITE-4171] Support named parameters for table window functions\n\n* Changes SqlArgumentAssignmentOperator to allow non-scala query as\n  operand\n* In SqlCallBinding, matches the permuted operand by name with name\n  matcher\n* Refactor SqlWindowTableFunction and its sub-class to reuse same logic"}, "afterCommit": {"oid": "60af4aaf492929b677cee28eb0800369c723cb17", "author": {"user": {"login": "danny0405", "name": "Danny Chan"}}, "url": "https://github.com/apache/calcite/commit/60af4aaf492929b677cee28eb0800369c723cb17", "committedDate": "2020-08-17T05:44:44Z", "message": "[CALCITE-4171] Support named parameters for table window functions\n\n[CALCITE-4171] Support named parameters for table window functions\n\n* Changes SqlArgumentAssignmentOperator to allow non-scala query as\n  operand\n* In SqlCallBinding, matches the permuted operand by name with name\n  matcher\n* Refactor SqlWindowTableFunction and its sub-class to reuse same\n  logic\n* Do not patch up the SqlWindowTableFunction with DEFAULTs when sql\n  validation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8ab35a73f78a63770bd77082ba0970f7cba7fe3c", "author": {"user": {"login": "danny0405", "name": "Danny Chan"}}, "url": "https://github.com/apache/calcite/commit/8ab35a73f78a63770bd77082ba0970f7cba7fe3c", "committedDate": "2020-08-18T02:20:28Z", "message": "[CALCITE-4171] Support named parameters for table window functions\n\n[CALCITE-4171] Support named parameters for table window functions\n\n* Changes SqlArgumentAssignmentOperator to allow non-scala query as\n  operand\n* In SqlCallBinding, matches the permuted operand by name with name\n  matcher\n* Refactor SqlWindowTableFunction and its sub-class to reuse same\n  logic\n* Do not patch up the SqlWindowTableFunction with DEFAULTs when sql\n  validation"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "60af4aaf492929b677cee28eb0800369c723cb17", "author": {"user": {"login": "danny0405", "name": "Danny Chan"}}, "url": "https://github.com/apache/calcite/commit/60af4aaf492929b677cee28eb0800369c723cb17", "committedDate": "2020-08-17T05:44:44Z", "message": "[CALCITE-4171] Support named parameters for table window functions\n\n[CALCITE-4171] Support named parameters for table window functions\n\n* Changes SqlArgumentAssignmentOperator to allow non-scala query as\n  operand\n* In SqlCallBinding, matches the permuted operand by name with name\n  matcher\n* Refactor SqlWindowTableFunction and its sub-class to reuse same\n  logic\n* Do not patch up the SqlWindowTableFunction with DEFAULTs when sql\n  validation"}, "afterCommit": {"oid": "8ab35a73f78a63770bd77082ba0970f7cba7fe3c", "author": {"user": {"login": "danny0405", "name": "Danny Chan"}}, "url": "https://github.com/apache/calcite/commit/8ab35a73f78a63770bd77082ba0970f7cba7fe3c", "committedDate": "2020-08-18T02:20:28Z", "message": "[CALCITE-4171] Support named parameters for table window functions\n\n[CALCITE-4171] Support named parameters for table window functions\n\n* Changes SqlArgumentAssignmentOperator to allow non-scala query as\n  operand\n* In SqlCallBinding, matches the permuted operand by name with name\n  matcher\n* Refactor SqlWindowTableFunction and its sub-class to reuse same\n  logic\n* Do not patch up the SqlWindowTableFunction with DEFAULTs when sql\n  validation"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3205, "cost": 1, "resetAt": "2021-10-28T16:48:13Z"}}}