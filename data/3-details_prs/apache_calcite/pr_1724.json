{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzU5NDM5MzE5", "number": 1724, "title": "[CALCITE-3675] SQL to Rel conversion is broken for coalesce on nullable field", "bodyText": "The issue is introduced by CALCITE-3355, in which type deducing is only conducted in validation phase.\nHowever, when converting to RexNode, a new SqlOperatorBinding (i.e., RexCallBinding) is used. Consequently, it fails type preservation check.\nThis PR tries to fill the gap.", "createdAt": "2020-01-06T08:12:45Z", "url": "https://github.com/apache/calcite/pull/1724", "merged": true, "mergeCommit": {"oid": "536d5032c8a8a749601d5ff4664e6a2e0b8b7c94"}, "closed": true, "closedAt": "2020-01-13T04:21:44Z", "author": {"login": "DonnyZone"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb33gN-AFqTMzOTAwNTAwMQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABb4lnnngFqTM0MDM1MDU1NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzM5MDA1MDAx", "url": "https://github.com/apache/calcite/pull/1724#pullrequestreview-339005001", "createdAt": "2020-01-07T02:40:19Z", "commit": {"oid": "09906561de8e309bf1df302414ed7a2e1d7420f7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QwMjo0MDoyMFrOFaumbw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QwMjo0MDoyMFrOFaumbw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzU3MDc5OQ==", "bodyText": "It might be better if we put the if condition out of the loop.", "url": "https://github.com/apache/calcite/pull/1724#discussion_r363570799", "createdAt": "2020-01-07T02:40:20Z", "author": {"login": "chunweilei"}, "path": "core/src/main/java/org/apache/calcite/sql/fun/SqlCaseOperator.java", "diffHunk": "@@ -293,16 +294,26 @@ private RelDataType inferTypeFromValidator(\n     return ret;\n   }\n \n-  private RelDataType inferTypeFromOperands(\n-      RelDataTypeFactory typeFactory,\n-      List<RelDataType> argTypes) {\n+  private RelDataType inferTypeFromOperands(SqlOperatorBinding opBinding) {\n+    final RelDataTypeFactory typeFactory = opBinding.getTypeFactory();\n+    final List<RelDataType> argTypes = opBinding.collectOperandTypes();\n     assert (argTypes.size() % 2) == 1 : \"odd number of arguments expected: \"\n         + argTypes.size();\n     assert argTypes.size() > 1 : \"CASE must have more than 1 argument. Given \"\n       + argTypes.size() + \", \" + argTypes;\n     List<RelDataType> thenTypes = new ArrayList<>();\n     for (int j = 1; j < (argTypes.size() - 1); j += 2) {\n-      thenTypes.add(argTypes.get(j));\n+      RelDataType argType = argTypes.get(j);\n+      if (opBinding instanceof RexCallBinding) {\n+        RexNode whenNode = ((RexCallBinding) opBinding).getOperands().get(j - 1);\n+        RexNode thenNode = ((RexCallBinding) opBinding).getOperands().get(j);\n+        if (whenNode.getKind() == SqlKind.IS_NOT_NULL && argType.isNullable()) {\n+          if (((RexCall) whenNode).getOperands().get(0).equals(thenNode)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "09906561de8e309bf1df302414ed7a2e1d7420f7"}, "originalPosition": 43}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "09906561de8e309bf1df302414ed7a2e1d7420f7", "author": {"user": {"login": "DonnyZone", "name": "Feng Zhu"}}, "url": "https://github.com/apache/calcite/commit/09906561de8e309bf1df302414ed7a2e1d7420f7", "committedDate": "2020-01-06T07:55:34Z", "message": "[CALCITE-3675] SQL to Rel conversion is broken for coalesce on nullable field (DonnyZone)"}, "afterCommit": {"oid": "b301ba518e61fe6fde83c02b26648a38a0cb064f", "author": {"user": {"login": "DonnyZone", "name": "Feng Zhu"}}, "url": "https://github.com/apache/calcite/commit/b301ba518e61fe6fde83c02b26648a38a0cb064f", "committedDate": "2020-01-07T03:47:40Z", "message": "[CALCITE-3675] SQL to Rel conversion is broken for coalesce on nullable field (DonnyZone)"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzM5NjE2Mjgy", "url": "https://github.com/apache/calcite/pull/1724#pullrequestreview-339616282", "createdAt": "2020-01-08T02:20:29Z", "commit": {"oid": "b301ba518e61fe6fde83c02b26648a38a0cb064f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzM5ODYyMTIz", "url": "https://github.com/apache/calcite/pull/1724#pullrequestreview-339862123", "createdAt": "2020-01-08T13:29:29Z", "commit": {"oid": "b301ba518e61fe6fde83c02b26648a38a0cb064f"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQxMzoyOToyOVrOFbW1jw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQxMzozMDozMVrOFbW3bA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDIzMDAzMQ==", "bodyText": "Follow the SqlCallBinding name pattern, use operands or operand.", "url": "https://github.com/apache/calcite/pull/1724#discussion_r364230031", "createdAt": "2020-01-08T13:29:29Z", "author": {"login": "danny0405"}, "path": "core/src/main/java/org/apache/calcite/rex/RexCallBinding.java", "diffHunk": "@@ -122,6 +122,10 @@ public static RexCallBinding create(RelDataTypeFactory typeFactory,\n     return RexUtil.isLiteral(operands.get(ordinal), allowCast);\n   }\n \n+  public List<RexNode> getOperands() {\n+    return operands;\n+  }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b301ba518e61fe6fde83c02b26648a38a0cb064f"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDIzMDUwOA==", "bodyText": "Just as the comment addressed, can we unify the call bindings ?", "url": "https://github.com/apache/calcite/pull/1724#discussion_r364230508", "createdAt": "2020-01-08T13:30:31Z", "author": {"login": "danny0405"}, "path": "core/src/main/java/org/apache/calcite/sql/fun/SqlCaseOperator.java", "diffHunk": "@@ -216,9 +219,7 @@ public RelDataType inferReturnType(\n       SqlOperatorBinding opBinding) {\n     // REVIEW jvs 4-June-2005:  can't these be unified?\n     if (!(opBinding instanceof SqlCallBinding)) {\n-      return inferTypeFromOperands(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b301ba518e61fe6fde83c02b26648a38a0cb064f"}, "originalPosition": 14}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e2cd56caea6fa3578fcdae000ce168e841b2dfec", "author": {"user": {"login": "DonnyZone", "name": "Feng Zhu"}}, "url": "https://github.com/apache/calcite/commit/e2cd56caea6fa3578fcdae000ce168e841b2dfec", "committedDate": "2020-01-09T02:50:30Z", "message": "[CALCITE-3675] SQL to Rel conversion is broken for coalesce on nullable field (DonnyZone)"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b301ba518e61fe6fde83c02b26648a38a0cb064f", "author": {"user": {"login": "DonnyZone", "name": "Feng Zhu"}}, "url": "https://github.com/apache/calcite/commit/b301ba518e61fe6fde83c02b26648a38a0cb064f", "committedDate": "2020-01-07T03:47:40Z", "message": "[CALCITE-3675] SQL to Rel conversion is broken for coalesce on nullable field (DonnyZone)"}, "afterCommit": {"oid": "e2cd56caea6fa3578fcdae000ce168e841b2dfec", "author": {"user": {"login": "DonnyZone", "name": "Feng Zhu"}}, "url": "https://github.com/apache/calcite/commit/e2cd56caea6fa3578fcdae000ce168e841b2dfec", "committedDate": "2020-01-09T02:50:30Z", "message": "[CALCITE-3675] SQL to Rel conversion is broken for coalesce on nullable field (DonnyZone)"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQwMzA3NTcw", "url": "https://github.com/apache/calcite/pull/1724#pullrequestreview-340307570", "createdAt": "2020-01-09T06:17:57Z", "commit": {"oid": "e2cd56caea6fa3578fcdae000ce168e841b2dfec"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQwMzUwNTU1", "url": "https://github.com/apache/calcite/pull/1724#pullrequestreview-340350555", "createdAt": "2020-01-09T08:24:27Z", "commit": {"oid": "e2cd56caea6fa3578fcdae000ce168e841b2dfec"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4403, "cost": 1, "resetAt": "2021-10-28T16:48:13Z"}}}