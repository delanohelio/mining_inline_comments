{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE5MjU3MTcx", "number": 2255, "title": "[CALCITE-4393] ExceptionInInitializerError due to NPE in SqlCallBinding caused by circular dependency", "bodyText": "Jira: https://issues.apache.org/jira/browse/CALCITE-4393", "createdAt": "2020-11-11T15:04:34Z", "url": "https://github.com/apache/calcite/pull/2255", "merged": true, "mergeCommit": {"oid": "fbe69824ffb13f847d1db6e26f0030ddec7b0e8c"}, "closed": true, "closedAt": "2020-11-24T08:53:04Z", "author": {"login": "rubenada"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdbg5M_AFqTUyODM1NDg3NQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdd_GEMgFqTUzNDIxMzI4NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI4MzU0ODc1", "url": "https://github.com/apache/calcite/pull/2255#pullrequestreview-528354875", "createdAt": "2020-11-11T16:52:38Z", "commit": {"oid": "874f174f9bfcfe87217e77f683f7df27da91e267"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQxNjo1MjozOFrOHxVqIQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQxNjo1MjozOFrOHxVqIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTQ5NzEyMQ==", "bodyText": "Suggest you don\u2019t create the defaultCall outside the loop. Most calls do not need default arguments.\nYou could in-line the defaultCall method, because it\u2019s very simple.", "url": "https://github.com/apache/calcite/pull/2255#discussion_r521497121", "createdAt": "2020-11-11T16:52:38Z", "author": {"login": "julianhyde"}, "path": "core/src/main/java/org/apache/calcite/sql/SqlCallBinding.java", "diffHunk": "@@ -145,10 +144,11 @@ public SqlCall getCall() {\n       }\n       final SqlOperandCountRange range = checker.getOperandCountRange();\n       final List<SqlNode> list = Lists.newArrayList(operandList);\n+      final SqlCall defaultCall = createDefaultCall();\n       while (list.size() < range.getMax()\n           && checker.isOptional(list.size())\n           && checker.isFixedParameters()) {\n-        list.add(DEFAULT_CALL);\n+        list.add(defaultCall);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "874f174f9bfcfe87217e77f683f7df27da91e267"}, "originalPosition": 19}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI4Mzc3MjY4", "url": "https://github.com/apache/calcite/pull/2255#pullrequestreview-528377268", "createdAt": "2020-11-11T17:18:18Z", "commit": {"oid": "874f174f9bfcfe87217e77f683f7df27da91e267"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQxNzoxODoxOFrOHxWrSg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQxNzoxODoxOFrOHxWrSg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTUxMzgwMg==", "bodyText": "static? The motivation is to ensure the method does not accidentally use the fields.", "url": "https://github.com/apache/calcite/pull/2255#discussion_r521513802", "createdAt": "2020-11-11T17:18:18Z", "author": {"login": "vlsi"}, "path": "core/src/main/java/org/apache/calcite/sql/SqlCallBinding.java", "diffHunk": "@@ -411,4 +411,8 @@ public CalciteException newValidationError(\n   public boolean isTypeCoercionEnabled() {\n     return validator.config().typeCoercionEnabled();\n   }\n+\n+  private SqlCall createDefaultCall() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "874f174f9bfcfe87217e77f683f7df27da91e267"}, "originalPosition": 37}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI4Mzc4ODE0", "url": "https://github.com/apache/calcite/pull/2255#pullrequestreview-528378814", "createdAt": "2020-11-11T17:20:18Z", "commit": {"oid": "874f174f9bfcfe87217e77f683f7df27da91e267"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQxNzoyMDoxOFrOHxWv7A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQxNzoyMDoxOFrOHxWv7A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTUxNDk4OA==", "bodyText": "Should this be moved outside of the loop?", "url": "https://github.com/apache/calcite/pull/2255#discussion_r521514988", "createdAt": "2020-11-11T17:20:18Z", "author": {"login": "vlsi"}, "path": "core/src/main/java/org/apache/calcite/sql/SqlCallBinding.java", "diffHunk": "@@ -201,7 +201,7 @@ private boolean hasAssignment() {\n             // with DEFAULT and then convert to nulls during sql-to-rel conversion.\n             // Thus, there is no need to show the optional operands in the plan and\n             // decide if the optional operand is null when code generation.\n-            permuted.add(DEFAULT_CALL);\n+            permuted.add(createDefaultCall());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "874f174f9bfcfe87217e77f683f7df27da91e267"}, "originalPosition": 28}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI4NzMxMTA0", "url": "https://github.com/apache/calcite/pull/2255#pullrequestreview-528731104", "createdAt": "2020-11-12T03:49:23Z", "commit": {"oid": "874f174f9bfcfe87217e77f683f7df27da91e267"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQwMzo0OToyM1rOHxo_UQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQwMzo0OToyM1rOHxo_UQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTgxMzg0MQ==", "bodyText": "Do we need to create a new call, if one already exists?", "url": "https://github.com/apache/calcite/pull/2255#discussion_r521813841", "createdAt": "2020-11-12T03:49:23Z", "author": {"login": "liyafan82"}, "path": "core/src/main/java/org/apache/calcite/sql/SqlCallBinding.java", "diffHunk": "@@ -411,4 +411,8 @@ public CalciteException newValidationError(\n   public boolean isTypeCoercionEnabled() {\n     return validator.config().typeCoercionEnabled();\n   }\n+\n+  private SqlCall createDefaultCall() {\n+    return SqlStdOperatorTable.DEFAULT.createCall(SqlParserPos.ZERO);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "874f174f9bfcfe87217e77f683f7df27da91e267"}, "originalPosition": 38}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3c590954f6b31848537e3572c7da9db2c2e34292", "author": {"user": {"login": "rubenada", "name": null}}, "url": "https://github.com/apache/calcite/commit/3c590954f6b31848537e3572c7da9db2c2e34292", "committedDate": "2020-11-13T09:48:57Z", "message": "[CALCITE-4393] ExceptionInInitializerError due to NPE in SqlCallBinding caused by circular dependency"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f2514a5537980248a5be145de34d2e395119fd62", "author": {"user": {"login": "rubenada", "name": null}}, "url": "https://github.com/apache/calcite/commit/f2514a5537980248a5be145de34d2e395119fd62", "committedDate": "2020-11-12T10:56:39Z", "message": "[CALCITE-4393] ExceptionInInitializerError due to NPE in SqlCallBinding caused by circular dependency"}, "afterCommit": {"oid": "3c590954f6b31848537e3572c7da9db2c2e34292", "author": {"user": {"login": "rubenada", "name": null}}, "url": "https://github.com/apache/calcite/commit/3c590954f6b31848537e3572c7da9db2c2e34292", "committedDate": "2020-11-13T09:48:57Z", "message": "[CALCITE-4393] ExceptionInInitializerError due to NPE in SqlCallBinding caused by circular dependency"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM0MjEzMjg0", "url": "https://github.com/apache/calcite/pull/2255#pullrequestreview-534213284", "createdAt": "2020-11-19T09:11:41Z", "commit": {"oid": "3c590954f6b31848537e3572c7da9db2c2e34292"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3074, "cost": 1, "resetAt": "2021-10-28T16:48:13Z"}}}