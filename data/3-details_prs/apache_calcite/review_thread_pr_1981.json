{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE4OTEyNTMy", "number": 1981, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QwNzoxMjozOVrOENtJYg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQwOTo1MDoxMFrOEOnIBQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyODA2NjI2OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/org/apache/calcite/adapter/enumerable/RexImpTable.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QwNzoxMjozOVrOGwdlqA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxOTozODozN1rOGw3CWQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzQ2OTYwOA==", "bodyText": "Can we simpilfy this logic as below? It may be more intuitive.\n// handle the optional offset parameter, use 0 as default when ...\nfinal Expression xxxExpression = call.getOperands().size() > 2 \n    ? translator.translate(call.getOperands().get(2))\n    : Expressions.constant(0, long.class);\ntranslatedOperands.add(xxxExpression);", "url": "https://github.com/apache/calcite/pull/1981#discussion_r453469608", "createdAt": "2020-07-13T07:12:39Z", "author": {"login": "DonnyZone"}, "path": "core/src/main/java/org/apache/calcite/adapter/enumerable/RexImpTable.java", "diffHunk": "@@ -3406,9 +3406,23 @@ abstract Expression implementSafe(RexToLixTranslator translator,\n       translatedOperands.add(wmColExpr);\n       translatedOperands.add(intervalExpression);\n \n-      return Expressions.call(BuiltInMethod.TUMBLING.method, inputEnumerable,\n-          EnumUtils.tumblingWindowSelector(inputPhysType, outputPhysType,\n-              translatedOperands.get(0), translatedOperands.get(1)));\n+      // handle the optional offset parameter.\n+      if (call.getOperands().size() > 2) {\n+        translatedOperands.add(translator.translate(call.getOperands().get(2)));\n+      } else {\n+        // use 0 for the default value when offset parameter is not set.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0420edd93c6180f187ab838990bcb3c383777b83"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzg4NjU1Mw==", "bodyText": "Done", "url": "https://github.com/apache/calcite/pull/1981#discussion_r453886553", "createdAt": "2020-07-13T19:38:37Z", "author": {"login": "amaliujia"}, "path": "core/src/main/java/org/apache/calcite/adapter/enumerable/RexImpTable.java", "diffHunk": "@@ -3406,9 +3406,23 @@ abstract Expression implementSafe(RexToLixTranslator translator,\n       translatedOperands.add(wmColExpr);\n       translatedOperands.add(intervalExpression);\n \n-      return Expressions.call(BuiltInMethod.TUMBLING.method, inputEnumerable,\n-          EnumUtils.tumblingWindowSelector(inputPhysType, outputPhysType,\n-              translatedOperands.get(0), translatedOperands.get(1)));\n+      // handle the optional offset parameter.\n+      if (call.getOperands().size() > 2) {\n+        translatedOperands.add(translator.translate(call.getOperands().get(2)));\n+      } else {\n+        // use 0 for the default value when offset parameter is not set.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzQ2OTYwOA=="}, "originalCommit": {"oid": "0420edd93c6180f187ab838990bcb3c383777b83"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyODA5NjAwOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/org/apache/calcite/adapter/enumerable/RexImpTable.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QwODoxMzowMFrOGwdy6Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxOTozODozMVrOGw3CLA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzQ3MzAwMQ==", "bodyText": "Also here", "url": "https://github.com/apache/calcite/pull/1981#discussion_r453473001", "createdAt": "2020-07-13T08:13:00Z", "author": {"login": "DonnyZone"}, "path": "core/src/main/java/org/apache/calcite/adapter/enumerable/RexImpTable.java", "diffHunk": "@@ -3426,13 +3440,24 @@ abstract Expression implementSafe(RexToLixTranslator translator,\n       translatedOperands.add(slidingInterval);\n       translatedOperands.add(windowSize);\n \n-      return Expressions.call(BuiltInMethod.HOPPING.method,\n+\n+      // handle the optional offset parameter.\n+      if (call.getOperands().size() > 3) {\n+        translatedOperands.add(translator.translate(call.getOperands().get(3)));\n+      } else {\n+        // use 0 for the default value when offset parameter is missing.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0420edd93c6180f187ab838990bcb3c383777b83"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzg4NjUwOA==", "bodyText": "+1", "url": "https://github.com/apache/calcite/pull/1981#discussion_r453886508", "createdAt": "2020-07-13T19:38:31Z", "author": {"login": "amaliujia"}, "path": "core/src/main/java/org/apache/calcite/adapter/enumerable/RexImpTable.java", "diffHunk": "@@ -3426,13 +3440,24 @@ abstract Expression implementSafe(RexToLixTranslator translator,\n       translatedOperands.add(slidingInterval);\n       translatedOperands.add(windowSize);\n \n-      return Expressions.call(BuiltInMethod.HOPPING.method,\n+\n+      // handle the optional offset parameter.\n+      if (call.getOperands().size() > 3) {\n+        translatedOperands.add(translator.translate(call.getOperands().get(3)));\n+      } else {\n+        // use 0 for the default value when offset parameter is missing.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzQ3MzAwMQ=="}, "originalCommit": {"oid": "0420edd93c6180f187ab838990bcb3c383777b83"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyODA5OTcwOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/org/apache/calcite/adapter/enumerable/EnumUtils.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QwODoxNDo1OVrOGwd1bw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxOTozODoyNlrOGw3CBA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzQ3MzY0Nw==", "bodyText": "\"...a window size and an offset and return...\" -> \"a window size and an offset, and return\"", "url": "https://github.com/apache/calcite/pull/1981#discussion_r453473647", "createdAt": "2020-07-13T08:14:59Z", "author": {"login": "DonnyZone"}, "path": "core/src/main/java/org/apache/calcite/adapter/enumerable/EnumUtils.java", "diffHunk": "@@ -786,28 +787,29 @@ static Expression tumblingWindowSelector(\n     final Expression wmColExprToLong = EnumUtils.convert(wmColExpr, long.class);\n     final Expression shiftExpr = Expressions.constant(1, long.class);\n \n-    // Find the fixed window for a timestamp given a window size and return the window start.\n-    // Fixed windows counts from timestamp 0.\n-    // wmMillis / intervalMillis * intervalMillis\n-    expressions.add(\n-        Expressions.multiply(\n-            Expressions.divide(\n+    // Find the fixed window for a timestamp given a window size and an offset and return the", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0420edd93c6180f187ab838990bcb3c383777b83"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzg4NjQ2OA==", "bodyText": "Done.", "url": "https://github.com/apache/calcite/pull/1981#discussion_r453886468", "createdAt": "2020-07-13T19:38:26Z", "author": {"login": "amaliujia"}, "path": "core/src/main/java/org/apache/calcite/adapter/enumerable/EnumUtils.java", "diffHunk": "@@ -786,28 +787,29 @@ static Expression tumblingWindowSelector(\n     final Expression wmColExprToLong = EnumUtils.convert(wmColExpr, long.class);\n     final Expression shiftExpr = Expressions.constant(1, long.class);\n \n-    // Find the fixed window for a timestamp given a window size and return the window start.\n-    // Fixed windows counts from timestamp 0.\n-    // wmMillis / intervalMillis * intervalMillis\n-    expressions.add(\n-        Expressions.multiply(\n-            Expressions.divide(\n+    // Find the fixed window for a timestamp given a window size and an offset and return the", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzQ3MzY0Nw=="}, "originalCommit": {"oid": "0420edd93c6180f187ab838990bcb3c383777b83"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzNzUyNzA3OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/org/apache/calcite/adapter/enumerable/RexImpTable.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQwOTozOTo1MFrOGx2YcA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxNzozMzo0MVrOGyIeGw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDkyNDQwMA==", "bodyText": "Is there any special reason we must use a list here to keep the translatedOperands ?", "url": "https://github.com/apache/calcite/pull/1981#discussion_r454924400", "createdAt": "2020-07-15T09:39:50Z", "author": {"login": "danny0405"}, "path": "core/src/main/java/org/apache/calcite/adapter/enumerable/RexImpTable.java", "diffHunk": "@@ -3406,9 +3406,22 @@ abstract Expression implementSafe(RexToLixTranslator translator,\n       translatedOperands.add(wmColExpr);\n       translatedOperands.add(intervalExpression);\n \n-      return Expressions.call(BuiltInMethod.TUMBLING.method, inputEnumerable,\n-          EnumUtils.tumblingWindowSelector(inputPhysType, outputPhysType,\n-              translatedOperands.get(0), translatedOperands.get(1)));\n+      // handle the optional offset parameter. Use 0 for the default value when offset\n+      // parameter is not set.\n+      final Expression offsetExpr = call.getOperands().size() > 2\n+          ? translator.translate(call.getOperands().get(2))\n+          : Expressions.constant(0, long.class);\n+      translatedOperands.add(offsetExpr);\n+\n+      return Expressions.call(\n+          BuiltInMethod.TUMBLING.method,\n+          inputEnumerable,\n+          EnumUtils.tumblingWindowSelector(\n+              inputPhysType,\n+              outputPhysType,\n+              translatedOperands.get(0),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "542ea9a71b5e801006ef1b084d73ecc0f89eade2"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTIwNjQwNg==", "bodyText": "Ah I think translatedOperands might be easy to read. For example, it can be mapped to function signature. When I write such code, I tend to map parameters to offsets. WatermarkCol expression is the first parameter, then others. Maybe not everyone thinks in this way.\nI guess you are thinking why not directly use expressions? Either is fine to me.", "url": "https://github.com/apache/calcite/pull/1981#discussion_r455206406", "createdAt": "2020-07-15T17:15:13Z", "author": {"login": "amaliujia"}, "path": "core/src/main/java/org/apache/calcite/adapter/enumerable/RexImpTable.java", "diffHunk": "@@ -3406,9 +3406,22 @@ abstract Expression implementSafe(RexToLixTranslator translator,\n       translatedOperands.add(wmColExpr);\n       translatedOperands.add(intervalExpression);\n \n-      return Expressions.call(BuiltInMethod.TUMBLING.method, inputEnumerable,\n-          EnumUtils.tumblingWindowSelector(inputPhysType, outputPhysType,\n-              translatedOperands.get(0), translatedOperands.get(1)));\n+      // handle the optional offset parameter. Use 0 for the default value when offset\n+      // parameter is not set.\n+      final Expression offsetExpr = call.getOperands().size() > 2\n+          ? translator.translate(call.getOperands().get(2))\n+          : Expressions.constant(0, long.class);\n+      translatedOperands.add(offsetExpr);\n+\n+      return Expressions.call(\n+          BuiltInMethod.TUMBLING.method,\n+          inputEnumerable,\n+          EnumUtils.tumblingWindowSelector(\n+              inputPhysType,\n+              outputPhysType,\n+              translatedOperands.get(0),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDkyNDQwMA=="}, "originalCommit": {"oid": "542ea9a71b5e801006ef1b084d73ecc0f89eade2"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTIyMDc2Mw==", "bodyText": "OK I have updated to remove the list for all three functions.", "url": "https://github.com/apache/calcite/pull/1981#discussion_r455220763", "createdAt": "2020-07-15T17:33:41Z", "author": {"login": "amaliujia"}, "path": "core/src/main/java/org/apache/calcite/adapter/enumerable/RexImpTable.java", "diffHunk": "@@ -3406,9 +3406,22 @@ abstract Expression implementSafe(RexToLixTranslator translator,\n       translatedOperands.add(wmColExpr);\n       translatedOperands.add(intervalExpression);\n \n-      return Expressions.call(BuiltInMethod.TUMBLING.method, inputEnumerable,\n-          EnumUtils.tumblingWindowSelector(inputPhysType, outputPhysType,\n-              translatedOperands.get(0), translatedOperands.get(1)));\n+      // handle the optional offset parameter. Use 0 for the default value when offset\n+      // parameter is not set.\n+      final Expression offsetExpr = call.getOperands().size() > 2\n+          ? translator.translate(call.getOperands().get(2))\n+          : Expressions.constant(0, long.class);\n+      translatedOperands.add(offsetExpr);\n+\n+      return Expressions.call(\n+          BuiltInMethod.TUMBLING.method,\n+          inputEnumerable,\n+          EnumUtils.tumblingWindowSelector(\n+              inputPhysType,\n+              outputPhysType,\n+              translatedOperands.get(0),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDkyNDQwMA=="}, "originalCommit": {"oid": "542ea9a71b5e801006ef1b084d73ecc0f89eade2"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzNzU1MzAzOnYy", "diffSide": "RIGHT", "path": "site/_docs/reference.md", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQwOTo0Njo0N1rOGx2onA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxNzozMzo1OVrOGyIfXg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDkyODU0MA==", "bodyText": "I prefer to name the time to offset, which is more straight-forward.", "url": "https://github.com/apache/calcite/pull/1981#discussion_r454928540", "createdAt": "2020-07-15T09:46:47Z", "author": {"login": "danny0405"}, "path": "site/_docs/reference.md", "diffHunk": "@@ -1890,7 +1890,7 @@ on a timestamp column. Windows assigned could have overlapping so hopping someti\n \n | Operator syntax      | Description\n |:-------------------- |:-----------\n-| HOP(table, DESCRIPTOR(datetime), slide, size) | Indicates a hopping window for *datetime*, covering rows within the interval of *size*, shifting every *slide*.\n+| HOP(table, DESCRIPTOR(datetime), slide, size [, time ]) | Indicates a hopping window for *datetime*, covering rows within the interval of *size*, shifting every *slide* and optionally aligned at time.\n ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "542ea9a71b5e801006ef1b084d73ecc0f89eade2"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTIyMTA4Ng==", "bodyText": "Agreed. Done!", "url": "https://github.com/apache/calcite/pull/1981#discussion_r455221086", "createdAt": "2020-07-15T17:33:59Z", "author": {"login": "amaliujia"}, "path": "site/_docs/reference.md", "diffHunk": "@@ -1890,7 +1890,7 @@ on a timestamp column. Windows assigned could have overlapping so hopping someti\n \n | Operator syntax      | Description\n |:-------------------- |:-----------\n-| HOP(table, DESCRIPTOR(datetime), slide, size) | Indicates a hopping window for *datetime*, covering rows within the interval of *size*, shifting every *slide*.\n+| HOP(table, DESCRIPTOR(datetime), slide, size [, time ]) | Indicates a hopping window for *datetime*, covering rows within the interval of *size*, shifting every *slide* and optionally aligned at time.\n ", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDkyODU0MA=="}, "originalCommit": {"oid": "542ea9a71b5e801006ef1b084d73ecc0f89eade2"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzNzU1NzI0OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/org/apache/calcite/adapter/enumerable/EnumUtils.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQwOTo0Nzo1N1rOGx2rRQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQwOTo0Nzo1N1rOGx2rRQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDkyOTIyMQ==", "bodyText": "wmMillis  -> wmColExprToLong", "url": "https://github.com/apache/calcite/pull/1981#discussion_r454929221", "createdAt": "2020-07-15T09:47:57Z", "author": {"login": "danny0405"}, "path": "core/src/main/java/org/apache/calcite/adapter/enumerable/EnumUtils.java", "diffHunk": "@@ -786,28 +787,29 @@ static Expression tumblingWindowSelector(\n     final Expression wmColExprToLong = EnumUtils.convert(wmColExpr, long.class);\n     final Expression shiftExpr = Expressions.constant(1, long.class);\n \n-    // Find the fixed window for a timestamp given a window size and return the window start.\n-    // Fixed windows counts from timestamp 0.\n-    // wmMillis / intervalMillis * intervalMillis\n-    expressions.add(\n-        Expressions.multiply(\n-            Expressions.divide(\n+    // Find the fixed window for a timestamp given a window size and an offset, and return the\n+    // window start.\n+    // wmMillis - (wmColExprToLong + windowSizeMillis - offsetMillis) % windowSizeMillis\n+    Expression windowStartExpr = Expressions.subtract(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "542ea9a71b5e801006ef1b084d73ecc0f89eade2"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzNzU2NTQ5OnYy", "diffSide": "RIGHT", "path": "core/src/test/resources/sql/stream.iq", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQwOTo1MDoxMFrOGx2wRg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQwMjo1MzoyMFrOGyYONg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDkzMDUwMg==", "bodyText": "Can we try to add cases for join two window stream ?", "url": "https://github.com/apache/calcite/pull/1981#discussion_r454930502", "createdAt": "2020-07-15T09:50:10Z", "author": {"login": "danny0405"}, "path": "core/src/test/resources/sql/stream.iq", "diffHunk": "@@ -64,6 +78,25 @@ SELECT * FROM TABLE(HOP(TABLE ORDERS, DESCRIPTOR(ROWTIME), INTERVAL '5' MINUTE,\n \n !ok\n \n+SELECT * FROM TABLE(HOP(TABLE ORDERS, DESCRIPTOR(ROWTIME), INTERVAL '5' MINUTE, INTERVAL '10' MINUTE, INTERVAL '2' MINUTE));\n++---------------------+----+---------+-------+---------------------+---------------------+\n+| ROWTIME             | ID | PRODUCT | UNITS | window_start        | window_end          |\n++---------------------+----+---------+-------+---------------------+---------------------+\n+| 2015-02-15 10:15:00 |  1 | paint   |    10 | 2015-02-15 10:07:00 | 2015-02-15 10:17:00 |\n+| 2015-02-15 10:15:00 |  1 | paint   |    10 | 2015-02-15 10:12:00 | 2015-02-15 10:22:00 |\n+| 2015-02-15 10:24:15 |  2 | paper   |     5 | 2015-02-15 10:17:00 | 2015-02-15 10:27:00 |\n+| 2015-02-15 10:24:15 |  2 | paper   |     5 | 2015-02-15 10:22:00 | 2015-02-15 10:32:00 |\n+| 2015-02-15 10:24:45 |  3 | brush   |    12 | 2015-02-15 10:17:00 | 2015-02-15 10:27:00 |\n+| 2015-02-15 10:24:45 |  3 | brush   |    12 | 2015-02-15 10:22:00 | 2015-02-15 10:32:00 |\n+| 2015-02-15 10:58:00 |  4 | paint   |     3 | 2015-02-15 10:52:00 | 2015-02-15 11:02:00 |\n+| 2015-02-15 10:58:00 |  4 | paint   |     3 | 2015-02-15 10:57:00 | 2015-02-15 11:07:00 |\n+| 2015-02-15 11:10:00 |  5 | paint   |     3 | 2015-02-15 11:02:00 | 2015-02-15 11:12:00 |", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "542ea9a71b5e801006ef1b084d73ecc0f89eade2"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTIxMjUyNg==", "bodyText": "I see. I would prefer to leave that work for another PR because Join still has some areas that need a clarification.\nJoin windowed streams will need more thoughts. For example, can a TUMBLE stream join HOP stream? It might make sense if there is a use case that intends to do such join, but such case might be rare. So we could end up with validating and rejecting some Join cases. And if we plan to add more constraints, then multi-way join will also become a case that need special handling because join reordering might lead to an illegal join plan (depends on the rules of allowed windowed joins though).\nI feel like it would be better to promote stream to the first class citizen in Calcite then in rule matching we should consider different joins: table join table, steam join table and stream join stream, and then join involves streams might need to consider different optimization factors. e.g. estimated biggest window size? number events per second? etc.\nAnyway, what I want to say is Join is a big area that can be discussed and implemented separately.", "url": "https://github.com/apache/calcite/pull/1981#discussion_r455212526", "createdAt": "2020-07-15T17:24:30Z", "author": {"login": "amaliujia"}, "path": "core/src/test/resources/sql/stream.iq", "diffHunk": "@@ -64,6 +78,25 @@ SELECT * FROM TABLE(HOP(TABLE ORDERS, DESCRIPTOR(ROWTIME), INTERVAL '5' MINUTE,\n \n !ok\n \n+SELECT * FROM TABLE(HOP(TABLE ORDERS, DESCRIPTOR(ROWTIME), INTERVAL '5' MINUTE, INTERVAL '10' MINUTE, INTERVAL '2' MINUTE));\n++---------------------+----+---------+-------+---------------------+---------------------+\n+| ROWTIME             | ID | PRODUCT | UNITS | window_start        | window_end          |\n++---------------------+----+---------+-------+---------------------+---------------------+\n+| 2015-02-15 10:15:00 |  1 | paint   |    10 | 2015-02-15 10:07:00 | 2015-02-15 10:17:00 |\n+| 2015-02-15 10:15:00 |  1 | paint   |    10 | 2015-02-15 10:12:00 | 2015-02-15 10:22:00 |\n+| 2015-02-15 10:24:15 |  2 | paper   |     5 | 2015-02-15 10:17:00 | 2015-02-15 10:27:00 |\n+| 2015-02-15 10:24:15 |  2 | paper   |     5 | 2015-02-15 10:22:00 | 2015-02-15 10:32:00 |\n+| 2015-02-15 10:24:45 |  3 | brush   |    12 | 2015-02-15 10:17:00 | 2015-02-15 10:27:00 |\n+| 2015-02-15 10:24:45 |  3 | brush   |    12 | 2015-02-15 10:22:00 | 2015-02-15 10:32:00 |\n+| 2015-02-15 10:58:00 |  4 | paint   |     3 | 2015-02-15 10:52:00 | 2015-02-15 11:02:00 |\n+| 2015-02-15 10:58:00 |  4 | paint   |     3 | 2015-02-15 10:57:00 | 2015-02-15 11:07:00 |\n+| 2015-02-15 11:10:00 |  5 | paint   |     3 | 2015-02-15 11:02:00 | 2015-02-15 11:12:00 |", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDkzMDUwMg=="}, "originalCommit": {"oid": "542ea9a71b5e801006ef1b084d73ecc0f89eade2"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTQ2MzQyMg==", "bodyText": "Fine, then please log an issue there ~", "url": "https://github.com/apache/calcite/pull/1981#discussion_r455463422", "createdAt": "2020-07-16T01:54:49Z", "author": {"login": "danny0405"}, "path": "core/src/test/resources/sql/stream.iq", "diffHunk": "@@ -64,6 +78,25 @@ SELECT * FROM TABLE(HOP(TABLE ORDERS, DESCRIPTOR(ROWTIME), INTERVAL '5' MINUTE,\n \n !ok\n \n+SELECT * FROM TABLE(HOP(TABLE ORDERS, DESCRIPTOR(ROWTIME), INTERVAL '5' MINUTE, INTERVAL '10' MINUTE, INTERVAL '2' MINUTE));\n++---------------------+----+---------+-------+---------------------+---------------------+\n+| ROWTIME             | ID | PRODUCT | UNITS | window_start        | window_end          |\n++---------------------+----+---------+-------+---------------------+---------------------+\n+| 2015-02-15 10:15:00 |  1 | paint   |    10 | 2015-02-15 10:07:00 | 2015-02-15 10:17:00 |\n+| 2015-02-15 10:15:00 |  1 | paint   |    10 | 2015-02-15 10:12:00 | 2015-02-15 10:22:00 |\n+| 2015-02-15 10:24:15 |  2 | paper   |     5 | 2015-02-15 10:17:00 | 2015-02-15 10:27:00 |\n+| 2015-02-15 10:24:15 |  2 | paper   |     5 | 2015-02-15 10:22:00 | 2015-02-15 10:32:00 |\n+| 2015-02-15 10:24:45 |  3 | brush   |    12 | 2015-02-15 10:17:00 | 2015-02-15 10:27:00 |\n+| 2015-02-15 10:24:45 |  3 | brush   |    12 | 2015-02-15 10:22:00 | 2015-02-15 10:32:00 |\n+| 2015-02-15 10:58:00 |  4 | paint   |     3 | 2015-02-15 10:52:00 | 2015-02-15 11:02:00 |\n+| 2015-02-15 10:58:00 |  4 | paint   |     3 | 2015-02-15 10:57:00 | 2015-02-15 11:07:00 |\n+| 2015-02-15 11:10:00 |  5 | paint   |     3 | 2015-02-15 11:02:00 | 2015-02-15 11:12:00 |", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDkzMDUwMg=="}, "originalCommit": {"oid": "542ea9a71b5e801006ef1b084d73ecc0f89eade2"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTQ3ODgzOA==", "bodyText": "Thanks! Logged https://issues.apache.org/jira/browse/CALCITE-4125", "url": "https://github.com/apache/calcite/pull/1981#discussion_r455478838", "createdAt": "2020-07-16T02:53:20Z", "author": {"login": "amaliujia"}, "path": "core/src/test/resources/sql/stream.iq", "diffHunk": "@@ -64,6 +78,25 @@ SELECT * FROM TABLE(HOP(TABLE ORDERS, DESCRIPTOR(ROWTIME), INTERVAL '5' MINUTE,\n \n !ok\n \n+SELECT * FROM TABLE(HOP(TABLE ORDERS, DESCRIPTOR(ROWTIME), INTERVAL '5' MINUTE, INTERVAL '10' MINUTE, INTERVAL '2' MINUTE));\n++---------------------+----+---------+-------+---------------------+---------------------+\n+| ROWTIME             | ID | PRODUCT | UNITS | window_start        | window_end          |\n++---------------------+----+---------+-------+---------------------+---------------------+\n+| 2015-02-15 10:15:00 |  1 | paint   |    10 | 2015-02-15 10:07:00 | 2015-02-15 10:17:00 |\n+| 2015-02-15 10:15:00 |  1 | paint   |    10 | 2015-02-15 10:12:00 | 2015-02-15 10:22:00 |\n+| 2015-02-15 10:24:15 |  2 | paper   |     5 | 2015-02-15 10:17:00 | 2015-02-15 10:27:00 |\n+| 2015-02-15 10:24:15 |  2 | paper   |     5 | 2015-02-15 10:22:00 | 2015-02-15 10:32:00 |\n+| 2015-02-15 10:24:45 |  3 | brush   |    12 | 2015-02-15 10:17:00 | 2015-02-15 10:27:00 |\n+| 2015-02-15 10:24:45 |  3 | brush   |    12 | 2015-02-15 10:22:00 | 2015-02-15 10:32:00 |\n+| 2015-02-15 10:58:00 |  4 | paint   |     3 | 2015-02-15 10:52:00 | 2015-02-15 11:02:00 |\n+| 2015-02-15 10:58:00 |  4 | paint   |     3 | 2015-02-15 10:57:00 | 2015-02-15 11:07:00 |\n+| 2015-02-15 11:10:00 |  5 | paint   |     3 | 2015-02-15 11:02:00 | 2015-02-15 11:12:00 |", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDkzMDUwMg=="}, "originalCommit": {"oid": "542ea9a71b5e801006ef1b084d73ecc0f89eade2"}, "originalPosition": 37}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 148, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}