{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE1Nzk4NDMz", "number": 2245, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQwOToyMjo1NVrOE1kVng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQwOToxMDo0OVrOE2ANeg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI0NjA1MzQyOnYy", "diffSide": "RIGHT", "path": "site/_docs/adapter.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQwOToyMjo1NVrOHt6UeA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxNDowOTowNVrOHuE8UA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzkwMzQ4MA==", "bodyText": "Shouldn't we change the second part of the sentence too?\nyou probably need to write you a *user-defined operator*\n=>\nyou probably need to write a *user-defined operator*", "url": "https://github.com/apache/calcite/pull/2245#discussion_r517903480", "createdAt": "2020-11-05T09:22:55Z", "author": {"login": "rubenada"}, "path": "site/_docs/adapter.md", "diffHunk": "@@ -236,7 +236,7 @@ They are straightforward to write (you just write a Java class and register it\n in your schema) but do not offer much flexibility in the number and type of\n arguments, resolving overloaded functions, or deriving the return type.\n \n-It you want that flexibility, you probably need to write you a\n+If you want that flexibility, you probably need to write you a", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2b934ab04510cba8e745df24f21267085a8503a1"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODA3NzUyMA==", "bodyText": "Right.", "url": "https://github.com/apache/calcite/pull/2245#discussion_r518077520", "createdAt": "2020-11-05T14:09:05Z", "author": null, "path": "site/_docs/adapter.md", "diffHunk": "@@ -236,7 +236,7 @@ They are straightforward to write (you just write a Java class and register it\n in your schema) but do not offer much flexibility in the number and type of\n arguments, resolving overloaded functions, or deriving the return type.\n \n-It you want that flexibility, you probably need to write you a\n+If you want that flexibility, you probably need to write you a", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzkwMzQ4MA=="}, "originalCommit": {"oid": "2b934ab04510cba8e745df24f21267085a8503a1"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI1MDYyMDEwOnYy", "diffSide": "RIGHT", "path": "site/_docs/algebra.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQwOToxMDo0OVrOHulyUQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQwOTo1Mzo1NlrOHunTww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODYxNTYzMw==", "bodyText": "minor remark: I think the original one (in singular) was arguably more accurate, since the cost model is a single one in the whole process (as described in the previous paragraph). So, I'd lean towards leaving this sentence as it was.", "url": "https://github.com/apache/calcite/pull/2245#discussion_r518615633", "createdAt": "2020-11-06T09:10:49Z", "author": {"login": "rubenada"}, "path": "site/_docs/algebra.md", "diffHunk": "@@ -37,7 +37,7 @@ planner engine generates an alternative expression that has the same\n semantics as the original but a lower cost.\n \n The planning process is extensible. You can add your own relational\n-operators, planner rules, cost model, and statistics.\n+operators, planner rules, cost models, and statistics.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "968cf6c29340ccc302bd3f0507436252fdae49c2"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODY0MDU3OQ==", "bodyText": "Reverted back. 8295c06", "url": "https://github.com/apache/calcite/pull/2245#discussion_r518640579", "createdAt": "2020-11-06T09:53:56Z", "author": null, "path": "site/_docs/algebra.md", "diffHunk": "@@ -37,7 +37,7 @@ planner engine generates an alternative expression that has the same\n semantics as the original but a lower cost.\n \n The planning process is extensible. You can add your own relational\n-operators, planner rules, cost model, and statistics.\n+operators, planner rules, cost models, and statistics.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODYxNTYzMw=="}, "originalCommit": {"oid": "968cf6c29340ccc302bd3f0507436252fdae49c2"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 78, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}