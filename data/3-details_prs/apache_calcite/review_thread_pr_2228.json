{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA3MjA2NjQw", "number": 2228, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQwMzozMDowM1rOEwDrGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QwMzo0MTowOFrOExBTkA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4ODI3MjkxOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/org/apache/calcite/sql2rel/RelDecorrelator.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQwMzozMDowM1rOHlY64w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQwNDoxMTo1NlrOHlZkKw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODk2NzY1MQ==", "bodyText": "It may be more efficient to replace this with !getPostDecorrelateRules().isEmpty()", "url": "https://github.com/apache/calcite/pull/2228#discussion_r508967651", "createdAt": "2020-10-21T03:30:03Z", "author": {"login": "liyafan82"}, "path": "core/src/main/java/org/apache/calcite/sql2rel/RelDecorrelator.java", "diffHunk": "@@ -280,16 +285,19 @@ protected RelNode decorrelate(RelNode root) {\n     final Frame frame = getInvoke(root, null);\n     if (frame != null) {\n       // has been rewritten; apply rules post-decorrelation\n-      final HepProgram program2 = HepProgram.builder()\n+      final HepProgramBuilder builder = HepProgram.builder()\n           .addRuleInstance(\n               CoreRules.FILTER_INTO_JOIN.config\n                   .withRelBuilderFactory(f)\n                   .toRule())\n           .addRuleInstance(\n               CoreRules.JOIN_CONDITION_PUSH.config\n                   .withRelBuilderFactory(f)\n-                  .toRule())\n-          .build();\n+                  .toRule());\n+      if (getPostDecorrelateRules().size() > 0) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0c540c21796a216df7dc55005ae5a2c66042ebbd"}, "originalPosition": 74}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODk3MzA3Mw==", "bodyText": "Which kind of list has a more efficient impl ?", "url": "https://github.com/apache/calcite/pull/2228#discussion_r508973073", "createdAt": "2020-10-21T03:50:49Z", "author": {"login": "danny0405"}, "path": "core/src/main/java/org/apache/calcite/sql2rel/RelDecorrelator.java", "diffHunk": "@@ -280,16 +285,19 @@ protected RelNode decorrelate(RelNode root) {\n     final Frame frame = getInvoke(root, null);\n     if (frame != null) {\n       // has been rewritten; apply rules post-decorrelation\n-      final HepProgram program2 = HepProgram.builder()\n+      final HepProgramBuilder builder = HepProgram.builder()\n           .addRuleInstance(\n               CoreRules.FILTER_INTO_JOIN.config\n                   .withRelBuilderFactory(f)\n                   .toRule())\n           .addRuleInstance(\n               CoreRules.JOIN_CONDITION_PUSH.config\n                   .withRelBuilderFactory(f)\n-                  .toRule())\n-          .build();\n+                  .toRule());\n+      if (getPostDecorrelateRules().size() > 0) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODk2NzY1MQ=="}, "originalCommit": {"oid": "0c540c21796a216df7dc55005ae5a2c66042ebbd"}, "originalPosition": 74}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODk3ODIxOQ==", "bodyText": "For example, ArrayList has O(1) time complexity for size() operation. However, the time complexity for org.apache.calcite.runtime.ConsList is O(n).", "url": "https://github.com/apache/calcite/pull/2228#discussion_r508978219", "createdAt": "2020-10-21T04:11:56Z", "author": {"login": "liyafan82"}, "path": "core/src/main/java/org/apache/calcite/sql2rel/RelDecorrelator.java", "diffHunk": "@@ -280,16 +285,19 @@ protected RelNode decorrelate(RelNode root) {\n     final Frame frame = getInvoke(root, null);\n     if (frame != null) {\n       // has been rewritten; apply rules post-decorrelation\n-      final HepProgram program2 = HepProgram.builder()\n+      final HepProgramBuilder builder = HepProgram.builder()\n           .addRuleInstance(\n               CoreRules.FILTER_INTO_JOIN.config\n                   .withRelBuilderFactory(f)\n                   .toRule())\n           .addRuleInstance(\n               CoreRules.JOIN_CONDITION_PUSH.config\n                   .withRelBuilderFactory(f)\n-                  .toRule())\n-          .build();\n+                  .toRule());\n+      if (getPostDecorrelateRules().size() > 0) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODk2NzY1MQ=="}, "originalCommit": {"oid": "0c540c21796a216df7dc55005ae5a2c66042ebbd"}, "originalPosition": 74}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4ODI3Mzc5OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/org/apache/calcite/sql2rel/RelDecorrelator.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQwMzozMDoyOFrOHlY7aQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQwMzozMDoyOFrOHlY7aQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODk2Nzc4NQ==", "bodyText": "this class -> this object", "url": "https://github.com/apache/calcite/pull/2228#discussion_r508967785", "createdAt": "2020-10-21T03:30:28Z", "author": {"login": "liyafan82"}, "path": "core/src/main/java/org/apache/calcite/sql2rel/RelDecorrelator.java", "diffHunk": "@@ -2962,4 +2970,23 @@ assert allLessThan(this.oldToNewOutputs.values(),\n     /** Sets {@link #decorrelator}. */\n     Config withDecorrelator(RelDecorrelator decorrelator);\n   }\n+\n+  // -------------------------------------------------------------------------\n+  //  Getter/Setter\n+  // -------------------------------------------------------------------------\n+\n+  /**\n+   * Returns the {@code visitor} on which the {@code MethodDispatcher} dispatches\n+   * each {@code decorrelateRel} method, the default implementation returns this class,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0c540c21796a216df7dc55005ae5a2c66042ebbd"}, "originalPosition": 92}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE5ODM3MDcyOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/org/apache/calcite/sql2rel/RelDecorrelator.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QwMzo0MTowOFrOHm7GxQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QwMzo0MjowNlrOHm7HoA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDU3NjMyNQ==", "bodyText": "Do we want to consider annotating it with \"@NotNull\"?", "url": "https://github.com/apache/calcite/pull/2228#discussion_r510576325", "createdAt": "2020-10-23T03:41:08Z", "author": {"login": "liyafan82"}, "path": "core/src/main/java/org/apache/calcite/sql2rel/RelDecorrelator.java", "diffHunk": "@@ -2962,4 +2970,23 @@ assert allLessThan(this.oldToNewOutputs.values(),\n     /** Sets {@link #decorrelator}. */\n     Config withDecorrelator(RelDecorrelator decorrelator);\n   }\n+\n+  // -------------------------------------------------------------------------\n+  //  Getter/Setter\n+  // -------------------------------------------------------------------------\n+\n+  /**\n+   * Returns the {@code visitor} on which the {@code MethodDispatcher} dispatches\n+   * each {@code decorrelateRel} method, the default implementation returns this instance,\n+   * if you got a sub-class, override this method to replace the {@code visitor} as the\n+   * sub-class instance.\n+   */\n+  protected RelDecorrelator getVisitor() {\n+    return this;\n+  }\n+\n+  /** Returns the rules applied on the rel after decorrelation, never null. */\n+  protected Collection<RelOptRule> getPostDecorrelateRules() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7893542b606c78f98fcd3737c8c6599436080911"}, "originalPosition": 101}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDU3NjU0NA==", "bodyText": "No, because @NotNull should be the default.", "url": "https://github.com/apache/calcite/pull/2228#discussion_r510576544", "createdAt": "2020-10-23T03:42:06Z", "author": {"login": "danny0405"}, "path": "core/src/main/java/org/apache/calcite/sql2rel/RelDecorrelator.java", "diffHunk": "@@ -2962,4 +2970,23 @@ assert allLessThan(this.oldToNewOutputs.values(),\n     /** Sets {@link #decorrelator}. */\n     Config withDecorrelator(RelDecorrelator decorrelator);\n   }\n+\n+  // -------------------------------------------------------------------------\n+  //  Getter/Setter\n+  // -------------------------------------------------------------------------\n+\n+  /**\n+   * Returns the {@code visitor} on which the {@code MethodDispatcher} dispatches\n+   * each {@code decorrelateRel} method, the default implementation returns this instance,\n+   * if you got a sub-class, override this method to replace the {@code visitor} as the\n+   * sub-class instance.\n+   */\n+  protected RelDecorrelator getVisitor() {\n+    return this;\n+  }\n+\n+  /** Returns the rules applied on the rel after decorrelation, never null. */\n+  protected Collection<RelOptRule> getPostDecorrelateRules() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDU3NjMyNQ=="}, "originalCommit": {"oid": "7893542b606c78f98fcd3737c8c6599436080911"}, "originalPosition": 101}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 63, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}