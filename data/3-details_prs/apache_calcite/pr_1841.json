{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgyMjA4OTA0", "number": 1841, "title": "Following CALCITE-3769: Add BindableTableScanRule into the default ru\u2026", "bodyText": "\u2026leset\n\nAdd BindableTableScanRule into the default ruleset, so there are 2\ntable implementations, the planner would choose the one with cheaper\ncost\nFix the cost estimation of BindableTableScan if there are no pushings\nAllows the Scannable table to have the EnumerableTableScan as impl", "createdAt": "2020-03-02T06:58:25Z", "url": "https://github.com/apache/calcite/pull/1841", "merged": true, "mergeCommit": {"oid": "2f1b4a911f15ce178374b605a2291a4336648dde"}, "closed": true, "closedAt": "2020-03-02T10:59:34Z", "author": {"login": "danny0405"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcJoQK-ABqjMwODY2NTQ0ODg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcJrR7XAFqTM2NzA5NTEyNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "de0593aede747b5fdd0c3ed81b70dac800ced4dd", "author": {"user": {"login": "danny0405", "name": "Danny Chan"}}, "url": "https://github.com/apache/calcite/commit/de0593aede747b5fdd0c3ed81b70dac800ced4dd", "committedDate": "2020-03-02T06:54:33Z", "message": "Following CALCITE-3769: Add BindableTableScanRule into the default ruleset\n\n* Add BindableTableScanRule into the default ruleset, so there are 2\ntable implementations, the planner would choose the one with cheaper\ncost\n* Fix the cost estimation of BindableTableScan if there are no pushings\n* Allows the Scannable table to have the EnumerableTableScan as impl"}, "afterCommit": {"oid": "f4fd221c6b6f6322b1c07796b3e7d6acea8aba11", "author": {"user": {"login": "danny0405", "name": "Danny Chan"}}, "url": "https://github.com/apache/calcite/commit/f4fd221c6b6f6322b1c07796b3e7d6acea8aba11", "committedDate": "2020-03-02T07:04:59Z", "message": "Following CALCITE-3769: Add BindableTableScanRule into the default ruleset\n\n* Add BindableTableScanRule into the default ruleset, so there are 2\ntable implementations, the planner would choose the one with cheaper\ncost\n* Fix the cost estimation of BindableTableScan if there are no pushings\n* Allows the Scannable table to have the EnumerableTableScan as impl"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY2OTg1MjY5", "url": "https://github.com/apache/calcite/pull/1841#pullrequestreview-366985269", "createdAt": "2020-03-02T07:12:26Z", "commit": {"oid": "f4fd221c6b6f6322b1c07796b3e7d6acea8aba11"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQwNzoxMjoyNlrOFwVXWg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQwNzoxMjoyNlrOFwVXWg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjIyNjAxMA==", "bodyText": "Is this indentation change required?", "url": "https://github.com/apache/calcite/pull/1841#discussion_r386226010", "createdAt": "2020-03-02T07:12:26Z", "author": {"login": "vlsi"}, "path": "core/src/test/java/org/apache/calcite/test/StreamTest.java", "diffHunk": "@@ -286,12 +286,11 @@ private static String schemaFor(String name, Class<? extends TableFactory> clazz\n             + \"      LogicalTableScan(table=[[STREAM_JOINS, PRODUCTS]])\\n\")\n         .explainContains(\"\"\n             + \"EnumerableCalc(expr#0..6=[{inputs}], proj#0..1=[{exprs}], SUPPLIERID=[$t6])\\n\"\n-            + \"  EnumerableHashJoin(condition=[=($4, $5)], joinType=[inner])\\n\"\n-            + \"    EnumerableCalc(expr#0..3=[{inputs}], expr#4=[CAST($t2):VARCHAR(32) NOT NULL], proj#0..4=[{exprs}])\\n\"\n-            + \"      EnumerableInterpreter\\n\"\n-            + \"        BindableTableScan(table=[[STREAM_JOINS, ORDERS, (STREAM)]])\\n\"\n-            + \"    EnumerableInterpreter\\n\"\n-            + \"      BindableTableScan(table=[[STREAM_JOINS, PRODUCTS]])\")\n+                + \"  EnumerableHashJoin(condition=[=($4, $5)], joinType=[inner])\\n\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f4fd221c6b6f6322b1c07796b3e7d6acea8aba11"}, "originalPosition": 10}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f4fd221c6b6f6322b1c07796b3e7d6acea8aba11", "author": {"user": {"login": "danny0405", "name": "Danny Chan"}}, "url": "https://github.com/apache/calcite/commit/f4fd221c6b6f6322b1c07796b3e7d6acea8aba11", "committedDate": "2020-03-02T07:04:59Z", "message": "Following CALCITE-3769: Add BindableTableScanRule into the default ruleset\n\n* Add BindableTableScanRule into the default ruleset, so there are 2\ntable implementations, the planner would choose the one with cheaper\ncost\n* Fix the cost estimation of BindableTableScan if there are no pushings\n* Allows the Scannable table to have the EnumerableTableScan as impl"}, "afterCommit": {"oid": "7cb4f44e291386430ca41972e57470d67f7c8fe2", "author": {"user": {"login": "danny0405", "name": "Danny Chan"}}, "url": "https://github.com/apache/calcite/commit/7cb4f44e291386430ca41972e57470d67f7c8fe2", "committedDate": "2020-03-02T07:41:21Z", "message": "Following CALCITE-3769: Add BindableTableScanRule into the default ruleset\n\n* Add BindableTableScanRule into the default ruleset, so there are 2\ntable implementations, the planner would choose the one with cheaper\ncost\n* Fix the cost estimation of BindableTableScan if there are no pushings\n* Allows the Scannable table to have the EnumerableTableScan as impl"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "656896ca9a28b5649742d55eb2635e1f7a0f0499", "author": {"user": {"login": "danny0405", "name": "Danny Chan"}}, "url": "https://github.com/apache/calcite/commit/656896ca9a28b5649742d55eb2635e1f7a0f0499", "committedDate": "2020-03-02T10:13:47Z", "message": "Following CALCITE-3769: Add BindableTableScanRule into the default ruleset\n\n* Add BindableTableScanRule into the default ruleset, so there are 2\ntable implementations, the planner would choose the one with cheaper\ncost\n* Fix the cost estimation of BindableTableScan if there are no pushings\n* Allows the Scannable table to have the EnumerableTableScan as impl\n* For CsvTable and JsonTable in the example module, decoupling the logic\nof runtime from Table#getRowType, so that these tables can implement as\nENUMERABLE convention(when there are no pushings)"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7cb4f44e291386430ca41972e57470d67f7c8fe2", "author": {"user": {"login": "danny0405", "name": "Danny Chan"}}, "url": "https://github.com/apache/calcite/commit/7cb4f44e291386430ca41972e57470d67f7c8fe2", "committedDate": "2020-03-02T07:41:21Z", "message": "Following CALCITE-3769: Add BindableTableScanRule into the default ruleset\n\n* Add BindableTableScanRule into the default ruleset, so there are 2\ntable implementations, the planner would choose the one with cheaper\ncost\n* Fix the cost estimation of BindableTableScan if there are no pushings\n* Allows the Scannable table to have the EnumerableTableScan as impl"}, "afterCommit": {"oid": "656896ca9a28b5649742d55eb2635e1f7a0f0499", "author": {"user": {"login": "danny0405", "name": "Danny Chan"}}, "url": "https://github.com/apache/calcite/commit/656896ca9a28b5649742d55eb2635e1f7a0f0499", "committedDate": "2020-03-02T10:13:47Z", "message": "Following CALCITE-3769: Add BindableTableScanRule into the default ruleset\n\n* Add BindableTableScanRule into the default ruleset, so there are 2\ntable implementations, the planner would choose the one with cheaper\ncost\n* Fix the cost estimation of BindableTableScan if there are no pushings\n* Allows the Scannable table to have the EnumerableTableScan as impl\n* For CsvTable and JsonTable in the example module, decoupling the logic\nof runtime from Table#getRowType, so that these tables can implement as\nENUMERABLE convention(when there are no pushings)"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY3MDk1MTI1", "url": "https://github.com/apache/calcite/pull/1841#pullrequestreview-367095125", "createdAt": "2020-03-02T10:33:19Z", "commit": {"oid": "7cb4f44e291386430ca41972e57470d67f7c8fe2"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQxMDozMzo1N1rOFwarHw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQxMDozMzo1N1rOFwarHw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjMxMjk5MQ==", "bodyText": "Instead of adding this code snippet, wouldn't be sufficient to just remove the factor 0.01d from the multiplier in line 253?", "url": "https://github.com/apache/calcite/pull/1841#discussion_r386312991", "createdAt": "2020-03-02T10:33:57Z", "author": {"login": "zabetak"}, "path": "core/src/main/java/org/apache/calcite/interpreter/Bindables.java", "diffHunk": "@@ -234,6 +234,11 @@ public static BindableTableScan create(RelOptCluster cluster,\n \n     @Override public RelOptCost computeSelfCost(RelOptPlanner planner,\n         RelMetadataQuery mq) {\n+      boolean noPushing = filters.isEmpty()\n+              && projects.size() == table.getRowType().getFieldCount();\n+      if (noPushing) {\n+        return super.computeSelfCost(planner, mq);\n+      }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "656896ca9a28b5649742d55eb2635e1f7a0f0499"}, "originalPosition": 8}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4332, "cost": 1, "resetAt": "2021-10-28T16:48:13Z"}}}