{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQxMDE5MTY1", "number": 2301, "title": "CALCITE-4434 fix cannot implement 'CASE row WHEN row...'", "bodyText": "rt", "createdAt": "2020-12-16T09:27:24Z", "url": "https://github.com/apache/calcite/pull/2301", "merged": true, "mergeCommit": {"oid": "9b272069091c649935c36a6bf26204b64b18ef44"}, "closed": true, "closedAt": "2020-12-28T22:22:27Z", "author": {"login": "zinking"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdmrewQAH2gAyNTQxMDE5MTY1OjM0NjJhOTExNWZmOWE5NGY1NmY4NTUzYzlkYmIxMmJiMDg0OTZmZTI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdpNxs5gFqTU1ODM2OTIyMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "3462a9115ff9a94f56f8553c9dbb12bb08496fe2", "author": {"user": {"login": "zinking", "name": "zhenw"}}, "url": "https://github.com/apache/calcite/commit/3462a9115ff9a94f56f8553c9dbb12bb08496fe2", "committedDate": "2020-12-16T09:25:52Z", "message": "CALCITE-4434 fix cannot implement 'CASE row WHEN row...'"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU4MzY4ODY5", "url": "https://github.com/apache/calcite/pull/2301#pullrequestreview-558368869", "createdAt": "2020-12-24T06:29:45Z", "commit": {"oid": "3462a9115ff9a94f56f8553c9dbb12bb08496fe2"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNFQwNjoyOTo0NlrOILAcFA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNFQwNjoyOTo0NlrOILAcFA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODQxMjQzNg==", "bodyText": "Can you give an example for CASE (deptno, job) WHEN (20, 'CLERK') THEN 1, what is the exprs.get(0) and exprs.get(1)?\nIs exprs.get(0) (deptno, job and  exprs.get(1) (20, 'CLERK')", "url": "https://github.com/apache/calcite/pull/2301#discussion_r548412436", "createdAt": "2020-12-24T06:29:46Z", "author": {"login": "amaliujia"}, "path": "core/src/main/java/org/apache/calcite/sql2rel/StandardConvertletTable.java", "diffHunk": "@@ -860,6 +861,29 @@ public RexNode convertCall(\n             : operandTypeChecker.getConsistency();\n     final List<RexNode> exprs = convertOperands(cx, call, consistency);\n     RelDataType type = rexBuilder.deriveReturnType(op, exprs);\n+\n+    //generate relation for `=(Row1,Row2)`\n+    if (op.kind == SqlKind.EQUALS) {\n+      RexNode expr0 = RexUtil.removeCast(exprs.get(0));\n+      RexNode expr1 = RexUtil.removeCast(exprs.get(1));\n+      SqlKind expr0Kind = expr0.getKind();\n+      SqlKind expr1Kind = expr1.getKind();\n+      if (expr0Kind == SqlKind.ROW && expr1Kind == SqlKind.ROW) {\n+        RexCall call0 = (RexCall) expr0;\n+        RexCall call1 = (RexCall) expr1;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3462a9115ff9a94f56f8553c9dbb12bb08496fe2"}, "originalPosition": 21}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU4MzY5MjIw", "url": "https://github.com/apache/calcite/pull/2301#pullrequestreview-558369220", "createdAt": "2020-12-24T06:31:11Z", "commit": {"oid": "3462a9115ff9a94f56f8553c9dbb12bb08496fe2"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNFQwNjozMToxMVrOILAgaw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNFQwNjozMToxMVrOILAgaw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODQxMzU0Nw==", "bodyText": "Actually why need to remove cast?", "url": "https://github.com/apache/calcite/pull/2301#discussion_r548413547", "createdAt": "2020-12-24T06:31:11Z", "author": {"login": "amaliujia"}, "path": "core/src/main/java/org/apache/calcite/sql2rel/StandardConvertletTable.java", "diffHunk": "@@ -860,6 +861,29 @@ public RexNode convertCall(\n             : operandTypeChecker.getConsistency();\n     final List<RexNode> exprs = convertOperands(cx, call, consistency);\n     RelDataType type = rexBuilder.deriveReturnType(op, exprs);\n+\n+    //generate relation for `=(Row1,Row2)`\n+    if (op.kind == SqlKind.EQUALS) {\n+      RexNode expr0 = RexUtil.removeCast(exprs.get(0));\n+      RexNode expr1 = RexUtil.removeCast(exprs.get(1));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3462a9115ff9a94f56f8553c9dbb12bb08496fe2"}, "originalPosition": 16}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2839, "cost": 1, "resetAt": "2021-10-28T16:48:13Z"}}}