{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzczMTYzOTE0", "number": 1794, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwNzo0MDo0NFrODfEudw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwNzo0MDo0NFrODfEudw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzOTA5ODc5OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/org/apache/calcite/plan/volcano/VolcanoRuleCall.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwNzo0MDo0NFrOFokSTg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QwMjoyNDo0NlrOFpFIYQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODA4MTg3MA==", "bodyText": "Should this be evaluated before the rule is added to the match queue?", "url": "https://github.com/apache/calcite/pull/1794#discussion_r378081870", "createdAt": "2020-02-12T07:40:44Z", "author": {"login": "vlsi"}, "path": "core/src/main/java/org/apache/calcite/plan/volcano/VolcanoRuleCall.java", "diffHunk": "@@ -160,6 +160,11 @@ protected void onMatch() {\n         return;\n       }\n \n+      if (isRuleExcluded()) {\n+        LOGGER.debug(\"Rule [{}] not fired due to exclusion hint\", getRule());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fd4a3f178e10c463f36ca737570965430f2cb690"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODYyMDAwMQ==", "bodyText": "It's hard to do that, because the operands can be matched from children to parent (ASENDING), for current implementation, i only want to match the root operand of the final match.", "url": "https://github.com/apache/calcite/pull/1794#discussion_r378620001", "createdAt": "2020-02-13T02:24:46Z", "author": {"login": "danny0405"}, "path": "core/src/main/java/org/apache/calcite/plan/volcano/VolcanoRuleCall.java", "diffHunk": "@@ -160,6 +160,11 @@ protected void onMatch() {\n         return;\n       }\n \n+      if (isRuleExcluded()) {\n+        LOGGER.debug(\"Rule [{}] not fired due to exclusion hint\", getRule());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODA4MTg3MA=="}, "originalCommit": {"oid": "fd4a3f178e10c463f36ca737570965430f2cb690"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 287, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}