{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMxNjExNDgy", "number": 2013, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQwOTo0OTo1MlrOEFABEg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wOS0xNFQwNTo0Njo1OVrOGuWfTQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczNjc4NjEwOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/org/apache/calcite/plan/SubstitutionVisitor.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQwOTo0OTo1MlrOGi-CWQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQwOTo0OTo1MlrOGi-CWQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTMyMTE3Nw==", "bodyText": "What if it's a right Join but with Calc as the left child ?\nIf above concern is valid, please add a corresponding test.", "url": "https://github.com/apache/calcite/pull/2013#discussion_r439321177", "createdAt": "2020-06-12T09:49:52Z", "author": {"login": "jinxing64"}, "path": "core/src/main/java/org/apache/calcite/plan/SubstitutionVisitor.java", "diffHunk": "@@ -1202,8 +1202,9 @@ private JoinOnLeftCalcToJoinUnifyRule() {\n       if (joinRelType == null) {\n         return null;\n       }\n-      if (joinRelType != JoinRelType.INNER\n-          && !(joinRelType.isOuterJoin() && qInput0Cond.isAlwaysTrue())) {\n+      // If JoinType is inner-join or out-join,\n+      // Calc which is bottom join can be pulled up.\n+      if (joinRelType != JoinRelType.INNER && !joinRelType.isOuterJoin()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "934beef56200258677b3404ba5dbaa4956fc3469"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4MjI4MDUwOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/org/apache/calcite/plan/SubstitutionVisitor.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yN1QxMTowOTowN1rOGp1B6w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wOC0zMVQxMTozNjo0N1rOKa2CmQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjUxMzY0Mw==", "bodyText": "we do not format like this", "url": "https://github.com/apache/calcite/pull/2013#discussion_r446513643", "createdAt": "2020-06-27T11:09:07Z", "author": {"login": "yanlin-Lynn"}, "path": "core/src/main/java/org/apache/calcite/plan/SubstitutionVisitor.java", "diffHunk": "@@ -2011,6 +2006,38 @@ public static boolean equalType(String desc0, MutableRel rel0, String desc1,\n     return RelOptUtil.equal(desc0, rel0.rowType, desc1, rel1.rowType, litmus);\n   }\n \n+  /**\n+   * Check filter bottom join can be pull-up,\n+   * when meeting JoinOnCalc of query unify to Join of target.\n+   * Such as {@link JoinOnLeftCalcToJoinUnifyRule} <br/>\n+   * {@link JoinOnRightCalcToJoinUnifyRule} <br/>\n+   * {@link JoinOnCalcsToJoinUnifyRule} <br/>\n+   */\n+  private static boolean canPullUpFilterBottomJoin(JoinRelType joinType,\n+                                                   RexNode leftFilterRexNode,\n+                                                   RexNode rightFilterRexNode) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e17d6487eb60f32c6fc33ef8097a2dfde0cda282"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5OTIzNzAxNw==", "bodyText": "ok, I format it.", "url": "https://github.com/apache/calcite/pull/2013#discussion_r699237017", "createdAt": "2021-08-31T11:36:47Z", "author": {"login": "wojustme"}, "path": "core/src/main/java/org/apache/calcite/plan/SubstitutionVisitor.java", "diffHunk": "@@ -2011,6 +2006,38 @@ public static boolean equalType(String desc0, MutableRel rel0, String desc1,\n     return RelOptUtil.equal(desc0, rel0.rowType, desc1, rel1.rowType, litmus);\n   }\n \n+  /**\n+   * Check filter bottom join can be pull-up,\n+   * when meeting JoinOnCalc of query unify to Join of target.\n+   * Such as {@link JoinOnLeftCalcToJoinUnifyRule} <br/>\n+   * {@link JoinOnRightCalcToJoinUnifyRule} <br/>\n+   * {@link JoinOnCalcsToJoinUnifyRule} <br/>\n+   */\n+  private static boolean canPullUpFilterBottomJoin(JoinRelType joinType,\n+                                                   RexNode leftFilterRexNode,\n+                                                   RexNode rightFilterRexNode) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjUxMzY0Mw=="}, "originalCommit": {"oid": "e17d6487eb60f32c6fc33ef8097a2dfde0cda282"}, "originalPosition": 53}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4MjI4MTg5OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/org/apache/calcite/plan/SubstitutionVisitor.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yN1QxMToxMTowOFrOGp1Chw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wOC0zMVQxMTozNjoxNVrOKa2A4g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjUxMzc5OQ==", "bodyText": "Check if filter under join can be pulled up", "url": "https://github.com/apache/calcite/pull/2013#discussion_r446513799", "createdAt": "2020-06-27T11:11:08Z", "author": {"login": "yanlin-Lynn"}, "path": "core/src/main/java/org/apache/calcite/plan/SubstitutionVisitor.java", "diffHunk": "@@ -2011,6 +2006,38 @@ public static boolean equalType(String desc0, MutableRel rel0, String desc1,\n     return RelOptUtil.equal(desc0, rel0.rowType, desc1, rel1.rowType, litmus);\n   }\n \n+  /**\n+   * Check filter bottom join can be pull-up,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e17d6487eb60f32c6fc33ef8097a2dfde0cda282"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5OTIzNjU3OA==", "bodyText": "ok, thanks for your remind.", "url": "https://github.com/apache/calcite/pull/2013#discussion_r699236578", "createdAt": "2021-08-31T11:36:15Z", "author": {"login": "wojustme"}, "path": "core/src/main/java/org/apache/calcite/plan/SubstitutionVisitor.java", "diffHunk": "@@ -2011,6 +2006,38 @@ public static boolean equalType(String desc0, MutableRel rel0, String desc1,\n     return RelOptUtil.equal(desc0, rel0.rowType, desc1, rel1.rowType, litmus);\n   }\n \n+  /**\n+   * Check filter bottom join can be pull-up,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjUxMzc5OQ=="}, "originalCommit": {"oid": "e17d6487eb60f32c6fc33ef8097a2dfde0cda282"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkNDUwNDgwNjA1OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/org/apache/calcite/plan/SubstitutionVisitor.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wOS0xMlQwNzowOToyMlrOKiCF-w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wOS0xMlQwNzowOToyMlrOKiCF-w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcwNjc3NDUyMw==", "bodyText": "You should refine this note.", "url": "https://github.com/apache/calcite/pull/2013#discussion_r706774523", "createdAt": "2021-09-12T07:09:22Z", "author": {"login": "yanlin-Lynn"}, "path": "core/src/main/java/org/apache/calcite/plan/SubstitutionVisitor.java", "diffHunk": "@@ -1388,16 +1388,11 @@ private JoinOnCalcsToJoinUnifyRule() {\n       final RexBuilder rexBuilder = call.getCluster().getRexBuilder();\n \n       // Try pulling up MutableCalc only when:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e13570ba745d6b808a63e70d8a5f9f7833b376e1"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkNDUwNDgwODg5OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/org/apache/calcite/plan/SubstitutionVisitor.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wOS0xMlQwNzoxMjoxNFrOKiCHSg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wOS0xMlQwNzoxMjoxNFrOKiCHSg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcwNjc3NDg1OA==", "bodyText": "Check if filter under join can be pulled up, keep the same with the note for this method.", "url": "https://github.com/apache/calcite/pull/2013#discussion_r706774858", "createdAt": "2021-09-12T07:12:14Z", "author": {"login": "yanlin-Lynn"}, "path": "core/src/main/java/org/apache/calcite/plan/SubstitutionVisitor.java", "diffHunk": "@@ -1303,8 +1303,8 @@ private JoinOnRightCalcToJoinUnifyRule() {\n       if (joinRelType == null) {\n         return null;\n       }\n-      if (joinRelType != JoinRelType.INNER\n-          && !(joinRelType.isOuterJoin() && qInput1Cond.isAlwaysTrue())) {\n+      // Check filter bottom join can be pulled up.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e13570ba745d6b808a63e70d8a5f9f7833b376e1"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkNDUwNDgxMzQ3OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/org/apache/calcite/plan/SubstitutionVisitor.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wOS0xMlQwNzoxNzoxNVrOKiCJcw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wOS0xMlQwNzoxNzoxNVrOKiCJcw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcwNjc3NTQxMQ==", "bodyText": "Suggest you write like this.\nif (joinType == JoinRelType.LEFT) && (rightFilterRexNode == null || rightFilterRexNode.isAlwaysTrue()) {\n  return true;\n}", "url": "https://github.com/apache/calcite/pull/2013#discussion_r706775411", "createdAt": "2021-09-12T07:17:15Z", "author": {"login": "yanlin-Lynn"}, "path": "core/src/main/java/org/apache/calcite/plan/SubstitutionVisitor.java", "diffHunk": "@@ -2083,6 +2078,38 @@ public static boolean equalType(String desc0, MutableRel rel0, String desc1,\n     return RelOptUtil.equal(desc0, rel0.rowType, desc1, rel1.rowType, litmus);\n   }\n \n+  /**\n+   * Check if filter under join can be pulled up,\n+   * when meeting JoinOnCalc of query unify to Join of target.\n+   * Such as {@link JoinOnLeftCalcToJoinUnifyRule} <br/>\n+   * {@link JoinOnRightCalcToJoinUnifyRule} <br/>\n+   * {@link JoinOnCalcsToJoinUnifyRule} <br/>\n+   */\n+  private static boolean canPullUpFilterUnderJoin(JoinRelType joinType,\n+                                                  @Nullable RexNode leftFilterRexNode,\n+                                                  @Nullable RexNode rightFilterRexNode) {\n+    if (joinType == JoinRelType.INNER) {\n+      return true;\n+    }\n+    if (joinType == JoinRelType.LEFT) {\n+      if (rightFilterRexNode == null || rightFilterRexNode.isAlwaysTrue()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e13570ba745d6b808a63e70d8a5f9f7833b376e1"}, "originalPosition": 58}]}}, {"id": "PRRT_kwDOAUNjNM4a5Z9N", "diffSide": "RIGHT", "path": "core/src/main/java/org/apache/calcite/plan/SubstitutionVisitor.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wOS0xNFQwNTo0Njo1OVrOKjIlyA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wOS0xNlQwODoxNzowNVrOKlAY1Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "PRRC_kwDOAUNjNM4qMiXI", "bodyText": "fix this indentation please.", "url": "https://github.com/apache/calcite/pull/2013#discussion_r707929544", "createdAt": "2021-09-14T05:46:59Z", "author": {"login": "yanlin-Lynn"}, "path": "core/src/main/java/org/apache/calcite/plan/SubstitutionVisitor.java", "diffHunk": "@@ -2083,6 +2075,35 @@ public static boolean equalType(String desc0, MutableRel rel0, String desc1,\n     return RelOptUtil.equal(desc0, rel0.rowType, desc1, rel1.rowType, litmus);\n   }\n \n+  /**\n+   * Check if filter under join can be pulled up,\n+   * when meeting JoinOnCalc of query unify to Join of target.\n+   * Such as {@link JoinOnLeftCalcToJoinUnifyRule} <br/>\n+   * {@link JoinOnRightCalcToJoinUnifyRule} <br/>\n+   * {@link JoinOnCalcsToJoinUnifyRule} <br/>\n+   */\n+  private static boolean canPullUpFilterUnderJoin(JoinRelType joinType,\n+                                                  @Nullable RexNode leftFilterRexNode,\n+                                                  @Nullable RexNode rightFilterRexNode) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "568025202ccd5da20a95c49e4388f8ff6a46982f"}, "originalPosition": 72}, {"id": "PRRC_kwDOAUNjNM4qUBjV", "bodyText": "@yanlin-Lynn\nThanks for reminding.\nPlease review again.", "url": "https://github.com/apache/calcite/pull/2013#discussion_r709892309", "createdAt": "2021-09-16T08:17:05Z", "author": {"login": "wojustme"}, "path": "core/src/main/java/org/apache/calcite/plan/SubstitutionVisitor.java", "diffHunk": "@@ -2083,6 +2075,35 @@ public static boolean equalType(String desc0, MutableRel rel0, String desc1,\n     return RelOptUtil.equal(desc0, rel0.rowType, desc1, rel1.rowType, litmus);\n   }\n \n+  /**\n+   * Check if filter under join can be pulled up,\n+   * when meeting JoinOnCalc of query unify to Join of target.\n+   * Such as {@link JoinOnLeftCalcToJoinUnifyRule} <br/>\n+   * {@link JoinOnRightCalcToJoinUnifyRule} <br/>\n+   * {@link JoinOnCalcsToJoinUnifyRule} <br/>\n+   */\n+  private static boolean canPullUpFilterUnderJoin(JoinRelType joinType,\n+                                                  @Nullable RexNode leftFilterRexNode,\n+                                                  @Nullable RexNode rightFilterRexNode) {", "state": "SUBMITTED", "replyTo": {"id": "PRRC_kwDOAUNjNM4qMiXI"}, "originalCommit": {"oid": "568025202ccd5da20a95c49e4388f8ff6a46982f"}, "originalPosition": 72}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 181, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}