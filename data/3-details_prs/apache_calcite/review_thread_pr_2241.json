{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE0NjAwMDA5", "number": 2241, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxNDoxMTo1MVrOE00u4w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQwMjo1MzowM1rOE17RwA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzODI1Mzc5OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/org/apache/calcite/plan/SubstitutionVisitor.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxNDoxMTo1MVrOHswg1A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxNTowNjozOFrOHszFNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjY5NDIyOA==", "bodyText": "What about other args ?", "url": "https://github.com/apache/calcite/pull/2241#discussion_r516694228", "createdAt": "2020-11-03T14:11:51Z", "author": {"login": "yanlin-Lynn"}, "path": "core/src/main/java/org/apache/calcite/plan/SubstitutionVisitor.java", "diffHunk": "@@ -1931,6 +1931,18 @@ public static MutableRel unifyAggregates(MutableAggregate query,\n       final List<AggregateCall> aggregateCalls = new ArrayList<>();\n       for (AggregateCall aggregateCall : query.aggCalls) {\n         if (aggregateCall.isDistinct()) {\n+          int aggIndex = aggregateCall.getArgList().get(0);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "407f95f34b7d27cd8b89ab215e354c7c68c0d9bb"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjczNjMwOQ==", "bodyText": "Thanks, update the code.", "url": "https://github.com/apache/calcite/pull/2241#discussion_r516736309", "createdAt": "2020-11-03T15:06:38Z", "author": {"login": "xy2953396112"}, "path": "core/src/main/java/org/apache/calcite/plan/SubstitutionVisitor.java", "diffHunk": "@@ -1931,6 +1931,18 @@ public static MutableRel unifyAggregates(MutableAggregate query,\n       final List<AggregateCall> aggregateCalls = new ArrayList<>();\n       for (AggregateCall aggregateCall : query.aggCalls) {\n         if (aggregateCall.isDistinct()) {\n+          int aggIndex = aggregateCall.getArgList().get(0);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjY5NDIyOA=="}, "originalCommit": {"oid": "407f95f34b7d27cd8b89ab215e354c7c68c0d9bb"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI0MDc3NjY3OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/org/apache/calcite/plan/SubstitutionVisitor.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQwNDowNjo0NVrOHtIdEw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxMjo1NjowMVrOHuCAlA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzA4NjQ4Mw==", "bodyText": "Could you please clarify why the size of the arguments has to be 1?", "url": "https://github.com/apache/calcite/pull/2241#discussion_r517086483", "createdAt": "2020-11-04T04:06:45Z", "author": {"login": "chunweilei"}, "path": "core/src/main/java/org/apache/calcite/plan/SubstitutionVisitor.java", "diffHunk": "@@ -1931,6 +1931,22 @@ public static MutableRel unifyAggregates(MutableAggregate query,\n       final List<AggregateCall> aggregateCalls = new ArrayList<>();\n       for (AggregateCall aggregateCall : query.aggCalls) {\n         if (aggregateCall.isDistinct()) {\n+          if (aggregateCall.getArgList().size() == 1) {\n+            int aggIndex = aggregateCall.getArgList().get(0);\n+            if (target.groupSet.asSet().contains(aggIndex)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2e3b15be1ba624ca49a97b8566226a3c67a98071"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzExODc2NA==", "bodyText": "The aggregate function containing the distinct keyword has only one parameter. Check the parameters here.", "url": "https://github.com/apache/calcite/pull/2241#discussion_r517118764", "createdAt": "2020-11-04T06:20:57Z", "author": {"login": "xy2953396112"}, "path": "core/src/main/java/org/apache/calcite/plan/SubstitutionVisitor.java", "diffHunk": "@@ -1931,6 +1931,22 @@ public static MutableRel unifyAggregates(MutableAggregate query,\n       final List<AggregateCall> aggregateCalls = new ArrayList<>();\n       for (AggregateCall aggregateCall : query.aggCalls) {\n         if (aggregateCall.isDistinct()) {\n+          if (aggregateCall.getArgList().size() == 1) {\n+            int aggIndex = aggregateCall.getArgList().get(0);\n+            if (target.groupSet.asSet().contains(aggIndex)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzA4NjQ4Mw=="}, "originalCommit": {"oid": "2e3b15be1ba624ca49a97b8566226a3c67a98071"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODAyOTQ2MA==", "bodyText": "Thanks,update the code.", "url": "https://github.com/apache/calcite/pull/2241#discussion_r518029460", "createdAt": "2020-11-05T12:56:01Z", "author": {"login": "xy2953396112"}, "path": "core/src/main/java/org/apache/calcite/plan/SubstitutionVisitor.java", "diffHunk": "@@ -1931,6 +1931,22 @@ public static MutableRel unifyAggregates(MutableAggregate query,\n       final List<AggregateCall> aggregateCalls = new ArrayList<>();\n       for (AggregateCall aggregateCall : query.aggCalls) {\n         if (aggregateCall.isDistinct()) {\n+          if (aggregateCall.getArgList().size() == 1) {\n+            int aggIndex = aggregateCall.getArgList().get(0);\n+            if (target.groupSet.asSet().contains(aggIndex)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzA4NjQ4Mw=="}, "originalCommit": {"oid": "2e3b15be1ba624ca49a97b8566226a3c67a98071"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI0NTE5NjExOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/org/apache/calcite/plan/SubstitutionVisitor.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQwMzozNjozOVrOHtyZvw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQwMzozNjozOVrOHtyZvw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzc3Mzc1OQ==", "bodyText": "target.groupSet.asList() can be replaced by targetGroupByIndexList?\n[1]https://github.com/apache/calcite/pull/2241/files#diff-61f815e420e8c1c99c7f502f8105d6d2f91724a3bd0cb5ff4300a23ac96f527cR1898", "url": "https://github.com/apache/calcite/pull/2241#discussion_r517773759", "createdAt": "2020-11-05T03:36:39Z", "author": {"login": "chunweilei"}, "path": "core/src/main/java/org/apache/calcite/plan/SubstitutionVisitor.java", "diffHunk": "@@ -1930,7 +1930,20 @@ public static MutableRel unifyAggregates(MutableAggregate query,\n       }\n       final List<AggregateCall> aggregateCalls = new ArrayList<>();\n       for (AggregateCall aggregateCall : query.aggCalls) {\n-        if (aggregateCall.isDistinct()) {\n+        if (aggregateCall.isDistinct() && aggregateCall.getArgList().size() == 1) {\n+          int aggIndex = aggregateCall.getArgList().get(0);\n+          if (target.groupSet.asSet().contains(aggIndex)) {\n+            int newIndex = target.groupSet.asList().indexOf(aggIndex);\n+            aggregateCalls.add(\n+                AggregateCall.create(aggregateCall.getAggregation(),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "56efb7fafc915a99a0b35a1c0ada592e9723254e"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI0NTE5ODk5OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/org/apache/calcite/plan/SubstitutionVisitor.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQwMzozODoyMVrOHtybZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxMjo1NjoyNVrOHuCBng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzc3NDE4MQ==", "bodyText": "We'd better use a variable to represent target.groupSet.asSet() in case we have to transform it again and again.", "url": "https://github.com/apache/calcite/pull/2241#discussion_r517774181", "createdAt": "2020-11-05T03:38:21Z", "author": {"login": "chunweilei"}, "path": "core/src/main/java/org/apache/calcite/plan/SubstitutionVisitor.java", "diffHunk": "@@ -1930,7 +1930,20 @@ public static MutableRel unifyAggregates(MutableAggregate query,\n       }\n       final List<AggregateCall> aggregateCalls = new ArrayList<>();\n       for (AggregateCall aggregateCall : query.aggCalls) {\n-        if (aggregateCall.isDistinct()) {\n+        if (aggregateCall.isDistinct() && aggregateCall.getArgList().size() == 1) {\n+          int aggIndex = aggregateCall.getArgList().get(0);\n+          if (target.groupSet.asSet().contains(aggIndex)) {\n+            int newIndex = target.groupSet.asList().indexOf(aggIndex);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "56efb7fafc915a99a0b35a1c0ada592e9723254e"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODAyOTcyNg==", "bodyText": "ok,Thanks.", "url": "https://github.com/apache/calcite/pull/2241#discussion_r518029726", "createdAt": "2020-11-05T12:56:25Z", "author": {"login": "xy2953396112"}, "path": "core/src/main/java/org/apache/calcite/plan/SubstitutionVisitor.java", "diffHunk": "@@ -1930,7 +1930,20 @@ public static MutableRel unifyAggregates(MutableAggregate query,\n       }\n       final List<AggregateCall> aggregateCalls = new ArrayList<>();\n       for (AggregateCall aggregateCall : query.aggCalls) {\n-        if (aggregateCall.isDistinct()) {\n+        if (aggregateCall.isDistinct() && aggregateCall.getArgList().size() == 1) {\n+          int aggIndex = aggregateCall.getArgList().get(0);\n+          if (target.groupSet.asSet().contains(aggIndex)) {\n+            int newIndex = target.groupSet.asList().indexOf(aggIndex);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzc3NDE4MQ=="}, "originalCommit": {"oid": "56efb7fafc915a99a0b35a1c0ada592e9723254e"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI0OTgxMTg0OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/org/apache/calcite/plan/SubstitutionVisitor.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQwMjo1MzowM1rOHueXyA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQwNzowNToyM1rOHuiSvA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODQ5NDE1Mg==", "bodyText": "if (targetGroupByIndexList.contains(aggIndex)) is not necessary.\nYou can do like this:\nfinal int newIndex = targetGroupByIndexList.indexOf(aggIndex);\nif (newIndex >=0 ) {\n   ......\n}", "url": "https://github.com/apache/calcite/pull/2241#discussion_r518494152", "createdAt": "2020-11-06T02:53:03Z", "author": {"login": "chunweilei"}, "path": "core/src/main/java/org/apache/calcite/plan/SubstitutionVisitor.java", "diffHunk": "@@ -1930,7 +1929,20 @@ public static MutableRel unifyAggregates(MutableAggregate query,\n       }\n       final List<AggregateCall> aggregateCalls = new ArrayList<>();\n       for (AggregateCall aggregateCall : query.aggCalls) {\n-        if (aggregateCall.isDistinct()) {\n+        if (aggregateCall.isDistinct() && aggregateCall.getArgList().size() == 1) {\n+          int aggIndex = aggregateCall.getArgList().get(0);\n+          if (targetGroupByIndexList.contains(aggIndex)) {\n+            int newIndex = targetGroupByIndexList.indexOf(aggIndex);\n+            aggregateCalls.add(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "30770f5c0b8a5c68190ddaef4e78b7fd1b9271f1"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODU1ODM5Ng==", "bodyText": "ok, Thanks.", "url": "https://github.com/apache/calcite/pull/2241#discussion_r518558396", "createdAt": "2020-11-06T07:05:23Z", "author": {"login": "xy2953396112"}, "path": "core/src/main/java/org/apache/calcite/plan/SubstitutionVisitor.java", "diffHunk": "@@ -1930,7 +1929,20 @@ public static MutableRel unifyAggregates(MutableAggregate query,\n       }\n       final List<AggregateCall> aggregateCalls = new ArrayList<>();\n       for (AggregateCall aggregateCall : query.aggCalls) {\n-        if (aggregateCall.isDistinct()) {\n+        if (aggregateCall.isDistinct() && aggregateCall.getArgList().size() == 1) {\n+          int aggIndex = aggregateCall.getArgList().get(0);\n+          if (targetGroupByIndexList.contains(aggIndex)) {\n+            int newIndex = targetGroupByIndexList.indexOf(aggIndex);\n+            aggregateCalls.add(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODQ5NDE1Mg=="}, "originalCommit": {"oid": "30770f5c0b8a5c68190ddaef4e78b7fd1b9271f1"}, "originalPosition": 21}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 73, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}