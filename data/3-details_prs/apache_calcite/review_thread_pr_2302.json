{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQxMDcxODE3", "number": 2302, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0yMlQwOTozOTowNVrOFc95gg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0yMlQwOTozOTowNVrOFc95gg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzY1OTE4NTk0OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/org/apache/calcite/sql2rel/RelDecorrelator.java", "isResolved": false, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0yMlQwOTozOTowNVrOIpOzIQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0yM1QwOToyOToyOFrOIp-SXA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4MDEwNDk5Mw==", "bodyText": "Is there other way to handle the isCorVarDefined variables ? For example, keep it as a internal state while decorrelating.", "url": "https://github.com/apache/calcite/pull/2302#discussion_r580104993", "createdAt": "2021-02-22T09:39:05Z", "author": {"login": "danny0405"}, "path": "core/src/main/java/org/apache/calcite/sql2rel/RelDecorrelator.java", "diffHunk": "@@ -429,7 +430,7 @@ protected RexNode removeCorrelationExpr(\n         ImmutableSortedMap.of());\n   }\n \n-  public @Nullable Frame decorrelateRel(Sort rel) {\n+  public @Nullable Frame decorrelateRel(Sort rel, boolean isCorVarDefined) {\n     //", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f0a3fe5549567a5ae75504417f5a1d61d4b0ca91"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4MDE5NDU5OA==", "bodyText": "Thanks for the feedback @danny0405 .\nI guess it could be possible to keep it in an internal state, but I believe it might be not that simple. For example (if I am not mistaken) if we deal with a Correlate within a Correlate, when the inner one is done, it should not set the state back to \"non-correlate\" because we are still in the context of the outer one.\nWhat do you think @thomasrebele  ?", "url": "https://github.com/apache/calcite/pull/2302#discussion_r580194598", "createdAt": "2021-02-22T11:58:59Z", "author": {"login": "rubenada"}, "path": "core/src/main/java/org/apache/calcite/sql2rel/RelDecorrelator.java", "diffHunk": "@@ -429,7 +430,7 @@ protected RexNode removeCorrelationExpr(\n         ImmutableSortedMap.of());\n   }\n \n-  public @Nullable Frame decorrelateRel(Sort rel) {\n+  public @Nullable Frame decorrelateRel(Sort rel, boolean isCorVarDefined) {\n     //", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4MDEwNDk5Mw=="}, "originalCommit": {"oid": "f0a3fe5549567a5ae75504417f5a1d61d4b0ca91"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4MDIyMDE0Nw==", "bodyText": "Indeed, @rubenada's example needs to be taken care of if we would remove the isCorVarDefined. By passing it as an parameter we avoid such subtle problems. We could translate it to an attribute and wrap the code that changes the attribute in a try-finally block:\nboolean prevCorVarDefined = isCorVarDefined\ntry {\n    // ...\n}\nfinally {\n    isCorVarDefined = prevCorVarDefined;\n}\n\nI'm slightly leaning towards using a parameter, which looks a bit cleaner to me. Does anyone have another suggestions how to handle this variable?", "url": "https://github.com/apache/calcite/pull/2302#discussion_r580220147", "createdAt": "2021-02-22T12:42:19Z", "author": {"login": "thomasrebele"}, "path": "core/src/main/java/org/apache/calcite/sql2rel/RelDecorrelator.java", "diffHunk": "@@ -429,7 +430,7 @@ protected RexNode removeCorrelationExpr(\n         ImmutableSortedMap.of());\n   }\n \n-  public @Nullable Frame decorrelateRel(Sort rel) {\n+  public @Nullable Frame decorrelateRel(Sort rel, boolean isCorVarDefined) {\n     //", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4MDEwNDk5Mw=="}, "originalCommit": {"oid": "f0a3fe5549567a5ae75504417f5a1d61d4b0ca91"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4MDIyNzIzNw==", "bodyText": "IMHO the solution proposed in the PR, even though it probably is not the most elegant one, is effective and arguably less error-prone than other alternatives, so I'd lean towards accepting it and merging the PR as it is. Especially if we consider that 1.27 release is around the corner and we should get this fixed before that.\nAny thoughts @danny0405 ?", "url": "https://github.com/apache/calcite/pull/2302#discussion_r580227237", "createdAt": "2021-02-22T12:54:13Z", "author": {"login": "rubenada"}, "path": "core/src/main/java/org/apache/calcite/sql2rel/RelDecorrelator.java", "diffHunk": "@@ -429,7 +430,7 @@ protected RexNode removeCorrelationExpr(\n         ImmutableSortedMap.of());\n   }\n \n-  public @Nullable Frame decorrelateRel(Sort rel) {\n+  public @Nullable Frame decorrelateRel(Sort rel, boolean isCorVarDefined) {\n     //", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4MDEwNDk5Mw=="}, "originalCommit": {"oid": "f0a3fe5549567a5ae75504417f5a1d61d4b0ca91"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4MDg3MTIzMQ==", "bodyText": "I have no ideas yet, keep an recursive state in the decorrelator is really a complex work and needs careful design logic, we can merge this PR first and refactor it later on.", "url": "https://github.com/apache/calcite/pull/2302#discussion_r580871231", "createdAt": "2021-02-23T09:11:35Z", "author": {"login": "danny0405"}, "path": "core/src/main/java/org/apache/calcite/sql2rel/RelDecorrelator.java", "diffHunk": "@@ -429,7 +430,7 @@ protected RexNode removeCorrelationExpr(\n         ImmutableSortedMap.of());\n   }\n \n-  public @Nullable Frame decorrelateRel(Sort rel) {\n+  public @Nullable Frame decorrelateRel(Sort rel, boolean isCorVarDefined) {\n     //", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4MDEwNDk5Mw=="}, "originalCommit": {"oid": "f0a3fe5549567a5ae75504417f5a1d61d4b0ca91"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4MDg4MzAzNg==", "bodyText": "I agree, I think the safest approach would be merging this PR to get it fixed for 1.27; and then considering a potential refactoring in a subsequent version.\nSo, if there are no objections, I'll merge this PR in the next 24/48 h", "url": "https://github.com/apache/calcite/pull/2302#discussion_r580883036", "createdAt": "2021-02-23T09:29:28Z", "author": {"login": "rubenada"}, "path": "core/src/main/java/org/apache/calcite/sql2rel/RelDecorrelator.java", "diffHunk": "@@ -429,7 +430,7 @@ protected RexNode removeCorrelationExpr(\n         ImmutableSortedMap.of());\n   }\n \n-  public @Nullable Frame decorrelateRel(Sort rel) {\n+  public @Nullable Frame decorrelateRel(Sort rel, boolean isCorVarDefined) {\n     //", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4MDEwNDk5Mw=="}, "originalCommit": {"oid": "f0a3fe5549567a5ae75504417f5a1d61d4b0ca91"}, "originalPosition": 42}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 17, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}