{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA1MjkyMTEw", "number": 2222, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQwMzo0MzoyOFrOEwD1Fg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQwMzo0MzoyOFrOEwD1Fg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4ODI5ODQ2OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/org/apache/calcite/plan/volcano/VolcanoRuleCall.java", "isResolved": false, "comments": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQwMzo0MzoyOFrOHlZI9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxMzo0NTo0NlrOH9bmJw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODk3MTI1Mg==", "bodyText": "Could you please explain in what scenarios does the following condition hold?\n!subset.getRelList().contains(rel)", "url": "https://github.com/apache/calcite/pull/2222#discussion_r508971252", "createdAt": "2020-10-21T03:43:28Z", "author": {"login": "liyafan82"}, "path": "core/src/main/java/org/apache/calcite/plan/volcano/VolcanoRuleCall.java", "diffHunk": "@@ -190,7 +190,8 @@ protected void onMatch() {\n           return;\n         }\n \n-        if (subset.set.equivalentSet != null) {\n+        if ((subset.set.equivalentSet != null)\n+            || (subset != rel && !subset.getRelList().contains(rel))) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f373eba8b33160f86ce0c2664a12ea911e34c907"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODk3MjA5Mg==", "bodyText": "when we merge set, the rel may be obsolete, but the rule match is still in the rule queue. Later I'll try to contrast a ut to cover this.", "url": "https://github.com/apache/calcite/pull/2222#discussion_r508972092", "createdAt": "2020-10-21T03:46:46Z", "author": {"login": "Aaaaaaron"}, "path": "core/src/main/java/org/apache/calcite/plan/volcano/VolcanoRuleCall.java", "diffHunk": "@@ -190,7 +190,8 @@ protected void onMatch() {\n           return;\n         }\n \n-        if (subset.set.equivalentSet != null) {\n+        if ((subset.set.equivalentSet != null)\n+            || (subset != rel && !subset.getRelList().contains(rel))) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODk3MTI1Mg=="}, "originalCommit": {"oid": "f373eba8b33160f86ce0c2664a12ea911e34c907"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODk3NzM0Nw==", "bodyText": "Thanks for your feedback. When merging set, the condition should already been covered by subset.set.equivalentSet != null?", "url": "https://github.com/apache/calcite/pull/2222#discussion_r508977347", "createdAt": "2020-10-21T04:08:10Z", "author": {"login": "liyafan82"}, "path": "core/src/main/java/org/apache/calcite/plan/volcano/VolcanoRuleCall.java", "diffHunk": "@@ -190,7 +190,8 @@ protected void onMatch() {\n           return;\n         }\n \n-        if (subset.set.equivalentSet != null) {\n+        if ((subset.set.equivalentSet != null)\n+            || (subset != rel && !subset.getRelList().contains(rel))) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODk3MTI1Mg=="}, "originalCommit": {"oid": "f373eba8b33160f86ce0c2664a12ea911e34c907"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTAwODY2MQ==", "bodyText": "Latter I'll debug again, we found this in our product env.", "url": "https://github.com/apache/calcite/pull/2222#discussion_r509008661", "createdAt": "2020-10-21T06:00:01Z", "author": {"login": "Aaaaaaron"}, "path": "core/src/main/java/org/apache/calcite/plan/volcano/VolcanoRuleCall.java", "diffHunk": "@@ -190,7 +190,8 @@ protected void onMatch() {\n           return;\n         }\n \n-        if (subset.set.equivalentSet != null) {\n+        if ((subset.set.equivalentSet != null)\n+            || (subset != rel && !subset.getRelList().contains(rel))) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODk3MTI1Mg=="}, "originalCommit": {"oid": "f373eba8b33160f86ce0c2664a12ea911e34c907"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzM0MjU4Nw==", "bodyText": "@liyafan82 I dig the code, and it's not about equivalentSet, let me explain to you:\n\nIn RelSet#mergeWith, we ill rename parent rels. note, what we renamed is the equivalentSet's parent, so it may not have equivalentSet(child have equivalentSet)\n\n    // Update all rels which have a child in the other set, to reflect the\n    // fact that the child has been renamed.\n    //\n    // Copy array to prevent ConcurrentModificationException.\n    final List<RelNode> previousParents =\n        ImmutableList.copyOf(otherSet.getParentRels());\n    for (RelNode parentRel : previousParents) {\n      planner.rename(parentRel);\n    }\n\n\nin VolcanoPlanner#rename(RelNode rel), we found equivRel for the rel, we will remove the rel from the subset\n\n        // Remove rel from its subset. (This may leave the subset\n        // empty, but if so, that will be dealt with when the sets\n        // get merged.)\n       final RelSubset subset = mapRel2Subset.put(rel, equivRelSubset);\n       boolean existed = subset.set.rels.remove(rel);\n\nthat's why I add this condition", "url": "https://github.com/apache/calcite/pull/2222#discussion_r513342587", "createdAt": "2020-10-28T10:41:52Z", "author": {"login": "Aaaaaaron"}, "path": "core/src/main/java/org/apache/calcite/plan/volcano/VolcanoRuleCall.java", "diffHunk": "@@ -190,7 +190,8 @@ protected void onMatch() {\n           return;\n         }\n \n-        if (subset.set.equivalentSet != null) {\n+        if ((subset.set.equivalentSet != null)\n+            || (subset != rel && !subset.getRelList().contains(rel))) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODk3MTI1Mg=="}, "originalCommit": {"oid": "f373eba8b33160f86ce0c2664a12ea911e34c907"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzQwNjkwNQ==", "bodyText": "@Aaaaaaron Thanks for the clarification. It would be nice if we could add a brief description in the comment.", "url": "https://github.com/apache/calcite/pull/2222#discussion_r513406905", "createdAt": "2020-10-28T12:35:58Z", "author": {"login": "liyafan82"}, "path": "core/src/main/java/org/apache/calcite/plan/volcano/VolcanoRuleCall.java", "diffHunk": "@@ -190,7 +190,8 @@ protected void onMatch() {\n           return;\n         }\n \n-        if (subset.set.equivalentSet != null) {\n+        if ((subset.set.equivalentSet != null)\n+            || (subset != rel && !subset.getRelList().contains(rel))) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODk3MTI1Mg=="}, "originalCommit": {"oid": "f373eba8b33160f86ce0c2664a12ea911e34c907"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDAzMzM4Ng==", "bodyText": "@Aaaaaaron Thanks for the clarification. It would be nice if we could add a brief description in the comment.\n\nUpdated, could you please take a look?", "url": "https://github.com/apache/calcite/pull/2222#discussion_r514033386", "createdAt": "2020-10-29T06:53:37Z", "author": {"login": "Aaaaaaron"}, "path": "core/src/main/java/org/apache/calcite/plan/volcano/VolcanoRuleCall.java", "diffHunk": "@@ -190,7 +190,8 @@ protected void onMatch() {\n           return;\n         }\n \n-        if (subset.set.equivalentSet != null) {\n+        if ((subset.set.equivalentSet != null)\n+            || (subset != rel && !subset.getRelList().contains(rel))) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODk3MTI1Mg=="}, "originalCommit": {"oid": "f373eba8b33160f86ce0c2664a12ea911e34c907"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDA1MTY5OA==", "bodyText": "Looks good. Thanks.\nThis PR seems like a positive change.", "url": "https://github.com/apache/calcite/pull/2222#discussion_r514051698", "createdAt": "2020-10-29T07:28:49Z", "author": {"login": "liyafan82"}, "path": "core/src/main/java/org/apache/calcite/plan/volcano/VolcanoRuleCall.java", "diffHunk": "@@ -190,7 +190,8 @@ protected void onMatch() {\n           return;\n         }\n \n-        if (subset.set.equivalentSet != null) {\n+        if ((subset.set.equivalentSet != null)\n+            || (subset != rel && !subset.getRelList().contains(rel))) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODk3MTI1Mg=="}, "originalCommit": {"oid": "f373eba8b33160f86ce0c2664a12ea911e34c907"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDgwODIyNg==", "bodyText": "The operation subset.getRelList().contains(rel) is with poor performance. Can you give evidence how much gains of the patch ?", "url": "https://github.com/apache/calcite/pull/2222#discussion_r514808226", "createdAt": "2020-10-30T03:59:32Z", "author": {"login": "danny0405"}, "path": "core/src/main/java/org/apache/calcite/plan/volcano/VolcanoRuleCall.java", "diffHunk": "@@ -190,7 +190,8 @@ protected void onMatch() {\n           return;\n         }\n \n-        if (subset.set.equivalentSet != null) {\n+        if ((subset.set.equivalentSet != null)\n+            || (subset != rel && !subset.getRelList().contains(rel))) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODk3MTI1Mg=="}, "originalCommit": {"oid": "f373eba8b33160f86ce0c2664a12ea911e34c907"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTUyMzEwOA==", "bodyText": "Hi @danny0405 , sorry for the late reply. We found this case in our product env and it been so long that I can not find the origin case \ud83d\ude02, I'll try again.\nBy the performance, we had monitor, it does not increase the planning time.", "url": "https://github.com/apache/calcite/pull/2222#discussion_r519523108", "createdAt": "2020-11-09T02:35:27Z", "author": {"login": "Aaaaaaron"}, "path": "core/src/main/java/org/apache/calcite/plan/volcano/VolcanoRuleCall.java", "diffHunk": "@@ -190,7 +190,8 @@ protected void onMatch() {\n           return;\n         }\n \n-        if (subset.set.equivalentSet != null) {\n+        if ((subset.set.equivalentSet != null)\n+            || (subset != rel && !subset.getRelList().contains(rel))) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODk3MTI1Mg=="}, "originalCommit": {"oid": "f373eba8b33160f86ce0c2664a12ea911e34c907"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTUyNDIyOQ==", "bodyText": "For the potential performance issue, how about I add a method getRelSet, the set#contains's performance should be better than list#contain", "url": "https://github.com/apache/calcite/pull/2222#discussion_r519524229", "createdAt": "2020-11-09T02:40:47Z", "author": {"login": "Aaaaaaron"}, "path": "core/src/main/java/org/apache/calcite/plan/volcano/VolcanoRuleCall.java", "diffHunk": "@@ -190,7 +190,8 @@ protected void onMatch() {\n           return;\n         }\n \n-        if (subset.set.equivalentSet != null) {\n+        if ((subset.set.equivalentSet != null)\n+            || (subset != rel && !subset.getRelList().contains(rel))) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODk3MTI1Mg=="}, "originalCommit": {"oid": "f373eba8b33160f86ce0c2664a12ea911e34c907"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTYyODI4Mw==", "bodyText": "Thanks for the explanation, i'm fine with the change.", "url": "https://github.com/apache/calcite/pull/2222#discussion_r519628283", "createdAt": "2020-11-09T08:28:25Z", "author": {"login": "danny0405"}, "path": "core/src/main/java/org/apache/calcite/plan/volcano/VolcanoRuleCall.java", "diffHunk": "@@ -190,7 +190,8 @@ protected void onMatch() {\n           return;\n         }\n \n-        if (subset.set.equivalentSet != null) {\n+        if ((subset.set.equivalentSet != null)\n+            || (subset != rel && !subset.getRelList().contains(rel))) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODk3MTI1Mg=="}, "originalCommit": {"oid": "f373eba8b33160f86ce0c2664a12ea911e34c907"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDE3NzMxOQ==", "bodyText": "This patch results in 20-30% CPU time increase in org.apache.calcite.adapter.tpch.TpchTest#testQuery07 :(", "url": "https://github.com/apache/calcite/pull/2222#discussion_r534177319", "createdAt": "2020-12-02T13:45:46Z", "author": {"login": "vlsi"}, "path": "core/src/main/java/org/apache/calcite/plan/volcano/VolcanoRuleCall.java", "diffHunk": "@@ -190,7 +190,8 @@ protected void onMatch() {\n           return;\n         }\n \n-        if (subset.set.equivalentSet != null) {\n+        if ((subset.set.equivalentSet != null)\n+            || (subset != rel && !subset.getRelList().contains(rel))) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODk3MTI1Mg=="}, "originalCommit": {"oid": "f373eba8b33160f86ce0c2664a12ea911e34c907"}, "originalPosition": 6}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 55, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}