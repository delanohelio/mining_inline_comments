{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMxNjE4MTMz", "number": 2014, "title": "[CALCITE-4022] Support unparse special syntax when operator is INSERT", "bodyText": "https://issues.apache.org/jira/browse/CALCITE-4022", "createdAt": "2020-06-09T08:21:23Z", "url": "https://github.com/apache/calcite/pull/2014", "merged": true, "mergeCommit": {"oid": "2f7c6e277758969da4f2e4132aaf251f9e6b0d4a"}, "closed": true, "closedAt": "2020-07-24T01:22:27Z", "author": {"login": "xy2953396112"}, "timelineItems": {"totalCount": 16, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcpgzoWABqjM0MjM2ODI3MTg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc2vflpAFqTQ1MTUwMjgxNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6df0a50334fb897fdccea659de31ee7310668cc8", "author": {"user": {"login": "xy2953396112", "name": "xzh"}}, "url": "https://github.com/apache/calcite/commit/6df0a50334fb897fdccea659de31ee7310668cc8", "committedDate": "2020-06-09T08:20:41Z", "message": "[CALCITE-4022] Support evaluate SqlInsert SqlBasicCall.toString() (Xu Zhaohui)"}, "afterCommit": {"oid": "a9d3903817400d8e376344ac917870514a28345a", "author": {"user": {"login": "xy2953396112", "name": "xzh"}}, "url": "https://github.com/apache/calcite/commit/a9d3903817400d8e376344ac917870514a28345a", "committedDate": "2020-06-09T08:30:05Z", "message": "[CALCITE-4022] Support evaluate SqlInsert SqlBasicCall.toString() (Xu Zhaohui)"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a9d3903817400d8e376344ac917870514a28345a", "author": {"user": {"login": "xy2953396112", "name": "xzh"}}, "url": "https://github.com/apache/calcite/commit/a9d3903817400d8e376344ac917870514a28345a", "committedDate": "2020-06-09T08:30:05Z", "message": "[CALCITE-4022] Support evaluate SqlInsert SqlBasicCall.toString() (Xu Zhaohui)"}, "afterCommit": {"oid": "7cf9f44d0af4f63e331a36790770c928d9b3c59f", "author": {"user": {"login": "xy2953396112", "name": "xzh"}}, "url": "https://github.com/apache/calcite/commit/7cf9f44d0af4f63e331a36790770c928d9b3c59f", "committedDate": "2020-06-09T09:07:27Z", "message": "[CALCITE-4022] Support evaluate SqlInsert SqlBasicCall.toString() (Xu ZhaoHui)"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7cf9f44d0af4f63e331a36790770c928d9b3c59f", "author": {"user": {"login": "xy2953396112", "name": "xzh"}}, "url": "https://github.com/apache/calcite/commit/7cf9f44d0af4f63e331a36790770c928d9b3c59f", "committedDate": "2020-06-09T09:07:27Z", "message": "[CALCITE-4022] Support evaluate SqlInsert SqlBasicCall.toString() (Xu ZhaoHui)"}, "afterCommit": {"oid": "d3075982c08c18cf301493ebda3bce800bf88f9c", "author": {"user": {"login": "xy2953396112", "name": "xzh"}}, "url": "https://github.com/apache/calcite/commit/d3075982c08c18cf301493ebda3bce800bf88f9c", "committedDate": "2020-06-09T10:59:05Z", "message": "[CALCITE-4022] Support evaluate SqlInsert SqlBasicCall.toString() (Xu Zhaohui)"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d3075982c08c18cf301493ebda3bce800bf88f9c", "author": {"user": {"login": "xy2953396112", "name": "xzh"}}, "url": "https://github.com/apache/calcite/commit/d3075982c08c18cf301493ebda3bce800bf88f9c", "committedDate": "2020-06-09T10:59:05Z", "message": "[CALCITE-4022] Support evaluate SqlInsert SqlBasicCall.toString() (Xu Zhaohui)"}, "afterCommit": {"oid": "cc71a12a61b1bc582cf7bedb4da0976c7fee9d9e", "author": {"user": {"login": "xy2953396112", "name": "xzh"}}, "url": "https://github.com/apache/calcite/commit/cc71a12a61b1bc582cf7bedb4da0976c7fee9d9e", "committedDate": "2020-06-23T16:44:20Z", "message": "[CALCITE-4022] Support evaluate SqlInsert SqlBasicCall.toString() (Xu Zhaohui)"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "cc71a12a61b1bc582cf7bedb4da0976c7fee9d9e", "author": {"user": {"login": "xy2953396112", "name": "xzh"}}, "url": "https://github.com/apache/calcite/commit/cc71a12a61b1bc582cf7bedb4da0976c7fee9d9e", "committedDate": "2020-06-23T16:44:20Z", "message": "[CALCITE-4022] Support evaluate SqlInsert SqlBasicCall.toString() (Xu Zhaohui)"}, "afterCommit": {"oid": "bd1fbfe3c062af0879f36ad0e8b53cb0aaec3842", "author": {"user": {"login": "xy2953396112", "name": "xzh"}}, "url": "https://github.com/apache/calcite/commit/bd1fbfe3c062af0879f36ad0e8b53cb0aaec3842", "committedDate": "2020-06-27T09:05:33Z", "message": "[CALCITE-4022] Support evaluate SqlInsert SqlBasicCall.toString() (Xu Zhaohui)"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQwODYyNjM3", "url": "https://github.com/apache/calcite/pull/2014#pullrequestreview-440862637", "createdAt": "2020-07-01T13:21:17Z", "commit": {"oid": "bd1fbfe3c062af0879f36ad0e8b53cb0aaec3842"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQxMzoyMToxN1rOGrlniw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQxMzoyMToxN1rOGrlniw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODM1ODI4Mw==", "bodyText": "this name is really weird.\ncould you find a way to inline your implementation in the original place instead of here.", "url": "https://github.com/apache/calcite/pull/2014#discussion_r448358283", "createdAt": "2020-07-01T13:21:17Z", "author": {"login": "zinking"}, "path": "core/src/main/java/org/apache/calcite/sql/SqlUtil.java", "diffHunk": "@@ -261,6 +261,32 @@ public static boolean isLiteralChain(SqlNode node) {\n     }\n   }\n \n+  /**\n+   * Unparses a call to an operator which has special syntax.\n+   *\n+   * @param operator The operator\n+   * @param writer   Writer\n+   * @param call     List of 0 or more operands\n+   */\n+  public static void unparseSpecialSyntax(SqlOperator operator,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bd1fbfe3c062af0879f36ad0e8b53cb0aaec3842"}, "originalPosition": 11}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQwODYzNDQw", "url": "https://github.com/apache/calcite/pull/2014#pullrequestreview-440863440", "createdAt": "2020-07-01T13:22:13Z", "commit": {"oid": "bd1fbfe3c062af0879f36ad0e8b53cb0aaec3842"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQxMzoyMjoxM1rOGrlqDQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQxMzoyMjoxM1rOGrlqDQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODM1ODkyNQ==", "bodyText": "why null and why not reusing operands in this line ?", "url": "https://github.com/apache/calcite/pull/2014#discussion_r448358925", "createdAt": "2020-07-01T13:22:13Z", "author": {"login": "zinking"}, "path": "core/src/main/java/org/apache/calcite/sql/SqlUtil.java", "diffHunk": "@@ -261,6 +261,32 @@ public static boolean isLiteralChain(SqlNode node) {\n     }\n   }\n \n+  /**\n+   * Unparses a call to an operator which has special syntax.\n+   *\n+   * @param operator The operator\n+   * @param writer   Writer\n+   * @param call     List of 0 or more operands\n+   */\n+  public static void unparseSpecialSyntax(SqlOperator operator,\n+      SqlWriter writer,\n+      SqlCall call) {\n+    final List<SqlNode> operands = call.getOperandList();\n+    switch (operator.getKind()) {\n+    case INSERT:\n+      assert operands.size() == 3 || operands.size() == 4;\n+      final SqlInsert insert = new SqlInsert(call.getParserPosition(),\n+          (SqlNodeList) operands.get(0), operands.get(1), operands.get(2),\n+          operands.size() == 3 ? null : (SqlNodeList) call.getOperandList().get(3));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bd1fbfe3c062af0879f36ad0e8b53cb0aaec3842"}, "originalPosition": 20}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQwODY1NDg4", "url": "https://github.com/apache/calcite/pull/2014#pullrequestreview-440865488", "createdAt": "2020-07-01T13:24:42Z", "commit": {"oid": "bd1fbfe3c062af0879f36ad0e8b53cb0aaec3842"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQxMzoyNDo0MlrOGrlwLw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQxMzoyNDo0MlrOGrlwLw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODM2MDQ5NQ==", "bodyText": "what about one more test regarding the actual execution?", "url": "https://github.com/apache/calcite/pull/2014#discussion_r448360495", "createdAt": "2020-07-01T13:24:42Z", "author": {"login": "zinking"}, "path": "core/src/test/java/org/apache/calcite/sql/parser/SqlParserTest.java", "diffHunk": "@@ -5818,6 +5818,21 @@ public void subTestIntervalDayFailsValidation() {\n     assertTrue(sqlNodeVisited.getKind() == SqlKind.INSERT);\n   }\n \n+  @Test void testSqlInsertSqlBasicCallToString() throws Exception {\n+    final String sql = \"insert into emps select * from emps\";\n+    final SqlNode sqlNode = getSqlParser(sql).parseStmt();\n+    final SqlNode sqlNodeVisited = sqlNode.accept(new SqlShuttle() {\n+      @Override public SqlNode visit(SqlIdentifier identifier) {\n+        return new SqlIdentifier(identifier.names,\n+            identifier.getParserPosition());\n+      }\n+    });\n+    final String str = \"INSERT INTO `EMPS`\\n\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bd1fbfe3c062af0879f36ad0e8b53cb0aaec3842"}, "originalPosition": 13}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "bd1fbfe3c062af0879f36ad0e8b53cb0aaec3842", "author": {"user": {"login": "xy2953396112", "name": "xzh"}}, "url": "https://github.com/apache/calcite/commit/bd1fbfe3c062af0879f36ad0e8b53cb0aaec3842", "committedDate": "2020-06-27T09:05:33Z", "message": "[CALCITE-4022] Support evaluate SqlInsert SqlBasicCall.toString() (Xu Zhaohui)"}, "afterCommit": {"oid": "ae553d25668161a1df438b12b736d91bad0817b0", "author": {"user": {"login": "xy2953396112", "name": "xzh"}}, "url": "https://github.com/apache/calcite/commit/ae553d25668161a1df438b12b736d91bad0817b0", "committedDate": "2020-07-15T10:52:57Z", "message": "[CALCITE-4022] Support evaluate SqlInsert SqlBasicCall.toString() (Xu Zhaohui)"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7efce8726999f6b2effba4ceb9579ca9d5021f62", "author": {"user": {"login": "xy2953396112", "name": "xzh"}}, "url": "https://github.com/apache/calcite/commit/7efce8726999f6b2effba4ceb9579ca9d5021f62", "committedDate": "2020-07-15T13:50:07Z", "message": "update"}, "afterCommit": {"oid": "9a650e235799772ea508279b4cb50c61e773782c", "author": {"user": {"login": "xy2953396112", "name": "xzh"}}, "url": "https://github.com/apache/calcite/commit/9a650e235799772ea508279b4cb50c61e773782c", "committedDate": "2020-07-15T13:52:37Z", "message": "[CALCITE-4022] Support evaluate SqlInsert SqlBasicCall.toString() (Xu Zhaohui)"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ5NDU0OTMw", "url": "https://github.com/apache/calcite/pull/2014#pullrequestreview-449454930", "createdAt": "2020-07-16T01:54:53Z", "commit": {"oid": "9a650e235799772ea508279b4cb50c61e773782c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQwMTo1NDo1M1rOGyXSFg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQwMTo1NDo1M1rOGyXSFg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTQ2MzQ0Ng==", "bodyText": "Just use (SqlNodeList) operands.get(3) will be fine", "url": "https://github.com/apache/calcite/pull/2014#discussion_r455463446", "createdAt": "2020-07-16T01:54:53Z", "author": {"login": "yanlin-Lynn"}, "path": "core/src/main/java/org/apache/calcite/sql/SqlUtil.java", "diffHunk": "@@ -261,6 +261,32 @@ public static boolean isLiteralChain(SqlNode node) {\n     }\n   }\n \n+  /**\n+   * Unparses a call to an operator which has special syntax.\n+   *\n+   * @param operator The operator\n+   * @param writer   Writer\n+   * @param call     List of 0 or more operands\n+   */\n+  public static void unparseSpecialSyntax(SqlOperator operator,\n+      SqlWriter writer,\n+      SqlCall call) {\n+    final List<SqlNode> operands = call.getOperandList();\n+    switch (operator.getKind()) {\n+    case INSERT:\n+      assert operands.size() == 4;\n+      final SqlInsert insert = new SqlInsert(call.getParserPosition(),\n+          (SqlNodeList) operands.get(0), operands.get(1), operands.get(2),\n+          operands.get(3) == null ? null : (SqlNodeList) operands.get(3));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9a650e235799772ea508279b4cb50c61e773782c"}, "originalPosition": 20}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9a650e235799772ea508279b4cb50c61e773782c", "author": {"user": {"login": "xy2953396112", "name": "xzh"}}, "url": "https://github.com/apache/calcite/commit/9a650e235799772ea508279b4cb50c61e773782c", "committedDate": "2020-07-15T13:52:37Z", "message": "[CALCITE-4022] Support evaluate SqlInsert SqlBasicCall.toString() (Xu Zhaohui)"}, "afterCommit": {"oid": "d73c2ebfea86eb6321c9436b9d15e6960b9702f8", "author": {"user": {"login": "xy2953396112", "name": "xzh"}}, "url": "https://github.com/apache/calcite/commit/d73c2ebfea86eb6321c9436b9d15e6960b9702f8", "committedDate": "2020-07-16T06:01:29Z", "message": "[CALCITE-4022] Support evaluate SqlInsert SqlBasicCall.toString() (Xu Zhaohui)"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d73c2ebfea86eb6321c9436b9d15e6960b9702f8", "author": {"user": {"login": "xy2953396112", "name": "xzh"}}, "url": "https://github.com/apache/calcite/commit/d73c2ebfea86eb6321c9436b9d15e6960b9702f8", "committedDate": "2020-07-16T06:01:29Z", "message": "[CALCITE-4022] Support evaluate SqlInsert SqlBasicCall.toString() (Xu Zhaohui)"}, "afterCommit": {"oid": "573eeaa3f023cffd05777e2b38b2a402d2752060", "author": {"user": {"login": "xy2953396112", "name": "xzh"}}, "url": "https://github.com/apache/calcite/commit/573eeaa3f023cffd05777e2b38b2a402d2752060", "committedDate": "2020-07-17T11:27:35Z", "message": "[CALCITE-4022] Support unparse special syntax when operator is INSERT (Xu Zhaohui)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a45f7b78e4d3891d36abfa9213c609f896601c36", "author": {"user": {"login": "xy2953396112", "name": "xzh"}}, "url": "https://github.com/apache/calcite/commit/a45f7b78e4d3891d36abfa9213c609f896601c36", "committedDate": "2020-07-17T11:41:53Z", "message": "[CALCITE-4022] Support unparse special syntax when operator is INSERT (Xu zhaohui)"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "573eeaa3f023cffd05777e2b38b2a402d2752060", "author": {"user": {"login": "xy2953396112", "name": "xzh"}}, "url": "https://github.com/apache/calcite/commit/573eeaa3f023cffd05777e2b38b2a402d2752060", "committedDate": "2020-07-17T11:27:35Z", "message": "[CALCITE-4022] Support unparse special syntax when operator is INSERT (Xu Zhaohui)"}, "afterCommit": {"oid": "a45f7b78e4d3891d36abfa9213c609f896601c36", "author": {"user": {"login": "xy2953396112", "name": "xzh"}}, "url": "https://github.com/apache/calcite/commit/a45f7b78e4d3891d36abfa9213c609f896601c36", "committedDate": "2020-07-17T11:41:53Z", "message": "[CALCITE-4022] Support unparse special syntax when operator is INSERT (Xu zhaohui)"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUxNTAyODE2", "url": "https://github.com/apache/calcite/pull/2014#pullrequestreview-451502816", "createdAt": "2020-07-20T10:58:02Z", "commit": {"oid": "a45f7b78e4d3891d36abfa9213c609f896601c36"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3619, "cost": 1, "resetAt": "2021-10-28T16:48:13Z"}}}