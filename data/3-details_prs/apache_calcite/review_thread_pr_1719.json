{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzU4ODk3NDEx", "number": 1719, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQyMTo1MToyMFrODanvUA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQyMTo1MToyMFrODanvUA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5MjQwNjU2OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/org/apache/calcite/plan/volcano/VolcanoRuleCall.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQyMTo1MToyMFrOFhrZxg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQyMTo1MToyMFrOFhrZxg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDg1ODQzOA==", "bodyText": "The naming is hard.\nsubset.getSubsets() looks confusing :(", "url": "https://github.com/apache/calcite/pull/1719#discussion_r370858438", "createdAt": "2020-01-24T21:51:20Z", "author": {"login": "vlsi"}, "path": "core/src/main/java/org/apache/calcite/plan/volcano/VolcanoRuleCall.java", "diffHunk": "@@ -317,8 +317,7 @@ private void matchRecurse(int solve) {\n           final RelSubset subset =\n               (RelSubset) inputs.get(operand.ordinalInParent);\n           if (operand.getMatchedClass() == RelSubset.class) {\n-            // If the rule wants the whole subset, we just provide it\n-            successors = ImmutableList.of(subset);\n+            successors = subset.getSubsets();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "79895d2b317e15bf38ed0dfd9a28e6cd73d0e975"}, "originalPosition": 6}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 347, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}