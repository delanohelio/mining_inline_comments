{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE5MDQ4MjIy", "number": 1983, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxMDoxOToxNlrOE5YRdQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQwMjowMzoxM1rOE7VQTw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI4NjAxOTczOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/org/apache/calcite/rel/metadata/RelMdAllPredicates.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxMDoxOToxNlrOHzzM-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxMToyMDo0MVrOHz3VLg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDA3ODMyOA==", "bodyText": "Extract -> Extracts", "url": "https://github.com/apache/calcite/pull/1983#discussion_r524078328", "createdAt": "2020-11-16T10:19:16Z", "author": {"login": "chunweilei"}, "path": "core/src/main/java/org/apache/calcite/rel/metadata/RelMdAllPredicates.java", "diffHunk": "@@ -120,12 +124,35 @@ public RelOptPredicateList getAllPredicates(Project project, RelMetadataQuery mq\n   }\n \n   /**\n-   * Add the Filter condition to the list obtained from the input.\n+   * Extract predicates for a Filter.\n    */\n   public RelOptPredicateList getAllPredicates(Filter filter, RelMetadataQuery mq) {\n-    final RelNode input = filter.getInput();\n-    final RexBuilder rexBuilder = filter.getCluster().getRexBuilder();\n-    final RexNode pred = filter.getCondition();\n+    return getAllFilterPredicates(filter, mq, filter.getCondition());\n+  }\n+\n+  /**\n+   * Extract predicates for a Calc.\n+   */\n+  public RelOptPredicateList getAllPredicates(Calc calc, RelMetadataQuery mq) {\n+    final RexProgram rexProgram = calc.getProgram();\n+    List<RexNode> condition = new ArrayList<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22ea3dc8d8ce22acbba667f4f1a996474262aacb"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDE0NTk2Ng==", "bodyText": "ok", "url": "https://github.com/apache/calcite/pull/1983#discussion_r524145966", "createdAt": "2020-11-16T11:20:41Z", "author": {"login": "xy2953396112"}, "path": "core/src/main/java/org/apache/calcite/rel/metadata/RelMdAllPredicates.java", "diffHunk": "@@ -120,12 +124,35 @@ public RelOptPredicateList getAllPredicates(Project project, RelMetadataQuery mq\n   }\n \n   /**\n-   * Add the Filter condition to the list obtained from the input.\n+   * Extract predicates for a Filter.\n    */\n   public RelOptPredicateList getAllPredicates(Filter filter, RelMetadataQuery mq) {\n-    final RelNode input = filter.getInput();\n-    final RexBuilder rexBuilder = filter.getCluster().getRexBuilder();\n-    final RexNode pred = filter.getCondition();\n+    return getAllFilterPredicates(filter, mq, filter.getCondition());\n+  }\n+\n+  /**\n+   * Extract predicates for a Calc.\n+   */\n+  public RelOptPredicateList getAllPredicates(Calc calc, RelMetadataQuery mq) {\n+    final RexProgram rexProgram = calc.getProgram();\n+    List<RexNode> condition = new ArrayList<>();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDA3ODMyOA=="}, "originalCommit": {"oid": "22ea3dc8d8ce22acbba667f4f1a996474262aacb"}, "originalPosition": 51}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI4NjAzMzQ4OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/org/apache/calcite/rel/metadata/RelMdAllPredicates.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxMDoyMToxMFrOHzzVlQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxMToyMTowOVrOHz3XHQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDA4MDUzMw==", "bodyText": "The type of condition can be RexNode rather than List.", "url": "https://github.com/apache/calcite/pull/1983#discussion_r524080533", "createdAt": "2020-11-16T10:21:10Z", "author": {"login": "chunweilei"}, "path": "core/src/main/java/org/apache/calcite/rel/metadata/RelMdAllPredicates.java", "diffHunk": "@@ -120,12 +124,35 @@ public RelOptPredicateList getAllPredicates(Project project, RelMetadataQuery mq\n   }\n \n   /**\n-   * Add the Filter condition to the list obtained from the input.\n+   * Extract predicates for a Filter.\n    */\n   public RelOptPredicateList getAllPredicates(Filter filter, RelMetadataQuery mq) {\n-    final RelNode input = filter.getInput();\n-    final RexBuilder rexBuilder = filter.getCluster().getRexBuilder();\n-    final RexNode pred = filter.getCondition();\n+    return getAllFilterPredicates(filter, mq, filter.getCondition());\n+  }\n+\n+  /**\n+   * Extract predicates for a Calc.\n+   */\n+  public RelOptPredicateList getAllPredicates(Calc calc, RelMetadataQuery mq) {\n+    final RexProgram rexProgram = calc.getProgram();\n+    List<RexNode> condition = new ArrayList<>();\n+    if (rexProgram.getCondition() != null) {\n+      condition = Util.transform(ImmutableList.of(rexProgram.getCondition()),\n+          rexProgram::expandLocalRef);\n+    } else {\n+      return mq.getAllPredicates(calc.getInput());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22ea3dc8d8ce22acbba667f4f1a996474262aacb"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDE0NjQ2MQ==", "bodyText": "Thanks, update the code.", "url": "https://github.com/apache/calcite/pull/1983#discussion_r524146461", "createdAt": "2020-11-16T11:21:09Z", "author": {"login": "xy2953396112"}, "path": "core/src/main/java/org/apache/calcite/rel/metadata/RelMdAllPredicates.java", "diffHunk": "@@ -120,12 +124,35 @@ public RelOptPredicateList getAllPredicates(Project project, RelMetadataQuery mq\n   }\n \n   /**\n-   * Add the Filter condition to the list obtained from the input.\n+   * Extract predicates for a Filter.\n    */\n   public RelOptPredicateList getAllPredicates(Filter filter, RelMetadataQuery mq) {\n-    final RelNode input = filter.getInput();\n-    final RexBuilder rexBuilder = filter.getCluster().getRexBuilder();\n-    final RexNode pred = filter.getCondition();\n+    return getAllFilterPredicates(filter, mq, filter.getCondition());\n+  }\n+\n+  /**\n+   * Extract predicates for a Calc.\n+   */\n+  public RelOptPredicateList getAllPredicates(Calc calc, RelMetadataQuery mq) {\n+    final RexProgram rexProgram = calc.getProgram();\n+    List<RexNode> condition = new ArrayList<>();\n+    if (rexProgram.getCondition() != null) {\n+      condition = Util.transform(ImmutableList.of(rexProgram.getCondition()),\n+          rexProgram::expandLocalRef);\n+    } else {\n+      return mq.getAllPredicates(calc.getInput());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDA4MDUzMw=="}, "originalCommit": {"oid": "22ea3dc8d8ce22acbba667f4f1a996474262aacb"}, "originalPosition": 56}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI5NzM0NTQ0OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/org/apache/calcite/rel/metadata/RelMdAllPredicates.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQwODo1MDoxNFrOH1jCUg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQwOTo0NzozNFrOH1lXOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTkxMDYxMA==", "bodyText": "You can put return getAllFilterPredicates(calc, mq, condition); in the if conditiion.", "url": "https://github.com/apache/calcite/pull/1983#discussion_r525910610", "createdAt": "2020-11-18T08:50:14Z", "author": {"login": "chunweilei"}, "path": "core/src/main/java/org/apache/calcite/rel/metadata/RelMdAllPredicates.java", "diffHunk": "@@ -113,19 +115,40 @@ public RelOptPredicateList getAllPredicates(TableScan scan, RelMetadataQuery mq)\n   }\n \n   /**\n-   * Extract predicates for a project.\n+   * Extracts predicates for a project.\n    */\n   public RelOptPredicateList getAllPredicates(Project project, RelMetadataQuery mq) {\n     return mq.getAllPredicates(project.getInput());\n   }\n \n   /**\n-   * Add the Filter condition to the list obtained from the input.\n+   * Extracts predicates for a Filter.\n    */\n   public RelOptPredicateList getAllPredicates(Filter filter, RelMetadataQuery mq) {\n-    final RelNode input = filter.getInput();\n-    final RexBuilder rexBuilder = filter.getCluster().getRexBuilder();\n-    final RexNode pred = filter.getCondition();\n+    return getAllFilterPredicates(filter, mq, filter.getCondition());\n+  }\n+\n+  /**\n+   * Extracts predicates for a Calc.\n+   */\n+  public RelOptPredicateList getAllPredicates(Calc calc, RelMetadataQuery mq) {\n+    final RexProgram rexProgram = calc.getProgram();\n+    RexNode condition = null;\n+    if (rexProgram.getCondition() != null) {\n+      condition = rexProgram.expandLocalRef(rexProgram.getCondition());\n+    } else {\n+      return mq.getAllPredicates(calc.getInput());\n+    }\n+    return getAllFilterPredicates(calc, mq, condition);\n+  }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1a1a11cf1506c54e8e5934f5454d6071cffea2e0"}, "originalPosition": 66}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTk0ODcyOQ==", "bodyText": "You can put return getAllFilterPredicates(calc, mq, condition); in the if conditiion.\n\nThanks.", "url": "https://github.com/apache/calcite/pull/1983#discussion_r525948729", "createdAt": "2020-11-18T09:47:34Z", "author": {"login": "xy2953396112"}, "path": "core/src/main/java/org/apache/calcite/rel/metadata/RelMdAllPredicates.java", "diffHunk": "@@ -113,19 +115,40 @@ public RelOptPredicateList getAllPredicates(TableScan scan, RelMetadataQuery mq)\n   }\n \n   /**\n-   * Extract predicates for a project.\n+   * Extracts predicates for a project.\n    */\n   public RelOptPredicateList getAllPredicates(Project project, RelMetadataQuery mq) {\n     return mq.getAllPredicates(project.getInput());\n   }\n \n   /**\n-   * Add the Filter condition to the list obtained from the input.\n+   * Extracts predicates for a Filter.\n    */\n   public RelOptPredicateList getAllPredicates(Filter filter, RelMetadataQuery mq) {\n-    final RelNode input = filter.getInput();\n-    final RexBuilder rexBuilder = filter.getCluster().getRexBuilder();\n-    final RexNode pred = filter.getCondition();\n+    return getAllFilterPredicates(filter, mq, filter.getCondition());\n+  }\n+\n+  /**\n+   * Extracts predicates for a Calc.\n+   */\n+  public RelOptPredicateList getAllPredicates(Calc calc, RelMetadataQuery mq) {\n+    final RexProgram rexProgram = calc.getProgram();\n+    RexNode condition = null;\n+    if (rexProgram.getCondition() != null) {\n+      condition = rexProgram.expandLocalRef(rexProgram.getCondition());\n+    } else {\n+      return mq.getAllPredicates(calc.getInput());\n+    }\n+    return getAllFilterPredicates(calc, mq, condition);\n+  }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTkxMDYxMA=="}, "originalCommit": {"oid": "1a1a11cf1506c54e8e5934f5454d6071cffea2e0"}, "originalPosition": 66}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwMTU2NDM2OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/org/apache/calcite/rel/metadata/RelMdAllPredicates.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQwMzozNjowMVrOH2LdyA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQwMzo0MjoyNVrOH2LkmA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjU3MzAwMA==", "bodyText": "Does this method have to be public? Maybe we should use private.", "url": "https://github.com/apache/calcite/pull/1983#discussion_r526573000", "createdAt": "2020-11-19T03:36:01Z", "author": {"login": "chunweilei"}, "path": "core/src/main/java/org/apache/calcite/rel/metadata/RelMdAllPredicates.java", "diffHunk": "@@ -113,19 +115,39 @@ public RelOptPredicateList getAllPredicates(TableScan scan, RelMetadataQuery mq)\n   }\n \n   /**\n-   * Extract predicates for a project.\n+   * Extracts predicates for a project.\n    */\n   public RelOptPredicateList getAllPredicates(Project project, RelMetadataQuery mq) {\n     return mq.getAllPredicates(project.getInput());\n   }\n \n   /**\n-   * Add the Filter condition to the list obtained from the input.\n+   * Extracts predicates for a Filter.\n    */\n   public RelOptPredicateList getAllPredicates(Filter filter, RelMetadataQuery mq) {\n-    final RelNode input = filter.getInput();\n-    final RexBuilder rexBuilder = filter.getCluster().getRexBuilder();\n-    final RexNode pred = filter.getCondition();\n+    return getAllFilterPredicates(filter, mq, filter.getCondition());\n+  }\n+\n+  /**\n+   * Extracts predicates for a Calc.\n+   */\n+  public RelOptPredicateList getAllPredicates(Calc calc, RelMetadataQuery mq) {\n+    final RexProgram rexProgram = calc.getProgram();\n+    if (rexProgram.getCondition() != null) {\n+      final RexNode condition = rexProgram.expandLocalRef(rexProgram.getCondition());\n+      return getAllFilterPredicates(calc, mq, condition);\n+    } else {\n+      return mq.getAllPredicates(calc.getInput());\n+    }\n+  }\n+\n+  /**\n+   * Add the Filter condition to the list obtained from the input.\n+   */\n+  public RelOptPredicateList getAllFilterPredicates(RelNode rel,\n+      RelMetadataQuery mq, RexNode pred) {\n+    final RelNode input = rel.getInput(0);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a0c251010fa3cda2b0c7e58babed5d5d07585f1e"}, "originalPosition": 72}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjU3NDc0NA==", "bodyText": "you are right. update the code.", "url": "https://github.com/apache/calcite/pull/1983#discussion_r526574744", "createdAt": "2020-11-19T03:42:25Z", "author": {"login": "xy2953396112"}, "path": "core/src/main/java/org/apache/calcite/rel/metadata/RelMdAllPredicates.java", "diffHunk": "@@ -113,19 +115,39 @@ public RelOptPredicateList getAllPredicates(TableScan scan, RelMetadataQuery mq)\n   }\n \n   /**\n-   * Extract predicates for a project.\n+   * Extracts predicates for a project.\n    */\n   public RelOptPredicateList getAllPredicates(Project project, RelMetadataQuery mq) {\n     return mq.getAllPredicates(project.getInput());\n   }\n \n   /**\n-   * Add the Filter condition to the list obtained from the input.\n+   * Extracts predicates for a Filter.\n    */\n   public RelOptPredicateList getAllPredicates(Filter filter, RelMetadataQuery mq) {\n-    final RelNode input = filter.getInput();\n-    final RexBuilder rexBuilder = filter.getCluster().getRexBuilder();\n-    final RexNode pred = filter.getCondition();\n+    return getAllFilterPredicates(filter, mq, filter.getCondition());\n+  }\n+\n+  /**\n+   * Extracts predicates for a Calc.\n+   */\n+  public RelOptPredicateList getAllPredicates(Calc calc, RelMetadataQuery mq) {\n+    final RexProgram rexProgram = calc.getProgram();\n+    if (rexProgram.getCondition() != null) {\n+      final RexNode condition = rexProgram.expandLocalRef(rexProgram.getCondition());\n+      return getAllFilterPredicates(calc, mq, condition);\n+    } else {\n+      return mq.getAllPredicates(calc.getInput());\n+    }\n+  }\n+\n+  /**\n+   * Add the Filter condition to the list obtained from the input.\n+   */\n+  public RelOptPredicateList getAllFilterPredicates(RelNode rel,\n+      RelMetadataQuery mq, RexNode pred) {\n+    final RelNode input = rel.getInput(0);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjU3MzAwMA=="}, "originalCommit": {"oid": "a0c251010fa3cda2b0c7e58babed5d5d07585f1e"}, "originalPosition": 72}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwNjQ5NTgzOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/org/apache/calcite/rel/metadata/RelMdAllPredicates.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQwMjowMjozOFrOH26rtA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQwMjo1Mzo1NVrOH27kQA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzM0NjYxMg==", "bodyText": "How about just use rel, not rel.getInput(0) ?\nAnd add the doc, the pred comes from the parent of rel.", "url": "https://github.com/apache/calcite/pull/1983#discussion_r527346612", "createdAt": "2020-11-20T02:02:38Z", "author": {"login": "yanlin-Lynn"}, "path": "core/src/main/java/org/apache/calcite/rel/metadata/RelMdAllPredicates.java", "diffHunk": "@@ -113,19 +115,39 @@ public RelOptPredicateList getAllPredicates(TableScan scan, RelMetadataQuery mq)\n   }\n \n   /**\n-   * Extract predicates for a project.\n+   * Extracts predicates for a project.\n    */\n   public RelOptPredicateList getAllPredicates(Project project, RelMetadataQuery mq) {\n     return mq.getAllPredicates(project.getInput());\n   }\n \n   /**\n-   * Add the Filter condition to the list obtained from the input.\n+   * Extracts predicates for a Filter.\n    */\n   public RelOptPredicateList getAllPredicates(Filter filter, RelMetadataQuery mq) {\n-    final RelNode input = filter.getInput();\n-    final RexBuilder rexBuilder = filter.getCluster().getRexBuilder();\n-    final RexNode pred = filter.getCondition();\n+    return getAllFilterPredicates(filter, mq, filter.getCondition());\n+  }\n+\n+  /**\n+   * Extracts predicates for a Calc.\n+   */\n+  public RelOptPredicateList getAllPredicates(Calc calc, RelMetadataQuery mq) {\n+    final RexProgram rexProgram = calc.getProgram();\n+    if (rexProgram.getCondition() != null) {\n+      final RexNode condition = rexProgram.expandLocalRef(rexProgram.getCondition());\n+      return getAllFilterPredicates(calc, mq, condition);\n+    } else {\n+      return mq.getAllPredicates(calc.getInput());\n+    }\n+  }\n+\n+  /**\n+   * Add the Filter condition to the list obtained from the input.\n+   */\n+  private RelOptPredicateList getAllFilterPredicates(RelNode rel,\n+      RelMetadataQuery mq, RexNode pred) {\n+    final RelNode input = rel.getInput(0);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6ed97f5e8a52c36e432fc641fcd9b0832d4d2c21"}, "originalPosition": 72}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzM2MTA4OA==", "bodyText": "rel used in getAllFilterPredicates rather than only used for getInput().", "url": "https://github.com/apache/calcite/pull/1983#discussion_r527361088", "createdAt": "2020-11-20T02:53:55Z", "author": {"login": "xy2953396112"}, "path": "core/src/main/java/org/apache/calcite/rel/metadata/RelMdAllPredicates.java", "diffHunk": "@@ -113,19 +115,39 @@ public RelOptPredicateList getAllPredicates(TableScan scan, RelMetadataQuery mq)\n   }\n \n   /**\n-   * Extract predicates for a project.\n+   * Extracts predicates for a project.\n    */\n   public RelOptPredicateList getAllPredicates(Project project, RelMetadataQuery mq) {\n     return mq.getAllPredicates(project.getInput());\n   }\n \n   /**\n-   * Add the Filter condition to the list obtained from the input.\n+   * Extracts predicates for a Filter.\n    */\n   public RelOptPredicateList getAllPredicates(Filter filter, RelMetadataQuery mq) {\n-    final RelNode input = filter.getInput();\n-    final RexBuilder rexBuilder = filter.getCluster().getRexBuilder();\n-    final RexNode pred = filter.getCondition();\n+    return getAllFilterPredicates(filter, mq, filter.getCondition());\n+  }\n+\n+  /**\n+   * Extracts predicates for a Calc.\n+   */\n+  public RelOptPredicateList getAllPredicates(Calc calc, RelMetadataQuery mq) {\n+    final RexProgram rexProgram = calc.getProgram();\n+    if (rexProgram.getCondition() != null) {\n+      final RexNode condition = rexProgram.expandLocalRef(rexProgram.getCondition());\n+      return getAllFilterPredicates(calc, mq, condition);\n+    } else {\n+      return mq.getAllPredicates(calc.getInput());\n+    }\n+  }\n+\n+  /**\n+   * Add the Filter condition to the list obtained from the input.\n+   */\n+  private RelOptPredicateList getAllFilterPredicates(RelNode rel,\n+      RelMetadataQuery mq, RexNode pred) {\n+    final RelNode input = rel.getInput(0);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzM0NjYxMg=="}, "originalCommit": {"oid": "6ed97f5e8a52c36e432fc641fcd9b0832d4d2c21"}, "originalPosition": 72}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwNjQ5Njc5OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/org/apache/calcite/rel/metadata/RelMdAllPredicates.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQwMjowMzoxM1rOH26sQA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQwNDoxNjo0OVrOH287DQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzM0Njc1Mg==", "bodyText": "How about getAllFilterPredicates(calc.getInput(0), mq, condition)", "url": "https://github.com/apache/calcite/pull/1983#discussion_r527346752", "createdAt": "2020-11-20T02:03:13Z", "author": {"login": "yanlin-Lynn"}, "path": "core/src/main/java/org/apache/calcite/rel/metadata/RelMdAllPredicates.java", "diffHunk": "@@ -113,19 +115,39 @@ public RelOptPredicateList getAllPredicates(TableScan scan, RelMetadataQuery mq)\n   }\n \n   /**\n-   * Extract predicates for a project.\n+   * Extracts predicates for a project.\n    */\n   public RelOptPredicateList getAllPredicates(Project project, RelMetadataQuery mq) {\n     return mq.getAllPredicates(project.getInput());\n   }\n \n   /**\n-   * Add the Filter condition to the list obtained from the input.\n+   * Extracts predicates for a Filter.\n    */\n   public RelOptPredicateList getAllPredicates(Filter filter, RelMetadataQuery mq) {\n-    final RelNode input = filter.getInput();\n-    final RexBuilder rexBuilder = filter.getCluster().getRexBuilder();\n-    final RexNode pred = filter.getCondition();\n+    return getAllFilterPredicates(filter, mq, filter.getCondition());\n+  }\n+\n+  /**\n+   * Extracts predicates for a Calc.\n+   */\n+  public RelOptPredicateList getAllPredicates(Calc calc, RelMetadataQuery mq) {\n+    final RexProgram rexProgram = calc.getProgram();\n+    if (rexProgram.getCondition() != null) {\n+      final RexNode condition = rexProgram.expandLocalRef(rexProgram.getCondition());\n+      return getAllFilterPredicates(calc, mq, condition);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6ed97f5e8a52c36e432fc641fcd9b0832d4d2c21"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzM4MzMwOQ==", "bodyText": "ok,Thanks", "url": "https://github.com/apache/calcite/pull/1983#discussion_r527383309", "createdAt": "2020-11-20T04:16:49Z", "author": {"login": "xy2953396112"}, "path": "core/src/main/java/org/apache/calcite/rel/metadata/RelMdAllPredicates.java", "diffHunk": "@@ -113,19 +115,39 @@ public RelOptPredicateList getAllPredicates(TableScan scan, RelMetadataQuery mq)\n   }\n \n   /**\n-   * Extract predicates for a project.\n+   * Extracts predicates for a project.\n    */\n   public RelOptPredicateList getAllPredicates(Project project, RelMetadataQuery mq) {\n     return mq.getAllPredicates(project.getInput());\n   }\n \n   /**\n-   * Add the Filter condition to the list obtained from the input.\n+   * Extracts predicates for a Filter.\n    */\n   public RelOptPredicateList getAllPredicates(Filter filter, RelMetadataQuery mq) {\n-    final RelNode input = filter.getInput();\n-    final RexBuilder rexBuilder = filter.getCluster().getRexBuilder();\n-    final RexNode pred = filter.getCondition();\n+    return getAllFilterPredicates(filter, mq, filter.getCondition());\n+  }\n+\n+  /**\n+   * Extracts predicates for a Calc.\n+   */\n+  public RelOptPredicateList getAllPredicates(Calc calc, RelMetadataQuery mq) {\n+    final RexProgram rexProgram = calc.getProgram();\n+    if (rexProgram.getCondition() != null) {\n+      final RexNode condition = rexProgram.expandLocalRef(rexProgram.getCondition());\n+      return getAllFilterPredicates(calc, mq, condition);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzM0Njc1Mg=="}, "originalCommit": {"oid": "6ed97f5e8a52c36e432fc641fcd9b0832d4d2c21"}, "originalPosition": 61}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 151, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}