{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDgyNjAwNDA3", "number": 2144, "title": "[CALCITE-4237] Sarg with single IS NULL operand causes AssertionError", "bodyText": "", "createdAt": "2020-09-09T07:32:02Z", "url": "https://github.com/apache/calcite/pull/2144", "merged": true, "mergeCommit": {"oid": "60aa74f4e5b3b01ad90cb9ee9a4520483d45b2b4"}, "closed": true, "closedAt": "2020-09-09T18:16:05Z", "author": {"login": "julianhyde"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdHHSTdAFqTQ4NDc0MjE2Mw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdHIszcgFqTQ4NDgyMjk1OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg0NzQyMTYz", "url": "https://github.com/apache/calcite/pull/2144#pullrequestreview-484742163", "createdAt": "2020-09-09T07:44:02Z", "commit": {"oid": "46f8f928076e8f558572e284d2d43c0a38431972"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQwNzo0NDowMlrOHO6wuA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQwNzo0NDowMlrOHO6wuA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTQwNDg1Ng==", "bodyText": "Can Sarg[, null] be promoted to Sarg[null] ?", "url": "https://github.com/apache/calcite/pull/2144#discussion_r485404856", "createdAt": "2020-09-09T07:44:02Z", "author": {"login": "danny0405"}, "path": "core/src/test/java/org/apache/calcite/rex/RexProgramTest.java", "diffHunk": "@@ -1640,6 +1640,21 @@ private void checkExponentialCnf(int n) {\n         .expandedSearch(expanded);\n   }\n \n+  @Test void testSimplifyRange6() {\n+    // An IS NULL condition would not usually become a Sarg,\n+    // but here it is combined with another condition, and together they cross\n+    // the complexity threshold.\n+    final RexNode aRef = input(tInt(true), 0);\n+    final RexNode bRef = input(tInt(true), 1);\n+    // a in (1, 2) or b is null\n+    RexNode expr = or(eq(aRef, literal(1)), eq(aRef, literal(2)), isNull(bRef));\n+    final String simplified =\n+        \"OR(SEARCH($1, Sarg[, null]), SEARCH($0, Sarg[1, 2]))\";\n+    final String expanded = \"OR(IS NULL($1), OR(=($0, 1), =($0, 2)))\";\n+    checkSimplify(expr, simplified)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "46f8f928076e8f558572e284d2d43c0a38431972"}, "originalPosition": 15}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "60aa74f4e5b3b01ad90cb9ee9a4520483d45b2b4", "author": {"user": {"login": "vlsi", "name": "Vladimir Sitnikov"}}, "url": "https://github.com/apache/calcite/commit/60aa74f4e5b3b01ad90cb9ee9a4520483d45b2b4", "committedDate": "2020-09-09T07:59:54Z", "message": "[CALCITE-4237] Following [CALCITE-4173], fix assertion error when RexSimplify generates Sarg with single null only\n\nFix TpcdsTest expected output.\n\nAdd a test for IS NULL Sarg (Julian Hyde).\n\nClose apache/calcite#2144\nClose apache/calcite#2141"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "46f8f928076e8f558572e284d2d43c0a38431972", "author": {"user": {"login": "julianhyde", "name": "Julian Hyde"}}, "url": "https://github.com/apache/calcite/commit/46f8f928076e8f558572e284d2d43c0a38431972", "committedDate": "2020-09-09T07:39:23Z", "message": "checkstyle"}, "afterCommit": {"oid": "60aa74f4e5b3b01ad90cb9ee9a4520483d45b2b4", "author": {"user": {"login": "vlsi", "name": "Vladimir Sitnikov"}}, "url": "https://github.com/apache/calcite/commit/60aa74f4e5b3b01ad90cb9ee9a4520483d45b2b4", "committedDate": "2020-09-09T07:59:54Z", "message": "[CALCITE-4237] Following [CALCITE-4173], fix assertion error when RexSimplify generates Sarg with single null only\n\nFix TpcdsTest expected output.\n\nAdd a test for IS NULL Sarg (Julian Hyde).\n\nClose apache/calcite#2144\nClose apache/calcite#2141"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg0Nzg1ODU0", "url": "https://github.com/apache/calcite/pull/2144#pullrequestreview-484785854", "createdAt": "2020-09-09T08:39:54Z", "commit": {"oid": "60aa74f4e5b3b01ad90cb9ee9a4520483d45b2b4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQwODozOTo1NFrOHO829g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQwODozOTo1NFrOHO829g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTQzOTIyMg==", "bodyText": "This is a breaking change in a minor release.", "url": "https://github.com/apache/calcite/pull/2144#discussion_r485439222", "createdAt": "2020-09-09T08:39:54Z", "author": {"login": "vlsi"}, "path": "plus/src/test/java/org/apache/calcite/adapter/tpcds/TpcdsTest.java", "diffHunk": "@@ -367,15 +366,13 @@ protected void foo(CalciteAssert.AssertThat with, String tableName,\n                 builder.equals(builder.field(\"CD_EDUCATION_STATUS\"),\n                     builder.literal(\"HIGH SCHOOL\")),\n                 builder.equals(builder.field(\"D_YEAR\"), builder.literal(1998)),\n-                builder.call(SqlStdOperatorTable.IN,\n-                    builder.field(\"S_STATE\"),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "60aa74f4e5b3b01ad90cb9ee9a4520483d45b2b4"}, "originalPosition": 58}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg0Nzk4ODYx", "url": "https://github.com/apache/calcite/pull/2144#pullrequestreview-484798861", "createdAt": "2020-09-09T08:54:41Z", "commit": {"oid": "60aa74f4e5b3b01ad90cb9ee9a4520483d45b2b4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQwODo1NDo0MVrOHO9fqQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQwODo1NDo0MVrOHO9fqQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTQ0OTY0MQ==", "bodyText": "I wonder if this can be integrated into addRange, so it skips adding duplicate items in the first place rather than add duplicates and de-duplicate it later.", "url": "https://github.com/apache/calcite/pull/2144#discussion_r485449641", "createdAt": "2020-09-09T08:54:41Z", "author": {"login": "vlsi"}, "path": "core/src/main/java/org/apache/calcite/rex/RexSimplify.java", "diffHunk": "@@ -2690,7 +2691,14 @@ int complexity() {\n     }\n \n     @Override public RelDataType getType() {\n-      return rexBuilder.typeFactory.leastRestrictive(Util.distinctList(types));\n+      if (this.types.isEmpty()) {\n+        // Expression is \"x IS NULL\"\n+        return ref.getType();\n+      }\n+      final List<RelDataType> distinctTypes = Util.distinctList(this.types);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "60aa74f4e5b3b01ad90cb9ee9a4520483d45b2b4"}, "originalPosition": 30}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg0ODIyOTU4", "url": "https://github.com/apache/calcite/pull/2144#pullrequestreview-484822958", "createdAt": "2020-09-09T09:22:52Z", "commit": {"oid": "60aa74f4e5b3b01ad90cb9ee9a4520483d45b2b4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQwOToyMjo1MlrOHO-p7g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQwOToyMjo1MlrOHO-p7g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTQ2ODY1NA==", "bodyText": "It looks strange that ref.getType() is considered only in the case of null-only sarg.\nShould it be included to this.types in the constructor instead, so the types are handled in a uniform way?", "url": "https://github.com/apache/calcite/pull/2144#discussion_r485468654", "createdAt": "2020-09-09T09:22:52Z", "author": {"login": "vlsi"}, "path": "core/src/main/java/org/apache/calcite/rex/RexSimplify.java", "diffHunk": "@@ -2690,7 +2691,14 @@ int complexity() {\n     }\n \n     @Override public RelDataType getType() {\n-      return rexBuilder.typeFactory.leastRestrictive(Util.distinctList(types));\n+      if (this.types.isEmpty()) {\n+        // Expression is \"x IS NULL\"\n+        return ref.getType();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "60aa74f4e5b3b01ad90cb9ee9a4520483d45b2b4"}, "originalPosition": 28}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3325, "cost": 1, "resetAt": "2021-10-28T16:48:13Z"}}}