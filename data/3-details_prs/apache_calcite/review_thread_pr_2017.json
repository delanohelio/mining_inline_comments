{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMyMTMyMDEy", "number": 2017, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQwMDozNDowNVrOEEGeug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQwMDozNDoyOFrOEEGe8g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNzM1OTMwOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/org/apache/calcite/adapter/enumerable/EnumerableValues.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQwMDozNDowNVrOGhg8hA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQwMDo0NjoyMVrOGhhIPQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzc5NTk3Mg==", "bodyText": "Can you add comments to describe what this for loop is doing? Sorry but I had a hard time to understand it.", "url": "https://github.com/apache/calcite/pull/2017#discussion_r437795972", "createdAt": "2020-06-10T00:34:05Z", "author": {"login": "amaliujia"}, "path": "core/src/main/java/org/apache/calcite/adapter/enumerable/EnumerableValues.java", "diffHunk": "@@ -70,6 +74,32 @@ public static EnumerableValues create(RelOptCluster cluster,\n     return new EnumerableValues(getCluster(), rowType, tuples, traitSet);\n   }\n \n+  @Override public RelNode passThrough(final RelTraitSet required) {\n+    RelCollation collation = required.getCollation();\n+    if (collation == null || collation.isDefault()) {\n+      return null;\n+    }\n+    if (tuples.size() > 1) {\n+      Ordering<List<RexLiteral>> ordering = null;\n+      for (RelFieldCollation fc : collation.getFieldCollations()) {\n+        Ordering<List<RexLiteral>> comparator = RelMdCollation.comparator(fc);\n+        if (ordering == null) {\n+          ordering = comparator;\n+        } else {\n+          ordering = ordering.compound(comparator);\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f3a5999488d76777d65d6df9acfcf98da38a06af"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzc5ODk3Mw==", "bodyText": "Sure, I added comments.", "url": "https://github.com/apache/calcite/pull/2017#discussion_r437798973", "createdAt": "2020-06-10T00:46:21Z", "author": {"login": "hsyuan"}, "path": "core/src/main/java/org/apache/calcite/adapter/enumerable/EnumerableValues.java", "diffHunk": "@@ -70,6 +74,32 @@ public static EnumerableValues create(RelOptCluster cluster,\n     return new EnumerableValues(getCluster(), rowType, tuples, traitSet);\n   }\n \n+  @Override public RelNode passThrough(final RelTraitSet required) {\n+    RelCollation collation = required.getCollation();\n+    if (collation == null || collation.isDefault()) {\n+      return null;\n+    }\n+    if (tuples.size() > 1) {\n+      Ordering<List<RexLiteral>> ordering = null;\n+      for (RelFieldCollation fc : collation.getFieldCollations()) {\n+        Ordering<List<RexLiteral>> comparator = RelMdCollation.comparator(fc);\n+        if (ordering == null) {\n+          ordering = comparator;\n+        } else {\n+          ordering = ordering.compound(comparator);\n+        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzc5NTk3Mg=="}, "originalCommit": {"oid": "f3a5999488d76777d65d6df9acfcf98da38a06af"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNzM1OTg2OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/org/apache/calcite/adapter/enumerable/EnumerableValues.java", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQwMDozNDoyOFrOGhg82w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQwNToxMjowOFrOGhlF3g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzc5NjA1OQ==", "bodyText": "Could you also explain which this check?", "url": "https://github.com/apache/calcite/pull/2017#discussion_r437796059", "createdAt": "2020-06-10T00:34:28Z", "author": {"login": "amaliujia"}, "path": "core/src/main/java/org/apache/calcite/adapter/enumerable/EnumerableValues.java", "diffHunk": "@@ -70,6 +74,32 @@ public static EnumerableValues create(RelOptCluster cluster,\n     return new EnumerableValues(getCluster(), rowType, tuples, traitSet);\n   }\n \n+  @Override public RelNode passThrough(final RelTraitSet required) {\n+    RelCollation collation = required.getCollation();\n+    if (collation == null || collation.isDefault()) {\n+      return null;\n+    }\n+    if (tuples.size() > 1) {\n+      Ordering<List<RexLiteral>> ordering = null;\n+      for (RelFieldCollation fc : collation.getFieldCollations()) {\n+        Ordering<List<RexLiteral>> comparator = RelMdCollation.comparator(fc);\n+        if (ordering == null) {\n+          ordering = comparator;\n+        } else {\n+          ordering = ordering.compound(comparator);\n+        }\n+      }\n+      if (!ordering.isOrdered(tuples)) {\n+        return null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f3a5999488d76777d65d6df9acfcf98da38a06af"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzgzMzYwOA==", "bodyText": "If the tuples are not sorted, we still have to add a sort on it.", "url": "https://github.com/apache/calcite/pull/2017#discussion_r437833608", "createdAt": "2020-06-10T03:02:15Z", "author": {"login": "chunweilei"}, "path": "core/src/main/java/org/apache/calcite/adapter/enumerable/EnumerableValues.java", "diffHunk": "@@ -70,6 +74,32 @@ public static EnumerableValues create(RelOptCluster cluster,\n     return new EnumerableValues(getCluster(), rowType, tuples, traitSet);\n   }\n \n+  @Override public RelNode passThrough(final RelTraitSet required) {\n+    RelCollation collation = required.getCollation();\n+    if (collation == null || collation.isDefault()) {\n+      return null;\n+    }\n+    if (tuples.size() > 1) {\n+      Ordering<List<RexLiteral>> ordering = null;\n+      for (RelFieldCollation fc : collation.getFieldCollations()) {\n+        Ordering<List<RexLiteral>> comparator = RelMdCollation.comparator(fc);\n+        if (ordering == null) {\n+          ordering = comparator;\n+        } else {\n+          ordering = ordering.compound(comparator);\n+        }\n+      }\n+      if (!ordering.isOrdered(tuples)) {\n+        return null;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzc5NjA1OQ=="}, "originalCommit": {"oid": "f3a5999488d76777d65d6df9acfcf98da38a06af"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzgzNDE3Mg==", "bodyText": "@chunweilei Are you explaining to @amaliujia or just pointing out a potential bug? :)", "url": "https://github.com/apache/calcite/pull/2017#discussion_r437834172", "createdAt": "2020-06-10T03:04:51Z", "author": {"login": "hsyuan"}, "path": "core/src/main/java/org/apache/calcite/adapter/enumerable/EnumerableValues.java", "diffHunk": "@@ -70,6 +74,32 @@ public static EnumerableValues create(RelOptCluster cluster,\n     return new EnumerableValues(getCluster(), rowType, tuples, traitSet);\n   }\n \n+  @Override public RelNode passThrough(final RelTraitSet required) {\n+    RelCollation collation = required.getCollation();\n+    if (collation == null || collation.isDefault()) {\n+      return null;\n+    }\n+    if (tuples.size() > 1) {\n+      Ordering<List<RexLiteral>> ordering = null;\n+      for (RelFieldCollation fc : collation.getFieldCollations()) {\n+        Ordering<List<RexLiteral>> comparator = RelMdCollation.comparator(fc);\n+        if (ordering == null) {\n+          ordering = comparator;\n+        } else {\n+          ordering = ordering.compound(comparator);\n+        }\n+      }\n+      if (!ordering.isOrdered(tuples)) {\n+        return null;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzc5NjA1OQ=="}, "originalCommit": {"oid": "f3a5999488d76777d65d6df9acfcf98da38a06af"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzg1MzM0NQ==", "bodyText": "@chunweilei Are you explaining to @amaliujia or just pointing out a potential bug? :)\n\nI am explaining to @amaliujia ~~", "url": "https://github.com/apache/calcite/pull/2017#discussion_r437853345", "createdAt": "2020-06-10T04:29:18Z", "author": {"login": "chunweilei"}, "path": "core/src/main/java/org/apache/calcite/adapter/enumerable/EnumerableValues.java", "diffHunk": "@@ -70,6 +74,32 @@ public static EnumerableValues create(RelOptCluster cluster,\n     return new EnumerableValues(getCluster(), rowType, tuples, traitSet);\n   }\n \n+  @Override public RelNode passThrough(final RelTraitSet required) {\n+    RelCollation collation = required.getCollation();\n+    if (collation == null || collation.isDefault()) {\n+      return null;\n+    }\n+    if (tuples.size() > 1) {\n+      Ordering<List<RexLiteral>> ordering = null;\n+      for (RelFieldCollation fc : collation.getFieldCollations()) {\n+        Ordering<List<RexLiteral>> comparator = RelMdCollation.comparator(fc);\n+        if (ordering == null) {\n+          ordering = comparator;\n+        } else {\n+          ordering = ordering.compound(comparator);\n+        }\n+      }\n+      if (!ordering.isOrdered(tuples)) {\n+        return null;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzc5NjA1OQ=="}, "originalCommit": {"oid": "f3a5999488d76777d65d6df9acfcf98da38a06af"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzg2MzkwMg==", "bodyText": "Thanks! Now I see it better!", "url": "https://github.com/apache/calcite/pull/2017#discussion_r437863902", "createdAt": "2020-06-10T05:12:08Z", "author": {"login": "amaliujia"}, "path": "core/src/main/java/org/apache/calcite/adapter/enumerable/EnumerableValues.java", "diffHunk": "@@ -70,6 +74,32 @@ public static EnumerableValues create(RelOptCluster cluster,\n     return new EnumerableValues(getCluster(), rowType, tuples, traitSet);\n   }\n \n+  @Override public RelNode passThrough(final RelTraitSet required) {\n+    RelCollation collation = required.getCollation();\n+    if (collation == null || collation.isDefault()) {\n+      return null;\n+    }\n+    if (tuples.size() > 1) {\n+      Ordering<List<RexLiteral>> ordering = null;\n+      for (RelFieldCollation fc : collation.getFieldCollations()) {\n+        Ordering<List<RexLiteral>> comparator = RelMdCollation.comparator(fc);\n+        if (ordering == null) {\n+          ordering = comparator;\n+        } else {\n+          ordering = ordering.compound(comparator);\n+        }\n+      }\n+      if (!ordering.isOrdered(tuples)) {\n+        return null;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzc5NjA1OQ=="}, "originalCommit": {"oid": "f3a5999488d76777d65d6df9acfcf98da38a06af"}, "originalPosition": 42}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 192, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}