{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI3Njk0NTIz", "number": 2002, "title": "[CALCITE-4042] JoinCommuteRule must not match SEMI / ANTI join", "bodyText": "[CALCITE-4042] JoinCommuteRule must not match SEMI / ANTI join", "createdAt": "2020-06-04T09:06:01Z", "url": "https://github.com/apache/calcite/pull/2002", "merged": true, "mergeCommit": {"oid": "721ac8c21fb3a33dc85e677434ec7d716f9aa509"}, "closed": true, "closedAt": "2020-06-04T15:22:20Z", "author": {"login": "rubenada"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcn9foKgFqTQyNDQwNDY0NA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcn-Qr0ABqjM0MDY5MDgwNjc=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI0NDA0NjQ0", "url": "https://github.com/apache/calcite/pull/2002#pullrequestreview-424404644", "createdAt": "2020-06-04T12:47:47Z", "commit": {"oid": "7ec78b740a955d949de7c5c2fca29e572420edac"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxMjo0Nzo0OFrOGfEEaw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxMjo0Nzo0OFrOGfEEaw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTIyNTcwNw==", "bodyText": "LOL. \ud83d\ude1d\nI remembered I created that JIRA but not immediately create a pull request, because I had to come up with a test case.\nThe code change looks good to me, but I think we'd better add a test case. :)", "url": "https://github.com/apache/calcite/pull/2002#discussion_r435225707", "createdAt": "2020-06-04T12:47:48Z", "author": {"login": "hsyuan"}, "path": "core/src/main/java/org/apache/calcite/rel/rules/JoinCommuteRule.java", "diffHunk": "@@ -145,6 +145,12 @@ public static RelNode swap(Join join, boolean swapOuterJoins,\n         .build();\n   }\n \n+  public boolean matches(RelOptRuleCall call) {\n+    Join join = call.rel(0);\n+    // SEMI and ANTI join cannot be swapped.\n+    return join.getJoinType().projectsRight();\n+  }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7ec78b740a955d949de7c5c2fca29e572420edac"}, "originalPosition": 8}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI0NDU4NDU5", "url": "https://github.com/apache/calcite/pull/2002#pullrequestreview-424458459", "createdAt": "2020-06-04T13:39:02Z", "commit": {"oid": "33d81f646d26838d0747f9525360b9e07bdfae4d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "10dcde57527c2437914dfc21c1d80bf10f46dd97", "author": {"user": {"login": "rubenada", "name": null}}, "url": "https://github.com/apache/calcite/commit/10dcde57527c2437914dfc21c1d80bf10f46dd97", "committedDate": "2020-06-04T13:40:50Z", "message": "[CALCITE-4042] JoinCommuteRule must not match SEMI / ANTI join"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "33d81f646d26838d0747f9525360b9e07bdfae4d", "author": {"user": {"login": "rubenada", "name": null}}, "url": "https://github.com/apache/calcite/commit/33d81f646d26838d0747f9525360b9e07bdfae4d", "committedDate": "2020-06-04T13:35:13Z", "message": "[CALCITE-4042] JoinCommuteRule must not match SEMI / ANTI join"}, "afterCommit": {"oid": "10dcde57527c2437914dfc21c1d80bf10f46dd97", "author": {"user": {"login": "rubenada", "name": null}}, "url": "https://github.com/apache/calcite/commit/10dcde57527c2437914dfc21c1d80bf10f46dd97", "committedDate": "2020-06-04T13:40:50Z", "message": "[CALCITE-4042] JoinCommuteRule must not match SEMI / ANTI join"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3540, "cost": 1, "resetAt": "2021-10-28T16:48:13Z"}}}