{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE5NTk4Njc3", "number": 2256, "title": "[CALCITE-4392] The operation of checking types equal ignoring null can be more efficient", "bodyText": "Please see https://issues.apache.org/jira/browse/CALCITE-4392", "createdAt": "2020-11-12T03:43:24Z", "url": "https://github.com/apache/calcite/pull/2256", "merged": true, "mergeCommit": {"oid": "2ddc836dcf600a06e9ec3c8e7a7e61310e7b429d"}, "closed": true, "closedAt": "2020-11-18T08:52:02Z", "author": {"login": "liyafan82"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdbtdrUAFqTUyODgwOTcxMg==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdc7-C4gFqTUzMDg5MTkwMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI4ODA5NzEy", "url": "https://github.com/apache/calcite/pull/2256#pullrequestreview-528809712", "createdAt": "2020-11-12T07:31:19Z", "commit": {"oid": "f68e982e3f6b1eb1df170b1b50ec52556024040f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQwNzozMToyMFrOHxtl-w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQwNzozMToyMFrOHxtl-w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTg4OTI3NQ==", "bodyText": "Please factor this into a method and make the assertion messages distinguishable.", "url": "https://github.com/apache/calcite/pull/2256#discussion_r521889275", "createdAt": "2020-11-12T07:31:20Z", "author": {"login": "vlsi"}, "path": "core/src/test/java/org/apache/calcite/sql/type/SqlTypeUtilTest.java", "diffHunk": "@@ -197,4 +197,31 @@ private RelDataType struct(RelDataType...relDataTypes) {\n     }\n     return builder.build();\n   }\n+\n+  @Test public void testEqualSansNullability() {\n+    final RelDataTypeFactory factory = f.typeFactory;\n+\n+    RelDataType bigIntType = f.sqlBigInt;\n+    RelDataType nullableBigIntType = f.sqlBigIntNullable;\n+    RelDataType varCharType = f.sqlVarchar;\n+\n+    // different types\n+    assertThat(\n+        SqlTypeUtil.equalSansNullability(factory, bigIntType, varCharType), is(false));\n+    assertThat(\n+        SqlTypeUtil.equalSansNullability(bigIntType, varCharType), is(false));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f68e982e3f6b1eb1df170b1b50ec52556024040f"}, "originalPosition": 16}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f68e982e3f6b1eb1df170b1b50ec52556024040f", "author": {"user": {"login": "liyafan82", "name": null}}, "url": "https://github.com/apache/calcite/commit/f68e982e3f6b1eb1df170b1b50ec52556024040f", "committedDate": "2020-11-12T03:27:15Z", "message": "[CALCITE-4392] The operation of checking types equal ignoring null can be more efficient"}, "afterCommit": {"oid": "430249fcefd78b1ee877077fcb56adba4270487b", "author": {"user": {"login": "liyafan82", "name": null}}, "url": "https://github.com/apache/calcite/commit/430249fcefd78b1ee877077fcb56adba4270487b", "committedDate": "2020-11-12T08:14:20Z", "message": "[CALCITE-4392] The operation of checking types equal ignoring null can be more efficient"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI4OTAwNTM3", "url": "https://github.com/apache/calcite/pull/2256#pullrequestreview-528900537", "createdAt": "2020-11-12T09:30:44Z", "commit": {"oid": "430249fcefd78b1ee877077fcb56adba4270487b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQwOTozMDo0NVrOHxyBow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQwOTozMDo0NVrOHxyBow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTk2MTg5MQ==", "bodyText": "unequal  is not a valid word.", "url": "https://github.com/apache/calcite/pull/2256#discussion_r521961891", "createdAt": "2020-11-12T09:30:45Z", "author": {"login": "danny0405"}, "path": "core/src/test/java/org/apache/calcite/sql/type/SqlTypeUtilTest.java", "diffHunk": "@@ -197,4 +198,35 @@ private RelDataType struct(RelDataType...relDataTypes) {\n     }\n     return builder.build();\n   }\n+\n+  private void compareTypesIgnoringNullability(\n+      RelDataType type1, RelDataType type2, boolean expectedResult) {\n+    String msg = String.format(Locale.ROOT,\n+        \"%s and %s are expected to be %s ignoring nullability.\",\n+        type1.getFullTypeString(),\n+        type2.getFullTypeString(),\n+        expectedResult ? \"equal\" : \"unequal\");\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "430249fcefd78b1ee877077fcb56adba4270487b"}, "originalPosition": 20}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "430249fcefd78b1ee877077fcb56adba4270487b", "author": {"user": {"login": "liyafan82", "name": null}}, "url": "https://github.com/apache/calcite/commit/430249fcefd78b1ee877077fcb56adba4270487b", "committedDate": "2020-11-12T08:14:20Z", "message": "[CALCITE-4392] The operation of checking types equal ignoring null can be more efficient"}, "afterCommit": {"oid": "01f5fa02aa3979e3a98a924223108cf7dff19226", "author": {"user": {"login": "liyafan82", "name": null}}, "url": "https://github.com/apache/calcite/commit/01f5fa02aa3979e3a98a924223108cf7dff19226", "committedDate": "2020-11-12T09:44:01Z", "message": "[CALCITE-4392] The operation of checking types equal ignoring null can be more efficient"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI4OTIyOTUw", "url": "https://github.com/apache/calcite/pull/2256#pullrequestreview-528922950", "createdAt": "2020-11-12T09:57:11Z", "commit": {"oid": "01f5fa02aa3979e3a98a924223108cf7dff19226"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQwOTo1NzoxMVrOHxzFzA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQwOTo1NzoxMVrOHxzFzA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTk3OTM0MA==", "bodyText": "This should a parameter to compareTypesIgnoringNullability method.", "url": "https://github.com/apache/calcite/pull/2256#discussion_r521979340", "createdAt": "2020-11-12T09:57:11Z", "author": {"login": "vlsi"}, "path": "core/src/test/java/org/apache/calcite/sql/type/SqlTypeUtilTest.java", "diffHunk": "@@ -197,4 +198,35 @@ private RelDataType struct(RelDataType...relDataTypes) {\n     }\n     return builder.build();\n   }\n+\n+  private void compareTypesIgnoringNullability(\n+      RelDataType type1, RelDataType type2, boolean expectedResult) {\n+    String msg = String.format(Locale.ROOT,\n+        \"%s and %s are expected to be %s ignoring nullability.\",\n+        type1.getFullTypeString(),\n+        type2.getFullTypeString(),\n+        expectedResult ? \"equal\" : \"not equal\");\n+\n+    assertThat(msg,\n+        SqlTypeUtil.equalSansNullability(f.typeFactory, type1, type2), is(expectedResult));\n+    assertThat(msg,\n+        SqlTypeUtil.equalSansNullability(type1, type2), is(expectedResult));\n+  }\n+\n+  @Test public void testEqualSansNullability() {\n+    RelDataType bigIntType = f.sqlBigInt;\n+    RelDataType nullableBigIntType = f.sqlBigIntNullable;\n+    RelDataType varCharType = f.sqlVarchar;\n+    RelDataType bigIntType1 =\n+        f.typeFactory.createTypeWithNullability(nullableBigIntType, false);\n+\n+    // different types", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "01f5fa02aa3979e3a98a924223108cf7dff19226"}, "originalPosition": 34}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "01f5fa02aa3979e3a98a924223108cf7dff19226", "author": {"user": {"login": "liyafan82", "name": null}}, "url": "https://github.com/apache/calcite/commit/01f5fa02aa3979e3a98a924223108cf7dff19226", "committedDate": "2020-11-12T09:44:01Z", "message": "[CALCITE-4392] The operation of checking types equal ignoring null can be more efficient"}, "afterCommit": {"oid": "bd7b5f801c65a2d2190e4be5751f62653ab4ca6b", "author": {"user": {"login": "liyafan82", "name": null}}, "url": "https://github.com/apache/calcite/commit/bd7b5f801c65a2d2190e4be5751f62653ab4ca6b", "committedDate": "2020-11-12T10:23:31Z", "message": "[CALCITE-4392] The operation of checking types equal ignoring null can be more efficient"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "bd7b5f801c65a2d2190e4be5751f62653ab4ca6b", "author": {"user": {"login": "liyafan82", "name": null}}, "url": "https://github.com/apache/calcite/commit/bd7b5f801c65a2d2190e4be5751f62653ab4ca6b", "committedDate": "2020-11-12T10:23:31Z", "message": "[CALCITE-4392] The operation of checking types equal ignoring null can be more efficient"}, "afterCommit": {"oid": "e20d5b7d61b10064fa9c9523457af81a82cd35c7", "author": {"user": {"login": "liyafan82", "name": null}}, "url": "https://github.com/apache/calcite/commit/e20d5b7d61b10064fa9c9523457af81a82cd35c7", "committedDate": "2020-11-12T10:55:31Z", "message": "[CALCITE-4392] The operation of checking types equal ignoring null can be more efficient"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0600bba518b126e85de384e5c2a2e7a74e3d1821", "author": {"user": {"login": "liyafan82", "name": null}}, "url": "https://github.com/apache/calcite/commit/0600bba518b126e85de384e5c2a2e7a74e3d1821", "committedDate": "2020-11-12T10:59:19Z", "message": "[CALCITE-4392] The operation of checking types equal ignoring null can be more efficient"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e20d5b7d61b10064fa9c9523457af81a82cd35c7", "author": {"user": {"login": "liyafan82", "name": null}}, "url": "https://github.com/apache/calcite/commit/e20d5b7d61b10064fa9c9523457af81a82cd35c7", "committedDate": "2020-11-12T10:55:31Z", "message": "[CALCITE-4392] The operation of checking types equal ignoring null can be more efficient"}, "afterCommit": {"oid": "0600bba518b126e85de384e5c2a2e7a74e3d1821", "author": {"user": {"login": "liyafan82", "name": null}}, "url": "https://github.com/apache/calcite/commit/0600bba518b126e85de384e5c2a2e7a74e3d1821", "committedDate": "2020-11-12T10:59:19Z", "message": "[CALCITE-4392] The operation of checking types equal ignoring null can be more efficient"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI5ODU2MTY5", "url": "https://github.com/apache/calcite/pull/2256#pullrequestreview-529856169", "createdAt": "2020-11-13T08:17:54Z", "commit": {"oid": "0600bba518b126e85de384e5c2a2e7a74e3d1821"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMwODkxOTAx", "url": "https://github.com/apache/calcite/pull/2256#pullrequestreview-530891901", "createdAt": "2020-11-16T02:59:17Z", "commit": {"oid": "0600bba518b126e85de384e5c2a2e7a74e3d1821"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3078, "cost": 1, "resetAt": "2021-10-28T16:48:13Z"}}}