{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkzNDE4ODcx", "number": 1873, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QwMjoyNTozMVrODr5tJg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQwMzozMDowMFrODtyFfA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3MzYwODA2OnYy", "diffSide": "RIGHT", "path": "core/src/test/java/org/apache/calcite/rex/RexProgramTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QwMjoyNTozMVrOF8hB3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QwNDoxMjoxOFrOF8ikzQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTAwMDAyOQ==", "bodyText": "Should we add more test cases which covers decimal as well?", "url": "https://github.com/apache/calcite/pull/1873#discussion_r399000029", "createdAt": "2020-03-27T02:25:31Z", "author": {"login": "ritesh-kapoor"}, "path": "core/src/test/java/org/apache/calcite/rex/RexProgramTest.java", "diffHunk": "@@ -2265,8 +2265,8 @@ private void assertTypeAndToString(\n     checkSimplify(coalesce(gt(nullInt, nullInt), trueLiteral),\n         \"true\");\n     checkSimplify(coalesce(unaryPlus(nullInt), unaryPlus(vInt())),\n-        \"+(?0.int0)\");\n-    checkSimplifyUnchanged(coalesce(unaryPlus(vInt(1)), unaryPlus(vInt())));\n+        \"?0.int0\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d299c4f98ac1016c85d44336e763cd93164e22af"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTAyNTM1Nw==", "bodyText": "Sounds good. I have added some test cases for decimal. Please take a look.", "url": "https://github.com/apache/calcite/pull/1873#discussion_r399025357", "createdAt": "2020-03-27T04:12:18Z", "author": {"login": "liyafan82"}, "path": "core/src/test/java/org/apache/calcite/rex/RexProgramTest.java", "diffHunk": "@@ -2265,8 +2265,8 @@ private void assertTypeAndToString(\n     checkSimplify(coalesce(gt(nullInt, nullInt), trueLiteral),\n         \"true\");\n     checkSimplify(coalesce(unaryPlus(nullInt), unaryPlus(vInt())),\n-        \"+(?0.int0)\");\n-    checkSimplifyUnchanged(coalesce(unaryPlus(vInt(1)), unaryPlus(vInt())));\n+        \"?0.int0\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTAwMDAyOQ=="}, "originalCommit": {"oid": "d299c4f98ac1016c85d44336e763cd93164e22af"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5MzMzMTE2OnYy", "diffSide": "RIGHT", "path": "core/src/test/java/org/apache/calcite/rex/RexProgramTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQwMzozMDowMFrOF_aGCA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxMTo1Njo1NFrOF_nwbA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjAzMjEzNg==", "bodyText": "Could you please put the comment on the top? Also squash commits.", "url": "https://github.com/apache/calcite/pull/1873#discussion_r402032136", "createdAt": "2020-04-02T03:30:00Z", "author": {"login": "chunweilei"}, "path": "core/src/test/java/org/apache/calcite/rex/RexProgramTest.java", "diffHunk": "@@ -2265,12 +2265,35 @@ private void assertTypeAndToString(\n     checkSimplify(coalesce(gt(nullInt, nullInt), trueLiteral),\n         \"true\");\n     checkSimplify(coalesce(unaryPlus(nullInt), unaryPlus(vInt())),\n-        \"+(?0.int0)\");\n-    checkSimplifyUnchanged(coalesce(unaryPlus(vInt(1)), unaryPlus(vInt())));\n+        \"?0.int0\");\n+    checkSimplifyUnchanged(coalesce(vInt(1), vInt()));\n \n     checkSimplify(coalesce(nullInt, vInt()), \"?0.int0\");\n     checkSimplify(coalesce(vInt(), nullInt, vInt(1)),\n         \"COALESCE(?0.int0, ?0.int1)\");\n+\n+    checkSimplify(coalesce(vDecimalNotNull(), vDecimal()), // first arg not null\n+        \"?0.notNullDecimal0\");\n+    checkSimplifyUnchanged(coalesce(vDecimal(), vDecimalNotNull()));\n+    checkSimplify(coalesce(vDecimal(), vDecimal()), // repeated arg\n+        \"?0.decimal0\");\n+    checkSimplify(coalesce(vDecimalNotNull(), vDecimalNotNull()), // repeated arg\n+        \"?0.notNullDecimal0\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0763fe22dba2e9d2b6aa6c39b23ad1f0df8ed745"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjI1NTk4MA==", "bodyText": "Done. Thank you.", "url": "https://github.com/apache/calcite/pull/1873#discussion_r402255980", "createdAt": "2020-04-02T11:56:54Z", "author": {"login": "liyafan82"}, "path": "core/src/test/java/org/apache/calcite/rex/RexProgramTest.java", "diffHunk": "@@ -2265,12 +2265,35 @@ private void assertTypeAndToString(\n     checkSimplify(coalesce(gt(nullInt, nullInt), trueLiteral),\n         \"true\");\n     checkSimplify(coalesce(unaryPlus(nullInt), unaryPlus(vInt())),\n-        \"+(?0.int0)\");\n-    checkSimplifyUnchanged(coalesce(unaryPlus(vInt(1)), unaryPlus(vInt())));\n+        \"?0.int0\");\n+    checkSimplifyUnchanged(coalesce(vInt(1), vInt()));\n \n     checkSimplify(coalesce(nullInt, vInt()), \"?0.int0\");\n     checkSimplify(coalesce(vInt(), nullInt, vInt(1)),\n         \"COALESCE(?0.int0, ?0.int1)\");\n+\n+    checkSimplify(coalesce(vDecimalNotNull(), vDecimal()), // first arg not null\n+        \"?0.notNullDecimal0\");\n+    checkSimplifyUnchanged(coalesce(vDecimal(), vDecimalNotNull()));\n+    checkSimplify(coalesce(vDecimal(), vDecimal()), // repeated arg\n+        \"?0.decimal0\");\n+    checkSimplify(coalesce(vDecimalNotNull(), vDecimalNotNull()), // repeated arg\n+        \"?0.notNullDecimal0\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjAzMjEzNg=="}, "originalCommit": {"oid": "0763fe22dba2e9d2b6aa6c39b23ad1f0df8ed745"}, "originalPosition": 19}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 228, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}