{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDgyNDY1MjE2", "number": 2143, "title": "[CALCITE-4224] Add an method for RelNode to output its tree digest like RelOptUtil.toString (Jiatao Tao)", "bodyText": "", "createdAt": "2020-09-09T03:39:53Z", "url": "https://github.com/apache/calcite/pull/2143", "merged": true, "mergeCommit": {"oid": "81db26dd077c44242417d2dbd1cd9f78890a4a73"}, "closed": true, "closedAt": "2020-09-22T11:06:56Z", "author": {"login": "Aaaaaaron"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdHH6Y4gFqTQ4NDc3NTk4OQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdIUdkvAFqTQ4NzI2NzMyOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg0Nzc1OTg5", "url": "https://github.com/apache/calcite/pull/2143#pullrequestreview-484775989", "createdAt": "2020-09-09T08:27:49Z", "commit": {"oid": "ba7e1465893f129ac1933aea539d4a295afa8216"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQwODoyNzo0OVrOHO8Yig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQwODoyNzo0OVrOHO8Yig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTQzMTQzNA==", "bodyText": "The new method should have a javadoc", "url": "https://github.com/apache/calcite/pull/2143#discussion_r485431434", "createdAt": "2020-09-09T08:27:49Z", "author": {"login": "rubenada"}, "path": "core/src/main/java/org/apache/calcite/rel/RelNode.java", "diffHunk": "@@ -246,6 +246,8 @@ default String getDigest() {\n     return getRelDigest().toString();\n   }\n \n+  String getTreeDigest();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba7e1465893f129ac1933aea539d4a295afa8216"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg0Nzg5ODQw", "url": "https://github.com/apache/calcite/pull/2143#pullrequestreview-484789840", "createdAt": "2020-09-09T08:44:22Z", "commit": {"oid": "ba7e1465893f129ac1933aea539d4a295afa8216"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQwODo0NDoyMlrOHO9ECg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQwODo0NDoyMlrOHO9ECg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTQ0MjU3MA==", "bodyText": "This is what I meant that is not very neat; adding a new API in RelNode just for debugging purposes.\nNevertheless if we decide to go this way I think it would be better to use the following signature:\nString explain();\nGoing one step further we could make it a default method with an implementation similar to the one below:\ndefault String explain() {\n    StringWriter sw = new StringWriter();\n    RelWriter planWriter =\n        new RelWriterImpl(\n            new PrintWriter(sw), SqlExplainLevel.EXPPLAN_ATTRIBUTES, false);\n    explain(planWriter);\n    return sw.toString();\n}\n\nEven more we could deprecate/remove RelOptUtil#toString(RelNode) variants in favor of this one.", "url": "https://github.com/apache/calcite/pull/2143#discussion_r485442570", "createdAt": "2020-09-09T08:44:22Z", "author": {"login": "zabetak"}, "path": "core/src/main/java/org/apache/calcite/rel/RelNode.java", "diffHunk": "@@ -246,6 +246,8 @@ default String getDigest() {\n     return getRelDigest().toString();\n   }\n \n+  String getTreeDigest();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba7e1465893f129ac1933aea539d4a295afa8216"}, "originalPosition": 4}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ba7e1465893f129ac1933aea539d4a295afa8216", "author": {"user": {"login": "Aaaaaaron", "name": "Jiatao Tao"}}, "url": "https://github.com/apache/calcite/commit/ba7e1465893f129ac1933aea539d4a295afa8216", "committedDate": "2020-09-09T03:39:20Z", "message": "[CALCITE-4224] Add an method for RelNode to output its tree digest like RelOptUtil.toString (Jiatao Tao)"}, "afterCommit": {"oid": "9dc2a849def6027fc63039f057cb7585836d6fca", "author": {"user": {"login": "Aaaaaaron", "name": "Jiatao Tao"}}, "url": "https://github.com/apache/calcite/commit/9dc2a849def6027fc63039f057cb7585836d6fca", "committedDate": "2020-09-10T06:37:44Z", "message": "[CALCITE-4224] Add a method for RelNode to output its relational expression string (Jiatao Tao)"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9dc2a849def6027fc63039f057cb7585836d6fca", "author": {"user": {"login": "Aaaaaaron", "name": "Jiatao Tao"}}, "url": "https://github.com/apache/calcite/commit/9dc2a849def6027fc63039f057cb7585836d6fca", "committedDate": "2020-09-10T06:37:44Z", "message": "[CALCITE-4224] Add a method for RelNode to output its relational expression string (Jiatao Tao)"}, "afterCommit": {"oid": "3fe1a6bc49998e533e16645932cedc2db3ee90e5", "author": {"user": {"login": "Aaaaaaron", "name": "Jiatao Tao"}}, "url": "https://github.com/apache/calcite/commit/3fe1a6bc49998e533e16645932cedc2db3ee90e5", "committedDate": "2020-09-11T02:38:12Z", "message": "[CALCITE-4224] Add a method for RelNode to output its relational expression string (Jiatao Tao)"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg2NTY1ODgy", "url": "https://github.com/apache/calcite/pull/2143#pullrequestreview-486565882", "createdAt": "2020-09-11T08:10:37Z", "commit": {"oid": "3fe1a6bc49998e533e16645932cedc2db3ee90e5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQwODoxMDozN1rOHQS20g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQwODoxMDozN1rOHQS20g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njg0ODIxMA==", "bodyText": "nitpicking: I think this new method should go together (e.g. right after) with void explain(RelWriter pw);\nAlso, since RelNode is an interface (and not an abstract class), IMHO javadoc should not say \"sub-classes\", but instead something along the lines: \"We recommend that classes implementing this interface do not override this method\"", "url": "https://github.com/apache/calcite/pull/2143#discussion_r486848210", "createdAt": "2020-09-11T08:10:37Z", "author": {"login": "rubenada"}, "path": "core/src/main/java/org/apache/calcite/rel/RelNode.java", "diffHunk": "@@ -232,6 +233,21 @@\n    */\n   RelNode onRegister(RelOptPlanner planner);\n \n+  /**\n+   * Returns a relational expression string of this {@code RelNode}.\n+   * The string returned is the same as\n+   * {@link RelOptUtil#toString(org.apache.calcite.rel.RelNode)}.\n+   *\n+   * This method is intended mainly for use while debugging in an IDE,\n+   * as a convenient short-hand for RelOptUtil.toString.\n+   * We recommend that sub-classes do not override this method.\n+   *\n+   * @return Relational expression string of this {@code RelNode}\n+   */\n+  default String explain() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3fe1a6bc49998e533e16645932cedc2db3ee90e5"}, "originalPosition": 23}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c49a509c5917bfdacda11c7ebb2375b80f54321d", "author": {"user": {"login": "Aaaaaaron", "name": "Jiatao Tao"}}, "url": "https://github.com/apache/calcite/commit/c49a509c5917bfdacda11c7ebb2375b80f54321d", "committedDate": "2020-09-12T09:00:58Z", "message": "[CALCITE-4224] Add a method for RelNode to output its relational expression string (Jiatao Tao)"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3fe1a6bc49998e533e16645932cedc2db3ee90e5", "author": {"user": {"login": "Aaaaaaron", "name": "Jiatao Tao"}}, "url": "https://github.com/apache/calcite/commit/3fe1a6bc49998e533e16645932cedc2db3ee90e5", "committedDate": "2020-09-11T02:38:12Z", "message": "[CALCITE-4224] Add a method for RelNode to output its relational expression string (Jiatao Tao)"}, "afterCommit": {"oid": "c49a509c5917bfdacda11c7ebb2375b80f54321d", "author": {"user": {"login": "Aaaaaaron", "name": "Jiatao Tao"}}, "url": "https://github.com/apache/calcite/commit/c49a509c5917bfdacda11c7ebb2375b80f54321d", "committedDate": "2020-09-12T09:00:58Z", "message": "[CALCITE-4224] Add a method for RelNode to output its relational expression string (Jiatao Tao)"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg3MjY3MzI5", "url": "https://github.com/apache/calcite/pull/2143#pullrequestreview-487267329", "createdAt": "2020-09-13T01:39:01Z", "commit": {"oid": "c49a509c5917bfdacda11c7ebb2375b80f54321d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xM1QwMTozOTowMVrOHQ4sRQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xM1QwMTozOTowMVrOHQ4sRQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzQ2ODEwMQ==", "bodyText": "What is the difference between using RelOptUtil.toString and RelOptUtil#dumpPlan here?", "url": "https://github.com/apache/calcite/pull/2143#discussion_r487468101", "createdAt": "2020-09-13T01:39:01Z", "author": {"login": "amaliujia"}, "path": "core/src/main/java/org/apache/calcite/rel/RelNode.java", "diffHunk": "@@ -222,6 +223,22 @@\n    */\n   void explain(RelWriter pw);\n \n+  /**\n+   * Returns a relational expression string of this {@code RelNode}.\n+   * The string returned is the same as\n+   * {@link RelOptUtil#toString(org.apache.calcite.rel.RelNode)}.\n+   *\n+   * This method is intended mainly for use while debugging in an IDE,\n+   * as a convenient short-hand for RelOptUtil.toString.\n+   * We recommend that classes implementing this interface\n+   * do not override this method.\n+   *\n+   * @return Relational expression string of this {@code RelNode}\n+   */\n+  default String explain() {\n+    return RelOptUtil.toString(this);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c49a509c5917bfdacda11c7ebb2375b80f54321d"}, "originalPosition": 25}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3321, "cost": 1, "resetAt": "2021-10-28T16:48:13Z"}}}