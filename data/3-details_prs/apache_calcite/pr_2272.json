{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI0MDYxNTk3", "number": 2272, "title": "[CALCITE-4409] Improve exception when RelBuilder tries to create a field on a non-struct expression", "bodyText": "Jira: CALCITE-4409", "createdAt": "2020-11-19T16:05:47Z", "url": "https://github.com/apache/calcite/pull/2272", "merged": true, "mergeCommit": {"oid": "fc912eb19d9ebbaee843dc1e9d3b4175e757cb53"}, "closed": true, "closedAt": "2020-11-26T11:24:36Z", "author": {"login": "rubenada"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdfRMN0gFqTUzNjI2NjU5Ng==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdgO2SpgFqTUzOTA5NjY4MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM2MjY2NTk2", "url": "https://github.com/apache/calcite/pull/2272#pullrequestreview-536266596", "createdAt": "2020-11-23T08:50:33Z", "commit": {"oid": "7ee85afae2e19f02113913b97a37e79b8ff956bd"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QwODo1MDozNFrOH4D0SQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QwODo1MDozNFrOH4D0SQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODU0NDg0MQ==", "bodyText": "I am wondering where is it better to add this check here or inside RexBuilder#makeFieldAccess. Clients who call RexBuilder direclty will still get the NPE.", "url": "https://github.com/apache/calcite/pull/2272#discussion_r528544841", "createdAt": "2020-11-23T08:50:34Z", "author": {"login": "zabetak"}, "path": "core/src/main/java/org/apache/calcite/tools/RelBuilder.java", "diffHunk": "@@ -495,6 +495,10 @@ public RexNode field(int inputCount, String alias, String fieldName) {\n \n   /** Returns a reference to a given field of a record-valued expression. */\n   public RexNode field(RexNode e, String name) {\n+    if (!e.getType().isStruct()) {\n+      throw new IllegalArgumentException(\"Requested field \" + name + \" in non-struct expression \"\n+          + e.toString() + \" (type: \" + e.getType() + \")\");\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7ee85afae2e19f02113913b97a37e79b8ff956bd"}, "originalPosition": 7}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM2NDU1Njk1", "url": "https://github.com/apache/calcite/pull/2272#pullrequestreview-536455695", "createdAt": "2020-11-23T13:08:33Z", "commit": {"oid": "e3e22b6ed37485affbf01ad89af5cd03c936585a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QxMzowODozNFrOH4MtGA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QxMzowODozNFrOH4MtGA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODY5MDQ1Ng==", "bodyText": "In which case, user can pass in a null fieldList ? I would rather to move the check to the builder that generate the RelDataTypeImpl instance.\nThe exception message is also confusing, we should tell user why he does wrong but not \"we got null field list\".", "url": "https://github.com/apache/calcite/pull/2272#discussion_r528690456", "createdAt": "2020-11-23T13:08:34Z", "author": {"login": "danny0405"}, "path": "core/src/main/java/org/apache/calcite/rel/type/RelDataTypeImpl.java", "diffHunk": "@@ -79,6 +79,10 @@ protected RelDataTypeImpl() {\n \n   @Override public RelDataTypeField getField(String fieldName, boolean caseSensitive,\n       boolean elideRecord) {\n+    if (fieldList == null) {\n+      throw new IllegalStateException(\"Requested field \" + fieldName\n+          + \" in a type with null fieldList, type = \" + this);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e3e22b6ed37485affbf01ad89af5cd03c936585a"}, "originalPosition": 6}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3ead64cb2db433227f4c275b59bf161369504a0b", "author": {"user": {"login": "rubenada", "name": null}}, "url": "https://github.com/apache/calcite/commit/3ead64cb2db433227f4c275b59bf161369504a0b", "committedDate": "2020-11-25T10:44:41Z", "message": "[CALCITE-4409] Improve exception when RelBuilder tries to create a field on a non-struct expression"}, "afterCommit": {"oid": "367181d776964196529377367f396ffe9f812d44", "author": {"user": {"login": "rubenada", "name": null}}, "url": "https://github.com/apache/calcite/commit/367181d776964196529377367f396ffe9f812d44", "committedDate": "2020-11-25T10:45:30Z", "message": "[CALCITE-4409] Improve exception when RelBuilder tries to create a field on a non-struct expression"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0ad1bc43ce39f1869b8f1a0e135710bfcc99d04f", "author": {"user": {"login": "rubenada", "name": null}}, "url": "https://github.com/apache/calcite/commit/0ad1bc43ce39f1869b8f1a0e135710bfcc99d04f", "committedDate": "2020-11-25T16:12:55Z", "message": "[CALCITE-4409] Improve exception when RelBuilder tries to create a field on a non-struct expression"}, "afterCommit": {"oid": "7fc50b015bca2df4dbe41c7fd07bed6b5cf3c1ff", "author": {"user": {"login": "rubenada", "name": null}}, "url": "https://github.com/apache/calcite/commit/7fc50b015bca2df4dbe41c7fd07bed6b5cf3c1ff", "committedDate": "2020-11-25T16:13:31Z", "message": "[CALCITE-4409] Improve exception when RelBuilder tries to create a field on a non-struct expression"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM4OTQ3MTYx", "url": "https://github.com/apache/calcite/pull/2272#pullrequestreview-538947161", "createdAt": "2020-11-26T02:06:44Z", "commit": {"oid": "7fc50b015bca2df4dbe41c7fd07bed6b5cf3c1ff"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQwMjowNjo0NFrOH6JXGg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQwMjowNjo0NFrOH6JXGg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDczMjgyNg==", "bodyText": "What is the purpose to split into two containsString here ?", "url": "https://github.com/apache/calcite/pull/2272#discussion_r530732826", "createdAt": "2020-11-26T02:06:44Z", "author": {"login": "danny0405"}, "path": "core/src/test/java/org/apache/calcite/test/RelBuilderTest.java", "diffHunk": "@@ -2577,6 +2577,22 @@ private RelNode buildRelWithDuplicateAggregates(\n     assertThat(ex.getMessage(), allOf(containsString(\"Expression\"), containsString(\"not found\")));\n   }\n \n+  /** Test case for\n+   * <a href=\"https://issues.apache.org/jira/browse/CALCITE-4409\">[CALCITE-4409]\n+   * Improve exception when RelBuilder tries to create a field on a non-struct expression</a>. */\n+  @Test void testFieldOnNonStructExpression() {\n+    final RelBuilder builder = RelBuilder.create(config().build());\n+    IllegalStateException ex = assertThrows(IllegalStateException.class, () -> {\n+      builder.scan(\"EMP\")\n+          .project(\n+              builder.field(builder.field(\"EMPNO\"), \"abc\"))\n+          .build();\n+    }, \"Field should fail since we are trying access a field on expression with non-struct type\");\n+    assertThat(ex.getMessage(),\n+        allOf(containsString(\"Trying to access field\"),\n+            containsString(\"in a type with no fields\")));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7fc50b015bca2df4dbe41c7fd07bed6b5cf3c1ff"}, "originalPosition": 17}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "22646543a6aa28f24d136093f556ce7154eec528", "author": {"user": {"login": "rubenada", "name": null}}, "url": "https://github.com/apache/calcite/commit/22646543a6aa28f24d136093f556ce7154eec528", "committedDate": "2020-11-26T08:35:35Z", "message": "[CALCITE-4409] Improve exception when RelBuilder tries to create a field on a non-struct expression"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "bcbf748ba644cf5f05298476436877ca410fe5a2", "author": {"user": {"login": "rubenada", "name": null}}, "url": "https://github.com/apache/calcite/commit/bcbf748ba644cf5f05298476436877ca410fe5a2", "committedDate": "2020-11-26T08:34:58Z", "message": "[CALCITE-4409] Improve exception when RelBuilder tries to create a field on a non-struct expression"}, "afterCommit": {"oid": "22646543a6aa28f24d136093f556ce7154eec528", "author": {"user": {"login": "rubenada", "name": null}}, "url": "https://github.com/apache/calcite/commit/22646543a6aa28f24d136093f556ce7154eec528", "committedDate": "2020-11-26T08:35:35Z", "message": "[CALCITE-4409] Improve exception when RelBuilder tries to create a field on a non-struct expression"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM5MDk1MTY2", "url": "https://github.com/apache/calcite/pull/2272#pullrequestreview-539095166", "createdAt": "2020-11-26T08:38:48Z", "commit": {"oid": "22646543a6aa28f24d136093f556ce7154eec528"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM5MDk2Njgw", "url": "https://github.com/apache/calcite/pull/2272#pullrequestreview-539096680", "createdAt": "2020-11-26T08:40:47Z", "commit": {"oid": "22646543a6aa28f24d136093f556ce7154eec528"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4993, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}