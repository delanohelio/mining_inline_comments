{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU2Nzc3MzE2", "number": 2083, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QwMjowMjoxM1rOESNi-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QwMjowMjoxM1rOESNi-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3NTMxNzY4OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/org/apache/calcite/schema/impl/ListTransientTable.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QwMjowMjoxM1rOG3Ratw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxMzo1NDowN1rOG3jgJw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDYxMDIzMQ==", "bodyText": "When the current can be null ?", "url": "https://github.com/apache/calcite/pull/2083#discussion_r460610231", "createdAt": "2020-07-27T02:02:13Z", "author": {"login": "danny0405"}, "path": "core/src/main/java/org/apache/calcite/schema/impl/ListTransientTable.java", "diffHunk": "@@ -99,6 +99,9 @@ public ListTransientTable(String name, RelDataType rowType) {\n           // TODO cleaner way to handle non-array objects?\n           @Override public Object[] current() {\n             Object current = list.get(i);\n+            if (current == null) {\n+              return null;\n+            }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ccb2e20ab5883bd10ea58d0ff6a4ab9a802eb432"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDY3NzY3OA==", "bodyText": "ListTransientTable is currently used in combination with repeatUnion to support recursive queries. So we could get to this scenario if we have a null involved in the repeatUnion.", "url": "https://github.com/apache/calcite/pull/2083#discussion_r460677678", "createdAt": "2020-07-27T06:43:50Z", "author": {"login": "rubenada"}, "path": "core/src/main/java/org/apache/calcite/schema/impl/ListTransientTable.java", "diffHunk": "@@ -99,6 +99,9 @@ public ListTransientTable(String name, RelDataType rowType) {\n           // TODO cleaner way to handle non-array objects?\n           @Override public Object[] current() {\n             Object current = list.get(i);\n+            if (current == null) {\n+              return null;\n+            }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDYxMDIzMQ=="}, "originalCommit": {"oid": "ccb2e20ab5883bd10ea58d0ff6a4ab9a802eb432"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDY4NTQyMg==", "bodyText": "Hmm, is it possible to write a test case there, for your case null involved repeatUnion", "url": "https://github.com/apache/calcite/pull/2083#discussion_r460685422", "createdAt": "2020-07-27T07:04:01Z", "author": {"login": "danny0405"}, "path": "core/src/main/java/org/apache/calcite/schema/impl/ListTransientTable.java", "diffHunk": "@@ -99,6 +99,9 @@ public ListTransientTable(String name, RelDataType rowType) {\n           // TODO cleaner way to handle non-array objects?\n           @Override public Object[] current() {\n             Object current = list.get(i);\n+            if (current == null) {\n+              return null;\n+            }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDYxMDIzMQ=="}, "originalCommit": {"oid": "ccb2e20ab5883bd10ea58d0ff6a4ab9a802eb432"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDkwNjUzNQ==", "bodyText": "Thanks for the feedback @danny0405 . I have provided a unit test that reproduces the NPE.", "url": "https://github.com/apache/calcite/pull/2083#discussion_r460906535", "createdAt": "2020-07-27T13:54:07Z", "author": {"login": "rubenada"}, "path": "core/src/main/java/org/apache/calcite/schema/impl/ListTransientTable.java", "diffHunk": "@@ -99,6 +99,9 @@ public ListTransientTable(String name, RelDataType rowType) {\n           // TODO cleaner way to handle non-array objects?\n           @Override public Object[] current() {\n             Object current = list.get(i);\n+            if (current == null) {\n+              return null;\n+            }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDYxMDIzMQ=="}, "originalCommit": {"oid": "ccb2e20ab5883bd10ea58d0ff6a4ab9a802eb432"}, "originalPosition": 6}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 97, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}