{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg2MTE2ODAx", "number": 1853, "reviewThreads": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQxNzo0MToyNFrODmyW_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQwNTo0NzowNlrODpwZxw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxOTk3NTY3OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/org/apache/calcite/plan/volcano/VolcanoPlanner.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQxNzo0MToyNFrOF0Z6tQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQwMzozNTozNVrOF1QPmQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDQ5NDkwMQ==", "bodyText": "You can remove this method.", "url": "https://github.com/apache/calcite/pull/1853#discussion_r390494901", "createdAt": "2020-03-10T17:41:24Z", "author": {"login": "hsyuan"}, "path": "core/src/main/java/org/apache/calcite/plan/volcano/VolcanoPlanner.java", "diffHunk": "@@ -917,13 +917,13 @@ RelNode changeTraitsUsingConverters(\n   public void setImportance(RelNode rel, double importance) {\n     assert rel != null;\n     if (importance == 0d) {\n-      relImportances.put(rel, importance);\n+      nodesToSkip.add(rel);\n     }\n   }\n \n   Double getImportance(RelNode rel) {\n     assert rel != null;\n-    return relImportances.get(rel);\n+    return nodesToSkip.contains(rel) ? 0d : null;\n   }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5ba9b3436bac0e0996ae2efa4791e81388cd0ce8"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTM4NDk4NQ==", "bodyText": "Removed. Thanks for the good suggestion.", "url": "https://github.com/apache/calcite/pull/1853#discussion_r391384985", "createdAt": "2020-03-12T03:35:35Z", "author": {"login": "liyafan82"}, "path": "core/src/main/java/org/apache/calcite/plan/volcano/VolcanoPlanner.java", "diffHunk": "@@ -917,13 +917,13 @@ RelNode changeTraitsUsingConverters(\n   public void setImportance(RelNode rel, double importance) {\n     assert rel != null;\n     if (importance == 0d) {\n-      relImportances.put(rel, importance);\n+      nodesToSkip.add(rel);\n     }\n   }\n \n   Double getImportance(RelNode rel) {\n     assert rel != null;\n-    return relImportances.get(rel);\n+    return nodesToSkip.contains(rel) ? 0d : null;\n   }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDQ5NDkwMQ=="}, "originalCommit": {"oid": "5ba9b3436bac0e0996ae2efa4791e81388cd0ce8"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxOTk3NjUxOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/org/apache/calcite/plan/volcano/VolcanoPlanner.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQxNzo0MTozN1rOF0Z7Sg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQwMzozNTo1NVrOF1QP-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDQ5NTA1MA==", "bodyText": "prunedNodes", "url": "https://github.com/apache/calcite/pull/1853#discussion_r390495050", "createdAt": "2020-03-10T17:41:37Z", "author": {"login": "hsyuan"}, "path": "core/src/main/java/org/apache/calcite/plan/volcano/VolcanoPlanner.java", "diffHunk": "@@ -135,16 +135,16 @@\n       new IdentityHashMap<>();\n \n   /**\n-   * The importance of relational expressions.\n+   * The nodes with zero importance.\n    *\n-   * <p>The map contains only RelNodes whose importance has been overridden\n+   * <p>The set contains only RelNodes whose importance has been set to 0\n    * using {@link RelOptPlanner#setImportance(RelNode, double)}. Other\n    * RelNodes are presumed to have 'normal' importance.\n    *\n    * <p>If a RelNode has 0 importance, all {@link RelOptRuleCall}s using it\n    * are ignored, and future RelOptRuleCalls are not queued up.\n    */\n-  final Map<RelNode, Double> relImportances = new HashMap<>();\n+  final Set<RelNode> nodesToSkip = new HashSet<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5ba9b3436bac0e0996ae2efa4791e81388cd0ce8"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTM4NTA4Mg==", "bodyText": "Sounds good. Revised accordingly.", "url": "https://github.com/apache/calcite/pull/1853#discussion_r391385082", "createdAt": "2020-03-12T03:35:55Z", "author": {"login": "liyafan82"}, "path": "core/src/main/java/org/apache/calcite/plan/volcano/VolcanoPlanner.java", "diffHunk": "@@ -135,16 +135,16 @@\n       new IdentityHashMap<>();\n \n   /**\n-   * The importance of relational expressions.\n+   * The nodes with zero importance.\n    *\n-   * <p>The map contains only RelNodes whose importance has been overridden\n+   * <p>The set contains only RelNodes whose importance has been set to 0\n    * using {@link RelOptPlanner#setImportance(RelNode, double)}. Other\n    * RelNodes are presumed to have 'normal' importance.\n    *\n    * <p>If a RelNode has 0 importance, all {@link RelOptRuleCall}s using it\n    * are ignored, and future RelOptRuleCalls are not queued up.\n    */\n-  final Map<RelNode, Double> relImportances = new HashMap<>();\n+  final Set<RelNode> nodesToSkip = new HashSet<>();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDQ5NTA1MA=="}, "originalCommit": {"oid": "5ba9b3436bac0e0996ae2efa4791e81388cd0ce8"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzMjM0NTE5OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/org/apache/calcite/plan/AbstractRelOptPlanner.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QyMDozMToyMlrOF2RltQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNFQwOToxODoxM1rOF2Yntw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjQ1NTYwNQ==", "bodyText": "Is it possible to add a API to RelNode? e.g.\nvoid RelNode.setPruned();\nboolean RelNode.isPruned();", "url": "https://github.com/apache/calcite/pull/1853#discussion_r392455605", "createdAt": "2020-03-13T20:31:22Z", "author": {"login": "hsyuan"}, "path": "core/src/main/java/org/apache/calcite/plan/AbstractRelOptPlanner.java", "diffHunk": "@@ -221,9 +221,13 @@ public long getRelMetadataTimestamp(RelNode rel) {\n     return 0;\n   }\n \n+  @Deprecated\n   public void setImportance(RelNode rel, double importance) {\n   }\n \n+  public void pruneNode(RelNode rel) {\n+  }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ffb0b11a51cd7ce4f57f2c60a2aebdc18217a8a4"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjUxNjIxNQ==", "bodyText": "I suggest just name it \"prune\", since it's pretty clear that you are going to prune a RelNode by looking at the parameter. It's also consistent with the original naming (setImportance() not setNodeImportance()).", "url": "https://github.com/apache/calcite/pull/1853#discussion_r392516215", "createdAt": "2020-03-13T22:40:04Z", "author": {"login": "xndai"}, "path": "core/src/main/java/org/apache/calcite/plan/AbstractRelOptPlanner.java", "diffHunk": "@@ -221,9 +221,13 @@ public long getRelMetadataTimestamp(RelNode rel) {\n     return 0;\n   }\n \n+  @Deprecated\n   public void setImportance(RelNode rel, double importance) {\n   }\n \n+  public void pruneNode(RelNode rel) {\n+  }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjQ1NTYwNQ=="}, "originalCommit": {"oid": "ffb0b11a51cd7ce4f57f2c60a2aebdc18217a8a4"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjU3MDgwNw==", "bodyText": "@xndai Revised. Thanks for your good suggestion.", "url": "https://github.com/apache/calcite/pull/1853#discussion_r392570807", "createdAt": "2020-03-14T09:18:13Z", "author": {"login": "liyafan82"}, "path": "core/src/main/java/org/apache/calcite/plan/AbstractRelOptPlanner.java", "diffHunk": "@@ -221,9 +221,13 @@ public long getRelMetadataTimestamp(RelNode rel) {\n     return 0;\n   }\n \n+  @Deprecated\n   public void setImportance(RelNode rel, double importance) {\n   }\n \n+  public void pruneNode(RelNode rel) {\n+  }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjQ1NTYwNQ=="}, "originalCommit": {"oid": "ffb0b11a51cd7ce4f57f2c60a2aebdc18217a8a4"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzMjM1ODA2OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/org/apache/calcite/plan/volcano/VolcanoPlanner.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QyMDozNDoxNlrOF2Rs5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNFQwOToxODoyNVrOF2YnwQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjQ1NzQ0NA==", "bodyText": "change to pruned", "url": "https://github.com/apache/calcite/pull/1853#discussion_r392457444", "createdAt": "2020-03-13T20:34:16Z", "author": {"login": "hsyuan"}, "path": "core/src/main/java/org/apache/calcite/plan/volcano/VolcanoPlanner.java", "diffHunk": "@@ -1003,9 +999,8 @@ private void dumpSets(PrintWriter pw) {\n               }\n             }\n           }\n-          Double importance = relImportances.get(rel);\n-          if (importance != null) {\n-            pw.print(\", importance=\" + importance);\n+          if (prunedNodes.contains(rel)) {\n+            pw.print(\", importance=0\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ffb0b11a51cd7ce4f57f2c60a2aebdc18217a8a4"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjU3MDgxNw==", "bodyText": "Revised. Thank you.", "url": "https://github.com/apache/calcite/pull/1853#discussion_r392570817", "createdAt": "2020-03-14T09:18:25Z", "author": {"login": "liyafan82"}, "path": "core/src/main/java/org/apache/calcite/plan/volcano/VolcanoPlanner.java", "diffHunk": "@@ -1003,9 +999,8 @@ private void dumpSets(PrintWriter pw) {\n               }\n             }\n           }\n-          Double importance = relImportances.get(rel);\n-          if (importance != null) {\n-            pw.print(\", importance=\" + importance);\n+          if (prunedNodes.contains(rel)) {\n+            pw.print(\", importance=0\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjQ1NzQ0NA=="}, "originalCommit": {"oid": "ffb0b11a51cd7ce4f57f2c60a2aebdc18217a8a4"}, "originalPosition": 58}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzODcxNTQyOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/org/apache/calcite/plan/volcano/RuleQueue.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QwMzo0NjozM1rOF3NDbw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQxMjowMDozMFrOF4BzqQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzQyOTg3MQ==", "bodyText": "Why change it ?", "url": "https://github.com/apache/calcite/pull/1853#discussion_r393429871", "createdAt": "2020-03-17T03:46:33Z", "author": {"login": "chunweilei"}, "path": "core/src/main/java/org/apache/calcite/plan/volcano/RuleQueue.java", "diffHunk": "@@ -265,7 +264,7 @@ private void checkDuplicateSubsets(Deque<RelSubset> subsets,\n    * for a particular\n    * {@link VolcanoPlannerPhase phase of the planner's execution}.\n    */\n-  private static class PhaseMatchList {\n+  static class PhaseMatchList {\n     /**", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aa691ecbd3486e9630c8492521179c783cbfdefe"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDA2NDI2MQ==", "bodyText": "This class is referenced in a test case.", "url": "https://github.com/apache/calcite/pull/1853#discussion_r394064261", "createdAt": "2020-03-18T01:51:30Z", "author": {"login": "liyafan82"}, "path": "core/src/main/java/org/apache/calcite/plan/volcano/RuleQueue.java", "diffHunk": "@@ -265,7 +264,7 @@ private void checkDuplicateSubsets(Deque<RelSubset> subsets,\n    * for a particular\n    * {@link VolcanoPlannerPhase phase of the planner's execution}.\n    */\n-  private static class PhaseMatchList {\n+  static class PhaseMatchList {\n     /**", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzQyOTg3MQ=="}, "originalCommit": {"oid": "aa691ecbd3486e9630c8492521179c783cbfdefe"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDA5MDY3OA==", "bodyText": "I don't think it is a good practice to modify it just for the test case. Can we change the test case?", "url": "https://github.com/apache/calcite/pull/1853#discussion_r394090678", "createdAt": "2020-03-18T03:41:22Z", "author": {"login": "chunweilei"}, "path": "core/src/main/java/org/apache/calcite/plan/volcano/RuleQueue.java", "diffHunk": "@@ -265,7 +264,7 @@ private void checkDuplicateSubsets(Deque<RelSubset> subsets,\n    * for a particular\n    * {@link VolcanoPlannerPhase phase of the planner's execution}.\n    */\n-  private static class PhaseMatchList {\n+  static class PhaseMatchList {\n     /**", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzQyOTg3MQ=="}, "originalCommit": {"oid": "aa691ecbd3486e9630c8492521179c783cbfdefe"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDI5NDE4NQ==", "bodyText": "Sure. Sounds reasonable. I have revised the test case, and restored the modifier.", "url": "https://github.com/apache/calcite/pull/1853#discussion_r394294185", "createdAt": "2020-03-18T12:00:30Z", "author": {"login": "liyafan82"}, "path": "core/src/main/java/org/apache/calcite/plan/volcano/RuleQueue.java", "diffHunk": "@@ -265,7 +264,7 @@ private void checkDuplicateSubsets(Deque<RelSubset> subsets,\n    * for a particular\n    * {@link VolcanoPlannerPhase phase of the planner's execution}.\n    */\n-  private static class PhaseMatchList {\n+  static class PhaseMatchList {\n     /**", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzQyOTg3MQ=="}, "originalCommit": {"oid": "aa691ecbd3486e9630c8492521179c783cbfdefe"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzODg1MTgyOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/org/apache/calcite/plan/RelOptPlanner.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QwNToyNjowOVrOF3OXZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQwMTo1MTo0NlrOF3zxwA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzQ1MTM2NQ==", "bodyText": "needs update", "url": "https://github.com/apache/calcite/pull/1853#discussion_r393451365", "createdAt": "2020-03-17T05:26:09Z", "author": {"login": "hsyuan"}, "path": "core/src/main/java/org/apache/calcite/plan/RelOptPlanner.java", "diffHunk": "@@ -307,9 +307,24 @@ RelNode register(\n    *\n    * @param rel        Relational expression\n    * @param importance Importance\n+   *\n+   * @deprecated This API will be removed in a future release, as we no longer\n+   * support the concept of node importance. Please use\n+   * {@link RelOptPlanner#pruneNode(RelNode)} method instead.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aa691ecbd3486e9630c8492521179c783cbfdefe"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDA2NDMyMA==", "bodyText": "Nice catch. Thank you.", "url": "https://github.com/apache/calcite/pull/1853#discussion_r394064320", "createdAt": "2020-03-18T01:51:46Z", "author": {"login": "liyafan82"}, "path": "core/src/main/java/org/apache/calcite/plan/RelOptPlanner.java", "diffHunk": "@@ -307,9 +307,24 @@ RelNode register(\n    *\n    * @param rel        Relational expression\n    * @param importance Importance\n+   *\n+   * @deprecated This API will be removed in a future release, as we no longer\n+   * support the concept of node importance. Please use\n+   * {@link RelOptPlanner#pruneNode(RelNode)} method instead.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzQ1MTM2NQ=="}, "originalCommit": {"oid": "aa691ecbd3486e9630c8492521179c783cbfdefe"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1MTExMTcyOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/org/apache/calcite/plan/AbstractRelOptPlanner.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQwNTo0NjozNVrOF5IOQw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQwNjozODozMVrOF5I1fQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQ0Nzg3NQ==", "bodyText": "Mark a deprecation version here", "url": "https://github.com/apache/calcite/pull/1853#discussion_r395447875", "createdAt": "2020-03-20T05:46:35Z", "author": {"login": "danny0405"}, "path": "core/src/main/java/org/apache/calcite/plan/AbstractRelOptPlanner.java", "diffHunk": "@@ -221,9 +221,13 @@ public long getRelMetadataTimestamp(RelNode rel) {\n     return 0;\n   }\n \n+  @Deprecated\n   public void setImportance(RelNode rel, double importance) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "23207422ba9bb83827c602339149f13029d64fb3"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQ1NzkxNw==", "bodyText": "Marked. Thanks for your kind reminder.", "url": "https://github.com/apache/calcite/pull/1853#discussion_r395457917", "createdAt": "2020-03-20T06:38:31Z", "author": {"login": "liyafan82"}, "path": "core/src/main/java/org/apache/calcite/plan/AbstractRelOptPlanner.java", "diffHunk": "@@ -221,9 +221,13 @@ public long getRelMetadataTimestamp(RelNode rel) {\n     return 0;\n   }\n \n+  @Deprecated\n   public void setImportance(RelNode rel, double importance) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQ0Nzg3NQ=="}, "originalCommit": {"oid": "23207422ba9bb83827c602339149f13029d64fb3"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1MTExMjM5OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/org/apache/calcite/plan/RelOptPlanner.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQwNTo0NzowNlrOF5IOqA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQwNjozOTowN1rOF5I2AA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQ0Nzk3Ng==", "bodyText": "Missing deprecation version.", "url": "https://github.com/apache/calcite/pull/1853#discussion_r395447976", "createdAt": "2020-03-20T05:47:06Z", "author": {"login": "danny0405"}, "path": "core/src/main/java/org/apache/calcite/plan/RelOptPlanner.java", "diffHunk": "@@ -307,9 +307,24 @@ RelNode register(\n    *\n    * @param rel        Relational expression\n    * @param importance Importance\n+   *\n+   * @deprecated This API will be removed in a future release, as we no longer\n+   * support the concept of node importance. Please use\n+   * {@link RelOptPlanner#prune(RelNode)} method instead.\n    */\n+  @Deprecated", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "23207422ba9bb83827c602339149f13029d64fb3"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQ1ODA0OA==", "bodyText": "Revised. Thank you.", "url": "https://github.com/apache/calcite/pull/1853#discussion_r395458048", "createdAt": "2020-03-20T06:39:07Z", "author": {"login": "liyafan82"}, "path": "core/src/main/java/org/apache/calcite/plan/RelOptPlanner.java", "diffHunk": "@@ -307,9 +307,24 @@ RelNode register(\n    *\n    * @param rel        Relational expression\n    * @param importance Importance\n+   *\n+   * @deprecated This API will be removed in a future release, as we no longer\n+   * support the concept of node importance. Please use\n+   * {@link RelOptPlanner#prune(RelNode)} method instead.\n    */\n+  @Deprecated", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQ0Nzk3Ng=="}, "originalCommit": {"oid": "23207422ba9bb83827c602339149f13029d64fb3"}, "originalPosition": 9}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 332, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}