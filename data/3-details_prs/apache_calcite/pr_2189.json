{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk3MjQ1NzM3", "number": 2189, "title": "[CALCITE-4251] Get the origin column, even if it is derived (xzh)", "bodyText": "https://issues.apache.org/jira/projects/CALCITE/issues/CALCITE-4251?filter=recentlyviewed", "createdAt": "2020-10-03T09:21:55Z", "url": "https://github.com/apache/calcite/pull/2189", "merged": true, "mergeCommit": {"oid": "f3c173c9220a83be0dfa0c80a39b015f384ffcd1"}, "closed": true, "closedAt": "2020-11-18T11:48:47Z", "author": {"login": "xy2953396112"}, "timelineItems": {"totalCount": 20, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdO3QoPgBqjM4MzY0MTcwNjM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABddP0Q1AFqTUzMTk2ODg0MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "603dc83d18551238888746ba4929ceef84ed666d", "author": {"user": {"login": "xy2953396112", "name": "xzh"}}, "url": "https://github.com/apache/calcite/commit/603dc83d18551238888746ba4929ceef84ed666d", "committedDate": "2020-10-03T09:20:18Z", "message": "[CALCITE-4251] Overload RelMetadataQuery#getColumnOrigin method (xzh)"}, "afterCommit": {"oid": "84b9bed1d7db1932d6b1a2875d3dad15cd14d97b", "author": {"user": {"login": "xy2953396112", "name": "xzh"}}, "url": "https://github.com/apache/calcite/commit/84b9bed1d7db1932d6b1a2875d3dad15cd14d97b", "committedDate": "2020-10-03T09:34:56Z", "message": "[CALCITE-4251] Overload RelMetadataQuery#getColumnOrigin method (xzh)"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "84b9bed1d7db1932d6b1a2875d3dad15cd14d97b", "author": {"user": {"login": "xy2953396112", "name": "xzh"}}, "url": "https://github.com/apache/calcite/commit/84b9bed1d7db1932d6b1a2875d3dad15cd14d97b", "committedDate": "2020-10-03T09:34:56Z", "message": "[CALCITE-4251] Overload RelMetadataQuery#getColumnOrigin method (xzh)"}, "afterCommit": {"oid": "fd27435d7bc8bc8dca31f0b2624f5ba80d025b66", "author": {"user": {"login": "xy2953396112", "name": "xzh"}}, "url": "https://github.com/apache/calcite/commit/fd27435d7bc8bc8dca31f0b2624f5ba80d025b66", "committedDate": "2020-10-06T01:51:40Z", "message": "[CALCITE-4251] Overload RelMetadataQuery#getColumnOrigin method (xzh)"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEyNTI0NDAz", "url": "https://github.com/apache/calcite/pull/2189#pullrequestreview-512524403", "createdAt": "2020-10-20T09:44:42Z", "commit": {"oid": "fd27435d7bc8bc8dca31f0b2624f5ba80d025b66"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwOTo0NDo0MlrOHkz2SA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwOTo0NDo0MlrOHkz2SA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODM2MDI2NA==", "bodyText": "If derived == null, we would get an NPE here.", "url": "https://github.com/apache/calcite/pull/2189#discussion_r508360264", "createdAt": "2020-10-20T09:44:42Z", "author": {"login": "liyafan82"}, "path": "core/src/main/java/org/apache/calcite/rel/metadata/RelMetadataQuery.java", "diffHunk": "@@ -351,11 +351,32 @@ public Double getPercentageOriginalRows(RelNode rel) {\n    * returns null\n    */\n   public RelColumnOrigin getColumnOrigin(RelNode rel, int column) {\n+    return getColumnOrigin(rel, column, false);\n+  }\n+\n+  /**\n+   * Determines the origin of a column. If the param derived is false, provided the column maps\n+   * to a single column that isn't derived, otherwise the column is derived.\n+   *\n+   * @see #getColumnOrigins(org.apache.calcite.rel.RelNode, int)\n+   *\n+   * @param rel the RelNode of the column\n+   * @param column the offset of the column whose origin we are trying to\n+   * determine\n+   * @param derived allow column derived\n+   *\n+   * @return the origin of a column provided it's a simple column; otherwise,\n+   * returns null\n+   */\n+  public RelColumnOrigin getColumnOrigin(RelNode rel, int column, Boolean derived) {\n     final Set<RelColumnOrigin> origins = getColumnOrigins(rel, column);\n     if (origins == null || origins.size() != 1) {\n       return null;\n     }\n     final RelColumnOrigin origin = Iterables.getOnlyElement(origins);\n+    if (derived) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fd27435d7bc8bc8dca31f0b2624f5ba80d025b66"}, "originalPosition": 27}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "fd27435d7bc8bc8dca31f0b2624f5ba80d025b66", "author": {"user": {"login": "xy2953396112", "name": "xzh"}}, "url": "https://github.com/apache/calcite/commit/fd27435d7bc8bc8dca31f0b2624f5ba80d025b66", "committedDate": "2020-10-06T01:51:40Z", "message": "[CALCITE-4251] Overload RelMetadataQuery#getColumnOrigin method (xzh)"}, "afterCommit": {"oid": "3b2cf7bfb2dbd4e90d7200fa419c21ee6ff93cb9", "author": {"user": {"login": "xy2953396112", "name": "xzh"}}, "url": "https://github.com/apache/calcite/commit/3b2cf7bfb2dbd4e90d7200fa419c21ee6ff93cb9", "committedDate": "2020-10-22T06:50:33Z", "message": "[CALCITE-4251] Overload RelMetadataQuery#getColumnOrigin method (xzh)"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3b2cf7bfb2dbd4e90d7200fa419c21ee6ff93cb9", "author": {"user": {"login": "xy2953396112", "name": "xzh"}}, "url": "https://github.com/apache/calcite/commit/3b2cf7bfb2dbd4e90d7200fa419c21ee6ff93cb9", "committedDate": "2020-10-22T06:50:33Z", "message": "[CALCITE-4251] Overload RelMetadataQuery#getColumnOrigin method (xzh)"}, "afterCommit": {"oid": "4afd705ff1de6533bd6f049adafb165cf874a978", "author": {"user": {"login": "xy2953396112", "name": "xzh"}}, "url": "https://github.com/apache/calcite/commit/4afd705ff1de6533bd6f049adafb165cf874a978", "committedDate": "2020-11-08T14:35:49Z", "message": "[CALCITE-4251] Overload RelMetadataQuery#getColumnOrigin method (xzh)"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI4MTYyMTU5", "url": "https://github.com/apache/calcite/pull/2189#pullrequestreview-528162159", "createdAt": "2020-11-11T13:17:20Z", "commit": {"oid": "4afd705ff1de6533bd6f049adafb165cf874a978"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQxMzoxNzoyMFrOHxMu_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQxMzoxNzoyMFrOHxMu_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTM1MDkxMA==", "bodyText": "I think what you mean is\n\"\nDetermines the origin of a column, allow users to choose whether to include the derived column.\"", "url": "https://github.com/apache/calcite/pull/2189#discussion_r521350910", "createdAt": "2020-11-11T13:17:20Z", "author": {"login": "yanlin-Lynn"}, "path": "core/src/main/java/org/apache/calcite/rel/metadata/RelMetadataQuery.java", "diffHunk": "@@ -351,11 +353,32 @@ public Double getPercentageOriginalRows(RelNode rel) {\n    * returns null\n    */\n   public RelColumnOrigin getColumnOrigin(RelNode rel, int column) {\n+    return getColumnOrigin(rel, column, false);\n+  }\n+\n+  /**\n+   * Determines the origin of a column. If the param derived is false, provided the column maps\n+   * to a single column that isn't derived, otherwise the column is derived.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4afd705ff1de6533bd6f049adafb165cf874a978"}, "originalPosition": 18}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI4Njg5NTM1", "url": "https://github.com/apache/calcite/pull/2189#pullrequestreview-528689535", "createdAt": "2020-11-12T02:26:23Z", "commit": {"oid": "4afd705ff1de6533bd6f049adafb165cf874a978"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQwMjoyNjoyM1rOHxmwrA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQwMjoyNjoyM1rOHxmwrA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTc3NzMyNA==", "bodyText": "Instead of overload the methods, why not return the origin directly, no matter if it is derived.", "url": "https://github.com/apache/calcite/pull/2189#discussion_r521777324", "createdAt": "2020-11-12T02:26:23Z", "author": {"login": "danny0405"}, "path": "core/src/main/java/org/apache/calcite/rel/metadata/RelMetadataQuery.java", "diffHunk": "@@ -351,11 +353,32 @@ public Double getPercentageOriginalRows(RelNode rel) {\n    * returns null\n    */\n   public RelColumnOrigin getColumnOrigin(RelNode rel, int column) {\n+    return getColumnOrigin(rel, column, false);\n+  }\n+\n+  /**\n+   * Determines the origin of a column. If the param derived is false, provided the column maps\n+   * to a single column that isn't derived, otherwise the column is derived.\n+   *\n+   * @see #getColumnOrigins(org.apache.calcite.rel.RelNode, int)\n+   *\n+   * @param rel the RelNode of the column\n+   * @param column the offset of the column whose origin we are trying to\n+   * determine\n+   * @param derived allow column derived\n+   *\n+   * @return the origin of a column provided it's a simple column; otherwise,\n+   * returns null\n+   */\n+  public RelColumnOrigin getColumnOrigin(RelNode rel, int column, Boolean derived) {\n     final Set<RelColumnOrigin> origins = getColumnOrigins(rel, column);\n     if (origins == null || origins.size() != 1) {\n       return null;\n     }\n     final RelColumnOrigin origin = Iterables.getOnlyElement(origins);\n+    if (BooleanUtils.isTrue(derived)) {\n+      return origin;\n+    }\n     return origin.isDerived() ? null : origin;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4afd705ff1de6533bd6f049adafb165cf874a978"}, "originalPosition": 39}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4afd705ff1de6533bd6f049adafb165cf874a978", "author": {"user": {"login": "xy2953396112", "name": "xzh"}}, "url": "https://github.com/apache/calcite/commit/4afd705ff1de6533bd6f049adafb165cf874a978", "committedDate": "2020-11-08T14:35:49Z", "message": "[CALCITE-4251] Overload RelMetadataQuery#getColumnOrigin method (xzh)"}, "afterCommit": {"oid": "565c5cde3bc12f766a609a2199a21af388d78ef8", "author": {"user": {"login": "xy2953396112", "name": "xzh"}}, "url": "https://github.com/apache/calcite/commit/565c5cde3bc12f766a609a2199a21af388d78ef8", "committedDate": "2020-11-12T09:53:47Z", "message": "[CALCITE-4251] Get the origin column, even if it is derived (xzh)"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI5MDg3MTUw", "url": "https://github.com/apache/calcite/pull/2189#pullrequestreview-529087150", "createdAt": "2020-11-12T13:31:48Z", "commit": {"oid": "565c5cde3bc12f766a609a2199a21af388d78ef8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQxMzozMTo0OVrOHx63jw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQxMzozMTo0OVrOHx63jw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjEwNjc2Nw==", "bodyText": "The annotation here is in-correct.", "url": "https://github.com/apache/calcite/pull/2189#discussion_r522106767", "createdAt": "2020-11-12T13:31:49Z", "author": {"login": "yanlin-Lynn"}, "path": "core/src/main/java/org/apache/calcite/rel/metadata/RelMetadataQuery.java", "diffHunk": "@@ -338,25 +338,24 @@ public Double getPercentageOriginalRows(RelNode rel) {\n   }\n \n   /**\n-   * Determines the origin of a column, provided the column maps to a single\n-   * column that isn't derived.\n+   * Determines the origin of a column, provided the column maps to a origin\n+   * column.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "565c5cde3bc12f766a609a2199a21af388d78ef8"}, "originalPosition": 7}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI5MDg3NjYy", "url": "https://github.com/apache/calcite/pull/2189#pullrequestreview-529087662", "createdAt": "2020-11-12T13:32:25Z", "commit": {"oid": "565c5cde3bc12f766a609a2199a21af388d78ef8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQxMzozMjoyNVrOHx65Kg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQxMzozMjoyNVrOHx65Kg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjEwNzE3OA==", "bodyText": "The doc here does not match with the code.", "url": "https://github.com/apache/calcite/pull/2189#discussion_r522107178", "createdAt": "2020-11-12T13:32:25Z", "author": {"login": "yanlin-Lynn"}, "path": "core/src/main/java/org/apache/calcite/rel/metadata/RelMetadataQuery.java", "diffHunk": "@@ -338,25 +338,24 @@ public Double getPercentageOriginalRows(RelNode rel) {\n   }\n \n   /**\n-   * Determines the origin of a column, provided the column maps to a single\n-   * column that isn't derived.\n+   * Determines the origin of a column, provided the column maps to a origin\n+   * column.\n    *\n    * @see #getColumnOrigins(org.apache.calcite.rel.RelNode, int)\n    *\n    * @param rel the RelNode of the column\n    * @param column the offset of the column whose origin we are trying to\n    * determine\n    *\n-   * @return the origin of a column provided it's a simple column; otherwise,\n-   * returns null\n+   * @return the origin of a column provided it's a simple column;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "565c5cde3bc12f766a609a2199a21af388d78ef8"}, "originalPosition": 17}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "565c5cde3bc12f766a609a2199a21af388d78ef8", "author": {"user": {"login": "xy2953396112", "name": "xzh"}}, "url": "https://github.com/apache/calcite/commit/565c5cde3bc12f766a609a2199a21af388d78ef8", "committedDate": "2020-11-12T09:53:47Z", "message": "[CALCITE-4251] Get the origin column, even if it is derived (xzh)"}, "afterCommit": {"oid": "74856a5f06730f09dfaf0623d4d37af88aaa9703", "author": {"user": {"login": "xy2953396112", "name": "xzh"}}, "url": "https://github.com/apache/calcite/commit/74856a5f06730f09dfaf0623d4d37af88aaa9703", "committedDate": "2020-11-12T13:32:51Z", "message": "[CALCITE-4251] Get the origin column, even if it is derived (xzh)"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI5NjQ2NDAw", "url": "https://github.com/apache/calcite/pull/2189#pullrequestreview-529646400", "createdAt": "2020-11-13T01:55:43Z", "commit": {"oid": "74856a5f06730f09dfaf0623d4d37af88aaa9703"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QwMTo1NTo0NFrOHyWgEA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QwMTo1NTo0NFrOHyWgEA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjU1OTUwNA==", "bodyText": "The code that uses this method should also be tweaked, such as the LoptMultiJoin.", "url": "https://github.com/apache/calcite/pull/2189#discussion_r522559504", "createdAt": "2020-11-13T01:55:44Z", "author": {"login": "danny0405"}, "path": "core/src/main/java/org/apache/calcite/rel/metadata/RelMetadataQuery.java", "diffHunk": "@@ -338,25 +338,23 @@ public Double getPercentageOriginalRows(RelNode rel) {\n   }\n \n   /**\n-   * Determines the origin of a column, provided the column maps to a single\n-   * column that isn't derived.\n+   * Determines the origin of a column.\n    *\n    * @see #getColumnOrigins(org.apache.calcite.rel.RelNode, int)\n    *\n    * @param rel the RelNode of the column\n    * @param column the offset of the column whose origin we are trying to\n    * determine\n    *\n-   * @return the origin of a column provided it's a simple column; otherwise,\n-   * returns null\n+   * @return the origin of a column;\n    */\n   public RelColumnOrigin getColumnOrigin(RelNode rel, int column) {\n     final Set<RelColumnOrigin> origins = getColumnOrigins(rel, column);\n     if (origins == null || origins.size() != 1) {\n       return null;\n     }\n     final RelColumnOrigin origin = Iterables.getOnlyElement(origins);\n-    return origin.isDerived() ? null : origin;\n+    return origin;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "74856a5f06730f09dfaf0623d4d37af88aaa9703"}, "originalPosition": 25}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "74856a5f06730f09dfaf0623d4d37af88aaa9703", "author": {"user": {"login": "xy2953396112", "name": "xzh"}}, "url": "https://github.com/apache/calcite/commit/74856a5f06730f09dfaf0623d4d37af88aaa9703", "committedDate": "2020-11-12T13:32:51Z", "message": "[CALCITE-4251] Get the origin column, even if it is derived (xzh)"}, "afterCommit": {"oid": "802dde0ed961db4c5b311d41c2282b77a89ca80a", "author": {"user": {"login": "xy2953396112", "name": "xzh"}}, "url": "https://github.com/apache/calcite/commit/802dde0ed961db4c5b311d41c2282b77a89ca80a", "committedDate": "2020-11-13T02:26:23Z", "message": "[CALCITE-4251] Get the origin column, even if it is derived (xzh)"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMwODgwMjM1", "url": "https://github.com/apache/calcite/pull/2189#pullrequestreview-530880235", "createdAt": "2020-11-16T02:32:07Z", "commit": {"oid": "802dde0ed961db4c5b311d41c2282b77a89ca80a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQwMjozMjowN1rOHzmKhw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQwMjozMjowN1rOHzmKhw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzg2NDcxMQ==", "bodyText": "Remove ;.", "url": "https://github.com/apache/calcite/pull/2189#discussion_r523864711", "createdAt": "2020-11-16T02:32:07Z", "author": {"login": "danny0405"}, "path": "core/src/main/java/org/apache/calcite/rel/metadata/RelMetadataQuery.java", "diffHunk": "@@ -338,25 +338,23 @@ public Double getPercentageOriginalRows(RelNode rel) {\n   }\n \n   /**\n-   * Determines the origin of a column, provided the column maps to a single\n-   * column that isn't derived.\n+   * Determines the origin of a column.\n    *\n    * @see #getColumnOrigins(org.apache.calcite.rel.RelNode, int)\n    *\n    * @param rel the RelNode of the column\n    * @param column the offset of the column whose origin we are trying to\n    * determine\n    *\n-   * @return the origin of a column provided it's a simple column; otherwise,\n-   * returns null\n+   * @return the origin of a column;\n    */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "802dde0ed961db4c5b311d41c2282b77a89ca80a"}, "originalPosition": 17}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "802dde0ed961db4c5b311d41c2282b77a89ca80a", "author": {"user": {"login": "xy2953396112", "name": "xzh"}}, "url": "https://github.com/apache/calcite/commit/802dde0ed961db4c5b311d41c2282b77a89ca80a", "committedDate": "2020-11-13T02:26:23Z", "message": "[CALCITE-4251] Get the origin column, even if it is derived (xzh)"}, "afterCommit": {"oid": "85faae3f2501ff9fe097ee9894c80047e6156a6b", "author": {"user": {"login": "xy2953396112", "name": "xzh"}}, "url": "https://github.com/apache/calcite/commit/85faae3f2501ff9fe097ee9894c80047e6156a6b", "committedDate": "2020-11-16T03:02:54Z", "message": "[CALCITE-4251] Get the origin column, even if it is derived (xzh)"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "85faae3f2501ff9fe097ee9894c80047e6156a6b", "author": {"user": {"login": "xy2953396112", "name": "xzh"}}, "url": "https://github.com/apache/calcite/commit/85faae3f2501ff9fe097ee9894c80047e6156a6b", "committedDate": "2020-11-16T03:02:54Z", "message": "[CALCITE-4251] Get the origin column, even if it is derived (xzh)"}, "afterCommit": {"oid": "2f4292ee94e6e6c7154afa41d76f709dbab3a778", "author": {"user": {"login": "xy2953396112", "name": "xzh"}}, "url": "https://github.com/apache/calcite/commit/2f4292ee94e6e6c7154afa41d76f709dbab3a778", "committedDate": "2020-11-16T06:17:59Z", "message": "[CALCITE-4251] Get the origin column, even if it is derived (xzh)"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2f4292ee94e6e6c7154afa41d76f709dbab3a778", "author": {"user": {"login": "xy2953396112", "name": "xzh"}}, "url": "https://github.com/apache/calcite/commit/2f4292ee94e6e6c7154afa41d76f709dbab3a778", "committedDate": "2020-11-16T06:17:59Z", "message": "[CALCITE-4251] Get the origin column, even if it is derived (xzh)"}, "afterCommit": {"oid": "cacf8029659463621301e159964e724bd8f06fb4", "author": {"user": {"login": "xy2953396112", "name": "xzh"}}, "url": "https://github.com/apache/calcite/commit/cacf8029659463621301e159964e724bd8f06fb4", "committedDate": "2020-11-16T06:26:42Z", "message": "[CALCITE-4251] Get the origin column, even if it is derived (xzh)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a1e3a4454e29c0e31ad1fbef5dc3d947af725bc7", "author": {"user": {"login": "xy2953396112", "name": "xzh"}}, "url": "https://github.com/apache/calcite/commit/a1e3a4454e29c0e31ad1fbef5dc3d947af725bc7", "committedDate": "2020-11-16T23:45:43Z", "message": "[CALCITE-4251] Get the origin column, even if it is derived (xzh)"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "cacf8029659463621301e159964e724bd8f06fb4", "author": {"user": {"login": "xy2953396112", "name": "xzh"}}, "url": "https://github.com/apache/calcite/commit/cacf8029659463621301e159964e724bd8f06fb4", "committedDate": "2020-11-16T06:26:42Z", "message": "[CALCITE-4251] Get the origin column, even if it is derived (xzh)"}, "afterCommit": {"oid": "a1e3a4454e29c0e31ad1fbef5dc3d947af725bc7", "author": {"user": {"login": "xy2953396112", "name": "xzh"}}, "url": "https://github.com/apache/calcite/commit/a1e3a4454e29c0e31ad1fbef5dc3d947af725bc7", "committedDate": "2020-11-16T23:45:43Z", "message": "[CALCITE-4251] Get the origin column, even if it is derived (xzh)"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMxOTY4ODQw", "url": "https://github.com/apache/calcite/pull/2189#pullrequestreview-531968840", "createdAt": "2020-11-17T02:06:42Z", "commit": {"oid": "a1e3a4454e29c0e31ad1fbef5dc3d947af725bc7"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2919, "cost": 1, "resetAt": "2021-10-28T16:48:13Z"}}}