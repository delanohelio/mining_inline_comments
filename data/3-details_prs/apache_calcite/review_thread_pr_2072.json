{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDUwOTgwOTkw", "number": 2072, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQwNDozMjoxMVrOESpbaw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQwNDozMjoxMVrOESpbaw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3OTg4NTg3OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/org/apache/calcite/rex/RexSimplify.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQwNDozMjoxMlrOG38N3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQwNjozMjowMlrOG3-fVA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTMxMTQ1Mw==", "bodyText": "Should be SqlTypeCoercionRule ?", "url": "https://github.com/apache/calcite/pull/2072#discussion_r461311453", "createdAt": "2020-07-28T04:32:12Z", "author": {"login": "danny0405"}, "path": "core/src/main/java/org/apache/calcite/rex/RexSimplify.java", "diffHunk": "@@ -1917,7 +1918,9 @@ private RexNode simplifyCast(RexCall e) {\n       if (RexUtil.isLosslessCast(intExpr.getType(), operand.getType())\n           && (e.getType().getSqlTypeName() == operand.getType().getSqlTypeName()\n           || e.getType().getSqlTypeName() == SqlTypeName.CHAR\n-          || operand.getType().getSqlTypeName() != SqlTypeName.CHAR)) {\n+          || operand.getType().getSqlTypeName() != SqlTypeName.CHAR)\n+          && SqlTypeAssignmentRule.instance()\n+          .canApplyFrom(intExpr.getType().getSqlTypeName(), e.getType().getSqlTypeName())) {\n         return rexBuilder.makeCast(e.getType(), intExpr);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9ceac24d15d47867d5f79927f17249f1aefc1fb3"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTMyNTkxOA==", "bodyText": "It seems you're right. BTW, what's the difference between SqlTypeCoercionRule  and SqlTypeAssignmentRule ?", "url": "https://github.com/apache/calcite/pull/2072#discussion_r461325918", "createdAt": "2020-07-28T05:25:00Z", "author": {"login": "chunweilei"}, "path": "core/src/main/java/org/apache/calcite/rex/RexSimplify.java", "diffHunk": "@@ -1917,7 +1918,9 @@ private RexNode simplifyCast(RexCall e) {\n       if (RexUtil.isLosslessCast(intExpr.getType(), operand.getType())\n           && (e.getType().getSqlTypeName() == operand.getType().getSqlTypeName()\n           || e.getType().getSqlTypeName() == SqlTypeName.CHAR\n-          || operand.getType().getSqlTypeName() != SqlTypeName.CHAR)) {\n+          || operand.getType().getSqlTypeName() != SqlTypeName.CHAR)\n+          && SqlTypeAssignmentRule.instance()\n+          .canApplyFrom(intExpr.getType().getSqlTypeName(), e.getType().getSqlTypeName())) {\n         return rexBuilder.makeCast(e.getType(), intExpr);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTMxMTQ1Mw=="}, "originalCommit": {"oid": "9ceac24d15d47867d5f79927f17249f1aefc1fb3"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTM0ODY5Mg==", "bodyText": "See the java doc which already gave good explanation.", "url": "https://github.com/apache/calcite/pull/2072#discussion_r461348692", "createdAt": "2020-07-28T06:32:02Z", "author": {"login": "danny0405"}, "path": "core/src/main/java/org/apache/calcite/rex/RexSimplify.java", "diffHunk": "@@ -1917,7 +1918,9 @@ private RexNode simplifyCast(RexCall e) {\n       if (RexUtil.isLosslessCast(intExpr.getType(), operand.getType())\n           && (e.getType().getSqlTypeName() == operand.getType().getSqlTypeName()\n           || e.getType().getSqlTypeName() == SqlTypeName.CHAR\n-          || operand.getType().getSqlTypeName() != SqlTypeName.CHAR)) {\n+          || operand.getType().getSqlTypeName() != SqlTypeName.CHAR)\n+          && SqlTypeAssignmentRule.instance()\n+          .canApplyFrom(intExpr.getType().getSqlTypeName(), e.getType().getSqlTypeName())) {\n         return rexBuilder.makeCast(e.getType(), intExpr);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTMxMTQ1Mw=="}, "originalCommit": {"oid": "9ceac24d15d47867d5f79927f17249f1aefc1fb3"}, "originalPosition": 16}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 96, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}