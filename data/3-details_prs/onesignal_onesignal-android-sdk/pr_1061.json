{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMyOTgzODcy", "number": 1061, "title": "Only attempt to get Google ad_id if using FCM", "bodyText": "This cleans up the \"Error getting Google Ad id\"  on HMS only devices\n\n\n\nThis change is\u2002", "createdAt": "2020-06-11T10:26:19Z", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/1061", "merged": true, "mergeCommit": {"oid": "ce8397c0fa0e6c3c44bf6fde4d7f1a00bf194ee7"}, "closed": true, "closedAt": "2020-06-12T11:06:43Z", "author": {"login": "jkasten2"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcqMuiyAH2gAyNDMyOTgzODcyOmJhMjk4MDdmYjUwZGFhMmE5NjllYWRhNzI2MjJlNjJjMGJlMGQyYjY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcqg1j7AFqTQyOTY1NTIxNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "ba29807fb50daa2a969eada72622e62c0be0d2b6", "author": {"user": {"login": "jkasten2", "name": "Josh Kasten"}}, "url": "https://github.com/OneSignal/OneSignal-Android-SDK/commit/ba29807fb50daa2a969eada72622e62c0be0d2b6", "committedDate": "2020-06-11T11:40:36Z", "message": "Only attempt to get Google ad_id if using FCM\n\n* This cleans up the \"Error getting Google Ad id\"  on HMS only devices"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0294576ea8292aca1cdb44f1c70cec170d80593a", "author": {"user": {"login": "jkasten2", "name": "Josh Kasten"}}, "url": "https://github.com/OneSignal/OneSignal-Android-SDK/commit/0294576ea8292aca1cdb44f1c70cec170d80593a", "committedDate": "2020-06-11T10:25:28Z", "message": "Only attempt to get Google ad_id if using FCM\n\n* This cleans up the \"Error getting Google Ad id\"  on HMS only devices"}, "afterCommit": {"oid": "ba29807fb50daa2a969eada72622e62c0be0d2b6", "author": {"user": {"login": "jkasten2", "name": "Josh Kasten"}}, "url": "https://github.com/OneSignal/OneSignal-Android-SDK/commit/ba29807fb50daa2a969eada72622e62c0be0d2b6", "committedDate": "2020-06-11T11:40:36Z", "message": "Only attempt to get Google ad_id if using FCM\n\n* This cleans up the \"Error getting Google Ad id\"  on HMS only devices"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI4OTIwMjUx", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/1061#pullrequestreview-428920251", "createdAt": "2020-06-11T13:40:44Z", "commit": {"oid": "ba29807fb50daa2a969eada72622e62c0be0d2b6"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI5MDM2NzUy", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/1061#pullrequestreview-429036752", "createdAt": "2020-06-11T15:36:32Z", "commit": {"oid": "ba29807fb50daa2a969eada72622e62c0be0d2b6"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxNTozNjozMlrOGijCZg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxNTozNjozMlrOGijCZg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODg3ODgyMg==", "bodyText": "maybe put on the same if?", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/1061#discussion_r438878822", "createdAt": "2020-06-11T15:36:32Z", "author": {"login": "Jeasmine"}, "path": "OneSignalSDK/onesignal/src/main/java/com/onesignal/OneSignal.java", "diffHunk": "@@ -452,7 +452,15 @@ public void onSessionEnding(@NonNull List<OSInfluence> lastInfluences) {\n    @Nullable private static OSOutcomeEventsController outcomeEventsController;\n    @Nullable private static OSOutcomeEventsFactory outcomeEventsFactory;\n \n-   private static AdvertisingIdentifierProvider mainAdIdProvider = new AdvertisingIdProviderGPS();\n+   @Nullable private static AdvertisingIdentifierProvider adIdProvider;\n+   private static synchronized @Nullable AdvertisingIdentifierProvider getAdIdProvider() {\n+      if (adIdProvider == null) {\n+         if (OSUtils.isAndroidDeviceType())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba29807fb50daa2a969eada72622e62c0be0d2b6"}, "originalPosition": 8}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI5NjQ1NjMw", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/1061#pullrequestreview-429645630", "createdAt": "2020-06-12T10:50:53Z", "commit": {"oid": "c0d23c3605f7e02f34a810e88a9860f13f04c2e1"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI5NjQ2Mjg1", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/1061#pullrequestreview-429646285", "createdAt": "2020-06-12T10:52:01Z", "commit": {"oid": "c0d23c3605f7e02f34a810e88a9860f13f04c2e1"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxMDo1MjowMlrOGi_sXg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxMDo1MjoxOFrOGi_s6g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTM0ODMxOA==", "bodyText": "4. should be 5.", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/1061#discussion_r439348318", "createdAt": "2020-06-12T10:52:02Z", "author": {"login": "mikechoch"}, "path": "OneSignalSDK/unittest/src/test/java/com/test/onesignal/MainOneSignalClassRunner.java", "diffHunk": "@@ -322,6 +323,59 @@ public void testDeviceTypeIsAmazon_forPlayerCreate() throws Exception {\n       assertAmazonPlayerCreateAtIndex(1);\n    }\n \n+   @Test\n+   public void testAmazonDoesNotGetAdId() throws Exception {\n+      // 1. Mock Amazon device type for this test\n+      ShadowOSUtils.supportsADM = true;\n+\n+      // 2. Init OneSignal so the app id is cached\n+      OneSignalInit();\n+      threadAndTaskWait();\n+\n+      // 3. Make sure device_type is Amazon (2) in player create\n+      assertAmazonPlayerCreateAtIndex(1);\n+\n+      // 4. Assert Player Create does NOT have an ad_id\n+      ShadowOneSignalRestClient.Request request = ShadowOneSignalRestClient.requests.get(1);\n+      JsonAsserts.doesNotContainKeys(request.payload, new ArrayList<String>() {{ add(\"ad_id\"); }});\n+\n+      // 4. Assert we did NOT try to get a Google Ad id\n+      assertFalse(ShadowAdvertisingIdProviderGPS.calledGetIdentifier);\n+   }\n+\n+   @Test\n+   public void testDeviceTypeIsHuawei_forPlayerCreate() throws Exception {\n+      // 1. Mock Amazon device type for this test\n+      ShadowOSUtils.supportsHMS(true);\n+\n+      // 2. Init OneSignal so the app id is cached\n+      OneSignalInit();\n+      threadAndTaskWait();\n+\n+      // 3. Make sure device_type is Huawei (13) in player create\n+      assertHuaweiPlayerCreateAtIndex(1);\n+   }\n+\n+   @Test\n+   public void testHuaweiDoesNotGetAdId() throws Exception {\n+      // 1. Mock Huawei device type for this test\n+      ShadowOSUtils.supportsHMS(true);\n+\n+      // 2. Init OneSignal so the app id is cached\n+      OneSignalInit();\n+      threadAndTaskWait();\n+\n+      // 3. Make sure device_type is Huawei (13) in player create\n+      assertHuaweiPlayerCreateAtIndex(1);\n+\n+      // 4. Assert Player Create does NOT have an ad_id\n+      ShadowOneSignalRestClient.Request request = ShadowOneSignalRestClient.requests.get(1);\n+      JsonAsserts.doesNotContainKeys(request.payload, new ArrayList<String>() {{ add(\"ad_id\"); }});\n+\n+      // 4. Assert we did NOT try to get a Google Ad id", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c0d23c3605f7e02f34a810e88a9860f13f04c2e1"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTM0ODQ1OA==", "bodyText": "4. should be 5.", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/1061#discussion_r439348458", "createdAt": "2020-06-12T10:52:18Z", "author": {"login": "mikechoch"}, "path": "OneSignalSDK/unittest/src/test/java/com/test/onesignal/MainOneSignalClassRunner.java", "diffHunk": "@@ -322,6 +323,59 @@ public void testDeviceTypeIsAmazon_forPlayerCreate() throws Exception {\n       assertAmazonPlayerCreateAtIndex(1);\n    }\n \n+   @Test\n+   public void testAmazonDoesNotGetAdId() throws Exception {\n+      // 1. Mock Amazon device type for this test\n+      ShadowOSUtils.supportsADM = true;\n+\n+      // 2. Init OneSignal so the app id is cached\n+      OneSignalInit();\n+      threadAndTaskWait();\n+\n+      // 3. Make sure device_type is Amazon (2) in player create\n+      assertAmazonPlayerCreateAtIndex(1);\n+\n+      // 4. Assert Player Create does NOT have an ad_id\n+      ShadowOneSignalRestClient.Request request = ShadowOneSignalRestClient.requests.get(1);\n+      JsonAsserts.doesNotContainKeys(request.payload, new ArrayList<String>() {{ add(\"ad_id\"); }});\n+\n+      // 4. Assert we did NOT try to get a Google Ad id", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c0d23c3605f7e02f34a810e88a9860f13f04c2e1"}, "originalPosition": 28}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dfb9729dfb1aca67f3331ef24e21a0583aa7a377", "author": {"user": {"login": "jkasten2", "name": "Josh Kasten"}}, "url": "https://github.com/OneSignal/OneSignal-Android-SDK/commit/dfb9729dfb1aca67f3331ef24e21a0583aa7a377", "committedDate": "2020-06-12T11:05:31Z", "message": "Added ad_id tests for Huawei and Amazon devices\n\n* Make sure we don't try to send an ad_id for these devices as\nwe don't have a provider for them.\n* Make sure we don't attempt to get a google provided one either"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c0d23c3605f7e02f34a810e88a9860f13f04c2e1", "author": {"user": {"login": "jkasten2", "name": "Josh Kasten"}}, "url": "https://github.com/OneSignal/OneSignal-Android-SDK/commit/c0d23c3605f7e02f34a810e88a9860f13f04c2e1", "committedDate": "2020-06-12T10:47:37Z", "message": "Added ad_id tests for Huawei and Amazon devices\n\n* Make sure we don't try to send an ad_id for these devices as\nwe don't have a provider for them.\n* Make sure we don't attempt to get a google provided one either"}, "afterCommit": {"oid": "dfb9729dfb1aca67f3331ef24e21a0583aa7a377", "author": {"user": {"login": "jkasten2", "name": "Josh Kasten"}}, "url": "https://github.com/OneSignal/OneSignal-Android-SDK/commit/dfb9729dfb1aca67f3331ef24e21a0583aa7a377", "committedDate": "2020-06-12T11:05:31Z", "message": "Added ad_id tests for Huawei and Amazon devices\n\n* Make sure we don't try to send an ad_id for these devices as\nwe don't have a provider for them.\n* Make sure we don't attempt to get a google provided one either"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI5NjU1MjE1", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/1061#pullrequestreview-429655215", "createdAt": "2020-06-12T11:06:22Z", "commit": {"oid": "dfb9729dfb1aca67f3331ef24e21a0583aa7a377"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3608, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}