{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE4ODQyNTEz", "number": 1019, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQyMzowMDoxMlrOD9CWZg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQyMzowMDoxMlrOD9CWZg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1MzI4MjMwOnYy", "diffSide": "RIGHT", "path": "OneSignalSDK/onesignal/src/main/java/com/onesignal/OneSignalPrefs.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQyMzowMDoxMlrOGWV8Dg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxODowNTo1MlrOGXCHig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjA4MTI5NA==", "bodyText": "do you still need this call, cant you depend only on onLooperPrepared?", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/1019#discussion_r426081294", "createdAt": "2020-05-15T23:00:12Z", "author": {"login": "Jeasmine"}, "path": "OneSignalSDK/onesignal/src/main/java/com/onesignal/OneSignalPrefs.java", "diffHunk": "@@ -132,113 +132,52 @@\n             super(name);\n         }\n \n+        @Override\n+        protected void onLooperPrepared() {\n+            super.onLooperPrepared();\n+\n+            // Getting handler here as onLooperPrepared guarantees getLooper() will not return null\n+            mHandler = new Handler(getLooper());\n+            scheduleFlushToDiskJob();\n+        }\n+\n         private synchronized void startDelayedWrite() {\n             // A Context is required to write,\n             //   if not available now later OneSignal.setContext will call this again.\n             if (OneSignal.appContext == null)\n                 return;\n \n-            if (mHandler == null) {\n-                startThread();\n-                mHandler = new Handler(getLooper());\n-            }\n+            startThread();\n+            scheduleFlushToDiskJob();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0ba8308d796f39cefb923d5d1282a93adb43c076"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjA4Mzk0OA==", "bodyText": "onLooperPrepared will take care of the first flush. For 2nd, 3rd, etc calls we have to call scheduleFlushToDiskJob again to setup a new delayed write.\nSince you had this question is there anything I can change to make this less confusing? Maybe just a comment here?", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/1019#discussion_r426083948", "createdAt": "2020-05-15T23:12:34Z", "author": {"login": "jkasten2"}, "path": "OneSignalSDK/onesignal/src/main/java/com/onesignal/OneSignalPrefs.java", "diffHunk": "@@ -132,113 +132,52 @@\n             super(name);\n         }\n \n+        @Override\n+        protected void onLooperPrepared() {\n+            super.onLooperPrepared();\n+\n+            // Getting handler here as onLooperPrepared guarantees getLooper() will not return null\n+            mHandler = new Handler(getLooper());\n+            scheduleFlushToDiskJob();\n+        }\n+\n         private synchronized void startDelayedWrite() {\n             // A Context is required to write,\n             //   if not available now later OneSignal.setContext will call this again.\n             if (OneSignal.appContext == null)\n                 return;\n \n-            if (mHandler == null) {\n-                startThread();\n-                mHandler = new Handler(getLooper());\n-            }\n+            startThread();\n+            scheduleFlushToDiskJob();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjA4MTI5NA=="}, "originalCommit": {"oid": "0ba8308d796f39cefb923d5d1282a93adb43c076"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjA4NTExNQ==", "bodyText": "oh, I see, so looper is only prepared once. Maybe a comment with what you said, like a reminder if I have the same question again \ud83d\ude02", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/1019#discussion_r426085115", "createdAt": "2020-05-15T23:17:56Z", "author": {"login": "Jeasmine"}, "path": "OneSignalSDK/onesignal/src/main/java/com/onesignal/OneSignalPrefs.java", "diffHunk": "@@ -132,113 +132,52 @@\n             super(name);\n         }\n \n+        @Override\n+        protected void onLooperPrepared() {\n+            super.onLooperPrepared();\n+\n+            // Getting handler here as onLooperPrepared guarantees getLooper() will not return null\n+            mHandler = new Handler(getLooper());\n+            scheduleFlushToDiskJob();\n+        }\n+\n         private synchronized void startDelayedWrite() {\n             // A Context is required to write,\n             //   if not available now later OneSignal.setContext will call this again.\n             if (OneSignal.appContext == null)\n                 return;\n \n-            if (mHandler == null) {\n-                startThread();\n-                mHandler = new Handler(getLooper());\n-            }\n+            startThread();\n+            scheduleFlushToDiskJob();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjA4MTI5NA=="}, "originalCommit": {"oid": "0ba8308d796f39cefb923d5d1282a93adb43c076"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjgwNTEzMA==", "bodyText": "@Jeasmine Fixed!", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/1019#discussion_r426805130", "createdAt": "2020-05-18T18:05:52Z", "author": {"login": "jkasten2"}, "path": "OneSignalSDK/onesignal/src/main/java/com/onesignal/OneSignalPrefs.java", "diffHunk": "@@ -132,113 +132,52 @@\n             super(name);\n         }\n \n+        @Override\n+        protected void onLooperPrepared() {\n+            super.onLooperPrepared();\n+\n+            // Getting handler here as onLooperPrepared guarantees getLooper() will not return null\n+            mHandler = new Handler(getLooper());\n+            scheduleFlushToDiskJob();\n+        }\n+\n         private synchronized void startDelayedWrite() {\n             // A Context is required to write,\n             //   if not available now later OneSignal.setContext will call this again.\n             if (OneSignal.appContext == null)\n                 return;\n \n-            if (mHandler == null) {\n-                startThread();\n-                mHandler = new Handler(getLooper());\n-            }\n+            startThread();\n+            scheduleFlushToDiskJob();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjA4MTI5NA=="}, "originalCommit": {"oid": "0ba8308d796f39cefb923d5d1282a93adb43c076"}, "originalPosition": 24}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2251, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}