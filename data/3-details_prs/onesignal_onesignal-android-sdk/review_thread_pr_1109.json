{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDYyODY5NDYy", "number": 1109, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQyMjowNjo0MlrOEVLzww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QxNDo0NzozMlrOEWPn7w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwNjQ5MDI3OnYy", "diffSide": "RIGHT", "path": "OneSignalSDK/onesignal/src/main/java/com/onesignal/NotificationBundleProcessor.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQyMjowNjo0MlrOG7zI7w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQyMjowNjo0MlrOG7zI7w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTM1NzAzOQ==", "bodyText": "\ud83d\udc4d So much cleaner with the new dbHelper.update!", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/1109#discussion_r465357039", "createdAt": "2020-08-04T22:06:42Z", "author": {"login": "jkasten2"}, "path": "OneSignalSDK/onesignal/src/main/java/com/onesignal/NotificationBundleProcessor.java", "diffHunk": "@@ -252,31 +238,12 @@ static void markRestoredNotificationAsDismissed(NotificationGenerationJob notifi\n       String whereStr = NotificationTable.COLUMN_NAME_ANDROID_NOTIFICATION_ID + \" = \" + notifiJob.getAndroidIdWithoutCreate();\n \n       OneSignalDbHelper dbHelper = OneSignalDbHelper.getInstance(notifiJob.context);\n-      SQLiteDatabase writableDb = null;\n-\n-      try {\n-         writableDb = dbHelper.getSQLiteDatabaseWithRetries();\n-         writableDb.beginTransaction();\n \n-         ContentValues values = new ContentValues();\n-         values.put(NotificationTable.COLUMN_NAME_DISMISSED, 1);\n+      ContentValues values = new ContentValues();\n+      values.put(NotificationTable.COLUMN_NAME_DISMISSED, 1);\n \n-         writableDb.update(NotificationTable.TABLE_NAME, values, whereStr, null);\n-         BadgeCountUpdater.update(writableDb, notifiJob.context);\n-\n-         writableDb.setTransactionSuccessful();\n-\n-      } catch (Exception e) {\n-         OneSignal.Log(OneSignal.LOG_LEVEL.ERROR, \"Error saving notification record! \", e);\n-      } finally {\n-         if (writableDb != null) {\n-            try {\n-               writableDb.endTransaction(); // May throw if transaction was never opened or DB is full.\n-            } catch (Throwable t) {\n-               OneSignal.Log(OneSignal.LOG_LEVEL.ERROR, \"Error closing transaction! \", t);\n-            }\n-         }\n-      }\n+      dbHelper.update(NotificationTable.TABLE_NAME, values, whereStr, null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "445f69ca51765a577e6e14b5410934dab88f104c"}, "originalPosition": 109}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwNjY3MzE2OnYy", "diffSide": "RIGHT", "path": "OneSignalSDK/onesignal/src/main/java/com/onesignal/OneSignalDb.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQyMzoyNToyM1rOG700ig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQyMzoyNToyM1rOG700ig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTM4NDU4Ng==", "bodyText": "Let's add @nonnull and @nullable where it makes sense to these.", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/1109#discussion_r465384586", "createdAt": "2020-08-04T23:25:23Z", "author": {"login": "jkasten2"}, "path": "OneSignalSDK/onesignal/src/main/java/com/onesignal/OneSignalDb.java", "diffHunk": "@@ -1,9 +1,25 @@\n package com.onesignal;\n \n-import android.database.sqlite.SQLiteDatabase;\n+import android.content.ContentValues;\n+import android.database.Cursor;\n+import android.database.SQLException;\n \n public interface OneSignalDb {\n \n-    SQLiteDatabase getSQLiteDatabaseWithRetries();\n+    Cursor query(String table, String[] columns, String selection,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "445f69ca51765a577e6e14b5410934dab88f104c"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwNjY4NDA2OnYy", "diffSide": "RIGHT", "path": "OneSignalSDK/unittest/src/test/java/com/test/onesignal/GenerateNotificationRunner.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQyMzozMDozOFrOG707Cw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxNTo1NToyMVrOG8QCnw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTM4NjI1MQ==", "bodyText": "We might want to omit the formatting space fixes in this PR since this is going to into master. This way we can avoid extra conflicts this could created with the 4.0.0 branch.", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/1109#discussion_r465386251", "createdAt": "2020-08-04T23:30:38Z", "author": {"login": "jkasten2"}, "path": "OneSignalSDK/unittest/src/test/java/com/test/onesignal/GenerateNotificationRunner.java", "diffHunk": "@@ -144,13 +143,12 @@\n         },\n         sdk = 21\n )\n-\n @RunWith(RobolectricTestRunner.class)\n public class GenerateNotificationRunner {\n-   \n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "445f69ca51765a577e6e14b5410934dab88f104c"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTgzMDU1OQ==", "bodyText": "Oh you are right, good catch!", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/1109#discussion_r465830559", "createdAt": "2020-08-05T15:55:21Z", "author": {"login": "Jeasmine"}, "path": "OneSignalSDK/unittest/src/test/java/com/test/onesignal/GenerateNotificationRunner.java", "diffHunk": "@@ -144,13 +143,12 @@\n         },\n         sdk = 21\n )\n-\n @RunWith(RobolectricTestRunner.class)\n public class GenerateNotificationRunner {\n-   \n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTM4NjI1MQ=="}, "originalCommit": {"oid": "445f69ca51765a577e6e14b5410934dab88f104c"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxNzYwMDcyOnYy", "diffSide": "RIGHT", "path": "OneSignalSDK/onesignal/src/main/java/com/onesignal/OneSignalDbHelper.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QxNDo0NzoyNVrOG9cyKQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwMDo0Mzo1NFrOG9_GHA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzA4NzkxMw==", "bodyText": "We should replace this getWritableDatabase() with getSQLiteDatabase() so that we have Exceptions as fallbacks\nAlso should we use getSQLiteDatabaseWithRetries() instead of getSQLiteDatabase()?", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/1109#discussion_r467087913", "createdAt": "2020-08-07T14:47:25Z", "author": {"login": "mikechoch"}, "path": "OneSignalSDK/onesignal/src/main/java/com/onesignal/OneSignalDbHelper.java", "diffHunk": "@@ -152,16 +163,120 @@ synchronized SQLiteDatabase getSQLiteDatabase() {\n     * <br/><br/>\n     * @see OneSignalDbHelper#getSQLiteDatabase()\n     */\n+   private SQLiteDatabase getSQLiteDatabaseWithRetries() {\n+      synchronized (LOCK) {\n+         int count = 0;\n+         while (true) {\n+            try {\n+               return getWritableDatabase();\n+            } catch (SQLiteCantOpenDatabaseException | SQLiteDatabaseLockedException e) {\n+               if (++count >= DB_OPEN_RETRY_MAX)\n+                  throw e;\n+               SystemClock.sleep(count * DB_OPEN_RETRY_BACKOFF);\n+            }\n+         }\n+      }\n+   }\n+\n+   @Override\n+   public Cursor query(String table, String[] columns, String selection,\n+                       String[] selectionArgs, String groupBy, String having,\n+                       String orderBy) {\n+      synchronized (LOCK) {\n+         return getWritableDatabase().query(table, columns, selection, selectionArgs, groupBy, having, orderBy);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b74fc8b31c5810c9fe8399988eddc6a8fcddb6df"}, "originalPosition": 101}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzY1MDA3Ng==", "bodyText": "\ud83d\udc4d getSQLiteDatabaseWithRetries() is what I would recommend too. Looks like this was changed so marking as resolved.", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/1109#discussion_r467650076", "createdAt": "2020-08-10T00:43:54Z", "author": {"login": "jkasten2"}, "path": "OneSignalSDK/onesignal/src/main/java/com/onesignal/OneSignalDbHelper.java", "diffHunk": "@@ -152,16 +163,120 @@ synchronized SQLiteDatabase getSQLiteDatabase() {\n     * <br/><br/>\n     * @see OneSignalDbHelper#getSQLiteDatabase()\n     */\n+   private SQLiteDatabase getSQLiteDatabaseWithRetries() {\n+      synchronized (LOCK) {\n+         int count = 0;\n+         while (true) {\n+            try {\n+               return getWritableDatabase();\n+            } catch (SQLiteCantOpenDatabaseException | SQLiteDatabaseLockedException e) {\n+               if (++count >= DB_OPEN_RETRY_MAX)\n+                  throw e;\n+               SystemClock.sleep(count * DB_OPEN_RETRY_BACKOFF);\n+            }\n+         }\n+      }\n+   }\n+\n+   @Override\n+   public Cursor query(String table, String[] columns, String selection,\n+                       String[] selectionArgs, String groupBy, String having,\n+                       String orderBy) {\n+      synchronized (LOCK) {\n+         return getWritableDatabase().query(table, columns, selection, selectionArgs, groupBy, having, orderBy);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzA4NzkxMw=="}, "originalCommit": {"oid": "b74fc8b31c5810c9fe8399988eddc6a8fcddb6df"}, "originalPosition": 101}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxNzYwMTExOnYy", "diffSide": "RIGHT", "path": "OneSignalSDK/onesignal/src/main/java/com/onesignal/OneSignalDbHelper.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QxNDo0NzozMlrOG9cyZw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwMDo0NDo1MFrOG9_Gjw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzA4Nzk3NQ==", "bodyText": "We should replace this getWritableDatabase() with getSQLiteDatabase() so that we have Exceptions as fallbacks\nAlso should we use getSQLiteDatabaseWithRetries() instead of getSQLiteDatabase()?", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/1109#discussion_r467087975", "createdAt": "2020-08-07T14:47:32Z", "author": {"login": "mikechoch"}, "path": "OneSignalSDK/onesignal/src/main/java/com/onesignal/OneSignalDbHelper.java", "diffHunk": "@@ -152,16 +163,120 @@ synchronized SQLiteDatabase getSQLiteDatabase() {\n     * <br/><br/>\n     * @see OneSignalDbHelper#getSQLiteDatabase()\n     */\n+   private SQLiteDatabase getSQLiteDatabaseWithRetries() {\n+      synchronized (LOCK) {\n+         int count = 0;\n+         while (true) {\n+            try {\n+               return getWritableDatabase();\n+            } catch (SQLiteCantOpenDatabaseException | SQLiteDatabaseLockedException e) {\n+               if (++count >= DB_OPEN_RETRY_MAX)\n+                  throw e;\n+               SystemClock.sleep(count * DB_OPEN_RETRY_BACKOFF);\n+            }\n+         }\n+      }\n+   }\n+\n+   @Override\n+   public Cursor query(String table, String[] columns, String selection,\n+                       String[] selectionArgs, String groupBy, String having,\n+                       String orderBy) {\n+      synchronized (LOCK) {\n+         return getWritableDatabase().query(table, columns, selection, selectionArgs, groupBy, having, orderBy);\n+      }\n+   }\n+\n+   @Override\n+   public Cursor query(String table, String[] columns, String selection, String[] selectionArgs, String groupBy, String having, String orderBy, String limit) {\n+      synchronized (LOCK) {\n+         return getWritableDatabase().query(table, columns, selection, selectionArgs, groupBy, having, orderBy, limit);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b74fc8b31c5810c9fe8399988eddc6a8fcddb6df"}, "originalPosition": 108}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzIxNDU2MQ==", "bodyText": "good catch!", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/1109#discussion_r467214561", "createdAt": "2020-08-07T18:54:52Z", "author": {"login": "Jeasmine"}, "path": "OneSignalSDK/onesignal/src/main/java/com/onesignal/OneSignalDbHelper.java", "diffHunk": "@@ -152,16 +163,120 @@ synchronized SQLiteDatabase getSQLiteDatabase() {\n     * <br/><br/>\n     * @see OneSignalDbHelper#getSQLiteDatabase()\n     */\n+   private SQLiteDatabase getSQLiteDatabaseWithRetries() {\n+      synchronized (LOCK) {\n+         int count = 0;\n+         while (true) {\n+            try {\n+               return getWritableDatabase();\n+            } catch (SQLiteCantOpenDatabaseException | SQLiteDatabaseLockedException e) {\n+               if (++count >= DB_OPEN_RETRY_MAX)\n+                  throw e;\n+               SystemClock.sleep(count * DB_OPEN_RETRY_BACKOFF);\n+            }\n+         }\n+      }\n+   }\n+\n+   @Override\n+   public Cursor query(String table, String[] columns, String selection,\n+                       String[] selectionArgs, String groupBy, String having,\n+                       String orderBy) {\n+      synchronized (LOCK) {\n+         return getWritableDatabase().query(table, columns, selection, selectionArgs, groupBy, having, orderBy);\n+      }\n+   }\n+\n+   @Override\n+   public Cursor query(String table, String[] columns, String selection, String[] selectionArgs, String groupBy, String having, String orderBy, String limit) {\n+      synchronized (LOCK) {\n+         return getWritableDatabase().query(table, columns, selection, selectionArgs, groupBy, having, orderBy, limit);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzA4Nzk3NQ=="}, "originalCommit": {"oid": "b74fc8b31c5810c9fe8399988eddc6a8fcddb6df"}, "originalPosition": 108}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzY1MDE5MQ==", "bodyText": "Confirmed this was fix, marking as resolved.", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/1109#discussion_r467650191", "createdAt": "2020-08-10T00:44:50Z", "author": {"login": "jkasten2"}, "path": "OneSignalSDK/onesignal/src/main/java/com/onesignal/OneSignalDbHelper.java", "diffHunk": "@@ -152,16 +163,120 @@ synchronized SQLiteDatabase getSQLiteDatabase() {\n     * <br/><br/>\n     * @see OneSignalDbHelper#getSQLiteDatabase()\n     */\n+   private SQLiteDatabase getSQLiteDatabaseWithRetries() {\n+      synchronized (LOCK) {\n+         int count = 0;\n+         while (true) {\n+            try {\n+               return getWritableDatabase();\n+            } catch (SQLiteCantOpenDatabaseException | SQLiteDatabaseLockedException e) {\n+               if (++count >= DB_OPEN_RETRY_MAX)\n+                  throw e;\n+               SystemClock.sleep(count * DB_OPEN_RETRY_BACKOFF);\n+            }\n+         }\n+      }\n+   }\n+\n+   @Override\n+   public Cursor query(String table, String[] columns, String selection,\n+                       String[] selectionArgs, String groupBy, String having,\n+                       String orderBy) {\n+      synchronized (LOCK) {\n+         return getWritableDatabase().query(table, columns, selection, selectionArgs, groupBy, having, orderBy);\n+      }\n+   }\n+\n+   @Override\n+   public Cursor query(String table, String[] columns, String selection, String[] selectionArgs, String groupBy, String having, String orderBy, String limit) {\n+      synchronized (LOCK) {\n+         return getWritableDatabase().query(table, columns, selection, selectionArgs, groupBy, having, orderBy, limit);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzA4Nzk3NQ=="}, "originalCommit": {"oid": "b74fc8b31c5810c9fe8399988eddc6a8fcddb6df"}, "originalPosition": 108}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2106, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}