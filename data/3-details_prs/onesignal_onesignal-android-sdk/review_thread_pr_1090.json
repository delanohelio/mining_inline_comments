{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ4NDIwOTEy", "number": 1090, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQwMDoxOTozMFrOEOekqA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQwMDoxOTozMFrOEOekqA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzNjE2NDI0OnYy", "diffSide": "RIGHT", "path": "OneSignalSDK/onesignal/src/main/java/com/onesignal/OneSignalSyncServiceUtils.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQwMDoxOTozMFrOGxpxbg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQwMDoxOTozMFrOGxpxbg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDcxNzgwNg==", "bodyText": "Could use a comment for this if block of why we can't schedule another job now, and that we will once the current job is finished.", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/1090#discussion_r454717806", "createdAt": "2020-07-15T00:19:30Z", "author": {"login": "jkasten2"}, "path": "OneSignalSDK/onesignal/src/main/java/com/onesignal/OneSignalSyncServiceUtils.java", "diffHunk": "@@ -142,20 +141,21 @@ private static boolean hasBootPermission(Context context) {\n    private static boolean isJobIdRunning(Context context) {\n       final JobScheduler jobScheduler = (JobScheduler) context.getSystemService(Context.JOB_SCHEDULER_SERVICE);\n       for (JobInfo jobInfo : jobScheduler.getAllPendingJobs()) {\n-         if (jobInfo.getId() == OneSignalSyncServiceUtils.SYNC_TASK_ID) {\n+         if (jobInfo.getId() == OneSignalSyncServiceUtils.SYNC_TASK_ID && syncBgThread != null && syncBgThread.isAlive()) {\n             return true;\n          }\n       }\n       return false;\n    }\n \n    @RequiresApi(21)\n-   private static boolean scheduleSyncServiceAsJob(Context context, long delayMs) {\n+   private static void scheduleSyncServiceAsJob(Context context, long delayMs) {\n       OneSignal.Log(OneSignal.LOG_LEVEL.VERBOSE, \"scheduleSyncServiceAsJob:atTime: \" + delayMs);\n \n       if (isJobIdRunning(context)) {\n          OneSignal.Log(OneSignal.LOG_LEVEL.VERBOSE, \"scheduleSyncServiceAsJob Scheduler already running!\");\n-         return false;\n+         needsJobReschedule = true;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8458c80d974e9e499cd637563fbe9f26be872cf8"}, "originalPosition": 46}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2313, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}