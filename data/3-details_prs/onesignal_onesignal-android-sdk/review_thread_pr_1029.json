{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIxNjIxNDk5", "number": 1029, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QyMzoxMTo0MVrOEATlMQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QyMzoyMzowM1rOEATuxw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4NzU2MjczOnYy", "diffSide": "RIGHT", "path": "OneSignalSDK/onesignal/build.gradle", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QyMzoxMTo0MVrOGbgSgw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQwNjoyOTozOFrOGfh7IQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTQ5Mzc2Mw==", "bodyText": "agconnect only needs to be applied at the app level, not our SDK.", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/1029#discussion_r431493763", "createdAt": "2020-05-27T23:11:41Z", "author": {"login": "jkasten2"}, "path": "OneSignalSDK/onesignal/build.gradle", "diffHunk": "@@ -1,4 +1,5 @@\n apply plugin: 'com.android.library'\n+apply plugin: 'com.huawei.agconnect'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a4504b29fb204f19111406161df3117aabf46f3d"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTcxNDg0OQ==", "bodyText": "Fix in PR #1043 and has been merged into this PR already.", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/1029#discussion_r435714849", "createdAt": "2020-06-05T06:29:38Z", "author": {"login": "jkasten2"}, "path": "OneSignalSDK/onesignal/build.gradle", "diffHunk": "@@ -1,4 +1,5 @@\n apply plugin: 'com.android.library'\n+apply plugin: 'com.huawei.agconnect'", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTQ5Mzc2Mw=="}, "originalCommit": {"oid": "a4504b29fb204f19111406161df3117aabf46f3d"}, "originalPosition": 2}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4NzU2NTc5OnYy", "diffSide": "RIGHT", "path": "OneSignalSDK/onesignal/build.gradle", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QyMzoxMjo1MlrOGbgUPw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQwNjoyOTo0NlrOGfh7Yg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTQ5NDIwNw==", "bodyText": "These should be compileOnly so they are not included in our POM file as required dependencies.", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/1029#discussion_r431494207", "createdAt": "2020-05-27T23:12:52Z", "author": {"login": "jkasten2"}, "path": "OneSignalSDK/onesignal/build.gradle", "diffHunk": "@@ -56,6 +57,10 @@ dependencies {\n     // firebase-messaging:17.6.0 is the max version since we still have code looking for FirebaseInstanceIdService\n     api 'com.google.firebase:firebase-messaging:[10.2.1, 17.3.99]'\n \n+    implementation 'com.huawei.agconnect:agconnect-core:1.3.1.300'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a4504b29fb204f19111406161df3117aabf46f3d"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTcxNDkxNA==", "bodyText": "Fix in PR #1043 and has been merged into this PR already.", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/1029#discussion_r435714914", "createdAt": "2020-06-05T06:29:46Z", "author": {"login": "jkasten2"}, "path": "OneSignalSDK/onesignal/build.gradle", "diffHunk": "@@ -56,6 +57,10 @@ dependencies {\n     // firebase-messaging:17.6.0 is the max version since we still have code looking for FirebaseInstanceIdService\n     api 'com.google.firebase:firebase-messaging:[10.2.1, 17.3.99]'\n \n+    implementation 'com.huawei.agconnect:agconnect-core:1.3.1.300'", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTQ5NDIwNw=="}, "originalCommit": {"oid": "a4504b29fb204f19111406161df3117aabf46f3d"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4NzU3NjcwOnYy", "diffSide": "RIGHT", "path": "OneSignalSDK/onesignal/src/main/java/com/onesignal/LocationController.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QyMzoxODowN1rOGbgaxA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQwNzoxNjoyOVrOGfjAZg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTQ5NTg3Ng==", "bodyText": "We will want to change this to the same logic we are using the getDeviceType once PR #1026 is merged in.", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/1029#discussion_r431495876", "createdAt": "2020-05-27T23:18:07Z", "author": {"login": "jkasten2"}, "path": "OneSignalSDK/onesignal/src/main/java/com/onesignal/LocationController.java", "diffHunk": "@@ -248,40 +273,100 @@ else if (permissionList.contains(\"android.permission.ACCESS_COARSE_LOCATION\")) {\n \n    // Started from this class or PermissionActivity\n    static void startGetLocation() {\n-      // Prevents overlapping requests\n-      if (fallbackFailThread != null)\n-         return;\n+      OneSignal.Log(OneSignal.LOG_LEVEL.DEBUG, \"LocationController startGetLocation with lastLocation: \" + lastLocation);\n+\n+      if (locationHandlerThread == null)\n+         locationHandlerThread = new LocationHandlerThread();\n \n       try {\n-         synchronized (syncLock) {\n-            startFallBackThread();\n-\n-            if (locationHandlerThread == null)\n-               locationHandlerThread = new LocationHandlerThread();\n-\n-            if (mGoogleApiClient == null || mLastLocation == null) {\n-               GoogleApiClientListener googleApiClientListener = new GoogleApiClientListener();\n-               GoogleApiClient googleApiClient = new GoogleApiClient.Builder(classContext)\n-                       .addApi(LocationServices.API)\n-                       .addConnectionCallbacks(googleApiClientListener)\n-                       .addOnConnectionFailedListener(googleApiClientListener)\n-                       .setHandler(locationHandlerThread.mHandler)\n-                       .build();\n-               mGoogleApiClient = new GoogleApiClientCompatProxy(googleApiClient);\n-\n-               mGoogleApiClient.connect();\n-            }\n-            else if (mLastLocation != null)\n-               fireCompleteForLocation(mLastLocation);\n+         if (isGooglePlayServicesAvailable(classContext)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a4504b29fb204f19111406161df3117aabf46f3d"}, "originalPosition": 156}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTczMjU4Mg==", "bodyText": "Rebased this PR off of huawei_handle_notif_opens so we can address this now.\n@Jeasmine I addressed this in PR #1045 if you can do a review to close the comment", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/1029#discussion_r435732582", "createdAt": "2020-06-05T07:16:29Z", "author": {"login": "jkasten2"}, "path": "OneSignalSDK/onesignal/src/main/java/com/onesignal/LocationController.java", "diffHunk": "@@ -248,40 +273,100 @@ else if (permissionList.contains(\"android.permission.ACCESS_COARSE_LOCATION\")) {\n \n    // Started from this class or PermissionActivity\n    static void startGetLocation() {\n-      // Prevents overlapping requests\n-      if (fallbackFailThread != null)\n-         return;\n+      OneSignal.Log(OneSignal.LOG_LEVEL.DEBUG, \"LocationController startGetLocation with lastLocation: \" + lastLocation);\n+\n+      if (locationHandlerThread == null)\n+         locationHandlerThread = new LocationHandlerThread();\n \n       try {\n-         synchronized (syncLock) {\n-            startFallBackThread();\n-\n-            if (locationHandlerThread == null)\n-               locationHandlerThread = new LocationHandlerThread();\n-\n-            if (mGoogleApiClient == null || mLastLocation == null) {\n-               GoogleApiClientListener googleApiClientListener = new GoogleApiClientListener();\n-               GoogleApiClient googleApiClient = new GoogleApiClient.Builder(classContext)\n-                       .addApi(LocationServices.API)\n-                       .addConnectionCallbacks(googleApiClientListener)\n-                       .addOnConnectionFailedListener(googleApiClientListener)\n-                       .setHandler(locationHandlerThread.mHandler)\n-                       .build();\n-               mGoogleApiClient = new GoogleApiClientCompatProxy(googleApiClient);\n-\n-               mGoogleApiClient.connect();\n-            }\n-            else if (mLastLocation != null)\n-               fireCompleteForLocation(mLastLocation);\n+         if (isGooglePlayServicesAvailable(classContext)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTQ5NTg3Ng=="}, "originalCommit": {"oid": "a4504b29fb204f19111406161df3117aabf46f3d"}, "originalPosition": 156}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4NzU4NzI3OnYy", "diffSide": "RIGHT", "path": "OneSignalSDK/unittest/src/test/java/com/onesignal/ShadowFusedLocationProviderClient.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QyMzoyMzowM1rOGbgg7g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQwNjozMDowNFrOGfh7zQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTQ5NzQ1NA==", "bodyText": "Let's put HMS in the class name so it is clear it is only for it", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/1029#discussion_r431497454", "createdAt": "2020-05-27T23:23:03Z", "author": {"login": "jkasten2"}, "path": "OneSignalSDK/unittest/src/test/java/com/onesignal/ShadowFusedLocationProviderClient.java", "diffHunk": "@@ -0,0 +1,112 @@\n+/**\n+ * Modified MIT License\n+ * <p>\n+ * Copyright 2020 OneSignal\n+ * <p>\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ * <p>\n+ * 1. The above copyright notice and this permission notice shall be included in\n+ * all copies or substantial portions of the Software.\n+ * <p>\n+ * 2. All copies of substantial portions of the Software may only be used in connection\n+ * with services provided by OneSignal.\n+ * <p>\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+ * THE SOFTWARE.\n+ */\n+\n+package com.onesignal;\n+\n+import android.content.Context;\n+import android.location.Location;\n+import android.os.Handler;\n+import android.os.Looper;\n+\n+import com.huawei.hmf.tasks.Task;\n+import com.huawei.hmf.tasks.a.i;\n+import com.huawei.hms.location.FusedLocationProviderClient;\n+import com.huawei.hms.location.LocationCallback;\n+import com.huawei.hms.location.LocationRequest;\n+\n+import org.robolectric.annotation.Implementation;\n+import org.robolectric.annotation.Implements;\n+\n+import java.util.Timer;\n+import java.util.TimerTask;\n+\n+@Implements(FusedLocationProviderClient.class)\n+public class ShadowFusedLocationProviderClient {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a4504b29fb204f19111406161df3117aabf46f3d"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTcxNTAyMQ==", "bodyText": "Fix in PR #1043 and has been merged into this PR already.", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/1029#discussion_r435715021", "createdAt": "2020-06-05T06:30:04Z", "author": {"login": "jkasten2"}, "path": "OneSignalSDK/unittest/src/test/java/com/onesignal/ShadowFusedLocationProviderClient.java", "diffHunk": "@@ -0,0 +1,112 @@\n+/**\n+ * Modified MIT License\n+ * <p>\n+ * Copyright 2020 OneSignal\n+ * <p>\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ * <p>\n+ * 1. The above copyright notice and this permission notice shall be included in\n+ * all copies or substantial portions of the Software.\n+ * <p>\n+ * 2. All copies of substantial portions of the Software may only be used in connection\n+ * with services provided by OneSignal.\n+ * <p>\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+ * THE SOFTWARE.\n+ */\n+\n+package com.onesignal;\n+\n+import android.content.Context;\n+import android.location.Location;\n+import android.os.Handler;\n+import android.os.Looper;\n+\n+import com.huawei.hmf.tasks.Task;\n+import com.huawei.hmf.tasks.a.i;\n+import com.huawei.hms.location.FusedLocationProviderClient;\n+import com.huawei.hms.location.LocationCallback;\n+import com.huawei.hms.location.LocationRequest;\n+\n+import org.robolectric.annotation.Implementation;\n+import org.robolectric.annotation.Implements;\n+\n+import java.util.Timer;\n+import java.util.TimerTask;\n+\n+@Implements(FusedLocationProviderClient.class)\n+public class ShadowFusedLocationProviderClient {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTQ5NzQ1NA=="}, "originalCommit": {"oid": "a4504b29fb204f19111406161df3117aabf46f3d"}, "originalPosition": 48}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2261, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}