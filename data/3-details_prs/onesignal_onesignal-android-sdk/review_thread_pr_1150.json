{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg4MTU5MjU5", "number": 1150, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQyMToxNzo1MlrOElHpXg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQyMToxNzo1MlrOElHpXg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3MzU4MDQ2OnYy", "diffSide": "RIGHT", "path": "OneSignalSDK/onesignal/src/main/java/com/onesignal/OSTriggerController.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQyMToxNzo1MlrOHUcK4g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQxNzo0MjoyMFrOHXlw6w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTE5NTEwNg==", "bodyText": "It's not clear to me how this change makes the new testMessageDisplayedAfterAddTriggerEqualWithStringVsNumber test you added pass. Since triggerValue is \"5\" in your test and never get converted, as we are only formatting the device value.", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/1150#discussion_r491195106", "createdAt": "2020-09-18T21:17:52Z", "author": {"login": "jkasten2"}, "path": "OneSignalSDK/onesignal/src/main/java/com/onesignal/OSTriggerController.java", "diffHunk": "@@ -116,8 +117,16 @@ private boolean triggerMatchesFlex(@Nullable Object triggerValue, @NonNull Objec\n             return false;\n \n         // If operator is equal or not equals ignore type by comparing on toString values\n-        if (operator.checksEquality())\n-            return triggerMatchesStringValue(triggerValue.toString(), deviceValue.toString(), operator);\n+        if (operator.checksEquality()) {\n+            String triggerValueString = triggerValue.toString();\n+            String deviceValueString = deviceValue.toString();\n+            if (deviceValue instanceof Number) {\n+                // User may have an input text that converts 5 to 5.0, we only care about the raw value on equals\n+                DecimalFormat format = new DecimalFormat(\"0.#\");\n+                deviceValueString = format.format(deviceValue);\n+            }\n+            return triggerMatchesStringValue(triggerValueString, deviceValueString, operator);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "80821bbb4b554523c78de7ed586e779b33d5a067"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mjc2MDY2Mw==", "bodyText": "This problem started happening because the demo app input box converts integer to doubles, so whener we put 5 it will put 5.0, 1 -> 1.0 and so on.\nServer numbers come always trimed or they came as strings. So we need to trim user input to match server value, that is why device value is the only one formatted.\nThe tests cover when the user adds 5.0 or 5.50 inputs and the server trigger value is a string \"5\" and \"5.5\". In order to match EQUALS, we need to trim ceros from the user input for the string equals to match.\nMake sense?", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/1150#discussion_r492760663", "createdAt": "2020-09-22T14:03:38Z", "author": {"login": "Jeasmine"}, "path": "OneSignalSDK/onesignal/src/main/java/com/onesignal/OSTriggerController.java", "diffHunk": "@@ -116,8 +117,16 @@ private boolean triggerMatchesFlex(@Nullable Object triggerValue, @NonNull Objec\n             return false;\n \n         // If operator is equal or not equals ignore type by comparing on toString values\n-        if (operator.checksEquality())\n-            return triggerMatchesStringValue(triggerValue.toString(), deviceValue.toString(), operator);\n+        if (operator.checksEquality()) {\n+            String triggerValueString = triggerValue.toString();\n+            String deviceValueString = deviceValue.toString();\n+            if (deviceValue instanceof Number) {\n+                // User may have an input text that converts 5 to 5.0, we only care about the raw value on equals\n+                DecimalFormat format = new DecimalFormat(\"0.#\");\n+                deviceValueString = format.format(deviceValue);\n+            }\n+            return triggerMatchesStringValue(triggerValueString, deviceValueString, operator);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTE5NTEwNg=="}, "originalCommit": {"oid": "80821bbb4b554523c78de7ed586e779b33d5a067"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDQ5ODAyNw==", "bodyText": "got it, I think I flipped it around when reading this code", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/1150#discussion_r494498027", "createdAt": "2020-09-24T17:42:20Z", "author": {"login": "jkasten2"}, "path": "OneSignalSDK/onesignal/src/main/java/com/onesignal/OSTriggerController.java", "diffHunk": "@@ -116,8 +117,16 @@ private boolean triggerMatchesFlex(@Nullable Object triggerValue, @NonNull Objec\n             return false;\n \n         // If operator is equal or not equals ignore type by comparing on toString values\n-        if (operator.checksEquality())\n-            return triggerMatchesStringValue(triggerValue.toString(), deviceValue.toString(), operator);\n+        if (operator.checksEquality()) {\n+            String triggerValueString = triggerValue.toString();\n+            String deviceValueString = deviceValue.toString();\n+            if (deviceValue instanceof Number) {\n+                // User may have an input text that converts 5 to 5.0, we only care about the raw value on equals\n+                DecimalFormat format = new DecimalFormat(\"0.#\");\n+                deviceValueString = format.format(deviceValue);\n+            }\n+            return triggerMatchesStringValue(triggerValueString, deviceValueString, operator);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTE5NTEwNg=="}, "originalCommit": {"oid": "80821bbb4b554523c78de7ed586e779b33d5a067"}, "originalPosition": 22}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2134, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}