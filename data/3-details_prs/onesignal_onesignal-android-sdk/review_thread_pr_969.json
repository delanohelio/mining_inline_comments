{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg1ODM1NjU5", "number": 969, "reviewThreads": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQwMTo0NTo1OFrODmhMLQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQxOTozNjoyNVrODp_gew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxNzE2MjY5OnYy", "diffSide": "RIGHT", "path": "OneSignalSDK/onesignal/src/main/java/com/onesignal/OneSignal.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQwMTo0NTo1OFrOFz-2fQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQwMTo0NTo1OFrOFz-2fQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDA1MTQ1Mw==", "bodyText": "Remove ExternalUserIdUpdateHandler, both onSuccess and onFailure are blank.", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/969#discussion_r390051453", "createdAt": "2020-03-10T01:45:58Z", "author": {"login": "jkasten2"}, "path": "OneSignalSDK/onesignal/src/main/java/com/onesignal/OneSignal.java", "diffHunk": "@@ -1524,7 +1549,17 @@ public static void removeExternalUserId() {\n          return;\n \n       // to remove the external user ID, the API requires an empty string\n-      setExternalUserId(\"\");\n+      setExternalUserId(\"\", new ExternalUserIdUpdateHandler() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d775b5054c61de0649818dd0dd71ed95d9e26ef2"}, "originalPosition": 68}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxOTcxODAzOnYy", "diffSide": "RIGHT", "path": "OneSignalSDK/app/src/main/java/com/onesignal/MainActivity.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQxNjozODo1MVrOF0XWqw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQxODo1Njo1OVrOF5fxYA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDQ1MjkwNw==", "bodyText": "Can the id be a generic one? Although it's a demo app, It should exclude reference to its developers, what do you think?", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/969#discussion_r390452907", "createdAt": "2020-03-10T16:38:51Z", "author": {"login": "Jeasmine"}, "path": "OneSignalSDK/app/src/main/java/com/onesignal/MainActivity.java", "diffHunk": "@@ -268,6 +268,18 @@ public void onUnsubscribeClicked(View v) {\n \n    public void onSendTagsClicked(View v) {\n       try {\n+         OneSignal.setExternalUserId(\"mikechoch_\" + sendTagsCounter, new OneSignal.ExternalUserIdUpdateHandler() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d775b5054c61de0649818dd0dd71ed95d9e26ef2"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTgzMzY5Ng==", "bodyText": "I did this lazy for testing, there is a text field now haha", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/969#discussion_r395833696", "createdAt": "2020-03-20T18:56:59Z", "author": {"login": "mikechoch"}, "path": "OneSignalSDK/app/src/main/java/com/onesignal/MainActivity.java", "diffHunk": "@@ -268,6 +268,18 @@ public void onUnsubscribeClicked(View v) {\n \n    public void onSendTagsClicked(View v) {\n       try {\n+         OneSignal.setExternalUserId(\"mikechoch_\" + sendTagsCounter, new OneSignal.ExternalUserIdUpdateHandler() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDQ1MjkwNw=="}, "originalCommit": {"oid": "d775b5054c61de0649818dd0dd71ed95d9e26ef2"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxOTc0ODQ0OnYy", "diffSide": "RIGHT", "path": "OneSignalSDK/onesignal/src/main/java/com/onesignal/UserStateEmailSynchronizer.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQxNjo0NjowMFrOF0XqFQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQxODo1NzoyMFrOF5fyEQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDQ1Nzg3Nw==", "bodyText": "can you mark it with @nullable?", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/969#discussion_r390457877", "createdAt": "2020-03-10T16:46:00Z", "author": {"login": "Jeasmine"}, "path": "OneSignalSDK/onesignal/src/main/java/com/onesignal/UserStateEmailSynchronizer.java", "diffHunk": "@@ -22,6 +22,12 @@ GetTagsResult getTags(boolean fromServer) {\n         return null;\n     }\n \n+    // Email external id not readable from SDK\n+    @Override\n+    String getExternalId(boolean fromServer) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d775b5054c61de0649818dd0dd71ed95d9e26ef2"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTgzMzg3Mw==", "bodyText": "Sure!", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/969#discussion_r395833873", "createdAt": "2020-03-20T18:57:20Z", "author": {"login": "mikechoch"}, "path": "OneSignalSDK/onesignal/src/main/java/com/onesignal/UserStateEmailSynchronizer.java", "diffHunk": "@@ -22,6 +22,12 @@ GetTagsResult getTags(boolean fromServer) {\n         return null;\n     }\n \n+    // Email external id not readable from SDK\n+    @Override\n+    String getExternalId(boolean fromServer) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDQ1Nzg3Nw=="}, "originalCommit": {"oid": "d775b5054c61de0649818dd0dd71ed95d9e26ef2"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxOTc0ODcxOnYy", "diffSide": "RIGHT", "path": "OneSignalSDK/onesignal/src/main/java/com/onesignal/UserStatePushSynchronizer.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQxNjo0NjowNVrOF0XqRw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQxNjo0NjowNVrOF0XqRw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDQ1NzkyNw==", "bodyText": "can you mark it with @nullable?", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/969#discussion_r390457927", "createdAt": "2020-03-10T16:46:05Z", "author": {"login": "Jeasmine"}, "path": "OneSignalSDK/onesignal/src/main/java/com/onesignal/UserStatePushSynchronizer.java", "diffHunk": "@@ -63,6 +63,13 @@ void onSuccess(String responseStr) {\n         }\n     }\n \n+    @Override\n+    String getExternalId(boolean fromServer) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d775b5054c61de0649818dd0dd71ed95d9e26ef2"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxOTc1NDI1OnYy", "diffSide": "RIGHT", "path": "OneSignalSDK/onesignal/src/main/java/com/onesignal/UserStateSynchronizer.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQxNjo0NzozM1rOF0Xt9w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQxNjo0NzozM1rOF0Xt9w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDQ1ODg3MQ==", "bodyText": "mark it as @nullable", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/969#discussion_r390458871", "createdAt": "2020-03-10T16:47:33Z", "author": {"login": "Jeasmine"}, "path": "OneSignalSDK/onesignal/src/main/java/com/onesignal/UserStateSynchronizer.java", "diffHunk": "@@ -44,11 +44,14 @@ String getRegistrationId() {\n \n     abstract GetTagsResult getTags(boolean fromServer);\n \n+    abstract String getExternalId(boolean fromServer);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d775b5054c61de0649818dd0dd71ed95d9e26ef2"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1MzUwNzczOnYy", "diffSide": "RIGHT", "path": "OneSignalSDK/onesignal/src/main/java/com/onesignal/OneSignalPrefs.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQxOTowNzozNVrOF5gFXQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQyMToxNToxMlrOF5jY4Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTgzODgxMw==", "bodyText": "A 2nd todo?", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/969#discussion_r395838813", "createdAt": "2020-03-20T19:07:35Z", "author": {"login": "jkasten2"}, "path": "OneSignalSDK/onesignal/src/main/java/com/onesignal/OneSignalPrefs.java", "diffHunk": "@@ -40,12 +40,16 @@\n \n class OneSignalPrefs {\n \n+    // TODO:\n+    //  1. Fix all of the SharedPreference Keys so they are organized by usage with comments\n+    //  2.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e70890aab247c79a19e58b1ca4d084522c6f9b6c"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTg5Mjk2MQ==", "bodyText": "didnt finish typing my TODO here haha", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/969#discussion_r395892961", "createdAt": "2020-03-20T21:15:12Z", "author": {"login": "mikechoch"}, "path": "OneSignalSDK/onesignal/src/main/java/com/onesignal/OneSignalPrefs.java", "diffHunk": "@@ -40,12 +40,16 @@\n \n class OneSignalPrefs {\n \n+    // TODO:\n+    //  1. Fix all of the SharedPreference Keys so they are organized by usage with comments\n+    //  2.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTgzODgxMw=="}, "originalCommit": {"oid": "e70890aab247c79a19e58b1ca4d084522c6f9b6c"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1MzU1NjY5OnYy", "diffSide": "RIGHT", "path": "OneSignalSDK/app/src/main/java/com/onesignal/example/OneSignalExampleApp.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQxOToyNTowNFrOF5gkiQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQyMToxNToyMFrOF5jZMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTg0Njc5Mw==", "bodyText": "is this ok? can you remove it?", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/969#discussion_r395846793", "createdAt": "2020-03-20T19:25:04Z", "author": {"login": "Jeasmine"}, "path": "OneSignalSDK/app/src/main/java/com/onesignal/example/OneSignalExampleApp.java", "diffHunk": "@@ -71,7 +71,7 @@ public void onCreate() {\n          new ExampleNotificationReceivedHandler()\n       );\n \n-      OneSignal.sendTag(\"test1\", \"test1\");\n+//      OneSignal.sendTag(\"test1\", \"test1\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e70890aab247c79a19e58b1ca4d084522c6f9b6c"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTg5MzA0MQ==", "bodyText": "Sure, just the demo app", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/969#discussion_r395893041", "createdAt": "2020-03-20T21:15:20Z", "author": {"login": "mikechoch"}, "path": "OneSignalSDK/app/src/main/java/com/onesignal/example/OneSignalExampleApp.java", "diffHunk": "@@ -71,7 +71,7 @@ public void onCreate() {\n          new ExampleNotificationReceivedHandler()\n       );\n \n-      OneSignal.sendTag(\"test1\", \"test1\");\n+//      OneSignal.sendTag(\"test1\", \"test1\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTg0Njc5Mw=="}, "originalCommit": {"oid": "e70890aab247c79a19e58b1ca4d084522c6f9b6c"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1MzU2MTc5OnYy", "diffSide": "RIGHT", "path": "OneSignalSDK/onesignal/src/main/java/com/onesignal/OneSignalStateSynchronizer.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQxOToyNzowMlrOF5gn8g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQyMToxNToyOFrOF5jZeg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTg0NzY2Ng==", "bodyText": "good refactor!", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/969#discussion_r395847666", "createdAt": "2020-03-20T19:27:02Z", "author": {"login": "Jeasmine"}, "path": "OneSignalSDK/onesignal/src/main/java/com/onesignal/OneSignalStateSynchronizer.java", "diffHunk": "@@ -33,21 +33,46 @@\n import org.json.JSONObject;\n import com.onesignal.OneSignal.ChangeTagsUpdateHandler;\n \n+import java.util.HashMap;\n+import java.util.Iterator;\n+\n class OneSignalStateSynchronizer {\n \n-   private static UserStatePushSynchronizer userStatePushSynchronizer;\n-   private static UserStateEmailSynchronizer userStateEmailSynchronizer;\n+   enum UserStateSynchronizerType {\n+      PUSH,\n+      EMAIL;\n+\n+      public boolean isPush() {\n+         return this.equals(PUSH);\n+      }\n+\n+      public boolean isEmail() {\n+         return this.equals(EMAIL);\n+      }\n+   }\n \n+   // Each class abstracts from UserStateSynchronizer and this will allow us to handle different channels for specific method calls and requests\n+   // Each time we create a new UserStateSynchronizer we should add it to the userStateSynchronizers HashMap\n+   // Currently we have 2 channels:\n+   //    1. Push\n+   //    2. Email\n+   //    Add more channels...\n+   private static HashMap<UserStateSynchronizerType, UserStateSynchronizer> userStateSynchronizers =  new HashMap<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e70890aab247c79a19e58b1ca4d084522c6f9b6c"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTg5MzExNA==", "bodyText": "Thanks!", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/969#discussion_r395893114", "createdAt": "2020-03-20T21:15:28Z", "author": {"login": "mikechoch"}, "path": "OneSignalSDK/onesignal/src/main/java/com/onesignal/OneSignalStateSynchronizer.java", "diffHunk": "@@ -33,21 +33,46 @@\n import org.json.JSONObject;\n import com.onesignal.OneSignal.ChangeTagsUpdateHandler;\n \n+import java.util.HashMap;\n+import java.util.Iterator;\n+\n class OneSignalStateSynchronizer {\n \n-   private static UserStatePushSynchronizer userStatePushSynchronizer;\n-   private static UserStateEmailSynchronizer userStateEmailSynchronizer;\n+   enum UserStateSynchronizerType {\n+      PUSH,\n+      EMAIL;\n+\n+      public boolean isPush() {\n+         return this.equals(PUSH);\n+      }\n+\n+      public boolean isEmail() {\n+         return this.equals(EMAIL);\n+      }\n+   }\n \n+   // Each class abstracts from UserStateSynchronizer and this will allow us to handle different channels for specific method calls and requests\n+   // Each time we create a new UserStateSynchronizer we should add it to the userStateSynchronizers HashMap\n+   // Currently we have 2 channels:\n+   //    1. Push\n+   //    2. Email\n+   //    Add more channels...\n+   private static HashMap<UserStateSynchronizerType, UserStateSynchronizer> userStateSynchronizers =  new HashMap<>();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTg0NzY2Ng=="}, "originalCommit": {"oid": "e70890aab247c79a19e58b1ca4d084522c6f9b6c"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1MzU3MDU0OnYy", "diffSide": "RIGHT", "path": "OneSignalSDK/onesignal/src/main/java/com/onesignal/UserStatePushSynchronizer.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQxOTozMDoxOVrOF5gtzg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQyMToxNTo0NFrOF5jZ9A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTg0OTE2Ng==", "bodyText": "can \"external_user_id\" be on a constant?", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/969#discussion_r395849166", "createdAt": "2020-03-20T19:30:19Z", "author": {"login": "Jeasmine"}, "path": "OneSignalSDK/onesignal/src/main/java/com/onesignal/UserStatePushSynchronizer.java", "diffHunk": "@@ -63,6 +69,13 @@ void onSuccess(String responseStr) {\n         }\n     }\n \n+    @Override\n+    String getExternalId(boolean fromServer) {\n+        synchronized(syncLock) {\n+            return toSyncUserState.syncValues.optString(\"external_user_id\", null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e70890aab247c79a19e58b1ca4d084522c6f9b6c"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTg5MzIzNg==", "bodyText": "We dont use constants for any of our other keys. We should eventually migrate to do this though", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/969#discussion_r395893236", "createdAt": "2020-03-20T21:15:44Z", "author": {"login": "mikechoch"}, "path": "OneSignalSDK/onesignal/src/main/java/com/onesignal/UserStatePushSynchronizer.java", "diffHunk": "@@ -63,6 +69,13 @@ void onSuccess(String responseStr) {\n         }\n     }\n \n+    @Override\n+    String getExternalId(boolean fromServer) {\n+        synchronized(syncLock) {\n+            return toSyncUserState.syncValues.optString(\"external_user_id\", null);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTg0OTE2Ng=="}, "originalCommit": {"oid": "e70890aab247c79a19e58b1ca4d084522c6f9b6c"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1MzU4NzE1OnYy", "diffSide": "RIGHT", "path": "OneSignalSDK/onesignal/src/main/java/com/onesignal/OneSignalStateSynchronizer.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQxOTozNjoyNVrOF5g4bQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQyMjo1NzozNVrOF5lTOw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTg1MTg4NQ==", "bodyText": "this that if for one userStateSynchronizer there are handler this will cancel the callback. Why isnt this called before the try catch?", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/969#discussion_r395851885", "createdAt": "2020-03-20T19:36:25Z", "author": {"login": "Jeasmine"}, "path": "OneSignalSDK/onesignal/src/main/java/com/onesignal/OneSignalStateSynchronizer.java", "diffHunk": "@@ -174,9 +203,46 @@ static void logoutEmail() {\n       getEmailStateSynchronizer().logoutEmail();\n    }\n \n-   static void setExternalUserId(String externalId) throws JSONException {\n-      getPushStateSynchronizer().setExternalUserId(externalId);\n-      getEmailStateSynchronizer().setExternalUserId(externalId);\n+   static void setExternalUserId(String externalId, final OneSignal.OSExternalUserIdUpdateCompletionHandler completionHandler) throws JSONException {\n+      final JSONObject responses = new JSONObject();\n+      // Create a handler for internal usage, this is where the developers completion handler will be called,\n+      //  which happens once all handlers for each channel have been processed\n+      OneSignal.OSInternalExternalUserIdUpdateCompletionHandler handler = new OneSignal.OSInternalExternalUserIdUpdateCompletionHandler() {\n+         @Override\n+         public void onComplete(String channel, boolean success) {\n+            OneSignal.onesignalLog(OneSignal.LOG_LEVEL.VERBOSE, \"Completed request to update external user id for channel: \" + channel + \" and success: \" + success);\n+            try {\n+               // Latest channel success status will be overwriting previous ones since we only care about latest request status\n+               // That way the completion handler is allowing the developer to handle the most recent scenario\n+               responses.put(channel, new JSONObject().put(\"success\", success));\n+            } catch (JSONException e) {\n+               OneSignal.onesignalLog(OneSignal.LOG_LEVEL.ERROR, \"Error while adding the success status of external id for channel: \" + channel);\n+               e.printStackTrace();\n+            }\n+\n+            for (UserStateSynchronizer userStateSynchronizer : userStateSynchronizers.values()) {\n+               if (userStateSynchronizer.hasQueuedHandlers()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e70890aab247c79a19e58b1ca4d084522c6f9b6c"}, "originalPosition": 91}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTg5MzU2Mw==", "bodyText": "We check if any other handlers for the Push or Email channel exist. We wont return completion until all handlers are done being processed", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/969#discussion_r395893563", "createdAt": "2020-03-20T21:16:33Z", "author": {"login": "mikechoch"}, "path": "OneSignalSDK/onesignal/src/main/java/com/onesignal/OneSignalStateSynchronizer.java", "diffHunk": "@@ -174,9 +203,46 @@ static void logoutEmail() {\n       getEmailStateSynchronizer().logoutEmail();\n    }\n \n-   static void setExternalUserId(String externalId) throws JSONException {\n-      getPushStateSynchronizer().setExternalUserId(externalId);\n-      getEmailStateSynchronizer().setExternalUserId(externalId);\n+   static void setExternalUserId(String externalId, final OneSignal.OSExternalUserIdUpdateCompletionHandler completionHandler) throws JSONException {\n+      final JSONObject responses = new JSONObject();\n+      // Create a handler for internal usage, this is where the developers completion handler will be called,\n+      //  which happens once all handlers for each channel have been processed\n+      OneSignal.OSInternalExternalUserIdUpdateCompletionHandler handler = new OneSignal.OSInternalExternalUserIdUpdateCompletionHandler() {\n+         @Override\n+         public void onComplete(String channel, boolean success) {\n+            OneSignal.onesignalLog(OneSignal.LOG_LEVEL.VERBOSE, \"Completed request to update external user id for channel: \" + channel + \" and success: \" + success);\n+            try {\n+               // Latest channel success status will be overwriting previous ones since we only care about latest request status\n+               // That way the completion handler is allowing the developer to handle the most recent scenario\n+               responses.put(channel, new JSONObject().put(\"success\", success));\n+            } catch (JSONException e) {\n+               OneSignal.onesignalLog(OneSignal.LOG_LEVEL.ERROR, \"Error while adding the success status of external id for channel: \" + channel);\n+               e.printStackTrace();\n+            }\n+\n+            for (UserStateSynchronizer userStateSynchronizer : userStateSynchronizers.values()) {\n+               if (userStateSynchronizer.hasQueuedHandlers()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTg1MTg4NQ=="}, "originalCommit": {"oid": "e70890aab247c79a19e58b1ca4d084522c6f9b6c"}, "originalPosition": 91}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTkyMjEyNw==", "bodyText": "Steps until this point:\n\nInit responses\nCreate handler\nAdd handler to each channel\nAwait for completion and all handlers to be done on each channel\nAll channels done processing handlers, now lets return completion with most recent status from each channel", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/969#discussion_r395922127", "createdAt": "2020-03-20T22:48:55Z", "author": {"login": "mikechoch"}, "path": "OneSignalSDK/onesignal/src/main/java/com/onesignal/OneSignalStateSynchronizer.java", "diffHunk": "@@ -174,9 +203,46 @@ static void logoutEmail() {\n       getEmailStateSynchronizer().logoutEmail();\n    }\n \n-   static void setExternalUserId(String externalId) throws JSONException {\n-      getPushStateSynchronizer().setExternalUserId(externalId);\n-      getEmailStateSynchronizer().setExternalUserId(externalId);\n+   static void setExternalUserId(String externalId, final OneSignal.OSExternalUserIdUpdateCompletionHandler completionHandler) throws JSONException {\n+      final JSONObject responses = new JSONObject();\n+      // Create a handler for internal usage, this is where the developers completion handler will be called,\n+      //  which happens once all handlers for each channel have been processed\n+      OneSignal.OSInternalExternalUserIdUpdateCompletionHandler handler = new OneSignal.OSInternalExternalUserIdUpdateCompletionHandler() {\n+         @Override\n+         public void onComplete(String channel, boolean success) {\n+            OneSignal.onesignalLog(OneSignal.LOG_LEVEL.VERBOSE, \"Completed request to update external user id for channel: \" + channel + \" and success: \" + success);\n+            try {\n+               // Latest channel success status will be overwriting previous ones since we only care about latest request status\n+               // That way the completion handler is allowing the developer to handle the most recent scenario\n+               responses.put(channel, new JSONObject().put(\"success\", success));\n+            } catch (JSONException e) {\n+               OneSignal.onesignalLog(OneSignal.LOG_LEVEL.ERROR, \"Error while adding the success status of external id for channel: \" + channel);\n+               e.printStackTrace();\n+            }\n+\n+            for (UserStateSynchronizer userStateSynchronizer : userStateSynchronizers.values()) {\n+               if (userStateSynchronizer.hasQueuedHandlers()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTg1MTg4NQ=="}, "originalCommit": {"oid": "e70890aab247c79a19e58b1ca4d084522c6f9b6c"}, "originalPosition": 91}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTkyNDI4Mw==", "bodyText": "oooh i see, i looked it wrong, Thx!", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/969#discussion_r395924283", "createdAt": "2020-03-20T22:57:35Z", "author": {"login": "Jeasmine"}, "path": "OneSignalSDK/onesignal/src/main/java/com/onesignal/OneSignalStateSynchronizer.java", "diffHunk": "@@ -174,9 +203,46 @@ static void logoutEmail() {\n       getEmailStateSynchronizer().logoutEmail();\n    }\n \n-   static void setExternalUserId(String externalId) throws JSONException {\n-      getPushStateSynchronizer().setExternalUserId(externalId);\n-      getEmailStateSynchronizer().setExternalUserId(externalId);\n+   static void setExternalUserId(String externalId, final OneSignal.OSExternalUserIdUpdateCompletionHandler completionHandler) throws JSONException {\n+      final JSONObject responses = new JSONObject();\n+      // Create a handler for internal usage, this is where the developers completion handler will be called,\n+      //  which happens once all handlers for each channel have been processed\n+      OneSignal.OSInternalExternalUserIdUpdateCompletionHandler handler = new OneSignal.OSInternalExternalUserIdUpdateCompletionHandler() {\n+         @Override\n+         public void onComplete(String channel, boolean success) {\n+            OneSignal.onesignalLog(OneSignal.LOG_LEVEL.VERBOSE, \"Completed request to update external user id for channel: \" + channel + \" and success: \" + success);\n+            try {\n+               // Latest channel success status will be overwriting previous ones since we only care about latest request status\n+               // That way the completion handler is allowing the developer to handle the most recent scenario\n+               responses.put(channel, new JSONObject().put(\"success\", success));\n+            } catch (JSONException e) {\n+               OneSignal.onesignalLog(OneSignal.LOG_LEVEL.ERROR, \"Error while adding the success status of external id for channel: \" + channel);\n+               e.printStackTrace();\n+            }\n+\n+            for (UserStateSynchronizer userStateSynchronizer : userStateSynchronizers.values()) {\n+               if (userStateSynchronizer.hasQueuedHandlers()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTg1MTg4NQ=="}, "originalCommit": {"oid": "e70890aab247c79a19e58b1ca4d084522c6f9b6c"}, "originalPosition": 91}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2212, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}