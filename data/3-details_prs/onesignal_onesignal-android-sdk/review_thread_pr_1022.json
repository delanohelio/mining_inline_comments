{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE5ODU5MTU0", "number": 1022, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQyMTozOToyMlrOD-ZoGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQyMTo0Njo1OFrOD-ZwwQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2NzU4MTcxOnYy", "diffSide": "RIGHT", "path": "OneSignalSDK/unittest/src/test/java/com/test/onesignal/NotificationOpenedActivityHMSIntegrationTestsRunner.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQyMTozOToyMlrOGYewDA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQwMDowMjowMFrOGfcOdw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODMyMjgyOA==", "bodyText": "can we remove this enters? or are we changing the convention?", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/1022#discussion_r428322828", "createdAt": "2020-05-20T21:39:22Z", "author": {"login": "Jeasmine"}, "path": "OneSignalSDK/unittest/src/test/java/com/test/onesignal/NotificationOpenedActivityHMSIntegrationTestsRunner.java", "diffHunk": "@@ -0,0 +1,125 @@\n+package com.test.onesignal;\r\n+\r\n+import android.app.Activity;\r\n+import android.content.Intent;\r\n+import android.support.annotation.NonNull;\r\n+\r\n+import com.onesignal.NotificationOpenedActivityHMS;\r\n+import com.onesignal.OneSignal;\r\n+import com.onesignal.ShadowCustomTabsClient;\r\n+import com.onesignal.ShadowCustomTabsSession;\r\n+import com.onesignal.ShadowOSUtils;\r\n+import com.onesignal.ShadowOSViewUtils;\r\n+import com.onesignal.ShadowOSWebView;\r\n+import com.onesignal.ShadowOneSignalRestClient;\r\n+import com.onesignal.StaticResetHelper;\r\n+import com.onesignal.example.BlankActivity;\r\n+\r\n+import org.json.JSONObject;\r\n+import org.junit.Before;\r\n+import org.junit.BeforeClass;\r\n+import org.junit.Test;\r\n+import org.junit.runner.RunWith;\r\n+import org.robolectric.Robolectric;\r\n+import org.robolectric.RobolectricTestRunner;\r\n+import org.robolectric.RuntimeEnvironment;\r\n+import org.robolectric.annotation.Config;\r\n+import org.robolectric.shadows.ShadowLog;\r\n+\r\n+import java.util.UUID;\r\n+\r\n+import static com.onesignal.InAppMessagingHelpers.ONESIGNAL_APP_ID;\r\n+import static com.test.onesignal.TestHelpers.fastColdRestartApp;\r\n+import static com.test.onesignal.TestHelpers.threadAndTaskWait;\r\n+import static junit.framework.Assert.assertEquals;\r\n+import static org.robolectric.Shadows.shadowOf;\r\n+\r\n+\r\n+@Config(packageName = \"com.onesignal.example\",\r\n+    instrumentedPackages = { \"com.onesignal\" },\r\n+    shadows = {\r\n+        ShadowOSUtils.class,\r\n+        ShadowOneSignalRestClient.class,\r\n+        ShadowCustomTabsClient.class,\r\n+        ShadowOSWebView.class,\r\n+        ShadowOSViewUtils.class,\r\n+        ShadowCustomTabsClient.class,\r\n+        ShadowCustomTabsSession.class\r\n+    },\r\n+    sdk = 26\r\n+)\r\n+\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5eb462d8d7209dca82ff6e7da4527f12601e9774"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTYyMTQ5NQ==", "bodyText": "Fixed!", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/1022#discussion_r435621495", "createdAt": "2020-06-05T00:02:00Z", "author": {"login": "jkasten2"}, "path": "OneSignalSDK/unittest/src/test/java/com/test/onesignal/NotificationOpenedActivityHMSIntegrationTestsRunner.java", "diffHunk": "@@ -0,0 +1,125 @@\n+package com.test.onesignal;\r\n+\r\n+import android.app.Activity;\r\n+import android.content.Intent;\r\n+import android.support.annotation.NonNull;\r\n+\r\n+import com.onesignal.NotificationOpenedActivityHMS;\r\n+import com.onesignal.OneSignal;\r\n+import com.onesignal.ShadowCustomTabsClient;\r\n+import com.onesignal.ShadowCustomTabsSession;\r\n+import com.onesignal.ShadowOSUtils;\r\n+import com.onesignal.ShadowOSViewUtils;\r\n+import com.onesignal.ShadowOSWebView;\r\n+import com.onesignal.ShadowOneSignalRestClient;\r\n+import com.onesignal.StaticResetHelper;\r\n+import com.onesignal.example.BlankActivity;\r\n+\r\n+import org.json.JSONObject;\r\n+import org.junit.Before;\r\n+import org.junit.BeforeClass;\r\n+import org.junit.Test;\r\n+import org.junit.runner.RunWith;\r\n+import org.robolectric.Robolectric;\r\n+import org.robolectric.RobolectricTestRunner;\r\n+import org.robolectric.RuntimeEnvironment;\r\n+import org.robolectric.annotation.Config;\r\n+import org.robolectric.shadows.ShadowLog;\r\n+\r\n+import java.util.UUID;\r\n+\r\n+import static com.onesignal.InAppMessagingHelpers.ONESIGNAL_APP_ID;\r\n+import static com.test.onesignal.TestHelpers.fastColdRestartApp;\r\n+import static com.test.onesignal.TestHelpers.threadAndTaskWait;\r\n+import static junit.framework.Assert.assertEquals;\r\n+import static org.robolectric.Shadows.shadowOf;\r\n+\r\n+\r\n+@Config(packageName = \"com.onesignal.example\",\r\n+    instrumentedPackages = { \"com.onesignal\" },\r\n+    shadows = {\r\n+        ShadowOSUtils.class,\r\n+        ShadowOneSignalRestClient.class,\r\n+        ShadowCustomTabsClient.class,\r\n+        ShadowOSWebView.class,\r\n+        ShadowOSViewUtils.class,\r\n+        ShadowCustomTabsClient.class,\r\n+        ShadowCustomTabsSession.class\r\n+    },\r\n+    sdk = 26\r\n+)\r\n+\r", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODMyMjgyOA=="}, "originalCommit": {"oid": "5eb462d8d7209dca82ff6e7da4527f12601e9774"}, "originalPosition": 51}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2NzU5MTYyOnYy", "diffSide": "RIGHT", "path": "OneSignalSDK/unittest/src/test/java/com/test/onesignal/NotificationOpenedActivityHMSIntegrationTestsRunner.java", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQyMTo0MjoyOVrOGYe2Uw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQwNDowMjoxOFrOGffq7Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODMyNDQzNQ==", "bodyText": "FLAG_ACTIVITY_CLEAR_WHEN_TASK_RESET is deprecated, and why is needed?", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/1022#discussion_r428324435", "createdAt": "2020-05-20T21:42:29Z", "author": {"login": "Jeasmine"}, "path": "OneSignalSDK/unittest/src/test/java/com/test/onesignal/NotificationOpenedActivityHMSIntegrationTestsRunner.java", "diffHunk": "@@ -0,0 +1,125 @@\n+package com.test.onesignal;\r\n+\r\n+import android.app.Activity;\r\n+import android.content.Intent;\r\n+import android.support.annotation.NonNull;\r\n+\r\n+import com.onesignal.NotificationOpenedActivityHMS;\r\n+import com.onesignal.OneSignal;\r\n+import com.onesignal.ShadowCustomTabsClient;\r\n+import com.onesignal.ShadowCustomTabsSession;\r\n+import com.onesignal.ShadowOSUtils;\r\n+import com.onesignal.ShadowOSViewUtils;\r\n+import com.onesignal.ShadowOSWebView;\r\n+import com.onesignal.ShadowOneSignalRestClient;\r\n+import com.onesignal.StaticResetHelper;\r\n+import com.onesignal.example.BlankActivity;\r\n+\r\n+import org.json.JSONObject;\r\n+import org.junit.Before;\r\n+import org.junit.BeforeClass;\r\n+import org.junit.Test;\r\n+import org.junit.runner.RunWith;\r\n+import org.robolectric.Robolectric;\r\n+import org.robolectric.RobolectricTestRunner;\r\n+import org.robolectric.RuntimeEnvironment;\r\n+import org.robolectric.annotation.Config;\r\n+import org.robolectric.shadows.ShadowLog;\r\n+\r\n+import java.util.UUID;\r\n+\r\n+import static com.onesignal.InAppMessagingHelpers.ONESIGNAL_APP_ID;\r\n+import static com.test.onesignal.TestHelpers.fastColdRestartApp;\r\n+import static com.test.onesignal.TestHelpers.threadAndTaskWait;\r\n+import static junit.framework.Assert.assertEquals;\r\n+import static org.robolectric.Shadows.shadowOf;\r\n+\r\n+\r\n+@Config(packageName = \"com.onesignal.example\",\r\n+    instrumentedPackages = { \"com.onesignal\" },\r\n+    shadows = {\r\n+        ShadowOSUtils.class,\r\n+        ShadowOneSignalRestClient.class,\r\n+        ShadowCustomTabsClient.class,\r\n+        ShadowOSWebView.class,\r\n+        ShadowOSViewUtils.class,\r\n+        ShadowCustomTabsClient.class,\r\n+        ShadowCustomTabsSession.class\r\n+    },\r\n+    sdk = 26\r\n+)\r\n+\r\n+\r\n+@RunWith(RobolectricTestRunner.class)\r\n+public class NotificationOpenedActivityHMSIntegrationTestsRunner {\r\n+\r\n+    @BeforeClass // Runs only once, before any tests\r\n+    public static void setUpClass() throws Exception {\r\n+        ShadowLog.stream = System.out;\r\n+        TestHelpers.beforeTestSuite();\r\n+        StaticResetHelper.saveStaticValues();\r\n+    }\r\n+\r\n+    @Before\r\n+    public void beforeEachTest() throws Exception {\r\n+        TestHelpers.beforeTestInitAndCleanup();\r\n+    }\r\n+\r\n+    private static Intent helper_baseHMSOpenIntent() {\r\n+        return new Intent()\r\n+                .setFlags(Intent.FLAG_ACTIVITY_NO_HISTORY | Intent.FLAG_ACTIVITY_CLEAR_WHEN_TASK_RESET | Intent.FLAG_ACTIVITY_MULTIPLE_TASK | Intent.FLAG_ACTIVITY_NEW_TASK)\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5eb462d8d7209dca82ff6e7da4527f12601e9774"}, "originalPosition": 70}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzQ0ODEzNw==", "bodyText": "He explains the reason for these flags in the comment in this PR\n// HMS Core creates a notification with an Intent when opened to start this Activity.\n//   Intent is defined via OneSignal's backend and is sent to HMS.\n// This has to be it's own Activity separate from NotificationOpenedActivity since\n//   we do not have full control over the Bundle.\n// Designed to be started with these flags\n// Intent.FLAG_ACTIVITY_NO_HISTORY | Intent.FLAG_ACTIVITY_CLEAR_WHEN_TASK_RESET | Intent.FLAG_ACTIVITY_MULTIPLE_TASK | Intent.FLAG_ACTIVITY_NEW_TASK\n// This way if app developer does not want the app to launch then it won't do so", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/1022#discussion_r433448137", "createdAt": "2020-06-01T19:40:30Z", "author": {"login": "mikechoch"}, "path": "OneSignalSDK/unittest/src/test/java/com/test/onesignal/NotificationOpenedActivityHMSIntegrationTestsRunner.java", "diffHunk": "@@ -0,0 +1,125 @@\n+package com.test.onesignal;\r\n+\r\n+import android.app.Activity;\r\n+import android.content.Intent;\r\n+import android.support.annotation.NonNull;\r\n+\r\n+import com.onesignal.NotificationOpenedActivityHMS;\r\n+import com.onesignal.OneSignal;\r\n+import com.onesignal.ShadowCustomTabsClient;\r\n+import com.onesignal.ShadowCustomTabsSession;\r\n+import com.onesignal.ShadowOSUtils;\r\n+import com.onesignal.ShadowOSViewUtils;\r\n+import com.onesignal.ShadowOSWebView;\r\n+import com.onesignal.ShadowOneSignalRestClient;\r\n+import com.onesignal.StaticResetHelper;\r\n+import com.onesignal.example.BlankActivity;\r\n+\r\n+import org.json.JSONObject;\r\n+import org.junit.Before;\r\n+import org.junit.BeforeClass;\r\n+import org.junit.Test;\r\n+import org.junit.runner.RunWith;\r\n+import org.robolectric.Robolectric;\r\n+import org.robolectric.RobolectricTestRunner;\r\n+import org.robolectric.RuntimeEnvironment;\r\n+import org.robolectric.annotation.Config;\r\n+import org.robolectric.shadows.ShadowLog;\r\n+\r\n+import java.util.UUID;\r\n+\r\n+import static com.onesignal.InAppMessagingHelpers.ONESIGNAL_APP_ID;\r\n+import static com.test.onesignal.TestHelpers.fastColdRestartApp;\r\n+import static com.test.onesignal.TestHelpers.threadAndTaskWait;\r\n+import static junit.framework.Assert.assertEquals;\r\n+import static org.robolectric.Shadows.shadowOf;\r\n+\r\n+\r\n+@Config(packageName = \"com.onesignal.example\",\r\n+    instrumentedPackages = { \"com.onesignal\" },\r\n+    shadows = {\r\n+        ShadowOSUtils.class,\r\n+        ShadowOneSignalRestClient.class,\r\n+        ShadowCustomTabsClient.class,\r\n+        ShadowOSWebView.class,\r\n+        ShadowOSViewUtils.class,\r\n+        ShadowCustomTabsClient.class,\r\n+        ShadowCustomTabsSession.class\r\n+    },\r\n+    sdk = 26\r\n+)\r\n+\r\n+\r\n+@RunWith(RobolectricTestRunner.class)\r\n+public class NotificationOpenedActivityHMSIntegrationTestsRunner {\r\n+\r\n+    @BeforeClass // Runs only once, before any tests\r\n+    public static void setUpClass() throws Exception {\r\n+        ShadowLog.stream = System.out;\r\n+        TestHelpers.beforeTestSuite();\r\n+        StaticResetHelper.saveStaticValues();\r\n+    }\r\n+\r\n+    @Before\r\n+    public void beforeEachTest() throws Exception {\r\n+        TestHelpers.beforeTestInitAndCleanup();\r\n+    }\r\n+\r\n+    private static Intent helper_baseHMSOpenIntent() {\r\n+        return new Intent()\r\n+                .setFlags(Intent.FLAG_ACTIVITY_NO_HISTORY | Intent.FLAG_ACTIVITY_CLEAR_WHEN_TASK_RESET | Intent.FLAG_ACTIVITY_MULTIPLE_TASK | Intent.FLAG_ACTIVITY_NEW_TASK)\r", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODMyNDQzNQ=="}, "originalCommit": {"oid": "5eb462d8d7209dca82ff6e7da4527f12601e9774"}, "originalPosition": 70}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzU2NDA0NQ==", "bodyText": "yeah I saw that but was curious if there were other reason because that flag is deprecated and in the docs said to use FLAG_ACTIVITY_NEW_DOCUMENT but doesn't make sense to me for this scenario \ud83e\udd14", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/1022#discussion_r433564045", "createdAt": "2020-06-02T00:54:46Z", "author": {"login": "Jeasmine"}, "path": "OneSignalSDK/unittest/src/test/java/com/test/onesignal/NotificationOpenedActivityHMSIntegrationTestsRunner.java", "diffHunk": "@@ -0,0 +1,125 @@\n+package com.test.onesignal;\r\n+\r\n+import android.app.Activity;\r\n+import android.content.Intent;\r\n+import android.support.annotation.NonNull;\r\n+\r\n+import com.onesignal.NotificationOpenedActivityHMS;\r\n+import com.onesignal.OneSignal;\r\n+import com.onesignal.ShadowCustomTabsClient;\r\n+import com.onesignal.ShadowCustomTabsSession;\r\n+import com.onesignal.ShadowOSUtils;\r\n+import com.onesignal.ShadowOSViewUtils;\r\n+import com.onesignal.ShadowOSWebView;\r\n+import com.onesignal.ShadowOneSignalRestClient;\r\n+import com.onesignal.StaticResetHelper;\r\n+import com.onesignal.example.BlankActivity;\r\n+\r\n+import org.json.JSONObject;\r\n+import org.junit.Before;\r\n+import org.junit.BeforeClass;\r\n+import org.junit.Test;\r\n+import org.junit.runner.RunWith;\r\n+import org.robolectric.Robolectric;\r\n+import org.robolectric.RobolectricTestRunner;\r\n+import org.robolectric.RuntimeEnvironment;\r\n+import org.robolectric.annotation.Config;\r\n+import org.robolectric.shadows.ShadowLog;\r\n+\r\n+import java.util.UUID;\r\n+\r\n+import static com.onesignal.InAppMessagingHelpers.ONESIGNAL_APP_ID;\r\n+import static com.test.onesignal.TestHelpers.fastColdRestartApp;\r\n+import static com.test.onesignal.TestHelpers.threadAndTaskWait;\r\n+import static junit.framework.Assert.assertEquals;\r\n+import static org.robolectric.Shadows.shadowOf;\r\n+\r\n+\r\n+@Config(packageName = \"com.onesignal.example\",\r\n+    instrumentedPackages = { \"com.onesignal\" },\r\n+    shadows = {\r\n+        ShadowOSUtils.class,\r\n+        ShadowOneSignalRestClient.class,\r\n+        ShadowCustomTabsClient.class,\r\n+        ShadowOSWebView.class,\r\n+        ShadowOSViewUtils.class,\r\n+        ShadowCustomTabsClient.class,\r\n+        ShadowCustomTabsSession.class\r\n+    },\r\n+    sdk = 26\r\n+)\r\n+\r\n+\r\n+@RunWith(RobolectricTestRunner.class)\r\n+public class NotificationOpenedActivityHMSIntegrationTestsRunner {\r\n+\r\n+    @BeforeClass // Runs only once, before any tests\r\n+    public static void setUpClass() throws Exception {\r\n+        ShadowLog.stream = System.out;\r\n+        TestHelpers.beforeTestSuite();\r\n+        StaticResetHelper.saveStaticValues();\r\n+    }\r\n+\r\n+    @Before\r\n+    public void beforeEachTest() throws Exception {\r\n+        TestHelpers.beforeTestInitAndCleanup();\r\n+    }\r\n+\r\n+    private static Intent helper_baseHMSOpenIntent() {\r\n+        return new Intent()\r\n+                .setFlags(Intent.FLAG_ACTIVITY_NO_HISTORY | Intent.FLAG_ACTIVITY_CLEAR_WHEN_TASK_RESET | Intent.FLAG_ACTIVITY_MULTIPLE_TASK | Intent.FLAG_ACTIVITY_NEW_TASK)\r", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODMyNDQzNQ=="}, "originalCommit": {"oid": "5eb462d8d7209dca82ff6e7da4527f12601e9774"}, "originalPosition": 70}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTY3NzU4MQ==", "bodyText": "In testing found out that FLAG_ACTIVITY_NEW_TASK | FLAG_ACTIVITY_MULTIPLE_TASK provides the requirement of \"Allows the app developer to omit foregrounding the app if they choose\".", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/1022#discussion_r435677581", "createdAt": "2020-06-05T04:00:40Z", "author": {"login": "jkasten2"}, "path": "OneSignalSDK/unittest/src/test/java/com/test/onesignal/NotificationOpenedActivityHMSIntegrationTestsRunner.java", "diffHunk": "@@ -0,0 +1,125 @@\n+package com.test.onesignal;\r\n+\r\n+import android.app.Activity;\r\n+import android.content.Intent;\r\n+import android.support.annotation.NonNull;\r\n+\r\n+import com.onesignal.NotificationOpenedActivityHMS;\r\n+import com.onesignal.OneSignal;\r\n+import com.onesignal.ShadowCustomTabsClient;\r\n+import com.onesignal.ShadowCustomTabsSession;\r\n+import com.onesignal.ShadowOSUtils;\r\n+import com.onesignal.ShadowOSViewUtils;\r\n+import com.onesignal.ShadowOSWebView;\r\n+import com.onesignal.ShadowOneSignalRestClient;\r\n+import com.onesignal.StaticResetHelper;\r\n+import com.onesignal.example.BlankActivity;\r\n+\r\n+import org.json.JSONObject;\r\n+import org.junit.Before;\r\n+import org.junit.BeforeClass;\r\n+import org.junit.Test;\r\n+import org.junit.runner.RunWith;\r\n+import org.robolectric.Robolectric;\r\n+import org.robolectric.RobolectricTestRunner;\r\n+import org.robolectric.RuntimeEnvironment;\r\n+import org.robolectric.annotation.Config;\r\n+import org.robolectric.shadows.ShadowLog;\r\n+\r\n+import java.util.UUID;\r\n+\r\n+import static com.onesignal.InAppMessagingHelpers.ONESIGNAL_APP_ID;\r\n+import static com.test.onesignal.TestHelpers.fastColdRestartApp;\r\n+import static com.test.onesignal.TestHelpers.threadAndTaskWait;\r\n+import static junit.framework.Assert.assertEquals;\r\n+import static org.robolectric.Shadows.shadowOf;\r\n+\r\n+\r\n+@Config(packageName = \"com.onesignal.example\",\r\n+    instrumentedPackages = { \"com.onesignal\" },\r\n+    shadows = {\r\n+        ShadowOSUtils.class,\r\n+        ShadowOneSignalRestClient.class,\r\n+        ShadowCustomTabsClient.class,\r\n+        ShadowOSWebView.class,\r\n+        ShadowOSViewUtils.class,\r\n+        ShadowCustomTabsClient.class,\r\n+        ShadowCustomTabsSession.class\r\n+    },\r\n+    sdk = 26\r\n+)\r\n+\r\n+\r\n+@RunWith(RobolectricTestRunner.class)\r\n+public class NotificationOpenedActivityHMSIntegrationTestsRunner {\r\n+\r\n+    @BeforeClass // Runs only once, before any tests\r\n+    public static void setUpClass() throws Exception {\r\n+        ShadowLog.stream = System.out;\r\n+        TestHelpers.beforeTestSuite();\r\n+        StaticResetHelper.saveStaticValues();\r\n+    }\r\n+\r\n+    @Before\r\n+    public void beforeEachTest() throws Exception {\r\n+        TestHelpers.beforeTestInitAndCleanup();\r\n+    }\r\n+\r\n+    private static Intent helper_baseHMSOpenIntent() {\r\n+        return new Intent()\r\n+                .setFlags(Intent.FLAG_ACTIVITY_NO_HISTORY | Intent.FLAG_ACTIVITY_CLEAR_WHEN_TASK_RESET | Intent.FLAG_ACTIVITY_MULTIPLE_TASK | Intent.FLAG_ACTIVITY_NEW_TASK)\r", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODMyNDQzNQ=="}, "originalCommit": {"oid": "5eb462d8d7209dca82ff6e7da4527f12601e9774"}, "originalPosition": 70}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTY3NzkzMw==", "bodyText": "I also added even more detail to the comment at the top of NotificationOpenedActivityHMS.java on the requirements and what does not work and why for future reference incase of a refactor of these flags.", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/1022#discussion_r435677933", "createdAt": "2020-06-05T04:02:18Z", "author": {"login": "jkasten2"}, "path": "OneSignalSDK/unittest/src/test/java/com/test/onesignal/NotificationOpenedActivityHMSIntegrationTestsRunner.java", "diffHunk": "@@ -0,0 +1,125 @@\n+package com.test.onesignal;\r\n+\r\n+import android.app.Activity;\r\n+import android.content.Intent;\r\n+import android.support.annotation.NonNull;\r\n+\r\n+import com.onesignal.NotificationOpenedActivityHMS;\r\n+import com.onesignal.OneSignal;\r\n+import com.onesignal.ShadowCustomTabsClient;\r\n+import com.onesignal.ShadowCustomTabsSession;\r\n+import com.onesignal.ShadowOSUtils;\r\n+import com.onesignal.ShadowOSViewUtils;\r\n+import com.onesignal.ShadowOSWebView;\r\n+import com.onesignal.ShadowOneSignalRestClient;\r\n+import com.onesignal.StaticResetHelper;\r\n+import com.onesignal.example.BlankActivity;\r\n+\r\n+import org.json.JSONObject;\r\n+import org.junit.Before;\r\n+import org.junit.BeforeClass;\r\n+import org.junit.Test;\r\n+import org.junit.runner.RunWith;\r\n+import org.robolectric.Robolectric;\r\n+import org.robolectric.RobolectricTestRunner;\r\n+import org.robolectric.RuntimeEnvironment;\r\n+import org.robolectric.annotation.Config;\r\n+import org.robolectric.shadows.ShadowLog;\r\n+\r\n+import java.util.UUID;\r\n+\r\n+import static com.onesignal.InAppMessagingHelpers.ONESIGNAL_APP_ID;\r\n+import static com.test.onesignal.TestHelpers.fastColdRestartApp;\r\n+import static com.test.onesignal.TestHelpers.threadAndTaskWait;\r\n+import static junit.framework.Assert.assertEquals;\r\n+import static org.robolectric.Shadows.shadowOf;\r\n+\r\n+\r\n+@Config(packageName = \"com.onesignal.example\",\r\n+    instrumentedPackages = { \"com.onesignal\" },\r\n+    shadows = {\r\n+        ShadowOSUtils.class,\r\n+        ShadowOneSignalRestClient.class,\r\n+        ShadowCustomTabsClient.class,\r\n+        ShadowOSWebView.class,\r\n+        ShadowOSViewUtils.class,\r\n+        ShadowCustomTabsClient.class,\r\n+        ShadowCustomTabsSession.class\r\n+    },\r\n+    sdk = 26\r\n+)\r\n+\r\n+\r\n+@RunWith(RobolectricTestRunner.class)\r\n+public class NotificationOpenedActivityHMSIntegrationTestsRunner {\r\n+\r\n+    @BeforeClass // Runs only once, before any tests\r\n+    public static void setUpClass() throws Exception {\r\n+        ShadowLog.stream = System.out;\r\n+        TestHelpers.beforeTestSuite();\r\n+        StaticResetHelper.saveStaticValues();\r\n+    }\r\n+\r\n+    @Before\r\n+    public void beforeEachTest() throws Exception {\r\n+        TestHelpers.beforeTestInitAndCleanup();\r\n+    }\r\n+\r\n+    private static Intent helper_baseHMSOpenIntent() {\r\n+        return new Intent()\r\n+                .setFlags(Intent.FLAG_ACTIVITY_NO_HISTORY | Intent.FLAG_ACTIVITY_CLEAR_WHEN_TASK_RESET | Intent.FLAG_ACTIVITY_MULTIPLE_TASK | Intent.FLAG_ACTIVITY_NEW_TASK)\r", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODMyNDQzNQ=="}, "originalCommit": {"oid": "5eb462d8d7209dca82ff6e7da4527f12601e9774"}, "originalPosition": 70}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2NzU5NzEzOnYy", "diffSide": "RIGHT", "path": "OneSignalSDK/unittest/src/test/java/com/test/onesignal/NotificationOpenedActivityHMSIntegrationTestsRunner.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQyMTo0NDo0MVrOGYe50A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQwNDowMDo0OVrOGffpsQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODMyNTMyOA==", "bodyText": "this combination Intent.FLAG_ACTIVITY_MULTIPLE_TASK | Intent.FLAG_ACTIVITY_NEW_TASK is forcing to always create a new task, can this lead to having 2 instances at the same time?", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/1022#discussion_r428325328", "createdAt": "2020-05-20T21:44:41Z", "author": {"login": "Jeasmine"}, "path": "OneSignalSDK/unittest/src/test/java/com/test/onesignal/NotificationOpenedActivityHMSIntegrationTestsRunner.java", "diffHunk": "@@ -0,0 +1,125 @@\n+package com.test.onesignal;\r\n+\r\n+import android.app.Activity;\r\n+import android.content.Intent;\r\n+import android.support.annotation.NonNull;\r\n+\r\n+import com.onesignal.NotificationOpenedActivityHMS;\r\n+import com.onesignal.OneSignal;\r\n+import com.onesignal.ShadowCustomTabsClient;\r\n+import com.onesignal.ShadowCustomTabsSession;\r\n+import com.onesignal.ShadowOSUtils;\r\n+import com.onesignal.ShadowOSViewUtils;\r\n+import com.onesignal.ShadowOSWebView;\r\n+import com.onesignal.ShadowOneSignalRestClient;\r\n+import com.onesignal.StaticResetHelper;\r\n+import com.onesignal.example.BlankActivity;\r\n+\r\n+import org.json.JSONObject;\r\n+import org.junit.Before;\r\n+import org.junit.BeforeClass;\r\n+import org.junit.Test;\r\n+import org.junit.runner.RunWith;\r\n+import org.robolectric.Robolectric;\r\n+import org.robolectric.RobolectricTestRunner;\r\n+import org.robolectric.RuntimeEnvironment;\r\n+import org.robolectric.annotation.Config;\r\n+import org.robolectric.shadows.ShadowLog;\r\n+\r\n+import java.util.UUID;\r\n+\r\n+import static com.onesignal.InAppMessagingHelpers.ONESIGNAL_APP_ID;\r\n+import static com.test.onesignal.TestHelpers.fastColdRestartApp;\r\n+import static com.test.onesignal.TestHelpers.threadAndTaskWait;\r\n+import static junit.framework.Assert.assertEquals;\r\n+import static org.robolectric.Shadows.shadowOf;\r\n+\r\n+\r\n+@Config(packageName = \"com.onesignal.example\",\r\n+    instrumentedPackages = { \"com.onesignal\" },\r\n+    shadows = {\r\n+        ShadowOSUtils.class,\r\n+        ShadowOneSignalRestClient.class,\r\n+        ShadowCustomTabsClient.class,\r\n+        ShadowOSWebView.class,\r\n+        ShadowOSViewUtils.class,\r\n+        ShadowCustomTabsClient.class,\r\n+        ShadowCustomTabsSession.class\r\n+    },\r\n+    sdk = 26\r\n+)\r\n+\r\n+\r\n+@RunWith(RobolectricTestRunner.class)\r\n+public class NotificationOpenedActivityHMSIntegrationTestsRunner {\r\n+\r\n+    @BeforeClass // Runs only once, before any tests\r\n+    public static void setUpClass() throws Exception {\r\n+        ShadowLog.stream = System.out;\r\n+        TestHelpers.beforeTestSuite();\r\n+        StaticResetHelper.saveStaticValues();\r\n+    }\r\n+\r\n+    @Before\r\n+    public void beforeEachTest() throws Exception {\r\n+        TestHelpers.beforeTestInitAndCleanup();\r\n+    }\r\n+\r\n+    private static Intent helper_baseHMSOpenIntent() {\r\n+        return new Intent()\r\n+                .setFlags(Intent.FLAG_ACTIVITY_NO_HISTORY | Intent.FLAG_ACTIVITY_CLEAR_WHEN_TASK_RESET | Intent.FLAG_ACTIVITY_MULTIPLE_TASK | Intent.FLAG_ACTIVITY_NEW_TASK)\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5eb462d8d7209dca82ff6e7da4527f12601e9774"}, "originalPosition": 70}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzQ0ODIxNw==", "bodyText": "idem", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/1022#discussion_r433448217", "createdAt": "2020-06-01T19:40:40Z", "author": {"login": "mikechoch"}, "path": "OneSignalSDK/unittest/src/test/java/com/test/onesignal/NotificationOpenedActivityHMSIntegrationTestsRunner.java", "diffHunk": "@@ -0,0 +1,125 @@\n+package com.test.onesignal;\r\n+\r\n+import android.app.Activity;\r\n+import android.content.Intent;\r\n+import android.support.annotation.NonNull;\r\n+\r\n+import com.onesignal.NotificationOpenedActivityHMS;\r\n+import com.onesignal.OneSignal;\r\n+import com.onesignal.ShadowCustomTabsClient;\r\n+import com.onesignal.ShadowCustomTabsSession;\r\n+import com.onesignal.ShadowOSUtils;\r\n+import com.onesignal.ShadowOSViewUtils;\r\n+import com.onesignal.ShadowOSWebView;\r\n+import com.onesignal.ShadowOneSignalRestClient;\r\n+import com.onesignal.StaticResetHelper;\r\n+import com.onesignal.example.BlankActivity;\r\n+\r\n+import org.json.JSONObject;\r\n+import org.junit.Before;\r\n+import org.junit.BeforeClass;\r\n+import org.junit.Test;\r\n+import org.junit.runner.RunWith;\r\n+import org.robolectric.Robolectric;\r\n+import org.robolectric.RobolectricTestRunner;\r\n+import org.robolectric.RuntimeEnvironment;\r\n+import org.robolectric.annotation.Config;\r\n+import org.robolectric.shadows.ShadowLog;\r\n+\r\n+import java.util.UUID;\r\n+\r\n+import static com.onesignal.InAppMessagingHelpers.ONESIGNAL_APP_ID;\r\n+import static com.test.onesignal.TestHelpers.fastColdRestartApp;\r\n+import static com.test.onesignal.TestHelpers.threadAndTaskWait;\r\n+import static junit.framework.Assert.assertEquals;\r\n+import static org.robolectric.Shadows.shadowOf;\r\n+\r\n+\r\n+@Config(packageName = \"com.onesignal.example\",\r\n+    instrumentedPackages = { \"com.onesignal\" },\r\n+    shadows = {\r\n+        ShadowOSUtils.class,\r\n+        ShadowOneSignalRestClient.class,\r\n+        ShadowCustomTabsClient.class,\r\n+        ShadowOSWebView.class,\r\n+        ShadowOSViewUtils.class,\r\n+        ShadowCustomTabsClient.class,\r\n+        ShadowCustomTabsSession.class\r\n+    },\r\n+    sdk = 26\r\n+)\r\n+\r\n+\r\n+@RunWith(RobolectricTestRunner.class)\r\n+public class NotificationOpenedActivityHMSIntegrationTestsRunner {\r\n+\r\n+    @BeforeClass // Runs only once, before any tests\r\n+    public static void setUpClass() throws Exception {\r\n+        ShadowLog.stream = System.out;\r\n+        TestHelpers.beforeTestSuite();\r\n+        StaticResetHelper.saveStaticValues();\r\n+    }\r\n+\r\n+    @Before\r\n+    public void beforeEachTest() throws Exception {\r\n+        TestHelpers.beforeTestInitAndCleanup();\r\n+    }\r\n+\r\n+    private static Intent helper_baseHMSOpenIntent() {\r\n+        return new Intent()\r\n+                .setFlags(Intent.FLAG_ACTIVITY_NO_HISTORY | Intent.FLAG_ACTIVITY_CLEAR_WHEN_TASK_RESET | Intent.FLAG_ACTIVITY_MULTIPLE_TASK | Intent.FLAG_ACTIVITY_NEW_TASK)\r", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODMyNTMyOA=="}, "originalCommit": {"oid": "5eb462d8d7209dca82ff6e7da4527f12601e9774"}, "originalPosition": 70}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTY3NzYxNw==", "bodyText": "In testing found out that FLAG_ACTIVITY_NEW_TASK | FLAG_ACTIVITY_MULTIPLE_TASK provides the requirement of \"Allows the app developer to omit foregrounding the app if they choose\".\nWe always want to create a new task so it doesn't resume some existing task. If it resumes an existing task then it won't be possible to prevent the app from showing. Some developer want to process the click in the background without bring the app to the foreground.", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/1022#discussion_r435677617", "createdAt": "2020-06-05T04:00:49Z", "author": {"login": "jkasten2"}, "path": "OneSignalSDK/unittest/src/test/java/com/test/onesignal/NotificationOpenedActivityHMSIntegrationTestsRunner.java", "diffHunk": "@@ -0,0 +1,125 @@\n+package com.test.onesignal;\r\n+\r\n+import android.app.Activity;\r\n+import android.content.Intent;\r\n+import android.support.annotation.NonNull;\r\n+\r\n+import com.onesignal.NotificationOpenedActivityHMS;\r\n+import com.onesignal.OneSignal;\r\n+import com.onesignal.ShadowCustomTabsClient;\r\n+import com.onesignal.ShadowCustomTabsSession;\r\n+import com.onesignal.ShadowOSUtils;\r\n+import com.onesignal.ShadowOSViewUtils;\r\n+import com.onesignal.ShadowOSWebView;\r\n+import com.onesignal.ShadowOneSignalRestClient;\r\n+import com.onesignal.StaticResetHelper;\r\n+import com.onesignal.example.BlankActivity;\r\n+\r\n+import org.json.JSONObject;\r\n+import org.junit.Before;\r\n+import org.junit.BeforeClass;\r\n+import org.junit.Test;\r\n+import org.junit.runner.RunWith;\r\n+import org.robolectric.Robolectric;\r\n+import org.robolectric.RobolectricTestRunner;\r\n+import org.robolectric.RuntimeEnvironment;\r\n+import org.robolectric.annotation.Config;\r\n+import org.robolectric.shadows.ShadowLog;\r\n+\r\n+import java.util.UUID;\r\n+\r\n+import static com.onesignal.InAppMessagingHelpers.ONESIGNAL_APP_ID;\r\n+import static com.test.onesignal.TestHelpers.fastColdRestartApp;\r\n+import static com.test.onesignal.TestHelpers.threadAndTaskWait;\r\n+import static junit.framework.Assert.assertEquals;\r\n+import static org.robolectric.Shadows.shadowOf;\r\n+\r\n+\r\n+@Config(packageName = \"com.onesignal.example\",\r\n+    instrumentedPackages = { \"com.onesignal\" },\r\n+    shadows = {\r\n+        ShadowOSUtils.class,\r\n+        ShadowOneSignalRestClient.class,\r\n+        ShadowCustomTabsClient.class,\r\n+        ShadowOSWebView.class,\r\n+        ShadowOSViewUtils.class,\r\n+        ShadowCustomTabsClient.class,\r\n+        ShadowCustomTabsSession.class\r\n+    },\r\n+    sdk = 26\r\n+)\r\n+\r\n+\r\n+@RunWith(RobolectricTestRunner.class)\r\n+public class NotificationOpenedActivityHMSIntegrationTestsRunner {\r\n+\r\n+    @BeforeClass // Runs only once, before any tests\r\n+    public static void setUpClass() throws Exception {\r\n+        ShadowLog.stream = System.out;\r\n+        TestHelpers.beforeTestSuite();\r\n+        StaticResetHelper.saveStaticValues();\r\n+    }\r\n+\r\n+    @Before\r\n+    public void beforeEachTest() throws Exception {\r\n+        TestHelpers.beforeTestInitAndCleanup();\r\n+    }\r\n+\r\n+    private static Intent helper_baseHMSOpenIntent() {\r\n+        return new Intent()\r\n+                .setFlags(Intent.FLAG_ACTIVITY_NO_HISTORY | Intent.FLAG_ACTIVITY_CLEAR_WHEN_TASK_RESET | Intent.FLAG_ACTIVITY_MULTIPLE_TASK | Intent.FLAG_ACTIVITY_NEW_TASK)\r", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODMyNTMyOA=="}, "originalCommit": {"oid": "5eb462d8d7209dca82ff6e7da4527f12601e9774"}, "originalPosition": 70}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2NzYwMzg1OnYy", "diffSide": "RIGHT", "path": "OneSignalSDK/unittest/src/test/java/com/test/onesignal/NotificationOpenedActivityHMSIntegrationTestsRunner.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQyMTo0Njo1OFrOGYe9-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxNjoyNDowNlrOGf1HQQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODMyNjM5NA==", "bodyText": "this class should test everything around notifications? how will this operate with notifications tracking etc? should we test that?", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/1022#discussion_r428326394", "createdAt": "2020-05-20T21:46:58Z", "author": {"login": "Jeasmine"}, "path": "OneSignalSDK/unittest/src/test/java/com/test/onesignal/NotificationOpenedActivityHMSIntegrationTestsRunner.java", "diffHunk": "@@ -0,0 +1,125 @@\n+package com.test.onesignal;\r\n+\r\n+import android.app.Activity;\r\n+import android.content.Intent;\r\n+import android.support.annotation.NonNull;\r\n+\r\n+import com.onesignal.NotificationOpenedActivityHMS;\r\n+import com.onesignal.OneSignal;\r\n+import com.onesignal.ShadowCustomTabsClient;\r\n+import com.onesignal.ShadowCustomTabsSession;\r\n+import com.onesignal.ShadowOSUtils;\r\n+import com.onesignal.ShadowOSViewUtils;\r\n+import com.onesignal.ShadowOSWebView;\r\n+import com.onesignal.ShadowOneSignalRestClient;\r\n+import com.onesignal.StaticResetHelper;\r\n+import com.onesignal.example.BlankActivity;\r\n+\r\n+import org.json.JSONObject;\r\n+import org.junit.Before;\r\n+import org.junit.BeforeClass;\r\n+import org.junit.Test;\r\n+import org.junit.runner.RunWith;\r\n+import org.robolectric.Robolectric;\r\n+import org.robolectric.RobolectricTestRunner;\r\n+import org.robolectric.RuntimeEnvironment;\r\n+import org.robolectric.annotation.Config;\r\n+import org.robolectric.shadows.ShadowLog;\r\n+\r\n+import java.util.UUID;\r\n+\r\n+import static com.onesignal.InAppMessagingHelpers.ONESIGNAL_APP_ID;\r\n+import static com.test.onesignal.TestHelpers.fastColdRestartApp;\r\n+import static com.test.onesignal.TestHelpers.threadAndTaskWait;\r\n+import static junit.framework.Assert.assertEquals;\r\n+import static org.robolectric.Shadows.shadowOf;\r\n+\r\n+\r\n+@Config(packageName = \"com.onesignal.example\",\r\n+    instrumentedPackages = { \"com.onesignal\" },\r\n+    shadows = {\r\n+        ShadowOSUtils.class,\r\n+        ShadowOneSignalRestClient.class,\r\n+        ShadowCustomTabsClient.class,\r\n+        ShadowOSWebView.class,\r\n+        ShadowOSViewUtils.class,\r\n+        ShadowCustomTabsClient.class,\r\n+        ShadowCustomTabsSession.class\r\n+    },\r\n+    sdk = 26\r\n+)\r\n+\r\n+\r\n+@RunWith(RobolectricTestRunner.class)\r\n+public class NotificationOpenedActivityHMSIntegrationTestsRunner {\r\n+\r\n+    @BeforeClass // Runs only once, before any tests\r\n+    public static void setUpClass() throws Exception {\r\n+        ShadowLog.stream = System.out;\r\n+        TestHelpers.beforeTestSuite();\r\n+        StaticResetHelper.saveStaticValues();\r\n+    }\r\n+\r\n+    @Before\r\n+    public void beforeEachTest() throws Exception {\r\n+        TestHelpers.beforeTestInitAndCleanup();\r\n+    }\r\n+\r\n+    private static Intent helper_baseHMSOpenIntent() {\r\n+        return new Intent()\r\n+                .setFlags(Intent.FLAG_ACTIVITY_NO_HISTORY | Intent.FLAG_ACTIVITY_CLEAR_WHEN_TASK_RESET | Intent.FLAG_ACTIVITY_MULTIPLE_TASK | Intent.FLAG_ACTIVITY_NEW_TASK)\r\n+                .setAction(\"android.intent.action.VIEW\");\r\n+    }\r\n+\r\n+    private static void helper_startHMSOpenActivity(@NonNull Intent intent) {\r\n+        Robolectric.buildActivity(NotificationOpenedActivityHMS.class, intent).create();\r\n+    }\r\n+\r\n+    // Since the Activity has to be public it could be started outside of a OneSignal flow.\r\n+    // Ensure it doesn't crash the app.\r\n+    @Test\r\n+    public void emptyIntent_doesNotThrow() {\r\n+        helper_startHMSOpenActivity(helper_baseHMSOpenIntent());\r\n+    }\r\n+\r\n+    @Test\r\n+    public void barebonesOSPayload_startsMainActivity() throws Exception {\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5eb462d8d7209dca82ff6e7da4527f12601e9774"}, "originalPosition": 86}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzQ0ODg4Mg==", "bodyText": "This is only for HMS notifications, but still good question bringing up tracking @Jeasmine", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/1022#discussion_r433448882", "createdAt": "2020-06-01T19:42:05Z", "author": {"login": "mikechoch"}, "path": "OneSignalSDK/unittest/src/test/java/com/test/onesignal/NotificationOpenedActivityHMSIntegrationTestsRunner.java", "diffHunk": "@@ -0,0 +1,125 @@\n+package com.test.onesignal;\r\n+\r\n+import android.app.Activity;\r\n+import android.content.Intent;\r\n+import android.support.annotation.NonNull;\r\n+\r\n+import com.onesignal.NotificationOpenedActivityHMS;\r\n+import com.onesignal.OneSignal;\r\n+import com.onesignal.ShadowCustomTabsClient;\r\n+import com.onesignal.ShadowCustomTabsSession;\r\n+import com.onesignal.ShadowOSUtils;\r\n+import com.onesignal.ShadowOSViewUtils;\r\n+import com.onesignal.ShadowOSWebView;\r\n+import com.onesignal.ShadowOneSignalRestClient;\r\n+import com.onesignal.StaticResetHelper;\r\n+import com.onesignal.example.BlankActivity;\r\n+\r\n+import org.json.JSONObject;\r\n+import org.junit.Before;\r\n+import org.junit.BeforeClass;\r\n+import org.junit.Test;\r\n+import org.junit.runner.RunWith;\r\n+import org.robolectric.Robolectric;\r\n+import org.robolectric.RobolectricTestRunner;\r\n+import org.robolectric.RuntimeEnvironment;\r\n+import org.robolectric.annotation.Config;\r\n+import org.robolectric.shadows.ShadowLog;\r\n+\r\n+import java.util.UUID;\r\n+\r\n+import static com.onesignal.InAppMessagingHelpers.ONESIGNAL_APP_ID;\r\n+import static com.test.onesignal.TestHelpers.fastColdRestartApp;\r\n+import static com.test.onesignal.TestHelpers.threadAndTaskWait;\r\n+import static junit.framework.Assert.assertEquals;\r\n+import static org.robolectric.Shadows.shadowOf;\r\n+\r\n+\r\n+@Config(packageName = \"com.onesignal.example\",\r\n+    instrumentedPackages = { \"com.onesignal\" },\r\n+    shadows = {\r\n+        ShadowOSUtils.class,\r\n+        ShadowOneSignalRestClient.class,\r\n+        ShadowCustomTabsClient.class,\r\n+        ShadowOSWebView.class,\r\n+        ShadowOSViewUtils.class,\r\n+        ShadowCustomTabsClient.class,\r\n+        ShadowCustomTabsSession.class\r\n+    },\r\n+    sdk = 26\r\n+)\r\n+\r\n+\r\n+@RunWith(RobolectricTestRunner.class)\r\n+public class NotificationOpenedActivityHMSIntegrationTestsRunner {\r\n+\r\n+    @BeforeClass // Runs only once, before any tests\r\n+    public static void setUpClass() throws Exception {\r\n+        ShadowLog.stream = System.out;\r\n+        TestHelpers.beforeTestSuite();\r\n+        StaticResetHelper.saveStaticValues();\r\n+    }\r\n+\r\n+    @Before\r\n+    public void beforeEachTest() throws Exception {\r\n+        TestHelpers.beforeTestInitAndCleanup();\r\n+    }\r\n+\r\n+    private static Intent helper_baseHMSOpenIntent() {\r\n+        return new Intent()\r\n+                .setFlags(Intent.FLAG_ACTIVITY_NO_HISTORY | Intent.FLAG_ACTIVITY_CLEAR_WHEN_TASK_RESET | Intent.FLAG_ACTIVITY_MULTIPLE_TASK | Intent.FLAG_ACTIVITY_NEW_TASK)\r\n+                .setAction(\"android.intent.action.VIEW\");\r\n+    }\r\n+\r\n+    private static void helper_startHMSOpenActivity(@NonNull Intent intent) {\r\n+        Robolectric.buildActivity(NotificationOpenedActivityHMS.class, intent).create();\r\n+    }\r\n+\r\n+    // Since the Activity has to be public it could be started outside of a OneSignal flow.\r\n+    // Ensure it doesn't crash the app.\r\n+    @Test\r\n+    public void emptyIntent_doesNotThrow() {\r\n+        helper_startHMSOpenActivity(helper_baseHMSOpenIntent());\r\n+    }\r\n+\r\n+    @Test\r\n+    public void barebonesOSPayload_startsMainActivity() throws Exception {\r", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODMyNjM5NA=="}, "originalCommit": {"oid": "5eb462d8d7209dca82ff6e7da4527f12601e9774"}, "originalPosition": 86}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTYyMDgzOA==", "bodyText": "Added a test to ensure notification open REST API is made since this is a very important one.\nWe should come up with a pattern that will allow us to run the same asserts for FCM, HMS, and ADM opens so we don't need to repeat code. We should defer doing this outside of this PR though", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/1022#discussion_r435620838", "createdAt": "2020-06-04T23:59:34Z", "author": {"login": "jkasten2"}, "path": "OneSignalSDK/unittest/src/test/java/com/test/onesignal/NotificationOpenedActivityHMSIntegrationTestsRunner.java", "diffHunk": "@@ -0,0 +1,125 @@\n+package com.test.onesignal;\r\n+\r\n+import android.app.Activity;\r\n+import android.content.Intent;\r\n+import android.support.annotation.NonNull;\r\n+\r\n+import com.onesignal.NotificationOpenedActivityHMS;\r\n+import com.onesignal.OneSignal;\r\n+import com.onesignal.ShadowCustomTabsClient;\r\n+import com.onesignal.ShadowCustomTabsSession;\r\n+import com.onesignal.ShadowOSUtils;\r\n+import com.onesignal.ShadowOSViewUtils;\r\n+import com.onesignal.ShadowOSWebView;\r\n+import com.onesignal.ShadowOneSignalRestClient;\r\n+import com.onesignal.StaticResetHelper;\r\n+import com.onesignal.example.BlankActivity;\r\n+\r\n+import org.json.JSONObject;\r\n+import org.junit.Before;\r\n+import org.junit.BeforeClass;\r\n+import org.junit.Test;\r\n+import org.junit.runner.RunWith;\r\n+import org.robolectric.Robolectric;\r\n+import org.robolectric.RobolectricTestRunner;\r\n+import org.robolectric.RuntimeEnvironment;\r\n+import org.robolectric.annotation.Config;\r\n+import org.robolectric.shadows.ShadowLog;\r\n+\r\n+import java.util.UUID;\r\n+\r\n+import static com.onesignal.InAppMessagingHelpers.ONESIGNAL_APP_ID;\r\n+import static com.test.onesignal.TestHelpers.fastColdRestartApp;\r\n+import static com.test.onesignal.TestHelpers.threadAndTaskWait;\r\n+import static junit.framework.Assert.assertEquals;\r\n+import static org.robolectric.Shadows.shadowOf;\r\n+\r\n+\r\n+@Config(packageName = \"com.onesignal.example\",\r\n+    instrumentedPackages = { \"com.onesignal\" },\r\n+    shadows = {\r\n+        ShadowOSUtils.class,\r\n+        ShadowOneSignalRestClient.class,\r\n+        ShadowCustomTabsClient.class,\r\n+        ShadowOSWebView.class,\r\n+        ShadowOSViewUtils.class,\r\n+        ShadowCustomTabsClient.class,\r\n+        ShadowCustomTabsSession.class\r\n+    },\r\n+    sdk = 26\r\n+)\r\n+\r\n+\r\n+@RunWith(RobolectricTestRunner.class)\r\n+public class NotificationOpenedActivityHMSIntegrationTestsRunner {\r\n+\r\n+    @BeforeClass // Runs only once, before any tests\r\n+    public static void setUpClass() throws Exception {\r\n+        ShadowLog.stream = System.out;\r\n+        TestHelpers.beforeTestSuite();\r\n+        StaticResetHelper.saveStaticValues();\r\n+    }\r\n+\r\n+    @Before\r\n+    public void beforeEachTest() throws Exception {\r\n+        TestHelpers.beforeTestInitAndCleanup();\r\n+    }\r\n+\r\n+    private static Intent helper_baseHMSOpenIntent() {\r\n+        return new Intent()\r\n+                .setFlags(Intent.FLAG_ACTIVITY_NO_HISTORY | Intent.FLAG_ACTIVITY_CLEAR_WHEN_TASK_RESET | Intent.FLAG_ACTIVITY_MULTIPLE_TASK | Intent.FLAG_ACTIVITY_NEW_TASK)\r\n+                .setAction(\"android.intent.action.VIEW\");\r\n+    }\r\n+\r\n+    private static void helper_startHMSOpenActivity(@NonNull Intent intent) {\r\n+        Robolectric.buildActivity(NotificationOpenedActivityHMS.class, intent).create();\r\n+    }\r\n+\r\n+    // Since the Activity has to be public it could be started outside of a OneSignal flow.\r\n+    // Ensure it doesn't crash the app.\r\n+    @Test\r\n+    public void emptyIntent_doesNotThrow() {\r\n+        helper_startHMSOpenActivity(helper_baseHMSOpenIntent());\r\n+    }\r\n+\r\n+    @Test\r\n+    public void barebonesOSPayload_startsMainActivity() throws Exception {\r", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODMyNjM5NA=="}, "originalCommit": {"oid": "5eb462d8d7209dca82ff6e7da4527f12601e9774"}, "originalPosition": 86}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjAyOTI0OQ==", "bodyText": "Agree with having test for all platforms as a generic way!", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/1022#discussion_r436029249", "createdAt": "2020-06-05T16:24:06Z", "author": {"login": "Jeasmine"}, "path": "OneSignalSDK/unittest/src/test/java/com/test/onesignal/NotificationOpenedActivityHMSIntegrationTestsRunner.java", "diffHunk": "@@ -0,0 +1,125 @@\n+package com.test.onesignal;\r\n+\r\n+import android.app.Activity;\r\n+import android.content.Intent;\r\n+import android.support.annotation.NonNull;\r\n+\r\n+import com.onesignal.NotificationOpenedActivityHMS;\r\n+import com.onesignal.OneSignal;\r\n+import com.onesignal.ShadowCustomTabsClient;\r\n+import com.onesignal.ShadowCustomTabsSession;\r\n+import com.onesignal.ShadowOSUtils;\r\n+import com.onesignal.ShadowOSViewUtils;\r\n+import com.onesignal.ShadowOSWebView;\r\n+import com.onesignal.ShadowOneSignalRestClient;\r\n+import com.onesignal.StaticResetHelper;\r\n+import com.onesignal.example.BlankActivity;\r\n+\r\n+import org.json.JSONObject;\r\n+import org.junit.Before;\r\n+import org.junit.BeforeClass;\r\n+import org.junit.Test;\r\n+import org.junit.runner.RunWith;\r\n+import org.robolectric.Robolectric;\r\n+import org.robolectric.RobolectricTestRunner;\r\n+import org.robolectric.RuntimeEnvironment;\r\n+import org.robolectric.annotation.Config;\r\n+import org.robolectric.shadows.ShadowLog;\r\n+\r\n+import java.util.UUID;\r\n+\r\n+import static com.onesignal.InAppMessagingHelpers.ONESIGNAL_APP_ID;\r\n+import static com.test.onesignal.TestHelpers.fastColdRestartApp;\r\n+import static com.test.onesignal.TestHelpers.threadAndTaskWait;\r\n+import static junit.framework.Assert.assertEquals;\r\n+import static org.robolectric.Shadows.shadowOf;\r\n+\r\n+\r\n+@Config(packageName = \"com.onesignal.example\",\r\n+    instrumentedPackages = { \"com.onesignal\" },\r\n+    shadows = {\r\n+        ShadowOSUtils.class,\r\n+        ShadowOneSignalRestClient.class,\r\n+        ShadowCustomTabsClient.class,\r\n+        ShadowOSWebView.class,\r\n+        ShadowOSViewUtils.class,\r\n+        ShadowCustomTabsClient.class,\r\n+        ShadowCustomTabsSession.class\r\n+    },\r\n+    sdk = 26\r\n+)\r\n+\r\n+\r\n+@RunWith(RobolectricTestRunner.class)\r\n+public class NotificationOpenedActivityHMSIntegrationTestsRunner {\r\n+\r\n+    @BeforeClass // Runs only once, before any tests\r\n+    public static void setUpClass() throws Exception {\r\n+        ShadowLog.stream = System.out;\r\n+        TestHelpers.beforeTestSuite();\r\n+        StaticResetHelper.saveStaticValues();\r\n+    }\r\n+\r\n+    @Before\r\n+    public void beforeEachTest() throws Exception {\r\n+        TestHelpers.beforeTestInitAndCleanup();\r\n+    }\r\n+\r\n+    private static Intent helper_baseHMSOpenIntent() {\r\n+        return new Intent()\r\n+                .setFlags(Intent.FLAG_ACTIVITY_NO_HISTORY | Intent.FLAG_ACTIVITY_CLEAR_WHEN_TASK_RESET | Intent.FLAG_ACTIVITY_MULTIPLE_TASK | Intent.FLAG_ACTIVITY_NEW_TASK)\r\n+                .setAction(\"android.intent.action.VIEW\");\r\n+    }\r\n+\r\n+    private static void helper_startHMSOpenActivity(@NonNull Intent intent) {\r\n+        Robolectric.buildActivity(NotificationOpenedActivityHMS.class, intent).create();\r\n+    }\r\n+\r\n+    // Since the Activity has to be public it could be started outside of a OneSignal flow.\r\n+    // Ensure it doesn't crash the app.\r\n+    @Test\r\n+    public void emptyIntent_doesNotThrow() {\r\n+        helper_startHMSOpenActivity(helper_baseHMSOpenIntent());\r\n+    }\r\n+\r\n+    @Test\r\n+    public void barebonesOSPayload_startsMainActivity() throws Exception {\r", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODMyNjM5NA=="}, "originalCommit": {"oid": "5eb462d8d7209dca82ff6e7da4527f12601e9774"}, "originalPosition": 86}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2254, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}