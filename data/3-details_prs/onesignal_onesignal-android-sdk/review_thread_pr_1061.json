{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMyOTgzODcy", "number": 1061, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxNTozNjozMlrOEEvPjw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxMDo1MjoxOFrOEFBCiw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczNDAzNzkxOnYy", "diffSide": "RIGHT", "path": "OneSignalSDK/onesignal/src/main/java/com/onesignal/OneSignal.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxNTozNjozMlrOGijCZg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQyMjo0Mzo0NFrOGixMWQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODg3ODgyMg==", "bodyText": "maybe put on the same if?", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/1061#discussion_r438878822", "createdAt": "2020-06-11T15:36:32Z", "author": {"login": "Jeasmine"}, "path": "OneSignalSDK/onesignal/src/main/java/com/onesignal/OneSignal.java", "diffHunk": "@@ -452,7 +452,15 @@ public void onSessionEnding(@NonNull List<OSInfluence> lastInfluences) {\n    @Nullable private static OSOutcomeEventsController outcomeEventsController;\n    @Nullable private static OSOutcomeEventsFactory outcomeEventsFactory;\n \n-   private static AdvertisingIdentifierProvider mainAdIdProvider = new AdvertisingIdProviderGPS();\n+   @Nullable private static AdvertisingIdentifierProvider adIdProvider;\n+   private static synchronized @Nullable AdvertisingIdentifierProvider getAdIdProvider() {\n+      if (adIdProvider == null) {\n+         if (OSUtils.isAndroidDeviceType())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba29807fb50daa2a969eada72622e62c0be0d2b6"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTExMDQyNA==", "bodyText": "I set it up nested like this as we may want to add an else if (OSUtils.isHuaweiDeviceType() ect if we can support other ad providers in the future.", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/1061#discussion_r439110424", "createdAt": "2020-06-11T22:42:47Z", "author": {"login": "jkasten2"}, "path": "OneSignalSDK/onesignal/src/main/java/com/onesignal/OneSignal.java", "diffHunk": "@@ -452,7 +452,15 @@ public void onSessionEnding(@NonNull List<OSInfluence> lastInfluences) {\n    @Nullable private static OSOutcomeEventsController outcomeEventsController;\n    @Nullable private static OSOutcomeEventsFactory outcomeEventsFactory;\n \n-   private static AdvertisingIdentifierProvider mainAdIdProvider = new AdvertisingIdProviderGPS();\n+   @Nullable private static AdvertisingIdentifierProvider adIdProvider;\n+   private static synchronized @Nullable AdvertisingIdentifierProvider getAdIdProvider() {\n+      if (adIdProvider == null) {\n+         if (OSUtils.isAndroidDeviceType())", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODg3ODgyMg=="}, "originalCommit": {"oid": "ba29807fb50daa2a969eada72622e62c0be0d2b6"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTExMDc0NQ==", "bodyText": "sounds good!", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/1061#discussion_r439110745", "createdAt": "2020-06-11T22:43:44Z", "author": {"login": "Jeasmine"}, "path": "OneSignalSDK/onesignal/src/main/java/com/onesignal/OneSignal.java", "diffHunk": "@@ -452,7 +452,15 @@ public void onSessionEnding(@NonNull List<OSInfluence> lastInfluences) {\n    @Nullable private static OSOutcomeEventsController outcomeEventsController;\n    @Nullable private static OSOutcomeEventsFactory outcomeEventsFactory;\n \n-   private static AdvertisingIdentifierProvider mainAdIdProvider = new AdvertisingIdProviderGPS();\n+   @Nullable private static AdvertisingIdentifierProvider adIdProvider;\n+   private static synchronized @Nullable AdvertisingIdentifierProvider getAdIdProvider() {\n+      if (adIdProvider == null) {\n+         if (OSUtils.isAndroidDeviceType())", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODg3ODgyMg=="}, "originalCommit": {"oid": "ba29807fb50daa2a969eada72622e62c0be0d2b6"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczNjk1MjY4OnYy", "diffSide": "RIGHT", "path": "OneSignalSDK/unittest/src/test/java/com/test/onesignal/MainOneSignalClassRunner.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxMDo1MjowMlrOGi_sXg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxMTowNTo0N1rOGjAF0w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTM0ODMxOA==", "bodyText": "4. should be 5.", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/1061#discussion_r439348318", "createdAt": "2020-06-12T10:52:02Z", "author": {"login": "mikechoch"}, "path": "OneSignalSDK/unittest/src/test/java/com/test/onesignal/MainOneSignalClassRunner.java", "diffHunk": "@@ -322,6 +323,59 @@ public void testDeviceTypeIsAmazon_forPlayerCreate() throws Exception {\n       assertAmazonPlayerCreateAtIndex(1);\n    }\n \n+   @Test\n+   public void testAmazonDoesNotGetAdId() throws Exception {\n+      // 1. Mock Amazon device type for this test\n+      ShadowOSUtils.supportsADM = true;\n+\n+      // 2. Init OneSignal so the app id is cached\n+      OneSignalInit();\n+      threadAndTaskWait();\n+\n+      // 3. Make sure device_type is Amazon (2) in player create\n+      assertAmazonPlayerCreateAtIndex(1);\n+\n+      // 4. Assert Player Create does NOT have an ad_id\n+      ShadowOneSignalRestClient.Request request = ShadowOneSignalRestClient.requests.get(1);\n+      JsonAsserts.doesNotContainKeys(request.payload, new ArrayList<String>() {{ add(\"ad_id\"); }});\n+\n+      // 4. Assert we did NOT try to get a Google Ad id\n+      assertFalse(ShadowAdvertisingIdProviderGPS.calledGetIdentifier);\n+   }\n+\n+   @Test\n+   public void testDeviceTypeIsHuawei_forPlayerCreate() throws Exception {\n+      // 1. Mock Amazon device type for this test\n+      ShadowOSUtils.supportsHMS(true);\n+\n+      // 2. Init OneSignal so the app id is cached\n+      OneSignalInit();\n+      threadAndTaskWait();\n+\n+      // 3. Make sure device_type is Huawei (13) in player create\n+      assertHuaweiPlayerCreateAtIndex(1);\n+   }\n+\n+   @Test\n+   public void testHuaweiDoesNotGetAdId() throws Exception {\n+      // 1. Mock Huawei device type for this test\n+      ShadowOSUtils.supportsHMS(true);\n+\n+      // 2. Init OneSignal so the app id is cached\n+      OneSignalInit();\n+      threadAndTaskWait();\n+\n+      // 3. Make sure device_type is Huawei (13) in player create\n+      assertHuaweiPlayerCreateAtIndex(1);\n+\n+      // 4. Assert Player Create does NOT have an ad_id\n+      ShadowOneSignalRestClient.Request request = ShadowOneSignalRestClient.requests.get(1);\n+      JsonAsserts.doesNotContainKeys(request.payload, new ArrayList<String>() {{ add(\"ad_id\"); }});\n+\n+      // 4. Assert we did NOT try to get a Google Ad id", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c0d23c3605f7e02f34a810e88a9860f13f04c2e1"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTM1NDgzNQ==", "bodyText": "Done", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/1061#discussion_r439354835", "createdAt": "2020-06-12T11:05:47Z", "author": {"login": "jkasten2"}, "path": "OneSignalSDK/unittest/src/test/java/com/test/onesignal/MainOneSignalClassRunner.java", "diffHunk": "@@ -322,6 +323,59 @@ public void testDeviceTypeIsAmazon_forPlayerCreate() throws Exception {\n       assertAmazonPlayerCreateAtIndex(1);\n    }\n \n+   @Test\n+   public void testAmazonDoesNotGetAdId() throws Exception {\n+      // 1. Mock Amazon device type for this test\n+      ShadowOSUtils.supportsADM = true;\n+\n+      // 2. Init OneSignal so the app id is cached\n+      OneSignalInit();\n+      threadAndTaskWait();\n+\n+      // 3. Make sure device_type is Amazon (2) in player create\n+      assertAmazonPlayerCreateAtIndex(1);\n+\n+      // 4. Assert Player Create does NOT have an ad_id\n+      ShadowOneSignalRestClient.Request request = ShadowOneSignalRestClient.requests.get(1);\n+      JsonAsserts.doesNotContainKeys(request.payload, new ArrayList<String>() {{ add(\"ad_id\"); }});\n+\n+      // 4. Assert we did NOT try to get a Google Ad id\n+      assertFalse(ShadowAdvertisingIdProviderGPS.calledGetIdentifier);\n+   }\n+\n+   @Test\n+   public void testDeviceTypeIsHuawei_forPlayerCreate() throws Exception {\n+      // 1. Mock Amazon device type for this test\n+      ShadowOSUtils.supportsHMS(true);\n+\n+      // 2. Init OneSignal so the app id is cached\n+      OneSignalInit();\n+      threadAndTaskWait();\n+\n+      // 3. Make sure device_type is Huawei (13) in player create\n+      assertHuaweiPlayerCreateAtIndex(1);\n+   }\n+\n+   @Test\n+   public void testHuaweiDoesNotGetAdId() throws Exception {\n+      // 1. Mock Huawei device type for this test\n+      ShadowOSUtils.supportsHMS(true);\n+\n+      // 2. Init OneSignal so the app id is cached\n+      OneSignalInit();\n+      threadAndTaskWait();\n+\n+      // 3. Make sure device_type is Huawei (13) in player create\n+      assertHuaweiPlayerCreateAtIndex(1);\n+\n+      // 4. Assert Player Create does NOT have an ad_id\n+      ShadowOneSignalRestClient.Request request = ShadowOneSignalRestClient.requests.get(1);\n+      JsonAsserts.doesNotContainKeys(request.payload, new ArrayList<String>() {{ add(\"ad_id\"); }});\n+\n+      // 4. Assert we did NOT try to get a Google Ad id", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTM0ODMxOA=="}, "originalCommit": {"oid": "c0d23c3605f7e02f34a810e88a9860f13f04c2e1"}, "originalPosition": 61}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczNjk1MzcxOnYy", "diffSide": "RIGHT", "path": "OneSignalSDK/unittest/src/test/java/com/test/onesignal/MainOneSignalClassRunner.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxMDo1MjoxOFrOGi_s6g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxMTowNTo1MVrOGjAF9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTM0ODQ1OA==", "bodyText": "4. should be 5.", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/1061#discussion_r439348458", "createdAt": "2020-06-12T10:52:18Z", "author": {"login": "mikechoch"}, "path": "OneSignalSDK/unittest/src/test/java/com/test/onesignal/MainOneSignalClassRunner.java", "diffHunk": "@@ -322,6 +323,59 @@ public void testDeviceTypeIsAmazon_forPlayerCreate() throws Exception {\n       assertAmazonPlayerCreateAtIndex(1);\n    }\n \n+   @Test\n+   public void testAmazonDoesNotGetAdId() throws Exception {\n+      // 1. Mock Amazon device type for this test\n+      ShadowOSUtils.supportsADM = true;\n+\n+      // 2. Init OneSignal so the app id is cached\n+      OneSignalInit();\n+      threadAndTaskWait();\n+\n+      // 3. Make sure device_type is Amazon (2) in player create\n+      assertAmazonPlayerCreateAtIndex(1);\n+\n+      // 4. Assert Player Create does NOT have an ad_id\n+      ShadowOneSignalRestClient.Request request = ShadowOneSignalRestClient.requests.get(1);\n+      JsonAsserts.doesNotContainKeys(request.payload, new ArrayList<String>() {{ add(\"ad_id\"); }});\n+\n+      // 4. Assert we did NOT try to get a Google Ad id", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c0d23c3605f7e02f34a810e88a9860f13f04c2e1"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTM1NDg3MA==", "bodyText": "Done", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/1061#discussion_r439354870", "createdAt": "2020-06-12T11:05:51Z", "author": {"login": "jkasten2"}, "path": "OneSignalSDK/unittest/src/test/java/com/test/onesignal/MainOneSignalClassRunner.java", "diffHunk": "@@ -322,6 +323,59 @@ public void testDeviceTypeIsAmazon_forPlayerCreate() throws Exception {\n       assertAmazonPlayerCreateAtIndex(1);\n    }\n \n+   @Test\n+   public void testAmazonDoesNotGetAdId() throws Exception {\n+      // 1. Mock Amazon device type for this test\n+      ShadowOSUtils.supportsADM = true;\n+\n+      // 2. Init OneSignal so the app id is cached\n+      OneSignalInit();\n+      threadAndTaskWait();\n+\n+      // 3. Make sure device_type is Amazon (2) in player create\n+      assertAmazonPlayerCreateAtIndex(1);\n+\n+      // 4. Assert Player Create does NOT have an ad_id\n+      ShadowOneSignalRestClient.Request request = ShadowOneSignalRestClient.requests.get(1);\n+      JsonAsserts.doesNotContainKeys(request.payload, new ArrayList<String>() {{ add(\"ad_id\"); }});\n+\n+      // 4. Assert we did NOT try to get a Google Ad id", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTM0ODQ1OA=="}, "originalCommit": {"oid": "c0d23c3605f7e02f34a810e88a9860f13f04c2e1"}, "originalPosition": 28}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2286, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}