{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg4OTQxMTAy", "number": 1153, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQxNDo0NDoyNVrOEmHswQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQyMTo1Njo0N1rOEmR2jQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4NDA3NDg5OnYy", "diffSide": "RIGHT", "path": "OneSignalSDK/unittest/src/test/java/com/test/onesignal/RemoteParamsTests.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQxNDo0NDoyNVrOHV9uhg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQxODo1Mjo1MFrOHWIA2g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mjc5MzQ3OA==", "bodyText": "there is a method for doing this under ShadowOneSignalRestClient\nsetRemoteParamsRequirePrivacyConsent", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/1153#discussion_r492793478", "createdAt": "2020-09-22T14:44:25Z", "author": {"login": "Jeasmine"}, "path": "OneSignalSDK/unittest/src/test/java/com/test/onesignal/RemoteParamsTests.java", "diffHunk": "@@ -150,7 +150,9 @@ public void testUserPrivacyConsentRequired_UserConfigurationOverrideByRemotePara\n \n     @Test\n     public void testUserPrivacyConsentNotRequired_UserConfigurationOverrideByRemoteParams() throws Exception {\n-        ShadowOneSignalRestClient.setRemoteParamsGetHtmlResponse();\n+        JSONObject remoteParams = new JSONObject();\n+        remoteParams.put(\"requires_user_privacy_consent\", false);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c48bf3afd002a41ef784ac32b9a31c020676dfd"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mjk2MjAxMA==", "bodyText": "Updated", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/1153#discussion_r492962010", "createdAt": "2020-09-22T18:52:50Z", "author": {"login": "jkasten2"}, "path": "OneSignalSDK/unittest/src/test/java/com/test/onesignal/RemoteParamsTests.java", "diffHunk": "@@ -150,7 +150,9 @@ public void testUserPrivacyConsentRequired_UserConfigurationOverrideByRemotePara\n \n     @Test\n     public void testUserPrivacyConsentNotRequired_UserConfigurationOverrideByRemoteParams() throws Exception {\n-        ShadowOneSignalRestClient.setRemoteParamsGetHtmlResponse();\n+        JSONObject remoteParams = new JSONObject();\n+        remoteParams.put(\"requires_user_privacy_consent\", false);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mjc5MzQ3OA=="}, "originalCommit": {"oid": "4c48bf3afd002a41ef784ac32b9a31c020676dfd"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4NDA4OTUxOnYy", "diffSide": "LEFT", "path": "OneSignalSDK/onesignal/src/main/java/com/onesignal/OneSignal.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQxNDo0NzoxOFrOHV93yQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQxODo1MjoyOFrOHWH_3g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mjc5NTg0OQ==", "bodyText": "what will happen if the user put setRequiresUserPrivacyConsent as false, and then remote params comes with requiresUserPrivacyConsent as true?", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/1153#discussion_r492795849", "createdAt": "2020-09-22T14:47:18Z", "author": {"login": "Jeasmine"}, "path": "OneSignalSDK/onesignal/src/main/java/com/onesignal/OneSignal.java", "diffHunk": "@@ -1012,19 +1012,6 @@ public static boolean requiresUserPrivacyConsent() {\n     * This method will be replaced by remote params set\n     */\n    public static void setRequiresUserPrivacyConsent(final boolean required) {\n-      if (taskController.shouldQueueTaskForInit(OSTaskController.SET_REQUIRES_USER_PRIVACY_CONSENT)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bc50858dcc631bb3223123af04a0985081ab195c"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mjk2MTc1OA==", "bodyText": "Good catch, this does work correctly by respecting the remote param. Added test in commit eaf2db6 to address this.", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/1153#discussion_r492961758", "createdAt": "2020-09-22T18:52:28Z", "author": {"login": "jkasten2"}, "path": "OneSignalSDK/onesignal/src/main/java/com/onesignal/OneSignal.java", "diffHunk": "@@ -1012,19 +1012,6 @@ public static boolean requiresUserPrivacyConsent() {\n     * This method will be replaced by remote params set\n     */\n    public static void setRequiresUserPrivacyConsent(final boolean required) {\n-      if (taskController.shouldQueueTaskForInit(OSTaskController.SET_REQUIRES_USER_PRIVACY_CONSENT)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mjc5NTg0OQ=="}, "originalCommit": {"oid": "bc50858dcc631bb3223123af04a0985081ab195c"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4NTY2MzUzOnYy", "diffSide": "RIGHT", "path": "OneSignalSDK/unittest/src/test/java/com/test/onesignal/RemoteParamsTests.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQyMTozMDo0N1rOHWNGOw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQyMjoyNjozMFrOHWOfZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzA0NTMwNw==", "bodyText": "change to  ShadowOneSignalRestClient.setRemoteParamsRequirePrivacyConsent(false);", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/1153#discussion_r493045307", "createdAt": "2020-09-22T21:30:47Z", "author": {"login": "Jeasmine"}, "path": "OneSignalSDK/unittest/src/test/java/com/test/onesignal/RemoteParamsTests.java", "diffHunk": "@@ -174,7 +172,9 @@ public void testUserPrivacyConsentRequired_UserConfigurationNotOverrideRemotePar\n \n     @Test\n     public void testUserPrivacyConsentNotRequired_UserConfigurationNotOverrideRemoteParams() throws Exception {\n-        ShadowOneSignalRestClient.setRemoteParamsGetHtmlResponse();\n+        JSONObject remoteParams = new JSONObject();\n+        remoteParams.put(\"requires_user_privacy_consent\", false);\n+        ShadowOneSignalRestClient.setRemoteParamsGetHtmlResponse(remoteParams);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eaf2db6b1bbac5ad34ac59e146989a7e12f0308d"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzA2MjM3Mw==", "bodyText": "ah my bad, I changed two instances but there was other pre-existing code I copied this from.\nI am just going to update them all in another commit in this PR.", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/1153#discussion_r493062373", "createdAt": "2020-09-22T22:11:01Z", "author": {"login": "jkasten2"}, "path": "OneSignalSDK/unittest/src/test/java/com/test/onesignal/RemoteParamsTests.java", "diffHunk": "@@ -174,7 +172,9 @@ public void testUserPrivacyConsentRequired_UserConfigurationNotOverrideRemotePar\n \n     @Test\n     public void testUserPrivacyConsentNotRequired_UserConfigurationNotOverrideRemoteParams() throws Exception {\n-        ShadowOneSignalRestClient.setRemoteParamsGetHtmlResponse();\n+        JSONObject remoteParams = new JSONObject();\n+        remoteParams.put(\"requires_user_privacy_consent\", false);\n+        ShadowOneSignalRestClient.setRemoteParamsGetHtmlResponse(remoteParams);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzA0NTMwNw=="}, "originalCommit": {"oid": "eaf2db6b1bbac5ad34ac59e146989a7e12f0308d"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzA2ODEzNQ==", "bodyText": "@Jeasmine Fixed in commit 8a6b882", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/1153#discussion_r493068135", "createdAt": "2020-09-22T22:26:30Z", "author": {"login": "jkasten2"}, "path": "OneSignalSDK/unittest/src/test/java/com/test/onesignal/RemoteParamsTests.java", "diffHunk": "@@ -174,7 +172,9 @@ public void testUserPrivacyConsentRequired_UserConfigurationNotOverrideRemotePar\n \n     @Test\n     public void testUserPrivacyConsentNotRequired_UserConfigurationNotOverrideRemoteParams() throws Exception {\n-        ShadowOneSignalRestClient.setRemoteParamsGetHtmlResponse();\n+        JSONObject remoteParams = new JSONObject();\n+        remoteParams.put(\"requires_user_privacy_consent\", false);\n+        ShadowOneSignalRestClient.setRemoteParamsGetHtmlResponse(remoteParams);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzA0NTMwNw=="}, "originalCommit": {"oid": "eaf2db6b1bbac5ad34ac59e146989a7e12f0308d"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4NTczODM3OnYy", "diffSide": "RIGHT", "path": "OneSignalSDK/unittest/src/test/java/com/test/onesignal/OneSignalInitializationIntegrationTestsRunner.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQyMTo1Njo0N1rOHWNy5w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQyMjowNDozM1rOHWN_HA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzA1Njc0Mw==", "bodyText": "will this still work if only depending on remote params? I suppose that yes because of the test setting false and being true from remote params, but just checking", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/1153#discussion_r493056743", "createdAt": "2020-09-22T21:56:47Z", "author": {"login": "Jeasmine"}, "path": "OneSignalSDK/unittest/src/test/java/com/test/onesignal/OneSignalInitializationIntegrationTestsRunner.java", "diffHunk": "@@ -0,0 +1,85 @@\n+package com.test.onesignal;\r\n+\r\n+import androidx.test.core.app.ApplicationProvider;\r\n+\r\n+import com.onesignal.OneSignal;\r\n+import com.onesignal.ShadowCustomTabsClient;\r\n+import com.onesignal.ShadowCustomTabsSession;\r\n+import com.onesignal.ShadowOSUtils;\r\n+import com.onesignal.ShadowOneSignalRestClient;\r\n+import com.onesignal.ShadowPushRegistratorFCM;\r\n+import com.onesignal.StaticResetHelper;\r\n+import com.onesignal.example.BlankActivity;\r\n+\r\n+import org.junit.Before;\r\n+import org.junit.BeforeClass;\r\n+import org.junit.Test;\r\n+import org.junit.runner.RunWith;\r\n+import org.robolectric.Robolectric;\r\n+import org.robolectric.RobolectricTestRunner;\r\n+import org.robolectric.android.controller.ActivityController;\r\n+import org.robolectric.annotation.Config;\r\n+import org.robolectric.shadows.ShadowLog;\r\n+\r\n+import static com.onesignal.ShadowOneSignalRestClient.setRemoteParamsGetHtmlResponse;\r\n+import static com.test.onesignal.TestHelpers.threadAndTaskWait;\r\n+\r\n+@Config(\r\n+        packageName = \"com.onesignal.example\",\r\n+        shadows = {\r\n+            ShadowOSUtils.class,\r\n+            ShadowOneSignalRestClient.class,\r\n+            ShadowPushRegistratorFCM.class,\r\n+            ShadowCustomTabsClient.class,\r\n+            ShadowCustomTabsSession.class,\r\n+        },\r\n+        sdk = 26\r\n+)\r\n+\r\n+@RunWith(RobolectricTestRunner.class)\r\n+public class OneSignalInitializationIntegrationTestsRunner {\r\n+    private ActivityController<BlankActivity> blankActivityController;\r\n+\r\n+    @BeforeClass // Runs only once, before any tests\r\n+    public static void setUpClass() throws Exception {\r\n+        ShadowLog.stream = System.out;\r\n+        TestHelpers.beforeTestSuite();\r\n+        StaticResetHelper.saveStaticValues();\r\n+    }\r\n+\r\n+    @Before\r\n+    public void beforeEachTest() throws Exception {\r\n+        TestHelpers.beforeTestInitAndCleanup();\r\n+        setRemoteParamsGetHtmlResponse();\r\n+        blankActivityController = Robolectric.buildActivity(BlankActivity.class).create();\r\n+    }\r\n+\r\n+    private static final String APP_ID = \"11111111-2222-3333-4444-55555555555\";\r\n+    private static void helper_OneSignal_initWithAppContext() {\r\n+        OneSignal.initWithContext(ApplicationProvider.getApplicationContext());\r\n+    }\r\n+\r\n+    @Test\r\n+    public void setRequiresUserPrivacyConsent_withTrue_CalledFirst_DoesNOTCreatePlayer() throws Exception {\r\n+        OneSignal.setRequiresUserPrivacyConsent(true);\r\n+\r\n+        OneSignal.setAppId(APP_ID);\r\n+        helper_OneSignal_initWithAppContext();\r\n+        threadAndTaskWait();\r\n+\r\n+        RestClientAsserts.assertRemoteParamsWasTheOnlyNetworkCall();\r\n+    }\r\n+\r\n+    @Test\r\n+    public void setRequiresUserPrivacyConsent_withFalseAndRemoteTrue_DoesNOTCreatePlayer() throws Exception {\r\n+        ShadowOneSignalRestClient.setRemoteParamsRequirePrivacyConsent(true);\r\n+        OneSignal.setRequiresUserPrivacyConsent(false);\r\n+\r\n+        OneSignal.setAppId(APP_ID);\r\n+        helper_OneSignal_initWithAppContext();\r\n+        threadAndTaskWait();\r\n+\r\n+        RestClientAsserts.assertRemoteParamsWasTheOnlyNetworkCall();\r\n+    }\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eaf2db6b1bbac5ad34ac59e146989a7e12f0308d"}, "originalPosition": 83}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzA1OTg2OA==", "bodyText": "yes, correct. This test confirms this scenario.", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/1153#discussion_r493059868", "createdAt": "2020-09-22T22:04:33Z", "author": {"login": "jkasten2"}, "path": "OneSignalSDK/unittest/src/test/java/com/test/onesignal/OneSignalInitializationIntegrationTestsRunner.java", "diffHunk": "@@ -0,0 +1,85 @@\n+package com.test.onesignal;\r\n+\r\n+import androidx.test.core.app.ApplicationProvider;\r\n+\r\n+import com.onesignal.OneSignal;\r\n+import com.onesignal.ShadowCustomTabsClient;\r\n+import com.onesignal.ShadowCustomTabsSession;\r\n+import com.onesignal.ShadowOSUtils;\r\n+import com.onesignal.ShadowOneSignalRestClient;\r\n+import com.onesignal.ShadowPushRegistratorFCM;\r\n+import com.onesignal.StaticResetHelper;\r\n+import com.onesignal.example.BlankActivity;\r\n+\r\n+import org.junit.Before;\r\n+import org.junit.BeforeClass;\r\n+import org.junit.Test;\r\n+import org.junit.runner.RunWith;\r\n+import org.robolectric.Robolectric;\r\n+import org.robolectric.RobolectricTestRunner;\r\n+import org.robolectric.android.controller.ActivityController;\r\n+import org.robolectric.annotation.Config;\r\n+import org.robolectric.shadows.ShadowLog;\r\n+\r\n+import static com.onesignal.ShadowOneSignalRestClient.setRemoteParamsGetHtmlResponse;\r\n+import static com.test.onesignal.TestHelpers.threadAndTaskWait;\r\n+\r\n+@Config(\r\n+        packageName = \"com.onesignal.example\",\r\n+        shadows = {\r\n+            ShadowOSUtils.class,\r\n+            ShadowOneSignalRestClient.class,\r\n+            ShadowPushRegistratorFCM.class,\r\n+            ShadowCustomTabsClient.class,\r\n+            ShadowCustomTabsSession.class,\r\n+        },\r\n+        sdk = 26\r\n+)\r\n+\r\n+@RunWith(RobolectricTestRunner.class)\r\n+public class OneSignalInitializationIntegrationTestsRunner {\r\n+    private ActivityController<BlankActivity> blankActivityController;\r\n+\r\n+    @BeforeClass // Runs only once, before any tests\r\n+    public static void setUpClass() throws Exception {\r\n+        ShadowLog.stream = System.out;\r\n+        TestHelpers.beforeTestSuite();\r\n+        StaticResetHelper.saveStaticValues();\r\n+    }\r\n+\r\n+    @Before\r\n+    public void beforeEachTest() throws Exception {\r\n+        TestHelpers.beforeTestInitAndCleanup();\r\n+        setRemoteParamsGetHtmlResponse();\r\n+        blankActivityController = Robolectric.buildActivity(BlankActivity.class).create();\r\n+    }\r\n+\r\n+    private static final String APP_ID = \"11111111-2222-3333-4444-55555555555\";\r\n+    private static void helper_OneSignal_initWithAppContext() {\r\n+        OneSignal.initWithContext(ApplicationProvider.getApplicationContext());\r\n+    }\r\n+\r\n+    @Test\r\n+    public void setRequiresUserPrivacyConsent_withTrue_CalledFirst_DoesNOTCreatePlayer() throws Exception {\r\n+        OneSignal.setRequiresUserPrivacyConsent(true);\r\n+\r\n+        OneSignal.setAppId(APP_ID);\r\n+        helper_OneSignal_initWithAppContext();\r\n+        threadAndTaskWait();\r\n+\r\n+        RestClientAsserts.assertRemoteParamsWasTheOnlyNetworkCall();\r\n+    }\r\n+\r\n+    @Test\r\n+    public void setRequiresUserPrivacyConsent_withFalseAndRemoteTrue_DoesNOTCreatePlayer() throws Exception {\r\n+        ShadowOneSignalRestClient.setRemoteParamsRequirePrivacyConsent(true);\r\n+        OneSignal.setRequiresUserPrivacyConsent(false);\r\n+\r\n+        OneSignal.setAppId(APP_ID);\r\n+        helper_OneSignal_initWithAppContext();\r\n+        threadAndTaskWait();\r\n+\r\n+        RestClientAsserts.assertRemoteParamsWasTheOnlyNetworkCall();\r\n+    }\r", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzA1Njc0Mw=="}, "originalCommit": {"oid": "eaf2db6b1bbac5ad34ac59e146989a7e12f0308d"}, "originalPosition": 83}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2136, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}