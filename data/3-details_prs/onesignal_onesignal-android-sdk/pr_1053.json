{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMyNTU2MzA5", "number": 1053, "title": "Fix Outcomes tables DB migrations", "bodyText": "Fix migration from 4 to 5, keep old SQL query to continue with v8 migration correctly\n\n\n\nThis change is\u2002", "createdAt": "2020-06-10T16:03:31Z", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/1053", "merged": true, "mergeCommit": {"oid": "e435af302e856f39f6ea3c8ed0e8203e6ce92e53"}, "closed": true, "closedAt": "2020-06-11T02:58:24Z", "author": {"login": "Jeasmine"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcp76R7ABqjM0MzAzOTE2NDU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcqFOtzAFqTQyODU1OTAxMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "fa831860d1aa653a4d39472aa2a753a695183665", "author": {"user": {"login": "Jeasmine", "name": "JNahui"}}, "url": "https://github.com/OneSignal/OneSignal-Android-SDK/commit/fa831860d1aa653a4d39472aa2a753a695183665", "committedDate": "2020-06-10T16:02:33Z", "message": "Fix IAM tracking DB migration\n\n   * Fix migration from 4 to 5, keep old SQL query to continue with v8 migration correctly"}, "afterCommit": {"oid": "f519c02fac286dcddc175b78ee3c7505f7cd7185", "author": {"user": {"login": "Jeasmine", "name": "JNahui"}}, "url": "https://github.com/OneSignal/OneSignal-Android-SDK/commit/f519c02fac286dcddc175b78ee3c7505f7cd7185", "committedDate": "2020-06-10T16:04:49Z", "message": "Fix IAM tracking DB migration\n\n   * Fix migration from 4 to 5, keep old SQL query to continue with v8 migration correctly"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f519c02fac286dcddc175b78ee3c7505f7cd7185", "author": {"user": {"login": "Jeasmine", "name": "JNahui"}}, "url": "https://github.com/OneSignal/OneSignal-Android-SDK/commit/f519c02fac286dcddc175b78ee3c7505f7cd7185", "committedDate": "2020-06-10T16:04:49Z", "message": "Fix IAM tracking DB migration\n\n   * Fix migration from 4 to 5, keep old SQL query to continue with v8 migration correctly"}, "afterCommit": {"oid": "d437ed2ccaab42b3ac240a54c4595dc8ccbed895", "author": {"user": {"login": "Jeasmine", "name": "JNahui"}}, "url": "https://github.com/OneSignal/OneSignal-Android-SDK/commit/d437ed2ccaab42b3ac240a54c4595dc8ccbed895", "committedDate": "2020-06-10T17:36:57Z", "message": "Fix IAM tracking DB migration\n\n   * Fix migration from 4 to 5, keep old SQL query to continue with v8 migration correctly"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI4MjUxNjI1", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/1053#pullrequestreview-428251625", "createdAt": "2020-06-10T16:54:28Z", "commit": {"oid": "f519c02fac286dcddc175b78ee3c7505f7cd7185"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxNjo1NDoyOFrOGh-Adg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxNzozNjo1M1rOGh_jLg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODI3MjExOA==", "bodyText": "Change // Old table name to OneSignal SDK version that used this so we know.\nex.\n// Table name VX.X.X\nThis should maybe be done for all cases of Old", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/1053#discussion_r438272118", "createdAt": "2020-06-10T16:54:28Z", "author": {"login": "mikechoch"}, "path": "OneSignalSDK/onesignal/src/main/java/com/onesignal/outcomes/OSOutcomesDbContract.java", "diffHunk": "@@ -17,11 +17,12 @@\n         static final String COLUMN_NAME_NAME = \"name\";\n         static final String COLUMN_NAME_WEIGHT = \"weight\";\n         static final String COLUMN_NAME_TIMESTAMP = \"timestamp\";\n+        static final String COLUMN_NAME_PARAMS = \"params\";\n     }\n \n     static class CachedUniqueOutcomeTable implements BaseColumns {\n-        static final String OLD_TABLE_NAME = \"cached_unique_outcome_notification\"; // Old table name\n-        static final String TABLE_NAME = \"cached_unique_outcome\";\n+        static final String TABLE_NAME_V1 = \"cached_unique_outcome_notification\"; // Old table name", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f519c02fac286dcddc175b78ee3c7505f7cd7185"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODI3NDQ4Mg==", "bodyText": "OLD_TABLE_NAME should match version of table name\nTABLE_NAME_V1", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/1053#discussion_r438274482", "createdAt": "2020-06-10T16:58:17Z", "author": {"login": "mikechoch"}, "path": "OneSignalSDK/unittest/src/test/java/com/onesignal/outcomes/MockOSCachedUniqueOutcomeTable.java", "diffHunk": "@@ -2,8 +2,8 @@\n \n public class MockOSCachedUniqueOutcomeTable extends OSOutcomesDbContract.CachedUniqueOutcomeTable {\n \n-    public static final String OLD_TABLE_NAME = OSOutcomesDbContract.CachedUniqueOutcomeTable.OLD_TABLE_NAME;\n-    public static final String TABLE_NAME = OSOutcomesDbContract.CachedUniqueOutcomeTable.TABLE_NAME;\n+    public static final String OLD_TABLE_NAME = OSOutcomesDbContract.CachedUniqueOutcomeTable.TABLE_NAME_V1;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f519c02fac286dcddc175b78ee3c7505f7cd7185"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODI3NDU4Mw==", "bodyText": "TABLE_NAME should match version of table name\nTABLE_NAME_V2", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/1053#discussion_r438274583", "createdAt": "2020-06-10T16:58:27Z", "author": {"login": "mikechoch"}, "path": "OneSignalSDK/unittest/src/test/java/com/onesignal/outcomes/MockOSCachedUniqueOutcomeTable.java", "diffHunk": "@@ -2,8 +2,8 @@\n \n public class MockOSCachedUniqueOutcomeTable extends OSOutcomesDbContract.CachedUniqueOutcomeTable {\n \n-    public static final String OLD_TABLE_NAME = OSOutcomesDbContract.CachedUniqueOutcomeTable.OLD_TABLE_NAME;\n-    public static final String TABLE_NAME = OSOutcomesDbContract.CachedUniqueOutcomeTable.TABLE_NAME;\n+    public static final String OLD_TABLE_NAME = OSOutcomesDbContract.CachedUniqueOutcomeTable.TABLE_NAME_V1;\n+    public static final String TABLE_NAME = OSOutcomesDbContract.CachedUniqueOutcomeTable.TABLE_NAME_V2;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f519c02fac286dcddc175b78ee3c7505f7cd7185"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODI3NDk2NQ==", "bodyText": "Old should be replaced with SDK version that used it", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/1053#discussion_r438274965", "createdAt": "2020-06-10T16:59:07Z", "author": {"login": "mikechoch"}, "path": "OneSignalSDK/onesignal/src/main/java/com/onesignal/outcomes/OSOutcomesDbContract.java", "diffHunk": "@@ -17,11 +17,12 @@\n         static final String COLUMN_NAME_NAME = \"name\";\n         static final String COLUMN_NAME_WEIGHT = \"weight\";\n         static final String COLUMN_NAME_TIMESTAMP = \"timestamp\";\n+        static final String COLUMN_NAME_PARAMS = \"params\";\n     }\n \n     static class CachedUniqueOutcomeTable implements BaseColumns {\n-        static final String OLD_TABLE_NAME = \"cached_unique_outcome_notification\"; // Old table name\n-        static final String TABLE_NAME = \"cached_unique_outcome\";\n+        static final String TABLE_NAME_V1 = \"cached_unique_outcome_notification\"; // Old table name\n+        static final String TABLE_NAME_V2 = \"cached_unique_outcome\";\n         static final String COLUMN_NAME_NOTIFICATION_ID = \"notification_id\"; // Old column name", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f519c02fac286dcddc175b78ee3c7505f7cd7185"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODI3OTM1OA==", "bodyText": "Maybe do the commonColumns same way you did in upgradeOutcomeTableRevision2To3 for consistency?\nNot a big deal just one way or the other so that they match.", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/1053#discussion_r438279358", "createdAt": "2020-06-10T17:06:30Z", "author": {"login": "mikechoch"}, "path": "OneSignalSDK/onesignal/src/main/java/com/onesignal/outcomes/OSOutcomeTableProvider.java", "diffHunk": "@@ -33,14 +55,50 @@\n                     OutcomeEventsTable.COLUMN_NAME_WEIGHT + FLOAT_TYPE + // New in v5, missing migration added in v6\n                     \");\";\n \n-    private static final String SQL_CREATE_UNIQUE_OUTCOME_ENTRIES =\n-            \"CREATE TABLE \" + CachedUniqueOutcomeTable.TABLE_NAME + \" (\" +\n+    private static final String SQL_CREATE_UNIQUE_OUTCOME_ENTRIES_V1 =\n+            \"CREATE TABLE \" + CachedUniqueOutcomeTable.TABLE_NAME_V1 + \" (\" +\n+                    CachedUniqueOutcomeTable._ID + INTEGER_PRIMARY_KEY_TYPE + \",\" +\n+                    CachedUniqueOutcomeTable.COLUMN_NAME_NOTIFICATION_ID + TEXT_TYPE + \",\" +\n+                    CachedUniqueOutcomeTable.COLUMN_NAME_NAME + TEXT_TYPE +\n+                    \");\";\n+\n+\n+    private static final String SQL_CREATE_UNIQUE_OUTCOME_ENTRIES_V2 =\n+            \"CREATE TABLE \" + CachedUniqueOutcomeTable.TABLE_NAME_V2 + \" (\" +\n                     CachedUniqueOutcomeTable._ID + INTEGER_PRIMARY_KEY_TYPE + \",\" +\n                     CachedUniqueOutcomeTable.COLUMN_CHANNEL_INFLUENCE_ID + TEXT_TYPE + \",\" +\n                     CachedUniqueOutcomeTable.COLUMN_CHANNEL_TYPE + TEXT_TYPE + \",\" +\n                     CachedUniqueOutcomeTable.COLUMN_NAME_NAME + TEXT_TYPE +\n                     \");\";\n \n+    /**\n+     * On the outcome table this adds the new weight column and drops params column.\n+     */\n+    public void upgradeOutcomeTableRevision1To2(SQLiteDatabase db) {\n+        String commonColumns = \"_id,session,notification_ids,name,timestamp\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f519c02fac286dcddc175b78ee3c7505f7cd7185"}, "originalPosition": 62}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODI5NTU5MA==", "bodyText": "Added on to comment for clarity // 4. Opening the DB will auto trigger the update to DB version 8", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/1053#discussion_r438295590", "createdAt": "2020-06-10T17:33:54Z", "author": {"login": "mikechoch"}, "path": "OneSignalSDK/unittest/src/test/java/com/test/onesignal/DatabaseRunner.java", "diffHunk": "@@ -483,4 +466,199 @@ public void shouldUpgradeDbFromV7ToV8OutcomesTable() throws JSONException {\n         assertEquals(new JSONArray(), outcomeSaved.getIamIds());\n         assertEquals(OSInfluenceType.UNATTRIBUTED, outcomeSaved.getIamInfluenceType());\n     }\n+\n+    @Test\n+    public void shouldUpgradeDbFromV3ToV8UniqueOutcomeTable() {\n+        // 1. Init DB as version 3\n+        ShadowOneSignalDbHelper.DATABASE_VERSION = 3;\n+        SQLiteDatabase writableDatabase = dbHelper.getSQLiteDatabaseWithRetries();\n+\n+        Cursor cursor = writableDatabase.rawQuery(\"SELECT name FROM sqlite_master WHERE type ='table' AND name='\" + MockOSCachedUniqueOutcomeTable.TABLE_NAME + \"'\", null);\n+\n+        boolean exist = false;\n+        if (cursor != null) {\n+            exist = cursor.getCount() > 0;\n+            cursor.close();\n+        }\n+        // 2. Table must not exist\n+        assertFalse(exist);\n+        writableDatabase.setVersion(3);\n+        writableDatabase.close();\n+\n+        // 3. Clear the cache of the DB so it reloads the file.\n+        ShadowOneSignalDbHelper.restSetStaticFields();\n+\n+        outcomeTableProvider = new OSOutcomeTableProvider();\n+        dbHelper.setOutcomeTableProvider(outcomeTableProvider);\n+        // 4. Opening the DB will auto trigger the update.\n+        writableDatabase = dbHelper.getSQLiteDatabaseWithRetries();\n+\n+        OSCachedUniqueOutcomeName uniqueOutcomeName = new OSCachedUniqueOutcomeName(\"outcome\", \"notificationId\", OSInfluenceChannel.NOTIFICATION);\n+        ContentValues uniqueOutcomeValues = new ContentValues();\n+        uniqueOutcomeValues.put(MockOSCachedUniqueOutcomeTable.COLUMN_CHANNEL_INFLUENCE_ID, uniqueOutcomeName.getInfluenceId());\n+        uniqueOutcomeValues.put(MockOSCachedUniqueOutcomeTable.COLUMN_CHANNEL_TYPE, uniqueOutcomeName.getChannel().toString());\n+        uniqueOutcomeValues.put(MockOSCachedUniqueOutcomeTable.COLUMN_NAME_NAME, uniqueOutcomeName.getName());\n+\n+        writableDatabase.insert(MockOSCachedUniqueOutcomeTable.TABLE_NAME, null, uniqueOutcomeValues);\n+\n+        List<OSCachedUniqueOutcomeName> uniqueOutcomeNotifications = getAllUniqueOutcomeNotificationRecordsDB(dbHelper);\n+        assertEquals(1, uniqueOutcomeNotifications.size());\n+        assertEquals(uniqueOutcomeName.getInfluenceId(), uniqueOutcomeNotifications.get(0).getInfluenceId());\n+        assertEquals(uniqueOutcomeName.getChannel(), uniqueOutcomeNotifications.get(0).getChannel());\n+        assertEquals(uniqueOutcomeName.getName(), uniqueOutcomeNotifications.get(0).getName());\n+    }\n+\n+    @Test\n+    public void shouldUpgradeDbFromV3ToV8OutcomeTable() {\n+        // 1. Init DB as version 3\n+        ShadowOneSignalDbHelper.DATABASE_VERSION = 3;\n+        SQLiteDatabase writableDatabase = dbHelper.getSQLiteDatabaseWithRetries();\n+\n+        Cursor cursor = writableDatabase.rawQuery(\"SELECT name FROM sqlite_master WHERE type ='table' AND name='\" + MockOSOutcomeEventsTable.TABLE_NAME + \"'\", null);\n+\n+        boolean exist = false;\n+        if (cursor != null) {\n+            exist = cursor.getCount() > 0;\n+            cursor.close();\n+        }\n+        // 2. Table must not exist\n+        assertFalse(exist);\n+        writableDatabase.setVersion(3);\n+        writableDatabase.close();\n+\n+        // 3. Clear the cache of the DB so it reloads the file.\n+        ShadowOneSignalDbHelper.restSetStaticFields();\n+\n+        outcomeTableProvider = new OSOutcomeTableProvider();\n+        dbHelper.setOutcomeTableProvider(outcomeTableProvider);\n+        // 4. Opening the DB will auto trigger the update.\n+        writableDatabase = dbHelper.getSQLiteDatabaseWithRetries();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f519c02fac286dcddc175b78ee3c7505f7cd7185"}, "originalPosition": 285}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODI5NTc1NQ==", "bodyText": "Added on to comment for clarity // 4. Opening the DB will auto trigger the update to DB version 8", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/1053#discussion_r438295755", "createdAt": "2020-06-10T17:34:15Z", "author": {"login": "mikechoch"}, "path": "OneSignalSDK/unittest/src/test/java/com/test/onesignal/DatabaseRunner.java", "diffHunk": "@@ -483,4 +466,199 @@ public void shouldUpgradeDbFromV7ToV8OutcomesTable() throws JSONException {\n         assertEquals(new JSONArray(), outcomeSaved.getIamIds());\n         assertEquals(OSInfluenceType.UNATTRIBUTED, outcomeSaved.getIamInfluenceType());\n     }\n+\n+    @Test\n+    public void shouldUpgradeDbFromV3ToV8UniqueOutcomeTable() {\n+        // 1. Init DB as version 3\n+        ShadowOneSignalDbHelper.DATABASE_VERSION = 3;\n+        SQLiteDatabase writableDatabase = dbHelper.getSQLiteDatabaseWithRetries();\n+\n+        Cursor cursor = writableDatabase.rawQuery(\"SELECT name FROM sqlite_master WHERE type ='table' AND name='\" + MockOSCachedUniqueOutcomeTable.TABLE_NAME + \"'\", null);\n+\n+        boolean exist = false;\n+        if (cursor != null) {\n+            exist = cursor.getCount() > 0;\n+            cursor.close();\n+        }\n+        // 2. Table must not exist\n+        assertFalse(exist);\n+        writableDatabase.setVersion(3);\n+        writableDatabase.close();\n+\n+        // 3. Clear the cache of the DB so it reloads the file.\n+        ShadowOneSignalDbHelper.restSetStaticFields();\n+\n+        outcomeTableProvider = new OSOutcomeTableProvider();\n+        dbHelper.setOutcomeTableProvider(outcomeTableProvider);\n+        // 4. Opening the DB will auto trigger the update.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f519c02fac286dcddc175b78ee3c7505f7cd7185"}, "originalPosition": 243}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODI5NTk2NA==", "bodyText": "Added on to comment for clarity // 4. Opening the DB will auto trigger the update to DB version 8", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/1053#discussion_r438295964", "createdAt": "2020-06-10T17:34:37Z", "author": {"login": "mikechoch"}, "path": "OneSignalSDK/unittest/src/test/java/com/test/onesignal/DatabaseRunner.java", "diffHunk": "@@ -483,4 +466,199 @@ public void shouldUpgradeDbFromV7ToV8OutcomesTable() throws JSONException {\n         assertEquals(new JSONArray(), outcomeSaved.getIamIds());\n         assertEquals(OSInfluenceType.UNATTRIBUTED, outcomeSaved.getIamInfluenceType());\n     }\n+\n+    @Test\n+    public void shouldUpgradeDbFromV3ToV8UniqueOutcomeTable() {\n+        // 1. Init DB as version 3\n+        ShadowOneSignalDbHelper.DATABASE_VERSION = 3;\n+        SQLiteDatabase writableDatabase = dbHelper.getSQLiteDatabaseWithRetries();\n+\n+        Cursor cursor = writableDatabase.rawQuery(\"SELECT name FROM sqlite_master WHERE type ='table' AND name='\" + MockOSCachedUniqueOutcomeTable.TABLE_NAME + \"'\", null);\n+\n+        boolean exist = false;\n+        if (cursor != null) {\n+            exist = cursor.getCount() > 0;\n+            cursor.close();\n+        }\n+        // 2. Table must not exist\n+        assertFalse(exist);\n+        writableDatabase.setVersion(3);\n+        writableDatabase.close();\n+\n+        // 3. Clear the cache of the DB so it reloads the file.\n+        ShadowOneSignalDbHelper.restSetStaticFields();\n+\n+        outcomeTableProvider = new OSOutcomeTableProvider();\n+        dbHelper.setOutcomeTableProvider(outcomeTableProvider);\n+        // 4. Opening the DB will auto trigger the update.\n+        writableDatabase = dbHelper.getSQLiteDatabaseWithRetries();\n+\n+        OSCachedUniqueOutcomeName uniqueOutcomeName = new OSCachedUniqueOutcomeName(\"outcome\", \"notificationId\", OSInfluenceChannel.NOTIFICATION);\n+        ContentValues uniqueOutcomeValues = new ContentValues();\n+        uniqueOutcomeValues.put(MockOSCachedUniqueOutcomeTable.COLUMN_CHANNEL_INFLUENCE_ID, uniqueOutcomeName.getInfluenceId());\n+        uniqueOutcomeValues.put(MockOSCachedUniqueOutcomeTable.COLUMN_CHANNEL_TYPE, uniqueOutcomeName.getChannel().toString());\n+        uniqueOutcomeValues.put(MockOSCachedUniqueOutcomeTable.COLUMN_NAME_NAME, uniqueOutcomeName.getName());\n+\n+        writableDatabase.insert(MockOSCachedUniqueOutcomeTable.TABLE_NAME, null, uniqueOutcomeValues);\n+\n+        List<OSCachedUniqueOutcomeName> uniqueOutcomeNotifications = getAllUniqueOutcomeNotificationRecordsDB(dbHelper);\n+        assertEquals(1, uniqueOutcomeNotifications.size());\n+        assertEquals(uniqueOutcomeName.getInfluenceId(), uniqueOutcomeNotifications.get(0).getInfluenceId());\n+        assertEquals(uniqueOutcomeName.getChannel(), uniqueOutcomeNotifications.get(0).getChannel());\n+        assertEquals(uniqueOutcomeName.getName(), uniqueOutcomeNotifications.get(0).getName());\n+    }\n+\n+    @Test\n+    public void shouldUpgradeDbFromV3ToV8OutcomeTable() {\n+        // 1. Init DB as version 3\n+        ShadowOneSignalDbHelper.DATABASE_VERSION = 3;\n+        SQLiteDatabase writableDatabase = dbHelper.getSQLiteDatabaseWithRetries();\n+\n+        Cursor cursor = writableDatabase.rawQuery(\"SELECT name FROM sqlite_master WHERE type ='table' AND name='\" + MockOSOutcomeEventsTable.TABLE_NAME + \"'\", null);\n+\n+        boolean exist = false;\n+        if (cursor != null) {\n+            exist = cursor.getCount() > 0;\n+            cursor.close();\n+        }\n+        // 2. Table must not exist\n+        assertFalse(exist);\n+        writableDatabase.setVersion(3);\n+        writableDatabase.close();\n+\n+        // 3. Clear the cache of the DB so it reloads the file.\n+        ShadowOneSignalDbHelper.restSetStaticFields();\n+\n+        outcomeTableProvider = new OSOutcomeTableProvider();\n+        dbHelper.setOutcomeTableProvider(outcomeTableProvider);\n+        // 4. Opening the DB will auto trigger the update.\n+        writableDatabase = dbHelper.getSQLiteDatabaseWithRetries();\n+\n+        OSOutcomeEventDB outcomeEventDB = new OSOutcomeEventDB(OSInfluenceType.DIRECT, OSInfluenceType.INDIRECT,\n+                \"iam_id\", \"notificationId\", \"outcome_outcome\", 1234, (float) 1234);\n+\n+        ContentValues outcomeValues = new ContentValues();\n+        outcomeValues.put(MockOSOutcomeEventsTable.COLUMN_NAME_NOTIFICATION_IDS, outcomeEventDB.getNotificationIds().toString());\n+        outcomeValues.put(MockOSOutcomeEventsTable.COLUMN_NAME_IAM_IDS, outcomeEventDB.getIamIds().toString());\n+        outcomeValues.put(MockOSOutcomeEventsTable.COLUMN_NAME_NOTIFICATION_INFLUENCE_TYPE, outcomeEventDB.getNotificationInfluenceType().toString());\n+        outcomeValues.put(MockOSOutcomeEventsTable.COLUMN_NAME_IAM_INFLUENCE_TYPE, outcomeEventDB.getIamInfluenceType().toString());\n+        outcomeValues.put(MockOSOutcomeEventsTable.COLUMN_NAME_NAME, outcomeEventDB.getName());\n+        outcomeValues.put(MockOSOutcomeEventsTable.COLUMN_NAME_WEIGHT, outcomeEventDB.getWeight());\n+        outcomeValues.put(MockOSOutcomeEventsTable.COLUMN_NAME_TIMESTAMP, outcomeEventDB.getTimestamp());\n+\n+        writableDatabase.insert(MockOSOutcomeEventsTable.TABLE_NAME, null, outcomeValues);\n+\n+        List<OSOutcomeEventDB> outcomesSaved = getAllOutcomesRecords(dbHelper);\n+        assertEquals(1, outcomesSaved.size());\n+        OSOutcomeEventDB outcomeSaved = outcomesSaved.get(0);\n+\n+        assertEquals(outcomeEventDB.getName(), outcomeSaved.getName());\n+        assertEquals(outcomeEventDB.getWeight(), outcomeSaved.getWeight());\n+        assertEquals(outcomeEventDB.getTimestamp(), outcomeSaved.getTimestamp());\n+        assertEquals(outcomeEventDB.getNotificationIds(), outcomeSaved.getNotificationIds());\n+        assertEquals(outcomeEventDB.getNotificationInfluenceType(), outcomeSaved.getNotificationInfluenceType());\n+        assertEquals(outcomeEventDB.getIamIds(), outcomeSaved.getIamIds());\n+        assertEquals(outcomeEventDB.getIamInfluenceType(), outcomeSaved.getIamInfluenceType());\n+    }\n+\n+    @Test\n+    public void shouldUpgradeDbFromV4ToV8UniqueOutcomeTable() {\n+        // 1. Init DB as version 4\n+        ShadowOneSignalDbHelper.DATABASE_VERSION = 4;\n+        SQLiteDatabase writableDatabase = dbHelper.getSQLiteDatabaseWithRetries();\n+\n+        // Create table with the schema we had in DB v4\n+        writableDatabase.execSQL(SQL_CREATE_OUTCOME_REVISION2_ENTRIES);\n+\n+        Cursor cursor = writableDatabase.rawQuery(\"SELECT name FROM sqlite_master WHERE type ='table' AND name='\" + MockOSCachedUniqueOutcomeTable.TABLE_NAME + \"'\", null);\n+\n+        boolean exist = false;\n+        if (cursor != null) {\n+            exist = cursor.getCount() > 0;\n+            cursor.close();\n+        }\n+        // 2. Table must not exist\n+        assertFalse(exist);\n+        writableDatabase.setVersion(4);\n+        writableDatabase.close();\n+\n+        // 3. Clear the cache of the DB so it reloads the file.\n+        ShadowOneSignalDbHelper.restSetStaticFields();\n+\n+        outcomeTableProvider = new OSOutcomeTableProvider();\n+        dbHelper.setOutcomeTableProvider(outcomeTableProvider);\n+        // 4. Opening the DB will auto trigger the update.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f519c02fac286dcddc175b78ee3c7505f7cd7185"}, "originalPosition": 340}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODI5NjA2NA==", "bodyText": "Added on to comment for clarity // 4. Opening the DB will auto trigger the update to DB version 8", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/1053#discussion_r438296064", "createdAt": "2020-06-10T17:34:46Z", "author": {"login": "mikechoch"}, "path": "OneSignalSDK/unittest/src/test/java/com/test/onesignal/DatabaseRunner.java", "diffHunk": "@@ -483,4 +466,199 @@ public void shouldUpgradeDbFromV7ToV8OutcomesTable() throws JSONException {\n         assertEquals(new JSONArray(), outcomeSaved.getIamIds());\n         assertEquals(OSInfluenceType.UNATTRIBUTED, outcomeSaved.getIamInfluenceType());\n     }\n+\n+    @Test\n+    public void shouldUpgradeDbFromV3ToV8UniqueOutcomeTable() {\n+        // 1. Init DB as version 3\n+        ShadowOneSignalDbHelper.DATABASE_VERSION = 3;\n+        SQLiteDatabase writableDatabase = dbHelper.getSQLiteDatabaseWithRetries();\n+\n+        Cursor cursor = writableDatabase.rawQuery(\"SELECT name FROM sqlite_master WHERE type ='table' AND name='\" + MockOSCachedUniqueOutcomeTable.TABLE_NAME + \"'\", null);\n+\n+        boolean exist = false;\n+        if (cursor != null) {\n+            exist = cursor.getCount() > 0;\n+            cursor.close();\n+        }\n+        // 2. Table must not exist\n+        assertFalse(exist);\n+        writableDatabase.setVersion(3);\n+        writableDatabase.close();\n+\n+        // 3. Clear the cache of the DB so it reloads the file.\n+        ShadowOneSignalDbHelper.restSetStaticFields();\n+\n+        outcomeTableProvider = new OSOutcomeTableProvider();\n+        dbHelper.setOutcomeTableProvider(outcomeTableProvider);\n+        // 4. Opening the DB will auto trigger the update.\n+        writableDatabase = dbHelper.getSQLiteDatabaseWithRetries();\n+\n+        OSCachedUniqueOutcomeName uniqueOutcomeName = new OSCachedUniqueOutcomeName(\"outcome\", \"notificationId\", OSInfluenceChannel.NOTIFICATION);\n+        ContentValues uniqueOutcomeValues = new ContentValues();\n+        uniqueOutcomeValues.put(MockOSCachedUniqueOutcomeTable.COLUMN_CHANNEL_INFLUENCE_ID, uniqueOutcomeName.getInfluenceId());\n+        uniqueOutcomeValues.put(MockOSCachedUniqueOutcomeTable.COLUMN_CHANNEL_TYPE, uniqueOutcomeName.getChannel().toString());\n+        uniqueOutcomeValues.put(MockOSCachedUniqueOutcomeTable.COLUMN_NAME_NAME, uniqueOutcomeName.getName());\n+\n+        writableDatabase.insert(MockOSCachedUniqueOutcomeTable.TABLE_NAME, null, uniqueOutcomeValues);\n+\n+        List<OSCachedUniqueOutcomeName> uniqueOutcomeNotifications = getAllUniqueOutcomeNotificationRecordsDB(dbHelper);\n+        assertEquals(1, uniqueOutcomeNotifications.size());\n+        assertEquals(uniqueOutcomeName.getInfluenceId(), uniqueOutcomeNotifications.get(0).getInfluenceId());\n+        assertEquals(uniqueOutcomeName.getChannel(), uniqueOutcomeNotifications.get(0).getChannel());\n+        assertEquals(uniqueOutcomeName.getName(), uniqueOutcomeNotifications.get(0).getName());\n+    }\n+\n+    @Test\n+    public void shouldUpgradeDbFromV3ToV8OutcomeTable() {\n+        // 1. Init DB as version 3\n+        ShadowOneSignalDbHelper.DATABASE_VERSION = 3;\n+        SQLiteDatabase writableDatabase = dbHelper.getSQLiteDatabaseWithRetries();\n+\n+        Cursor cursor = writableDatabase.rawQuery(\"SELECT name FROM sqlite_master WHERE type ='table' AND name='\" + MockOSOutcomeEventsTable.TABLE_NAME + \"'\", null);\n+\n+        boolean exist = false;\n+        if (cursor != null) {\n+            exist = cursor.getCount() > 0;\n+            cursor.close();\n+        }\n+        // 2. Table must not exist\n+        assertFalse(exist);\n+        writableDatabase.setVersion(3);\n+        writableDatabase.close();\n+\n+        // 3. Clear the cache of the DB so it reloads the file.\n+        ShadowOneSignalDbHelper.restSetStaticFields();\n+\n+        outcomeTableProvider = new OSOutcomeTableProvider();\n+        dbHelper.setOutcomeTableProvider(outcomeTableProvider);\n+        // 4. Opening the DB will auto trigger the update.\n+        writableDatabase = dbHelper.getSQLiteDatabaseWithRetries();\n+\n+        OSOutcomeEventDB outcomeEventDB = new OSOutcomeEventDB(OSInfluenceType.DIRECT, OSInfluenceType.INDIRECT,\n+                \"iam_id\", \"notificationId\", \"outcome_outcome\", 1234, (float) 1234);\n+\n+        ContentValues outcomeValues = new ContentValues();\n+        outcomeValues.put(MockOSOutcomeEventsTable.COLUMN_NAME_NOTIFICATION_IDS, outcomeEventDB.getNotificationIds().toString());\n+        outcomeValues.put(MockOSOutcomeEventsTable.COLUMN_NAME_IAM_IDS, outcomeEventDB.getIamIds().toString());\n+        outcomeValues.put(MockOSOutcomeEventsTable.COLUMN_NAME_NOTIFICATION_INFLUENCE_TYPE, outcomeEventDB.getNotificationInfluenceType().toString());\n+        outcomeValues.put(MockOSOutcomeEventsTable.COLUMN_NAME_IAM_INFLUENCE_TYPE, outcomeEventDB.getIamInfluenceType().toString());\n+        outcomeValues.put(MockOSOutcomeEventsTable.COLUMN_NAME_NAME, outcomeEventDB.getName());\n+        outcomeValues.put(MockOSOutcomeEventsTable.COLUMN_NAME_WEIGHT, outcomeEventDB.getWeight());\n+        outcomeValues.put(MockOSOutcomeEventsTable.COLUMN_NAME_TIMESTAMP, outcomeEventDB.getTimestamp());\n+\n+        writableDatabase.insert(MockOSOutcomeEventsTable.TABLE_NAME, null, outcomeValues);\n+\n+        List<OSOutcomeEventDB> outcomesSaved = getAllOutcomesRecords(dbHelper);\n+        assertEquals(1, outcomesSaved.size());\n+        OSOutcomeEventDB outcomeSaved = outcomesSaved.get(0);\n+\n+        assertEquals(outcomeEventDB.getName(), outcomeSaved.getName());\n+        assertEquals(outcomeEventDB.getWeight(), outcomeSaved.getWeight());\n+        assertEquals(outcomeEventDB.getTimestamp(), outcomeSaved.getTimestamp());\n+        assertEquals(outcomeEventDB.getNotificationIds(), outcomeSaved.getNotificationIds());\n+        assertEquals(outcomeEventDB.getNotificationInfluenceType(), outcomeSaved.getNotificationInfluenceType());\n+        assertEquals(outcomeEventDB.getIamIds(), outcomeSaved.getIamIds());\n+        assertEquals(outcomeEventDB.getIamInfluenceType(), outcomeSaved.getIamInfluenceType());\n+    }\n+\n+    @Test\n+    public void shouldUpgradeDbFromV4ToV8UniqueOutcomeTable() {\n+        // 1. Init DB as version 4\n+        ShadowOneSignalDbHelper.DATABASE_VERSION = 4;\n+        SQLiteDatabase writableDatabase = dbHelper.getSQLiteDatabaseWithRetries();\n+\n+        // Create table with the schema we had in DB v4\n+        writableDatabase.execSQL(SQL_CREATE_OUTCOME_REVISION2_ENTRIES);\n+\n+        Cursor cursor = writableDatabase.rawQuery(\"SELECT name FROM sqlite_master WHERE type ='table' AND name='\" + MockOSCachedUniqueOutcomeTable.TABLE_NAME + \"'\", null);\n+\n+        boolean exist = false;\n+        if (cursor != null) {\n+            exist = cursor.getCount() > 0;\n+            cursor.close();\n+        }\n+        // 2. Table must not exist\n+        assertFalse(exist);\n+        writableDatabase.setVersion(4);\n+        writableDatabase.close();\n+\n+        // 3. Clear the cache of the DB so it reloads the file.\n+        ShadowOneSignalDbHelper.restSetStaticFields();\n+\n+        outcomeTableProvider = new OSOutcomeTableProvider();\n+        dbHelper.setOutcomeTableProvider(outcomeTableProvider);\n+        // 4. Opening the DB will auto trigger the update.\n+        writableDatabase = dbHelper.getSQLiteDatabaseWithRetries();\n+\n+        OSCachedUniqueOutcomeName uniqueOutcomeName = new OSCachedUniqueOutcomeName(\"outcome\", \"notificationId\", OSInfluenceChannel.NOTIFICATION);\n+        ContentValues uniqueOutcomeValues = new ContentValues();\n+        uniqueOutcomeValues.put(MockOSCachedUniqueOutcomeTable.COLUMN_CHANNEL_INFLUENCE_ID, uniqueOutcomeName.getInfluenceId());\n+        uniqueOutcomeValues.put(MockOSCachedUniqueOutcomeTable.COLUMN_CHANNEL_TYPE, uniqueOutcomeName.getChannel().toString());\n+        uniqueOutcomeValues.put(MockOSCachedUniqueOutcomeTable.COLUMN_NAME_NAME, uniqueOutcomeName.getName());\n+\n+        writableDatabase.insert(MockOSCachedUniqueOutcomeTable.TABLE_NAME, null, uniqueOutcomeValues);\n+\n+        List<OSCachedUniqueOutcomeName> uniqueOutcomeNotifications = getAllUniqueOutcomeNotificationRecordsDB(dbHelper);\n+        assertEquals(1, uniqueOutcomeNotifications.size());\n+        assertEquals(uniqueOutcomeName.getInfluenceId(), uniqueOutcomeNotifications.get(0).getInfluenceId());\n+        assertEquals(uniqueOutcomeName.getChannel(), uniqueOutcomeNotifications.get(0).getChannel());\n+        assertEquals(uniqueOutcomeName.getName(), uniqueOutcomeNotifications.get(0).getName());\n+    }\n+\n+    @Test\n+    public void shouldUpgradeDbFromV4ToV8OutcomeTable() {\n+        // 1. Init DB as version 4\n+        ShadowOneSignalDbHelper.DATABASE_VERSION = 4;\n+        SQLiteDatabase writableDatabase = dbHelper.getSQLiteDatabaseWithRetries();\n+\n+        // Create table with the schema we had in DB v4\n+        writableDatabase.execSQL(SQL_CREATE_OUTCOME_REVISION1_ENTRIES);\n+        Cursor cursor = writableDatabase.query(MockOSOutcomeEventsTable.TABLE_NAME, null, null, null, null, null, null);\n+\n+        boolean exist = false;\n+        if (cursor != null) {\n+            String[] columns = cursor.getColumnNames();\n+            exist = columns.length == 6;\n+            cursor.close();\n+        }\n+        // 2. Table must not exist\n+        assertTrue(exist);\n+        writableDatabase.setVersion(4);\n+        writableDatabase.close();\n+\n+        // 3. Clear the cache of the DB so it reloads the file.\n+        ShadowOneSignalDbHelper.restSetStaticFields();\n+\n+        outcomeTableProvider = new OSOutcomeTableProvider();\n+        dbHelper.setOutcomeTableProvider(outcomeTableProvider);\n+        // 4. Opening the DB will auto trigger the update.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f519c02fac286dcddc175b78ee3c7505f7cd7185"}, "originalPosition": 384}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODI5NjUwMA==", "bodyText": "Where does the V8 update happen?", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/1053#discussion_r438296500", "createdAt": "2020-06-10T17:35:24Z", "author": {"login": "mikechoch"}, "path": "OneSignalSDK/unittest/src/test/java/com/test/onesignal/DatabaseRunner.java", "diffHunk": "@@ -419,15 +406,11 @@ public void shouldUpgradeDbFromV7ToV8CacheUniqueOutcomeTable() throws JSONExcept\n     }\n \n     @Test\n-    public void shouldUpgradeDbFromV7ToV8OutcomesTable() throws JSONException {\n+    public void shouldUpgradeDbFromV7ToV8OutcomesTable() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f519c02fac286dcddc175b78ee3c7505f7cd7185"}, "originalPosition": 193}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODI5NjcwNw==", "bodyText": "Where does the V8 update happen?", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/1053#discussion_r438296707", "createdAt": "2020-06-10T17:35:44Z", "author": {"login": "mikechoch"}, "path": "OneSignalSDK/unittest/src/test/java/com/test/onesignal/DatabaseRunner.java", "diffHunk": "@@ -362,12 +353,8 @@ public void shouldUpgradeDbFromV6ToV7() throws JSONException {\n     public void shouldUpgradeDbFromV7ToV8CacheUniqueOutcomeTable() throws JSONException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f519c02fac286dcddc175b78ee3c7505f7cd7185"}, "originalPosition": 166}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODI5NzM5MA==", "bodyText": "Just want to make sure its clear when the update occurs and this should probably be marked as a step for other UnitTests that it is not very clear.", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/1053#discussion_r438297390", "createdAt": "2020-06-10T17:36:53Z", "author": {"login": "mikechoch"}, "path": "OneSignalSDK/unittest/src/test/java/com/test/onesignal/DatabaseRunner.java", "diffHunk": "@@ -419,15 +406,11 @@ public void shouldUpgradeDbFromV7ToV8CacheUniqueOutcomeTable() throws JSONExcept\n     }\n \n     @Test\n-    public void shouldUpgradeDbFromV7ToV8OutcomesTable() throws JSONException {\n+    public void shouldUpgradeDbFromV7ToV8OutcomesTable() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODI5NjUwMA=="}, "originalCommit": {"oid": "f519c02fac286dcddc175b78ee3c7505f7cd7185"}, "originalPosition": 193}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d437ed2ccaab42b3ac240a54c4595dc8ccbed895", "author": {"user": {"login": "Jeasmine", "name": "JNahui"}}, "url": "https://github.com/OneSignal/OneSignal-Android-SDK/commit/d437ed2ccaab42b3ac240a54c4595dc8ccbed895", "committedDate": "2020-06-10T17:36:57Z", "message": "Fix IAM tracking DB migration\n\n   * Fix migration from 4 to 5, keep old SQL query to continue with v8 migration correctly"}, "afterCommit": {"oid": "640114b1bbf1bfd93f8b9629a71c387d7d99707a", "author": {"user": {"login": "Jeasmine", "name": "JNahui"}}, "url": "https://github.com/OneSignal/OneSignal-Android-SDK/commit/640114b1bbf1bfd93f8b9629a71c387d7d99707a", "committedDate": "2020-06-10T17:39:34Z", "message": "Fix IAM tracking DB migration\n\n   * Fix migration from 4 to 5, keep old SQL query to continue with v8 migration correctly"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "640114b1bbf1bfd93f8b9629a71c387d7d99707a", "author": {"user": {"login": "Jeasmine", "name": "JNahui"}}, "url": "https://github.com/OneSignal/OneSignal-Android-SDK/commit/640114b1bbf1bfd93f8b9629a71c387d7d99707a", "committedDate": "2020-06-10T17:39:34Z", "message": "Fix IAM tracking DB migration\n\n   * Fix migration from 4 to 5, keep old SQL query to continue with v8 migration correctly"}, "afterCommit": {"oid": "91ee414832a1e8eb851d3ca2d5483331fd44e674", "author": {"user": {"login": "Jeasmine", "name": "JNahui"}}, "url": "https://github.com/OneSignal/OneSignal-Android-SDK/commit/91ee414832a1e8eb851d3ca2d5483331fd44e674", "committedDate": "2020-06-10T17:54:07Z", "message": "Fix IAM tracking DB migration\n\n   * Fix migration from 4 to 5, keep old SQL query to continue with v8 migration correctly"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI4MzQyNDgz", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/1053#pullrequestreview-428342483", "createdAt": "2020-06-10T18:56:54Z", "commit": {"oid": "91ee414832a1e8eb851d3ca2d5483331fd44e674"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxODo1Njo1NFrOGiCTbw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxOToxMDoyNVrOGiCuYg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODM0MjUxMQ==", "bodyText": "OutcomeEventsTable.COLUMN_NAME_SESSION+ needs a space\nOutcomeEventsTable.COLUMN_NAME_SESSION +", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/1053#discussion_r438342511", "createdAt": "2020-06-10T18:56:54Z", "author": {"login": "mikechoch"}, "path": "OneSignalSDK/onesignal/src/main/java/com/onesignal/outcomes/OSOutcomeTableProvider.java", "diffHunk": "@@ -33,14 +55,54 @@\n                     OutcomeEventsTable.COLUMN_NAME_WEIGHT + FLOAT_TYPE + // New in v5, missing migration added in v6\n                     \");\";\n \n-    private static final String SQL_CREATE_UNIQUE_OUTCOME_ENTRIES =\n-            \"CREATE TABLE \" + CachedUniqueOutcomeTable.TABLE_NAME + \" (\" +\n+    public static final String SQL_CREATE_UNIQUE_OUTCOME_ENTRIES_V1 =\n+            \"CREATE TABLE \" + CachedUniqueOutcomeTable.TABLE_NAME_V1 + \" (\" +\n+                    CachedUniqueOutcomeTable._ID + INTEGER_PRIMARY_KEY_TYPE + \",\" +\n+                    CachedUniqueOutcomeTable.COLUMN_NAME_NOTIFICATION_ID + TEXT_TYPE + \",\" +\n+                    CachedUniqueOutcomeTable.COLUMN_NAME_NAME + TEXT_TYPE +\n+                    \");\";\n+\n+\n+    public static final String SQL_CREATE_UNIQUE_OUTCOME_ENTRIES_V2 =\n+            \"CREATE TABLE \" + CachedUniqueOutcomeTable.TABLE_NAME_V2 + \" (\" +\n                     CachedUniqueOutcomeTable._ID + INTEGER_PRIMARY_KEY_TYPE + \",\" +\n                     CachedUniqueOutcomeTable.COLUMN_CHANNEL_INFLUENCE_ID + TEXT_TYPE + \",\" +\n                     CachedUniqueOutcomeTable.COLUMN_CHANNEL_TYPE + TEXT_TYPE + \",\" +\n                     CachedUniqueOutcomeTable.COLUMN_NAME_NAME + TEXT_TYPE +\n                     \");\";\n \n+    /**\n+     * On the outcome table this adds the new weight column and drops params column.\n+     */\n+    public void upgradeOutcomeTableRevision1To2(SQLiteDatabase db) {\n+        String commonColumns = OutcomeEventsTable._ID + \",\" +\n+                OutcomeEventsTable.COLUMN_NAME_SESSION+ \",\" +", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "91ee414832a1e8eb851d3ca2d5483331fd44e674"}, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODM0OTQxMA==", "bodyText": "I see that V7 is set for the DB version, but when does it transition to the V8 DB version in this UnitTest?", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/1053#discussion_r438349410", "createdAt": "2020-06-10T19:10:25Z", "author": {"login": "mikechoch"}, "path": "OneSignalSDK/unittest/src/test/java/com/test/onesignal/DatabaseRunner.java", "diffHunk": "@@ -419,15 +406,11 @@ public void shouldUpgradeDbFromV7ToV8CacheUniqueOutcomeTable() throws JSONExcept\n     }\n \n     @Test\n-    public void shouldUpgradeDbFromV7ToV8OutcomesTable() throws JSONException {\n+    public void shouldUpgradeDbFromV7ToV8OutcomesTable() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODI5NjUwMA=="}, "originalCommit": {"oid": "f519c02fac286dcddc175b78ee3c7505f7cd7185"}, "originalPosition": 193}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI4Mzc4Mjk3", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/1053#pullrequestreview-428378297", "createdAt": "2020-06-10T19:50:43Z", "commit": {"oid": "91ee414832a1e8eb851d3ca2d5483331fd44e674"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxOTo1MDo0M1rOGiD__g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQyMDowODo0NVrOGiEj_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODM3MDMwMg==", "bodyText": "Keep version 8 for this PR.", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/1053#discussion_r438370302", "createdAt": "2020-06-10T19:50:43Z", "author": {"login": "jkasten2"}, "path": "OneSignalSDK/onesignal/src/main/java/com/onesignal/OneSignalDbHelper.java", "diffHunk": "@@ -43,8 +43,13 @@\n import java.util.ArrayList;\n import java.util.List;\n \n+import static com.onesignal.outcomes.OSOutcomeTableProvider.SQL_CREATE_OUTCOME_ENTRIES_V1;\n+import static com.onesignal.outcomes.OSOutcomeTableProvider.SQL_CREATE_OUTCOME_ENTRIES_V3;\n+import static com.onesignal.outcomes.OSOutcomeTableProvider.SQL_CREATE_UNIQUE_OUTCOME_ENTRIES_V1;\n+import static com.onesignal.outcomes.OSOutcomeTableProvider.SQL_CREATE_UNIQUE_OUTCOME_ENTRIES_V2;\n+\n class OneSignalDbHelper extends SQLiteOpenHelper implements OneSignalDb {\n-   static final int DATABASE_VERSION = 8;\n+   static final int DATABASE_VERSION = 9;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "91ee414832a1e8eb851d3ca2d5483331fd44e674"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODM3MzI4Ng==", "bodyText": "Let's add a line after this one with:\nstatic final String TABLE_NAME  = TABLE_NAME_V2\nThis way any non-migration code can just refer to TABLE_NAME and don't have to think about V2 for coding read / writing to the table.", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/1053#discussion_r438373286", "createdAt": "2020-06-10T19:56:22Z", "author": {"login": "jkasten2"}, "path": "OneSignalSDK/onesignal/src/main/java/com/onesignal/outcomes/OSOutcomesDbContract.java", "diffHunk": "@@ -5,26 +5,27 @@\n class OSOutcomesDbContract {\n \n     public static class OutcomeEventsTable implements BaseColumns {\n-        static final String TABLE_NAME = \"outcome\";\n+        static final String TABLE_NAME = \"outcome\"; // Added on DB v4 SDK v3.12.0\n         // Influence ids\n-        static final String COLUMN_NAME_NOTIFICATION_IDS = \"notification_ids\"; // OneSignal Notification Ids\n-        static final String COLUMN_NAME_IAM_IDS = \"iam_ids\"; // OneSignal iam Ids\n+        static final String COLUMN_NAME_NOTIFICATION_IDS = \"notification_ids\"; // Added on DB v4 SDK v3.12.0\n+        static final String COLUMN_NAME_IAM_IDS = \"iam_ids\"; // Added on DB v8 SDK v3.14.0\n         // Influence type\n-        static final String COLUMN_NAME_SESSION = \"session\"; // Old column name\n-        static final String COLUMN_NAME_NOTIFICATION_INFLUENCE_TYPE = \"notification_influence_type\";\n-        static final String COLUMN_NAME_IAM_INFLUENCE_TYPE = \"iam_influence_type\";\n+        static final String COLUMN_NAME_SESSION = \"session\"; // Added on DB v4 SDK v3.12.0 replaced with notification_influence_type on DB v8 SDK v3.14.0\n+        static final String COLUMN_NAME_NOTIFICATION_INFLUENCE_TYPE = \"notification_influence_type\"; // Added on DB v8 SDK v3.14.0\n+        static final String COLUMN_NAME_IAM_INFLUENCE_TYPE = \"iam_influence_type\"; // Added on DB v8 SDK v3.14.0\n         // Outcome data\n-        static final String COLUMN_NAME_NAME = \"name\";\n-        static final String COLUMN_NAME_WEIGHT = \"weight\";\n-        static final String COLUMN_NAME_TIMESTAMP = \"timestamp\";\n+        static final String COLUMN_NAME_NAME = \"name\"; // Added on DB v4 SDK v3.12.0\n+        static final String COLUMN_NAME_WEIGHT = \"weight\"; // Added on DB v5 SDK v3.12.1, migration added on DB v6 SDK v3.12.2\n+        static final String COLUMN_NAME_TIMESTAMP = \"timestamp\"; // Added on DB v4 SDK v3.12.0\n+        static final String COLUMN_NAME_PARAMS = \"params\"; // Added on DB v4 SDK v3.12.0 replaced with weight on DB v5 SDK v3.12.1, migration added on DB v6 SDK v3.12.2\n     }\n \n     static class CachedUniqueOutcomeTable implements BaseColumns {\n-        static final String OLD_TABLE_NAME = \"cached_unique_outcome_notification\"; // Old table name\n-        static final String TABLE_NAME = \"cached_unique_outcome\";\n-        static final String COLUMN_NAME_NOTIFICATION_ID = \"notification_id\"; // Old column name\n-        static final String COLUMN_CHANNEL_INFLUENCE_ID = \"channel_influence_id\"; // OneSignal Channel influence Id\n-        static final String COLUMN_CHANNEL_TYPE = \"channel_type\"; // OneSignal Channel Type\n-        static final String COLUMN_NAME_NAME = \"name\";\n+        static final String TABLE_NAME_V1 = \"cached_unique_outcome_notification\"; // Added on DB v5 SDK v3.12.1 until DB v8 renamed with cached_unique_outcome SDK v3.14.0\n+        static final String TABLE_NAME_V2 = \"cached_unique_outcome\"; // Added on DB v8 SDK v3.14.0", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "91ee414832a1e8eb851d3ca2d5483331fd44e674"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODM3NTExMA==", "bodyText": "\ud83d\udc4d This is way better than my original idea of using V3 here as using V1! As this means we won't have to put early returns in upgradeOutcomeTableRevision1To2 checking for state or specific oldVersion numbers.", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/1053#discussion_r438375110", "createdAt": "2020-06-10T19:59:49Z", "author": {"login": "jkasten2"}, "path": "OneSignalSDK/onesignal/src/main/java/com/onesignal/OneSignalDbHelper.java", "diffHunk": "@@ -235,21 +240,21 @@ private static void upgradeToV3(SQLiteDatabase db) {\n    }\n \n    private static void upgradeToV4(SQLiteDatabase db) {\n-      safeExecSQL(db, outcomeTableProvider.getSqlCreateOutcomeEntries());\n+      safeExecSQL(db, SQL_CREATE_OUTCOME_ENTRIES_V1);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "91ee414832a1e8eb851d3ca2d5483331fd44e674"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODM3ODI1Mw==", "bodyText": "I think this part triggers the v8 upgrade.\nhttps://github.com/OneSignal/OneSignal-Android-SDK/pull/1053/files#diff-82b04d6862599af0e5c771f74cc112f2R395-R399", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/1053#discussion_r438378253", "createdAt": "2020-06-10T20:06:06Z", "author": {"login": "jkasten2"}, "path": "OneSignalSDK/unittest/src/test/java/com/test/onesignal/DatabaseRunner.java", "diffHunk": "@@ -362,12 +353,8 @@ public void shouldUpgradeDbFromV6ToV7() throws JSONException {\n     public void shouldUpgradeDbFromV7ToV8CacheUniqueOutcomeTable() throws JSONException {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODI5NjcwNw=="}, "originalCommit": {"oid": "f519c02fac286dcddc175b78ee3c7505f7cd7185"}, "originalPosition": 166}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODM3OTUxOA==", "bodyText": "Same, but I think restSetStaticFields will put it back to latest. Think it should be setting ShadowOneSignalDbHelper.DATABASE_VERSION = 8; instead", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/1053#discussion_r438379518", "createdAt": "2020-06-10T20:08:45Z", "author": {"login": "jkasten2"}, "path": "OneSignalSDK/unittest/src/test/java/com/test/onesignal/DatabaseRunner.java", "diffHunk": "@@ -419,15 +406,11 @@ public void shouldUpgradeDbFromV7ToV8CacheUniqueOutcomeTable() throws JSONExcept\n     }\n \n     @Test\n-    public void shouldUpgradeDbFromV7ToV8OutcomesTable() throws JSONException {\n+    public void shouldUpgradeDbFromV7ToV8OutcomesTable() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODI5NjUwMA=="}, "originalCommit": {"oid": "f519c02fac286dcddc175b78ee3c7505f7cd7185"}, "originalPosition": 193}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "91ee414832a1e8eb851d3ca2d5483331fd44e674", "author": {"user": {"login": "Jeasmine", "name": "JNahui"}}, "url": "https://github.com/OneSignal/OneSignal-Android-SDK/commit/91ee414832a1e8eb851d3ca2d5483331fd44e674", "committedDate": "2020-06-10T17:54:07Z", "message": "Fix IAM tracking DB migration\n\n   * Fix migration from 4 to 5, keep old SQL query to continue with v8 migration correctly"}, "afterCommit": {"oid": "82bb35362af25c19265a0a0a920404447700df9a", "author": {"user": {"login": "Jeasmine", "name": "JNahui"}}, "url": "https://github.com/OneSignal/OneSignal-Android-SDK/commit/82bb35362af25c19265a0a0a920404447700df9a", "committedDate": "2020-06-10T21:51:08Z", "message": "Fix IAM tracking DB migration\n\n   * Fix migration from 4 to 5, keep old SQL query to continue with v8 migration correctly"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "19bf0a1d58de435be7f2eacf794a938eee37d67a", "author": {"user": {"login": "Jeasmine", "name": "JNahui"}}, "url": "https://github.com/OneSignal/OneSignal-Android-SDK/commit/19bf0a1d58de435be7f2eacf794a938eee37d67a", "committedDate": "2020-06-10T23:21:37Z", "message": "Fix IAM tracking DB migration\n\n   * Fix migration from 4 to 5, keep old SQL query to continue with v8 migration correctly"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "82bb35362af25c19265a0a0a920404447700df9a", "author": {"user": {"login": "Jeasmine", "name": "JNahui"}}, "url": "https://github.com/OneSignal/OneSignal-Android-SDK/commit/82bb35362af25c19265a0a0a920404447700df9a", "committedDate": "2020-06-10T21:51:08Z", "message": "Fix IAM tracking DB migration\n\n   * Fix migration from 4 to 5, keep old SQL query to continue with v8 migration correctly"}, "afterCommit": {"oid": "19bf0a1d58de435be7f2eacf794a938eee37d67a", "author": {"user": {"login": "Jeasmine", "name": "JNahui"}}, "url": "https://github.com/OneSignal/OneSignal-Android-SDK/commit/19bf0a1d58de435be7f2eacf794a938eee37d67a", "committedDate": "2020-06-10T23:21:37Z", "message": "Fix IAM tracking DB migration\n\n   * Fix migration from 4 to 5, keep old SQL query to continue with v8 migration correctly"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI4NTU0ODY2", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/1053#pullrequestreview-428554866", "createdAt": "2020-06-11T02:42:23Z", "commit": {"oid": "19bf0a1d58de435be7f2eacf794a938eee37d67a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI4NTU5MDEx", "url": "https://github.com/OneSignal/OneSignal-Android-SDK/pull/1053#pullrequestreview-428559011", "createdAt": "2020-06-11T02:56:30Z", "commit": {"oid": "19bf0a1d58de435be7f2eacf794a938eee37d67a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3599, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}