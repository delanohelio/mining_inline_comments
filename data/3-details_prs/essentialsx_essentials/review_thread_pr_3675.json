{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg3NjA2NDAy", "number": 3675, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxMzozMjozOVrOEvUMtQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxMzozOTowNVrOEvUYpA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4MDQ5NDYxOnYy", "diffSide": "RIGHT", "path": "Essentials/src/com/earth2me/essentials/Essentials.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxMzozMjozOVrOHkOhoQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxMzozMjozOVrOHkOhoQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzc0ODc2OQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            import net.ess3.provider.KnownCommandsProvider;\n          \n          \n            \n            import net.ess3.provider.ContainerProvider;\n          \n          \n            \n            import net.ess3.provider.KnownCommandsProvider;\n          \n      \n    \n    \n  \n\nOops", "url": "https://github.com/EssentialsX/Essentials/pull/3675#discussion_r507748769", "createdAt": "2020-10-19T13:32:39Z", "author": {"login": "mdcfe"}, "path": "Essentials/src/com/earth2me/essentials/Essentials.java", "diffHunk": "@@ -44,10 +44,11 @@\n import net.ess3.api.IItemDb;\n import net.ess3.api.IJails;\n import net.ess3.api.ISettings;\n+import net.ess3.nms.refl.providers.ReflKnownCommandsProvider;\n import net.ess3.nms.refl.providers.ReflServerStateProvider;\n import net.ess3.nms.refl.providers.ReflSpawnEggProvider;\n import net.ess3.nms.refl.providers.ReflSpawnerBlockProvider;\n-import net.ess3.provider.ContainerProvider;\n+import net.ess3.provider.KnownCommandsProvider;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d22f3cc14eb4d7836b2ae2c2fb89548a68ce13d7"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4MDQ5NjYwOnYy", "diffSide": "RIGHT", "path": "Essentials/src/com/earth2me/essentials/IEssentials.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxMzozMzowMVrOHkOizA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxMzozMzowMVrOHkOizA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzc0OTA2OA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            import net.ess3.provider.KnownCommandsProvider;\n          \n          \n            \n            import net.ess3.provider.ContainerProvider;\n          \n          \n            \n            import net.ess3.provider.ContainerProvider;\n          \n          \n            \n            import net.ess3.provider.KnownCommandsProvider;", "url": "https://github.com/EssentialsX/Essentials/pull/3675#discussion_r507749068", "createdAt": "2020-10-19T13:33:01Z", "author": {"login": "mdcfe"}, "path": "Essentials/src/com/earth2me/essentials/IEssentials.java", "diffHunk": "@@ -4,6 +4,7 @@\n import com.earth2me.essentials.api.IJails;\n import com.earth2me.essentials.api.IWarps;\n import com.earth2me.essentials.perm.PermissionsHandler;\n+import net.ess3.provider.KnownCommandsProvider;\n import net.ess3.provider.ContainerProvider;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d22f3cc14eb4d7836b2ae2c2fb89548a68ce13d7"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4MDUxMTc2OnYy", "diffSide": "RIGHT", "path": "providers/NMSReflectionProvider/src/net/ess3/nms/refl/providers/ReflKnownCommandsProvider.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxMzozNjoxMVrOHkOsBw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxMzozNjoxMVrOHkOsBw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzc1MTQzMQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \n          \n      \n    \n    \n  \n\nMake Checkstyle happy", "url": "https://github.com/EssentialsX/Essentials/pull/3675#discussion_r507751431", "createdAt": "2020-10-19T13:36:11Z", "author": {"login": "mdcfe"}, "path": "providers/NMSReflectionProvider/src/net/ess3/nms/refl/providers/ReflKnownCommandsProvider.java", "diffHunk": "@@ -0,0 +1,49 @@\n+package net.ess3.nms.refl.providers;\n+\n+import net.ess3.nms.refl.ReflUtil;\n+import net.ess3.provider.KnownCommandsProvider;\n+import org.bukkit.Bukkit;\n+import org.bukkit.Server;\n+import org.bukkit.command.Command;\n+import org.bukkit.command.SimpleCommandMap;\n+\n+import java.lang.reflect.Field;\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+public class ReflKnownCommandsProvider implements KnownCommandsProvider {\n+    private final Map<String, Command> knownCommands;\n+\n+    public ReflKnownCommandsProvider() {\n+        Map<String, Command> knownCommands = new HashMap<>();\n+        try {\n+            @SuppressWarnings(\"unchecked\")\n+            final Class<? extends Server> craftServerClass = (Class<? extends Server>) ReflUtil.getOBCClass(\"CraftServer\");\n+            if (craftServerClass != null) {\n+                final Field commandMapField = ReflUtil.getFieldCached(craftServerClass, \"commandMap\");\n+                if (commandMapField != null) {\n+                    final SimpleCommandMap simpleCommandMap = (SimpleCommandMap) commandMapField.get(Bukkit.getServer());\n+                    final Field knownCommandsField = ReflUtil.getFieldCached(SimpleCommandMap.class, \"knownCommands\");\n+                    if (knownCommandsField != null) {\n+                        knownCommands = (Map<String, Command>) knownCommandsField.get(simpleCommandMap);\n+                    }\n+                }\n+            }\n+        } catch (final Exception exception)  {\n+            exception.printStackTrace();\n+        } finally {\n+            this.knownCommands = knownCommands;\n+        }\n+    }\n+\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6a9f31bd9ba9305d6ea3b632fde7e640fc29b77a"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4MDUxMzcwOnYy", "diffSide": "RIGHT", "path": "providers/NMSReflectionProvider/src/net/ess3/nms/refl/providers/ReflKnownCommandsProvider.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxMzozNjozOFrOHkOtOw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxMzozNjozOFrOHkOtOw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzc1MTczOQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    } catch (final Exception exception)  {\n          \n          \n            \n                    } catch (final Exception exception) {\n          \n      \n    \n    \n  \n\nMake Checkstyle happier", "url": "https://github.com/EssentialsX/Essentials/pull/3675#discussion_r507751739", "createdAt": "2020-10-19T13:36:38Z", "author": {"login": "mdcfe"}, "path": "providers/NMSReflectionProvider/src/net/ess3/nms/refl/providers/ReflKnownCommandsProvider.java", "diffHunk": "@@ -0,0 +1,49 @@\n+package net.ess3.nms.refl.providers;\n+\n+import net.ess3.nms.refl.ReflUtil;\n+import net.ess3.provider.KnownCommandsProvider;\n+import org.bukkit.Bukkit;\n+import org.bukkit.Server;\n+import org.bukkit.command.Command;\n+import org.bukkit.command.SimpleCommandMap;\n+\n+import java.lang.reflect.Field;\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+public class ReflKnownCommandsProvider implements KnownCommandsProvider {\n+    private final Map<String, Command> knownCommands;\n+\n+    public ReflKnownCommandsProvider() {\n+        Map<String, Command> knownCommands = new HashMap<>();\n+        try {\n+            @SuppressWarnings(\"unchecked\")\n+            final Class<? extends Server> craftServerClass = (Class<? extends Server>) ReflUtil.getOBCClass(\"CraftServer\");\n+            if (craftServerClass != null) {\n+                final Field commandMapField = ReflUtil.getFieldCached(craftServerClass, \"commandMap\");\n+                if (commandMapField != null) {\n+                    final SimpleCommandMap simpleCommandMap = (SimpleCommandMap) commandMapField.get(Bukkit.getServer());\n+                    final Field knownCommandsField = ReflUtil.getFieldCached(SimpleCommandMap.class, \"knownCommands\");\n+                    if (knownCommandsField != null) {\n+                        knownCommands = (Map<String, Command>) knownCommandsField.get(simpleCommandMap);\n+                    }\n+                }\n+            }\n+        } catch (final Exception exception)  {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6a9f31bd9ba9305d6ea3b632fde7e640fc29b77a"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4MDUyNTE2OnYy", "diffSide": "RIGHT", "path": "providers/NMSReflectionProvider/src/net/ess3/nms/refl/providers/ReflKnownCommandsProvider.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxMzozOTowNVrOHkO0Uw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxMzozOTowNVrOHkO0Uw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzc1MzU1NQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                @Override\n          \n          \n            \n            \n          \n          \n            \n                @Override\n          \n      \n    \n    \n  \n\ngithub pls", "url": "https://github.com/EssentialsX/Essentials/pull/3675#discussion_r507753555", "createdAt": "2020-10-19T13:39:05Z", "author": {"login": "mdcfe"}, "path": "providers/NMSReflectionProvider/src/net/ess3/nms/refl/providers/ReflKnownCommandsProvider.java", "diffHunk": "@@ -0,0 +1,47 @@\n+package net.ess3.nms.refl.providers;\n+\n+import net.ess3.nms.refl.ReflUtil;\n+import net.ess3.provider.KnownCommandsProvider;\n+import org.bukkit.Bukkit;\n+import org.bukkit.Server;\n+import org.bukkit.command.Command;\n+import org.bukkit.command.SimpleCommandMap;\n+\n+import java.lang.reflect.Field;\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+public class ReflKnownCommandsProvider implements KnownCommandsProvider {\n+    private final Map<String, Command> knownCommands;\n+\n+    public ReflKnownCommandsProvider() {\n+        Map<String, Command> knownCommands = new HashMap<>();\n+        try {\n+            @SuppressWarnings(\"unchecked\")\n+            final Class<? extends Server> craftServerClass = (Class<? extends Server>) ReflUtil.getOBCClass(\"CraftServer\");\n+            if (craftServerClass != null) {\n+                final Field commandMapField = ReflUtil.getFieldCached(craftServerClass, \"commandMap\");\n+                if (commandMapField != null) {\n+                    final SimpleCommandMap simpleCommandMap = (SimpleCommandMap) commandMapField.get(Bukkit.getServer());\n+                    final Field knownCommandsField = ReflUtil.getFieldCached(SimpleCommandMap.class, \"knownCommands\");\n+                    if (knownCommandsField != null) {\n+                        knownCommands = (Map<String, Command>) knownCommandsField.get(simpleCommandMap);\n+                    }\n+                }\n+            }\n+        } catch (final Exception exception) {\n+            exception.printStackTrace();\n+        } finally {\n+            this.knownCommands = knownCommands;\n+        }\n+    }\n+    @Override", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4dfd0f1626b7287e05fa0b92947f104c280c2289"}, "originalPosition": 38}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4630, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}