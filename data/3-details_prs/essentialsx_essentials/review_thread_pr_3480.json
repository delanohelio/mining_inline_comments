{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ3MjAwNTAx", "number": 3480, "reviewThreads": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMVQwMjowNDoxNlrOENdT1Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMVQwMjoxMjozMFrOENdWXQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNTQ3MTU3OnYy", "diffSide": "RIGHT", "path": "Essentials/src/com/earth2me/essentials/RandomTeleport.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMVQwMjowNDoxNlrOGwJlmA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMVQwMjowNDoxNlrOGwJlmA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzE0MTkxMg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    double[] offset = getRandXySquare(minRange, maxRange);\n          \n          \n            \n                    double[] offsets = getOffsets(minRange, maxRange);\n          \n      \n    \n    \n  \n\nMight be a better name?", "url": "https://github.com/EssentialsX/Essentials/pull/3480#discussion_r453141912", "createdAt": "2020-07-11T02:04:16Z", "author": {"login": "pop4959"}, "path": "Essentials/src/com/earth2me/essentials/RandomTeleport.java", "diffHunk": "@@ -155,12 +155,12 @@ public void cacheRandomLocations(Location center, double minRange, double maxRan\n     // Calculates a random location asynchronously.\n     private CompletableFuture<Location> calculateRandomLocation(Location center, double minRange, double maxRange) {\n         CompletableFuture<Location> future = new CompletableFuture<>();\n-        final int dx = RANDOM.nextBoolean() ? 1 : -1, dz = RANDOM.nextBoolean() ? 1 : -1;\n+        double[] offset = getRandXySquare(minRange, maxRange);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "02e342716ccc33a530511b17ab6e7d3464ac96d5"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNTQ3MTk3OnYy", "diffSide": "RIGHT", "path": "Essentials/src/com/earth2me/essentials/RandomTeleport.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMVQwMjowNDozNFrOGwJlxw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMVQwMjowNDozNFrOGwJlxw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzE0MTk1OQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            center.getX() + offset[0],\n          \n          \n            \n                            center.getX() + offsets[0],", "url": "https://github.com/EssentialsX/Essentials/pull/3480#discussion_r453141959", "createdAt": "2020-07-11T02:04:34Z", "author": {"login": "pop4959"}, "path": "Essentials/src/com/earth2me/essentials/RandomTeleport.java", "diffHunk": "@@ -155,12 +155,12 @@ public void cacheRandomLocations(Location center, double minRange, double maxRan\n     // Calculates a random location asynchronously.\n     private CompletableFuture<Location> calculateRandomLocation(Location center, double minRange, double maxRange) {\n         CompletableFuture<Location> future = new CompletableFuture<>();\n-        final int dx = RANDOM.nextBoolean() ? 1 : -1, dz = RANDOM.nextBoolean() ? 1 : -1;\n+        double[] offset = getRandXySquare(minRange, maxRange);\n         Location location = new Location(\n                 center.getWorld(),\n-                center.getX() + dx * (minRange + RANDOM.nextDouble() * (maxRange - minRange)),\n+                center.getX() + offset[0],", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "02e342716ccc33a530511b17ab6e7d3464ac96d5"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNTQ3MTk5OnYy", "diffSide": "RIGHT", "path": "Essentials/src/com/earth2me/essentials/RandomTeleport.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMVQwMjowNDozNlrOGwJlyg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMVQwMjowNDozNlrOGwJlyg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzE0MTk2Mg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            center.getZ() + offset[1],\n          \n          \n            \n                            center.getZ() + offsets[1],", "url": "https://github.com/EssentialsX/Essentials/pull/3480#discussion_r453141962", "createdAt": "2020-07-11T02:04:36Z", "author": {"login": "pop4959"}, "path": "Essentials/src/com/earth2me/essentials/RandomTeleport.java", "diffHunk": "@@ -155,12 +155,12 @@ public void cacheRandomLocations(Location center, double minRange, double maxRan\n     // Calculates a random location asynchronously.\n     private CompletableFuture<Location> calculateRandomLocation(Location center, double minRange, double maxRange) {\n         CompletableFuture<Location> future = new CompletableFuture<>();\n-        final int dx = RANDOM.nextBoolean() ? 1 : -1, dz = RANDOM.nextBoolean() ? 1 : -1;\n+        double[] offset = getRandXySquare(minRange, maxRange);\n         Location location = new Location(\n                 center.getWorld(),\n-                center.getX() + dx * (minRange + RANDOM.nextDouble() * (maxRange - minRange)),\n+                center.getX() + offset[0],\n                 center.getWorld().getMaxHeight(),\n-                center.getZ() + dz * (minRange + RANDOM.nextDouble() * (maxRange - minRange)),\n+                center.getZ() + offset[1],", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "02e342716ccc33a530511b17ab6e7d3464ac96d5"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNTQ3MjEzOnYy", "diffSide": "RIGHT", "path": "Essentials/src/com/earth2me/essentials/RandomTeleport.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMVQwMjowNDo1NVrOGwJl3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMVQwMjowNDo1NVrOGwJl3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzE0MTk4MQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private double[] getRandXySquare(double minRange, double maxRange) {\n          \n          \n            \n                private double[] getOffsets(double minRange, double maxRange) {", "url": "https://github.com/EssentialsX/Essentials/pull/3480#discussion_r453141981", "createdAt": "2020-07-11T02:04:55Z", "author": {"login": "pop4959"}, "path": "Essentials/src/com/earth2me/essentials/RandomTeleport.java", "diffHunk": "@@ -175,6 +175,36 @@ public void cacheRandomLocations(Location center, double minRange, double maxRan\n         return future;\n     }\n \n+    /**\n+     * Returns an int array of length 2, representing a random coordinate pair that is both inside the square\n+     * <pre>{@code x = maxRange * 2 and y = maxRange * 2 centered on (0,0)}</pre>\n+     * and also NOT inside the square\n+     * <pre>{@code x = minRange * 2 and y = minRange * 2 centered on (0,0)}</pre>\n+     * The points generated by this method are evenly distributed throughout the area.\n+     *\n+     * @param minRange The minimum that {@code |x|} or {@code |y|} will be.\n+     * @param maxRange The maximum that {@code |x|} or {@code |y|} will be.\n+     * @return A pair of numbers, each randomly generated, that satisfy the above conditions.\n+     */\n+    private double[] getRandXySquare(double minRange, double maxRange) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "02e342716ccc33a530511b17ab6e7d3464ac96d5"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNTQ3NDk0OnYy", "diffSide": "RIGHT", "path": "Essentials/src/com/earth2me/essentials/RandomTeleport.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMVQwMjowODoxMVrOGwJnLw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMVQwMjowODoxMVrOGwJnLw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzE0MjMxOQ==", "bodyText": "The rest of this file doesn't really have javadocs, and none of it is really API. If you can match the code style and turn this into a simple line (or multi-line) comment explaining what it does that would be cool. Otherwise we might want to think about adding javadocs to everything else here. \ud83d\ude1b", "url": "https://github.com/EssentialsX/Essentials/pull/3480#discussion_r453142319", "createdAt": "2020-07-11T02:08:11Z", "author": {"login": "pop4959"}, "path": "Essentials/src/com/earth2me/essentials/RandomTeleport.java", "diffHunk": "@@ -175,6 +175,36 @@ public void cacheRandomLocations(Location center, double minRange, double maxRan\n         return future;\n     }\n \n+    /**\n+     * Returns an int array of length 2, representing a random coordinate pair that is both inside the square\n+     * <pre>{@code x = maxRange * 2 and y = maxRange * 2 centered on (0,0)}</pre>\n+     * and also NOT inside the square\n+     * <pre>{@code x = minRange * 2 and y = minRange * 2 centered on (0,0)}</pre>\n+     * The points generated by this method are evenly distributed throughout the area.\n+     *\n+     * @param minRange The minimum that {@code |x|} or {@code |y|} will be.\n+     * @param maxRange The maximum that {@code |x|} or {@code |y|} will be.\n+     * @return A pair of numbers, each randomly generated, that satisfy the above conditions.\n+     */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "02e342716ccc33a530511b17ab6e7d3464ac96d5"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNTQ3NzM4OnYy", "diffSide": "RIGHT", "path": "Essentials/src/com/earth2me/essentials/RandomTeleport.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMVQwMjoxMToyM1rOGwJoSw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMVQwMjoxMToyM1rOGwJoSw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzE0MjYwMw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    switch ((int) (RANDOM.nextDouble() * 4)) {\n          \n          \n            \n                    switch (RANDOM.nextInt(4)) {", "url": "https://github.com/EssentialsX/Essentials/pull/3480#discussion_r453142603", "createdAt": "2020-07-11T02:11:23Z", "author": {"login": "pop4959"}, "path": "Essentials/src/com/earth2me/essentials/RandomTeleport.java", "diffHunk": "@@ -175,6 +175,36 @@ public void cacheRandomLocations(Location center, double minRange, double maxRan\n         return future;\n     }\n \n+    /**\n+     * Returns an int array of length 2, representing a random coordinate pair that is both inside the square\n+     * <pre>{@code x = maxRange * 2 and y = maxRange * 2 centered on (0,0)}</pre>\n+     * and also NOT inside the square\n+     * <pre>{@code x = minRange * 2 and y = minRange * 2 centered on (0,0)}</pre>\n+     * The points generated by this method are evenly distributed throughout the area.\n+     *\n+     * @param minRange The minimum that {@code |x|} or {@code |y|} will be.\n+     * @param maxRange The maximum that {@code |x|} or {@code |y|} will be.\n+     * @return A pair of numbers, each randomly generated, that satisfy the above conditions.\n+     */\n+    private double[] getRandXySquare(double minRange, double maxRange) {\n+        double[] randPairAtSize = new double[]{\n+                RANDOM.nextDouble() * (maxRange - minRange) + minRange,\n+                RANDOM.nextDouble() * (maxRange + minRange) - minRange};\n+        switch ((int) (RANDOM.nextDouble() * 4)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "02e342716ccc33a530511b17ab6e7d3464ac96d5"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNTQ3NzgyOnYy", "diffSide": "RIGHT", "path": "Essentials/src/com/earth2me/essentials/RandomTeleport.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMVQwMjoxMjowNVrOGwJohA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMVQwMjoxNDoxMVrOGwJpMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzE0MjY2MA==", "bodyText": "Why not just case 1,2,3 and default? Default can catch 0 and any impossible case.", "url": "https://github.com/EssentialsX/Essentials/pull/3480#discussion_r453142660", "createdAt": "2020-07-11T02:12:05Z", "author": {"login": "pop4959"}, "path": "Essentials/src/com/earth2me/essentials/RandomTeleport.java", "diffHunk": "@@ -175,6 +175,36 @@ public void cacheRandomLocations(Location center, double minRange, double maxRan\n         return future;\n     }\n \n+    /**\n+     * Returns an int array of length 2, representing a random coordinate pair that is both inside the square\n+     * <pre>{@code x = maxRange * 2 and y = maxRange * 2 centered on (0,0)}</pre>\n+     * and also NOT inside the square\n+     * <pre>{@code x = minRange * 2 and y = minRange * 2 centered on (0,0)}</pre>\n+     * The points generated by this method are evenly distributed throughout the area.\n+     *\n+     * @param minRange The minimum that {@code |x|} or {@code |y|} will be.\n+     * @param maxRange The maximum that {@code |x|} or {@code |y|} will be.\n+     * @return A pair of numbers, each randomly generated, that satisfy the above conditions.\n+     */\n+    private double[] getRandXySquare(double minRange, double maxRange) {\n+        double[] randPairAtSize = new double[]{\n+                RANDOM.nextDouble() * (maxRange - minRange) + minRange,\n+                RANDOM.nextDouble() * (maxRange + minRange) - minRange};\n+        switch ((int) (RANDOM.nextDouble() * 4)) {\n+            case 0:\n+                return randPairAtSize;\n+            case 1:\n+                return new double[]{-randPairAtSize[1], randPairAtSize[0]};\n+            case 2:\n+                return new double[]{-randPairAtSize[0], -randPairAtSize[1]};\n+            case 3:\n+                return new double[]{randPairAtSize[1], -randPairAtSize[0]};\n+        }\n+        //This line will never be reached as the random number in the switch will ALWAYS be in the range 0-3 inclusive.\n+        return new double[]{0, 0};", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "02e342716ccc33a530511b17ab6e7d3464ac96d5"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzE0MjgzMg==", "bodyText": "Oh true, I like that", "url": "https://github.com/EssentialsX/Essentials/pull/3480#discussion_r453142832", "createdAt": "2020-07-11T02:14:11Z", "author": {"login": "donvi-bz"}, "path": "Essentials/src/com/earth2me/essentials/RandomTeleport.java", "diffHunk": "@@ -175,6 +175,36 @@ public void cacheRandomLocations(Location center, double minRange, double maxRan\n         return future;\n     }\n \n+    /**\n+     * Returns an int array of length 2, representing a random coordinate pair that is both inside the square\n+     * <pre>{@code x = maxRange * 2 and y = maxRange * 2 centered on (0,0)}</pre>\n+     * and also NOT inside the square\n+     * <pre>{@code x = minRange * 2 and y = minRange * 2 centered on (0,0)}</pre>\n+     * The points generated by this method are evenly distributed throughout the area.\n+     *\n+     * @param minRange The minimum that {@code |x|} or {@code |y|} will be.\n+     * @param maxRange The maximum that {@code |x|} or {@code |y|} will be.\n+     * @return A pair of numbers, each randomly generated, that satisfy the above conditions.\n+     */\n+    private double[] getRandXySquare(double minRange, double maxRange) {\n+        double[] randPairAtSize = new double[]{\n+                RANDOM.nextDouble() * (maxRange - minRange) + minRange,\n+                RANDOM.nextDouble() * (maxRange + minRange) - minRange};\n+        switch ((int) (RANDOM.nextDouble() * 4)) {\n+            case 0:\n+                return randPairAtSize;\n+            case 1:\n+                return new double[]{-randPairAtSize[1], randPairAtSize[0]};\n+            case 2:\n+                return new double[]{-randPairAtSize[0], -randPairAtSize[1]};\n+            case 3:\n+                return new double[]{randPairAtSize[1], -randPairAtSize[0]};\n+        }\n+        //This line will never be reached as the random number in the switch will ALWAYS be in the range 0-3 inclusive.\n+        return new double[]{0, 0};", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzE0MjY2MA=="}, "originalCommit": {"oid": "02e342716ccc33a530511b17ab6e7d3464ac96d5"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNTQ3ODA1OnYy", "diffSide": "RIGHT", "path": "Essentials/src/com/earth2me/essentials/RandomTeleport.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMVQwMjoxMjozMFrOGwJonw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMVQwMjoxMjozMFrOGwJonw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzE0MjY4Nw==", "bodyText": "There's an extra newline here that shouldn't be here \ud83d\ude09", "url": "https://github.com/EssentialsX/Essentials/pull/3480#discussion_r453142687", "createdAt": "2020-07-11T02:12:30Z", "author": {"login": "pop4959"}, "path": "Essentials/src/com/earth2me/essentials/RandomTeleport.java", "diffHunk": "@@ -175,6 +175,36 @@ public void cacheRandomLocations(Location center, double minRange, double maxRan\n         return future;\n     }\n \n+    /**\n+     * Returns an int array of length 2, representing a random coordinate pair that is both inside the square\n+     * <pre>{@code x = maxRange * 2 and y = maxRange * 2 centered on (0,0)}</pre>\n+     * and also NOT inside the square\n+     * <pre>{@code x = minRange * 2 and y = minRange * 2 centered on (0,0)}</pre>\n+     * The points generated by this method are evenly distributed throughout the area.\n+     *\n+     * @param minRange The minimum that {@code |x|} or {@code |y|} will be.\n+     * @param maxRange The maximum that {@code |x|} or {@code |y|} will be.\n+     * @return A pair of numbers, each randomly generated, that satisfy the above conditions.\n+     */\n+    private double[] getRandXySquare(double minRange, double maxRange) {\n+        double[] randPairAtSize = new double[]{\n+                RANDOM.nextDouble() * (maxRange - minRange) + minRange,\n+                RANDOM.nextDouble() * (maxRange + minRange) - minRange};\n+        switch ((int) (RANDOM.nextDouble() * 4)) {\n+            case 0:\n+                return randPairAtSize;\n+            case 1:\n+                return new double[]{-randPairAtSize[1], randPairAtSize[0]};\n+            case 2:\n+                return new double[]{-randPairAtSize[0], -randPairAtSize[1]};\n+            case 3:\n+                return new double[]{randPairAtSize[1], -randPairAtSize[0]};\n+        }\n+        //This line will never be reached as the random number in the switch will ALWAYS be in the range 0-3 inclusive.\n+        return new double[]{0, 0};\n+    }\n+\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "02e342716ccc33a530511b17ab6e7d3464ac96d5"}, "originalPosition": 49}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4590, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}