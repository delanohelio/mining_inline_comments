{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA5NzA5MjQ3", "number": 3744, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQwMjowOToyOFrOExumTA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0wNlQxNjoyNzoyMlrOFXcqXw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIwNTc5MTQ4OnYy", "diffSide": "RIGHT", "path": "Essentials/src/com/earth2me/essentials/EssentialsPlayerListener.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQwMjowOToyOFrOHn-6Gg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQwMjowOToyOFrOHn-6Gg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTY4NzE5NA==", "bodyText": "I'd just use ternary operator, ,something like:\nfinal String fullCommand =  (pluginCommand != null) pluginCommand.getName() + args : cmd + args;", "url": "https://github.com/EssentialsX/Essentials/pull/3744#discussion_r511687194", "createdAt": "2020-10-26T02:09:28Z", "author": {"login": "benwoo1110"}, "path": "Essentials/src/com/earth2me/essentials/EssentialsPlayerListener.java", "diffHunk": "@@ -572,12 +572,18 @@ public void onPlayerCommandPreprocess(final PlayerCommandPreprocessEvent event)\n             user.updateActivityOnInteract(broadcast);\n         }\n \n-        if (ess.getSettings().isCommandCooldownsEnabled() && pluginCommand != null\n+        if (ess.getSettings().isCommandCooldownsEnabled()\n             && !user.isAuthorized(\"essentials.commandcooldowns.bypass\")) {\n             final int argStartIndex = event.getMessage().indexOf(\" \");\n             final String args = argStartIndex == -1 ? \"\" // No arguments present\n                 : \" \" + event.getMessage().substring(argStartIndex); // arguments start at argStartIndex; substring from there.\n-            final String fullCommand = pluginCommand.getName() + args;\n+\n+            final String fullCommand;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2dce6713c5776663d7602b22e54e784a2a85d85b"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ2NzkxNjU1OnYy", "diffSide": "RIGHT", "path": "Essentials/src/main/java/com/earth2me/essentials/Essentials.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wM1QyMzozNToxOFrOINimeA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNFQxODoyNzo0MVrOIN8OBg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTA2OTMwNA==", "bodyText": "is there a reason you didn't make a paper specific provider? also has this been tested on 1.8.8-1.16.4?", "url": "https://github.com/EssentialsX/Essentials/pull/3744#discussion_r551069304", "createdAt": "2021-01-03T23:35:18Z", "author": {"login": "JRoy"}, "path": "Essentials/src/main/java/com/earth2me/essentials/Essentials.java", "diffHunk": "@@ -329,6 +332,9 @@ public void onEnable() {\n                     knownCommandsProvider = new ReflKnownCommandsProvider();\n                 }\n \n+                //Command Alias provider\n+                formattedCommandAliasProvider = new ReflFormattedCommandAliasProvider(PaperLib.isPaper());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1a8d3dc34d8cf69ac8277f8e24bd3e8311c5cfa1"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTQ2NDcwMg==", "bodyText": "Yup! should be working just fine on all implementations of paper (saw that the modification to FormattedCommandAliasProvider was added in to paper before the 1.8 launch), and its still present and works fine on the latest 1.16.4 version.\nI will update the class to make separate classes for both servertypes!", "url": "https://github.com/EssentialsX/Essentials/pull/3744#discussion_r551464702", "createdAt": "2021-01-04T17:39:40Z", "author": {"login": "FrankHeijden"}, "path": "Essentials/src/main/java/com/earth2me/essentials/Essentials.java", "diffHunk": "@@ -329,6 +332,9 @@ public void onEnable() {\n                     knownCommandsProvider = new ReflKnownCommandsProvider();\n                 }\n \n+                //Command Alias provider\n+                formattedCommandAliasProvider = new ReflFormattedCommandAliasProvider(PaperLib.isPaper());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTA2OTMwNA=="}, "originalCommit": {"oid": "1a8d3dc34d8cf69ac8277f8e24bd3e8311c5cfa1"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTQ4OTAzMA==", "bodyText": "Splitted the file up in a paper and spigot version, however, due to the need for the reflection library I also had to include the NMSReflectionProvider in the PaperProvider module -- not sure if that would be a problem?", "url": "https://github.com/EssentialsX/Essentials/pull/3744#discussion_r551489030", "createdAt": "2021-01-04T18:27:41Z", "author": {"login": "FrankHeijden"}, "path": "Essentials/src/main/java/com/earth2me/essentials/Essentials.java", "diffHunk": "@@ -329,6 +332,9 @@ public void onEnable() {\n                     knownCommandsProvider = new ReflKnownCommandsProvider();\n                 }\n \n+                //Command Alias provider\n+                formattedCommandAliasProvider = new ReflFormattedCommandAliasProvider(PaperLib.isPaper());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTA2OTMwNA=="}, "originalCommit": {"oid": "1a8d3dc34d8cf69ac8277f8e24bd3e8311c5cfa1"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzU5OTU2OTY3OnYy", "diffSide": "RIGHT", "path": "Essentials/src/main/java/com/earth2me/essentials/Essentials.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0wNVQxOTo0NDoxN1rOIgv0tw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0wNVQxOTo0NDoxN1rOIgv0tw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MTIwODg4Nw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            //Command Alias provider\n          \n          \n            \n                            // Command aliases provider", "url": "https://github.com/EssentialsX/Essentials/pull/3744#discussion_r571208887", "createdAt": "2021-02-05T19:44:17Z", "author": {"login": "mdcfe"}, "path": "Essentials/src/main/java/com/earth2me/essentials/Essentials.java", "diffHunk": "@@ -338,6 +342,13 @@ public void onEnable() {\n                     knownCommandsProvider = new ReflKnownCommandsProvider();\n                 }\n \n+                //Command Alias provider", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cd4007b9c7e7ac87eccda12df8c901457232ca52"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzU5OTY0Nzk2OnYy", "diffSide": "RIGHT", "path": "providers/NMSReflectionProvider/src/main/java/net/ess3/nms/refl/providers/ReflFormattedCommandAliasProvider.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0wNVQyMDowNzozN1rOIgwkWQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0wNVQyMDozNToyMlrOIgxZpg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MTIyMTA4MQ==", "bodyText": "Why are you using reflection here, let alone on a class already in the classpath?", "url": "https://github.com/EssentialsX/Essentials/pull/3744#discussion_r571221081", "createdAt": "2021-02-05T20:07:37Z", "author": {"login": "JRoy"}, "path": "providers/NMSReflectionProvider/src/main/java/net/ess3/nms/refl/providers/ReflFormattedCommandAliasProvider.java", "diffHunk": "@@ -0,0 +1,52 @@\n+package net.ess3.nms.refl.providers;\n+\n+import net.ess3.nms.refl.ReflUtil;\n+import net.ess3.provider.FormattedCommandAliasProvider;\n+import org.bukkit.command.CommandSender;\n+import org.bukkit.command.FormattedCommandAlias;\n+\n+import java.lang.reflect.Field;\n+import java.lang.reflect.Method;\n+\n+public class ReflFormattedCommandAliasProvider extends FormattedCommandAliasProvider {\n+\n+    protected final Class<? extends FormattedCommandAlias> formattedCommandAliasClass;\n+    private final Field formatStringsField;\n+\n+    @SuppressWarnings(\"unchecked\")\n+    public ReflFormattedCommandAliasProvider() {\n+        Class<? extends FormattedCommandAlias> formattedCommandAliasClass = null;\n+        Field formatStringsField = null;\n+        try {\n+            formattedCommandAliasClass = (Class<? extends FormattedCommandAlias>) ReflUtil.getOBClass(\"command.FormattedCommandAlias\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e850e726c2a3cd8e73f873f92ff224fee1ac8d07"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MTIzMzA2MA==", "bodyText": "I use reflection here, because the method FormattedCommandAlias#buildCommand(String, String[]) has private access, which we need to determine the commands which are being pointed to by this alias (and thus apply limitations / cooldowns on those).", "url": "https://github.com/EssentialsX/Essentials/pull/3744#discussion_r571233060", "createdAt": "2021-02-05T20:31:42Z", "author": {"login": "FrankHeijden"}, "path": "providers/NMSReflectionProvider/src/main/java/net/ess3/nms/refl/providers/ReflFormattedCommandAliasProvider.java", "diffHunk": "@@ -0,0 +1,52 @@\n+package net.ess3.nms.refl.providers;\n+\n+import net.ess3.nms.refl.ReflUtil;\n+import net.ess3.provider.FormattedCommandAliasProvider;\n+import org.bukkit.command.CommandSender;\n+import org.bukkit.command.FormattedCommandAlias;\n+\n+import java.lang.reflect.Field;\n+import java.lang.reflect.Method;\n+\n+public class ReflFormattedCommandAliasProvider extends FormattedCommandAliasProvider {\n+\n+    protected final Class<? extends FormattedCommandAlias> formattedCommandAliasClass;\n+    private final Field formatStringsField;\n+\n+    @SuppressWarnings(\"unchecked\")\n+    public ReflFormattedCommandAliasProvider() {\n+        Class<? extends FormattedCommandAlias> formattedCommandAliasClass = null;\n+        Field formatStringsField = null;\n+        try {\n+            formattedCommandAliasClass = (Class<? extends FormattedCommandAlias>) ReflUtil.getOBClass(\"command.FormattedCommandAlias\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MTIyMTA4MQ=="}, "originalCommit": {"oid": "e850e726c2a3cd8e73f873f92ff224fee1ac8d07"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MTIzMzU0NQ==", "bodyText": "Should have been more clear, I meant why are you getting the class with reflection? You can just use FormattedCommandAlias.class", "url": "https://github.com/EssentialsX/Essentials/pull/3744#discussion_r571233545", "createdAt": "2021-02-05T20:32:48Z", "author": {"login": "JRoy"}, "path": "providers/NMSReflectionProvider/src/main/java/net/ess3/nms/refl/providers/ReflFormattedCommandAliasProvider.java", "diffHunk": "@@ -0,0 +1,52 @@\n+package net.ess3.nms.refl.providers;\n+\n+import net.ess3.nms.refl.ReflUtil;\n+import net.ess3.provider.FormattedCommandAliasProvider;\n+import org.bukkit.command.CommandSender;\n+import org.bukkit.command.FormattedCommandAlias;\n+\n+import java.lang.reflect.Field;\n+import java.lang.reflect.Method;\n+\n+public class ReflFormattedCommandAliasProvider extends FormattedCommandAliasProvider {\n+\n+    protected final Class<? extends FormattedCommandAlias> formattedCommandAliasClass;\n+    private final Field formatStringsField;\n+\n+    @SuppressWarnings(\"unchecked\")\n+    public ReflFormattedCommandAliasProvider() {\n+        Class<? extends FormattedCommandAlias> formattedCommandAliasClass = null;\n+        Field formatStringsField = null;\n+        try {\n+            formattedCommandAliasClass = (Class<? extends FormattedCommandAlias>) ReflUtil.getOBClass(\"command.FormattedCommandAlias\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MTIyMTA4MQ=="}, "originalCommit": {"oid": "e850e726c2a3cd8e73f873f92ff224fee1ac8d07"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MTIzNDcyNg==", "bodyText": "Ah right, good call, will remove it.", "url": "https://github.com/EssentialsX/Essentials/pull/3744#discussion_r571234726", "createdAt": "2021-02-05T20:35:22Z", "author": {"login": "FrankHeijden"}, "path": "providers/NMSReflectionProvider/src/main/java/net/ess3/nms/refl/providers/ReflFormattedCommandAliasProvider.java", "diffHunk": "@@ -0,0 +1,52 @@\n+package net.ess3.nms.refl.providers;\n+\n+import net.ess3.nms.refl.ReflUtil;\n+import net.ess3.provider.FormattedCommandAliasProvider;\n+import org.bukkit.command.CommandSender;\n+import org.bukkit.command.FormattedCommandAlias;\n+\n+import java.lang.reflect.Field;\n+import java.lang.reflect.Method;\n+\n+public class ReflFormattedCommandAliasProvider extends FormattedCommandAliasProvider {\n+\n+    protected final Class<? extends FormattedCommandAlias> formattedCommandAliasClass;\n+    private final Field formatStringsField;\n+\n+    @SuppressWarnings(\"unchecked\")\n+    public ReflFormattedCommandAliasProvider() {\n+        Class<? extends FormattedCommandAlias> formattedCommandAliasClass = null;\n+        Field formatStringsField = null;\n+        try {\n+            formattedCommandAliasClass = (Class<? extends FormattedCommandAlias>) ReflUtil.getOBClass(\"command.FormattedCommandAlias\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MTIyMTA4MQ=="}, "originalCommit": {"oid": "e850e726c2a3cd8e73f873f92ff224fee1ac8d07"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzU5OTY1NDM5OnYy", "diffSide": "RIGHT", "path": "providers/PaperProvider/src/main/java/net/ess3/provider/providers/PaperReflFormattedCommandAliasProvider.java", "isResolved": true, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0wNVQyMDowOTozNlrOIgwocw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0wNlQxNjowNDo1NVrOIg-rfQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MTIyMjEzMQ==", "bodyText": "if you just have to use reflection anyway, I'd rather we not use the Paper provider", "url": "https://github.com/EssentialsX/Essentials/pull/3744#discussion_r571222131", "createdAt": "2021-02-05T20:09:36Z", "author": {"login": "JRoy"}, "path": "providers/PaperProvider/src/main/java/net/ess3/provider/providers/PaperReflFormattedCommandAliasProvider.java", "diffHunk": "@@ -0,0 +1,22 @@\n+package net.ess3.provider.providers;\n+\n+import net.ess3.nms.refl.ReflUtil;\n+import net.ess3.nms.refl.providers.ReflFormattedCommandAliasProvider;\n+import org.bukkit.command.CommandSender;\n+import org.bukkit.command.FormattedCommandAlias;\n+\n+import java.lang.reflect.Method;\n+\n+public class PaperReflFormattedCommandAliasProvider extends ReflFormattedCommandAliasProvider {\n+\n+    @Override\n+    public String buildCommand(FormattedCommandAlias command, CommandSender sender, String formatString, String[] args) {\n+        try {\n+            final Method buildCommandMethod = ReflUtil.getMethodCached(formattedCommandAliasClass, \"buildCommand\", CommandSender.class, String.class, String[].class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e850e726c2a3cd8e73f873f92ff224fee1ac8d07"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MTIzNDI2Ng==", "bodyText": "Sure thing, will remove this call extra file -- however, in one of your earlier comments ( #3744 (comment) ) you suggested I created a Paper provider for this one; would it be okay to revert this change then? or what did you have it in mind?", "url": "https://github.com/EssentialsX/Essentials/pull/3744#discussion_r571234266", "createdAt": "2021-02-05T20:34:25Z", "author": {"login": "FrankHeijden"}, "path": "providers/PaperProvider/src/main/java/net/ess3/provider/providers/PaperReflFormattedCommandAliasProvider.java", "diffHunk": "@@ -0,0 +1,22 @@\n+package net.ess3.provider.providers;\n+\n+import net.ess3.nms.refl.ReflUtil;\n+import net.ess3.nms.refl.providers.ReflFormattedCommandAliasProvider;\n+import org.bukkit.command.CommandSender;\n+import org.bukkit.command.FormattedCommandAlias;\n+\n+import java.lang.reflect.Method;\n+\n+public class PaperReflFormattedCommandAliasProvider extends ReflFormattedCommandAliasProvider {\n+\n+    @Override\n+    public String buildCommand(FormattedCommandAlias command, CommandSender sender, String formatString, String[] args) {\n+        try {\n+            final Method buildCommandMethod = ReflUtil.getMethodCached(formattedCommandAliasClass, \"buildCommand\", CommandSender.class, String.class, String[].class);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MTIyMjEzMQ=="}, "originalCommit": {"oid": "e850e726c2a3cd8e73f873f92ff224fee1ac8d07"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MTIzODA3MA==", "bodyText": "Should have been more clear about this too, my point was if you need reflection for both Paper too, why do we need a Paper version too if they both do the same thing", "url": "https://github.com/EssentialsX/Essentials/pull/3744#discussion_r571238070", "createdAt": "2021-02-05T20:41:03Z", "author": {"login": "JRoy"}, "path": "providers/PaperProvider/src/main/java/net/ess3/provider/providers/PaperReflFormattedCommandAliasProvider.java", "diffHunk": "@@ -0,0 +1,22 @@\n+package net.ess3.provider.providers;\n+\n+import net.ess3.nms.refl.ReflUtil;\n+import net.ess3.nms.refl.providers.ReflFormattedCommandAliasProvider;\n+import org.bukkit.command.CommandSender;\n+import org.bukkit.command.FormattedCommandAlias;\n+\n+import java.lang.reflect.Method;\n+\n+public class PaperReflFormattedCommandAliasProvider extends ReflFormattedCommandAliasProvider {\n+\n+    @Override\n+    public String buildCommand(FormattedCommandAlias command, CommandSender sender, String formatString, String[] args) {\n+        try {\n+            final Method buildCommandMethod = ReflUtil.getMethodCached(formattedCommandAliasClass, \"buildCommand\", CommandSender.class, String.class, String[].class);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MTIyMjEzMQ=="}, "originalCommit": {"oid": "e850e726c2a3cd8e73f873f92ff224fee1ac8d07"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MTIzOTgyMw==", "bodyText": "Ah, that's because paper appends the CommandSender in the buildCommand method. Are you suggesting we should just check this on the fly in the buildCommand method whether the paper / spigot version should be called?", "url": "https://github.com/EssentialsX/Essentials/pull/3744#discussion_r571239823", "createdAt": "2021-02-05T20:44:47Z", "author": {"login": "FrankHeijden"}, "path": "providers/PaperProvider/src/main/java/net/ess3/provider/providers/PaperReflFormattedCommandAliasProvider.java", "diffHunk": "@@ -0,0 +1,22 @@\n+package net.ess3.provider.providers;\n+\n+import net.ess3.nms.refl.ReflUtil;\n+import net.ess3.nms.refl.providers.ReflFormattedCommandAliasProvider;\n+import org.bukkit.command.CommandSender;\n+import org.bukkit.command.FormattedCommandAlias;\n+\n+import java.lang.reflect.Method;\n+\n+public class PaperReflFormattedCommandAliasProvider extends ReflFormattedCommandAliasProvider {\n+\n+    @Override\n+    public String buildCommand(FormattedCommandAlias command, CommandSender sender, String formatString, String[] args) {\n+        try {\n+            final Method buildCommandMethod = ReflUtil.getMethodCached(formattedCommandAliasClass, \"buildCommand\", CommandSender.class, String.class, String[].class);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MTIyMjEzMQ=="}, "originalCommit": {"oid": "e850e726c2a3cd8e73f873f92ff224fee1ac8d07"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MTQ1MDQzMA==", "bodyText": "Okay I understand the need for that now, I think the best choice is reverting back to that one provider in that case", "url": "https://github.com/EssentialsX/Essentials/pull/3744#discussion_r571450430", "createdAt": "2021-02-06T15:47:32Z", "author": {"login": "JRoy"}, "path": "providers/PaperProvider/src/main/java/net/ess3/provider/providers/PaperReflFormattedCommandAliasProvider.java", "diffHunk": "@@ -0,0 +1,22 @@\n+package net.ess3.provider.providers;\n+\n+import net.ess3.nms.refl.ReflUtil;\n+import net.ess3.nms.refl.providers.ReflFormattedCommandAliasProvider;\n+import org.bukkit.command.CommandSender;\n+import org.bukkit.command.FormattedCommandAlias;\n+\n+import java.lang.reflect.Method;\n+\n+public class PaperReflFormattedCommandAliasProvider extends ReflFormattedCommandAliasProvider {\n+\n+    @Override\n+    public String buildCommand(FormattedCommandAlias command, CommandSender sender, String formatString, String[] args) {\n+        try {\n+            final Method buildCommandMethod = ReflUtil.getMethodCached(formattedCommandAliasClass, \"buildCommand\", CommandSender.class, String.class, String[].class);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MTIyMjEzMQ=="}, "originalCommit": {"oid": "e850e726c2a3cd8e73f873f92ff224fee1ac8d07"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MTQ1MjI4NQ==", "bodyText": "Sounds good!", "url": "https://github.com/EssentialsX/Essentials/pull/3744#discussion_r571452285", "createdAt": "2021-02-06T16:04:55Z", "author": {"login": "FrankHeijden"}, "path": "providers/PaperProvider/src/main/java/net/ess3/provider/providers/PaperReflFormattedCommandAliasProvider.java", "diffHunk": "@@ -0,0 +1,22 @@\n+package net.ess3.provider.providers;\n+\n+import net.ess3.nms.refl.ReflUtil;\n+import net.ess3.nms.refl.providers.ReflFormattedCommandAliasProvider;\n+import org.bukkit.command.CommandSender;\n+import org.bukkit.command.FormattedCommandAlias;\n+\n+import java.lang.reflect.Method;\n+\n+public class PaperReflFormattedCommandAliasProvider extends ReflFormattedCommandAliasProvider {\n+\n+    @Override\n+    public String buildCommand(FormattedCommandAlias command, CommandSender sender, String formatString, String[] args) {\n+        try {\n+            final Method buildCommandMethod = ReflUtil.getMethodCached(formattedCommandAliasClass, \"buildCommand\", CommandSender.class, String.class, String[].class);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MTIyMjEzMQ=="}, "originalCommit": {"oid": "e850e726c2a3cd8e73f873f92ff224fee1ac8d07"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzYwMTMwNzgxOnYy", "diffSide": "RIGHT", "path": "providers/BaseProviders/src/main/java/net/ess3/provider/FormattedCommandAliasProvider.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0wNlQxNjoyMzowN1rOIg-zYA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0wNlQxNjoyMzowN1rOIg-zYA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MTQ1NDMwNA==", "bodyText": "should be an interface which extends Provider", "url": "https://github.com/EssentialsX/Essentials/pull/3744#discussion_r571454304", "createdAt": "2021-02-06T16:23:07Z", "author": {"login": "JRoy"}, "path": "providers/BaseProviders/src/main/java/net/ess3/provider/FormattedCommandAliasProvider.java", "diffHunk": "@@ -0,0 +1,30 @@\n+package net.ess3.provider;\n+\n+import org.bukkit.command.CommandSender;\n+import org.bukkit.command.FormattedCommandAlias;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+public abstract class FormattedCommandAliasProvider {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "345e425c60de8c57497068994e3f8465ea3dfb7c"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzYwMTMxMTY3OnYy", "diffSide": "RIGHT", "path": "providers/NMSReflectionProvider/src/main/java/net/ess3/nms/refl/providers/ReflFormattedCommandAliasProvider.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0wNlQxNjoyNzoyMlrOIg-1Iw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0wNlQxODowNzo0NlrOIg_idQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MTQ1NDc1NQ==", "bodyText": "MethodHandles are more performant and should be used instead of java.lang.reflect's Method\nSee ReflServerStateProvider if you need to know how we use MethodHandle", "url": "https://github.com/EssentialsX/Essentials/pull/3744#discussion_r571454755", "createdAt": "2021-02-06T16:27:22Z", "author": {"login": "JRoy"}, "path": "providers/NMSReflectionProvider/src/main/java/net/ess3/nms/refl/providers/ReflFormattedCommandAliasProvider.java", "diffHunk": "@@ -0,0 +1,60 @@\n+package net.ess3.nms.refl.providers;\n+\n+import net.ess3.nms.refl.ReflUtil;\n+import net.ess3.provider.FormattedCommandAliasProvider;\n+import org.bukkit.command.CommandSender;\n+import org.bukkit.command.FormattedCommandAlias;\n+\n+import java.lang.reflect.Field;\n+import java.lang.reflect.Method;\n+\n+public class ReflFormattedCommandAliasProvider extends FormattedCommandAliasProvider {\n+\n+    private final boolean paper;\n+    private final Field formatStringsField;\n+    private final Method buildCommandMethod;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "345e425c60de8c57497068994e3f8465ea3dfb7c"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MTQ2NjM1Nw==", "bodyText": "Sure thing!", "url": "https://github.com/EssentialsX/Essentials/pull/3744#discussion_r571466357", "createdAt": "2021-02-06T18:07:46Z", "author": {"login": "FrankHeijden"}, "path": "providers/NMSReflectionProvider/src/main/java/net/ess3/nms/refl/providers/ReflFormattedCommandAliasProvider.java", "diffHunk": "@@ -0,0 +1,60 @@\n+package net.ess3.nms.refl.providers;\n+\n+import net.ess3.nms.refl.ReflUtil;\n+import net.ess3.provider.FormattedCommandAliasProvider;\n+import org.bukkit.command.CommandSender;\n+import org.bukkit.command.FormattedCommandAlias;\n+\n+import java.lang.reflect.Field;\n+import java.lang.reflect.Method;\n+\n+public class ReflFormattedCommandAliasProvider extends FormattedCommandAliasProvider {\n+\n+    private final boolean paper;\n+    private final Field formatStringsField;\n+    private final Method buildCommandMethod;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MTQ1NDc1NQ=="}, "originalCommit": {"oid": "345e425c60de8c57497068994e3f8465ea3dfb7c"}, "originalPosition": 15}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4470, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}