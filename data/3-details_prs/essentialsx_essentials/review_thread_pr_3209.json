{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEwODg4NDY0", "number": 3209, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQxOTo1NzozMVrOD4L47A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQxOTo1NzozMVrOD4L47A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwMjQxNjQ0OnYy", "diffSide": "RIGHT", "path": "Essentials/src/com/earth2me/essentials/UserData.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQxOTo1NzozMVrOGO4MqA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQyMDozMDoxOFrOGO5NQw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODI1Mzk5Mg==", "bodyText": "I'd prefer we stored actual UUID objects, not Strings representing them", "url": "https://github.com/EssentialsX/Essentials/pull/3209#discussion_r418253992", "createdAt": "2020-04-30T19:57:31Z", "author": {"login": "mdcfe"}, "path": "Essentials/src/com/earth2me/essentials/UserData.java", "diffHunk": "@@ -497,15 +497,17 @@ public boolean isIgnoredPlayer(final String userName) {\n     }\n \n     public boolean isIgnoredPlayer(IUser user) {\n-        return (ignoredPlayers.contains(user.getName().toLowerCase(Locale.ENGLISH)) && !user.isIgnoreExempt());\n+        return ignoredPlayers.contains(user.getBase().getUniqueId().toString()) && !user.isIgnoreExempt();\n     }\n \n     public void setIgnoredPlayer(IUser user, boolean set) {\n-        final String entry = user.getName().toLowerCase(Locale.ENGLISH);\n+        String uuid = user.getBase().getUniqueId().toString();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8fa499f5d513905bcabad2bc711728b905502a70"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODI2NTkzOA==", "bodyText": "Bit confused here: I'm pretty sure UUID::toString is already in a serializable format? You just use UUID::fromString to convert it back into a UUID object.", "url": "https://github.com/EssentialsX/Essentials/pull/3209#discussion_r418265938", "createdAt": "2020-04-30T20:21:22Z", "author": {"login": "pop4959"}, "path": "Essentials/src/com/earth2me/essentials/UserData.java", "diffHunk": "@@ -497,15 +497,17 @@ public boolean isIgnoredPlayer(final String userName) {\n     }\n \n     public boolean isIgnoredPlayer(IUser user) {\n-        return (ignoredPlayers.contains(user.getName().toLowerCase(Locale.ENGLISH)) && !user.isIgnoreExempt());\n+        return ignoredPlayers.contains(user.getBase().getUniqueId().toString()) && !user.isIgnoreExempt();\n     }\n \n     public void setIgnoredPlayer(IUser user, boolean set) {\n-        final String entry = user.getName().toLowerCase(Locale.ENGLISH);\n+        String uuid = user.getBase().getUniqueId().toString();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODI1Mzk5Mg=="}, "originalCommit": {"oid": "8fa499f5d513905bcabad2bc711728b905502a70"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODI2ODU0Mw==", "bodyText": "I mean I'd prefer we used the actual UUID type rather than masking it as a String - it's more obvious when reading source/method signatures that we're working with UUIDs as opposed to usernames.", "url": "https://github.com/EssentialsX/Essentials/pull/3209#discussion_r418268543", "createdAt": "2020-04-30T20:26:22Z", "author": {"login": "mdcfe"}, "path": "Essentials/src/com/earth2me/essentials/UserData.java", "diffHunk": "@@ -497,15 +497,17 @@ public boolean isIgnoredPlayer(final String userName) {\n     }\n \n     public boolean isIgnoredPlayer(IUser user) {\n-        return (ignoredPlayers.contains(user.getName().toLowerCase(Locale.ENGLISH)) && !user.isIgnoreExempt());\n+        return ignoredPlayers.contains(user.getBase().getUniqueId().toString()) && !user.isIgnoreExempt();\n     }\n \n     public void setIgnoredPlayer(IUser user, boolean set) {\n-        final String entry = user.getName().toLowerCase(Locale.ENGLISH);\n+        String uuid = user.getBase().getUniqueId().toString();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODI1Mzk5Mg=="}, "originalCommit": {"oid": "8fa499f5d513905bcabad2bc711728b905502a70"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODI3MDUzMQ==", "bodyText": "Oh OK I meant we're still using strings for storing in the userdata file, right? I might have just misunderstood what you said.", "url": "https://github.com/EssentialsX/Essentials/pull/3209#discussion_r418270531", "createdAt": "2020-04-30T20:30:18Z", "author": {"login": "pop4959"}, "path": "Essentials/src/com/earth2me/essentials/UserData.java", "diffHunk": "@@ -497,15 +497,17 @@ public boolean isIgnoredPlayer(final String userName) {\n     }\n \n     public boolean isIgnoredPlayer(IUser user) {\n-        return (ignoredPlayers.contains(user.getName().toLowerCase(Locale.ENGLISH)) && !user.isIgnoreExempt());\n+        return ignoredPlayers.contains(user.getBase().getUniqueId().toString()) && !user.isIgnoreExempt();\n     }\n \n     public void setIgnoredPlayer(IUser user, boolean set) {\n-        final String entry = user.getName().toLowerCase(Locale.ENGLISH);\n+        String uuid = user.getBase().getUniqueId().toString();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODI1Mzk5Mg=="}, "originalCommit": {"oid": "8fa499f5d513905bcabad2bc711728b905502a70"}, "originalPosition": 10}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4668, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}