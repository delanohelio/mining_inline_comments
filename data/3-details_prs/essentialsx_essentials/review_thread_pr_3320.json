{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIyMTg4MzM0", "number": 3320, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQwMDowOTo0MFrOD_PCew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQxMjoyNjowMFrOD_Xi_Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3NjMzMjc1OnYy", "diffSide": "RIGHT", "path": "Essentials/src/com/earth2me/essentials/Settings.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQwMDowOTo0MFrOGZyKCA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQwMDoyMzoyNlrOGZyPmg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTY4OTM1Mg==", "bodyText": "Just want to note my objection here to defaulting to no namespacing! :)", "url": "https://github.com/EssentialsX/Essentials/pull/3320#discussion_r429689352", "createdAt": "2020-05-25T00:09:40Z", "author": {"login": "mbax"}, "path": "Essentials/src/com/earth2me/essentials/Settings.java", "diffHunk": "@@ -1653,6 +1653,12 @@ public boolean logCommandBlockCommands() {\n         return blacklist;\n     }\n \n+    // #easteregg\n+    @Override\n+    public String getContextPrefix() {\n+        return config.getString(\"context-prefix\", \"\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "85b626cc2ef70c19afceae801cc6d8d6243a969a"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTY5MDc3OA==", "bodyText": "Noted! I went and explained my reasoning below. The issue of default namespacing can be tackled at a later date, assuming that it becomes a real issue.", "url": "https://github.com/EssentialsX/Essentials/pull/3320#discussion_r429690778", "createdAt": "2020-05-25T00:23:26Z", "author": {"login": "pop4959"}, "path": "Essentials/src/com/earth2me/essentials/Settings.java", "diffHunk": "@@ -1653,6 +1653,12 @@ public boolean logCommandBlockCommands() {\n         return blacklist;\n     }\n \n+    // #easteregg\n+    @Override\n+    public String getContextPrefix() {\n+        return config.getString(\"context-prefix\", \"\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTY4OTM1Mg=="}, "originalCommit": {"oid": "85b626cc2ef70c19afceae801cc6d8d6243a969a"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3NzcyNjY5OnYy", "diffSide": "RIGHT", "path": "Essentials/src/com/earth2me/essentials/EssentialsPluginListener.java", "isResolved": false, "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQxMjoyNjowMFrOGZ_f2w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQyMjo0NTowOFrOGaKpwg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTkwNzkzMQ==", "bodyText": "These register calls should probably be in onEnable??\nUnless I'm missing something, they're currently being added on every PluginEnableEvent? (this is gonna fire every time a plugin loads?!)", "url": "https://github.com/EssentialsX/Essentials/pull/3320#discussion_r429907931", "createdAt": "2020-05-25T12:26:00Z", "author": {"login": "lucko"}, "path": "Essentials/src/com/earth2me/essentials/EssentialsPluginListener.java", "diffHunk": "@@ -25,6 +27,9 @@ public void onPluginEnable(final PluginEnableEvent event) {\n         }\n         ess.getPermissionsHandler().setUseSuperperms(ess.getSettings().useBukkitPermissions());\n         ess.getPermissionsHandler().checkPermissions();\n+        ess.getPermissionsHandler().registerContext(\"ess-afk\", player -> Collections.singleton(String.valueOf(ess.getUser(player).isAfk())), () -> ImmutableSet.of(\"true\", \"false\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a421958a0ea239c4701f7b43f95a5e69ac97dabd"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDA1NTM2OQ==", "bodyText": "No... I think you're right about that. It is definitely going to fire every time a plugin loads. I actually did originally have these in onEnable, but the problem is that before checkPermissions is run (which is only done here) the handler in PermissionsHandler is null. It's probably done in this fashion to avoid adding softdepends on every Vault-based permission plugin.\nTwo possible solutions:\n\nFrom the event, check if the plugin is a known one that supports contexts.\nSchedule a task to register contexts on the first server tick.\n\nI don't particularly like either solution, but it doesn't seem like Bukkit has any event that gets called after all plugins are loaded. Maybe something else works too, but this is what comes to mind. Any opinions?", "url": "https://github.com/EssentialsX/Essentials/pull/3320#discussion_r430055369", "createdAt": "2020-05-25T19:32:05Z", "author": {"login": "pop4959"}, "path": "Essentials/src/com/earth2me/essentials/EssentialsPluginListener.java", "diffHunk": "@@ -25,6 +27,9 @@ public void onPluginEnable(final PluginEnableEvent event) {\n         }\n         ess.getPermissionsHandler().setUseSuperperms(ess.getSettings().useBukkitPermissions());\n         ess.getPermissionsHandler().checkPermissions();\n+        ess.getPermissionsHandler().registerContext(\"ess-afk\", player -> Collections.singleton(String.valueOf(ess.getUser(player).isAfk())), () -> ImmutableSet.of(\"true\", \"false\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTkwNzkzMQ=="}, "originalCommit": {"oid": "a421958a0ea239c4701f7b43f95a5e69ac97dabd"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDA1OTc1OQ==", "bodyText": "So I got another idea from Glare (on Discord) that I like slightly better, which is a spin-off of my first solution. Instead of checking from this event, we do actually do it in onEnable, since after we've checked that a context supporting permission plugin is loaded, it should be safe to register the contexts since Essentials has a softdepend on it, and thus checkPermissions has to have run already and have a non-null handler.", "url": "https://github.com/EssentialsX/Essentials/pull/3320#discussion_r430059759", "createdAt": "2020-05-25T19:52:54Z", "author": {"login": "pop4959"}, "path": "Essentials/src/com/earth2me/essentials/EssentialsPluginListener.java", "diffHunk": "@@ -25,6 +27,9 @@ public void onPluginEnable(final PluginEnableEvent event) {\n         }\n         ess.getPermissionsHandler().setUseSuperperms(ess.getSettings().useBukkitPermissions());\n         ess.getPermissionsHandler().checkPermissions();\n+        ess.getPermissionsHandler().registerContext(\"ess-afk\", player -> Collections.singleton(String.valueOf(ess.getUser(player).isAfk())), () -> ImmutableSet.of(\"true\", \"false\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTkwNzkzMQ=="}, "originalCommit": {"oid": "a421958a0ea239c4701f7b43f95a5e69ac97dabd"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDA2MTgzMg==", "bodyText": "You're also already storing a\nprivate Set<ContextCalculator<Player>> contextCalculators\nWouldn't be the biggest change to make that a Map<String, ContextCalculator<Player>> and just check to see if already registered - just an idea.\nHowever, I'd suggest re-thinking whether that logic really needs to be running every time a plugin enables in the first place...", "url": "https://github.com/EssentialsX/Essentials/pull/3320#discussion_r430061832", "createdAt": "2020-05-25T20:02:41Z", "author": {"login": "lucko"}, "path": "Essentials/src/com/earth2me/essentials/EssentialsPluginListener.java", "diffHunk": "@@ -25,6 +27,9 @@ public void onPluginEnable(final PluginEnableEvent event) {\n         }\n         ess.getPermissionsHandler().setUseSuperperms(ess.getSettings().useBukkitPermissions());\n         ess.getPermissionsHandler().checkPermissions();\n+        ess.getPermissionsHandler().registerContext(\"ess-afk\", player -> Collections.singleton(String.valueOf(ess.getUser(player).isAfk())), () -> ImmutableSet.of(\"true\", \"false\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTkwNzkzMQ=="}, "originalCommit": {"oid": "a421958a0ea239c4701f7b43f95a5e69ac97dabd"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDA2MjU0Mw==", "bodyText": "ess.getPermissionsHandler().setUseSuperperms(ess.getSettings().useBukkitPermissions());\ness.getPermissionsHandler().checkPermissions();\ness.getPermissionsHandler().registerContext(...);\ncan all be moved to onEnable, you're softdepending on LuckPerms now anyway.\nThen just keep a single call to\ness.getPermissionsHandler().checkPermissions();\nin the plugin enable listener to catch other permission plugins.\nThe call to\ness.getPermissionsHandler().unregisterContexts();\ndefinitely needs to be moved to onDisable. In it's current position, contexts are going to be unregistered every time any plugin is disabled.", "url": "https://github.com/EssentialsX/Essentials/pull/3320#discussion_r430062543", "createdAt": "2020-05-25T20:06:05Z", "author": {"login": "lucko"}, "path": "Essentials/src/com/earth2me/essentials/EssentialsPluginListener.java", "diffHunk": "@@ -25,6 +27,9 @@ public void onPluginEnable(final PluginEnableEvent event) {\n         }\n         ess.getPermissionsHandler().setUseSuperperms(ess.getSettings().useBukkitPermissions());\n         ess.getPermissionsHandler().checkPermissions();\n+        ess.getPermissionsHandler().registerContext(\"ess-afk\", player -> Collections.singleton(String.valueOf(ess.getUser(player).isAfk())), () -> ImmutableSet.of(\"true\", \"false\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTkwNzkzMQ=="}, "originalCommit": {"oid": "a421958a0ea239c4701f7b43f95a5e69ac97dabd"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDA2NzYzNA==", "bodyText": "These should only be re-applied when the currently active permissions handler changes.\nI'm not sure how I feel about registering these here - I'd personally have put them in a separate method or even a new class, as the amount of contexts will likely increase and it feels cluttered to throw them in here. Perhaps they could be added to a default registerContexts method on PermissionHandler?", "url": "https://github.com/EssentialsX/Essentials/pull/3320#discussion_r430067634", "createdAt": "2020-05-25T20:30:56Z", "author": {"login": "mdcfe"}, "path": "Essentials/src/com/earth2me/essentials/EssentialsPluginListener.java", "diffHunk": "@@ -25,6 +27,9 @@ public void onPluginEnable(final PluginEnableEvent event) {\n         }\n         ess.getPermissionsHandler().setUseSuperperms(ess.getSettings().useBukkitPermissions());\n         ess.getPermissionsHandler().checkPermissions();\n+        ess.getPermissionsHandler().registerContext(\"ess-afk\", player -> Collections.singleton(String.valueOf(ess.getUser(player).isAfk())), () -> ImmutableSet.of(\"true\", \"false\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTkwNzkzMQ=="}, "originalCommit": {"oid": "a421958a0ea239c4701f7b43f95a5e69ac97dabd"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDA5MDY5MA==", "bodyText": "Yeah, it wasn't my intention to leave the registrations there either. It was just an easy place to put them for now while testing everything. They can be registered from anywhere though, whether that's primarily in onEnable, or a registerContexts method. For the latter, we probably want to consider if all contexts will always be enabled all at once, or if there are contexts which may need to be initialized elsewhere (because the calculator function needs to be defined in scope of whatever it's using, although most of the time that would probably be the Essentials instance).", "url": "https://github.com/EssentialsX/Essentials/pull/3320#discussion_r430090690", "createdAt": "2020-05-25T22:45:08Z", "author": {"login": "pop4959"}, "path": "Essentials/src/com/earth2me/essentials/EssentialsPluginListener.java", "diffHunk": "@@ -25,6 +27,9 @@ public void onPluginEnable(final PluginEnableEvent event) {\n         }\n         ess.getPermissionsHandler().setUseSuperperms(ess.getSettings().useBukkitPermissions());\n         ess.getPermissionsHandler().checkPermissions();\n+        ess.getPermissionsHandler().registerContext(\"ess-afk\", player -> Collections.singleton(String.valueOf(ess.getUser(player).isAfk())), () -> ImmutableSet.of(\"true\", \"false\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTkwNzkzMQ=="}, "originalCommit": {"oid": "a421958a0ea239c4701f7b43f95a5e69ac97dabd"}, "originalPosition": 20}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4695, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}