{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQwODQ0Mjc3", "number": 3418, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yN1QwNDowMjoxMVrOEJUA0A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQyMToyMTowNVrOEKqkAw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4MjAwNTI4OnYy", "diffSide": "RIGHT", "path": "Essentials/src/com/earth2me/essentials/RandomTeleport.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yN1QwNDowMjoxMVrOGpzCvQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yN1QwNDowMjoxMVrOGpzCvQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjQ4MTA4NQ==", "bodyText": "random seems like an odd name. Something like rtp, randomtp, or randomteleport", "url": "https://github.com/EssentialsX/Essentials/pull/3418#discussion_r446481085", "createdAt": "2020-06-27T04:02:11Z", "author": {"login": "JRoy"}, "path": "Essentials/src/com/earth2me/essentials/RandomTeleport.java", "diffHunk": "@@ -0,0 +1,55 @@\n+package com.earth2me.essentials;\n+\n+import net.ess3.api.InvalidWorldException;\n+import org.bukkit.Location;\n+\n+import java.io.File;\n+\n+public class RandomTeleport implements IConf {\n+    private final IEssentials essentials;\n+    private final EssentialsConf config;\n+\n+    public RandomTeleport(final IEssentials essentials) {\n+        this.essentials = essentials;\n+        File file = new File(essentials.getDataFolder(), \"random.yml\");\n+        config = new EssentialsConf(file);\n+        config.setTemplateName(\"/random.yml\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d99ef6bef5a8f39d8b25fab226922326570c9afc"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4MjAwNjE5OnYy", "diffSide": "RIGHT", "path": "Essentials/src/com/earth2me/essentials/commands/Commandsettpr.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yN1QwNDowMzo0NlrOGpzDMg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yN1QwNDowMzo0NlrOGpzDMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjQ4MTIwMg==", "bodyText": "English literals ruin the point of translation :P", "url": "https://github.com/EssentialsX/Essentials/pull/3418#discussion_r446481202", "createdAt": "2020-06-27T04:03:46Z", "author": {"login": "JRoy"}, "path": "Essentials/src/com/earth2me/essentials/commands/Commandsettpr.java", "diffHunk": "@@ -0,0 +1,42 @@\n+package com.earth2me.essentials.commands;\n+\n+import com.earth2me.essentials.RandomTeleport;\n+import com.earth2me.essentials.User;\n+import org.bukkit.Server;\n+\n+import java.util.Arrays;\n+import java.util.Collections;\n+import java.util.List;\n+\n+import static com.earth2me.essentials.I18n.tl;\n+\n+\n+public class Commandsettpr extends EssentialsCommand {\n+    public Commandsettpr() {\n+        super(\"settpr\");\n+    }\n+\n+    @Override\n+    protected void run(Server server, User user, String commandLabel, String[] args) throws Exception {\n+        RandomTeleport randomTeleport = ess.getRandomTeleport();\n+        if (args.length == 0 || \"center\".equalsIgnoreCase(args[0])) {\n+            randomTeleport.setCenter(user.getLocation());\n+            user.sendMessage(tl(\"settpr\", \"center\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d99ef6bef5a8f39d8b25fab226922326570c9afc"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4MjAxNTMwOnYy", "diffSide": "RIGHT", "path": "Essentials/src/com/earth2me/essentials/RandomTeleport.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yN1QwNDoxNzozMVrOGpzHZg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yN1QwNDoxNzozMVrOGpzHZg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjQ4MjI3OA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    config = new EssentialsConf(file);\n          \n          \n            \n                    config = new EssentialsConf(file);\n          \n          \n            \n                    config.options().header(\"this is a string stringy xdxdxd\");", "url": "https://github.com/EssentialsX/Essentials/pull/3418#discussion_r446482278", "createdAt": "2020-06-27T04:17:31Z", "author": {"login": "JRoy"}, "path": "Essentials/src/com/earth2me/essentials/RandomTeleport.java", "diffHunk": "@@ -0,0 +1,55 @@\n+package com.earth2me.essentials;\n+\n+import net.ess3.api.InvalidWorldException;\n+import org.bukkit.Location;\n+\n+import java.io.File;\n+\n+public class RandomTeleport implements IConf {\n+    private final IEssentials essentials;\n+    private final EssentialsConf config;\n+\n+    public RandomTeleport(final IEssentials essentials) {\n+        this.essentials = essentials;\n+        File file = new File(essentials.getDataFolder(), \"random.yml\");\n+        config = new EssentialsConf(file);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d99ef6bef5a8f39d8b25fab226922326570c9afc"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4MzkzNzI1OnYy", "diffSide": "RIGHT", "path": "Essentials/src/com/earth2me/essentials/commands/Commandtpr.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQwMDowNToyNlrOGqBYEQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQwMDowNToyNlrOGqBYEQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjcxNTkyMQ==", "bodyText": "would rather this be inlined", "url": "https://github.com/EssentialsX/Essentials/pull/3418#discussion_r446715921", "createdAt": "2020-06-29T00:05:26Z", "author": {"login": "JRoy"}, "path": "Essentials/src/com/earth2me/essentials/commands/Commandtpr.java", "diffHunk": "@@ -0,0 +1,124 @@\n+package com.earth2me.essentials.commands;\n+\n+import com.earth2me.essentials.RandomTeleport;\n+import com.earth2me.essentials.Trade;\n+import com.earth2me.essentials.User;\n+import com.earth2me.essentials.utils.VersionUtil;\n+import io.papermc.lib.PaperLib;\n+import net.ess3.api.events.UserRandomTeleportEvent;\n+import org.bukkit.Location;\n+import org.bukkit.Server;\n+import org.bukkit.event.player.PlayerTeleportEvent;\n+\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.Queue;\n+import java.util.Random;\n+import java.util.concurrent.CompletableFuture;\n+\n+import static com.earth2me.essentials.I18n.tl;\n+\n+\n+public class Commandtpr extends EssentialsCommand {\n+    private static final Random RANDOM = new Random();\n+    private static final int HIGHEST_BLOCK_Y_OFFSET = VersionUtil.getServerBukkitVersion().isHigherThanOrEqualTo(VersionUtil.v1_15_R01) ? 1 : 0;\n+\n+    public Commandtpr() {\n+        super(\"tpr\");\n+    }\n+\n+    @Override\n+    protected void run(Server server, User user, String commandLabel, String[] args) throws Exception {\n+        final Trade charge = new Trade(this.getName(), ess);\n+        charge.isAffordableFor(user);\n+        RandomTeleport randomTeleport = ess.getRandomTeleport();\n+        UserRandomTeleportEvent event = new UserRandomTeleportEvent(user, randomTeleport.getCenter(), randomTeleport.getMinRange(), randomTeleport.getMaxRange());\n+        server.getPluginManager().callEvent(event);\n+        if (event.isCancelled()) {\n+            return;\n+        }\n+        Location center = event.getCenter();\n+        double minRange = event.getMinRange();\n+        double maxRange = event.getMaxRange();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7c580c5ec3ba4a08aaee477d8111cba09657c88d"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4Mzk0MjI0OnYy", "diffSide": "RIGHT", "path": "Essentials/src/com/earth2me/essentials/commands/Commandtpr.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQwMDoxMDoxOFrOGqBakA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQwMDo1Mjo1NlrOGqBwmw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjcxNjU2MA==", "bodyText": "i n l i n e", "url": "https://github.com/EssentialsX/Essentials/pull/3418#discussion_r446716560", "createdAt": "2020-06-29T00:10:18Z", "author": {"login": "JRoy"}, "path": "Essentials/src/com/earth2me/essentials/commands/Commandtpr.java", "diffHunk": "@@ -0,0 +1,124 @@\n+package com.earth2me.essentials.commands;\n+\n+import com.earth2me.essentials.RandomTeleport;\n+import com.earth2me.essentials.Trade;\n+import com.earth2me.essentials.User;\n+import com.earth2me.essentials.utils.VersionUtil;\n+import io.papermc.lib.PaperLib;\n+import net.ess3.api.events.UserRandomTeleportEvent;\n+import org.bukkit.Location;\n+import org.bukkit.Server;\n+import org.bukkit.event.player.PlayerTeleportEvent;\n+\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.Queue;\n+import java.util.Random;\n+import java.util.concurrent.CompletableFuture;\n+\n+import static com.earth2me.essentials.I18n.tl;\n+\n+\n+public class Commandtpr extends EssentialsCommand {\n+    private static final Random RANDOM = new Random();\n+    private static final int HIGHEST_BLOCK_Y_OFFSET = VersionUtil.getServerBukkitVersion().isHigherThanOrEqualTo(VersionUtil.v1_15_R01) ? 1 : 0;\n+\n+    public Commandtpr() {\n+        super(\"tpr\");\n+    }\n+\n+    @Override\n+    protected void run(Server server, User user, String commandLabel, String[] args) throws Exception {\n+        final Trade charge = new Trade(this.getName(), ess);\n+        charge.isAffordableFor(user);\n+        RandomTeleport randomTeleport = ess.getRandomTeleport();\n+        UserRandomTeleportEvent event = new UserRandomTeleportEvent(user, randomTeleport.getCenter(), randomTeleport.getMinRange(), randomTeleport.getMaxRange());\n+        server.getPluginManager().callEvent(event);\n+        if (event.isCancelled()) {\n+            return;\n+        }\n+        Location center = event.getCenter();\n+        double minRange = event.getMinRange();\n+        double maxRange = event.getMaxRange();\n+        getRandomLocation(randomTeleport, center, minRange, maxRange).thenAccept(location -> {\n+            CompletableFuture<Boolean> future = getNewExceptionFuture(user.getSource(), commandLabel);\n+            user.getAsyncTeleport().teleport(location, charge, PlayerTeleportEvent.TeleportCause.COMMAND, future);\n+            future.thenAccept(success -> {\n+                if (success) {\n+                    user.sendMessage(tl(\"tprSuccess\"));\n+                }\n+            });\n+        });\n+    }\n+\n+    // Get a random location; cached if possible. Otherwise on demand.\n+    private CompletableFuture<Location> getRandomLocation(RandomTeleport randomTeleport, Location center, double minRange, double maxRange) {\n+        int findAttempts = randomTeleport.getFindAttempts();\n+        Queue<Location> cachedLocations = randomTeleport.getCachedLocations();\n+        // Try to build up the cache if it is below the threshold\n+        if (cachedLocations.size() < randomTeleport.getCacheThreshold()) {\n+            ess.getServer().getScheduler().scheduleSyncDelayedTask(ess, () -> {\n+                for (int i = 0; i < findAttempts; ++i) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7c580c5ec3ba4a08aaee477d8111cba09657c88d"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjcyMjIwMw==", "bodyText": "please elaborate", "url": "https://github.com/EssentialsX/Essentials/pull/3418#discussion_r446722203", "createdAt": "2020-06-29T00:52:56Z", "author": {"login": "pop4959"}, "path": "Essentials/src/com/earth2me/essentials/commands/Commandtpr.java", "diffHunk": "@@ -0,0 +1,124 @@\n+package com.earth2me.essentials.commands;\n+\n+import com.earth2me.essentials.RandomTeleport;\n+import com.earth2me.essentials.Trade;\n+import com.earth2me.essentials.User;\n+import com.earth2me.essentials.utils.VersionUtil;\n+import io.papermc.lib.PaperLib;\n+import net.ess3.api.events.UserRandomTeleportEvent;\n+import org.bukkit.Location;\n+import org.bukkit.Server;\n+import org.bukkit.event.player.PlayerTeleportEvent;\n+\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.Queue;\n+import java.util.Random;\n+import java.util.concurrent.CompletableFuture;\n+\n+import static com.earth2me.essentials.I18n.tl;\n+\n+\n+public class Commandtpr extends EssentialsCommand {\n+    private static final Random RANDOM = new Random();\n+    private static final int HIGHEST_BLOCK_Y_OFFSET = VersionUtil.getServerBukkitVersion().isHigherThanOrEqualTo(VersionUtil.v1_15_R01) ? 1 : 0;\n+\n+    public Commandtpr() {\n+        super(\"tpr\");\n+    }\n+\n+    @Override\n+    protected void run(Server server, User user, String commandLabel, String[] args) throws Exception {\n+        final Trade charge = new Trade(this.getName(), ess);\n+        charge.isAffordableFor(user);\n+        RandomTeleport randomTeleport = ess.getRandomTeleport();\n+        UserRandomTeleportEvent event = new UserRandomTeleportEvent(user, randomTeleport.getCenter(), randomTeleport.getMinRange(), randomTeleport.getMaxRange());\n+        server.getPluginManager().callEvent(event);\n+        if (event.isCancelled()) {\n+            return;\n+        }\n+        Location center = event.getCenter();\n+        double minRange = event.getMinRange();\n+        double maxRange = event.getMaxRange();\n+        getRandomLocation(randomTeleport, center, minRange, maxRange).thenAccept(location -> {\n+            CompletableFuture<Boolean> future = getNewExceptionFuture(user.getSource(), commandLabel);\n+            user.getAsyncTeleport().teleport(location, charge, PlayerTeleportEvent.TeleportCause.COMMAND, future);\n+            future.thenAccept(success -> {\n+                if (success) {\n+                    user.sendMessage(tl(\"tprSuccess\"));\n+                }\n+            });\n+        });\n+    }\n+\n+    // Get a random location; cached if possible. Otherwise on demand.\n+    private CompletableFuture<Location> getRandomLocation(RandomTeleport randomTeleport, Location center, double minRange, double maxRange) {\n+        int findAttempts = randomTeleport.getFindAttempts();\n+        Queue<Location> cachedLocations = randomTeleport.getCachedLocations();\n+        // Try to build up the cache if it is below the threshold\n+        if (cachedLocations.size() < randomTeleport.getCacheThreshold()) {\n+            ess.getServer().getScheduler().scheduleSyncDelayedTask(ess, () -> {\n+                for (int i = 0; i < findAttempts; ++i) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjcxNjU2MA=="}, "originalCommit": {"oid": "7c580c5ec3ba4a08aaee477d8111cba09657c88d"}, "originalPosition": 61}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5NjE4NTYzOnYy", "diffSide": "RIGHT", "path": "Essentials/src/tpr.yml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQyMToyMTowNVrOGr1veA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQyMTo0ODo0OFrOGr2c1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODYyMjQ1Ng==", "bodyText": "Shouldn't this file include all the available config options (ie pre-cache, max-range)?", "url": "https://github.com/EssentialsX/Essentials/pull/3418#discussion_r448622456", "createdAt": "2020-07-01T21:21:05Z", "author": {"login": "mdcfe"}, "path": "Essentials/src/tpr.yml", "diffHunk": "@@ -0,0 +1,16 @@\n+# Configuration for the random teleport command.\n+# Some settings may be defaulted, and can be changed via the /settpr command in-game.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "79f78a410d9dc514b292f175fadd5a0829f1db89"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODYzNDA2OA==", "bodyText": "Arguably yes, although once something gets saved into the file, it is effectively permanent. This can be problematic, so unless the server owner explicitly sets some of these settings. Here's an explanation for the thought process behind putting all of the current settings where they are:\ncenter: We cannot have a default in the config, because we cannot assume what the world name is. So instead, when getCenter is called, we try reading the config first, but if that isn't available (or the world is no longer valid), we write the config with the center of the current main world, which is an appropriate default. This can further be changed via explicitly running the /settpr command or entering manual config.\nmin-range: In the config by default, and also automatically zero if none specified. Zero is a fine default, and the server owner can increase it if they do not want players teleporting into a spawn protected zone, etc.\nmax-range: Not explicitly in the config, because we want the default to be the max range of whatever world the command is being used in. This allows a true random location in the world, when server owners do not specify something lower. We don't want to hard code 3E7 (the default vanilla world border size) into here, because the server owner may have already changed it. It can be lowered if servers don't want a true random location, but rather something closer to spawn (like 1k, 10k, etc).\nexcluded-biomes: Which biomes should be avoided when selecting a random location. Safe teleport doesn't handle this, and will happily randomly teleport players into oceans for example (and fairly often actually) if not otherwise checked. This is set in the config by default since there is something sensible to set it to, and the server owner can adjust it if they want to add/remove anything.\nfind-attempts: Used internally for determining how many times to try finding random locations. This is something that generally should not be changed (higher = potentially more lag, lower = potentially not finding locations). Server owners can adjust it to tweak performance vs optimal behavior, but it's better not written in the config by default in case Essentials wants to adjust the default value in the future. #EasterEgg\ncache-threshold: Also used internally to decide when the cache is getting too empty, and needs to be refilled. Not really much reason to need to change this either, in most cases. #EasterEgg\npre-cache: Having this on by default makes the command run much faster (particularly, on the first execution, where there may otherwise be no cache). Having a small number of locations cached isn't particularly heavy, so there is not much reason for most server owners to touch this. It still exists as an option to disable though. #EasterEgg", "url": "https://github.com/EssentialsX/Essentials/pull/3418#discussion_r448634068", "createdAt": "2020-07-01T21:48:48Z", "author": {"login": "pop4959"}, "path": "Essentials/src/tpr.yml", "diffHunk": "@@ -0,0 +1,16 @@\n+# Configuration for the random teleport command.\n+# Some settings may be defaulted, and can be changed via the /settpr command in-game.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODYyMjQ1Ng=="}, "originalCommit": {"oid": "79f78a410d9dc514b292f175fadd5a0829f1db89"}, "originalPosition": 2}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4577, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}