{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM3NTg2NzY1", "number": 3403, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQwOToyMjo1N1rOEHfmqA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQwOToyMzoxNlrOEHfnKA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2MjkzMjg4OnYy", "diffSide": "RIGHT", "path": "Essentials/src/com/earth2me/essentials/commands/Commandhome.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQwOToyMjo1N1rOGm4spA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQwOToyMjo1N1rOGm4spA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzQyODAwNA==", "bodyText": "We won't need this import", "url": "https://github.com/EssentialsX/Essentials/pull/3403#discussion_r443428004", "createdAt": "2020-06-22T09:22:57Z", "author": {"login": "pop4959"}, "path": "Essentials/src/com/earth2me/essentials/commands/Commandhome.java", "diffHunk": "@@ -3,6 +3,8 @@\n import com.earth2me.essentials.Trade;\n import com.earth2me.essentials.User;\n import com.earth2me.essentials.utils.StringUtil;\n+import net.ess3.api.events.UserTeleportHomeEvent;\n+import org.bukkit.Bukkit;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1ef452561b61c039975b7033ba18dfe09f873887"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2MjkzMzExOnYy", "diffSide": "RIGHT", "path": "Essentials/src/com/earth2me/essentials/commands/Commandhome.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQwOToyMzowMlrOGm4szA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQwOToyMzowMlrOGm4szA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzQyODA0NA==", "bodyText": "The server is already in scope of this method", "url": "https://github.com/EssentialsX/Essentials/pull/3403#discussion_r443428044", "createdAt": "2020-06-22T09:23:02Z", "author": {"login": "pop4959"}, "path": "Essentials/src/com/earth2me/essentials/commands/Commandhome.java", "diffHunk": "@@ -41,7 +43,11 @@ public void run(final Server server, final User user, final String commandLabel,\n             if (\"bed\".equalsIgnoreCase(homeName) && user.isAuthorized(\"essentials.home.bed\")) {\n                 final Location bed = player.getBase().getBedSpawnLocation();\n                 if (bed != null) {\n-                    user.getTeleport().teleport(bed, charge, TeleportCause.COMMAND);\n+                    UserTeleportHomeEvent event = new UserTeleportHomeEvent(user, bed, UserTeleportHomeEvent.HomeType.BED);\n+                    Bukkit.getServer().getPluginManager().callEvent(event);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1ef452561b61c039975b7033ba18dfe09f873887"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2MjkzMzQ2OnYy", "diffSide": "RIGHT", "path": "Essentials/src/com/earth2me/essentials/commands/Commandhome.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQwOToyMzowNlrOGm4s_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQwOToyMzowNlrOGm4s_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzQyODA5Mg==", "bodyText": "=", "url": "https://github.com/EssentialsX/Essentials/pull/3403#discussion_r443428092", "createdAt": "2020-06-22T09:23:06Z", "author": {"login": "pop4959"}, "path": "Essentials/src/com/earth2me/essentials/commands/Commandhome.java", "diffHunk": "@@ -53,7 +59,11 @@ public void run(final Server server, final User user, final String commandLabel,\n             final List<String> homes = player.getHomes();\n             if (homes.isEmpty() && player.equals(user)) {\n                 if (ess.getSettings().isSpawnIfNoHome()) {\n-                    user.getTeleport().respawn(charge, TeleportCause.COMMAND);\n+                    UserTeleportHomeEvent event = new UserTeleportHomeEvent(user, bed != null ? bed : player.getWorld().getSpawnLocation(), UserTeleportHomeEvent.HomeType.RESPAWN);\n+                    Bukkit.getServer().getPluginManager().callEvent(event);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1ef452561b61c039975b7033ba18dfe09f873887"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2MjkzMzYzOnYy", "diffSide": "RIGHT", "path": "Essentials/src/com/earth2me/essentials/commands/Commandhome.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQwOToyMzowOVrOGm4tGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQwOToyMzowOVrOGm4tGw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzQyODEyMw==", "bodyText": "We can get the server from the user", "url": "https://github.com/EssentialsX/Essentials/pull/3403#discussion_r443428123", "createdAt": "2020-06-22T09:23:09Z", "author": {"login": "pop4959"}, "path": "Essentials/src/com/earth2me/essentials/commands/Commandhome.java", "diffHunk": "@@ -97,8 +107,12 @@ private void goHome(final User user, final User player, final String home, final\n         if (user.getWorld() != loc.getWorld() && ess.getSettings().isWorldHomePermissions() && !user.isAuthorized(\"essentials.worlds.\" + loc.getWorld().getName())) {\n             throw new Exception(tl(\"noPerm\", \"essentials.worlds.\" + loc.getWorld().getName()));\n         }\n-        user.getTeleport().teleport(loc, charge, TeleportCause.COMMAND);\n-        user.sendMessage(tl(\"teleportHome\", home));\n+        UserTeleportHomeEvent event = new UserTeleportHomeEvent(user, loc, UserTeleportHomeEvent.HomeType.HOME);\n+        Bukkit.getServer().getPluginManager().callEvent(event);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1ef452561b61c039975b7033ba18dfe09f873887"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2MjkzMzk1OnYy", "diffSide": "RIGHT", "path": "Essentials/src/net/ess3/api/events/UserTeleportHomeEvent.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQwOToyMzoxM1rOGm4tRw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQwOToyMzoxM1rOGm4tRw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzQyODE2Nw==", "bodyText": "It may be useful to have the home name relayed in the event as well", "url": "https://github.com/EssentialsX/Essentials/pull/3403#discussion_r443428167", "createdAt": "2020-06-22T09:23:13Z", "author": {"login": "pop4959"}, "path": "Essentials/src/net/ess3/api/events/UserTeleportHomeEvent.java", "diffHunk": "@@ -0,0 +1,83 @@\n+package net.ess3.api.events;\n+\n+import net.ess3.api.IUser;\n+import org.bukkit.Location;\n+import org.bukkit.event.Cancellable;\n+import org.bukkit.event.Event;\n+import org.bukkit.event.HandlerList;\n+\n+/**\n+ * Called when a user is teleported home via the /home command.\n+ *\n+ * This is called before {@link net.ess3.api.events.UserTeleportEvent UserTeleportEvent}.\n+ */\n+public class UserTeleportHomeEvent extends Event implements Cancellable {\n+    private static final HandlerList handlers = new HandlerList();\n+\n+    private final IUser user;\n+    private final Location target;\n+    private final HomeType homeType;\n+    private boolean cancelled = false;\n+\n+    public UserTeleportHomeEvent(IUser user, Location target, HomeType homeType) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1ef452561b61c039975b7033ba18dfe09f873887"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2MjkzNDE2OnYy", "diffSide": "RIGHT", "path": "Essentials/src/net/ess3/api/events/UserTeleportHomeEvent.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQwOToyMzoxNlrOGm4tZg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQwOToyMzoxNlrOGm4tZg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzQyODE5OA==", "bodyText": "Maybe SPAWN instead of RESPAWN, since the player is not really respawning, they are just teleporting to spawn (the location)", "url": "https://github.com/EssentialsX/Essentials/pull/3403#discussion_r443428198", "createdAt": "2020-06-22T09:23:16Z", "author": {"login": "pop4959"}, "path": "Essentials/src/net/ess3/api/events/UserTeleportHomeEvent.java", "diffHunk": "@@ -0,0 +1,83 @@\n+package net.ess3.api.events;\n+\n+import net.ess3.api.IUser;\n+import org.bukkit.Location;\n+import org.bukkit.event.Cancellable;\n+import org.bukkit.event.Event;\n+import org.bukkit.event.HandlerList;\n+\n+/**\n+ * Called when a user is teleported home via the /home command.\n+ *\n+ * This is called before {@link net.ess3.api.events.UserTeleportEvent UserTeleportEvent}.\n+ */\n+public class UserTeleportHomeEvent extends Event implements Cancellable {\n+    private static final HandlerList handlers = new HandlerList();\n+\n+    private final IUser user;\n+    private final Location target;\n+    private final HomeType homeType;\n+    private boolean cancelled = false;\n+\n+    public UserTeleportHomeEvent(IUser user, Location target, HomeType homeType) {\n+        this.user = user;\n+        this.target = target;\n+        this.homeType = homeType;\n+    }\n+\n+    /**\n+     * Returns the user who is being teleported\n+     *\n+     * @return The teleportee.\n+     */\n+    public IUser getUser() {\n+        return user;\n+    }\n+\n+    /**\n+     * Returns the location the user is teleporting to.\n+     *\n+     * @return Teleportation destination location.\n+     */\n+    public Location getHomeLocation() {\n+        return target;\n+    }\n+\n+    /**\n+     * Returns the home location type.\n+     *\n+     * {@link HomeType#HOME}    - A user-set home location.\n+     * {@link HomeType#BED}     - A user's bed location.\n+     * {@link HomeType#RESPAWN} - A user's bed location, if set. Otherwise, the world spawn.\n+     *\n+     * @return Home location type.\n+     */\n+    public HomeType getHomeType() {\n+        return homeType;\n+    }\n+\n+    @Override\n+    public boolean isCancelled() {\n+        return cancelled;\n+    }\n+\n+    @Override\n+    public void setCancelled(boolean cancelled) {\n+        this.cancelled = cancelled;\n+    }\n+\n+    @Override\n+    public HandlerList getHandlers() {\n+        return handlers;\n+    }\n+\n+    public static HandlerList getHandlerList() {\n+        return handlers;\n+    }\n+\n+    public enum HomeType {\n+        HOME,\n+        BED,\n+        RESPAWN", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1ef452561b61c039975b7033ba18dfe09f873887"}, "originalPosition": 81}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4729, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}