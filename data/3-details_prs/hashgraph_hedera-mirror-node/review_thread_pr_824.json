{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMzMzIyMjEz", "number": 824, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQwMzoxNzo0MVrOEE6yqw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQwMzoyMTowOFrOEE608w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczNTkzMDAzOnYy", "diffSide": "RIGHT", "path": "hedera-mirror-importer/src/main/java/com/hedera/mirror/importer/exception/InvalidEntityException.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQwMzoxNzo0MVrOGi1uUw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQwNDo1NToyOFrOGi3BFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTE4NDk3OQ==", "bodyText": "Should extend ImporterException", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/824#discussion_r439184979", "createdAt": "2020-06-12T03:17:41Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-importer/src/main/java/com/hedera/mirror/importer/exception/InvalidEntityException.java", "diffHunk": "@@ -0,0 +1,30 @@\n+package com.hedera.mirror.importer.exception;\n+\n+/*-\n+ * \u200c\n+ * Hedera Mirror Node\n+ * \u200b\n+ * Copyright (C) 2019 - 2020 Hedera Hashgraph, LLC\n+ * \u200b\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ * \u200d\n+ */\n+\n+public class InvalidEntityException extends RuntimeException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "be218a0ac990baa8720a410acb86183e5740190f"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTIwNjE2Nw==", "bodyText": "Done.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/824#discussion_r439206167", "createdAt": "2020-06-12T04:55:28Z", "author": {"login": "apeksharma"}, "path": "hedera-mirror-importer/src/main/java/com/hedera/mirror/importer/exception/InvalidEntityException.java", "diffHunk": "@@ -0,0 +1,30 @@\n+package com.hedera.mirror.importer.exception;\n+\n+/*-\n+ * \u200c\n+ * Hedera Mirror Node\n+ * \u200b\n+ * Copyright (C) 2019 - 2020 Hedera Hashgraph, LLC\n+ * \u200b\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ * \u200d\n+ */\n+\n+public class InvalidEntityException extends RuntimeException {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTE4NDk3OQ=="}, "originalCommit": {"oid": "be218a0ac990baa8720a410acb86183e5740190f"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczNTkzMTAwOnYy", "diffSide": "RIGHT", "path": "hedera-mirror-importer/src/main/java/com/hedera/mirror/importer/parser/record/entity/EntityRecordItemListener.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQwMzoxODozMVrOGi1u9g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQwNDo1NTozNFrOGi3BLA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTE4NTE0Mg==", "bodyText": "Please log the consensusNs as well. It should probably just be at warn level as it's due to customer input and not alert worthy.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/824#discussion_r439185142", "createdAt": "2020-06-12T03:18:31Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-importer/src/main/java/com/hedera/mirror/importer/parser/record/entity/EntityRecordItemListener.java", "diffHunk": "@@ -95,7 +96,13 @@ public void onItem(RecordItem recordItem) throws ImporterException {\n         TransactionHandler transactionHandler = transactionHandlerFactory.create(body);\n \n         long consensusNs = Utility.timeStampInNanos(txRecord.getConsensusTimestamp());\n-        EntityId entityId = transactionHandler.getEntity(recordItem);\n+        EntityId entityId;\n+        try {\n+            entityId = transactionHandler.getEntity(recordItem);\n+        } catch (InvalidEntityException e) { // transaction can have invalid topic/contract/file id\n+            log.error(e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "be218a0ac990baa8720a410acb86183e5740190f"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTIwNjE4OA==", "bodyText": "Done.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/824#discussion_r439206188", "createdAt": "2020-06-12T04:55:34Z", "author": {"login": "apeksharma"}, "path": "hedera-mirror-importer/src/main/java/com/hedera/mirror/importer/parser/record/entity/EntityRecordItemListener.java", "diffHunk": "@@ -95,7 +96,13 @@ public void onItem(RecordItem recordItem) throws ImporterException {\n         TransactionHandler transactionHandler = transactionHandlerFactory.create(body);\n \n         long consensusNs = Utility.timeStampInNanos(txRecord.getConsensusTimestamp());\n-        EntityId entityId = transactionHandler.getEntity(recordItem);\n+        EntityId entityId;\n+        try {\n+            entityId = transactionHandler.getEntity(recordItem);\n+        } catch (InvalidEntityException e) { // transaction can have invalid topic/contract/file id\n+            log.error(e);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTE4NTE0Mg=="}, "originalCommit": {"oid": "be218a0ac990baa8720a410acb86183e5740190f"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczNTkzNTg3OnYy", "diffSide": "RIGHT", "path": "hedera-mirror-importer/src/main/java/com/hedera/mirror/importer/parser/record/entity/sql/SqlEntityListener.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQwMzoyMTowOFrOGi1xpQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQwNDo1NzoyOFrOGi3C4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTE4NTgyOQ==", "bodyText": "nit: Should use highest level interface that still meets your requirements (Dependency Inversion Principle). Recommend Collection. Also can be initialized here.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/824#discussion_r439185829", "createdAt": "2020-06-12T03:21:08Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-importer/src/main/java/com/hedera/mirror/importer/parser/record/entity/sql/SqlEntityListener.java", "diffHunk": "@@ -56,6 +57,9 @@\n     private final DataSource dataSource;\n     private final RecordFileRepository recordFileRepository;\n     private long batch_count = 0;\n+    // Keeps track of entityIds seen in the current file being processed. This is for optimizing inserts into\n+    // t_entities table so that insertion of node and treasury ids are not tried for every transaction.\n+    private HashSet<EntityId> entityIds;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "be218a0ac990baa8720a410acb86183e5740190f"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTIwNjYyNA==", "bodyText": "Done.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/824#discussion_r439206624", "createdAt": "2020-06-12T04:57:28Z", "author": {"login": "apeksharma"}, "path": "hedera-mirror-importer/src/main/java/com/hedera/mirror/importer/parser/record/entity/sql/SqlEntityListener.java", "diffHunk": "@@ -56,6 +57,9 @@\n     private final DataSource dataSource;\n     private final RecordFileRepository recordFileRepository;\n     private long batch_count = 0;\n+    // Keeps track of entityIds seen in the current file being processed. This is for optimizing inserts into\n+    // t_entities table so that insertion of node and treasury ids are not tried for every transaction.\n+    private HashSet<EntityId> entityIds;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTE4NTgyOQ=="}, "originalCommit": {"oid": "be218a0ac990baa8720a410acb86183e5740190f"}, "originalPosition": 14}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1090, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}