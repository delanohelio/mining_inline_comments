{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc4NDQ1NTcw", "number": 551, "title": "Split historical and incoming message retrieval", "bodyText": "Detailed description:\n\nAdds properties to disable historical or incoming flows\nAdd property to timeout historical if no message seen within 30s\nMoves page size calculation from repository to layer above so historical and incoming can vary\nEncapsulates historical flow in TopicMessageRetriever\nChanges default listener to shared poller\nIncreases frequency and page size of shared poller\nAdds a buffer to shared poller to avoid a race condition where messages might be missed\nBuffer is backfilled on startup and doesn't wait for first subscriber\nSwitches all pollers to use less racy repeating mechanism (no need for running flag)\nChange all tests to not use verifyComplete() as it can potentially run indefinitely\n\nWhich issue(s) this PR fixes:\nFixes #542\nSpecial notes for your reviewer:\nChecklist\n\n Documentation added\n Tests updated", "createdAt": "2020-02-21T19:51:17Z", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/551", "merged": true, "mergeCommit": {"oid": "42a51ae5a8e4d3e5f83c5c7607db8852f8196586"}, "closed": true, "closedAt": "2020-02-24T22:59:53Z", "author": {"login": "steven-sheehy"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcGmJxxABqjMwNjE4OTMxNTE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcHlrYAgFqTM2Mzc2MTM5Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5acdd95506c8f54660a6856f5792943408545bf8", "author": {"user": {"login": "steven-sheehy", "name": "Steven Sheehy"}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/5acdd95506c8f54660a6856f5792943408545bf8", "committedDate": "2020-02-21T19:43:16Z", "message": "Split historical and incoming message retrieval\n\nSigned-off-by: Steven Sheehy <steven.sheehy@hedera.com>"}, "afterCommit": {"oid": "5d8063d59bf89e54e32a7b439990c9e2ef8a3127", "author": {"user": {"login": "steven-sheehy", "name": "Steven Sheehy"}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/5d8063d59bf89e54e32a7b439990c9e2ef8a3127", "committedDate": "2020-02-21T20:56:36Z", "message": "Split historical and incoming message retrieval\n\nSigned-off-by: Steven Sheehy <steven.sheehy@hedera.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5d8063d59bf89e54e32a7b439990c9e2ef8a3127", "author": {"user": {"login": "steven-sheehy", "name": "Steven Sheehy"}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/5d8063d59bf89e54e32a7b439990c9e2ef8a3127", "committedDate": "2020-02-21T20:56:36Z", "message": "Split historical and incoming message retrieval\n\nSigned-off-by: Steven Sheehy <steven.sheehy@hedera.com>"}, "afterCommit": {"oid": "c4dbc30a93983bffdc7941e47a4cecd2f509af31", "author": {"user": {"login": "steven-sheehy", "name": "Steven Sheehy"}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/c4dbc30a93983bffdc7941e47a4cecd2f509af31", "committedDate": "2020-02-21T21:19:50Z", "message": "Split historical and incoming message retrieval\n\nSigned-off-by: Steven Sheehy <steven.sheehy@hedera.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYyOTI5NzI5", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/551#pullrequestreview-362929729", "createdAt": "2020-02-21T21:32:20Z", "commit": {"oid": "c4dbc30a93983bffdc7941e47a4cecd2f509af31"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQyMTozMjoyMFrOFtFNSg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQyMTo0MDoyOFrOFtFZLQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjgxNTU2Mg==", "bodyText": "q: what quantity is this? # messages or bytes or seconds? Might be worth noting", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/551#discussion_r382815562", "createdAt": "2020-02-21T21:32:20Z", "author": {"login": "Nana-EC"}, "path": "hedera-mirror-grpc/src/main/java/com/hedera/mirror/grpc/listener/ListenerProperties.java", "diffHunk": "@@ -32,10 +33,21 @@\n public class ListenerProperties {\n \n     @NotNull\n-    private Duration pollingFrequency = Duration.ofSeconds(2);\n+    private Duration bufferInitial = Duration.ofSeconds(5);\n+\n+    @Min(1)\n+    private int bufferSize = 50_000;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c4dbc30a93983bffdc7941e47a4cecd2f509af31"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjgxNjA4MA==", "bodyText": "Maybe we should make this configureable in the properties file also", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/551#discussion_r382816080", "createdAt": "2020-02-21T21:33:50Z", "author": {"login": "Nana-EC"}, "path": "hedera-mirror-grpc/src/main/java/com/hedera/mirror/grpc/listener/PollingTopicListener.java", "diffHunk": "@@ -40,15 +44,20 @@\n \n     private final ListenerProperties listenerProperties;\n     private final TopicMessageRepository topicMessageRepository;\n+    private final Scheduler scheduler = Schedulers\n+            .newParallel(\"poll\", 4 * Runtime.getRuntime().availableProcessors(), true);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c4dbc30a93983bffdc7941e47a4cecd2f509af31"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjgxODU0MQ==", "bodyText": "nit: you're not using the subscription argument", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/551#discussion_r382818541", "createdAt": "2020-02-21T21:40:18Z", "author": {"login": "Nana-EC"}, "path": "hedera-mirror-grpc/src/main/java/com/hedera/mirror/grpc/listener/SharedPollingTopicListener.java", "diffHunk": "@@ -89,12 +116,32 @@ private boolean filterMessage(TopicMessage message, TopicMessageFilter filter) {\n     @Data\n     private class PollingContext {\n \n-        private volatile Instant lastConsensusTimestamp = Instant.now();\n-        private volatile boolean running = false;\n+        private final AtomicLong count = new AtomicLong(0L);\n+        private final Stopwatch stopwatch = Stopwatch.createUnstarted();\n+        private volatile Instant lastConsensusTimestamp = Instant.now().minus(listenerProperties.getBufferInitial());\n \n         void onNext(TopicMessage topicMessage) {\n+            count.incrementAndGet();\n             lastConsensusTimestamp = topicMessage.getConsensusTimestamp();\n             log.trace(\"Next message: {}\", topicMessage);\n         }\n+\n+        void onPollEnd() {\n+            var elapsed = stopwatch.elapsed(TimeUnit.MILLISECONDS);\n+            var rate = elapsed > 0 ? (int) (1000.0 * count.get() / elapsed) : 0;\n+            log.debug(\"Finished querying with {} messages in {} ({}/s)\", count, stopwatch, rate);\n+        }\n+\n+        void onPollStart(Subscription subscription) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c4dbc30a93983bffdc7941e47a4cecd2f509af31"}, "originalPosition": 124}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjgxODYwNQ==", "bodyText": "nit: you're not using the subscription argument", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/551#discussion_r382818605", "createdAt": "2020-02-21T21:40:28Z", "author": {"login": "Nana-EC"}, "path": "hedera-mirror-grpc/src/main/java/com/hedera/mirror/grpc/listener/SharedPollingTopicListener.java", "diffHunk": "@@ -89,12 +116,32 @@ private boolean filterMessage(TopicMessage message, TopicMessageFilter filter) {\n     @Data\n     private class PollingContext {\n \n-        private volatile Instant lastConsensusTimestamp = Instant.now();\n-        private volatile boolean running = false;\n+        private final AtomicLong count = new AtomicLong(0L);\n+        private final Stopwatch stopwatch = Stopwatch.createUnstarted();\n+        private volatile Instant lastConsensusTimestamp = Instant.now().minus(listenerProperties.getBufferInitial());\n \n         void onNext(TopicMessage topicMessage) {\n+            count.incrementAndGet();\n             lastConsensusTimestamp = topicMessage.getConsensusTimestamp();\n             log.trace(\"Next message: {}\", topicMessage);\n         }\n+\n+        void onPollEnd() {\n+            var elapsed = stopwatch.elapsed(TimeUnit.MILLISECONDS);\n+            var rate = elapsed > 0 ? (int) (1000.0 * count.get() / elapsed) : 0;\n+            log.debug(\"Finished querying with {} messages in {} ({}/s)\", count, stopwatch, rate);\n+        }\n+\n+        void onPollStart(Subscription subscription) {\n+            count.set(0L);\n+            stopwatch.reset().start();\n+            log.debug(\"Querying for messages after timestamp {}\", lastConsensusTimestamp);\n+        }\n+\n+        // Backfill the buffer on startup\n+        void onStart(Subscription subscription) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c4dbc30a93983bffdc7941e47a4cecd2f509af31"}, "originalPosition": 131}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "480e3111dc54be660bda3f0917edc8e675f1b93f", "author": {"user": {"login": "steven-sheehy", "name": "Steven Sheehy"}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/480e3111dc54be660bda3f0917edc8e675f1b93f", "committedDate": "2020-02-22T04:59:27Z", "message": "Split historical and incoming message retrieval\n\nSigned-off-by: Steven Sheehy <steven.sheehy@hedera.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c4dbc30a93983bffdc7941e47a4cecd2f509af31", "author": {"user": {"login": "steven-sheehy", "name": "Steven Sheehy"}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/c4dbc30a93983bffdc7941e47a4cecd2f509af31", "committedDate": "2020-02-21T21:19:50Z", "message": "Split historical and incoming message retrieval\n\nSigned-off-by: Steven Sheehy <steven.sheehy@hedera.com>"}, "afterCommit": {"oid": "480e3111dc54be660bda3f0917edc8e675f1b93f", "author": {"user": {"login": "steven-sheehy", "name": "Steven Sheehy"}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/480e3111dc54be660bda3f0917edc8e675f1b93f", "committedDate": "2020-02-22T04:59:27Z", "message": "Split historical and incoming message retrieval\n\nSigned-off-by: Steven Sheehy <steven.sheehy@hedera.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYzNTA0NTUz", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/551#pullrequestreview-363504553", "createdAt": "2020-02-24T16:04:37Z", "commit": {"oid": "480e3111dc54be660bda3f0917edc8e675f1b93f"}, "state": "DISMISSED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxNjowNDozN1rOFtmM6Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxNjowNDozN1rOFtmM6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzM1NjEzNw==", "bodyText": "Yeah. I think in the future when we get to really fine tuning and tweaking all the thread properties we'll want to be able to configure these on the fly.\nSince it's a parallel scheduler it makes sense to leave it as a multiple of the availableProcessors like reactor does.\nYou can make the multiple (4 in this case - make this default) configurable in the listenerProperties.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/551#discussion_r383356137", "createdAt": "2020-02-24T16:04:37Z", "author": {"login": "Nana-EC"}, "path": "hedera-mirror-grpc/src/main/java/com/hedera/mirror/grpc/listener/PollingTopicListener.java", "diffHunk": "@@ -40,15 +44,20 @@\n \n     private final ListenerProperties listenerProperties;\n     private final TopicMessageRepository topicMessageRepository;\n+    private final Scheduler scheduler = Schedulers\n+            .newParallel(\"poll\", 4 * Runtime.getRuntime().availableProcessors(), true);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjgxNjA4MA=="}, "originalCommit": {"oid": "c4dbc30a93983bffdc7941e47a4cecd2f509af31"}, "originalPosition": 16}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f634f0bfc178b9698c66916e247da1d5c296e1f6", "author": {"user": {"login": "steven-sheehy", "name": "Steven Sheehy"}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/f634f0bfc178b9698c66916e247da1d5c296e1f6", "committedDate": "2020-02-24T17:26:44Z", "message": "Merge remote-tracking branch 'origin/master' into split-poller"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9ab0f53f839cd53626f2f5917f43f444b886955c", "author": {"user": {"login": "steven-sheehy", "name": "Steven Sheehy"}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/9ab0f53f839cd53626f2f5917f43f444b886955c", "committedDate": "2020-02-24T18:55:58Z", "message": "Add retriever threadMultiplier and timeout options\n\nSigned-off-by: Steven Sheehy <steven.sheehy@hedera.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYzNjM4MTQx", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/551#pullrequestreview-363638141", "createdAt": "2020-02-24T19:22:23Z", "commit": {"oid": "9ab0f53f839cd53626f2f5917f43f444b886955c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYzNzYxMzk2", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/551#pullrequestreview-363761396", "createdAt": "2020-02-24T22:57:25Z", "commit": {"oid": "9ab0f53f839cd53626f2f5917f43f444b886955c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3268, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}