{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE5MDM0MDcw", "number": 765, "title": "Add runningHashVersion to REST and GRPC APIs", "bodyText": "Detailed description:\nAdditional changes:\n\nUse middleware for common debug logging in REST\nRemove redundant comments\nanalytics.js has not been updated in 6 months even though schema changed so many times. It's queries are wrong now.\nAlso, there are no plans to do analytics through REST api server. It doesn't even make sense to do analytical workloads\non  rest api server given its criticality (used by exchanges and all).\nRemoving it. If it turns out to be wrong move, we can always add it back from git history.\n\nSigned-off-by: Apekshit Sharma apekshit.sharma@hedera.com\nWhich issue(s) this PR fixes:\nFixes #707\nSpecial notes for your reviewer:\nChecklist\n\n Documentation added\n Tests updated", "createdAt": "2020-05-16T23:02:20Z", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/765", "merged": true, "mergeCommit": {"oid": "8da2ecebb887a908139f06a060fadc6d6eb1b0c5"}, "closed": true, "closedAt": "2020-05-19T18:26:16Z", "author": {"login": "apeksharma"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcihXVsAFqTQxMzY3MzYzNg==", "endCursor": "Y3Vyc29yOnYyOpPPAAABci4CT_gFqTQxNDY3NTUwNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEzNjczNjM2", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/765#pullrequestreview-413673636", "createdAt": "2020-05-18T14:55:24Z", "commit": {"oid": "5ea59bf256e7d2177982c79b32e6d430b350532f"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxNDo1NToyNVrOGW65_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxNToxMToyN1rOGW7oDg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjY4Njk3NA==", "bodyText": "Mapping a transport specific payload to a non-transport specific domain object is the responsibility of the controller layer. We may want to reuse this domain object for different transports. If you just need code reuse for the test, change the access from private to package-private.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/765#discussion_r426686974", "createdAt": "2020-05-18T14:55:25Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-grpc/src/main/java/com/hedera/mirror/grpc/controller/ConsensusController.java", "diffHunk": "@@ -101,15 +100,6 @@ private TopicMessageFilter toFilter(ConsensusTopicQuery query) {\n         return builder.build();\n     }\n \n-    private ConsensusTopicResponse toResponse(TopicMessage topicMessage) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5ea59bf256e7d2177982c79b32e6d430b350532f"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjY4OTMzNQ==", "bodyText": "The next value would be 5, not 9", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/765#discussion_r426689335", "createdAt": "2020-05-18T14:58:25Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-protobuf/src/main/proto/com/hedera/mirror/api/proto/ConsensusService.proto", "diffHunk": "@@ -51,6 +51,8 @@ message ConsensusTopicResponse {\n     bytes runningHash = 3; // The running hash (SHA384) of every message.\n \n     uint64 sequenceNumber = 4; // Starts at 1 for first submitted message. Incremented on each submitted message.\n+\n+    uint64 runningHashVersion = 9; // Version of the SHA-384 digest used to update the running hash.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5ea59bf256e7d2177982c79b32e6d430b350532f"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjY5MTExMg==", "bodyText": "Should be moved to middleware folder", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/765#discussion_r426691112", "createdAt": "2020-05-18T15:00:49Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-rest/server.js", "diffHunk": "@@ -94,6 +94,12 @@ app.use(bodyParser.json());\n app.use(compression());\n app.use(cors());\n \n+// logging middleware\n+app.use(function (req, res, next) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5ea59bf256e7d2177982c79b32e6d430b350532f"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjY5ODc2Ng==", "bodyText": "Please avoid all argument constructors unless there's just a couple arguments. You should instead prefer builder or setters. Only reason this object has an all args constructor is for use with the builder (and only reason it's not builder only I think is for JPA). We should disable public use of that constructor with @AllArgsConstructor(access = AccessLevel.PRIVATE).\nReason is at larger argument lengths it becomes harder to determine if you're setting the correct value, especially if multiple have the same type. This is a source of subtle bugs. It also makes it much hard to merge other people's changes in and refactor. For example, when we both added fields to RecordItem (which uses all args constructor) in recent PRs it was difficult for me to merge.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/765#discussion_r426698766", "createdAt": "2020-05-18T15:11:27Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-grpc/src/test/java/com/hedera/mirror/grpc/jmeter/handler/ConnectionHandler.java", "diffHunk": "@@ -81,12 +81,7 @@ public void insertTopicMessage(int newTopicsMessageCount, long topicNum, Instant\n             long sequenceNum = nextSequenceNum + i;\n             Instant temp = startTime.plus(sequenceNum, ChronoUnit.NANOS);\n             Long consensusTimestamp = converter.convert(temp);\n-            TopicMessage topicMessage = new TopicMessage();\n-            topicMessage.setConsensusTimestamp(consensusTimestamp);\n-            topicMessage.setSequenceNumber(sequenceNum);\n-            topicMessage.setMessage(BYTES);\n-            topicMessage.setRunningHash(BYTES);\n-            topicMessage.setRealmNum(0);\n+            TopicMessage topicMessage = new TopicMessage(consensusTimestamp, BYTES, 0, BYTES, sequenceNum, 0, 2);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5ea59bf256e7d2177982c79b32e6d430b350532f"}, "originalPosition": 10}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "12f64f6fca8e04f636e46f75823c8a4169db243f", "author": {"user": {"login": "apeksharma", "name": "Apekshit Sharma"}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/12f64f6fca8e04f636e46f75823c8a4169db243f", "committedDate": "2020-05-19T08:14:55Z", "message": "address review\n\nSigned-off-by: Apekshit Sharma <apekshit.sharma@hedera.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5ea59bf256e7d2177982c79b32e6d430b350532f", "author": {"user": {"login": "apeksharma", "name": "Apekshit Sharma"}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/5ea59bf256e7d2177982c79b32e6d430b350532f", "committedDate": "2020-05-16T22:49:23Z", "message": "Return runningHashVersion for hcs messages in REST and GRPC apis\n\nAdditional changes:\n- Use middleware for common debug logging in REST\n- Remove redundant comments\n- analytics.js has not been updated in 6 months even though schema changed so many times. It's queries are wrong now.\nAlso, there are no plans to do analytics through REST api server. It doesn't even make sense to do analytical workloads\non  rest api server given its criticality (used by exchanges and all).\nRemoving it. If it turns out to be wrong move, we can always add it back from git history.\n\nSigned-off-by: Apekshit Sharma <apekshit.sharma@hedera.com>"}, "afterCommit": {"oid": "12f64f6fca8e04f636e46f75823c8a4169db243f", "author": {"user": {"login": "apeksharma", "name": "Apekshit Sharma"}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/12f64f6fca8e04f636e46f75823c8a4169db243f", "committedDate": "2020-05-19T08:14:55Z", "message": "address review\n\nSigned-off-by: Apekshit Sharma <apekshit.sharma@hedera.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE0NDk0MjA5", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/765#pullrequestreview-414494209", "createdAt": "2020-05-19T14:19:59Z", "commit": {"oid": "12f64f6fca8e04f636e46f75823c8a4169db243f"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE0NTc0MTAz", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/765#pullrequestreview-414574103", "createdAt": "2020-05-19T15:36:31Z", "commit": {"oid": "12f64f6fca8e04f636e46f75823c8a4169db243f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE0NTc2OTMw", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/765#pullrequestreview-414576930", "createdAt": "2020-05-19T15:39:34Z", "commit": {"oid": "12f64f6fca8e04f636e46f75823c8a4169db243f"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxNTozOTozNFrOGXmiuQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxNTozOTo0OVrOGXmjYw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzQwMTkxMw==", "bodyText": "Actually I don't think we want *.\nIt's bad practice cause then it exposes new fields that may be internal only.\nExplicitly state the fields you want", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/765#discussion_r427401913", "createdAt": "2020-05-19T15:39:34Z", "author": {"login": "Nana-EC"}, "path": "hedera-mirror-rest/topicmessage.js", "diffHunk": "@@ -113,26 +117,30 @@ const processGetMessageByConsensusTimestampRequest = (req, res) => {\n };\n \n /**\n+ * Handler function for /:id/messages/:sequencenumber API.\n  * Extracts and validates topic and sequence params and creates db query statement in preparation for db call to get message\n+ * @return {Promise} Promise for PostgreSQL query\n  */\n-const processGetMessageByTopicAndSequenceRequest = (req, res) => {\n+const getMessageByTopicAndSequenceRequest = async (req, res) => {\n   const topicId = req.params.id;\n   const seqNum = req.params.sequencenumber;\n   validateGetSequenceMessageParams(topicId, seqNum);\n \n   // handle topic stated as x.y.z vs z e.g. topic 7 vs topic 0.0.7. Defaults realm to 0 if not stated\n   const entity = utils.parseEntityId(topicId);\n-  const pgSqlQuery =\n-    'select consensus_timestamp, realm_num, topic_num, message, running_hash, sequence_number' +\n-    ' from topic_message where realm_num = $1 and topic_num = $2 and sequence_number = $3 limit 1';\n+  const pgSqlQuery = `select * from topic_message where realm_num = $1 and topic_num = $2 and sequence_number = $3 limit 1`;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "12f64f6fca8e04f636e46f75823c8a4169db243f"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzQwMjA4Mw==", "bodyText": "Same comment", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/765#discussion_r427402083", "createdAt": "2020-05-19T15:39:49Z", "author": {"login": "Nana-EC"}, "path": "hedera-mirror-rest/topicmessage.js", "diffHunk": "@@ -179,9 +187,7 @@ const processGetTopicMessages = (req, res) => {\n \n const extractSqlFromTopicMessagesRequest = (topicId, filters) => {\n   const entity = utils.parseEntityId(topicId);\n-  let pgSqlQuery =\n-    'select consensus_timestamp, realm_num, topic_num, message, running_hash, sequence_number' +\n-    ' from topic_message where realm_num = $1 and topic_num = $2';\n+  let pgSqlQuery = `select * from topic_message where realm_num = $1 and topic_num = $2`;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "12f64f6fca8e04f636e46f75823c8a4169db243f"}, "originalPosition": 70}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5feda68f78e10426bb1efe8d1ebebead25deb886", "author": {"user": {"login": "apeksharma", "name": "Apekshit Sharma"}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/5feda68f78e10426bb1efe8d1ebebead25deb886", "committedDate": "2020-05-19T17:29:36Z", "message": "fix minor bug\n\nSigned-off-by: Apekshit Sharma <apekshit.sharma@hedera.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE0NjczOTc3", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/765#pullrequestreview-414673977", "createdAt": "2020-05-19T17:34:45Z", "commit": {"oid": "5feda68f78e10426bb1efe8d1ebebead25deb886"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE0Njc1NTA2", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/765#pullrequestreview-414675506", "createdAt": "2020-05-19T17:36:43Z", "commit": {"oid": "5feda68f78e10426bb1efe8d1ebebead25deb886"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3149, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}