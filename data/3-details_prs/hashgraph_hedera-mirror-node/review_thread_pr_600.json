{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg3OTI2MTA4", "number": 600, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxOTowNToxMlrODn8ZDg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxOToxODozNlrODn8m_Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzMjEwNTEwOnYy", "diffSide": "LEFT", "path": "hedera-mirror-importer/src/main/java/com/hedera/mirror/importer/domain/RecordFile.java", "isResolved": true, "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxOTowNToxMlrOF2PS1A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QyMTozMTo1OFrOF2T0lQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjQxODAwNA==", "bodyText": "We shouldn't remove the id, it is useful for replication and may be useful to third parties. Plus it's good practice to have an ID on a table unless you have a natural ID.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/600#discussion_r392418004", "createdAt": "2020-03-13T19:05:12Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-importer/src/main/java/com/hedera/mirror/importer/domain/RecordFile.java", "diffHunk": "@@ -39,9 +36,6 @@\n public class RecordFile {\n \n     @Id\n-    @GeneratedValue(strategy = GenerationType.IDENTITY)\n-    private Long id;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "389a70dba7db41f64590b7248b38d75db17de4ad"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjQyNzYzNw==", "bodyText": "ahh, i had to do git reset and re-commit to revert some spurious editor changes, forgot to add the migration file back. Added now. Thanks.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/600#discussion_r392427637", "createdAt": "2020-03-13T19:27:45Z", "author": {"login": "apeksharma"}, "path": "hedera-mirror-importer/src/main/java/com/hedera/mirror/importer/domain/RecordFile.java", "diffHunk": "@@ -39,9 +36,6 @@\n public class RecordFile {\n \n     @Id\n-    @GeneratedValue(strategy = GenerationType.IDENTITY)\n-    private Long id;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjQxODAwNA=="}, "originalCommit": {"oid": "389a70dba7db41f64590b7248b38d75db17de4ad"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjQzMzM4OA==", "bodyText": "I think you responded to the wrong comment. This is not added back.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/600#discussion_r392433388", "createdAt": "2020-03-13T19:42:22Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-importer/src/main/java/com/hedera/mirror/importer/domain/RecordFile.java", "diffHunk": "@@ -39,9 +36,6 @@\n public class RecordFile {\n \n     @Id\n-    @GeneratedValue(strategy = GenerationType.IDENTITY)\n-    private Long id;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjQxODAwNA=="}, "originalCommit": {"oid": "389a70dba7db41f64590b7248b38d75db17de4ad"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjQzOTAwMA==", "bodyText": "i believe this column is inconsequential for logical replication. Unique ID are useful for LR when the table might otherwise have duplicate rows.\nIsn't name field natural id?", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/600#discussion_r392439000", "createdAt": "2020-03-13T19:56:18Z", "author": {"login": "apeksharma"}, "path": "hedera-mirror-importer/src/main/java/com/hedera/mirror/importer/domain/RecordFile.java", "diffHunk": "@@ -39,9 +36,6 @@\n public class RecordFile {\n \n     @Id\n-    @GeneratedValue(strategy = GenerationType.IDENTITY)\n-    private Long id;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjQxODAwNA=="}, "originalCommit": {"oid": "389a70dba7db41f64590b7248b38d75db17de4ad"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjQ0MjczNw==", "bodyText": "a) IDs are absolutely crucial for PostgreSQL replication. See #525\nb) Name is not currently a natural ID. It is a unique index but it is not made the primary key of the table\nc) IDs are good practice in general unless the table is so large adding an ID would be costly. Record files is not large.\nd) BRD or others might be using it", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/600#discussion_r392442737", "createdAt": "2020-03-13T20:06:22Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-importer/src/main/java/com/hedera/mirror/importer/domain/RecordFile.java", "diffHunk": "@@ -39,9 +36,6 @@\n public class RecordFile {\n \n     @Id\n-    @GeneratedValue(strategy = GenerationType.IDENTITY)\n-    private Long id;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjQxODAwNA=="}, "originalCommit": {"oid": "389a70dba7db41f64590b7248b38d75db17de4ad"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjQ3OTU3MQ==", "bodyText": "#525 : i have never been sure about the legitimacy of that issue, never commented though since it was not picked up in sprints. Either way, without getting into details of that issue, what I understand is that you really care about having a primary key.\nWhat do you think about making name as primary key? That'd address a,b,c points above. For (d), i had confirmed before deleting with BRD that they didn't need it. Others can also use name as primary key. What do you think?", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/600#discussion_r392479571", "createdAt": "2020-03-13T21:11:25Z", "author": {"login": "apeksharma"}, "path": "hedera-mirror-importer/src/main/java/com/hedera/mirror/importer/domain/RecordFile.java", "diffHunk": "@@ -39,9 +36,6 @@\n public class RecordFile {\n \n     @Id\n-    @GeneratedValue(strategy = GenerationType.IDENTITY)\n-    private Long id;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjQxODAwNA=="}, "originalCommit": {"oid": "389a70dba7db41f64590b7248b38d75db17de4ad"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjQ5MjE4MQ==", "bodyText": "I want id put back, not sure how I can be any clearer. Having an auto generated ID on a table helps replication and it makes it more efficient with Hibernate not having to do extra queries to see if it exists before inserting. Natural IDs cannot be used for that.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/600#discussion_r392492181", "createdAt": "2020-03-13T21:31:58Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-importer/src/main/java/com/hedera/mirror/importer/domain/RecordFile.java", "diffHunk": "@@ -39,9 +36,6 @@\n public class RecordFile {\n \n     @Id\n-    @GeneratedValue(strategy = GenerationType.IDENTITY)\n-    private Long id;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjQxODAwNA=="}, "originalCommit": {"oid": "389a70dba7db41f64590b7248b38d75db17de4ad"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzMjEwNzQ5OnYy", "diffSide": "LEFT", "path": "hedera-mirror-importer/src/main/java/com/hedera/mirror/importer/domain/Transaction.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxOTowNjoxMFrOF2PUXA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxOTowNjoxMFrOF2PUXA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjQxODM5Ng==", "bodyText": "I don't see a database migration to remove this column.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/600#discussion_r392418396", "createdAt": "2020-03-13T19:06:10Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-importer/src/main/java/com/hedera/mirror/importer/domain/Transaction.java", "diffHunk": "@@ -64,11 +64,6 @@\n     @ManyToOne(cascade = CascadeType.PERSIST)\n     private Entities entity;\n \n-    // Deprecated, value set to 0 until removed.\n-    @Column(name = \"fk_rec_file_id\")\n-    @Deprecated(forRemoval = true, since = \"v0.7.0\")\n-    private Long recordFileId;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "389a70dba7db41f64590b7248b38d75db17de4ad"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzMjExOTEwOnYy", "diffSide": "RIGHT", "path": "hedera-mirror-importer/src/test/resources/application-default.yml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxOToxMDoyM1rOF2Pbjg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxOToyOTo1NFrOF2P8AQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjQyMDIzOA==", "bodyText": "Revert. This was done by your request that the test database not conflict with a local db of the same name.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/600#discussion_r392420238", "createdAt": "2020-03-13T19:10:23Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-importer/src/test/resources/application-default.yml", "diffHunk": "@@ -1,7 +1,7 @@\n hedera:\n   mirror:\n     db:\n-      name: mirror_node_test\n+      name: mirror_node", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "af2728b6eaeea7454430298d73e2876693e0a68b"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjQyODU0NQ==", "bodyText": "yup, this was not meant to make into change\ni tweak this and integration file to reuse existing container when am working on tests for slightly faster iterations.  :)", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/600#discussion_r392428545", "createdAt": "2020-03-13T19:29:54Z", "author": {"login": "apeksharma"}, "path": "hedera-mirror-importer/src/test/resources/application-default.yml", "diffHunk": "@@ -1,7 +1,7 @@\n hedera:\n   mirror:\n     db:\n-      name: mirror_node_test\n+      name: mirror_node", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjQyMDIzOA=="}, "originalCommit": {"oid": "af2728b6eaeea7454430298d73e2876693e0a68b"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzMjE0MDc3OnYy", "diffSide": "RIGHT", "path": "hedera-mirror-importer/src/main/java/com/hedera/mirror/importer/parser/StreamFileListener.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxOToxODozNlrOF2PpJg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxOTo0NTo0MFrOF2QT4g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjQyMzcxOA==", "bodyText": "I would prefer this be void and an exception be thrown if for any reason the processing should not continue.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/600#discussion_r392423718", "createdAt": "2020-03-13T19:18:36Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-importer/src/main/java/com/hedera/mirror/importer/parser/StreamFileListener.java", "diffHunk": "@@ -1,20 +1,18 @@\n package com.hedera.mirror.importer.parser;\n \n-import java.util.Optional;\n-\n import com.hedera.mirror.importer.exception.ImporterException;\n import com.hedera.mirror.importer.parser.domain.StreamFileData;\n \n public interface StreamFileListener<T> {\n     /**\n      * Called when starting to process a new stream file.\n      *\n-     * @return non-empty <T> if the file processing should continue; empty to skip the file.\n+     * @return true if the file processing should continue; false to skip the file.\n      * @throws ImporterException\n      */\n-    Optional<T> onStart(StreamFileData streamFileData) throws ImporterException;\n+    boolean onStart(StreamFileData streamFileData) throws ImporterException;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "af2728b6eaeea7454430298d73e2876693e0a68b"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjQyODc3NQ==", "bodyText": "boolean is okay.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/600#discussion_r392428775", "createdAt": "2020-03-13T19:30:32Z", "author": {"login": "apeksharma"}, "path": "hedera-mirror-importer/src/main/java/com/hedera/mirror/importer/parser/StreamFileListener.java", "diffHunk": "@@ -1,20 +1,18 @@\n package com.hedera.mirror.importer.parser;\n \n-import java.util.Optional;\n-\n import com.hedera.mirror.importer.exception.ImporterException;\n import com.hedera.mirror.importer.parser.domain.StreamFileData;\n \n public interface StreamFileListener<T> {\n     /**\n      * Called when starting to process a new stream file.\n      *\n-     * @return non-empty <T> if the file processing should continue; empty to skip the file.\n+     * @return true if the file processing should continue; false to skip the file.\n      * @throws ImporterException\n      */\n-    Optional<T> onStart(StreamFileData streamFileData) throws ImporterException;\n+    boolean onStart(StreamFileData streamFileData) throws ImporterException;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjQyMzcxOA=="}, "originalCommit": {"oid": "af2728b6eaeea7454430298d73e2876693e0a68b"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjQzNDY1OA==", "bodyText": "It's not okay. It leaks details from the listener class into the caller class.  A listener class is supposed to receive events only, not return data and change the flow of the parent class.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/600#discussion_r392434658", "createdAt": "2020-03-13T19:45:40Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-importer/src/main/java/com/hedera/mirror/importer/parser/StreamFileListener.java", "diffHunk": "@@ -1,20 +1,18 @@\n package com.hedera.mirror.importer.parser;\n \n-import java.util.Optional;\n-\n import com.hedera.mirror.importer.exception.ImporterException;\n import com.hedera.mirror.importer.parser.domain.StreamFileData;\n \n public interface StreamFileListener<T> {\n     /**\n      * Called when starting to process a new stream file.\n      *\n-     * @return non-empty <T> if the file processing should continue; empty to skip the file.\n+     * @return true if the file processing should continue; false to skip the file.\n      * @throws ImporterException\n      */\n-    Optional<T> onStart(StreamFileData streamFileData) throws ImporterException;\n+    boolean onStart(StreamFileData streamFileData) throws ImporterException;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjQyMzcxOA=="}, "originalCommit": {"oid": "af2728b6eaeea7454430298d73e2876693e0a68b"}, "originalPosition": 17}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1226, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}