{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA1MzM5OTgz", "number": 1139, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxNDo1ODo1NFrOEv0zfQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxNToyODozN1rOEv1zUg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4NTgzNjc3OnYy", "diffSide": "RIGHT", "path": "hedera-mirror-rest/constants.js", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxNDo1ODo1NFrOHlBe4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQyMjoxODoyNVrOHlTL-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODU4MzY0OA==", "bodyText": "Is it possible to load these from the table lazily on first request and cache it instead of hardcoding here?", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1139#discussion_r508583648", "createdAt": "2020-10-20T14:58:54Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-rest/constants.js", "diffHunk": "@@ -94,17 +101,58 @@ const defaultBucketNames = {\n \n const recordStreamPrefix = 'recordstreams/record';\n \n+const transactionTypes = {\n+  UNKNOWN: -1,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "03a52a2a583fb9e7dab26d8efe28c141453485ac"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODgwNjQxMw==", "bodyText": "Yeah, I can add another service for transaction types", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1139#discussion_r508806413", "createdAt": "2020-10-20T20:07:58Z", "author": {"login": "Nana-EC"}, "path": "hedera-mirror-rest/constants.js", "diffHunk": "@@ -94,17 +101,58 @@ const defaultBucketNames = {\n \n const recordStreamPrefix = 'recordstreams/record';\n \n+const transactionTypes = {\n+  UNKNOWN: -1,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODU4MzY0OA=="}, "originalCommit": {"oid": "03a52a2a583fb9e7dab26d8efe28c141453485ac"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODgzMTY4Ng==", "bodyText": "Not a few line change and would add tests to make sure db query is good.\nI'm proposing to move this to a v0.22 ticket to unblock v0.21", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1139#discussion_r508831686", "createdAt": "2020-10-20T20:52:19Z", "author": {"login": "Nana-EC"}, "path": "hedera-mirror-rest/constants.js", "diffHunk": "@@ -94,17 +101,58 @@ const defaultBucketNames = {\n \n const recordStreamPrefix = 'recordstreams/record';\n \n+const transactionTypes = {\n+  UNKNOWN: -1,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODU4MzY0OA=="}, "originalCommit": {"oid": "03a52a2a583fb9e7dab26d8efe28c141453485ac"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODg3MzcyMQ==", "bodyText": "Moving this item to next release is fine", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1139#discussion_r508873721", "createdAt": "2020-10-20T22:18:25Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-rest/constants.js", "diffHunk": "@@ -94,17 +101,58 @@ const defaultBucketNames = {\n \n const recordStreamPrefix = 'recordstreams/record';\n \n+const transactionTypes = {\n+  UNKNOWN: -1,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODU4MzY0OA=="}, "originalCommit": {"oid": "03a52a2a583fb9e7dab26d8efe28c141453485ac"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4NTkxMjk3OnYy", "diffSide": "RIGHT", "path": "hedera-mirror-rest/utils.js", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxNToxNDozOVrOHlCP2A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxODo0NTowNlrOHlMPVQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODU5NjE4NA==", "bodyText": "I don't think it's a good user experience to silently fail and return all transactions if they mistype the transaction type. We should return an error if it's not one of the known types so they can adjust their criteria. Add a test for this scenario as well.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1139#discussion_r508596184", "createdAt": "2020-10-20T15:14:39Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-rest/utils.js", "diffHunk": "@@ -724,6 +733,22 @@ const parsePublicKey = (publicKey) => {\n   return decodedKey == null ? publicKey : decodedKey;\n };\n \n+const getTransactionTypeQuery = (parsedQueryParams) => {\n+  if (_.isNil(parsedQueryParams)) {\n+    return '';\n+  }\n+\n+  const transactionType = parsedQueryParams[constants.filterKeys.TRANSACTION_TYPE];\n+\n+  if (isValidTransactionType(transactionType)) {\n+    return `${constants.transactionColumns.TYPE}${opsMap.eq}${\n+      constants.transactionTypes[transactionType.toUpperCase()]\n+    }`;\n+  }\n+\n+  return '';", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "03a52a2a583fb9e7dab26d8efe28c141453485ac"}, "originalPosition": 70}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODc1OTg5Mw==", "bodyText": "Good point.\nWill throw", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1139#discussion_r508759893", "createdAt": "2020-10-20T18:45:06Z", "author": {"login": "Nana-EC"}, "path": "hedera-mirror-rest/utils.js", "diffHunk": "@@ -724,6 +733,22 @@ const parsePublicKey = (publicKey) => {\n   return decodedKey == null ? publicKey : decodedKey;\n };\n \n+const getTransactionTypeQuery = (parsedQueryParams) => {\n+  if (_.isNil(parsedQueryParams)) {\n+    return '';\n+  }\n+\n+  const transactionType = parsedQueryParams[constants.filterKeys.TRANSACTION_TYPE];\n+\n+  if (isValidTransactionType(transactionType)) {\n+    return `${constants.transactionColumns.TYPE}${opsMap.eq}${\n+      constants.transactionTypes[transactionType.toUpperCase()]\n+    }`;\n+  }\n+\n+  return '';", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODU5NjE4NA=="}, "originalCommit": {"oid": "03a52a2a583fb9e7dab26d8efe28c141453485ac"}, "originalPosition": 70}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4NTkyMDYzOnYy", "diffSide": "RIGHT", "path": "hedera-mirror-rest/__tests__/utils.test.js", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxNToxNjoxMlrOHlCUtg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQyMDo1NjowMlrOHlQvxw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODU5NzQzMA==", "bodyText": "Add a lower case test.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1139#discussion_r508597430", "createdAt": "2020-10-20T15:16:12Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-rest/__tests__/utils.test.js", "diffHunk": "@@ -228,6 +228,33 @@ describe('Utils isValidNum tests', () => {\n   });\n });\n \n+describe('Utils isValidTransactionType tests', () => {\n+  test('Verify invalid for null', () => {\n+    expect(utils.isValidTransactionType(null)).toBe(false);\n+  });\n+  test('Verify invalid for empty input', () => {\n+    expect(utils.isValidTransactionType('')).toBe(false);\n+  });\n+  test('Verify invalid for invalid input', () => {\n+    expect(utils.isValidTransactionType('1234567890.000000001')).toBe(false);\n+  });\n+  test('Verify invalid for entity format shard', () => {\n+    expect(utils.isValidTransactionType('1.0.1')).toBe(false);\n+  });\n+  test('Verify invalid for negative num', () => {\n+    expect(utils.isValidTransactionType(-10)).toBe(false);\n+  });\n+  test('Verify invalid for 0', () => {\n+    expect(utils.isValidTransactionType(0)).toBe(false);\n+  });\n+  test('Verify valid for valid CONSENSUSSUBMITMESSAGE transaction type', () => {\n+    expect(utils.isValidTransactionType('CONSENSUSSUBMITMESSAGE')).toBe(true);\n+  });\n+  test('Verify valid for valid TOKENTRANSFERS transaction type', () => {\n+    expect(utils.isValidTransactionType('TOKENTRANSFERS')).toBe(true);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "03a52a2a583fb9e7dab26d8efe28c141453485ac"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODgzMzczNQ==", "bodyText": "Added", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1139#discussion_r508833735", "createdAt": "2020-10-20T20:56:02Z", "author": {"login": "Nana-EC"}, "path": "hedera-mirror-rest/__tests__/utils.test.js", "diffHunk": "@@ -228,6 +228,33 @@ describe('Utils isValidNum tests', () => {\n   });\n });\n \n+describe('Utils isValidTransactionType tests', () => {\n+  test('Verify invalid for null', () => {\n+    expect(utils.isValidTransactionType(null)).toBe(false);\n+  });\n+  test('Verify invalid for empty input', () => {\n+    expect(utils.isValidTransactionType('')).toBe(false);\n+  });\n+  test('Verify invalid for invalid input', () => {\n+    expect(utils.isValidTransactionType('1234567890.000000001')).toBe(false);\n+  });\n+  test('Verify invalid for entity format shard', () => {\n+    expect(utils.isValidTransactionType('1.0.1')).toBe(false);\n+  });\n+  test('Verify invalid for negative num', () => {\n+    expect(utils.isValidTransactionType(-10)).toBe(false);\n+  });\n+  test('Verify invalid for 0', () => {\n+    expect(utils.isValidTransactionType(0)).toBe(false);\n+  });\n+  test('Verify valid for valid CONSENSUSSUBMITMESSAGE transaction type', () => {\n+    expect(utils.isValidTransactionType('CONSENSUSSUBMITMESSAGE')).toBe(true);\n+  });\n+  test('Verify valid for valid TOKENTRANSFERS transaction type', () => {\n+    expect(utils.isValidTransactionType('TOKENTRANSFERS')).toBe(true);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODU5NzQzMA=="}, "originalCommit": {"oid": "03a52a2a583fb9e7dab26d8efe28c141453485ac"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4NjAwMDE4OnYy", "diffSide": "RIGHT", "path": "hedera-mirror-rest/constants.js", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxNToyODozN1rOHlDHyw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQyMjowMDowNFrOHlSuyA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODYxMDUwNw==", "bodyText": "Our naming is all over the map. Is this query param case sensitive? I think we need to use camel case transactionType to try to be consistent.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1139#discussion_r508610507", "createdAt": "2020-10-20T15:28:37Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-rest/constants.js", "diffHunk": "@@ -33,16 +34,22 @@ const filterKeys = {\n   TIMESTAMP: 'timestamp',\n   TOKENID: 'tokenId',\n   TOKEN_ID: 'token.id',\n-  TYPE: 'type',\n+  CREDIT_TYPE: 'type',\n+  TRANSACTION_TYPE: 'transactiontype',", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "03a52a2a583fb9e7dab26d8efe28c141453485ac"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODcxMzk5OQ==", "bodyText": "I think right now it is case sensitive based on filterValidityChecks()\nFor a url query we should probably make all the filter keys case-insensitive when matching.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1139#discussion_r508713999", "createdAt": "2020-10-20T17:34:44Z", "author": {"login": "Nana-EC"}, "path": "hedera-mirror-rest/constants.js", "diffHunk": "@@ -33,16 +34,22 @@ const filterKeys = {\n   TIMESTAMP: 'timestamp',\n   TOKENID: 'tokenId',\n   TOKEN_ID: 'token.id',\n-  TYPE: 'type',\n+  CREDIT_TYPE: 'type',\n+  TRANSACTION_TYPE: 'transactiontype',", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODYxMDUwNw=="}, "originalCommit": {"oid": "03a52a2a583fb9e7dab26d8efe28c141453485ac"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODc1ODA5NA==", "bodyText": "There's a few ways to do this in a clean and easy to scale fashion\n\nUse a middle ware to ensure an expected case\nUse an additional framework for clear request path and query param management. I think I have a ticket for this.\n\nEither case is a larger and out of scope of this item. So I'll open a ticket to address that separately.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1139#discussion_r508758094", "createdAt": "2020-10-20T18:43:18Z", "author": {"login": "Nana-EC"}, "path": "hedera-mirror-rest/constants.js", "diffHunk": "@@ -33,16 +34,22 @@ const filterKeys = {\n   TIMESTAMP: 'timestamp',\n   TOKENID: 'tokenId',\n   TOKEN_ID: 'token.id',\n-  TYPE: 'type',\n+  CREDIT_TYPE: 'type',\n+  TRANSACTION_TYPE: 'transactiontype',", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODYxMDUwNw=="}, "originalCommit": {"oid": "03a52a2a583fb9e7dab26d8efe28c141453485ac"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODg2NjI0OA==", "bodyText": "As discussed went with hardcoding transactionType for now", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1139#discussion_r508866248", "createdAt": "2020-10-20T22:00:04Z", "author": {"login": "Nana-EC"}, "path": "hedera-mirror-rest/constants.js", "diffHunk": "@@ -33,16 +34,22 @@ const filterKeys = {\n   TIMESTAMP: 'timestamp',\n   TOKENID: 'tokenId',\n   TOKEN_ID: 'token.id',\n-  TYPE: 'type',\n+  CREDIT_TYPE: 'type',\n+  TRANSACTION_TYPE: 'transactiontype',", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODYxMDUwNw=="}, "originalCommit": {"oid": "03a52a2a583fb9e7dab26d8efe28c141453485ac"}, "originalPosition": 14}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1566, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}