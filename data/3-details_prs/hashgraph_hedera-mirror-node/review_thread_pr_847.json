{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQxMTY0Mzkz", "number": 847, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxNDo0ODo1NlrOEK7fNQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxNDo0ODo1NlrOEK7fNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5ODk1ODYxOnYy", "diffSide": "RIGHT", "path": "hedera-mirror-test/src/test/java/com/hedera/mirror/test/e2e/acceptance/client/TopicClient.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxNDo0ODo1NlrOGsQRig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQyMDoxODoxM1rOGsbz4g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTA1NzE2Mg==", "bodyText": "Longs.toByteArray(). But more importantly, why are we converting the long to bytes and then to string? What's wrong with instantRef.toEpochMilli().toString()?", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/847#discussion_r449057162", "createdAt": "2020-07-02T14:48:56Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-test/src/test/java/com/hedera/mirror/test/e2e/acceptance/client/TopicClient.java", "diffHunk": "@@ -120,10 +121,12 @@ public TransactionReceipt deleteTopic(ConsensusTopicId topicId) throws HederaSta\n                                                            int numMessages, boolean verify) throws HederaStatusException\n             , InterruptedException {\n         log.debug(\"Publishing {} message(s) to topicId : {}.\", numMessages, topicId);\n-        Instant refInstant = Instant.now();\n         List<TransactionReceipt> transactionReceiptList = new ArrayList<>();\n         for (int i = 0; i < numMessages; i++) {\n-            String message = baseMessage + \"_\" + refInstant + \"_\" + i + 1;\n+            Instant instantRef = Instant.now();\n+            byte[] byteArray = ByteBuffer.allocate(8).putLong(instantRef.toEpochMilli()).array();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b70214d19b2e0dd95225710e75d99d4f3734ff1d"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTIzMTE3Nw==", "bodyText": "This was to align with the engineering perf tests that put the long timestamp in the first 8 bytes explicitly.\nI can add a comment and check the optimization in a future PR", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/847#discussion_r449231177", "createdAt": "2020-07-02T19:42:15Z", "author": {"login": "Nana-EC"}, "path": "hedera-mirror-test/src/test/java/com/hedera/mirror/test/e2e/acceptance/client/TopicClient.java", "diffHunk": "@@ -120,10 +121,12 @@ public TransactionReceipt deleteTopic(ConsensusTopicId topicId) throws HederaSta\n                                                            int numMessages, boolean verify) throws HederaStatusException\n             , InterruptedException {\n         log.debug(\"Publishing {} message(s) to topicId : {}.\", numMessages, topicId);\n-        Instant refInstant = Instant.now();\n         List<TransactionReceipt> transactionReceiptList = new ArrayList<>();\n         for (int i = 0; i < numMessages; i++) {\n-            String message = baseMessage + \"_\" + refInstant + \"_\" + i + 1;\n+            Instant instantRef = Instant.now();\n+            byte[] byteArray = ByteBuffer.allocate(8).putLong(instantRef.toEpochMilli()).array();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTA1NzE2Mg=="}, "originalCommit": {"oid": "b70214d19b2e0dd95225710e75d99d4f3734ff1d"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTI0NjE3OA==", "bodyText": "But it's not getting the first 8 bytes of the message, it's taking an Instant's epoch millis and converting it to bytes and then strings.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/847#discussion_r449246178", "createdAt": "2020-07-02T20:18:13Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-test/src/test/java/com/hedera/mirror/test/e2e/acceptance/client/TopicClient.java", "diffHunk": "@@ -120,10 +121,12 @@ public TransactionReceipt deleteTopic(ConsensusTopicId topicId) throws HederaSta\n                                                            int numMessages, boolean verify) throws HederaStatusException\n             , InterruptedException {\n         log.debug(\"Publishing {} message(s) to topicId : {}.\", numMessages, topicId);\n-        Instant refInstant = Instant.now();\n         List<TransactionReceipt> transactionReceiptList = new ArrayList<>();\n         for (int i = 0; i < numMessages; i++) {\n-            String message = baseMessage + \"_\" + refInstant + \"_\" + i + 1;\n+            Instant instantRef = Instant.now();\n+            byte[] byteArray = ByteBuffer.allocate(8).putLong(instantRef.toEpochMilli()).array();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTA1NzE2Mg=="}, "originalCommit": {"oid": "b70214d19b2e0dd95225710e75d99d4f3734ff1d"}, "originalPosition": 17}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 885, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}