{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTEyNjgyNDY4", "number": 1203, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQyMToxNjoyN1rOE0jZAA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QyMTo0ODoyM1rOE0_iuQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzNTQxMjQ4OnYy", "diffSide": "RIGHT", "path": "hedera-mirror-monitor/src/main/java/com/hedera/mirror/monitor/HederaNetwork.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQyMToxNjoyN1rOHsV61w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQyMjo0Mjo1M1rOHsYjgA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjI1ODUxOQ==", "bodyText": "Wish we had a \"0.mainnet.hedera.com\" to. \"12.mainnet.hedera.com\" so that we would have to be adding IP's here", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1203#discussion_r516258519", "createdAt": "2020-11-02T21:16:27Z", "author": {"login": "Nana-EC"}, "path": "hedera-mirror-monitor/src/main/java/com/hedera/mirror/monitor/HederaNetwork.java", "diffHunk": "@@ -0,0 +1,71 @@\n+package com.hedera.mirror.monitor;\n+\n+/*-\n+ * \u200c\n+ * Hedera Mirror Node\n+ * \u200b\n+ * Copyright (C) 2019 - 2020 Hedera Hashgraph, LLC\n+ * \u200b\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ * \u200d\n+ */\n+\n+import java.util.Collections;\n+import java.util.Set;\n+import lombok.Getter;\n+import lombok.RequiredArgsConstructor;\n+\n+@Getter\n+@RequiredArgsConstructor\n+public enum HederaNetwork {\n+\n+    MAINNET(mainnet()),\n+    PREVIEWNET(previewnet()),\n+    TESTNET(testnet()),\n+    OTHER(Collections.emptySet());\n+\n+    private final Set<NodeProperties> nodes;\n+\n+    private static Set<NodeProperties> mainnet() {\n+        return Set.of(\n+                new NodeProperties(\"0.0.3\", \"35.237.200.180\"),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b81f5d06e74228e56f1f31f8bfc5e3071f04adf0"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjMwMTY5Ng==", "bodyText": "Agreed. Especially since there are actually 3 different IPs per node according to the docs. I think it has been brought up before but DNS is deemed too centralized.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1203#discussion_r516301696", "createdAt": "2020-11-02T22:42:53Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-monitor/src/main/java/com/hedera/mirror/monitor/HederaNetwork.java", "diffHunk": "@@ -0,0 +1,71 @@\n+package com.hedera.mirror.monitor;\n+\n+/*-\n+ * \u200c\n+ * Hedera Mirror Node\n+ * \u200b\n+ * Copyright (C) 2019 - 2020 Hedera Hashgraph, LLC\n+ * \u200b\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ * \u200d\n+ */\n+\n+import java.util.Collections;\n+import java.util.Set;\n+import lombok.Getter;\n+import lombok.RequiredArgsConstructor;\n+\n+@Getter\n+@RequiredArgsConstructor\n+public enum HederaNetwork {\n+\n+    MAINNET(mainnet()),\n+    PREVIEWNET(previewnet()),\n+    TESTNET(testnet()),\n+    OTHER(Collections.emptySet());\n+\n+    private final Set<NodeProperties> nodes;\n+\n+    private static Set<NodeProperties> mainnet() {\n+        return Set.of(\n+                new NodeProperties(\"0.0.3\", \"35.237.200.180\"),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjI1ODUxOQ=="}, "originalCommit": {"oid": "b81f5d06e74228e56f1f31f8bfc5e3071f04adf0"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzNTQ3NjA0OnYy", "diffSide": "RIGHT", "path": "hedera-mirror-monitor/src/main/java/com/hedera/mirror/monitor/MonitorProperties.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQyMTozNjozNlrOHsWhTA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QwMTowMDoxMFrOHsdBfA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjI2ODM2NA==", "bodyText": "Might be good to add a separate list of supporting operators.\nThere are scenarios where it's useful to hold onto the account details of newly created account so run transactions on their behalf\ne.g. create new accounts, send crypto/tokens to them, have new accounts send it back or amongst eachother", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1203#discussion_r516268364", "createdAt": "2020-11-02T21:36:36Z", "author": {"login": "Nana-EC"}, "path": "hedera-mirror-monitor/src/main/java/com/hedera/mirror/monitor/MonitorProperties.java", "diffHunk": "@@ -0,0 +1,49 @@\n+package com.hedera.mirror.monitor;\n+\n+/*-\n+ * \u200c\n+ * Hedera Mirror Node\n+ * \u200b\n+ * Copyright (C) 2019 - 2020 Hedera Hashgraph, LLC\n+ * \u200b\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ * \u200d\n+ */\n+\n+import java.util.LinkedHashSet;\n+import java.util.Set;\n+import javax.validation.constraints.NotNull;\n+import lombok.Data;\n+import org.springframework.boot.context.properties.ConfigurationProperties;\n+import org.springframework.validation.annotation.Validated;\n+\n+@Data\n+@Validated\n+@ConfigurationProperties(\"hedera.mirror.monitor\")\n+public class MonitorProperties {\n+\n+    @NotNull\n+    private HederaNetwork network = HederaNetwork.TESTNET;\n+\n+    @NotNull\n+    private Set<NodeProperties> nodes = new LinkedHashSet<>();\n+\n+    @NotNull\n+    private OperatorProperties operator = new OperatorProperties();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b81f5d06e74228e56f1f31f8bfc5e3071f04adf0"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjMxOTY2Nw==", "bodyText": "Wanting to setup clients with operators created during the run of the monitor, while useful, doesn't sound like it falls under performance testing or monitoring of mirror nodes. I can see potentially wanting a list of operators to distribute the load amongst the Client objects on startup. If that sounds useful, I can definitely add that. For entities created during the run, the info is useful for MAPI subscription purposes which is why I opened #1220.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1203#discussion_r516319667", "createdAt": "2020-11-02T23:13:15Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-monitor/src/main/java/com/hedera/mirror/monitor/MonitorProperties.java", "diffHunk": "@@ -0,0 +1,49 @@\n+package com.hedera.mirror.monitor;\n+\n+/*-\n+ * \u200c\n+ * Hedera Mirror Node\n+ * \u200b\n+ * Copyright (C) 2019 - 2020 Hedera Hashgraph, LLC\n+ * \u200b\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ * \u200d\n+ */\n+\n+import java.util.LinkedHashSet;\n+import java.util.Set;\n+import javax.validation.constraints.NotNull;\n+import lombok.Data;\n+import org.springframework.boot.context.properties.ConfigurationProperties;\n+import org.springframework.validation.annotation.Validated;\n+\n+@Data\n+@Validated\n+@ConfigurationProperties(\"hedera.mirror.monitor\")\n+public class MonitorProperties {\n+\n+    @NotNull\n+    private HederaNetwork network = HederaNetwork.TESTNET;\n+\n+    @NotNull\n+    private Set<NodeProperties> nodes = new LinkedHashSet<>();\n+\n+    @NotNull\n+    private OperatorProperties operator = new OperatorProperties();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjI2ODM2NA=="}, "originalCommit": {"oid": "b81f5d06e74228e56f1f31f8bfc5e3071f04adf0"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjM3NDkwOA==", "bodyText": "Let's leave it for #1220", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1203#discussion_r516374908", "createdAt": "2020-11-03T01:00:10Z", "author": {"login": "Nana-EC"}, "path": "hedera-mirror-monitor/src/main/java/com/hedera/mirror/monitor/MonitorProperties.java", "diffHunk": "@@ -0,0 +1,49 @@\n+package com.hedera.mirror.monitor;\n+\n+/*-\n+ * \u200c\n+ * Hedera Mirror Node\n+ * \u200b\n+ * Copyright (C) 2019 - 2020 Hedera Hashgraph, LLC\n+ * \u200b\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ * \u200d\n+ */\n+\n+import java.util.LinkedHashSet;\n+import java.util.Set;\n+import javax.validation.constraints.NotNull;\n+import lombok.Data;\n+import org.springframework.boot.context.properties.ConfigurationProperties;\n+import org.springframework.validation.annotation.Validated;\n+\n+@Data\n+@Validated\n+@ConfigurationProperties(\"hedera.mirror.monitor\")\n+public class MonitorProperties {\n+\n+    @NotNull\n+    private HederaNetwork network = HederaNetwork.TESTNET;\n+\n+    @NotNull\n+    private Set<NodeProperties> nodes = new LinkedHashSet<>();\n+\n+    @NotNull\n+    private OperatorProperties operator = new OperatorProperties();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjI2ODM2NA=="}, "originalCommit": {"oid": "b81f5d06e74228e56f1f31f8bfc5e3071f04adf0"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzNTQ5Mzg1OnYy", "diffSide": "RIGHT", "path": "hedera-mirror-monitor/src/main/java/com/hedera/mirror/monitor/generator/ScenarioProperties.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQyMTo0MjoxN1rOHsWrsw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQyMjo0Mzo0N1rOHsYl9w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjI3MTAyNw==", "bodyText": "should this be an int/long since we won't expect fraction TPS right?", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1203#discussion_r516271027", "createdAt": "2020-11-02T21:42:17Z", "author": {"login": "Nana-EC"}, "path": "hedera-mirror-monitor/src/main/java/com/hedera/mirror/monitor/generator/ScenarioProperties.java", "diffHunk": "@@ -0,0 +1,65 @@\n+package com.hedera.mirror.monitor.generator;\n+\n+/*-\n+ * \u200c\n+ * Hedera Mirror Node\n+ * \u200b\n+ * Copyright (C) 2019 - 2020 Hedera Hashgraph, LLC\n+ * \u200b\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ * \u200d\n+ */\n+\n+import java.time.Duration;\n+import java.util.LinkedHashMap;\n+import java.util.Map;\n+import javax.validation.constraints.Min;\n+import javax.validation.constraints.NotBlank;\n+import javax.validation.constraints.NotEmpty;\n+import javax.validation.constraints.NotNull;\n+import lombok.Data;\n+import org.hibernate.validator.constraints.time.DurationMin;\n+import org.springframework.validation.annotation.Validated;\n+\n+import com.hedera.datagenerator.sdk.supplier.TransactionType;\n+\n+@Data\n+@Validated\n+public class ScenarioProperties {\n+\n+    @DurationMin(seconds = 30)\n+    private Duration duration = Duration.ofMinutes(10L);\n+\n+    private boolean enabled = true;\n+\n+    @Min(0)\n+    private long limit = 0;\n+\n+    @NotBlank\n+    private String name;\n+\n+    @NotEmpty\n+    private Map<String, Object> properties = new LinkedHashMap<>();\n+\n+    private boolean receipt = false; // TODO: Retrieve a percentage of receipts and records\n+\n+    private boolean record = false;\n+\n+    @Min(0)\n+    private double tps = 10.0;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b81f5d06e74228e56f1f31f8bfc5e3071f04adf0"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjI5NjEzOA==", "bodyText": "No, we definitely do expect fractional. In fact, the example scenario checked in is 0.1 TPS AKA 1 every 10s like our transaction pinger.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1203#discussion_r516296138", "createdAt": "2020-11-02T22:34:55Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-monitor/src/main/java/com/hedera/mirror/monitor/generator/ScenarioProperties.java", "diffHunk": "@@ -0,0 +1,65 @@\n+package com.hedera.mirror.monitor.generator;\n+\n+/*-\n+ * \u200c\n+ * Hedera Mirror Node\n+ * \u200b\n+ * Copyright (C) 2019 - 2020 Hedera Hashgraph, LLC\n+ * \u200b\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ * \u200d\n+ */\n+\n+import java.time.Duration;\n+import java.util.LinkedHashMap;\n+import java.util.Map;\n+import javax.validation.constraints.Min;\n+import javax.validation.constraints.NotBlank;\n+import javax.validation.constraints.NotEmpty;\n+import javax.validation.constraints.NotNull;\n+import lombok.Data;\n+import org.hibernate.validator.constraints.time.DurationMin;\n+import org.springframework.validation.annotation.Validated;\n+\n+import com.hedera.datagenerator.sdk.supplier.TransactionType;\n+\n+@Data\n+@Validated\n+public class ScenarioProperties {\n+\n+    @DurationMin(seconds = 30)\n+    private Duration duration = Duration.ofMinutes(10L);\n+\n+    private boolean enabled = true;\n+\n+    @Min(0)\n+    private long limit = 0;\n+\n+    @NotBlank\n+    private String name;\n+\n+    @NotEmpty\n+    private Map<String, Object> properties = new LinkedHashMap<>();\n+\n+    private boolean receipt = false; // TODO: Retrieve a percentage of receipts and records\n+\n+    private boolean record = false;\n+\n+    @Min(0)\n+    private double tps = 10.0;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjI3MTAyNw=="}, "originalCommit": {"oid": "b81f5d06e74228e56f1f31f8bfc5e3071f04adf0"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjMwMjMyNw==", "bodyText": "That's fair", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1203#discussion_r516302327", "createdAt": "2020-11-02T22:43:47Z", "author": {"login": "Nana-EC"}, "path": "hedera-mirror-monitor/src/main/java/com/hedera/mirror/monitor/generator/ScenarioProperties.java", "diffHunk": "@@ -0,0 +1,65 @@\n+package com.hedera.mirror.monitor.generator;\n+\n+/*-\n+ * \u200c\n+ * Hedera Mirror Node\n+ * \u200b\n+ * Copyright (C) 2019 - 2020 Hedera Hashgraph, LLC\n+ * \u200b\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ * \u200d\n+ */\n+\n+import java.time.Duration;\n+import java.util.LinkedHashMap;\n+import java.util.Map;\n+import javax.validation.constraints.Min;\n+import javax.validation.constraints.NotBlank;\n+import javax.validation.constraints.NotEmpty;\n+import javax.validation.constraints.NotNull;\n+import lombok.Data;\n+import org.hibernate.validator.constraints.time.DurationMin;\n+import org.springframework.validation.annotation.Validated;\n+\n+import com.hedera.datagenerator.sdk.supplier.TransactionType;\n+\n+@Data\n+@Validated\n+public class ScenarioProperties {\n+\n+    @DurationMin(seconds = 30)\n+    private Duration duration = Duration.ofMinutes(10L);\n+\n+    private boolean enabled = true;\n+\n+    @Min(0)\n+    private long limit = 0;\n+\n+    @NotBlank\n+    private String name;\n+\n+    @NotEmpty\n+    private Map<String, Object> properties = new LinkedHashMap<>();\n+\n+    private boolean receipt = false; // TODO: Retrieve a percentage of receipts and records\n+\n+    private boolean record = false;\n+\n+    @Min(0)\n+    private double tps = 10.0;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjI3MTAyNw=="}, "originalCommit": {"oid": "b81f5d06e74228e56f1f31f8bfc5e3071f04adf0"}, "originalPosition": 59}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzOTk2ODk5OnYy", "diffSide": "RIGHT", "path": "hedera-mirror-monitor/pom.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QyMToyOTozMlrOHtBHrg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QyMToyOTozMlrOHtBHrg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjk2NjMxOA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        <version>1</version>\n          \n          \n            \n                        <version>${javax.version}</version>", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1203#discussion_r516966318", "createdAt": "2020-11-03T21:29:32Z", "author": {"login": "Nana-EC"}, "path": "hedera-mirror-monitor/pom.xml", "diffHunk": "@@ -0,0 +1,182 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n+<project xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+\n+    <artifactId>hedera-mirror-monitor</artifactId>\n+    <description>Monitors the Hedera Mirror Node end to end</description>\n+    <modelVersion>4.0.0</modelVersion>\n+    <name>Hedera Mirror Node Monitor</name>\n+    <packaging>jar</packaging>\n+\n+    <parent>\n+        <groupId>com.hedera</groupId>\n+        <artifactId>hedera-mirror-node</artifactId>\n+        <version>0.21.0-rc1</version>\n+    </parent>\n+\n+    <dependencies>\n+        <dependency>\n+            <groupId>com.fasterxml.jackson.core</groupId>\n+            <artifactId>jackson-databind</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>com.hedera</groupId>\n+            <artifactId>hedera-mirror-datagenerator</artifactId>\n+            <version>${project.version}</version>\n+            <exclusions>\n+                <exclusion>\n+                    <groupId>com.hedera</groupId>\n+                    <artifactId>hedera-mirror-importer</artifactId>\n+                </exclusion>\n+                <exclusion>\n+                    <groupId>org.springframework.boot</groupId>\n+                    <artifactId>spring-boot-starter-data-jpa</artifactId>\n+                </exclusion>\n+            </exclusions>\n+        </dependency>\n+        <dependency>\n+            <groupId>com.hedera.hashgraph</groupId>\n+            <artifactId>sdk</artifactId>\n+            <version>${hedera-sdk.version}</version>\n+        </dependency>\n+        <dependency>\n+            <groupId>com.lmax</groupId>\n+            <artifactId>disruptor</artifactId>\n+            <version>${disruptor.version}</version>\n+        </dependency>\n+        <dependency>\n+            <groupId>io.github.mweirauch</groupId>\n+            <artifactId>micrometer-jvm-extras</artifactId>\n+            <version>${micrometer-jvm-extras.version}</version>\n+        </dependency>\n+        <dependency>\n+            <groupId>io.micrometer</groupId>\n+            <artifactId>micrometer-registry-elastic</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>io.micrometer</groupId>\n+            <artifactId>micrometer-registry-prometheus</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>javax.inject</groupId>\n+            <artifactId>javax.inject</artifactId>\n+            <version>1</version>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "08dd0ba16575ee7d34da7b1cc17cff90051e2343"}, "originalPosition": 63}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI0MDAyNDg5OnYy", "diffSide": "RIGHT", "path": "hedera-mirror-monitor/src/main/java/com/hedera/mirror/monitor/config/MonitorConfiguration.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QyMTo0ODoyM1rOHtBpLw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QyMTo0ODoyM1rOHtBpLw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjk3NDg5NQ==", "bodyText": "nit: could use documentation on flow logic here highlighting the thread and channel logic", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1203#discussion_r516974895", "createdAt": "2020-11-03T21:48:23Z", "author": {"login": "Nana-EC"}, "path": "hedera-mirror-monitor/src/main/java/com/hedera/mirror/monitor/config/MonitorConfiguration.java", "diffHunk": "@@ -0,0 +1,59 @@\n+package com.hedera.mirror.monitor.config;\n+\n+/*-\n+ * \u200c\n+ * Hedera Mirror Node\n+ * \u200b\n+ * Copyright (C) 2019 - 2020 Hedera Hashgraph, LLC\n+ * \u200b\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ * \u200d\n+ */\n+\n+import java.util.concurrent.Executors;\n+import javax.annotation.Resource;\n+import lombok.extern.log4j.Log4j2;\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.context.annotation.Configuration;\n+import org.springframework.integration.dsl.IntegrationFlow;\n+import org.springframework.integration.dsl.IntegrationFlows;\n+import org.springframework.integration.endpoint.ReactiveMessageSourceProducer;\n+import org.springframework.messaging.support.GenericMessage;\n+\n+import com.hedera.mirror.monitor.generator.TransactionGenerator;\n+import com.hedera.mirror.monitor.publish.PublishProperties;\n+import com.hedera.mirror.monitor.publish.PublishRequest;\n+import com.hedera.mirror.monitor.publish.TransactionPublisher;\n+\n+@Log4j2\n+@Configuration\n+class MonitorConfiguration {\n+\n+    @Resource\n+    private PublishProperties publishProperties;\n+\n+    @Resource\n+    private TransactionGenerator transactionGenerator;\n+\n+    @Resource\n+    private TransactionPublisher transactionPublisher;\n+\n+    @Bean\n+    IntegrationFlow publishFlow() {\n+        return IntegrationFlows", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "08dd0ba16575ee7d34da7b1cc17cff90051e2343"}, "originalPosition": 53}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1382, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}