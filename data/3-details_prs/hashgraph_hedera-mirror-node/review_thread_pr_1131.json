{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAzNzU1ODIw", "number": 1131, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQxNDo1ODo0MFrOEuj7IQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQxNDo1OTozMFrOEuj9og==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE3MjU4NTI5OnYy", "diffSide": "RIGHT", "path": "hedera-mirror-test/src/test/java/com/hedera/mirror/test/e2e/acceptance/client/MirrorNodeClient.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQxNDo1ODo0MFrOHjDRAQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQxNDo1ODo0MFrOHjDRAQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjUxNTcxMw==", "bodyText": "Shouldn't construct a client for every request. Create it as a bean once and reuse it.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1131#discussion_r506515713", "createdAt": "2020-10-16T14:58:40Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-test/src/test/java/com/hedera/mirror/test/e2e/acceptance/client/MirrorNodeClient.java", "diffHunk": "@@ -108,6 +118,50 @@ public SubscriptionResponse subscribeToTopicAndRetrieveMessages(MirrorConsensusT\n         return subscriptionResponse;\n     }\n \n+    public ClientResponse verifyAccountRestEndpoint(String accountId, int lastCount) {\n+        log.debug(\"Verify account {} is returned by Mirror Node\", accountId);\n+        String endpoint = String.format(\"/api/v1/accounts/%s?order=desc&limit=%d\", accountId, lastCount);\n+        return verifyRestEndpoint(endpoint);\n+    }\n+\n+    public ClientResponse verifyAccountBalanceRestEndpoint(String accountId) {\n+        log.debug(\"Verify balance {} is returned by Mirror Node\", accountId);\n+        String endpoint = String.format(\"/api/v1/balances?account.id=%s\", accountId);\n+        return verifyRestEndpoint(endpoint);\n+    }\n+\n+    public ClientResponse verifyTransactionRestEntity(String transactionId) {\n+        log.debug(\"Verify transaction {} is returned by Mirror Node\", transactionId);\n+        String endpoint = \"/api/v1/transactions/\" + transactionId;\n+        return verifyRestEndpoint(endpoint);\n+    }\n+\n+    public ClientResponse verifyRestEndpoint(String apiEndpoint) {\n+        TcpClient tcpClient = TcpClient", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d8c77347812dfb15305d68aa0251e9640998b27e"}, "originalPosition": 48}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE3MjU5MTcwOnYy", "diffSide": "RIGHT", "path": "hedera-mirror-test/src/test/java/com/hedera/mirror/test/e2e/acceptance/client/MirrorNodeClient.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQxNDo1OTozMFrOHjDVQw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQxNDo1OTozMFrOHjDVQw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjUxNjgwMw==", "bodyText": "Shouldn't use string concatenation and formatting to construct URI as it doesn't properly escape variables. Use UriBuilder.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1131#discussion_r506516803", "createdAt": "2020-10-16T14:59:30Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-test/src/test/java/com/hedera/mirror/test/e2e/acceptance/client/MirrorNodeClient.java", "diffHunk": "@@ -108,6 +118,50 @@ public SubscriptionResponse subscribeToTopicAndRetrieveMessages(MirrorConsensusT\n         return subscriptionResponse;\n     }\n \n+    public ClientResponse verifyAccountRestEndpoint(String accountId, int lastCount) {\n+        log.debug(\"Verify account {} is returned by Mirror Node\", accountId);\n+        String endpoint = String.format(\"/api/v1/accounts/%s?order=desc&limit=%d\", accountId, lastCount);\n+        return verifyRestEndpoint(endpoint);\n+    }\n+\n+    public ClientResponse verifyAccountBalanceRestEndpoint(String accountId) {\n+        log.debug(\"Verify balance {} is returned by Mirror Node\", accountId);\n+        String endpoint = String.format(\"/api/v1/balances?account.id=%s\", accountId);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d8c77347812dfb15305d68aa0251e9640998b27e"}, "originalPosition": 37}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1551, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}