{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM5MTkzNjU0", "number": 1356, "title": "Lazy load transaction types for REST", "bodyText": "Detailed description:\n\nLoad transaction types from DB on REST startup, instead of static values.\n\nWhich issue(s) this PR fixes:\nFixes #1160\nSpecial notes for your reviewer:\nChecklist\n\n Documentation added\n Tests updated", "createdAt": "2020-12-14T06:55:59Z", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1356", "merged": true, "mergeCommit": {"oid": "7afcabda9c40d38e12366ea7933cf019a159334c"}, "closed": true, "closedAt": "2020-12-17T23:06:31Z", "author": {"login": "ijungmann"}, "timelineItems": {"totalCount": 48, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdmAG4-gH2gAyNTM5MTkzNjU0OjEyMzA1YjI5MmQzZGZjNzEyOTcxZWYzMmUxMTA1OTllZThjMmJmYzE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdnLApwgFqTU1NTAyNzg1MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "12305b292d3dfc712971ef32e110599ee8c2bfc1", "author": {"user": {"login": "ijungmann", "name": "Ian Jungmann"}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/12305b292d3dfc712971ef32e110599ee8c2bfc1", "committedDate": "2020-12-14T06:53:53Z", "message": "Lazy load transaction types for REST\n\nSigned-off-by: Ian Jungmann <ian.jungmann@hedera.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUxMDg1NjI0", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1356#pullrequestreview-551085624", "createdAt": "2020-12-14T06:57:20Z", "commit": {"oid": "12305b292d3dfc712971ef32e110599ee8c2bfc1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQwNjo1NzoyMFrOIFCThw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQwNjo1NzoyMFrOIFCThw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjE1MTU1OQ==", "bodyText": "Move this back down.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1356#discussion_r542151559", "createdAt": "2020-12-14T06:57:20Z", "author": {"login": "ijungmann"}, "path": "hedera-mirror-rest/utils.js", "diffHunk": "@@ -746,9 +747,9 @@ const getTransactionTypeQuery = (parsedQueryParams) => {\n   }\n \n   if (isValidTransactionType(transactionType)) {\n-    return `${constants.transactionColumns.TYPE}${opsMap.eq}${\n-      constants.transactionTypes[transactionType.toUpperCase()]\n-    }`;\n+    return `${constants.transactionColumns.TYPE}${opsMap.eq}${constants.transactionTypes.get(\n+      transactionType.toUpperCase()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "12305b292d3dfc712971ef32e110599ee8c2bfc1"}, "originalPosition": 18}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUxMDg1ODU2", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1356#pullrequestreview-551085856", "createdAt": "2020-12-14T06:57:52Z", "commit": {"oid": "12305b292d3dfc712971ef32e110599ee8c2bfc1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQwNjo1Nzo1MlrOIFCUeQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQwNjo1Nzo1MlrOIFCUeQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjE1MTgwMQ==", "bodyText": "Remove this, was for other PR/task", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1356#discussion_r542151801", "createdAt": "2020-12-14T06:57:52Z", "author": {"login": "ijungmann"}, "path": "hedera-mirror-rest/transactions.js", "diffHunk": "@@ -304,9 +304,9 @@ const getOneTransaction = async (req, res) => {\n     FROM transaction t\n     JOIN t_transaction_results ttr ON ttr.proto_id = t.result\n     JOIN t_transaction_types ttt ON ttt.proto_id = t.type\n-    JOIN crypto_transfer ctl ON  ctl.consensus_timestamp = t.consensus_ns\n+    LEFT JOIN crypto_transfer ctl ON  ctl.consensus_timestamp = t.consensus_ns", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "12305b292d3dfc712971ef32e110599ee8c2bfc1"}, "originalPosition": 26}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ac2d065c3c840a796fec46b463504f613ea680c0", "author": {"user": {"login": "ijungmann", "name": "Ian Jungmann"}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/ac2d065c3c840a796fec46b463504f613ea680c0", "committedDate": "2020-12-14T17:53:07Z", "message": "Code cleanup\n\nSigned-off-by: Ian Jungmann <ian.jungmann@hedera.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e6d57e4340ca51ec1dff68914c34a06f9738a1a2", "author": {"user": {"login": "ijungmann", "name": "Ian Jungmann"}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/e6d57e4340ca51ec1dff68914c34a06f9738a1a2", "committedDate": "2020-12-14T18:00:58Z", "message": "Code cleanup\n\nSigned-off-by: Ian Jungmann <ian.jungmann@hedera.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fbbcb153d5b4d0f30b4a3bab2199cbbdbade33e7", "author": {"user": {"login": "ijungmann", "name": "Ian Jungmann"}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/fbbcb153d5b4d0f30b4a3bab2199cbbdbade33e7", "committedDate": "2020-12-14T18:51:42Z", "message": "Move transactionTypes loading to separate file\n\nSigned-off-by: Ian Jungmann <ian.jungmann@hedera.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "57cd3e54cbe214fc9f15891a6292e96ba7be2fe1", "author": {"user": {"login": "ijungmann", "name": "Ian Jungmann"}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/57cd3e54cbe214fc9f15891a6292e96ba7be2fe1", "committedDate": "2020-12-14T18:57:04Z", "message": "Move transactionTypes loading to separate file\n\nSigned-off-by: Ian Jungmann <ian.jungmann@hedera.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "797daad33bd542cf2bb59ff0b1f458ea562eb080", "author": {"user": {"login": "ijungmann", "name": "Ian Jungmann"}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/797daad33bd542cf2bb59ff0b1f458ea562eb080", "committedDate": "2020-12-14T21:22:25Z", "message": "Fix tests to work with needed DB\n\nSigned-off-by: Ian Jungmann <ian.jungmann@hedera.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6345bce338116c11a89cc5b22518ef61512957b6", "author": {"user": {"login": "ijungmann", "name": "Ian Jungmann"}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/6345bce338116c11a89cc5b22518ef61512957b6", "committedDate": "2020-12-14T21:57:33Z", "message": "Refactoring\n\nSigned-off-by: Ian Jungmann <ian.jungmann@hedera.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a9fb75f53fa3eac0c94f40003e50d301332b8686", "author": {"user": {"login": "ijungmann", "name": "Ian Jungmann"}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/a9fb75f53fa3eac0c94f40003e50d301332b8686", "committedDate": "2020-12-14T22:00:23Z", "message": "Refactoring\n\nSigned-off-by: Ian Jungmann <ian.jungmann@hedera.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUxOTMwMzQ1", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1356#pullrequestreview-551930345", "createdAt": "2020-12-14T22:02:25Z", "commit": {"oid": "a9fb75f53fa3eac0c94f40003e50d301332b8686"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQyMjowMjoyNVrOIFsueQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQyMjowMjoyNVrOIFsueQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mjg0NjU4NQ==", "bodyText": "Not 100% on this name, I originally just had it as transactionTypes, but having transactionsTypes.transactionTypes.get() seemed hard to read.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1356#discussion_r542846585", "createdAt": "2020-12-14T22:02:25Z", "author": {"login": "ijungmann"}, "path": "hedera-mirror-rest/transactionTypes.js", "diffHunk": "@@ -0,0 +1,41 @@\n+/*-\n+ * \u200c\n+ * Hedera Mirror Node\n+ * \u200b\n+ * Copyright (C) 2019 - 2020 Hedera Hashgraph, LLC\n+ * \u200b\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ * \u200d\n+ */\n+\n+'use strict';\n+\n+const transactionTypesMap = new Map();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a9fb75f53fa3eac0c94f40003e50d301332b8686"}, "originalPosition": 23}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUxOTMxMTU5", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1356#pullrequestreview-551931159", "createdAt": "2020-12-14T22:03:29Z", "commit": {"oid": "a9fb75f53fa3eac0c94f40003e50d301332b8686"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQyMjowMzoyOVrOIFsyvg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQyMjowMzoyOVrOIFsyvg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mjg0NzY3OA==", "bodyText": "If there's a particular order these need to be in I will shuffle.  Goes for all of the imports after as well.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1356#discussion_r542847678", "createdAt": "2020-12-14T22:03:29Z", "author": {"login": "ijungmann"}, "path": "hedera-mirror-rest/__tests__/integration.test.js", "diffHunk": "@@ -51,15 +51,20 @@ const transactions = require('../transactions.js');\n const server = require('../server');\n const integrationDbOps = require('./integrationDbOps.js');\n const integrationDomainOps = require('./integrationDomainOps.js');\n+const utils = require('../utils');\n const {S3Ops} = require('./integrationS3Ops');\n const config = require('../config');\n const {cloudProviders} = require('../constants');\n+const transactionTypes = require('../transactionTypes');\n+const {InvalidArgumentError} = require('../errors/invalidArgumentError');\n+const constants = require('../constants');", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a9fb75f53fa3eac0c94f40003e50d301332b8686"}, "originalPosition": 10}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e54e4f7f82385fee4497ee521e97ce78ed0d7f78", "author": {"user": {"login": "ijungmann", "name": "Ian Jungmann"}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/e54e4f7f82385fee4497ee521e97ce78ed0d7f78", "committedDate": "2020-12-14T22:06:09Z", "message": "Refactor\n\nSigned-off-by: Ian Jungmann <ian.jungmann@hedera.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c302319b9bfd15553c1eacb71eae80857188f1d3", "author": {"user": {"login": "ijungmann", "name": "Ian Jungmann"}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/c302319b9bfd15553c1eacb71eae80857188f1d3", "committedDate": "2020-12-14T22:20:17Z", "message": "Fix license issue\n\nSigned-off-by: Ian Jungmann <ian.jungmann@hedera.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cf0d648583996b9491364d188e59c05e4c163a18", "author": {"user": {"login": "ijungmann", "name": "Ian Jungmann"}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/cf0d648583996b9491364d188e59c05e4c163a18", "committedDate": "2020-12-14T22:25:44Z", "message": "Add a comment\n\nSigned-off-by: Ian Jungmann <ian.jungmann@hedera.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4cae40be24f0ca0fbee1e0e44c9b8ff44ecd6acf", "author": {"user": {"login": "ijungmann", "name": "Ian Jungmann"}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/4cae40be24f0ca0fbee1e0e44c9b8ff44ecd6acf", "committedDate": "2020-12-15T01:18:56Z", "message": "Merge branch 'master' into rest_lazy_load_transaction_types"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUyNzE2Mjkz", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1356#pullrequestreview-552716293", "createdAt": "2020-12-15T17:49:47Z", "commit": {"oid": "4cae40be24f0ca0fbee1e0e44c9b8ff44ecd6acf"}, "state": "DISMISSED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxNzo0OTo0N1rOIGYHKg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxODowMDoxNVrOIGYlEQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzU1NzQxOA==", "bodyText": "nit: I like to put external libraries first and then local files after.\nAlso amongst local files I try to go alphabetically at each depth  in terms of directories.\nI don't mind the the order of directory depth so far as they are grouped.\nFor instance if I was rearranging I might do the below\n// external libraries\nconst S3 = require('aws-sdk/clients/s3');\nconst crypto = require('crypto');\nconst fs = require('fs');\nconst _ = require('lodash');\nconst path = require('path');\nconst request = require('supertest');\n\nconst integrationDbOps = require('./integrationDbOps.js');\nconst integrationDomainOps = require('./integrationDomainOps.js');\nconst config = require('../config');\nconst {cloudProviders} = require('../constants');\nconst EntityId = require('../entityId');\nconst {InvalidArgumentError} = require('../errors/invalidArgumentError');\nconst {S3Ops} = require('./integrationS3Ops');\nconst server = require('../server');\nconst transactions = require('../transactions.js');\nconst transactionTypes = require('../transactionTypes');\nconst utils = require('../utils');\nAll of these are nit suggestions since you asked.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1356#discussion_r543557418", "createdAt": "2020-12-15T17:49:47Z", "author": {"login": "Nana-EC"}, "path": "hedera-mirror-rest/__tests__/integration.test.js", "diffHunk": "@@ -51,15 +51,20 @@ const transactions = require('../transactions.js');\n const server = require('../server');\n const integrationDbOps = require('./integrationDbOps.js');\n const integrationDomainOps = require('./integrationDomainOps.js');\n+const utils = require('../utils');\n const {S3Ops} = require('./integrationS3Ops');\n const config = require('../config');\n const {cloudProviders} = require('../constants');\n+const transactionTypes = require('../transactionTypes');\n+const {InvalidArgumentError} = require('../errors/invalidArgumentError');\n+const constants = require('../constants');", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mjg0NzY3OA=="}, "originalCommit": {"oid": "a9fb75f53fa3eac0c94f40003e50d301332b8686"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzU1OTY3Nw==", "bodyText": "transactionTypesMap works for me. Or transactionTypeProtoIdMap if you want to be explicit.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1356#discussion_r543559677", "createdAt": "2020-12-15T17:52:51Z", "author": {"login": "Nana-EC"}, "path": "hedera-mirror-rest/transactionTypes.js", "diffHunk": "@@ -0,0 +1,41 @@\n+/*-\n+ * \u200c\n+ * Hedera Mirror Node\n+ * \u200b\n+ * Copyright (C) 2019 - 2020 Hedera Hashgraph, LLC\n+ * \u200b\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ * \u200d\n+ */\n+\n+'use strict';\n+\n+const transactionTypesMap = new Map();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mjg0NjU4NQ=="}, "originalCommit": {"oid": "a9fb75f53fa3eac0c94f40003e50d301332b8686"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzU2MTMyMw==", "bodyText": "Can you add a trace log here, similar to the other requests\n  if (logger.isTraceEnabled()) {\n    logger.trace(`getTransactionTypes query: ${transactionTypesQuery}`);\n  }", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1356#discussion_r543561323", "createdAt": "2020-12-15T17:55:11Z", "author": {"login": "Nana-EC"}, "path": "hedera-mirror-rest/transactionTypes.js", "diffHunk": "@@ -0,0 +1,42 @@\n+/*-\n+ * \u200c\n+ * Hedera Mirror Node REST API\n+ * \u200b\n+ * Copyright (C) 2019 - 2020 Hedera Hashgraph, LLC\n+ * \u200b\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ * \u200d\n+ */\n+'use strict';\n+\n+const transactionTypesQuery = 'SELECT proto_id, name FROM t_transaction_types';\n+\n+const transactionTypesMap = new Map();\n+\n+const loadTransactionTypes = function () {\n+  pool", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4cae40be24f0ca0fbee1e0e44c9b8ff44ecd6acf"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzU2Mzc1Mw==", "bodyText": "nit: add a comment highlighting that the map is transaction type (String) -> ProtoId (Integer)", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1356#discussion_r543563753", "createdAt": "2020-12-15T17:58:25Z", "author": {"login": "Nana-EC"}, "path": "hedera-mirror-rest/transactionTypes.js", "diffHunk": "@@ -0,0 +1,42 @@\n+/*-\n+ * \u200c\n+ * Hedera Mirror Node REST API\n+ * \u200b\n+ * Copyright (C) 2019 - 2020 Hedera Hashgraph, LLC\n+ * \u200b\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ * \u200d\n+ */\n+'use strict';\n+\n+const transactionTypesQuery = 'SELECT proto_id, name FROM t_transaction_types';\n+\n+const transactionTypesMap = new Map();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4cae40be24f0ca0fbee1e0e44c9b8ff44ecd6acf"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzU2NTA3Mw==", "bodyText": "I forget if there's a way to overload the get() function.\nIf there is or instead of a get expose a separate function that will do the toUpperCase conversion and then call transactionTypesMap.get() that would help.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1356#discussion_r543565073", "createdAt": "2020-12-15T18:00:15Z", "author": {"login": "Nana-EC"}, "path": "hedera-mirror-rest/utils.js", "diffHunk": "@@ -95,7 +96,7 @@ const isValidEncoding = (query) => {\n };\n \n const isValidTransactionType = (transactionType) => {\n-  return _.isString(transactionType) && constants.transactionTypes[transactionType.toUpperCase()] !== undefined;\n+  return _.isString(transactionType) && transactionTypesMap.get(transactionType.toUpperCase()) !== undefined;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4cae40be24f0ca0fbee1e0e44c9b8ff44ecd6acf"}, "originalPosition": 13}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUzMDA1MzMy", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1356#pullrequestreview-553005332", "createdAt": "2020-12-15T22:33:36Z", "commit": {"oid": "4cae40be24f0ca0fbee1e0e44c9b8ff44ecd6acf"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQyMjozMzozN1rOIGjA7w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQyMjo0NDo1N1rOIGjXPg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzczNjA0Nw==", "bodyText": "We've standardized on lowercase SQl statements.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1356#discussion_r543736047", "createdAt": "2020-12-15T22:33:37Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-rest/transactionTypes.js", "diffHunk": "@@ -0,0 +1,42 @@\n+/*-\n+ * \u200c\n+ * Hedera Mirror Node REST API\n+ * \u200b\n+ * Copyright (C) 2019 - 2020 Hedera Hashgraph, LLC\n+ * \u200b\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ * \u200d\n+ */\n+'use strict';\n+\n+const transactionTypesQuery = 'SELECT proto_id, name FROM t_transaction_types';", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4cae40be24f0ca0fbee1e0e44c9b8ff44ecd6acf"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzczNzIwNA==", "bodyText": "Use new style function syntax.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1356#discussion_r543737204", "createdAt": "2020-12-15T22:35:53Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-rest/transactionTypes.js", "diffHunk": "@@ -0,0 +1,42 @@\n+/*-\n+ * \u200c\n+ * Hedera Mirror Node REST API\n+ * \u200b\n+ * Copyright (C) 2019 - 2020 Hedera Hashgraph, LLC\n+ * \u200b\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ * \u200d\n+ */\n+'use strict';\n+\n+const transactionTypesQuery = 'SELECT proto_id, name FROM t_transaction_types';\n+\n+const transactionTypesMap = new Map();\n+\n+const loadTransactionTypes = function () {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4cae40be24f0ca0fbee1e0e44c9b8ff44ecd6acf"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzczODg4Mw==", "bodyText": "Would be less coupled and not slow down startup to lazy load this on-demand. See my note about replacing explicit load with implicit load via get().", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1356#discussion_r543738883", "createdAt": "2020-12-15T22:39:13Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-rest/server.js", "diffHunk": "@@ -104,6 +105,9 @@ app.set('query parser', requestQueryParser);\n \n serveSwaggerDocs(app);\n \n+// load transaction types from DB\n+loadTransactionTypes();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4cae40be24f0ca0fbee1e0e44c9b8ff44ecd6acf"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mzc0MTQ4NA==", "bodyText": "We shouldn't expose a mutable map since people can potentially modify this. Recommend a single method be exposed get(string) that lazy loads the internal map.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1356#discussion_r543741484", "createdAt": "2020-12-15T22:44:26Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-rest/transactionTypes.js", "diffHunk": "@@ -0,0 +1,42 @@\n+/*-\n+ * \u200c\n+ * Hedera Mirror Node REST API\n+ * \u200b\n+ * Copyright (C) 2019 - 2020 Hedera Hashgraph, LLC\n+ * \u200b\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ * \u200d\n+ */\n+'use strict';\n+\n+const transactionTypesQuery = 'SELECT proto_id, name FROM t_transaction_types';\n+\n+const transactionTypesMap = new Map();\n+\n+const loadTransactionTypes = function () {\n+  pool\n+    .query(transactionTypesQuery)\n+    .catch((err) => {\n+      throw new DbError(err.message);\n+    })\n+    .then((results) => {\n+      for (const row of results.rows) {\n+        transactionTypesMap.set(row.name, row.proto_id);\n+      }\n+    });\n+};\n+\n+module.exports = {\n+  transactionTypesMap,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4cae40be24f0ca0fbee1e0e44c9b8ff44ecd6acf"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mzc0MTc1OA==", "bodyText": "My other recommendation transactionsTypes.get() would solve this conundrum.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1356#discussion_r543741758", "createdAt": "2020-12-15T22:44:57Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-rest/transactionTypes.js", "diffHunk": "@@ -0,0 +1,41 @@\n+/*-\n+ * \u200c\n+ * Hedera Mirror Node\n+ * \u200b\n+ * Copyright (C) 2019 - 2020 Hedera Hashgraph, LLC\n+ * \u200b\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ * \u200d\n+ */\n+\n+'use strict';\n+\n+const transactionTypesMap = new Map();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mjg0NjU4NQ=="}, "originalCommit": {"oid": "a9fb75f53fa3eac0c94f40003e50d301332b8686"}, "originalPosition": 23}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUzMDUwMDcz", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1356#pullrequestreview-553050073", "createdAt": "2020-12-15T23:03:46Z", "commit": {"oid": "4cae40be24f0ca0fbee1e0e44c9b8ff44ecd6acf"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQyMzowMzo0NlrOIGj8Kg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQyMzowODoyOFrOIGkErQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mzc1MTIxMA==", "bodyText": "this is async, though the function is called at process startup, there is no guarantee that when the map is looked up for a transaction type, the data is fully populated.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1356#discussion_r543751210", "createdAt": "2020-12-15T23:03:46Z", "author": {"login": "xin-hedera"}, "path": "hedera-mirror-rest/transactionTypes.js", "diffHunk": "@@ -0,0 +1,42 @@\n+/*-\n+ * \u200c\n+ * Hedera Mirror Node REST API\n+ * \u200b\n+ * Copyright (C) 2019 - 2020 Hedera Hashgraph, LLC\n+ * \u200b\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ * \u200d\n+ */\n+'use strict';\n+\n+const transactionTypesQuery = 'SELECT proto_id, name FROM t_transaction_types';\n+\n+const transactionTypesMap = new Map();\n+\n+const loadTransactionTypes = function () {\n+  pool\n+    .query(transactionTypesQuery)\n+    .catch((err) => {\n+      throw new DbError(err.message);\n+    })\n+    .then((results) => {\n+      for (const row of results.rows) {\n+        transactionTypesMap.set(row.name, row.proto_id);\n+      }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4cae40be24f0ca0fbee1e0e44c9b8ff44ecd6acf"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mzc1MzM4OQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              return _.isString(transactionType) && transactionTypesMap.get(transactionType.toUpperCase()) !== undefined;\n          \n          \n            \n              return _.isString(transactionType) && transactionTypesMap.has(transactionType.toUpperCase());", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1356#discussion_r543753389", "createdAt": "2020-12-15T23:08:28Z", "author": {"login": "xin-hedera"}, "path": "hedera-mirror-rest/utils.js", "diffHunk": "@@ -95,7 +96,7 @@ const isValidEncoding = (query) => {\n };\n \n const isValidTransactionType = (transactionType) => {\n-  return _.isString(transactionType) && constants.transactionTypes[transactionType.toUpperCase()] !== undefined;\n+  return _.isString(transactionType) && transactionTypesMap.get(transactionType.toUpperCase()) !== undefined;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4cae40be24f0ca0fbee1e0e44c9b8ff44ecd6acf"}, "originalPosition": 13}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1ea9a37a63249e65d7b1f5a6be0ee38e324196b0", "author": {"user": {"login": "ijungmann", "name": "Ian Jungmann"}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/1ea9a37a63249e65d7b1f5a6be0ee38e324196b0", "committedDate": "2020-12-16T01:36:10Z", "message": "Rework transactionTypes to not expose map\n\nSigned-off-by: Ian Jungmann <ian.jungmann@hedera.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "34d74c86bd23bb7e640a2674a47a34305a3cd546", "author": {"user": {"login": "ijungmann", "name": "Ian Jungmann"}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/34d74c86bd23bb7e640a2674a47a34305a3cd546", "committedDate": "2020-12-16T01:37:04Z", "message": "Change transactions.js to use new transactionTypes format\n\nSigned-off-by: Ian Jungmann <ian.jungmann@hedera.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "448e74635b3b1f8a80f9e490afa012cfff9b605e", "author": {"user": {"login": "ijungmann", "name": "Ian Jungmann"}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/448e74635b3b1f8a80f9e490afa012cfff9b605e", "committedDate": "2020-12-16T01:38:18Z", "message": "Rework utils\n\nSigned-off-by: Ian Jungmann <ian.jungmann@hedera.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUzMzE2ODU0", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1356#pullrequestreview-553316854", "createdAt": "2020-12-16T02:47:38Z", "commit": {"oid": "448e74635b3b1f8a80f9e490afa012cfff9b605e"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQwMjo0NzozOFrOIGqRDA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQwMjo0NzozOFrOIGqRDA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mzg1NDg2MA==", "bodyText": "this will not work as intended:\n\nloadTransactionTypes immediately returns and nodejs engine won't pause and switch to other tasks, so transactionTypesMap.size is still 0 at line 30\nit's possible when db query is slow, multiple calls to get will all see transactionTypesMap.size === 0, this will cause multiple db queries for the transaction types\n\nwe should use a promise to hold the db query\nlet promise;\n\nconst get = async (transactionTypeName) => {\n  if (!promise) {\n    promise = pool.query(transactionTypesQuery);\n  }\n\n  try {\n    const result = await promise;\n    if (transactionTypesMap.size === 0) {\n      result.rows.forEach((row) => transactionTypesMap.set(row.name, row.proto_id));\n    }\n\n    return transactionTypesMap.get(transactionTypeName.toUpperCase());\n  } catch (err) {\n    // error handling\n  }\n}", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1356#discussion_r543854860", "createdAt": "2020-12-16T02:47:38Z", "author": {"login": "xin-hedera"}, "path": "hedera-mirror-rest/transactionTypes.js", "diffHunk": "@@ -0,0 +1,51 @@\n+/*-\n+ * \u200c\n+ * Hedera Mirror Node REST API\n+ * \u200b\n+ * Copyright (C) 2019 - 2020 Hedera Hashgraph, LLC\n+ * \u200b\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ * \u200d\n+ */\n+'use strict';\n+\n+const transactionTypesQuery = 'select proto_id, name from t_transaction_types';\n+\n+const transactionTypesMap = new Map();\n+\n+const get = async (transactionTypeName) => {\n+  if (transactionTypesMap.size === 0) {\n+    loadTransactionTypes();\n+  }\n+  return transactionTypesMap.get(transactionTypeName.toUpperCase());\n+};", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "448e74635b3b1f8a80f9e490afa012cfff9b605e"}, "originalPosition": 31}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a369746b71d815428ec97495f4ad94a5d6de799e", "author": {"user": {"login": "ijungmann", "name": "Ian Jungmann"}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/a369746b71d815428ec97495f4ad94a5d6de799e", "committedDate": "2020-12-16T07:07:35Z", "message": "Reworking lazy loading to handle async\n\nSigned-off-by: Ian Jungmann <ian.jungmann@hedera.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4a96c83127b973ace7da99ed3678cf8a65727f69", "author": {"user": {"login": "ijungmann", "name": "Ian Jungmann"}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/4a96c83127b973ace7da99ed3678cf8a65727f69", "committedDate": "2020-12-16T07:09:06Z", "message": "Remove logs\n\nSigned-off-by: Ian Jungmann <ian.jungmann@hedera.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a3a3e6d2f90f5db5d856c26a9e345d643be91723", "author": {"user": {"login": "ijungmann", "name": "Ian Jungmann"}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/a3a3e6d2f90f5db5d856c26a9e345d643be91723", "committedDate": "2020-12-16T07:10:43Z", "message": "Attempt 1 to fix tests\n\nSigned-off-by: Ian Jungmann <ian.jungmann@hedera.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "70435469a733219a5f0eeef0e98e0286b2c1730f", "author": {"user": {"login": "ijungmann", "name": "Ian Jungmann"}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/70435469a733219a5f0eeef0e98e0286b2c1730f", "committedDate": "2020-12-16T07:15:08Z", "message": "Remove log\n\nSigned-off-by: Ian Jungmann <ian.jungmann@hedera.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "eaf12c45a1ecd88be8bc0cc9813c342b7cc3e489", "author": {"user": {"login": "ijungmann", "name": "Ian Jungmann"}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/eaf12c45a1ecd88be8bc0cc9813c342b7cc3e489", "committedDate": "2020-12-16T22:15:31Z", "message": "Everything is async now\n\nSigned-off-by: Ian Jungmann <ian.jungmann@hedera.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9ae62cb2e18a843e2d3e2545d98010342b11f840", "author": {"user": {"login": "ijungmann", "name": "Ian Jungmann"}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/9ae62cb2e18a843e2d3e2545d98010342b11f840", "committedDate": "2020-12-16T22:23:34Z", "message": "Code smell fixes\n\nSigned-off-by: Ian Jungmann <ian.jungmann@hedera.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "04814d14db107894ad39ff817978a2c2e064a5c5", "author": {"user": {"login": "ijungmann", "name": "Ian Jungmann"}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/04814d14db107894ad39ff817978a2c2e064a5c5", "committedDate": "2020-12-16T22:58:32Z", "message": "Trying to get around code smell\n\nSigned-off-by: Ian Jungmann <ian.jungmann@hedera.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b878296f22b716c88f1e3f2221185add08bae1b4", "author": {"user": {"login": "ijungmann", "name": "Ian Jungmann"}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/b878296f22b716c88f1e3f2221185add08bae1b4", "committedDate": "2020-12-17T00:10:47Z", "message": "Merge with master\n\nSigned-off-by: Ian Jungmann <ian.jungmann@hedera.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6c30347aff09550a623d24099de05857dbfb5a1d", "author": {"user": {"login": "ijungmann", "name": "Ian Jungmann"}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/6c30347aff09550a623d24099de05857dbfb5a1d", "committedDate": "2020-12-17T00:23:33Z", "message": "Code smells\n\nSigned-off-by: Ian Jungmann <ian.jungmann@hedera.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8a986dbe55f0ce7fa503531b8c2f1413c02b22b4", "author": {"user": {"login": "ijungmann", "name": "Ian Jungmann"}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/8a986dbe55f0ce7fa503531b8c2f1413c02b22b4", "committedDate": "2020-12-17T01:31:08Z", "message": "Removing some asyncs\n\nSigned-off-by: Ian Jungmann <ian.jungmann@hedera.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d9a7097a92afe6ea4e46c49baaa0182a96a91ff2", "author": {"user": {"login": "ijungmann", "name": "Ian Jungmann"}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/d9a7097a92afe6ea4e46c49baaa0182a96a91ff2", "committedDate": "2020-12-17T01:43:14Z", "message": "Remove log\n\nSigned-off-by: Ian Jungmann <ian.jungmann@hedera.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0ac66af2f82d705aa300cbc8840e7c3f25c94dff", "author": {"user": {"login": "ijungmann", "name": "Ian Jungmann"}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/0ac66af2f82d705aa300cbc8840e7c3f25c94dff", "committedDate": "2020-12-17T02:21:07Z", "message": "Alphabetize modules\n\nSigned-off-by: Ian Jungmann <ian.jungmann@hedera.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8254ea4d0c048b373ef6d4987c1f038cc5b4d367", "author": {"user": {"login": "ijungmann", "name": "Ian Jungmann"}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/8254ea4d0c048b373ef6d4987c1f038cc5b4d367", "committedDate": "2020-12-17T02:27:36Z", "message": "Add trace messager\n\nSigned-off-by: Ian Jungmann <ian.jungmann@hedera.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1fdb41fe8b4b9b13af07a22f4786f46d00d660df", "author": {"user": {"login": "ijungmann", "name": "Ian Jungmann"}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/1fdb41fe8b4b9b13af07a22f4786f46d00d660df", "committedDate": "2020-12-17T02:35:03Z", "message": "Copy paste error\n\nSigned-off-by: Ian Jungmann <ian.jungmann@hedera.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3b471f80d99d97db13365691392cf7a3b97d5976", "author": {"user": {"login": "ijungmann", "name": "Ian Jungmann"}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/3b471f80d99d97db13365691392cf7a3b97d5976", "committedDate": "2020-12-17T02:47:18Z", "message": "Documentation change\n\nSigned-off-by: Ian Jungmann <ian.jungmann@hedera.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU0MjUzMDIz", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1356#pullrequestreview-554253023", "createdAt": "2020-12-17T03:24:04Z", "commit": {"oid": "3b471f80d99d97db13365691392cf7a3b97d5976"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QwMzoyNDowNVrOIHi9BQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QxNDozNjozOFrOIH4j_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDc4MzYyMQ==", "bodyText": "considering promise = null; before throwing DbError so a transient error will not cause all following dependent calls to fail.\nthis allows the subsequent calls of get() to retry the db query.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1356#discussion_r544783621", "createdAt": "2020-12-17T03:24:05Z", "author": {"login": "xin-hedera"}, "path": "hedera-mirror-rest/transactionTypes.js", "diffHunk": "@@ -0,0 +1,52 @@\n+/*-\n+ * \u200c\n+ * Hedera Mirror Node REST API\n+ * \u200b\n+ * Copyright (C) 2019 - 2020 Hedera Hashgraph, LLC\n+ * \u200b\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ * \u200d\n+ */\n+'use strict';\n+\n+const {DbError} = require('./errors/dbError');\n+\n+const transactionTypesQuery = 'select proto_id, name from t_transaction_types';\n+\n+// Transaction Type (String) -> ProtoId (Integer)\n+const transactionTypesMap = new Map();\n+\n+let promise;\n+\n+const get = async (transactionTypeName) => {\n+  if (!promise) {\n+    if (logger.isTraceEnabled()) {\n+      logger.trace(`getTransactionTypes query: ${transactionTypesQuery}`);\n+    }\n+    promise = pool.query(transactionTypesQuery);\n+  }\n+\n+  try {\n+    const result = await promise;\n+    if (transactionTypesMap.size === 0) {\n+      result.rows.forEach((row) => transactionTypesMap.set(row.name, row.proto_id));\n+    }\n+    return transactionTypesMap.get(transactionTypeName.toUpperCase());\n+  } catch (err) {\n+    throw new DbError(err.message);\n+  }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3b471f80d99d97db13365691392cf7a3b97d5976"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDc4Nzk2Mw==", "bodyText": "these positive tests assert nothing, you can change toBe('') to e.g. toBe('oops') and they'll still pass.\nadding async/await will make it work:\n  test('DB integration test - utils.getTransactionTypeQuery - Verify null query params', async () => {\n    await expect(utils.getTransactionTypeQuery(null)).resolves.toBe('');\n  });", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1356#discussion_r544787963", "createdAt": "2020-12-17T03:37:42Z", "author": {"login": "xin-hedera"}, "path": "hedera-mirror-rest/__tests__/integration.test.js", "diffHunk": "@@ -186,15 +191,79 @@ test('DB integration test - transactions.reqToSql - no query string - 3 txn 9 xf\n   ]);\n });\n \n+describe('DB integration test - utils.getTransactionTypeQuery', () => {\n+  test('DB integration test - utils.getTransactionTypeQuery - Verify null query params', () => {\n+    expect(utils.getTransactionTypeQuery(null)).resolves.toBe('');\n+  });\n+  test('DB integration test - utils.getTransactionTypeQuery - Verify undefined query params', () => {\n+    expect(utils.getTransactionTypeQuery(undefined)).resolves.toBe('');\n+  });\n+  test('DB integration test - utils.getTransactionTypeQuery - Verify empty query params', () => {\n+    expect(utils.getTransactionTypeQuery({})).resolves.toBe('');\n+  });", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3b471f80d99d97db13365691392cf7a3b97d5976"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDc4ODc3Ng==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              test('DB integration test - utils.getTransactionTypeQuery - Verify empty transaction type query', () => {\n          \n          \n            \n                expect(() => utils.getTransactionTypeQuery({[constants.filterKeys.TRANSACTION_TYPE]: ''})).rejects.toThrowError(\n          \n          \n            \n                  InvalidArgumentError\n          \n          \n            \n                );\n          \n          \n            \n              });\n          \n          \n            \n              test('DB integration test - utils.getTransactionTypeQuery - Verify empty transaction type query', async () => {\n          \n          \n            \n                await expect(utils.getTransactionTypeQuery({[constants.filterKeys.TRANSACTION_TYPE]: ''})).rejects.toThrowError(\n          \n          \n            \n                  InvalidArgumentError\n          \n          \n            \n                );\n          \n          \n            \n              });", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1356#discussion_r544788776", "createdAt": "2020-12-17T03:40:22Z", "author": {"login": "xin-hedera"}, "path": "hedera-mirror-rest/__tests__/integration.test.js", "diffHunk": "@@ -186,15 +191,79 @@ test('DB integration test - transactions.reqToSql - no query string - 3 txn 9 xf\n   ]);\n });\n \n+describe('DB integration test - utils.getTransactionTypeQuery', () => {\n+  test('DB integration test - utils.getTransactionTypeQuery - Verify null query params', () => {\n+    expect(utils.getTransactionTypeQuery(null)).resolves.toBe('');\n+  });\n+  test('DB integration test - utils.getTransactionTypeQuery - Verify undefined query params', () => {\n+    expect(utils.getTransactionTypeQuery(undefined)).resolves.toBe('');\n+  });\n+  test('DB integration test - utils.getTransactionTypeQuery - Verify empty query params', () => {\n+    expect(utils.getTransactionTypeQuery({})).resolves.toBe('');\n+  });\n+  test('DB integration test - utils.getTransactionTypeQuery - Verify empty transaction type query', () => {\n+    expect(() => utils.getTransactionTypeQuery({[constants.filterKeys.TRANSACTION_TYPE]: ''})).rejects.toThrowError(\n+      InvalidArgumentError\n+    );\n+  });", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3b471f80d99d97db13365691392cf7a3b97d5976"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDc4OTIyMA==", "bodyText": "same as above", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1356#discussion_r544789220", "createdAt": "2020-12-17T03:41:49Z", "author": {"login": "xin-hedera"}, "path": "hedera-mirror-rest/__tests__/integration.test.js", "diffHunk": "@@ -186,15 +191,79 @@ test('DB integration test - transactions.reqToSql - no query string - 3 txn 9 xf\n   ]);\n });\n \n+describe('DB integration test - utils.getTransactionTypeQuery', () => {\n+  test('DB integration test - utils.getTransactionTypeQuery - Verify null query params', () => {\n+    expect(utils.getTransactionTypeQuery(null)).resolves.toBe('');\n+  });\n+  test('DB integration test - utils.getTransactionTypeQuery - Verify undefined query params', () => {\n+    expect(utils.getTransactionTypeQuery(undefined)).resolves.toBe('');\n+  });\n+  test('DB integration test - utils.getTransactionTypeQuery - Verify empty query params', () => {\n+    expect(utils.getTransactionTypeQuery({})).resolves.toBe('');\n+  });\n+  test('DB integration test - utils.getTransactionTypeQuery - Verify empty transaction type query', () => {\n+    expect(() => utils.getTransactionTypeQuery({[constants.filterKeys.TRANSACTION_TYPE]: ''})).rejects.toThrowError(\n+      InvalidArgumentError\n+    );\n+  });\n+  test('DB integration test - utils.getTransactionTypeQuery - Verify non applicable transaction type query', () => {\n+    expect(() =>\n+      utils.getTransactionTypeQuery({[constants.filterKeys.TRANSACTION_TYPE]: 'newtransaction'})\n+    ).rejects.toThrowError(InvalidArgumentError);\n+  });", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3b471f80d99d97db13365691392cf7a3b97d5976"}, "originalPosition": 66}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDc5NTY0Ng==", "bodyText": "this causes all 'spec based' integration tests to fail. either use constants.cloudProviders.S3 or\nconst {cloudProviders, filterKeys} = require('../constants');", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1356#discussion_r544795646", "createdAt": "2020-12-17T04:02:29Z", "author": {"login": "xin-hedera"}, "path": "hedera-mirror-rest/__tests__/integration.test.js", "diffHunk": "@@ -40,20 +40,25 @@\n  * Tests are then run in code below (find TESTS all caps) and by comparing requests/responses from the server to data\n  * in the specs/ dir.\n  */\n-const path = require('path');\n-const request = require('supertest');\n-const fs = require('fs');\n-const _ = require('lodash');\n+// external libraries\n const S3 = require('aws-sdk/clients/s3');\n const crypto = require('crypto');\n-const EntityId = require('../entityId');\n-const transactions = require('../transactions.js');\n-const server = require('../server');\n+const fs = require('fs');\n+const _ = require('lodash');\n+const path = require('path');\n+const request = require('supertest');\n+\n const integrationDbOps = require('./integrationDbOps.js');\n const integrationDomainOps = require('./integrationDomainOps.js');\n const {S3Ops} = require('./integrationS3Ops');\n const config = require('../config');\n-const {cloudProviders} = require('../constants');\n+const constants = require('../constants');", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3b471f80d99d97db13365691392cf7a3b97d5976"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDc5NjY3Mw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            const verifyInvalidFilters = async (filters) => {\n          \n          \n            \n              await expect(async () => {\n          \n          \n            \n                await utils.validateAndParseFilters(filters);\n          \n          \n            \n              }).rejects.toThrowErrorMatchingSnapshot();\n          \n          \n            \n            const verifyInvalidFilters = async (filters) => {\n          \n          \n            \n              await expect(utils.validateAndParseFilters(filters)).rejects.toThrowErrorMatchingSnapshot();", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1356#discussion_r544796673", "createdAt": "2020-12-17T04:06:06Z", "author": {"login": "xin-hedera"}, "path": "hedera-mirror-rest/__tests__/utilsFilters.test.js", "diffHunk": "@@ -226,14 +225,14 @@ describe('utils validateAndParseFilters tests', () => {\n       utils.buildComparatorFilter(constants.filterKeys.ENCODING, 'utf-8'),\n     ];\n \n-    expect(() => {\n-      utils.validateAndParseFilters(filters);\n+    expect(async () => {\n+      await utils.validateAndParseFilters(filters);\n     }).not.toThrow();\n   });\n });\n \n-const verifyInvalidFilters = (filters) => {\n-  expect(() => {\n-    utils.validateAndParseFilters(filters);\n-  }).toThrowErrorMatchingSnapshot();\n+const verifyInvalidFilters = async (filters) => {\n+  await expect(async () => {\n+    await utils.validateAndParseFilters(filters);\n+  }).rejects.toThrowErrorMatchingSnapshot();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3b471f80d99d97db13365691392cf7a3b97d5976"}, "originalPosition": 62}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDc5OTQzNg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                expect(async () => {\n          \n          \n            \n                  await utils.validateAndParseFilters(filters);\n          \n          \n            \n                }).not.toThrow();\n          \n          \n            \n              await expect(utils.validateAndParseFilters(filters)).resolves.toBeUndefined();", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1356#discussion_r544799436", "createdAt": "2020-12-17T04:14:46Z", "author": {"login": "xin-hedera"}, "path": "hedera-mirror-rest/__tests__/utilsFilters.test.js", "diffHunk": "@@ -226,14 +225,14 @@ describe('utils validateAndParseFilters tests', () => {\n       utils.buildComparatorFilter(constants.filterKeys.ENCODING, 'utf-8'),\n     ];\n \n-    expect(() => {\n-      utils.validateAndParseFilters(filters);\n+    expect(async () => {\n+      await utils.validateAndParseFilters(filters);\n     }).not.toThrow();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3b471f80d99d97db13365691392cf7a3b97d5976"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDgwMDA1OA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              test('Verify validateAndParseFilters for valid filters does not throw exception', () => {\n          \n          \n            \n              test('Verify validateAndParseFilters for valid filters does not throw exception', async () => {", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1356#discussion_r544800058", "createdAt": "2020-12-17T04:16:52Z", "author": {"login": "xin-hedera"}, "path": "hedera-mirror-rest/__tests__/utilsFilters.test.js", "diffHunk": "@@ -203,8 +203,7 @@ describe('utils validateAndParseFilters tests', () => {\n       utils.buildComparatorFilter(constants.filterKeys.ACCOUNT_PUBLICKEY, '3c3d546321ff6f63d701d2ec5c2'),\n       utils.buildComparatorFilter(constants.filterKeys.ACCOUNT_BALANCE, '23456789012345678901234'),\n     ];\n-\n-    verifyInvalidFilters(filters);\n+    await verifyInvalidFilters(filters);\n   });\n \n   test('Verify validateAndParseFilters for valid filters does not throw exception', () => {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3b471f80d99d97db13365691392cf7a3b97d5976"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDgwNjE1NQ==", "bodyText": "this looks better:\nconst protoId = await transactionTypes.get(transactionType);\nif (protoId !== undefined) {\n  return `${constants.transactionColumns.TYPE}${opsMap.eq}${protoId}`;\n}\nthen the function isValidTransactionType can be removed", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1356#discussion_r544806155", "createdAt": "2020-12-17T04:36:44Z", "author": {"login": "xin-hedera"}, "path": "hedera-mirror-rest/utils.js", "diffHunk": "@@ -749,11 +750,8 @@ const getTransactionTypeQuery = (parsedQueryParams) => {\n   if (_.isNil(transactionType)) {\n     return '';\n   }\n-\n-  if (isValidTransactionType(transactionType)) {\n-    return `${constants.transactionColumns.TYPE}${opsMap.eq}${\n-      constants.transactionTypes[transactionType.toUpperCase()]\n-    }`;\n+  if (await isValidTransactionType(transactionType)) {\n+    return `${constants.transactionColumns.TYPE}${opsMap.eq}${await transactionTypes.get(transactionType)}`;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3b471f80d99d97db13365691392cf7a3b97d5976"}, "originalPosition": 91}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTEzNzY2MA==", "bodyText": "this function can be removed, see my other comment at line 754", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1356#discussion_r545137660", "createdAt": "2020-12-17T14:36:38Z", "author": {"login": "xin-hedera"}, "path": "hedera-mirror-rest/utils.js", "diffHunk": "@@ -94,8 +95,8 @@ const isValidEncoding = (query) => {\n   return query === constants.characterEncoding.BASE64 || isValidUtf8Encoding(query);\n };\n \n-const isValidTransactionType = (transactionType) => {\n-  return _.isString(transactionType) && constants.transactionTypes[transactionType.toUpperCase()] !== undefined;\n+const isValidTransactionType = async (transactionType) => {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3b471f80d99d97db13365691392cf7a3b97d5976"}, "originalPosition": 14}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2930a826fafcb0c09cb6a4e1b29d0d05e03c4174", "author": {"user": {"login": "ijungmann", "name": "Ian Jungmann"}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/2930a826fafcb0c09cb6a4e1b29d0d05e03c4174", "committedDate": "2020-12-17T16:06:09Z", "message": "Handle promise in catch statement\n\nSigned-off-by: Ian Jungmann <ian.jungmann@hedera.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "870482fb8cc2ce32a64f795b57c0f1b8dab7560a", "author": {"user": {"login": "ijungmann", "name": "Ian Jungmann"}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/870482fb8cc2ce32a64f795b57c0f1b8dab7560a", "committedDate": "2020-12-17T16:07:50Z", "message": "Fix int specs tests with module\n\nSigned-off-by: Ian Jungmann <ian.jungmann@hedera.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cc4d39906be133994736f76f372b4ec2722edf5b", "author": {"user": {"login": "ijungmann", "name": "Ian Jungmann"}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/cc4d39906be133994736f76f372b4ec2722edf5b", "committedDate": "2020-12-17T16:38:20Z", "message": "Fix utils.getTransactionTypeQuery tests\n\nSigned-off-by: Ian Jungmann <ian.jungmann@hedera.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f143923407c044833137e47c4672d1d1c639ca61", "author": {"user": {"login": "ijungmann", "name": "Ian Jungmann"}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/f143923407c044833137e47c4672d1d1c639ca61", "committedDate": "2020-12-17T17:13:10Z", "message": "Fix utilsFilters.test\n\nSigned-off-by: Ian Jungmann <ian.jungmann@hedera.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "31f14947fa327f79c3202dcacf33370c18f0299c", "author": {"user": {"login": "ijungmann", "name": "Ian Jungmann"}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/31f14947fa327f79c3202dcacf33370c18f0299c", "committedDate": "2020-12-17T17:40:22Z", "message": "Refactor get transaction type in utils\n\nSigned-off-by: Ian Jungmann <ian.jungmann@hedera.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU0OTMwNTM1", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1356#pullrequestreview-554930535", "createdAt": "2020-12-17T19:42:38Z", "commit": {"oid": "31f14947fa327f79c3202dcacf33370c18f0299c"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "59b37dab99fe7f9036d688653271f007e1942b91", "author": {"user": {"login": "ijungmann", "name": "Ian Jungmann"}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/59b37dab99fe7f9036d688653271f007e1942b91", "committedDate": "2020-12-17T21:26:59Z", "message": "Attempt 3 to make sonar happy with utils\n\nSigned-off-by: Ian Jungmann <ian.jungmann@hedera.com>"}, "afterCommit": {"oid": "31f14947fa327f79c3202dcacf33370c18f0299c", "author": {"user": {"login": "ijungmann", "name": "Ian Jungmann"}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/31f14947fa327f79c3202dcacf33370c18f0299c", "committedDate": "2020-12-17T17:40:22Z", "message": "Refactor get transaction type in utils\n\nSigned-off-by: Ian Jungmann <ian.jungmann@hedera.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU1MDE5MzAz", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1356#pullrequestreview-555019303", "createdAt": "2020-12-17T21:55:20Z", "commit": {"oid": "31f14947fa327f79c3202dcacf33370c18f0299c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU1MDI3ODUx", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1356#pullrequestreview-555027851", "createdAt": "2020-12-17T22:09:57Z", "commit": {"oid": "31f14947fa327f79c3202dcacf33370c18f0299c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3424, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}