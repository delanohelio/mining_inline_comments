{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAyNDI1Njkw", "number": 1127, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QyMTowOTozOFrOEtOa9g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QyMToxNzoxMFrOEtOkfw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1ODU3NjU0OnYy", "diffSide": "RIGHT", "path": "docs/installation.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QyMTowOTozOFrOHg5low==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QyMTowOTozOFrOHg5low==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDI2MDAwMw==", "bodyText": "nit: Would be better to directly link to the rosetta section of the configuration", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1127#discussion_r504260003", "createdAt": "2020-10-13T21:09:38Z", "author": {"login": "steven-sheehy"}, "path": "docs/installation.md", "diffHunk": "@@ -75,6 +75,109 @@ Run the unit tests using jest by using:\n npm test\n ```\n \n+### Rosetta API\n+\n+#### Prerequisites\n+``\n+Go 1.13+\n+``\n+\n+To start the Rosetta API ensure you have the necessary [configuration](configuration.md) populated and run:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "21f7dd47d1be0a3f632307949b34ae049562b06e"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1ODU4NTYzOnYy", "diffSide": "RIGHT", "path": "docs/installation.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QyMToxMjoyN1rOHg5rEg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QyMToxMjoyN1rOHg5rEg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDI2MTM5NA==", "bodyText": "nit: Would prefer config properties and values use backticks instead of bold in this section.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1127#discussion_r504261394", "createdAt": "2020-10-13T21:12:27Z", "author": {"login": "steven-sheehy"}, "path": "docs/installation.md", "diffHunk": "@@ -75,6 +75,109 @@ Run the unit tests using jest by using:\n npm test\n ```\n \n+### Rosetta API\n+\n+#### Prerequisites\n+``\n+Go 1.13+\n+``\n+\n+To start the Rosetta API ensure you have the necessary [configuration](configuration.md) populated and run:\n+\n+```console\n+cd hedera-mirror-rosetta\n+go run cmd/*\n+```\n+\n+#### Unit Tests\n+\n+Run the unit tests by executing:\n+```console\n+cd hedera-mirror-rosetta\n+go test ./...\n+```\n+\n+#### Rosetta CLI Validation\n+\n+After you have started the Rosetta API, in another terminal run:\n+\n+```console\n+cd hedera-mirror-rosetta/validation\n+./run-validation.sh\n+```\n+\n+Currently, Rosetta CLI Validation supports only **DEMO** and **TESTNET**, where", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "21f7dd47d1be0a3f632307949b34ae049562b06e"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1ODU4OTMzOnYy", "diffSide": "RIGHT", "path": "docs/installation.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QyMToxMzo0MlrOHg5tZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QyMToxMzo0MlrOHg5tZQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDI2MTk4OQ==", "bodyText": "Need to mention Rosetta in list of docker compose components", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1127#discussion_r504261989", "createdAt": "2020-10-13T21:13:42Z", "author": {"login": "steven-sheehy"}, "path": "docs/installation.md", "diffHunk": "@@ -75,6 +75,109 @@ Run the unit tests using jest by using:\n npm test\n ```\n \n+### Rosetta API\n+\n+#### Prerequisites\n+``\n+Go 1.13+\n+``\n+\n+To start the Rosetta API ensure you have the necessary [configuration](configuration.md) populated and run:\n+\n+```console\n+cd hedera-mirror-rosetta\n+go run cmd/*\n+```\n+\n+#### Unit Tests\n+\n+Run the unit tests by executing:\n+```console\n+cd hedera-mirror-rosetta\n+go test ./...\n+```\n+\n+#### Rosetta CLI Validation\n+\n+After you have started the Rosetta API, in another terminal run:\n+\n+```console\n+cd hedera-mirror-rosetta/validation\n+./run-validation.sh\n+```\n+\n+Currently, Rosetta CLI Validation supports only **DEMO** and **TESTNET**, where\n+**DEMO** is default and **TESTNET** can be run via:\n+```console\n+./run-validation.sh testnet\n+```\n+\n+#### Rosetta All-in-One Dockerfile configuration\n+\n+The **All-in-One** configuration aggregates the **PostgreSQL**, **Importer** and **Rosetta** services in a single Dockerfile configuration.\n+Configuration is based on Rosetta specification, found [here](https://www.rosetta-api.org/docs/node_deployment.html).\n+Data Persistence is based on Rosetta specification as well, found [here](https://www.rosetta-api.org/docs/standard_storage_location.html).\n+Exposed ports are **5432** (PostgreSQL) and **5700** (Rosetta).\n+\n+To build the Dockerfile, run:\n+```console\n+cd hedera-mirror-rosetta/build\n+docker build .\n+```\n+\n+Image container can be run via:\n+```console\n+docker run <image>\n+```\n+\n+With a mounted volume:\n+```console\n+docker run -v <volume>:/data <image>\n+```\n+\n+The built Docker image can be run in **online** (default) and **offline** mode.\n+**Online** mode runs all the above specified services, where in **offline** - only the **Rosetta** service.\n+\n+To run in **offline** mode:\n+```console\n+docker run -e MODE=offline <image>\n+```\n+\n+You can override **Importer** and **Rosetta** services default configuration by passing\n+**environment variables**, specified [here](./configuration.md).\n+\n+For ease, an additional environment variable, called **NETWORK** is added, where you can both override\n+the **Importer** and **Rosetta** default network configuration:\n+```console\n+docker run -e NETWORK=TESTNET <image>\n+```\n+\n+In order **Importer** to sync data, different from default,\n+the following environment variables need to be overridden:\n+```console\n+HEDERA_MIRROR_IMPORTER_DOWNLOADER_ACCESSKEY=\n+HEDERA_MIRROR_IMPORTER_DOWNLOADER_BUCKETNAME=\n+HEDERA_MIRROR_IMPORTER_DOWNLOADER_CLOUDPROVIDER=\n+HEDERA_MIRROR_IMPORTER_DOWNLOADER_GCPPROJECTID=\n+HEDERA_MIRROR_IMPORTER_DOWNLOADER_SECRETKEY=\n+HEDERA_MIRROR_IMPORTER_START_DATE=\n+```\n+regardless of specified **NETWORK**.\n+\n+A full example for **testnet** network in **online** mode:\n+```console\n+docker run -e NETWORK=TESTNET \\\n+-e HEDERA_MIRROR_IMPORTER_DOWNLOADER_ACCESSKEY= \\\n+-e HEDERA_MIRROR_IMPORTER_DOWNLOADER_BUCKETNAME= \\\n+-e HEDERA_MIRROR_IMPORTER_DOWNLOADER_CLOUDPROVIDER= \\\n+-e HEDERA_MIRROR_IMPORTER_DOWNLOADER_GCPPROJECTID= \\\n+-e HEDERA_MIRROR_IMPORTER_DOWNLOADER_SECRETKEY= \\\n+-e HEDERA_MIRROR_IMPORTER_START_DATE= \\\n+-v <volume>:/data \\\n+-p 5700:5700 \\\n+<image>\n+```\n+\n ## Running via Docker Compose\n \n Docker Compose scripts are provided and run all the mirror node components:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "21f7dd47d1be0a3f632307949b34ae049562b06e"}, "originalPosition": 109}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1ODYwMDk1OnYy", "diffSide": "RIGHT", "path": "docs/installation.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QyMToxNzoxMFrOHg50Ng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QyMToxNzoxMFrOHg50Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDI2MzczNA==", "bodyText": "Lots of random bolding in this section. I don't think component names need to be bolded (or backticked). While all the config key/values can be switched to backticks.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1127#discussion_r504263734", "createdAt": "2020-10-13T21:17:10Z", "author": {"login": "steven-sheehy"}, "path": "docs/installation.md", "diffHunk": "@@ -75,6 +75,109 @@ Run the unit tests using jest by using:\n npm test\n ```\n \n+### Rosetta API\n+\n+#### Prerequisites\n+``\n+Go 1.13+\n+``\n+\n+To start the Rosetta API ensure you have the necessary [configuration](configuration.md) populated and run:\n+\n+```console\n+cd hedera-mirror-rosetta\n+go run cmd/*\n+```\n+\n+#### Unit Tests\n+\n+Run the unit tests by executing:\n+```console\n+cd hedera-mirror-rosetta\n+go test ./...\n+```\n+\n+#### Rosetta CLI Validation\n+\n+After you have started the Rosetta API, in another terminal run:\n+\n+```console\n+cd hedera-mirror-rosetta/validation\n+./run-validation.sh\n+```\n+\n+Currently, Rosetta CLI Validation supports only **DEMO** and **TESTNET**, where\n+**DEMO** is default and **TESTNET** can be run via:\n+```console\n+./run-validation.sh testnet\n+```\n+\n+#### Rosetta All-in-One Dockerfile configuration\n+\n+The **All-in-One** configuration aggregates the **PostgreSQL**, **Importer** and **Rosetta** services in a single Dockerfile configuration.\n+Configuration is based on Rosetta specification, found [here](https://www.rosetta-api.org/docs/node_deployment.html).\n+Data Persistence is based on Rosetta specification as well, found [here](https://www.rosetta-api.org/docs/standard_storage_location.html).\n+Exposed ports are **5432** (PostgreSQL) and **5700** (Rosetta).\n+\n+To build the Dockerfile, run:\n+```console\n+cd hedera-mirror-rosetta/build\n+docker build .\n+```\n+\n+Image container can be run via:\n+```console\n+docker run <image>\n+```\n+\n+With a mounted volume:\n+```console\n+docker run -v <volume>:/data <image>\n+```\n+\n+The built Docker image can be run in **online** (default) and **offline** mode.\n+**Online** mode runs all the above specified services, where in **offline** - only the **Rosetta** service.\n+\n+To run in **offline** mode:\n+```console\n+docker run -e MODE=offline <image>\n+```\n+\n+You can override **Importer** and **Rosetta** services default configuration by passing\n+**environment variables**, specified [here](./configuration.md).\n+\n+For ease, an additional environment variable, called **NETWORK** is added, where you can both override", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "21f7dd47d1be0a3f632307949b34ae049562b06e"}, "originalPosition": 75}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1539, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}