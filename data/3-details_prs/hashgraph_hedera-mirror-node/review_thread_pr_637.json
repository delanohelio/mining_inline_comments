{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk2NDkyNzc1", "number": 637, "reviewThreads": {"totalCount": 15, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQyMzoyMTo0NVrODtvY8g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxOTozMjoyNlrODvRkEQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5Mjg4OTQ2OnYy", "diffSide": "RIGHT", "path": "charts/README.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQyMzoyMTo0NVrOF_WDug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQyMzoyMTo0NVrOF_WDug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTk2NjAxMA==", "bodyText": "nit: The above command.\nI read \"This command\" as referring to the command below", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/637#discussion_r401966010", "createdAt": "2020-04-01T23:21:45Z", "author": {"login": "Nana-EC"}, "path": "charts/README.md", "diffHunk": "@@ -0,0 +1,34 @@\n+# Helm Chart\n+\n+Installs the Hedera Mirror Node Helm wrapper chart. This chart will install the three mirror node components:\n+\n+- [Hedera Mirror Importer](hedera-mirror-importer)\n+- [Hedera Mirror GRPC API](hedera-mirror-importer)\n+- [Hedera Mirror REST API](hedera-mirror-importer)\n+\n+## Requirements\n+\n+- [Helm 3](https://helm.sh)\n+- [Kubernetes 1.17+](https://kubernetes.io)\n+\n+## Install\n+\n+To install the wrapper chart with a release name of `mirror`:\n+\n+```shell script\n+$ helm upgrade --install mirror charts/hedera-mirror\n+```\n+\n+## Uninstall\n+\n+To remove all the Kubernetes components associated with the chart and delete the release:\n+\n+```shell script\n+$ helm delete mirror\n+```\n+\n+This command does not delete any of the underlying persistent volumes. To delete all the data associated with this release:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f12766af499366c252b00bab86cf996817615c29"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5Mjg5MjQ2OnYy", "diffSide": "RIGHT", "path": "charts/README.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQyMzoyMzoxNlrOF_WFoA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxNjo0MDo1MlrOF_z5rQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTk2NjQ5Ng==", "bodyText": "q: Did you want to add a diagnostics section or add to the current diagnostics section the kubectl comments for viewing service status and basic logs", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/637#discussion_r401966496", "createdAt": "2020-04-01T23:23:16Z", "author": {"login": "Nana-EC"}, "path": "charts/README.md", "diffHunk": "@@ -0,0 +1,34 @@\n+# Helm Chart\n+\n+Installs the Hedera Mirror Node Helm wrapper chart. This chart will install the three mirror node components:\n+\n+- [Hedera Mirror Importer](hedera-mirror-importer)\n+- [Hedera Mirror GRPC API](hedera-mirror-importer)\n+- [Hedera Mirror REST API](hedera-mirror-importer)\n+\n+## Requirements\n+\n+- [Helm 3](https://helm.sh)\n+- [Kubernetes 1.17+](https://kubernetes.io)\n+\n+## Install\n+\n+To install the wrapper chart with a release name of `mirror`:\n+\n+```shell script\n+$ helm upgrade --install mirror charts/hedera-mirror\n+```\n+\n+## Uninstall\n+\n+To remove all the Kubernetes components associated with the chart and delete the release:\n+\n+```shell script\n+$ helm delete mirror\n+```\n+\n+This command does not delete any of the underlying persistent volumes. To delete all the data associated with this release:\n+\n+```shell script\n+$ kubectl delete $(kubectl get pvc -o name)\n+```", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f12766af499366c252b00bab86cf996817615c29"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjQ1NDk1Nw==", "bodyText": "Was going to add more docs in follow up as mentioned in description, but ok. Added", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/637#discussion_r402454957", "createdAt": "2020-04-02T16:40:52Z", "author": {"login": "steven-sheehy"}, "path": "charts/README.md", "diffHunk": "@@ -0,0 +1,34 @@\n+# Helm Chart\n+\n+Installs the Hedera Mirror Node Helm wrapper chart. This chart will install the three mirror node components:\n+\n+- [Hedera Mirror Importer](hedera-mirror-importer)\n+- [Hedera Mirror GRPC API](hedera-mirror-importer)\n+- [Hedera Mirror REST API](hedera-mirror-importer)\n+\n+## Requirements\n+\n+- [Helm 3](https://helm.sh)\n+- [Kubernetes 1.17+](https://kubernetes.io)\n+\n+## Install\n+\n+To install the wrapper chart with a release name of `mirror`:\n+\n+```shell script\n+$ helm upgrade --install mirror charts/hedera-mirror\n+```\n+\n+## Uninstall\n+\n+To remove all the Kubernetes components associated with the chart and delete the release:\n+\n+```shell script\n+$ helm delete mirror\n+```\n+\n+This command does not delete any of the underlying persistent volumes. To delete all the data associated with this release:\n+\n+```shell script\n+$ kubectl delete $(kubectl get pvc -o name)\n+```", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTk2NjQ5Ng=="}, "originalCommit": {"oid": "f12766af499366c252b00bab86cf996817615c29"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5MjkxMDIyOnYy", "diffSide": "RIGHT", "path": "hedera-mirror-importer/src/main/java/com/hedera/mirror/importer/parser/record/PostgresWritingRecordParsedItemHandler.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQyMzozMjowMFrOF_WQdA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxNjo0MDoxOVrOF_z4Lw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTk2OTI2OA==", "bodyText": "q: is there somewhere this is specified once and centrally so places like this can call them and not have string hard coded?", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/637#discussion_r401969268", "createdAt": "2020-04-01T23:32:00Z", "author": {"login": "Nana-EC"}, "path": "hedera-mirror-importer/src/main/java/com/hedera/mirror/importer/parser/record/PostgresWritingRecordParsedItemHandler.java", "diffHunk": "@@ -101,7 +101,7 @@ private void initConnectionAndStatements() throws ParserSQLException {\n         try {\n             connection = dataSource.getConnection();\n             connection.setAutoCommit(false); // do not auto-commit\n-            connection.setClientInfo(\"ApplicationName\", getClass().getCanonicalName());\n+            connection.setClientInfo(\"ApplicationName\", \"hedera-mirror-importer\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f12766af499366c252b00bab86cf996817615c29"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjQ1NDU3NQ==", "bodyText": "I could inject it using @Value(\"${spring.application.name}\"), but don't think it's worth the effort. I reverted to using the class name but without the package.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/637#discussion_r402454575", "createdAt": "2020-04-02T16:40:19Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-importer/src/main/java/com/hedera/mirror/importer/parser/record/PostgresWritingRecordParsedItemHandler.java", "diffHunk": "@@ -101,7 +101,7 @@ private void initConnectionAndStatements() throws ParserSQLException {\n         try {\n             connection = dataSource.getConnection();\n             connection.setAutoCommit(false); // do not auto-commit\n-            connection.setClientInfo(\"ApplicationName\", getClass().getCanonicalName());\n+            connection.setClientInfo(\"ApplicationName\", \"hedera-mirror-importer\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTk2OTI2OA=="}, "originalCommit": {"oid": "f12766af499366c252b00bab86cf996817615c29"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwMjYyMDg1OnYy", "diffSide": "RIGHT", "path": "charts/README.md", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNFQwODoxNTozOVrOGAwIdw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxOTo0Mjo0MVrOGBnIEg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQ0MTc4Mw==", "bodyText": "links need fixing.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/637#discussion_r403441783", "createdAt": "2020-04-04T08:15:39Z", "author": {"login": "apeksharma"}, "path": "charts/README.md", "diffHunk": "@@ -0,0 +1,65 @@\n+# Helm Chart\n+\n+Installs the Hedera Mirror Node Helm wrapper chart. This chart will install the three mirror node components:\n+\n+- [Hedera Mirror Importer](hedera-mirror-importer)\n+- [Hedera Mirror GRPC API](hedera-mirror-importer)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "204ca5f7f71469c7012baf4e898e5cbbab768046"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDIwODg1Mw==", "bodyText": "All these links work for me. They're relative links. Try it here.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/637#discussion_r404208853", "createdAt": "2020-04-06T16:04:08Z", "author": {"login": "steven-sheehy"}, "path": "charts/README.md", "diffHunk": "@@ -0,0 +1,65 @@\n+# Helm Chart\n+\n+Installs the Hedera Mirror Node Helm wrapper chart. This chart will install the three mirror node components:\n+\n+- [Hedera Mirror Importer](hedera-mirror-importer)\n+- [Hedera Mirror GRPC API](hedera-mirror-importer)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQ0MTc4Mw=="}, "originalCommit": {"oid": "204ca5f7f71469c7012baf4e898e5cbbab768046"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDMxOTEzNg==", "bodyText": "all point to importer", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/637#discussion_r404319136", "createdAt": "2020-04-06T18:59:45Z", "author": {"login": "apeksharma"}, "path": "charts/README.md", "diffHunk": "@@ -0,0 +1,65 @@\n+# Helm Chart\n+\n+Installs the Hedera Mirror Node Helm wrapper chart. This chart will install the three mirror node components:\n+\n+- [Hedera Mirror Importer](hedera-mirror-importer)\n+- [Hedera Mirror GRPC API](hedera-mirror-importer)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQ0MTc4Mw=="}, "originalCommit": {"oid": "204ca5f7f71469c7012baf4e898e5cbbab768046"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDM0MjgwMg==", "bodyText": "Ah, missed the obvious.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/637#discussion_r404342802", "createdAt": "2020-04-06T19:42:41Z", "author": {"login": "steven-sheehy"}, "path": "charts/README.md", "diffHunk": "@@ -0,0 +1,65 @@\n+# Helm Chart\n+\n+Installs the Hedera Mirror Node Helm wrapper chart. This chart will install the three mirror node components:\n+\n+- [Hedera Mirror Importer](hedera-mirror-importer)\n+- [Hedera Mirror GRPC API](hedera-mirror-importer)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQ0MTc4Mw=="}, "originalCommit": {"oid": "204ca5f7f71469c7012baf4e898e5cbbab768046"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwMjYyNDY5OnYy", "diffSide": "RIGHT", "path": "charts/hedera-mirror-grpc/Chart.yaml", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNFQwODoyMToxNFrOGAwKUw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxOTowMDozNlrOGBltZg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQ0MjI1OQ==", "bodyText": "We should consistently use either \"Hedera\" or \"Hedera Hashgraph\".\nWe use \"Hedera Mirror Node\" everywhere else including project's readme, so would prefer that.\nSame in Chart.yaml for rest api.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/637#discussion_r403442259", "createdAt": "2020-04-04T08:21:14Z", "author": {"login": "apeksharma"}, "path": "charts/hedera-mirror-grpc/Chart.yaml", "diffHunk": "@@ -0,0 +1,9 @@\n+apiVersion: v1\n+appVersion: 0.8.1\n+description: GRPC API for Hedera Hashgraph Mirror Nodes", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "204ca5f7f71469c7012baf4e898e5cbbab768046"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDIwOTYyOA==", "bodyText": "I straight copied these lines from the pom.xml's. Do you want me to update those as well?", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/637#discussion_r404209628", "createdAt": "2020-04-06T16:05:15Z", "author": {"login": "steven-sheehy"}, "path": "charts/hedera-mirror-grpc/Chart.yaml", "diffHunk": "@@ -0,0 +1,9 @@\n+apiVersion: v1\n+appVersion: 0.8.1\n+description: GRPC API for Hedera Hashgraph Mirror Nodes", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQ0MjI1OQ=="}, "originalCommit": {"oid": "204ca5f7f71469c7012baf4e898e5cbbab768046"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDMxOTU5MA==", "bodyText": "that'd be good :)", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/637#discussion_r404319590", "createdAt": "2020-04-06T19:00:36Z", "author": {"login": "apeksharma"}, "path": "charts/hedera-mirror-grpc/Chart.yaml", "diffHunk": "@@ -0,0 +1,9 @@\n+apiVersion: v1\n+appVersion: 0.8.1\n+description: GRPC API for Hedera Hashgraph Mirror Nodes", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQ0MjI1OQ=="}, "originalCommit": {"oid": "204ca5f7f71469c7012baf4e898e5cbbab768046"}, "originalPosition": 3}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwMjYzNDcwOnYy", "diffSide": "RIGHT", "path": "hedera-mirror-rest/server.js", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNFQwODozNTo1M1rOGAwPFA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxNjowNjowN1rOGBfCWg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQ0MzQ3Ng==", "bodyText": "Earlier, prod logs were in /opt/restapi/logs, what command will i need to see the logs now?\nLet's update docs too.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/637#discussion_r403443476", "createdAt": "2020-04-04T08:35:53Z", "author": {"login": "apeksharma"}, "path": "hedera-mirror-rest/server.js", "diffHunk": "@@ -58,8 +58,7 @@ if (port === undefined || isNaN(Number(port))) {\n log4js.configure({\n   appenders: {\n     everything: {\n-      type: 'file',\n-      filename: '../logs/hedera_mirrornode_api_' + port + '.log' // ensure port is a legit number above\n+      type: 'stdout'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "204ca5f7f71469c7012baf4e898e5cbbab768046"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDIxMDI2Ng==", "bodyText": "Good point, will update docs. Command will be pm2 logs <port>", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/637#discussion_r404210266", "createdAt": "2020-04-06T16:06:07Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-rest/server.js", "diffHunk": "@@ -58,8 +58,7 @@ if (port === undefined || isNaN(Number(port))) {\n log4js.configure({\n   appenders: {\n     everything: {\n-      type: 'file',\n-      filename: '../logs/hedera_mirrornode_api_' + port + '.log' // ensure port is a legit number above\n+      type: 'stdout'", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQ0MzQ3Ng=="}, "originalCommit": {"oid": "204ca5f7f71469c7012baf4e898e5cbbab768046"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwNTg4MzE0OnYy", "diffSide": "RIGHT", "path": "charts/hedera-mirror-grpc/templates/NOTES.txt", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQwNjowNzowMFrOGBI7NQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxNjowNzoxOVrOGBfFhQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzg0Nzk4OQ==", "bodyText": "Please add extra lines for improving readability here. For eg. https://github.com/helm/charts/blob/master/stable/chartmuseum/templates/NOTES.txt\nSimilarly for other NOTES.txt.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/637#discussion_r403847989", "createdAt": "2020-04-06T06:07:00Z", "author": {"login": "apeksharma"}, "path": "charts/hedera-mirror-grpc/templates/NOTES.txt", "diffHunk": "@@ -0,0 +1,13 @@\n+Get the GRPC service endpoint by running these commands:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "204ca5f7f71469c7012baf4e898e5cbbab768046"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDIxMTA3Nw==", "bodyText": "This was the default output generated by helm create. Will add lines.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/637#discussion_r404211077", "createdAt": "2020-04-06T16:07:19Z", "author": {"login": "steven-sheehy"}, "path": "charts/hedera-mirror-grpc/templates/NOTES.txt", "diffHunk": "@@ -0,0 +1,13 @@\n+Get the GRPC service endpoint by running these commands:", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzg0Nzk4OQ=="}, "originalCommit": {"oid": "204ca5f7f71469c7012baf4e898e5cbbab768046"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwNjA1Njg1OnYy", "diffSide": "RIGHT", "path": "charts/hedera-mirror-importer/templates/service-headless.yaml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQwNzoxNDozOFrOGBKhWg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQwNzoxNDozOFrOGBKhWg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzg3NDEzOA==", "bodyText": "please add a comment here why importer is headless service", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/637#discussion_r403874138", "createdAt": "2020-04-06T07:14:38Z", "author": {"login": "apeksharma"}, "path": "charts/hedera-mirror-importer/templates/service-headless.yaml", "diffHunk": "@@ -0,0 +1,13 @@\n+apiVersion: v1", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "204ca5f7f71469c7012baf4e898e5cbbab768046"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwNjA2ODIzOnYy", "diffSide": "RIGHT", "path": "charts/hedera-mirror-grpc/values.yaml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQwNzoxODoyNlrOGBKoRQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxNjowOTo0NFrOGBfMnQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzg3NTkwOQ==", "bodyText": "nice.\nIs auto-scaling configurable on user params too? Say we find that grpc or rest is network bound rather than cpu, can it use a user metrics (say exposed on a port) to auto scale. Just curious.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/637#discussion_r403875909", "createdAt": "2020-04-06T07:18:26Z", "author": {"login": "apeksharma"}, "path": "charts/hedera-mirror-grpc/values.yaml", "diffHunk": "@@ -0,0 +1,104 @@\n+affinity:\n+  podAntiAffinity:\n+    preferredDuringSchedulingIgnoredDuringExecution:\n+      - weight: 100\n+        podAffinityTerm:\n+          topologyKey: kubernetes.io/hostname\n+          labelSelector:\n+            matchLabels:\n+              app.kubernetes.io/name: grpc\n+\n+annotations: {}\n+\n+config: {}\n+\n+fullnameOverride: \"\"\n+\n+global:\n+  namespaceOverride: \"\"\n+\n+hpa:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "204ca5f7f71469c7012baf4e898e5cbbab768046"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDIxMjg5Mw==", "bodyText": "It can be configurable on any metric that we can collect. And in fact can be based upon multiple metrics, so we could keep cpu and add network metric, in your example.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/637#discussion_r404212893", "createdAt": "2020-04-06T16:09:44Z", "author": {"login": "steven-sheehy"}, "path": "charts/hedera-mirror-grpc/values.yaml", "diffHunk": "@@ -0,0 +1,104 @@\n+affinity:\n+  podAntiAffinity:\n+    preferredDuringSchedulingIgnoredDuringExecution:\n+      - weight: 100\n+        podAffinityTerm:\n+          topologyKey: kubernetes.io/hostname\n+          labelSelector:\n+            matchLabels:\n+              app.kubernetes.io/name: grpc\n+\n+annotations: {}\n+\n+config: {}\n+\n+fullnameOverride: \"\"\n+\n+global:\n+  namespaceOverride: \"\"\n+\n+hpa:", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzg3NTkwOQ=="}, "originalCommit": {"oid": "204ca5f7f71469c7012baf4e898e5cbbab768046"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwNjExMzY0OnYy", "diffSide": "RIGHT", "path": "charts/hedera-mirror-grpc/templates/rolebinding.yaml", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQwNzozMjowN1rOGBLDNA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxOTowMjoyNlrOGBlxSg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzg4MjgwNA==", "bodyText": "Should the name be hedera-mirror-grpc.serviceAccountName?\nIf service account is never used without rbac.enabled, we should be able to remove the serviceAccount.create?\nBoth true or false case be covered by single flag.\nrbac.enabled=false and serviceAccount.create=true seems not useful\nrbac.enabled=true and serviceAccount.create=false can lead to failure if new name is specified.\nRight now the 2x2x2 cases arising from rbac.enabled = {true,false}, serviceAccount.create={true,false}, and serviceAccount.name = {set/not set},\nand 2x2 case to just determine final value for serviceAccount.name .....seems more complex than needed.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/637#discussion_r403882804", "createdAt": "2020-04-06T07:32:07Z", "author": {"login": "apeksharma"}, "path": "charts/hedera-mirror-grpc/templates/rolebinding.yaml", "diffHunk": "@@ -0,0 +1,16 @@\n+{{- if .Values.rbac.enabled -}}\n+apiVersion: rbac.authorization.k8s.io/v1\n+kind: RoleBinding\n+metadata:\n+  labels:\n+    {{- include \"hedera-mirror-grpc.labels\" . | nindent 4 }}\n+  name: {{ include \"hedera-mirror-grpc.fullname\" . }}\n+  namespace: {{ include \"hedera-mirror-grpc.namespace\" . }}\n+roleRef:\n+  apiGroup: rbac.authorization.k8s.io\n+  kind: Role\n+  name: {{ include \"hedera-mirror-grpc.fullname\" . }}\n+subjects:\n+- kind: ServiceAccount", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "204ca5f7f71469c7012baf4e898e5cbbab768046"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDIzMTk1NQ==", "bodyText": "You're right, it should use hedera-mirror-grpc.serviceAccountName. Will address.\nYou can still use service accounts without rbac. If you don't supply a service account the pod will implicitly use the default service account. Some people may want to override the service account we create and supply their own. Also, the rbac.enabled and serviceAccount.create is the default generated by helm create and used by nearly every public chart. I think we should keep it as is unless you feel strongly.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/637#discussion_r404231955", "createdAt": "2020-04-06T16:37:41Z", "author": {"login": "steven-sheehy"}, "path": "charts/hedera-mirror-grpc/templates/rolebinding.yaml", "diffHunk": "@@ -0,0 +1,16 @@\n+{{- if .Values.rbac.enabled -}}\n+apiVersion: rbac.authorization.k8s.io/v1\n+kind: RoleBinding\n+metadata:\n+  labels:\n+    {{- include \"hedera-mirror-grpc.labels\" . | nindent 4 }}\n+  name: {{ include \"hedera-mirror-grpc.fullname\" . }}\n+  namespace: {{ include \"hedera-mirror-grpc.namespace\" . }}\n+roleRef:\n+  apiGroup: rbac.authorization.k8s.io\n+  kind: Role\n+  name: {{ include \"hedera-mirror-grpc.fullname\" . }}\n+subjects:\n+- kind: ServiceAccount", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzg4MjgwNA=="}, "originalCommit": {"oid": "204ca5f7f71469c7012baf4e898e5cbbab768046"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDMyMDU4Ng==", "bodyText": "i see. Thanks for the explanation.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/637#discussion_r404320586", "createdAt": "2020-04-06T19:02:26Z", "author": {"login": "apeksharma"}, "path": "charts/hedera-mirror-grpc/templates/rolebinding.yaml", "diffHunk": "@@ -0,0 +1,16 @@\n+{{- if .Values.rbac.enabled -}}\n+apiVersion: rbac.authorization.k8s.io/v1\n+kind: RoleBinding\n+metadata:\n+  labels:\n+    {{- include \"hedera-mirror-grpc.labels\" . | nindent 4 }}\n+  name: {{ include \"hedera-mirror-grpc.fullname\" . }}\n+  namespace: {{ include \"hedera-mirror-grpc.namespace\" . }}\n+roleRef:\n+  apiGroup: rbac.authorization.k8s.io\n+  kind: Role\n+  name: {{ include \"hedera-mirror-grpc.fullname\" . }}\n+subjects:\n+- kind: ServiceAccount", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzg4MjgwNA=="}, "originalCommit": {"oid": "204ca5f7f71469c7012baf4e898e5cbbab768046"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwNjI0NjQ0OnYy", "diffSide": "RIGHT", "path": "charts/hedera-mirror/templates/configmap.yaml", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQwODoxMDowMFrOGBMTFA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxOTowNToyMVrOGBl3rw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzkwMzI1Mg==", "bodyText": "We should flag protect postgres' resource creation since they won't be initialized in prod and we are not going to migrate off cloud sql anytime soon. The flag itself can be true by default to have single command deployment (for anyone playing with mirror node).", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/637#discussion_r403903252", "createdAt": "2020-04-06T08:10:00Z", "author": {"login": "apeksharma"}, "path": "charts/hedera-mirror/templates/configmap.yaml", "diffHunk": "@@ -0,0 +1,24 @@\n+# This file is temporarily a ConfigMap until I can make changes with the upstream chart", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "204ca5f7f71469c7012baf4e898e5cbbab768046"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDIxODgyMQ==", "bodyText": "Postgres already has a enabled flag postgresql.enabled defaulted to true and having an extra configmap doesn't hurt anything. But good point, can add around this file.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/637#discussion_r404218821", "createdAt": "2020-04-06T16:18:15Z", "author": {"login": "steven-sheehy"}, "path": "charts/hedera-mirror/templates/configmap.yaml", "diffHunk": "@@ -0,0 +1,24 @@\n+# This file is temporarily a ConfigMap until I can make changes with the upstream chart", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzkwMzI1Mg=="}, "originalCommit": {"oid": "204ca5f7f71469c7012baf4e898e5cbbab768046"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDMyMjIyMw==", "bodyText": "Missed that flag. All good.\nI don't mind extra configmaps as long as pods are not deployed when postgres is disabled.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/637#discussion_r404322223", "createdAt": "2020-04-06T19:05:21Z", "author": {"login": "apeksharma"}, "path": "charts/hedera-mirror/templates/configmap.yaml", "diffHunk": "@@ -0,0 +1,24 @@\n+# This file is temporarily a ConfigMap until I can make changes with the upstream chart", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzkwMzI1Mg=="}, "originalCommit": {"oid": "204ca5f7f71469c7012baf4e898e5cbbab768046"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwNjI4ODAyOnYy", "diffSide": "RIGHT", "path": "charts/hedera-mirror/requirements.lock", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQwODoyMToxM1rOGBMskw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxOToxMzo0OFrOGBmKUQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzkwOTc3OQ==", "bodyText": "why do we need to checkin tgz files?\nDidn't see them checked-in in couple projects i saw.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/637#discussion_r403909779", "createdAt": "2020-04-06T08:21:13Z", "author": {"login": "apeksharma"}, "path": "charts/hedera-mirror/requirements.lock", "diffHunk": "@@ -0,0 +1,24 @@\n+dependencies:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "204ca5f7f71469c7012baf4e898e5cbbab768046"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDIxNjQ1Mw==", "bodyText": "It's debatable, just like checking in go modules. Not checking them in means you have external dependencies that you have to download during CI or CD that could fail the build/deploy. If that repo ever goes away or is down or that version is pruned we wouldn't be able to deploy.\nAlso, we may or may not be packaging these charts and creating a HTTP chart repository and instead retrieving them directly from git. If so, every deployment would have to resolve the dependencies.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/637#discussion_r404216453", "createdAt": "2020-04-06T16:14:43Z", "author": {"login": "steven-sheehy"}, "path": "charts/hedera-mirror/requirements.lock", "diffHunk": "@@ -0,0 +1,24 @@\n+dependencies:", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzkwOTc3OQ=="}, "originalCommit": {"oid": "204ca5f7f71469c7012baf4e898e5cbbab768046"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDMyNjk5Mw==", "bodyText": "Fair enough reason to keep them. Please add it to README (or requirements.yaml. Some please where explorative souls can find it)\nI just believe in commenting the hack out of anything non-obvious, or debatable, or out of ordinary. :D\nIn this case, if it falls in debatable category, would appreciate if we add one.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/637#discussion_r404326993", "createdAt": "2020-04-06T19:13:48Z", "author": {"login": "apeksharma"}, "path": "charts/hedera-mirror/requirements.lock", "diffHunk": "@@ -0,0 +1,24 @@\n+dependencies:", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzkwOTc3OQ=="}, "originalCommit": {"oid": "204ca5f7f71469c7012baf4e898e5cbbab768046"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwODkyMTIwOnYy", "diffSide": "RIGHT", "path": "charts/hedera-mirror-importer/values.yaml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxOToxNjo0NlrOGBmQ1Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxOTo0MDozOFrOGBnEHw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDMyODY2MQ==", "bodyText": "Does it make sense since there is only one instance? If yes, please add a comment to the file too.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/637#discussion_r404328661", "createdAt": "2020-04-06T19:16:46Z", "author": {"login": "apeksharma"}, "path": "charts/hedera-mirror-importer/values.yaml", "diffHunk": "@@ -0,0 +1,111 @@\n+affinity:\n+  podAntiAffinity:\n+    preferredDuringSchedulingIgnoredDuringExecution:\n+      - weight: 100\n+        podAffinityTerm:\n+          topologyKey: kubernetes.io/hostname\n+          labelSelector:\n+            matchLabels:\n+              app.kubernetes.io/name: importer\n+\n+annotations: {}\n+\n+config:\n+  hedera:\n+    mirror:\n+      dataPath: /var/lib/hedera-mirror-importer\n+\n+fullnameOverride: \"\"\n+\n+global:\n+  namespaceOverride: \"\"\n+\n+image:\n+  pullPolicy: IfNotPresent\n+  repository: gcr.io/mirrornode/hedera-mirror-importer\n+  tag: 0.8.1\n+\n+imagePullSecrets: []\n+\n+labels:\n+  role: app\n+\n+livenessProbe:\n+  httpGet:\n+    path: /actuator/health\n+    port: http\n+  initialDelaySeconds: 60\n+  periodSeconds: 30\n+  timeoutSeconds: 2\n+\n+nameOverride: \"\"\n+\n+networkPolicy:\n+  enabled: false\n+\n+nodeSelector: {}\n+\n+persistence:\n+  accessModes:\n+    - ReadWriteOnce\n+  annotations: {}\n+  enabled: true\n+  size: 10Gi\n+  storageClass: standard\n+\n+podManagementPolicy: OrderedReady\n+\n+podSecurityContext:\n+  fsGroup: 1000\n+\n+priorityClassName: \"\"\n+\n+rbac:\n+  enabled: true\n+\n+readinessProbe:\n+  httpGet:\n+    path: /actuator/health\n+    port: http\n+  initialDelaySeconds: 60\n+  timeoutSeconds: 2\n+\n+replicas: 1\n+\n+resources:\n+  limits:\n+    cpu: 500m\n+    memory: 750Mi\n+  requests:\n+    cpu: 200m\n+    memory: 256Mi\n+\n+revisionHistoryLimit: 3\n+\n+securityContext:\n+  capabilities:\n+    drop: [ALL]\n+  readOnlyRootFilesystem: true\n+  runAsGroup: 1000\n+  runAsNonRoot: true\n+  runAsUser: 1000\n+\n+service:\n+  port: 8080\n+  type: ClusterIP\n+\n+serviceAccount:\n+  create: true\n+  # The name of the service account to use. If not set and create is true, a name is generated using the fullname template\n+  name:\n+\n+serviceMonitor:\n+  enabled: true\n+  interval: 30s\n+\n+terminationGracePeriodSeconds: 30\n+\n+tolerations: []\n+\n+updateStrategy:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "204ca5f7f71469c7012baf4e898e5cbbab768046"}, "originalPosition": 110}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDM0MTc5MQ==", "bodyText": "Update strategy still applies to a single instance. For example, you can supply a surge to temporarily bring replicas to 2, wait for it go ready then delete old pod. Also, in prod we will have replicas=2 for redundancy.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/637#discussion_r404341791", "createdAt": "2020-04-06T19:40:38Z", "author": {"login": "steven-sheehy"}, "path": "charts/hedera-mirror-importer/values.yaml", "diffHunk": "@@ -0,0 +1,111 @@\n+affinity:\n+  podAntiAffinity:\n+    preferredDuringSchedulingIgnoredDuringExecution:\n+      - weight: 100\n+        podAffinityTerm:\n+          topologyKey: kubernetes.io/hostname\n+          labelSelector:\n+            matchLabels:\n+              app.kubernetes.io/name: importer\n+\n+annotations: {}\n+\n+config:\n+  hedera:\n+    mirror:\n+      dataPath: /var/lib/hedera-mirror-importer\n+\n+fullnameOverride: \"\"\n+\n+global:\n+  namespaceOverride: \"\"\n+\n+image:\n+  pullPolicy: IfNotPresent\n+  repository: gcr.io/mirrornode/hedera-mirror-importer\n+  tag: 0.8.1\n+\n+imagePullSecrets: []\n+\n+labels:\n+  role: app\n+\n+livenessProbe:\n+  httpGet:\n+    path: /actuator/health\n+    port: http\n+  initialDelaySeconds: 60\n+  periodSeconds: 30\n+  timeoutSeconds: 2\n+\n+nameOverride: \"\"\n+\n+networkPolicy:\n+  enabled: false\n+\n+nodeSelector: {}\n+\n+persistence:\n+  accessModes:\n+    - ReadWriteOnce\n+  annotations: {}\n+  enabled: true\n+  size: 10Gi\n+  storageClass: standard\n+\n+podManagementPolicy: OrderedReady\n+\n+podSecurityContext:\n+  fsGroup: 1000\n+\n+priorityClassName: \"\"\n+\n+rbac:\n+  enabled: true\n+\n+readinessProbe:\n+  httpGet:\n+    path: /actuator/health\n+    port: http\n+  initialDelaySeconds: 60\n+  timeoutSeconds: 2\n+\n+replicas: 1\n+\n+resources:\n+  limits:\n+    cpu: 500m\n+    memory: 750Mi\n+  requests:\n+    cpu: 200m\n+    memory: 256Mi\n+\n+revisionHistoryLimit: 3\n+\n+securityContext:\n+  capabilities:\n+    drop: [ALL]\n+  readOnlyRootFilesystem: true\n+  runAsGroup: 1000\n+  runAsNonRoot: true\n+  runAsUser: 1000\n+\n+service:\n+  port: 8080\n+  type: ClusterIP\n+\n+serviceAccount:\n+  create: true\n+  # The name of the service account to use. If not set and create is true, a name is generated using the fullname template\n+  name:\n+\n+serviceMonitor:\n+  enabled: true\n+  interval: 30s\n+\n+terminationGracePeriodSeconds: 30\n+\n+tolerations: []\n+\n+updateStrategy:", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDMyODY2MQ=="}, "originalCommit": {"oid": "204ca5f7f71469c7012baf4e898e5cbbab768046"}, "originalPosition": 110}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwODkzNzY3OnYy", "diffSide": "RIGHT", "path": "charts/hedera-mirror-importer/templates/pdb.yaml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxOToyMTozMVrOGBmbHQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQyMjo1MDowNFrOGBsveg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDMzMTI5Mw==", "bodyText": "beta version made me nervous. But seems like it has been in beta since 1.15 and the requirements to graduate are some extra testing and additional features. So i guess it's okay.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/637#discussion_r404331293", "createdAt": "2020-04-06T19:21:31Z", "author": {"login": "apeksharma"}, "path": "charts/hedera-mirror-importer/templates/pdb.yaml", "diffHunk": "@@ -0,0 +1,12 @@\n+apiVersion: policy/v1beta1", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "204ca5f7f71469c7012baf4e898e5cbbab768046"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDQzNDgxMA==", "bodyText": "Yes, feature graduation is a very well defined and rigorous process in Kubernetes.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/637#discussion_r404434810", "createdAt": "2020-04-06T22:50:04Z", "author": {"login": "steven-sheehy"}, "path": "charts/hedera-mirror-importer/templates/pdb.yaml", "diffHunk": "@@ -0,0 +1,12 @@\n+apiVersion: policy/v1beta1", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDMzMTI5Mw=="}, "originalCommit": {"oid": "204ca5f7f71469c7012baf4e898e5cbbab768046"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwODk3NDI1OnYy", "diffSide": "RIGHT", "path": "hedera-mirror-importer/src/main/java/com/hedera/mirror/importer/leader/LeaderAspect.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxOTozMjoyNlrOGBmyHw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxOTozNjo1N1rOGBm8Hg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDMzNzE4Mw==", "bodyText": "Please add class comment.\nIf there's a default example/source from where the code was forked, it'd be good to add that too. Just makes reviewing (or understanding code in general for anyone in future), lot easier.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/637#discussion_r404337183", "createdAt": "2020-04-06T19:32:26Z", "author": {"login": "apeksharma"}, "path": "hedera-mirror-importer/src/main/java/com/hedera/mirror/importer/leader/LeaderAspect.java", "diffHunk": "@@ -0,0 +1,68 @@\n+package com.hedera.mirror.importer.leader;\n+/*-\n+ * \u200c\n+ * Hedera Mirror Node\n+ * \u200b\n+ * Copyright (C) 2019 - 2020 Hedera Hashgraph, LLC\n+ * \u200b\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ * \u200d\n+ */\n+\n+import lombok.extern.log4j.Log4j2;\n+import org.aspectj.lang.ProceedingJoinPoint;\n+import org.aspectj.lang.annotation.Around;\n+import org.aspectj.lang.annotation.Aspect;\n+import org.springframework.context.event.EventListener;\n+import org.springframework.core.annotation.Order;\n+import org.springframework.integration.leader.event.OnGrantedEvent;\n+import org.springframework.integration.leader.event.OnRevokedEvent;\n+\n+@Aspect\n+@Log4j2\n+@Order(1)\n+public class LeaderAspect {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "204ca5f7f71469c7012baf4e898e5cbbab768046"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDMzOTc0Mg==", "bodyText": "Will add a javadoc. It's not forked, I wrote it. I used something similar at my last job, but can't link to that ;)", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/637#discussion_r404339742", "createdAt": "2020-04-06T19:36:57Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-importer/src/main/java/com/hedera/mirror/importer/leader/LeaderAspect.java", "diffHunk": "@@ -0,0 +1,68 @@\n+package com.hedera.mirror.importer.leader;\n+/*-\n+ * \u200c\n+ * Hedera Mirror Node\n+ * \u200b\n+ * Copyright (C) 2019 - 2020 Hedera Hashgraph, LLC\n+ * \u200b\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ * \u200d\n+ */\n+\n+import lombok.extern.log4j.Log4j2;\n+import org.aspectj.lang.ProceedingJoinPoint;\n+import org.aspectj.lang.annotation.Around;\n+import org.aspectj.lang.annotation.Aspect;\n+import org.springframework.context.event.EventListener;\n+import org.springframework.core.annotation.Order;\n+import org.springframework.integration.leader.event.OnGrantedEvent;\n+import org.springframework.integration.leader.event.OnRevokedEvent;\n+\n+@Aspect\n+@Log4j2\n+@Order(1)\n+public class LeaderAspect {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDMzNzE4Mw=="}, "originalCommit": {"oid": "204ca5f7f71469c7012baf4e898e5cbbab768046"}, "originalPosition": 34}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1262, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}