{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA2OTMyMjc4", "number": 704, "title": "Topic message format support for UTF8 message encoding", "bodyText": "Detailed description:\nThe /api/v1/topics/:id/messages endpoint currently returns messages encoded in base64\nFor safe unencrypted messages it may be useful to encode the message in human readable format such as UTF-8\nThis change\n\nAdds a encoding=base64/utf-8/utf8  to /api/v1/topics/:id/messages api\nAdds spec.json test for scenario\nExtends formatTopicMessage() to manage flag for desired encoding. Default is base64\nAdds encodeUtf8() methods\n\nWhich issue(s) this PR fixes:\nFixes #703\nSpecial notes for your reviewer:\nChecklist\n\n Documentation added\n Tests updated", "createdAt": "2020-04-21T22:03:47Z", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/704", "merged": true, "mergeCommit": {"oid": "447c32ea0eec2f583fcca0f5e4e52eef6fb855ec"}, "closed": true, "closedAt": "2020-04-24T01:53:27Z", "author": {"login": "Nana-EC"}, "timelineItems": {"totalCount": 24, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcZmIp1AH2gAyNDA2OTMyMjc4OjZkMzQxZGE3NzYzMjkzZDllMjg3YWE1NWRiODg1NDRmODYxNTc4MmM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcanh4UgFqTM5OTU4ODc3MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "6d341da7763293d9e287aa55db88544f8615782c", "author": {"user": {"login": "Nana-EC", "name": null}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/6d341da7763293d9e287aa55db88544f8615782c", "committedDate": "2020-04-20T21:40:02Z", "message": "Fix topic messages REST route\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "67a05d9cc367cc7deb92fe8d8cdaf68341a6ed51", "author": {"user": {"login": "Nana-EC", "name": null}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/67a05d9cc367cc7deb92fe8d8cdaf68341a6ed51", "committedDate": "2020-04-21T05:16:48Z", "message": "Add format filter to encode topic messages\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f221ffb91e05d9cd6746a9b572994502aca4e121", "author": {"user": {"login": "Nana-EC", "name": null}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/f221ffb91e05d9cd6746a9b572994502aca4e121", "committedDate": "2020-04-21T14:27:47Z", "message": "Update tests\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "21b423f514efaf087c7bcb0c559ccf455462c486", "author": {"user": {"login": "Nana-EC", "name": null}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/21b423f514efaf087c7bcb0c559ccf455462c486", "committedDate": "2020-04-21T15:32:07Z", "message": "Update tests\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "362eb38507fcb25a170873d456f8efa68e457ebb", "author": {"user": {"login": "Nana-EC", "name": null}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/362eb38507fcb25a170873d456f8efa68e457ebb", "committedDate": "2020-04-21T15:47:07Z", "message": "Merge diverved branch\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6abd781ce019715be24f3ccfe96c8bd836183810", "author": {"user": {"login": "Nana-EC", "name": null}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/6abd781ce019715be24f3ccfe96c8bd836183810", "committedDate": "2020-04-21T20:43:34Z", "message": "Fix topic messages REST route\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "21ddc7a2e9ff2902a29181f84a93baf386fa0524", "author": {"user": {"login": "Nana-EC", "name": null}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/21ddc7a2e9ff2902a29181f84a93baf386fa0524", "committedDate": "2020-04-21T20:44:42Z", "message": "Add format filter to encode topic messages\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "42c38d48b68aaf0a4ac28c8733eb7814aca90965", "author": {"user": {"login": "Nana-EC", "name": null}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/42c38d48b68aaf0a4ac28c8733eb7814aca90965", "committedDate": "2020-04-21T20:44:42Z", "message": "Update tests\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8b7b5c1e00be1e3722acfb69090055a1bddf67a4", "author": {"user": {"login": "Nana-EC", "name": null}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/8b7b5c1e00be1e3722acfb69090055a1bddf67a4", "committedDate": "2020-04-21T20:46:10Z", "message": "Update tests\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3e89f17646c757007ab2008738c04722ff9b2cd8", "author": {"user": {"login": "Nana-EC", "name": null}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/3e89f17646c757007ab2008738c04722ff9b2cd8", "committedDate": "2020-04-21T20:49:51Z", "message": "Merge topic route fix from master\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "015cce0c3906e698dd173ef4775c747c7bc09776", "author": {"user": {"login": "Nana-EC", "name": null}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/015cce0c3906e698dd173ef4775c747c7bc09776", "committedDate": "2020-04-22T20:40:04Z", "message": "Fixed up references and removed isUTF8 method till we need it\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk4NzIxNTQx", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/704#pullrequestreview-398721541", "createdAt": "2020-04-23T02:44:51Z", "commit": {"oid": "015cce0c3906e698dd173ef4775c747c7bc09776"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QwMjo0NDo1MVrOGKUFEQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QwMzozMjo1NFrOGKVAiA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzQ2NzkyMQ==", "bodyText": "'binary' is confusing since the output is not really 'binary' (0101...).\nIn future, if we have to add say hex encoding and call it 'hex', that'd be okay, but it'll make 'binary' even more wrong.\nShould rename this to following for clarity: encoding=utf8/base64", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/704#discussion_r413467921", "createdAt": "2020-04-23T02:44:51Z", "author": {"login": "apeksharma"}, "path": "hedera-mirror-rest/__tests__/specs/topicmessages-05-all-params.spec.json", "diffHunk": "@@ -38,7 +38,7 @@\n       }\n     ]\n   },\n-  \"url\": \"/api/v1/topic/7/messages?sequencenumber=gt:3&timestamp=lte:1234567890.000000005\",\n+  \"url\": \"/api/v1/topic/7/messages?sequencenumber=gt:3&timestamp=lte:1234567890.000000005&format=binary\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "015cce0c3906e698dd173ef4775c747c7bc09776"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzQ2OTgxMQ==", "bodyText": "param should be just 'messageEncoding'. The value can be 'text' (utf8) too, so 'binary..' is wrong.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/704#discussion_r413469811", "createdAt": "2020-04-23T02:50:52Z", "author": {"login": "apeksharma"}, "path": "hedera-mirror-rest/topicmessage.js", "diffHunk": "@@ -85,16 +85,21 @@ const validateGetTopicMessagesRequest = (topicId, filters) => {\n /**\n  * Format row in postgres query's result to object which is directly returned to user as json.\n  */\n-const formatTopicMessageRow = function (row) {\n+const formatTopicMessageRow = function (row, binaryMessageFormat) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "015cce0c3906e698dd173ef4775c747c7bc09776"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzQ3MTkwOA==", "bodyText": "Better in utils.\nconst encode = function (buffer, encoding) {\n  return null === buffer ? null : buffer.toString(encoding);\n}\n\nAnd other encode* functions in utils.js can call this.\nAlso goes well with converting query param to 'encoding=utf8/base64'", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/704#discussion_r413471908", "createdAt": "2020-04-23T02:56:52Z", "author": {"login": "apeksharma"}, "path": "hedera-mirror-rest/topicmessage.js", "diffHunk": "@@ -85,16 +85,21 @@ const validateGetTopicMessagesRequest = (topicId, filters) => {\n /**\n  * Format row in postgres query's result to object which is directly returned to user as json.\n  */\n-const formatTopicMessageRow = function (row) {\n+const formatTopicMessageRow = function (row, binaryMessageFormat) {\n   return {\n     consensus_timestamp: utils.nsToSecNs(row[topicMessageColumns.CONSENSUS_TIMESTAMP]),\n     topic_id: `${config.shard}.${row[topicMessageColumns.REALM_NUM]}.${row[topicMessageColumns.TOPIC_NUM]}`,\n-    message: utils.encodeBase64(row[topicMessageColumns.MESSAGE]),\n+    message: formatTopicMessage(row[topicMessageColumns.MESSAGE], binaryMessageFormat),\n     running_hash: utils.encodeBase64(row[topicMessageColumns.RUNNING_HASH]),\n     sequence_number: parseInt(row[topicMessageColumns.SEQUENCE_NUMBER]),\n   };\n };\n \n+const formatTopicMessage = function (message, format) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "015cce0c3906e698dd173ef4775c747c7bc09776"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzQ3OTk3Mg==", "bodyText": "utils.buildFilterObject should return a map from Map(param => value or [values]).\nWhen looking for limit, order, etc to make sql query or 'encoding' to get format, iterate shouldn't be the way.\nA for loop in extractSqlFromTopicMessagesRequest below does that making logic more complex than need to be.\nNot asking from perf angle (not worth worry here), but from right design perspective.\nThat way, when looking for say 'limit', we will not breaking out of loop at first instance of 'limit' and ignore if there are multiple of those (..limit=2&limit=3). In fact, we can also make validate better by ensuring that single user params are not repeated.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/704#discussion_r413479972", "createdAt": "2020-04-23T03:22:19Z", "author": {"login": "apeksharma"}, "path": "hedera-mirror-rest/topicmessage.js", "diffHunk": "@@ -143,6 +148,8 @@ const processGetTopicMessages = (req, res) => {\n   // build sql query validated param and filters\n   let {query, params, order, limit} = extractSqlFromTopicMessagesRequest(topicId, filters);\n \n+  const binaryMessageFormat = utils.getFilterValue(constants.filterKeys.FORMAT, filters);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "015cce0c3906e698dd173ef4775c747c7bc09776"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzQ4MDM1Mg==", "bodyText": "just return results.rows?", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/704#discussion_r413480352", "createdAt": "2020-04-23T03:23:43Z", "author": {"login": "apeksharma"}, "path": "hedera-mirror-rest/topicmessage.js", "diffHunk": "@@ -248,7 +268,7 @@ const getMessages = async (pgSqlQuery, pgSqlParams) => {\n     })\n     .then((results) => {\n       for (let i = 0; i < results.rowCount; i++) {\n-        messages.push(formatTopicMessageRow(results.rows[i]));\n+        messages.push(results.rows[i]);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "015cce0c3906e698dd173ef4775c747c7bc09776"}, "originalPosition": 77}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzQ4MzE0NA==", "bodyText": "topicMessagesResponse.messages = messages.map(m \u2192 formatTopicMessageRow(m, messageFormat))", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/704#discussion_r413483144", "createdAt": "2020-04-23T03:32:54Z", "author": {"login": "apeksharma"}, "path": "hedera-mirror-rest/topicmessage.js", "diffHunk": "@@ -152,11 +159,18 @@ const processGetTopicMessages = (req, res) => {\n \n   // get results and return formatted response\n   return getMessages(query, params).then((messages) => {\n-    topicMessagesResponse.messages = messages;\n+    // format messages", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "015cce0c3906e698dd173ef4775c747c7bc09776"}, "originalPosition": 38}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0ffcef1b8aba31295fde971f6dd8978b09fbef53", "author": {"user": {"login": "Nana-EC", "name": null}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/0ffcef1b8aba31295fde971f6dd8978b09fbef53", "committedDate": "2020-04-23T14:17:47Z", "message": "Addressed feedback 1\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4eae4f6239525a3841c8b47c14b267a601fdea3f", "author": {"user": {"login": "Nana-EC", "name": null}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/4eae4f6239525a3841c8b47c14b267a601fdea3f", "committedDate": "2020-04-23T18:40:49Z", "message": "Switched to encoding over format\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "956899b755c249f359ce1d776f10096577943f00", "author": {"user": {"login": "Nana-EC", "name": null}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/956899b755c249f359ce1d776f10096577943f00", "committedDate": "2020-04-23T19:00:26Z", "message": "Added isValidEncoding to support varied utf8 spelling and tests for it\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk5Mzk3OTU1", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/704#pullrequestreview-399397955", "createdAt": "2020-04-23T19:10:55Z", "commit": {"oid": "956899b755c249f359ce1d776f10096577943f00"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QxOToxMDo1NlrOGK34TQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QxOTo0MDoyMFrOGK4-yg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDA1NDQ3Nw==", "bodyText": "make these agnostic to 'topicMessage' since this operation is possible for any general set of bytes. That's the reason to move to utils.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/704#discussion_r414054477", "createdAt": "2020-04-23T19:10:56Z", "author": {"login": "apeksharma"}, "path": "hedera-mirror-rest/utils.js", "diffHunk": "@@ -602,7 +614,26 @@ const encodeKey = function (key) {\n  * @return {String} base64 encoded string\n  */\n const encodeBase64 = function (buffer) {\n-  return null === buffer ? null : buffer.toString('base64');\n+  return encodeMessage(buffer, constants.topicMessageEncoding.BASE64);\n+};\n+\n+/**\n+ * Base64 encoding of a byte array for returning in JSON output\n+ * @param {Array} key Byte array to be encoded\n+ * @return {String} utf-8 encoded string\n+ */\n+const encodeUtf8 = function (buffer) {\n+  return encodeMessage(buffer, constants.topicMessageEncoding.UTF8);\n+};\n+\n+const encodeMessage = function (buffer, encoding) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "956899b755c249f359ce1d776f10096577943f00"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDA1ODcxNA==", "bodyText": "encoding (topicMessage agnostic)", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/704#discussion_r414058714", "createdAt": "2020-04-23T19:17:46Z", "author": {"login": "apeksharma"}, "path": "hedera-mirror-rest/constants.js", "diffHunk": "@@ -45,6 +46,12 @@ const orderFilterValues = {\n   DESC: 'desc',\n };\n \n+// topic messages filter options\n+const topicMessageEncoding = {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "956899b755c249f359ce1d776f10096577943f00"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDA1OTM0Mw==", "bodyText": "not used anymore. Can be deleted.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/704#discussion_r414059343", "createdAt": "2020-04-23T19:18:48Z", "author": {"login": "apeksharma"}, "path": "hedera-mirror-rest/utils.js", "diffHunk": "@@ -714,19 +745,33 @@ const formatComparator = (comparator) => {\n   }\n };\n \n+const getFilterValue = (key, filters, defaultVal) => {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "956899b755c249f359ce1d776f10096577943f00"}, "originalPosition": 75}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDA3MjUyMg==", "bodyText": "we shouldn't expose a function just for testing if it's not used anywhere in prod code.\nTests should test for functionality in same way prod code invokes it.\nAt first I thought writing tests for filterValidityChecks would be the right thing. Digging more, looks like it is exporter by not used (so can be removed).\nThe right way is to test this via validateAndParseFilters since thats what topicmessage.js uses.\ndescribe('Encoding param checks', () => {\n  test('Verify invalid for 0', () => {\n    expect(validateAndParseFilters({key:'encoding', op:..., value: '0'}).toBe(false);\n  });\n  ....\n}", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/704#discussion_r414072522", "createdAt": "2020-04-23T19:40:20Z", "author": {"login": "apeksharma"}, "path": "hedera-mirror-rest/utils.js", "diffHunk": "@@ -714,19 +745,33 @@ const formatComparator = (comparator) => {\n   }\n };\n \n+const getFilterValue = (key, filters, defaultVal) => {\n+  for (const filter of filters) {\n+    if (key == filter.key) {\n+      return filter.value;\n+    }\n+  }\n+\n+  return defaultVal;\n+};\n+\n module.exports = {\n   buildFilterObject: buildFilterObject,\n   buildComparatorFilter: buildComparatorFilter,\n   buildPgSqlObject: buildPgSqlObject,\n   createTransactionId: createTransactionId,\n   convertMySqlStyleQueryToPostgres: convertMySqlStyleQueryToPostgres,\n+  encodeMessage: encodeMessage,\n   encodeBase64: encodeBase64,\n+  encodeUtf8,\n   encodeKey: encodeKey,\n   ENTITY_TYPE_FILE: ENTITY_TYPE_FILE,\n   filterValidityChecks: filterValidityChecks,\n   formatComparator: formatComparator,\n+  getFilterValue,\n   getNullableNumber: getNullableNumber,\n   getPaginationLink: getPaginationLink,\n+  isValidEncoding,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "956899b755c249f359ce1d776f10096577943f00"}, "originalPosition": 101}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bbebaf990d6087a80e83d2a631d01ae05a27092b", "author": {"user": {"login": "Nana-EC", "name": null}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/bbebaf990d6087a80e83d2a631d01ae05a27092b", "committedDate": "2020-04-23T20:24:05Z", "message": "Cleaned up\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk5NTIzNTg3", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/704#pullrequestreview-399523587", "createdAt": "2020-04-23T22:33:49Z", "commit": {"oid": "bbebaf990d6087a80e83d2a631d01ae05a27092b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QyMjozMzo1MFrOGK-0vg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QyMjozMzo1MFrOGK-0vg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDE2ODI1NA==", "bodyText": "am not sure 'utf8' will work. The comparison in encodeBinary will fail and default to base64.\nFor now changing the condition in encodeBinary would be sufficient. Right now the code is bug prone since the parser, validator, api processor, and utility functions are all having to support \"alternate values\". This is bad abstraction.\nBetter way would be (in future):\n{query params} => Parse => {parsed params} => API handler\nHTTPRequest's query params are already Map<name => value/[values...]>\nParse function will\n- validate that value of a param is of expected format\n- support alternate param names or alternate values\n- be api agnostic (so basically we can't have a 'paramName' mean two different things in different apis and that's good).\n- iteratively parse each [key, value] and will finally return parsed params. For eg\nMap {\n  constants.filterKeys.LIMIT: X,\n  constants.filterKeys.ENCODING: constants.characterEncoding.UTF8,\n  constants.filterKeys.TIMESTAMP: {eq: 10},\n  ...\n}\n\nThen all the benefits mentioned previously about Map come into picture too.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/704#discussion_r414168254", "createdAt": "2020-04-23T22:33:50Z", "author": {"login": "apeksharma"}, "path": "hedera-mirror-rest/topicmessage.js", "diffHunk": "@@ -143,6 +143,8 @@ const processGetTopicMessages = (req, res) => {\n   // build sql query validated param and filters\n   let {query, params, order, limit} = extractSqlFromTopicMessagesRequest(topicId, filters);\n \n+  const messageEncoding = req.query[constants.filterKeys.ENCODING];", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bbebaf990d6087a80e83d2a631d01ae05a27092b"}, "originalPosition": 18}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e7952721f8afa4dc9233ae9d04e86fbcc54d44d6", "author": {"user": {"login": "Nana-EC", "name": null}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/e7952721f8afa4dc9233ae9d04e86fbcc54d44d6", "committedDate": "2020-04-24T00:20:29Z", "message": "Fix gap in utf8 matching\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk5NTY3Mjg0", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/704#pullrequestreview-399567284", "createdAt": "2020-04-24T00:35:06Z", "commit": {"oid": "e7952721f8afa4dc9233ae9d04e86fbcc54d44d6"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a63a459e2987249808a1327096ae25e13355cc97", "author": {"user": {"login": "Nana-EC", "name": null}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/a63a459e2987249808a1327096ae25e13355cc97", "committedDate": "2020-04-24T00:36:41Z", "message": "merge w master for resource plural fix\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7959529bb82291519c50ecb6b2b8282b3047147c", "author": {"user": {"login": "Nana-EC", "name": null}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/7959529bb82291519c50ecb6b2b8282b3047147c", "committedDate": "2020-04-24T00:40:44Z", "message": "Fix merge issue\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk5NTcwMTQ4", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/704#pullrequestreview-399570148", "createdAt": "2020-04-24T00:44:56Z", "commit": {"oid": "7959529bb82291519c50ecb6b2b8282b3047147c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk5NTg4Nzcx", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/704#pullrequestreview-399588771", "createdAt": "2020-04-24T01:51:25Z", "commit": {"oid": "7959529bb82291519c50ecb6b2b8282b3047147c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3091, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}