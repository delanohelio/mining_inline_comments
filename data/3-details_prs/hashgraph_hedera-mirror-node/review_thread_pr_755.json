{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE3MTAxMzQ1", "number": 755, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QwNDowNzo1OVrOD75u9g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QyMToyMjoxMlrOD8PdMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0MTM4NDg2OnYy", "diffSide": "LEFT", "path": "hedera-mirror-rest/accounts.js", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QwNDowNzo1OVrOGUgwLA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QwNDowNzo1OVrOGUgwLA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDE2MTMyNA==", "bodyText": "clauses on ctl.amount are duplicate. transactions.getTransactionsInnerQuery also adds them to the query.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/755#discussion_r424161324", "createdAt": "2020-05-13T04:07:59Z", "author": {"login": "apeksharma"}, "path": "hedera-mirror-rest/accounts.js", "diffHunk": "@@ -234,10 +234,7 @@ const getOneAccount = async (req, res) => {\n \n   const creditDebit = utils.parseCreditDebitParams(req);\n \n-  const accountQuery =\n-    'realm_num = ?\\n' +\n-    '    and entity_num = ? ' +\n-    (creditDebit === 'credit' ? ' and ctl.amount > 0 ' : creditDebit === 'debit' ? ' and ctl.amount < 0 ' : '');", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0888583b40ce2be8df903b0affa8582e5169223b"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0NDE1MjEwOnYy", "diffSide": "RIGHT", "path": "hedera-mirror-rest/__tests__/mockpool.js", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxNzoyOTozMlrOGU8I5Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxODowNzo0OVrOGU9iOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDYxMDAyMQ==", "bodyText": "q: Where was this needed? Andshouldn't the default be a valid hash?", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/755#discussion_r424610021", "createdAt": "2020-05-13T17:29:32Z", "author": {"login": "Nana-EC"}, "path": "hedera-mirror-rest/__tests__/mockpool.js", "diffHunk": "@@ -194,6 +194,7 @@ class Pool {\n         Number(accountNum.low) + (accountNum.high == accountNum.low ? 0 : i % (accountNum.high - accountNum.low));\n       row.amount = i * 1000;\n       row.charged_tx_fee = 100 + i;\n+      row.transaction_hash = '';", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3153ffd9308c876f193467ba50dd8523ceb48454"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDYzMjg4OA==", "bodyText": "To prevent undefined value here.\ntransactions[row.consensus_ns]['transaction_hash'] = utils.encodeBase64(row['transaction_hash']);\nThe value doesn't matter as long as is it is not undefined.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/755#discussion_r424632888", "createdAt": "2020-05-13T18:07:49Z", "author": {"login": "apeksharma"}, "path": "hedera-mirror-rest/__tests__/mockpool.js", "diffHunk": "@@ -194,6 +194,7 @@ class Pool {\n         Number(accountNum.low) + (accountNum.high == accountNum.low ? 0 : i % (accountNum.high - accountNum.low));\n       row.amount = i * 1000;\n       row.charged_tx_fee = 100 + i;\n+      row.transaction_hash = '';", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDYxMDAyMQ=="}, "originalCommit": {"oid": "3153ffd9308c876f193467ba50dd8523ceb48454"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0NDE2ODQ1OnYy", "diffSide": "RIGHT", "path": "hedera-mirror-rest/__tests__/integrationDomainOps.js", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxNzozMzo0OFrOGU8THA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxODozMjo1OFrOGU-eew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDYxMjYzNg==", "bodyText": "q: Why the '' on some the placeholders in some of the queries?", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/755#discussion_r424612636", "createdAt": "2020-05-13T17:33:48Z", "author": {"login": "Nana-EC"}, "path": "hedera-mirror-rest/__tests__/integrationDomainOps.js", "diffHunk": "@@ -160,14 +161,18 @@ const addTransaction = async function (transaction) {\n       transfers: [],\n       non_fee_transfers: [],\n       charged_tx_fee: NODE_FEE + NETWORK_FEE + SERVICE_FEE,\n+      transaction_hash: 'hash',\n     },\n     transaction\n   );\n \n   transaction.consensus_timestamp = math.bignumber(transaction.consensus_timestamp);\n \n   await sqlConnection.query(\n-    'insert into t_transactions (consensus_ns, valid_start_ns, fk_payer_acc_id, fk_node_acc_id, result, type, valid_duration_seconds, max_fee, charged_tx_fee) values ($1, $2, $3, $4, $5, $6, $7, $8, $9);',\n+    `INSERT INTO t_transactions (\n+        consensus_ns, valid_start_ns, fk_payer_acc_id, fk_node_acc_id, result, type,\n+        valid_duration_seconds, max_fee, charged_tx_fee, transaction_hash)\n+       VALUES (\\$1, \\$2, \\$3, \\$4, \\$5, \\$6, \\$7, \\$8, \\$9, \\$10);`,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3153ffd9308c876f193467ba50dd8523ceb48454"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDY0ODMxNQ==", "bodyText": "Changed all to use backtick", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/755#discussion_r424648315", "createdAt": "2020-05-13T18:32:58Z", "author": {"login": "apeksharma"}, "path": "hedera-mirror-rest/__tests__/integrationDomainOps.js", "diffHunk": "@@ -160,14 +161,18 @@ const addTransaction = async function (transaction) {\n       transfers: [],\n       non_fee_transfers: [],\n       charged_tx_fee: NODE_FEE + NETWORK_FEE + SERVICE_FEE,\n+      transaction_hash: 'hash',\n     },\n     transaction\n   );\n \n   transaction.consensus_timestamp = math.bignumber(transaction.consensus_timestamp);\n \n   await sqlConnection.query(\n-    'insert into t_transactions (consensus_ns, valid_start_ns, fk_payer_acc_id, fk_node_acc_id, result, type, valid_duration_seconds, max_fee, charged_tx_fee) values ($1, $2, $3, $4, $5, $6, $7, $8, $9);',\n+    `INSERT INTO t_transactions (\n+        consensus_ns, valid_start_ns, fk_payer_acc_id, fk_node_acc_id, result, type,\n+        valid_duration_seconds, max_fee, charged_tx_fee, transaction_hash)\n+       VALUES (\\$1, \\$2, \\$3, \\$4, \\$5, \\$6, \\$7, \\$8, \\$9, \\$10);`,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDYxMjYzNg=="}, "originalCommit": {"oid": "3153ffd9308c876f193467ba50dd8523ceb48454"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0NDkzMjE0OnYy", "diffSide": "RIGHT", "path": "hedera-mirror-rest/__tests__/integrationDomainOps.js", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QyMToxODoxNFrOGVD4cA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQwNDoxODo0MVrOGVLg0w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDczNjg4MA==", "bodyText": "I'm not sure I agree with the prettifying. We've been trying to write SQL lower case in migrations and elsewhere as a standardization. I had discussed this with Nana previously and he agreed that's what he preferred as well. I'm okay with format of SQL other than the case.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/755#discussion_r424736880", "createdAt": "2020-05-13T21:18:14Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-rest/__tests__/integrationDomainOps.js", "diffHunk": "@@ -122,8 +121,10 @@ const addAccount = async function (account) {\n   }\n \n   let res = await sqlConnection.query(\n-    'insert into t_entities (fk_entity_type_id, entity_shard, entity_realm, entity_num, exp_time_ns, deleted, ed25519_public_key_hex, auto_renew_period, key) ' +\n-      'values ($1, $2, $3, $4, $5, $6, $7, $8, $9) returning id;',\n+    `INSERT INTO t_entities (", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "03674e5957140b5499cc956d7125612615be069e"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDc1MTE0Nw==", "bodyText": "It's just standard way of writing sql, albeit for a reason.\nSQL isn't like other programming languages which has punctuations to help in readability and often gets written in plain strings where syntax highlight doesn't work.\nIt also has way many keywords to remember all. Highlighting helps there too.\nJust makes it more readable. For example. Compare following this vs this", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/755#discussion_r424751147", "createdAt": "2020-05-13T21:49:20Z", "author": {"login": "apeksharma"}, "path": "hedera-mirror-rest/__tests__/integrationDomainOps.js", "diffHunk": "@@ -122,8 +121,10 @@ const addAccount = async function (account) {\n   }\n \n   let res = await sqlConnection.query(\n-    'insert into t_entities (fk_entity_type_id, entity_shard, entity_realm, entity_num, exp_time_ns, deleted, ed25519_public_key_hex, auto_renew_period, key) ' +\n-      'values ($1, $2, $3, $4, $5, $6, $7, $8, $9) returning id;',\n+    `INSERT INTO t_entities (", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDczNjg4MA=="}, "originalCommit": {"oid": "03674e5957140b5499cc956d7125612615be069e"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDc5MzU0Nw==", "bodyText": "It's not standard, it's just your preference. While a majority has a preference for lowercase. Uppercase words are harder to read, hence why I am not writing this sentence in all uppercase.\nI wish you would've reached consensus with the team first before making sweeping changes. But I won't block this PR or make you change it back.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/755#discussion_r424793547", "createdAt": "2020-05-13T23:47:35Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-rest/__tests__/integrationDomainOps.js", "diffHunk": "@@ -122,8 +121,10 @@ const addAccount = async function (account) {\n   }\n \n   let res = await sqlConnection.query(\n-    'insert into t_entities (fk_entity_type_id, entity_shard, entity_realm, entity_num, exp_time_ns, deleted, ed25519_public_key_hex, auto_renew_period, key) ' +\n-      'values ($1, $2, $3, $4, $5, $6, $7, $8, $9) returning id;',\n+    `INSERT INTO t_entities (", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDczNjg4MA=="}, "originalCommit": {"oid": "03674e5957140b5499cc956d7125612615be069e"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDg2MTkwNw==", "bodyText": "Thank you, appreciate it.\nYeah, all uppercase would be terrible.\nI try to seek the opinions first when such things arise. I thought using the same format as in postgres and mysql official documentations would be okay.\nIn hindsight, should have brought it up first. Sorry about that.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/755#discussion_r424861907", "createdAt": "2020-05-14T04:18:41Z", "author": {"login": "apeksharma"}, "path": "hedera-mirror-rest/__tests__/integrationDomainOps.js", "diffHunk": "@@ -122,8 +121,10 @@ const addAccount = async function (account) {\n   }\n \n   let res = await sqlConnection.query(\n-    'insert into t_entities (fk_entity_type_id, entity_shard, entity_realm, entity_num, exp_time_ns, deleted, ed25519_public_key_hex, auto_renew_period, key) ' +\n-      'values ($1, $2, $3, $4, $5, $6, $7, $8, $9) returning id;',\n+    `INSERT INTO t_entities (", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDczNjg4MA=="}, "originalCommit": {"oid": "03674e5957140b5499cc956d7125612615be069e"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0NDk0Mzg2OnYy", "diffSide": "RIGHT", "path": "hedera-mirror-rest/__tests__/specs/accounts-10-account-transactions.spec.json", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QyMToyMjoxMlrOGVD_vQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQwNDoxOTowNVrOGVLhJg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDczODc0OQ==", "bodyText": "q: We usually store byte[] as base64 encoded, but should this one field be hex to match Kabuto? Also, it seems like hex is usually used more for hash output by a lot of commands. Am okay either way, just want to discuss first.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/755#discussion_r424738749", "createdAt": "2020-05-13T21:22:12Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-rest/__tests__/specs/accounts-10-account-transactions.spec.json", "diffHunk": "@@ -67,6 +67,7 @@\n         \"name\": \"CRYPTOTRANSFER\",\n         \"node\": \"0.0.3\",\n         \"result\": \"SUCCESS\",\n+        \"transaction_hash\": \"aGFzaA==\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "03674e5957140b5499cc956d7125612615be069e"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDc1MjE1Nw==", "bodyText": "That's what I said last time. #613 (comment)\nHex is the way hashes are represented in blockchain world.\nThis and running hash both should be in hex.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/755#discussion_r424752157", "createdAt": "2020-05-13T21:51:45Z", "author": {"login": "apeksharma"}, "path": "hedera-mirror-rest/__tests__/specs/accounts-10-account-transactions.spec.json", "diffHunk": "@@ -67,6 +67,7 @@\n         \"name\": \"CRYPTOTRANSFER\",\n         \"node\": \"0.0.3\",\n         \"result\": \"SUCCESS\",\n+        \"transaction_hash\": \"aGFzaA==\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDczODc0OQ=="}, "originalCommit": {"oid": "03674e5957140b5499cc956d7125612615be069e"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDc4NzMxMg==", "bodyText": "Yeah, my argument before was base64 is more efficient and we already use it for other fields. Those arguments are still valid, I was just contrasting the field to Kabuto's hex field. I think the base64 arguments win out here to be consistent.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/755#discussion_r424787312", "createdAt": "2020-05-13T23:27:25Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-rest/__tests__/specs/accounts-10-account-transactions.spec.json", "diffHunk": "@@ -67,6 +67,7 @@\n         \"name\": \"CRYPTOTRANSFER\",\n         \"node\": \"0.0.3\",\n         \"result\": \"SUCCESS\",\n+        \"transaction_hash\": \"aGFzaA==\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDczODc0OQ=="}, "originalCommit": {"oid": "03674e5957140b5499cc956d7125612615be069e"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDg2MTk5MA==", "bodyText": "Yeah, let's keep it base64 to be consistent for now.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/755#discussion_r424861990", "createdAt": "2020-05-14T04:19:05Z", "author": {"login": "apeksharma"}, "path": "hedera-mirror-rest/__tests__/specs/accounts-10-account-transactions.spec.json", "diffHunk": "@@ -67,6 +67,7 @@\n         \"name\": \"CRYPTOTRANSFER\",\n         \"node\": \"0.0.3\",\n         \"result\": \"SUCCESS\",\n+        \"transaction_hash\": \"aGFzaA==\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDczODc0OQ=="}, "originalCommit": {"oid": "03674e5957140b5499cc956d7125612615be069e"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1035, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}