{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA5MzA3MTEw", "number": 1181, "title": "Fix stale accounts REST API", "bodyText": "Detailed description:\nInitial balance inner joins used by account rest api's resulted in info being stale.\nIn some cases there would be no balance and therefore new accounts were accidentally filter out.\n\nRearrange join to start with entity filter to get all accounts then pick up balances\nAdd 3 integration spec files to cover cases were accounts had no balance yet\nRemove cases of doubling up on entity and account_id filter\n\nWhich issue(s) this PR fixes:\nFixes #1177\nSpecial notes for your reviewer:\nChecklist\n\n Documentation added\n Tests updated", "createdAt": "2020-10-24T02:03:09Z", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1181", "merged": true, "mergeCommit": {"oid": "a9554340e9eab536f66f7845146dd1724f8e0e15"}, "closed": true, "closedAt": "2020-10-28T22:41:19Z", "author": {"login": "Nana-EC"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdViDtSAH2gAyNTA5MzA3MTEwOmRiODlhMjk5YmM0NmUwMTNjOTVhYWI5MzY3ZjU5NjBhN2E1Y2IzYTY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdXCEFhAFqTUxODk3ODQzMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "db89a299bc46e013c95aab9367f5960a7a5cb3a6", "author": {"user": {"login": "Nana-EC", "name": null}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/db89a299bc46e013c95aab9367f5960a7a5cb3a6", "committedDate": "2020-10-24T02:50:28Z", "message": "Fix stale accounts REST API\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dfcd7b3c831ba58fc403e3890d0a7dea6eb08148", "author": {"user": {"login": "Nana-EC", "name": null}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/dfcd7b3c831ba58fc403e3890d0a7dea6eb08148", "committedDate": "2020-10-24T02:50:28Z", "message": "Fixed uts and mock pool logic\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "25a2c38af556f7190bf5c25ea32135516de5cc32", "author": {"user": {"login": "Nana-EC", "name": null}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/25a2c38af556f7190bf5c25ea32135516de5cc32", "committedDate": "2020-10-24T02:47:14Z", "message": "Fixed uts and mock pool logic\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>"}, "afterCommit": {"oid": "dfcd7b3c831ba58fc403e3890d0a7dea6eb08148", "author": {"user": {"login": "Nana-EC", "name": null}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/dfcd7b3c831ba58fc403e3890d0a7dea6eb08148", "committedDate": "2020-10-24T02:50:28Z", "message": "Fixed uts and mock pool logic\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE2OTM2ODQw", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1181#pullrequestreview-516936840", "createdAt": "2020-10-26T16:07:01Z", "commit": {"oid": "dfcd7b3c831ba58fc403e3890d0a7dea6eb08148"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQxNjowNzowMVrOHoW64w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQxNjoyNToxM1rOHoXuFg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjA4MDYxMQ==", "bodyText": "I think this comment might be out of date.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1181#discussion_r512080611", "createdAt": "2020-10-26T16:07:01Z", "author": {"login": "ijungmann"}, "path": "hedera-mirror-rest/accounts.js", "diffHunk": "@@ -191,15 +180,9 @@ const getOneAccount = async (req, res) => {\n \n   // Because of the outer join on the 'account_balance ab' and 't_entities e' below, we\n   // need to look  for the given account.id in both account_balance and t_entities table and combine with an 'or'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dfcd7b3c831ba58fc403e3890d0a7dea6eb08148"}, "originalPosition": 70}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjA5MzcxOA==", "bodyText": "Would there ever be a scenario where we have an account balance without the entity?  Just want to make sure getting rid of the full outer join doesn't cause side effects.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1181#discussion_r512093718", "createdAt": "2020-10-26T16:25:13Z", "author": {"login": "ijungmann"}, "path": "hedera-mirror-rest/accounts.js", "diffHunk": "@@ -80,12 +82,11 @@ const getAccountQuery = (extraWhereCondition, orderClause, order, query) => {\n            ab.consensus_timestamp = tb.consensus_timestamp\n            and ab.account_id = tb.account_id\n        ) as token_balances\n-    from account_balance ab\n-    full outer join t_entities e on (\n-      ab.account_id = e.id\n-      and e.fk_entity_type_id < ${utils.ENTITY_TYPE_FILE}\n-    )\n-    where ab.consensus_timestamp = (select max(consensus_timestamp) from account_balance) ${extraWhereCondition || ''}\n+    from (select id, fk_entity_type_id, exp_time_ns, auto_renew_period, key, deleted, ed25519_public_key_hex from t_entities where fk_entity_type_id < ${\n+      utils.ENTITY_TYPE_FILE\n+    }) as e\n+    left outer join account_balance ab on ab.account_id = e.id", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dfcd7b3c831ba58fc403e3890d0a7dea6eb08148"}, "originalPosition": 27}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE2OTQxNjMz", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1181#pullrequestreview-516941633", "createdAt": "2020-10-26T16:11:59Z", "commit": {"oid": "dfcd7b3c831ba58fc403e3890d0a7dea6eb08148"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQxNjoxMTo1OVrOHoXJGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQxNjozNToxNlrOHoYLEg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjA4NDI0OQ==", "bodyText": "it's easier to read in this way:\nfrom t_entities e\n\nthen move the condition e.fk_entity_type_id < ${utils.ENTITY_TYPE_FILE} to the top level where clause\nassume there is no performance difference.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1181#discussion_r512084249", "createdAt": "2020-10-26T16:11:59Z", "author": {"login": "xin-hedera"}, "path": "hedera-mirror-rest/accounts.js", "diffHunk": "@@ -80,12 +82,11 @@ const getAccountQuery = (extraWhereCondition, orderClause, order, query) => {\n            ab.consensus_timestamp = tb.consensus_timestamp\n            and ab.account_id = tb.account_id\n        ) as token_balances\n-    from account_balance ab\n-    full outer join t_entities e on (\n-      ab.account_id = e.id\n-      and e.fk_entity_type_id < ${utils.ENTITY_TYPE_FILE}\n-    )\n-    where ab.consensus_timestamp = (select max(consensus_timestamp) from account_balance) ${extraWhereCondition || ''}\n+    from (select id, fk_entity_type_id, exp_time_ns, auto_renew_period, key, deleted, ed25519_public_key_hex from t_entities where fk_entity_type_id < ${\n+      utils.ENTITY_TYPE_FILE\n+    }) as e", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dfcd7b3c831ba58fc403e3890d0a7dea6eb08148"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjA4NTYwNg==", "bodyText": "adding or ab.consensus_timestamp is null here may have big performance impact, suggest to analyze it with testnet db.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1181#discussion_r512085606", "createdAt": "2020-10-26T16:13:59Z", "author": {"login": "xin-hedera"}, "path": "hedera-mirror-rest/accounts.js", "diffHunk": "@@ -80,12 +82,11 @@ const getAccountQuery = (extraWhereCondition, orderClause, order, query) => {\n            ab.consensus_timestamp = tb.consensus_timestamp\n            and ab.account_id = tb.account_id\n        ) as token_balances\n-    from account_balance ab\n-    full outer join t_entities e on (\n-      ab.account_id = e.id\n-      and e.fk_entity_type_id < ${utils.ENTITY_TYPE_FILE}\n-    )\n-    where ab.consensus_timestamp = (select max(consensus_timestamp) from account_balance) ${extraWhereCondition || ''}\n+    from (select id, fk_entity_type_id, exp_time_ns, auto_renew_period, key, deleted, ed25519_public_key_hex from t_entities where fk_entity_type_id < ${\n+      utils.ENTITY_TYPE_FILE\n+    }) as e\n+    left outer join account_balance ab on ab.account_id = e.id\n+    where ${startWhereCondition} (ab.consensus_timestamp = (select max(consensus_timestamp) from account_balance) or ab.consensus_timestamp is null)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dfcd7b3c831ba58fc403e3890d0a7dea6eb08148"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjEwMTEzOA==", "bodyText": "it was a full outer join, which based on my understanding covers the corner case that an account is not in t_entities but has balance record in account_balance table.\nI'm not sure if that's a valid case or if it has happened before though.\nUpdate: assume the mirror node has partial data (e.g., startDate is set), the balance file will contain accounts not in t_entities table.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1181#discussion_r512101138", "createdAt": "2020-10-26T16:35:16Z", "author": {"login": "xin-hedera"}, "path": "hedera-mirror-rest/accounts.js", "diffHunk": "@@ -80,12 +82,11 @@ const getAccountQuery = (extraWhereCondition, orderClause, order, query) => {\n            ab.consensus_timestamp = tb.consensus_timestamp\n            and ab.account_id = tb.account_id\n        ) as token_balances\n-    from account_balance ab\n-    full outer join t_entities e on (\n-      ab.account_id = e.id\n-      and e.fk_entity_type_id < ${utils.ENTITY_TYPE_FILE}\n-    )\n-    where ab.consensus_timestamp = (select max(consensus_timestamp) from account_balance) ${extraWhereCondition || ''}\n+    from (select id, fk_entity_type_id, exp_time_ns, auto_renew_period, key, deleted, ed25519_public_key_hex from t_entities where fk_entity_type_id < ${\n+      utils.ENTITY_TYPE_FILE\n+    }) as e\n+    left outer join account_balance ab on ab.account_id = e.id", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dfcd7b3c831ba58fc403e3890d0a7dea6eb08148"}, "originalPosition": 27}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "503425f1413cd80d4a1bbc8ec28bb6dbf877e696", "author": {"user": {"login": "Nana-EC", "name": null}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/503425f1413cd80d4a1bbc8ec28bb6dbf877e696", "committedDate": "2020-10-27T00:38:39Z", "message": "Reverted to dual queries but optimized query with early inner join before outer\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE4ODMxNzEz", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1181#pullrequestreview-518831713", "createdAt": "2020-10-28T16:05:08Z", "commit": {"oid": "503425f1413cd80d4a1bbc8ec28bb6dbf877e696"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE4ODMyMDMw", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1181#pullrequestreview-518832030", "createdAt": "2020-10-28T16:05:24Z", "commit": {"oid": "503425f1413cd80d4a1bbc8ec28bb6dbf877e696"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQxNjowNToyNFrOHpxwrw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQxNjoyMDowMFrOHpydEQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzU2ODk0Mw==", "bodyText": "per the offline discussion, e.fk_entity_type_id < ${utils.ENTITY_TYPE_FILE} intends to include only account and contract entities but it won't work because of the full outer join. This results in entities of other types, e.g., topic being included in the query output.\nshould also add entities of other types to integration tests", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1181#discussion_r513568943", "createdAt": "2020-10-28T16:05:24Z", "author": {"login": "xin-hedera"}, "path": "hedera-mirror-rest/accounts.js", "diffHunk": "@@ -81,11 +83,12 @@ const getAccountQuery = (extraWhereCondition, orderClause, order, query) => {\n            and ab.account_id = tb.account_id\n        ) as token_balances\n     from account_balance ab\n+    inner join (select max(consensus_timestamp) as time_stamp_max from account_balance) as abm on ab.consensus_timestamp = abm.time_stamp_max\n     full outer join t_entities e on (\n-      ab.account_id = e.id\n-      and e.fk_entity_type_id < ${utils.ENTITY_TYPE_FILE}\n+        ab.account_id = e.id\n+        and e.fk_entity_type_id < ${utils.ENTITY_TYPE_FILE}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "503425f1413cd80d4a1bbc8ec28bb6dbf877e696"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzU4MDMwNQ==", "bodyText": "should remove and e.fk_entity_type_id < ${utils.ENTITY_TYPE_FILE} after moving the same condition out of the full outer join into where clause\nline 115 needs the same update", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1181#discussion_r513580305", "createdAt": "2020-10-28T16:20:00Z", "author": {"login": "xin-hedera"}, "path": "hedera-mirror-rest/accounts.js", "diffHunk": "@@ -191,13 +192,9 @@ const getOneAccount = async (req, res) => {\n \n   // Because of the outer join on the 'account_balance ab' and 't_entities e' below, we\n   // need to look  for the given account.id in both account_balance and t_entities table and combine with an 'or'\n-  const entitySql = getAccountQuery(` and (\n-      (ab.account_id  =  ?)\n-      or (e.id = ?\n-          and e.fk_entity_type_id < ${utils.ENTITY_TYPE_FILE}\n-          )\n-       )`);\n-\n+  const entitySql = getAccountQuery(\n+    ` (ab.account_id = ? or (e.id = ? and e.fk_entity_type_id < ${utils.ENTITY_TYPE_FILE}))`", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "503425f1413cd80d4a1bbc8ec28bb6dbf877e696"}, "originalPosition": 62}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bc7b593414752d831e948b18eeb0a6029d479288", "author": {"user": {"login": "Nana-EC", "name": null}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/bc7b593414752d831e948b18eeb0a6029d479288", "committedDate": "2020-10-28T18:27:18Z", "message": "Modified entities table used by outer join to use only accounts and contracts\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE4OTc4NDMw", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1181#pullrequestreview-518978430", "createdAt": "2020-10-28T18:41:46Z", "commit": {"oid": "bc7b593414752d831e948b18eeb0a6029d479288"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3462, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}