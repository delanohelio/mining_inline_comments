{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkxOTQ5Nzgw", "number": 615, "title": "Support REST API retrieval of topic message by topic id and sequence", "bodyText": "Detailed description:\nWe want to be able to retrieve an individual topic message via rest api using topic id and sequence num\nThis change add topic message support retrieval in a format that doesn't differ too much from current rest api endpoints.\n\nUpdates server.js by adding new '/api/v1/topic//message/' endpoint. Also supports plural form of resources\nAdds topicmessages.js to handle topic message request. Parses params, makes db call, and formats value for response.\nAdds V1.21__add_topicmessage_seqindex.sql to add an index for topicid, seq and realmnum\nUpdates integrationDomainOps.js to be able to insert topic entity and insert messages into topic_message table\nAdds integration test case topicmessage-04 to topicmessage-07\nFixes Invalid Transaction id in transactions\nAdds support for\n\nWhich issue(s) this PR fixes:\nFixes #614\nSpecial notes for your reviewer:\nChecklist\n\n Documentation added\n Tests updated", "createdAt": "2020-03-22T03:08:40Z", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/615", "merged": true, "mergeCommit": {"oid": "4fc914fd64534e2708e9d6f027008930c8e369b1"}, "closed": true, "closedAt": "2020-03-25T17:38:41Z", "author": {"login": "Nana-EC"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcQAu6tgH2gAyMzkxOTQ5NzgwOjZkMWNkZGI1NWJhNjlhZjRmZjYwMmIzZjc2MGE4OTU1YTViNjJkZjA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcRJfxxgFqTM4MTI4MDk3Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "6d1cddb55ba69af4ff602b3f760a8955a5b62df0", "author": {"user": {"login": "Nana-EC", "name": null}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/6d1cddb55ba69af4ff602b3f760a8955a5b62df0", "committedDate": "2020-03-22T03:00:07Z", "message": "Initial changes for rest api to suppost topic message retrieval by topic and seqnum\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6dd65c9bff284e7bddc050f9565c78a766720c39", "author": {"user": {"login": "Nana-EC", "name": null}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/6dd65c9bff284e7bddc050f9565c78a766720c39", "committedDate": "2020-03-23T17:21:02Z", "message": "Merge w master to get PR 613 changes\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "325fed88efc3cc3899ea160f965d133833ce5750", "author": {"user": {"login": "Nana-EC", "name": null}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/325fed88efc3cc3899ea160f965d133833ce5750", "committedDate": "2020-03-23T22:22:02Z", "message": "Cleaned up merge code and response format. Also added spec tests\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2604652ce0ecefde49a25fb24248ce146952cb73", "author": {"user": {"login": "Nana-EC", "name": null}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/2604652ce0ecefde49a25fb24248ce146952cb73", "committedDate": "2020-03-23T22:49:43Z", "message": "Added topic message tests and corrected transaction-id error message\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b04275014a11641795839c6abbfa4f0ee42bc3b5", "author": {"user": {"login": "Nana-EC", "name": null}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/b04275014a11641795839c6abbfa4f0ee42bc3b5", "committedDate": "2020-03-24T14:48:46Z", "message": "Remove next link logic\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgwNDg1NDc1", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/615#pullrequestreview-380485475", "createdAt": "2020-03-24T16:29:02Z", "commit": {"oid": "b04275014a11641795839c6abbfa4f0ee42bc3b5"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQxNjoyOTowMlrOF64t-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQxNzo1MDo1OVrOF68Rug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzI5MTAwMQ==", "bodyText": "This error response is different than normal in that it doesn't contain \"_status\". Is this waiting on the other PR to be merged before addressing?", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/615#discussion_r397291001", "createdAt": "2020-03-24T16:29:02Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-rest/__tests__/specs/topicmessage-06-idseq-invalid-path.spec.json", "diffHunk": "@@ -0,0 +1,22 @@\n+{\n+  \"description\": \"Topic messages for single message with invalid param values\",\n+  \"setup\": {\n+    \"accounts\": [],\n+    \"balances\": [],\n+    \"transactions\": [],\n+    \"cryptotransfers\": [],\n+    \"topicmessages\": []\n+  },\n+  \"url\": \"/api/v1/topic/0.0.-3/message/a\",\n+  \"responseStatus\": 400,\n+  \"responseJson\": {\n+    \"messages\": [", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b04275014a11641795839c6abbfa4f0ee42bc3b5"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzMwNDcwMQ==", "bodyText": "Would be better to not hardcode the error output and compare with the util method output", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/615#discussion_r397304701", "createdAt": "2020-03-24T16:46:58Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-rest/__tests__/topicmessage.test.js", "diffHunk": "@@ -0,0 +1,61 @@\n+/*-\n+ * \u200c\n+ * Hedera Mirror Node\n+ * \u200b\n+ * Copyright (C) 2019 - 2020 Hedera Hashgraph, LLC\n+ * \u200b\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ * \u200d\n+ */\n+'use strict';\n+\n+const topicmessage = require('../topicmessage.js');\n+\n+beforeAll(async () => {\n+  jest.setTimeout(1000);\n+});\n+\n+afterAll(() => {});\n+\n+const invalidTimestamp = 'Invalid parameter: consensusTimestamp';\n+\n+// Start of tests\n+describe('topicmessage validateConsensusTimestampParam tests', () => {\n+  test('Verify validateConsensusTimestampParam returns correct result for -1234567890.000000001', () => {\n+    verifyInvalidConsensusTimestamp(\n+      topicmessage.validateConsensusTimestampParam(-1234567890.000000001),\n+      invalidTimestamp\n+    );\n+  });\n+  test('Verify validateConsensusTimestampParam returns correct result for abc', () => {\n+    verifyInvalidConsensusTimestamp(topicmessage.validateConsensusTimestampParam('abc'), invalidTimestamp);\n+  });\n+  test('Verify validateConsensusTimestampParam returns correct result for 1234567890', () => {\n+    verifyValidConsensusTimestamp(topicmessage.validateConsensusTimestampParam(1234567890));\n+  });\n+  test('Verify validateConsensusTimestampParam returns correct result for 123.0001', () => {\n+    verifyValidConsensusTimestamp(topicmessage.validateConsensusTimestampParam(123.0001));\n+  });\n+});\n+\n+const verifyValidConsensusTimestamp = val => {\n+  expect(val).toStrictEqual({code: 200, contents: 'OK', isValid: true});\n+};\n+\n+const verifyInvalidConsensusTimestamp = (val, message) => {\n+  expect(val).toStrictEqual({\n+    code: 400,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b04275014a11641795839c6abbfa4f0ee42bc3b5"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzMwNTMyMg==", "bodyText": "Might be good idea to make the success response a static const object in util and use it everywhere", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/615#discussion_r397305322", "createdAt": "2020-03-24T16:47:44Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-rest/__tests__/topicmessage.test.js", "diffHunk": "@@ -0,0 +1,61 @@\n+/*-\n+ * \u200c\n+ * Hedera Mirror Node\n+ * \u200b\n+ * Copyright (C) 2019 - 2020 Hedera Hashgraph, LLC\n+ * \u200b\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ * \u200d\n+ */\n+'use strict';\n+\n+const topicmessage = require('../topicmessage.js');\n+\n+beforeAll(async () => {\n+  jest.setTimeout(1000);\n+});\n+\n+afterAll(() => {});\n+\n+const invalidTimestamp = 'Invalid parameter: consensusTimestamp';\n+\n+// Start of tests\n+describe('topicmessage validateConsensusTimestampParam tests', () => {\n+  test('Verify validateConsensusTimestampParam returns correct result for -1234567890.000000001', () => {\n+    verifyInvalidConsensusTimestamp(\n+      topicmessage.validateConsensusTimestampParam(-1234567890.000000001),\n+      invalidTimestamp\n+    );\n+  });\n+  test('Verify validateConsensusTimestampParam returns correct result for abc', () => {\n+    verifyInvalidConsensusTimestamp(topicmessage.validateConsensusTimestampParam('abc'), invalidTimestamp);\n+  });\n+  test('Verify validateConsensusTimestampParam returns correct result for 1234567890', () => {\n+    verifyValidConsensusTimestamp(topicmessage.validateConsensusTimestampParam(1234567890));\n+  });\n+  test('Verify validateConsensusTimestampParam returns correct result for 123.0001', () => {\n+    verifyValidConsensusTimestamp(topicmessage.validateConsensusTimestampParam(123.0001));\n+  });\n+});\n+\n+const verifyValidConsensusTimestamp = val => {\n+  expect(val).toStrictEqual({code: 200, contents: 'OK', isValid: true});", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b04275014a11641795839c6abbfa4f0ee42bc3b5"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzM0MzgyMg==", "bodyText": "This index takes 28m to execute on testnet data. 50m with concurrently using psql. Have you tried with concurrently via flyway in dev? Should we write a java migration that does this asynchronously? Or should we just plan for 30m of downtime if management approves?", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/615#discussion_r397343822", "createdAt": "2020-03-24T17:42:37Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-importer/src/main/resources/db/migration/V1.21__add_topicmessage_seqindex.sql", "diffHunk": "@@ -0,0 +1,6 @@\n+---\n+--- Add new topic_message indexes to enable initial rest api for individual topic messages\n+---\n+\n+create index if not exists topic_message__topic_num_realm_num_seqnum", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b04275014a11641795839c6abbfa4f0ee42bc3b5"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzM0NDg5MQ==", "bodyText": "Non-standard error response", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/615#discussion_r397344891", "createdAt": "2020-03-24T17:44:13Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-rest/__tests__/specs/topicmessage-07-idseq-not-found.spec.json", "diffHunk": "@@ -0,0 +1,26 @@\n+{\n+  \"description\": \"Topic messages for single message with non matching response\",\n+  \"setup\": {\n+    \"accounts\": [\n+      {\n+        \"entity_num\": 7,\n+        \"entity_type\": 4\n+      }\n+    ],\n+    \"balances\": [],\n+    \"transactions\": [],\n+    \"cryptotransfers\": [],\n+    \"topicmessages\": [\n+      {\n+        \"timestamp\": \"1234567890000000001\",\n+        \"topic_num\": 7,\n+        \"seq_num\": 1\n+      }\n+    ]\n+  },\n+  \"url\": \"/api/v1/topic/7/message/2\",\n+  \"responseStatus\": 404,\n+  \"responseJson\": {\n+    \"message\": \"hcs message not found\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b04275014a11641795839c6abbfa4f0ee42bc3b5"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzM0OTMwNg==", "bodyText": "A default would need to be added to application.yaml", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/615#discussion_r397349306", "createdAt": "2020-03-24T17:50:59Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-rest/server.js", "diffHunk": "@@ -97,7 +97,8 @@ for (const api of [\n   {name: 'transactions', ttl: config.api.ttl.transactions},\n   {name: 'balances', ttl: config.api.ttl.balances},\n   {name: 'accounts', ttl: config.api.ttl.accounts},\n-  {name: 'events', ttl: config.api.ttl.events}\n+  {name: 'events', ttl: config.api.ttl.events},\n+  {name: 'topicmessages', ttl: config.api.ttl.topicmessages}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b04275014a11641795839c6abbfa4f0ee42bc3b5"}, "originalPosition": 6}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgwNjE2MTMw", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/615#pullrequestreview-380616130", "createdAt": "2020-03-24T19:06:41Z", "commit": {"oid": "b04275014a11641795839c6abbfa4f0ee42bc3b5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQxOTowNjo0MVrOF6_GAw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQxOTowNjo0MVrOF6_GAw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzM5NTQ1OQ==", "bodyText": "We should also probably make this a unique index?", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/615#discussion_r397395459", "createdAt": "2020-03-24T19:06:41Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-importer/src/main/resources/db/migration/V1.21__add_topicmessage_seqindex.sql", "diffHunk": "@@ -0,0 +1,6 @@\n+---\n+--- Add new topic_message indexes to enable initial rest api for individual topic messages\n+---\n+\n+create index if not exists topic_message__topic_num_realm_num_seqnum", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b04275014a11641795839c6abbfa4f0ee42bc3b5"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fe49f71b81b33dba6043892161ed47c2ba462b6d", "author": {"user": {"login": "Nana-EC", "name": null}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/fe49f71b81b33dba6043892161ed47c2ba462b6d", "committedDate": "2020-03-24T19:26:01Z", "message": "Merge w rest integration coverage increase from master\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e06984ae52853ae0abc782bf1a3eb66f83c87110", "author": {"user": {"login": "Nana-EC", "name": null}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/e06984ae52853ae0abc782bf1a3eb66f83c87110", "committedDate": "2020-03-24T22:34:09Z", "message": "Standardized error format and moved some code to utils. Also added more tests\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c5a9777a61aa7e3de2abfac4bb313c5723d01fa0", "author": {"user": {"login": "Nana-EC", "name": null}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/c5a9777a61aa7e3de2abfac4bb313c5723d01fa0", "committedDate": "2020-03-24T22:54:28Z", "message": "Made index unique and centralized mroe test logic\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a8ee3deaef505fd1b7fb74c26a6f101ba5411423", "author": {"user": {"login": "Nana-EC", "name": null}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/a8ee3deaef505fd1b7fb74c26a6f101ba5411423", "committedDate": "2020-03-24T23:52:49Z", "message": "Removed duplicate message test as it's n/a with new index\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgwODExNDM2", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/615#pullrequestreview-380811436", "createdAt": "2020-03-25T01:52:21Z", "commit": {"oid": "a8ee3deaef505fd1b7fb74c26a6f101ba5411423"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwMTo1MjoyMVrOF7JcaA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwMTo1MjoyMVrOF7JcaA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzU2NTAzMg==", "bodyText": "Please don't remove this. It's not testing uniqueness of db data, but of disparate service layers potentially returning dupes and checking if service filters them out.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/615#discussion_r397565032", "createdAt": "2020-03-25T01:52:21Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-grpc/src/test/java/com/hedera/mirror/grpc/service/TopicMessageServiceTest.java", "diffHunk": "@@ -480,32 +480,6 @@ void bothMessagesWithRealmNum() {\n                 .verify(Duration.ofMillis(500));\n     }\n \n-    @Test\n-    void duplicateMessages() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a8ee3deaef505fd1b7fb74c26a6f101ba5411423"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgxMjgwOTcy", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/615#pullrequestreview-381280972", "createdAt": "2020-03-25T15:46:39Z", "commit": {"oid": "a8ee3deaef505fd1b7fb74c26a6f101ba5411423"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3350, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}