{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMwNjI0MDQ1", "number": 1304, "reviewThreads": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQyMzowNTozNlrOE_YD_Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQwNDowNjoyOVrOE_cScg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0ODg5OTgxOnYy", "diffSide": "RIGHT", "path": "hedera-mirror-datagenerator/src/main/java/com/hedera/datagenerator/sdk/supplier/account/AccountUpdateTransactionSupplier.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQyMzowNTozNlrOH9Dd9g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQwMDoxODoxNVrOH9FJyw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzc4MjAwNg==", "bodyText": "I think you can remove the Required/Optional comments now and re-sort all the fields. It should be self documenting what's required from the validation annotations", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1304#discussion_r533782006", "createdAt": "2020-12-01T23:05:36Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-datagenerator/src/main/java/com/hedera/datagenerator/sdk/supplier/account/AccountUpdateTransactionSupplier.java", "diffHunk": "@@ -37,30 +38,28 @@\n import com.hedera.hashgraph.sdk.account.AccountUpdateTransaction;\n import com.hedera.hashgraph.sdk.crypto.ed25519.Ed25519PublicKey;\n \n-@Builder\n-@Value\n-@Log4j2\n+@Data\n public class AccountUpdateTransactionSupplier implements TransactionSupplier<AccountUpdateTransaction> {\n \n     private static final List<String> requiredFields = Arrays.asList(\"accountId\");\n \n     //Required", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d64f6be81c6fee5c183b31c6c693ea12fa0f0179"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzgwOTYxMQ==", "bodyText": "Removed and re-sorted", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1304#discussion_r533809611", "createdAt": "2020-12-02T00:18:15Z", "author": {"login": "ijungmann"}, "path": "hedera-mirror-datagenerator/src/main/java/com/hedera/datagenerator/sdk/supplier/account/AccountUpdateTransactionSupplier.java", "diffHunk": "@@ -37,30 +38,28 @@\n import com.hedera.hashgraph.sdk.account.AccountUpdateTransaction;\n import com.hedera.hashgraph.sdk.crypto.ed25519.Ed25519PublicKey;\n \n-@Builder\n-@Value\n-@Log4j2\n+@Data\n public class AccountUpdateTransactionSupplier implements TransactionSupplier<AccountUpdateTransaction> {\n \n     private static final List<String> requiredFields = Arrays.asList(\"accountId\");\n \n     //Required", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzc4MjAwNg=="}, "originalCommit": {"oid": "d64f6be81c6fee5c183b31c6c693ea12fa0f0179"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0ODkwODM5OnYy", "diffSide": "RIGHT", "path": "hedera-mirror-monitor/pom.xml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQyMzowODo1OFrOH9DjVA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQwMDowMzoyOFrOH9E16A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzc4MzM4MA==", "bodyText": "You shouldn't need this dependency, just the org.glassfish:javax.el.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1304#discussion_r533783380", "createdAt": "2020-12-01T23:08:58Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-monitor/pom.xml", "diffHunk": "@@ -82,6 +82,16 @@\n             <artifactId>commons-math3</artifactId>\n             <version>3.6.1</version>\n         </dependency>\n+        <dependency>\n+            <groupId>javax.el</groupId>\n+            <artifactId>javax.el-api</artifactId>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d64f6be81c6fee5c183b31c6c693ea12fa0f0179"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzgwNDUyMA==", "bodyText": "Removed", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1304#discussion_r533804520", "createdAt": "2020-12-02T00:03:28Z", "author": {"login": "ijungmann"}, "path": "hedera-mirror-monitor/pom.xml", "diffHunk": "@@ -82,6 +82,16 @@\n             <artifactId>commons-math3</artifactId>\n             <version>3.6.1</version>\n         </dependency>\n+        <dependency>\n+            <groupId>javax.el</groupId>\n+            <artifactId>javax.el-api</artifactId>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzc4MzM4MA=="}, "originalCommit": {"oid": "d64f6be81c6fee5c183b31c6c693ea12fa0f0179"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0ODkwODk1OnYy", "diffSide": "RIGHT", "path": "hedera-mirror-monitor/pom.xml", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQyMzowOTowOFrOH9DjrQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQwMDowMzo0NVrOH9E2Qw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzc4MzQ2OQ==", "bodyText": "Move to property", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1304#discussion_r533783469", "createdAt": "2020-12-01T23:09:08Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-monitor/pom.xml", "diffHunk": "@@ -82,6 +82,16 @@\n             <artifactId>commons-math3</artifactId>\n             <version>3.6.1</version>\n         </dependency>\n+        <dependency>\n+            <groupId>javax.el</groupId>\n+            <artifactId>javax.el-api</artifactId>\n+            <version>3.0.0</version>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.glassfish</groupId>\n+            <artifactId>javax.el</artifactId>\n+            <version>3.0.0</version>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d64f6be81c6fee5c183b31c6c693ea12fa0f0179"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzc4OTA4Mw==", "bodyText": "Should that stay in this pom, or move to the parent pom in case we want to add this elsewhere?", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1304#discussion_r533789083", "createdAt": "2020-12-01T23:21:50Z", "author": {"login": "ijungmann"}, "path": "hedera-mirror-monitor/pom.xml", "diffHunk": "@@ -82,6 +82,16 @@\n             <artifactId>commons-math3</artifactId>\n             <version>3.6.1</version>\n         </dependency>\n+        <dependency>\n+            <groupId>javax.el</groupId>\n+            <artifactId>javax.el-api</artifactId>\n+            <version>3.0.0</version>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.glassfish</groupId>\n+            <artifactId>javax.el</artifactId>\n+            <version>3.0.0</version>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzc4MzQ2OQ=="}, "originalCommit": {"oid": "d64f6be81c6fee5c183b31c6c693ea12fa0f0179"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzc5MDY3MQ==", "bodyText": "Only move things to parent pom when it impacts more than one pom.xml. So the property should stay in this file.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1304#discussion_r533790671", "createdAt": "2020-12-01T23:25:51Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-monitor/pom.xml", "diffHunk": "@@ -82,6 +82,16 @@\n             <artifactId>commons-math3</artifactId>\n             <version>3.6.1</version>\n         </dependency>\n+        <dependency>\n+            <groupId>javax.el</groupId>\n+            <artifactId>javax.el-api</artifactId>\n+            <version>3.0.0</version>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.glassfish</groupId>\n+            <artifactId>javax.el</artifactId>\n+            <version>3.0.0</version>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzc4MzQ2OQ=="}, "originalCommit": {"oid": "d64f6be81c6fee5c183b31c6c693ea12fa0f0179"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzgwNDYxMQ==", "bodyText": "Makes sense, moved it into a property now.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1304#discussion_r533804611", "createdAt": "2020-12-02T00:03:45Z", "author": {"login": "ijungmann"}, "path": "hedera-mirror-monitor/pom.xml", "diffHunk": "@@ -82,6 +82,16 @@\n             <artifactId>commons-math3</artifactId>\n             <version>3.6.1</version>\n         </dependency>\n+        <dependency>\n+            <groupId>javax.el</groupId>\n+            <artifactId>javax.el-api</artifactId>\n+            <version>3.0.0</version>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.glassfish</groupId>\n+            <artifactId>javax.el</artifactId>\n+            <version>3.0.0</version>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzc4MzQ2OQ=="}, "originalCommit": {"oid": "d64f6be81c6fee5c183b31c6c693ea12fa0f0179"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0ODkyMDM1OnYy", "diffSide": "RIGHT", "path": "hedera-mirror-datagenerator/src/main/java/com/hedera/datagenerator/sdk/supplier/account/AccountUpdateTransactionSupplier.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQyMzoxMzoyNFrOH9DqzA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQwMDo0Nzo0M1rOH9FyNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzc4NTI5Mg==", "bodyText": "Should remove this and the manual validation checks.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1304#discussion_r533785292", "createdAt": "2020-12-01T23:13:24Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-datagenerator/src/main/java/com/hedera/datagenerator/sdk/supplier/account/AccountUpdateTransactionSupplier.java", "diffHunk": "@@ -37,30 +38,28 @@\n import com.hedera.hashgraph.sdk.account.AccountUpdateTransaction;\n import com.hedera.hashgraph.sdk.crypto.ed25519.Ed25519PublicKey;\n \n-@Builder\n-@Value\n-@Log4j2\n+@Data\n public class AccountUpdateTransactionSupplier implements TransactionSupplier<AccountUpdateTransaction> {\n \n     private static final List<String> requiredFields = Arrays.asList(\"accountId\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d64f6be81c6fee5c183b31c6c693ea12fa0f0179"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzgwNjIyMg==", "bodyText": "Removed", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1304#discussion_r533806222", "createdAt": "2020-12-02T00:08:25Z", "author": {"login": "ijungmann"}, "path": "hedera-mirror-datagenerator/src/main/java/com/hedera/datagenerator/sdk/supplier/account/AccountUpdateTransactionSupplier.java", "diffHunk": "@@ -37,30 +38,28 @@\n import com.hedera.hashgraph.sdk.account.AccountUpdateTransaction;\n import com.hedera.hashgraph.sdk.crypto.ed25519.Ed25519PublicKey;\n \n-@Builder\n-@Value\n-@Log4j2\n+@Data\n public class AccountUpdateTransactionSupplier implements TransactionSupplier<AccountUpdateTransaction> {\n \n     private static final List<String> requiredFields = Arrays.asList(\"accountId\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzc4NTI5Mg=="}, "originalCommit": {"oid": "d64f6be81c6fee5c183b31c6c693ea12fa0f0179"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzgwODUxOA==", "bodyText": "Is the TransactionSupplierException in use anywhere now?", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1304#discussion_r533808518", "createdAt": "2020-12-02T00:14:58Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-datagenerator/src/main/java/com/hedera/datagenerator/sdk/supplier/account/AccountUpdateTransactionSupplier.java", "diffHunk": "@@ -37,30 +38,28 @@\n import com.hedera.hashgraph.sdk.account.AccountUpdateTransaction;\n import com.hedera.hashgraph.sdk.crypto.ed25519.Ed25519PublicKey;\n \n-@Builder\n-@Value\n-@Log4j2\n+@Data\n public class AccountUpdateTransactionSupplier implements TransactionSupplier<AccountUpdateTransaction> {\n \n     private static final List<String> requiredFields = Arrays.asList(\"accountId\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzc4NTI5Mg=="}, "originalCommit": {"oid": "d64f6be81c6fee5c183b31c6c693ea12fa0f0179"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzgxOTk1Nw==", "bodyText": "Nope, just removed it.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1304#discussion_r533819957", "createdAt": "2020-12-02T00:47:43Z", "author": {"login": "ijungmann"}, "path": "hedera-mirror-datagenerator/src/main/java/com/hedera/datagenerator/sdk/supplier/account/AccountUpdateTransactionSupplier.java", "diffHunk": "@@ -37,30 +38,28 @@\n import com.hedera.hashgraph.sdk.account.AccountUpdateTransaction;\n import com.hedera.hashgraph.sdk.crypto.ed25519.Ed25519PublicKey;\n \n-@Builder\n-@Value\n-@Log4j2\n+@Data\n public class AccountUpdateTransactionSupplier implements TransactionSupplier<AccountUpdateTransaction> {\n \n     private static final List<String> requiredFields = Arrays.asList(\"accountId\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzc4NTI5Mg=="}, "originalCommit": {"oid": "d64f6be81c6fee5c183b31c6c693ea12fa0f0179"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0ODkyMTYwOnYy", "diffSide": "RIGHT", "path": "hedera-mirror-datagenerator/src/main/java/com/hedera/datagenerator/sdk/supplier/account/AccountUpdateTransactionSupplier.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQyMzoxMzo1N1rOH9DrlQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQwMDowMzoxOVrOH9E1sQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzc4NTQ5Mw==", "bodyText": "nit: Would look more consistent if two newlines between all fields since the annotated fields already do so.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1304#discussion_r533785493", "createdAt": "2020-12-01T23:13:57Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-datagenerator/src/main/java/com/hedera/datagenerator/sdk/supplier/account/AccountUpdateTransactionSupplier.java", "diffHunk": "@@ -37,30 +38,28 @@\n import com.hedera.hashgraph.sdk.account.AccountUpdateTransaction;\n import com.hedera.hashgraph.sdk.crypto.ed25519.Ed25519PublicKey;\n \n-@Builder\n-@Value\n-@Log4j2\n+@Data\n public class AccountUpdateTransactionSupplier implements TransactionSupplier<AccountUpdateTransaction> {\n \n     private static final List<String> requiredFields = Arrays.asList(\"accountId\");\n \n     //Required\n-    private final String accountId;\n+    @NotBlank\n+    private String accountId;\n \n     //Optional\n-    @Builder.Default\n-    private final Duration autoRenewPeriod = Duration.ofSeconds(8000000);\n+    @NotNull\n+    private Duration autoRenewPeriod = Duration.ofSeconds(8000000);\n \n-    @Builder.Default\n-    private final Instant expirationTime = Instant.now().plus(120, ChronoUnit.DAYS);\n+    @NotNull\n+    private Instant expirationTime = Instant.now().plus(120, ChronoUnit.DAYS);\n \n-    @Builder.Default\n-    private final long maxTransactionFee = 1_000_000_000;\n-    private final String proxyAccountId;\n-    private final String publicKey;\n+    @Min(1)\n+    private long maxTransactionFee = 1_000_000_000;\n \n-    @Builder.Default\n-    private final boolean receiverSignatureRequired = false;\n+    private String proxyAccountId;\n+    private String publicKey;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d64f6be81c6fee5c183b31c6c693ea12fa0f0179"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzgwNDQ2NQ==", "bodyText": "Sure, two newlines everywhere now", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1304#discussion_r533804465", "createdAt": "2020-12-02T00:03:19Z", "author": {"login": "ijungmann"}, "path": "hedera-mirror-datagenerator/src/main/java/com/hedera/datagenerator/sdk/supplier/account/AccountUpdateTransactionSupplier.java", "diffHunk": "@@ -37,30 +38,28 @@\n import com.hedera.hashgraph.sdk.account.AccountUpdateTransaction;\n import com.hedera.hashgraph.sdk.crypto.ed25519.Ed25519PublicKey;\n \n-@Builder\n-@Value\n-@Log4j2\n+@Data\n public class AccountUpdateTransactionSupplier implements TransactionSupplier<AccountUpdateTransaction> {\n \n     private static final List<String> requiredFields = Arrays.asList(\"accountId\");\n \n     //Required\n-    private final String accountId;\n+    @NotBlank\n+    private String accountId;\n \n     //Optional\n-    @Builder.Default\n-    private final Duration autoRenewPeriod = Duration.ofSeconds(8000000);\n+    @NotNull\n+    private Duration autoRenewPeriod = Duration.ofSeconds(8000000);\n \n-    @Builder.Default\n-    private final Instant expirationTime = Instant.now().plus(120, ChronoUnit.DAYS);\n+    @NotNull\n+    private Instant expirationTime = Instant.now().plus(120, ChronoUnit.DAYS);\n \n-    @Builder.Default\n-    private final long maxTransactionFee = 1_000_000_000;\n-    private final String proxyAccountId;\n-    private final String publicKey;\n+    @Min(1)\n+    private long maxTransactionFee = 1_000_000_000;\n \n-    @Builder.Default\n-    private final boolean receiverSignatureRequired = false;\n+    private String proxyAccountId;\n+    private String publicKey;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzc4NTQ5Mw=="}, "originalCommit": {"oid": "d64f6be81c6fee5c183b31c6c693ea12fa0f0179"}, "originalPosition": 52}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0ODkyOTc3OnYy", "diffSide": "RIGHT", "path": "hedera-mirror-datagenerator/src/main/java/com/hedera/datagenerator/sdk/supplier/account/AccountUpdateTransactionSupplier.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQyMzoxNjoyNVrOH9Dw0A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQwMDo0NjozMlrOH9FwoQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzc4NjgzMg==", "bodyText": "Use @DurationMin/Max as well for this and other duration fields", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1304#discussion_r533786832", "createdAt": "2020-12-01T23:16:25Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-datagenerator/src/main/java/com/hedera/datagenerator/sdk/supplier/account/AccountUpdateTransactionSupplier.java", "diffHunk": "@@ -37,30 +38,28 @@\n import com.hedera.hashgraph.sdk.account.AccountUpdateTransaction;\n import com.hedera.hashgraph.sdk.crypto.ed25519.Ed25519PublicKey;\n \n-@Builder\n-@Value\n-@Log4j2\n+@Data\n public class AccountUpdateTransactionSupplier implements TransactionSupplier<AccountUpdateTransaction> {\n \n     private static final List<String> requiredFields = Arrays.asList(\"accountId\");\n \n     //Required\n-    private final String accountId;\n+    @NotBlank\n+    private String accountId;\n \n     //Optional\n-    @Builder.Default\n-    private final Duration autoRenewPeriod = Duration.ofSeconds(8000000);\n+    @NotNull\n+    private Duration autoRenewPeriod = Duration.ofSeconds(8000000);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "339bd92fa0d3e34d8c271a43aea6f5f2d1ca1f19"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzgxOTU1Mw==", "bodyText": "Added @DurationMin for all Durations, as well as @Future for all Instants", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1304#discussion_r533819553", "createdAt": "2020-12-02T00:46:32Z", "author": {"login": "ijungmann"}, "path": "hedera-mirror-datagenerator/src/main/java/com/hedera/datagenerator/sdk/supplier/account/AccountUpdateTransactionSupplier.java", "diffHunk": "@@ -37,30 +38,28 @@\n import com.hedera.hashgraph.sdk.account.AccountUpdateTransaction;\n import com.hedera.hashgraph.sdk.crypto.ed25519.Ed25519PublicKey;\n \n-@Builder\n-@Value\n-@Log4j2\n+@Data\n public class AccountUpdateTransactionSupplier implements TransactionSupplier<AccountUpdateTransaction> {\n \n     private static final List<String> requiredFields = Arrays.asList(\"accountId\");\n \n     //Required\n-    private final String accountId;\n+    @NotBlank\n+    private String accountId;\n \n     //Optional\n-    @Builder.Default\n-    private final Duration autoRenewPeriod = Duration.ofSeconds(8000000);\n+    @NotNull\n+    private Duration autoRenewPeriod = Duration.ofSeconds(8000000);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzc4NjgzMg=="}, "originalCommit": {"oid": "339bd92fa0d3e34d8c271a43aea6f5f2d1ca1f19"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0OTU4NTU5OnYy", "diffSide": "RIGHT", "path": "hedera-mirror-datagenerator/src/main/java/com/hedera/datagenerator/sdk/supplier/account/CryptoTransferTransactionSupplier.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQwNDowMzozMlrOH9Jlag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQwNDozNDoyNFrOH9KF5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzg4MjIxOA==", "bodyText": "Later, not part of this PR, we can consider creating a custom annotation and validator for these ID fields. Either that or use a wrapper object to validate.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1304#discussion_r533882218", "createdAt": "2020-12-02T04:03:32Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-datagenerator/src/main/java/com/hedera/datagenerator/sdk/supplier/account/CryptoTransferTransactionSupplier.java", "diffHunk": "@@ -20,45 +20,37 @@\n  * \u200d\n  */\n \n-import java.util.Arrays;\n-import java.util.List;\n-import lombok.Builder;\n-import lombok.Value;\n+import javax.validation.constraints.Min;\n+import javax.validation.constraints.NotBlank;\n+import lombok.Data;\n import org.apache.commons.lang3.StringUtils;\n \n import com.hedera.datagenerator.common.Utility;\n import com.hedera.datagenerator.sdk.supplier.TransactionSupplier;\n-import com.hedera.datagenerator.sdk.supplier.TransactionSupplierException;\n import com.hedera.hashgraph.sdk.account.AccountId;\n import com.hedera.hashgraph.sdk.account.TransferTransaction;\n import com.hedera.hashgraph.sdk.token.TokenId;\n \n-@Builder\n-@Value\n+@Data\n public class CryptoTransferTransactionSupplier implements TransactionSupplier<TransferTransaction> {\n \n-    private static final List<String> requiredFields = Arrays.asList(\"recipientAccountId\", \"senderAccountId\");\n+    @Min(1)\n+    private long amount = 1;\n \n-    //Required\n-    private final String recipientAccountId;\n-    private final String senderAccountId;\n+    @Min(1)\n+    private long maxTransactionFee = 1_000_000;\n \n-    //Optional\n-    @Builder.Default\n-    private final long amount = 1;\n+    @NotBlank\n+    private String recipientAccountId;\n \n-    @Builder.Default\n-    private final long maxTransactionFee = 1_000_000;\n+    @NotBlank\n+    private String senderAccountId;\n \n-    private final String tokenId;\n+    private String tokenId;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "80629c5bccceb1eed1a655abd3c9998a5c15966e"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzg5MDUzMw==", "bodyText": "I actually started looking into that and decided to hold off for now, I like the idea.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1304#discussion_r533890533", "createdAt": "2020-12-02T04:34:24Z", "author": {"login": "ijungmann"}, "path": "hedera-mirror-datagenerator/src/main/java/com/hedera/datagenerator/sdk/supplier/account/CryptoTransferTransactionSupplier.java", "diffHunk": "@@ -20,45 +20,37 @@\n  * \u200d\n  */\n \n-import java.util.Arrays;\n-import java.util.List;\n-import lombok.Builder;\n-import lombok.Value;\n+import javax.validation.constraints.Min;\n+import javax.validation.constraints.NotBlank;\n+import lombok.Data;\n import org.apache.commons.lang3.StringUtils;\n \n import com.hedera.datagenerator.common.Utility;\n import com.hedera.datagenerator.sdk.supplier.TransactionSupplier;\n-import com.hedera.datagenerator.sdk.supplier.TransactionSupplierException;\n import com.hedera.hashgraph.sdk.account.AccountId;\n import com.hedera.hashgraph.sdk.account.TransferTransaction;\n import com.hedera.hashgraph.sdk.token.TokenId;\n \n-@Builder\n-@Value\n+@Data\n public class CryptoTransferTransactionSupplier implements TransactionSupplier<TransferTransaction> {\n \n-    private static final List<String> requiredFields = Arrays.asList(\"recipientAccountId\", \"senderAccountId\");\n+    @Min(1)\n+    private long amount = 1;\n \n-    //Required\n-    private final String recipientAccountId;\n-    private final String senderAccountId;\n+    @Min(1)\n+    private long maxTransactionFee = 1_000_000;\n \n-    //Optional\n-    @Builder.Default\n-    private final long amount = 1;\n+    @NotBlank\n+    private String recipientAccountId;\n \n-    @Builder.Default\n-    private final long maxTransactionFee = 1_000_000;\n+    @NotBlank\n+    private String senderAccountId;\n \n-    private final String tokenId;\n+    private String tokenId;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzg4MjIxOA=="}, "originalCommit": {"oid": "80629c5bccceb1eed1a655abd3c9998a5c15966e"}, "originalPosition": 47}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0OTU4NzkyOnYy", "diffSide": "RIGHT", "path": "hedera-mirror-datagenerator/src/main/java/com/hedera/datagenerator/sdk/supplier/consensus/ConsensusUpdateTopicTransactionSupplier.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQwNDowNDozMlrOH9Jmrg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQwNDozNzozNlrOH9KJJw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzg4MjU0Mg==", "bodyText": "You need to keep @NotNull as @DurationMin still allows null.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1304#discussion_r533882542", "createdAt": "2020-12-02T04:04:32Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-datagenerator/src/main/java/com/hedera/datagenerator/sdk/supplier/consensus/ConsensusUpdateTopicTransactionSupplier.java", "diffHunk": "@@ -23,49 +23,41 @@\n import java.time.Duration;\n import java.time.Instant;\n import java.time.temporal.ChronoUnit;\n-import java.util.Arrays;\n-import java.util.List;\n-import lombok.Builder;\n-import lombok.Value;\n-import org.apache.commons.lang3.StringUtils;\n+import javax.validation.constraints.Future;\n+import javax.validation.constraints.Min;\n+import javax.validation.constraints.NotBlank;\n+import lombok.Data;\n+import org.hibernate.validator.constraints.time.DurationMin;\n \n import com.hedera.datagenerator.common.Utility;\n import com.hedera.datagenerator.sdk.supplier.TransactionSupplier;\n-import com.hedera.datagenerator.sdk.supplier.TransactionSupplierException;\n import com.hedera.hashgraph.sdk.account.AccountId;\n import com.hedera.hashgraph.sdk.consensus.ConsensusTopicId;\n import com.hedera.hashgraph.sdk.consensus.ConsensusTopicUpdateTransaction;\n import com.hedera.hashgraph.sdk.crypto.ed25519.Ed25519PublicKey;\n \n-@Builder\n-@Value\n+@Data\n public class ConsensusUpdateTopicTransactionSupplier implements TransactionSupplier<ConsensusTopicUpdateTransaction> {\n \n-    private static final List<String> requiredFields = Arrays.asList(\"topicId\");\n+    private String adminKey;\n \n-    //Required\n-    private final String topicId;\n+    private String autoRenewAccountId;\n \n-    //Optional\n-    private final String adminKey;\n-    private final String autoRenewAccountId;\n+    @DurationMin(seconds = 1)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "80629c5bccceb1eed1a655abd3c9998a5c15966e"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzg5MTM2Nw==", "bodyText": "Ah, did not see that, corrected now.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1304#discussion_r533891367", "createdAt": "2020-12-02T04:37:36Z", "author": {"login": "ijungmann"}, "path": "hedera-mirror-datagenerator/src/main/java/com/hedera/datagenerator/sdk/supplier/consensus/ConsensusUpdateTopicTransactionSupplier.java", "diffHunk": "@@ -23,49 +23,41 @@\n import java.time.Duration;\n import java.time.Instant;\n import java.time.temporal.ChronoUnit;\n-import java.util.Arrays;\n-import java.util.List;\n-import lombok.Builder;\n-import lombok.Value;\n-import org.apache.commons.lang3.StringUtils;\n+import javax.validation.constraints.Future;\n+import javax.validation.constraints.Min;\n+import javax.validation.constraints.NotBlank;\n+import lombok.Data;\n+import org.hibernate.validator.constraints.time.DurationMin;\n \n import com.hedera.datagenerator.common.Utility;\n import com.hedera.datagenerator.sdk.supplier.TransactionSupplier;\n-import com.hedera.datagenerator.sdk.supplier.TransactionSupplierException;\n import com.hedera.hashgraph.sdk.account.AccountId;\n import com.hedera.hashgraph.sdk.consensus.ConsensusTopicId;\n import com.hedera.hashgraph.sdk.consensus.ConsensusTopicUpdateTransaction;\n import com.hedera.hashgraph.sdk.crypto.ed25519.Ed25519PublicKey;\n \n-@Builder\n-@Value\n+@Data\n public class ConsensusUpdateTopicTransactionSupplier implements TransactionSupplier<ConsensusTopicUpdateTransaction> {\n \n-    private static final List<String> requiredFields = Arrays.asList(\"topicId\");\n+    private String adminKey;\n \n-    //Required\n-    private final String topicId;\n+    private String autoRenewAccountId;\n \n-    //Optional\n-    private final String adminKey;\n-    private final String autoRenewAccountId;\n+    @DurationMin(seconds = 1)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzg4MjU0Mg=="}, "originalCommit": {"oid": "80629c5bccceb1eed1a655abd3c9998a5c15966e"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0OTU5MjE4OnYy", "diffSide": "RIGHT", "path": "hedera-mirror-datagenerator/src/main/java/com/hedera/datagenerator/sdk/supplier/consensus/ConsensusUpdateTopicTransactionSupplier.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQwNDowNjoyOVrOH9Jo6g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQwNDozNzo0MlrOH9KJRA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzg4MzExNA==", "bodyText": "Same for @Future", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1304#discussion_r533883114", "createdAt": "2020-12-02T04:06:29Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-datagenerator/src/main/java/com/hedera/datagenerator/sdk/supplier/consensus/ConsensusUpdateTopicTransactionSupplier.java", "diffHunk": "@@ -23,49 +23,41 @@\n import java.time.Duration;\n import java.time.Instant;\n import java.time.temporal.ChronoUnit;\n-import java.util.Arrays;\n-import java.util.List;\n-import lombok.Builder;\n-import lombok.Value;\n-import org.apache.commons.lang3.StringUtils;\n+import javax.validation.constraints.Future;\n+import javax.validation.constraints.Min;\n+import javax.validation.constraints.NotBlank;\n+import lombok.Data;\n+import org.hibernate.validator.constraints.time.DurationMin;\n \n import com.hedera.datagenerator.common.Utility;\n import com.hedera.datagenerator.sdk.supplier.TransactionSupplier;\n-import com.hedera.datagenerator.sdk.supplier.TransactionSupplierException;\n import com.hedera.hashgraph.sdk.account.AccountId;\n import com.hedera.hashgraph.sdk.consensus.ConsensusTopicId;\n import com.hedera.hashgraph.sdk.consensus.ConsensusTopicUpdateTransaction;\n import com.hedera.hashgraph.sdk.crypto.ed25519.Ed25519PublicKey;\n \n-@Builder\n-@Value\n+@Data\n public class ConsensusUpdateTopicTransactionSupplier implements TransactionSupplier<ConsensusTopicUpdateTransaction> {\n \n-    private static final List<String> requiredFields = Arrays.asList(\"topicId\");\n+    private String adminKey;\n \n-    //Required\n-    private final String topicId;\n+    private String autoRenewAccountId;\n \n-    //Optional\n-    private final String adminKey;\n-    private final String autoRenewAccountId;\n+    @DurationMin(seconds = 1)\n+    private Duration autoRenewPeriod = Duration.ofSeconds(8000000);\n \n-    @Builder.Default\n-    private final Duration autoRenewPeriod = Duration.ofSeconds(8000000);\n+    @Future", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "80629c5bccceb1eed1a655abd3c9998a5c15966e"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzg5MTM5Ng==", "bodyText": "Corrected", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1304#discussion_r533891396", "createdAt": "2020-12-02T04:37:42Z", "author": {"login": "ijungmann"}, "path": "hedera-mirror-datagenerator/src/main/java/com/hedera/datagenerator/sdk/supplier/consensus/ConsensusUpdateTopicTransactionSupplier.java", "diffHunk": "@@ -23,49 +23,41 @@\n import java.time.Duration;\n import java.time.Instant;\n import java.time.temporal.ChronoUnit;\n-import java.util.Arrays;\n-import java.util.List;\n-import lombok.Builder;\n-import lombok.Value;\n-import org.apache.commons.lang3.StringUtils;\n+import javax.validation.constraints.Future;\n+import javax.validation.constraints.Min;\n+import javax.validation.constraints.NotBlank;\n+import lombok.Data;\n+import org.hibernate.validator.constraints.time.DurationMin;\n \n import com.hedera.datagenerator.common.Utility;\n import com.hedera.datagenerator.sdk.supplier.TransactionSupplier;\n-import com.hedera.datagenerator.sdk.supplier.TransactionSupplierException;\n import com.hedera.hashgraph.sdk.account.AccountId;\n import com.hedera.hashgraph.sdk.consensus.ConsensusTopicId;\n import com.hedera.hashgraph.sdk.consensus.ConsensusTopicUpdateTransaction;\n import com.hedera.hashgraph.sdk.crypto.ed25519.Ed25519PublicKey;\n \n-@Builder\n-@Value\n+@Data\n public class ConsensusUpdateTopicTransactionSupplier implements TransactionSupplier<ConsensusTopicUpdateTransaction> {\n \n-    private static final List<String> requiredFields = Arrays.asList(\"topicId\");\n+    private String adminKey;\n \n-    //Required\n-    private final String topicId;\n+    private String autoRenewAccountId;\n \n-    //Optional\n-    private final String adminKey;\n-    private final String autoRenewAccountId;\n+    @DurationMin(seconds = 1)\n+    private Duration autoRenewPeriod = Duration.ofSeconds(8000000);\n \n-    @Builder.Default\n-    private final Duration autoRenewPeriod = Duration.ofSeconds(8000000);\n+    @Future", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzg4MzExNA=="}, "originalCommit": {"oid": "80629c5bccceb1eed1a655abd3c9998a5c15966e"}, "originalPosition": 43}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1288, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}