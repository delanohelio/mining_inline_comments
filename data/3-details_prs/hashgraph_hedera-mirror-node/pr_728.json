{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDExODMwOTMw", "number": 728, "title": "Homogenize integration test setup", "bodyText": "Detailed description:\n\nAdds @ConditionalOnRecordParser. RecordFileParser bean and downstream beans are instantiated based on it. Add test to avoid regression in bean setup.\nReplaces EntityEnabledCondition and PubSubEnabledCondition with @ConditionOnEntityRecordParser and @ConditionalOnPubSubRecordParser.\nUses @ConditionalOn*RecordParser to instantiate corresponding RecordItemListeners and downstream beans\nAdds barebone PubSubIntegrationTest and TestPubSubConfiguration classes to show how everything fits\nMove cache cleaning logic to ResetCacheTestExecutionListener.\nConvert RecordFileParserTest to unit test by mocking ApplicationStatusRepository\nMake ITs homogeneous. Some were @Transactional, however most were not. Make them all non @Transactional.\nAddress remaining items from #686\n\nWhich issue(s) this PR fixes:\nPart of #705\nSpecial notes for your reviewer:\nChecklist\n\n Documentation added\n Tests updated", "createdAt": "2020-04-30T20:56:01Z", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/728", "merged": true, "mergeCommit": {"oid": "47798df2c8db7b1c4189c0e396b5a90049a420f3"}, "closed": true, "closedAt": "2020-05-01T10:05:20Z", "author": {"login": "apeksharma"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcczkDbABqjMyOTEzMjkwNzM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcc3dNtgFqTQwMzk4MDIzMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e9dbd486046d3c475d3f521a4a804d104872b212", "author": {"user": {"login": "apeksharma", "name": "Apekshit Sharma"}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/e9dbd486046d3c475d3f521a4a804d104872b212", "committedDate": "2020-04-30T20:51:53Z", "message": "Homogenize integration test setup\n\nAdds @ConditionalOnRecordParser. RecordFileParser bean (and downstream beans) are instantiated based on it. Add test to avoid regression in bean setup.\nReplaces EntityEnabledCondition and PubSubEnabledCondition with @ConditionOnEntityRecordParser and @ConditionalOnPubSubRecordParser.\nUses @ConditionalOn*RecordParser to instantiate corresponding RecordItemListeners and downstream beans\nMove cache cleaning logic to ResetCacheTestExecutionListener.\nMake RecordFileParserTest unit test by mocking ApplicationStatusRepository\nAdds barebone PubSubIntegrationTest and TestPubSubConfiguration classes to show how everything fits\nMake tests homogeneous. Some were @Transactional, however most were not. Make them all non @Transactional."}, "afterCommit": {"oid": "6af9ac45b65002d64b669e0965468aad9c4363d4", "author": {"user": {"login": "apeksharma", "name": "Apekshit Sharma"}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/6af9ac45b65002d64b669e0965468aad9c4363d4", "committedDate": "2020-04-30T21:00:20Z", "message": "Homogenize integration test setup\n\nAdds @ConditionalOnRecordParser. RecordFileParser bean (and downstream beans) are instantiated based on it. Add test to avoid regression in bean setup.\nReplaces EntityEnabledCondition and PubSubEnabledCondition with @ConditionOnEntityRecordParser and @ConditionalOnPubSubRecordParser.\nUses @ConditionalOn*RecordParser to instantiate corresponding RecordItemListeners and downstream beans\nMove cache cleaning logic to ResetCacheTestExecutionListener.\nMake RecordFileParserTest unit test by mocking ApplicationStatusRepository\nAdds barebone PubSubIntegrationTest and TestPubSubConfiguration classes to show how everything fits\nMake tests homogeneous. Some were @Transactional, however most were not. Make them all non @Transactional.\n\nSigned-off-by: Apekshit Sharma <apekshit.sharma@hedera.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6af9ac45b65002d64b669e0965468aad9c4363d4", "author": {"user": {"login": "apeksharma", "name": "Apekshit Sharma"}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/6af9ac45b65002d64b669e0965468aad9c4363d4", "committedDate": "2020-04-30T21:00:20Z", "message": "Homogenize integration test setup\n\nAdds @ConditionalOnRecordParser. RecordFileParser bean (and downstream beans) are instantiated based on it. Add test to avoid regression in bean setup.\nReplaces EntityEnabledCondition and PubSubEnabledCondition with @ConditionOnEntityRecordParser and @ConditionalOnPubSubRecordParser.\nUses @ConditionalOn*RecordParser to instantiate corresponding RecordItemListeners and downstream beans\nMove cache cleaning logic to ResetCacheTestExecutionListener.\nMake RecordFileParserTest unit test by mocking ApplicationStatusRepository\nAdds barebone PubSubIntegrationTest and TestPubSubConfiguration classes to show how everything fits\nMake tests homogeneous. Some were @Transactional, however most were not. Make them all non @Transactional.\n\nSigned-off-by: Apekshit Sharma <apekshit.sharma@hedera.com>"}, "afterCommit": {"oid": "373e7ccff83619c0f763019e279048f505b3f49e", "author": {"user": {"login": "apeksharma", "name": "Apekshit Sharma"}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/373e7ccff83619c0f763019e279048f505b3f49e", "committedDate": "2020-04-30T21:02:55Z", "message": "Homogenize integration test setup\n\nAdds @ConditionalOnRecordParser. RecordFileParser bean (and downstream beans) are instantiated based on it. Add test to avoid regression in bean setup.\nReplaces EntityEnabledCondition and PubSubEnabledCondition with @ConditionOnEntityRecordParser and @ConditionalOnPubSubRecordParser.\nUses @ConditionalOn*RecordParser to instantiate corresponding RecordItemListeners and downstream beans\nMove cache cleaning logic to ResetCacheTestExecutionListener.\nMake RecordFileParserTest unit test by mocking ApplicationStatusRepository\nAdds barebone PubSubIntegrationTest and TestPubSubConfiguration classes to show how everything fits\nMake tests homogeneous. Some were @Transactional, however most were not. Make them all non @Transactional.\n\nSigned-off-by: Apekshit Sharma <apekshit.sharma@hedera.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7d6bcc5e770fcee05d76d5df1fab76eea2c2a393", "author": {"user": {"login": "apeksharma", "name": "Apekshit Sharma"}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/7d6bcc5e770fcee05d76d5df1fab76eea2c2a393", "committedDate": "2020-04-30T21:08:28Z", "message": "Homogenize integration test setup\n\nAdds @ConditionalOnRecordParser. RecordFileParser bean (and downstream beans) are instantiated based on it. Add test to avoid regression in bean setup.\nReplaces EntityEnabledCondition and PubSubEnabledCondition with @ConditionOnEntityRecordParser and @ConditionalOnPubSubRecordParser.\nUses @ConditionalOn*RecordParser to instantiate corresponding RecordItemListeners and downstream beans\nMove cache cleaning logic to ResetCacheTestExecutionListener.\nMake RecordFileParserTest unit test by mocking ApplicationStatusRepository\nAdds barebone PubSubIntegrationTest and TestPubSubConfiguration classes to show how everything fits\nMake tests homogeneous. Some were @Transactional, however most were not. Make them all non @Transactional.\n\nSigned-off-by: Apekshit Sharma <apekshit.sharma@hedera.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "373e7ccff83619c0f763019e279048f505b3f49e", "author": {"user": {"login": "apeksharma", "name": "Apekshit Sharma"}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/373e7ccff83619c0f763019e279048f505b3f49e", "committedDate": "2020-04-30T21:02:55Z", "message": "Homogenize integration test setup\n\nAdds @ConditionalOnRecordParser. RecordFileParser bean (and downstream beans) are instantiated based on it. Add test to avoid regression in bean setup.\nReplaces EntityEnabledCondition and PubSubEnabledCondition with @ConditionOnEntityRecordParser and @ConditionalOnPubSubRecordParser.\nUses @ConditionalOn*RecordParser to instantiate corresponding RecordItemListeners and downstream beans\nMove cache cleaning logic to ResetCacheTestExecutionListener.\nMake RecordFileParserTest unit test by mocking ApplicationStatusRepository\nAdds barebone PubSubIntegrationTest and TestPubSubConfiguration classes to show how everything fits\nMake tests homogeneous. Some were @Transactional, however most were not. Make them all non @Transactional.\n\nSigned-off-by: Apekshit Sharma <apekshit.sharma@hedera.com>"}, "afterCommit": {"oid": "7d6bcc5e770fcee05d76d5df1fab76eea2c2a393", "author": {"user": {"login": "apeksharma", "name": "Apekshit Sharma"}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/7d6bcc5e770fcee05d76d5df1fab76eea2c2a393", "committedDate": "2020-04-30T21:08:28Z", "message": "Homogenize integration test setup\n\nAdds @ConditionalOnRecordParser. RecordFileParser bean (and downstream beans) are instantiated based on it. Add test to avoid regression in bean setup.\nReplaces EntityEnabledCondition and PubSubEnabledCondition with @ConditionOnEntityRecordParser and @ConditionalOnPubSubRecordParser.\nUses @ConditionalOn*RecordParser to instantiate corresponding RecordItemListeners and downstream beans\nMove cache cleaning logic to ResetCacheTestExecutionListener.\nMake RecordFileParserTest unit test by mocking ApplicationStatusRepository\nAdds barebone PubSubIntegrationTest and TestPubSubConfiguration classes to show how everything fits\nMake tests homogeneous. Some were @Transactional, however most were not. Make them all non @Transactional.\n\nSigned-off-by: Apekshit Sharma <apekshit.sharma@hedera.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAzOTIzODY3", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/728#pullrequestreview-403923867", "createdAt": "2020-04-30T22:35:31Z", "commit": {"oid": "7d6bcc5e770fcee05d76d5df1fab76eea2c2a393"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQyMjozNTozMVrOGO8ryQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQyMjozNTozMVrOGO8ryQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODMyNzQ5Nw==", "bodyText": "q: What happens when hedera.mirror.importer.parser.record.enabled is missing since ConditionalOnRecordParser has a match on missing?\nChecking in case removing this means parser ends up getting run anyway.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/728#discussion_r418327497", "createdAt": "2020-04-30T22:35:31Z", "author": {"login": "Nana-EC"}, "path": "hedera-mirror-importer/src/main/java/com/hedera/mirror/importer/parser/record/RecordFileParser.java", "diffHunk": "@@ -283,9 +285,6 @@ private void loadRecordFiles(List<String> fileNames) {\n     @Override\n     @Scheduled(fixedRateString = \"${hedera.mirror.importer.parser.record.frequency:500}\")\n     public void parse() {\n-        if (!parserProperties.isEnabled()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7d6bcc5e770fcee05d76d5df1fab76eea2c2a393"}, "originalPosition": 42}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAzOTgwMjMz", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/728#pullrequestreview-403980233", "createdAt": "2020-05-01T01:32:39Z", "commit": {"oid": "7d6bcc5e770fcee05d76d5df1fab76eea2c2a393"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3114, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}