{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQwOTU3NTg5", "number": 1364, "title": "TimescaleDB: Add psql to timescaledb migration scripts", "bodyText": "Detailed description:\nMirror node using existing v1 schema will need to migrate from a postgres db to a new timescaledb.\nWe should offer some scripts to help operators migrate with ease\n\nAdd a csvBackupTables.sql file that backs up v1 tables to separate csv files for future restore\nAdd a createHyperTables.sql file that updated the table schema differences and create Hyper table prior to restore\nAdd a csvRestoreTables.sql file that uses COPY to restore back files for each of the tables\nAdd a updateSchema.sql file that handles schema difference and runs after data migration to ensure data is in sync\nAdd a migration.config file that hold the config values for a script to run all the migration steps\nAdd a migration.sh main script that orchestrates the migration utilizing all the stages\nAdd a init_v2.sql file that may be used to initiate a timescale db node by creating the database and users with appropriate permissions\nRename init.sql to init_v1.sql\nUpdate the installation.md file with instruction on timescaledb setup\nUpdate the operations.md file with instructions on v1 to v2 migration procedure\nUpdate importer config with concept of importer user that differs from owner user\nUpdate helm chart to support deployment of timescaledb with new  custom schema\n\nWhich issue(s) this PR fixes:\nFixes #1309\nSpecial notes for your reviewer:\nVerified flow in\n\nlocal postgres docker instance to local timescaledb instance\n\nTo-do:\n\nGCP cloud sql to GKE - May need additional work to setup secrets, IAM access etc\n\nChecklist\n\n Documentation added\n Tests updated", "createdAt": "2020-12-16T07:29:57Z", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1364", "merged": true, "mergeCommit": {"oid": "7adb6e2c8964f72cc2e19c61c04ffd1bea4bc910"}, "closed": true, "closedAt": "2021-01-08T17:48:29Z", "author": {"login": "Nana-EC"}, "timelineItems": {"totalCount": 43, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdozPK2ABqjQxNDIxMjEyMzI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABduLzRzgFqTU2NDQyOTE1Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "23714ea370c689cfe52fc45d4ab30334e79781bf", "author": {"user": {"login": "Nana-EC", "name": null}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/23714ea370c689cfe52fc45d4ab30334e79781bf", "committedDate": "2020-12-22T23:28:44Z", "message": "Updated for super and owner users\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>"}, "afterCommit": {"oid": "4793003946e27a93c437713e0a99e48ded63e1f7", "author": {"user": {"login": "Nana-EC", "name": null}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/4793003946e27a93c437713e0a99e48ded63e1f7", "committedDate": "2020-12-22T23:35:22Z", "message": "Updated for super and owner users\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU5MzE5MzE4", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1364#pullrequestreview-559319318", "createdAt": "2020-12-28T22:14:22Z", "commit": {"oid": "07281b0582b9ee863a5acdf9c8ed95a83b56e5e0"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 19, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOFQyMjoxNDoyMlrOIMDAqA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOVQxNzoyNDo0OFrOIMURJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTUwMzE0NA==", "bodyText": "Would prefer the more explicit timescaledb", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1364#discussion_r549503144", "createdAt": "2020-12-28T22:14:22Z", "author": {"login": "steven-sheehy"}, "path": "docker-compose.yml", "diffHunk": "@@ -67,3 +67,17 @@ services:\n     tty: true\n     ports:\n       - 5551:5551\n+\n+  tsdb:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "07281b0582b9ee863a5acdf9c8ed95a83b56e5e0"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTUwMzI2Mw==", "bodyText": "I'd prefer not to add another top level file for such a purpose as the directory is already quite cluttered. The approach we use for monitor already should be sufficient for disabling timescaledb as well. Just set the replicas to 0.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1364#discussion_r549503263", "createdAt": "2020-12-28T22:14:59Z", "author": {"login": "steven-sheehy"}, "path": "docker-compose.override.yml", "diffHunk": "@@ -0,0 +1,4 @@\n+version: \"3.3\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "07281b0582b9ee863a5acdf9c8ed95a83b56e5e0"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTUwMzk3Mw==", "bodyText": "Should rename init.sql to init_v1.sql (and any place that references it) for clarity.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1364#discussion_r549503973", "createdAt": "2020-12-28T22:18:13Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-importer/src/main/resources/db/scripts/init_v2.sql", "diffHunk": "@@ -0,0 +1,63 @@\n+-- init the timescale db mirror node db", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "07281b0582b9ee863a5acdf9c8ed95a83b56e5e0"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTUwNDEwMQ==", "bodyText": "Why? Can't we use created_timestamp?", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1364#discussion_r549504101", "createdAt": "2020-12-28T22:18:52Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-importer/src/main/resources/db/migration/v2/V2.0.0__time_scale_init.sql", "diffHunk": "@@ -415,6 +415,7 @@ comment on table token is 'Token entities';\n --- token_account\n create table if not exists token_account\n (\n+    id                 serial,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "07281b0582b9ee863a5acdf9c8ed95a83b56e5e0"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTUwNTYzOA==", "bodyText": "Should use 5432 externally to avoid changing application config. To avoid port conflicts, instructions should specify disabling postgresql and enabling timescaledb. Instructions already mention how to run both by changing ports.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1364#discussion_r549505638", "createdAt": "2020-12-28T22:26:29Z", "author": {"login": "steven-sheehy"}, "path": "docker-compose.yml", "diffHunk": "@@ -67,3 +67,17 @@ services:\n     tty: true\n     ports:\n       - 5551:5551\n+\n+  tsdb:\n+    image: timescaledev/timescaledb-ha:pg12-ts2.0.0-rc3\n+    restart: unless-stopped\n+    stop_grace_period: 2m\n+    stop_signal: SIGTERM\n+    tty: true\n+    environment:\n+      POSTGRES_PASSWORD: mirror_node_pass\n+    volumes:\n+      - ./tsdb:/var/lib/postgresql/data\n+      - ./hedera-mirror-importer/src/main/resources/db/scripts/init_v2.sql/:/docker-entrypoint-initdb.d/init_v2.sql\n+    ports:\n+      - 6432:5432", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "07281b0582b9ee863a5acdf9c8ed95a83b56e5e0"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTUwNzUwMg==", "bodyText": "This line removal causes a rendering error", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1364#discussion_r549507502", "createdAt": "2020-12-28T22:36:05Z", "author": {"login": "steven-sheehy"}, "path": "docs/operations.md", "diffHunk": "@@ -224,5 +290,4 @@ available\n - `/swagger/ui` - Metrics dashboard\n - `/swagger/stats` - Aggregated statistics\n - `/swagger/metrics` - Prometheus formatted metrics\n-", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "07281b0582b9ee863a5acdf9c8ed95a83b56e5e0"}, "originalPosition": 77}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTUwODIxOA==", "bodyText": "This log mentions 'Old' but others mention 'Current' and variables are named OLD_*. Other logs should probably be updated to mention old to be consistent.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1364#discussion_r549508218", "createdAt": "2020-12-28T22:39:29Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-importer/src/main/resources/db/scripts/time-scale-migration/timeScaleDbMigration.sh", "diffHunk": "@@ -0,0 +1,87 @@\n+#!/usr/bin/env bash\n+echo \"BASH_VERSION: $BASH_VERSION\"\n+set -e\n+\n+. scripts/time-scale-migration/migration.config\n+\n+if [[ -z $OLD_DB_HOST ]]; then\n+    echo \"Current host name is not set. Please configure OLD_DB_HOST in migration.config file and rerun './timeScaleDbMigration.sh'\"\n+    exit 1\n+fi\n+\n+if [[ -z $OLD_DB_NAME ]]; then\n+    echo \"Current db name is not set. Please configure OLD_DB_NAME in migration.config file and rerun './timeScaleDbMigration.sh'\"\n+    exit 1\n+fi\n+\n+if [[ -z $OLD_DB_PORT ]]; then\n+    echo \"Current port is not set. Please configure OLD_DB_PORT in migration.config file and rerun './timeScaleDbMigration.sh'\"\n+    exit 1\n+fi\n+\n+if [[ -z $OLD_DB_USER ]]; then\n+    echo \"Current db primary user name is not set. Please configure OLD_DB_USER in migration.config file and rerun './timeScaleDbMigration.sh'\"\n+    exit 1\n+fi\n+\n+if [[ -z $OLD_PASSWORD ]]; then\n+    echo \"Old db primary user password is not set. Please configure OLD_PASSWORD in migration.config file and rerun './timeScaleDbMigration.sh'\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "07281b0582b9ee863a5acdf9c8ed95a83b56e5e0"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTc2NDMyMQ==", "bodyText": "We should be consistent with how we name TimescaleDB. Timescale is the company and TimescaleDB is its product we are using. In some places we use dashes to separate words that should be together (time-scale), others capitalize the wrong letter (timeScaleDbMigration.sh, TimeScaleDB), shorten it to tsdb, and others we leave off the DB.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1364#discussion_r549764321", "createdAt": "2020-12-29T16:19:24Z", "author": {"login": "steven-sheehy"}, "path": "docs/operations.md", "diffHunk": "@@ -93,6 +93,72 @@ systemctl status hedera-mirror-importer.service\n sudo journalctl -fu hedera-mirror-importer.service\n ```\n \n+### v1 to v2 Data Migration\n+\n+To support time series logic the Mirror Node DB schema shifted from PostgeSQL (v1) to TimescaleDB (v2).\n+[Migrating from a Different PostgreSQL Database](https://docs.timescale.com/latest/getting-started/migrating-data#different-db) highlights the general recommended data migration steps when moving to TimescaleDB.\n+\n+For mirror node operators running v1 db schema, the following steps can be taken to upgrade to v2.\n+\n+1. Setup a new database container using TimeScale\n+\n+    To install using docker-compose, update the `docker-compose.override.yml` file to disable postgres instead of TimeScaleDB\n+\n+    ```yaml\n+    version: \"3.3\"\n+    services:\n+      db:\n+        entrypoint: [\"echo\", \"PostgreSQL db is disabled\"]\n+    ```\n+\n+    Start up the TimescaleDB service:\n+    ```shell script\n+    $ docker-compose up tsdb\n+    ```\n+\n+    Note: If the new db is running on the same server node as the original PostgeSQL db, then the port must be updated to something other than 5432.\n+    The `tsdb` port can be updated to a different port e.g. 6432 as follows:\n+    ```yaml\n+    ...\n+    services:\n+      ...\n+      tsdb:\n+        ports:\n+          - 6432:5432\n+    ```\n+\n+2. Create DB & Init Schema\n+\n+    The init script for v2 `hedera-mirror-importer/src/main/resources/db/scripts/init_v2.sql` may be used to create the database, users, schema, extensions and ensure all permissions are set.\n+    In the docker-compose case this file is already mounted under `/docker-entrypoint-initdb.d/` on the docker container and run on startup.\n+\n+    This may be run manually against the db node if not using docker-compose:\n+    ```shell script\n+    $ psql \"dbname=mirror_node host=localhost user=mirror_importer password=mirror_importer_pass port=6432\" -f hedera-mirror-importer/src/main/resources/db/scripts/init_v2.sql\n+    ```\n+\n+    > **_NOTE:_** The following steps assume the database, users and schema have been created as detailed above\n+\n+3. Configure migration properties\n+\n+    The configuration file `hedera-mirror-importer/src/main/resources/db/scripts/time-scale-migration/migration.config` contains db variables for easy running.\n+    These options include variables such as db names, passwords, users, hosts for both the existing db and the new db.\n+\n+    Update these values appropriately for your db setup.\n+\n+4. Run migration script\n+\n+    From the `hedera-mirror-importer/src/main/resources/db` directory run the `timeScaleDbMigration.sh` script\n+    ```shell script\n+    $ ./scripts/time-scale-migration/timeScaleDbMigration.sh\n+    ```\n+\n+   The script uses successive `psql` connections to backup, configure and restore data on the new database nodes.\n+   First it copies over the `flyway_schema_history` table, to maintain migration history.\n+   It then utilizes the migration sql script used by normal flyway operations to create the new tables and then creates the Timescale hyper tables based on these.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "07281b0582b9ee863a5acdf9c8ed95a83b56e5e0"}, "originalPosition": 66}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTc2OTc5MQ==", "bodyText": "We shouldn't tell users to use containers for their database or to recommend only Docker Compose. It's fine if they want to install binaries on a VM or use Timescale's SaaS, for example. We should simply say that they need to start a new TimescaleDB server and then point them to our separate docs to use it in Docker Compose or in Helm, or see TimescaleDB install docs for other options.\nSince we don't have a docker compose doc, we should move the steps to configure TimescaleDB vs PostgreSQL in Docker Compose to a new top level Database section with database specific sub-sections.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1364#discussion_r549769791", "createdAt": "2020-12-29T16:35:41Z", "author": {"login": "steven-sheehy"}, "path": "docs/operations.md", "diffHunk": "@@ -93,6 +93,72 @@ systemctl status hedera-mirror-importer.service\n sudo journalctl -fu hedera-mirror-importer.service\n ```\n \n+### v1 to v2 Data Migration\n+\n+To support time series logic the Mirror Node DB schema shifted from PostgeSQL (v1) to TimescaleDB (v2).\n+[Migrating from a Different PostgreSQL Database](https://docs.timescale.com/latest/getting-started/migrating-data#different-db) highlights the general recommended data migration steps when moving to TimescaleDB.\n+\n+For mirror node operators running v1 db schema, the following steps can be taken to upgrade to v2.\n+\n+1. Setup a new database container using TimeScale", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "07281b0582b9ee863a5acdf9c8ed95a83b56e5e0"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTc3MTkyNg==", "bodyText": "Why is this necessary if we use create extension if not exists?", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1364#discussion_r549771926", "createdAt": "2020-12-29T16:42:06Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-importer/src/main/resources/db/scripts/init_v2.sql", "diffHunk": "@@ -0,0 +1,63 @@\n+-- init the timescale db mirror node db\n+-- Change the values below if you are not installing via Docker\n+\n+\\set db_host 'localhost'\n+\\set db_port 6432\n+\\set db_name 'mirror_node'\n+\\set db_super_user 'postgres'\n+\\set db_owner 'mirror_node'\n+\\set owner_password 'mirror_node_pass'\n+\\set importer_user 'mirror_importer'\n+\\set importer_password 'mirror_importer_pass'\n+\\set grpc_user 'mirror_grpc'\n+\\set grpc_password 'mirror_grpc_pass'\n+\\set rest_user 'mirror_api'\n+\\set rest_password 'mirror_api_pass'\n+\\set schema_name 'mirrornode'\n+\n+-- create owner user\n+create user :db_owner with login createrole password :'owner_password';\n+\n+-- create primary user and db\n+create database :db_name with owner :db_owner;\n+\\c :db_name :db_owner\n+\n+-- create users\n+create user :importer_user with login password :'importer_password';\n+create role viewer;\n+create user :grpc_user with login password :'grpc_password' in role viewer;\n+create user :rest_user with login password :'rest_password' in role viewer;\n+\n+-- grant connect access to api users\n+grant connect on database :db_name to viewer;\n+\n+-- schema\n+create schema if not exists :schema_name authorization :db_owner;\n+grant usage on schema :schema_name to public;\n+\n+-- alter search path for given schema\n+alter user :db_owner set search_path = :schema_name, public;\n+alter user :importer_user set search_path = :schema_name, public;\n+alter user :grpc_user set search_path = :schema_name, public;\n+alter user :rest_user set search_path = :schema_name, public;\n+\n+-- grant select privileges on past and future tables and sequences to users\n+grant all privileges on all tables in schema :schema_name to :db_owner;\n+grant all privileges on all sequences in schema :schema_name to :db_owner;\n+grant select on all tables in schema :schema_name to :importer_user;\n+grant select on all tables in schema :schema_name to viewer;\n+grant select on all sequences in schema :schema_name to :importer_user;\n+grant select on all sequences in schema :schema_name to viewer;\n+alter default privileges in schema :schema_name grant select on tables to :importer_user;\n+alter default privileges in schema :schema_name grant select on tables to viewer;\n+alter default privileges in schema :schema_name grant select on sequences to :importer_user;\n+alter default privileges in schema :schema_name grant select on sequences to viewer;\n+\n+-- add extensions, ensuring they're available to new schema\n+-- drop extension if exists timescaledb;\n+\\c :db_name :db_super_user\n+drop extension if exists timescaledb;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "07281b0582b9ee863a5acdf9c8ed95a83b56e5e0"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTc3NDE4NQ==", "bodyText": "DB owner shouldn't have createrole permission. For security, would be better if super user created all users/roles.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1364#discussion_r549774185", "createdAt": "2020-12-29T16:49:24Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-importer/src/main/resources/db/scripts/init_v2.sql", "diffHunk": "@@ -0,0 +1,63 @@\n+-- init the timescale db mirror node db\n+-- Change the values below if you are not installing via Docker\n+\n+\\set db_host 'localhost'\n+\\set db_port 6432\n+\\set db_name 'mirror_node'\n+\\set db_super_user 'postgres'\n+\\set db_owner 'mirror_node'\n+\\set owner_password 'mirror_node_pass'\n+\\set importer_user 'mirror_importer'\n+\\set importer_password 'mirror_importer_pass'\n+\\set grpc_user 'mirror_grpc'\n+\\set grpc_password 'mirror_grpc_pass'\n+\\set rest_user 'mirror_api'\n+\\set rest_password 'mirror_api_pass'\n+\\set schema_name 'mirrornode'\n+\n+-- create owner user\n+create user :db_owner with login createrole password :'owner_password';", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "07281b0582b9ee863a5acdf9c8ed95a83b56e5e0"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTc3Njg3Ng==", "bodyText": "Are these two lines necessary? DB owner should own everything in the database including stuff in the new schema.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1364#discussion_r549776876", "createdAt": "2020-12-29T16:57:51Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-importer/src/main/resources/db/scripts/init_v2.sql", "diffHunk": "@@ -0,0 +1,63 @@\n+-- init the timescale db mirror node db\n+-- Change the values below if you are not installing via Docker\n+\n+\\set db_host 'localhost'\n+\\set db_port 6432\n+\\set db_name 'mirror_node'\n+\\set db_super_user 'postgres'\n+\\set db_owner 'mirror_node'\n+\\set owner_password 'mirror_node_pass'\n+\\set importer_user 'mirror_importer'\n+\\set importer_password 'mirror_importer_pass'\n+\\set grpc_user 'mirror_grpc'\n+\\set grpc_password 'mirror_grpc_pass'\n+\\set rest_user 'mirror_api'\n+\\set rest_password 'mirror_api_pass'\n+\\set schema_name 'mirrornode'\n+\n+-- create owner user\n+create user :db_owner with login createrole password :'owner_password';\n+\n+-- create primary user and db\n+create database :db_name with owner :db_owner;\n+\\c :db_name :db_owner\n+\n+-- create users\n+create user :importer_user with login password :'importer_password';\n+create role viewer;\n+create user :grpc_user with login password :'grpc_password' in role viewer;\n+create user :rest_user with login password :'rest_password' in role viewer;\n+\n+-- grant connect access to api users\n+grant connect on database :db_name to viewer;\n+\n+-- schema\n+create schema if not exists :schema_name authorization :db_owner;\n+grant usage on schema :schema_name to public;\n+\n+-- alter search path for given schema\n+alter user :db_owner set search_path = :schema_name, public;\n+alter user :importer_user set search_path = :schema_name, public;\n+alter user :grpc_user set search_path = :schema_name, public;\n+alter user :rest_user set search_path = :schema_name, public;\n+\n+-- grant select privileges on past and future tables and sequences to users\n+grant all privileges on all tables in schema :schema_name to :db_owner;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "07281b0582b9ee863a5acdf9c8ed95a83b56e5e0"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTc3NzI4Mw==", "bodyText": "For readability and future compatibility if we have more than one writeable user, perhaps we should create a readwrite role for importer to use? And rename viewer to readonly?\nWe can also probably create readwrite in role readonly so that it inherits read permissions and you only need to grant select/default privileges on the readonly role.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1364#discussion_r549777283", "createdAt": "2020-12-29T16:59:03Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-importer/src/main/resources/db/scripts/init_v2.sql", "diffHunk": "@@ -0,0 +1,63 @@\n+-- init the timescale db mirror node db\n+-- Change the values below if you are not installing via Docker\n+\n+\\set db_host 'localhost'\n+\\set db_port 6432\n+\\set db_name 'mirror_node'\n+\\set db_super_user 'postgres'\n+\\set db_owner 'mirror_node'\n+\\set owner_password 'mirror_node_pass'\n+\\set importer_user 'mirror_importer'\n+\\set importer_password 'mirror_importer_pass'\n+\\set grpc_user 'mirror_grpc'\n+\\set grpc_password 'mirror_grpc_pass'\n+\\set rest_user 'mirror_api'\n+\\set rest_password 'mirror_api_pass'\n+\\set schema_name 'mirrornode'\n+\n+-- create owner user\n+create user :db_owner with login createrole password :'owner_password';\n+\n+-- create primary user and db\n+create database :db_name with owner :db_owner;\n+\\c :db_name :db_owner\n+\n+-- create users\n+create user :importer_user with login password :'importer_password';\n+create role viewer;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "07281b0582b9ee863a5acdf9c8ed95a83b56e5e0"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTc3OTc4OA==", "bodyText": "I don't see how importer_user and viewer have any different permissions. It looks like to me they both can read/write. Has this been tested? I'm guessing the new schema inherited the default permissions of the public schema. You probably need to revoke permissions on the new schema first.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1364#discussion_r549779788", "createdAt": "2020-12-29T17:05:17Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-importer/src/main/resources/db/scripts/init_v2.sql", "diffHunk": "@@ -0,0 +1,63 @@\n+-- init the timescale db mirror node db\n+-- Change the values below if you are not installing via Docker\n+\n+\\set db_host 'localhost'\n+\\set db_port 6432\n+\\set db_name 'mirror_node'\n+\\set db_super_user 'postgres'\n+\\set db_owner 'mirror_node'\n+\\set owner_password 'mirror_node_pass'\n+\\set importer_user 'mirror_importer'\n+\\set importer_password 'mirror_importer_pass'\n+\\set grpc_user 'mirror_grpc'\n+\\set grpc_password 'mirror_grpc_pass'\n+\\set rest_user 'mirror_api'\n+\\set rest_password 'mirror_api_pass'\n+\\set schema_name 'mirrornode'\n+\n+-- create owner user\n+create user :db_owner with login createrole password :'owner_password';\n+\n+-- create primary user and db\n+create database :db_name with owner :db_owner;\n+\\c :db_name :db_owner\n+\n+-- create users\n+create user :importer_user with login password :'importer_password';\n+create role viewer;\n+create user :grpc_user with login password :'grpc_password' in role viewer;\n+create user :rest_user with login password :'rest_password' in role viewer;\n+\n+-- grant connect access to api users\n+grant connect on database :db_name to viewer;\n+\n+-- schema\n+create schema if not exists :schema_name authorization :db_owner;\n+grant usage on schema :schema_name to public;\n+\n+-- alter search path for given schema\n+alter user :db_owner set search_path = :schema_name, public;\n+alter user :importer_user set search_path = :schema_name, public;\n+alter user :grpc_user set search_path = :schema_name, public;\n+alter user :rest_user set search_path = :schema_name, public;\n+\n+-- grant select privileges on past and future tables and sequences to users\n+grant all privileges on all tables in schema :schema_name to :db_owner;\n+grant all privileges on all sequences in schema :schema_name to :db_owner;\n+grant select on all tables in schema :schema_name to :importer_user;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "07281b0582b9ee863a5acdf9c8ed95a83b56e5e0"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTc4MjgyMA==", "bodyText": "This file is a duplicate of V2.0.1__hyper_tables.sql. Why can't we simply invoke that?", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1364#discussion_r549782820", "createdAt": "2020-12-29T17:15:13Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-importer/src/main/resources/db/scripts/time-scale-migration/createHyperTables.sql", "diffHunk": "@@ -0,0 +1,89 @@\n+-------------------\n+-- Create hyper tables from v1 schema, inserts from old table, add indexes", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "07281b0582b9ee863a5acdf9c8ed95a83b56e5e0"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTc4MzI0OQ==", "bodyText": "Does it speed up things or help TimescaleDB if we order by primary key ascending?", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1364#discussion_r549783249", "createdAt": "2020-12-29T17:16:26Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-importer/src/main/resources/db/scripts/time-scale-migration/csvBackupTables.sql", "diffHunk": "@@ -0,0 +1,47 @@\n+-------------------\n+-- Backup tables use efficient COPY process to CSV's\n+-------------------\n+\n+\\copy (select * from account_balance) to account_balance.csv delimiter ',' csv;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "07281b0582b9ee863a5acdf9c8ed95a83b56e5e0"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTc4NDExMA==", "bodyText": "Why not simply add flyway_schema_history to backup/restore? I don't see why it needs to be treated special as Flyway is not running at any point during this migration.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1364#discussion_r549784110", "createdAt": "2020-12-29T17:19:03Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-importer/src/main/resources/db/scripts/time-scale-migration/timeScaleDbMigration.sh", "diffHunk": "@@ -0,0 +1,87 @@\n+#!/usr/bin/env bash\n+echo \"BASH_VERSION: $BASH_VERSION\"\n+set -e\n+\n+. scripts/time-scale-migration/migration.config\n+\n+if [[ -z $OLD_DB_HOST ]]; then\n+    echo \"Current host name is not set. Please configure OLD_DB_HOST in migration.config file and rerun './timeScaleDbMigration.sh'\"\n+    exit 1\n+fi\n+\n+if [[ -z $OLD_DB_NAME ]]; then\n+    echo \"Current db name is not set. Please configure OLD_DB_NAME in migration.config file and rerun './timeScaleDbMigration.sh'\"\n+    exit 1\n+fi\n+\n+if [[ -z $OLD_DB_PORT ]]; then\n+    echo \"Current port is not set. Please configure OLD_DB_PORT in migration.config file and rerun './timeScaleDbMigration.sh'\"\n+    exit 1\n+fi\n+\n+if [[ -z $OLD_DB_USER ]]; then\n+    echo \"Current db primary user name is not set. Please configure OLD_DB_USER in migration.config file and rerun './timeScaleDbMigration.sh'\"\n+    exit 1\n+fi\n+\n+if [[ -z $OLD_PASSWORD ]]; then\n+    echo \"Old db primary user password is not set. Please configure OLD_PASSWORD in migration.config file and rerun './timeScaleDbMigration.sh'\"\n+    exit 1\n+fi\n+\n+if [[ -z $NEW_DB_HOST ]]; then\n+    echo \"New host name is not set. Please configure NEW_DB_HOST in migration.config file and rerun './timeScaleDbMigration.sh'\"\n+    exit 1\n+fi\n+\n+if [[ -z $NEW_DB_NAME ]]; then\n+    echo \"New db name is not set. Please configure NEW_DB_NAME in migration.config file and rerun './timeScaleDbMigration.sh'\"\n+    exit 1\n+fi\n+\n+if [[ -z $NEW_DB_PORT ]]; then\n+    echo \"New db port is not set. Please configure NEW_DB_PORT in migration.config file and rerun './timeScaleDbMigration.sh'\"\n+    exit 1\n+fi\n+\n+if [[ -z $NEW_DB_USER ]]; then\n+    echo \"New db primary user name is not set. Please configure NEW_DB_USER in migration.config file and rerun './timeScaleDbMigration.sh'\"\n+    exit 1\n+fi\n+\n+if [[ -z $NEW_PASSWORD ]]; then\n+    echo \"New db primary user password is not set. Please configure NEW_PASSWORD in migration.config file and rerun './timeScaleDbMigration.sh'\"\n+    exit 1\n+fi\n+\n+start_time=\"$(date -u +%s)\"\n+# assumes 1. Valid populated current mirror node postgres db with appropriate user 2. New empty TimeScaleDb db host with appropriate user\n+echo \"Migrating Mirror Node Data from Postgres($OLD_DB_HOST:$OLD_DB_PORT) to TimeScaleDb($NEW_DB_HOST:$NEW_DB_PORT)...\"\n+\n+echo \"1. Backing up flyway table schema from Postgres($OLD_DB_HOST:$OLD_DB_PORT)...\"\n+PGPASSWORD=${OLD_PASSWORD} pg_dump -h $OLD_DB_HOST -p $OLD_DB_PORT -U $OLD_DB_USER --table public.flyway_schema_history -f mirror_node_${start_time}.bak mirror_node", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "07281b0582b9ee863a5acdf9c8ed95a83b56e5e0"}, "originalPosition": 62}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTc4NDQ1OQ==", "bodyText": "Should consider removing some of these sequences if possible in the future.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1364#discussion_r549784459", "createdAt": "2020-12-29T17:20:06Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-importer/src/main/resources/db/scripts/time-scale-migration/alterSchema.sql", "diffHunk": "@@ -0,0 +1,14 @@\n+-------------------\n+-- alter tables by removing domains\n+-- update to custom schema\n+-------------------\n+\n+\\set newSchema mirrornode\n+-- Update schema from public to custom schema e.g mirrornode\n+alter table flyway_schema_history\n+    set schema :newSchema;\n+\n+-- update sequence start values\n+select setval('address_book_entry_id_seq', (select max(id) from address_book_entry));\n+select setval('record_file_id_seq', (select max(id) from record_file));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "07281b0582b9ee863a5acdf9c8ed95a83b56e5e0"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTc4NTg5Mw==", "bodyText": "Seems a bit verbose and duplicates TimescaleDB. What about scripts/timescaledb/migrate.sh?", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1364#discussion_r549785893", "createdAt": "2020-12-29T17:24:48Z", "author": {"login": "steven-sheehy"}, "path": "docs/operations.md", "diffHunk": "@@ -93,6 +93,72 @@ systemctl status hedera-mirror-importer.service\n sudo journalctl -fu hedera-mirror-importer.service\n ```\n \n+### v1 to v2 Data Migration\n+\n+To support time series logic the Mirror Node DB schema shifted from PostgeSQL (v1) to TimescaleDB (v2).\n+[Migrating from a Different PostgreSQL Database](https://docs.timescale.com/latest/getting-started/migrating-data#different-db) highlights the general recommended data migration steps when moving to TimescaleDB.\n+\n+For mirror node operators running v1 db schema, the following steps can be taken to upgrade to v2.\n+\n+1. Setup a new database container using TimeScale\n+\n+    To install using docker-compose, update the `docker-compose.override.yml` file to disable postgres instead of TimeScaleDB\n+\n+    ```yaml\n+    version: \"3.3\"\n+    services:\n+      db:\n+        entrypoint: [\"echo\", \"PostgreSQL db is disabled\"]\n+    ```\n+\n+    Start up the TimescaleDB service:\n+    ```shell script\n+    $ docker-compose up tsdb\n+    ```\n+\n+    Note: If the new db is running on the same server node as the original PostgeSQL db, then the port must be updated to something other than 5432.\n+    The `tsdb` port can be updated to a different port e.g. 6432 as follows:\n+    ```yaml\n+    ...\n+    services:\n+      ...\n+      tsdb:\n+        ports:\n+          - 6432:5432\n+    ```\n+\n+2. Create DB & Init Schema\n+\n+    The init script for v2 `hedera-mirror-importer/src/main/resources/db/scripts/init_v2.sql` may be used to create the database, users, schema, extensions and ensure all permissions are set.\n+    In the docker-compose case this file is already mounted under `/docker-entrypoint-initdb.d/` on the docker container and run on startup.\n+\n+    This may be run manually against the db node if not using docker-compose:\n+    ```shell script\n+    $ psql \"dbname=mirror_node host=localhost user=mirror_importer password=mirror_importer_pass port=6432\" -f hedera-mirror-importer/src/main/resources/db/scripts/init_v2.sql\n+    ```\n+\n+    > **_NOTE:_** The following steps assume the database, users and schema have been created as detailed above\n+\n+3. Configure migration properties\n+\n+    The configuration file `hedera-mirror-importer/src/main/resources/db/scripts/time-scale-migration/migration.config` contains db variables for easy running.\n+    These options include variables such as db names, passwords, users, hosts for both the existing db and the new db.\n+\n+    Update these values appropriately for your db setup.\n+\n+4. Run migration script\n+\n+    From the `hedera-mirror-importer/src/main/resources/db` directory run the `timeScaleDbMigration.sh` script\n+    ```shell script\n+    $ ./scripts/time-scale-migration/timeScaleDbMigration.sh", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "07281b0582b9ee863a5acdf9c8ed95a83b56e5e0"}, "originalPosition": 61}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYxMjYwNDg5", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1364#pullrequestreview-561260489", "createdAt": "2021-01-04T18:53:35Z", "commit": {"oid": "07281b0582b9ee863a5acdf9c8ed95a83b56e5e0"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNFQxODo1MzozNVrOIN9BGA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNFQxODo1MzozNVrOIN9BGA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTUwMjEwNA==", "bodyText": "Does this not also need to be done for the importer_user?", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1364#discussion_r551502104", "createdAt": "2021-01-04T18:53:35Z", "author": {"login": "ijungmann"}, "path": "hedera-mirror-importer/src/main/resources/db/scripts/init_v2.sql", "diffHunk": "@@ -0,0 +1,63 @@\n+-- init the timescale db mirror node db\n+-- Change the values below if you are not installing via Docker\n+\n+\\set db_host 'localhost'\n+\\set db_port 6432\n+\\set db_name 'mirror_node'\n+\\set db_super_user 'postgres'\n+\\set db_owner 'mirror_node'\n+\\set owner_password 'mirror_node_pass'\n+\\set importer_user 'mirror_importer'\n+\\set importer_password 'mirror_importer_pass'\n+\\set grpc_user 'mirror_grpc'\n+\\set grpc_password 'mirror_grpc_pass'\n+\\set rest_user 'mirror_api'\n+\\set rest_password 'mirror_api_pass'\n+\\set schema_name 'mirrornode'\n+\n+-- create owner user\n+create user :db_owner with login createrole password :'owner_password';\n+\n+-- create primary user and db\n+create database :db_name with owner :db_owner;\n+\\c :db_name :db_owner\n+\n+-- create users\n+create user :importer_user with login password :'importer_password';\n+create role viewer;\n+create user :grpc_user with login password :'grpc_password' in role viewer;\n+create user :rest_user with login password :'rest_password' in role viewer;\n+\n+-- grant connect access to api users\n+grant connect on database :db_name to viewer;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "07281b0582b9ee863a5acdf9c8ed95a83b56e5e0"}, "originalPosition": 32}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7fe49cc83140270262b1bf8911b69116a1ada18b", "author": {"user": {"login": "Nana-EC", "name": null}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/7fe49cc83140270262b1bf8911b69116a1ada18b", "committedDate": "2021-01-04T22:44:50Z", "message": "Improved sed process\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>"}, "afterCommit": {"oid": "93450410dac36b0d805bfb446133d1b1881d167b", "author": {"user": {"login": "Nana-EC", "name": null}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/93450410dac36b0d805bfb446133d1b1881d167b", "committedDate": "2021-01-04T22:50:01Z", "message": "Improved sed process\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYxOTAxODAw", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1364#pullrequestreview-561901800", "createdAt": "2021-01-05T15:46:36Z", "commit": {"oid": "62bb893cb898bf0fd47d0d38868c0ddb5dfd9ea5"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQxNTo0NjozNlrOIOcYDw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQxNjozODoyMVrOIOeeTQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjAxNTg4Nw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  - ./hedera-mirror-importer/src/main/resources/db/scripts/init_v2.sql/:/docker-entrypoint-initdb.d/init_v2.sql\n          \n          \n            \n                  - ./hedera-mirror-importer/src/main/resources/db/scripts/init_v2.sql:/docker-entrypoint-initdb.d/init_v2.sql", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1364#discussion_r552015887", "createdAt": "2021-01-05T15:46:36Z", "author": {"login": "xin-hedera"}, "path": "docker-compose.yml", "diffHunk": "@@ -67,3 +67,19 @@ services:\n     tty: true\n     ports:\n       - 5551:5551\n+\n+  timescaledb:\n+    deploy:\n+      replicas: 0\n+    image: timescaledev/timescaledb-ha:pg12-ts2.0.0-rc3\n+    restart: unless-stopped\n+    stop_grace_period: 2m\n+    stop_signal: SIGTERM\n+    tty: true\n+    environment:\n+      POSTGRES_PASSWORD: mirror_node_pass\n+    volumes:\n+      - ./timescaledb:/var/lib/postgresql/data\n+      - ./hedera-mirror-importer/src/main/resources/db/scripts/init_v2.sql/:/docker-entrypoint-initdb.d/init_v2.sql", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "62bb893cb898bf0fd47d0d38868c0ddb5dfd9ea5"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjA0MTUxNQ==", "bodyText": "in v1.32.1, this index is dropped and and index on transaction (payer_account_id, consensus_ns) is created", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1364#discussion_r552041515", "createdAt": "2021-01-05T16:25:11Z", "author": {"login": "xin-hedera"}, "path": "hedera-mirror-importer/src/main/resources/db/migration/v2/V2.0.2__time_scale_index_init.sql", "diffHunk": "@@ -105,7 +91,9 @@ create unique index if not exists topic_message__topic_num_realm_num_seqnum\n -- have to add consensus_timestamp due to partitioning\n \n -- transaction\n-create index transaction__transaction_id\n+create index if not exists transaction__transaction_id\n     on transaction (valid_start_ns, payer_account_id);\n-create index transaction__payer_account_id\n+create index if not exists transaction__payer_account_id", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "62bb893cb898bf0fd47d0d38868c0ddb5dfd9ea5"}, "originalPosition": 64}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjA0NDAzNg==", "bodyText": "nit: prefer primary constraint before indexes", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1364#discussion_r552044036", "createdAt": "2021-01-05T16:28:56Z", "author": {"login": "xin-hedera"}, "path": "hedera-mirror-importer/src/main/resources/db/migration/v2/V2.0.2__time_scale_index_init.sql", "diffHunk": "@@ -20,13 +20,9 @@ create unique index if not exists account_balance_file__name\n alter table account_balance_file\n     add constraint account_balance_file_timestamp primary key (consensus_timestamp);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "62bb893cb898bf0fd47d0d38868c0ddb5dfd9ea5"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjA1MDI1Mw==", "bodyText": "in v1, token_id is the primary key, will changing it to an index in v2 drop the unique constraint?", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1364#discussion_r552050253", "createdAt": "2021-01-05T16:38:21Z", "author": {"login": "xin-hedera"}, "path": "hedera-mirror-importer/src/main/resources/db/migration/v2/V2.0.2__time_scale_index_init.sql", "diffHunk": "@@ -76,14 +66,10 @@ create unique index if not exists entities_unq\n -- have to add id due to partitioning\n \n -- token\n-alter table if exists token\n-    add constraint token_timestamp primary key (created_timestamp);\n create index if not exists token_id\n     on token (token_id);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "62bb893cb898bf0fd47d0d38868c0ddb5dfd9ea5"}, "originalPosition": 48}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYxOTY1ODU2", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1364#pullrequestreview-561965856", "createdAt": "2021-01-05T17:01:41Z", "commit": {"oid": "62bb893cb898bf0fd47d0d38868c0ddb5dfd9ea5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQxNzowMTo0MVrOIOfXEg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQxNzowMTo0MVrOIOfXEg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjA2NDc4Ng==", "bodyText": "there is a production release pushed yesterday: timescaledev/timescaledb-ha:pg12.5-ts2.0.0-p0", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1364#discussion_r552064786", "createdAt": "2021-01-05T17:01:41Z", "author": {"login": "xin-hedera"}, "path": "docker-compose.yml", "diffHunk": "@@ -67,3 +67,19 @@ services:\n     tty: true\n     ports:\n       - 5551:5551\n+\n+  timescaledb:\n+    deploy:\n+      replicas: 0\n+    image: timescaledev/timescaledb-ha:pg12-ts2.0.0-rc3", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "62bb893cb898bf0fd47d0d38868c0ddb5dfd9ea5"}, "originalPosition": 8}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYyMDAyMTE2", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1364#pullrequestreview-562002116", "createdAt": "2021-01-05T17:49:37Z", "commit": {"oid": "0742eadeff9377724f80ed3fe2f6bb4933f8596e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQxNzo0OTozN1rOIOhFUA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQxNzo0OTozN1rOIOhFUA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjA5MzAwOA==", "bodyText": "Using the non-HA image. To keep it DRY, please change it to use the templated helm image from the statefulset", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1364#discussion_r552093008", "createdAt": "2021-01-05T17:49:37Z", "author": {"login": "steven-sheehy"}, "path": "charts/hedera-mirror/templates/job-timescaledb-init.yaml", "diffHunk": "@@ -15,7 +15,7 @@ spec:\n     spec:\n       containers:\n         - name: init-mirrornode-db\n-          image: timescaledev/timescaledb-ha:pg12-ts2.0.0-rc3\n+          image: timescale/timescaledb:2.0.0-pg12", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0742eadeff9377724f80ed3fe2f6bb4933f8596e"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYyMDIwMDUy", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1364#pullrequestreview-562020052", "createdAt": "2021-01-05T18:14:44Z", "commit": {"oid": "0742eadeff9377724f80ed3fe2f6bb4933f8596e"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQxODoxNDo0NFrOIOh7sw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQxODoyODozMFrOIOiaJA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjEwNjkzMQ==", "bodyText": "5432?", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1364#discussion_r552106931", "createdAt": "2021-01-05T18:14:44Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-importer/src/main/resources/db/scripts/init_v2.sql", "diffHunk": "@@ -0,0 +1,68 @@\n+-- init the timescale db mirror node db\n+-- Change the values below if you are not installing via Docker\n+\n+\\set db_host 'localhost'\n+\\set db_port 6432", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0742eadeff9377724f80ed3fe2f6bb4933f8596e"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjExNDcyNA==", "bodyText": "I don't think the importer ever deletes rows, right?", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1364#discussion_r552114724", "createdAt": "2021-01-05T18:28:30Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-importer/src/main/resources/db/scripts/init_v2.sql", "diffHunk": "@@ -0,0 +1,68 @@\n+-- init the timescale db mirror node db\n+-- Change the values below if you are not installing via Docker\n+\n+\\set db_host 'localhost'\n+\\set db_port 6432\n+\\set db_name 'mirror_node'\n+\\set db_super_user 'postgres'\n+\\set db_owner 'mirror_node'\n+\\set owner_password 'mirror_node_pass'\n+\\set importer_user 'mirror_importer'\n+\\set importer_password 'mirror_importer_pass'\n+\\set grpc_user 'mirror_grpc'\n+\\set grpc_password 'mirror_grpc_pass'\n+\\set rest_user 'mirror_api'\n+\\set rest_password 'mirror_api_pass'\n+\\set schema_name 'mirrornode'\n+\n+-- create owner user\n+create user :db_owner with login password :'owner_password';\n+\n+-- create primary user and db\n+create database :db_name with owner :db_owner;\n+\n+-- create roles\n+create role readonly;\n+create role readwrite in role readonly;\n+\n+-- create users\n+create user :grpc_user with login password :'grpc_password' in role readonly;\n+create user :rest_user with login password :'rest_password' in role readonly;\n+create user :importer_user with login password :'importer_password' in role readwrite;\n+\n+-- connect with db owner to create schema and set schema user permissions\n+\\c :db_name :db_owner\n+create schema if not exists :schema_name authorization :db_owner;\n+grant usage on schema :schema_name to public;\n+\n+-- revoke default public permissions on schema\n+revoke create on schema :schema_name from public;\n+\n+-- grant connect and schema access to readonly role\n+grant connect on database :db_name to readonly;\n+grant usage on schema :schema_name to readonly;\n+\n+-- grant select privileges on tables to readonly\n+-- grant all privileges on all tables in schema :schema_name to :db_owner;\n+grant select on all tables in schema :schema_name to readonly;\n+alter default privileges in schema :schema_name grant select on tables to readonly;\n+\n+-- grant select privileges on sequences to readonly\n+-- grant all privileges on all sequences in schema :schema_name to :db_owner;\n+grant select on all sequences in schema :schema_name to readonly;\n+alter default privileges in schema :schema_name grant select on sequences to readonly;\n+\n+-- grant write privileges on sequences to readwrite\n+grant insert, update, delete on all tables in schema :schema_name to readwrite;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0742eadeff9377724f80ed3fe2f6bb4933f8596e"}, "originalPosition": 56}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYyMjE0Nzgw", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1364#pullrequestreview-562214780", "createdAt": "2021-01-05T23:39:50Z", "commit": {"oid": "9f28e9da19a1fd2f148dfc972866c1c95def42aa"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQyMzozOTo1MFrOIOrfCg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQyMzozOTo1MFrOIOrfCg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjI2MzQzNA==", "bodyText": "nit:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            In both cases the only setup required is to create the initial database, users, schema, extensions and ensure all\n          \n          \n            \n            In both cases the only setup required is to create the initial database, users, schema, and extensions, and ensure all", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1364#discussion_r552263434", "createdAt": "2021-01-05T23:39:50Z", "author": {"login": "ijungmann"}, "path": "docs/installation.md", "diffHunk": "@@ -19,16 +19,29 @@ runnable Mirror Node JAR file in the `target` directory.\n ## Running Locally\n \n ### Database Setup\n+In addition to OpenJDK 11, you will need to install a database and initialize it.\n+The Mirror Node utilizes [PostgreSQL](https://postgresql.org) v9.6 or [TimescaleDB](https://docs.timescale.com/latest/main) v2 depending on the version of its database schema.\n \n-In addition to OpenJDK 11, you will need to install [PostgreSQL](https://postgresql.org) 9.6 and initialize it. The only\n-setup required is to create the initial database and owner since [Flyway](https://flywaydb.org) manages the database\n-schema. The SQL script located at `hedera-mirror-importer/src/main/resources/db/scripts/init.sql` can be used to\n-accomplish this. Edit the file and change the `db_name`, `db_user`, `db_password` `db_owner`, `grpc_user`, or\n-`grpc_password` as appropriate. Make sure the application [configuration](configuration.md) matches the values in the\n-script. Run the script as a DB admin user and check the output carefully to ensure no errors occurred.\n+In both cases the only setup required is to create the initial database, users, schema, extensions and ensure all", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9f28e9da19a1fd2f148dfc972866c1c95def42aa"}, "originalPosition": 13}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYyMjE2Mjkz", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1364#pullrequestreview-562216293", "createdAt": "2021-01-05T23:43:17Z", "commit": {"oid": "9f28e9da19a1fd2f148dfc972866c1c95def42aa"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQyMzo0MzoxN1rOIOrjkg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQyMzo0MzoxN1rOIOrjkg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjI2NDU5NA==", "bodyText": "Should these still be commented out?", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1364#discussion_r552264594", "createdAt": "2021-01-05T23:43:17Z", "author": {"login": "ijungmann"}, "path": "docs/installation.md", "diffHunk": "@@ -95,14 +108,33 @@ Docker Compose scripts are provided and run all the mirror node components:\n Containers use the following persisted volumes:\n \n - `./db` on your local machine maps to `/var/lib/postgresql/data` in the containers. This contains the files for the\n-  PostgreSQL database. If the database container fails to initialise properly and the database fails to run, you will\n-  have to delete this folder prior to attempting a restart otherwise the database initialisation scripts will not be\n-  run.\n+  PostgreSQL/TimescaleDB database. If the database container fails to initialise properly and the database fails to run,\n+  you will have to delete this folder prior to attempting a restart otherwise the database initialisation scripts will\n+  not be run.\n \n - `./data` on your local machine maps to `/var/lib/hedera-mirror-importer` in the container. This contains files\n   downloaded from S3 or GCP. These are necessary not only for the database data to be persisted, but also so that the\n   parsing containers can access file obtained via the downloading containers\n \n+### Configuration\n+\n+#### TimescaleDB vs PostgreSQL\n+To utilize the TimescaleDB database over the default PostgreSQL database, disable the PostgreSQL container and enable the TimescaleDB container.\n+\n+To achieve this the `docker-compose.yml` can be updated as follows:\n+```yaml\n+    ...\n+    services:\n+      db:\n+        deploy:\n+          replicas: 0\n+      ...\n+      timescaledb:\n+        #    deploy:\n+        #      replicas: 0", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9f28e9da19a1fd2f148dfc972866c1c95def42aa"}, "originalPosition": 76}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYyMjE4NjU5", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1364#pullrequestreview-562218659", "createdAt": "2021-01-05T23:47:40Z", "commit": {"oid": "9f28e9da19a1fd2f148dfc972866c1c95def42aa"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQyMzo0Nzo0MFrOIOrqbg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQyMzo0Nzo0MFrOIOrqbg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjI2NjM1MA==", "bodyText": "nit:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            1. Setup a new TimescaleDB database\n          \n          \n            \n            1. Set up a new TimescaleDB database", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1364#discussion_r552266350", "createdAt": "2021-01-05T23:47:40Z", "author": {"login": "ijungmann"}, "path": "docs/operations.md", "diffHunk": "@@ -93,6 +93,49 @@ systemctl status hedera-mirror-importer.service\n sudo journalctl -fu hedera-mirror-importer.service\n ```\n \n+### v1 to v2 Data Migration\n+\n+To support time series logic the Mirror Node DB schema shifted from PostgeSQL (v1) to TimescaleDB (v2).\n+[Migrating from a Different PostgreSQL Database](https://docs.timescale.com/latest/getting-started/migrating-data#different-db) highlights the general recommended data migration steps when moving to TimescaleDB.\n+\n+For mirror node operators running v1 db schema, the following steps can be taken to upgrade to v2.\n+\n+1. Setup a new TimescaleDB database", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9f28e9da19a1fd2f148dfc972866c1c95def42aa"}, "originalPosition": 11}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYyMjE5NDYz", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1364#pullrequestreview-562219463", "createdAt": "2021-01-05T23:49:47Z", "commit": {"oid": "9f28e9da19a1fd2f148dfc972866c1c95def42aa"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQyMzo0OTo0N1rOIOryIw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQyMzo0OTo0N1rOIOryIw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjI2ODMyMw==", "bodyText": "nit:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n               The script uses successive `psql` connections to backup, configure and restore data on the new database nodes.\n          \n          \n            \n               The script uses successive `psql` connections to back up, configure and restore data on the new database nodes.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1364#discussion_r552268323", "createdAt": "2021-01-05T23:49:47Z", "author": {"login": "ijungmann"}, "path": "docs/operations.md", "diffHunk": "@@ -93,6 +93,49 @@ systemctl status hedera-mirror-importer.service\n sudo journalctl -fu hedera-mirror-importer.service\n ```\n \n+### v1 to v2 Data Migration\n+\n+To support time series logic the Mirror Node DB schema shifted from PostgeSQL (v1) to TimescaleDB (v2).\n+[Migrating from a Different PostgreSQL Database](https://docs.timescale.com/latest/getting-started/migrating-data#different-db) highlights the general recommended data migration steps when moving to TimescaleDB.\n+\n+For mirror node operators running v1 db schema, the following steps can be taken to upgrade to v2.\n+\n+1. Setup a new TimescaleDB database\n+\n+    A new TimescaleDB server must be spun up.\n+\n+    Refer to Mirror Node [DB Installation](installation.md#database-setup) for manual instructions.\n+\n+    To use the Mirror Node configured docker container, simply run:\n+\n+    ```shell script\n+    $ docker-compose up timescaledb\n+    ```\n+\n+    Refer to [TimescaleDB Installation Instructions](https://docs.timescale.com/latest/getting-started/installation) for other installation options.\n+\n+    > **_NOTE:_** The following steps assume the database, users and schema have been created as detailed above\n+\n+2. Configure migration properties\n+\n+    The configuration file `hedera-mirror-importer/src/main/resources/db/scripts/timescaledb/migration.config` contains db variables for easy running.\n+    These options include variables such as db names, passwords, users, hosts for both the existing db and the new db.\n+\n+    Update these values appropriately for your db setup.\n+\n+3. Run migration script\n+\n+    From the `hedera-mirror-importer/src/main/resources/db` directory run the `migration.sh` script\n+    ```shell script\n+    $ ./scripts/timescaledb/migration.sh\n+    ```\n+\n+   The script uses successive `psql` connections to backup, configure and restore data on the new database nodes.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9f28e9da19a1fd2f148dfc972866c1c95def42aa"}, "originalPosition": 41}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYyMjIwNzkw", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1364#pullrequestreview-562220790", "createdAt": "2021-01-05T23:53:40Z", "commit": {"oid": "9f28e9da19a1fd2f148dfc972866c1c95def42aa"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQyMzo1Mzo0MVrOIOr2ow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQyMzo1Mzo0MVrOIOr2ow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjI2OTQ3NQ==", "bodyText": "nit: I believe hypertable is always one word.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n               It then utilizes the migration sql script used by normal flyway operations to create the new tables and then creates the Timescale hyper tables based on these.\n          \n          \n            \n               It then utilizes the migration sql script used by normal flyway operations to create the new tables and then creates the Timescale hypertables based on these.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1364#discussion_r552269475", "createdAt": "2021-01-05T23:53:41Z", "author": {"login": "ijungmann"}, "path": "docs/operations.md", "diffHunk": "@@ -93,6 +93,49 @@ systemctl status hedera-mirror-importer.service\n sudo journalctl -fu hedera-mirror-importer.service\n ```\n \n+### v1 to v2 Data Migration\n+\n+To support time series logic the Mirror Node DB schema shifted from PostgeSQL (v1) to TimescaleDB (v2).\n+[Migrating from a Different PostgreSQL Database](https://docs.timescale.com/latest/getting-started/migrating-data#different-db) highlights the general recommended data migration steps when moving to TimescaleDB.\n+\n+For mirror node operators running v1 db schema, the following steps can be taken to upgrade to v2.\n+\n+1. Setup a new TimescaleDB database\n+\n+    A new TimescaleDB server must be spun up.\n+\n+    Refer to Mirror Node [DB Installation](installation.md#database-setup) for manual instructions.\n+\n+    To use the Mirror Node configured docker container, simply run:\n+\n+    ```shell script\n+    $ docker-compose up timescaledb\n+    ```\n+\n+    Refer to [TimescaleDB Installation Instructions](https://docs.timescale.com/latest/getting-started/installation) for other installation options.\n+\n+    > **_NOTE:_** The following steps assume the database, users and schema have been created as detailed above\n+\n+2. Configure migration properties\n+\n+    The configuration file `hedera-mirror-importer/src/main/resources/db/scripts/timescaledb/migration.config` contains db variables for easy running.\n+    These options include variables such as db names, passwords, users, hosts for both the existing db and the new db.\n+\n+    Update these values appropriately for your db setup.\n+\n+3. Run migration script\n+\n+    From the `hedera-mirror-importer/src/main/resources/db` directory run the `migration.sh` script\n+    ```shell script\n+    $ ./scripts/timescaledb/migration.sh\n+    ```\n+\n+   The script uses successive `psql` connections to backup, configure and restore data on the new database nodes.\n+   First it copies over the `flyway_schema_history` table, to maintain migration history.\n+   It then utilizes the migration sql script used by normal flyway operations to create the new tables and then creates the Timescale hyper tables based on these.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9f28e9da19a1fd2f148dfc972866c1c95def42aa"}, "originalPosition": 43}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYyMjIxOTIz", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1364#pullrequestreview-562221923", "createdAt": "2021-01-05T23:56:56Z", "commit": {"oid": "9f28e9da19a1fd2f148dfc972866c1c95def42aa"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQyMzo1Njo1NlrOIOr6uw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQyMzo1Njo1NlrOIOr6uw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjI3MDUyMw==", "bodyText": "nit:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            echo \"4. Creating new hyper tables on TimescaleDB($NEW_DB_HOST:$NEW_DB_PORT)...\"\n          \n          \n            \n            echo \"4. Creating new hypertables on TimescaleDB($NEW_DB_HOST:$NEW_DB_PORT)...\"", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1364#discussion_r552270523", "createdAt": "2021-01-05T23:56:56Z", "author": {"login": "ijungmann"}, "path": "hedera-mirror-importer/src/main/resources/db/scripts/timescaledb/migration.sh", "diffHunk": "@@ -0,0 +1,98 @@\n+#!/usr/bin/env bash\n+echo \"BASH_VERSION: $BASH_VERSION\"\n+set -e\n+\n+. scripts/timescaledb/migration.config\n+\n+if [[ -z $OLD_DB_HOST ]]; then\n+    echo \"Old host name is not set. Please configure OLD_DB_HOST in migration.config file and rerun './scripts/timescaledb/migration.sh'\"\n+    exit 1\n+fi\n+\n+if [[ -z $OLD_DB_NAME ]]; then\n+    echo \"Old db name is not set. Please configure OLD_DB_NAME in migration.config file and rerun './scripts/timescaledb/migration.sh'\"\n+    exit 1\n+fi\n+\n+if [[ -z $OLD_DB_PORT ]]; then\n+    echo \"Old port is not set. Please configure OLD_DB_PORT in migration.config file and rerun './scripts/timescaledb/migration.sh'\"\n+    exit 1\n+fi\n+\n+if [[ -z $OLD_DB_USER ]]; then\n+    echo \"Old db primary user name is not set. Please configure OLD_DB_USER in migration.config file and rerun './scripts/timescaledb/migration.sh'\"\n+    exit 1\n+fi\n+\n+if [[ -z $OLD_PASSWORD ]]; then\n+    echo \"Old db primary user password is not set. Please configure OLD_PASSWORD in migration.config file and rerun './scripts/timescaledb/migration.sh'\"\n+    exit 1\n+fi\n+\n+if [[ -z $NEW_DB_HOST ]]; then\n+    echo \"New host name is not set. Please configure NEW_DB_HOST in migration.config file and rerun './scripts/timescaledb/migration.sh'\"\n+    exit 1\n+fi\n+\n+if [[ -z $NEW_DB_NAME ]]; then\n+    echo \"New db name is not set. Please configure NEW_DB_NAME in migration.config file and rerun './scripts/timescaledb/migration.sh'\"\n+    exit 1\n+fi\n+\n+if [[ -z $NEW_DB_PORT ]]; then\n+    echo \"New db port is not set. Please configure NEW_DB_PORT in migration.config file and rerun './scripts/timescaledb/migration.sh'\"\n+    exit 1\n+fi\n+\n+if [[ -z $NEW_DB_USER ]]; then\n+    echo \"New db primary user name is not set. Please configure NEW_DB_USER in migration.config file and rerun './scripts/timescaledb/migration.sh'\"\n+    exit 1\n+fi\n+\n+if [[ -z $NEW_PASSWORD ]]; then\n+    echo \"New db primary user password is not set. Please configure NEW_PASSWORD in migration.config file and rerun './scripts/timescaledb/migration.sh'\"\n+    exit 1\n+fi\n+\n+if [[ -z $CHUNK_INTERVAL_TIME ]]; then\n+    echo \"New db chunk interval time is not set. Please configure CHUNK_INTERVAL_TIME in migration.config file and rerun './scripts/timescaledb/migration.sh'\"\n+    exit 1\n+fi\n+\n+if [[ -z $CHUNK_INTERVAL_ID ]]; then\n+    echo \"New db chunk interval id is not set. Please configure CHUNK_INTERVAL_ID in migration.config file and rerun './scripts/timescaledb/migration.sh'\"\n+    exit 1\n+fi\n+\n+start_time=\"$(date -u +%s)\"\n+# assumes 1. Valid populated old mirror node postgres db with appropriate user 2. New empty TimescaleDB db host with appropriate user\n+echo \"Migrating Mirror Node Data from Postgres($OLD_DB_HOST:$OLD_DB_PORT) to TimescaleDB($NEW_DB_HOST:$NEW_DB_PORT)...\"\n+\n+echo \"1. Backing up flyway table schema from Postgres($OLD_DB_HOST:$OLD_DB_PORT)...\"\n+PGPASSWORD=${OLD_PASSWORD} pg_dump -h $OLD_DB_HOST -p $OLD_DB_PORT -U $OLD_DB_USER --table public.flyway_schema_history -f mirror_node_${start_time}.bak mirror_node\n+\n+echo \"2. Restoring flyway_schema_history to TimescaleDB($NEW_DB_HOST:$NEW_DB_PORT)...\"\n+PGPASSWORD=${NEW_PASSWORD} psql -h $NEW_DB_HOST -d $NEW_DB_NAME -p $NEW_DB_PORT -U $NEW_DB_USER <mirror_node_${start_time}.bak\n+\n+echo \"3. Create v2 table schemas in TimescaleDB($NEW_DB_HOST:$NEW_DB_PORT)...\"\n+PGPASSWORD=${NEW_PASSWORD} psql -h $NEW_DB_HOST -d $NEW_DB_NAME -p $NEW_DB_PORT -U $NEW_DB_USER <migration/v2/V2.0.0__time_scale_init.sql\n+\n+echo \"4. Creating new hyper tables on TimescaleDB($NEW_DB_HOST:$NEW_DB_PORT)...\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9f28e9da19a1fd2f148dfc972866c1c95def42aa"}, "originalPosition": 80}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYzNTgzNzU2", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1364#pullrequestreview-563583756", "createdAt": "2021-01-07T15:32:54Z", "commit": {"oid": "2cebb0290c7aa90f89b8ede26c6550331fe2e284"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wN1QxNTozMjo1NVrOIPw96A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wN1QxNTozMjo1NVrOIPw96A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzQwMTgzMg==", "bodyText": "duplicate? the readiness test should have passed at line 23.\nsame on line 33", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1364#discussion_r553401832", "createdAt": "2021-01-07T15:32:55Z", "author": {"login": "xin-hedera"}, "path": "charts/hedera-mirror/templates/job-timescaledb-init.yaml", "diffHunk": "@@ -2,41 +2,68 @@\n apiVersion: batch/v1\n kind: Job\n metadata:\n-  labels:\n-    {{- include \"hedera-mirror.labels\" . | nindent 4 }}\n+  labels: {{- include \"hedera-mirror.labels\" . | nindent 4 }}\n   name: {{ include \"hedera-mirror.dbHost\" . }}-init-job\n   namespace: {{ include \"hedera-mirror.namespace\" . }}\n   annotations:\n     \"helm.sh/hook\": post-install\n-    \"helm.sh/hook-delete-policy\": hook-succeeded\n spec:\n-  backoffLimit: 4\n+  backoffLimit: 1\n   template:\n     spec:\n       containers:\n         - name: init-mirrornode-db\n-          image: timescaledev/timescaledb-ha:pg12-ts2.0.0-rc3\n+          image: \"{{ .Values.timescaledb.image.repository }}:{{ .Values.timescaledb.image.tag }}\"\n           command:\n             - sh\n             - -c\n             - |\n               set -e\n \n               while ! pg_isready -U postgres -h {{ include \"hedera-mirror.dbHost\" . }}-data; do sleep 1; done;\n-              psql --echo-queries -d \"${ACCESS_SVC_CONNSTR_POSTGRES}\" --set ON_ERROR_STOP=1 -f ${DB_INIT_FILE}\n+              psql --echo-queries -d \"${ACCESS_SVC_CONNSTR_POSTGRES}\" --set ON_ERROR_STOP=1 -f ${DB_USERS_FILE}\n+              echo 'Completed db initialization and user creation for mirror node'\n+              sleep 5s\n+\n+              while ! pg_isready -U postgres -h {{ include \"hedera-mirror.dbHost\" . }}-data; do sleep 1; done;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2cebb0290c7aa90f89b8ede26c6550331fe2e284"}, "originalPosition": 33}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYzMTE0Mzg1", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1364#pullrequestreview-563114385", "createdAt": "2021-01-06T23:57:15Z", "commit": {"oid": "e0c60a1b749ff7d50edfa5face8757462dbbb508"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNlQyMzo1NzoxNVrOIPZ8Jg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wN1QxNjo1NzozMFrOIP0N-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzAyNDU1MA==", "bodyText": "Instead of this, would prefer alter table if exists token_account add primary key (created_timestamp) to clearly mark this as the primary key and not just a unique field", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1364#discussion_r553024550", "createdAt": "2021-01-06T23:57:15Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-importer/src/main/resources/db/migration/v1/V1.33.0__drop_token_account_id.sql", "diffHunk": "@@ -0,0 +1,19 @@\n+-------------------\n+-- Drop token_account id, replacing id primary key with unique index on (created_timestamp)\n+-------------------\n+alter table token_account\n+    drop constraint token_account_pkey;\n+create unique index if not exists token_account__created_timestamp", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e0c60a1b749ff7d50edfa5face8757462dbbb508"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzAyNDYwOQ==", "bodyText": "if exists", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1364#discussion_r553024609", "createdAt": "2021-01-06T23:57:27Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-importer/src/main/resources/db/migration/v1/V1.33.0__drop_token_account_id.sql", "diffHunk": "@@ -0,0 +1,19 @@\n+-------------------\n+-- Drop token_account id, replacing id primary key with unique index on (created_timestamp)\n+-------------------\n+alter table token_account", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e0c60a1b749ff7d50edfa5face8757462dbbb508"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzAyNjUzOQ==", "bodyText": "We don't currently have a unique index with this 3 tuple. I only see one for token_id, account_id.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1364#discussion_r553026539", "createdAt": "2021-01-07T00:04:22Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-importer/src/main/resources/db/migration/v2/V2.0.2__time_scale_index_init.sql", "diffHunk": "@@ -76,15 +66,11 @@ create unique index if not exists entities_unq\n -- have to add id due to partitioning\n \n -- token\n-alter table if exists token\n-    add constraint token_timestamp primary key (created_timestamp);\n-create index if not exists token_id\n-    on token (token_id);\n+create unique index if not exists token__id_timestamp\n+    on token (token_id, created_timestamp);\n \n -- token_account\n-alter table if exists token_account\n-    add constraint token_account_timestamp primary key (created_timestamp);\n-create unique index if not exists token_account__token_account\n+create unique index if not exists token_account__token_account_timestamp\n     on token_account (token_id, account_id, created_timestamp);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e0c60a1b749ff7d50edfa5face8757462dbbb508"}, "originalPosition": 64}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzAyODU2NA==", "bodyText": "I understand we removed these primary keys because create hypertable creates similar indexes. Do the indexes created by TimescaleDB also mark them as primary key? If not, is it something we can do after using the constraint it creates?", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1364#discussion_r553028564", "createdAt": "2021-01-07T00:11:29Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-importer/src/main/resources/db/migration/v2/V2.0.2__time_scale_index_init.sql", "diffHunk": "@@ -76,15 +66,11 @@ create unique index if not exists entities_unq\n -- have to add id due to partitioning\n \n -- token\n-alter table if exists token\n-    add constraint token_timestamp primary key (created_timestamp);\n-create index if not exists token_id\n-    on token (token_id);\n+create unique index if not exists token__id_timestamp\n+    on token (token_id, created_timestamp);\n \n -- token_account\n-alter table if exists token_account", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e0c60a1b749ff7d50edfa5face8757462dbbb508"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzQ0NDUyOQ==", "bodyText": "a) this should be a primary key b) create_hypertable should already create this for us", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1364#discussion_r553444529", "createdAt": "2021-01-07T16:39:58Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-importer/src/main/resources/db/migration/v2/V2.0.2__time_scale_index_init.sql", "diffHunk": "@@ -105,7 +91,9 @@ create unique index if not exists topic_message__topic_num_realm_num_seqnum\n -- have to add consensus_timestamp due to partitioning\n \n -- transaction\n-create index transaction__transaction_id\n+create index if not exists transaction__transaction_id\n     on transaction (valid_start_ns, payer_account_id);\n-create index transaction__payer_account_id\n-    on transaction (payer_account_id);\n+create index if not exists transaction__payer_account_id_consensus_ns\n+    on transaction (payer_account_id, consensus_ns);\n+create index if not exists transaction_consensus_ns", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2cebb0290c7aa90f89b8ede26c6550331fe2e284"}, "originalPosition": 78}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzQ0NTk1NA==", "bodyText": "This index does not exist in v1. created_timestamp is already unique and should not be added to another field to make a composite key. There should just be an unique index on token_id", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1364#discussion_r553445954", "createdAt": "2021-01-07T16:42:22Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-importer/src/main/resources/db/migration/v2/V2.0.2__time_scale_index_init.sql", "diffHunk": "@@ -76,15 +66,11 @@ create unique index if not exists entities_unq\n -- have to add id due to partitioning\n \n -- token\n-alter table if exists token\n-    add constraint token_timestamp primary key (created_timestamp);\n-create index if not exists token_id\n-    on token (token_id);\n+create unique index if not exists token__id_timestamp\n+    on token (token_id, created_timestamp);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2cebb0290c7aa90f89b8ede26c6550331fe2e284"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzQ0NzU5Mw==", "bodyText": "Since we're dropping the constraint it might also transitively drop the index. Can we verify that the token_id still has a unique index after this?", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1364#discussion_r553447593", "createdAt": "2021-01-07T16:45:02Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-importer/src/main/resources/db/migration/v1/V1.33.0__drop_token_account_id.sql", "diffHunk": "@@ -0,0 +1,19 @@\n+-------------------\n+-- Drop token_account id, replacing id primary key with unique index on (created_timestamp)\n+-------------------\n+alter table token_account\n+    drop constraint token_account_pkey;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2cebb0290c7aa90f89b8ede26c6550331fe2e284"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzQ0ODY0NA==", "bodyText": "These need to be added to config docs.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1364#discussion_r553448644", "createdAt": "2021-01-07T16:46:44Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-importer/src/main/resources/application.yml", "diffHunk": "@@ -5,10 +5,13 @@ hedera:\n         host: 127.0.0.1\n         loadBalance: true\n         name: mirror_node\n+        owner: mirror_node", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2cebb0290c7aa90f89b8ede26c6550331fe2e284"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzQ1MDg2Ng==", "bodyText": "We don't need to project every file in the secret. Just mount the entire secret as you were doing. This way is brittle and verbose.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1364#discussion_r553450866", "createdAt": "2021-01-07T16:50:31Z", "author": {"login": "steven-sheehy"}, "path": "charts/hedera-mirror/templates/job-timescaledb-init.yaml", "diffHunk": "@@ -2,41 +2,68 @@\n apiVersion: batch/v1\n kind: Job\n metadata:\n-  labels:\n-    {{- include \"hedera-mirror.labels\" . | nindent 4 }}\n+  labels: {{- include \"hedera-mirror.labels\" . | nindent 4 }}\n   name: {{ include \"hedera-mirror.dbHost\" . }}-init-job\n   namespace: {{ include \"hedera-mirror.namespace\" . }}\n   annotations:\n     \"helm.sh/hook\": post-install\n-    \"helm.sh/hook-delete-policy\": hook-succeeded\n spec:\n-  backoffLimit: 4\n+  backoffLimit: 1\n   template:\n     spec:\n       containers:\n         - name: init-mirrornode-db\n-          image: timescaledev/timescaledb-ha:pg12-ts2.0.0-rc3\n+          image: \"{{ .Values.timescaledb.image.repository }}:{{ .Values.timescaledb.image.tag }}\"\n           command:\n             - sh\n             - -c\n             - |\n               set -e\n \n               while ! pg_isready -U postgres -h {{ include \"hedera-mirror.dbHost\" . }}-data; do sleep 1; done;\n-              psql --echo-queries -d \"${ACCESS_SVC_CONNSTR_POSTGRES}\" --set ON_ERROR_STOP=1 -f ${DB_INIT_FILE}\n+              psql --echo-queries -d \"${ACCESS_SVC_CONNSTR_POSTGRES}\" --set ON_ERROR_STOP=1 -f ${DB_USERS_FILE}\n+              echo 'Completed db initialization and user creation for mirror node'\n+              sleep 5s\n+\n+              while ! pg_isready -U postgres -h {{ include \"hedera-mirror.dbHost\" . }}-data; do sleep 1; done;\n+              psql --echo-queries -d \"${ACCESS_SVC_CONNSTR_MIRRORNODE}\" --set ON_ERROR_STOP=1 -f ${DB_SCHEMA_FILE}\n+              echo 'Completed db schema initialization'\n+              sleep 5s\n+\n+              while ! pg_isready -U postgres -h {{ include \"hedera-mirror.dbHost\" . }}-data; do sleep 1; done;\n+              psql --echo-queries -d \"${ACCESS_SVC_CONNSTR_POSTGRES}\" --set ON_ERROR_STOP=1 -f ${DB_PATH_FILE}\n+              echo 'Completed db search path setting'\n+\n+              echo 'Completed db initialization for mirror node'\n           env:\n             - name: ACCESS_SVC_CONNSTR_POSTGRES\n               value: host={{ include \"hedera-mirror.dbHost\" . }} user=postgres connect_timeout=3 sslmode=disable password={{ .Values.timescaledb.credentials.accessNode.superuser }}\n-            - name: DB_INIT_FILE\n-              value: /usr/etc/db-init/init.sql\n+            - name: ACCESS_SVC_CONNSTR_MIRRORNODE\n+              value: host={{ include \"hedera-mirror.dbHost\" . }} dbname={{ .Values.importer.config.hedera.mirror.importer.db.name }} user={{ .Values.importer.config.hedera.mirror.importer.db.owner }} connect_timeout=3 sslmode=disable password={{ .Values.importer.config.hedera.mirror.importer.db.ownerPassword }}\n+            - name: DB_USERS_FILE\n+              value: /usr/etc/db-init/users_v2.sql\n+            - name: DB_SCHEMA_FILE\n+              value: /usr/etc/db-init/schema_v2.sql\n+            - name: DB_PATH_FILE\n+              value: /usr/etc/db-init/path_v2.sql\n           volumeMounts:\n-            - name: timescale-db-init-volume\n+            - name: timescaledb-init-volume\n               mountPath: /usr/etc/db-init\n       volumes:\n-        - name: timescale-db-init-volume\n-          secret:\n-            defaultMode: 420\n-            secretName: {{ include \"hedera-mirror.dbHost\" . }}-init\n-      restartPolicy: OnFailure\n-  ttlSecondsAfterFinished: 600\n-  {{- end -}}\n+        - name: timescaledb-init-volume\n+          projected:\n+            sources:\n+              - secret:\n+                  name: {{ include \"hedera-mirror.dbHost\" . }}-init\n+                  items:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2cebb0290c7aa90f89b8ede26c6550331fe2e284"}, "originalPosition": 73}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzQ1MzQxOA==", "bodyText": "These don't provide any value as env variables since they're only invoked once, they just make it more verbose. If anything, a initDir=/usr/etc/db-init variable inline in the script would help to keep it more DRY and readable.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1364#discussion_r553453418", "createdAt": "2021-01-07T16:54:47Z", "author": {"login": "steven-sheehy"}, "path": "charts/hedera-mirror/templates/job-timescaledb-init.yaml", "diffHunk": "@@ -2,41 +2,68 @@\n apiVersion: batch/v1\n kind: Job\n metadata:\n-  labels:\n-    {{- include \"hedera-mirror.labels\" . | nindent 4 }}\n+  labels: {{- include \"hedera-mirror.labels\" . | nindent 4 }}\n   name: {{ include \"hedera-mirror.dbHost\" . }}-init-job\n   namespace: {{ include \"hedera-mirror.namespace\" . }}\n   annotations:\n     \"helm.sh/hook\": post-install\n-    \"helm.sh/hook-delete-policy\": hook-succeeded\n spec:\n-  backoffLimit: 4\n+  backoffLimit: 1\n   template:\n     spec:\n       containers:\n         - name: init-mirrornode-db\n-          image: timescaledev/timescaledb-ha:pg12-ts2.0.0-rc3\n+          image: \"{{ .Values.timescaledb.image.repository }}:{{ .Values.timescaledb.image.tag }}\"\n           command:\n             - sh\n             - -c\n             - |\n               set -e\n \n               while ! pg_isready -U postgres -h {{ include \"hedera-mirror.dbHost\" . }}-data; do sleep 1; done;\n-              psql --echo-queries -d \"${ACCESS_SVC_CONNSTR_POSTGRES}\" --set ON_ERROR_STOP=1 -f ${DB_INIT_FILE}\n+              psql --echo-queries -d \"${ACCESS_SVC_CONNSTR_POSTGRES}\" --set ON_ERROR_STOP=1 -f ${DB_USERS_FILE}\n+              echo 'Completed db initialization and user creation for mirror node'\n+              sleep 5s\n+\n+              while ! pg_isready -U postgres -h {{ include \"hedera-mirror.dbHost\" . }}-data; do sleep 1; done;\n+              psql --echo-queries -d \"${ACCESS_SVC_CONNSTR_MIRRORNODE}\" --set ON_ERROR_STOP=1 -f ${DB_SCHEMA_FILE}\n+              echo 'Completed db schema initialization'\n+              sleep 5s\n+\n+              while ! pg_isready -U postgres -h {{ include \"hedera-mirror.dbHost\" . }}-data; do sleep 1; done;\n+              psql --echo-queries -d \"${ACCESS_SVC_CONNSTR_POSTGRES}\" --set ON_ERROR_STOP=1 -f ${DB_PATH_FILE}\n+              echo 'Completed db search path setting'\n+\n+              echo 'Completed db initialization for mirror node'\n           env:\n             - name: ACCESS_SVC_CONNSTR_POSTGRES\n               value: host={{ include \"hedera-mirror.dbHost\" . }} user=postgres connect_timeout=3 sslmode=disable password={{ .Values.timescaledb.credentials.accessNode.superuser }}\n-            - name: DB_INIT_FILE\n-              value: /usr/etc/db-init/init.sql\n+            - name: ACCESS_SVC_CONNSTR_MIRRORNODE\n+              value: host={{ include \"hedera-mirror.dbHost\" . }} dbname={{ .Values.importer.config.hedera.mirror.importer.db.name }} user={{ .Values.importer.config.hedera.mirror.importer.db.owner }} connect_timeout=3 sslmode=disable password={{ .Values.importer.config.hedera.mirror.importer.db.ownerPassword }}\n+            - name: DB_USERS_FILE", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2cebb0290c7aa90f89b8ede26c6550331fe2e284"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzQ1NTA5Ng==", "bodyText": "Why are we removing this? Don't we want to remove the job after success?", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1364#discussion_r553455096", "createdAt": "2021-01-07T16:57:30Z", "author": {"login": "steven-sheehy"}, "path": "charts/hedera-mirror/templates/job-timescaledb-init.yaml", "diffHunk": "@@ -2,41 +2,68 @@\n apiVersion: batch/v1\n kind: Job\n metadata:\n-  labels:\n-    {{- include \"hedera-mirror.labels\" . | nindent 4 }}\n+  labels: {{- include \"hedera-mirror.labels\" . | nindent 4 }}\n   name: {{ include \"hedera-mirror.dbHost\" . }}-init-job\n   namespace: {{ include \"hedera-mirror.namespace\" . }}\n   annotations:\n     \"helm.sh/hook\": post-install\n-    \"helm.sh/hook-delete-policy\": hook-succeeded", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2cebb0290c7aa90f89b8ede26c6550331fe2e284"}, "originalPosition": 11}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYzODgzMzgx", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1364#pullrequestreview-563883381", "createdAt": "2021-01-07T22:44:12Z", "commit": {"oid": "afc7f1fe8e465b2e66893af83a68fd31a08951a8"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wN1QyMjo0NDoxMlrOIP_SZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wN1QyMjo1ODo0OVrOIP_orw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzYzNjQ1Mw==", "bodyText": "I think it's a mistake that file_data.consensus_timestamp is not a primary key in v1 and v2. Can do in follow up if you like.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1364#discussion_r553636453", "createdAt": "2021-01-07T22:44:12Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-importer/src/main/resources/db/migration/v2/V2.0.2__time_scale_index_init.sql", "diffHunk": "@@ -40,31 +42,29 @@ create index if not exists crypto_transfer__entity_id_consensus_timestamp\n     where entity_id != 98;\n -- id corresponding to treasury address 0.0.98\n \n--- file_data\n-create index if not exists file_data__consensus\n-    on file_data (consensus_timestamp desc);\n+-- file_data, desc index on consensus_timestamp already created by hypertable", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "afc7f1fe8e465b2e66893af83a68fd31a08951a8"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzYzNjUyNQ==", "bodyText": "I think it's a mistake that live_hash.consensus_timestamp is not a primary key in v1 and v2. Can do in follow up if you like.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1364#discussion_r553636525", "createdAt": "2021-01-07T22:44:25Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-importer/src/main/resources/db/migration/v2/V2.0.2__time_scale_index_init.sql", "diffHunk": "@@ -40,31 +42,29 @@ create index if not exists crypto_transfer__entity_id_consensus_timestamp\n     where entity_id != 98;\n -- id corresponding to treasury address 0.0.98\n \n--- file_data\n-create index if not exists file_data__consensus\n-    on file_data (consensus_timestamp desc);\n+-- file_data, desc index on consensus_timestamp already created by hypertable\n \n--- live_hash\n-create index if not exists livehashes__consensus\n-    on live_hash (consensus_timestamp desc);\n+-- live_hash, desc index on consensus_timestamp already created by hypertable", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "afc7f1fe8e465b2e66893af83a68fd31a08951a8"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzY0MDcwMA==", "bodyText": "In PostgreSQL, this would greatly increase the size of the index unnecessarily and cause memory churn. I'm guessing TimescaleDB is more efficient and is smart enough to not duplicate the index information. If not, we should consider making this a non-unique index in the future and rely on the main nodes for data constraints.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1364#discussion_r553640700", "createdAt": "2021-01-07T22:55:00Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-importer/src/main/resources/db/migration/v2/V2.0.2__time_scale_index_init.sql", "diffHunk": "@@ -76,15 +66,11 @@ create unique index if not exists entities_unq\n -- have to add id due to partitioning\n \n -- token\n-alter table if exists token\n-    add constraint token_timestamp primary key (created_timestamp);\n-create index if not exists token_id\n-    on token (token_id);\n+create unique index if not exists token__id_timestamp\n+    on token (token_id, created_timestamp);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzQ0NTk1NA=="}, "originalCommit": {"oid": "2cebb0290c7aa90f89b8ede26c6550331fe2e284"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzY0MjE1OQ==", "bodyText": "In Helm templates, these variables are not scoped to yaml blocks but to the current context. Thus, you can stay DRY and just define all these once at the top of the file.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1364#discussion_r553642159", "createdAt": "2021-01-07T22:58:49Z", "author": {"login": "steven-sheehy"}, "path": "charts/hedera-mirror/templates/secret-timescaledb.yaml", "diffHunk": "@@ -4,27 +4,87 @@ kind: Secret\n metadata:\n   labels:\n     {{- include \"hedera-mirror.labels\" . | nindent 4 }}\n-  name: {{ printf \"%s-timescaledb-init\" .Release.Name  }}\n+  name: {{ include \"hedera-mirror.dbHost\" . }}-init\n   namespace: {{ include \"hedera-mirror.namespace\" . }}\n type: Opaque\n stringData:\n-  init.sql: |-\n+  users_v2.sql: |-\n     {{- $dbName := .Values.importer.config.hedera.mirror.importer.db.name }}\n+    {{- $dbOwner := .Values.importer.config.hedera.mirror.importer.db.owner }}\n+    {{- $dbOwnerPassword := .Values.importer.config.hedera.mirror.importer.db.ownerPassword }}\n     {{- $importerUser := .Values.importer.config.hedera.mirror.importer.db.username }}\n     {{- $importerPassword := .Values.importer.config.hedera.mirror.importer.db.password }}\n     {{- $grpcUsername := .Values.grpc.config.hedera.mirror.grpc.db.username }}\n     {{- $grpcPassword := .Values.grpc.config.hedera.mirror.grpc.db.password }}\n     {{- $restUser := .Values.global.rest.username }}\n     {{- $restPassword := .Values.global.rest.password }}\n-    create database {{ $dbName }};\n+\n+    -- create owner user\n+    create user {{ $dbOwner }} with login password '{{ $dbOwnerPassword }}';\n+\n+    -- create primary user and db\n+    create database {{ $dbName }} with owner {{ $dbOwner }};\n+\n+    -- create roles\n+    create role readonly;\n+    create role readwrite in role readonly;\n+\n+    -- create users\n+    create user {{ $grpcUsername }} with login password '{{ $grpcPassword }}' in role readonly;\n+    create user {{ $restUser }} with login password '{{ $restPassword }}' in role readonly;\n+    create user {{ $importerUser }} with login password '{{ $importerPassword }}' in role readwrite;\n+\n+    -- drop timescaledb extension for future install to ensure availability in custom schema\n+    drop extension if exists timescaledb cascade;\n+  schema_v2.sql: |-\n+    {{- $dbName := .Values.importer.config.hedera.mirror.importer.db.name }}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "afc7f1fe8e465b2e66893af83a68fd31a08951a8"}, "originalPosition": 40}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f6c688b130313141fca2f4e727e192d7c825fd3e", "author": {"user": {"login": "Nana-EC", "name": null}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/f6c688b130313141fca2f4e727e192d7c825fd3e", "committedDate": "2021-01-08T16:09:30Z", "message": "Add psql to timescaledb migration scripts\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2a52fc729ef5b57ef02d2b3b8abd3cc49e453e4d", "author": {"user": {"login": "Nana-EC", "name": null}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/2a52fc729ef5b57ef02d2b3b8abd3cc49e453e4d", "committedDate": "2021-01-08T16:09:30Z", "message": "Improved comments on script\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1cdddc072c8e19ea4444b445903fa832a8135d39", "author": {"user": {"login": "Nana-EC", "name": null}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/1cdddc072c8e19ea4444b445903fa832a8135d39", "committedDate": "2021-01-08T16:09:30Z", "message": "Simplify logic and reuse flyway migration script\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "858fe90556fc4ed7cc5a4095dfd64d0bfd81ecee", "author": {"user": {"login": "Nana-EC", "name": null}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/858fe90556fc4ed7cc5a4095dfd64d0bfd81ecee", "committedDate": "2021-01-08T16:09:31Z", "message": "Add documentation\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "06e6003123ed11f338e1d28afb44a08e68cf48d7", "author": {"user": {"login": "Nana-EC", "name": null}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/06e6003123ed11f338e1d28afb44a08e68cf48d7", "committedDate": "2021-01-08T16:09:31Z", "message": "Updated for super and owner users\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3907bb503d645d07c69e180186557b345433bc00", "author": {"user": {"login": "Nana-EC", "name": null}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/3907bb503d645d07c69e180186557b345433bc00", "committedDate": "2021-01-08T16:09:31Z", "message": "CLeaned up docs\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b04b0d27963f58d03ad0cf44b3a59b7e5c1a3152", "author": {"user": {"login": "Nana-EC", "name": null}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/b04b0d27963f58d03ad0cf44b3a59b7e5c1a3152", "committedDate": "2021-01-08T16:09:31Z", "message": "Cleaned up docs\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "73e5c562a7732910bbaeb436d473801fd05daf34", "author": {"user": {"login": "Nana-EC", "name": null}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/73e5c562a7732910bbaeb436d473801fd05daf34", "committedDate": "2021-01-08T16:09:31Z", "message": "Add logic to reuse V2.0.1__hyper_tables.sql\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bb0185b21f744fa3788043127024bc618ed04185", "author": {"user": {"login": "Nana-EC", "name": null}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/bb0185b21f744fa3788043127024bc618ed04185", "committedDate": "2021-01-08T16:09:31Z", "message": "Improved sed process\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b48698a5dc69158b3fa7bc50882808dfad2644ad", "author": {"user": {"login": "Nana-EC", "name": null}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/b48698a5dc69158b3fa7bc50882808dfad2644ad", "committedDate": "2021-01-08T16:09:31Z", "message": "Removed duplicate indexes and updated chart dependencies\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "aacfb30059c4a46aa40c9c01a590c76f4708e11b", "author": {"user": {"login": "Nana-EC", "name": null}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/aacfb30059c4a46aa40c9c01a590c76f4708e11b", "committedDate": "2021-01-08T16:09:31Z", "message": "Utilize GA v2.0.0 of timescaledb\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a5d272367365f76eb3cf9b08f1c64cfd4bdb0d09", "author": {"user": {"login": "Nana-EC", "name": null}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/a5d272367365f76eb3cf9b08f1c64cfd4bdb0d09", "committedDate": "2021-01-08T16:09:31Z", "message": "Addressed feedback on indexes\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f1afacfc31d7a4a0405d021f049b1e8c78372b5a", "author": {"user": {"login": "Nana-EC", "name": null}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/f1afacfc31d7a4a0405d021f049b1e8c78372b5a", "committedDate": "2021-01-08T16:09:31Z", "message": "Fix helm repo and add templated reference for image tag\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c243aab7998f5cf1b77d33a4c0c160525f968f6c", "author": {"user": {"login": "Nana-EC", "name": null}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/c243aab7998f5cf1b77d33a4c0c160525f968f6c", "committedDate": "2021-01-08T16:09:31Z", "message": "Remove id column and add dbOwner support in v1\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5c3383dd5f4749b4650d3593b5e4a098fd8c2ce8", "author": {"user": {"login": "Nana-EC", "name": null}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/5c3383dd5f4749b4650d3593b5e4a098fd8c2ce8", "committedDate": "2021-01-08T16:09:31Z", "message": "Updated timescale db init job with new schema\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6ecd5311d4e7ca8623be4506fffe6873082f408b", "author": {"user": {"login": "Nana-EC", "name": null}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/6ecd5311d4e7ca8623be4506fffe6873082f408b", "committedDate": "2021-01-08T16:09:31Z", "message": "Addressed documentation feedback\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f47e5a9ccb5ae76688ee85aa9960d2a6ed7382de", "author": {"user": {"login": "Nana-EC", "name": null}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/f47e5a9ccb5ae76688ee85aa9960d2a6ed7382de", "committedDate": "2021-01-08T16:09:31Z", "message": "Remove sequence update of token_account from alterSchema.sql\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3ed4fe340136021236dce1181758b15107a66165", "author": {"user": {"login": "Nana-EC", "name": null}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/3ed4fe340136021236dce1181758b15107a66165", "committedDate": "2021-01-08T16:12:20Z", "message": "Addressed index feedback and update config docs\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "48df1413edda3696b8b4934f3d58dee85827e1f3", "author": {"user": {"login": "Nana-EC", "name": null}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/48df1413edda3696b8b4934f3d58dee85827e1f3", "committedDate": "2021-01-08T16:12:20Z", "message": "Updated index name\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "714fb97637f3a3a82f7cd4019f4662f31a453789", "author": {"user": {"login": "Nana-EC", "name": null}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/714fb97637f3a3a82f7cd4019f4662f31a453789", "committedDate": "2021-01-08T16:12:20Z", "message": "Streamlined variables in secret and added live_hash and file_data primary keys\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c0b32de90be8cf4f724abcb250ac386bf21cb534", "author": {"user": {"login": "Nana-EC", "name": null}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/c0b32de90be8cf4f724abcb250ac386bf21cb534", "committedDate": "2021-01-08T16:12:20Z", "message": "Add missing primary keys on live_hash and file_data in v1 schema\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2af65594d6539bcd3b37f09a7284fa2acee8aa55", "author": {"user": {"login": "Nana-EC", "name": null}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/2af65594d6539bcd3b37f09a7284fa2acee8aa55", "committedDate": "2021-01-08T16:12:20Z", "message": "Drop non-unique duplicate indexes\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "579f86e569f6528499e1ea63573778fe9ae98f49", "author": {"user": {"login": "Nana-EC", "name": null}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/579f86e569f6528499e1ea63573778fe9ae98f49", "committedDate": "2021-01-08T15:37:29Z", "message": "Add missing primary keys on live_hash and file_data in v1 schema\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>"}, "afterCommit": {"oid": "2af65594d6539bcd3b37f09a7284fa2acee8aa55", "author": {"user": {"login": "Nana-EC", "name": null}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/2af65594d6539bcd3b37f09a7284fa2acee8aa55", "committedDate": "2021-01-08T16:12:20Z", "message": "Drop non-unique duplicate indexes\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTY0Mzg4MzMw", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1364#pullrequestreview-564388330", "createdAt": "2021-01-08T16:15:57Z", "commit": {"oid": "2af65594d6539bcd3b37f09a7284fa2acee8aa55"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTY0NDI4NDM5", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1364#pullrequestreview-564428439", "createdAt": "2021-01-08T17:01:42Z", "commit": {"oid": "2af65594d6539bcd3b37f09a7284fa2acee8aa55"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTY0NDI5MTUz", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1364#pullrequestreview-564429153", "createdAt": "2021-01-08T17:02:44Z", "commit": {"oid": "2af65594d6539bcd3b37f09a7284fa2acee8aa55"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3445, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}