{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM0NzcyNTgx", "number": 1336, "title": "Another attempt to fix monitor publishing", "bodyText": "Detailed description:\n\nFix NullPointerException halting the publish flow\nChange to throw exceptions in PublishMetrics and catch and ignore those errors after sequential merge of parallel flux\n\nWhich issue(s) this PR fixes:\nSpecial notes for your reviewer:\nChecklist\n\n Documentation added\n Tests updated", "createdAt": "2020-12-08T22:38:59Z", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1336", "merged": true, "mergeCommit": {"oid": "396697a33f0e96a9472d324b098cc31c96592522"}, "closed": true, "closedAt": "2020-12-09T16:16:07Z", "author": {"login": "steven-sheehy"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdkR8H9AH2gAyNTM0NzcyNTgxOjE1ZDI3MjRlN2Q4Mjc0YmM0MzM4ZTYyZDViNWY4NGQxNWFmMjA4ZDg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdkgcmzgFqTU0ODMwMDQ1Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "15d2724e7d8274bc4338e62d5b5f84d15af208d8", "author": {"user": {"login": "steven-sheehy", "name": "Steven Sheehy"}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/15d2724e7d8274bc4338e62d5b5f84d15af208d8", "committedDate": "2020-12-08T22:32:34Z", "message": "Another attempt to fix monitor publishing\n\nSigned-off-by: Steven Sheehy <steven.sheehy@hedera.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ3NzE0Nzkz", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1336#pullrequestreview-547714793", "createdAt": "2020-12-08T23:18:11Z", "commit": {"oid": "15d2724e7d8274bc4338e62d5b5f84d15af208d8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQyMzoxODoxMVrOIB6ufA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQyMzoxODoxMVrOIB6ufA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODg4MTY2MA==", "bodyText": "q: does the description need to be updated with how you're using sequential here?\nWhen it comes to the overhead/management of the simple but involving steps it's good to note the aim/intent of the reactive flow we intend so we prevent regressions.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1336#discussion_r538881660", "createdAt": "2020-12-08T23:18:11Z", "author": {"login": "Nana-EC"}, "path": "hedera-mirror-monitor/src/main/java/com/hedera/mirror/monitor/config/MonitorConfiguration.java", "diffHunk": "@@ -63,14 +63,14 @@\n     Disposable publishSubscribe() {\n         return Flux.<PublishRequest>generate(sink -> sink.next(transactionGenerator.next()))\n                 .retry()\n-                .filter(Objects::nonNull)\n-                .doFinally(s -> log.warn(\"Stopped after {} signal\", s))\n                 .subscribeOn(Schedulers.single())\n                 .parallel(publishProperties.getConnections())\n                 .runOn(Schedulers.newParallel(\"publisher\", publishProperties.getConnections()))\n                 .map(transactionPublisher::publish)\n-                .filter(Objects::nonNull)\n-                .doOnError(t -> log.error(\"Error during publish/subscribe flow: \", t))\n+                .sequential()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "15d2724e7d8274bc4338e62d5b5f84d15af208d8"}, "originalPosition": 28}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ3NzMyNjkz", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1336#pullrequestreview-547732693", "createdAt": "2020-12-08T23:58:33Z", "commit": {"oid": "15d2724e7d8274bc4338e62d5b5f84d15af208d8"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ3NzM2NjQx", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1336#pullrequestreview-547736641", "createdAt": "2020-12-09T00:08:05Z", "commit": {"oid": "15d2724e7d8274bc4338e62d5b5f84d15af208d8"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQwMDowODowNVrOIB8FhA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQwMDowODowNVrOIB8FhA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODkwMzk0MA==", "bodyText": "from IDEA hint: should remove {} in the message string\nthe second onErrorContinue will swallow all Throwable other than PublishException which is taken care of in the first onErrorContinue. Is it intended? I saw in PublishMetrics.java, for LocalValidationException, the error message \"Local error. Halting thread\" hints something different.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1336#discussion_r538903940", "createdAt": "2020-12-09T00:08:05Z", "author": {"login": "xin-hedera"}, "path": "hedera-mirror-monitor/src/main/java/com/hedera/mirror/monitor/config/MonitorConfiguration.java", "diffHunk": "@@ -63,14 +63,14 @@\n     Disposable publishSubscribe() {\n         return Flux.<PublishRequest>generate(sink -> sink.next(transactionGenerator.next()))\n                 .retry()\n-                .filter(Objects::nonNull)\n-                .doFinally(s -> log.warn(\"Stopped after {} signal\", s))\n                 .subscribeOn(Schedulers.single())\n                 .parallel(publishProperties.getConnections())\n                 .runOn(Schedulers.newParallel(\"publisher\", publishProperties.getConnections()))\n                 .map(transactionPublisher::publish)\n-                .filter(Objects::nonNull)\n-                .doOnError(t -> log.error(\"Error during publish/subscribe flow: \", t))\n+                .sequential()\n+                .onErrorContinue(PublishException.class, (t, r) -> {})\n+                .onErrorContinue((t, r) -> log.error(\"Unknown error during publish/subscribe flow: {}\", t))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "15d2724e7d8274bc4338e62d5b5f84d15af208d8"}, "originalPosition": 30}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0b2b0fb51dfb78fe9295b0ca1b1c738cb817c766", "author": {"user": {"login": "steven-sheehy", "name": "Steven Sheehy"}}, "url": "https://github.com/hashgraph/hedera-mirror-node/commit/0b2b0fb51dfb78fe9295b0ca1b1c738cb817c766", "committedDate": "2020-12-09T05:46:24Z", "message": "Address review feedback\n\nSigned-off-by: Steven Sheehy <steven.sheehy@hedera.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ4MjgwMzA5", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1336#pullrequestreview-548280309", "createdAt": "2020-12-09T15:08:39Z", "commit": {"oid": "0b2b0fb51dfb78fe9295b0ca1b1c738cb817c766"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ4MzAwNDU3", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1336#pullrequestreview-548300457", "createdAt": "2020-12-09T15:26:43Z", "commit": {"oid": "0b2b0fb51dfb78fe9295b0ca1b1c738cb817c766"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3403, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}