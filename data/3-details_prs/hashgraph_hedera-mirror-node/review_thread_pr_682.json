{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAyNzMyNjY0", "number": 682, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxNjo1NDoxNlrODxTrYQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxNjo1NDoxNlrODxTrYQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzMDI5MjE3OnYy", "diffSide": "RIGHT", "path": "hedera-mirror-importer/src/main/java/com/hedera/mirror/importer/parser/record/RecordItemParser.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxNjo1NDoxNlrOGEtBew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxNzozNzowM1rOGEuceg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzU4NTE0Nw==", "bodyText": "You should probably still have this in the if (transactionBody.hasAutoRenewAccount()) {} so that the lookup is only done when it matters", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/682#discussion_r407585147", "createdAt": "2020-04-13T16:54:16Z", "author": {"login": "Nana-EC"}, "path": "hedera-mirror-importer/src/main/java/com/hedera/mirror/importer/parser/record/RecordItemParser.java", "diffHunk": "@@ -455,9 +455,10 @@ private void consensusUpdateTopicUpdateEntity(\n                 entity.setExpiryTimeNs(Utility.timestampInNanosMax(expirationTime));\n             }\n \n-            if (transactionBody.hasAutoRenewAccount()) {\n-                // Looks up (in the big cache) or creates new id.\n-                entity.setAutoRenewAccountId(lookupOrCreateId(EntityId.of(transactionBody.getAutoRenewAccount())));\n+            // Stream can contain transactions with autoRenewAccountId explicitly set to '0.0.0'\n+            Long autoRenewAccountId = lookupOrCreateId(EntityId.of(transactionBody.getAutoRenewAccount()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc4fecc6a732969574e5e0f2e92114ba31083642"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzYwODQ0Mg==", "bodyText": "Whether transactionBody.getAutoRenewAccount() is the default account or explicitly set to 0.0.0 will be caught by EntityId.of() and turned into null. Then lookupOrCreateId(null) will return null and not do a database call. I'm trying to avoid extra branching logic if it's not necessary.", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/682#discussion_r407608442", "createdAt": "2020-04-13T17:37:03Z", "author": {"login": "steven-sheehy"}, "path": "hedera-mirror-importer/src/main/java/com/hedera/mirror/importer/parser/record/RecordItemParser.java", "diffHunk": "@@ -455,9 +455,10 @@ private void consensusUpdateTopicUpdateEntity(\n                 entity.setExpiryTimeNs(Utility.timestampInNanosMax(expirationTime));\n             }\n \n-            if (transactionBody.hasAutoRenewAccount()) {\n-                // Looks up (in the big cache) or creates new id.\n-                entity.setAutoRenewAccountId(lookupOrCreateId(EntityId.of(transactionBody.getAutoRenewAccount())));\n+            // Stream can contain transactions with autoRenewAccountId explicitly set to '0.0.0'\n+            Long autoRenewAccountId = lookupOrCreateId(EntityId.of(transactionBody.getAutoRenewAccount()));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzU4NTE0Nw=="}, "originalCommit": {"oid": "cc4fecc6a732969574e5e0f2e92114ba31083642"}, "originalPosition": 8}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 970, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}